

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Jul 23 00:43:48 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	16F18855
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    31                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    36                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    37                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    38                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text16,local,class=CODE,merge=1,delta=2,group=3
    40                           	psect	text17,local,class=CODE,merge=1,delta=2,group=3
    41                           	psect	text18,local,class=CODE,merge=1,delta=2,group=3
    42                           	psect	text19,local,class=CODE,merge=1,delta=2,group=3
    43                           	psect	text20,local,class=CODE,merge=1,delta=2,group=3
    44                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    54                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	text32,local,class=CODE,merge=1,delta=2,group=1
    56                           	psect	text33,local,class=CODE,merge=1,delta=2,group=1
    57                           	psect	text34,local,class=CODE,merge=1,delta=2,group=3
    58                           	psect	text35,local,class=CODE,merge=1,delta=2,group=3
    59                           	psect	text36,local,class=CODE,merge=1,delta=2,group=3
    60                           	psect	text37,local,class=CODE,merge=1,delta=2
    61                           	psect	text38,local,class=CODE,merge=1,delta=2
    62                           	psect	text39,local,class=CODE,merge=1,delta=2,group=3
    63                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    64                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text42,local,class=CODE,merge=1,delta=2,group=3
    66                           	psect	text43,local,class=CODE,merge=1,delta=2,group=3
    67                           	psect	text44,local,class=CODE,merge=1,delta=2,group=3
    68                           	psect	text45,local,class=CODE,merge=1,delta=2,group=2
    69                           	psect	text46,local,class=CODE,merge=1,delta=2
    70                           	psect	text47,local,class=CODE,merge=1,delta=2
    71                           	psect	text48,local,class=CODE,merge=1,delta=2
    72                           	psect	text49,local,class=CODE,merge=1,delta=2
    73                           	psect	text50,local,class=CODE,merge=1,delta=2
    74                           	psect	text51,local,class=CODE,merge=1,delta=2
    75                           	psect	text52,local,class=CODE,merge=1,delta=2
    76                           	psect	text53,local,class=CODE,merge=1,delta=2
    77                           	psect	text54,local,class=CODE,merge=1,delta=2
    78                           	psect	text55,local,class=CODE,merge=1,delta=2
    79                           	psect	text56,local,class=CODE,merge=1,delta=2
    80                           	psect	text57,local,class=CODE,merge=1,delta=2
    81                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    82                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    83                           	dabs	1,0x7E,2
    84  0000                     
    85                           ; Version 2.40
    86                           ; Generated 02/12/2021 GMT
    87                           ; 
    88                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    89                           ; All rights reserved.
    90                           ; 
    91                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    92                           ; 
    93                           ; Redistribution and use in source and binary forms, with or without modification, are
    94                           ; permitted provided that the following conditions are met:
    95                           ; 
    96                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    97                           ;        conditions and the following disclaimer.
    98                           ; 
    99                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   100                           ;        of conditions and the following disclaimer in the documentation and/or other
   101                           ;        materials provided with the distribution. Publication is not required when
   102                           ;        this file is used in an embedded application.
   103                           ; 
   104                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   105                           ;        software without specific prior written permission.
   106                           ; 
   107                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   108                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   109                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   110                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   111                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   112                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   113                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   114                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   115                           ; 
   116                           ; 
   117                           ; Code-generator required, PIC16F18855 Definitions
   118                           ; 
   119                           ; SFR Addresses
   120  0000                     	;# 
   121  0001                     	;# 
   122  0002                     	;# 
   123  0003                     	;# 
   124  0004                     	;# 
   125  0005                     	;# 
   126  0006                     	;# 
   127  0007                     	;# 
   128  0008                     	;# 
   129  0009                     	;# 
   130  000A                     	;# 
   131  000B                     	;# 
   132  000C                     	;# 
   133  000D                     	;# 
   134  000E                     	;# 
   135  0010                     	;# 
   136  0011                     	;# 
   137  0012                     	;# 
   138  0013                     	;# 
   139  0016                     	;# 
   140  0017                     	;# 
   141  0018                     	;# 
   142  001C                     	;# 
   143  001C                     	;# 
   144  001D                     	;# 
   145  001D                     	;# 
   146  001E                     	;# 
   147  001F                     	;# 
   148  008C                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  008E                     	;# 
   153  008F                     	;# 
   154  0090                     	;# 
   155  0090                     	;# 
   156  0091                     	;# 
   157  0093                     	;# 
   158  0094                     	;# 
   159  0095                     	;# 
   160  0096                     	;# 
   161  0097                     	;# 
   162  0098                     	;# 
   163  0099                     	;# 
   164  009A                     	;# 
   165  009B                     	;# 
   166  009C                     	;# 
   167  009D                     	;# 
   168  009E                     	;# 
   169  010C                     	;# 
   170  010D                     	;# 
   171  010E                     	;# 
   172  010E                     	;# 
   173  010F                     	;# 
   174  0110                     	;# 
   175  0110                     	;# 
   176  0111                     	;# 
   177  0112                     	;# 
   178  0112                     	;# 
   179  0113                     	;# 
   180  0114                     	;# 
   181  0114                     	;# 
   182  0115                     	;# 
   183  0116                     	;# 
   184  0116                     	;# 
   185  0117                     	;# 
   186  0119                     	;# 
   187  0119                     	;# 
   188  0119                     	;# 
   189  011A                     	;# 
   190  011A                     	;# 
   191  011A                     	;# 
   192  011B                     	;# 
   193  011B                     	;# 
   194  011B                     	;# 
   195  011B                     	;# 
   196  011B                     	;# 
   197  011C                     	;# 
   198  011C                     	;# 
   199  011C                     	;# 
   200  011D                     	;# 
   201  011D                     	;# 
   202  011D                     	;# 
   203  011E                     	;# 
   204  011E                     	;# 
   205  011E                     	;# 
   206  011F                     	;# 
   207  011F                     	;# 
   208  011F                     	;# 
   209  011F                     	;# 
   210  011F                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  018E                     	;# 
   214  018F                     	;# 
   215  0190                     	;# 
   216  0191                     	;# 
   217  0192                     	;# 
   218  0196                     	;# 
   219  0197                     	;# 
   220  0198                     	;# 
   221  0199                     	;# 
   222  019A                     	;# 
   223  019B                     	;# 
   224  019C                     	;# 
   225  020C                     	;# 
   226  020C                     	;# 
   227  020D                     	;# 
   228  020E                     	;# 
   229  020F                     	;# 
   230  020F                     	;# 
   231  0210                     	;# 
   232  0210                     	;# 
   233  0211                     	;# 
   234  0211                     	;# 
   235  0212                     	;# 
   236  0212                     	;# 
   237  0213                     	;# 
   238  0214                     	;# 
   239  0215                     	;# 
   240  0215                     	;# 
   241  0216                     	;# 
   242  0216                     	;# 
   243  0217                     	;# 
   244  0217                     	;# 
   245  0218                     	;# 
   246  0218                     	;# 
   247  0219                     	;# 
   248  021A                     	;# 
   249  021B                     	;# 
   250  021B                     	;# 
   251  021C                     	;# 
   252  021C                     	;# 
   253  021D                     	;# 
   254  021D                     	;# 
   255  021E                     	;# 
   256  021F                     	;# 
   257  028C                     	;# 
   258  028C                     	;# 
   259  028D                     	;# 
   260  028D                     	;# 
   261  028E                     	;# 
   262  028F                     	;# 
   263  0290                     	;# 
   264  0290                     	;# 
   265  0291                     	;# 
   266  0292                     	;# 
   267  0292                     	;# 
   268  0293                     	;# 
   269  0293                     	;# 
   270  0294                     	;# 
   271  0295                     	;# 
   272  0296                     	;# 
   273  0296                     	;# 
   274  0297                     	;# 
   275  0298                     	;# 
   276  0298                     	;# 
   277  0299                     	;# 
   278  0299                     	;# 
   279  029A                     	;# 
   280  029B                     	;# 
   281  029C                     	;# 
   282  029C                     	;# 
   283  029D                     	;# 
   284  030C                     	;# 
   285  030C                     	;# 
   286  030D                     	;# 
   287  030E                     	;# 
   288  030F                     	;# 
   289  0310                     	;# 
   290  0310                     	;# 
   291  0311                     	;# 
   292  0312                     	;# 
   293  0313                     	;# 
   294  0314                     	;# 
   295  0314                     	;# 
   296  0315                     	;# 
   297  0316                     	;# 
   298  0317                     	;# 
   299  0318                     	;# 
   300  0318                     	;# 
   301  0319                     	;# 
   302  031A                     	;# 
   303  031B                     	;# 
   304  031C                     	;# 
   305  031C                     	;# 
   306  031D                     	;# 
   307  031E                     	;# 
   308  031F                     	;# 
   309  038C                     	;# 
   310  038C                     	;# 
   311  038D                     	;# 
   312  038E                     	;# 
   313  0390                     	;# 
   314  0390                     	;# 
   315  0391                     	;# 
   316  0392                     	;# 
   317  040C                     	;# 
   318  040D                     	;# 
   319  040E                     	;# 
   320  040F                     	;# 
   321  0410                     	;# 
   322  0411                     	;# 
   323  0416                     	;# 
   324  0416                     	;# 
   325  0417                     	;# 
   326  0418                     	;# 
   327  0418                     	;# 
   328  0419                     	;# 
   329  041A                     	;# 
   330  041A                     	;# 
   331  041B                     	;# 
   332  041C                     	;# 
   333  041C                     	;# 
   334  041D                     	;# 
   335  041E                     	;# 
   336  041F                     	;# 
   337  048C                     	;# 
   338  048C                     	;# 
   339  048D                     	;# 
   340  048E                     	;# 
   341  048F                     	;# 
   342  048F                     	;# 
   343  0490                     	;# 
   344  0491                     	;# 
   345  0492                     	;# 
   346  0492                     	;# 
   347  0493                     	;# 
   348  0494                     	;# 
   349  0495                     	;# 
   350  0495                     	;# 
   351  0496                     	;# 
   352  0497                     	;# 
   353  0498                     	;# 
   354  0499                     	;# 
   355  049A                     	;# 
   356  049B                     	;# 
   357  049C                     	;# 
   358  049D                     	;# 
   359  050C                     	;# 
   360  050C                     	;# 
   361  050D                     	;# 
   362  050E                     	;# 
   363  050F                     	;# 
   364  050F                     	;# 
   365  0510                     	;# 
   366  0511                     	;# 
   367  0512                     	;# 
   368  0512                     	;# 
   369  0513                     	;# 
   370  0514                     	;# 
   371  0515                     	;# 
   372  0515                     	;# 
   373  0516                     	;# 
   374  0517                     	;# 
   375  0518                     	;# 
   376  0519                     	;# 
   377  051A                     	;# 
   378  051B                     	;# 
   379  051C                     	;# 
   380  051D                     	;# 
   381  058C                     	;# 
   382  058C                     	;# 
   383  058D                     	;# 
   384  058E                     	;# 
   385  058F                     	;# 
   386  058F                     	;# 
   387  0590                     	;# 
   388  0591                     	;# 
   389  0592                     	;# 
   390  0593                     	;# 
   391  060C                     	;# 
   392  060D                     	;# 
   393  060E                     	;# 
   394  060F                     	;# 
   395  0610                     	;# 
   396  0611                     	;# 
   397  0612                     	;# 
   398  0613                     	;# 
   399  0614                     	;# 
   400  0616                     	;# 
   401  0617                     	;# 
   402  0618                     	;# 
   403  0619                     	;# 
   404  061A                     	;# 
   405  061B                     	;# 
   406  061C                     	;# 
   407  061D                     	;# 
   408  061E                     	;# 
   409  068C                     	;# 
   410  068D                     	;# 
   411  068E                     	;# 
   412  068F                     	;# 
   413  0690                     	;# 
   414  0691                     	;# 
   415  0692                     	;# 
   416  0693                     	;# 
   417  0694                     	;# 
   418  070C                     	;# 
   419  070D                     	;# 
   420  070E                     	;# 
   421  070F                     	;# 
   422  0710                     	;# 
   423  0711                     	;# 
   424  0712                     	;# 
   425  0713                     	;# 
   426  0714                     	;# 
   427  0716                     	;# 
   428  0717                     	;# 
   429  0718                     	;# 
   430  0719                     	;# 
   431  071A                     	;# 
   432  071B                     	;# 
   433  071C                     	;# 
   434  071D                     	;# 
   435  071E                     	;# 
   436  0796                     	;# 
   437  0797                     	;# 
   438  0798                     	;# 
   439  0799                     	;# 
   440  079A                     	;# 
   441  079B                     	;# 
   442  080C                     	;# 
   443  080D                     	;# 
   444  080E                     	;# 
   445  080F                     	;# 
   446  0810                     	;# 
   447  0811                     	;# 
   448  0812                     	;# 
   449  0813                     	;# 
   450  0814                     	;# 
   451  081A                     	;# 
   452  081B                     	;# 
   453  081C                     	;# 
   454  081D                     	;# 
   455  081E                     	;# 
   456  081F                     	;# 
   457  088C                     	;# 
   458  088D                     	;# 
   459  088E                     	;# 
   460  088F                     	;# 
   461  0890                     	;# 
   462  0891                     	;# 
   463  0892                     	;# 
   464  0893                     	;# 
   465  0895                     	;# 
   466  0896                     	;# 
   467  0897                     	;# 
   468  0898                     	;# 
   469  0899                     	;# 
   470  089A                     	;# 
   471  089B                     	;# 
   472  090C                     	;# 
   473  090E                     	;# 
   474  090F                     	;# 
   475  091F                     	;# 
   476  091F                     	;# 
   477  098F                     	;# 
   478  098F                     	;# 
   479  0990                     	;# 
   480  0991                     	;# 
   481  0992                     	;# 
   482  0993                     	;# 
   483  0994                     	;# 
   484  0995                     	;# 
   485  0996                     	;# 
   486  0997                     	;# 
   487  0E0F                     	;# 
   488  0E10                     	;# 
   489  0E11                     	;# 
   490  0E12                     	;# 
   491  0E13                     	;# 
   492  0E14                     	;# 
   493  0E15                     	;# 
   494  0E16                     	;# 
   495  0E17                     	;# 
   496  0E18                     	;# 
   497  0E19                     	;# 
   498  0E1A                     	;# 
   499  0E1B                     	;# 
   500  0E1C                     	;# 
   501  0E1D                     	;# 
   502  0E1E                     	;# 
   503  0E1F                     	;# 
   504  0E20                     	;# 
   505  0E21                     	;# 
   506  0E22                     	;# 
   507  0E23                     	;# 
   508  0E24                     	;# 
   509  0E25                     	;# 
   510  0E26                     	;# 
   511  0E27                     	;# 
   512  0E28                     	;# 
   513  0E29                     	;# 
   514  0E2A                     	;# 
   515  0E2B                     	;# 
   516  0E2C                     	;# 
   517  0E2D                     	;# 
   518  0E2E                     	;# 
   519  0E2F                     	;# 
   520  0E30                     	;# 
   521  0E31                     	;# 
   522  0E32                     	;# 
   523  0E33                     	;# 
   524  0E34                     	;# 
   525  0E35                     	;# 
   526  0E36                     	;# 
   527  0E37                     	;# 
   528  0E8F                     	;# 
   529  0E90                     	;# 
   530  0E91                     	;# 
   531  0E92                     	;# 
   532  0E93                     	;# 
   533  0E94                     	;# 
   534  0E95                     	;# 
   535  0E96                     	;# 
   536  0E97                     	;# 
   537  0E9C                     	;# 
   538  0E9D                     	;# 
   539  0E9E                     	;# 
   540  0EA1                     	;# 
   541  0EA2                     	;# 
   542  0EA3                     	;# 
   543  0EA4                     	;# 
   544  0EA5                     	;# 
   545  0EA9                     	;# 
   546  0EAA                     	;# 
   547  0EAB                     	;# 
   548  0EAC                     	;# 
   549  0EB1                     	;# 
   550  0EB2                     	;# 
   551  0EB3                     	;# 
   552  0EB8                     	;# 
   553  0EB9                     	;# 
   554  0EBA                     	;# 
   555  0EBB                     	;# 
   556  0EBC                     	;# 
   557  0EBD                     	;# 
   558  0EBE                     	;# 
   559  0EC3                     	;# 
   560  0EC5                     	;# 
   561  0EC6                     	;# 
   562  0EC7                     	;# 
   563  0EC8                     	;# 
   564  0EC9                     	;# 
   565  0ECA                     	;# 
   566  0ECB                     	;# 
   567  0ECC                     	;# 
   568  0F10                     	;# 
   569  0F11                     	;# 
   570  0F12                     	;# 
   571  0F13                     	;# 
   572  0F14                     	;# 
   573  0F15                     	;# 
   574  0F16                     	;# 
   575  0F17                     	;# 
   576  0F18                     	;# 
   577  0F19                     	;# 
   578  0F1A                     	;# 
   579  0F1B                     	;# 
   580  0F1C                     	;# 
   581  0F1D                     	;# 
   582  0F1E                     	;# 
   583  0F1F                     	;# 
   584  0F20                     	;# 
   585  0F21                     	;# 
   586  0F22                     	;# 
   587  0F23                     	;# 
   588  0F24                     	;# 
   589  0F25                     	;# 
   590  0F26                     	;# 
   591  0F27                     	;# 
   592  0F38                     	;# 
   593  0F39                     	;# 
   594  0F3A                     	;# 
   595  0F3B                     	;# 
   596  0F3C                     	;# 
   597  0F3D                     	;# 
   598  0F3E                     	;# 
   599  0F3F                     	;# 
   600  0F40                     	;# 
   601  0F41                     	;# 
   602  0F43                     	;# 
   603  0F44                     	;# 
   604  0F45                     	;# 
   605  0F46                     	;# 
   606  0F47                     	;# 
   607  0F48                     	;# 
   608  0F49                     	;# 
   609  0F4A                     	;# 
   610  0F4B                     	;# 
   611  0F4C                     	;# 
   612  0F4E                     	;# 
   613  0F4F                     	;# 
   614  0F50                     	;# 
   615  0F51                     	;# 
   616  0F52                     	;# 
   617  0F53                     	;# 
   618  0F54                     	;# 
   619  0F55                     	;# 
   620  0F56                     	;# 
   621  0F57                     	;# 
   622  0F65                     	;# 
   623  0F68                     	;# 
   624  0F69                     	;# 
   625  0F6A                     	;# 
   626  0F6B                     	;# 
   627  0FE4                     	;# 
   628  0FE5                     	;# 
   629  0FE6                     	;# 
   630  0FE7                     	;# 
   631  0FE8                     	;# 
   632  0FE9                     	;# 
   633  0FEA                     	;# 
   634  0FEB                     	;# 
   635  0FED                     	;# 
   636  0FEE                     	;# 
   637  0FEF                     	;# 
   638  0000                     	;# 
   639  0001                     	;# 
   640  0002                     	;# 
   641  0003                     	;# 
   642  0004                     	;# 
   643  0005                     	;# 
   644  0006                     	;# 
   645  0007                     	;# 
   646  0008                     	;# 
   647  0009                     	;# 
   648  000A                     	;# 
   649  000B                     	;# 
   650  000C                     	;# 
   651  000D                     	;# 
   652  000E                     	;# 
   653  0010                     	;# 
   654  0011                     	;# 
   655  0012                     	;# 
   656  0013                     	;# 
   657  0016                     	;# 
   658  0017                     	;# 
   659  0018                     	;# 
   660  001C                     	;# 
   661  001C                     	;# 
   662  001D                     	;# 
   663  001D                     	;# 
   664  001E                     	;# 
   665  001F                     	;# 
   666  008C                     	;# 
   667  008C                     	;# 
   668  008D                     	;# 
   669  008E                     	;# 
   670  008E                     	;# 
   671  008F                     	;# 
   672  0090                     	;# 
   673  0090                     	;# 
   674  0091                     	;# 
   675  0093                     	;# 
   676  0094                     	;# 
   677  0095                     	;# 
   678  0096                     	;# 
   679  0097                     	;# 
   680  0098                     	;# 
   681  0099                     	;# 
   682  009A                     	;# 
   683  009B                     	;# 
   684  009C                     	;# 
   685  009D                     	;# 
   686  009E                     	;# 
   687  010C                     	;# 
   688  010D                     	;# 
   689  010E                     	;# 
   690  010E                     	;# 
   691  010F                     	;# 
   692  0110                     	;# 
   693  0110                     	;# 
   694  0111                     	;# 
   695  0112                     	;# 
   696  0112                     	;# 
   697  0113                     	;# 
   698  0114                     	;# 
   699  0114                     	;# 
   700  0115                     	;# 
   701  0116                     	;# 
   702  0116                     	;# 
   703  0117                     	;# 
   704  0119                     	;# 
   705  0119                     	;# 
   706  0119                     	;# 
   707  011A                     	;# 
   708  011A                     	;# 
   709  011A                     	;# 
   710  011B                     	;# 
   711  011B                     	;# 
   712  011B                     	;# 
   713  011B                     	;# 
   714  011B                     	;# 
   715  011C                     	;# 
   716  011C                     	;# 
   717  011C                     	;# 
   718  011D                     	;# 
   719  011D                     	;# 
   720  011D                     	;# 
   721  011E                     	;# 
   722  011E                     	;# 
   723  011E                     	;# 
   724  011F                     	;# 
   725  011F                     	;# 
   726  011F                     	;# 
   727  011F                     	;# 
   728  011F                     	;# 
   729  018C                     	;# 
   730  018D                     	;# 
   731  018E                     	;# 
   732  018F                     	;# 
   733  0190                     	;# 
   734  0191                     	;# 
   735  0192                     	;# 
   736  0196                     	;# 
   737  0197                     	;# 
   738  0198                     	;# 
   739  0199                     	;# 
   740  019A                     	;# 
   741  019B                     	;# 
   742  019C                     	;# 
   743  020C                     	;# 
   744  020C                     	;# 
   745  020D                     	;# 
   746  020E                     	;# 
   747  020F                     	;# 
   748  020F                     	;# 
   749  0210                     	;# 
   750  0210                     	;# 
   751  0211                     	;# 
   752  0211                     	;# 
   753  0212                     	;# 
   754  0212                     	;# 
   755  0213                     	;# 
   756  0214                     	;# 
   757  0215                     	;# 
   758  0215                     	;# 
   759  0216                     	;# 
   760  0216                     	;# 
   761  0217                     	;# 
   762  0217                     	;# 
   763  0218                     	;# 
   764  0218                     	;# 
   765  0219                     	;# 
   766  021A                     	;# 
   767  021B                     	;# 
   768  021B                     	;# 
   769  021C                     	;# 
   770  021C                     	;# 
   771  021D                     	;# 
   772  021D                     	;# 
   773  021E                     	;# 
   774  021F                     	;# 
   775  028C                     	;# 
   776  028C                     	;# 
   777  028D                     	;# 
   778  028D                     	;# 
   779  028E                     	;# 
   780  028F                     	;# 
   781  0290                     	;# 
   782  0290                     	;# 
   783  0291                     	;# 
   784  0292                     	;# 
   785  0292                     	;# 
   786  0293                     	;# 
   787  0293                     	;# 
   788  0294                     	;# 
   789  0295                     	;# 
   790  0296                     	;# 
   791  0296                     	;# 
   792  0297                     	;# 
   793  0298                     	;# 
   794  0298                     	;# 
   795  0299                     	;# 
   796  0299                     	;# 
   797  029A                     	;# 
   798  029B                     	;# 
   799  029C                     	;# 
   800  029C                     	;# 
   801  029D                     	;# 
   802  030C                     	;# 
   803  030C                     	;# 
   804  030D                     	;# 
   805  030E                     	;# 
   806  030F                     	;# 
   807  0310                     	;# 
   808  0310                     	;# 
   809  0311                     	;# 
   810  0312                     	;# 
   811  0313                     	;# 
   812  0314                     	;# 
   813  0314                     	;# 
   814  0315                     	;# 
   815  0316                     	;# 
   816  0317                     	;# 
   817  0318                     	;# 
   818  0318                     	;# 
   819  0319                     	;# 
   820  031A                     	;# 
   821  031B                     	;# 
   822  031C                     	;# 
   823  031C                     	;# 
   824  031D                     	;# 
   825  031E                     	;# 
   826  031F                     	;# 
   827  038C                     	;# 
   828  038C                     	;# 
   829  038D                     	;# 
   830  038E                     	;# 
   831  0390                     	;# 
   832  0390                     	;# 
   833  0391                     	;# 
   834  0392                     	;# 
   835  040C                     	;# 
   836  040D                     	;# 
   837  040E                     	;# 
   838  040F                     	;# 
   839  0410                     	;# 
   840  0411                     	;# 
   841  0416                     	;# 
   842  0416                     	;# 
   843  0417                     	;# 
   844  0418                     	;# 
   845  0418                     	;# 
   846  0419                     	;# 
   847  041A                     	;# 
   848  041A                     	;# 
   849  041B                     	;# 
   850  041C                     	;# 
   851  041C                     	;# 
   852  041D                     	;# 
   853  041E                     	;# 
   854  041F                     	;# 
   855  048C                     	;# 
   856  048C                     	;# 
   857  048D                     	;# 
   858  048E                     	;# 
   859  048F                     	;# 
   860  048F                     	;# 
   861  0490                     	;# 
   862  0491                     	;# 
   863  0492                     	;# 
   864  0492                     	;# 
   865  0493                     	;# 
   866  0494                     	;# 
   867  0495                     	;# 
   868  0495                     	;# 
   869  0496                     	;# 
   870  0497                     	;# 
   871  0498                     	;# 
   872  0499                     	;# 
   873  049A                     	;# 
   874  049B                     	;# 
   875  049C                     	;# 
   876  049D                     	;# 
   877  050C                     	;# 
   878  050C                     	;# 
   879  050D                     	;# 
   880  050E                     	;# 
   881  050F                     	;# 
   882  050F                     	;# 
   883  0510                     	;# 
   884  0511                     	;# 
   885  0512                     	;# 
   886  0512                     	;# 
   887  0513                     	;# 
   888  0514                     	;# 
   889  0515                     	;# 
   890  0515                     	;# 
   891  0516                     	;# 
   892  0517                     	;# 
   893  0518                     	;# 
   894  0519                     	;# 
   895  051A                     	;# 
   896  051B                     	;# 
   897  051C                     	;# 
   898  051D                     	;# 
   899  058C                     	;# 
   900  058C                     	;# 
   901  058D                     	;# 
   902  058E                     	;# 
   903  058F                     	;# 
   904  058F                     	;# 
   905  0590                     	;# 
   906  0591                     	;# 
   907  0592                     	;# 
   908  0593                     	;# 
   909  060C                     	;# 
   910  060D                     	;# 
   911  060E                     	;# 
   912  060F                     	;# 
   913  0610                     	;# 
   914  0611                     	;# 
   915  0612                     	;# 
   916  0613                     	;# 
   917  0614                     	;# 
   918  0616                     	;# 
   919  0617                     	;# 
   920  0618                     	;# 
   921  0619                     	;# 
   922  061A                     	;# 
   923  061B                     	;# 
   924  061C                     	;# 
   925  061D                     	;# 
   926  061E                     	;# 
   927  068C                     	;# 
   928  068D                     	;# 
   929  068E                     	;# 
   930  068F                     	;# 
   931  0690                     	;# 
   932  0691                     	;# 
   933  0692                     	;# 
   934  0693                     	;# 
   935  0694                     	;# 
   936  070C                     	;# 
   937  070D                     	;# 
   938  070E                     	;# 
   939  070F                     	;# 
   940  0710                     	;# 
   941  0711                     	;# 
   942  0712                     	;# 
   943  0713                     	;# 
   944  0714                     	;# 
   945  0716                     	;# 
   946  0717                     	;# 
   947  0718                     	;# 
   948  0719                     	;# 
   949  071A                     	;# 
   950  071B                     	;# 
   951  071C                     	;# 
   952  071D                     	;# 
   953  071E                     	;# 
   954  0796                     	;# 
   955  0797                     	;# 
   956  0798                     	;# 
   957  0799                     	;# 
   958  079A                     	;# 
   959  079B                     	;# 
   960  080C                     	;# 
   961  080D                     	;# 
   962  080E                     	;# 
   963  080F                     	;# 
   964  0810                     	;# 
   965  0811                     	;# 
   966  0812                     	;# 
   967  0813                     	;# 
   968  0814                     	;# 
   969  081A                     	;# 
   970  081B                     	;# 
   971  081C                     	;# 
   972  081D                     	;# 
   973  081E                     	;# 
   974  081F                     	;# 
   975  088C                     	;# 
   976  088D                     	;# 
   977  088E                     	;# 
   978  088F                     	;# 
   979  0890                     	;# 
   980  0891                     	;# 
   981  0892                     	;# 
   982  0893                     	;# 
   983  0895                     	;# 
   984  0896                     	;# 
   985  0897                     	;# 
   986  0898                     	;# 
   987  0899                     	;# 
   988  089A                     	;# 
   989  089B                     	;# 
   990  090C                     	;# 
   991  090E                     	;# 
   992  090F                     	;# 
   993  091F                     	;# 
   994  091F                     	;# 
   995  098F                     	;# 
   996  098F                     	;# 
   997  0990                     	;# 
   998  0991                     	;# 
   999  0992                     	;# 
  1000  0993                     	;# 
  1001  0994                     	;# 
  1002  0995                     	;# 
  1003  0996                     	;# 
  1004  0997                     	;# 
  1005  0E0F                     	;# 
  1006  0E10                     	;# 
  1007  0E11                     	;# 
  1008  0E12                     	;# 
  1009  0E13                     	;# 
  1010  0E14                     	;# 
  1011  0E15                     	;# 
  1012  0E16                     	;# 
  1013  0E17                     	;# 
  1014  0E18                     	;# 
  1015  0E19                     	;# 
  1016  0E1A                     	;# 
  1017  0E1B                     	;# 
  1018  0E1C                     	;# 
  1019  0E1D                     	;# 
  1020  0E1E                     	;# 
  1021  0E1F                     	;# 
  1022  0E20                     	;# 
  1023  0E21                     	;# 
  1024  0E22                     	;# 
  1025  0E23                     	;# 
  1026  0E24                     	;# 
  1027  0E25                     	;# 
  1028  0E26                     	;# 
  1029  0E27                     	;# 
  1030  0E28                     	;# 
  1031  0E29                     	;# 
  1032  0E2A                     	;# 
  1033  0E2B                     	;# 
  1034  0E2C                     	;# 
  1035  0E2D                     	;# 
  1036  0E2E                     	;# 
  1037  0E2F                     	;# 
  1038  0E30                     	;# 
  1039  0E31                     	;# 
  1040  0E32                     	;# 
  1041  0E33                     	;# 
  1042  0E34                     	;# 
  1043  0E35                     	;# 
  1044  0E36                     	;# 
  1045  0E37                     	;# 
  1046  0E8F                     	;# 
  1047  0E90                     	;# 
  1048  0E91                     	;# 
  1049  0E92                     	;# 
  1050  0E93                     	;# 
  1051  0E94                     	;# 
  1052  0E95                     	;# 
  1053  0E96                     	;# 
  1054  0E97                     	;# 
  1055  0E9C                     	;# 
  1056  0E9D                     	;# 
  1057  0E9E                     	;# 
  1058  0EA1                     	;# 
  1059  0EA2                     	;# 
  1060  0EA3                     	;# 
  1061  0EA4                     	;# 
  1062  0EA5                     	;# 
  1063  0EA9                     	;# 
  1064  0EAA                     	;# 
  1065  0EAB                     	;# 
  1066  0EAC                     	;# 
  1067  0EB1                     	;# 
  1068  0EB2                     	;# 
  1069  0EB3                     	;# 
  1070  0EB8                     	;# 
  1071  0EB9                     	;# 
  1072  0EBA                     	;# 
  1073  0EBB                     	;# 
  1074  0EBC                     	;# 
  1075  0EBD                     	;# 
  1076  0EBE                     	;# 
  1077  0EC3                     	;# 
  1078  0EC5                     	;# 
  1079  0EC6                     	;# 
  1080  0EC7                     	;# 
  1081  0EC8                     	;# 
  1082  0EC9                     	;# 
  1083  0ECA                     	;# 
  1084  0ECB                     	;# 
  1085  0ECC                     	;# 
  1086  0F10                     	;# 
  1087  0F11                     	;# 
  1088  0F12                     	;# 
  1089  0F13                     	;# 
  1090  0F14                     	;# 
  1091  0F15                     	;# 
  1092  0F16                     	;# 
  1093  0F17                     	;# 
  1094  0F18                     	;# 
  1095  0F19                     	;# 
  1096  0F1A                     	;# 
  1097  0F1B                     	;# 
  1098  0F1C                     	;# 
  1099  0F1D                     	;# 
  1100  0F1E                     	;# 
  1101  0F1F                     	;# 
  1102  0F20                     	;# 
  1103  0F21                     	;# 
  1104  0F22                     	;# 
  1105  0F23                     	;# 
  1106  0F24                     	;# 
  1107  0F25                     	;# 
  1108  0F26                     	;# 
  1109  0F27                     	;# 
  1110  0F38                     	;# 
  1111  0F39                     	;# 
  1112  0F3A                     	;# 
  1113  0F3B                     	;# 
  1114  0F3C                     	;# 
  1115  0F3D                     	;# 
  1116  0F3E                     	;# 
  1117  0F3F                     	;# 
  1118  0F40                     	;# 
  1119  0F41                     	;# 
  1120  0F43                     	;# 
  1121  0F44                     	;# 
  1122  0F45                     	;# 
  1123  0F46                     	;# 
  1124  0F47                     	;# 
  1125  0F48                     	;# 
  1126  0F49                     	;# 
  1127  0F4A                     	;# 
  1128  0F4B                     	;# 
  1129  0F4C                     	;# 
  1130  0F4E                     	;# 
  1131  0F4F                     	;# 
  1132  0F50                     	;# 
  1133  0F51                     	;# 
  1134  0F52                     	;# 
  1135  0F53                     	;# 
  1136  0F54                     	;# 
  1137  0F55                     	;# 
  1138  0F56                     	;# 
  1139  0F57                     	;# 
  1140  0F65                     	;# 
  1141  0F68                     	;# 
  1142  0F69                     	;# 
  1143  0F6A                     	;# 
  1144  0F6B                     	;# 
  1145  0FE4                     	;# 
  1146  0FE5                     	;# 
  1147  0FE6                     	;# 
  1148  0FE7                     	;# 
  1149  0FE8                     	;# 
  1150  0FE9                     	;# 
  1151  0FEA                     	;# 
  1152  0FEB                     	;# 
  1153  0FED                     	;# 
  1154  0FEE                     	;# 
  1155  0FEF                     	;# 
  1156  0000                     	;# 
  1157  0001                     	;# 
  1158  0002                     	;# 
  1159  0003                     	;# 
  1160  0004                     	;# 
  1161  0005                     	;# 
  1162  0006                     	;# 
  1163  0007                     	;# 
  1164  0008                     	;# 
  1165  0009                     	;# 
  1166  000A                     	;# 
  1167  000B                     	;# 
  1168  000C                     	;# 
  1169  000D                     	;# 
  1170  000E                     	;# 
  1171  0010                     	;# 
  1172  0011                     	;# 
  1173  0012                     	;# 
  1174  0013                     	;# 
  1175  0016                     	;# 
  1176  0017                     	;# 
  1177  0018                     	;# 
  1178  001C                     	;# 
  1179  001C                     	;# 
  1180  001D                     	;# 
  1181  001D                     	;# 
  1182  001E                     	;# 
  1183  001F                     	;# 
  1184  008C                     	;# 
  1185  008C                     	;# 
  1186  008D                     	;# 
  1187  008E                     	;# 
  1188  008E                     	;# 
  1189  008F                     	;# 
  1190  0090                     	;# 
  1191  0090                     	;# 
  1192  0091                     	;# 
  1193  0093                     	;# 
  1194  0094                     	;# 
  1195  0095                     	;# 
  1196  0096                     	;# 
  1197  0097                     	;# 
  1198  0098                     	;# 
  1199  0099                     	;# 
  1200  009A                     	;# 
  1201  009B                     	;# 
  1202  009C                     	;# 
  1203  009D                     	;# 
  1204  009E                     	;# 
  1205  010C                     	;# 
  1206  010D                     	;# 
  1207  010E                     	;# 
  1208  010E                     	;# 
  1209  010F                     	;# 
  1210  0110                     	;# 
  1211  0110                     	;# 
  1212  0111                     	;# 
  1213  0112                     	;# 
  1214  0112                     	;# 
  1215  0113                     	;# 
  1216  0114                     	;# 
  1217  0114                     	;# 
  1218  0115                     	;# 
  1219  0116                     	;# 
  1220  0116                     	;# 
  1221  0117                     	;# 
  1222  0119                     	;# 
  1223  0119                     	;# 
  1224  0119                     	;# 
  1225  011A                     	;# 
  1226  011A                     	;# 
  1227  011A                     	;# 
  1228  011B                     	;# 
  1229  011B                     	;# 
  1230  011B                     	;# 
  1231  011B                     	;# 
  1232  011B                     	;# 
  1233  011C                     	;# 
  1234  011C                     	;# 
  1235  011C                     	;# 
  1236  011D                     	;# 
  1237  011D                     	;# 
  1238  011D                     	;# 
  1239  011E                     	;# 
  1240  011E                     	;# 
  1241  011E                     	;# 
  1242  011F                     	;# 
  1243  011F                     	;# 
  1244  011F                     	;# 
  1245  011F                     	;# 
  1246  011F                     	;# 
  1247  018C                     	;# 
  1248  018D                     	;# 
  1249  018E                     	;# 
  1250  018F                     	;# 
  1251  0190                     	;# 
  1252  0191                     	;# 
  1253  0192                     	;# 
  1254  0196                     	;# 
  1255  0197                     	;# 
  1256  0198                     	;# 
  1257  0199                     	;# 
  1258  019A                     	;# 
  1259  019B                     	;# 
  1260  019C                     	;# 
  1261  020C                     	;# 
  1262  020C                     	;# 
  1263  020D                     	;# 
  1264  020E                     	;# 
  1265  020F                     	;# 
  1266  020F                     	;# 
  1267  0210                     	;# 
  1268  0210                     	;# 
  1269  0211                     	;# 
  1270  0211                     	;# 
  1271  0212                     	;# 
  1272  0212                     	;# 
  1273  0213                     	;# 
  1274  0214                     	;# 
  1275  0215                     	;# 
  1276  0215                     	;# 
  1277  0216                     	;# 
  1278  0216                     	;# 
  1279  0217                     	;# 
  1280  0217                     	;# 
  1281  0218                     	;# 
  1282  0218                     	;# 
  1283  0219                     	;# 
  1284  021A                     	;# 
  1285  021B                     	;# 
  1286  021B                     	;# 
  1287  021C                     	;# 
  1288  021C                     	;# 
  1289  021D                     	;# 
  1290  021D                     	;# 
  1291  021E                     	;# 
  1292  021F                     	;# 
  1293  028C                     	;# 
  1294  028C                     	;# 
  1295  028D                     	;# 
  1296  028D                     	;# 
  1297  028E                     	;# 
  1298  028F                     	;# 
  1299  0290                     	;# 
  1300  0290                     	;# 
  1301  0291                     	;# 
  1302  0292                     	;# 
  1303  0292                     	;# 
  1304  0293                     	;# 
  1305  0293                     	;# 
  1306  0294                     	;# 
  1307  0295                     	;# 
  1308  0296                     	;# 
  1309  0296                     	;# 
  1310  0297                     	;# 
  1311  0298                     	;# 
  1312  0298                     	;# 
  1313  0299                     	;# 
  1314  0299                     	;# 
  1315  029A                     	;# 
  1316  029B                     	;# 
  1317  029C                     	;# 
  1318  029C                     	;# 
  1319  029D                     	;# 
  1320  030C                     	;# 
  1321  030C                     	;# 
  1322  030D                     	;# 
  1323  030E                     	;# 
  1324  030F                     	;# 
  1325  0310                     	;# 
  1326  0310                     	;# 
  1327  0311                     	;# 
  1328  0312                     	;# 
  1329  0313                     	;# 
  1330  0314                     	;# 
  1331  0314                     	;# 
  1332  0315                     	;# 
  1333  0316                     	;# 
  1334  0317                     	;# 
  1335  0318                     	;# 
  1336  0318                     	;# 
  1337  0319                     	;# 
  1338  031A                     	;# 
  1339  031B                     	;# 
  1340  031C                     	;# 
  1341  031C                     	;# 
  1342  031D                     	;# 
  1343  031E                     	;# 
  1344  031F                     	;# 
  1345  038C                     	;# 
  1346  038C                     	;# 
  1347  038D                     	;# 
  1348  038E                     	;# 
  1349  0390                     	;# 
  1350  0390                     	;# 
  1351  0391                     	;# 
  1352  0392                     	;# 
  1353  040C                     	;# 
  1354  040D                     	;# 
  1355  040E                     	;# 
  1356  040F                     	;# 
  1357  0410                     	;# 
  1358  0411                     	;# 
  1359  0416                     	;# 
  1360  0416                     	;# 
  1361  0417                     	;# 
  1362  0418                     	;# 
  1363  0418                     	;# 
  1364  0419                     	;# 
  1365  041A                     	;# 
  1366  041A                     	;# 
  1367  041B                     	;# 
  1368  041C                     	;# 
  1369  041C                     	;# 
  1370  041D                     	;# 
  1371  041E                     	;# 
  1372  041F                     	;# 
  1373  048C                     	;# 
  1374  048C                     	;# 
  1375  048D                     	;# 
  1376  048E                     	;# 
  1377  048F                     	;# 
  1378  048F                     	;# 
  1379  0490                     	;# 
  1380  0491                     	;# 
  1381  0492                     	;# 
  1382  0492                     	;# 
  1383  0493                     	;# 
  1384  0494                     	;# 
  1385  0495                     	;# 
  1386  0495                     	;# 
  1387  0496                     	;# 
  1388  0497                     	;# 
  1389  0498                     	;# 
  1390  0499                     	;# 
  1391  049A                     	;# 
  1392  049B                     	;# 
  1393  049C                     	;# 
  1394  049D                     	;# 
  1395  050C                     	;# 
  1396  050C                     	;# 
  1397  050D                     	;# 
  1398  050E                     	;# 
  1399  050F                     	;# 
  1400  050F                     	;# 
  1401  0510                     	;# 
  1402  0511                     	;# 
  1403  0512                     	;# 
  1404  0512                     	;# 
  1405  0513                     	;# 
  1406  0514                     	;# 
  1407  0515                     	;# 
  1408  0515                     	;# 
  1409  0516                     	;# 
  1410  0517                     	;# 
  1411  0518                     	;# 
  1412  0519                     	;# 
  1413  051A                     	;# 
  1414  051B                     	;# 
  1415  051C                     	;# 
  1416  051D                     	;# 
  1417  058C                     	;# 
  1418  058C                     	;# 
  1419  058D                     	;# 
  1420  058E                     	;# 
  1421  058F                     	;# 
  1422  058F                     	;# 
  1423  0590                     	;# 
  1424  0591                     	;# 
  1425  0592                     	;# 
  1426  0593                     	;# 
  1427  060C                     	;# 
  1428  060D                     	;# 
  1429  060E                     	;# 
  1430  060F                     	;# 
  1431  0610                     	;# 
  1432  0611                     	;# 
  1433  0612                     	;# 
  1434  0613                     	;# 
  1435  0614                     	;# 
  1436  0616                     	;# 
  1437  0617                     	;# 
  1438  0618                     	;# 
  1439  0619                     	;# 
  1440  061A                     	;# 
  1441  061B                     	;# 
  1442  061C                     	;# 
  1443  061D                     	;# 
  1444  061E                     	;# 
  1445  068C                     	;# 
  1446  068D                     	;# 
  1447  068E                     	;# 
  1448  068F                     	;# 
  1449  0690                     	;# 
  1450  0691                     	;# 
  1451  0692                     	;# 
  1452  0693                     	;# 
  1453  0694                     	;# 
  1454  070C                     	;# 
  1455  070D                     	;# 
  1456  070E                     	;# 
  1457  070F                     	;# 
  1458  0710                     	;# 
  1459  0711                     	;# 
  1460  0712                     	;# 
  1461  0713                     	;# 
  1462  0714                     	;# 
  1463  0716                     	;# 
  1464  0717                     	;# 
  1465  0718                     	;# 
  1466  0719                     	;# 
  1467  071A                     	;# 
  1468  071B                     	;# 
  1469  071C                     	;# 
  1470  071D                     	;# 
  1471  071E                     	;# 
  1472  0796                     	;# 
  1473  0797                     	;# 
  1474  0798                     	;# 
  1475  0799                     	;# 
  1476  079A                     	;# 
  1477  079B                     	;# 
  1478  080C                     	;# 
  1479  080D                     	;# 
  1480  080E                     	;# 
  1481  080F                     	;# 
  1482  0810                     	;# 
  1483  0811                     	;# 
  1484  0812                     	;# 
  1485  0813                     	;# 
  1486  0814                     	;# 
  1487  081A                     	;# 
  1488  081B                     	;# 
  1489  081C                     	;# 
  1490  081D                     	;# 
  1491  081E                     	;# 
  1492  081F                     	;# 
  1493  088C                     	;# 
  1494  088D                     	;# 
  1495  088E                     	;# 
  1496  088F                     	;# 
  1497  0890                     	;# 
  1498  0891                     	;# 
  1499  0892                     	;# 
  1500  0893                     	;# 
  1501  0895                     	;# 
  1502  0896                     	;# 
  1503  0897                     	;# 
  1504  0898                     	;# 
  1505  0899                     	;# 
  1506  089A                     	;# 
  1507  089B                     	;# 
  1508  090C                     	;# 
  1509  090E                     	;# 
  1510  090F                     	;# 
  1511  091F                     	;# 
  1512  091F                     	;# 
  1513  098F                     	;# 
  1514  098F                     	;# 
  1515  0990                     	;# 
  1516  0991                     	;# 
  1517  0992                     	;# 
  1518  0993                     	;# 
  1519  0994                     	;# 
  1520  0995                     	;# 
  1521  0996                     	;# 
  1522  0997                     	;# 
  1523  0E0F                     	;# 
  1524  0E10                     	;# 
  1525  0E11                     	;# 
  1526  0E12                     	;# 
  1527  0E13                     	;# 
  1528  0E14                     	;# 
  1529  0E15                     	;# 
  1530  0E16                     	;# 
  1531  0E17                     	;# 
  1532  0E18                     	;# 
  1533  0E19                     	;# 
  1534  0E1A                     	;# 
  1535  0E1B                     	;# 
  1536  0E1C                     	;# 
  1537  0E1D                     	;# 
  1538  0E1E                     	;# 
  1539  0E1F                     	;# 
  1540  0E20                     	;# 
  1541  0E21                     	;# 
  1542  0E22                     	;# 
  1543  0E23                     	;# 
  1544  0E24                     	;# 
  1545  0E25                     	;# 
  1546  0E26                     	;# 
  1547  0E27                     	;# 
  1548  0E28                     	;# 
  1549  0E29                     	;# 
  1550  0E2A                     	;# 
  1551  0E2B                     	;# 
  1552  0E2C                     	;# 
  1553  0E2D                     	;# 
  1554  0E2E                     	;# 
  1555  0E2F                     	;# 
  1556  0E30                     	;# 
  1557  0E31                     	;# 
  1558  0E32                     	;# 
  1559  0E33                     	;# 
  1560  0E34                     	;# 
  1561  0E35                     	;# 
  1562  0E36                     	;# 
  1563  0E37                     	;# 
  1564  0E8F                     	;# 
  1565  0E90                     	;# 
  1566  0E91                     	;# 
  1567  0E92                     	;# 
  1568  0E93                     	;# 
  1569  0E94                     	;# 
  1570  0E95                     	;# 
  1571  0E96                     	;# 
  1572  0E97                     	;# 
  1573  0E9C                     	;# 
  1574  0E9D                     	;# 
  1575  0E9E                     	;# 
  1576  0EA1                     	;# 
  1577  0EA2                     	;# 
  1578  0EA3                     	;# 
  1579  0EA4                     	;# 
  1580  0EA5                     	;# 
  1581  0EA9                     	;# 
  1582  0EAA                     	;# 
  1583  0EAB                     	;# 
  1584  0EAC                     	;# 
  1585  0EB1                     	;# 
  1586  0EB2                     	;# 
  1587  0EB3                     	;# 
  1588  0EB8                     	;# 
  1589  0EB9                     	;# 
  1590  0EBA                     	;# 
  1591  0EBB                     	;# 
  1592  0EBC                     	;# 
  1593  0EBD                     	;# 
  1594  0EBE                     	;# 
  1595  0EC3                     	;# 
  1596  0EC5                     	;# 
  1597  0EC6                     	;# 
  1598  0EC7                     	;# 
  1599  0EC8                     	;# 
  1600  0EC9                     	;# 
  1601  0ECA                     	;# 
  1602  0ECB                     	;# 
  1603  0ECC                     	;# 
  1604  0F10                     	;# 
  1605  0F11                     	;# 
  1606  0F12                     	;# 
  1607  0F13                     	;# 
  1608  0F14                     	;# 
  1609  0F15                     	;# 
  1610  0F16                     	;# 
  1611  0F17                     	;# 
  1612  0F18                     	;# 
  1613  0F19                     	;# 
  1614  0F1A                     	;# 
  1615  0F1B                     	;# 
  1616  0F1C                     	;# 
  1617  0F1D                     	;# 
  1618  0F1E                     	;# 
  1619  0F1F                     	;# 
  1620  0F20                     	;# 
  1621  0F21                     	;# 
  1622  0F22                     	;# 
  1623  0F23                     	;# 
  1624  0F24                     	;# 
  1625  0F25                     	;# 
  1626  0F26                     	;# 
  1627  0F27                     	;# 
  1628  0F38                     	;# 
  1629  0F39                     	;# 
  1630  0F3A                     	;# 
  1631  0F3B                     	;# 
  1632  0F3C                     	;# 
  1633  0F3D                     	;# 
  1634  0F3E                     	;# 
  1635  0F3F                     	;# 
  1636  0F40                     	;# 
  1637  0F41                     	;# 
  1638  0F43                     	;# 
  1639  0F44                     	;# 
  1640  0F45                     	;# 
  1641  0F46                     	;# 
  1642  0F47                     	;# 
  1643  0F48                     	;# 
  1644  0F49                     	;# 
  1645  0F4A                     	;# 
  1646  0F4B                     	;# 
  1647  0F4C                     	;# 
  1648  0F4E                     	;# 
  1649  0F4F                     	;# 
  1650  0F50                     	;# 
  1651  0F51                     	;# 
  1652  0F52                     	;# 
  1653  0F53                     	;# 
  1654  0F54                     	;# 
  1655  0F55                     	;# 
  1656  0F56                     	;# 
  1657  0F57                     	;# 
  1658  0F65                     	;# 
  1659  0F68                     	;# 
  1660  0F69                     	;# 
  1661  0F6A                     	;# 
  1662  0F6B                     	;# 
  1663  0FE4                     	;# 
  1664  0FE5                     	;# 
  1665  0FE6                     	;# 
  1666  0FE7                     	;# 
  1667  0FE8                     	;# 
  1668  0FE9                     	;# 
  1669  0FEA                     	;# 
  1670  0FEB                     	;# 
  1671  0FED                     	;# 
  1672  0FEE                     	;# 
  1673  0FEF                     	;# 
  1674  0000                     	;# 
  1675  0001                     	;# 
  1676  0002                     	;# 
  1677  0003                     	;# 
  1678  0004                     	;# 
  1679  0005                     	;# 
  1680  0006                     	;# 
  1681  0007                     	;# 
  1682  0008                     	;# 
  1683  0009                     	;# 
  1684  000A                     	;# 
  1685  000B                     	;# 
  1686  000C                     	;# 
  1687  000D                     	;# 
  1688  000E                     	;# 
  1689  0010                     	;# 
  1690  0011                     	;# 
  1691  0012                     	;# 
  1692  0013                     	;# 
  1693  0016                     	;# 
  1694  0017                     	;# 
  1695  0018                     	;# 
  1696  001C                     	;# 
  1697  001C                     	;# 
  1698  001D                     	;# 
  1699  001D                     	;# 
  1700  001E                     	;# 
  1701  001F                     	;# 
  1702  008C                     	;# 
  1703  008C                     	;# 
  1704  008D                     	;# 
  1705  008E                     	;# 
  1706  008E                     	;# 
  1707  008F                     	;# 
  1708  0090                     	;# 
  1709  0090                     	;# 
  1710  0091                     	;# 
  1711  0093                     	;# 
  1712  0094                     	;# 
  1713  0095                     	;# 
  1714  0096                     	;# 
  1715  0097                     	;# 
  1716  0098                     	;# 
  1717  0099                     	;# 
  1718  009A                     	;# 
  1719  009B                     	;# 
  1720  009C                     	;# 
  1721  009D                     	;# 
  1722  009E                     	;# 
  1723  010C                     	;# 
  1724  010D                     	;# 
  1725  010E                     	;# 
  1726  010E                     	;# 
  1727  010F                     	;# 
  1728  0110                     	;# 
  1729  0110                     	;# 
  1730  0111                     	;# 
  1731  0112                     	;# 
  1732  0112                     	;# 
  1733  0113                     	;# 
  1734  0114                     	;# 
  1735  0114                     	;# 
  1736  0115                     	;# 
  1737  0116                     	;# 
  1738  0116                     	;# 
  1739  0117                     	;# 
  1740  0119                     	;# 
  1741  0119                     	;# 
  1742  0119                     	;# 
  1743  011A                     	;# 
  1744  011A                     	;# 
  1745  011A                     	;# 
  1746  011B                     	;# 
  1747  011B                     	;# 
  1748  011B                     	;# 
  1749  011B                     	;# 
  1750  011B                     	;# 
  1751  011C                     	;# 
  1752  011C                     	;# 
  1753  011C                     	;# 
  1754  011D                     	;# 
  1755  011D                     	;# 
  1756  011D                     	;# 
  1757  011E                     	;# 
  1758  011E                     	;# 
  1759  011E                     	;# 
  1760  011F                     	;# 
  1761  011F                     	;# 
  1762  011F                     	;# 
  1763  011F                     	;# 
  1764  011F                     	;# 
  1765  018C                     	;# 
  1766  018D                     	;# 
  1767  018E                     	;# 
  1768  018F                     	;# 
  1769  0190                     	;# 
  1770  0191                     	;# 
  1771  0192                     	;# 
  1772  0196                     	;# 
  1773  0197                     	;# 
  1774  0198                     	;# 
  1775  0199                     	;# 
  1776  019A                     	;# 
  1777  019B                     	;# 
  1778  019C                     	;# 
  1779  020C                     	;# 
  1780  020C                     	;# 
  1781  020D                     	;# 
  1782  020E                     	;# 
  1783  020F                     	;# 
  1784  020F                     	;# 
  1785  0210                     	;# 
  1786  0210                     	;# 
  1787  0211                     	;# 
  1788  0211                     	;# 
  1789  0212                     	;# 
  1790  0212                     	;# 
  1791  0213                     	;# 
  1792  0214                     	;# 
  1793  0215                     	;# 
  1794  0215                     	;# 
  1795  0216                     	;# 
  1796  0216                     	;# 
  1797  0217                     	;# 
  1798  0217                     	;# 
  1799  0218                     	;# 
  1800  0218                     	;# 
  1801  0219                     	;# 
  1802  021A                     	;# 
  1803  021B                     	;# 
  1804  021B                     	;# 
  1805  021C                     	;# 
  1806  021C                     	;# 
  1807  021D                     	;# 
  1808  021D                     	;# 
  1809  021E                     	;# 
  1810  021F                     	;# 
  1811  028C                     	;# 
  1812  028C                     	;# 
  1813  028D                     	;# 
  1814  028D                     	;# 
  1815  028E                     	;# 
  1816  028F                     	;# 
  1817  0290                     	;# 
  1818  0290                     	;# 
  1819  0291                     	;# 
  1820  0292                     	;# 
  1821  0292                     	;# 
  1822  0293                     	;# 
  1823  0293                     	;# 
  1824  0294                     	;# 
  1825  0295                     	;# 
  1826  0296                     	;# 
  1827  0296                     	;# 
  1828  0297                     	;# 
  1829  0298                     	;# 
  1830  0298                     	;# 
  1831  0299                     	;# 
  1832  0299                     	;# 
  1833  029A                     	;# 
  1834  029B                     	;# 
  1835  029C                     	;# 
  1836  029C                     	;# 
  1837  029D                     	;# 
  1838  030C                     	;# 
  1839  030C                     	;# 
  1840  030D                     	;# 
  1841  030E                     	;# 
  1842  030F                     	;# 
  1843  0310                     	;# 
  1844  0310                     	;# 
  1845  0311                     	;# 
  1846  0312                     	;# 
  1847  0313                     	;# 
  1848  0314                     	;# 
  1849  0314                     	;# 
  1850  0315                     	;# 
  1851  0316                     	;# 
  1852  0317                     	;# 
  1853  0318                     	;# 
  1854  0318                     	;# 
  1855  0319                     	;# 
  1856  031A                     	;# 
  1857  031B                     	;# 
  1858  031C                     	;# 
  1859  031C                     	;# 
  1860  031D                     	;# 
  1861  031E                     	;# 
  1862  031F                     	;# 
  1863  038C                     	;# 
  1864  038C                     	;# 
  1865  038D                     	;# 
  1866  038E                     	;# 
  1867  0390                     	;# 
  1868  0390                     	;# 
  1869  0391                     	;# 
  1870  0392                     	;# 
  1871  040C                     	;# 
  1872  040D                     	;# 
  1873  040E                     	;# 
  1874  040F                     	;# 
  1875  0410                     	;# 
  1876  0411                     	;# 
  1877  0416                     	;# 
  1878  0416                     	;# 
  1879  0417                     	;# 
  1880  0418                     	;# 
  1881  0418                     	;# 
  1882  0419                     	;# 
  1883  041A                     	;# 
  1884  041A                     	;# 
  1885  041B                     	;# 
  1886  041C                     	;# 
  1887  041C                     	;# 
  1888  041D                     	;# 
  1889  041E                     	;# 
  1890  041F                     	;# 
  1891  048C                     	;# 
  1892  048C                     	;# 
  1893  048D                     	;# 
  1894  048E                     	;# 
  1895  048F                     	;# 
  1896  048F                     	;# 
  1897  0490                     	;# 
  1898  0491                     	;# 
  1899  0492                     	;# 
  1900  0492                     	;# 
  1901  0493                     	;# 
  1902  0494                     	;# 
  1903  0495                     	;# 
  1904  0495                     	;# 
  1905  0496                     	;# 
  1906  0497                     	;# 
  1907  0498                     	;# 
  1908  0499                     	;# 
  1909  049A                     	;# 
  1910  049B                     	;# 
  1911  049C                     	;# 
  1912  049D                     	;# 
  1913  050C                     	;# 
  1914  050C                     	;# 
  1915  050D                     	;# 
  1916  050E                     	;# 
  1917  050F                     	;# 
  1918  050F                     	;# 
  1919  0510                     	;# 
  1920  0511                     	;# 
  1921  0512                     	;# 
  1922  0512                     	;# 
  1923  0513                     	;# 
  1924  0514                     	;# 
  1925  0515                     	;# 
  1926  0515                     	;# 
  1927  0516                     	;# 
  1928  0517                     	;# 
  1929  0518                     	;# 
  1930  0519                     	;# 
  1931  051A                     	;# 
  1932  051B                     	;# 
  1933  051C                     	;# 
  1934  051D                     	;# 
  1935  058C                     	;# 
  1936  058C                     	;# 
  1937  058D                     	;# 
  1938  058E                     	;# 
  1939  058F                     	;# 
  1940  058F                     	;# 
  1941  0590                     	;# 
  1942  0591                     	;# 
  1943  0592                     	;# 
  1944  0593                     	;# 
  1945  060C                     	;# 
  1946  060D                     	;# 
  1947  060E                     	;# 
  1948  060F                     	;# 
  1949  0610                     	;# 
  1950  0611                     	;# 
  1951  0612                     	;# 
  1952  0613                     	;# 
  1953  0614                     	;# 
  1954  0616                     	;# 
  1955  0617                     	;# 
  1956  0618                     	;# 
  1957  0619                     	;# 
  1958  061A                     	;# 
  1959  061B                     	;# 
  1960  061C                     	;# 
  1961  061D                     	;# 
  1962  061E                     	;# 
  1963  068C                     	;# 
  1964  068D                     	;# 
  1965  068E                     	;# 
  1966  068F                     	;# 
  1967  0690                     	;# 
  1968  0691                     	;# 
  1969  0692                     	;# 
  1970  0693                     	;# 
  1971  0694                     	;# 
  1972  070C                     	;# 
  1973  070D                     	;# 
  1974  070E                     	;# 
  1975  070F                     	;# 
  1976  0710                     	;# 
  1977  0711                     	;# 
  1978  0712                     	;# 
  1979  0713                     	;# 
  1980  0714                     	;# 
  1981  0716                     	;# 
  1982  0717                     	;# 
  1983  0718                     	;# 
  1984  0719                     	;# 
  1985  071A                     	;# 
  1986  071B                     	;# 
  1987  071C                     	;# 
  1988  071D                     	;# 
  1989  071E                     	;# 
  1990  0796                     	;# 
  1991  0797                     	;# 
  1992  0798                     	;# 
  1993  0799                     	;# 
  1994  079A                     	;# 
  1995  079B                     	;# 
  1996  080C                     	;# 
  1997  080D                     	;# 
  1998  080E                     	;# 
  1999  080F                     	;# 
  2000  0810                     	;# 
  2001  0811                     	;# 
  2002  0812                     	;# 
  2003  0813                     	;# 
  2004  0814                     	;# 
  2005  081A                     	;# 
  2006  081B                     	;# 
  2007  081C                     	;# 
  2008  081D                     	;# 
  2009  081E                     	;# 
  2010  081F                     	;# 
  2011  088C                     	;# 
  2012  088D                     	;# 
  2013  088E                     	;# 
  2014  088F                     	;# 
  2015  0890                     	;# 
  2016  0891                     	;# 
  2017  0892                     	;# 
  2018  0893                     	;# 
  2019  0895                     	;# 
  2020  0896                     	;# 
  2021  0897                     	;# 
  2022  0898                     	;# 
  2023  0899                     	;# 
  2024  089A                     	;# 
  2025  089B                     	;# 
  2026  090C                     	;# 
  2027  090E                     	;# 
  2028  090F                     	;# 
  2029  091F                     	;# 
  2030  091F                     	;# 
  2031  098F                     	;# 
  2032  098F                     	;# 
  2033  0990                     	;# 
  2034  0991                     	;# 
  2035  0992                     	;# 
  2036  0993                     	;# 
  2037  0994                     	;# 
  2038  0995                     	;# 
  2039  0996                     	;# 
  2040  0997                     	;# 
  2041  0E0F                     	;# 
  2042  0E10                     	;# 
  2043  0E11                     	;# 
  2044  0E12                     	;# 
  2045  0E13                     	;# 
  2046  0E14                     	;# 
  2047  0E15                     	;# 
  2048  0E16                     	;# 
  2049  0E17                     	;# 
  2050  0E18                     	;# 
  2051  0E19                     	;# 
  2052  0E1A                     	;# 
  2053  0E1B                     	;# 
  2054  0E1C                     	;# 
  2055  0E1D                     	;# 
  2056  0E1E                     	;# 
  2057  0E1F                     	;# 
  2058  0E20                     	;# 
  2059  0E21                     	;# 
  2060  0E22                     	;# 
  2061  0E23                     	;# 
  2062  0E24                     	;# 
  2063  0E25                     	;# 
  2064  0E26                     	;# 
  2065  0E27                     	;# 
  2066  0E28                     	;# 
  2067  0E29                     	;# 
  2068  0E2A                     	;# 
  2069  0E2B                     	;# 
  2070  0E2C                     	;# 
  2071  0E2D                     	;# 
  2072  0E2E                     	;# 
  2073  0E2F                     	;# 
  2074  0E30                     	;# 
  2075  0E31                     	;# 
  2076  0E32                     	;# 
  2077  0E33                     	;# 
  2078  0E34                     	;# 
  2079  0E35                     	;# 
  2080  0E36                     	;# 
  2081  0E37                     	;# 
  2082  0E8F                     	;# 
  2083  0E90                     	;# 
  2084  0E91                     	;# 
  2085  0E92                     	;# 
  2086  0E93                     	;# 
  2087  0E94                     	;# 
  2088  0E95                     	;# 
  2089  0E96                     	;# 
  2090  0E97                     	;# 
  2091  0E9C                     	;# 
  2092  0E9D                     	;# 
  2093  0E9E                     	;# 
  2094  0EA1                     	;# 
  2095  0EA2                     	;# 
  2096  0EA3                     	;# 
  2097  0EA4                     	;# 
  2098  0EA5                     	;# 
  2099  0EA9                     	;# 
  2100  0EAA                     	;# 
  2101  0EAB                     	;# 
  2102  0EAC                     	;# 
  2103  0EB1                     	;# 
  2104  0EB2                     	;# 
  2105  0EB3                     	;# 
  2106  0EB8                     	;# 
  2107  0EB9                     	;# 
  2108  0EBA                     	;# 
  2109  0EBB                     	;# 
  2110  0EBC                     	;# 
  2111  0EBD                     	;# 
  2112  0EBE                     	;# 
  2113  0EC3                     	;# 
  2114  0EC5                     	;# 
  2115  0EC6                     	;# 
  2116  0EC7                     	;# 
  2117  0EC8                     	;# 
  2118  0EC9                     	;# 
  2119  0ECA                     	;# 
  2120  0ECB                     	;# 
  2121  0ECC                     	;# 
  2122  0F10                     	;# 
  2123  0F11                     	;# 
  2124  0F12                     	;# 
  2125  0F13                     	;# 
  2126  0F14                     	;# 
  2127  0F15                     	;# 
  2128  0F16                     	;# 
  2129  0F17                     	;# 
  2130  0F18                     	;# 
  2131  0F19                     	;# 
  2132  0F1A                     	;# 
  2133  0F1B                     	;# 
  2134  0F1C                     	;# 
  2135  0F1D                     	;# 
  2136  0F1E                     	;# 
  2137  0F1F                     	;# 
  2138  0F20                     	;# 
  2139  0F21                     	;# 
  2140  0F22                     	;# 
  2141  0F23                     	;# 
  2142  0F24                     	;# 
  2143  0F25                     	;# 
  2144  0F26                     	;# 
  2145  0F27                     	;# 
  2146  0F38                     	;# 
  2147  0F39                     	;# 
  2148  0F3A                     	;# 
  2149  0F3B                     	;# 
  2150  0F3C                     	;# 
  2151  0F3D                     	;# 
  2152  0F3E                     	;# 
  2153  0F3F                     	;# 
  2154  0F40                     	;# 
  2155  0F41                     	;# 
  2156  0F43                     	;# 
  2157  0F44                     	;# 
  2158  0F45                     	;# 
  2159  0F46                     	;# 
  2160  0F47                     	;# 
  2161  0F48                     	;# 
  2162  0F49                     	;# 
  2163  0F4A                     	;# 
  2164  0F4B                     	;# 
  2165  0F4C                     	;# 
  2166  0F4E                     	;# 
  2167  0F4F                     	;# 
  2168  0F50                     	;# 
  2169  0F51                     	;# 
  2170  0F52                     	;# 
  2171  0F53                     	;# 
  2172  0F54                     	;# 
  2173  0F55                     	;# 
  2174  0F56                     	;# 
  2175  0F57                     	;# 
  2176  0F65                     	;# 
  2177  0F68                     	;# 
  2178  0F69                     	;# 
  2179  0F6A                     	;# 
  2180  0F6B                     	;# 
  2181  0FE4                     	;# 
  2182  0FE5                     	;# 
  2183  0FE6                     	;# 
  2184  0FE7                     	;# 
  2185  0FE8                     	;# 
  2186  0FE9                     	;# 
  2187  0FEA                     	;# 
  2188  0FEB                     	;# 
  2189  0FED                     	;# 
  2190  0FEE                     	;# 
  2191  0FEF                     	;# 
  2192  0000                     	;# 
  2193  0001                     	;# 
  2194  0002                     	;# 
  2195  0003                     	;# 
  2196  0004                     	;# 
  2197  0005                     	;# 
  2198  0006                     	;# 
  2199  0007                     	;# 
  2200  0008                     	;# 
  2201  0009                     	;# 
  2202  000A                     	;# 
  2203  000B                     	;# 
  2204  000C                     	;# 
  2205  000D                     	;# 
  2206  000E                     	;# 
  2207  0010                     	;# 
  2208  0011                     	;# 
  2209  0012                     	;# 
  2210  0013                     	;# 
  2211  0016                     	;# 
  2212  0017                     	;# 
  2213  0018                     	;# 
  2214  001C                     	;# 
  2215  001C                     	;# 
  2216  001D                     	;# 
  2217  001D                     	;# 
  2218  001E                     	;# 
  2219  001F                     	;# 
  2220  008C                     	;# 
  2221  008C                     	;# 
  2222  008D                     	;# 
  2223  008E                     	;# 
  2224  008E                     	;# 
  2225  008F                     	;# 
  2226  0090                     	;# 
  2227  0090                     	;# 
  2228  0091                     	;# 
  2229  0093                     	;# 
  2230  0094                     	;# 
  2231  0095                     	;# 
  2232  0096                     	;# 
  2233  0097                     	;# 
  2234  0098                     	;# 
  2235  0099                     	;# 
  2236  009A                     	;# 
  2237  009B                     	;# 
  2238  009C                     	;# 
  2239  009D                     	;# 
  2240  009E                     	;# 
  2241  010C                     	;# 
  2242  010D                     	;# 
  2243  010E                     	;# 
  2244  010E                     	;# 
  2245  010F                     	;# 
  2246  0110                     	;# 
  2247  0110                     	;# 
  2248  0111                     	;# 
  2249  0112                     	;# 
  2250  0112                     	;# 
  2251  0113                     	;# 
  2252  0114                     	;# 
  2253  0114                     	;# 
  2254  0115                     	;# 
  2255  0116                     	;# 
  2256  0116                     	;# 
  2257  0117                     	;# 
  2258  0119                     	;# 
  2259  0119                     	;# 
  2260  0119                     	;# 
  2261  011A                     	;# 
  2262  011A                     	;# 
  2263  011A                     	;# 
  2264  011B                     	;# 
  2265  011B                     	;# 
  2266  011B                     	;# 
  2267  011B                     	;# 
  2268  011B                     	;# 
  2269  011C                     	;# 
  2270  011C                     	;# 
  2271  011C                     	;# 
  2272  011D                     	;# 
  2273  011D                     	;# 
  2274  011D                     	;# 
  2275  011E                     	;# 
  2276  011E                     	;# 
  2277  011E                     	;# 
  2278  011F                     	;# 
  2279  011F                     	;# 
  2280  011F                     	;# 
  2281  011F                     	;# 
  2282  011F                     	;# 
  2283  018C                     	;# 
  2284  018D                     	;# 
  2285  018E                     	;# 
  2286  018F                     	;# 
  2287  0190                     	;# 
  2288  0191                     	;# 
  2289  0192                     	;# 
  2290  0196                     	;# 
  2291  0197                     	;# 
  2292  0198                     	;# 
  2293  0199                     	;# 
  2294  019A                     	;# 
  2295  019B                     	;# 
  2296  019C                     	;# 
  2297  020C                     	;# 
  2298  020C                     	;# 
  2299  020D                     	;# 
  2300  020E                     	;# 
  2301  020F                     	;# 
  2302  020F                     	;# 
  2303  0210                     	;# 
  2304  0210                     	;# 
  2305  0211                     	;# 
  2306  0211                     	;# 
  2307  0212                     	;# 
  2308  0212                     	;# 
  2309  0213                     	;# 
  2310  0214                     	;# 
  2311  0215                     	;# 
  2312  0215                     	;# 
  2313  0216                     	;# 
  2314  0216                     	;# 
  2315  0217                     	;# 
  2316  0217                     	;# 
  2317  0218                     	;# 
  2318  0218                     	;# 
  2319  0219                     	;# 
  2320  021A                     	;# 
  2321  021B                     	;# 
  2322  021B                     	;# 
  2323  021C                     	;# 
  2324  021C                     	;# 
  2325  021D                     	;# 
  2326  021D                     	;# 
  2327  021E                     	;# 
  2328  021F                     	;# 
  2329  028C                     	;# 
  2330  028C                     	;# 
  2331  028D                     	;# 
  2332  028D                     	;# 
  2333  028E                     	;# 
  2334  028F                     	;# 
  2335  0290                     	;# 
  2336  0290                     	;# 
  2337  0291                     	;# 
  2338  0292                     	;# 
  2339  0292                     	;# 
  2340  0293                     	;# 
  2341  0293                     	;# 
  2342  0294                     	;# 
  2343  0295                     	;# 
  2344  0296                     	;# 
  2345  0296                     	;# 
  2346  0297                     	;# 
  2347  0298                     	;# 
  2348  0298                     	;# 
  2349  0299                     	;# 
  2350  0299                     	;# 
  2351  029A                     	;# 
  2352  029B                     	;# 
  2353  029C                     	;# 
  2354  029C                     	;# 
  2355  029D                     	;# 
  2356  030C                     	;# 
  2357  030C                     	;# 
  2358  030D                     	;# 
  2359  030E                     	;# 
  2360  030F                     	;# 
  2361  0310                     	;# 
  2362  0310                     	;# 
  2363  0311                     	;# 
  2364  0312                     	;# 
  2365  0313                     	;# 
  2366  0314                     	;# 
  2367  0314                     	;# 
  2368  0315                     	;# 
  2369  0316                     	;# 
  2370  0317                     	;# 
  2371  0318                     	;# 
  2372  0318                     	;# 
  2373  0319                     	;# 
  2374  031A                     	;# 
  2375  031B                     	;# 
  2376  031C                     	;# 
  2377  031C                     	;# 
  2378  031D                     	;# 
  2379  031E                     	;# 
  2380  031F                     	;# 
  2381  038C                     	;# 
  2382  038C                     	;# 
  2383  038D                     	;# 
  2384  038E                     	;# 
  2385  0390                     	;# 
  2386  0390                     	;# 
  2387  0391                     	;# 
  2388  0392                     	;# 
  2389  040C                     	;# 
  2390  040D                     	;# 
  2391  040E                     	;# 
  2392  040F                     	;# 
  2393  0410                     	;# 
  2394  0411                     	;# 
  2395  0416                     	;# 
  2396  0416                     	;# 
  2397  0417                     	;# 
  2398  0418                     	;# 
  2399  0418                     	;# 
  2400  0419                     	;# 
  2401  041A                     	;# 
  2402  041A                     	;# 
  2403  041B                     	;# 
  2404  041C                     	;# 
  2405  041C                     	;# 
  2406  041D                     	;# 
  2407  041E                     	;# 
  2408  041F                     	;# 
  2409  048C                     	;# 
  2410  048C                     	;# 
  2411  048D                     	;# 
  2412  048E                     	;# 
  2413  048F                     	;# 
  2414  048F                     	;# 
  2415  0490                     	;# 
  2416  0491                     	;# 
  2417  0492                     	;# 
  2418  0492                     	;# 
  2419  0493                     	;# 
  2420  0494                     	;# 
  2421  0495                     	;# 
  2422  0495                     	;# 
  2423  0496                     	;# 
  2424  0497                     	;# 
  2425  0498                     	;# 
  2426  0499                     	;# 
  2427  049A                     	;# 
  2428  049B                     	;# 
  2429  049C                     	;# 
  2430  049D                     	;# 
  2431  050C                     	;# 
  2432  050C                     	;# 
  2433  050D                     	;# 
  2434  050E                     	;# 
  2435  050F                     	;# 
  2436  050F                     	;# 
  2437  0510                     	;# 
  2438  0511                     	;# 
  2439  0512                     	;# 
  2440  0512                     	;# 
  2441  0513                     	;# 
  2442  0514                     	;# 
  2443  0515                     	;# 
  2444  0515                     	;# 
  2445  0516                     	;# 
  2446  0517                     	;# 
  2447  0518                     	;# 
  2448  0519                     	;# 
  2449  051A                     	;# 
  2450  051B                     	;# 
  2451  051C                     	;# 
  2452  051D                     	;# 
  2453  058C                     	;# 
  2454  058C                     	;# 
  2455  058D                     	;# 
  2456  058E                     	;# 
  2457  058F                     	;# 
  2458  058F                     	;# 
  2459  0590                     	;# 
  2460  0591                     	;# 
  2461  0592                     	;# 
  2462  0593                     	;# 
  2463  060C                     	;# 
  2464  060D                     	;# 
  2465  060E                     	;# 
  2466  060F                     	;# 
  2467  0610                     	;# 
  2468  0611                     	;# 
  2469  0612                     	;# 
  2470  0613                     	;# 
  2471  0614                     	;# 
  2472  0616                     	;# 
  2473  0617                     	;# 
  2474  0618                     	;# 
  2475  0619                     	;# 
  2476  061A                     	;# 
  2477  061B                     	;# 
  2478  061C                     	;# 
  2479  061D                     	;# 
  2480  061E                     	;# 
  2481  068C                     	;# 
  2482  068D                     	;# 
  2483  068E                     	;# 
  2484  068F                     	;# 
  2485  0690                     	;# 
  2486  0691                     	;# 
  2487  0692                     	;# 
  2488  0693                     	;# 
  2489  0694                     	;# 
  2490  070C                     	;# 
  2491  070D                     	;# 
  2492  070E                     	;# 
  2493  070F                     	;# 
  2494  0710                     	;# 
  2495  0711                     	;# 
  2496  0712                     	;# 
  2497  0713                     	;# 
  2498  0714                     	;# 
  2499  0716                     	;# 
  2500  0717                     	;# 
  2501  0718                     	;# 
  2502  0719                     	;# 
  2503  071A                     	;# 
  2504  071B                     	;# 
  2505  071C                     	;# 
  2506  071D                     	;# 
  2507  071E                     	;# 
  2508  0796                     	;# 
  2509  0797                     	;# 
  2510  0798                     	;# 
  2511  0799                     	;# 
  2512  079A                     	;# 
  2513  079B                     	;# 
  2514  080C                     	;# 
  2515  080D                     	;# 
  2516  080E                     	;# 
  2517  080F                     	;# 
  2518  0810                     	;# 
  2519  0811                     	;# 
  2520  0812                     	;# 
  2521  0813                     	;# 
  2522  0814                     	;# 
  2523  081A                     	;# 
  2524  081B                     	;# 
  2525  081C                     	;# 
  2526  081D                     	;# 
  2527  081E                     	;# 
  2528  081F                     	;# 
  2529  088C                     	;# 
  2530  088D                     	;# 
  2531  088E                     	;# 
  2532  088F                     	;# 
  2533  0890                     	;# 
  2534  0891                     	;# 
  2535  0892                     	;# 
  2536  0893                     	;# 
  2537  0895                     	;# 
  2538  0896                     	;# 
  2539  0897                     	;# 
  2540  0898                     	;# 
  2541  0899                     	;# 
  2542  089A                     	;# 
  2543  089B                     	;# 
  2544  090C                     	;# 
  2545  090E                     	;# 
  2546  090F                     	;# 
  2547  091F                     	;# 
  2548  091F                     	;# 
  2549  098F                     	;# 
  2550  098F                     	;# 
  2551  0990                     	;# 
  2552  0991                     	;# 
  2553  0992                     	;# 
  2554  0993                     	;# 
  2555  0994                     	;# 
  2556  0995                     	;# 
  2557  0996                     	;# 
  2558  0997                     	;# 
  2559  0E0F                     	;# 
  2560  0E10                     	;# 
  2561  0E11                     	;# 
  2562  0E12                     	;# 
  2563  0E13                     	;# 
  2564  0E14                     	;# 
  2565  0E15                     	;# 
  2566  0E16                     	;# 
  2567  0E17                     	;# 
  2568  0E18                     	;# 
  2569  0E19                     	;# 
  2570  0E1A                     	;# 
  2571  0E1B                     	;# 
  2572  0E1C                     	;# 
  2573  0E1D                     	;# 
  2574  0E1E                     	;# 
  2575  0E1F                     	;# 
  2576  0E20                     	;# 
  2577  0E21                     	;# 
  2578  0E22                     	;# 
  2579  0E23                     	;# 
  2580  0E24                     	;# 
  2581  0E25                     	;# 
  2582  0E26                     	;# 
  2583  0E27                     	;# 
  2584  0E28                     	;# 
  2585  0E29                     	;# 
  2586  0E2A                     	;# 
  2587  0E2B                     	;# 
  2588  0E2C                     	;# 
  2589  0E2D                     	;# 
  2590  0E2E                     	;# 
  2591  0E2F                     	;# 
  2592  0E30                     	;# 
  2593  0E31                     	;# 
  2594  0E32                     	;# 
  2595  0E33                     	;# 
  2596  0E34                     	;# 
  2597  0E35                     	;# 
  2598  0E36                     	;# 
  2599  0E37                     	;# 
  2600  0E8F                     	;# 
  2601  0E90                     	;# 
  2602  0E91                     	;# 
  2603  0E92                     	;# 
  2604  0E93                     	;# 
  2605  0E94                     	;# 
  2606  0E95                     	;# 
  2607  0E96                     	;# 
  2608  0E97                     	;# 
  2609  0E9C                     	;# 
  2610  0E9D                     	;# 
  2611  0E9E                     	;# 
  2612  0EA1                     	;# 
  2613  0EA2                     	;# 
  2614  0EA3                     	;# 
  2615  0EA4                     	;# 
  2616  0EA5                     	;# 
  2617  0EA9                     	;# 
  2618  0EAA                     	;# 
  2619  0EAB                     	;# 
  2620  0EAC                     	;# 
  2621  0EB1                     	;# 
  2622  0EB2                     	;# 
  2623  0EB3                     	;# 
  2624  0EB8                     	;# 
  2625  0EB9                     	;# 
  2626  0EBA                     	;# 
  2627  0EBB                     	;# 
  2628  0EBC                     	;# 
  2629  0EBD                     	;# 
  2630  0EBE                     	;# 
  2631  0EC3                     	;# 
  2632  0EC5                     	;# 
  2633  0EC6                     	;# 
  2634  0EC7                     	;# 
  2635  0EC8                     	;# 
  2636  0EC9                     	;# 
  2637  0ECA                     	;# 
  2638  0ECB                     	;# 
  2639  0ECC                     	;# 
  2640  0F10                     	;# 
  2641  0F11                     	;# 
  2642  0F12                     	;# 
  2643  0F13                     	;# 
  2644  0F14                     	;# 
  2645  0F15                     	;# 
  2646  0F16                     	;# 
  2647  0F17                     	;# 
  2648  0F18                     	;# 
  2649  0F19                     	;# 
  2650  0F1A                     	;# 
  2651  0F1B                     	;# 
  2652  0F1C                     	;# 
  2653  0F1D                     	;# 
  2654  0F1E                     	;# 
  2655  0F1F                     	;# 
  2656  0F20                     	;# 
  2657  0F21                     	;# 
  2658  0F22                     	;# 
  2659  0F23                     	;# 
  2660  0F24                     	;# 
  2661  0F25                     	;# 
  2662  0F26                     	;# 
  2663  0F27                     	;# 
  2664  0F38                     	;# 
  2665  0F39                     	;# 
  2666  0F3A                     	;# 
  2667  0F3B                     	;# 
  2668  0F3C                     	;# 
  2669  0F3D                     	;# 
  2670  0F3E                     	;# 
  2671  0F3F                     	;# 
  2672  0F40                     	;# 
  2673  0F41                     	;# 
  2674  0F43                     	;# 
  2675  0F44                     	;# 
  2676  0F45                     	;# 
  2677  0F46                     	;# 
  2678  0F47                     	;# 
  2679  0F48                     	;# 
  2680  0F49                     	;# 
  2681  0F4A                     	;# 
  2682  0F4B                     	;# 
  2683  0F4C                     	;# 
  2684  0F4E                     	;# 
  2685  0F4F                     	;# 
  2686  0F50                     	;# 
  2687  0F51                     	;# 
  2688  0F52                     	;# 
  2689  0F53                     	;# 
  2690  0F54                     	;# 
  2691  0F55                     	;# 
  2692  0F56                     	;# 
  2693  0F57                     	;# 
  2694  0F65                     	;# 
  2695  0F68                     	;# 
  2696  0F69                     	;# 
  2697  0F6A                     	;# 
  2698  0F6B                     	;# 
  2699  0FE4                     	;# 
  2700  0FE5                     	;# 
  2701  0FE6                     	;# 
  2702  0FE7                     	;# 
  2703  0FE8                     	;# 
  2704  0FE9                     	;# 
  2705  0FEA                     	;# 
  2706  0FEB                     	;# 
  2707  0FED                     	;# 
  2708  0FEE                     	;# 
  2709  0FEF                     	;# 
  2710  0000                     	;# 
  2711  0001                     	;# 
  2712  0002                     	;# 
  2713  0003                     	;# 
  2714  0004                     	;# 
  2715  0005                     	;# 
  2716  0006                     	;# 
  2717  0007                     	;# 
  2718  0008                     	;# 
  2719  0009                     	;# 
  2720  000A                     	;# 
  2721  000B                     	;# 
  2722  000C                     	;# 
  2723  000D                     	;# 
  2724  000E                     	;# 
  2725  0010                     	;# 
  2726  0011                     	;# 
  2727  0012                     	;# 
  2728  0013                     	;# 
  2729  0016                     	;# 
  2730  0017                     	;# 
  2731  0018                     	;# 
  2732  001C                     	;# 
  2733  001C                     	;# 
  2734  001D                     	;# 
  2735  001D                     	;# 
  2736  001E                     	;# 
  2737  001F                     	;# 
  2738  008C                     	;# 
  2739  008C                     	;# 
  2740  008D                     	;# 
  2741  008E                     	;# 
  2742  008E                     	;# 
  2743  008F                     	;# 
  2744  0090                     	;# 
  2745  0090                     	;# 
  2746  0091                     	;# 
  2747  0093                     	;# 
  2748  0094                     	;# 
  2749  0095                     	;# 
  2750  0096                     	;# 
  2751  0097                     	;# 
  2752  0098                     	;# 
  2753  0099                     	;# 
  2754  009A                     	;# 
  2755  009B                     	;# 
  2756  009C                     	;# 
  2757  009D                     	;# 
  2758  009E                     	;# 
  2759  010C                     	;# 
  2760  010D                     	;# 
  2761  010E                     	;# 
  2762  010E                     	;# 
  2763  010F                     	;# 
  2764  0110                     	;# 
  2765  0110                     	;# 
  2766  0111                     	;# 
  2767  0112                     	;# 
  2768  0112                     	;# 
  2769  0113                     	;# 
  2770  0114                     	;# 
  2771  0114                     	;# 
  2772  0115                     	;# 
  2773  0116                     	;# 
  2774  0116                     	;# 
  2775  0117                     	;# 
  2776  0119                     	;# 
  2777  0119                     	;# 
  2778  0119                     	;# 
  2779  011A                     	;# 
  2780  011A                     	;# 
  2781  011A                     	;# 
  2782  011B                     	;# 
  2783  011B                     	;# 
  2784  011B                     	;# 
  2785  011B                     	;# 
  2786  011B                     	;# 
  2787  011C                     	;# 
  2788  011C                     	;# 
  2789  011C                     	;# 
  2790  011D                     	;# 
  2791  011D                     	;# 
  2792  011D                     	;# 
  2793  011E                     	;# 
  2794  011E                     	;# 
  2795  011E                     	;# 
  2796  011F                     	;# 
  2797  011F                     	;# 
  2798  011F                     	;# 
  2799  011F                     	;# 
  2800  011F                     	;# 
  2801  018C                     	;# 
  2802  018D                     	;# 
  2803  018E                     	;# 
  2804  018F                     	;# 
  2805  0190                     	;# 
  2806  0191                     	;# 
  2807  0192                     	;# 
  2808  0196                     	;# 
  2809  0197                     	;# 
  2810  0198                     	;# 
  2811  0199                     	;# 
  2812  019A                     	;# 
  2813  019B                     	;# 
  2814  019C                     	;# 
  2815  020C                     	;# 
  2816  020C                     	;# 
  2817  020D                     	;# 
  2818  020E                     	;# 
  2819  020F                     	;# 
  2820  020F                     	;# 
  2821  0210                     	;# 
  2822  0210                     	;# 
  2823  0211                     	;# 
  2824  0211                     	;# 
  2825  0212                     	;# 
  2826  0212                     	;# 
  2827  0213                     	;# 
  2828  0214                     	;# 
  2829  0215                     	;# 
  2830  0215                     	;# 
  2831  0216                     	;# 
  2832  0216                     	;# 
  2833  0217                     	;# 
  2834  0217                     	;# 
  2835  0218                     	;# 
  2836  0218                     	;# 
  2837  0219                     	;# 
  2838  021A                     	;# 
  2839  021B                     	;# 
  2840  021B                     	;# 
  2841  021C                     	;# 
  2842  021C                     	;# 
  2843  021D                     	;# 
  2844  021D                     	;# 
  2845  021E                     	;# 
  2846  021F                     	;# 
  2847  028C                     	;# 
  2848  028C                     	;# 
  2849  028D                     	;# 
  2850  028D                     	;# 
  2851  028E                     	;# 
  2852  028F                     	;# 
  2853  0290                     	;# 
  2854  0290                     	;# 
  2855  0291                     	;# 
  2856  0292                     	;# 
  2857  0292                     	;# 
  2858  0293                     	;# 
  2859  0293                     	;# 
  2860  0294                     	;# 
  2861  0295                     	;# 
  2862  0296                     	;# 
  2863  0296                     	;# 
  2864  0297                     	;# 
  2865  0298                     	;# 
  2866  0298                     	;# 
  2867  0299                     	;# 
  2868  0299                     	;# 
  2869  029A                     	;# 
  2870  029B                     	;# 
  2871  029C                     	;# 
  2872  029C                     	;# 
  2873  029D                     	;# 
  2874  030C                     	;# 
  2875  030C                     	;# 
  2876  030D                     	;# 
  2877  030E                     	;# 
  2878  030F                     	;# 
  2879  0310                     	;# 
  2880  0310                     	;# 
  2881  0311                     	;# 
  2882  0312                     	;# 
  2883  0313                     	;# 
  2884  0314                     	;# 
  2885  0314                     	;# 
  2886  0315                     	;# 
  2887  0316                     	;# 
  2888  0317                     	;# 
  2889  0318                     	;# 
  2890  0318                     	;# 
  2891  0319                     	;# 
  2892  031A                     	;# 
  2893  031B                     	;# 
  2894  031C                     	;# 
  2895  031C                     	;# 
  2896  031D                     	;# 
  2897  031E                     	;# 
  2898  031F                     	;# 
  2899  038C                     	;# 
  2900  038C                     	;# 
  2901  038D                     	;# 
  2902  038E                     	;# 
  2903  0390                     	;# 
  2904  0390                     	;# 
  2905  0391                     	;# 
  2906  0392                     	;# 
  2907  040C                     	;# 
  2908  040D                     	;# 
  2909  040E                     	;# 
  2910  040F                     	;# 
  2911  0410                     	;# 
  2912  0411                     	;# 
  2913  0416                     	;# 
  2914  0416                     	;# 
  2915  0417                     	;# 
  2916  0418                     	;# 
  2917  0418                     	;# 
  2918  0419                     	;# 
  2919  041A                     	;# 
  2920  041A                     	;# 
  2921  041B                     	;# 
  2922  041C                     	;# 
  2923  041C                     	;# 
  2924  041D                     	;# 
  2925  041E                     	;# 
  2926  041F                     	;# 
  2927  048C                     	;# 
  2928  048C                     	;# 
  2929  048D                     	;# 
  2930  048E                     	;# 
  2931  048F                     	;# 
  2932  048F                     	;# 
  2933  0490                     	;# 
  2934  0491                     	;# 
  2935  0492                     	;# 
  2936  0492                     	;# 
  2937  0493                     	;# 
  2938  0494                     	;# 
  2939  0495                     	;# 
  2940  0495                     	;# 
  2941  0496                     	;# 
  2942  0497                     	;# 
  2943  0498                     	;# 
  2944  0499                     	;# 
  2945  049A                     	;# 
  2946  049B                     	;# 
  2947  049C                     	;# 
  2948  049D                     	;# 
  2949  050C                     	;# 
  2950  050C                     	;# 
  2951  050D                     	;# 
  2952  050E                     	;# 
  2953  050F                     	;# 
  2954  050F                     	;# 
  2955  0510                     	;# 
  2956  0511                     	;# 
  2957  0512                     	;# 
  2958  0512                     	;# 
  2959  0513                     	;# 
  2960  0514                     	;# 
  2961  0515                     	;# 
  2962  0515                     	;# 
  2963  0516                     	;# 
  2964  0517                     	;# 
  2965  0518                     	;# 
  2966  0519                     	;# 
  2967  051A                     	;# 
  2968  051B                     	;# 
  2969  051C                     	;# 
  2970  051D                     	;# 
  2971  058C                     	;# 
  2972  058C                     	;# 
  2973  058D                     	;# 
  2974  058E                     	;# 
  2975  058F                     	;# 
  2976  058F                     	;# 
  2977  0590                     	;# 
  2978  0591                     	;# 
  2979  0592                     	;# 
  2980  0593                     	;# 
  2981  060C                     	;# 
  2982  060D                     	;# 
  2983  060E                     	;# 
  2984  060F                     	;# 
  2985  0610                     	;# 
  2986  0611                     	;# 
  2987  0612                     	;# 
  2988  0613                     	;# 
  2989  0614                     	;# 
  2990  0616                     	;# 
  2991  0617                     	;# 
  2992  0618                     	;# 
  2993  0619                     	;# 
  2994  061A                     	;# 
  2995  061B                     	;# 
  2996  061C                     	;# 
  2997  061D                     	;# 
  2998  061E                     	;# 
  2999  068C                     	;# 
  3000  068D                     	;# 
  3001  068E                     	;# 
  3002  068F                     	;# 
  3003  0690                     	;# 
  3004  0691                     	;# 
  3005  0692                     	;# 
  3006  0693                     	;# 
  3007  0694                     	;# 
  3008  070C                     	;# 
  3009  070D                     	;# 
  3010  070E                     	;# 
  3011  070F                     	;# 
  3012  0710                     	;# 
  3013  0711                     	;# 
  3014  0712                     	;# 
  3015  0713                     	;# 
  3016  0714                     	;# 
  3017  0716                     	;# 
  3018  0717                     	;# 
  3019  0718                     	;# 
  3020  0719                     	;# 
  3021  071A                     	;# 
  3022  071B                     	;# 
  3023  071C                     	;# 
  3024  071D                     	;# 
  3025  071E                     	;# 
  3026  0796                     	;# 
  3027  0797                     	;# 
  3028  0798                     	;# 
  3029  0799                     	;# 
  3030  079A                     	;# 
  3031  079B                     	;# 
  3032  080C                     	;# 
  3033  080D                     	;# 
  3034  080E                     	;# 
  3035  080F                     	;# 
  3036  0810                     	;# 
  3037  0811                     	;# 
  3038  0812                     	;# 
  3039  0813                     	;# 
  3040  0814                     	;# 
  3041  081A                     	;# 
  3042  081B                     	;# 
  3043  081C                     	;# 
  3044  081D                     	;# 
  3045  081E                     	;# 
  3046  081F                     	;# 
  3047  088C                     	;# 
  3048  088D                     	;# 
  3049  088E                     	;# 
  3050  088F                     	;# 
  3051  0890                     	;# 
  3052  0891                     	;# 
  3053  0892                     	;# 
  3054  0893                     	;# 
  3055  0895                     	;# 
  3056  0896                     	;# 
  3057  0897                     	;# 
  3058  0898                     	;# 
  3059  0899                     	;# 
  3060  089A                     	;# 
  3061  089B                     	;# 
  3062  090C                     	;# 
  3063  090E                     	;# 
  3064  090F                     	;# 
  3065  091F                     	;# 
  3066  091F                     	;# 
  3067  098F                     	;# 
  3068  098F                     	;# 
  3069  0990                     	;# 
  3070  0991                     	;# 
  3071  0992                     	;# 
  3072  0993                     	;# 
  3073  0994                     	;# 
  3074  0995                     	;# 
  3075  0996                     	;# 
  3076  0997                     	;# 
  3077  0E0F                     	;# 
  3078  0E10                     	;# 
  3079  0E11                     	;# 
  3080  0E12                     	;# 
  3081  0E13                     	;# 
  3082  0E14                     	;# 
  3083  0E15                     	;# 
  3084  0E16                     	;# 
  3085  0E17                     	;# 
  3086  0E18                     	;# 
  3087  0E19                     	;# 
  3088  0E1A                     	;# 
  3089  0E1B                     	;# 
  3090  0E1C                     	;# 
  3091  0E1D                     	;# 
  3092  0E1E                     	;# 
  3093  0E1F                     	;# 
  3094  0E20                     	;# 
  3095  0E21                     	;# 
  3096  0E22                     	;# 
  3097  0E23                     	;# 
  3098  0E24                     	;# 
  3099  0E25                     	;# 
  3100  0E26                     	;# 
  3101  0E27                     	;# 
  3102  0E28                     	;# 
  3103  0E29                     	;# 
  3104  0E2A                     	;# 
  3105  0E2B                     	;# 
  3106  0E2C                     	;# 
  3107  0E2D                     	;# 
  3108  0E2E                     	;# 
  3109  0E2F                     	;# 
  3110  0E30                     	;# 
  3111  0E31                     	;# 
  3112  0E32                     	;# 
  3113  0E33                     	;# 
  3114  0E34                     	;# 
  3115  0E35                     	;# 
  3116  0E36                     	;# 
  3117  0E37                     	;# 
  3118  0E8F                     	;# 
  3119  0E90                     	;# 
  3120  0E91                     	;# 
  3121  0E92                     	;# 
  3122  0E93                     	;# 
  3123  0E94                     	;# 
  3124  0E95                     	;# 
  3125  0E96                     	;# 
  3126  0E97                     	;# 
  3127  0E9C                     	;# 
  3128  0E9D                     	;# 
  3129  0E9E                     	;# 
  3130  0EA1                     	;# 
  3131  0EA2                     	;# 
  3132  0EA3                     	;# 
  3133  0EA4                     	;# 
  3134  0EA5                     	;# 
  3135  0EA9                     	;# 
  3136  0EAA                     	;# 
  3137  0EAB                     	;# 
  3138  0EAC                     	;# 
  3139  0EB1                     	;# 
  3140  0EB2                     	;# 
  3141  0EB3                     	;# 
  3142  0EB8                     	;# 
  3143  0EB9                     	;# 
  3144  0EBA                     	;# 
  3145  0EBB                     	;# 
  3146  0EBC                     	;# 
  3147  0EBD                     	;# 
  3148  0EBE                     	;# 
  3149  0EC3                     	;# 
  3150  0EC5                     	;# 
  3151  0EC6                     	;# 
  3152  0EC7                     	;# 
  3153  0EC8                     	;# 
  3154  0EC9                     	;# 
  3155  0ECA                     	;# 
  3156  0ECB                     	;# 
  3157  0ECC                     	;# 
  3158  0F10                     	;# 
  3159  0F11                     	;# 
  3160  0F12                     	;# 
  3161  0F13                     	;# 
  3162  0F14                     	;# 
  3163  0F15                     	;# 
  3164  0F16                     	;# 
  3165  0F17                     	;# 
  3166  0F18                     	;# 
  3167  0F19                     	;# 
  3168  0F1A                     	;# 
  3169  0F1B                     	;# 
  3170  0F1C                     	;# 
  3171  0F1D                     	;# 
  3172  0F1E                     	;# 
  3173  0F1F                     	;# 
  3174  0F20                     	;# 
  3175  0F21                     	;# 
  3176  0F22                     	;# 
  3177  0F23                     	;# 
  3178  0F24                     	;# 
  3179  0F25                     	;# 
  3180  0F26                     	;# 
  3181  0F27                     	;# 
  3182  0F38                     	;# 
  3183  0F39                     	;# 
  3184  0F3A                     	;# 
  3185  0F3B                     	;# 
  3186  0F3C                     	;# 
  3187  0F3D                     	;# 
  3188  0F3E                     	;# 
  3189  0F3F                     	;# 
  3190  0F40                     	;# 
  3191  0F41                     	;# 
  3192  0F43                     	;# 
  3193  0F44                     	;# 
  3194  0F45                     	;# 
  3195  0F46                     	;# 
  3196  0F47                     	;# 
  3197  0F48                     	;# 
  3198  0F49                     	;# 
  3199  0F4A                     	;# 
  3200  0F4B                     	;# 
  3201  0F4C                     	;# 
  3202  0F4E                     	;# 
  3203  0F4F                     	;# 
  3204  0F50                     	;# 
  3205  0F51                     	;# 
  3206  0F52                     	;# 
  3207  0F53                     	;# 
  3208  0F54                     	;# 
  3209  0F55                     	;# 
  3210  0F56                     	;# 
  3211  0F57                     	;# 
  3212  0F65                     	;# 
  3213  0F68                     	;# 
  3214  0F69                     	;# 
  3215  0F6A                     	;# 
  3216  0F6B                     	;# 
  3217  0FE4                     	;# 
  3218  0FE5                     	;# 
  3219  0FE6                     	;# 
  3220  0FE7                     	;# 
  3221  0FE8                     	;# 
  3222  0FE9                     	;# 
  3223  0FEA                     	;# 
  3224  0FEB                     	;# 
  3225  0FED                     	;# 
  3226  0FEE                     	;# 
  3227  0FEF                     	;# 
  3228  0013                     _TRISCbits	set	19
  3229  0013                     _TRISC	set	19
  3230  0012                     _TRISB	set	18
  3231  000D                     _PORTB	set	13
  3232  0017                     _LATB	set	23
  3233  0011                     _TRISA	set	17
  3234  000C                     _PORTA	set	12
  3235  0016                     _LATA	set	22
  3236  009B                     _ADCAP	set	155
  3237  009E                     _ADPCH	set	158
  3238  009A                     _ADREF	set	154
  3239  0098                     _ADCLK	set	152
  3240  0095                     _ADCON2	set	149
  3241  0094                     _ADCON1	set	148
  3242  0093                     _ADCON0	set	147
  3243  011A                     _TX1REG	set	282
  3244  011C                     _SP1BRGH	set	284
  3245  011B                     _SP1BRGL	set	283
  3246  011E                     _TX1STA	set	286
  3247  011D                     _RC1STA	set	285
  3248  011F                     _BAUD1CON	set	287
  3249  018C                     _SSP1BUF	set	396
  3250  0191                     _SSP1CON2bits	set	401
  3251  018D                     _SSP1ADD	set	397
  3252  0192                     _SSP1CON3	set	402
  3253  0190                     _SSP1CON1	set	400
  3254  018F                     _SSP1STAT	set	399
  3255  070F                     _PIR3bits	set	1807
  3256  070F                     _PIR3	set	1807
  3257  0EC6                     _SSP1DATPPS	set	3782
  3258  0EC5                     _SSP1CLKPPS	set	3781
  3259  0ECB                     _RXPPS	set	3787
  3260  0F24                     _RC4PPS	set	3876
  3261  0F23                     _RC3PPS	set	3875
  3262  0F4E                     _ANSELCbits	set	3918
  3263  0F20                     _RC0PPS	set	3872
  3264  0F4E                     _ANSELC	set	3918
  3265  0F43                     _ANSELB	set	3907
  3266  0F38                     _ANSELA	set	3896
  3267                           
  3268                           	psect	stringtext1
  3269  1800                     __pstringtext1:
  3270  1800                     STR_4:
  3271  1800  344C               	retlw	76	;'L'
  3272  1801  3461               	retlw	97	;'a'
  3273  1802  3420               	retlw	32	;' '
  3274  1803  3474               	retlw	116	;'t'
  3275  1804  3465               	retlw	101	;'e'
  3276  1805  346D               	retlw	109	;'m'
  3277  1806  3470               	retlw	112	;'p'
  3278  1807  3465               	retlw	101	;'e'
  3279  1808  3472               	retlw	114	;'r'
  3280  1809  3461               	retlw	97	;'a'
  3281  180A  3474               	retlw	116	;'t'
  3282  180B  3475               	retlw	117	;'u'
  3283  180C  3472               	retlw	114	;'r'
  3284  180D  3461               	retlw	97	;'a'
  3285  180E  3420               	retlw	32	;' '
  3286  180F  3465               	retlw	101	;'e'
  3287  1810  3473               	retlw	115	;'s'
  3288  1811  343A               	retlw	58	;':'
  3289  1812  3420               	retlw	32	;' '
  3290  1813  3425               	retlw	37	;'%'
  3291  1814  3464               	retlw	100	;'d'
  3292  1815  342E               	retlw	46	;'.'
  3293  1816  3425               	retlw	37	;'%'
  3294  1817  3464               	retlw	100	;'d'
  3295  1818  342A               	retlw	42	;'*'
  3296  1819  3443               	retlw	67	;'C'
  3297  181A  340A               	retlw	10
  3298  181B  340A               	retlw	10
  3299  181C  3400               	retlw	0
  3300                           
  3301                           	psect	stringtext2
  3302  181D                     __pstringtext2:
  3303  181D                     STR_3:
  3304  181D  3472               	retlw	114	;'r'
  3305  181E  3465               	retlw	101	;'e'
  3306  181F  3461               	retlw	97	;'a'
  3307  1820  3464               	retlw	100	;'d'
  3308  1821  3445               	retlw	69	;'E'
  3309  1822  346D               	retlw	109	;'m'
  3310  1823  3469               	retlw	105	;'i'
  3311  1824  3473               	retlw	115	;'s'
  3312  1825  3473               	retlw	115	;'s'
  3313  1826  3469               	retlw	105	;'i'
  3314  1827  3476               	retlw	118	;'v'
  3315  1828  3469               	retlw	105	;'i'
  3316  1829  3474               	retlw	116	;'t'
  3317  182A  3479               	retlw	121	;'y'
  3318  182B  343A               	retlw	58	;':'
  3319  182C  3420               	retlw	32	;' '
  3320  182D  3425               	retlw	37	;'%'
  3321  182E  3433               	retlw	51	;'3'
  3322  182F  342E               	retlw	46	;'.'
  3323  1830  3432               	retlw	50	;'2'
  3324  1831  3466               	retlw	102	;'f'
  3325  1832  340A               	retlw	10
  3326  1833  3400               	retlw	0
  3327                           
  3328                           	psect	stringtext3
  3329  1834                     __pstringtext3:
  3330  1834                     STR_2:
  3331  1834  3454               	retlw	84	;'T'
  3332  1835  346F               	retlw	111	;'o'
  3333  1836  3462               	retlw	98	;'b'
  3334  1837  346A               	retlw	106	;'j'
  3335  1838  343A               	retlw	58	;':'
  3336  1839  3420               	retlw	32	;' '
  3337  183A  3425               	retlw	37	;'%'
  3338  183B  3433               	retlw	51	;'3'
  3339  183C  342E               	retlw	46	;'.'
  3340  183D  3432               	retlw	50	;'2'
  3341  183E  3466               	retlw	102	;'f'
  3342  183F  3409               	retlw	9
  3343  1840  3425               	retlw	37	;'%'
  3344  1841  3464               	retlw	100	;'d'
  3345  1842  3409               	retlw	9
  3346  1843  3430               	retlw	48	;'0'
  3347  1844  3478               	retlw	120	;'x'
  3348  1845  3425               	retlw	37	;'%'
  3349  1846  3478               	retlw	120	;'x'
  3350  1847  340A               	retlw	10
  3351  1848  3400               	retlw	0
  3352                           
  3353                           	psect	stringtext4
  3354  1849                     __pstringtext4:
  3355  1849                     STR_1:
  3356  1849  3474               	retlw	116	;'t'
  3357  184A  3465               	retlw	101	;'e'
  3358  184B  346D               	retlw	109	;'m'
  3359  184C  3470               	retlw	112	;'p'
  3360  184D  3441               	retlw	65	;'A'
  3361  184E  346D               	retlw	109	;'m'
  3362  184F  3462               	retlw	98	;'b'
  3363  1850  343A               	retlw	58	;':'
  3364  1851  3420               	retlw	32	;' '
  3365  1852  3425               	retlw	37	;'%'
  3366  1853  3433               	retlw	51	;'3'
  3367  1854  342E               	retlw	46	;'.'
  3368  1855  3432               	retlw	50	;'2'
  3369  1856  3466               	retlw	102	;'f'
  3370  1857  340A               	retlw	10
  3371  1858  3400               	retlw	0
  3372                           
  3373                           	psect	stringtext5
  3374  1859                     __pstringtext5:
  3375  1859                     STR_5:
  3376  1859  3449               	retlw	73	;'I'
  3377  185A  344E               	retlw	78	;'N'
  3378  185B  3446               	retlw	70	;'F'
  3379  185C  3400               	retlw	0
  3380                           
  3381                           	psect	stringtext6
  3382  185D                     __pstringtext6:
  3383  185D                     STR_9:
  3384  185D  344E               	retlw	78	;'N'
  3385  185E  3441               	retlw	65	;'A'
  3386  185F  344E               	retlw	78	;'N'
  3387  1860  3400               	retlw	0
  3388                           
  3389                           	psect	stringtext7
  3390  1861                     __pstringtext7:
  3391  1861                     STR_6:
  3392  1861  3469               	retlw	105	;'i'
  3393  1862  346E               	retlw	110	;'n'
  3394  1863  3466               	retlw	102	;'f'
  3395  1864  3400               	retlw	0
  3396                           
  3397                           	psect	stringtext8
  3398  1865                     __pstringtext8:
  3399  1865                     STR_10:
  3400  1865  346E               	retlw	110	;'n'
  3401  1866  3461               	retlw	97	;'a'
  3402  1867  346E               	retlw	110	;'n'
  3403  1868  3400               	retlw	0
  3404                           
  3405                           	psect	stringtext9
  3406  1869                     __pstringtext9:
  3407  1869                     STR_13:
  3408  1869  346C               	retlw	108	;'l'
  3409  186A  3466               	retlw	102	;'f'
  3410  186B  3400               	retlw	0
  3411                           
  3412                           	psect	stringtext10
  3413  0000                     __pstringtext10:
  3414  1869                     
  3415                           	psect	cinit
  3416  07E9                     start_initialization:	
  3417                           ; #config settings
  3418                           
  3419  07E9                     __initialization:
  3420                           
  3421                           ; Clear objects allocated to BANK1
  3422  07E9  0021               	movlb	1	; select bank1
  3423  07EA  01EC               	clrf	__pbssBANK1& (0+127)
  3424  07EB  01ED               	clrf	(__pbssBANK1+1)& (0+127)
  3425  07EC  01EE               	clrf	(__pbssBANK1+2)& (0+127)
  3426  07ED  01EF               	clrf	(__pbssBANK1+3)& (0+127)
  3427                           
  3428                           ; Clear objects allocated to BANK2
  3429  07EE  304F               	movlw	low __pbssBANK2
  3430  07EF  0084               	movwf	4
  3431  07F0  3001               	movlw	high __pbssBANK2
  3432  07F1  0085               	movwf	5
  3433  07F2  300E               	movlw	14
  3434  07F3  3199  2126  3187   	fcall	clear_ram0
  3435                           
  3436                           ; Clear objects allocated to BANK3
  3437  07F6  30A0               	movlw	low __pbssBANK3
  3438  07F7  0084               	movwf	4
  3439  07F8  3001               	movlw	high __pbssBANK3
  3440  07F9  0085               	movwf	5
  3441  07FA  3050               	movlw	80
  3442  07FB  3199  2126         	fcall	clear_ram0
  3443  07FD                     end_of_initialization:	
  3444                           ;End of C runtime variable initialization code
  3445                           
  3446  07FD                     __end_of__initialization:
  3447  07FD  0020               	movlb	0
  3448  07FE  3193  2BDB         	ljmp	_main	;jump to C main() function
  3449                           
  3450                           	psect	bssBANK1
  3451  00EC                     __pbssBANK1:
  3452  00EC                     _prec:
  3453  00EC                     	ds	2
  3454  00EE                     _flags:
  3455  00EE                     	ds	2
  3456                           
  3457                           	psect	bssBANK2
  3458  014F                     __pbssBANK2:
  3459  014F                     floorf@F527:
  3460  014F                     	ds	4
  3461  0153                     ___fpclassifyf@F465:
  3462  0153                     	ds	4
  3463  0157                     _nout:
  3464  0157                     	ds	2
  3465  0159                     _width:
  3466  0159                     	ds	2
  3467  015B                     _low_byte:
  3468  015B                     	ds	1
  3469  015C                     _high_byte:
  3470  015C                     	ds	1
  3471                           
  3472                           	psect	bssBANK3
  3473  01A0                     __pbssBANK3:
  3474  01A0                     _dbuf:
  3475  01A0                     	ds	80
  3476                           
  3477                           	psect	clrtext
  3478  1926                     clear_ram0:	
  3479                           ;	Called with FSR0 containing the base address, and
  3480                           ;	WREG with the size to clear
  3481                           
  3482  1926  0064               	clrwdt	;clear the watchdog before getting into this loop
  3483  1927                     clrloop0:
  3484  1927  0180               	clrf	0	;clear RAM location pointed to by FSR
  3485  1928  3101               	addfsr 0,1
  3486  1929  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3487  192A  2927               	goto	clrloop0	;have we reached the end yet?
  3488  192B  3400               	retlw	0	;all done for this memory range, return
  3489                           
  3490                           	psect	cstackBANK2
  3491  0120                     __pcstackBANK2:
  3492  0120                     vfpfcnvrt@ll:
  3493                           
  3494                           ; 8 bytes @ 0x0
  3495  0120                     	ds	8
  3496  0128                     vfpfcnvrt@llu:
  3497                           
  3498                           ; 8 bytes @ 0x8
  3499  0128                     	ds	8
  3500  0130                     _vfpfcnvrt$990:
  3501                           
  3502                           ; 2 bytes @ 0x10
  3503  0130                     	ds	2
  3504  0132                     _vfpfcnvrt$991:
  3505                           
  3506                           ; 2 bytes @ 0x12
  3507  0132                     	ds	2
  3508  0134                     _vfpfcnvrt$996:
  3509                           
  3510                           ; 2 bytes @ 0x14
  3511  0134                     	ds	2
  3512  0136                     vfpfcnvrt@f:
  3513                           
  3514                           ; 4 bytes @ 0x16
  3515  0136                     	ds	4
  3516  013A                     vfpfcnvrt@ct:
  3517                           
  3518                           ; 3 bytes @ 0x1A
  3519  013A                     	ds	3
  3520  013D                     vfpfcnvrt@c:
  3521                           
  3522                           ; 1 bytes @ 0x1D
  3523  013D                     	ds	1
  3524  013E                     vfpfcnvrt@fp:
  3525                           
  3526                           ; 1 bytes @ 0x1E
  3527  013E                     	ds	1
  3528  013F                     ?_printf:
  3529  013F                     printf@fmt:	
  3530                           ; 2 bytes @ 0x1F
  3531                           
  3532                           
  3533                           ; 2 bytes @ 0x1F
  3534  013F                     	ds	10
  3535  0149                     main@leerT:
  3536                           
  3537                           ; 2 bytes @ 0x29
  3538  0149                     	ds	2
  3539  014B                     main@temp:
  3540                           
  3541                           ; 4 bytes @ 0x2B
  3542  014B                     	ds	4
  3543                           
  3544                           	psect	cstackBANK1
  3545  00A0                     __pcstackBANK1:
  3546  00A0                     _efgtoa$954:
  3547                           
  3548                           ; 2 bytes @ 0x0
  3549  00A0                     	ds	2
  3550  00A2                     _efgtoa$955:
  3551                           
  3552                           ; 2 bytes @ 0x2
  3553  00A2                     	ds	2
  3554  00A4                     _efgtoa$959:
  3555                           
  3556                           ; 2 bytes @ 0x4
  3557  00A4                     	ds	2
  3558  00A6                     _efgtoa$963:
  3559                           
  3560                           ; 2 bytes @ 0x6
  3561  00A6                     	ds	2
  3562  00A8                     _efgtoa$964:
  3563                           
  3564                           ; 2 bytes @ 0x8
  3565  00A8                     	ds	2
  3566  00AA                     _efgtoa$965:
  3567                           
  3568                           ; 2 bytes @ 0xA
  3569  00AA                     	ds	2
  3570  00AC                     efgtoa@t:
  3571                           
  3572                           ; 2 bytes @ 0xC
  3573  00AC                     	ds	2
  3574  00AE                     efgtoa@pp:
  3575                           
  3576                           ; 2 bytes @ 0xE
  3577  00AE                     	ds	2
  3578  00B0                     efgtoa@ne:
  3579                           
  3580                           ; 2 bytes @ 0x10
  3581  00B0                     	ds	2
  3582  00B2                     efgtoa@m:
  3583                           
  3584                           ; 2 bytes @ 0x12
  3585  00B2                     	ds	2
  3586  00B4                     efgtoa@ou:
  3587                           
  3588                           ; 4 bytes @ 0x14
  3589  00B4                     	ds	4
  3590  00B8                     efgtoa@d:
  3591                           
  3592                           ; 2 bytes @ 0x18
  3593  00B8                     	ds	2
  3594  00BA                     efgtoa@sign:
  3595                           
  3596                           ; 2 bytes @ 0x1A
  3597  00BA                     	ds	2
  3598  00BC                     efgtoa@p:
  3599                           
  3600                           ; 2 bytes @ 0x1C
  3601  00BC                     	ds	2
  3602  00BE                     efgtoa@fp:
  3603                           
  3604                           ; 1 bytes @ 0x1E
  3605  00BE                     	ds	1
  3606  00BF                     efgtoa@w:
  3607                           
  3608                           ; 2 bytes @ 0x1F
  3609  00BF                     	ds	2
  3610  00C1                     efgtoa@nmode:
  3611                           
  3612                           ; 1 bytes @ 0x21
  3613  00C1                     	ds	1
  3614  00C2                     efgtoa@mode:
  3615                           
  3616                           ; 1 bytes @ 0x22
  3617  00C2                     	ds	1
  3618  00C3                     efgtoa@h:
  3619                           
  3620                           ; 4 bytes @ 0x23
  3621  00C3                     	ds	4
  3622  00C7                     efgtoa@l:
  3623                           
  3624                           ; 4 bytes @ 0x27
  3625  00C7                     	ds	4
  3626  00CB                     efgtoa@i:
  3627                           
  3628                           ; 2 bytes @ 0x2B
  3629  00CB                     	ds	2
  3630  00CD                     efgtoa@g:
  3631                           
  3632                           ; 4 bytes @ 0x2D
  3633  00CD                     	ds	4
  3634  00D1                     efgtoa@e:
  3635                           
  3636                           ; 2 bytes @ 0x31
  3637  00D1                     	ds	2
  3638  00D3                     efgtoa@n:
  3639                           
  3640                           ; 2 bytes @ 0x33
  3641  00D3                     	ds	2
  3642  00D5                     efgtoa@u:
  3643                           
  3644                           ; 4 bytes @ 0x35
  3645  00D5                     	ds	4
  3646  00D9                     ??_vfpfcnvrt:
  3647                           
  3648                           ; 1 bytes @ 0x39
  3649  00D9                     	ds	6
  3650  00DF                     ?_vfprintf:
  3651  00DF                     vfprintf@fmt:	
  3652                           ; 2 bytes @ 0x3F
  3653                           
  3654                           
  3655                           ; 2 bytes @ 0x3F
  3656  00DF                     	ds	2
  3657  00E1                     vfprintf@ap:
  3658                           
  3659                           ; 1 bytes @ 0x41
  3660  00E1                     	ds	1
  3661  00E2                     ??_vfprintf:
  3662                           
  3663                           ; 1 bytes @ 0x42
  3664  00E2                     	ds	2
  3665  00E4                     vfprintf@fp:
  3666                           
  3667                           ; 1 bytes @ 0x44
  3668  00E4                     	ds	1
  3669  00E5                     vfprintf@cfmt:
  3670                           
  3671                           ; 2 bytes @ 0x45
  3672  00E5                     	ds	2
  3673  00E7                     printf@ap:
  3674                           
  3675                           ; 1 bytes @ 0x47
  3676  00E7                     	ds	1
  3677  00E8                     ??_main:
  3678                           
  3679                           ; 1 bytes @ 0x48
  3680  00E8                     	ds	4
  3681                           
  3682                           	psect	cstackCOMMON
  3683  0070                     __pcstackCOMMON:
  3684  0070                     ?___fleq:
  3685  0070                     ?_port_init:	
  3686                           ; 1 bit 
  3687                           
  3688  0070                     ??_port_init:	
  3689                           ; 1 bytes @ 0x0
  3690                           
  3691  0070                     ?_adc_init:	
  3692                           ; 1 bytes @ 0x0
  3693                           
  3694  0070                     ??_adc_init:	
  3695                           ; 1 bytes @ 0x0
  3696                           
  3697  0070                     ?_I2C_init:	
  3698                           ; 1 bytes @ 0x0
  3699                           
  3700  0070                     ??_I2C_init:	
  3701                           ; 1 bytes @ 0x0
  3702                           
  3703  0070                     ?_I2C_start:	
  3704                           ; 1 bytes @ 0x0
  3705                           
  3706  0070                     ??_I2C_start:	
  3707                           ; 1 bytes @ 0x0
  3708                           
  3709  0070                     ?_I2C_write:	
  3710                           ; 1 bytes @ 0x0
  3711                           
  3712  0070                     ??_I2C_write:	
  3713                           ; 1 bytes @ 0x0
  3714                           
  3715  0070                     ?_I2C_restart:	
  3716                           ; 1 bytes @ 0x0
  3717                           
  3718  0070                     ??_I2C_restart:	
  3719                           ; 1 bytes @ 0x0
  3720                           
  3721  0070                     ?_I2C_read:	
  3722                           ; 1 bytes @ 0x0
  3723                           
  3724  0070                     ??_I2C_read:	
  3725                           ; 1 bytes @ 0x0
  3726                           
  3727  0070                     ?_I2C_stop:	
  3728                           ; 1 bytes @ 0x0
  3729                           
  3730  0070                     ??_I2C_stop:	
  3731                           ; 1 bytes @ 0x0
  3732                           
  3733  0070                     ?_I2C_ack:	
  3734                           ; 1 bytes @ 0x0
  3735                           
  3736  0070                     ??_I2C_ack:	
  3737                           ; 1 bytes @ 0x0
  3738                           
  3739  0070                     ?_I2C_nack:	
  3740                           ; 1 bytes @ 0x0
  3741                           
  3742  0070                     ??_I2C_nack:	
  3743                           ; 1 bytes @ 0x0
  3744                           
  3745  0070                     ?_strcpy:	
  3746                           ; 1 bytes @ 0x0
  3747                           
  3748  0070                     ?_main:	
  3749                           ; 1 bytes @ 0x0
  3750                           
  3751  0070                     ?_uart_tx:	
  3752                           ; 1 bytes @ 0x0
  3753                           
  3754  0070                     ??_uart_tx:	
  3755                           ; 1 bytes @ 0x0
  3756                           
  3757  0070                     ?_putch:	
  3758                           ; 1 bytes @ 0x0
  3759                           
  3760  0070                     ??___aodiv:	
  3761                           ; 1 bytes @ 0x0
  3762                           
  3763  0070                     ??___aomod:	
  3764                           ; 1 bytes @ 0x0
  3765                           
  3766  0070                     ?__Umul8_16:	
  3767                           ; 1 bytes @ 0x0
  3768                           
  3769  0070                     ?_strlen:	
  3770                           ; 2 bytes @ 0x0
  3771                           
  3772  0070                     ?___fpclassifyf:	
  3773                           ; 2 bytes @ 0x0
  3774                           
  3775  0070                     ?_isupper:	
  3776                           ; 2 bytes @ 0x0
  3777                           
  3778  0070                     ?_isalpha:	
  3779                           ; 2 bytes @ 0x0
  3780                           
  3781  0070                     ?_isdigit:	
  3782                           ; 2 bytes @ 0x0
  3783                           
  3784  0070                     ?_strncmp:	
  3785                           ; 2 bytes @ 0x0
  3786                           
  3787  0070                     ?_isspace:	
  3788                           ; 2 bytes @ 0x0
  3789                           
  3790  0070                     ?_islower:	
  3791                           ; 2 bytes @ 0x0
  3792                           
  3793  0070                     ?___wmul:	
  3794                           ; 2 bytes @ 0x0
  3795                           
  3796  0070                     ?___awdiv:	
  3797                           ; 2 bytes @ 0x0
  3798                           
  3799  0070                     ?___awmod:	
  3800                           ; 2 bytes @ 0x0
  3801                           
  3802  0070                     ?___lldiv:	
  3803                           ; 2 bytes @ 0x0
  3804                           
  3805  0070                     ?___flneg:	
  3806                           ; 4 bytes @ 0x0
  3807                           
  3808  0070                     ?___fldiv:	
  3809                           ; 4 bytes @ 0x0
  3810                           
  3811  0070                     I2C_read@ack:	
  3812                           ; 4 bytes @ 0x0
  3813                           
  3814  0070                     I2C_write@I2C_data:	
  3815                           ; 1 bytes @ 0x0
  3816                           
  3817  0070                     __Umul8_16@multiplicand:	
  3818                           ; 1 bytes @ 0x0
  3819                           
  3820  0070                     ___wmul@multiplier:	
  3821                           ; 1 bytes @ 0x0
  3822                           
  3823  0070                     ___awdiv@divisor:	
  3824                           ; 2 bytes @ 0x0
  3825                           
  3826  0070                     ___awmod@divisor:	
  3827                           ; 2 bytes @ 0x0
  3828                           
  3829  0070                     isalpha@c:	
  3830                           ; 2 bytes @ 0x0
  3831                           
  3832  0070                     isdigit@c:	
  3833                           ; 2 bytes @ 0x0
  3834                           
  3835  0070                     isspace@c:	
  3836                           ; 2 bytes @ 0x0
  3837                           
  3838  0070                     isupper@c:	
  3839                           ; 2 bytes @ 0x0
  3840                           
  3841  0070                     strcpy@src:	
  3842                           ; 2 bytes @ 0x0
  3843                           
  3844  0070                     strncmp@_r:	
  3845                           ; 2 bytes @ 0x0
  3846                           
  3847  0070                     islower@c:	
  3848                           ; 2 bytes @ 0x0
  3849                           
  3850  0070                     ___lldiv@divisor:	
  3851                           ; 2 bytes @ 0x0
  3852                           
  3853  0070                     ___fleq@ff1:	
  3854                           ; 4 bytes @ 0x0
  3855                           
  3856  0070                     ___flneg@f1:	
  3857                           ; 4 bytes @ 0x0
  3858                           
  3859  0070                     ___fldiv@a:	
  3860                           ; 4 bytes @ 0x0
  3861                           
  3862  0070                     ___fpclassifyf@x:	
  3863                           ; 4 bytes @ 0x0
  3864                           
  3865                           
  3866                           ; 4 bytes @ 0x0
  3867  0070                     	ds	1
  3868  0071                     ?_MLX90614_WriteReg:
  3869  0071                     ?_MLX90614_ReadReg:	
  3870                           ; 1 bytes @ 0x1
  3871                           
  3872  0071                     uart_tx@dato:	
  3873                           ; 2 bytes @ 0x1
  3874                           
  3875  0071                     ___aodiv@counter:	
  3876                           ; 1 bytes @ 0x1
  3877                           
  3878  0071                     ___aomod@counter:	
  3879                           ; 1 bytes @ 0x1
  3880                           
  3881  0071                     MLX90614_WriteReg@val:	
  3882                           ; 1 bytes @ 0x1
  3883                           
  3884                           
  3885                           ; 2 bytes @ 0x1
  3886  0071                     	ds	1
  3887  0072                     ??__Umul8_16:
  3888  0072                     ??_strlen:	
  3889                           ; 1 bytes @ 0x2
  3890                           
  3891  0072                     ??_isupper:	
  3892                           ; 1 bytes @ 0x2
  3893                           
  3894  0072                     ??_strcpy:	
  3895                           ; 1 bytes @ 0x2
  3896                           
  3897  0072                     ??_isalpha:	
  3898                           ; 1 bytes @ 0x2
  3899                           
  3900  0072                     ??_isdigit:	
  3901                           ; 1 bytes @ 0x2
  3902                           
  3903  0072                     ??_isspace:	
  3904                           ; 1 bytes @ 0x2
  3905                           
  3906  0072                     ??_islower:	
  3907                           ; 1 bytes @ 0x2
  3908                           
  3909  0072                     ??_putch:	
  3910                           ; 1 bytes @ 0x2
  3911                           
  3912  0072                     putch@dato:	
  3913                           ; 1 bytes @ 0x2
  3914                           
  3915  0072                     ___aodiv@sign:	
  3916                           ; 1 bytes @ 0x2
  3917                           
  3918  0072                     ___aomod@sign:	
  3919                           ; 1 bytes @ 0x2
  3920                           
  3921  0072                     ___wmul@multiplicand:	
  3922                           ; 1 bytes @ 0x2
  3923                           
  3924  0072                     ___awdiv@dividend:	
  3925                           ; 2 bytes @ 0x2
  3926                           
  3927  0072                     ___awmod@dividend:	
  3928                           ; 2 bytes @ 0x2
  3929                           
  3930  0072                     strncmp@n:	
  3931                           ; 2 bytes @ 0x2
  3932                           
  3933                           
  3934                           ; 2 bytes @ 0x2
  3935  0072                     	ds	1
  3936  0073                     ??_MLX90614_ReadReg:
  3937  0073                     ??_MLX90614_WriteReg:	
  3938                           ; 1 bytes @ 0x3
  3939                           
  3940  0073                     ?_fputc:	
  3941                           ; 1 bytes @ 0x3
  3942                           
  3943  0073                     ?_abs:	
  3944                           ; 2 bytes @ 0x3
  3945                           
  3946  0073                     MLX90614_WriteReg@reg:	
  3947                           ; 2 bytes @ 0x3
  3948                           
  3949  0073                     strlen@a:	
  3950                           ; 1 bytes @ 0x3
  3951                           
  3952  0073                     abs@a:	
  3953                           ; 1 bytes @ 0x3
  3954                           
  3955  0073                     fputc@c:	
  3956                           ; 2 bytes @ 0x3
  3957                           
  3958  0073                     ___aodiv@quotient:	
  3959                           ; 2 bytes @ 0x3
  3960                           
  3961                           
  3962                           ; 8 bytes @ 0x3
  3963  0073                     	ds	1
  3964  0074                     ??___fpclassifyf:
  3965  0074                     ??_strncmp:	
  3966                           ; 1 bytes @ 0x4
  3967                           
  3968  0074                     ??___wmul:	
  3969                           ; 1 bytes @ 0x4
  3970                           
  3971  0074                     ??___awdiv:	
  3972                           ; 1 bytes @ 0x4
  3973                           
  3974  0074                     ??___awmod:	
  3975                           ; 1 bytes @ 0x4
  3976                           
  3977  0074                     ??___flneg:	
  3978                           ; 1 bytes @ 0x4
  3979                           
  3980  0074                     _isspace$1073:	
  3981                           ; 1 bytes @ 0x4
  3982                           
  3983  0074                     strlen@s:	
  3984                           ; 1 bytes @ 0x4
  3985                           
  3986  0074                     ___wmul@product:	
  3987                           ; 1 bytes @ 0x4
  3988                           
  3989  0074                     __Umul8_16@product:	
  3990                           ; 2 bytes @ 0x4
  3991                           
  3992  0074                     strcpy@s:	
  3993                           ; 2 bytes @ 0x4
  3994                           
  3995  0074                     ___lldiv@dividend:	
  3996                           ; 2 bytes @ 0x4
  3997                           
  3998  0074                     ___fleq@ff2:	
  3999                           ; 4 bytes @ 0x4
  4000                           
  4001  0074                     ___fldiv@b:	
  4002                           ; 4 bytes @ 0x4
  4003                           
  4004                           
  4005                           ; 4 bytes @ 0x4
  4006  0074                     	ds	1
  4007  0075                     ??_abs:
  4008  0075                     ___awdiv@counter:	
  4009                           ; 1 bytes @ 0x5
  4010                           
  4011  0075                     ___awmod@counter:	
  4012                           ; 1 bytes @ 0x5
  4013                           
  4014  0075                     fputc@fp:	
  4015                           ; 1 bytes @ 0x5
  4016                           
  4017  0075                     strncmp@_l:	
  4018                           ; 1 bytes @ 0x5
  4019                           
  4020                           
  4021                           ; 1 bytes @ 0x5
  4022  0075                     	ds	1
  4023  0076                     ??_fputc:
  4024  0076                     ?_tolower:	
  4025                           ; 1 bytes @ 0x6
  4026                           
  4027  0076                     ?_toupper:	
  4028                           ; 2 bytes @ 0x6
  4029                           
  4030  0076                     ?_atoi:	
  4031                           ; 2 bytes @ 0x6
  4032                           
  4033  0076                     MLX90614_ReadReg@reg:	
  4034                           ; 2 bytes @ 0x6
  4035                           
  4036  0076                     ___awdiv@sign:	
  4037                           ; 1 bytes @ 0x6
  4038                           
  4039  0076                     ___awmod@sign:	
  4040                           ; 1 bytes @ 0x6
  4041                           
  4042  0076                     strcpy@d:	
  4043                           ; 1 bytes @ 0x6
  4044                           
  4045  0076                     __Umul8_16@word_mpld:	
  4046                           ; 1 bytes @ 0x6
  4047                           
  4048  0076                     atoi@s:	
  4049                           ; 2 bytes @ 0x6
  4050                           
  4051  0076                     strncmp@r:	
  4052                           ; 2 bytes @ 0x6
  4053                           
  4054  0076                     tolower@c:	
  4055                           ; 2 bytes @ 0x6
  4056                           
  4057  0076                     toupper@c:	
  4058                           ; 2 bytes @ 0x6
  4059                           
  4060                           
  4061                           ; 2 bytes @ 0x6
  4062  0076                     	ds	1
  4063  0077                     strcpy@dest:
  4064  0077                     MLX90614_ReadReg@valReg:	
  4065                           ; 1 bytes @ 0x7
  4066                           
  4067  0077                     ___awdiv@quotient:	
  4068                           ; 2 bytes @ 0x7
  4069                           
  4070                           
  4071                           ; 2 bytes @ 0x7
  4072  0077                     	ds	1
  4073  0078                     ??_tolower:
  4074  0078                     ??_toupper:	
  4075                           ; 1 bytes @ 0x8
  4076                           
  4077  0078                     ??_atoi:	
  4078                           ; 1 bytes @ 0x8
  4079                           
  4080  0078                     ??___lldiv:	
  4081                           ; 1 bytes @ 0x8
  4082                           
  4083  0078                     ??___fleq:	
  4084                           ; 1 bytes @ 0x8
  4085                           
  4086  0078                     ??___fldiv:	
  4087                           ; 1 bytes @ 0x8
  4088                           
  4089  0078                     __Umul8_16@multiplier:	
  4090                           ; 1 bytes @ 0x8
  4091                           
  4092  0078                     strncmp@l:	
  4093                           ; 1 bytes @ 0x8
  4094                           
  4095                           
  4096                           ; 1 bytes @ 0x8
  4097  0078                     	ds	1
  4098  0079                     ?_MLX90614_ReadTemp:
  4099  0079                     ___lldiv@quotient:	
  4100                           ; 2 bytes @ 0x9
  4101                           
  4102                           
  4103                           ; 4 bytes @ 0x9
  4104  0079                     	ds	2
  4105  007B                     ??_MLX90614_ReadTemp:
  4106  007B                     ?_fputs:	
  4107                           ; 1 bytes @ 0xB
  4108                           
  4109  007B                     MLX90614_ReadTemp@Temp_Source:	
  4110                           ; 2 bytes @ 0xB
  4111                           
  4112  007B                     fputs@fp:	
  4113                           ; 1 bytes @ 0xB
  4114                           
  4115                           
  4116                           ; 1 bytes @ 0xB
  4117  007B                     	ds	1
  4118  007C                     ??___flsub:
  4119  007C                     ??_pad:	
  4120                           ; 1 bytes @ 0xC
  4121                           
  4122  007C                     ___fltol@sign1:	
  4123                           ; 1 bytes @ 0xC
  4124                           
  4125  007C                     _tolower$1131:	
  4126                           ; 1 bytes @ 0xC
  4127                           
  4128  007C                     _toupper$1146:	
  4129                           ; 2 bytes @ 0xC
  4130                           
  4131                           
  4132                           ; 2 bytes @ 0xC
  4133  007C                     	ds	1
  4134  007D                     ___lldiv@counter:
  4135  007D                     ___fltol@exp1:	
  4136                           ; 1 bytes @ 0xD
  4137                           
  4138                           
  4139                           ; 1 bytes @ 0xD
  4140  007D                     	ds	1
  4141                           
  4142                           	psect	cstackBANK0
  4143  0020                     __pcstackBANK0:
  4144  0020                     ?_serial_init:
  4145  0020                     ??_fputs:	
  4146                           ; 1 bytes @ 0x0
  4147                           
  4148  0020                     ?___xxtofl:	
  4149                           ; 1 bytes @ 0x0
  4150                           
  4151  0020                     ?___aodiv:	
  4152                           ; 4 bytes @ 0x0
  4153                           
  4154  0020                     ?___aomod:	
  4155                           ; 8 bytes @ 0x0
  4156                           
  4157  0020                     ___fpclassifyf@e:	
  4158                           ; 8 bytes @ 0x0
  4159                           
  4160  0020                     atoi@neg:	
  4161                           ; 2 bytes @ 0x0
  4162                           
  4163  0020                     serial_init@baudios:	
  4164                           ; 2 bytes @ 0x0
  4165                           
  4166  0020                     ___fldiv@rem:	
  4167                           ; 4 bytes @ 0x0
  4168                           
  4169  0020                     ___xxtofl@val:	
  4170                           ; 4 bytes @ 0x0
  4171                           
  4172  0020                     ___aodiv@divisor:	
  4173                           ; 4 bytes @ 0x0
  4174                           
  4175  0020                     ___aomod@divisor:	
  4176                           ; 8 bytes @ 0x0
  4177                           
  4178                           
  4179                           ; 8 bytes @ 0x0
  4180  0020                     	ds	2
  4181  0022                     _atoi$1033:
  4182  0022                     ___fpclassifyf@u:	
  4183                           ; 2 bytes @ 0x2
  4184                           
  4185                           
  4186                           ; 4 bytes @ 0x2
  4187  0022                     	ds	1
  4188  0023                     fputs@c:
  4189                           
  4190                           ; 1 bytes @ 0x3
  4191  0023                     	ds	1
  4192  0024                     ??_serial_init:
  4193  0024                     ??___xxtofl:	
  4194                           ; 1 bytes @ 0x4
  4195                           
  4196  0024                     ___fldiv@sign:	
  4197                           ; 1 bytes @ 0x4
  4198                           
  4199  0024                     _atoi$1035:	
  4200                           ; 1 bytes @ 0x4
  4201                           
  4202  0024                     fputs@i:	
  4203                           ; 2 bytes @ 0x4
  4204                           
  4205                           
  4206                           ; 2 bytes @ 0x4
  4207  0024                     	ds	1
  4208  0025                     ___fldiv@new_exp:
  4209                           
  4210                           ; 2 bytes @ 0x5
  4211  0025                     	ds	1
  4212  0026                     _atoi$1034:
  4213  0026                     fputs@s:	
  4214                           ; 1 bytes @ 0x6
  4215                           
  4216                           
  4217                           ; 1 bytes @ 0x6
  4218  0026                     	ds	1
  4219  0027                     ?_pad:
  4220  0027                     pad@buf:	
  4221                           ; 2 bytes @ 0x7
  4222                           
  4223  0027                     atoi@n:	
  4224                           ; 1 bytes @ 0x7
  4225                           
  4226  0027                     ___fldiv@grs:	
  4227                           ; 2 bytes @ 0x7
  4228                           
  4229                           
  4230                           ; 4 bytes @ 0x7
  4231  0027                     	ds	1
  4232  0028                     ___xxtofl@sign:
  4233  0028                     serial_init@sx:	
  4234                           ; 1 bytes @ 0x8
  4235                           
  4236  0028                     pad@p:	
  4237                           ; 2 bytes @ 0x8
  4238                           
  4239  0028                     ___aodiv@dividend:	
  4240                           ; 2 bytes @ 0x8
  4241                           
  4242  0028                     ___aomod@dividend:	
  4243                           ; 8 bytes @ 0x8
  4244                           
  4245                           
  4246                           ; 8 bytes @ 0x8
  4247  0028                     	ds	1
  4248  0029                     ___xxtofl@exp:
  4249                           
  4250                           ; 1 bytes @ 0x9
  4251  0029                     	ds	1
  4252  002A                     pad@i:
  4253  002A                     ___xxtofl@arg:	
  4254                           ; 2 bytes @ 0xA
  4255                           
  4256                           
  4257                           ; 4 bytes @ 0xA
  4258  002A                     	ds	1
  4259  002B                     ___fldiv@bexp:
  4260                           
  4261                           ; 1 bytes @ 0xB
  4262  002B                     	ds	1
  4263  002C                     ___fldiv@aexp:
  4264  002C                     pad@w:	
  4265                           ; 1 bytes @ 0xC
  4266                           
  4267                           
  4268                           ; 2 bytes @ 0xC
  4269  002C                     	ds	1
  4270  002D                     ?_floorf:
  4271  002D                     floorf@x:	
  4272                           ; 4 bytes @ 0xD
  4273                           
  4274                           
  4275                           ; 4 bytes @ 0xD
  4276  002D                     	ds	1
  4277  002E                     ?_readEmissivity:
  4278  002E                     ?___flmul:	
  4279                           ; 4 bytes @ 0xE
  4280                           
  4281  002E                     pad@fp:	
  4282                           ; 4 bytes @ 0xE
  4283                           
  4284  002E                     ___flmul@b:	
  4285                           ; 1 bytes @ 0xE
  4286                           
  4287                           
  4288                           ; 4 bytes @ 0xE
  4289  002E                     	ds	1
  4290  002F                     ?_xtoa:
  4291  002F                     xtoa@d:	
  4292                           ; 2 bytes @ 0xF
  4293                           
  4294                           
  4295                           ; 8 bytes @ 0xF
  4296  002F                     	ds	1
  4297  0030                     ?_dtoa:
  4298  0030                     dtoa@d:	
  4299                           ; 2 bytes @ 0x10
  4300                           
  4301                           
  4302                           ; 8 bytes @ 0x10
  4303  0030                     	ds	1
  4304  0031                     ??_floorf:
  4305                           
  4306                           ; 1 bytes @ 0x11
  4307  0031                     	ds	1
  4308  0032                     ??_readEmissivity:
  4309  0032                     ___flmul@a:	
  4310                           ; 1 bytes @ 0x12
  4311                           
  4312                           
  4313                           ; 4 bytes @ 0x12
  4314  0032                     	ds	4
  4315  0036                     ??___flmul:
  4316  0036                     readEmissivity@reg:	
  4317                           ; 1 bytes @ 0x16
  4318                           
  4319                           
  4320                           ; 4 bytes @ 0x16
  4321  0036                     	ds	1
  4322  0037                     xtoa@x:
  4323  0037                     floorf@m:	
  4324                           ; 1 bytes @ 0x17
  4325                           
  4326                           
  4327                           ; 4 bytes @ 0x17
  4328  0037                     	ds	1
  4329  0038                     ??_dtoa:
  4330  0038                     ??_xtoa:	
  4331                           ; 1 bytes @ 0x18
  4332                           
  4333                           
  4334                           ; 1 bytes @ 0x18
  4335  0038                     	ds	3
  4336  003B                     ___flmul@sign:
  4337  003B                     _dtoa$930:	
  4338                           ; 1 bytes @ 0x1B
  4339                           
  4340  003B                     floorf@e:	
  4341                           ; 2 bytes @ 0x1B
  4342                           
  4343                           
  4344                           ; 2 bytes @ 0x1B
  4345  003B                     	ds	1
  4346  003C                     ___flmul@aexp:
  4347                           
  4348                           ; 1 bytes @ 0x1C
  4349  003C                     	ds	1
  4350  003D                     dtoa@p:
  4351  003D                     ___flmul@grs:	
  4352                           ; 2 bytes @ 0x1D
  4353                           
  4354  003D                     floorf@u:	
  4355                           ; 4 bytes @ 0x1D
  4356                           
  4357                           
  4358                           ; 4 bytes @ 0x1D
  4359  003D                     	ds	2
  4360  003F                     dtoa@fp:
  4361                           
  4362                           ; 1 bytes @ 0x1F
  4363  003F                     	ds	1
  4364  0040                     dtoa@w:
  4365  0040                     _xtoa$975:	
  4366                           ; 2 bytes @ 0x20
  4367                           
  4368                           
  4369                           ; 2 bytes @ 0x20
  4370  0040                     	ds	1
  4371  0041                     ___flmul@bexp:
  4372                           
  4373                           ; 1 bytes @ 0x21
  4374  0041                     	ds	1
  4375  0042                     dtoa@s:
  4376  0042                     _xtoa$976:	
  4377                           ; 2 bytes @ 0x22
  4378                           
  4379  0042                     ___flmul@prod:	
  4380                           ; 2 bytes @ 0x22
  4381                           
  4382                           
  4383                           ; 4 bytes @ 0x22
  4384  0042                     	ds	2
  4385  0044                     xtoa@p:
  4386  0044                     dtoa@n:	
  4387                           ; 2 bytes @ 0x24
  4388                           
  4389                           
  4390                           ; 8 bytes @ 0x24
  4391  0044                     	ds	2
  4392  0046                     xtoa@fp:
  4393  0046                     ___flmul@temp:	
  4394                           ; 1 bytes @ 0x26
  4395                           
  4396                           
  4397                           ; 2 bytes @ 0x26
  4398  0046                     	ds	1
  4399  0047                     xtoa@w:
  4400                           
  4401                           ; 2 bytes @ 0x27
  4402  0047                     	ds	1
  4403  0048                     ?___flge:
  4404  0048                     ?___fltol:	
  4405                           ; 1 bit 
  4406                           
  4407  0048                     ?___fladd:	
  4408                           ; 4 bytes @ 0x28
  4409                           
  4410  0048                     ___flge@ff1:	
  4411                           ; 4 bytes @ 0x28
  4412                           
  4413  0048                     ___fltol@f1:	
  4414                           ; 4 bytes @ 0x28
  4415                           
  4416  0048                     ___fladd@b:	
  4417                           ; 4 bytes @ 0x28
  4418                           
  4419                           
  4420                           ; 4 bytes @ 0x28
  4421  0048                     	ds	1
  4422  0049                     xtoa@n:
  4423                           
  4424                           ; 8 bytes @ 0x29
  4425  0049                     	ds	3
  4426  004C                     ??___fltol:
  4427  004C                     dtoa@i:	
  4428                           ; 1 bytes @ 0x2C
  4429                           
  4430  004C                     ___flge@ff2:	
  4431                           ; 2 bytes @ 0x2C
  4432                           
  4433  004C                     ___fladd@a:	
  4434                           ; 4 bytes @ 0x2C
  4435                           
  4436                           
  4437                           ; 4 bytes @ 0x2C
  4438  004C                     	ds	4
  4439  0050                     ??___flge:
  4440  0050                     ??___fladd:	
  4441                           ; 1 bytes @ 0x30
  4442                           
  4443                           
  4444                           ; 1 bytes @ 0x30
  4445  0050                     	ds	1
  4446  0051                     ?_writeEmissivity:
  4447  0051                     xtoa@i:	
  4448                           ; 1 bytes @ 0x31
  4449                           
  4450  0051                     writeEmissivity@emissivity:	
  4451                           ; 2 bytes @ 0x31
  4452                           
  4453                           
  4454                           ; 4 bytes @ 0x31
  4455  0051                     	ds	2
  4456  0053                     xtoa@c:
  4457                           
  4458                           ; 2 bytes @ 0x33
  4459  0053                     	ds	2
  4460  0055                     ??_writeEmissivity:
  4461                           
  4462                           ; 1 bytes @ 0x35
  4463  0055                     	ds	1
  4464  0056                     writeEmissivity@ereg:
  4465                           
  4466                           ; 2 bytes @ 0x36
  4467  0056                     	ds	2
  4468  0058                     ___fladd@signs:
  4469                           
  4470                           ; 1 bytes @ 0x38
  4471  0058                     	ds	1
  4472  0059                     ___fladd@aexp:
  4473                           
  4474                           ; 1 bytes @ 0x39
  4475  0059                     	ds	1
  4476  005A                     ___fladd@bexp:
  4477                           
  4478                           ; 1 bytes @ 0x3A
  4479  005A                     	ds	1
  4480  005B                     ___fladd@grs:
  4481                           
  4482                           ; 1 bytes @ 0x3B
  4483  005B                     	ds	1
  4484  005C                     ?___flsub:
  4485  005C                     ___flsub@a:	
  4486                           ; 4 bytes @ 0x3C
  4487                           
  4488                           
  4489                           ; 4 bytes @ 0x3C
  4490  005C                     	ds	4
  4491  0060                     ___flsub@b:
  4492                           
  4493                           ; 4 bytes @ 0x40
  4494  0060                     	ds	4
  4495  0064                     ?_efgtoa:
  4496  0064                     efgtoa@f:	
  4497                           ; 2 bytes @ 0x44
  4498                           
  4499                           
  4500                           ; 4 bytes @ 0x44
  4501  0064                     	ds	4
  4502  0068                     efgtoa@c:
  4503                           
  4504                           ; 1 bytes @ 0x48
  4505  0068                     	ds	1
  4506  0069                     ??_efgtoa:
  4507                           
  4508                           ; 1 bytes @ 0x49
  4509  0069                     	ds	4
  4510  006D                     ?_vfpfcnvrt:
  4511  006D                     vfpfcnvrt@fmt:	
  4512                           ; 2 bytes @ 0x4D
  4513                           
  4514                           
  4515                           ; 1 bytes @ 0x4D
  4516  006D                     	ds	1
  4517  006E                     vfpfcnvrt@ap:
  4518                           
  4519                           ; 1 bytes @ 0x4E
  4520  006E                     	ds	1
  4521  006F                     ??_printf:
  4522                           
  4523                           ; 1 bytes @ 0x4F
  4524  006F                     	ds	1
  4525                           
  4526                           	psect	maintext
  4527  13DB                     __pmaintext:	
  4528 ;;
  4529 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  4530 ;;
  4531 ;; *************** function _main *****************
  4532 ;; Defined at:
  4533 ;;		line 23 in file "Main.c"
  4534 ;; Parameters:    Size  Location     Type
  4535 ;;		None
  4536 ;; Auto vars:     Size  Location     Type
  4537 ;;  temp            4   43[BANK2 ] float 
  4538 ;;  leerT           2   41[BANK2 ] unsigned short 
  4539 ;;  flag            1    0        _Bool 
  4540 ;; Return value:  Size  Location     Type
  4541 ;;                  1    wreg      void 
  4542 ;; Registers used:
  4543 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4544 ;; Tracked objects:
  4545 ;;		On entry : B1F/0
  4546 ;;		On exit  : 0/0
  4547 ;;		Unchanged: 0/0
  4548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4550 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  4551 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4552 ;;      Totals:         0       0       4       6       0       0       0       0       0       0       0       0       
      +0       0
  4553 ;;Total ram usage:       10 bytes
  4554 ;; Hardware stack levels required when called: 9
  4555 ;; This function calls:
  4556 ;;		_I2C_init
  4557 ;;		_MLX90614_ReadTemp
  4558 ;;		___fladd
  4559 ;;		___flmul
  4560 ;;		___fltol
  4561 ;;		___xxtofl
  4562 ;;		_adc_init
  4563 ;;		_port_init
  4564 ;;		_printf
  4565 ;;		_readEmissivity
  4566 ;;		_serial_init
  4567 ;;		_writeEmissivity
  4568 ;; This function is called by:
  4569 ;;		Startup code after reset
  4570 ;; This function uses a non-reentrant model
  4571 ;;
  4572                           
  4573                           
  4574                           ;psect for function _main
  4575  13DB                     _main:
  4576                           
  4577                           ;Main.c: 26:     uint16_t leerT;;Main.c: 27:     port_init();
  4578                           
  4579                           ;incstack = 0
  4580                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4581  13DB  3199  2177  3193   	fcall	_port_init
  4582                           
  4583                           ;Main.c: 28:     serial_init(9600);
  4584  13DE  3000               	movlw	0
  4585  13DF  0020               	movlb	0	; select bank0
  4586  13E0  00A3               	movwf	serial_init@baudios+3
  4587  13E1  3000               	movlw	0
  4588  13E2  00A2               	movwf	serial_init@baudios+2
  4589  13E3  3025               	movlw	37
  4590  13E4  00A1               	movwf	serial_init@baudios+1
  4591  13E5  3080               	movlw	128
  4592  13E6  00A0               	movwf	serial_init@baudios
  4593  13E7  319C  2484  3193   	fcall	_serial_init
  4594                           
  4595                           ;Main.c: 29:     adc_init();
  4596  13EA  319A  2233  3193   	fcall	_adc_init
  4597                           
  4598                           ;Main.c: 30:     I2C_init();
  4599  13ED  319A  2219  3193   	fcall	_I2C_init
  4600                           
  4601                           ;Main.c: 35:     writeEmissivity(0.5);
  4602  13F0  303F               	movlw	63
  4603  13F1  0020               	movlb	0	; select bank0
  4604  13F2  00D4               	movwf	writeEmissivity@emissivity+3
  4605  13F3  3000               	movlw	0
  4606  13F4  00D3               	movwf	writeEmissivity@emissivity+2
  4607  13F5  3000               	movlw	0
  4608  13F6  00D2               	movwf	writeEmissivity@emissivity+1
  4609  13F7  3000               	movlw	0
  4610  13F8  00D1               	movwf	writeEmissivity@emissivity
  4611  13F9  319B  23F7  3193   	fcall	_writeEmissivity
  4612  13FC                     l4839:
  4613                           
  4614                           ;Main.c: 47:         temp = (float)MLX90614_ReadTemp(0x06);
  4615  13FC  3006               	movlw	6
  4616  13FD  3199  213C  3193   	fcall	_MLX90614_ReadTemp
  4617  1400  0879               	movf	?_MLX90614_ReadTemp,w
  4618  1401  0021               	movlb	1	; select bank1
  4619  1402  00E8               	movwf	??_main^(0+128)
  4620  1403  087A               	movf	?_MLX90614_ReadTemp+1,w
  4621  1404  00E9               	movwf	(??_main^(0+128)+1)
  4622  1405  01EA               	clrf	(??_main^(0+128)+2)
  4623  1406  01EB               	clrf	(??_main^(0+128)+3)
  4624  1407  086B               	movf	(??_main+3)^(0+128),w
  4625  1408  0020               	movlb	0	; select bank0
  4626  1409  00A3               	movwf	___xxtofl@val+3
  4627  140A  0021               	movlb	1	; select bank1
  4628  140B  086A               	movf	(??_main+2)^(0+128),w
  4629  140C  0020               	movlb	0	; select bank0
  4630  140D  00A2               	movwf	___xxtofl@val+2
  4631  140E  0021               	movlb	1	; select bank1
  4632  140F  0869               	movf	(??_main+1)^(0+128),w
  4633  1410  0020               	movlb	0	; select bank0
  4634  1411  00A1               	movwf	___xxtofl@val+1
  4635  1412  0021               	movlb	1	; select bank1
  4636  1413  0868               	movf	??_main^(0+128),w
  4637  1414  0020               	movlb	0	; select bank0
  4638  1415  00A0               	movwf	___xxtofl@val
  4639  1416  3000               	movlw	0
  4640  1417  319F  276B  3193   	fcall	___xxtofl
  4641  141A  0823               	movf	?___xxtofl+3,w
  4642  141B  0022               	movlb	2	; select bank2
  4643  141C  00CE               	movwf	(main@temp+3)^(0+256)
  4644  141D  0020               	movlb	0	; select bank0
  4645  141E  0822               	movf	?___xxtofl+2,w
  4646  141F  0022               	movlb	2	; select bank2
  4647  1420  00CD               	movwf	(main@temp+2)^(0+256)
  4648  1421  0020               	movlb	0	; select bank0
  4649  1422  0821               	movf	?___xxtofl+1,w
  4650  1423  0022               	movlb	2	; select bank2
  4651  1424  00CC               	movwf	(main@temp+1)^(0+256)
  4652  1425  0020               	movlb	0	; select bank0
  4653  1426  0820               	movf	?___xxtofl,w
  4654  1427  0022               	movlb	2	; select bank2
  4655  1428  00CB               	movwf	main@temp^(0+256)
  4656                           
  4657                           ;Main.c: 48:         temp = (temp * 0.02) - 273.15;
  4658  1429  30C3               	movlw	195
  4659  142A  0020               	movlb	0	; select bank0
  4660  142B  00CB               	movwf	___fladd@b+3
  4661  142C  3088               	movlw	136
  4662  142D  00CA               	movwf	___fladd@b+2
  4663  142E  3093               	movlw	147
  4664  142F  00C9               	movwf	___fladd@b+1
  4665  1430  3033               	movlw	51
  4666  1431  00C8               	movwf	___fladd@b
  4667  1432  303C               	movlw	60
  4668  1433  00B1               	movwf	___flmul@b+3
  4669  1434  30A3               	movlw	163
  4670  1435  00B0               	movwf	___flmul@b+2
  4671  1436  30D7               	movlw	215
  4672  1437  00AF               	movwf	___flmul@b+1
  4673  1438  300A               	movlw	10
  4674  1439  00AE               	movwf	___flmul@b
  4675  143A  0022               	movlb	2	; select bank2
  4676  143B  084E               	movf	(main@temp+3)^(0+256),w
  4677  143C  0020               	movlb	0	; select bank0
  4678  143D  00B5               	movwf	___flmul@a+3
  4679  143E  0022               	movlb	2	; select bank2
  4680  143F  084D               	movf	(main@temp+2)^(0+256),w
  4681  1440  0020               	movlb	0	; select bank0
  4682  1441  00B4               	movwf	___flmul@a+2
  4683  1442  0022               	movlb	2	; select bank2
  4684  1443  084C               	movf	(main@temp+1)^(0+256),w
  4685  1444  0020               	movlb	0	; select bank0
  4686  1445  00B3               	movwf	___flmul@a+1
  4687  1446  0022               	movlb	2	; select bank2
  4688  1447  084B               	movf	main@temp^(0+256),w
  4689  1448  0020               	movlb	0	; select bank0
  4690  1449  00B2               	movwf	___flmul@a
  4691  144A  318A  221E  3193   	fcall	___flmul
  4692  144D  0831               	movf	?___flmul+3,w
  4693  144E  00CF               	movwf	___fladd@a+3
  4694  144F  0830               	movf	?___flmul+2,w
  4695  1450  00CE               	movwf	___fladd@a+2
  4696  1451  082F               	movf	?___flmul+1,w
  4697  1452  00CD               	movwf	___fladd@a+1
  4698  1453  082E               	movf	?___flmul,w
  4699  1454  00CC               	movwf	___fladd@a
  4700  1455  3188  203D  3193   	fcall	___fladd
  4701  1458  084B               	movf	?___fladd+3,w
  4702  1459  0022               	movlb	2	; select bank2
  4703  145A  00CE               	movwf	(main@temp+3)^(0+256)
  4704  145B  0020               	movlb	0	; select bank0
  4705  145C  084A               	movf	?___fladd+2,w
  4706  145D  0022               	movlb	2	; select bank2
  4707  145E  00CD               	movwf	(main@temp+2)^(0+256)
  4708  145F  0020               	movlb	0	; select bank0
  4709  1460  0849               	movf	?___fladd+1,w
  4710  1461  0022               	movlb	2	; select bank2
  4711  1462  00CC               	movwf	(main@temp+1)^(0+256)
  4712  1463  0020               	movlb	0	; select bank0
  4713  1464  0848               	movf	?___fladd,w
  4714  1465  0022               	movlb	2	; select bank2
  4715  1466  00CB               	movwf	main@temp^(0+256)
  4716                           
  4717                           ;Main.c: 49:         printf("tempAmb: %3.2f\n",temp);
  4718  1467  3049               	movlw	low (STR_1| (0+32768))
  4719  1468  00BF               	movwf	printf@fmt^(0+256)
  4720  1469  3098               	movlw	high (STR_1| (0+32768))
  4721  146A  00C0               	movwf	(printf@fmt^(0+256)+1)
  4722  146B  084E               	movf	(main@temp+3)^(0+256),w
  4723  146C  00C4               	movwf	((?_printf+3)^(0+256)+2)
  4724  146D  084D               	movf	(main@temp+2)^(0+256),w
  4725  146E  00C3               	movwf	((?_printf+2)^(0+256)+2)
  4726  146F  084C               	movf	(main@temp+1)^(0+256),w
  4727  1470  00C2               	movwf	((?_printf+1)^(0+256)+2)
  4728  1471  084B               	movf	main@temp^(0+256),w
  4729  1472  00C1               	movwf	(?_printf^(0+256)+2)
  4730  1473  319A  2201  3193   	fcall	_printf
  4731                           
  4732                           ;Main.c: 50:         leerT = (float)MLX90614_ReadTemp(0x07);
  4733  1476  3007               	movlw	7
  4734  1477  3199  213C  3193   	fcall	_MLX90614_ReadTemp
  4735  147A  0879               	movf	?_MLX90614_ReadTemp,w
  4736  147B  0021               	movlb	1	; select bank1
  4737  147C  00E8               	movwf	??_main^(0+128)
  4738  147D  087A               	movf	?_MLX90614_ReadTemp+1,w
  4739  147E  00E9               	movwf	(??_main^(0+128)+1)
  4740  147F  01EA               	clrf	(??_main^(0+128)+2)
  4741  1480  01EB               	clrf	(??_main^(0+128)+3)
  4742  1481  086B               	movf	(??_main+3)^(0+128),w
  4743  1482  0020               	movlb	0	; select bank0
  4744  1483  00A3               	movwf	___xxtofl@val+3
  4745  1484  0021               	movlb	1	; select bank1
  4746  1485  086A               	movf	(??_main+2)^(0+128),w
  4747  1486  0020               	movlb	0	; select bank0
  4748  1487  00A2               	movwf	___xxtofl@val+2
  4749  1488  0021               	movlb	1	; select bank1
  4750  1489  0869               	movf	(??_main+1)^(0+128),w
  4751  148A  0020               	movlb	0	; select bank0
  4752  148B  00A1               	movwf	___xxtofl@val+1
  4753  148C  0021               	movlb	1	; select bank1
  4754  148D  0868               	movf	??_main^(0+128),w
  4755  148E  0020               	movlb	0	; select bank0
  4756  148F  00A0               	movwf	___xxtofl@val
  4757  1490  3000               	movlw	0
  4758  1491  319F  276B  3193   	fcall	___xxtofl
  4759  1494  0823               	movf	?___xxtofl+3,w
  4760  1495  00CB               	movwf	___fltol@f1+3
  4761  1496  0822               	movf	?___xxtofl+2,w
  4762  1497  00CA               	movwf	___fltol@f1+2
  4763  1498  0821               	movf	?___xxtofl+1,w
  4764  1499  00C9               	movwf	___fltol@f1+1
  4765  149A  0820               	movf	?___xxtofl,w
  4766  149B  00C8               	movwf	___fltol@f1
  4767  149C  319E  2613  3193   	fcall	___fltol
  4768  149F  0849               	movf	?___fltol+1,w
  4769  14A0  0022               	movlb	2	; select bank2
  4770  14A1  00CA               	movwf	(main@leerT+1)^(0+256)
  4771  14A2  0020               	movlb	0	; select bank0
  4772  14A3  0848               	movf	?___fltol,w
  4773  14A4  0022               	movlb	2	; select bank2
  4774  14A5  00C9               	movwf	main@leerT^(0+256)
  4775                           
  4776                           ;Main.c: 51:         temp = (leerT * 0.02) - 273.15;
  4777  14A6  30C3               	movlw	195
  4778  14A7  0020               	movlb	0	; select bank0
  4779  14A8  00CB               	movwf	___fladd@b+3
  4780  14A9  3088               	movlw	136
  4781  14AA  00CA               	movwf	___fladd@b+2
  4782  14AB  3093               	movlw	147
  4783  14AC  00C9               	movwf	___fladd@b+1
  4784  14AD  3033               	movlw	51
  4785  14AE  00C8               	movwf	___fladd@b
  4786  14AF  303C               	movlw	60
  4787  14B0  00B1               	movwf	___flmul@b+3
  4788  14B1  30A3               	movlw	163
  4789  14B2  00B0               	movwf	___flmul@b+2
  4790  14B3  30D7               	movlw	215
  4791  14B4  00AF               	movwf	___flmul@b+1
  4792  14B5  300A               	movlw	10
  4793  14B6  00AE               	movwf	___flmul@b
  4794  14B7  0022               	movlb	2	; select bank2
  4795  14B8  0849               	movf	main@leerT^(0+256),w
  4796  14B9  0020               	movlb	0	; select bank0
  4797  14BA  00A0               	movwf	___xxtofl@val
  4798  14BB  0022               	movlb	2	; select bank2
  4799  14BC  084A               	movf	(main@leerT+1)^(0+256),w
  4800  14BD  0020               	movlb	0	; select bank0
  4801  14BE  00A1               	movwf	___xxtofl@val+1
  4802  14BF  01A2               	clrf	___xxtofl@val+2
  4803  14C0  01A3               	clrf	___xxtofl@val+3
  4804  14C1  3000               	movlw	0
  4805  14C2  319F  276B  3193   	fcall	___xxtofl
  4806  14C5  0823               	movf	?___xxtofl+3,w
  4807  14C6  00B5               	movwf	___flmul@a+3
  4808  14C7  0822               	movf	?___xxtofl+2,w
  4809  14C8  00B4               	movwf	___flmul@a+2
  4810  14C9  0821               	movf	?___xxtofl+1,w
  4811  14CA  00B3               	movwf	___flmul@a+1
  4812  14CB  0820               	movf	?___xxtofl,w
  4813  14CC  00B2               	movwf	___flmul@a
  4814  14CD  318A  221E  3193   	fcall	___flmul
  4815  14D0  0831               	movf	?___flmul+3,w
  4816  14D1  00CF               	movwf	___fladd@a+3
  4817  14D2  0830               	movf	?___flmul+2,w
  4818  14D3  00CE               	movwf	___fladd@a+2
  4819  14D4  082F               	movf	?___flmul+1,w
  4820  14D5  00CD               	movwf	___fladd@a+1
  4821  14D6  082E               	movf	?___flmul,w
  4822  14D7  00CC               	movwf	___fladd@a
  4823  14D8  3188  203D  3193   	fcall	___fladd
  4824  14DB  084B               	movf	?___fladd+3,w
  4825  14DC  0022               	movlb	2	; select bank2
  4826  14DD  00CE               	movwf	(main@temp+3)^(0+256)
  4827  14DE  0020               	movlb	0	; select bank0
  4828  14DF  084A               	movf	?___fladd+2,w
  4829  14E0  0022               	movlb	2	; select bank2
  4830  14E1  00CD               	movwf	(main@temp+2)^(0+256)
  4831  14E2  0020               	movlb	0	; select bank0
  4832  14E3  0849               	movf	?___fladd+1,w
  4833  14E4  0022               	movlb	2	; select bank2
  4834  14E5  00CC               	movwf	(main@temp+1)^(0+256)
  4835  14E6  0020               	movlb	0	; select bank0
  4836  14E7  0848               	movf	?___fladd,w
  4837  14E8  0022               	movlb	2	; select bank2
  4838  14E9  00CB               	movwf	main@temp^(0+256)
  4839                           
  4840                           ;Main.c: 52:         printf("Tobj: %3.2f\t%d\t0x%x\n",temp,leerT,leerT);
  4841  14EA  3034               	movlw	low (STR_2| (0+32768))
  4842  14EB  00BF               	movwf	printf@fmt^(0+256)
  4843  14EC  3098               	movlw	high (STR_2| (0+32768))
  4844  14ED  00C0               	movwf	(printf@fmt^(0+256)+1)
  4845  14EE  084E               	movf	(main@temp+3)^(0+256),w
  4846  14EF  00C4               	movwf	((?_printf+3)^(0+256)+2)
  4847  14F0  084D               	movf	(main@temp+2)^(0+256),w
  4848  14F1  00C3               	movwf	((?_printf+2)^(0+256)+2)
  4849  14F2  084C               	movf	(main@temp+1)^(0+256),w
  4850  14F3  00C2               	movwf	((?_printf+1)^(0+256)+2)
  4851  14F4  084B               	movf	main@temp^(0+256),w
  4852  14F5  00C1               	movwf	(?_printf^(0+256)+2)
  4853  14F6  084A               	movf	(main@leerT+1)^(0+256),w
  4854  14F7  00C6               	movwf	((?_printf+1)^(0+256)+6)
  4855  14F8  0849               	movf	main@leerT^(0+256),w
  4856  14F9  00C5               	movwf	(?_printf^(0+256)+6)
  4857  14FA  084A               	movf	(main@leerT+1)^(0+256),w
  4858  14FB  00C8               	movwf	((?_printf+1)^(0+256)+8)
  4859  14FC  0849               	movf	main@leerT^(0+256),w
  4860  14FD  00C7               	movwf	(?_printf^(0+256)+8)
  4861  14FE  319A  2201  3193   	fcall	_printf
  4862                           
  4863                           ;Main.c: 53:         temp = readEmissivity();
  4864  1501  3188  2003  3193   	fcall	_readEmissivity
  4865  1504  0831               	movf	?_readEmissivity+3,w
  4866  1505  0022               	movlb	2	; select bank2
  4867  1506  00CE               	movwf	(main@temp+3)^(0+256)
  4868  1507  0020               	movlb	0	; select bank0
  4869  1508  0830               	movf	?_readEmissivity+2,w
  4870  1509  0022               	movlb	2	; select bank2
  4871  150A  00CD               	movwf	(main@temp+2)^(0+256)
  4872  150B  0020               	movlb	0	; select bank0
  4873  150C  082F               	movf	?_readEmissivity+1,w
  4874  150D  0022               	movlb	2	; select bank2
  4875  150E  00CC               	movwf	(main@temp+1)^(0+256)
  4876  150F  0020               	movlb	0	; select bank0
  4877  1510  082E               	movf	?_readEmissivity,w
  4878  1511  0022               	movlb	2	; select bank2
  4879  1512  00CB               	movwf	main@temp^(0+256)
  4880                           
  4881                           ;Main.c: 54:         printf("readEmissivity: %3.2f\n",temp);
  4882  1513  301D               	movlw	low (STR_3| (0+32768))
  4883  1514  00BF               	movwf	printf@fmt^(0+256)
  4884  1515  3098               	movlw	high (STR_3| (0+32768))
  4885  1516  00C0               	movwf	(printf@fmt^(0+256)+1)
  4886  1517  084E               	movf	(main@temp+3)^(0+256),w
  4887  1518  00C4               	movwf	((?_printf+3)^(0+256)+2)
  4888  1519  084D               	movf	(main@temp+2)^(0+256),w
  4889  151A  00C3               	movwf	((?_printf+2)^(0+256)+2)
  4890  151B  084C               	movf	(main@temp+1)^(0+256),w
  4891  151C  00C2               	movwf	((?_printf+1)^(0+256)+2)
  4892  151D  084B               	movf	main@temp^(0+256),w
  4893  151E  00C1               	movwf	(?_printf^(0+256)+2)
  4894  151F  319A  2201  3193   	fcall	_printf
  4895                           
  4896                           ;Main.c: 56:         _delay((unsigned long)((500)*(32000000UL/4000.0)));
  4897  1522  3015               	movlw	21
  4898  1523  0021               	movlb	1	; select bank1
  4899  1524  00E9               	movwf	(??_main^(0+128)+1)
  4900  1525  304B               	movlw	75
  4901  1526  00E8               	movwf	??_main^(0+128)
  4902  1527  30BE               	movlw	190
  4903  1528                     u7337:
  4904  1528  0B89               	decfsz	9,f
  4905  1529  2D28               	goto	u7337
  4906  152A  0BE8               	decfsz	??_main^(0+128),f
  4907  152B  2D28               	goto	u7337
  4908  152C  0BE9               	decfsz	(??_main^(0+128)+1),f
  4909  152D  2D28               	goto	u7337
  4910  152E  0000               	nop
  4911  152F  2BFC               	goto	l4839
  4912  1530                     __end_of_main:
  4913                           
  4914                           	psect	text1
  4915  1BF7                     __ptext1:	
  4916 ;; *************** function _writeEmissivity *****************
  4917 ;; Defined at:
  4918 ;;		line 55 in file "MLX90614.c"
  4919 ;; Parameters:    Size  Location     Type
  4920 ;;  emissivity      4   49[BANK0 ] float 
  4921 ;; Auto vars:     Size  Location     Type
  4922 ;;  ereg            2   54[BANK0 ] unsigned short 
  4923 ;; Return value:  Size  Location     Type
  4924 ;;                  1    wreg      void 
  4925 ;; Registers used:
  4926 ;;		wreg, status,2, status,0, pclath, cstack
  4927 ;; Tracked objects:
  4928 ;;		On entry : B1F/0
  4929 ;;		On exit  : 0/0
  4930 ;;		Unchanged: 0/0
  4931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4932 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4933 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4934 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4935 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4936 ;;Total ram usage:        7 bytes
  4937 ;; Hardware stack levels used: 1
  4938 ;; Hardware stack levels required when called: 2
  4939 ;; This function calls:
  4940 ;;		_MLX90614_WriteReg
  4941 ;;		___flmul
  4942 ;;		___fltol
  4943 ;; This function is called by:
  4944 ;;		_main
  4945 ;; This function uses a non-reentrant model
  4946 ;;
  4947                           
  4948                           
  4949                           ;psect for function _writeEmissivity
  4950  1BF7                     _writeEmissivity:
  4951                           
  4952                           ;MLX90614.c: 56:     uint16_t ereg = (uint16_t)(0xffff * emissivity);
  4953                           
  4954                           ;incstack = 0
  4955                           ; Regs used in _writeEmissivity: [wreg+status,2+status,0+pclath+cstack]
  4956  1BF7  0854               	movf	writeEmissivity@emissivity+3,w
  4957  1BF8  00B5               	movwf	___flmul@a+3
  4958  1BF9  0853               	movf	writeEmissivity@emissivity+2,w
  4959  1BFA  00B4               	movwf	___flmul@a+2
  4960  1BFB  0852               	movf	writeEmissivity@emissivity+1,w
  4961  1BFC  00B3               	movwf	___flmul@a+1
  4962  1BFD  0851               	movf	writeEmissivity@emissivity,w
  4963  1BFE  00B2               	movwf	___flmul@a
  4964  1BFF  3047               	movlw	71
  4965  1C00  00B1               	movwf	___flmul@b+3
  4966  1C01  307F               	movlw	127
  4967  1C02  00B0               	movwf	___flmul@b+2
  4968  1C03  30FF               	movlw	255
  4969  1C04  00AF               	movwf	___flmul@b+1
  4970  1C05  3000               	movlw	0
  4971  1C06  00AE               	movwf	___flmul@b
  4972  1C07  318A  221E  319B   	fcall	___flmul
  4973  1C0A  0831               	movf	?___flmul+3,w
  4974  1C0B  00CB               	movwf	___fltol@f1+3
  4975  1C0C  0830               	movf	?___flmul+2,w
  4976  1C0D  00CA               	movwf	___fltol@f1+2
  4977  1C0E  082F               	movf	?___flmul+1,w
  4978  1C0F  00C9               	movwf	___fltol@f1+1
  4979  1C10  082E               	movf	?___flmul,w
  4980  1C11  00C8               	movwf	___fltol@f1
  4981  1C12  319E  2613  319B   	fcall	___fltol
  4982  1C15  0849               	movf	?___fltol+1,w
  4983  1C16  00D7               	movwf	writeEmissivity@ereg+1
  4984  1C17  0848               	movf	?___fltol,w
  4985  1C18  00D6               	movwf	writeEmissivity@ereg
  4986                           
  4987                           ;MLX90614.c: 57:     MLX90614_WriteReg(0x24,0);
  4988  1C19  3000               	movlw	0
  4989  1C1A  00F1               	movwf	MLX90614_WriteReg@val
  4990  1C1B  00F2               	movwf	MLX90614_WriteReg@val+1
  4991  1C1C  3024               	movlw	36
  4992  1C1D  319A  22BE  319B   	fcall	_MLX90614_WriteReg
  4993                           
  4994                           ;MLX90614.c: 58:     _delay((unsigned long)((10)*(32000000UL/4000.0)));
  4995  1C20  3068               	movlw	104
  4996  1C21  0020               	movlb	0	; select bank0
  4997  1C22  00D5               	movwf	??_writeEmissivity
  4998  1C23  30E4               	movlw	228
  4999  1C24                     u7347:
  5000  1C24  0B89               	decfsz	9,f
  5001  1C25  2C24               	goto	u7347
  5002  1C26  0BD5               	decfsz	??_writeEmissivity,f
  5003  1C27  2C24               	goto	u7347
  5004  1C28  0000               	nop
  5005                           
  5006                           ;MLX90614.c: 59:     MLX90614_WriteReg(0x24,ereg);
  5007  1C29  0020               	movlb	0	; select bank0
  5008  1C2A  0857               	movf	writeEmissivity@ereg+1,w
  5009  1C2B  00F2               	movwf	MLX90614_WriteReg@val+1
  5010  1C2C  0856               	movf	writeEmissivity@ereg,w
  5011  1C2D  00F1               	movwf	MLX90614_WriteReg@val
  5012  1C2E  3024               	movlw	36
  5013  1C2F  319A  22BE  319B   	fcall	_MLX90614_WriteReg
  5014                           
  5015                           ;MLX90614.c: 60:     _delay((unsigned long)((10)*(32000000UL/4000.0)));
  5016  1C32  3068               	movlw	104
  5017  1C33  0020               	movlb	0	; select bank0
  5018  1C34  00D5               	movwf	??_writeEmissivity
  5019  1C35  30E4               	movlw	228
  5020  1C36                     u7357:
  5021  1C36  0B89               	decfsz	9,f
  5022  1C37  2C36               	goto	u7357
  5023  1C38  0BD5               	decfsz	??_writeEmissivity,f
  5024  1C39  2C36               	goto	u7357
  5025  1C3A  0000               	nop
  5026  1C3B  0008               	return
  5027  1C3C                     __end_of_writeEmissivity:
  5028                           
  5029                           	psect	text2
  5030  1ABE                     __ptext2:	
  5031 ;; *************** function _MLX90614_WriteReg *****************
  5032 ;; Defined at:
  5033 ;;		line 43 in file "MLX90614.c"
  5034 ;; Parameters:    Size  Location     Type
  5035 ;;  reg             1    wreg     unsigned char 
  5036 ;;  val             2    1[COMMON] unsigned short 
  5037 ;; Auto vars:     Size  Location     Type
  5038 ;;  reg             1    3[COMMON] unsigned char 
  5039 ;; Return value:  Size  Location     Type
  5040 ;;                  1    wreg      void 
  5041 ;; Registers used:
  5042 ;;		wreg, status,2, status,0, pclath, cstack
  5043 ;; Tracked objects:
  5044 ;;		On entry : 1F/0
  5045 ;;		On exit  : 1F/3
  5046 ;;		Unchanged: 0/0
  5047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5048 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5049 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5051 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5052 ;;Total ram usage:        3 bytes
  5053 ;; Hardware stack levels used: 1
  5054 ;; Hardware stack levels required when called: 1
  5055 ;; This function calls:
  5056 ;;		_I2C_restart
  5057 ;;		_I2C_start
  5058 ;;		_I2C_stop
  5059 ;;		_I2C_write
  5060 ;; This function is called by:
  5061 ;;		_writeEmissivity
  5062 ;; This function uses a non-reentrant model
  5063 ;;
  5064                           
  5065                           
  5066                           ;psect for function _MLX90614_WriteReg
  5067  1ABE                     _MLX90614_WriteReg:
  5068                           
  5069                           ;incstack = 0
  5070                           ; Regs used in _MLX90614_WriteReg: [wreg+status,2+status,0+pclath+cstack]
  5071                           ;MLX90614_WriteReg@reg stored from wreg
  5072  1ABE  00F3               	movwf	MLX90614_WriteReg@reg
  5073                           
  5074                           ;MLX90614.c: 44:     I2C_start();
  5075  1ABF  3199  211C  319A   	fcall	_I2C_start
  5076                           
  5077                           ;MLX90614.c: 45:     I2C_write(0x5A << 1);
  5078  1AC2  30B4               	movlw	180
  5079  1AC3  3199  2153  319A   	fcall	_I2C_write
  5080                           
  5081                           ;MLX90614.c: 46:     I2C_write(reg);
  5082  1AC6  0873               	movf	MLX90614_WriteReg@reg,w
  5083  1AC7  3199  2153  319A   	fcall	_I2C_write
  5084                           
  5085                           ;MLX90614.c: 47:     I2C_restart();
  5086  1ACA  3190  2000  319A   	fcall	_I2C_restart
  5087                           
  5088                           ;MLX90614.c: 48:     I2C_write((0x5A << 1)| 0x01);
  5089  1ACD  30B5               	movlw	181
  5090  1ACE  3199  2153  319A   	fcall	_I2C_write
  5091                           
  5092                           ;MLX90614.c: 49:     I2C_write(val & 0xff);
  5093  1AD1  0871               	movf	MLX90614_WriteReg@val,w
  5094  1AD2  3199  2153  319A   	fcall	_I2C_write
  5095                           
  5096                           ;MLX90614.c: 50:     I2C_write(val >> 8);
  5097  1AD5  0872               	movf	MLX90614_WriteReg@val+1,w
  5098  1AD6  3199  2153  319A   	fcall	_I2C_write
  5099                           
  5100                           ;MLX90614.c: 51:     I2C_stop();
  5101  1AD9  3180  2004         	fcall	_I2C_stop
  5102  1ADB  0008               	return
  5103  1ADC                     __end_of_MLX90614_WriteReg:
  5104                           
  5105                           	psect	text3
  5106  1C84                     __ptext3:	
  5107 ;; *************** function _serial_init *****************
  5108 ;; Defined at:
  5109 ;;		line 4 in file "uart.c"
  5110 ;; Parameters:    Size  Location     Type
  5111 ;;  baudios         4    0[BANK0 ] unsigned long 
  5112 ;; Auto vars:     Size  Location     Type
  5113 ;;  sx              2    8[BANK0 ] unsigned short 
  5114 ;; Return value:  Size  Location     Type
  5115 ;;                  1    wreg      void 
  5116 ;; Registers used:
  5117 ;;		wreg, status,2, status,0, pclath, cstack
  5118 ;; Tracked objects:
  5119 ;;		On entry : B1F/0
  5120 ;;		On exit  : B1F/1E
  5121 ;;		Unchanged: B00/0
  5122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5123 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5124 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5125 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5126 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5127 ;;Total ram usage:       10 bytes
  5128 ;; Hardware stack levels used: 1
  5129 ;; Hardware stack levels required when called: 1
  5130 ;; This function calls:
  5131 ;;		___lldiv
  5132 ;; This function is called by:
  5133 ;;		_main
  5134 ;; This function uses a non-reentrant model
  5135 ;;
  5136                           
  5137                           
  5138                           ;psect for function _serial_init
  5139  1C84                     _serial_init:
  5140                           
  5141                           ;uart.c: 5:     uint16_t sx;;uart.c: 8:     BAUD1CON = 0x08;
  5142                           
  5143                           ;incstack = 0
  5144                           ; Regs used in _serial_init: [wreg+status,2+status,0+pclath+cstack]
  5145  1C84  3008               	movlw	8
  5146  1C85  0022               	movlb	2	; select bank2
  5147  1C86  009F               	movwf	31	;volatile
  5148                           
  5149                           ;uart.c: 10:     RC1STA = 0b10010000;
  5150  1C87  3090               	movlw	144
  5151  1C88  009D               	movwf	29	;volatile
  5152                           
  5153                           ;uart.c: 16:     TX1STA = 0b00100100;
  5154  1C89  3024               	movlw	36
  5155  1C8A  009E               	movwf	30	;volatile
  5156                           
  5157                           ;uart.c: 21:     sx = (uint16_t) (((32000000UL/baudios)/4 ) - 1 );
  5158  1C8B  0020               	movlb	0	; select bank0
  5159  1C8C  0823               	movf	serial_init@baudios+3,w
  5160  1C8D  00F3               	movwf	___lldiv@divisor+3
  5161  1C8E  0822               	movf	serial_init@baudios+2,w
  5162  1C8F  00F2               	movwf	___lldiv@divisor+2
  5163  1C90  0821               	movf	serial_init@baudios+1,w
  5164  1C91  00F1               	movwf	___lldiv@divisor+1
  5165  1C92  0820               	movf	serial_init@baudios,w
  5166  1C93  00F0               	movwf	___lldiv@divisor
  5167  1C94  3001               	movlw	1
  5168  1C95  00F7               	movwf	___lldiv@dividend+3
  5169  1C96  30E8               	movlw	232
  5170  1C97  00F6               	movwf	___lldiv@dividend+2
  5171  1C98  3048               	movlw	72
  5172  1C99  00F5               	movwf	___lldiv@dividend+1
  5173  1C9A  3000               	movlw	0
  5174  1C9B  00F4               	movwf	___lldiv@dividend
  5175  1C9C  319D  25C1  319C   	fcall	___lldiv
  5176  1C9F  0870               	movf	?___lldiv,w
  5177  1CA0  00A4               	movwf	??_serial_init
  5178  1CA1  0871               	movf	?___lldiv+1,w
  5179  1CA2  00A5               	movwf	??_serial_init+1
  5180  1CA3  0872               	movf	?___lldiv+2,w
  5181  1CA4  00A6               	movwf	??_serial_init+2
  5182  1CA5  0873               	movf	?___lldiv+3,w
  5183  1CA6  00A7               	movwf	??_serial_init+3
  5184  1CA7  3002               	movlw	2
  5185  1CA8                     u7325:
  5186  1CA8  36A7               	lsrf	??_serial_init+3,f
  5187  1CA9  0CA6               	rrf	??_serial_init+2,f
  5188  1CAA  0CA5               	rrf	??_serial_init+1,f
  5189  1CAB  0CA4               	rrf	??_serial_init,f
  5190  1CAC  0B89               	decfsz	9,f
  5191  1CAD  2CA8               	goto	u7325
  5192  1CAE  0824               	movf	??_serial_init,w
  5193  1CAF  3EFF               	addlw	255
  5194  1CB0  00A8               	movwf	serial_init@sx
  5195  1CB1  30FF               	movlw	255
  5196  1CB2  3D25               	addwfc	??_serial_init+1,w
  5197  1CB3  00A9               	movwf	serial_init@sx+1
  5198                           
  5199                           ;uart.c: 22:     SP1BRGL = (uint8_t)sx;
  5200  1CB4  0828               	movf	serial_init@sx,w
  5201  1CB5  0022               	movlb	2	; select bank2
  5202  1CB6  009B               	movwf	27	;volatile
  5203                           
  5204                           ;uart.c: 23:     SP1BRGH = (uint8_t)(sx>>8);
  5205  1CB7  0020               	movlb	0	; select bank0
  5206  1CB8  0829               	movf	serial_init@sx+1,w
  5207  1CB9  0022               	movlb	2	; select bank2
  5208  1CBA  009C               	movwf	28	;volatile
  5209                           
  5210                           ;uart.c: 28:     TRISC = TRISC & ~(1<<0);
  5211  1CBB  0020               	movlb	0	; select bank0
  5212  1CBC  0813               	movf	19,w	;volatile
  5213  1CBD  39FE               	andlw	254
  5214  1CBE  0093               	movwf	19	;volatile
  5215                           
  5216                           ;uart.c: 29:     TRISC = TRISC |(1<<1);
  5217  1CBF  0813               	movf	19,w	;volatile
  5218  1CC0  3802               	iorlw	2
  5219  1CC1  0093               	movwf	19	;volatile
  5220                           
  5221                           ;uart.c: 30:     ANSELC = ANSELC & ~(1<<7);
  5222  1CC2  003E               	movlb	30	; select bank30
  5223  1CC3  084E               	movf	78,w	;volatile
  5224  1CC4  397F               	andlw	127
  5225  1CC5  00CE               	movwf	78	;volatile
  5226                           
  5227                           ;uart.c: 31:     ANSELC = ANSELC & ~(1<<2);
  5228  1CC6  084E               	movf	78,w	;volatile
  5229  1CC7  39FB               	andlw	251
  5230  1CC8  00CE               	movwf	78	;volatile
  5231                           
  5232                           ;uart.c: 32:     RXPPS = 0x11;
  5233  1CC9  3011               	movlw	17
  5234  1CCA  003D               	movlb	29	; select bank29
  5235  1CCB  00CB               	movwf	75	;volatile
  5236                           
  5237                           ;uart.c: 34:     RC0PPS = 0x10;
  5238  1CCC  3010               	movlw	16
  5239  1CCD  003E               	movlb	30	; select bank30
  5240  1CCE  00A0               	movwf	32	;volatile
  5241  1CCF  0008               	return
  5242  1CD0                     __end_of_serial_init:
  5243                           
  5244                           	psect	text4
  5245  1DC1                     __ptext4:	
  5246 ;; *************** function ___lldiv *****************
  5247 ;; Defined at:
  5248 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
  5249 ;; Parameters:    Size  Location     Type
  5250 ;;  divisor         4    0[COMMON] unsigned long 
  5251 ;;  dividend        4    4[COMMON] unsigned long 
  5252 ;; Auto vars:     Size  Location     Type
  5253 ;;  quotient        4    9[COMMON] unsigned long 
  5254 ;;  counter         1   13[COMMON] unsigned char 
  5255 ;; Return value:  Size  Location     Type
  5256 ;;                  4    0[COMMON] unsigned long 
  5257 ;; Registers used:
  5258 ;;		wreg, status,2, status,0
  5259 ;; Tracked objects:
  5260 ;;		On entry : B1F/0
  5261 ;;		On exit  : B1F/0
  5262 ;;		Unchanged: B1F/0
  5263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5264 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5265 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5266 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5267 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5268 ;;Total ram usage:       14 bytes
  5269 ;; Hardware stack levels used: 1
  5270 ;; This function calls:
  5271 ;;		Nothing
  5272 ;; This function is called by:
  5273 ;;		_serial_init
  5274 ;; This function uses a non-reentrant model
  5275 ;;
  5276                           
  5277                           
  5278                           ;psect for function ___lldiv
  5279  1DC1                     ___lldiv:
  5280                           
  5281                           ;incstack = 0
  5282                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5283  1DC1  3000               	movlw	0
  5284  1DC2  00FC               	movwf	___lldiv@quotient+3
  5285  1DC3  3000               	movlw	0
  5286  1DC4  00FB               	movwf	___lldiv@quotient+2
  5287  1DC5  3000               	movlw	0
  5288  1DC6  00FA               	movwf	___lldiv@quotient+1
  5289  1DC7  3000               	movlw	0
  5290  1DC8  00F9               	movwf	___lldiv@quotient
  5291  1DC9  0873               	movf	___lldiv@divisor+3,w
  5292  1DCA  0472               	iorwf	___lldiv@divisor+2,w
  5293  1DCB  0471               	iorwf	___lldiv@divisor+1,w
  5294  1DCC  0470               	iorwf	___lldiv@divisor,w
  5295  1DCD  1903               	skipnz
  5296  1DCE  2E0A               	goto	l4707
  5297  1DCF  01FD               	clrf	___lldiv@counter
  5298  1DD0  0AFD               	incf	___lldiv@counter,f
  5299  1DD1                     l4693:
  5300  1DD1  1BF3               	btfsc	___lldiv@divisor+3,7
  5301  1DD2  2DDF               	goto	l4695
  5302  1DD3  3001               	movlw	1
  5303  1DD4                     u7115:
  5304  1DD4  35F0               	lslf	___lldiv@divisor,f
  5305  1DD5  0DF1               	rlf	___lldiv@divisor+1,f
  5306  1DD6  0DF2               	rlf	___lldiv@divisor+2,f
  5307  1DD7  0DF3               	rlf	___lldiv@divisor+3,f
  5308  1DD8  0B89               	decfsz	9,f
  5309  1DD9  2DD4               	goto	u7115
  5310  1DDA  3001               	movlw	1
  5311  1DDB  00F8               	movwf	??___lldiv
  5312  1DDC  0878               	movf	??___lldiv,w
  5313  1DDD  07FD               	addwf	___lldiv@counter,f
  5314  1DDE  2DD1               	goto	l4693
  5315  1DDF                     l4695:
  5316  1DDF  3001               	movlw	1
  5317  1DE0                     u7135:
  5318  1DE0  35F9               	lslf	___lldiv@quotient,f
  5319  1DE1  0DFA               	rlf	___lldiv@quotient+1,f
  5320  1DE2  0DFB               	rlf	___lldiv@quotient+2,f
  5321  1DE3  0DFC               	rlf	___lldiv@quotient+3,f
  5322  1DE4  0B89               	decfsz	9,f
  5323  1DE5  2DE0               	goto	u7135
  5324  1DE6  0873               	movf	___lldiv@divisor+3,w
  5325  1DE7  0277               	subwf	___lldiv@dividend+3,w
  5326  1DE8  1D03               	skipz
  5327  1DE9  2DF4               	goto	u7145
  5328  1DEA  0872               	movf	___lldiv@divisor+2,w
  5329  1DEB  0276               	subwf	___lldiv@dividend+2,w
  5330  1DEC  1D03               	skipz
  5331  1DED  2DF4               	goto	u7145
  5332  1DEE  0871               	movf	___lldiv@divisor+1,w
  5333  1DEF  0275               	subwf	___lldiv@dividend+1,w
  5334  1DF0  1D03               	skipz
  5335  1DF1  2DF4               	goto	u7145
  5336  1DF2  0870               	movf	___lldiv@divisor,w
  5337  1DF3  0274               	subwf	___lldiv@dividend,w
  5338  1DF4                     u7145:
  5339  1DF4  1C03               	skipc
  5340  1DF5  2DFF               	goto	l4703
  5341  1DF6  0870               	movf	___lldiv@divisor,w
  5342  1DF7  02F4               	subwf	___lldiv@dividend,f
  5343  1DF8  0871               	movf	___lldiv@divisor+1,w
  5344  1DF9  3BF5               	subwfb	___lldiv@dividend+1,f
  5345  1DFA  0872               	movf	___lldiv@divisor+2,w
  5346  1DFB  3BF6               	subwfb	___lldiv@dividend+2,f
  5347  1DFC  0873               	movf	___lldiv@divisor+3,w
  5348  1DFD  3BF7               	subwfb	___lldiv@dividend+3,f
  5349  1DFE  1479               	bsf	___lldiv@quotient,0
  5350  1DFF                     l4703:
  5351  1DFF  3001               	movlw	1
  5352  1E00                     u7155:
  5353  1E00  36F3               	lsrf	___lldiv@divisor+3,f
  5354  1E01  0CF2               	rrf	___lldiv@divisor+2,f
  5355  1E02  0CF1               	rrf	___lldiv@divisor+1,f
  5356  1E03  0CF0               	rrf	___lldiv@divisor,f
  5357  1E04  0B89               	decfsz	9,f
  5358  1E05  2E00               	goto	u7155
  5359  1E06  3001               	movlw	1
  5360  1E07  02FD               	subwf	___lldiv@counter,f
  5361  1E08  1D03               	btfss	3,2
  5362  1E09  2DDF               	goto	l4695
  5363  1E0A                     l4707:
  5364  1E0A  087C               	movf	___lldiv@quotient+3,w
  5365  1E0B  00F3               	movwf	?___lldiv+3
  5366  1E0C  087B               	movf	___lldiv@quotient+2,w
  5367  1E0D  00F2               	movwf	?___lldiv+2
  5368  1E0E  087A               	movf	___lldiv@quotient+1,w
  5369  1E0F  00F1               	movwf	?___lldiv+1
  5370  1E10  0879               	movf	___lldiv@quotient,w
  5371  1E11  00F0               	movwf	?___lldiv
  5372  1E12  0008               	return
  5373  1E13                     __end_of___lldiv:
  5374                           
  5375                           	psect	text5
  5376  0803                     __ptext5:	
  5377 ;; *************** function _readEmissivity *****************
  5378 ;; Defined at:
  5379 ;;		line 37 in file "MLX90614.c"
  5380 ;; Parameters:    Size  Location     Type
  5381 ;;		None
  5382 ;; Auto vars:     Size  Location     Type
  5383 ;;  reg             4   22[BANK0 ] float 
  5384 ;; Return value:  Size  Location     Type
  5385 ;;                  4   14[BANK0 ] float 
  5386 ;; Registers used:
  5387 ;;		wreg, status,2, status,0, pclath, cstack
  5388 ;; Tracked objects:
  5389 ;;		On entry : 1F/1
  5390 ;;		On exit  : 1F/0
  5391 ;;		Unchanged: 0/0
  5392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5393 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5394 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5395 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5396 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5397 ;;Total ram usage:       12 bytes
  5398 ;; Hardware stack levels used: 1
  5399 ;; Hardware stack levels required when called: 3
  5400 ;; This function calls:
  5401 ;;		_MLX90614_ReadReg
  5402 ;;		___fldiv
  5403 ;;		___xxtofl
  5404 ;; This function is called by:
  5405 ;;		_main
  5406 ;; This function uses a non-reentrant model
  5407 ;;
  5408                           
  5409                           
  5410                           ;psect for function _readEmissivity
  5411  0803                     _readEmissivity:
  5412                           
  5413                           ;MLX90614.c: 38:     float reg;;MLX90614.c: 39:     reg = MLX90614_ReadReg(0x24);
  5414                           
  5415                           ;incstack = 0
  5416                           ; Regs used in _readEmissivity: [wreg+status,2+status,0+pclath+cstack]
  5417  0803  3024               	movlw	36
  5418  0804  3190  200D  3188   	fcall	_MLX90614_ReadReg
  5419  0807  0871               	movf	?_MLX90614_ReadReg,w
  5420  0808  0020               	movlb	0	; select bank0
  5421  0809  00B2               	movwf	??_readEmissivity
  5422  080A  0872               	movf	?_MLX90614_ReadReg+1,w
  5423  080B  00B3               	movwf	??_readEmissivity+1
  5424  080C  01B4               	clrf	??_readEmissivity+2
  5425  080D  01B5               	clrf	??_readEmissivity+3
  5426  080E  0835               	movf	??_readEmissivity+3,w
  5427  080F  00A3               	movwf	___xxtofl@val+3
  5428  0810  0834               	movf	??_readEmissivity+2,w
  5429  0811  00A2               	movwf	___xxtofl@val+2
  5430  0812  0833               	movf	??_readEmissivity+1,w
  5431  0813  00A1               	movwf	___xxtofl@val+1
  5432  0814  0832               	movf	??_readEmissivity,w
  5433  0815  00A0               	movwf	___xxtofl@val
  5434  0816  3000               	movlw	0
  5435  0817  319F  276B  3188   	fcall	___xxtofl
  5436  081A  0823               	movf	?___xxtofl+3,w
  5437  081B  00B9               	movwf	readEmissivity@reg+3
  5438  081C  0822               	movf	?___xxtofl+2,w
  5439  081D  00B8               	movwf	readEmissivity@reg+2
  5440  081E  0821               	movf	?___xxtofl+1,w
  5441  081F  00B7               	movwf	readEmissivity@reg+1
  5442  0820  0820               	movf	?___xxtofl,w
  5443  0821  00B6               	movwf	readEmissivity@reg
  5444                           
  5445                           ;MLX90614.c: 40:     return (reg / 65535.0);
  5446  0822  3047               	movlw	71
  5447  0823  00F3               	movwf	___fldiv@a+3
  5448  0824  307F               	movlw	127
  5449  0825  00F2               	movwf	___fldiv@a+2
  5450  0826  30FF               	movlw	255
  5451  0827  00F1               	movwf	___fldiv@a+1
  5452  0828  3000               	movlw	0
  5453  0829  00F0               	movwf	___fldiv@a
  5454  082A  0839               	movf	readEmissivity@reg+3,w
  5455  082B  00F7               	movwf	___fldiv@b+3
  5456  082C  0838               	movf	readEmissivity@reg+2,w
  5457  082D  00F6               	movwf	___fldiv@b+2
  5458  082E  0837               	movf	readEmissivity@reg+1,w
  5459  082F  00F5               	movwf	___fldiv@b+1
  5460  0830  0836               	movf	readEmissivity@reg,w
  5461  0831  00F4               	movwf	___fldiv@b
  5462  0832  3196  2686         	fcall	___fldiv
  5463  0834  0873               	movf	?___fldiv+3,w
  5464  0835  00B1               	movwf	?_readEmissivity+3
  5465  0836  0872               	movf	?___fldiv+2,w
  5466  0837  00B0               	movwf	?_readEmissivity+2
  5467  0838  0871               	movf	?___fldiv+1,w
  5468  0839  00AF               	movwf	?_readEmissivity+1
  5469  083A  0870               	movf	?___fldiv,w
  5470  083B  00AE               	movwf	?_readEmissivity
  5471  083C  0008               	return
  5472  083D                     __end_of_readEmissivity:
  5473                           
  5474                           	psect	text6
  5475  1F6B                     __ptext6:	
  5476 ;; *************** function ___xxtofl *****************
  5477 ;; Defined at:
  5478 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  5479 ;; Parameters:    Size  Location     Type
  5480 ;;  sign            1    wreg     unsigned char 
  5481 ;;  val             4    0[BANK0 ] long 
  5482 ;; Auto vars:     Size  Location     Type
  5483 ;;  sign            1    8[BANK0 ] unsigned char 
  5484 ;;  arg             4   10[BANK0 ] unsigned long 
  5485 ;;  exp             1    9[BANK0 ] unsigned char 
  5486 ;; Return value:  Size  Location     Type
  5487 ;;                  4    0[BANK0 ] unsigned char 
  5488 ;; Registers used:
  5489 ;;		wreg, status,2, status,0
  5490 ;; Tracked objects:
  5491 ;;		On entry : 1F/0
  5492 ;;		On exit  : 1F/0
  5493 ;;		Unchanged: 0/0
  5494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5495 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5496 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5497 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5498 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5499 ;;Total ram usage:       14 bytes
  5500 ;; Hardware stack levels used: 1
  5501 ;; This function calls:
  5502 ;;		Nothing
  5503 ;; This function is called by:
  5504 ;;		_main
  5505 ;;		_readEmissivity
  5506 ;; This function uses a non-reentrant model
  5507 ;;
  5508                           
  5509                           
  5510                           ;psect for function ___xxtofl
  5511  1F6B                     ___xxtofl:
  5512                           
  5513                           ;incstack = 0
  5514                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5515                           ;___xxtofl@sign stored from wreg
  5516  1F6B  00A8               	movwf	___xxtofl@sign
  5517  1F6C  0828               	movf	___xxtofl@sign,w
  5518  1F6D  1D03               	btfss	3,2
  5519  1F6E  1FA3               	btfss	___xxtofl@val+3,7
  5520  1F6F  2F80               	goto	l4717
  5521  1F70  0920               	comf	___xxtofl@val,w
  5522  1F71  00AA               	movwf	___xxtofl@arg
  5523  1F72  0921               	comf	___xxtofl@val+1,w
  5524  1F73  00AB               	movwf	___xxtofl@arg+1
  5525  1F74  0922               	comf	___xxtofl@val+2,w
  5526  1F75  00AC               	movwf	___xxtofl@arg+2
  5527  1F76  0923               	comf	___xxtofl@val+3,w
  5528  1F77  00AD               	movwf	___xxtofl@arg+3
  5529  1F78  0AAA               	incf	___xxtofl@arg,f
  5530  1F79  1903               	skipnz
  5531  1F7A  0AAB               	incf	___xxtofl@arg+1,f
  5532  1F7B  1903               	skipnz
  5533  1F7C  0AAC               	incf	___xxtofl@arg+2,f
  5534  1F7D  1903               	skipnz
  5535  1F7E  0AAD               	incf	___xxtofl@arg+3,f
  5536  1F7F  2F88               	goto	l848
  5537  1F80                     l4717:
  5538  1F80  0823               	movf	___xxtofl@val+3,w
  5539  1F81  00AD               	movwf	___xxtofl@arg+3
  5540  1F82  0822               	movf	___xxtofl@val+2,w
  5541  1F83  00AC               	movwf	___xxtofl@arg+2
  5542  1F84  0821               	movf	___xxtofl@val+1,w
  5543  1F85  00AB               	movwf	___xxtofl@arg+1
  5544  1F86  0820               	movf	___xxtofl@val,w
  5545  1F87  00AA               	movwf	___xxtofl@arg
  5546  1F88                     l848:
  5547  1F88  0823               	movf	___xxtofl@val+3,w
  5548  1F89  0422               	iorwf	___xxtofl@val+2,w
  5549  1F8A  0421               	iorwf	___xxtofl@val+1,w
  5550  1F8B  0420               	iorwf	___xxtofl@val,w
  5551  1F8C  1D03               	skipz
  5552  1F8D  2F97               	goto	l4723
  5553  1F8E  3000               	movlw	0
  5554  1F8F  00A3               	movwf	?___xxtofl+3
  5555  1F90  3000               	movlw	0
  5556  1F91  00A2               	movwf	?___xxtofl+2
  5557  1F92  3000               	movlw	0
  5558  1F93  00A1               	movwf	?___xxtofl+1
  5559  1F94  3000               	movlw	0
  5560  1F95  00A0               	movwf	?___xxtofl
  5561  1F96  0008               	return
  5562  1F97                     l4723:
  5563  1F97  3096               	movlw	150
  5564  1F98  00A4               	movwf	??___xxtofl
  5565  1F99  0824               	movf	??___xxtofl,w
  5566  1F9A  00A9               	movwf	___xxtofl@exp
  5567  1F9B                     l4727:
  5568  1F9B  30FE               	movlw	254
  5569  1F9C  052D               	andwf	___xxtofl@arg+3,w
  5570  1F9D  1903               	btfsc	3,2
  5571  1F9E  2FBE               	goto	l854
  5572  1F9F  3001               	movlw	1
  5573  1FA0  00A4               	movwf	??___xxtofl
  5574  1FA1  0824               	movf	??___xxtofl,w
  5575  1FA2  07A9               	addwf	___xxtofl@exp,f
  5576  1FA3  3001               	movlw	1
  5577  1FA4                     u7205:
  5578  1FA4  36AD               	lsrf	___xxtofl@arg+3,f
  5579  1FA5  0CAC               	rrf	___xxtofl@arg+2,f
  5580  1FA6  0CAB               	rrf	___xxtofl@arg+1,f
  5581  1FA7  0CAA               	rrf	___xxtofl@arg,f
  5582  1FA8  0B89               	decfsz	9,f
  5583  1FA9  2FA4               	goto	u7205
  5584  1FAA  2F9B               	goto	l4727
  5585  1FAB                     l4729:
  5586  1FAB  3001               	movlw	1
  5587  1FAC  00A4               	movwf	??___xxtofl
  5588  1FAD  0824               	movf	??___xxtofl,w
  5589  1FAE  07A9               	addwf	___xxtofl@exp,f
  5590  1FAF  3001               	movlw	1
  5591  1FB0  07AA               	addwf	___xxtofl@arg,f
  5592  1FB1  3000               	movlw	0
  5593  1FB2  3DAB               	addwfc	___xxtofl@arg+1,f
  5594  1FB3  3000               	movlw	0
  5595  1FB4  3DAC               	addwfc	___xxtofl@arg+2,f
  5596  1FB5  3000               	movlw	0
  5597  1FB6  3DAD               	addwfc	___xxtofl@arg+3,f
  5598  1FB7  3001               	movlw	1
  5599  1FB8                     u7225:
  5600  1FB8  36AD               	lsrf	___xxtofl@arg+3,f
  5601  1FB9  0CAC               	rrf	___xxtofl@arg+2,f
  5602  1FBA  0CAB               	rrf	___xxtofl@arg+1,f
  5603  1FBB  0CAA               	rrf	___xxtofl@arg,f
  5604  1FBC  0B89               	decfsz	9,f
  5605  1FBD  2FB8               	goto	u7225
  5606  1FBE                     l854:
  5607  1FBE  30FF               	movlw	255
  5608  1FBF  052D               	andwf	___xxtofl@arg+3,w
  5609  1FC0  1903               	btfsc	3,2
  5610  1FC1  2FD0               	goto	l4737
  5611  1FC2  2FAB               	goto	l4729
  5612  1FC3                     l4739:
  5613  1FC3  3002               	movlw	2
  5614  1FC4  0229               	subwf	___xxtofl@exp,w
  5615  1FC5  1C03               	btfss	3,0
  5616  1FC6  2FD2               	goto	l861
  5617  1FC7  3001               	movlw	1
  5618  1FC8  02A9               	subwf	___xxtofl@exp,f
  5619  1FC9  3001               	movlw	1
  5620  1FCA                     u7245:
  5621  1FCA  35AA               	lslf	___xxtofl@arg,f
  5622  1FCB  0DAB               	rlf	___xxtofl@arg+1,f
  5623  1FCC  0DAC               	rlf	___xxtofl@arg+2,f
  5624  1FCD  0DAD               	rlf	___xxtofl@arg+3,f
  5625  1FCE  0B89               	decfsz	9,f
  5626  1FCF  2FCA               	goto	u7245
  5627  1FD0                     l4737:
  5628  1FD0  1FAC               	btfss	___xxtofl@arg+2,7
  5629  1FD1  2FC3               	goto	l4739
  5630  1FD2                     l861:
  5631  1FD2  1829               	btfsc	___xxtofl@exp,0
  5632  1FD3  2FDC               	goto	l862
  5633  1FD4  30FF               	movlw	255
  5634  1FD5  05AA               	andwf	___xxtofl@arg,f
  5635  1FD6  30FF               	movlw	255
  5636  1FD7  05AB               	andwf	___xxtofl@arg+1,f
  5637  1FD8  307F               	movlw	127
  5638  1FD9  05AC               	andwf	___xxtofl@arg+2,f
  5639  1FDA  30FF               	movlw	255
  5640  1FDB  05AD               	andwf	___xxtofl@arg+3,f
  5641  1FDC                     l862:
  5642  1FDC  1003               	clrc
  5643  1FDD  0CA9               	rrf	___xxtofl@exp,f
  5644  1FDE  0829               	movf	___xxtofl@exp,w
  5645  1FDF  00A4               	movwf	??___xxtofl
  5646  1FE0  01A5               	clrf	??___xxtofl+1
  5647  1FE1  01A6               	clrf	??___xxtofl+2
  5648  1FE2  01A7               	clrf	??___xxtofl+3
  5649  1FE3  3018               	movlw	24
  5650  1FE4                     u7285:
  5651  1FE4  35A4               	lslf	??___xxtofl,f
  5652  1FE5  0DA5               	rlf	??___xxtofl+1,f
  5653  1FE6  0DA6               	rlf	??___xxtofl+2,f
  5654  1FE7  0DA7               	rlf	??___xxtofl+3,f
  5655  1FE8  0B89               	decfsz	9,f
  5656  1FE9  2FE4               	goto	u7285
  5657  1FEA  0824               	movf	??___xxtofl,w
  5658  1FEB  04AA               	iorwf	___xxtofl@arg,f
  5659  1FEC  0825               	movf	??___xxtofl+1,w
  5660  1FED  04AB               	iorwf	___xxtofl@arg+1,f
  5661  1FEE  0826               	movf	??___xxtofl+2,w
  5662  1FEF  04AC               	iorwf	___xxtofl@arg+2,f
  5663  1FF0  0827               	movf	??___xxtofl+3,w
  5664  1FF1  04AD               	iorwf	___xxtofl@arg+3,f
  5665  1FF2  0828               	movf	___xxtofl@sign,w
  5666  1FF3  1D03               	btfss	3,2
  5667  1FF4  1FA3               	btfss	___xxtofl@val+3,7
  5668  1FF5  2FF7               	goto	l4751
  5669  1FF6  17AD               	bsf	___xxtofl@arg+3,7
  5670  1FF7                     l4751:
  5671  1FF7  082D               	movf	___xxtofl@arg+3,w
  5672  1FF8  00A3               	movwf	?___xxtofl+3
  5673  1FF9  082C               	movf	___xxtofl@arg+2,w
  5674  1FFA  00A2               	movwf	?___xxtofl+2
  5675  1FFB  082B               	movf	___xxtofl@arg+1,w
  5676  1FFC  00A1               	movwf	?___xxtofl+1
  5677  1FFD  082A               	movf	___xxtofl@arg,w
  5678  1FFE  00A0               	movwf	?___xxtofl
  5679  1FFF  0008               	return
  5680  2000                     __end_of___xxtofl:
  5681                           
  5682                           	psect	text7
  5683  1A01                     __ptext7:	
  5684 ;; *************** function _printf *****************
  5685 ;; Defined at:
  5686 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  5687 ;; Parameters:    Size  Location     Type
  5688 ;;  fmt             2   31[BANK2 ] PTR const unsigned char 
  5689 ;;		 -> STR_4(29), STR_3(23), STR_2(21), STR_1(16), 
  5690 ;; Auto vars:     Size  Location     Type
  5691 ;;  ret             2    0        int 
  5692 ;;  ap              1   71[BANK1 ] PTR void [1]
  5693 ;;		 -> ?_printf(2), 
  5694 ;; Return value:  Size  Location     Type
  5695 ;;                  2   31[BANK2 ] int 
  5696 ;; Registers used:
  5697 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5698 ;; Tracked objects:
  5699 ;;		On entry : 1F/2
  5700 ;;		On exit  : 1F/1
  5701 ;;		Unchanged: 0/0
  5702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5703 ;;      Params:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0
  5704 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5705 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5706 ;;      Totals:         0       1       1      10       0       0       0       0       0       0       0       0       
      +0       0
  5707 ;;Total ram usage:       12 bytes
  5708 ;; Hardware stack levels used: 1
  5709 ;; Hardware stack levels required when called: 8
  5710 ;; This function calls:
  5711 ;;		_vfprintf
  5712 ;; This function is called by:
  5713 ;;		_main
  5714 ;; This function uses a non-reentrant model
  5715 ;;
  5716                           
  5717                           
  5718                           ;psect for function _printf
  5719  1A01                     _printf:
  5720                           
  5721                           ;incstack = 0
  5722                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5723  1A01  3041               	movlw	(low ((?_printf| (0+256)+2)))& (0+255)
  5724  1A02  0020               	movlb	0	; select bank0
  5725  1A03  00EF               	movwf	??_printf
  5726  1A04  086F               	movf	??_printf,w
  5727  1A05  0021               	movlb	1	; select bank1
  5728  1A06  00E7               	movwf	printf@ap^(0+128)
  5729  1A07  0022               	movlb	2	; select bank2
  5730  1A08  0840               	movf	(printf@fmt+1)^(0+256),w
  5731  1A09  0021               	movlb	1	; select bank1
  5732  1A0A  00E0               	movwf	(vfprintf@fmt+1)^(0+128)
  5733  1A0B  0022               	movlb	2	; select bank2
  5734  1A0C  083F               	movf	printf@fmt^(0+256),w
  5735  1A0D  0021               	movlb	1	; select bank1
  5736  1A0E  00DF               	movwf	vfprintf@fmt^(0+128)
  5737  1A0F  30E7               	movlw	(low (printf@ap| 0))& (0+255)
  5738  1A10  0020               	movlb	0	; select bank0
  5739  1A11  00EF               	movwf	??_printf
  5740  1A12  086F               	movf	??_printf,w
  5741  1A13  0021               	movlb	1	; select bank1
  5742  1A14  00E1               	movwf	vfprintf@ap^(0+128)
  5743  1A15  3000               	movlw	0
  5744  1A16  319B  2381         	fcall	_vfprintf
  5745  1A18  0008               	return
  5746  1A19                     __end_of_printf:
  5747                           
  5748                           	psect	text8
  5749  1B81                     __ptext8:	
  5750 ;; *************** function _vfprintf *****************
  5751 ;; Defined at:
  5752 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5753 ;; Parameters:    Size  Location     Type
  5754 ;;  fp              1    wreg     PTR struct _IO_FILE
  5755 ;;		 -> NULL(0), 
  5756 ;;  fmt             2   63[BANK1 ] PTR const unsigned char 
  5757 ;;		 -> STR_4(29), STR_3(23), STR_2(21), STR_1(16), 
  5758 ;;  ap              1   65[BANK1 ] PTR PTR void 
  5759 ;;		 -> printf@ap(1), 
  5760 ;; Auto vars:     Size  Location     Type
  5761 ;;  fp              1   68[BANK1 ] PTR struct _IO_FILE
  5762 ;;		 -> NULL(0), 
  5763 ;;  cfmt            2   69[BANK1 ] PTR unsigned char 
  5764 ;;		 -> STR_4(29), STR_3(23), STR_2(21), STR_1(16), 
  5765 ;; Return value:  Size  Location     Type
  5766 ;;                  2   63[BANK1 ] int 
  5767 ;; Registers used:
  5768 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5769 ;; Tracked objects:
  5770 ;;		On entry : 1F/1
  5771 ;;		On exit  : 1F/1
  5772 ;;		Unchanged: 0/0
  5773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5774 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5775 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5776 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5777 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5778 ;;Total ram usage:        8 bytes
  5779 ;; Hardware stack levels used: 1
  5780 ;; Hardware stack levels required when called: 7
  5781 ;; This function calls:
  5782 ;;		_vfpfcnvrt
  5783 ;; This function is called by:
  5784 ;;		_printf
  5785 ;; This function uses a non-reentrant model
  5786 ;;
  5787                           
  5788                           
  5789                           ;psect for function _vfprintf
  5790  1B81                     _vfprintf:
  5791                           
  5792                           ;incstack = 0
  5793                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5794                           ;vfprintf@fp stored from wreg
  5795  1B81  00E4               	movwf	vfprintf@fp^(0+128)
  5796                           
  5797                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  5798  1B82  0860               	movf	(vfprintf@fmt+1)^(0+128),w
  5799  1B83  00E6               	movwf	(vfprintf@cfmt+1)^(0+128)
  5800  1B84  085F               	movf	vfprintf@fmt^(0+128),w
  5801  1B85  00E5               	movwf	vfprintf@cfmt^(0+128)
  5802                           
  5803                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  5804  1B86  0022               	movlb	2	; select bank2
  5805  1B87  01D7               	clrf	_nout^(0+256)
  5806  1B88  01D8               	clrf	(_nout+1)^(0+256)
  5807  1B89                     l4761:	
  5808                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5809                           
  5810                           
  5811                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5812  1B89  0021               	movlb	1	; select bank1
  5813  1B8A  0865               	movf	vfprintf@cfmt^(0+128),w
  5814  1B8B  0084               	movwf	4
  5815  1B8C  0866               	movf	(vfprintf@cfmt+1)^(0+128),w
  5816  1B8D  0085               	movwf	5
  5817  1B8E  0012               	moviw fsr0++
  5818  1B8F  1903               	btfsc	3,2
  5819  1B90  2BA9               	goto	l4763
  5820                           
  5821                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  5822  1B91  30E5               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  5823  1B92  00E2               	movwf	??_vfprintf^(0+128)
  5824  1B93  0862               	movf	??_vfprintf^(0+128),w
  5825  1B94  0020               	movlb	0	; select bank0
  5826  1B95  00ED               	movwf	vfpfcnvrt@fmt
  5827  1B96  0021               	movlb	1	; select bank1
  5828  1B97  0861               	movf	vfprintf@ap^(0+128),w
  5829  1B98  00E3               	movwf	(??_vfprintf+1)^(0+128)
  5830  1B99  0863               	movf	(??_vfprintf+1)^(0+128),w
  5831  1B9A  0020               	movlb	0	; select bank0
  5832  1B9B  00EE               	movwf	vfpfcnvrt@ap
  5833  1B9C  0021               	movlb	1	; select bank1
  5834  1B9D  0864               	movf	vfprintf@fp^(0+128),w
  5835  1B9E  318C  2436  319B   	fcall	_vfpfcnvrt
  5836  1BA1  086D               	movf	?_vfpfcnvrt,w
  5837  1BA2  0022               	movlb	2	; select bank2
  5838  1BA3  07D7               	addwf	_nout^(0+256),f
  5839  1BA4  0020               	movlb	0	; select bank0
  5840  1BA5  086E               	movf	?_vfpfcnvrt+1,w
  5841  1BA6  0022               	movlb	2	; select bank2
  5842  1BA7  3DD8               	addwfc	(_nout+1)^(0+256),f
  5843  1BA8  2B89               	goto	l4761
  5844  1BA9                     l4763:
  5845                           
  5846                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  5847  1BA9  0022               	movlb	2	; select bank2
  5848  1BAA  0858               	movf	(_nout+1)^(0+256),w
  5849  1BAB  0021               	movlb	1	; select bank1
  5850  1BAC  00E0               	movwf	(?_vfprintf+1)^(0+128)
  5851  1BAD  0022               	movlb	2	; select bank2
  5852  1BAE  0857               	movf	_nout^(0+256),w
  5853  1BAF  0021               	movlb	1	; select bank1
  5854  1BB0  00DF               	movwf	?_vfprintf^(0+128)
  5855  1BB1  0008               	return
  5856  1BB2                     __end_of_vfprintf:
  5857                           
  5858                           	psect	text9
  5859  0C36                     __ptext9:	
  5860 ;; *************** function _vfpfcnvrt *****************
  5861 ;; Defined at:
  5862 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5863 ;; Parameters:    Size  Location     Type
  5864 ;;  fp              1    wreg     PTR struct _IO_FILE
  5865 ;;		 -> NULL(0), 
  5866 ;;  fmt             1   77[BANK0 ] PTR PTR unsigned char 
  5867 ;;		 -> vfprintf@cfmt(2), 
  5868 ;;  ap              1   78[BANK0 ] PTR PTR void 
  5869 ;;		 -> printf@ap(1), 
  5870 ;; Auto vars:     Size  Location     Type
  5871 ;;  fp              1   30[BANK2 ] PTR struct _IO_FILE
  5872 ;;		 -> NULL(0), 
  5873 ;;  llu             8    8[BANK2 ] unsigned long long 
  5874 ;;  ll              8    0[BANK2 ] long long 
  5875 ;;  f               4   22[BANK2 ] long long 
  5876 ;;  ct              3   26[BANK2 ] unsigned char [3]
  5877 ;;  vp              2    0        PTR void 
  5878 ;;  i               2    0        int 
  5879 ;;  done            2    0        int 
  5880 ;;  cp              2    0        PTR unsigned char 
  5881 ;;  c               1   29[BANK2 ] unsigned char 
  5882 ;; Return value:  Size  Location     Type
  5883 ;;                  2   77[BANK0 ] int 
  5884 ;; Registers used:
  5885 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5886 ;; Tracked objects:
  5887 ;;		On entry : 1F/1
  5888 ;;		On exit  : 1F/0
  5889 ;;		Unchanged: 0/0
  5890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5891 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5892 ;;      Locals:         0       0       0      31       0       0       0       0       0       0       0       0       
      +0       0
  5893 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5894 ;;      Totals:         0       2       6      31       0       0       0       0       0       0       0       0       
      +0       0
  5895 ;;Total ram usage:       39 bytes
  5896 ;; Hardware stack levels used: 1
  5897 ;; Hardware stack levels required when called: 6
  5898 ;; This function calls:
  5899 ;;		_atoi
  5900 ;;		_dtoa
  5901 ;;		_efgtoa
  5902 ;;		_fputc
  5903 ;;		_isdigit
  5904 ;;		_isupper
  5905 ;;		_strncmp
  5906 ;;		_tolower
  5907 ;;		_xtoa
  5908 ;; This function is called by:
  5909 ;;		_vfprintf
  5910 ;; This function uses a non-reentrant model
  5911 ;;
  5912                           
  5913                           
  5914                           ;psect for function _vfpfcnvrt
  5915  0C36                     _vfpfcnvrt:
  5916                           
  5917                           ;incstack = 0
  5918                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5919                           ;vfpfcnvrt@fp stored from wreg
  5920  0C36  0022               	movlb	2	; select bank2
  5921  0C37  00BE               	movwf	vfpfcnvrt@fp^(0+256)
  5922                           
  5923                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  5924  0C38  0020               	movlb	0	; select bank0
  5925  0C39  086D               	movf	vfpfcnvrt@fmt,w
  5926  0C3A  0086               	movwf	6
  5927  0C3B  0187               	clrf	7
  5928  0C3C  3F40               	moviw [0]fsr1
  5929  0C3D  0021               	movlb	1	; select bank1
  5930  0C3E  00D9               	movwf	??_vfpfcnvrt^(0+128)
  5931  0C3F  3F41               	moviw [1]fsr1
  5932  0C40  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5933  0C41  0859               	movf	??_vfpfcnvrt^(0+128),w
  5934  0C42  0084               	movwf	4
  5935  0C43  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5936  0C44  0085               	movwf	5
  5937  0C45  0012               	moviw fsr0++
  5938  0C46  3A25               	xorlw	37
  5939  0C47  1D03               	btfss	3,2
  5940  0C48  2FD9               	goto	l4647
  5941                           
  5942                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  5943  0C49  0020               	movlb	0	; select bank0
  5944  0C4A  086D               	movf	vfpfcnvrt@fmt,w
  5945  0C4B  0086               	movwf	6
  5946  0C4C  0187               	clrf	7
  5947  0C4D  3001               	movlw	1
  5948  0C4E  0781               	addwf	1,f
  5949  0C4F  3141               	addfsr 1,1
  5950  0C50  1803               	skipnc
  5951  0C51  0A81               	incf	1,f
  5952                           
  5953                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  5954  0C52  0022               	movlb	2	; select bank2
  5955  0C53  01D9               	clrf	_width^(0+256)
  5956  0C54  01DA               	clrf	(_width+1)^(0+256)
  5957  0C55  0021               	movlb	1	; select bank1
  5958  0C56  01EE               	clrf	_flags^(0+128)
  5959  0C57  01EF               	clrf	(_flags+1)^(0+128)
  5960                           
  5961                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  5962  0C58  30FF               	movlw	255
  5963  0C59  00EC               	movwf	_prec^(0+128)
  5964  0C5A  30FF               	movlw	255
  5965  0C5B  00ED               	movwf	(_prec^(0+128)+1)
  5966                           
  5967                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  5968  0C5C  0020               	movlb	0	; select bank0
  5969  0C5D  086D               	movf	vfpfcnvrt@fmt,w
  5970  0C5E  0086               	movwf	6
  5971  0C5F  0187               	clrf	7
  5972  0C60  3F40               	moviw [0]fsr1
  5973  0C61  0021               	movlb	1	; select bank1
  5974  0C62  00D9               	movwf	??_vfpfcnvrt^(0+128)
  5975  0C63  3F41               	moviw [1]fsr1
  5976  0C64  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5977  0C65  0859               	movf	??_vfpfcnvrt^(0+128),w
  5978  0C66  0084               	movwf	4
  5979  0C67  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5980  0C68  0085               	movwf	5
  5981  0C69  0012               	moviw fsr0++
  5982  0C6A  3A2A               	xorlw	42
  5983  0C6B  1D03               	btfss	3,2
  5984  0C6C  2C8F               	goto	l4533
  5985                           
  5986                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  5987  0C6D  0020               	movlb	0	; select bank0
  5988  0C6E  086D               	movf	vfpfcnvrt@fmt,w
  5989  0C6F  0086               	movwf	6
  5990  0C70  0187               	clrf	7
  5991  0C71  3001               	movlw	1
  5992  0C72  0781               	addwf	1,f
  5993  0C73  3141               	addfsr 1,1
  5994  0C74  1803               	skipnc
  5995  0C75  0A81               	incf	1,f
  5996                           
  5997                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  5998  0C76  086E               	movf	vfpfcnvrt@ap,w
  5999  0C77  0086               	movwf	6
  6000  0C78  0187               	clrf	7
  6001  0C79  0801               	movf	1,w
  6002  0C7A  0084               	movwf	4
  6003  0C7B  3001               	movlw	1	; select bank2/3
  6004  0C7C  0085               	movwf	5
  6005  0C7D  3002               	movlw	2
  6006  0C7E  0781               	addwf	1,f
  6007  0C7F  3F00               	moviw [0]fsr0
  6008  0C80  0022               	movlb	2	; select bank2
  6009  0C81  00D9               	movwf	_width^(0+256)
  6010  0C82  3F01               	moviw [1]fsr0
  6011  0C83  00DA               	movwf	(_width+1)^(0+256)
  6012                           
  6013                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  6014  0C84  1FDA               	btfss	(_width+1)^(0+256),7
  6015  0C85  2CD4               	goto	l4543
  6016                           
  6017                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  6018  0C86  0021               	movlb	1	; select bank1
  6019  0C87  146E               	bsf	_flags^(0+128),0
  6020                           
  6021                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  6022  0C88  0022               	movlb	2	; select bank2
  6023  0C89  09D9               	comf	_width^(0+256),f
  6024  0C8A  09DA               	comf	(_width+1)^(0+256),f
  6025  0C8B  0AD9               	incf	_width^(0+256),f
  6026  0C8C  1903               	skipnz
  6027  0C8D  0ADA               	incf	(_width+1)^(0+256),f
  6028  0C8E  2CD4               	goto	l4543
  6029  0C8F                     l4533:
  6030                           
  6031                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  6032  0C8F  0020               	movlb	0	; select bank0
  6033  0C90  086D               	movf	vfpfcnvrt@fmt,w
  6034  0C91  0086               	movwf	6
  6035  0C92  0187               	clrf	7
  6036  0C93  3F40               	moviw [0]fsr1
  6037  0C94  00F6               	movwf	atoi@s
  6038  0C95  3F41               	moviw [1]fsr1
  6039  0C96  00F7               	movwf	atoi@s+1
  6040  0C97  3190  2040  318C   	fcall	_atoi
  6041  0C9A  0877               	movf	?_atoi+1,w
  6042  0C9B  0022               	movlb	2	; select bank2
  6043  0C9C  00DA               	movwf	(_width+1)^(0+256)
  6044  0C9D  0876               	movf	?_atoi,w
  6045  0C9E  00D9               	movwf	_width^(0+256)
  6046                           
  6047                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6048  0C9F  2CA9               	goto	l4537
  6049  0CA0                     l4535:
  6050                           
  6051                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  6052  0CA0  0020               	movlb	0	; select bank0
  6053  0CA1  086D               	movf	vfpfcnvrt@fmt,w
  6054  0CA2  0086               	movwf	6
  6055  0CA3  0187               	clrf	7
  6056  0CA4  3001               	movlw	1
  6057  0CA5  0781               	addwf	1,f
  6058  0CA6  3141               	addfsr 1,1
  6059  0CA7  1803               	skipnc
  6060  0CA8  0A81               	incf	1,f
  6061  0CA9                     l4537:
  6062  0CA9  0020               	movlb	0	; select bank0
  6063  0CAA  086D               	movf	vfpfcnvrt@fmt,w
  6064  0CAB  0086               	movwf	6
  6065  0CAC  0187               	clrf	7
  6066  0CAD  3F40               	moviw [0]fsr1
  6067  0CAE  0021               	movlb	1	; select bank1
  6068  0CAF  00D9               	movwf	??_vfpfcnvrt^(0+128)
  6069  0CB0  3F41               	moviw [1]fsr1
  6070  0CB1  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6071  0CB2  0859               	movf	??_vfpfcnvrt^(0+128),w
  6072  0CB3  0084               	movwf	4
  6073  0CB4  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  6074  0CB5  0085               	movwf	5
  6075  0CB6  0800               	movf	0,w	;code access
  6076  0CB7  3ED0               	addlw	208
  6077  0CB8  00DB               	movwf	(??_vfpfcnvrt+2)^(0+128)
  6078  0CB9  30FF               	movlw	255
  6079  0CBA  1803               	skipnc
  6080  0CBB  3000               	movlw	0
  6081  0CBC  00DC               	movwf	((??_vfpfcnvrt+2)^(0+128)+1)
  6082  0CBD  3000               	movlw	0
  6083  0CBE  025C               	subwf	(??_vfpfcnvrt+3)^(0+128),w
  6084  0CBF  300A               	movlw	10
  6085  0CC0  1903               	skipnz
  6086  0CC1  025B               	subwf	(??_vfpfcnvrt+2)^(0+128),w
  6087  0CC2  1803               	btfsc	3,0
  6088  0CC3  2CC6               	goto	u6900
  6089  0CC4  3001               	movlw	1
  6090  0CC5  2CC7               	goto	u6910
  6091  0CC6                     u6900:
  6092  0CC6  3000               	movlw	0
  6093  0CC7                     u6910:
  6094  0CC7  00DD               	movwf	(??_vfpfcnvrt+4)^(0+128)
  6095  0CC8  01DE               	clrf	((??_vfpfcnvrt+4)^(0+128)+1)
  6096  0CC9  085D               	movf	(??_vfpfcnvrt+4)^(0+128),w
  6097  0CCA  0022               	movlb	2	; select bank2
  6098  0CCB  00B0               	movwf	_vfpfcnvrt$990^(0+256)
  6099  0CCC  0021               	movlb	1	; select bank1
  6100  0CCD  085E               	movf	(??_vfpfcnvrt+5)^(0+128),w
  6101  0CCE  0022               	movlb	2	; select bank2
  6102  0CCF  00B1               	movwf	(_vfpfcnvrt$990+1)^(0+256)
  6103  0CD0  0830               	movf	_vfpfcnvrt$990^(0+256),w
  6104  0CD1  0431               	iorwf	(_vfpfcnvrt$990+1)^(0+256),w
  6105  0CD2  1D03               	btfss	3,2
  6106  0CD3  2CA0               	goto	l4535
  6107  0CD4                     l4543:
  6108                           
  6109                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  6110  0CD4  0020               	movlb	0	; select bank0
  6111  0CD5  086D               	movf	vfpfcnvrt@fmt,w
  6112  0CD6  0086               	movwf	6
  6113  0CD7  0187               	clrf	7
  6114  0CD8  3F40               	moviw [0]fsr1
  6115  0CD9  0021               	movlb	1	; select bank1
  6116  0CDA  00D9               	movwf	??_vfpfcnvrt^(0+128)
  6117  0CDB  3F41               	moviw [1]fsr1
  6118  0CDC  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6119  0CDD  0859               	movf	??_vfpfcnvrt^(0+128),w
  6120  0CDE  0084               	movwf	4
  6121  0CDF  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  6122  0CE0  0085               	movwf	5
  6123  0CE1  0012               	moviw fsr0++
  6124  0CE2  3A2E               	xorlw	46
  6125  0CE3  1D03               	btfss	3,2
  6126  0CE4  2D5D               	goto	l4565
  6127                           
  6128                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  6129  0CE5  01EC               	clrf	_prec^(0+128)
  6130  0CE6  01ED               	clrf	(_prec+1)^(0+128)
  6131                           
  6132                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  6133  0CE7  0020               	movlb	0	; select bank0
  6134  0CE8  086D               	movf	vfpfcnvrt@fmt,w
  6135  0CE9  0086               	movwf	6
  6136  0CEA  0187               	clrf	7
  6137  0CEB  3001               	movlw	1
  6138  0CEC  0781               	addwf	1,f
  6139  0CED  3141               	addfsr 1,1
  6140  0CEE  1803               	skipnc
  6141  0CEF  0A81               	incf	1,f
  6142                           
  6143                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  6144  0CF0  086D               	movf	vfpfcnvrt@fmt,w
  6145  0CF1  0086               	movwf	6
  6146  0CF2  0187               	clrf	7
  6147  0CF3  3F40               	moviw [0]fsr1
  6148  0CF4  0021               	movlb	1	; select bank1
  6149  0CF5  00D9               	movwf	??_vfpfcnvrt^(0+128)
  6150  0CF6  3F41               	moviw [1]fsr1
  6151  0CF7  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6152  0CF8  0859               	movf	??_vfpfcnvrt^(0+128),w
  6153  0CF9  0084               	movwf	4
  6154  0CFA  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  6155  0CFB  0085               	movwf	5
  6156  0CFC  0012               	moviw fsr0++
  6157  0CFD  3A2A               	xorlw	42
  6158  0CFE  1D03               	btfss	3,2
  6159  0CFF  2D18               	goto	l4555
  6160                           
  6161                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  6162  0D00  0020               	movlb	0	; select bank0
  6163  0D01  086D               	movf	vfpfcnvrt@fmt,w
  6164  0D02  0086               	movwf	6
  6165  0D03  0187               	clrf	7
  6166  0D04  3001               	movlw	1
  6167  0D05  0781               	addwf	1,f
  6168  0D06  3141               	addfsr 1,1
  6169  0D07  1803               	skipnc
  6170  0D08  0A81               	incf	1,f
  6171                           
  6172                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  6173  0D09  086E               	movf	vfpfcnvrt@ap,w
  6174  0D0A  0086               	movwf	6
  6175  0D0B  0187               	clrf	7
  6176  0D0C  0801               	movf	1,w
  6177  0D0D  0084               	movwf	4
  6178  0D0E  3001               	movlw	1	; select bank2/3
  6179  0D0F  0085               	movwf	5
  6180  0D10  3002               	movlw	2
  6181  0D11  0781               	addwf	1,f
  6182  0D12  3F00               	moviw [0]fsr0
  6183  0D13  0021               	movlb	1	; select bank1
  6184  0D14  00EC               	movwf	_prec^(0+128)
  6185  0D15  3F01               	moviw [1]fsr0
  6186  0D16  00ED               	movwf	(_prec+1)^(0+128)
  6187                           
  6188                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  6189  0D17  2D5D               	goto	l4565
  6190  0D18                     l4555:
  6191                           
  6192                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  6193  0D18  0020               	movlb	0	; select bank0
  6194  0D19  086D               	movf	vfpfcnvrt@fmt,w
  6195  0D1A  0086               	movwf	6
  6196  0D1B  0187               	clrf	7
  6197  0D1C  3F40               	moviw [0]fsr1
  6198  0D1D  00F6               	movwf	atoi@s
  6199  0D1E  3F41               	moviw [1]fsr1
  6200  0D1F  00F7               	movwf	atoi@s+1
  6201  0D20  3190  2040  318C   	fcall	_atoi
  6202  0D23  0877               	movf	?_atoi+1,w
  6203  0D24  0021               	movlb	1	; select bank1
  6204  0D25  00ED               	movwf	(_prec+1)^(0+128)
  6205  0D26  0876               	movf	?_atoi,w
  6206  0D27  00EC               	movwf	_prec^(0+128)
  6207                           
  6208                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6209  0D28  2D32               	goto	l4559
  6210  0D29                     l4557:
  6211                           
  6212                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  6213  0D29  0020               	movlb	0	; select bank0
  6214  0D2A  086D               	movf	vfpfcnvrt@fmt,w
  6215  0D2B  0086               	movwf	6
  6216  0D2C  0187               	clrf	7
  6217  0D2D  3001               	movlw	1
  6218  0D2E  0781               	addwf	1,f
  6219  0D2F  3141               	addfsr 1,1
  6220  0D30  1803               	skipnc
  6221  0D31  0A81               	incf	1,f
  6222  0D32                     l4559:
  6223  0D32  0020               	movlb	0	; select bank0
  6224  0D33  086D               	movf	vfpfcnvrt@fmt,w
  6225  0D34  0086               	movwf	6
  6226  0D35  0187               	clrf	7
  6227  0D36  3F40               	moviw [0]fsr1
  6228  0D37  0021               	movlb	1	; select bank1
  6229  0D38  00D9               	movwf	??_vfpfcnvrt^(0+128)
  6230  0D39  3F41               	moviw [1]fsr1
  6231  0D3A  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6232  0D3B  0859               	movf	??_vfpfcnvrt^(0+128),w
  6233  0D3C  0084               	movwf	4
  6234  0D3D  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  6235  0D3E  0085               	movwf	5
  6236  0D3F  0800               	movf	0,w	;code access
  6237  0D40  3ED0               	addlw	208
  6238  0D41  00DB               	movwf	(??_vfpfcnvrt+2)^(0+128)
  6239  0D42  30FF               	movlw	255
  6240  0D43  1803               	skipnc
  6241  0D44  3000               	movlw	0
  6242  0D45  00DC               	movwf	((??_vfpfcnvrt+2)^(0+128)+1)
  6243  0D46  3000               	movlw	0
  6244  0D47  025C               	subwf	(??_vfpfcnvrt+3)^(0+128),w
  6245  0D48  300A               	movlw	10
  6246  0D49  1903               	skipnz
  6247  0D4A  025B               	subwf	(??_vfpfcnvrt+2)^(0+128),w
  6248  0D4B  1803               	btfsc	3,0
  6249  0D4C  2D4F               	goto	u6950
  6250  0D4D  3001               	movlw	1
  6251  0D4E  2D50               	goto	u6960
  6252  0D4F                     u6950:
  6253  0D4F  3000               	movlw	0
  6254  0D50                     u6960:
  6255  0D50  00DD               	movwf	(??_vfpfcnvrt+4)^(0+128)
  6256  0D51  01DE               	clrf	((??_vfpfcnvrt+4)^(0+128)+1)
  6257  0D52  085D               	movf	(??_vfpfcnvrt+4)^(0+128),w
  6258  0D53  0022               	movlb	2	; select bank2
  6259  0D54  00B2               	movwf	_vfpfcnvrt$991^(0+256)
  6260  0D55  0021               	movlb	1	; select bank1
  6261  0D56  085E               	movf	(??_vfpfcnvrt+5)^(0+128),w
  6262  0D57  0022               	movlb	2	; select bank2
  6263  0D58  00B3               	movwf	(_vfpfcnvrt$991+1)^(0+256)
  6264  0D59  0832               	movf	_vfpfcnvrt$991^(0+256),w
  6265  0D5A  0433               	iorwf	(_vfpfcnvrt$991+1)^(0+256),w
  6266  0D5B  1D03               	btfss	3,2
  6267  0D5C  2D29               	goto	l4557
  6268  0D5D                     l4565:
  6269                           
  6270                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  6271  0D5D  0020               	movlb	0	; select bank0
  6272  0D5E  086D               	movf	vfpfcnvrt@fmt,w
  6273  0D5F  0086               	movwf	6
  6274  0D60  0187               	clrf	7
  6275  0D61  3F40               	moviw [0]fsr1
  6276  0D62  0021               	movlb	1	; select bank1
  6277  0D63  00D9               	movwf	??_vfpfcnvrt^(0+128)
  6278  0D64  3F41               	moviw [1]fsr1
  6279  0D65  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6280  0D66  0859               	movf	??_vfpfcnvrt^(0+128),w
  6281  0D67  0084               	movwf	4
  6282  0D68  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  6283  0D69  0085               	movwf	5
  6284  0D6A  0800               	movf	0,w	;code access
  6285  0D6B  00DB               	movwf	(??_vfpfcnvrt+2)^(0+128)
  6286  0D6C  01DC               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  6287  0D6D  085B               	movf	(??_vfpfcnvrt+2)^(0+128),w
  6288  0D6E  00F6               	movwf	tolower@c
  6289  0D6F  085C               	movf	(??_vfpfcnvrt+3)^(0+128),w
  6290  0D70  00F7               	movwf	tolower@c+1
  6291  0D71  319B  231A  318C   	fcall	_tolower
  6292  0D74  0876               	movf	?_tolower,w
  6293  0D75  0021               	movlb	1	; select bank1
  6294  0D76  00DD               	movwf	(??_vfpfcnvrt+4)^(0+128)
  6295  0D77  085D               	movf	(??_vfpfcnvrt+4)^(0+128),w
  6296  0D78  0022               	movlb	2	; select bank2
  6297  0D79  00BA               	movwf	vfpfcnvrt@ct^(0+256)
  6298                           
  6299                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  6300  0D7A  083A               	movf	vfpfcnvrt@ct^(0+256),w
  6301  0D7B  1903               	btfsc	3,2
  6302  0D7C  2DC0               	goto	l4575
  6303                           
  6304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  6305  0D7D  0020               	movlb	0	; select bank0
  6306  0D7E  086D               	movf	vfpfcnvrt@fmt,w
  6307  0D7F  0086               	movwf	6
  6308  0D80  0187               	clrf	7
  6309  0D81  3F40               	moviw [0]fsr1
  6310  0D82  0021               	movlb	1	; select bank1
  6311  0D83  00D9               	movwf	??_vfpfcnvrt^(0+128)
  6312  0D84  3F41               	moviw [1]fsr1
  6313  0D85  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6314  0D86  3001               	movlw	1
  6315  0D87  0759               	addwf	??_vfpfcnvrt^(0+128),w
  6316  0D88  0084               	movwf	4
  6317  0D89  085A               	movf	(??_vfpfcnvrt^(0+128)+1),w
  6318  0D8A  1803               	skipnc
  6319  0D8B  0A5A               	incf	(??_vfpfcnvrt^(0+128)+1),w
  6320  0D8C  0085               	movwf	5
  6321  0D8D  0800               	movf	0,w	;code access
  6322  0D8E  00DB               	movwf	(??_vfpfcnvrt+2)^(0+128)
  6323  0D8F  01DC               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  6324  0D90  085B               	movf	(??_vfpfcnvrt+2)^(0+128),w
  6325  0D91  00F6               	movwf	tolower@c
  6326  0D92  085C               	movf	(??_vfpfcnvrt+3)^(0+128),w
  6327  0D93  00F7               	movwf	tolower@c+1
  6328  0D94  319B  231A  318C   	fcall	_tolower
  6329  0D97  0876               	movf	?_tolower,w
  6330  0D98  0021               	movlb	1	; select bank1
  6331  0D99  00DD               	movwf	(??_vfpfcnvrt+4)^(0+128)
  6332  0D9A  085D               	movf	(??_vfpfcnvrt+4)^(0+128),w
  6333  0D9B  0022               	movlb	2	; select bank2
  6334  0D9C  00BB               	movwf	(vfpfcnvrt@ct^(0+256)+1)
  6335                           
  6336                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  6337  0D9D  083B               	movf	(vfpfcnvrt@ct^(0+256)+1),w
  6338  0D9E  1903               	btfsc	3,2
  6339  0D9F  2DC0               	goto	l4575
  6340                           
  6341                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  6342  0DA0  0020               	movlb	0	; select bank0
  6343  0DA1  086D               	movf	vfpfcnvrt@fmt,w
  6344  0DA2  0086               	movwf	6
  6345  0DA3  0187               	clrf	7
  6346  0DA4  3F40               	moviw [0]fsr1
  6347  0DA5  0021               	movlb	1	; select bank1
  6348  0DA6  00D9               	movwf	??_vfpfcnvrt^(0+128)
  6349  0DA7  3F41               	moviw [1]fsr1
  6350  0DA8  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6351  0DA9  3002               	movlw	2
  6352  0DAA  0759               	addwf	??_vfpfcnvrt^(0+128),w
  6353  0DAB  0084               	movwf	4
  6354  0DAC  085A               	movf	(??_vfpfcnvrt^(0+128)+1),w
  6355  0DAD  1803               	skipnc
  6356  0DAE  0A5A               	incf	(??_vfpfcnvrt^(0+128)+1),w
  6357  0DAF  0085               	movwf	5
  6358  0DB0  0800               	movf	0,w	;code access
  6359  0DB1  00DB               	movwf	(??_vfpfcnvrt+2)^(0+128)
  6360  0DB2  01DC               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  6361  0DB3  085B               	movf	(??_vfpfcnvrt+2)^(0+128),w
  6362  0DB4  00F6               	movwf	tolower@c
  6363  0DB5  085C               	movf	(??_vfpfcnvrt+3)^(0+128),w
  6364  0DB6  00F7               	movwf	tolower@c+1
  6365  0DB7  319B  231A  318C   	fcall	_tolower
  6366  0DBA  0876               	movf	?_tolower,w
  6367  0DBB  0021               	movlb	1	; select bank1
  6368  0DBC  00DD               	movwf	(??_vfpfcnvrt+4)^(0+128)
  6369  0DBD  085D               	movf	(??_vfpfcnvrt+4)^(0+128),w
  6370  0DBE  0022               	movlb	2	; select bank2
  6371  0DBF  00BC               	movwf	(vfpfcnvrt@ct^(0+256)+2)
  6372  0DC0                     l4575:
  6373                           
  6374                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6375  0DC0  0020               	movlb	0	; select bank0
  6376  0DC1  086D               	movf	vfpfcnvrt@fmt,w
  6377  0DC2  0086               	movwf	6
  6378  0DC3  0187               	clrf	7
  6379  0DC4  3F40               	moviw [0]fsr1
  6380  0DC5  0021               	movlb	1	; select bank1
  6381  0DC6  00D9               	movwf	??_vfpfcnvrt^(0+128)
  6382  0DC7  3F41               	moviw [1]fsr1
  6383  0DC8  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6384  0DC9  0859               	movf	??_vfpfcnvrt^(0+128),w
  6385  0DCA  0084               	movwf	4
  6386  0DCB  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  6387  0DCC  0085               	movwf	5
  6388  0DCD  0012               	moviw fsr0++
  6389  0DCE  3A64               	xorlw	100
  6390  0DCF  1903               	btfsc	3,2
  6391  0DD0  2DE2               	goto	l4579
  6392  0DD1  0020               	movlb	0	; select bank0
  6393  0DD2  086D               	movf	vfpfcnvrt@fmt,w
  6394  0DD3  0086               	movwf	6
  6395  0DD4  0187               	clrf	7
  6396  0DD5  3F40               	moviw [0]fsr1
  6397  0DD6  0021               	movlb	1	; select bank1
  6398  0DD7  00D9               	movwf	??_vfpfcnvrt^(0+128)
  6399  0DD8  3F41               	moviw [1]fsr1
  6400  0DD9  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6401  0DDA  0859               	movf	??_vfpfcnvrt^(0+128),w
  6402  0DDB  0084               	movwf	4
  6403  0DDC  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  6404  0DDD  0085               	movwf	5
  6405  0DDE  0012               	moviw fsr0++
  6406  0DDF  3A69               	xorlw	105
  6407  0DE0  1D03               	btfss	3,2
  6408  0DE1  2E31               	goto	l4587
  6409  0DE2                     l4579:
  6410                           
  6411                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  6412  0DE2  0020               	movlb	0	; select bank0
  6413  0DE3  086D               	movf	vfpfcnvrt@fmt,w
  6414  0DE4  0086               	movwf	6
  6415  0DE5  0187               	clrf	7
  6416  0DE6  3001               	movlw	1
  6417  0DE7  0781               	addwf	1,f
  6418  0DE8  3141               	addfsr 1,1
  6419  0DE9  1803               	skipnc
  6420  0DEA  0A81               	incf	1,f
  6421                           
  6422                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6423  0DEB  086E               	movf	vfpfcnvrt@ap,w
  6424  0DEC  0086               	movwf	6
  6425  0DED  0187               	clrf	7
  6426  0DEE  0801               	movf	1,w
  6427  0DEF  0084               	movwf	4
  6428  0DF0  3001               	movlw	1	; select bank2/3
  6429  0DF1  0085               	movwf	5
  6430  0DF2  3002               	movlw	2
  6431  0DF3  0781               	addwf	1,f
  6432  0DF4  3F00               	moviw [0]fsr0
  6433  0DF5  0021               	movlb	1	; select bank1
  6434  0DF6  00D9               	movwf	??_vfpfcnvrt^(0+128)
  6435  0DF7  3F01               	moviw [1]fsr0
  6436  0DF8  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6437  0DF9  0859               	movf	??_vfpfcnvrt^(0+128),w
  6438  0DFA  0022               	movlb	2	; select bank2
  6439  0DFB  00A0               	movwf	vfpfcnvrt@ll^(0+256)
  6440  0DFC  0021               	movlb	1	; select bank1
  6441  0DFD  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  6442  0DFE  0022               	movlb	2	; select bank2
  6443  0DFF  00A1               	movwf	(vfpfcnvrt@ll+1)^(0+256)
  6444  0E00  0D89               	rlf	9,f
  6445  0E01  3B89               	subwfb	9,f
  6446  0E02  0989               	comf	9,f
  6447  0E03  00A2               	movwf	(vfpfcnvrt@ll+2)^(0+256)
  6448  0E04  00A3               	movwf	(vfpfcnvrt@ll+3)^(0+256)
  6449  0E05  00A4               	movwf	(vfpfcnvrt@ll+4)^(0+256)
  6450  0E06  00A5               	movwf	(vfpfcnvrt@ll+5)^(0+256)
  6451  0E07  00A6               	movwf	(vfpfcnvrt@ll+6)^(0+256)
  6452  0E08  00A7               	movwf	(vfpfcnvrt@ll+7)^(0+256)
  6453                           
  6454                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  6455  0E09  0820               	movf	vfpfcnvrt@ll^(0+256),w
  6456  0E0A  0020               	movlb	0	; select bank0
  6457  0E0B  00B0               	movwf	dtoa@d
  6458  0E0C  0022               	movlb	2	; select bank2
  6459  0E0D  0821               	movf	(vfpfcnvrt@ll+1)^(0+256),w
  6460  0E0E  0020               	movlb	0	; select bank0
  6461  0E0F  00B1               	movwf	dtoa@d+1
  6462  0E10  0022               	movlb	2	; select bank2
  6463  0E11  0822               	movf	(vfpfcnvrt@ll+2)^(0+256),w
  6464  0E12  0020               	movlb	0	; select bank0
  6465  0E13  00B2               	movwf	dtoa@d+2
  6466  0E14  0022               	movlb	2	; select bank2
  6467  0E15  0823               	movf	(vfpfcnvrt@ll+3)^(0+256),w
  6468  0E16  0020               	movlb	0	; select bank0
  6469  0E17  00B3               	movwf	dtoa@d+3
  6470  0E18  0022               	movlb	2	; select bank2
  6471  0E19  0824               	movf	(vfpfcnvrt@ll+4)^(0+256),w
  6472  0E1A  0020               	movlb	0	; select bank0
  6473  0E1B  00B4               	movwf	dtoa@d+4
  6474  0E1C  0022               	movlb	2	; select bank2
  6475  0E1D  0825               	movf	(vfpfcnvrt@ll+5)^(0+256),w
  6476  0E1E  0020               	movlb	0	; select bank0
  6477  0E1F  00B5               	movwf	dtoa@d+5
  6478  0E20  0022               	movlb	2	; select bank2
  6479  0E21  0826               	movf	(vfpfcnvrt@ll+6)^(0+256),w
  6480  0E22  0020               	movlb	0	; select bank0
  6481  0E23  00B6               	movwf	dtoa@d+6
  6482  0E24  0022               	movlb	2	; select bank2
  6483  0E25  0827               	movf	(vfpfcnvrt@ll+7)^(0+256),w
  6484  0E26  0020               	movlb	0	; select bank0
  6485  0E27  00B7               	movwf	dtoa@d+7
  6486  0E28  0022               	movlb	2	; select bank2
  6487  0E29  083E               	movf	vfpfcnvrt@fp^(0+256),w
  6488  0E2A  3192  228D         	fcall	_dtoa
  6489  0E2C  0831               	movf	?_dtoa+1,w
  6490  0E2D  00EE               	movwf	?_vfpfcnvrt+1
  6491  0E2E  0830               	movf	?_dtoa,w
  6492  0E2F  00ED               	movwf	?_vfpfcnvrt
  6493  0E30  0008               	return
  6494  0E31                     l4587:
  6495                           
  6496                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  6497  0E31  3066               	movlw	102
  6498  0E32  0022               	movlb	2	; select bank2
  6499  0E33  063A               	xorwf	vfpfcnvrt@ct^(0+256),w
  6500  0E34  1D03               	btfss	3,2
  6501  0E35  2E82               	goto	l4599
  6502                           
  6503                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  6504  0E36  0020               	movlb	0	; select bank0
  6505  0E37  086D               	movf	vfpfcnvrt@fmt,w
  6506  0E38  0086               	movwf	6
  6507  0E39  0187               	clrf	7
  6508  0E3A  3F40               	moviw [0]fsr1
  6509  0E3B  0021               	movlb	1	; select bank1
  6510  0E3C  00D9               	movwf	??_vfpfcnvrt^(0+128)
  6511  0E3D  3F41               	moviw [1]fsr1
  6512  0E3E  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6513  0E3F  0859               	movf	??_vfpfcnvrt^(0+128),w
  6514  0E40  0084               	movwf	4
  6515  0E41  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  6516  0E42  0085               	movwf	5
  6517  0E43  0800               	movf	0,w	;code access
  6518  0E44  00DB               	movwf	(??_vfpfcnvrt+2)^(0+128)
  6519  0E45  085B               	movf	(??_vfpfcnvrt+2)^(0+128),w
  6520  0E46  0022               	movlb	2	; select bank2
  6521  0E47  00BD               	movwf	vfpfcnvrt@c^(0+256)
  6522                           
  6523                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  6524  0E48  0020               	movlb	0	; select bank0
  6525  0E49  086D               	movf	vfpfcnvrt@fmt,w
  6526  0E4A  0086               	movwf	6
  6527  0E4B  0187               	clrf	7
  6528  0E4C  3001               	movlw	1
  6529  0E4D  0781               	addwf	1,f
  6530  0E4E  3141               	addfsr 1,1
  6531  0E4F  1803               	skipnc
  6532  0E50  0A81               	incf	1,f
  6533                           
  6534                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  6535  0E51  086E               	movf	vfpfcnvrt@ap,w
  6536  0E52  0086               	movwf	6
  6537  0E53  0187               	clrf	7
  6538  0E54  0801               	movf	1,w
  6539  0E55  0084               	movwf	4
  6540  0E56  3001               	movlw	1	; select bank2/3
  6541  0E57  0085               	movwf	5
  6542  0E58  3004               	movlw	4
  6543  0E59  0781               	addwf	1,f
  6544  0E5A  3F00               	moviw [0]fsr0
  6545  0E5B  0022               	movlb	2	; select bank2
  6546  0E5C  00B6               	movwf	vfpfcnvrt@f^(0+256)
  6547  0E5D  3F01               	moviw [1]fsr0
  6548  0E5E  00B7               	movwf	(vfpfcnvrt@f+1)^(0+256)
  6549  0E5F  3F02               	moviw [2]fsr0
  6550  0E60  00B8               	movwf	(vfpfcnvrt@f+2)^(0+256)
  6551  0E61  3F03               	moviw [3]fsr0
  6552  0E62  00B9               	movwf	(vfpfcnvrt@f+3)^(0+256)
  6553                           
  6554                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  6555  0E63  0839               	movf	(vfpfcnvrt@f+3)^(0+256),w
  6556  0E64  0020               	movlb	0	; select bank0
  6557  0E65  00E7               	movwf	efgtoa@f+3
  6558  0E66  0022               	movlb	2	; select bank2
  6559  0E67  0838               	movf	(vfpfcnvrt@f+2)^(0+256),w
  6560  0E68  0020               	movlb	0	; select bank0
  6561  0E69  00E6               	movwf	efgtoa@f+2
  6562  0E6A  0022               	movlb	2	; select bank2
  6563  0E6B  0837               	movf	(vfpfcnvrt@f+1)^(0+256),w
  6564  0E6C  0020               	movlb	0	; select bank0
  6565  0E6D  00E5               	movwf	efgtoa@f+1
  6566  0E6E  0022               	movlb	2	; select bank2
  6567  0E6F  0836               	movf	vfpfcnvrt@f^(0+256),w
  6568  0E70  0020               	movlb	0	; select bank0
  6569  0E71  00E4               	movwf	efgtoa@f
  6570  0E72  0022               	movlb	2	; select bank2
  6571  0E73  083D               	movf	vfpfcnvrt@c^(0+256),w
  6572  0E74  0021               	movlb	1	; select bank1
  6573  0E75  00D9               	movwf	??_vfpfcnvrt^(0+128)
  6574  0E76  0859               	movf	??_vfpfcnvrt^(0+128),w
  6575  0E77  0020               	movlb	0	; select bank0
  6576  0E78  00E8               	movwf	efgtoa@c
  6577  0E79  0022               	movlb	2	; select bank2
  6578  0E7A  083E               	movf	vfpfcnvrt@fp^(0+256),w
  6579  0E7B  3181  2130         	fcall	_efgtoa
  6580  0E7D  0865               	movf	?_efgtoa+1,w
  6581  0E7E  00EE               	movwf	?_vfpfcnvrt+1
  6582  0E7F  0864               	movf	?_efgtoa,w
  6583  0E80  00ED               	movwf	?_vfpfcnvrt
  6584  0E81  0008               	return
  6585  0E82                     l4599:
  6586                           
  6587                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  6588  0E82  3069               	movlw	low (STR_13| (0+32768))
  6589  0E83  00F0               	movwf	strncmp@_r
  6590  0E84  3098               	movlw	high (STR_13| (0+32768))
  6591  0E85  00F1               	movwf	strncmp@_r+1
  6592  0E86  3002               	movlw	2
  6593  0E87  00F2               	movwf	strncmp@n
  6594  0E88  3000               	movlw	0
  6595  0E89  00F3               	movwf	strncmp@n+1
  6596  0E8A  303A               	movlw	(low (vfpfcnvrt@ct| (0+256)))& (0+255)
  6597  0E8B  319D  2570  318C   	fcall	_strncmp
  6598  0E8E  0870               	movf	?_strncmp,w
  6599  0E8F  0471               	iorwf	?_strncmp+1,w
  6600  0E90  1D03               	btfss	3,2
  6601  0E91  2F21               	goto	l4617
  6602                           
  6603                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  6604  0E92  0020               	movlb	0	; select bank0
  6605  0E93  086D               	movf	vfpfcnvrt@fmt,w
  6606  0E94  0086               	movwf	6
  6607  0E95  0187               	clrf	7
  6608  0E96  3F40               	moviw [0]fsr1
  6609  0E97  0021               	movlb	1	; select bank1
  6610  0E98  00D9               	movwf	??_vfpfcnvrt^(0+128)
  6611  0E99  3F41               	moviw [1]fsr1
  6612  0E9A  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6613  0E9B  3001               	movlw	1
  6614  0E9C  0759               	addwf	??_vfpfcnvrt^(0+128),w
  6615  0E9D  0084               	movwf	4
  6616  0E9E  085A               	movf	(??_vfpfcnvrt^(0+128)+1),w
  6617  0E9F  1803               	skipnc
  6618  0EA0  0A5A               	incf	(??_vfpfcnvrt^(0+128)+1),w
  6619  0EA1  0085               	movwf	5
  6620  0EA2  0800               	movf	0,w	;code access
  6621  0EA3  00DB               	movwf	(??_vfpfcnvrt+2)^(0+128)
  6622  0EA4  085B               	movf	(??_vfpfcnvrt+2)^(0+128),w
  6623  0EA5  0022               	movlb	2	; select bank2
  6624  0EA6  00BD               	movwf	vfpfcnvrt@c^(0+256)
  6625  0EA7  0020               	movlb	0	; select bank0
  6626  0EA8  086D               	movf	vfpfcnvrt@fmt,w
  6627  0EA9  0086               	movwf	6
  6628  0EAA  0187               	clrf	7
  6629  0EAB  3F40               	moviw [0]fsr1
  6630  0EAC  0021               	movlb	1	; select bank1
  6631  0EAD  00D9               	movwf	??_vfpfcnvrt^(0+128)
  6632  0EAE  3F41               	moviw [1]fsr1
  6633  0EAF  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6634  0EB0  0859               	movf	??_vfpfcnvrt^(0+128),w
  6635  0EB1  0084               	movwf	4
  6636  0EB2  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  6637  0EB3  0085               	movwf	5
  6638  0EB4  0800               	movf	0,w	;code access
  6639  0EB5  3EBF               	addlw	191
  6640  0EB6  00DB               	movwf	(??_vfpfcnvrt+2)^(0+128)
  6641  0EB7  30FF               	movlw	255
  6642  0EB8  1803               	skipnc
  6643  0EB9  3000               	movlw	0
  6644  0EBA  00DC               	movwf	((??_vfpfcnvrt+2)^(0+128)+1)
  6645  0EBB  3000               	movlw	0
  6646  0EBC  025C               	subwf	(??_vfpfcnvrt+3)^(0+128),w
  6647  0EBD  301A               	movlw	26
  6648  0EBE  1903               	skipnz
  6649  0EBF  025B               	subwf	(??_vfpfcnvrt+2)^(0+128),w
  6650  0EC0  1803               	btfsc	3,0
  6651  0EC1  2EC4               	goto	u7040
  6652  0EC2  3001               	movlw	1
  6653  0EC3  2EC5               	goto	u7050
  6654  0EC4                     u7040:
  6655  0EC4  3000               	movlw	0
  6656  0EC5                     u7050:
  6657  0EC5  00DD               	movwf	(??_vfpfcnvrt+4)^(0+128)
  6658  0EC6  01DE               	clrf	((??_vfpfcnvrt+4)^(0+128)+1)
  6659  0EC7  085D               	movf	(??_vfpfcnvrt+4)^(0+128),w
  6660  0EC8  0022               	movlb	2	; select bank2
  6661  0EC9  00B4               	movwf	_vfpfcnvrt$996^(0+256)
  6662  0ECA  0021               	movlb	1	; select bank1
  6663  0ECB  085E               	movf	(??_vfpfcnvrt+5)^(0+128),w
  6664  0ECC  0022               	movlb	2	; select bank2
  6665  0ECD  00B5               	movwf	(_vfpfcnvrt$996+1)^(0+256)
  6666  0ECE  0834               	movf	_vfpfcnvrt$996^(0+256),w
  6667  0ECF  0435               	iorwf	(_vfpfcnvrt$996+1)^(0+256),w
  6668  0ED0  1903               	btfsc	3,2
  6669  0ED1  2EE5               	goto	l4609
  6670                           
  6671                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  6672  0ED2  0020               	movlb	0	; select bank0
  6673  0ED3  086E               	movf	vfpfcnvrt@ap,w
  6674  0ED4  0086               	movwf	6
  6675  0ED5  0187               	clrf	7
  6676  0ED6  0801               	movf	1,w
  6677  0ED7  0084               	movwf	4
  6678  0ED8  3001               	movlw	1	; select bank2/3
  6679  0ED9  0085               	movwf	5
  6680  0EDA  3004               	movlw	4
  6681  0EDB  0781               	addwf	1,f
  6682  0EDC  3F00               	moviw [0]fsr0
  6683  0EDD  0022               	movlb	2	; select bank2
  6684  0EDE  00B6               	movwf	vfpfcnvrt@f^(0+256)
  6685  0EDF  3F01               	moviw [1]fsr0
  6686  0EE0  00B7               	movwf	(vfpfcnvrt@f+1)^(0+256)
  6687  0EE1  3F02               	moviw [2]fsr0
  6688  0EE2  00B8               	movwf	(vfpfcnvrt@f+2)^(0+256)
  6689  0EE3  3F03               	moviw [3]fsr0
  6690  0EE4  2EF7               	goto	L1
  6691  0EE5                     l4609:	
  6692                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  6693                           
  6694                           
  6695                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  6696  0EE5  0020               	movlb	0	; select bank0
  6697  0EE6  086E               	movf	vfpfcnvrt@ap,w
  6698  0EE7  0086               	movwf	6
  6699  0EE8  0187               	clrf	7
  6700  0EE9  0801               	movf	1,w
  6701  0EEA  0084               	movwf	4
  6702  0EEB  3001               	movlw	1	; select bank2/3
  6703  0EEC  0085               	movwf	5
  6704  0EED  3004               	movlw	4
  6705  0EEE  0781               	addwf	1,f
  6706  0EEF  3F00               	moviw [0]fsr0
  6707  0EF0  0022               	movlb	2	; select bank2
  6708  0EF1  00B6               	movwf	vfpfcnvrt@f^(0+256)
  6709  0EF2  3F01               	moviw [1]fsr0
  6710  0EF3  00B7               	movwf	(vfpfcnvrt@f+1)^(0+256)
  6711  0EF4  3F02               	moviw [2]fsr0
  6712  0EF5  00B8               	movwf	(vfpfcnvrt@f+2)^(0+256)
  6713  0EF6  3F03               	moviw [3]fsr0
  6714  0EF7                     L1:
  6715  0EF7  00B9               	movwf	(vfpfcnvrt@f+3)^(0+256)
  6716                           
  6717                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  6718  0EF8  0020               	movlb	0	; select bank0
  6719  0EF9  086D               	movf	vfpfcnvrt@fmt,w
  6720  0EFA  0086               	movwf	6
  6721  0EFB  0187               	clrf	7
  6722  0EFC  3002               	movlw	2
  6723  0EFD  0781               	addwf	1,f
  6724  0EFE  3141               	addfsr 1,1
  6725  0EFF  1803               	skipnc
  6726  0F00  0A81               	incf	1,f
  6727                           
  6728                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 960:             
      +                          return efgtoa(fp, f, c);
  6729  0F01  0022               	movlb	2	; select bank2
  6730  0F02  0839               	movf	(vfpfcnvrt@f+3)^(0+256),w
  6731  0F03  0020               	movlb	0	; select bank0
  6732  0F04  00E7               	movwf	efgtoa@f+3
  6733  0F05  0022               	movlb	2	; select bank2
  6734  0F06  0838               	movf	(vfpfcnvrt@f+2)^(0+256),w
  6735  0F07  0020               	movlb	0	; select bank0
  6736  0F08  00E6               	movwf	efgtoa@f+2
  6737  0F09  0022               	movlb	2	; select bank2
  6738  0F0A  0837               	movf	(vfpfcnvrt@f+1)^(0+256),w
  6739  0F0B  0020               	movlb	0	; select bank0
  6740  0F0C  00E5               	movwf	efgtoa@f+1
  6741  0F0D  0022               	movlb	2	; select bank2
  6742  0F0E  0836               	movf	vfpfcnvrt@f^(0+256),w
  6743  0F0F  0020               	movlb	0	; select bank0
  6744  0F10  00E4               	movwf	efgtoa@f
  6745  0F11  0022               	movlb	2	; select bank2
  6746  0F12  083D               	movf	vfpfcnvrt@c^(0+256),w
  6747  0F13  0021               	movlb	1	; select bank1
  6748  0F14  00D9               	movwf	??_vfpfcnvrt^(0+128)
  6749  0F15  0859               	movf	??_vfpfcnvrt^(0+128),w
  6750  0F16  0020               	movlb	0	; select bank0
  6751  0F17  00E8               	movwf	efgtoa@c
  6752  0F18  0022               	movlb	2	; select bank2
  6753  0F19  083E               	movf	vfpfcnvrt@fp^(0+256),w
  6754  0F1A  3181  2130         	fcall	_efgtoa
  6755  0F1C  0865               	movf	?_efgtoa+1,w
  6756  0F1D  00EE               	movwf	?_vfpfcnvrt+1
  6757  0F1E  0864               	movf	?_efgtoa,w
  6758  0F1F  00ED               	movwf	?_vfpfcnvrt
  6759  0F20  0008               	return
  6760  0F21                     l4617:
  6761                           
  6762                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  6763  0F21  0020               	movlb	0	; select bank0
  6764  0F22  086D               	movf	vfpfcnvrt@fmt,w
  6765  0F23  0086               	movwf	6
  6766  0F24  0187               	clrf	7
  6767  0F25  3F40               	moviw [0]fsr1
  6768  0F26  0021               	movlb	1	; select bank1
  6769  0F27  00D9               	movwf	??_vfpfcnvrt^(0+128)
  6770  0F28  3F41               	moviw [1]fsr1
  6771  0F29  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6772  0F2A  0859               	movf	??_vfpfcnvrt^(0+128),w
  6773  0F2B  0084               	movwf	4
  6774  0F2C  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  6775  0F2D  0085               	movwf	5
  6776  0F2E  0012               	moviw fsr0++
  6777  0F2F  3A78               	xorlw	120
  6778  0F30  1903               	btfsc	3,2
  6779  0F31  2F43               	goto	l4621
  6780  0F32  0020               	movlb	0	; select bank0
  6781  0F33  086D               	movf	vfpfcnvrt@fmt,w
  6782  0F34  0086               	movwf	6
  6783  0F35  0187               	clrf	7
  6784  0F36  3F40               	moviw [0]fsr1
  6785  0F37  0021               	movlb	1	; select bank1
  6786  0F38  00D9               	movwf	??_vfpfcnvrt^(0+128)
  6787  0F39  3F41               	moviw [1]fsr1
  6788  0F3A  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6789  0F3B  0859               	movf	??_vfpfcnvrt^(0+128),w
  6790  0F3C  0084               	movwf	4
  6791  0F3D  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  6792  0F3E  0085               	movwf	5
  6793  0F3F  0012               	moviw fsr0++
  6794  0F40  3A58               	xorlw	88
  6795  0F41  1D03               	btfss	3,2
  6796  0F42  2FA1               	goto	l4631
  6797  0F43                     l4621:
  6798                           
  6799                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  6800  0F43  0020               	movlb	0	; select bank0
  6801  0F44  086D               	movf	vfpfcnvrt@fmt,w
  6802  0F45  0086               	movwf	6
  6803  0F46  0187               	clrf	7
  6804  0F47  3F40               	moviw [0]fsr1
  6805  0F48  0021               	movlb	1	; select bank1
  6806  0F49  00D9               	movwf	??_vfpfcnvrt^(0+128)
  6807  0F4A  3F41               	moviw [1]fsr1
  6808  0F4B  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6809  0F4C  0859               	movf	??_vfpfcnvrt^(0+128),w
  6810  0F4D  0084               	movwf	4
  6811  0F4E  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  6812  0F4F  0085               	movwf	5
  6813  0F50  0800               	movf	0,w	;code access
  6814  0F51  00DB               	movwf	(??_vfpfcnvrt+2)^(0+128)
  6815  0F52  085B               	movf	(??_vfpfcnvrt+2)^(0+128),w
  6816  0F53  0022               	movlb	2	; select bank2
  6817  0F54  00BD               	movwf	vfpfcnvrt@c^(0+256)
  6818                           
  6819                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  6820  0F55  0020               	movlb	0	; select bank0
  6821  0F56  086D               	movf	vfpfcnvrt@fmt,w
  6822  0F57  0086               	movwf	6
  6823  0F58  0187               	clrf	7
  6824  0F59  3001               	movlw	1
  6825  0F5A  0781               	addwf	1,f
  6826  0F5B  3141               	addfsr 1,1
  6827  0F5C  1803               	skipnc
  6828  0F5D  0A81               	incf	1,f
  6829                           
  6830                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  6831  0F5E  086E               	movf	vfpfcnvrt@ap,w
  6832  0F5F  0086               	movwf	6
  6833  0F60  0187               	clrf	7
  6834  0F61  0801               	movf	1,w
  6835  0F62  0084               	movwf	4
  6836  0F63  3001               	movlw	1	; select bank2/3
  6837  0F64  0085               	movwf	5
  6838  0F65  3002               	movlw	2
  6839  0F66  0781               	addwf	1,f
  6840  0F67  3F00               	moviw [0]fsr0
  6841  0F68  0022               	movlb	2	; select bank2
  6842  0F69  00A8               	movwf	vfpfcnvrt@llu^(0+256)
  6843  0F6A  3F01               	moviw [1]fsr0
  6844  0F6B  00A9               	movwf	(vfpfcnvrt@llu+1)^(0+256)
  6845  0F6C  01AA               	clrf	(vfpfcnvrt@llu+2)^(0+256)
  6846  0F6D  01AB               	clrf	(vfpfcnvrt@llu+3)^(0+256)
  6847  0F6E  01AC               	clrf	(vfpfcnvrt@llu+4)^(0+256)
  6848  0F6F  01AD               	clrf	(vfpfcnvrt@llu+5)^(0+256)
  6849  0F70  01AE               	clrf	(vfpfcnvrt@llu+6)^(0+256)
  6850  0F71  01AF               	clrf	(vfpfcnvrt@llu+7)^(0+256)
  6851                           
  6852                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  6853  0F72  0828               	movf	vfpfcnvrt@llu^(0+256),w
  6854  0F73  0020               	movlb	0	; select bank0
  6855  0F74  00AF               	movwf	xtoa@d
  6856  0F75  0022               	movlb	2	; select bank2
  6857  0F76  0829               	movf	(vfpfcnvrt@llu+1)^(0+256),w
  6858  0F77  0020               	movlb	0	; select bank0
  6859  0F78  00B0               	movwf	xtoa@d+1
  6860  0F79  0022               	movlb	2	; select bank2
  6861  0F7A  082A               	movf	(vfpfcnvrt@llu+2)^(0+256),w
  6862  0F7B  0020               	movlb	0	; select bank0
  6863  0F7C  00B1               	movwf	xtoa@d+2
  6864  0F7D  0022               	movlb	2	; select bank2
  6865  0F7E  082B               	movf	(vfpfcnvrt@llu+3)^(0+256),w
  6866  0F7F  0020               	movlb	0	; select bank0
  6867  0F80  00B2               	movwf	xtoa@d+3
  6868  0F81  0022               	movlb	2	; select bank2
  6869  0F82  082C               	movf	(vfpfcnvrt@llu+4)^(0+256),w
  6870  0F83  0020               	movlb	0	; select bank0
  6871  0F84  00B3               	movwf	xtoa@d+4
  6872  0F85  0022               	movlb	2	; select bank2
  6873  0F86  082D               	movf	(vfpfcnvrt@llu+5)^(0+256),w
  6874  0F87  0020               	movlb	0	; select bank0
  6875  0F88  00B4               	movwf	xtoa@d+5
  6876  0F89  0022               	movlb	2	; select bank2
  6877  0F8A  082E               	movf	(vfpfcnvrt@llu+6)^(0+256),w
  6878  0F8B  0020               	movlb	0	; select bank0
  6879  0F8C  00B5               	movwf	xtoa@d+6
  6880  0F8D  0022               	movlb	2	; select bank2
  6881  0F8E  082F               	movf	(vfpfcnvrt@llu+7)^(0+256),w
  6882  0F8F  0020               	movlb	0	; select bank0
  6883  0F90  00B6               	movwf	xtoa@d+7
  6884  0F91  0022               	movlb	2	; select bank2
  6885  0F92  083D               	movf	vfpfcnvrt@c^(0+256),w
  6886  0F93  0021               	movlb	1	; select bank1
  6887  0F94  00D9               	movwf	??_vfpfcnvrt^(0+128)
  6888  0F95  0859               	movf	??_vfpfcnvrt^(0+128),w
  6889  0F96  0020               	movlb	0	; select bank0
  6890  0F97  00B7               	movwf	xtoa@x
  6891  0F98  0022               	movlb	2	; select bank2
  6892  0F99  083E               	movf	vfpfcnvrt@fp^(0+256),w
  6893  0F9A  3195  2530         	fcall	_xtoa
  6894  0F9C  0830               	movf	?_xtoa+1,w
  6895  0F9D  00EE               	movwf	?_vfpfcnvrt+1
  6896  0F9E  082F               	movf	?_xtoa,w
  6897  0F9F  00ED               	movwf	?_vfpfcnvrt
  6898  0FA0  0008               	return
  6899  0FA1                     l4631:
  6900                           
  6901                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  6902  0FA1  0020               	movlb	0	; select bank0
  6903  0FA2  086D               	movf	vfpfcnvrt@fmt,w
  6904  0FA3  0086               	movwf	6
  6905  0FA4  0187               	clrf	7
  6906  0FA5  3F40               	moviw [0]fsr1
  6907  0FA6  0021               	movlb	1	; select bank1
  6908  0FA7  00D9               	movwf	??_vfpfcnvrt^(0+128)
  6909  0FA8  3F41               	moviw [1]fsr1
  6910  0FA9  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6911  0FAA  0859               	movf	??_vfpfcnvrt^(0+128),w
  6912  0FAB  0084               	movwf	4
  6913  0FAC  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  6914  0FAD  0085               	movwf	5
  6915  0FAE  0012               	moviw fsr0++
  6916  0FAF  3A25               	xorlw	37
  6917  0FB0  1D03               	btfss	3,2
  6918  0FB1  2FCD               	goto	l4641
  6919                           
  6920                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  6921  0FB2  0020               	movlb	0	; select bank0
  6922  0FB3  086D               	movf	vfpfcnvrt@fmt,w
  6923  0FB4  0086               	movwf	6
  6924  0FB5  0187               	clrf	7
  6925  0FB6  3001               	movlw	1
  6926  0FB7  0781               	addwf	1,f
  6927  0FB8  3141               	addfsr 1,1
  6928  0FB9  1803               	skipnc
  6929  0FBA  0A81               	incf	1,f
  6930                           
  6931                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  6932  0FBB  3025               	movlw	37
  6933  0FBC  00F3               	movwf	fputc@c
  6934  0FBD  3000               	movlw	0
  6935  0FBE  00F4               	movwf	fputc@c+1
  6936  0FBF  0022               	movlb	2	; select bank2
  6937  0FC0  083E               	movf	vfpfcnvrt@fp^(0+256),w
  6938  0FC1  0021               	movlb	1	; select bank1
  6939  0FC2  00D9               	movwf	??_vfpfcnvrt^(0+128)
  6940  0FC3  0859               	movf	??_vfpfcnvrt^(0+128),w
  6941  0FC4  00F5               	movwf	fputc@fp
  6942  0FC5  3180  2008         	fcall	_fputc
  6943  0FC7                     l4637:
  6944                           
  6945                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  6946  0FC7  3001               	movlw	1
  6947  0FC8  0020               	movlb	0	; select bank0
  6948  0FC9  00ED               	movwf	?_vfpfcnvrt
  6949  0FCA  3000               	movlw	0
  6950  0FCB  00EE               	movwf	?_vfpfcnvrt+1
  6951  0FCC  0008               	return
  6952  0FCD                     l4641:
  6953                           
  6954                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  6955  0FCD  0020               	movlb	0	; select bank0
  6956  0FCE  086D               	movf	vfpfcnvrt@fmt,w
  6957  0FCF  0086               	movwf	6
  6958  0FD0  0187               	clrf	7
  6959  0FD1  3001               	movlw	1
  6960  0FD2  0781               	addwf	1,f
  6961  0FD3  3141               	addfsr 1,1
  6962  0FD4  1803               	skipnc
  6963  0FD5  0A81               	incf	1,f
  6964                           
  6965                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  6966  0FD6  01ED               	clrf	?_vfpfcnvrt
  6967  0FD7  01EE               	clrf	?_vfpfcnvrt+1
  6968  0FD8  0008               	return
  6969  0FD9                     l4647:
  6970                           
  6971                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  6972  0FD9  0020               	movlb	0	; select bank0
  6973  0FDA  086D               	movf	vfpfcnvrt@fmt,w
  6974  0FDB  0086               	movwf	6
  6975  0FDC  0187               	clrf	7
  6976  0FDD  3F40               	moviw [0]fsr1
  6977  0FDE  0021               	movlb	1	; select bank1
  6978  0FDF  00D9               	movwf	??_vfpfcnvrt^(0+128)
  6979  0FE0  3F41               	moviw [1]fsr1
  6980  0FE1  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6981  0FE2  0859               	movf	??_vfpfcnvrt^(0+128),w
  6982  0FE3  0084               	movwf	4
  6983  0FE4  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  6984  0FE5  0085               	movwf	5
  6985  0FE6  0800               	movf	0,w	;code access
  6986  0FE7  00DB               	movwf	(??_vfpfcnvrt+2)^(0+128)
  6987  0FE8  01DC               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  6988  0FE9  085B               	movf	(??_vfpfcnvrt+2)^(0+128),w
  6989  0FEA  00F3               	movwf	fputc@c
  6990  0FEB  085C               	movf	(??_vfpfcnvrt+3)^(0+128),w
  6991  0FEC  00F4               	movwf	fputc@c+1
  6992  0FED  0022               	movlb	2	; select bank2
  6993  0FEE  083E               	movf	vfpfcnvrt@fp^(0+256),w
  6994  0FEF  0021               	movlb	1	; select bank1
  6995  0FF0  00DD               	movwf	(??_vfpfcnvrt+4)^(0+128)
  6996  0FF1  085D               	movf	(??_vfpfcnvrt+4)^(0+128),w
  6997  0FF2  00F5               	movwf	fputc@fp
  6998  0FF3  3180  2008  318C   	fcall	_fputc
  6999                           
  7000                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  7001  0FF6  0020               	movlb	0	; select bank0
  7002  0FF7  086D               	movf	vfpfcnvrt@fmt,w
  7003  0FF8  0086               	movwf	6
  7004  0FF9  0187               	clrf	7
  7005  0FFA  3001               	movlw	1
  7006  0FFB  0781               	addwf	1,f
  7007  0FFC  3141               	addfsr 1,1
  7008  0FFD  1803               	skipnc
  7009  0FFE  0A81               	incf	1,f
  7010  0FFF  2FC7               	goto	l4637
  7011  1000                     __end_of_vfpfcnvrt:
  7012                           
  7013                           	psect	text10
  7014  1530                     __ptext10:	
  7015 ;; *************** function _xtoa *****************
  7016 ;; Defined at:
  7017 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7018 ;; Parameters:    Size  Location     Type
  7019 ;;  fp              1    wreg     PTR struct _IO_FILE
  7020 ;;		 -> NULL(0), 
  7021 ;;  d               8   15[BANK0 ] unsigned long long 
  7022 ;;  x               1   23[BANK0 ] unsigned char 
  7023 ;; Auto vars:     Size  Location     Type
  7024 ;;  fp              1   38[BANK0 ] PTR struct _IO_FILE
  7025 ;;		 -> NULL(0), 
  7026 ;;  n               8   41[BANK0 ] unsigned long long 
  7027 ;;  c               2   51[BANK0 ] int 
  7028 ;;  i               2   49[BANK0 ] int 
  7029 ;;  w               2   39[BANK0 ] int 
  7030 ;;  p               2   36[BANK0 ] int 
  7031 ;; Return value:  Size  Location     Type
  7032 ;;                  2   15[BANK0 ] int 
  7033 ;; Registers used:
  7034 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7035 ;; Tracked objects:
  7036 ;;		On entry : 1F/2
  7037 ;;		On exit  : 1F/0
  7038 ;;		Unchanged: 0/0
  7039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7040 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7041 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7042 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7043 ;;      Totals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7044 ;;Total ram usage:       38 bytes
  7045 ;; Hardware stack levels used: 1
  7046 ;; Hardware stack levels required when called: 5
  7047 ;; This function calls:
  7048 ;;		_isalpha
  7049 ;;		_isupper
  7050 ;;		_pad
  7051 ;;		_toupper
  7052 ;; This function is called by:
  7053 ;;		_vfpfcnvrt
  7054 ;; This function uses a non-reentrant model
  7055 ;;
  7056                           
  7057                           
  7058                           ;psect for function _xtoa
  7059  1530                     _xtoa:
  7060                           
  7061                           ;incstack = 0
  7062                           ; Regs used in _xtoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7063                           ;xtoa@fp stored from wreg
  7064  1530  0020               	movlb	0	; select bank0
  7065  1531  00C6               	movwf	xtoa@fp
  7066                           
  7067                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  7068  1532  0021               	movlb	1	; select bank1
  7069  1533  1BED               	btfsc	(_prec+1)^(0+128),7
  7070  1534  2D39               	goto	l1044
  7071                           
  7072                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  7073  1535  30FD               	movlw	253
  7074  1536  05EE               	andwf	_flags^(0+128),f
  7075  1537  30FF               	movlw	255
  7076  1538  05EF               	andwf	(_flags+1)^(0+128),f
  7077  1539                     l1044:	
  7078                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 653:     }
  7079                           
  7080                           
  7081                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  7082  1539  086D               	movf	(_prec+1)^(0+128),w
  7083  153A  3A80               	xorlw	128
  7084  153B  0020               	movlb	0	; select bank0
  7085  153C  00B8               	movwf	??_xtoa
  7086  153D  3080               	movlw	128
  7087  153E  0238               	subwf	??_xtoa,w
  7088  153F  1D03               	skipz
  7089  1540  2D44               	goto	u6525
  7090  1541  3001               	movlw	1
  7091  1542  0021               	movlb	1	; select bank1
  7092  1543  026C               	subwf	_prec^(0+128),w
  7093  1544                     u6525:
  7094  1544  1803               	skipnc
  7095  1545  2D4C               	goto	l4353
  7096  1546  3001               	movlw	1
  7097  1547  0020               	movlb	0	; select bank0
  7098  1548  00C4               	movwf	xtoa@p
  7099  1549  3000               	movlw	0
  7100  154A  00C5               	movwf	xtoa@p+1
  7101  154B  2D54               	goto	l1048
  7102  154C                     l4353:
  7103  154C  0021               	movlb	1	; select bank1
  7104  154D  086D               	movf	(_prec+1)^(0+128),w
  7105  154E  0020               	movlb	0	; select bank0
  7106  154F  00C5               	movwf	xtoa@p+1
  7107  1550  0021               	movlb	1	; select bank1
  7108  1551  086C               	movf	_prec^(0+128),w
  7109  1552  0020               	movlb	0	; select bank0
  7110  1553  00C4               	movwf	xtoa@p
  7111  1554                     l1048:
  7112                           
  7113                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  7114  1554  0022               	movlb	2	; select bank2
  7115  1555  085A               	movf	(_width+1)^(0+256),w
  7116  1556  0020               	movlb	0	; select bank0
  7117  1557  00C8               	movwf	xtoa@w+1
  7118  1558  0022               	movlb	2	; select bank2
  7119  1559  0859               	movf	_width^(0+256),w
  7120  155A  0020               	movlb	0	; select bank0
  7121  155B  00C7               	movwf	xtoa@w
  7122                           
  7123                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  7124  155C  0021               	movlb	1	; select bank1
  7125  155D  1E6E               	btfss	_flags^(0+128),4
  7126  155E  2D64               	goto	l4359
  7127                           
  7128                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  7129  155F  30FE               	movlw	254
  7130  1560  0020               	movlb	0	; select bank0
  7131  1561  07C7               	addwf	xtoa@w,f
  7132  1562  30FF               	movlw	255
  7133  1563  3DC8               	addwfc	xtoa@w+1,f
  7134  1564                     l4359:
  7135                           
  7136                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 661:     n = d;
  7137  1564  0020               	movlb	0	; select bank0
  7138  1565  082F               	movf	xtoa@d,w
  7139  1566  00C9               	movwf	xtoa@n
  7140  1567  0830               	movf	xtoa@d+1,w
  7141  1568  00CA               	movwf	xtoa@n+1
  7142  1569  0831               	movf	xtoa@d+2,w
  7143  156A  00CB               	movwf	xtoa@n+2
  7144  156B  0832               	movf	xtoa@d+3,w
  7145  156C  00CC               	movwf	xtoa@n+3
  7146  156D  0833               	movf	xtoa@d+4,w
  7147  156E  00CD               	movwf	xtoa@n+4
  7148  156F  0834               	movf	xtoa@d+5,w
  7149  1570  00CE               	movwf	xtoa@n+5
  7150  1571  0835               	movf	xtoa@d+6,w
  7151  1572  00CF               	movwf	xtoa@n+6
  7152  1573  0836               	movf	xtoa@d+7,w
  7153  1574  00D0               	movwf	xtoa@n+7
  7154                           
  7155                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  7156  1575  304F               	movlw	79
  7157  1576  00D1               	movwf	xtoa@i
  7158  1577  3000               	movlw	0
  7159  1578  00D2               	movwf	xtoa@i+1
  7160                           
  7161                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  7162  1579  0023               	movlb	3	; select bank3
  7163  157A  01EF               	clrf	(_dbuf^(0+384)+79)
  7164                           
  7165                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7166  157B  2E25               	goto	l4391
  7167  157C                     l4363:
  7168                           
  7169                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 665:         --i;
  7170  157C  30FF               	movlw	255
  7171  157D  0020               	movlb	0	; select bank0
  7172  157E  07D1               	addwf	xtoa@i,f
  7173  157F  30FF               	movlw	255
  7174  1580  3DD2               	addwfc	xtoa@i+1,f
  7175                           
  7176                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  7177  1581  300F               	movlw	15
  7178  1582  0549               	andwf	xtoa@n,w
  7179  1583  00D3               	movwf	xtoa@c
  7180  1584  3000               	movlw	0
  7181  1585  054A               	andwf	xtoa@n+1,w
  7182  1586  00D4               	movwf	xtoa@c+1
  7183                           
  7184                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  7185  1587  0854               	movf	xtoa@c+1,w
  7186  1588  3A80               	xorlw	128
  7187  1589  00B8               	movwf	??_xtoa
  7188  158A  3080               	movlw	128
  7189  158B  0238               	subwf	??_xtoa,w
  7190  158C  1D03               	skipz
  7191  158D  2D90               	goto	u6545
  7192  158E  300A               	movlw	10
  7193  158F  0253               	subwf	xtoa@c,w
  7194  1590                     u6545:
  7195  1590  1C03               	skipc
  7196  1591  2D96               	goto	l4367
  7197  1592  0020               	movlb	0	; select bank0
  7198  1593  0853               	movf	xtoa@c,w
  7199  1594  3E57               	addlw	87
  7200  1595  2D99               	goto	L2
  7201  1596                     l4367:
  7202  1596  0020               	movlb	0	; select bank0
  7203  1597  0853               	movf	xtoa@c,w
  7204  1598  3E30               	addlw	48
  7205  1599                     L2:
  7206  1599  00D3               	movwf	xtoa@c
  7207  159A  3000               	movlw	0
  7208  159B  3D54               	addwfc	xtoa@c+1,w
  7209  159C  00D4               	movwf	xtoa@c+1
  7210  159D  0837               	movf	xtoa@x,w
  7211  159E  3EBF               	addlw	191
  7212  159F  00B8               	movwf	??_xtoa
  7213  15A0  30FF               	movlw	255
  7214  15A1  1803               	skipnc
  7215  15A2  3000               	movlw	0
  7216  15A3  00B9               	movwf	??_xtoa+1
  7217  15A4  3000               	movlw	0
  7218  15A5  0239               	subwf	??_xtoa+1,w
  7219  15A6  301A               	movlw	26
  7220  15A7  1903               	skipnz
  7221  15A8  0238               	subwf	??_xtoa,w
  7222  15A9  1803               	btfsc	3,0
  7223  15AA  2DAD               	goto	u6550
  7224  15AB  3001               	movlw	1
  7225  15AC  2DAE               	goto	u6560
  7226  15AD                     u6550:
  7227  15AD  3000               	movlw	0
  7228  15AE                     u6560:
  7229  15AE  00BA               	movwf	??_xtoa+2
  7230  15AF  01BB               	clrf	??_xtoa+3
  7231  15B0  083A               	movf	??_xtoa+2,w
  7232  15B1  00C0               	movwf	_xtoa$975
  7233  15B2  083B               	movf	??_xtoa+3,w
  7234  15B3  00C1               	movwf	_xtoa$975+1
  7235  15B4  0840               	movf	_xtoa$975,w
  7236  15B5  0441               	iorwf	_xtoa$975+1,w
  7237  15B6  1903               	btfsc	3,2
  7238  15B7  2DE3               	goto	l4383
  7239  15B8  3020               	movlw	32
  7240  15B9  0453               	iorwf	xtoa@c,w
  7241  15BA  00B8               	movwf	??_xtoa
  7242  15BB  3000               	movlw	0
  7243  15BC  0454               	iorwf	xtoa@c+1,w
  7244  15BD  00B9               	movwf	??_xtoa+1
  7245  15BE  0838               	movf	??_xtoa,w
  7246  15BF  3E9F               	addlw	159
  7247  15C0  00BA               	movwf	??_xtoa+2
  7248  15C1  30FF               	movlw	255
  7249  15C2  3D39               	addwfc	??_xtoa+1,w
  7250  15C3  00BB               	movwf	??_xtoa+3
  7251  15C4  3000               	movlw	0
  7252  15C5  023B               	subwf	??_xtoa+3,w
  7253  15C6  301A               	movlw	26
  7254  15C7  1903               	skipnz
  7255  15C8  023A               	subwf	??_xtoa+2,w
  7256  15C9  1803               	btfsc	3,0
  7257  15CA  2DCD               	goto	u6580
  7258  15CB  3001               	movlw	1
  7259  15CC  2DCE               	goto	u6590
  7260  15CD                     u6580:
  7261  15CD  3000               	movlw	0
  7262  15CE                     u6590:
  7263  15CE  00BC               	movwf	??_xtoa+4
  7264  15CF  01BD               	clrf	??_xtoa+5
  7265  15D0  083C               	movf	??_xtoa+4,w
  7266  15D1  00C2               	movwf	_xtoa$976
  7267  15D2  083D               	movf	??_xtoa+5,w
  7268  15D3  00C3               	movwf	_xtoa$976+1
  7269  15D4  0842               	movf	_xtoa$976,w
  7270  15D5  0443               	iorwf	_xtoa$976+1,w
  7271  15D6  1903               	btfsc	3,2
  7272  15D7  2DE3               	goto	l4383
  7273                           
  7274                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  7275  15D8  0854               	movf	xtoa@c+1,w
  7276  15D9  00F7               	movwf	toupper@c+1
  7277  15DA  0853               	movf	xtoa@c,w
  7278  15DB  00F6               	movwf	toupper@c
  7279  15DC  319B  233B  3195   	fcall	_toupper
  7280  15DF  0877               	movf	?_toupper+1,w
  7281  15E0  00D4               	movwf	xtoa@c+1
  7282  15E1  0876               	movf	?_toupper,w
  7283  15E2  00D3               	movwf	xtoa@c
  7284  15E3                     l4383:
  7285                           
  7286                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  7287  15E3  0853               	movf	xtoa@c,w
  7288  15E4  00B8               	movwf	??_xtoa
  7289  15E5  0851               	movf	xtoa@i,w
  7290  15E6  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7291  15E7  0086               	movwf	6
  7292  15E8  3001               	movlw	1	; select bank3/4
  7293  15E9  0087               	movwf	7
  7294  15EA  0838               	movf	??_xtoa,w
  7295  15EB  0081               	movwf	1
  7296                           
  7297                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 672:         --p;
  7298  15EC  30FF               	movlw	255
  7299  15ED  07C4               	addwf	xtoa@p,f
  7300  15EE  30FF               	movlw	255
  7301  15EF  3DC5               	addwfc	xtoa@p+1,f
  7302                           
  7303                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 673:         --w;
  7304  15F0  30FF               	movlw	255
  7305  15F1  07C7               	addwf	xtoa@w,f
  7306  15F2  30FF               	movlw	255
  7307  15F3  3DC8               	addwfc	xtoa@w+1,f
  7308                           
  7309                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  7310  15F4  3049               	movlw	low xtoa@n
  7311  15F5  0086               	movwf	6
  7312  15F6  3000               	movlw	high xtoa@n
  7313  15F7  0087               	movwf	7
  7314  15F8  3F40               	moviw [0]fsr1
  7315  15F9  00B8               	movwf	??_xtoa
  7316  15FA  3F41               	moviw [1]fsr1
  7317  15FB  00B9               	movwf	??_xtoa+1
  7318  15FC  3F42               	moviw [2]fsr1
  7319  15FD  00BA               	movwf	??_xtoa+2
  7320  15FE  3F43               	moviw [3]fsr1
  7321  15FF  00BB               	movwf	??_xtoa+3
  7322  1600  3F44               	moviw [4]fsr1
  7323  1601  00BC               	movwf	??_xtoa+4
  7324  1602  3F45               	moviw [5]fsr1
  7325  1603  00BD               	movwf	??_xtoa+5
  7326  1604  3F46               	moviw [6]fsr1
  7327  1605  00BE               	movwf	??_xtoa+6
  7328  1606  3F47               	moviw [7]fsr1
  7329  1607  00BF               	movwf	??_xtoa+7
  7330  1608  3004               	movlw	4
  7331  1609                     u6615:
  7332  1609  0020               	movlb	0	; select bank0
  7333  160A  36BF               	lsrf	??_xtoa+7,f
  7334  160B  0CBE               	rrf	??_xtoa+6,f
  7335  160C  0CBD               	rrf	??_xtoa+5,f
  7336  160D  0CBC               	rrf	??_xtoa+4,f
  7337  160E  0CBB               	rrf	??_xtoa+3,f
  7338  160F  0CBA               	rrf	??_xtoa+2,f
  7339  1610  0CB9               	rrf	??_xtoa+1,f
  7340  1611  0CB8               	rrf	??_xtoa,f
  7341  1612  0B89               	decfsz	9,f
  7342  1613  2E09               	goto	u6615
  7343  1614  0020               	movlb	0	; select bank0
  7344  1615  083F               	movf	??_xtoa+7,w
  7345  1616  00D0               	movwf	xtoa@n+7
  7346  1617  083E               	movf	??_xtoa+6,w
  7347  1618  00CF               	movwf	xtoa@n+6
  7348  1619  083D               	movf	??_xtoa+5,w
  7349  161A  00CE               	movwf	xtoa@n+5
  7350  161B  083C               	movf	??_xtoa+4,w
  7351  161C  00CD               	movwf	xtoa@n+4
  7352  161D  083B               	movf	??_xtoa+3,w
  7353  161E  00CC               	movwf	xtoa@n+3
  7354  161F  083A               	movf	??_xtoa+2,w
  7355  1620  00CB               	movwf	xtoa@n+2
  7356  1621  0839               	movf	??_xtoa+1,w
  7357  1622  00CA               	movwf	xtoa@n+1
  7358  1623  0838               	movf	??_xtoa,w
  7359  1624  00C9               	movwf	xtoa@n
  7360  1625                     l4391:
  7361                           
  7362                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7363  1625  0020               	movlb	0	; select bank0
  7364  1626  0852               	movf	xtoa@i+1,w
  7365  1627  3A80               	xorlw	128
  7366  1628  00B8               	movwf	??_xtoa
  7367  1629  3080               	movlw	128
  7368  162A  0238               	subwf	??_xtoa,w
  7369  162B  1D03               	skipz
  7370  162C  2E2F               	goto	u6625
  7371  162D  3002               	movlw	2
  7372  162E  0251               	subwf	xtoa@i,w
  7373  162F                     u6625:
  7374  162F  1C03               	skipc
  7375  1630  2E56               	goto	l1069
  7376  1631  0020               	movlb	0	; select bank0
  7377  1632  0849               	movf	xtoa@n,w
  7378  1633  044A               	iorwf	xtoa@n+1,w
  7379  1634  044B               	iorwf	xtoa@n+2,w
  7380  1635  044C               	iorwf	xtoa@n+3,w
  7381  1636  044D               	iorwf	xtoa@n+4,w
  7382  1637  044E               	iorwf	xtoa@n+5,w
  7383  1638  044F               	iorwf	xtoa@n+6,w
  7384  1639  0450               	iorwf	xtoa@n+7,w
  7385  163A  1D03               	skipz
  7386  163B  2D7C               	goto	l4363
  7387  163C  0845               	movf	xtoa@p+1,w
  7388  163D  3A80               	xorlw	128
  7389  163E  00B8               	movwf	??_xtoa
  7390  163F  3080               	movlw	128
  7391  1640  0238               	subwf	??_xtoa,w
  7392  1641  1D03               	skipz
  7393  1642  2E45               	goto	u6645
  7394  1643  3001               	movlw	1
  7395  1644  0244               	subwf	xtoa@p,w
  7396  1645                     u6645:
  7397  1645  1803               	skipnc
  7398  1646  2D7C               	goto	l4363
  7399  1647  0020               	movlb	0	; select bank0
  7400  1648  0848               	movf	xtoa@w+1,w
  7401  1649  3A80               	xorlw	128
  7402  164A  00B8               	movwf	??_xtoa
  7403  164B  3080               	movlw	128
  7404  164C  0238               	subwf	??_xtoa,w
  7405  164D  1D03               	skipz
  7406  164E  2E51               	goto	u6655
  7407  164F  3001               	movlw	1
  7408  1650  0247               	subwf	xtoa@w,w
  7409  1651                     u6655:
  7410  1651  1C03               	skipc
  7411  1652  2E56               	goto	l1069
  7412  1653  0021               	movlb	1	; select bank1
  7413  1654  18EE               	btfsc	_flags^(0+128),1
  7414  1655  2D7C               	goto	l4363
  7415  1656                     l1069:
  7416                           
  7417                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  7418  1656  0021               	movlb	1	; select bank1
  7419  1657  1E6E               	btfss	_flags^(0+128),4
  7420  1658  2E74               	goto	l4407
  7421                           
  7422                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 679:         --i;
  7423  1659  30FF               	movlw	255
  7424  165A  0020               	movlb	0	; select bank0
  7425  165B  07D1               	addwf	xtoa@i,f
  7426  165C  30FF               	movlw	255
  7427  165D  3DD2               	addwfc	xtoa@i+1,f
  7428                           
  7429                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  7430  165E  0837               	movf	xtoa@x,w
  7431  165F  00B8               	movwf	??_xtoa
  7432  1660  0851               	movf	xtoa@i,w
  7433  1661  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7434  1662  0086               	movwf	6
  7435  1663  3001               	movlw	1	; select bank3/4
  7436  1664  0087               	movwf	7
  7437  1665  0838               	movf	??_xtoa,w
  7438  1666  0081               	movwf	1
  7439                           
  7440                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 681:         --i;
  7441  1667  30FF               	movlw	255
  7442  1668  07D1               	addwf	xtoa@i,f
  7443  1669  30FF               	movlw	255
  7444  166A  3DD2               	addwfc	xtoa@i+1,f
  7445                           
  7446                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  7447  166B  3030               	movlw	48
  7448  166C  00B8               	movwf	??_xtoa
  7449  166D  0851               	movf	xtoa@i,w
  7450  166E  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7451  166F  0086               	movwf	6
  7452  1670  3001               	movlw	1	; select bank3/4
  7453  1671  0087               	movwf	7
  7454  1672  0838               	movf	??_xtoa,w
  7455  1673  0081               	movwf	1
  7456  1674                     l4407:
  7457                           
  7458                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  7459  1674  0020               	movlb	0	; select bank0
  7460  1675  0851               	movf	xtoa@i,w
  7461  1676  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7462  1677  00B8               	movwf	??_xtoa
  7463  1678  0838               	movf	??_xtoa,w
  7464  1679  00A7               	movwf	pad@buf
  7465  167A  0848               	movf	xtoa@w+1,w
  7466  167B  00A9               	movwf	pad@p+1
  7467  167C  0847               	movf	xtoa@w,w
  7468  167D  00A8               	movwf	pad@p
  7469  167E  0846               	movf	xtoa@fp,w
  7470  167F  319C  24D0         	fcall	_pad
  7471  1681  0828               	movf	?_pad+1,w
  7472  1682  00B0               	movwf	?_xtoa+1
  7473  1683  0827               	movf	?_pad,w
  7474  1684  00AF               	movwf	?_xtoa
  7475  1685  0008               	return
  7476  1686                     __end_of_xtoa:
  7477                           
  7478                           	psect	text11
  7479  1B3B                     __ptext11:	
  7480 ;; *************** function _toupper *****************
  7481 ;; Defined at:
  7482 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\toupper.c"
  7483 ;; Parameters:    Size  Location     Type
  7484 ;;  c               2    6[COMMON] int 
  7485 ;; Auto vars:     Size  Location     Type
  7486 ;;		None
  7487 ;; Return value:  Size  Location     Type
  7488 ;;                  2    6[COMMON] int 
  7489 ;; Registers used:
  7490 ;;		wreg, status,2, status,0
  7491 ;; Tracked objects:
  7492 ;;		On entry : 1F/0
  7493 ;;		On exit  : 1F/0
  7494 ;;		Unchanged: 1F/0
  7495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7496 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7497 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7498 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7499 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7500 ;;Total ram usage:        8 bytes
  7501 ;; Hardware stack levels used: 1
  7502 ;; Hardware stack levels required when called: 1
  7503 ;; This function calls:
  7504 ;;		_islower
  7505 ;; This function is called by:
  7506 ;;		_xtoa
  7507 ;; This function uses a non-reentrant model
  7508 ;;
  7509                           
  7510                           
  7511                           ;psect for function _toupper
  7512  1B3B                     _toupper:
  7513                           
  7514                           ;incstack = 0
  7515                           ; Regs used in _toupper: [wreg+status,2+status,0]
  7516  1B3B  0876               	movf	toupper@c,w
  7517  1B3C  3E9F               	addlw	159
  7518  1B3D  00F8               	movwf	??_toupper
  7519  1B3E  30FF               	movlw	255
  7520  1B3F  3D77               	addwfc	toupper@c+1,w
  7521  1B40  00F9               	movwf	??_toupper+1
  7522  1B41  3000               	movlw	0
  7523  1B42  0279               	subwf	??_toupper+1,w
  7524  1B43  301A               	movlw	26
  7525  1B44  1903               	skipnz
  7526  1B45  0278               	subwf	??_toupper,w
  7527  1B46  1803               	btfsc	3,0
  7528  1B47  2B4A               	goto	u5720
  7529  1B48  3001               	movlw	1
  7530  1B49  2B4B               	goto	u5730
  7531  1B4A                     u5720:
  7532  1B4A  3000               	movlw	0
  7533  1B4B                     u5730:
  7534  1B4B  00FA               	movwf	??_toupper+2
  7535  1B4C  01FB               	clrf	??_toupper+3
  7536  1B4D  087A               	movf	??_toupper+2,w
  7537  1B4E  00FC               	movwf	_toupper$1146
  7538  1B4F  087B               	movf	??_toupper+3,w
  7539  1B50  00FD               	movwf	_toupper$1146+1
  7540  1B51  087C               	movf	_toupper$1146,w
  7541  1B52  047D               	iorwf	_toupper$1146+1,w
  7542  1B53  1903               	btfsc	3,2
  7543  1B54  0008               	return
  7544  1B55  305F               	movlw	95
  7545  1B56  0576               	andwf	toupper@c,w
  7546  1B57  00F6               	movwf	?_toupper
  7547  1B58  3000               	movlw	0
  7548  1B59  0577               	andwf	toupper@c+1,w
  7549  1B5A  00F7               	movwf	?_toupper+1
  7550  1B5B  0008               	return
  7551  1B5C                     __end_of_toupper:
  7552                           
  7553                           	psect	text12
  7554  19D2                     __ptext12:	
  7555 ;; *************** function _islower *****************
  7556 ;; Defined at:
  7557 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\islower.c"
  7558 ;; Parameters:    Size  Location     Type
  7559 ;;  c               2    0[COMMON] int 
  7560 ;; Auto vars:     Size  Location     Type
  7561 ;;		None
  7562 ;; Return value:  Size  Location     Type
  7563 ;;                  2    0[COMMON] int 
  7564 ;; Registers used:
  7565 ;;		wreg, status,2, status,0
  7566 ;; Tracked objects:
  7567 ;;		On entry : 0/0
  7568 ;;		On exit  : 0/0
  7569 ;;		Unchanged: 0/0
  7570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7571 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7573 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7574 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7575 ;;Total ram usage:        6 bytes
  7576 ;; Hardware stack levels used: 1
  7577 ;; This function calls:
  7578 ;;		Nothing
  7579 ;; This function is called by:
  7580 ;;		_toupper
  7581 ;; This function uses a non-reentrant model
  7582 ;;
  7583                           
  7584                           
  7585                           ;psect for function _islower
  7586  19D2                     _islower:
  7587                           
  7588                           ;incstack = 0
  7589                           ; Regs used in _islower: [wreg+status,2+status,0]
  7590  19D2  0870               	movf	islower@c,w
  7591  19D3  3E9F               	addlw	159
  7592  19D4  00F2               	movwf	??_islower
  7593  19D5  30FF               	movlw	255
  7594  19D6  3D71               	addwfc	islower@c+1,w
  7595  19D7  00F3               	movwf	??_islower+1
  7596  19D8  3000               	movlw	0
  7597  19D9  0273               	subwf	??_islower+1,w
  7598  19DA  301A               	movlw	26
  7599  19DB  1903               	skipnz
  7600  19DC  0272               	subwf	??_islower,w
  7601  19DD  1803               	btfsc	3,0
  7602  19DE  29E1               	goto	u4230
  7603  19DF  3001               	movlw	1
  7604  19E0  29E2               	goto	u4240
  7605  19E1                     u4230:
  7606  19E1  3000               	movlw	0
  7607  19E2                     u4240:
  7608  19E2  00F4               	movwf	??_islower+2
  7609  19E3  01F5               	clrf	??_islower+3
  7610  19E4  0874               	movf	??_islower+2,w
  7611  19E5  00F0               	movwf	?_islower
  7612  19E6  0875               	movf	??_islower+3,w
  7613  19E7  00F1               	movwf	?_islower+1
  7614  19E8  0008               	return
  7615  19E9                     __end_of_islower:
  7616                           
  7617                           	psect	text13
  7618  1AA1                     __ptext13:	
  7619 ;; *************** function _isalpha *****************
  7620 ;; Defined at:
  7621 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isalpha.c"
  7622 ;; Parameters:    Size  Location     Type
  7623 ;;  c               2    0[COMMON] int 
  7624 ;; Auto vars:     Size  Location     Type
  7625 ;;		None
  7626 ;; Return value:  Size  Location     Type
  7627 ;;                  2    0[COMMON] int 
  7628 ;; Registers used:
  7629 ;;		wreg, status,2, status,0
  7630 ;; Tracked objects:
  7631 ;;		On entry : 0/0
  7632 ;;		On exit  : 0/0
  7633 ;;		Unchanged: 0/0
  7634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7635 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7637 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7638 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7639 ;;Total ram usage:        8 bytes
  7640 ;; Hardware stack levels used: 1
  7641 ;; This function calls:
  7642 ;;		Nothing
  7643 ;; This function is called by:
  7644 ;;		_xtoa
  7645 ;; This function uses a non-reentrant model
  7646 ;;
  7647                           
  7648                           
  7649                           ;psect for function _isalpha
  7650  1AA1                     _isalpha:
  7651                           
  7652                           ;incstack = 0
  7653                           ; Regs used in _isalpha: [wreg+status,2+status,0]
  7654  1AA1  3020               	movlw	32
  7655  1AA2  0470               	iorwf	isalpha@c,w
  7656  1AA3  00F2               	movwf	??_isalpha
  7657  1AA4  3000               	movlw	0
  7658  1AA5  0471               	iorwf	isalpha@c+1,w
  7659  1AA6  00F3               	movwf	??_isalpha+1
  7660  1AA7  0872               	movf	??_isalpha,w
  7661  1AA8  3E9F               	addlw	159
  7662  1AA9  00F4               	movwf	??_isalpha+2
  7663  1AAA  30FF               	movlw	255
  7664  1AAB  3D73               	addwfc	??_isalpha+1,w
  7665  1AAC  00F5               	movwf	??_isalpha+3
  7666  1AAD  3000               	movlw	0
  7667  1AAE  0275               	subwf	??_isalpha+3,w
  7668  1AAF  301A               	movlw	26
  7669  1AB0  1903               	skipnz
  7670  1AB1  0274               	subwf	??_isalpha+2,w
  7671  1AB2  1803               	btfsc	3,0
  7672  1AB3  2AB6               	goto	u5700
  7673  1AB4  3001               	movlw	1
  7674  1AB5  2AB7               	goto	u5710
  7675  1AB6                     u5700:
  7676  1AB6  3000               	movlw	0
  7677  1AB7                     u5710:
  7678  1AB7  00F6               	movwf	??_isalpha+4
  7679  1AB8  01F7               	clrf	??_isalpha+5
  7680  1AB9  0876               	movf	??_isalpha+4,w
  7681  1ABA  00F0               	movwf	?_isalpha
  7682  1ABB  0877               	movf	??_isalpha+5,w
  7683  1ABC  00F1               	movwf	?_isalpha+1
  7684  1ABD  0008               	return
  7685  1ABE                     __end_of_isalpha:
  7686                           
  7687                           	psect	text14
  7688  1D70                     __ptext14:	
  7689 ;; *************** function _strncmp *****************
  7690 ;; Defined at:
  7691 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  7692 ;; Parameters:    Size  Location     Type
  7693 ;;  _l              1    wreg     PTR const unsigned char 
  7694 ;;		 -> vfpfcnvrt@ct(3), 
  7695 ;;  _r              2    0[COMMON] PTR const unsigned char 
  7696 ;;		 -> STR_15(3), 
  7697 ;;  n               2    2[COMMON] unsigned int 
  7698 ;; Auto vars:     Size  Location     Type
  7699 ;;  _l              1    5[COMMON] PTR const unsigned char 
  7700 ;;		 -> vfpfcnvrt@ct(3), 
  7701 ;;  r               2    6[COMMON] PTR const unsigned char 
  7702 ;;		 -> STR_15(3), 
  7703 ;;  l               1    8[COMMON] PTR const unsigned char 
  7704 ;;		 -> vfpfcnvrt@ct(3), 
  7705 ;; Return value:  Size  Location     Type
  7706 ;;                  2    0[COMMON] int 
  7707 ;; Registers used:
  7708 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  7709 ;; Tracked objects:
  7710 ;;		On entry : 1F/2
  7711 ;;		On exit  : 1F/2
  7712 ;;		Unchanged: 1F/0
  7713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7714 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7715 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7716 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7717 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7718 ;;Total ram usage:        9 bytes
  7719 ;; Hardware stack levels used: 1
  7720 ;; This function calls:
  7721 ;;		Nothing
  7722 ;; This function is called by:
  7723 ;;		_vfpfcnvrt
  7724 ;; This function uses a non-reentrant model
  7725 ;;
  7726                           
  7727                           
  7728                           ;psect for function _strncmp
  7729  1D70                     _strncmp:
  7730                           
  7731                           ;incstack = 0
  7732                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
  7733                           ;strncmp@_l stored from wreg
  7734  1D70  00F5               	movwf	strncmp@_l
  7735  1D71  0875               	movf	strncmp@_l,w
  7736  1D72  00F4               	movwf	??_strncmp
  7737  1D73  0874               	movf	??_strncmp,w
  7738  1D74  00F8               	movwf	strncmp@l
  7739  1D75  0871               	movf	strncmp@_r+1,w
  7740  1D76  00F7               	movwf	strncmp@r+1
  7741  1D77  0870               	movf	strncmp@_r,w
  7742  1D78  00F6               	movwf	strncmp@r
  7743  1D79  3001               	movlw	1
  7744  1D7A  02F2               	subwf	strncmp@n,f
  7745  1D7B  3000               	movlw	0
  7746  1D7C  3BF3               	subwfb	strncmp@n+1,f
  7747  1D7D  0A72               	incf	strncmp@n,w
  7748  1D7E  1D03               	skipz
  7749  1D7F  2DAB               	goto	l4469
  7750  1D80  0A73               	incf	strncmp@n+1,w
  7751  1D81  1D03               	btfss	3,2
  7752  1D82  2DAB               	goto	l4469
  7753  1D83  01F0               	clrf	?_strncmp
  7754  1D84  01F1               	clrf	?_strncmp+1
  7755  1D85  0008               	return
  7756  1D86                     l4471:
  7757  1D86  0876               	movf	strncmp@r,w
  7758  1D87  0084               	movwf	4
  7759  1D88  0877               	movf	strncmp@r+1,w
  7760  1D89  0085               	movwf	5
  7761  1D8A  0012               	moviw fsr0++
  7762  1D8B  1903               	btfsc	3,2
  7763  1D8C  2DB2               	goto	l4477
  7764  1D8D  0872               	movf	strncmp@n,w
  7765  1D8E  0473               	iorwf	strncmp@n+1,w
  7766  1D8F  1903               	btfsc	3,2
  7767  1D90  2DB2               	goto	l4477
  7768  1D91  0876               	movf	strncmp@r,w
  7769  1D92  0084               	movwf	4
  7770  1D93  0877               	movf	strncmp@r+1,w
  7771  1D94  0085               	movwf	5
  7772  1D95  0800               	movf	0,w	;code access
  7773  1D96  00F4               	movwf	??_strncmp
  7774  1D97  0878               	movf	strncmp@l,w
  7775  1D98  0086               	movwf	6
  7776  1D99  3001               	movlw	1	; select bank2/3
  7777  1D9A  0087               	movwf	7
  7778  1D9B  0801               	movf	1,w
  7779  1D9C  0674               	xorwf	??_strncmp,w
  7780  1D9D  1D03               	btfss	3,2
  7781  1D9E  2DB2               	goto	l4477
  7782  1D9F  3001               	movlw	1
  7783  1DA0  00F4               	movwf	??_strncmp
  7784  1DA1  0874               	movf	??_strncmp,w
  7785  1DA2  07F8               	addwf	strncmp@l,f
  7786  1DA3  3001               	movlw	1
  7787  1DA4  07F6               	addwf	strncmp@r,f
  7788  1DA5  3000               	movlw	0
  7789  1DA6  3DF7               	addwfc	strncmp@r+1,f
  7790  1DA7  3001               	movlw	1
  7791  1DA8  02F2               	subwf	strncmp@n,f
  7792  1DA9  3000               	movlw	0
  7793  1DAA  3BF3               	subwfb	strncmp@n+1,f
  7794  1DAB                     l4469:
  7795  1DAB  0878               	movf	strncmp@l,w
  7796  1DAC  0086               	movwf	6
  7797  1DAD  3001               	movlw	1	; select bank2/3
  7798  1DAE  0087               	movwf	7
  7799  1DAF  0801               	movf	1,w
  7800  1DB0  1D03               	btfss	3,2
  7801  1DB1  2D86               	goto	l4471
  7802  1DB2                     l4477:
  7803  1DB2  0878               	movf	strncmp@l,w
  7804  1DB3  0086               	movwf	6
  7805  1DB4  3001               	movlw	1	; select bank2/3
  7806  1DB5  0087               	movwf	7
  7807  1DB6  0876               	movf	strncmp@r,w
  7808  1DB7  0084               	movwf	4
  7809  1DB8  0877               	movf	strncmp@r+1,w
  7810  1DB9  0085               	movwf	5
  7811  1DBA  0800               	movf	0,w	;code access
  7812  1DBB  0201               	subwf	1,w
  7813  1DBC  00F0               	movwf	?_strncmp
  7814  1DBD  01F1               	clrf	?_strncmp+1
  7815  1DBE  1C03               	skipc
  7816  1DBF  03F1               	decf	?_strncmp+1,f
  7817  1DC0  0008               	return
  7818  1DC1                     __end_of_strncmp:
  7819                           
  7820                           	psect	text15
  7821  0130                     __ptext15:	
  7822 ;; *************** function _efgtoa *****************
  7823 ;; Defined at:
  7824 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7825 ;; Parameters:    Size  Location     Type
  7826 ;;  fp              1    wreg     PTR struct _IO_FILE
  7827 ;;		 -> NULL(0), 
  7828 ;;  f               4   68[BANK0 ] PTR struct _IO_FILE
  7829 ;;  c               1   72[BANK0 ] unsigned char 
  7830 ;; Auto vars:     Size  Location     Type
  7831 ;;  fp              1   30[BANK1 ] PTR struct _IO_FILE
  7832 ;;		 -> NULL(0), 
  7833 ;;  u               4   53[BANK1 ] PTR struct _IO_FILE
  7834 ;;  g               4   45[BANK1 ] PTR struct _IO_FILE
  7835 ;;  l               4   39[BANK1 ] PTR struct _IO_FILE
  7836 ;;  h               4   35[BANK1 ] PTR struct _IO_FILE
  7837 ;;  ou              4   20[BANK1 ] PTR struct _IO_FILE
  7838 ;;  n               2   51[BANK1 ] int 
  7839 ;;  e               2   49[BANK1 ] int 
  7840 ;;  i               2   43[BANK1 ] int 
  7841 ;;  w               2   31[BANK1 ] int 
  7842 ;;  p               2   28[BANK1 ] int 
  7843 ;;  sign            2   26[BANK1 ] int 
  7844 ;;  d               2   24[BANK1 ] int 
  7845 ;;  m               2   18[BANK1 ] int 
  7846 ;;  ne              2   16[BANK1 ] int 
  7847 ;;  pp              2   14[BANK1 ] int 
  7848 ;;  t               2   12[BANK1 ] int 
  7849 ;;  mode            1   34[BANK1 ] unsigned char 
  7850 ;;  nmode           1   33[BANK1 ] unsigned char 
  7851 ;; Return value:  Size  Location     Type
  7852 ;;                  2   68[BANK0 ] int 
  7853 ;; Registers used:
  7854 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7855 ;; Tracked objects:
  7856 ;;		On entry : 1F/2
  7857 ;;		On exit  : 1F/0
  7858 ;;		Unchanged: 0/0
  7859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7860 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7861 ;;      Locals:         0       0      57       0       0       0       0       0       0       0       0       0       
      +0       0
  7862 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7863 ;;      Totals:         0       9      57       0       0       0       0       0       0       0       0       0       
      +0       0
  7864 ;;Total ram usage:       66 bytes
  7865 ;; Hardware stack levels used: 1
  7866 ;; Hardware stack levels required when called: 5
  7867 ;; This function calls:
  7868 ;;		___awdiv
  7869 ;;		___awmod
  7870 ;;		___fladd
  7871 ;;		___fldiv
  7872 ;;		___fleq
  7873 ;;		___flge
  7874 ;;		___flmul
  7875 ;;		___flneg
  7876 ;;		___flsub
  7877 ;;		___fltol
  7878 ;;		___fpclassifyf
  7879 ;;		_floorf
  7880 ;;		_isupper
  7881 ;;		_pad
  7882 ;;		_strcpy
  7883 ;;		_tolower
  7884 ;; This function is called by:
  7885 ;;		_vfpfcnvrt
  7886 ;; This function uses a non-reentrant model
  7887 ;;
  7888                           
  7889                           
  7890                           ;psect for function _efgtoa
  7891  0130                     _efgtoa:
  7892                           
  7893                           ;incstack = 0
  7894                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7895                           ;efgtoa@fp stored from wreg
  7896  0130  0021               	movlb	1	; select bank1
  7897  0131  00BE               	movwf	efgtoa@fp^(0+128)
  7898                           
  7899                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  7900  0132  01BA               	clrf	efgtoa@sign^(0+128)
  7901  0133  01BB               	clrf	(efgtoa@sign+1)^(0+128)
  7902                           
  7903                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  7904  0134  0020               	movlb	0	; select bank0
  7905  0135  0867               	movf	efgtoa@f+3,w
  7906  0136  0021               	movlb	1	; select bank1
  7907  0137  00D0               	movwf	(efgtoa@g+3)^(0+128)
  7908  0138  0020               	movlb	0	; select bank0
  7909  0139  0866               	movf	efgtoa@f+2,w
  7910  013A  0021               	movlb	1	; select bank1
  7911  013B  00CF               	movwf	(efgtoa@g+2)^(0+128)
  7912  013C  0020               	movlb	0	; select bank0
  7913  013D  0865               	movf	efgtoa@f+1,w
  7914  013E  0021               	movlb	1	; select bank1
  7915  013F  00CE               	movwf	(efgtoa@g+1)^(0+128)
  7916  0140  0020               	movlb	0	; select bank0
  7917  0141  0864               	movf	efgtoa@f,w
  7918  0142  0021               	movlb	1	; select bank1
  7919  0143  00CD               	movwf	efgtoa@g^(0+128)
  7920                           
  7921                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  7922  0144  0850               	movf	(efgtoa@g+3)^(0+128),w
  7923  0145  0020               	movlb	0	; select bank0
  7924  0146  00CB               	movwf	___flge@ff1+3
  7925  0147  0021               	movlb	1	; select bank1
  7926  0148  084F               	movf	(efgtoa@g+2)^(0+128),w
  7927  0149  0020               	movlb	0	; select bank0
  7928  014A  00CA               	movwf	___flge@ff1+2
  7929  014B  0021               	movlb	1	; select bank1
  7930  014C  084E               	movf	(efgtoa@g+1)^(0+128),w
  7931  014D  0020               	movlb	0	; select bank0
  7932  014E  00C9               	movwf	___flge@ff1+1
  7933  014F  0021               	movlb	1	; select bank1
  7934  0150  084D               	movf	efgtoa@g^(0+128),w
  7935  0151  0020               	movlb	0	; select bank0
  7936  0152  00C8               	movwf	___flge@ff1
  7937  0153  3000               	movlw	0
  7938  0154  00CF               	movwf	___flge@ff2+3
  7939  0155  3000               	movlw	0
  7940  0156  00CE               	movwf	___flge@ff2+2
  7941  0157  3000               	movlw	0
  7942  0158  00CD               	movwf	___flge@ff2+1
  7943  0159  3000               	movlw	0
  7944  015A  00CC               	movwf	___flge@ff2
  7945  015B  319E  26F0  3181   	fcall	___flge
  7946  015E  1803               	btfsc	3,0
  7947  015F  2978               	goto	l4057
  7948                           
  7949                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  7950  0160  3001               	movlw	1
  7951  0161  0021               	movlb	1	; select bank1
  7952  0162  00BA               	movwf	efgtoa@sign^(0+128)
  7953  0163  3000               	movlw	0
  7954  0164  00BB               	movwf	(efgtoa@sign^(0+128)+1)
  7955                           
  7956                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  7957  0165  0850               	movf	(efgtoa@g+3)^(0+128),w
  7958  0166  00F3               	movwf	___flneg@f1+3
  7959  0167  084F               	movf	(efgtoa@g+2)^(0+128),w
  7960  0168  00F2               	movwf	___flneg@f1+2
  7961  0169  084E               	movf	(efgtoa@g+1)^(0+128),w
  7962  016A  00F1               	movwf	___flneg@f1+1
  7963  016B  084D               	movf	efgtoa@g^(0+128),w
  7964  016C  00F0               	movwf	___flneg@f1
  7965  016D  3190  2004  3181   	fcall	___flneg
  7966  0170  0873               	movf	?___flneg+3,w
  7967  0171  00D0               	movwf	(efgtoa@g+3)^(0+128)
  7968  0172  0872               	movf	?___flneg+2,w
  7969  0173  00CF               	movwf	(efgtoa@g+2)^(0+128)
  7970  0174  0871               	movf	?___flneg+1,w
  7971  0175  00CE               	movwf	(efgtoa@g+1)^(0+128)
  7972  0176  0870               	movf	?___flneg,w
  7973  0177  00CD               	movwf	efgtoa@g^(0+128)
  7974  0178                     l4057:
  7975                           
  7976                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  7977  0178  0021               	movlb	1	; select bank1
  7978  0179  01D3               	clrf	efgtoa@n^(0+128)
  7979  017A  01D4               	clrf	(efgtoa@n+1)^(0+128)
  7980                           
  7981                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  7982  017B  0022               	movlb	2	; select bank2
  7983  017C  085A               	movf	(_width+1)^(0+256),w
  7984  017D  0021               	movlb	1	; select bank1
  7985  017E  00C0               	movwf	(efgtoa@w+1)^(0+128)
  7986  017F  0022               	movlb	2	; select bank2
  7987  0180  0859               	movf	_width^(0+256),w
  7988  0181  0021               	movlb	1	; select bank1
  7989  0182  00BF               	movwf	efgtoa@w^(0+128)
  7990                           
  7991                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  7992  0183  083A               	movf	efgtoa@sign^(0+128),w
  7993  0184  043B               	iorwf	(efgtoa@sign+1)^(0+128),w
  7994  0185  1D03               	btfss	3,2
  7995  0186  2989               	goto	l4065
  7996  0187  1D6E               	btfss	_flags^(0+128),2
  7997  0188  29A2               	goto	l4077
  7998  0189                     l4065:
  7999                           
  8000                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  8001  0189  083A               	movf	efgtoa@sign^(0+128),w
  8002  018A  043B               	iorwf	(efgtoa@sign+1)^(0+128),w
  8003  018B  1D03               	btfss	3,2
  8004  018C  298F               	goto	l4069
  8005  018D  302B               	movlw	43
  8006  018E  2990               	goto	L3
  8007  018F                     l4069:
  8008  018F  302D               	movlw	45
  8009  0190                     L3:
  8010  0190  00A0               	movwf	_efgtoa$954^(0+128)
  8011  0191  3000               	movlw	0
  8012  0192  00A1               	movwf	(_efgtoa$954^(0+128)+1)
  8013  0193  0820               	movf	_efgtoa$954^(0+128),w
  8014  0194  0020               	movlb	0	; select bank0
  8015  0195  00E9               	movwf	??_efgtoa
  8016  0196  0869               	movf	??_efgtoa,w
  8017  0197  0023               	movlb	3	; select bank3
  8018  0198  00A0               	movwf	_dbuf^(0+384)
  8019                           
  8020                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  8021  0199  3001               	movlw	1
  8022  019A  0021               	movlb	1	; select bank1
  8023  019B  07D3               	addwf	efgtoa@n^(0+128),f
  8024  019C  3000               	movlw	0
  8025  019D  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  8026                           
  8027                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  8028  019E  30FF               	movlw	255
  8029  019F  07BF               	addwf	efgtoa@w^(0+128),f
  8030  01A0  30FF               	movlw	255
  8031  01A1  3DC0               	addwfc	(efgtoa@w+1)^(0+128),f
  8032  01A2                     l4077:
  8033                           
  8034                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  8035  01A2  0850               	movf	(efgtoa@g+3)^(0+128),w
  8036  01A3  00F3               	movwf	___fpclassifyf@x+3
  8037  01A4  084F               	movf	(efgtoa@g+2)^(0+128),w
  8038  01A5  00F2               	movwf	___fpclassifyf@x+2
  8039  01A6  084E               	movf	(efgtoa@g+1)^(0+128),w
  8040  01A7  00F1               	movwf	___fpclassifyf@x+1
  8041  01A8  084D               	movf	efgtoa@g^(0+128),w
  8042  01A9  00F0               	movwf	___fpclassifyf@x
  8043  01AA  319E  2678  3181   	fcall	___fpclassifyf
  8044  01AD  0370               	decf	?___fpclassifyf,w
  8045  01AE  0471               	iorwf	?___fpclassifyf+1,w
  8046  01AF  1D03               	btfss	3,2
  8047  01B0  29F6               	goto	l4095
  8048  01B1  0868               	movf	efgtoa@c,w
  8049  01B2  3EBF               	addlw	191
  8050  01B3  00E9               	movwf	??_efgtoa
  8051  01B4  30FF               	movlw	255
  8052  01B5  1803               	skipnc
  8053  01B6  3000               	movlw	0
  8054  01B7  00EA               	movwf	??_efgtoa+1
  8055  01B8  3000               	movlw	0
  8056  01B9  026A               	subwf	??_efgtoa+1,w
  8057  01BA  301A               	movlw	26
  8058  01BB  1903               	skipnz
  8059  01BC  0269               	subwf	??_efgtoa,w
  8060  01BD  1803               	btfsc	3,0
  8061  01BE  29C1               	goto	u6020
  8062  01BF  3001               	movlw	1
  8063  01C0  29C2               	goto	u6030
  8064  01C1                     u6020:
  8065  01C1  3000               	movlw	0
  8066  01C2                     u6030:
  8067  01C2  00EB               	movwf	??_efgtoa+2
  8068  01C3  01EC               	clrf	??_efgtoa+3
  8069  01C4  086B               	movf	??_efgtoa+2,w
  8070  01C5  0021               	movlb	1	; select bank1
  8071  01C6  00A2               	movwf	_efgtoa$955^(0+128)
  8072  01C7  0020               	movlb	0	; select bank0
  8073  01C8  086C               	movf	??_efgtoa+3,w
  8074  01C9  0021               	movlb	1	; select bank1
  8075  01CA  00A3               	movwf	(_efgtoa$955+1)^(0+128)
  8076  01CB  0822               	movf	_efgtoa$955^(0+128),w
  8077  01CC  0423               	iorwf	(_efgtoa$955+1)^(0+128),w
  8078  01CD  1903               	btfsc	3,2
  8079  01CE  29D3               	goto	l4087
  8080                           
  8081                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  8082  01CF  3059               	movlw	low (STR_5| (0+32768))
  8083  01D0  00F0               	movwf	strcpy@src
  8084  01D1  3098               	movlw	high (STR_5| (0+32768))
  8085  01D2  29D6               	goto	L4
  8086  01D3                     l4087:	
  8087                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  8088                           
  8089                           
  8090                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  8091  01D3  3061               	movlw	low (STR_6| (0+32768))
  8092  01D4  00F0               	movwf	strcpy@src
  8093  01D5  3098               	movlw	high (STR_6| (0+32768))
  8094  01D6                     L4:
  8095  01D6  00F1               	movwf	strcpy@src+1
  8096  01D7  0853               	movf	efgtoa@n^(0+128),w
  8097  01D8  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8098  01D9  319A  22FB  3181   	fcall	_strcpy
  8099                           
  8100                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  8101  01DC  30FD               	movlw	253
  8102  01DD  07BF               	addwf	efgtoa@w^(0+128),f
  8103  01DE  30FF               	movlw	255
  8104  01DF  3DC0               	addwfc	(efgtoa@w+1)^(0+128),f
  8105                           
  8106                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  8107  01E0  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
  8108  01E1  0020               	movlb	0	; select bank0
  8109  01E2  00E9               	movwf	??_efgtoa
  8110  01E3  0869               	movf	??_efgtoa,w
  8111  01E4  00A7               	movwf	pad@buf
  8112  01E5  0021               	movlb	1	; select bank1
  8113  01E6  0840               	movf	(efgtoa@w+1)^(0+128),w
  8114  01E7  0020               	movlb	0	; select bank0
  8115  01E8  00A9               	movwf	pad@p+1
  8116  01E9  0021               	movlb	1	; select bank1
  8117  01EA  083F               	movf	efgtoa@w^(0+128),w
  8118  01EB  0020               	movlb	0	; select bank0
  8119  01EC  00A8               	movwf	pad@p
  8120  01ED  0021               	movlb	1	; select bank1
  8121  01EE  083E               	movf	efgtoa@fp^(0+128),w
  8122  01EF  319C  24D0         	fcall	_pad
  8123  01F1  0828               	movf	?_pad+1,w
  8124  01F2  00E5               	movwf	?_efgtoa+1
  8125  01F3  0827               	movf	?_pad,w
  8126  01F4  00E4               	movwf	?_efgtoa
  8127  01F5  0008               	return
  8128  01F6                     l4095:
  8129                           
  8130                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  8131  01F6  0021               	movlb	1	; select bank1
  8132  01F7  0850               	movf	(efgtoa@g+3)^(0+128),w
  8133  01F8  00F3               	movwf	___fpclassifyf@x+3
  8134  01F9  084F               	movf	(efgtoa@g+2)^(0+128),w
  8135  01FA  00F2               	movwf	___fpclassifyf@x+2
  8136  01FB  084E               	movf	(efgtoa@g+1)^(0+128),w
  8137  01FC  00F1               	movwf	___fpclassifyf@x+1
  8138  01FD  084D               	movf	efgtoa@g^(0+128),w
  8139  01FE  00F0               	movwf	___fpclassifyf@x
  8140  01FF  319E  2678  3181   	fcall	___fpclassifyf
  8141  0202  0870               	movf	?___fpclassifyf,w
  8142  0203  0471               	iorwf	?___fpclassifyf+1,w
  8143  0204  1D03               	btfss	3,2
  8144  0205  2A4B               	goto	l4113
  8145  0206  0868               	movf	efgtoa@c,w
  8146  0207  3EBF               	addlw	191
  8147  0208  00E9               	movwf	??_efgtoa
  8148  0209  30FF               	movlw	255
  8149  020A  1803               	skipnc
  8150  020B  3000               	movlw	0
  8151  020C  00EA               	movwf	??_efgtoa+1
  8152  020D  3000               	movlw	0
  8153  020E  026A               	subwf	??_efgtoa+1,w
  8154  020F  301A               	movlw	26
  8155  0210  1903               	skipnz
  8156  0211  0269               	subwf	??_efgtoa,w
  8157  0212  1803               	btfsc	3,0
  8158  0213  2A16               	goto	u6060
  8159  0214  3001               	movlw	1
  8160  0215  2A17               	goto	u6070
  8161  0216                     u6060:
  8162  0216  3000               	movlw	0
  8163  0217                     u6070:
  8164  0217  00EB               	movwf	??_efgtoa+2
  8165  0218  01EC               	clrf	??_efgtoa+3
  8166  0219  086B               	movf	??_efgtoa+2,w
  8167  021A  0021               	movlb	1	; select bank1
  8168  021B  00A4               	movwf	_efgtoa$959^(0+128)
  8169  021C  0020               	movlb	0	; select bank0
  8170  021D  086C               	movf	??_efgtoa+3,w
  8171  021E  0021               	movlb	1	; select bank1
  8172  021F  00A5               	movwf	(_efgtoa$959+1)^(0+128)
  8173  0220  0824               	movf	_efgtoa$959^(0+128),w
  8174  0221  0425               	iorwf	(_efgtoa$959+1)^(0+128),w
  8175  0222  1903               	btfsc	3,2
  8176  0223  2A28               	goto	l4105
  8177                           
  8178                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  8179  0224  305D               	movlw	low (STR_9| (0+32768))
  8180  0225  00F0               	movwf	strcpy@src
  8181  0226  3098               	movlw	high (STR_9| (0+32768))
  8182  0227  2A2B               	goto	L5
  8183  0228                     l4105:	
  8184                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  8185                           
  8186                           
  8187                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  8188  0228  3065               	movlw	low (STR_10| (0+32768))
  8189  0229  00F0               	movwf	strcpy@src
  8190  022A  3098               	movlw	high (STR_10| (0+32768))
  8191  022B                     L5:
  8192  022B  00F1               	movwf	strcpy@src+1
  8193  022C  0853               	movf	efgtoa@n^(0+128),w
  8194  022D  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8195  022E  319A  22FB  3181   	fcall	_strcpy
  8196                           
  8197                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 371:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  8198  0231  30FD               	movlw	253
  8199  0232  07BF               	addwf	efgtoa@w^(0+128),f
  8200  0233  30FF               	movlw	255
  8201  0234  3DC0               	addwfc	(efgtoa@w+1)^(0+128),f
  8202                           
  8203                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 372:         retu
      +                          rn pad(fp, &dbuf[0], w);
  8204  0235  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
  8205  0236  0020               	movlb	0	; select bank0
  8206  0237  00E9               	movwf	??_efgtoa
  8207  0238  0869               	movf	??_efgtoa,w
  8208  0239  00A7               	movwf	pad@buf
  8209  023A  0021               	movlb	1	; select bank1
  8210  023B  0840               	movf	(efgtoa@w+1)^(0+128),w
  8211  023C  0020               	movlb	0	; select bank0
  8212  023D  00A9               	movwf	pad@p+1
  8213  023E  0021               	movlb	1	; select bank1
  8214  023F  083F               	movf	efgtoa@w^(0+128),w
  8215  0240  0020               	movlb	0	; select bank0
  8216  0241  00A8               	movwf	pad@p
  8217  0242  0021               	movlb	1	; select bank1
  8218  0243  083E               	movf	efgtoa@fp^(0+128),w
  8219  0244  319C  24D0         	fcall	_pad
  8220  0246  0828               	movf	?_pad+1,w
  8221  0247  00E5               	movwf	?_efgtoa+1
  8222  0248  0827               	movf	?_pad,w
  8223  0249  00E4               	movwf	?_efgtoa
  8224  024A  0008               	return
  8225  024B                     l4113:
  8226                           
  8227                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  8228  024B  303F               	movlw	63
  8229  024C  0021               	movlb	1	; select bank1
  8230  024D  00D8               	movwf	(efgtoa@u+3)^(0+128)
  8231  024E  3080               	movlw	128
  8232  024F  00D7               	movwf	(efgtoa@u+2)^(0+128)
  8233  0250  3000               	movlw	0
  8234  0251  00D6               	movwf	(efgtoa@u+1)^(0+128)
  8235  0252  3000               	movlw	0
  8236  0253  00D5               	movwf	efgtoa@u^(0+128)
  8237                           
  8238                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  8239  0254  01D1               	clrf	efgtoa@e^(0+128)
  8240  0255  01D2               	clrf	(efgtoa@e+1)^(0+128)
  8241                           
  8242                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  8243  0256  0850               	movf	(efgtoa@g+3)^(0+128),w
  8244  0257  00F3               	movwf	___fleq@ff1+3
  8245  0258  084F               	movf	(efgtoa@g+2)^(0+128),w
  8246  0259  00F2               	movwf	___fleq@ff1+2
  8247  025A  084E               	movf	(efgtoa@g+1)^(0+128),w
  8248  025B  00F1               	movwf	___fleq@ff1+1
  8249  025C  084D               	movf	efgtoa@g^(0+128),w
  8250  025D  00F0               	movwf	___fleq@ff1
  8251  025E  3000               	movlw	0
  8252  025F  00F7               	movwf	___fleq@ff2+3
  8253  0260  3000               	movlw	0
  8254  0261  00F6               	movwf	___fleq@ff2+2
  8255  0262  3000               	movlw	0
  8256  0263  00F5               	movwf	___fleq@ff2+1
  8257  0264  3000               	movlw	0
  8258  0265  00F4               	movwf	___fleq@ff2
  8259  0266  319C  243C  3181   	fcall	___fleq
  8260  0269  1C03               	btfss	3,0
  8261  026A  2A9A               	goto	l4125
  8262  026B  2B18               	goto	l4133
  8263  026C                     l4121:
  8264                           
  8265                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  8266  026C  3041               	movlw	65
  8267  026D  00B1               	movwf	___flmul@b+3
  8268  026E  3020               	movlw	32
  8269  026F  00B0               	movwf	___flmul@b+2
  8270  0270  3000               	movlw	0
  8271  0271  00AF               	movwf	___flmul@b+1
  8272  0272  3000               	movlw	0
  8273  0273  00AE               	movwf	___flmul@b
  8274  0274  0021               	movlb	1	; select bank1
  8275  0275  0858               	movf	(efgtoa@u+3)^(0+128),w
  8276  0276  0020               	movlb	0	; select bank0
  8277  0277  00B5               	movwf	___flmul@a+3
  8278  0278  0021               	movlb	1	; select bank1
  8279  0279  0857               	movf	(efgtoa@u+2)^(0+128),w
  8280  027A  0020               	movlb	0	; select bank0
  8281  027B  00B4               	movwf	___flmul@a+2
  8282  027C  0021               	movlb	1	; select bank1
  8283  027D  0856               	movf	(efgtoa@u+1)^(0+128),w
  8284  027E  0020               	movlb	0	; select bank0
  8285  027F  00B3               	movwf	___flmul@a+1
  8286  0280  0021               	movlb	1	; select bank1
  8287  0281  0855               	movf	efgtoa@u^(0+128),w
  8288  0282  0020               	movlb	0	; select bank0
  8289  0283  00B2               	movwf	___flmul@a
  8290  0284  318A  221E  3181   	fcall	___flmul
  8291  0287  0831               	movf	?___flmul+3,w
  8292  0288  0021               	movlb	1	; select bank1
  8293  0289  00D8               	movwf	(efgtoa@u+3)^(0+128)
  8294  028A  0020               	movlb	0	; select bank0
  8295  028B  0830               	movf	?___flmul+2,w
  8296  028C  0021               	movlb	1	; select bank1
  8297  028D  00D7               	movwf	(efgtoa@u+2)^(0+128)
  8298  028E  0020               	movlb	0	; select bank0
  8299  028F  082F               	movf	?___flmul+1,w
  8300  0290  0021               	movlb	1	; select bank1
  8301  0291  00D6               	movwf	(efgtoa@u+1)^(0+128)
  8302  0292  0020               	movlb	0	; select bank0
  8303  0293  082E               	movf	?___flmul,w
  8304  0294  0021               	movlb	1	; select bank1
  8305  0295  00D5               	movwf	efgtoa@u^(0+128)
  8306                           
  8307                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  8308  0296  3001               	movlw	1
  8309  0297  07D1               	addwf	efgtoa@e^(0+128),f
  8310  0298  3000               	movlw	0
  8311  0299  3DD2               	addwfc	(efgtoa@e+1)^(0+128),f
  8312  029A                     l4125:
  8313                           
  8314                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  8315  029A  0850               	movf	(efgtoa@g+3)^(0+128),w
  8316  029B  0020               	movlb	0	; select bank0
  8317  029C  00CB               	movwf	___flge@ff1+3
  8318  029D  0021               	movlb	1	; select bank1
  8319  029E  084F               	movf	(efgtoa@g+2)^(0+128),w
  8320  029F  0020               	movlb	0	; select bank0
  8321  02A0  00CA               	movwf	___flge@ff1+2
  8322  02A1  0021               	movlb	1	; select bank1
  8323  02A2  084E               	movf	(efgtoa@g+1)^(0+128),w
  8324  02A3  0020               	movlb	0	; select bank0
  8325  02A4  00C9               	movwf	___flge@ff1+1
  8326  02A5  0021               	movlb	1	; select bank1
  8327  02A6  084D               	movf	efgtoa@g^(0+128),w
  8328  02A7  0020               	movlb	0	; select bank0
  8329  02A8  00C8               	movwf	___flge@ff1
  8330  02A9  3041               	movlw	65
  8331  02AA  00B1               	movwf	___flmul@b+3
  8332  02AB  3020               	movlw	32
  8333  02AC  00B0               	movwf	___flmul@b+2
  8334  02AD  3000               	movlw	0
  8335  02AE  00AF               	movwf	___flmul@b+1
  8336  02AF  3000               	movlw	0
  8337  02B0  00AE               	movwf	___flmul@b
  8338  02B1  0021               	movlb	1	; select bank1
  8339  02B2  0858               	movf	(efgtoa@u+3)^(0+128),w
  8340  02B3  0020               	movlb	0	; select bank0
  8341  02B4  00B5               	movwf	___flmul@a+3
  8342  02B5  0021               	movlb	1	; select bank1
  8343  02B6  0857               	movf	(efgtoa@u+2)^(0+128),w
  8344  02B7  0020               	movlb	0	; select bank0
  8345  02B8  00B4               	movwf	___flmul@a+2
  8346  02B9  0021               	movlb	1	; select bank1
  8347  02BA  0856               	movf	(efgtoa@u+1)^(0+128),w
  8348  02BB  0020               	movlb	0	; select bank0
  8349  02BC  00B3               	movwf	___flmul@a+1
  8350  02BD  0021               	movlb	1	; select bank1
  8351  02BE  0855               	movf	efgtoa@u^(0+128),w
  8352  02BF  0020               	movlb	0	; select bank0
  8353  02C0  00B2               	movwf	___flmul@a
  8354  02C1  318A  221E  3181   	fcall	___flmul
  8355  02C4  0831               	movf	?___flmul+3,w
  8356  02C5  00CF               	movwf	___flge@ff2+3
  8357  02C6  0830               	movf	?___flmul+2,w
  8358  02C7  00CE               	movwf	___flge@ff2+2
  8359  02C8  082F               	movf	?___flmul+1,w
  8360  02C9  00CD               	movwf	___flge@ff2+1
  8361  02CA  082E               	movf	?___flmul,w
  8362  02CB  00CC               	movwf	___flge@ff2
  8363  02CC  319E  26F0  3181   	fcall	___flge
  8364  02CF  1C03               	btfss	3,0
  8365  02D0  2AF3               	goto	l4131
  8366  02D1  2A6C               	goto	l4121
  8367  02D2                     l4127:
  8368                           
  8369                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  8370  02D2  3041               	movlw	65
  8371  02D3  00F3               	movwf	___fldiv@a+3
  8372  02D4  3020               	movlw	32
  8373  02D5  00F2               	movwf	___fldiv@a+2
  8374  02D6  3000               	movlw	0
  8375  02D7  00F1               	movwf	___fldiv@a+1
  8376  02D8  3000               	movlw	0
  8377  02D9  00F0               	movwf	___fldiv@a
  8378  02DA  0021               	movlb	1	; select bank1
  8379  02DB  0858               	movf	(efgtoa@u+3)^(0+128),w
  8380  02DC  00F7               	movwf	___fldiv@b+3
  8381  02DD  0857               	movf	(efgtoa@u+2)^(0+128),w
  8382  02DE  00F6               	movwf	___fldiv@b+2
  8383  02DF  0856               	movf	(efgtoa@u+1)^(0+128),w
  8384  02E0  00F5               	movwf	___fldiv@b+1
  8385  02E1  0855               	movf	efgtoa@u^(0+128),w
  8386  02E2  00F4               	movwf	___fldiv@b
  8387  02E3  3196  2686  3181   	fcall	___fldiv
  8388  02E6  0873               	movf	?___fldiv+3,w
  8389  02E7  0021               	movlb	1	; select bank1
  8390  02E8  00D8               	movwf	(efgtoa@u+3)^(0+128)
  8391  02E9  0872               	movf	?___fldiv+2,w
  8392  02EA  00D7               	movwf	(efgtoa@u+2)^(0+128)
  8393  02EB  0871               	movf	?___fldiv+1,w
  8394  02EC  00D6               	movwf	(efgtoa@u+1)^(0+128)
  8395  02ED  0870               	movf	?___fldiv,w
  8396  02EE  00D5               	movwf	efgtoa@u^(0+128)
  8397                           
  8398                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  8399  02EF  30FF               	movlw	255
  8400  02F0  07D1               	addwf	efgtoa@e^(0+128),f
  8401  02F1  30FF               	movlw	255
  8402  02F2  3DD2               	addwfc	(efgtoa@e+1)^(0+128),f
  8403  02F3                     l4131:
  8404                           
  8405                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  8406  02F3  0021               	movlb	1	; select bank1
  8407  02F4  0850               	movf	(efgtoa@g+3)^(0+128),w
  8408  02F5  0020               	movlb	0	; select bank0
  8409  02F6  00CB               	movwf	___flge@ff1+3
  8410  02F7  0021               	movlb	1	; select bank1
  8411  02F8  084F               	movf	(efgtoa@g+2)^(0+128),w
  8412  02F9  0020               	movlb	0	; select bank0
  8413  02FA  00CA               	movwf	___flge@ff1+2
  8414  02FB  0021               	movlb	1	; select bank1
  8415  02FC  084E               	movf	(efgtoa@g+1)^(0+128),w
  8416  02FD  0020               	movlb	0	; select bank0
  8417  02FE  00C9               	movwf	___flge@ff1+1
  8418  02FF  0021               	movlb	1	; select bank1
  8419  0300  084D               	movf	efgtoa@g^(0+128),w
  8420  0301  0020               	movlb	0	; select bank0
  8421  0302  00C8               	movwf	___flge@ff1
  8422  0303  0021               	movlb	1	; select bank1
  8423  0304  0858               	movf	(efgtoa@u+3)^(0+128),w
  8424  0305  0020               	movlb	0	; select bank0
  8425  0306  00CF               	movwf	___flge@ff2+3
  8426  0307  0021               	movlb	1	; select bank1
  8427  0308  0857               	movf	(efgtoa@u+2)^(0+128),w
  8428  0309  0020               	movlb	0	; select bank0
  8429  030A  00CE               	movwf	___flge@ff2+2
  8430  030B  0021               	movlb	1	; select bank1
  8431  030C  0856               	movf	(efgtoa@u+1)^(0+128),w
  8432  030D  0020               	movlb	0	; select bank0
  8433  030E  00CD               	movwf	___flge@ff2+1
  8434  030F  0021               	movlb	1	; select bank1
  8435  0310  0855               	movf	efgtoa@u^(0+128),w
  8436  0311  0020               	movlb	0	; select bank0
  8437  0312  00CC               	movwf	___flge@ff2
  8438  0313  319E  26F0  3181   	fcall	___flge
  8439  0316  1C03               	btfss	3,0
  8440  0317  2AD2               	goto	l4127
  8441  0318                     l4133:
  8442                           
  8443                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  8444  0318  0020               	movlb	0	; select bank0
  8445  0319  0868               	movf	efgtoa@c,w
  8446  031A  00E9               	movwf	??_efgtoa
  8447  031B  01EA               	clrf	??_efgtoa+1
  8448  031C  0869               	movf	??_efgtoa,w
  8449  031D  00F6               	movwf	tolower@c
  8450  031E  086A               	movf	??_efgtoa+1,w
  8451  031F  00F7               	movwf	tolower@c+1
  8452  0320  319B  231A  3181   	fcall	_tolower
  8453  0323  0876               	movf	?_tolower,w
  8454  0324  0020               	movlb	0	; select bank0
  8455  0325  00EB               	movwf	??_efgtoa+2
  8456  0326  086B               	movf	??_efgtoa+2,w
  8457  0327  0021               	movlb	1	; select bank1
  8458  0328  00C2               	movwf	efgtoa@mode^(0+128)
  8459                           
  8460                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  8461  0329  0842               	movf	efgtoa@mode^(0+128),w
  8462  032A  0020               	movlb	0	; select bank0
  8463  032B  00E9               	movwf	??_efgtoa
  8464  032C  0869               	movf	??_efgtoa,w
  8465  032D  0021               	movlb	1	; select bank1
  8466  032E  00C1               	movwf	efgtoa@nmode^(0+128)
  8467                           
  8468                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  8469  032F  3067               	movlw	103
  8470  0330  0642               	xorwf	efgtoa@mode^(0+128),w
  8471  0331  1D03               	btfss	3,2
  8472  0332  2B4E               	goto	l981
  8473                           
  8474                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  8475  0333  086C               	movf	_prec^(0+128),w
  8476  0334  046D               	iorwf	(_prec+1)^(0+128),w
  8477  0335  1D03               	btfss	3,2
  8478  0336  2B3B               	goto	l982
  8479                           
  8480                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  8481  0337  3001               	movlw	1
  8482  0338  00EC               	movwf	_prec^(0+128)
  8483  0339  3000               	movlw	0
  8484  033A  00ED               	movwf	(_prec^(0+128)+1)
  8485  033B                     l982:	
  8486                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 395:   }
  8487                           
  8488                           
  8489                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  8490  033B  086D               	movf	(_prec+1)^(0+128),w
  8491  033C  3A80               	xorlw	128
  8492  033D  0020               	movlb	0	; select bank0
  8493  033E  00E9               	movwf	??_efgtoa
  8494  033F  3080               	movlw	128
  8495  0340  0269               	subwf	??_efgtoa,w
  8496  0341  1D03               	skipz
  8497  0342  2B46               	goto	u6145
  8498  0343  3001               	movlw	1
  8499  0344  0021               	movlb	1	; select bank1
  8500  0345  026C               	subwf	_prec^(0+128),w
  8501  0346                     u6145:
  8502  0346  1803               	skipnc
  8503  0347  2B50               	goto	l4145
  8504  0348                     l4143:
  8505  0348  3006               	movlw	6
  8506  0349  0021               	movlb	1	; select bank1
  8507  034A  00BC               	movwf	efgtoa@p^(0+128)
  8508  034B  3000               	movlw	0
  8509  034C  00BD               	movwf	(efgtoa@p^(0+128)+1)
  8510  034D  2B55               	goto	l4151
  8511  034E                     l981:
  8512                           
  8513                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  8514  034E  1BED               	btfsc	(_prec+1)^(0+128),7
  8515  034F  2B48               	goto	l4143
  8516  0350                     l4145:
  8517  0350  0021               	movlb	1	; select bank1
  8518  0351  086D               	movf	(_prec+1)^(0+128),w
  8519  0352  00BD               	movwf	(efgtoa@p+1)^(0+128)
  8520  0353  086C               	movf	_prec^(0+128),w
  8521  0354  00BC               	movwf	efgtoa@p^(0+128)
  8522  0355                     l4151:
  8523                           
  8524                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  8525  0355  3067               	movlw	103
  8526  0356  0642               	xorwf	efgtoa@mode^(0+128),w
  8527  0357  1D03               	btfss	3,2
  8528  0358  2B88               	goto	l992
  8529                           
  8530                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  8531  0359  0852               	movf	(efgtoa@e+1)^(0+128),w
  8532  035A  3A80               	xorlw	128
  8533  035B  0020               	movlb	0	; select bank0
  8534  035C  00E9               	movwf	??_efgtoa
  8535  035D  307F               	movlw	127
  8536  035E  0269               	subwf	??_efgtoa,w
  8537  035F  1D03               	skipz
  8538  0360  2B64               	goto	u6175
  8539  0361  30FC               	movlw	252
  8540  0362  0021               	movlb	1	; select bank1
  8541  0363  0251               	subwf	efgtoa@e^(0+128),w
  8542  0364                     u6175:
  8543  0364  1C03               	skipc
  8544  0365  2B82               	goto	l4159
  8545  0366  0021               	movlb	1	; select bank1
  8546  0367  083C               	movf	efgtoa@p^(0+128),w
  8547  0368  3EFF               	addlw	255
  8548  0369  0020               	movlb	0	; select bank0
  8549  036A  00E9               	movwf	??_efgtoa
  8550  036B  30FF               	movlw	255
  8551  036C  0021               	movlb	1	; select bank1
  8552  036D  3D3D               	addwfc	(efgtoa@p+1)^(0+128),w
  8553  036E  0020               	movlb	0	; select bank0
  8554  036F  00EA               	movwf	??_efgtoa+1
  8555  0370  086A               	movf	??_efgtoa+1,w
  8556  0371  3A80               	xorlw	128
  8557  0372  00EB               	movwf	??_efgtoa+2
  8558  0373  0021               	movlb	1	; select bank1
  8559  0374  0852               	movf	(efgtoa@e+1)^(0+128),w
  8560  0375  3A80               	xorlw	128
  8561  0376  0020               	movlb	0	; select bank0
  8562  0377  026B               	subwf	??_efgtoa+2,w
  8563  0378  1D03               	skipz
  8564  0379  2B7E               	goto	u6185
  8565  037A  0021               	movlb	1	; select bank1
  8566  037B  0851               	movf	efgtoa@e^(0+128),w
  8567  037C  0020               	movlb	0	; select bank0
  8568  037D  0269               	subwf	??_efgtoa,w
  8569  037E                     u6185:
  8570  037E  1C03               	skipc
  8571  037F  2B82               	goto	l4159
  8572                           
  8573                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  8574  0380  3066               	movlw	102
  8575  0381  2B83               	goto	L6
  8576  0382                     l4159:	
  8577                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  8578                           
  8579                           
  8580                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  8581  0382  3065               	movlw	101
  8582  0383                     L6:
  8583  0383  0020               	movlb	0	; select bank0
  8584  0384  00E9               	movwf	??_efgtoa
  8585  0385  0869               	movf	??_efgtoa,w
  8586  0386  0021               	movlb	1	; select bank1
  8587  0387  00C1               	movwf	efgtoa@nmode^(0+128)
  8588  0388                     l992:	
  8589                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 408:     }
  8590                           
  8591                           
  8592                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  8593  0388  083D               	movf	(efgtoa@p+1)^(0+128),w
  8594  0389  00B3               	movwf	(efgtoa@m+1)^(0+128)
  8595  038A  083C               	movf	efgtoa@p^(0+128),w
  8596  038B  00B2               	movwf	efgtoa@m^(0+128)
  8597                           
  8598                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  8599  038C  3067               	movlw	103
  8600  038D  0642               	xorwf	efgtoa@mode^(0+128),w
  8601  038E  1D03               	btfss	3,2
  8602  038F  2B95               	goto	l4167
  8603  0390  3066               	movlw	102
  8604  0391  0641               	xorwf	efgtoa@nmode^(0+128),w
  8605  0392  1903               	btfsc	3,2
  8606  0393  1FD2               	btfss	(efgtoa@e+1)^(0+128),7
  8607  0394  2B99               	goto	l4169
  8608  0395                     l4167:
  8609                           
  8610                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  8611  0395  3001               	movlw	1
  8612  0396  07B2               	addwf	efgtoa@m^(0+128),f
  8613  0397  3000               	movlw	0
  8614  0398  3DB3               	addwfc	(efgtoa@m+1)^(0+128),f
  8615  0399                     l4169:
  8616                           
  8617                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  8618  0399  3066               	movlw	102
  8619  039A  0641               	xorwf	efgtoa@nmode^(0+128),w
  8620  039B  1D03               	btfss	3,2
  8621  039C  2BB1               	goto	l4181
  8622                           
  8623                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  8624  039D  1FD2               	btfss	(efgtoa@e+1)^(0+128),7
  8625  039E  2BA9               	goto	l4177
  8626                           
  8627                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  8628  039F  303F               	movlw	63
  8629  03A0  00D8               	movwf	(efgtoa@u+3)^(0+128)
  8630  03A1  3080               	movlw	128
  8631  03A2  00D7               	movwf	(efgtoa@u+2)^(0+128)
  8632  03A3  3000               	movlw	0
  8633  03A4  00D6               	movwf	(efgtoa@u+1)^(0+128)
  8634  03A5  3000               	movlw	0
  8635  03A6  00D5               	movwf	efgtoa@u^(0+128)
  8636                           
  8637                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  8638  03A7  01D1               	clrf	efgtoa@e^(0+128)
  8639  03A8  01D2               	clrf	(efgtoa@e+1)^(0+128)
  8640  03A9                     l4177:
  8641                           
  8642                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  8643  03A9  3067               	movlw	103
  8644  03AA  0642               	xorwf	efgtoa@mode^(0+128),w
  8645  03AB  1903               	btfsc	3,2
  8646  03AC  2BB1               	goto	l4181
  8647                           
  8648                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  8649  03AD  0851               	movf	efgtoa@e^(0+128),w
  8650  03AE  07B2               	addwf	efgtoa@m^(0+128),f
  8651  03AF  0852               	movf	(efgtoa@e+1)^(0+128),w
  8652  03B0  3DB3               	addwfc	(efgtoa@m+1)^(0+128),f
  8653  03B1                     l4181:
  8654                           
  8655                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  8656  03B1  01CB               	clrf	efgtoa@i^(0+128)
  8657  03B2  01CC               	clrf	(efgtoa@i+1)^(0+128)
  8658                           
  8659                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  8660  03B3  0850               	movf	(efgtoa@g+3)^(0+128),w
  8661  03B4  00C6               	movwf	(efgtoa@h+3)^(0+128)
  8662  03B5  084F               	movf	(efgtoa@g+2)^(0+128),w
  8663  03B6  00C5               	movwf	(efgtoa@h+2)^(0+128)
  8664  03B7  084E               	movf	(efgtoa@g+1)^(0+128),w
  8665  03B8  00C4               	movwf	(efgtoa@h+1)^(0+128)
  8666  03B9  084D               	movf	efgtoa@g^(0+128),w
  8667  03BA  00C3               	movwf	efgtoa@h^(0+128)
  8668                           
  8669                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  8670  03BB  0858               	movf	(efgtoa@u+3)^(0+128),w
  8671  03BC  00B7               	movwf	(efgtoa@ou+3)^(0+128)
  8672  03BD  0857               	movf	(efgtoa@u+2)^(0+128),w
  8673  03BE  00B6               	movwf	(efgtoa@ou+2)^(0+128)
  8674  03BF  0856               	movf	(efgtoa@u+1)^(0+128),w
  8675  03C0  00B5               	movwf	(efgtoa@ou+1)^(0+128)
  8676  03C1  0855               	movf	efgtoa@u^(0+128),w
  8677  03C2  00B4               	movwf	efgtoa@ou^(0+128)
  8678  03C3                     l4191:	
  8679                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  8680                           
  8681                           
  8682                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  8683  03C3  084C               	movf	(efgtoa@i+1)^(0+128),w
  8684  03C4  3A80               	xorlw	128
  8685  03C5  0020               	movlb	0	; select bank0
  8686  03C6  00E9               	movwf	??_efgtoa
  8687  03C7  0021               	movlb	1	; select bank1
  8688  03C8  0833               	movf	(efgtoa@m+1)^(0+128),w
  8689  03C9  3A80               	xorlw	128
  8690  03CA  0020               	movlb	0	; select bank0
  8691  03CB  0269               	subwf	??_efgtoa,w
  8692  03CC  1D03               	skipz
  8693  03CD  2BD1               	goto	u6255
  8694  03CE  0021               	movlb	1	; select bank1
  8695  03CF  0832               	movf	efgtoa@m^(0+128),w
  8696  03D0  024B               	subwf	efgtoa@i^(0+128),w
  8697  03D1                     u6255:
  8698  03D1  1803               	btfsc	3,0
  8699  03D2  2C88               	goto	l4193
  8700                           
  8701                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  8702  03D3  0021               	movlb	1	; select bank1
  8703  03D4  0858               	movf	(efgtoa@u+3)^(0+128),w
  8704  03D5  00F3               	movwf	___fldiv@a+3
  8705  03D6  0857               	movf	(efgtoa@u+2)^(0+128),w
  8706  03D7  00F2               	movwf	___fldiv@a+2
  8707  03D8  0856               	movf	(efgtoa@u+1)^(0+128),w
  8708  03D9  00F1               	movwf	___fldiv@a+1
  8709  03DA  0855               	movf	efgtoa@u^(0+128),w
  8710  03DB  00F0               	movwf	___fldiv@a
  8711  03DC  0846               	movf	(efgtoa@h+3)^(0+128),w
  8712  03DD  00F7               	movwf	___fldiv@b+3
  8713  03DE  0845               	movf	(efgtoa@h+2)^(0+128),w
  8714  03DF  00F6               	movwf	___fldiv@b+2
  8715  03E0  0844               	movf	(efgtoa@h+1)^(0+128),w
  8716  03E1  00F5               	movwf	___fldiv@b+1
  8717  03E2  0843               	movf	efgtoa@h^(0+128),w
  8718  03E3  00F4               	movwf	___fldiv@b
  8719  03E4  3196  2686  3181   	fcall	___fldiv
  8720  03E7  0873               	movf	?___fldiv+3,w
  8721  03E8  00B0               	movwf	floorf@x+3
  8722  03E9  0872               	movf	?___fldiv+2,w
  8723  03EA  00AF               	movwf	floorf@x+2
  8724  03EB  0871               	movf	?___fldiv+1,w
  8725  03EC  00AE               	movwf	floorf@x+1
  8726  03ED  0870               	movf	?___fldiv,w
  8727  03EE  00AD               	movwf	floorf@x
  8728  03EF  3190  20DF  3181   	fcall	_floorf
  8729  03F2  0020               	movlb	0	; select bank0
  8730  03F3  0830               	movf	?_floorf+3,w
  8731  03F4  0021               	movlb	1	; select bank1
  8732  03F5  00CA               	movwf	(efgtoa@l+3)^(0+128)
  8733  03F6  0020               	movlb	0	; select bank0
  8734  03F7  082F               	movf	?_floorf+2,w
  8735  03F8  0021               	movlb	1	; select bank1
  8736  03F9  00C9               	movwf	(efgtoa@l+2)^(0+128)
  8737  03FA  0020               	movlb	0	; select bank0
  8738  03FB  082E               	movf	?_floorf+1,w
  8739  03FC  0021               	movlb	1	; select bank1
  8740  03FD  00C8               	movwf	(efgtoa@l+1)^(0+128)
  8741  03FE  0020               	movlb	0	; select bank0
  8742  03FF  082D               	movf	?_floorf,w
  8743  0400  0021               	movlb	1	; select bank1
  8744  0401  00C7               	movwf	efgtoa@l^(0+128)
  8745                           
  8746                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  8747  0402  084A               	movf	(efgtoa@l+3)^(0+128),w
  8748  0403  0020               	movlb	0	; select bank0
  8749  0404  00CB               	movwf	___fltol@f1+3
  8750  0405  0021               	movlb	1	; select bank1
  8751  0406  0849               	movf	(efgtoa@l+2)^(0+128),w
  8752  0407  0020               	movlb	0	; select bank0
  8753  0408  00CA               	movwf	___fltol@f1+2
  8754  0409  0021               	movlb	1	; select bank1
  8755  040A  0848               	movf	(efgtoa@l+1)^(0+128),w
  8756  040B  0020               	movlb	0	; select bank0
  8757  040C  00C9               	movwf	___fltol@f1+1
  8758  040D  0021               	movlb	1	; select bank1
  8759  040E  0847               	movf	efgtoa@l^(0+128),w
  8760  040F  0020               	movlb	0	; select bank0
  8761  0410  00C8               	movwf	___fltol@f1
  8762  0411  319E  2613  3181   	fcall	___fltol
  8763  0414  0849               	movf	?___fltol+1,w
  8764  0415  0021               	movlb	1	; select bank1
  8765  0416  00B9               	movwf	(efgtoa@d+1)^(0+128)
  8766  0417  0020               	movlb	0	; select bank0
  8767  0418  0848               	movf	?___fltol,w
  8768  0419  0021               	movlb	1	; select bank1
  8769  041A  00B8               	movwf	efgtoa@d^(0+128)
  8770                           
  8771                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  8772  041B  084A               	movf	(efgtoa@l+3)^(0+128),w
  8773  041C  0020               	movlb	0	; select bank0
  8774  041D  00B5               	movwf	___flmul@a+3
  8775  041E  0021               	movlb	1	; select bank1
  8776  041F  0849               	movf	(efgtoa@l+2)^(0+128),w
  8777  0420  0020               	movlb	0	; select bank0
  8778  0421  00B4               	movwf	___flmul@a+2
  8779  0422  0021               	movlb	1	; select bank1
  8780  0423  0848               	movf	(efgtoa@l+1)^(0+128),w
  8781  0424  0020               	movlb	0	; select bank0
  8782  0425  00B3               	movwf	___flmul@a+1
  8783  0426  0021               	movlb	1	; select bank1
  8784  0427  0847               	movf	efgtoa@l^(0+128),w
  8785  0428  0020               	movlb	0	; select bank0
  8786  0429  00B2               	movwf	___flmul@a
  8787  042A  0021               	movlb	1	; select bank1
  8788  042B  0858               	movf	(efgtoa@u+3)^(0+128),w
  8789  042C  0020               	movlb	0	; select bank0
  8790  042D  00B1               	movwf	___flmul@b+3
  8791  042E  0021               	movlb	1	; select bank1
  8792  042F  0857               	movf	(efgtoa@u+2)^(0+128),w
  8793  0430  0020               	movlb	0	; select bank0
  8794  0431  00B0               	movwf	___flmul@b+2
  8795  0432  0021               	movlb	1	; select bank1
  8796  0433  0856               	movf	(efgtoa@u+1)^(0+128),w
  8797  0434  0020               	movlb	0	; select bank0
  8798  0435  00AF               	movwf	___flmul@b+1
  8799  0436  0021               	movlb	1	; select bank1
  8800  0437  0855               	movf	efgtoa@u^(0+128),w
  8801  0438  0020               	movlb	0	; select bank0
  8802  0439  00AE               	movwf	___flmul@b
  8803  043A  318A  221E  3181   	fcall	___flmul
  8804  043D  0831               	movf	?___flmul+3,w
  8805  043E  00DF               	movwf	___flsub@a+3
  8806  043F  0830               	movf	?___flmul+2,w
  8807  0440  00DE               	movwf	___flsub@a+2
  8808  0441  082F               	movf	?___flmul+1,w
  8809  0442  00DD               	movwf	___flsub@a+1
  8810  0443  082E               	movf	?___flmul,w
  8811  0444  00DC               	movwf	___flsub@a
  8812  0445  0021               	movlb	1	; select bank1
  8813  0446  0846               	movf	(efgtoa@h+3)^(0+128),w
  8814  0447  0020               	movlb	0	; select bank0
  8815  0448  00E3               	movwf	___flsub@b+3
  8816  0449  0021               	movlb	1	; select bank1
  8817  044A  0845               	movf	(efgtoa@h+2)^(0+128),w
  8818  044B  0020               	movlb	0	; select bank0
  8819  044C  00E2               	movwf	___flsub@b+2
  8820  044D  0021               	movlb	1	; select bank1
  8821  044E  0844               	movf	(efgtoa@h+1)^(0+128),w
  8822  044F  0020               	movlb	0	; select bank0
  8823  0450  00E1               	movwf	___flsub@b+1
  8824  0451  0021               	movlb	1	; select bank1
  8825  0452  0843               	movf	efgtoa@h^(0+128),w
  8826  0453  0020               	movlb	0	; select bank0
  8827  0454  00E0               	movwf	___flsub@b
  8828  0455  319A  2284  3181   	fcall	___flsub
  8829  0458  085F               	movf	?___flsub+3,w
  8830  0459  0021               	movlb	1	; select bank1
  8831  045A  00C6               	movwf	(efgtoa@h+3)^(0+128)
  8832  045B  0020               	movlb	0	; select bank0
  8833  045C  085E               	movf	?___flsub+2,w
  8834  045D  0021               	movlb	1	; select bank1
  8835  045E  00C5               	movwf	(efgtoa@h+2)^(0+128)
  8836  045F  0020               	movlb	0	; select bank0
  8837  0460  085D               	movf	?___flsub+1,w
  8838  0461  0021               	movlb	1	; select bank1
  8839  0462  00C4               	movwf	(efgtoa@h+1)^(0+128)
  8840  0463  0020               	movlb	0	; select bank0
  8841  0464  085C               	movf	?___flsub,w
  8842  0465  0021               	movlb	1	; select bank1
  8843  0466  00C3               	movwf	efgtoa@h^(0+128)
  8844                           
  8845                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  8846  0467  3041               	movlw	65
  8847  0468  00F3               	movwf	___fldiv@a+3
  8848  0469  3020               	movlw	32
  8849  046A  00F2               	movwf	___fldiv@a+2
  8850  046B  3000               	movlw	0
  8851  046C  00F1               	movwf	___fldiv@a+1
  8852  046D  3000               	movlw	0
  8853  046E  00F0               	movwf	___fldiv@a
  8854  046F  0858               	movf	(efgtoa@u+3)^(0+128),w
  8855  0470  00F7               	movwf	___fldiv@b+3
  8856  0471  0857               	movf	(efgtoa@u+2)^(0+128),w
  8857  0472  00F6               	movwf	___fldiv@b+2
  8858  0473  0856               	movf	(efgtoa@u+1)^(0+128),w
  8859  0474  00F5               	movwf	___fldiv@b+1
  8860  0475  0855               	movf	efgtoa@u^(0+128),w
  8861  0476  00F4               	movwf	___fldiv@b
  8862  0477  3196  2686  3181   	fcall	___fldiv
  8863  047A  0873               	movf	?___fldiv+3,w
  8864  047B  0021               	movlb	1	; select bank1
  8865  047C  00D8               	movwf	(efgtoa@u+3)^(0+128)
  8866  047D  0872               	movf	?___fldiv+2,w
  8867  047E  00D7               	movwf	(efgtoa@u+2)^(0+128)
  8868  047F  0871               	movf	?___fldiv+1,w
  8869  0480  00D6               	movwf	(efgtoa@u+1)^(0+128)
  8870  0481  0870               	movf	?___fldiv,w
  8871  0482  00D5               	movwf	efgtoa@u^(0+128)
  8872                           
  8873                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  8874  0483  3001               	movlw	1
  8875  0484  07CB               	addwf	efgtoa@i^(0+128),f
  8876  0485  3000               	movlw	0
  8877  0486  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  8878  0487  2BC3               	goto	l4191
  8879  0488                     l4193:
  8880                           
  8881                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  8882  0488  3040               	movlw	64
  8883  0489  0020               	movlb	0	; select bank0
  8884  048A  00B1               	movwf	___flmul@b+3
  8885  048B  30A0               	movlw	160
  8886  048C  00B0               	movwf	___flmul@b+2
  8887  048D  3000               	movlw	0
  8888  048E  00AF               	movwf	___flmul@b+1
  8889  048F  3000               	movlw	0
  8890  0490  00AE               	movwf	___flmul@b
  8891  0491  0021               	movlb	1	; select bank1
  8892  0492  0858               	movf	(efgtoa@u+3)^(0+128),w
  8893  0493  0020               	movlb	0	; select bank0
  8894  0494  00B5               	movwf	___flmul@a+3
  8895  0495  0021               	movlb	1	; select bank1
  8896  0496  0857               	movf	(efgtoa@u+2)^(0+128),w
  8897  0497  0020               	movlb	0	; select bank0
  8898  0498  00B4               	movwf	___flmul@a+2
  8899  0499  0021               	movlb	1	; select bank1
  8900  049A  0856               	movf	(efgtoa@u+1)^(0+128),w
  8901  049B  0020               	movlb	0	; select bank0
  8902  049C  00B3               	movwf	___flmul@a+1
  8903  049D  0021               	movlb	1	; select bank1
  8904  049E  0855               	movf	efgtoa@u^(0+128),w
  8905  049F  0020               	movlb	0	; select bank0
  8906  04A0  00B2               	movwf	___flmul@a
  8907  04A1  318A  221E  3181   	fcall	___flmul
  8908  04A4  0831               	movf	?___flmul+3,w
  8909  04A5  0021               	movlb	1	; select bank1
  8910  04A6  00CA               	movwf	(efgtoa@l+3)^(0+128)
  8911  04A7  0020               	movlb	0	; select bank0
  8912  04A8  0830               	movf	?___flmul+2,w
  8913  04A9  0021               	movlb	1	; select bank1
  8914  04AA  00C9               	movwf	(efgtoa@l+2)^(0+128)
  8915  04AB  0020               	movlb	0	; select bank0
  8916  04AC  082F               	movf	?___flmul+1,w
  8917  04AD  0021               	movlb	1	; select bank1
  8918  04AE  00C8               	movwf	(efgtoa@l+1)^(0+128)
  8919  04AF  0020               	movlb	0	; select bank0
  8920  04B0  082E               	movf	?___flmul,w
  8921  04B1  0021               	movlb	1	; select bank1
  8922  04B2  00C7               	movwf	efgtoa@l^(0+128)
  8923                           
  8924                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  8925  04B3  0846               	movf	(efgtoa@h+3)^(0+128),w
  8926  04B4  0020               	movlb	0	; select bank0
  8927  04B5  00CB               	movwf	___flge@ff1+3
  8928  04B6  0021               	movlb	1	; select bank1
  8929  04B7  0845               	movf	(efgtoa@h+2)^(0+128),w
  8930  04B8  0020               	movlb	0	; select bank0
  8931  04B9  00CA               	movwf	___flge@ff1+2
  8932  04BA  0021               	movlb	1	; select bank1
  8933  04BB  0844               	movf	(efgtoa@h+1)^(0+128),w
  8934  04BC  0020               	movlb	0	; select bank0
  8935  04BD  00C9               	movwf	___flge@ff1+1
  8936  04BE  0021               	movlb	1	; select bank1
  8937  04BF  0843               	movf	efgtoa@h^(0+128),w
  8938  04C0  0020               	movlb	0	; select bank0
  8939  04C1  00C8               	movwf	___flge@ff1
  8940  04C2  0021               	movlb	1	; select bank1
  8941  04C3  084A               	movf	(efgtoa@l+3)^(0+128),w
  8942  04C4  0020               	movlb	0	; select bank0
  8943  04C5  00CF               	movwf	___flge@ff2+3
  8944  04C6  0021               	movlb	1	; select bank1
  8945  04C7  0849               	movf	(efgtoa@l+2)^(0+128),w
  8946  04C8  0020               	movlb	0	; select bank0
  8947  04C9  00CE               	movwf	___flge@ff2+2
  8948  04CA  0021               	movlb	1	; select bank1
  8949  04CB  0848               	movf	(efgtoa@l+1)^(0+128),w
  8950  04CC  0020               	movlb	0	; select bank0
  8951  04CD  00CD               	movwf	___flge@ff2+1
  8952  04CE  0021               	movlb	1	; select bank1
  8953  04CF  0847               	movf	efgtoa@l^(0+128),w
  8954  04D0  0020               	movlb	0	; select bank0
  8955  04D1  00CC               	movwf	___flge@ff2
  8956  04D2  319E  26F0  3181   	fcall	___flge
  8957  04D5  1803               	btfsc	3,0
  8958  04D6  2CDA               	goto	l4197
  8959                           
  8960                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  8961  04D7  3000               	movlw	0
  8962  04D8  0021               	movlb	1	; select bank1
  8963  04D9  2CF2               	goto	L7
  8964  04DA                     l4197:	
  8965                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  8966                           
  8967                           
  8968                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  8969  04DA  0021               	movlb	1	; select bank1
  8970  04DB  0846               	movf	(efgtoa@h+3)^(0+128),w
  8971  04DC  00F3               	movwf	___fleq@ff1+3
  8972  04DD  0845               	movf	(efgtoa@h+2)^(0+128),w
  8973  04DE  00F2               	movwf	___fleq@ff1+2
  8974  04DF  0844               	movf	(efgtoa@h+1)^(0+128),w
  8975  04E0  00F1               	movwf	___fleq@ff1+1
  8976  04E1  0843               	movf	efgtoa@h^(0+128),w
  8977  04E2  00F0               	movwf	___fleq@ff1
  8978  04E3  084A               	movf	(efgtoa@l+3)^(0+128),w
  8979  04E4  00F7               	movwf	___fleq@ff2+3
  8980  04E5  0849               	movf	(efgtoa@l+2)^(0+128),w
  8981  04E6  00F6               	movwf	___fleq@ff2+2
  8982  04E7  0848               	movf	(efgtoa@l+1)^(0+128),w
  8983  04E8  00F5               	movwf	___fleq@ff2+1
  8984  04E9  0847               	movf	efgtoa@l^(0+128),w
  8985  04EA  00F4               	movwf	___fleq@ff2
  8986  04EB  319C  243C  3181   	fcall	___fleq
  8987  04EE  1803               	btfsc	3,0
  8988  04EF  1838               	btfsc	efgtoa@d^(0+128),0
  8989  04F0  2CF9               	goto	l4203
  8990                           
  8991                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  8992  04F1  3000               	movlw	0
  8993  04F2                     L7:
  8994  04F2  00CA               	movwf	(efgtoa@l+3)^(0+128)
  8995  04F3  3000               	movlw	0
  8996  04F4  00C9               	movwf	(efgtoa@l+2)^(0+128)
  8997  04F5  3000               	movlw	0
  8998  04F6  00C8               	movwf	(efgtoa@l+1)^(0+128)
  8999  04F7  3000               	movlw	0
  9000  04F8  00C7               	movwf	efgtoa@l^(0+128)
  9001  04F9                     l4203:
  9002                           
  9003                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  9004  04F9  084A               	movf	(efgtoa@l+3)^(0+128),w
  9005  04FA  0020               	movlb	0	; select bank0
  9006  04FB  00CB               	movwf	___fladd@b+3
  9007  04FC  0021               	movlb	1	; select bank1
  9008  04FD  0849               	movf	(efgtoa@l+2)^(0+128),w
  9009  04FE  0020               	movlb	0	; select bank0
  9010  04FF  00CA               	movwf	___fladd@b+2
  9011  0500  0021               	movlb	1	; select bank1
  9012  0501  0848               	movf	(efgtoa@l+1)^(0+128),w
  9013  0502  0020               	movlb	0	; select bank0
  9014  0503  00C9               	movwf	___fladd@b+1
  9015  0504  0021               	movlb	1	; select bank1
  9016  0505  0847               	movf	efgtoa@l^(0+128),w
  9017  0506  0020               	movlb	0	; select bank0
  9018  0507  00C8               	movwf	___fladd@b
  9019  0508  0021               	movlb	1	; select bank1
  9020  0509  0850               	movf	(efgtoa@g+3)^(0+128),w
  9021  050A  0020               	movlb	0	; select bank0
  9022  050B  00CF               	movwf	___fladd@a+3
  9023  050C  0021               	movlb	1	; select bank1
  9024  050D  084F               	movf	(efgtoa@g+2)^(0+128),w
  9025  050E  0020               	movlb	0	; select bank0
  9026  050F  00CE               	movwf	___fladd@a+2
  9027  0510  0021               	movlb	1	; select bank1
  9028  0511  084E               	movf	(efgtoa@g+1)^(0+128),w
  9029  0512  0020               	movlb	0	; select bank0
  9030  0513  00CD               	movwf	___fladd@a+1
  9031  0514  0021               	movlb	1	; select bank1
  9032  0515  084D               	movf	efgtoa@g^(0+128),w
  9033  0516  0020               	movlb	0	; select bank0
  9034  0517  00CC               	movwf	___fladd@a
  9035  0518  3188  203D  3181   	fcall	___fladd
  9036  051B  084B               	movf	?___fladd+3,w
  9037  051C  0021               	movlb	1	; select bank1
  9038  051D  00C6               	movwf	(efgtoa@h+3)^(0+128)
  9039  051E  0020               	movlb	0	; select bank0
  9040  051F  084A               	movf	?___fladd+2,w
  9041  0520  0021               	movlb	1	; select bank1
  9042  0521  00C5               	movwf	(efgtoa@h+2)^(0+128)
  9043  0522  0020               	movlb	0	; select bank0
  9044  0523  0849               	movf	?___fladd+1,w
  9045  0524  0021               	movlb	1	; select bank1
  9046  0525  00C4               	movwf	(efgtoa@h+1)^(0+128)
  9047  0526  0020               	movlb	0	; select bank0
  9048  0527  0848               	movf	?___fladd,w
  9049  0528  0021               	movlb	1	; select bank1
  9050  0529  00C3               	movwf	efgtoa@h^(0+128)
  9051                           
  9052                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  9053  052A  0846               	movf	(efgtoa@h+3)^(0+128),w
  9054  052B  0020               	movlb	0	; select bank0
  9055  052C  00CB               	movwf	___flge@ff1+3
  9056  052D  0021               	movlb	1	; select bank1
  9057  052E  0845               	movf	(efgtoa@h+2)^(0+128),w
  9058  052F  0020               	movlb	0	; select bank0
  9059  0530  00CA               	movwf	___flge@ff1+2
  9060  0531  0021               	movlb	1	; select bank1
  9061  0532  0844               	movf	(efgtoa@h+1)^(0+128),w
  9062  0533  0020               	movlb	0	; select bank0
  9063  0534  00C9               	movwf	___flge@ff1+1
  9064  0535  0021               	movlb	1	; select bank1
  9065  0536  0843               	movf	efgtoa@h^(0+128),w
  9066  0537  0020               	movlb	0	; select bank0
  9067  0538  00C8               	movwf	___flge@ff1
  9068  0539  3041               	movlw	65
  9069  053A  00B1               	movwf	___flmul@b+3
  9070  053B  3020               	movlw	32
  9071  053C  00B0               	movwf	___flmul@b+2
  9072  053D  3000               	movlw	0
  9073  053E  00AF               	movwf	___flmul@b+1
  9074  053F  3000               	movlw	0
  9075  0540  00AE               	movwf	___flmul@b
  9076  0541  0021               	movlb	1	; select bank1
  9077  0542  0837               	movf	(efgtoa@ou+3)^(0+128),w
  9078  0543  0020               	movlb	0	; select bank0
  9079  0544  00B5               	movwf	___flmul@a+3
  9080  0545  0021               	movlb	1	; select bank1
  9081  0546  0836               	movf	(efgtoa@ou+2)^(0+128),w
  9082  0547  0020               	movlb	0	; select bank0
  9083  0548  00B4               	movwf	___flmul@a+2
  9084  0549  0021               	movlb	1	; select bank1
  9085  054A  0835               	movf	(efgtoa@ou+1)^(0+128),w
  9086  054B  0020               	movlb	0	; select bank0
  9087  054C  00B3               	movwf	___flmul@a+1
  9088  054D  0021               	movlb	1	; select bank1
  9089  054E  0834               	movf	efgtoa@ou^(0+128),w
  9090  054F  0020               	movlb	0	; select bank0
  9091  0550  00B2               	movwf	___flmul@a
  9092  0551  318A  221E  3181   	fcall	___flmul
  9093  0554  0831               	movf	?___flmul+3,w
  9094  0555  00CF               	movwf	___flge@ff2+3
  9095  0556  0830               	movf	?___flmul+2,w
  9096  0557  00CE               	movwf	___flge@ff2+2
  9097  0558  082F               	movf	?___flmul+1,w
  9098  0559  00CD               	movwf	___flge@ff2+1
  9099  055A  082E               	movf	?___flmul,w
  9100  055B  00CC               	movwf	___flge@ff2
  9101  055C  319E  26F0  3181   	fcall	___flge
  9102  055F  1C03               	btfss	3,0
  9103  0560  2D99               	goto	l1007
  9104                           
  9105                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  9106  0561  3001               	movlw	1
  9107  0562  0021               	movlb	1	; select bank1
  9108  0563  07D1               	addwf	efgtoa@e^(0+128),f
  9109  0564  3000               	movlw	0
  9110  0565  3DD2               	addwfc	(efgtoa@e+1)^(0+128),f
  9111                           
  9112                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  9113  0566  3041               	movlw	65
  9114  0567  0020               	movlb	0	; select bank0
  9115  0568  00B1               	movwf	___flmul@b+3
  9116  0569  3020               	movlw	32
  9117  056A  00B0               	movwf	___flmul@b+2
  9118  056B  3000               	movlw	0
  9119  056C  00AF               	movwf	___flmul@b+1
  9120  056D  3000               	movlw	0
  9121  056E  00AE               	movwf	___flmul@b
  9122  056F  0021               	movlb	1	; select bank1
  9123  0570  0837               	movf	(efgtoa@ou+3)^(0+128),w
  9124  0571  0020               	movlb	0	; select bank0
  9125  0572  00B5               	movwf	___flmul@a+3
  9126  0573  0021               	movlb	1	; select bank1
  9127  0574  0836               	movf	(efgtoa@ou+2)^(0+128),w
  9128  0575  0020               	movlb	0	; select bank0
  9129  0576  00B4               	movwf	___flmul@a+2
  9130  0577  0021               	movlb	1	; select bank1
  9131  0578  0835               	movf	(efgtoa@ou+1)^(0+128),w
  9132  0579  0020               	movlb	0	; select bank0
  9133  057A  00B3               	movwf	___flmul@a+1
  9134  057B  0021               	movlb	1	; select bank1
  9135  057C  0834               	movf	efgtoa@ou^(0+128),w
  9136  057D  0020               	movlb	0	; select bank0
  9137  057E  00B2               	movwf	___flmul@a
  9138  057F  318A  221E  3181   	fcall	___flmul
  9139  0582  0831               	movf	?___flmul+3,w
  9140  0583  0021               	movlb	1	; select bank1
  9141  0584  00B7               	movwf	(efgtoa@ou+3)^(0+128)
  9142  0585  0020               	movlb	0	; select bank0
  9143  0586  0830               	movf	?___flmul+2,w
  9144  0587  0021               	movlb	1	; select bank1
  9145  0588  00B6               	movwf	(efgtoa@ou+2)^(0+128)
  9146  0589  0020               	movlb	0	; select bank0
  9147  058A  082F               	movf	?___flmul+1,w
  9148  058B  0021               	movlb	1	; select bank1
  9149  058C  00B5               	movwf	(efgtoa@ou+1)^(0+128)
  9150  058D  0020               	movlb	0	; select bank0
  9151  058E  082E               	movf	?___flmul,w
  9152  058F  0021               	movlb	1	; select bank1
  9153  0590  00B4               	movwf	efgtoa@ou^(0+128)
  9154                           
  9155                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  9156  0591  3066               	movlw	102
  9157  0592  0641               	xorwf	efgtoa@nmode^(0+128),w
  9158  0593  1D03               	btfss	3,2
  9159  0594  2D99               	goto	l1007
  9160                           
  9161                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  9162  0595  3001               	movlw	1
  9163  0596  07B2               	addwf	efgtoa@m^(0+128),f
  9164  0597  3000               	movlw	0
  9165  0598  3DB3               	addwfc	(efgtoa@m+1)^(0+128),f
  9166  0599                     l1007:	
  9167                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 460:  }
  9168                           
  9169                           
  9170                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  9171  0599  0021               	movlb	1	; select bank1
  9172  059A  0837               	movf	(efgtoa@ou+3)^(0+128),w
  9173  059B  00D8               	movwf	(efgtoa@u+3)^(0+128)
  9174  059C  0836               	movf	(efgtoa@ou+2)^(0+128),w
  9175  059D  00D7               	movwf	(efgtoa@u+2)^(0+128)
  9176  059E  0835               	movf	(efgtoa@ou+1)^(0+128),w
  9177  059F  00D6               	movwf	(efgtoa@u+1)^(0+128)
  9178  05A0  0834               	movf	efgtoa@ou^(0+128),w
  9179  05A1  00D5               	movwf	efgtoa@u^(0+128)
  9180                           
  9181                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  9182  05A2  3065               	movlw	101
  9183  05A3  0641               	xorwf	efgtoa@nmode^(0+128),w
  9184  05A4  1903               	btfsc	3,2
  9185  05A5  2DAB               	goto	l4219
  9186  05A6  0852               	movf	(efgtoa@e+1)^(0+128),w
  9187  05A7  00B1               	movwf	(efgtoa@ne+1)^(0+128)
  9188  05A8  0851               	movf	efgtoa@e^(0+128),w
  9189  05A9  00B0               	movwf	efgtoa@ne^(0+128)
  9190  05AA  2DAD               	goto	l1012
  9191  05AB                     l4219:
  9192  05AB  01B0               	clrf	efgtoa@ne^(0+128)
  9193  05AC  01B1               	clrf	(efgtoa@ne+1)^(0+128)
  9194  05AD                     l1012:
  9195                           
  9196                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  9197  05AD  01AE               	clrf	efgtoa@pp^(0+128)
  9198  05AE  01AF               	clrf	(efgtoa@pp+1)^(0+128)
  9199                           
  9200                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  9201  05AF  01AC               	clrf	efgtoa@t^(0+128)
  9202  05B0  01AD               	clrf	(efgtoa@t+1)^(0+128)
  9203                           
  9204                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  9205  05B1  01CB               	clrf	efgtoa@i^(0+128)
  9206  05B2  01CC               	clrf	(efgtoa@i+1)^(0+128)
  9207                           
  9208                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  9209  05B3  2ECE               	goto	l4269
  9210  05B4                     l4221:
  9211                           
  9212                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  9213  05B4  0021               	movlb	1	; select bank1
  9214  05B5  0858               	movf	(efgtoa@u+3)^(0+128),w
  9215  05B6  00F3               	movwf	___fldiv@a+3
  9216  05B7  0857               	movf	(efgtoa@u+2)^(0+128),w
  9217  05B8  00F2               	movwf	___fldiv@a+2
  9218  05B9  0856               	movf	(efgtoa@u+1)^(0+128),w
  9219  05BA  00F1               	movwf	___fldiv@a+1
  9220  05BB  0855               	movf	efgtoa@u^(0+128),w
  9221  05BC  00F0               	movwf	___fldiv@a
  9222  05BD  0846               	movf	(efgtoa@h+3)^(0+128),w
  9223  05BE  00F7               	movwf	___fldiv@b+3
  9224  05BF  0845               	movf	(efgtoa@h+2)^(0+128),w
  9225  05C0  00F6               	movwf	___fldiv@b+2
  9226  05C1  0844               	movf	(efgtoa@h+1)^(0+128),w
  9227  05C2  00F5               	movwf	___fldiv@b+1
  9228  05C3  0843               	movf	efgtoa@h^(0+128),w
  9229  05C4  00F4               	movwf	___fldiv@b
  9230  05C5  3196  2686  3181   	fcall	___fldiv
  9231  05C8  0873               	movf	?___fldiv+3,w
  9232  05C9  00B0               	movwf	floorf@x+3
  9233  05CA  0872               	movf	?___fldiv+2,w
  9234  05CB  00AF               	movwf	floorf@x+2
  9235  05CC  0871               	movf	?___fldiv+1,w
  9236  05CD  00AE               	movwf	floorf@x+1
  9237  05CE  0870               	movf	?___fldiv,w
  9238  05CF  00AD               	movwf	floorf@x
  9239  05D0  3190  20DF  3181   	fcall	_floorf
  9240  05D3  0020               	movlb	0	; select bank0
  9241  05D4  0830               	movf	?_floorf+3,w
  9242  05D5  0021               	movlb	1	; select bank1
  9243  05D6  00CA               	movwf	(efgtoa@l+3)^(0+128)
  9244  05D7  0020               	movlb	0	; select bank0
  9245  05D8  082F               	movf	?_floorf+2,w
  9246  05D9  0021               	movlb	1	; select bank1
  9247  05DA  00C9               	movwf	(efgtoa@l+2)^(0+128)
  9248  05DB  0020               	movlb	0	; select bank0
  9249  05DC  082E               	movf	?_floorf+1,w
  9250  05DD  0021               	movlb	1	; select bank1
  9251  05DE  00C8               	movwf	(efgtoa@l+1)^(0+128)
  9252  05DF  0020               	movlb	0	; select bank0
  9253  05E0  082D               	movf	?_floorf,w
  9254  05E1  0021               	movlb	1	; select bank1
  9255  05E2  00C7               	movwf	efgtoa@l^(0+128)
  9256                           
  9257                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  9258  05E3  084A               	movf	(efgtoa@l+3)^(0+128),w
  9259  05E4  0020               	movlb	0	; select bank0
  9260  05E5  00CB               	movwf	___fltol@f1+3
  9261  05E6  0021               	movlb	1	; select bank1
  9262  05E7  0849               	movf	(efgtoa@l+2)^(0+128),w
  9263  05E8  0020               	movlb	0	; select bank0
  9264  05E9  00CA               	movwf	___fltol@f1+2
  9265  05EA  0021               	movlb	1	; select bank1
  9266  05EB  0848               	movf	(efgtoa@l+1)^(0+128),w
  9267  05EC  0020               	movlb	0	; select bank0
  9268  05ED  00C9               	movwf	___fltol@f1+1
  9269  05EE  0021               	movlb	1	; select bank1
  9270  05EF  0847               	movf	efgtoa@l^(0+128),w
  9271  05F0  0020               	movlb	0	; select bank0
  9272  05F1  00C8               	movwf	___fltol@f1
  9273  05F2  319E  2613  3181   	fcall	___fltol
  9274  05F5  0849               	movf	?___fltol+1,w
  9275  05F6  0021               	movlb	1	; select bank1
  9276  05F7  00B9               	movwf	(efgtoa@d+1)^(0+128)
  9277  05F8  0020               	movlb	0	; select bank0
  9278  05F9  0848               	movf	?___fltol,w
  9279  05FA  0021               	movlb	1	; select bank1
  9280  05FB  00B8               	movwf	efgtoa@d^(0+128)
  9281                           
  9282                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  9283  05FC  1A6E               	btfsc	_flags^(0+128),4
  9284  05FD  2E0C               	goto	l4233
  9285  05FE  0838               	movf	efgtoa@d^(0+128),w
  9286  05FF  0439               	iorwf	(efgtoa@d+1)^(0+128),w
  9287  0600  1D03               	btfss	3,2
  9288  0601  2E0C               	goto	l4233
  9289  0602  3067               	movlw	103
  9290  0603  0642               	xorwf	efgtoa@mode^(0+128),w
  9291  0604  1903               	btfsc	3,2
  9292  0605  1FB1               	btfss	(efgtoa@ne+1)^(0+128),7
  9293  0606  2E0C               	goto	l4233
  9294                           
  9295                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  9296  0607  3001               	movlw	1
  9297  0608  07AC               	addwf	efgtoa@t^(0+128),f
  9298  0609  3000               	movlw	0
  9299  060A  3DAD               	addwfc	(efgtoa@t+1)^(0+128),f
  9300                           
  9301                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  9302  060B  2E5E               	goto	l4261
  9303  060C                     l4233:
  9304                           
  9305                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  9306  060C  082E               	movf	efgtoa@pp^(0+128),w
  9307  060D  042F               	iorwf	(efgtoa@pp+1)^(0+128),w
  9308  060E  1903               	btfsc	3,2
  9309  060F  1FB1               	btfss	(efgtoa@ne+1)^(0+128),7
  9310  0610  2E2A               	goto	l4253
  9311                           
  9312                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  9313  0611  302E               	movlw	46
  9314  0612  0020               	movlb	0	; select bank0
  9315  0613  00E9               	movwf	??_efgtoa
  9316  0614  0021               	movlb	1	; select bank1
  9317  0615  0853               	movf	efgtoa@n^(0+128),w
  9318  0616  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9319  0617  0086               	movwf	6
  9320  0618  3001               	movlw	1	; select bank3/4
  9321  0619  0087               	movwf	7
  9322  061A  0020               	movlb	0	; select bank0
  9323  061B  0869               	movf	??_efgtoa,w
  9324  061C  0081               	movwf	1
  9325  061D  3001               	movlw	1
  9326  061E  0021               	movlb	1	; select bank1
  9327  061F  07D3               	addwf	efgtoa@n^(0+128),f
  9328  0620  3000               	movlw	0
  9329  0621  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  9330                           
  9331                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  9332  0622  30FF               	movlw	255
  9333  0623  07BF               	addwf	efgtoa@w^(0+128),f
  9334  0624  30FF               	movlw	255
  9335  0625  3DC0               	addwfc	(efgtoa@w+1)^(0+128),f
  9336                           
  9337                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  9338  0626  3001               	movlw	1
  9339  0627  00AE               	movwf	efgtoa@pp^(0+128)
  9340  0628  3000               	movlw	0
  9341  0629  00AF               	movwf	(efgtoa@pp^(0+128)+1)
  9342  062A                     l4253:
  9343                           
  9344                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  9345  062A  082C               	movf	efgtoa@t^(0+128),w
  9346  062B  042D               	iorwf	(efgtoa@t+1)^(0+128),w
  9347  062C  1903               	btfsc	3,2
  9348  062D  2E48               	goto	l4255
  9349                           
  9350                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  9351  062E  3030               	movlw	48
  9352  062F  0020               	movlb	0	; select bank0
  9353  0630  00E9               	movwf	??_efgtoa
  9354  0631  0021               	movlb	1	; select bank1
  9355  0632  0853               	movf	efgtoa@n^(0+128),w
  9356  0633  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9357  0634  0086               	movwf	6
  9358  0635  3001               	movlw	1	; select bank3/4
  9359  0636  0087               	movwf	7
  9360  0637  0020               	movlb	0	; select bank0
  9361  0638  0869               	movf	??_efgtoa,w
  9362  0639  0081               	movwf	1
  9363  063A  3001               	movlw	1
  9364  063B  0021               	movlb	1	; select bank1
  9365  063C  07D3               	addwf	efgtoa@n^(0+128),f
  9366  063D  3000               	movlw	0
  9367  063E  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  9368                           
  9369                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  9370  063F  30FF               	movlw	255
  9371  0640  07BF               	addwf	efgtoa@w^(0+128),f
  9372  0641  30FF               	movlw	255
  9373  0642  3DC0               	addwfc	(efgtoa@w+1)^(0+128),f
  9374                           
  9375                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  9376  0643  30FF               	movlw	255
  9377  0644  07AC               	addwf	efgtoa@t^(0+128),f
  9378  0645  30FF               	movlw	255
  9379  0646  3DAD               	addwfc	(efgtoa@t+1)^(0+128),f
  9380  0647  2E2A               	goto	l4253
  9381  0648                     l4255:
  9382                           
  9383                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  9384  0648  0838               	movf	efgtoa@d^(0+128),w
  9385  0649  3E30               	addlw	48
  9386  064A  0020               	movlb	0	; select bank0
  9387  064B  00E9               	movwf	??_efgtoa
  9388  064C  0021               	movlb	1	; select bank1
  9389  064D  0853               	movf	efgtoa@n^(0+128),w
  9390  064E  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9391  064F  0086               	movwf	6
  9392  0650  3001               	movlw	1	; select bank3/4
  9393  0651  0087               	movwf	7
  9394  0652  0020               	movlb	0	; select bank0
  9395  0653  0869               	movf	??_efgtoa,w
  9396  0654  0081               	movwf	1
  9397  0655  3001               	movlw	1
  9398  0656  0021               	movlb	1	; select bank1
  9399  0657  07D3               	addwf	efgtoa@n^(0+128),f
  9400  0658  3000               	movlw	0
  9401  0659  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  9402                           
  9403                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  9404  065A  30FF               	movlw	255
  9405  065B  07BF               	addwf	efgtoa@w^(0+128),f
  9406  065C  30FF               	movlw	255
  9407  065D  3DC0               	addwfc	(efgtoa@w+1)^(0+128),f
  9408  065E                     l4261:
  9409                           
  9410                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  9411  065E  084A               	movf	(efgtoa@l+3)^(0+128),w
  9412  065F  0020               	movlb	0	; select bank0
  9413  0660  00B5               	movwf	___flmul@a+3
  9414  0661  0021               	movlb	1	; select bank1
  9415  0662  0849               	movf	(efgtoa@l+2)^(0+128),w
  9416  0663  0020               	movlb	0	; select bank0
  9417  0664  00B4               	movwf	___flmul@a+2
  9418  0665  0021               	movlb	1	; select bank1
  9419  0666  0848               	movf	(efgtoa@l+1)^(0+128),w
  9420  0667  0020               	movlb	0	; select bank0
  9421  0668  00B3               	movwf	___flmul@a+1
  9422  0669  0021               	movlb	1	; select bank1
  9423  066A  0847               	movf	efgtoa@l^(0+128),w
  9424  066B  0020               	movlb	0	; select bank0
  9425  066C  00B2               	movwf	___flmul@a
  9426  066D  0021               	movlb	1	; select bank1
  9427  066E  0858               	movf	(efgtoa@u+3)^(0+128),w
  9428  066F  0020               	movlb	0	; select bank0
  9429  0670  00B1               	movwf	___flmul@b+3
  9430  0671  0021               	movlb	1	; select bank1
  9431  0672  0857               	movf	(efgtoa@u+2)^(0+128),w
  9432  0673  0020               	movlb	0	; select bank0
  9433  0674  00B0               	movwf	___flmul@b+2
  9434  0675  0021               	movlb	1	; select bank1
  9435  0676  0856               	movf	(efgtoa@u+1)^(0+128),w
  9436  0677  0020               	movlb	0	; select bank0
  9437  0678  00AF               	movwf	___flmul@b+1
  9438  0679  0021               	movlb	1	; select bank1
  9439  067A  0855               	movf	efgtoa@u^(0+128),w
  9440  067B  0020               	movlb	0	; select bank0
  9441  067C  00AE               	movwf	___flmul@b
  9442  067D  318A  221E  3181   	fcall	___flmul
  9443  0680  0831               	movf	?___flmul+3,w
  9444  0681  00DF               	movwf	___flsub@a+3
  9445  0682  0830               	movf	?___flmul+2,w
  9446  0683  00DE               	movwf	___flsub@a+2
  9447  0684  082F               	movf	?___flmul+1,w
  9448  0685  00DD               	movwf	___flsub@a+1
  9449  0686  082E               	movf	?___flmul,w
  9450  0687  00DC               	movwf	___flsub@a
  9451  0688  0021               	movlb	1	; select bank1
  9452  0689  0846               	movf	(efgtoa@h+3)^(0+128),w
  9453  068A  0020               	movlb	0	; select bank0
  9454  068B  00E3               	movwf	___flsub@b+3
  9455  068C  0021               	movlb	1	; select bank1
  9456  068D  0845               	movf	(efgtoa@h+2)^(0+128),w
  9457  068E  0020               	movlb	0	; select bank0
  9458  068F  00E2               	movwf	___flsub@b+2
  9459  0690  0021               	movlb	1	; select bank1
  9460  0691  0844               	movf	(efgtoa@h+1)^(0+128),w
  9461  0692  0020               	movlb	0	; select bank0
  9462  0693  00E1               	movwf	___flsub@b+1
  9463  0694  0021               	movlb	1	; select bank1
  9464  0695  0843               	movf	efgtoa@h^(0+128),w
  9465  0696  0020               	movlb	0	; select bank0
  9466  0697  00E0               	movwf	___flsub@b
  9467  0698  319A  2284  3181   	fcall	___flsub
  9468  069B  085F               	movf	?___flsub+3,w
  9469  069C  0021               	movlb	1	; select bank1
  9470  069D  00C6               	movwf	(efgtoa@h+3)^(0+128)
  9471  069E  0020               	movlb	0	; select bank0
  9472  069F  085E               	movf	?___flsub+2,w
  9473  06A0  0021               	movlb	1	; select bank1
  9474  06A1  00C5               	movwf	(efgtoa@h+2)^(0+128)
  9475  06A2  0020               	movlb	0	; select bank0
  9476  06A3  085D               	movf	?___flsub+1,w
  9477  06A4  0021               	movlb	1	; select bank1
  9478  06A5  00C4               	movwf	(efgtoa@h+1)^(0+128)
  9479  06A6  0020               	movlb	0	; select bank0
  9480  06A7  085C               	movf	?___flsub,w
  9481  06A8  0021               	movlb	1	; select bank1
  9482  06A9  00C3               	movwf	efgtoa@h^(0+128)
  9483                           
  9484                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  9485  06AA  3041               	movlw	65
  9486  06AB  00F3               	movwf	___fldiv@a+3
  9487  06AC  3020               	movlw	32
  9488  06AD  00F2               	movwf	___fldiv@a+2
  9489  06AE  3000               	movlw	0
  9490  06AF  00F1               	movwf	___fldiv@a+1
  9491  06B0  3000               	movlw	0
  9492  06B1  00F0               	movwf	___fldiv@a
  9493  06B2  0858               	movf	(efgtoa@u+3)^(0+128),w
  9494  06B3  00F7               	movwf	___fldiv@b+3
  9495  06B4  0857               	movf	(efgtoa@u+2)^(0+128),w
  9496  06B5  00F6               	movwf	___fldiv@b+2
  9497  06B6  0856               	movf	(efgtoa@u+1)^(0+128),w
  9498  06B7  00F5               	movwf	___fldiv@b+1
  9499  06B8  0855               	movf	efgtoa@u^(0+128),w
  9500  06B9  00F4               	movwf	___fldiv@b
  9501  06BA  3196  2686  3181   	fcall	___fldiv
  9502  06BD  0873               	movf	?___fldiv+3,w
  9503  06BE  0021               	movlb	1	; select bank1
  9504  06BF  00D8               	movwf	(efgtoa@u+3)^(0+128)
  9505  06C0  0872               	movf	?___fldiv+2,w
  9506  06C1  00D7               	movwf	(efgtoa@u+2)^(0+128)
  9507  06C2  0871               	movf	?___fldiv+1,w
  9508  06C3  00D6               	movwf	(efgtoa@u+1)^(0+128)
  9509  06C4  0870               	movf	?___fldiv,w
  9510  06C5  00D5               	movwf	efgtoa@u^(0+128)
  9511                           
  9512                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  9513  06C6  30FF               	movlw	255
  9514  06C7  07B0               	addwf	efgtoa@ne^(0+128),f
  9515  06C8  30FF               	movlw	255
  9516  06C9  3DB1               	addwfc	(efgtoa@ne+1)^(0+128),f
  9517                           
  9518                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  9519  06CA  3001               	movlw	1
  9520  06CB  07CB               	addwf	efgtoa@i^(0+128),f
  9521  06CC  3000               	movlw	0
  9522  06CD  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  9523  06CE                     l4269:
  9524                           
  9525                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  9526  06CE  084C               	movf	(efgtoa@i+1)^(0+128),w
  9527  06CF  3A80               	xorlw	128
  9528  06D0  0020               	movlb	0	; select bank0
  9529  06D1  00E9               	movwf	??_efgtoa
  9530  06D2  0021               	movlb	1	; select bank1
  9531  06D3  0833               	movf	(efgtoa@m+1)^(0+128),w
  9532  06D4  3A80               	xorlw	128
  9533  06D5  0020               	movlb	0	; select bank0
  9534  06D6  0269               	subwf	??_efgtoa,w
  9535  06D7  1D03               	skipz
  9536  06D8  2EDC               	goto	u6395
  9537  06D9  0021               	movlb	1	; select bank1
  9538  06DA  0832               	movf	efgtoa@m^(0+128),w
  9539  06DB  024B               	subwf	efgtoa@i^(0+128),w
  9540  06DC                     u6395:
  9541  06DC  1803               	skipnc
  9542  06DD  2EEC               	goto	l4273
  9543  06DE  0021               	movlb	1	; select bank1
  9544  06DF  0854               	movf	(efgtoa@n+1)^(0+128),w
  9545  06E0  3A80               	xorlw	128
  9546  06E1  0020               	movlb	0	; select bank0
  9547  06E2  00E9               	movwf	??_efgtoa
  9548  06E3  3080               	movlw	128
  9549  06E4  0269               	subwf	??_efgtoa,w
  9550  06E5  1D03               	skipz
  9551  06E6  2EEA               	goto	u6405
  9552  06E7  304B               	movlw	75
  9553  06E8  0021               	movlb	1	; select bank1
  9554  06E9  0253               	subwf	efgtoa@n^(0+128),w
  9555  06EA                     u6405:
  9556  06EA  1C03               	skipc
  9557  06EB  2DB4               	goto	l4221
  9558  06EC                     l4273:
  9559                           
  9560                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  9561  06EC  0021               	movlb	1	; select bank1
  9562  06ED  082E               	movf	efgtoa@pp^(0+128),w
  9563  06EE  042F               	iorwf	(efgtoa@pp+1)^(0+128),w
  9564  06EF  1903               	btfsc	3,2
  9565  06F0  1E6E               	btfss	_flags^(0+128),4
  9566  06F1  2F03               	goto	l4281
  9567                           
  9568                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  9569  06F2  302E               	movlw	46
  9570  06F3  0020               	movlb	0	; select bank0
  9571  06F4  00E9               	movwf	??_efgtoa
  9572  06F5  0021               	movlb	1	; select bank1
  9573  06F6  0853               	movf	efgtoa@n^(0+128),w
  9574  06F7  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9575  06F8  0086               	movwf	6
  9576  06F9  3001               	movlw	1	; select bank3/4
  9577  06FA  0087               	movwf	7
  9578  06FB  0020               	movlb	0	; select bank0
  9579  06FC  0869               	movf	??_efgtoa,w
  9580  06FD  0081               	movwf	1
  9581  06FE  3001               	movlw	1
  9582  06FF  0021               	movlb	1	; select bank1
  9583  0700  07D3               	addwf	efgtoa@n^(0+128),f
  9584  0701  3000               	movlw	0
  9585  0702  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  9586  0703                     l4281:
  9587                           
  9588                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  9589  0703  0853               	movf	efgtoa@n^(0+128),w
  9590  0704  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9591  0705  0086               	movwf	6
  9592  0706  3001               	movlw	1	; select bank3/4
  9593  0707  0087               	movwf	7
  9594  0708  0181               	clrf	1
  9595                           
  9596                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  9597  0709  3065               	movlw	101
  9598  070A  0641               	xorwf	efgtoa@nmode^(0+128),w
  9599  070B  1D03               	btfss	3,2
  9600  070C  2FD3               	goto	l4343
  9601                           
  9602                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  9603  070D  304F               	movlw	79
  9604  070E  00CB               	movwf	efgtoa@i^(0+128)
  9605  070F  3000               	movlw	0
  9606  0710  00CC               	movwf	(efgtoa@i^(0+128)+1)
  9607                           
  9608                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  9609  0711  084B               	movf	efgtoa@i^(0+128),w
  9610  0712  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9611  0713  0086               	movwf	6
  9612  0714  3001               	movlw	1	; select bank3/4
  9613  0715  0087               	movwf	7
  9614  0716  0181               	clrf	1
  9615                           
  9616                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  9617  0717  01BA               	clrf	efgtoa@sign^(0+128)
  9618  0718  01BB               	clrf	(efgtoa@sign+1)^(0+128)
  9619                           
  9620                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  9621  0719  1FD2               	btfss	(efgtoa@e+1)^(0+128),7
  9622  071A  2F24               	goto	l4297
  9623                           
  9624                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  9625  071B  3001               	movlw	1
  9626  071C  00BA               	movwf	efgtoa@sign^(0+128)
  9627  071D  3000               	movlw	0
  9628  071E  00BB               	movwf	(efgtoa@sign^(0+128)+1)
  9629                           
  9630                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  9631  071F  09D1               	comf	efgtoa@e^(0+128),f
  9632  0720  09D2               	comf	(efgtoa@e+1)^(0+128),f
  9633  0721  0AD1               	incf	efgtoa@e^(0+128),f
  9634  0722  1903               	skipnz
  9635  0723  0AD2               	incf	(efgtoa@e+1)^(0+128),f
  9636  0724                     l4297:
  9637                           
  9638                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  9639  0724  3002               	movlw	2
  9640  0725  00BC               	movwf	efgtoa@p^(0+128)
  9641  0726  3000               	movlw	0
  9642  0727  00BD               	movwf	(efgtoa@p^(0+128)+1)
  9643  0728                     l4309:	
  9644                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  9645                           
  9646                           
  9647                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  9648  0728  0851               	movf	efgtoa@e^(0+128),w
  9649  0729  0452               	iorwf	(efgtoa@e+1)^(0+128),w
  9650  072A  1903               	btfsc	3,2
  9651  072B  2F62               	goto	l4311
  9652  072C                     l4299:
  9653                           
  9654                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  9655  072C  30FF               	movlw	255
  9656  072D  0021               	movlb	1	; select bank1
  9657  072E  07CB               	addwf	efgtoa@i^(0+128),f
  9658  072F  30FF               	movlw	255
  9659  0730  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  9660                           
  9661                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  9662  0731  300A               	movlw	10
  9663  0732  00F0               	movwf	___awmod@divisor
  9664  0733  3000               	movlw	0
  9665  0734  00F1               	movwf	___awmod@divisor+1
  9666  0735  0852               	movf	(efgtoa@e+1)^(0+128),w
  9667  0736  00F3               	movwf	___awmod@dividend+1
  9668  0737  0851               	movf	efgtoa@e^(0+128),w
  9669  0738  00F2               	movwf	___awmod@dividend
  9670  0739  319B  23B2  3181   	fcall	___awmod
  9671  073C  0870               	movf	?___awmod,w
  9672  073D  3E30               	addlw	48
  9673  073E  0020               	movlb	0	; select bank0
  9674  073F  00E9               	movwf	??_efgtoa
  9675  0740  0021               	movlb	1	; select bank1
  9676  0741  084B               	movf	efgtoa@i^(0+128),w
  9677  0742  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9678  0743  0086               	movwf	6
  9679  0744  3001               	movlw	1	; select bank3/4
  9680  0745  0087               	movwf	7
  9681  0746  0020               	movlb	0	; select bank0
  9682  0747  0869               	movf	??_efgtoa,w
  9683  0748  0081               	movwf	1
  9684                           
  9685                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  9686  0749  300A               	movlw	10
  9687  074A  00F0               	movwf	___awdiv@divisor
  9688  074B  3000               	movlw	0
  9689  074C  00F1               	movwf	___awdiv@divisor+1
  9690  074D  0021               	movlb	1	; select bank1
  9691  074E  0852               	movf	(efgtoa@e+1)^(0+128),w
  9692  074F  00F3               	movwf	___awdiv@dividend+1
  9693  0750  0851               	movf	efgtoa@e^(0+128),w
  9694  0751  00F2               	movwf	___awdiv@dividend
  9695  0752  319D  251F  3181   	fcall	___awdiv
  9696  0755  0871               	movf	?___awdiv+1,w
  9697  0756  00D2               	movwf	(efgtoa@e+1)^(0+128)
  9698  0757  0870               	movf	?___awdiv,w
  9699  0758  00D1               	movwf	efgtoa@e^(0+128)
  9700                           
  9701                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  9702  0759  30FF               	movlw	255
  9703  075A  07BC               	addwf	efgtoa@p^(0+128),f
  9704  075B  30FF               	movlw	255
  9705  075C  3DBD               	addwfc	(efgtoa@p+1)^(0+128),f
  9706                           
  9707                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  9708  075D  30FF               	movlw	255
  9709  075E  07BF               	addwf	efgtoa@w^(0+128),f
  9710  075F  30FF               	movlw	255
  9711  0760  3DC0               	addwfc	(efgtoa@w+1)^(0+128),f
  9712  0761  2F28               	goto	l4309
  9713  0762                     l4311:
  9714  0762  083D               	movf	(efgtoa@p+1)^(0+128),w
  9715  0763  3A80               	xorlw	128
  9716  0764  0020               	movlb	0	; select bank0
  9717  0765  00E9               	movwf	??_efgtoa
  9718  0766  3080               	movlw	128
  9719  0767  0269               	subwf	??_efgtoa,w
  9720  0768  1D03               	skipz
  9721  0769  2F6D               	goto	u6465
  9722  076A  3001               	movlw	1
  9723  076B  0021               	movlb	1	; select bank1
  9724  076C  023C               	subwf	efgtoa@p^(0+128),w
  9725  076D                     u6465:
  9726  076D  1803               	skipnc
  9727  076E  2F2C               	goto	l4299
  9728                           
  9729                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  9730  076F  30FF               	movlw	255
  9731  0770  0021               	movlb	1	; select bank1
  9732  0771  07CB               	addwf	efgtoa@i^(0+128),f
  9733  0772  30FF               	movlw	255
  9734  0773  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  9735                           
  9736                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  9737  0774  083A               	movf	efgtoa@sign^(0+128),w
  9738  0775  043B               	iorwf	(efgtoa@sign+1)^(0+128),w
  9739  0776  1D03               	btfss	3,2
  9740  0777  2F7A               	goto	l4319
  9741  0778  302B               	movlw	43
  9742  0779  2F7B               	goto	L8
  9743  077A                     l4319:
  9744  077A  302D               	movlw	45
  9745  077B                     L8:
  9746  077B  00A6               	movwf	_efgtoa$963^(0+128)
  9747  077C  3000               	movlw	0
  9748  077D  00A7               	movwf	(_efgtoa$963^(0+128)+1)
  9749  077E  0826               	movf	_efgtoa$963^(0+128),w
  9750  077F  0020               	movlb	0	; select bank0
  9751  0780  00E9               	movwf	??_efgtoa
  9752  0781  0021               	movlb	1	; select bank1
  9753  0782  084B               	movf	efgtoa@i^(0+128),w
  9754  0783  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9755  0784  0086               	movwf	6
  9756  0785  3001               	movlw	1	; select bank3/4
  9757  0786  0087               	movwf	7
  9758  0787  0020               	movlb	0	; select bank0
  9759  0788  0869               	movf	??_efgtoa,w
  9760  0789  0081               	movwf	1
  9761                           
  9762                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  9763  078A  30FF               	movlw	255
  9764  078B  0021               	movlb	1	; select bank1
  9765  078C  07BF               	addwf	efgtoa@w^(0+128),f
  9766  078D  30FF               	movlw	255
  9767  078E  3DC0               	addwfc	(efgtoa@w+1)^(0+128),f
  9768                           
  9769                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  9770  078F  30FF               	movlw	255
  9771  0790  07CB               	addwf	efgtoa@i^(0+128),f
  9772  0791  30FF               	movlw	255
  9773  0792  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  9774  0793  0020               	movlb	0	; select bank0
  9775  0794  0868               	movf	efgtoa@c,w
  9776  0795  3EBF               	addlw	191
  9777  0796  00E9               	movwf	??_efgtoa
  9778  0797  30FF               	movlw	255
  9779  0798  1803               	skipnc
  9780  0799  3000               	movlw	0
  9781  079A  00EA               	movwf	??_efgtoa+1
  9782  079B  3000               	movlw	0
  9783  079C  026A               	subwf	??_efgtoa+1,w
  9784  079D  301A               	movlw	26
  9785  079E  1903               	skipnz
  9786  079F  0269               	subwf	??_efgtoa,w
  9787  07A0  1803               	btfsc	3,0
  9788  07A1  2FA4               	goto	u6480
  9789  07A2  3001               	movlw	1
  9790  07A3  2FA5               	goto	u6490
  9791  07A4                     u6480:
  9792  07A4  3000               	movlw	0
  9793  07A5                     u6490:
  9794  07A5  00EB               	movwf	??_efgtoa+2
  9795  07A6  01EC               	clrf	??_efgtoa+3
  9796  07A7  086B               	movf	??_efgtoa+2,w
  9797  07A8  0021               	movlb	1	; select bank1
  9798  07A9  00AA               	movwf	_efgtoa$965^(0+128)
  9799  07AA  0020               	movlb	0	; select bank0
  9800  07AB  086C               	movf	??_efgtoa+3,w
  9801  07AC  0021               	movlb	1	; select bank1
  9802  07AD  00AB               	movwf	(_efgtoa$965+1)^(0+128)
  9803  07AE  082A               	movf	_efgtoa$965^(0+128),w
  9804  07AF  042B               	iorwf	(_efgtoa$965+1)^(0+128),w
  9805  07B0  1D03               	btfss	3,2
  9806  07B1  2FB4               	goto	l4335
  9807  07B2  3065               	movlw	101
  9808  07B3  2FB5               	goto	L9
  9809  07B4                     l4335:
  9810  07B4  3045               	movlw	69
  9811  07B5                     L9:
  9812  07B5  00A8               	movwf	_efgtoa$964^(0+128)
  9813  07B6  3000               	movlw	0
  9814  07B7  00A9               	movwf	(_efgtoa$964^(0+128)+1)
  9815  07B8  0828               	movf	_efgtoa$964^(0+128),w
  9816  07B9  0020               	movlb	0	; select bank0
  9817  07BA  00E9               	movwf	??_efgtoa
  9818  07BB  0021               	movlb	1	; select bank1
  9819  07BC  084B               	movf	efgtoa@i^(0+128),w
  9820  07BD  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9821  07BE  0086               	movwf	6
  9822  07BF  3001               	movlw	1	; select bank3/4
  9823  07C0  0087               	movwf	7
  9824  07C1  0020               	movlb	0	; select bank0
  9825  07C2  0869               	movf	??_efgtoa,w
  9826  07C3  0081               	movwf	1
  9827                           
  9828                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  9829  07C4  30FF               	movlw	255
  9830  07C5  0021               	movlb	1	; select bank1
  9831  07C6  07BF               	addwf	efgtoa@w^(0+128),f
  9832  07C7  30FF               	movlw	255
  9833  07C8  3DC0               	addwfc	(efgtoa@w+1)^(0+128),f
  9834                           
  9835                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  9836  07C9  084B               	movf	efgtoa@i^(0+128),w
  9837  07CA  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9838  07CB  00F0               	movwf	strcpy@src
  9839  07CC  3001               	movlw	1
  9840  07CD  00F1               	movwf	strcpy@src+1
  9841  07CE  0853               	movf	efgtoa@n^(0+128),w
  9842  07CF  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9843  07D0  319A  22FB  3181   	fcall	_strcpy
  9844  07D3                     l4343:
  9845                           
  9846                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 524:     return p
      +                          ad(fp, &dbuf[0], w);
  9847  07D3  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
  9848  07D4  0020               	movlb	0	; select bank0
  9849  07D5  00E9               	movwf	??_efgtoa
  9850  07D6  0869               	movf	??_efgtoa,w
  9851  07D7  00A7               	movwf	pad@buf
  9852  07D8  0021               	movlb	1	; select bank1
  9853  07D9  0840               	movf	(efgtoa@w+1)^(0+128),w
  9854  07DA  0020               	movlb	0	; select bank0
  9855  07DB  00A9               	movwf	pad@p+1
  9856  07DC  0021               	movlb	1	; select bank1
  9857  07DD  083F               	movf	efgtoa@w^(0+128),w
  9858  07DE  0020               	movlb	0	; select bank0
  9859  07DF  00A8               	movwf	pad@p
  9860  07E0  0021               	movlb	1	; select bank1
  9861  07E1  083E               	movf	efgtoa@fp^(0+128),w
  9862  07E2  319C  24D0         	fcall	_pad
  9863  07E4  0828               	movf	?_pad+1,w
  9864  07E5  00E5               	movwf	?_efgtoa+1
  9865  07E6  0827               	movf	?_pad,w
  9866  07E7  00E4               	movwf	?_efgtoa
  9867  07E8  0008               	return
  9868  07E9                     __end_of_efgtoa:
  9869                           
  9870                           	psect	text16
  9871  1B1A                     __ptext16:	
  9872 ;; *************** function _tolower *****************
  9873 ;; Defined at:
  9874 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  9875 ;; Parameters:    Size  Location     Type
  9876 ;;  c               2    6[COMMON] int 
  9877 ;; Auto vars:     Size  Location     Type
  9878 ;;		None
  9879 ;; Return value:  Size  Location     Type
  9880 ;;                  2    6[COMMON] int 
  9881 ;; Registers used:
  9882 ;;		wreg, status,2, status,0
  9883 ;; Tracked objects:
  9884 ;;		On entry : 1E/1
  9885 ;;		On exit  : 1E/0
  9886 ;;		Unchanged: 1E/0
  9887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9888 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9889 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9890 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9891 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9892 ;;Total ram usage:        8 bytes
  9893 ;; Hardware stack levels used: 1
  9894 ;; Hardware stack levels required when called: 1
  9895 ;; This function calls:
  9896 ;;		_isupper
  9897 ;; This function is called by:
  9898 ;;		_efgtoa
  9899 ;;		_vfpfcnvrt
  9900 ;; This function uses a non-reentrant model
  9901 ;;
  9902                           
  9903                           
  9904                           ;psect for function _tolower
  9905  1B1A                     _tolower:
  9906                           
  9907                           ;incstack = 0
  9908                           ; Regs used in _tolower: [wreg+status,2+status,0]
  9909  1B1A  0876               	movf	tolower@c,w
  9910  1B1B  3EBF               	addlw	191
  9911  1B1C  00F8               	movwf	??_tolower
  9912  1B1D  30FF               	movlw	255
  9913  1B1E  3D77               	addwfc	tolower@c+1,w
  9914  1B1F  00F9               	movwf	??_tolower+1
  9915  1B20  3000               	movlw	0
  9916  1B21  0279               	subwf	??_tolower+1,w
  9917  1B22  301A               	movlw	26
  9918  1B23  1903               	skipnz
  9919  1B24  0278               	subwf	??_tolower,w
  9920  1B25  1803               	btfsc	3,0
  9921  1B26  2B29               	goto	u5560
  9922  1B27  3001               	movlw	1
  9923  1B28  2B2A               	goto	u5570
  9924  1B29                     u5560:
  9925  1B29  3000               	movlw	0
  9926  1B2A                     u5570:
  9927  1B2A  00FA               	movwf	??_tolower+2
  9928  1B2B  01FB               	clrf	??_tolower+3
  9929  1B2C  087A               	movf	??_tolower+2,w
  9930  1B2D  00FC               	movwf	_tolower$1131
  9931  1B2E  087B               	movf	??_tolower+3,w
  9932  1B2F  00FD               	movwf	_tolower$1131+1
  9933  1B30  087C               	movf	_tolower$1131,w
  9934  1B31  047D               	iorwf	_tolower$1131+1,w
  9935  1B32  1903               	btfsc	3,2
  9936  1B33  0008               	return
  9937  1B34  3020               	movlw	32
  9938  1B35  0476               	iorwf	tolower@c,w
  9939  1B36  00F6               	movwf	?_tolower
  9940  1B37  3000               	movlw	0
  9941  1B38  0477               	iorwf	tolower@c+1,w
  9942  1B39  00F7               	movwf	?_tolower+1
  9943  1B3A  0008               	return
  9944  1B3B                     __end_of_tolower:
  9945                           
  9946                           	psect	text17
  9947  19BB                     __ptext17:	
  9948 ;; *************** function _isupper *****************
  9949 ;; Defined at:
  9950 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  9951 ;; Parameters:    Size  Location     Type
  9952 ;;  c               2    0[COMMON] int 
  9953 ;; Auto vars:     Size  Location     Type
  9954 ;;		None
  9955 ;; Return value:  Size  Location     Type
  9956 ;;                  2    0[COMMON] int 
  9957 ;; Registers used:
  9958 ;;		wreg, status,2, status,0
  9959 ;; Tracked objects:
  9960 ;;		On entry : 0/0
  9961 ;;		On exit  : 0/0
  9962 ;;		Unchanged: 0/0
  9963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9964 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9966 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9967 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9968 ;;Total ram usage:        6 bytes
  9969 ;; Hardware stack levels used: 1
  9970 ;; This function calls:
  9971 ;;		Nothing
  9972 ;; This function is called by:
  9973 ;;		_efgtoa
  9974 ;;		_xtoa
  9975 ;;		_vfpfcnvrt
  9976 ;;		_tolower
  9977 ;; This function uses a non-reentrant model
  9978 ;;
  9979                           
  9980                           
  9981                           ;psect for function _isupper
  9982  19BB                     _isupper:
  9983                           
  9984                           ;incstack = 0
  9985                           ; Regs used in _isupper: [wreg+status,2+status,0]
  9986  19BB  0870               	movf	isupper@c,w
  9987  19BC  3EBF               	addlw	191
  9988  19BD  00F2               	movwf	??_isupper
  9989  19BE  30FF               	movlw	255
  9990  19BF  3D71               	addwfc	isupper@c+1,w
  9991  19C0  00F3               	movwf	??_isupper+1
  9992  19C1  3000               	movlw	0
  9993  19C2  0273               	subwf	??_isupper+1,w
  9994  19C3  301A               	movlw	26
  9995  19C4  1903               	skipnz
  9996  19C5  0272               	subwf	??_isupper,w
  9997  19C6  1803               	btfsc	3,0
  9998  19C7  29CA               	goto	u4210
  9999  19C8  3001               	movlw	1
 10000  19C9  29CB               	goto	u4220
 10001  19CA                     u4210:
 10002  19CA  3000               	movlw	0
 10003  19CB                     u4220:
 10004  19CB  00F4               	movwf	??_isupper+2
 10005  19CC  01F5               	clrf	??_isupper+3
 10006  19CD  0874               	movf	??_isupper+2,w
 10007  19CE  00F0               	movwf	?_isupper
 10008  19CF  0875               	movf	??_isupper+3,w
 10009  19D0  00F1               	movwf	?_isupper+1
 10010  19D1  0008               	return
 10011  19D2                     __end_of_isupper:
 10012                           
 10013                           	psect	text18
 10014  1AFB                     __ptext18:	
 10015 ;; *************** function _strcpy *****************
 10016 ;; Defined at:
 10017 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
 10018 ;; Parameters:    Size  Location     Type
 10019 ;;  dest            1    wreg     PTR unsigned char 
 10020 ;;		 -> dbuf(80), 
 10021 ;;  src             2    0[COMMON] PTR const unsigned char 
 10022 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
 10023 ;;		 -> dbuf(80), 
 10024 ;; Auto vars:     Size  Location     Type
 10025 ;;  dest            1    7[COMMON] PTR unsigned char 
 10026 ;;		 -> dbuf(80), 
 10027 ;;  s               2    4[COMMON] PTR const unsigned char 
 10028 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
 10029 ;;		 -> dbuf(80), 
 10030 ;;  d               1    6[COMMON] PTR unsigned char 
 10031 ;;		 -> dbuf(80), 
 10032 ;; Return value:  Size  Location     Type
 10033 ;;                  1    wreg      PTR unsigned char 
 10034 ;; Registers used:
 10035 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 10036 ;; Tracked objects:
 10037 ;;		On entry : 1F/1
 10038 ;;		On exit  : 1F/1
 10039 ;;		Unchanged: 1F/0
 10040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10041 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10042 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10043 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10044 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10045 ;;Total ram usage:        8 bytes
 10046 ;; Hardware stack levels used: 1
 10047 ;; This function calls:
 10048 ;;		Nothing
 10049 ;; This function is called by:
 10050 ;;		_efgtoa
 10051 ;; This function uses a non-reentrant model
 10052 ;;
 10053                           
 10054                           
 10055                           ;psect for function _strcpy
 10056  1AFB                     _strcpy:
 10057                           
 10058                           ;incstack = 0
 10059                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
 10060                           ;strcpy@dest stored from wreg
 10061  1AFB  00F7               	movwf	strcpy@dest
 10062  1AFC  0871               	movf	strcpy@src+1,w
 10063  1AFD  00F5               	movwf	strcpy@s+1
 10064  1AFE  0870               	movf	strcpy@src,w
 10065  1AFF  00F4               	movwf	strcpy@s
 10066  1B00  0877               	movf	strcpy@dest,w
 10067  1B01  00F2               	movwf	??_strcpy
 10068  1B02  0872               	movf	??_strcpy,w
 10069  1B03  00F6               	movwf	strcpy@d
 10070  1B04                     l3913:
 10071  1B04  0876               	movf	strcpy@d,w
 10072  1B05  0086               	movwf	6
 10073  1B06  3001               	movlw	1	; select bank2/3
 10074  1B07  0087               	movwf	7
 10075  1B08  0AF6               	incf	strcpy@d,f
 10076  1B09  0875               	movf	strcpy@s+1,w
 10077  1B0A  00F3               	movwf	??_strcpy+1
 10078  1B0B  0874               	movf	strcpy@s,w
 10079  1B0C  00F2               	movwf	??_strcpy
 10080  1B0D  0AF4               	incf	strcpy@s,f
 10081  1B0E  1903               	skipnz
 10082  1B0F  0AF5               	incf	strcpy@s+1,f
 10083  1B10  0872               	movf	??_strcpy,w
 10084  1B11  0084               	movwf	4
 10085  1B12  0873               	movf	??_strcpy+1,w
 10086  1B13  0085               	movwf	5
 10087  1B14  0800               	movf	0,w	;code access
 10088  1B15  3FC0               	movwi [0]fsr1
 10089  1B16  0889               	movf	9,f
 10090  1B17  1903               	btfsc	3,2
 10091  1B18  0008               	return
 10092  1B19  2B04               	goto	l3913
 10093  1B1A                     __end_of_strcpy:
 10094                           
 10095                           	psect	text19
 10096  10DF                     __ptext19:	
 10097 ;; *************** function _floorf *****************
 10098 ;; Defined at:
 10099 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
 10100 ;; Parameters:    Size  Location     Type
 10101 ;;  x               4   13[BANK0 ] float 
 10102 ;; Auto vars:     Size  Location     Type
 10103 ;;  u               4   29[BANK0 ] struct .
 10104 ;;  m               4   23[BANK0 ] unsigned long 
 10105 ;;  e               2   27[BANK0 ] int 
 10106 ;; Return value:  Size  Location     Type
 10107 ;;                  4   13[BANK0 ] float 
 10108 ;; Registers used:
 10109 ;;		wreg, status,2, status,0
 10110 ;; Tracked objects:
 10111 ;;		On entry : 1F/0
 10112 ;;		On exit  : 0/0
 10113 ;;		Unchanged: 0/0
 10114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10115 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10116 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10117 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10118 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10119 ;;Total ram usage:       20 bytes
 10120 ;; Hardware stack levels used: 1
 10121 ;; This function calls:
 10122 ;;		Nothing
 10123 ;; This function is called by:
 10124 ;;		_efgtoa
 10125 ;; This function uses a non-reentrant model
 10126 ;;
 10127                           
 10128                           
 10129                           ;psect for function _floorf
 10130  10DF                     _floorf:
 10131                           
 10132                           ;incstack = 0
 10133                           ; Regs used in _floorf: [wreg+status,2+status,0]
 10134  10DF  0022               	movlb	2	; select bank2
 10135  10E0  0852               	movf	(floorf@F527+3)^(0+256),w
 10136  10E1  0020               	movlb	0	; select bank0
 10137  10E2  00C0               	movwf	floorf@u+3
 10138  10E3  0022               	movlb	2	; select bank2
 10139  10E4  0851               	movf	(floorf@F527+2)^(0+256),w
 10140  10E5  0020               	movlb	0	; select bank0
 10141  10E6  00BF               	movwf	floorf@u+2
 10142  10E7  0022               	movlb	2	; select bank2
 10143  10E8  0850               	movf	(floorf@F527+1)^(0+256),w
 10144  10E9  0020               	movlb	0	; select bank0
 10145  10EA  00BE               	movwf	floorf@u+1
 10146  10EB  0022               	movlb	2	; select bank2
 10147  10EC  084F               	movf	floorf@F527^(0+256),w
 10148  10ED  0020               	movlb	0	; select bank0
 10149  10EE  00BD               	movwf	floorf@u
 10150  10EF  0830               	movf	floorf@x+3,w
 10151  10F0  00C0               	movwf	floorf@u+3
 10152  10F1  082F               	movf	floorf@x+2,w
 10153  10F2  00BF               	movwf	floorf@u+2
 10154  10F3  082E               	movf	floorf@x+1,w
 10155  10F4  00BE               	movwf	floorf@u+1
 10156  10F5  082D               	movf	floorf@x,w
 10157  10F6  00BD               	movwf	floorf@u
 10158  10F7  083D               	movf	floorf@u,w
 10159  10F8  00B1               	movwf	??_floorf
 10160  10F9  083E               	movf	floorf@u+1,w
 10161  10FA  00B2               	movwf	??_floorf+1
 10162  10FB  083F               	movf	floorf@u+2,w
 10163  10FC  00B3               	movwf	??_floorf+2
 10164  10FD  0840               	movf	floorf@u+3,w
 10165  10FE  00B4               	movwf	??_floorf+3
 10166  10FF  3017               	movlw	23
 10167  1100                     u5595:
 10168  1100  36B4               	lsrf	??_floorf+3,f
 10169  1101  0CB3               	rrf	??_floorf+2,f
 10170  1102  0CB2               	rrf	??_floorf+1,f
 10171  1103  0CB1               	rrf	??_floorf,f
 10172  1104  0B89               	decfsz	9,f
 10173  1105  2900               	goto	u5595
 10174  1106  30FF               	movlw	255
 10175  1107  0531               	andwf	??_floorf,w
 10176  1108  00B5               	movwf	??_floorf+4
 10177  1109  3000               	movlw	0
 10178  110A  0532               	andwf	??_floorf+1,w
 10179  110B  00B6               	movwf	??_floorf+5
 10180  110C  0835               	movf	??_floorf+4,w
 10181  110D  3E81               	addlw	129
 10182  110E  00BB               	movwf	floorf@e
 10183  110F  30FF               	movlw	255
 10184  1110  3D36               	addwfc	??_floorf+5,w
 10185  1111  00BC               	movwf	floorf@e+1
 10186  1112  083C               	movf	floorf@e+1,w
 10187  1113  3A80               	xorlw	128
 10188  1114  00B1               	movwf	??_floorf
 10189  1115  3080               	movlw	128
 10190  1116  0231               	subwf	??_floorf,w
 10191  1117  1D03               	skipz
 10192  1118  291B               	goto	u5605
 10193  1119  3017               	movlw	23
 10194  111A  023B               	subwf	floorf@e,w
 10195  111B                     u5605:
 10196  111B  1803               	btfsc	3,0
 10197  111C  0008               	return
 10198  111D  0020               	movlb	0	; select bank0
 10199  111E  1BBC               	btfsc	floorf@e+1,7
 10200  111F  2975               	goto	l3945
 10201  1120  30FF               	movlw	255
 10202  1121  00B1               	movwf	??_floorf
 10203  1122  30FF               	movlw	255
 10204  1123  00B2               	movwf	??_floorf+1
 10205  1124  307F               	movlw	127
 10206  1125  00B3               	movwf	??_floorf+2
 10207  1126  3000               	movlw	0
 10208  1127  00B4               	movwf	??_floorf+3
 10209  1128  0A3B               	incf	floorf@e,w
 10210  1129  292E               	goto	u5620
 10211  112A                     u5625:
 10212  112A  37B4               	asrf	??_floorf+3,f
 10213  112B  0CB3               	rrf	??_floorf+2,f
 10214  112C  0CB2               	rrf	??_floorf+1,f
 10215  112D  0CB1               	rrf	??_floorf,f
 10216  112E                     u5620:
 10217  112E  0B89               	decfsz	9,f
 10218  112F  292A               	goto	u5625
 10219  1130  0834               	movf	??_floorf+3,w
 10220  1131  00BA               	movwf	floorf@m+3
 10221  1132  0833               	movf	??_floorf+2,w
 10222  1133  00B9               	movwf	floorf@m+2
 10223  1134  0832               	movf	??_floorf+1,w
 10224  1135  00B8               	movwf	floorf@m+1
 10225  1136  0831               	movf	??_floorf,w
 10226  1137  00B7               	movwf	floorf@m
 10227  1138  083D               	movf	floorf@u,w
 10228  1139  0537               	andwf	floorf@m,w
 10229  113A  00B1               	movwf	??_floorf
 10230  113B  083E               	movf	floorf@u+1,w
 10231  113C  0538               	andwf	floorf@m+1,w
 10232  113D  00B2               	movwf	??_floorf+1
 10233  113E  083F               	movf	floorf@u+2,w
 10234  113F  0539               	andwf	floorf@m+2,w
 10235  1140  00B3               	movwf	??_floorf+2
 10236  1141  0840               	movf	floorf@u+3,w
 10237  1142  053A               	andwf	floorf@m+3,w
 10238  1143  00B4               	movwf	??_floorf+3
 10239  1144  0834               	movf	??_floorf+3,w
 10240  1145  0433               	iorwf	??_floorf+2,w
 10241  1146  0432               	iorwf	??_floorf+1,w
 10242  1147  0431               	iorwf	??_floorf,w
 10243  1148  1903               	btfsc	3,2
 10244  1149  0008               	return
 10245  114A  083D               	movf	floorf@u,w
 10246  114B  00B1               	movwf	??_floorf
 10247  114C  083E               	movf	floorf@u+1,w
 10248  114D  00B2               	movwf	??_floorf+1
 10249  114E  083F               	movf	floorf@u+2,w
 10250  114F  00B3               	movwf	??_floorf+2
 10251  1150  0840               	movf	floorf@u+3,w
 10252  1151  00B4               	movwf	??_floorf+3
 10253  1152  301F               	movlw	31
 10254  1153                     u5645:
 10255  1153  36B4               	lsrf	??_floorf+3,f
 10256  1154  0CB3               	rrf	??_floorf+2,f
 10257  1155  0CB2               	rrf	??_floorf+1,f
 10258  1156  0CB1               	rrf	??_floorf,f
 10259  1157  0B89               	decfsz	9,f
 10260  1158  2953               	goto	u5645
 10261  1159  0831               	movf	??_floorf,w
 10262  115A  1903               	btfsc	3,2
 10263  115B  2964               	goto	l3943
 10264  115C  0837               	movf	floorf@m,w
 10265  115D  07BD               	addwf	floorf@u,f
 10266  115E  0838               	movf	floorf@m+1,w
 10267  115F  3DBE               	addwfc	floorf@u+1,f
 10268  1160  0839               	movf	floorf@m+2,w
 10269  1161  3DBF               	addwfc	floorf@u+2,f
 10270  1162  083A               	movf	floorf@m+3,w
 10271  1163  3DC0               	addwfc	floorf@u+3,f
 10272  1164                     l3943:
 10273  1164  0937               	comf	floorf@m,w
 10274  1165  00B1               	movwf	??_floorf
 10275  1166  0938               	comf	floorf@m+1,w
 10276  1167  00B2               	movwf	??_floorf+1
 10277  1168  0939               	comf	floorf@m+2,w
 10278  1169  00B3               	movwf	??_floorf+2
 10279  116A  093A               	comf	floorf@m+3,w
 10280  116B  00B4               	movwf	??_floorf+3
 10281  116C  0831               	movf	??_floorf,w
 10282  116D  05BD               	andwf	floorf@u,f
 10283  116E  0832               	movf	??_floorf+1,w
 10284  116F  05BE               	andwf	floorf@u+1,f
 10285  1170  0833               	movf	??_floorf+2,w
 10286  1171  05BF               	andwf	floorf@u+2,f
 10287  1172  0834               	movf	??_floorf+3,w
 10288  1173  05C0               	andwf	floorf@u+3,f
 10289  1174  29A8               	goto	l1177
 10290  1175                     l3945:
 10291  1175  083D               	movf	floorf@u,w
 10292  1176  00B1               	movwf	??_floorf
 10293  1177  083E               	movf	floorf@u+1,w
 10294  1178  00B2               	movwf	??_floorf+1
 10295  1179  083F               	movf	floorf@u+2,w
 10296  117A  00B3               	movwf	??_floorf+2
 10297  117B  0840               	movf	floorf@u+3,w
 10298  117C  00B4               	movwf	??_floorf+3
 10299  117D  301F               	movlw	31
 10300  117E                     u5665:
 10301  117E  36B4               	lsrf	??_floorf+3,f
 10302  117F  0CB3               	rrf	??_floorf+2,f
 10303  1180  0CB2               	rrf	??_floorf+1,f
 10304  1181  0CB1               	rrf	??_floorf,f
 10305  1182  0B89               	decfsz	9,f
 10306  1183  297E               	goto	u5665
 10307  1184  0831               	movf	??_floorf,w
 10308  1185  1D03               	btfss	3,2
 10309  1186  298B               	goto	l3949
 10310  1187  3000               	movlw	0
 10311  1188  00C0               	movwf	floorf@u+3
 10312  1189  3000               	movlw	0
 10313  118A  29A3               	goto	L10
 10314  118B                     l3949:
 10315  118B  083D               	movf	floorf@u,w
 10316  118C  00B1               	movwf	??_floorf
 10317  118D  083E               	movf	floorf@u+1,w
 10318  118E  00B2               	movwf	??_floorf+1
 10319  118F  083F               	movf	floorf@u+2,w
 10320  1190  00B3               	movwf	??_floorf+2
 10321  1191  0840               	movf	floorf@u+3,w
 10322  1192  00B4               	movwf	??_floorf+3
 10323  1193  3001               	movlw	1
 10324  1194                     u5685:
 10325  1194  35B1               	lslf	??_floorf,f
 10326  1195  0DB2               	rlf	??_floorf+1,f
 10327  1196  0DB3               	rlf	??_floorf+2,f
 10328  1197  0DB4               	rlf	??_floorf+3,f
 10329  1198  0B89               	decfsz	9,f
 10330  1199  2994               	goto	u5685
 10331  119A  0834               	movf	??_floorf+3,w
 10332  119B  0433               	iorwf	??_floorf+2,w
 10333  119C  0432               	iorwf	??_floorf+1,w
 10334  119D  0431               	iorwf	??_floorf,w
 10335  119E  1903               	skipnz
 10336  119F  29A8               	goto	l1177
 10337  11A0  30BF               	movlw	191
 10338  11A1  00C0               	movwf	floorf@u+3
 10339  11A2  3080               	movlw	128
 10340  11A3                     L10:
 10341  11A3  00BF               	movwf	floorf@u+2
 10342  11A4  3000               	movlw	0
 10343  11A5  00BE               	movwf	floorf@u+1
 10344  11A6  3000               	movlw	0
 10345  11A7  00BD               	movwf	floorf@u
 10346  11A8                     l1177:
 10347  11A8  0840               	movf	floorf@u+3,w
 10348  11A9  00B0               	movwf	?_floorf+3
 10349  11AA  083F               	movf	floorf@u+2,w
 10350  11AB  00AF               	movwf	?_floorf+2
 10351  11AC  083E               	movf	floorf@u+1,w
 10352  11AD  00AE               	movwf	?_floorf+1
 10353  11AE  083D               	movf	floorf@u,w
 10354  11AF  00AD               	movwf	?_floorf
 10355  11B0  0008               	return
 10356  11B1                     __end_of_floorf:
 10357                           
 10358                           	psect	text20
 10359  1E78                     __ptext20:	
 10360 ;; *************** function ___fpclassifyf *****************
 10361 ;; Defined at:
 10362 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
 10363 ;; Parameters:    Size  Location     Type
 10364 ;;  x               4    0[COMMON] float 
 10365 ;; Auto vars:     Size  Location     Type
 10366 ;;  u               4    2[BANK0 ] struct .
 10367 ;;  e               2    0[BANK0 ] int 
 10368 ;; Return value:  Size  Location     Type
 10369 ;;                  2    0[COMMON] int 
 10370 ;; Registers used:
 10371 ;;		wreg, status,2, status,0
 10372 ;; Tracked objects:
 10373 ;;		On entry : 1F/1
 10374 ;;		On exit  : 1F/0
 10375 ;;		Unchanged: 0/0
 10376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10377 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10378 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10379 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10380 ;;      Totals:        10       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10381 ;;Total ram usage:       16 bytes
 10382 ;; Hardware stack levels used: 1
 10383 ;; This function calls:
 10384 ;;		Nothing
 10385 ;; This function is called by:
 10386 ;;		_efgtoa
 10387 ;; This function uses a non-reentrant model
 10388 ;;
 10389                           
 10390                           
 10391                           ;psect for function ___fpclassifyf
 10392  1E78                     ___fpclassifyf:
 10393                           
 10394                           ;incstack = 0
 10395                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
 10396  1E78  0022               	movlb	2	; select bank2
 10397  1E79  0856               	movf	(___fpclassifyf@F465+3)^(0+256),w
 10398  1E7A  0020               	movlb	0	; select bank0
 10399  1E7B  00A5               	movwf	___fpclassifyf@u+3
 10400  1E7C  0022               	movlb	2	; select bank2
 10401  1E7D  0855               	movf	(___fpclassifyf@F465+2)^(0+256),w
 10402  1E7E  0020               	movlb	0	; select bank0
 10403  1E7F  00A4               	movwf	___fpclassifyf@u+2
 10404  1E80  0022               	movlb	2	; select bank2
 10405  1E81  0854               	movf	(___fpclassifyf@F465+1)^(0+256),w
 10406  1E82  0020               	movlb	0	; select bank0
 10407  1E83  00A3               	movwf	___fpclassifyf@u+1
 10408  1E84  0022               	movlb	2	; select bank2
 10409  1E85  0853               	movf	___fpclassifyf@F465^(0+256),w
 10410  1E86  0020               	movlb	0	; select bank0
 10411  1E87  00A2               	movwf	___fpclassifyf@u
 10412  1E88  0873               	movf	___fpclassifyf@x+3,w
 10413  1E89  00A5               	movwf	___fpclassifyf@u+3
 10414  1E8A  0872               	movf	___fpclassifyf@x+2,w
 10415  1E8B  00A4               	movwf	___fpclassifyf@u+2
 10416  1E8C  0871               	movf	___fpclassifyf@x+1,w
 10417  1E8D  00A3               	movwf	___fpclassifyf@u+1
 10418  1E8E  0870               	movf	___fpclassifyf@x,w
 10419  1E8F  00A2               	movwf	___fpclassifyf@u
 10420  1E90  0822               	movf	___fpclassifyf@u,w
 10421  1E91  00F4               	movwf	??___fpclassifyf
 10422  1E92  0823               	movf	___fpclassifyf@u+1,w
 10423  1E93  00F5               	movwf	??___fpclassifyf+1
 10424  1E94  0824               	movf	___fpclassifyf@u+2,w
 10425  1E95  00F6               	movwf	??___fpclassifyf+2
 10426  1E96  0825               	movf	___fpclassifyf@u+3,w
 10427  1E97  00F7               	movwf	??___fpclassifyf+3
 10428  1E98  3017               	movlw	23
 10429  1E99                     u5475:
 10430  1E99  36F7               	lsrf	??___fpclassifyf+3,f
 10431  1E9A  0CF6               	rrf	??___fpclassifyf+2,f
 10432  1E9B  0CF5               	rrf	??___fpclassifyf+1,f
 10433  1E9C  0CF4               	rrf	??___fpclassifyf,f
 10434  1E9D  0B89               	decfsz	9,f
 10435  1E9E  2E99               	goto	u5475
 10436  1E9F  30FF               	movlw	255
 10437  1EA0  0574               	andwf	??___fpclassifyf,w
 10438  1EA1  00A0               	movwf	___fpclassifyf@e
 10439  1EA2  3000               	movlw	0
 10440  1EA3  0575               	andwf	??___fpclassifyf+1,w
 10441  1EA4  00A1               	movwf	___fpclassifyf@e+1
 10442  1EA5  0820               	movf	___fpclassifyf@e,w
 10443  1EA6  0421               	iorwf	___fpclassifyf@e+1,w
 10444  1EA7  1D03               	btfss	3,2
 10445  1EA8  2EC8               	goto	l3901
 10446  1EA9  0822               	movf	___fpclassifyf@u,w
 10447  1EAA  00F4               	movwf	??___fpclassifyf
 10448  1EAB  0823               	movf	___fpclassifyf@u+1,w
 10449  1EAC  00F5               	movwf	??___fpclassifyf+1
 10450  1EAD  0824               	movf	___fpclassifyf@u+2,w
 10451  1EAE  00F6               	movwf	??___fpclassifyf+2
 10452  1EAF  0825               	movf	___fpclassifyf@u+3,w
 10453  1EB0  00F7               	movwf	??___fpclassifyf+3
 10454  1EB1  3001               	movlw	1
 10455  1EB2                     u5495:
 10456  1EB2  35F4               	lslf	??___fpclassifyf,f
 10457  1EB3  0DF5               	rlf	??___fpclassifyf+1,f
 10458  1EB4  0DF6               	rlf	??___fpclassifyf+2,f
 10459  1EB5  0DF7               	rlf	??___fpclassifyf+3,f
 10460  1EB6  0B89               	decfsz	9,f
 10461  1EB7  2EB2               	goto	u5495
 10462  1EB8  0877               	movf	??___fpclassifyf+3,w
 10463  1EB9  0476               	iorwf	??___fpclassifyf+2,w
 10464  1EBA  0475               	iorwf	??___fpclassifyf+1,w
 10465  1EBB  0474               	iorwf	??___fpclassifyf,w
 10466  1EBC  1D03               	skipz
 10467  1EBD  2EC3               	goto	l3897
 10468  1EBE  3002               	movlw	2
 10469  1EBF  00F0               	movwf	?___fpclassifyf
 10470  1EC0  3000               	movlw	0
 10471  1EC1  00F1               	movwf	?___fpclassifyf+1
 10472  1EC2  0008               	return
 10473  1EC3                     l3897:
 10474  1EC3  3003               	movlw	3
 10475  1EC4  00F0               	movwf	?___fpclassifyf
 10476  1EC5  3000               	movlw	0
 10477  1EC6  00F1               	movwf	?___fpclassifyf+1
 10478  1EC7  0008               	return
 10479  1EC8                     l3901:
 10480  1EC8  0A20               	incf	___fpclassifyf@e,w
 10481  1EC9  0421               	iorwf	___fpclassifyf@e+1,w
 10482  1ECA  1D03               	btfss	3,2
 10483  1ECB  2EEB               	goto	l3907
 10484  1ECC  0822               	movf	___fpclassifyf@u,w
 10485  1ECD  00F4               	movwf	??___fpclassifyf
 10486  1ECE  0823               	movf	___fpclassifyf@u+1,w
 10487  1ECF  00F5               	movwf	??___fpclassifyf+1
 10488  1ED0  0824               	movf	___fpclassifyf@u+2,w
 10489  1ED1  00F6               	movwf	??___fpclassifyf+2
 10490  1ED2  0825               	movf	___fpclassifyf@u+3,w
 10491  1ED3  00F7               	movwf	??___fpclassifyf+3
 10492  1ED4  3009               	movlw	9
 10493  1ED5                     u5525:
 10494  1ED5  35F4               	lslf	??___fpclassifyf,f
 10495  1ED6  0DF5               	rlf	??___fpclassifyf+1,f
 10496  1ED7  0DF6               	rlf	??___fpclassifyf+2,f
 10497  1ED8  0DF7               	rlf	??___fpclassifyf+3,f
 10498  1ED9  0B89               	decfsz	9,f
 10499  1EDA  2ED5               	goto	u5525
 10500  1EDB  0877               	movf	??___fpclassifyf+3,w
 10501  1EDC  0476               	iorwf	??___fpclassifyf+2,w
 10502  1EDD  0475               	iorwf	??___fpclassifyf+1,w
 10503  1EDE  0474               	iorwf	??___fpclassifyf,w
 10504  1EDF  1D03               	btfss	3,2
 10505  1EE0  2EE3               	goto	u5530
 10506  1EE1  3001               	movlw	1
 10507  1EE2  2EE4               	goto	u5540
 10508  1EE3                     u5530:
 10509  1EE3  3000               	movlw	0
 10510  1EE4                     u5540:
 10511  1EE4  00F8               	movwf	??___fpclassifyf+4
 10512  1EE5  01F9               	clrf	??___fpclassifyf+5
 10513  1EE6  0878               	movf	??___fpclassifyf+4,w
 10514  1EE7  00F0               	movwf	?___fpclassifyf
 10515  1EE8  0879               	movf	??___fpclassifyf+5,w
 10516  1EE9  00F1               	movwf	?___fpclassifyf+1
 10517  1EEA  0008               	return
 10518  1EEB                     l3907:
 10519  1EEB  3004               	movlw	4
 10520  1EEC  00F0               	movwf	?___fpclassifyf
 10521  1EED  3000               	movlw	0
 10522  1EEE  00F1               	movwf	?___fpclassifyf+1
 10523  1EEF  0008               	return
 10524  1EF0                     __end_of___fpclassifyf:
 10525                           
 10526                           	psect	text21
 10527  1E13                     __ptext21:	
 10528 ;; *************** function ___fltol *****************
 10529 ;; Defined at:
 10530 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
 10531 ;; Parameters:    Size  Location     Type
 10532 ;;  f1              4   40[BANK0 ] int 
 10533 ;; Auto vars:     Size  Location     Type
 10534 ;;  exp1            1   13[COMMON] unsigned char 
 10535 ;;  sign1           1   12[COMMON] unsigned char 
 10536 ;; Return value:  Size  Location     Type
 10537 ;;                  4   40[BANK0 ] long 
 10538 ;; Registers used:
 10539 ;;		wreg, status,2, status,0
 10540 ;; Tracked objects:
 10541 ;;		On entry : 1F/0
 10542 ;;		On exit  : 1F/0
 10543 ;;		Unchanged: 0/0
 10544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10545 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10546 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10547 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10548 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10549 ;;Total ram usage:       11 bytes
 10550 ;; Hardware stack levels used: 1
 10551 ;; This function calls:
 10552 ;;		Nothing
 10553 ;; This function is called by:
 10554 ;;		_main
 10555 ;;		_writeEmissivity
 10556 ;;		_efgtoa
 10557 ;; This function uses a non-reentrant model
 10558 ;;
 10559                           
 10560                           
 10561                           ;psect for function ___fltol
 10562  1E13                     ___fltol:
 10563                           
 10564                           ;incstack = 0
 10565                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 10566  1E13  1003               	clrc
 10567  1E14  0D4A               	rlf	___fltol@f1+2,w
 10568  1E15  0D4B               	rlf	___fltol@f1+3,w
 10569  1E16  00CC               	movwf	??___fltol
 10570  1E17  084C               	movf	??___fltol,w
 10571  1E18  00FD               	movwf	___fltol@exp1
 10572  1E19  087D               	movf	___fltol@exp1,w
 10573  1E1A  1D03               	btfss	3,2
 10574  1E1B  2E25               	goto	l3547
 10575  1E1C                     l3543:
 10576  1E1C  3000               	movlw	0
 10577  1E1D  00CB               	movwf	?___fltol+3
 10578  1E1E  3000               	movlw	0
 10579  1E1F  00CA               	movwf	?___fltol+2
 10580  1E20  3000               	movlw	0
 10581  1E21  00C9               	movwf	?___fltol+1
 10582  1E22  3000               	movlw	0
 10583  1E23  00C8               	movwf	?___fltol
 10584  1E24  0008               	return
 10585  1E25                     l3547:
 10586  1E25  0848               	movf	___fltol@f1,w
 10587  1E26  00CC               	movwf	??___fltol
 10588  1E27  0849               	movf	___fltol@f1+1,w
 10589  1E28  00CD               	movwf	??___fltol+1
 10590  1E29  084A               	movf	___fltol@f1+2,w
 10591  1E2A  00CE               	movwf	??___fltol+2
 10592  1E2B  084B               	movf	___fltol@f1+3,w
 10593  1E2C  00CF               	movwf	??___fltol+3
 10594  1E2D  301F               	movlw	31
 10595  1E2E                     u4795:
 10596  1E2E  36CF               	lsrf	??___fltol+3,f
 10597  1E2F  0CCE               	rrf	??___fltol+2,f
 10598  1E30  0CCD               	rrf	??___fltol+1,f
 10599  1E31  0CCC               	rrf	??___fltol,f
 10600  1E32  0B89               	decfsz	9,f
 10601  1E33  2E2E               	goto	u4795
 10602  1E34  084C               	movf	??___fltol,w
 10603  1E35  00D0               	movwf	??___fltol+4
 10604  1E36  0850               	movf	??___fltol+4,w
 10605  1E37  00FC               	movwf	___fltol@sign1
 10606  1E38  17CA               	bsf	___fltol@f1+2,7
 10607  1E39  30FF               	movlw	255
 10608  1E3A  05C8               	andwf	___fltol@f1,f
 10609  1E3B  30FF               	movlw	255
 10610  1E3C  05C9               	andwf	___fltol@f1+1,f
 10611  1E3D  30FF               	movlw	255
 10612  1E3E  05CA               	andwf	___fltol@f1+2,f
 10613  1E3F  3000               	movlw	0
 10614  1E40  05CB               	andwf	___fltol@f1+3,f
 10615  1E41  3096               	movlw	150
 10616  1E42  02FD               	subwf	___fltol@exp1,f
 10617  1E43  1FFD               	btfss	___fltol@exp1,7
 10618  1E44  2E58               	goto	l3565
 10619  1E45  087D               	movf	___fltol@exp1,w
 10620  1E46  3A80               	xorlw	128
 10621  1E47  3E97               	addlw	151
 10622  1E48  1C03               	btfss	3,0
 10623  1E49  2E1C               	goto	l3543
 10624  1E4A                     l3563:
 10625  1E4A  3001               	movlw	1
 10626  1E4B                     u4825:
 10627  1E4B  36CB               	lsrf	___fltol@f1+3,f
 10628  1E4C  0CCA               	rrf	___fltol@f1+2,f
 10629  1E4D  0CC9               	rrf	___fltol@f1+1,f
 10630  1E4E  0CC8               	rrf	___fltol@f1,f
 10631  1E4F  0B89               	decfsz	9,f
 10632  1E50  2E4B               	goto	u4825
 10633  1E51  3001               	movlw	1
 10634  1E52  00CC               	movwf	??___fltol
 10635  1E53  084C               	movf	??___fltol,w
 10636  1E54  07FD               	addwf	___fltol@exp1,f
 10637  1E55  1903               	btfsc	3,2
 10638  1E56  2E69               	goto	l3573
 10639  1E57  2E4A               	goto	l3563
 10640  1E58                     l3565:
 10641  1E58  3020               	movlw	32
 10642  1E59  027D               	subwf	___fltol@exp1,w
 10643  1E5A  1803               	btfsc	3,0
 10644  1E5B  2E1C               	goto	l3543
 10645  1E5C                     l608:
 10646  1E5C  087D               	movf	___fltol@exp1,w
 10647  1E5D  1903               	btfsc	3,2
 10648  1E5E  2E69               	goto	l3573
 10649  1E5F  3001               	movlw	1
 10650  1E60                     u4855:
 10651  1E60  35C8               	lslf	___fltol@f1,f
 10652  1E61  0DC9               	rlf	___fltol@f1+1,f
 10653  1E62  0DCA               	rlf	___fltol@f1+2,f
 10654  1E63  0DCB               	rlf	___fltol@f1+3,f
 10655  1E64  0B89               	decfsz	9,f
 10656  1E65  2E60               	goto	u4855
 10657  1E66  3001               	movlw	1
 10658  1E67  02FD               	subwf	___fltol@exp1,f
 10659  1E68  2E5C               	goto	l608
 10660  1E69                     l3573:
 10661  1E69  087C               	movf	___fltol@sign1,w
 10662  1E6A  1903               	btfsc	3,2
 10663  1E6B  0008               	return
 10664  1E6C  09C8               	comf	___fltol@f1,f
 10665  1E6D  09C9               	comf	___fltol@f1+1,f
 10666  1E6E  09CA               	comf	___fltol@f1+2,f
 10667  1E6F  09CB               	comf	___fltol@f1+3,f
 10668  1E70  0AC8               	incf	___fltol@f1,f
 10669  1E71  1903               	skipnz
 10670  1E72  0AC9               	incf	___fltol@f1+1,f
 10671  1E73  1903               	skipnz
 10672  1E74  0ACA               	incf	___fltol@f1+2,f
 10673  1E75  1903               	skipnz
 10674  1E76  0ACB               	incf	___fltol@f1+3,f
 10675  1E77  0008               	return
 10676  1E78                     __end_of___fltol:
 10677                           
 10678                           	psect	text22
 10679  1A84                     __ptext22:	
 10680 ;; *************** function ___flsub *****************
 10681 ;; Defined at:
 10682 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
 10683 ;; Parameters:    Size  Location     Type
 10684 ;;  a               4   60[BANK0 ] long 
 10685 ;;  b               4   64[BANK0 ] long 
 10686 ;; Auto vars:     Size  Location     Type
 10687 ;;		None
 10688 ;; Return value:  Size  Location     Type
 10689 ;;                  4   60[BANK0 ] long 
 10690 ;; Registers used:
 10691 ;;		wreg, status,2, status,0, pclath, cstack
 10692 ;; Tracked objects:
 10693 ;;		On entry : 1F/0
 10694 ;;		On exit  : 1F/0
 10695 ;;		Unchanged: 0/0
 10696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10697 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10700 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10701 ;;Total ram usage:        8 bytes
 10702 ;; Hardware stack levels used: 1
 10703 ;; Hardware stack levels required when called: 1
 10704 ;; This function calls:
 10705 ;;		___fladd
 10706 ;; This function is called by:
 10707 ;;		_efgtoa
 10708 ;; This function uses a non-reentrant model
 10709 ;;
 10710                           
 10711                           
 10712                           ;psect for function ___flsub
 10713  1A84                     ___flsub:
 10714                           
 10715                           ;incstack = 0
 10716                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 10717  1A84  3080               	movlw	128
 10718  1A85  06DF               	xorwf	___flsub@a+3,f
 10719  1A86  0863               	movf	___flsub@b+3,w
 10720  1A87  00CB               	movwf	___fladd@b+3
 10721  1A88  0862               	movf	___flsub@b+2,w
 10722  1A89  00CA               	movwf	___fladd@b+2
 10723  1A8A  0861               	movf	___flsub@b+1,w
 10724  1A8B  00C9               	movwf	___fladd@b+1
 10725  1A8C  0860               	movf	___flsub@b,w
 10726  1A8D  00C8               	movwf	___fladd@b
 10727  1A8E  085F               	movf	___flsub@a+3,w
 10728  1A8F  00CF               	movwf	___fladd@a+3
 10729  1A90  085E               	movf	___flsub@a+2,w
 10730  1A91  00CE               	movwf	___fladd@a+2
 10731  1A92  085D               	movf	___flsub@a+1,w
 10732  1A93  00CD               	movwf	___fladd@a+1
 10733  1A94  085C               	movf	___flsub@a,w
 10734  1A95  00CC               	movwf	___fladd@a
 10735  1A96  3188  203D         	fcall	___fladd
 10736  1A98  084B               	movf	?___fladd+3,w
 10737  1A99  00DF               	movwf	?___flsub+3
 10738  1A9A  084A               	movf	?___fladd+2,w
 10739  1A9B  00DE               	movwf	?___flsub+2
 10740  1A9C  0849               	movf	?___fladd+1,w
 10741  1A9D  00DD               	movwf	?___flsub+1
 10742  1A9E  0848               	movf	?___fladd,w
 10743  1A9F  00DC               	movwf	?___flsub
 10744  1AA0  0008               	return
 10745  1AA1                     __end_of___flsub:
 10746                           
 10747                           	psect	text23
 10748  083D                     __ptext23:	
 10749 ;; *************** function ___fladd *****************
 10750 ;; Defined at:
 10751 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
 10752 ;; Parameters:    Size  Location     Type
 10753 ;;  b               4   40[BANK0 ] long 
 10754 ;;  a               4   44[BANK0 ] long 
 10755 ;; Auto vars:     Size  Location     Type
 10756 ;;  grs             1   59[BANK0 ] unsigned char 
 10757 ;;  bexp            1   58[BANK0 ] unsigned char 
 10758 ;;  aexp            1   57[BANK0 ] unsigned char 
 10759 ;;  signs           1   56[BANK0 ] unsigned char 
 10760 ;; Return value:  Size  Location     Type
 10761 ;;                  4   40[BANK0 ] unsigned char 
 10762 ;; Registers used:
 10763 ;;		wreg, status,2, status,0
 10764 ;; Tracked objects:
 10765 ;;		On entry : 1F/0
 10766 ;;		On exit  : 1F/0
 10767 ;;		Unchanged: 0/0
 10768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10769 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10770 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10771 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10772 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10773 ;;Total ram usage:       20 bytes
 10774 ;; Hardware stack levels used: 1
 10775 ;; This function calls:
 10776 ;;		Nothing
 10777 ;; This function is called by:
 10778 ;;		_main
 10779 ;;		___flsub
 10780 ;;		_efgtoa
 10781 ;; This function uses a non-reentrant model
 10782 ;;
 10783                           
 10784                           
 10785                           ;psect for function ___fladd
 10786  083D                     ___fladd:
 10787                           
 10788                           ;incstack = 0
 10789                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 10790  083D  084B               	movf	___fladd@b+3,w
 10791  083E  3980               	andlw	128
 10792  083F  00D0               	movwf	??___fladd
 10793  0840  0850               	movf	??___fladd,w
 10794  0841  00D8               	movwf	___fladd@signs
 10795  0842  354B               	lslf	___fladd@b+3,w
 10796  0843  00D0               	movwf	??___fladd
 10797  0844  0850               	movf	??___fladd,w
 10798  0845  00DA               	movwf	___fladd@bexp
 10799  0846  1BCA               	btfsc	___fladd@b+2,7
 10800  0847  145A               	bsf	___fladd@bexp,0
 10801  0848  085A               	movf	___fladd@bexp,w
 10802  0849  1903               	btfsc	3,2
 10803  084A  2859               	goto	l3121
 10804  084B  0A5A               	incf	___fladd@bexp,w
 10805  084C  1D03               	btfss	3,2
 10806  084D  2856               	goto	l3117
 10807  084E  3000               	movlw	0
 10808  084F  00CB               	movwf	___fladd@b+3
 10809  0850  3000               	movlw	0
 10810  0851  00CA               	movwf	___fladd@b+2
 10811  0852  3000               	movlw	0
 10812  0853  00C9               	movwf	___fladd@b+1
 10813  0854  3000               	movlw	0
 10814  0855  00C8               	movwf	___fladd@b
 10815  0856                     l3117:
 10816  0856  17CA               	bsf	___fladd@b+2,7
 10817  0857  01CB               	clrf	___fladd@b+3
 10818  0858  2861               	goto	l3123
 10819  0859                     l3121:
 10820  0859  3000               	movlw	0
 10821  085A  00CB               	movwf	___fladd@b+3
 10822  085B  3000               	movlw	0
 10823  085C  00CA               	movwf	___fladd@b+2
 10824  085D  3000               	movlw	0
 10825  085E  00C9               	movwf	___fladd@b+1
 10826  085F  3000               	movlw	0
 10827  0860  00C8               	movwf	___fladd@b
 10828  0861                     l3123:
 10829  0861  084F               	movf	___fladd@a+3,w
 10830  0862  3980               	andlw	128
 10831  0863  00D0               	movwf	??___fladd
 10832  0864  0850               	movf	??___fladd,w
 10833  0865  00D9               	movwf	___fladd@aexp
 10834  0866  0859               	movf	___fladd@aexp,w
 10835  0867  0658               	xorwf	___fladd@signs,w
 10836  0868  1D03               	btfss	3,2
 10837  0869  1758               	bsf	___fladd@signs,6
 10838  086A  354F               	lslf	___fladd@a+3,w
 10839  086B  00D0               	movwf	??___fladd
 10840  086C  0850               	movf	??___fladd,w
 10841  086D  00D9               	movwf	___fladd@aexp
 10842  086E  1BCE               	btfsc	___fladd@a+2,7
 10843  086F  1459               	bsf	___fladd@aexp,0
 10844  0870  0859               	movf	___fladd@aexp,w
 10845  0871  1903               	btfsc	3,2
 10846  0872  2881               	goto	l3145
 10847  0873  0A59               	incf	___fladd@aexp,w
 10848  0874  1D03               	btfss	3,2
 10849  0875  287E               	goto	l3141
 10850  0876  3000               	movlw	0
 10851  0877  00CF               	movwf	___fladd@a+3
 10852  0878  3000               	movlw	0
 10853  0879  00CE               	movwf	___fladd@a+2
 10854  087A  3000               	movlw	0
 10855  087B  00CD               	movwf	___fladd@a+1
 10856  087C  3000               	movlw	0
 10857  087D  00CC               	movwf	___fladd@a
 10858  087E                     l3141:
 10859  087E  17CE               	bsf	___fladd@a+2,7
 10860  087F  01CF               	clrf	___fladd@a+3
 10861  0880  2889               	goto	l708
 10862  0881                     l3145:
 10863  0881  3000               	movlw	0
 10864  0882  00CF               	movwf	___fladd@a+3
 10865  0883  3000               	movlw	0
 10866  0884  00CE               	movwf	___fladd@a+2
 10867  0885  3000               	movlw	0
 10868  0886  00CD               	movwf	___fladd@a+1
 10869  0887  3000               	movlw	0
 10870  0888  00CC               	movwf	___fladd@a
 10871  0889                     l708:
 10872  0889  085A               	movf	___fladd@bexp,w
 10873  088A  0259               	subwf	___fladd@aexp,w
 10874  088B  1803               	skipnc
 10875  088C  28CF               	goto	l3181
 10876  088D  1F58               	btfss	___fladd@signs,6
 10877  088E  2893               	goto	l3151
 10878  088F  3080               	movlw	128
 10879  0890  00D0               	movwf	??___fladd
 10880  0891  0850               	movf	??___fladd,w
 10881  0892  06D8               	xorwf	___fladd@signs,f
 10882  0893                     l3151:
 10883  0893  085A               	movf	___fladd@bexp,w
 10884  0894  00D0               	movwf	??___fladd
 10885  0895  0850               	movf	??___fladd,w
 10886  0896  00DB               	movwf	___fladd@grs
 10887  0897  0859               	movf	___fladd@aexp,w
 10888  0898  00D0               	movwf	??___fladd
 10889  0899  0850               	movf	??___fladd,w
 10890  089A  00DA               	movwf	___fladd@bexp
 10891  089B  085B               	movf	___fladd@grs,w
 10892  089C  00D0               	movwf	??___fladd
 10893  089D  0850               	movf	??___fladd,w
 10894  089E  00D9               	movwf	___fladd@aexp
 10895  089F  0848               	movf	___fladd@b,w
 10896  08A0  00D0               	movwf	??___fladd
 10897  08A1  0850               	movf	??___fladd,w
 10898  08A2  00DB               	movwf	___fladd@grs
 10899  08A3  084C               	movf	___fladd@a,w
 10900  08A4  00D0               	movwf	??___fladd
 10901  08A5  0850               	movf	??___fladd,w
 10902  08A6  00C8               	movwf	___fladd@b
 10903  08A7  085B               	movf	___fladd@grs,w
 10904  08A8  00D0               	movwf	??___fladd
 10905  08A9  0850               	movf	??___fladd,w
 10906  08AA  00CC               	movwf	___fladd@a
 10907  08AB  0849               	movf	___fladd@b+1,w
 10908  08AC  00D0               	movwf	??___fladd
 10909  08AD  0850               	movf	??___fladd,w
 10910  08AE  00DB               	movwf	___fladd@grs
 10911  08AF  084D               	movf	___fladd@a+1,w
 10912  08B0  00D0               	movwf	??___fladd
 10913  08B1  0850               	movf	??___fladd,w
 10914  08B2  00C9               	movwf	___fladd@b+1
 10915  08B3  085B               	movf	___fladd@grs,w
 10916  08B4  00D0               	movwf	??___fladd
 10917  08B5  0850               	movf	??___fladd,w
 10918  08B6  00CD               	movwf	___fladd@a+1
 10919  08B7  084A               	movf	___fladd@b+2,w
 10920  08B8  00D0               	movwf	??___fladd
 10921  08B9  0850               	movf	??___fladd,w
 10922  08BA  00DB               	movwf	___fladd@grs
 10923  08BB  084E               	movf	___fladd@a+2,w
 10924  08BC  00D0               	movwf	??___fladd
 10925  08BD  0850               	movf	??___fladd,w
 10926  08BE  00CA               	movwf	___fladd@b+2
 10927  08BF  085B               	movf	___fladd@grs,w
 10928  08C0  00D0               	movwf	??___fladd
 10929  08C1  0850               	movf	??___fladd,w
 10930  08C2  00CE               	movwf	___fladd@a+2
 10931  08C3  084B               	movf	___fladd@b+3,w
 10932  08C4  00D0               	movwf	??___fladd
 10933  08C5  0850               	movf	??___fladd,w
 10934  08C6  00DB               	movwf	___fladd@grs
 10935  08C7  084F               	movf	___fladd@a+3,w
 10936  08C8  00D0               	movwf	??___fladd
 10937  08C9  0850               	movf	??___fladd,w
 10938  08CA  00CB               	movwf	___fladd@b+3
 10939  08CB  085B               	movf	___fladd@grs,w
 10940  08CC  00D0               	movwf	??___fladd
 10941  08CD  0850               	movf	??___fladd,w
 10942  08CE  00CF               	movwf	___fladd@a+3
 10943  08CF                     l3181:
 10944  08CF  01DB               	clrf	___fladd@grs
 10945  08D0  0859               	movf	___fladd@aexp,w
 10946  08D1  00D0               	movwf	??___fladd
 10947  08D2  01D1               	clrf	??___fladd+1
 10948  08D3  0851               	movf	??___fladd+1,w
 10949  08D4  00D3               	movwf	??___fladd+3
 10950  08D5  085A               	movf	___fladd@bexp,w
 10951  08D6  0250               	subwf	??___fladd,w
 10952  08D7  00D2               	movwf	??___fladd+2
 10953  08D8  1C03               	skipc
 10954  08D9  03D3               	decf	??___fladd+3,f
 10955  08DA  0853               	movf	??___fladd+3,w
 10956  08DB  3A80               	xorlw	128
 10957  08DC  00D4               	movwf	??___fladd+4
 10958  08DD  3080               	movlw	128
 10959  08DE  0254               	subwf	??___fladd+4,w
 10960  08DF  1D03               	skipz
 10961  08E0  28E3               	goto	u3825
 10962  08E1  301A               	movlw	26
 10963  08E2  0252               	subwf	??___fladd+2,w
 10964  08E3                     u3825:
 10965  08E3  1C03               	skipc
 10966  08E4  2917               	goto	l3199
 10967  08E5  0020               	movlb	0	; select bank0
 10968  08E6  084B               	movf	___fladd@b+3,w
 10969  08E7  044A               	iorwf	___fladd@b+2,w
 10970  08E8  0449               	iorwf	___fladd@b+1,w
 10971  08E9  0448               	iorwf	___fladd@b,w
 10972  08EA  1903               	btfsc	3,2
 10973  08EB  28EE               	goto	u3830
 10974  08EC  3001               	movlw	1
 10975  08ED  28EF               	goto	u3840
 10976  08EE                     u3830:
 10977  08EE  3000               	movlw	0
 10978  08EF                     u3840:
 10979  08EF  00D0               	movwf	??___fladd
 10980  08F0  0850               	movf	??___fladd,w
 10981  08F1  00DB               	movwf	___fladd@grs
 10982  08F2  3000               	movlw	0
 10983  08F3  00CB               	movwf	___fladd@b+3
 10984  08F4  3000               	movlw	0
 10985  08F5  00CA               	movwf	___fladd@b+2
 10986  08F6  3000               	movlw	0
 10987  08F7  00C9               	movwf	___fladd@b+1
 10988  08F8  3000               	movlw	0
 10989  08F9  00C8               	movwf	___fladd@b
 10990  08FA  0859               	movf	___fladd@aexp,w
 10991  08FB  00D0               	movwf	??___fladd
 10992  08FC  0850               	movf	??___fladd,w
 10993  08FD  00DA               	movwf	___fladd@bexp
 10994  08FE  291C               	goto	l712
 10995  08FF                     l714:
 10996  08FF  1C5B               	btfss	___fladd@grs,0
 10997  0900  2907               	goto	l3189
 10998  0901  365B               	lsrf	___fladd@grs,w
 10999  0902  3801               	iorlw	1
 11000  0903  00D0               	movwf	??___fladd
 11001  0904  0850               	movf	??___fladd,w
 11002  0905  00DB               	movwf	___fladd@grs
 11003  0906  2909               	goto	l3191
 11004  0907                     l3189:
 11005  0907  1003               	clrc
 11006  0908  0CDB               	rrf	___fladd@grs,f
 11007  0909                     l3191:
 11008  0909  1848               	btfsc	___fladd@b,0
 11009  090A  17DB               	bsf	___fladd@grs,7
 11010  090B  3001               	movlw	1
 11011  090C  00D0               	movwf	??___fladd
 11012  090D                     u3875:
 11013  090D  37CB               	asrf	___fladd@b+3,f
 11014  090E  0CCA               	rrf	___fladd@b+2,f
 11015  090F  0CC9               	rrf	___fladd@b+1,f
 11016  0910  0CC8               	rrf	___fladd@b,f
 11017  0911  0BD0               	decfsz	??___fladd& (0+127),f
 11018  0912  290D               	goto	u3875
 11019  0913  3001               	movlw	1
 11020  0914  00D0               	movwf	??___fladd
 11021  0915  0850               	movf	??___fladd,w
 11022  0916  07DA               	addwf	___fladd@bexp,f
 11023  0917                     l3199:
 11024  0917  0020               	movlb	0	; select bank0
 11025  0918  0859               	movf	___fladd@aexp,w
 11026  0919  025A               	subwf	___fladd@bexp,w
 11027  091A  1C03               	skipc
 11028  091B  28FF               	goto	l714
 11029  091C                     l712:
 11030  091C  1B58               	btfsc	___fladd@signs,6
 11031  091D  294D               	goto	l3225
 11032  091E  085A               	movf	___fladd@bexp,w
 11033  091F  1D03               	btfss	3,2
 11034  0920  292A               	goto	l3207
 11035  0921  3000               	movlw	0
 11036  0922  00CB               	movwf	?___fladd+3
 11037  0923  3000               	movlw	0
 11038  0924  00CA               	movwf	?___fladd+2
 11039  0925  3000               	movlw	0
 11040  0926  00C9               	movwf	?___fladd+1
 11041  0927  3000               	movlw	0
 11042  0928  00C8               	movwf	?___fladd
 11043  0929  0008               	return
 11044  092A                     l3207:
 11045  092A  084C               	movf	___fladd@a,w
 11046  092B  07C8               	addwf	___fladd@b,f
 11047  092C  084D               	movf	___fladd@a+1,w
 11048  092D  3DC9               	addwfc	___fladd@b+1,f
 11049  092E  084E               	movf	___fladd@a+2,w
 11050  092F  3DCA               	addwfc	___fladd@b+2,f
 11051  0930  084F               	movf	___fladd@a+3,w
 11052  0931  3DCB               	addwfc	___fladd@b+3,f
 11053  0932  1C4B               	btfss	___fladd@b+3,0
 11054  0933  29C7               	goto	l3259
 11055  0934  1C5B               	btfss	___fladd@grs,0
 11056  0935  293C               	goto	l3215
 11057  0936  365B               	lsrf	___fladd@grs,w
 11058  0937  3801               	iorlw	1
 11059  0938  00D0               	movwf	??___fladd
 11060  0939  0850               	movf	??___fladd,w
 11061  093A  00DB               	movwf	___fladd@grs
 11062  093B  293E               	goto	l3217
 11063  093C                     l3215:
 11064  093C  1003               	clrc
 11065  093D  0CDB               	rrf	___fladd@grs,f
 11066  093E                     l3217:
 11067  093E  1848               	btfsc	___fladd@b,0
 11068  093F  17DB               	bsf	___fladd@grs,7
 11069  0940  3001               	movlw	1
 11070  0941  00D0               	movwf	??___fladd
 11071  0942                     u3945:
 11072  0942  37CB               	asrf	___fladd@b+3,f
 11073  0943  0CCA               	rrf	___fladd@b+2,f
 11074  0944  0CC9               	rrf	___fladd@b+1,f
 11075  0945  0CC8               	rrf	___fladd@b,f
 11076  0946  0BD0               	decfsz	??___fladd& (0+127),f
 11077  0947  2942               	goto	u3945
 11078  0948  3001               	movlw	1
 11079  0949  00D0               	movwf	??___fladd
 11080  094A  0850               	movf	??___fladd,w
 11081  094B  07DA               	addwf	___fladd@bexp,f
 11082  094C  29C7               	goto	l3259
 11083  094D                     l3225:
 11084  094D  084B               	movf	___fladd@b+3,w
 11085  094E  3A80               	xorlw	128
 11086  094F  00D0               	movwf	??___fladd
 11087  0950  084F               	movf	___fladd@a+3,w
 11088  0951  3A80               	xorlw	128
 11089  0952  0250               	subwf	??___fladd,w
 11090  0953  1D03               	skipz
 11091  0954  295F               	goto	u3953
 11092  0955  084E               	movf	___fladd@a+2,w
 11093  0956  024A               	subwf	___fladd@b+2,w
 11094  0957  1D03               	skipz
 11095  0958  295F               	goto	u3953
 11096  0959  084D               	movf	___fladd@a+1,w
 11097  095A  0249               	subwf	___fladd@b+1,w
 11098  095B  1D03               	skipz
 11099  095C  295F               	goto	u3953
 11100  095D  084C               	movf	___fladd@a,w
 11101  095E  0248               	subwf	___fladd@b,w
 11102  095F                     u3953:
 11103  095F  1803               	skipnc
 11104  0960  2997               	goto	l3235
 11105  0961  30FF               	movlw	255
 11106  0962  00D0               	movwf	??___fladd
 11107  0963  30FF               	movlw	255
 11108  0964  00D1               	movwf	??___fladd+1
 11109  0965  30FF               	movlw	255
 11110  0966  00D2               	movwf	??___fladd+2
 11111  0967  30FF               	movlw	255
 11112  0968  00D3               	movwf	??___fladd+3
 11113  0969  0848               	movf	___fladd@b,w
 11114  096A  024C               	subwf	___fladd@a,w
 11115  096B  00D4               	movwf	??___fladd+4
 11116  096C  0849               	movf	___fladd@b+1,w
 11117  096D  3B4D               	subwfb	___fladd@a+1,w
 11118  096E  00D5               	movwf	??___fladd+5
 11119  096F  084A               	movf	___fladd@b+2,w
 11120  0970  3B4E               	subwfb	___fladd@a+2,w
 11121  0971  00D6               	movwf	??___fladd+6
 11122  0972  084B               	movf	___fladd@b+3,w
 11123  0973  3B4F               	subwfb	___fladd@a+3,w
 11124  0974  00D7               	movwf	??___fladd+7
 11125  0975  0854               	movf	??___fladd+4,w
 11126  0976  07D0               	addwf	??___fladd,f
 11127  0977  0855               	movf	??___fladd+5,w
 11128  0978  3DD1               	addwfc	??___fladd+1,f
 11129  0979  0856               	movf	??___fladd+6,w
 11130  097A  3DD2               	addwfc	??___fladd+2,f
 11131  097B  0857               	movf	??___fladd+7,w
 11132  097C  3DD3               	addwfc	??___fladd+3,f
 11133  097D  0853               	movf	??___fladd+3,w
 11134  097E  00CB               	movwf	___fladd@b+3
 11135  097F  0852               	movf	??___fladd+2,w
 11136  0980  00CA               	movwf	___fladd@b+2
 11137  0981  0851               	movf	??___fladd+1,w
 11138  0982  00C9               	movwf	___fladd@b+1
 11139  0983  0850               	movf	??___fladd,w
 11140  0984  00C8               	movwf	___fladd@b
 11141  0985  3080               	movlw	128
 11142  0986  00D0               	movwf	??___fladd
 11143  0987  0850               	movf	??___fladd,w
 11144  0988  06D8               	xorwf	___fladd@signs,f
 11145  0989  09DB               	comf	___fladd@grs,f
 11146  098A  0ADB               	incf	___fladd@grs,f
 11147  098B  085B               	movf	___fladd@grs,w
 11148  098C  1D03               	btfss	3,2
 11149  098D  299F               	goto	l729
 11150  098E  3001               	movlw	1
 11151  098F  07C8               	addwf	___fladd@b,f
 11152  0990  3000               	movlw	0
 11153  0991  3DC9               	addwfc	___fladd@b+1,f
 11154  0992  3000               	movlw	0
 11155  0993  3DCA               	addwfc	___fladd@b+2,f
 11156  0994  3000               	movlw	0
 11157  0995  3DCB               	addwfc	___fladd@b+3,f
 11158  0996  299F               	goto	l729
 11159  0997                     l3235:
 11160  0997  084C               	movf	___fladd@a,w
 11161  0998  02C8               	subwf	___fladd@b,f
 11162  0999  084D               	movf	___fladd@a+1,w
 11163  099A  3BC9               	subwfb	___fladd@b+1,f
 11164  099B  084E               	movf	___fladd@a+2,w
 11165  099C  3BCA               	subwfb	___fladd@b+2,f
 11166  099D  084F               	movf	___fladd@a+3,w
 11167  099E  3BCB               	subwfb	___fladd@b+3,f
 11168  099F                     l729:
 11169  099F  084B               	movf	___fladd@b+3,w
 11170  09A0  044A               	iorwf	___fladd@b+2,w
 11171  09A1  0449               	iorwf	___fladd@b+1,w
 11172  09A2  0448               	iorwf	___fladd@b,w
 11173  09A3  1D03               	skipz
 11174  09A4  29C5               	goto	l3257
 11175  09A5  085B               	movf	___fladd@grs,w
 11176  09A6  1D03               	btfss	3,2
 11177  09A7  29C5               	goto	l3257
 11178  09A8  3000               	movlw	0
 11179  09A9  00CB               	movwf	?___fladd+3
 11180  09AA  3000               	movlw	0
 11181  09AB  00CA               	movwf	?___fladd+2
 11182  09AC  3000               	movlw	0
 11183  09AD  00C9               	movwf	?___fladd+1
 11184  09AE  3000               	movlw	0
 11185  09AF  00C8               	movwf	?___fladd
 11186  09B0  0008               	return
 11187  09B1                     l3243:
 11188  09B1  3001               	movlw	1
 11189  09B2                     u3995:
 11190  09B2  35C8               	lslf	___fladd@b,f
 11191  09B3  0DC9               	rlf	___fladd@b+1,f
 11192  09B4  0DCA               	rlf	___fladd@b+2,f
 11193  09B5  0DCB               	rlf	___fladd@b+3,f
 11194  09B6  0B89               	decfsz	9,f
 11195  09B7  29B2               	goto	u3995
 11196  09B8  1BDB               	btfsc	___fladd@grs,7
 11197  09B9  1448               	bsf	___fladd@b,0
 11198  09BA  1C5B               	btfss	___fladd@grs,0
 11199  09BB  29BE               	goto	l3251
 11200  09BC  1403               	setc
 11201  09BD  29BF               	goto	L11
 11202  09BE                     l3251:
 11203  09BE  1003               	clrc
 11204  09BF                     L11:
 11205  09BF  0DDB               	rlf	___fladd@grs,f
 11206  09C0  085A               	movf	___fladd@bexp,w
 11207  09C1  1903               	btfsc	3,2
 11208  09C2  29C5               	goto	l3257
 11209  09C3  3001               	movlw	1
 11210  09C4  02DA               	subwf	___fladd@bexp,f
 11211  09C5                     l3257:
 11212  09C5  1FCA               	btfss	___fladd@b+2,7
 11213  09C6  29B1               	goto	l3243
 11214  09C7                     l3259:
 11215  09C7  01D9               	clrf	___fladd@aexp
 11216  09C8  1FDB               	btfss	___fladd@grs,7
 11217  09C9  29D2               	goto	l3269
 11218  09CA  085B               	movf	___fladd@grs,w
 11219  09CB  397F               	andlw	127
 11220  09CC  1903               	btfsc	3,2
 11221  09CD  1848               	btfsc	___fladd@b,0
 11222  09CE  29D0               	goto	l3265
 11223  09CF  29D2               	goto	l3269
 11224  09D0                     l3265:
 11225  09D0  01D9               	clrf	___fladd@aexp
 11226  09D1  0AD9               	incf	___fladd@aexp,f
 11227  09D2                     l3269:
 11228  09D2  0859               	movf	___fladd@aexp,w
 11229  09D3  1903               	btfsc	3,2
 11230  09D4  29FE               	goto	l742
 11231  09D5  3001               	movlw	1
 11232  09D6  07C8               	addwf	___fladd@b,f
 11233  09D7  3000               	movlw	0
 11234  09D8  3DC9               	addwfc	___fladd@b+1,f
 11235  09D9  3000               	movlw	0
 11236  09DA  3DCA               	addwfc	___fladd@b+2,f
 11237  09DB  3000               	movlw	0
 11238  09DC  3DCB               	addwfc	___fladd@b+3,f
 11239  09DD  1C4B               	btfss	___fladd@b+3,0
 11240  09DE  29FE               	goto	l742
 11241  09DF  0848               	movf	___fladd@b,w
 11242  09E0  00D0               	movwf	??___fladd
 11243  09E1  0849               	movf	___fladd@b+1,w
 11244  09E2  00D1               	movwf	??___fladd+1
 11245  09E3  084A               	movf	___fladd@b+2,w
 11246  09E4  00D2               	movwf	??___fladd+2
 11247  09E5  084B               	movf	___fladd@b+3,w
 11248  09E6  00D3               	movwf	??___fladd+3
 11249  09E7  3001               	movlw	1
 11250  09E8  00D4               	movwf	??___fladd+4
 11251  09E9                     u4095:
 11252  09E9  37D3               	asrf	??___fladd+3,f
 11253  09EA  0CD2               	rrf	??___fladd+2,f
 11254  09EB  0CD1               	rrf	??___fladd+1,f
 11255  09EC  0CD0               	rrf	??___fladd,f
 11256  09ED  0BD4               	decfsz	??___fladd+4,f
 11257  09EE  29E9               	goto	u4095
 11258  09EF  0853               	movf	??___fladd+3,w
 11259  09F0  00CB               	movwf	___fladd@b+3
 11260  09F1  0852               	movf	??___fladd+2,w
 11261  09F2  00CA               	movwf	___fladd@b+2
 11262  09F3  0851               	movf	??___fladd+1,w
 11263  09F4  00C9               	movwf	___fladd@b+1
 11264  09F5  0850               	movf	??___fladd,w
 11265  09F6  00C8               	movwf	___fladd@b
 11266  09F7  0A5A               	incf	___fladd@bexp,w
 11267  09F8  1903               	btfsc	3,2
 11268  09F9  29FE               	goto	l742
 11269  09FA  3001               	movlw	1
 11270  09FB  00D0               	movwf	??___fladd
 11271  09FC  0850               	movf	??___fladd,w
 11272  09FD  07DA               	addwf	___fladd@bexp,f
 11273  09FE                     l742:
 11274  09FE  0A5A               	incf	___fladd@bexp,w
 11275  09FF  1D03               	btfss	3,2
 11276  0A00  085A               	movf	___fladd@bexp,w
 11277  0A01  1D03               	btfss	3,2
 11278  0A02  2A0E               	goto	l3287
 11279  0A03  3000               	movlw	0
 11280  0A04  00CB               	movwf	___fladd@b+3
 11281  0A05  3000               	movlw	0
 11282  0A06  00CA               	movwf	___fladd@b+2
 11283  0A07  3000               	movlw	0
 11284  0A08  00C9               	movwf	___fladd@b+1
 11285  0A09  3000               	movlw	0
 11286  0A0A  00C8               	movwf	___fladd@b
 11287  0A0B  085A               	movf	___fladd@bexp,w
 11288  0A0C  1903               	btfsc	3,2
 11289  0A0D  01D8               	clrf	___fladd@signs
 11290  0A0E                     l3287:
 11291  0A0E  1C5A               	btfss	___fladd@bexp,0
 11292  0A0F  2A12               	goto	l3291
 11293  0A10  17CA               	bsf	___fladd@b+2,7
 11294  0A11  2A16               	goto	l750
 11295  0A12                     l3291:
 11296  0A12  307F               	movlw	127
 11297  0A13  00D0               	movwf	??___fladd
 11298  0A14  0850               	movf	??___fladd,w
 11299  0A15  05CA               	andwf	___fladd@b+2,f
 11300  0A16                     l750:
 11301  0A16  365A               	lsrf	___fladd@bexp,w
 11302  0A17  00D0               	movwf	??___fladd
 11303  0A18  0850               	movf	??___fladd,w
 11304  0A19  00CB               	movwf	___fladd@b+3
 11305  0A1A  1FD8               	btfss	___fladd@signs,7
 11306  0A1B  0008               	return
 11307  0A1C  17CB               	bsf	___fladd@b+3,7
 11308  0A1D  0008               	return
 11309  0A1E                     __end_of___fladd:
 11310                           
 11311                           	psect	text24
 11312  1004                     __ptext24:	
 11313 ;; *************** function ___flneg *****************
 11314 ;; Defined at:
 11315 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
 11316 ;; Parameters:    Size  Location     Type
 11317 ;;  f1              4    0[COMMON] unsigned char 
 11318 ;; Auto vars:     Size  Location     Type
 11319 ;;		None
 11320 ;; Return value:  Size  Location     Type
 11321 ;;                  4    0[COMMON] unsigned char 
 11322 ;; Registers used:
 11323 ;;		wreg
 11324 ;; Tracked objects:
 11325 ;;		On entry : 1F/1
 11326 ;;		On exit  : 1F/1
 11327 ;;		Unchanged: 1F/0
 11328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11329 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11332 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11333 ;;Total ram usage:        4 bytes
 11334 ;; Hardware stack levels used: 1
 11335 ;; This function calls:
 11336 ;;		Nothing
 11337 ;; This function is called by:
 11338 ;;		_efgtoa
 11339 ;; This function uses a non-reentrant model
 11340 ;;
 11341                           
 11342                           
 11343                           ;psect for function ___flneg
 11344  1004                     ___flneg:
 11345                           
 11346                           ;incstack = 0
 11347                           ; Regs used in ___flneg: [wreg]
 11348  1004  0873               	movf	___flneg@f1+3,w
 11349  1005  0472               	iorwf	___flneg@f1+2,w
 11350  1006  0471               	iorwf	___flneg@f1+1,w
 11351  1007  0470               	iorwf	___flneg@f1,w
 11352  1008  1903               	skipnz
 11353  1009  0008               	return
 11354  100A  3080               	movlw	128
 11355  100B  06F3               	xorwf	___flneg@f1+3,f
 11356  100C  0008               	return
 11357  100D                     __end_of___flneg:
 11358                           
 11359                           	psect	text25
 11360  0A1E                     __ptext25:	
 11361 ;; *************** function ___flmul *****************
 11362 ;; Defined at:
 11363 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
 11364 ;; Parameters:    Size  Location     Type
 11365 ;;  b               4   14[BANK0 ] unsigned char 
 11366 ;;  a               4   18[BANK0 ] unsigned char 
 11367 ;; Auto vars:     Size  Location     Type
 11368 ;;  prod            4   34[BANK0 ] struct .
 11369 ;;  grs             4   29[BANK0 ] unsigned long 
 11370 ;;  temp            2   38[BANK0 ] struct .
 11371 ;;  bexp            1   33[BANK0 ] unsigned char 
 11372 ;;  aexp            1   28[BANK0 ] unsigned char 
 11373 ;;  sign            1   27[BANK0 ] unsigned char 
 11374 ;; Return value:  Size  Location     Type
 11375 ;;                  4   14[BANK0 ] unsigned char 
 11376 ;; Registers used:
 11377 ;;		wreg, status,2, status,0, pclath, cstack
 11378 ;; Tracked objects:
 11379 ;;		On entry : 1F/0
 11380 ;;		On exit  : 1F/0
 11381 ;;		Unchanged: 0/0
 11382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11383 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11384 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11385 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11386 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11387 ;;Total ram usage:       26 bytes
 11388 ;; Hardware stack levels used: 1
 11389 ;; Hardware stack levels required when called: 1
 11390 ;; This function calls:
 11391 ;;		__Umul8_16
 11392 ;; This function is called by:
 11393 ;;		_main
 11394 ;;		_writeEmissivity
 11395 ;;		_efgtoa
 11396 ;; This function uses a non-reentrant model
 11397 ;;
 11398                           
 11399                           
 11400                           ;psect for function ___flmul
 11401  0A1E                     ___flmul:
 11402                           
 11403                           ;incstack = 0
 11404                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 11405  0A1E  0831               	movf	___flmul@b+3,w
 11406  0A1F  3980               	andlw	128
 11407  0A20  00B6               	movwf	??___flmul
 11408  0A21  0836               	movf	??___flmul,w
 11409  0A22  00BB               	movwf	___flmul@sign
 11410  0A23  3531               	lslf	___flmul@b+3,w
 11411  0A24  00B6               	movwf	??___flmul
 11412  0A25  0836               	movf	??___flmul,w
 11413  0A26  00C1               	movwf	___flmul@bexp
 11414  0A27  1BB0               	btfsc	___flmul@b+2,7
 11415  0A28  1441               	bsf	___flmul@bexp,0
 11416  0A29  0841               	movf	___flmul@bexp,w
 11417  0A2A  1903               	btfsc	3,2
 11418  0A2B  2A39               	goto	l3739
 11419  0A2C  0A41               	incf	___flmul@bexp,w
 11420  0A2D  1D03               	btfss	3,2
 11421  0A2E  2A37               	goto	l3737
 11422  0A2F  3000               	movlw	0
 11423  0A30  00B1               	movwf	___flmul@b+3
 11424  0A31  3000               	movlw	0
 11425  0A32  00B0               	movwf	___flmul@b+2
 11426  0A33  3000               	movlw	0
 11427  0A34  00AF               	movwf	___flmul@b+1
 11428  0A35  3000               	movlw	0
 11429  0A36  00AE               	movwf	___flmul@b
 11430  0A37                     l3737:
 11431  0A37  17B0               	bsf	___flmul@b+2,7
 11432  0A38  2A41               	goto	l3741
 11433  0A39                     l3739:
 11434  0A39  3000               	movlw	0
 11435  0A3A  00B1               	movwf	___flmul@b+3
 11436  0A3B  3000               	movlw	0
 11437  0A3C  00B0               	movwf	___flmul@b+2
 11438  0A3D  3000               	movlw	0
 11439  0A3E  00AF               	movwf	___flmul@b+1
 11440  0A3F  3000               	movlw	0
 11441  0A40  00AE               	movwf	___flmul@b
 11442  0A41                     l3741:
 11443  0A41  0835               	movf	___flmul@a+3,w
 11444  0A42  3980               	andlw	128
 11445  0A43  00B6               	movwf	??___flmul
 11446  0A44  0836               	movf	??___flmul,w
 11447  0A45  06BB               	xorwf	___flmul@sign,f
 11448  0A46  3535               	lslf	___flmul@a+3,w
 11449  0A47  00B6               	movwf	??___flmul
 11450  0A48  0836               	movf	??___flmul,w
 11451  0A49  00BC               	movwf	___flmul@aexp
 11452  0A4A  1BB4               	btfsc	___flmul@a+2,7
 11453  0A4B  143C               	bsf	___flmul@aexp,0
 11454  0A4C  083C               	movf	___flmul@aexp,w
 11455  0A4D  1903               	btfsc	3,2
 11456  0A4E  2A5C               	goto	l3757
 11457  0A4F  0A3C               	incf	___flmul@aexp,w
 11458  0A50  1D03               	btfss	3,2
 11459  0A51  2A5A               	goto	l3755
 11460  0A52  3000               	movlw	0
 11461  0A53  00B5               	movwf	___flmul@a+3
 11462  0A54  3000               	movlw	0
 11463  0A55  00B4               	movwf	___flmul@a+2
 11464  0A56  3000               	movlw	0
 11465  0A57  00B3               	movwf	___flmul@a+1
 11466  0A58  3000               	movlw	0
 11467  0A59  00B2               	movwf	___flmul@a
 11468  0A5A                     l3755:
 11469  0A5A  17B4               	bsf	___flmul@a+2,7
 11470  0A5B  2A64               	goto	l3759
 11471  0A5C                     l3757:
 11472  0A5C  3000               	movlw	0
 11473  0A5D  00B5               	movwf	___flmul@a+3
 11474  0A5E  3000               	movlw	0
 11475  0A5F  00B4               	movwf	___flmul@a+2
 11476  0A60  3000               	movlw	0
 11477  0A61  00B3               	movwf	___flmul@a+1
 11478  0A62  3000               	movlw	0
 11479  0A63  00B2               	movwf	___flmul@a
 11480  0A64                     l3759:
 11481  0A64  083C               	movf	___flmul@aexp,w
 11482  0A65  1D03               	btfss	3,2
 11483  0A66  0841               	movf	___flmul@bexp,w
 11484  0A67  1D03               	btfss	3,2
 11485  0A68  2A72               	goto	l3767
 11486  0A69  3000               	movlw	0
 11487  0A6A  00B1               	movwf	?___flmul+3
 11488  0A6B  3000               	movlw	0
 11489  0A6C  00B0               	movwf	?___flmul+2
 11490  0A6D  3000               	movlw	0
 11491  0A6E  00AF               	movwf	?___flmul+1
 11492  0A6F  3000               	movlw	0
 11493  0A70  00AE               	movwf	?___flmul
 11494  0A71  0008               	return
 11495  0A72                     l3767:
 11496  0A72  082E               	movf	___flmul@b,w
 11497  0A73  00B6               	movwf	??___flmul
 11498  0A74  0836               	movf	??___flmul,w
 11499  0A75  00F0               	movwf	__Umul8_16@multiplicand
 11500  0A76  0834               	movf	___flmul@a+2,w
 11501  0A77  319A  22DC  318A   	fcall	__Umul8_16
 11502  0A7A  0871               	movf	?__Umul8_16+1,w
 11503  0A7B  00C7               	movwf	___flmul@temp+1
 11504  0A7C  0870               	movf	?__Umul8_16,w
 11505  0A7D  00C6               	movwf	___flmul@temp
 11506  0A7E  0846               	movf	___flmul@temp,w
 11507  0A7F  00B6               	movwf	??___flmul
 11508  0A80  01B7               	clrf	??___flmul+1
 11509  0A81  01B8               	clrf	??___flmul+2
 11510  0A82  01B9               	clrf	??___flmul+3
 11511  0A83  0839               	movf	??___flmul+3,w
 11512  0A84  00C0               	movwf	___flmul@grs+3
 11513  0A85  0838               	movf	??___flmul+2,w
 11514  0A86  00BF               	movwf	___flmul@grs+2
 11515  0A87  0837               	movf	??___flmul+1,w
 11516  0A88  00BE               	movwf	___flmul@grs+1
 11517  0A89  0836               	movf	??___flmul,w
 11518  0A8A  00BD               	movwf	___flmul@grs
 11519  0A8B  0847               	movf	___flmul@temp+1,w
 11520  0A8C  00B6               	movwf	??___flmul
 11521  0A8D  01B7               	clrf	??___flmul+1
 11522  0A8E  01B8               	clrf	??___flmul+2
 11523  0A8F  01B9               	clrf	??___flmul+3
 11524  0A90  0839               	movf	??___flmul+3,w
 11525  0A91  00C5               	movwf	___flmul@prod+3
 11526  0A92  0838               	movf	??___flmul+2,w
 11527  0A93  00C4               	movwf	___flmul@prod+2
 11528  0A94  0837               	movf	??___flmul+1,w
 11529  0A95  00C3               	movwf	___flmul@prod+1
 11530  0A96  0836               	movf	??___flmul,w
 11531  0A97  00C2               	movwf	___flmul@prod
 11532  0A98  082F               	movf	___flmul@b+1,w
 11533  0A99  00B6               	movwf	??___flmul
 11534  0A9A  0836               	movf	??___flmul,w
 11535  0A9B  00F0               	movwf	__Umul8_16@multiplicand
 11536  0A9C  0833               	movf	___flmul@a+1,w
 11537  0A9D  319A  22DC  318A   	fcall	__Umul8_16
 11538  0AA0  0871               	movf	?__Umul8_16+1,w
 11539  0AA1  00C7               	movwf	___flmul@temp+1
 11540  0AA2  0870               	movf	?__Umul8_16,w
 11541  0AA3  00C6               	movwf	___flmul@temp
 11542  0AA4  0846               	movf	___flmul@temp,w
 11543  0AA5  00B6               	movwf	??___flmul
 11544  0AA6  01B7               	clrf	??___flmul+1
 11545  0AA7  01B8               	clrf	??___flmul+2
 11546  0AA8  01B9               	clrf	??___flmul+3
 11547  0AA9  0836               	movf	??___flmul,w
 11548  0AAA  07BD               	addwf	___flmul@grs,f
 11549  0AAB  0837               	movf	??___flmul+1,w
 11550  0AAC  3DBE               	addwfc	___flmul@grs+1,f
 11551  0AAD  0838               	movf	??___flmul+2,w
 11552  0AAE  3DBF               	addwfc	___flmul@grs+2,f
 11553  0AAF  0839               	movf	??___flmul+3,w
 11554  0AB0  3DC0               	addwfc	___flmul@grs+3,f
 11555  0AB1  0847               	movf	___flmul@temp+1,w
 11556  0AB2  00B6               	movwf	??___flmul
 11557  0AB3  01B7               	clrf	??___flmul+1
 11558  0AB4  01B8               	clrf	??___flmul+2
 11559  0AB5  01B9               	clrf	??___flmul+3
 11560  0AB6  0836               	movf	??___flmul,w
 11561  0AB7  07C2               	addwf	___flmul@prod,f
 11562  0AB8  0837               	movf	??___flmul+1,w
 11563  0AB9  3DC3               	addwfc	___flmul@prod+1,f
 11564  0ABA  0838               	movf	??___flmul+2,w
 11565  0ABB  3DC4               	addwfc	___flmul@prod+2,f
 11566  0ABC  0839               	movf	??___flmul+3,w
 11567  0ABD  3DC5               	addwfc	___flmul@prod+3,f
 11568  0ABE  0830               	movf	___flmul@b+2,w
 11569  0ABF  00B6               	movwf	??___flmul
 11570  0AC0  0836               	movf	??___flmul,w
 11571  0AC1  00F0               	movwf	__Umul8_16@multiplicand
 11572  0AC2  0832               	movf	___flmul@a,w
 11573  0AC3  319A  22DC  318A   	fcall	__Umul8_16
 11574  0AC6  0871               	movf	?__Umul8_16+1,w
 11575  0AC7  00C7               	movwf	___flmul@temp+1
 11576  0AC8  0870               	movf	?__Umul8_16,w
 11577  0AC9  00C6               	movwf	___flmul@temp
 11578  0ACA  0846               	movf	___flmul@temp,w
 11579  0ACB  00B6               	movwf	??___flmul
 11580  0ACC  01B7               	clrf	??___flmul+1
 11581  0ACD  01B8               	clrf	??___flmul+2
 11582  0ACE  01B9               	clrf	??___flmul+3
 11583  0ACF  0836               	movf	??___flmul,w
 11584  0AD0  07BD               	addwf	___flmul@grs,f
 11585  0AD1  0837               	movf	??___flmul+1,w
 11586  0AD2  3DBE               	addwfc	___flmul@grs+1,f
 11587  0AD3  0838               	movf	??___flmul+2,w
 11588  0AD4  3DBF               	addwfc	___flmul@grs+2,f
 11589  0AD5  0839               	movf	??___flmul+3,w
 11590  0AD6  3DC0               	addwfc	___flmul@grs+3,f
 11591  0AD7  0847               	movf	___flmul@temp+1,w
 11592  0AD8  00B6               	movwf	??___flmul
 11593  0AD9  01B7               	clrf	??___flmul+1
 11594  0ADA  01B8               	clrf	??___flmul+2
 11595  0ADB  01B9               	clrf	??___flmul+3
 11596  0ADC  0836               	movf	??___flmul,w
 11597  0ADD  07C2               	addwf	___flmul@prod,f
 11598  0ADE  0837               	movf	??___flmul+1,w
 11599  0ADF  3DC3               	addwfc	___flmul@prod+1,f
 11600  0AE0  0838               	movf	??___flmul+2,w
 11601  0AE1  3DC4               	addwfc	___flmul@prod+2,f
 11602  0AE2  0839               	movf	??___flmul+3,w
 11603  0AE3  3DC5               	addwfc	___flmul@prod+3,f
 11604  0AE4  3008               	movlw	8
 11605  0AE5                     u5255:
 11606  0AE5  35BD               	lslf	___flmul@grs,f
 11607  0AE6  0DBE               	rlf	___flmul@grs+1,f
 11608  0AE7  0DBF               	rlf	___flmul@grs+2,f
 11609  0AE8  0DC0               	rlf	___flmul@grs+3,f
 11610  0AE9  0B89               	decfsz	9,f
 11611  0AEA  2AE5               	goto	u5255
 11612  0AEB  082F               	movf	___flmul@b+1,w
 11613  0AEC  00B6               	movwf	??___flmul
 11614  0AED  0836               	movf	??___flmul,w
 11615  0AEE  00F0               	movwf	__Umul8_16@multiplicand
 11616  0AEF  0832               	movf	___flmul@a,w
 11617  0AF0  319A  22DC  318A   	fcall	__Umul8_16
 11618  0AF3  0871               	movf	?__Umul8_16+1,w
 11619  0AF4  00C7               	movwf	___flmul@temp+1
 11620  0AF5  0870               	movf	?__Umul8_16,w
 11621  0AF6  00C6               	movwf	___flmul@temp
 11622  0AF7  0846               	movf	___flmul@temp,w
 11623  0AF8  07BD               	addwf	___flmul@grs,f
 11624  0AF9  0847               	movf	___flmul@temp+1,w
 11625  0AFA  3DBE               	addwfc	___flmul@grs+1,f
 11626  0AFB  3000               	movlw	0
 11627  0AFC  3DBF               	addwfc	___flmul@grs+2,f
 11628  0AFD  3DC0               	addwfc	___flmul@grs+3,f
 11629  0AFE  082E               	movf	___flmul@b,w
 11630  0AFF  00B6               	movwf	??___flmul
 11631  0B00  0836               	movf	??___flmul,w
 11632  0B01  00F0               	movwf	__Umul8_16@multiplicand
 11633  0B02  0833               	movf	___flmul@a+1,w
 11634  0B03  319A  22DC  318A   	fcall	__Umul8_16
 11635  0B06  0871               	movf	?__Umul8_16+1,w
 11636  0B07  00C7               	movwf	___flmul@temp+1
 11637  0B08  0870               	movf	?__Umul8_16,w
 11638  0B09  00C6               	movwf	___flmul@temp
 11639  0B0A  0846               	movf	___flmul@temp,w
 11640  0B0B  07BD               	addwf	___flmul@grs,f
 11641  0B0C  0847               	movf	___flmul@temp+1,w
 11642  0B0D  3DBE               	addwfc	___flmul@grs+1,f
 11643  0B0E  3000               	movlw	0
 11644  0B0F  3DBF               	addwfc	___flmul@grs+2,f
 11645  0B10  3DC0               	addwfc	___flmul@grs+3,f
 11646  0B11  3008               	movlw	8
 11647  0B12                     u5265:
 11648  0B12  35BD               	lslf	___flmul@grs,f
 11649  0B13  0DBE               	rlf	___flmul@grs+1,f
 11650  0B14  0DBF               	rlf	___flmul@grs+2,f
 11651  0B15  0DC0               	rlf	___flmul@grs+3,f
 11652  0B16  0B89               	decfsz	9,f
 11653  0B17  2B12               	goto	u5265
 11654  0B18  082E               	movf	___flmul@b,w
 11655  0B19  00B6               	movwf	??___flmul
 11656  0B1A  0836               	movf	??___flmul,w
 11657  0B1B  00F0               	movwf	__Umul8_16@multiplicand
 11658  0B1C  0832               	movf	___flmul@a,w
 11659  0B1D  319A  22DC  318A   	fcall	__Umul8_16
 11660  0B20  0871               	movf	?__Umul8_16+1,w
 11661  0B21  00C7               	movwf	___flmul@temp+1
 11662  0B22  0870               	movf	?__Umul8_16,w
 11663  0B23  00C6               	movwf	___flmul@temp
 11664  0B24  0846               	movf	___flmul@temp,w
 11665  0B25  07BD               	addwf	___flmul@grs,f
 11666  0B26  0847               	movf	___flmul@temp+1,w
 11667  0B27  3DBE               	addwfc	___flmul@grs+1,f
 11668  0B28  3000               	movlw	0
 11669  0B29  3DBF               	addwfc	___flmul@grs+2,f
 11670  0B2A  3DC0               	addwfc	___flmul@grs+3,f
 11671  0B2B  082F               	movf	___flmul@b+1,w
 11672  0B2C  00B6               	movwf	??___flmul
 11673  0B2D  0836               	movf	??___flmul,w
 11674  0B2E  00F0               	movwf	__Umul8_16@multiplicand
 11675  0B2F  0834               	movf	___flmul@a+2,w
 11676  0B30  319A  22DC  318A   	fcall	__Umul8_16
 11677  0B33  0871               	movf	?__Umul8_16+1,w
 11678  0B34  00C7               	movwf	___flmul@temp+1
 11679  0B35  0870               	movf	?__Umul8_16,w
 11680  0B36  00C6               	movwf	___flmul@temp
 11681  0B37  0846               	movf	___flmul@temp,w
 11682  0B38  07C2               	addwf	___flmul@prod,f
 11683  0B39  0847               	movf	___flmul@temp+1,w
 11684  0B3A  3DC3               	addwfc	___flmul@prod+1,f
 11685  0B3B  3000               	movlw	0
 11686  0B3C  3DC4               	addwfc	___flmul@prod+2,f
 11687  0B3D  3DC5               	addwfc	___flmul@prod+3,f
 11688  0B3E  0830               	movf	___flmul@b+2,w
 11689  0B3F  00B6               	movwf	??___flmul
 11690  0B40  0836               	movf	??___flmul,w
 11691  0B41  00F0               	movwf	__Umul8_16@multiplicand
 11692  0B42  0833               	movf	___flmul@a+1,w
 11693  0B43  319A  22DC  318A   	fcall	__Umul8_16
 11694  0B46  0871               	movf	?__Umul8_16+1,w
 11695  0B47  00C7               	movwf	___flmul@temp+1
 11696  0B48  0870               	movf	?__Umul8_16,w
 11697  0B49  00C6               	movwf	___flmul@temp
 11698  0B4A  0846               	movf	___flmul@temp,w
 11699  0B4B  07C2               	addwf	___flmul@prod,f
 11700  0B4C  0847               	movf	___flmul@temp+1,w
 11701  0B4D  3DC3               	addwfc	___flmul@prod+1,f
 11702  0B4E  3000               	movlw	0
 11703  0B4F  3DC4               	addwfc	___flmul@prod+2,f
 11704  0B50  3DC5               	addwfc	___flmul@prod+3,f
 11705  0B51  0830               	movf	___flmul@b+2,w
 11706  0B52  00B6               	movwf	??___flmul
 11707  0B53  0836               	movf	??___flmul,w
 11708  0B54  00F0               	movwf	__Umul8_16@multiplicand
 11709  0B55  0834               	movf	___flmul@a+2,w
 11710  0B56  319A  22DC  318A   	fcall	__Umul8_16
 11711  0B59  0871               	movf	?__Umul8_16+1,w
 11712  0B5A  00C7               	movwf	___flmul@temp+1
 11713  0B5B  0870               	movf	?__Umul8_16,w
 11714  0B5C  00C6               	movwf	___flmul@temp
 11715  0B5D  0846               	movf	___flmul@temp,w
 11716  0B5E  00B6               	movwf	??___flmul
 11717  0B5F  0847               	movf	___flmul@temp+1,w
 11718  0B60  00B7               	movwf	??___flmul+1
 11719  0B61  01B8               	clrf	??___flmul+2
 11720  0B62  01B9               	clrf	??___flmul+3
 11721  0B63  3008               	movlw	8
 11722  0B64                     u5275:
 11723  0B64  35B6               	lslf	??___flmul,f
 11724  0B65  0DB7               	rlf	??___flmul+1,f
 11725  0B66  0DB8               	rlf	??___flmul+2,f
 11726  0B67  0DB9               	rlf	??___flmul+3,f
 11727  0B68  0B89               	decfsz	9,f
 11728  0B69  2B64               	goto	u5275
 11729  0B6A  0836               	movf	??___flmul,w
 11730  0B6B  07C2               	addwf	___flmul@prod,f
 11731  0B6C  0837               	movf	??___flmul+1,w
 11732  0B6D  3DC3               	addwfc	___flmul@prod+1,f
 11733  0B6E  0838               	movf	??___flmul+2,w
 11734  0B6F  3DC4               	addwfc	___flmul@prod+2,f
 11735  0B70  0839               	movf	??___flmul+3,w
 11736  0B71  3DC5               	addwfc	___flmul@prod+3,f
 11737  0B72  0840               	movf	___flmul@grs+3,w
 11738  0B73  00B6               	movwf	??___flmul
 11739  0B74  01B7               	clrf	??___flmul+1
 11740  0B75  01B8               	clrf	??___flmul+2
 11741  0B76  01B9               	clrf	??___flmul+3
 11742  0B77  0836               	movf	??___flmul,w
 11743  0B78  07C2               	addwf	___flmul@prod,f
 11744  0B79  0837               	movf	??___flmul+1,w
 11745  0B7A  3DC3               	addwfc	___flmul@prod+1,f
 11746  0B7B  0838               	movf	??___flmul+2,w
 11747  0B7C  3DC4               	addwfc	___flmul@prod+2,f
 11748  0B7D  0839               	movf	??___flmul+3,w
 11749  0B7E  3DC5               	addwfc	___flmul@prod+3,f
 11750  0B7F  3008               	movlw	8
 11751  0B80                     u5285:
 11752  0B80  35BD               	lslf	___flmul@grs,f
 11753  0B81  0DBE               	rlf	___flmul@grs+1,f
 11754  0B82  0DBF               	rlf	___flmul@grs+2,f
 11755  0B83  0DC0               	rlf	___flmul@grs+3,f
 11756  0B84  0B89               	decfsz	9,f
 11757  0B85  2B80               	goto	u5285
 11758  0B86  0841               	movf	___flmul@bexp,w
 11759  0B87  073C               	addwf	___flmul@aexp,w
 11760  0B88  00B6               	movwf	??___flmul
 11761  0B89  01B7               	clrf	??___flmul+1
 11762  0B8A  0DB7               	rlf	??___flmul+1,f
 11763  0B8B  0836               	movf	??___flmul,w
 11764  0B8C  3E82               	addlw	130
 11765  0B8D  00C6               	movwf	___flmul@temp
 11766  0B8E  30FF               	movlw	255
 11767  0B8F  3D37               	addwfc	??___flmul+1,w
 11768  0B90  00C7               	movwf	___flmul@temp+1
 11769  0B91                     l3819:
 11770  0B91  1BC4               	btfsc	___flmul@prod+2,7
 11771  0B92  2BA8               	goto	l3821
 11772  0B93  3001               	movlw	1
 11773  0B94                     u5295:
 11774  0B94  35C2               	lslf	___flmul@prod,f
 11775  0B95  0DC3               	rlf	___flmul@prod+1,f
 11776  0B96  0DC4               	rlf	___flmul@prod+2,f
 11777  0B97  0DC5               	rlf	___flmul@prod+3,f
 11778  0B98  0B89               	decfsz	9,f
 11779  0B99  2B94               	goto	u5295
 11780  0B9A  1BC0               	btfsc	___flmul@grs+3,7
 11781  0B9B  1442               	bsf	___flmul@prod,0
 11782  0B9C  3001               	movlw	1
 11783  0B9D                     u5315:
 11784  0B9D  35BD               	lslf	___flmul@grs,f
 11785  0B9E  0DBE               	rlf	___flmul@grs+1,f
 11786  0B9F  0DBF               	rlf	___flmul@grs+2,f
 11787  0BA0  0DC0               	rlf	___flmul@grs+3,f
 11788  0BA1  0B89               	decfsz	9,f
 11789  0BA2  2B9D               	goto	u5315
 11790  0BA3  30FF               	movlw	255
 11791  0BA4  07C6               	addwf	___flmul@temp,f
 11792  0BA5  30FF               	movlw	255
 11793  0BA6  3DC7               	addwfc	___flmul@temp+1,f
 11794  0BA7  2B91               	goto	l3819
 11795  0BA8                     l3821:
 11796  0BA8  01BC               	clrf	___flmul@aexp
 11797  0BA9  1FC0               	btfss	___flmul@grs+3,7
 11798  0BAA  2BC1               	goto	l3831
 11799  0BAB  30FF               	movlw	255
 11800  0BAC  053D               	andwf	___flmul@grs,w
 11801  0BAD  00B6               	movwf	??___flmul
 11802  0BAE  30FF               	movlw	255
 11803  0BAF  053E               	andwf	___flmul@grs+1,w
 11804  0BB0  00B7               	movwf	??___flmul+1
 11805  0BB1  30FF               	movlw	255
 11806  0BB2  053F               	andwf	___flmul@grs+2,w
 11807  0BB3  00B8               	movwf	??___flmul+2
 11808  0BB4  307F               	movlw	127
 11809  0BB5  0540               	andwf	___flmul@grs+3,w
 11810  0BB6  00B9               	movwf	??___flmul+3
 11811  0BB7  0839               	movf	??___flmul+3,w
 11812  0BB8  0438               	iorwf	??___flmul+2,w
 11813  0BB9  0437               	iorwf	??___flmul+1,w
 11814  0BBA  0436               	iorwf	??___flmul,w
 11815  0BBB  1903               	skipnz
 11816  0BBC  1842               	btfsc	___flmul@prod,0
 11817  0BBD  2BBF               	goto	l3827
 11818  0BBE  2BC1               	goto	l3831
 11819  0BBF                     l3827:
 11820  0BBF  01BC               	clrf	___flmul@aexp
 11821  0BC0  0ABC               	incf	___flmul@aexp,f
 11822  0BC1                     l3831:
 11823  0BC1  083C               	movf	___flmul@aexp,w
 11824  0BC2  1903               	btfsc	3,2
 11825  0BC3  2BEA               	goto	l3841
 11826  0BC4  3001               	movlw	1
 11827  0BC5  07C2               	addwf	___flmul@prod,f
 11828  0BC6  3000               	movlw	0
 11829  0BC7  3DC3               	addwfc	___flmul@prod+1,f
 11830  0BC8  3000               	movlw	0
 11831  0BC9  3DC4               	addwfc	___flmul@prod+2,f
 11832  0BCA  3000               	movlw	0
 11833  0BCB  3DC5               	addwfc	___flmul@prod+3,f
 11834  0BCC  1C45               	btfss	___flmul@prod+3,0
 11835  0BCD  2BEA               	goto	l3841
 11836  0BCE  0842               	movf	___flmul@prod,w
 11837  0BCF  00B6               	movwf	??___flmul
 11838  0BD0  0843               	movf	___flmul@prod+1,w
 11839  0BD1  00B7               	movwf	??___flmul+1
 11840  0BD2  0844               	movf	___flmul@prod+2,w
 11841  0BD3  00B8               	movwf	??___flmul+2
 11842  0BD4  0845               	movf	___flmul@prod+3,w
 11843  0BD5  00B9               	movwf	??___flmul+3
 11844  0BD6  3001               	movlw	1
 11845  0BD7  00BA               	movwf	??___flmul+4
 11846  0BD8                     u5385:
 11847  0BD8  37B9               	asrf	??___flmul+3,f
 11848  0BD9  0CB8               	rrf	??___flmul+2,f
 11849  0BDA  0CB7               	rrf	??___flmul+1,f
 11850  0BDB  0CB6               	rrf	??___flmul,f
 11851  0BDC  0BBA               	decfsz	??___flmul+4,f
 11852  0BDD  2BD8               	goto	u5385
 11853  0BDE  0839               	movf	??___flmul+3,w
 11854  0BDF  00C5               	movwf	___flmul@prod+3
 11855  0BE0  0838               	movf	??___flmul+2,w
 11856  0BE1  00C4               	movwf	___flmul@prod+2
 11857  0BE2  0837               	movf	??___flmul+1,w
 11858  0BE3  00C3               	movwf	___flmul@prod+1
 11859  0BE4  0836               	movf	??___flmul,w
 11860  0BE5  00C2               	movwf	___flmul@prod
 11861  0BE6  3001               	movlw	1
 11862  0BE7  07C6               	addwf	___flmul@temp,f
 11863  0BE8  3000               	movlw	0
 11864  0BE9  3DC7               	addwfc	___flmul@temp+1,f
 11865  0BEA                     l3841:
 11866  0BEA  0847               	movf	___flmul@temp+1,w
 11867  0BEB  3A80               	xorlw	128
 11868  0BEC  00B6               	movwf	??___flmul
 11869  0BED  3080               	movlw	128
 11870  0BEE  0236               	subwf	??___flmul,w
 11871  0BEF  1D03               	skipz
 11872  0BF0  2BF3               	goto	u5395
 11873  0BF1  30FF               	movlw	255
 11874  0BF2  0246               	subwf	___flmul@temp,w
 11875  0BF3                     u5395:
 11876  0BF3  1C03               	skipc
 11877  0BF4  2BFF               	goto	l3845
 11878  0BF5  307F               	movlw	127
 11879  0BF6  0020               	movlb	0	; select bank0
 11880  0BF7  00C5               	movwf	___flmul@prod+3
 11881  0BF8  3080               	movlw	128
 11882  0BF9  00C4               	movwf	___flmul@prod+2
 11883  0BFA  3000               	movlw	0
 11884  0BFB  00C3               	movwf	___flmul@prod+1
 11885  0BFC  3000               	movlw	0
 11886  0BFD  00C2               	movwf	___flmul@prod
 11887  0BFE  2C29               	goto	l816
 11888  0BFF                     l3845:
 11889  0BFF  0020               	movlb	0	; select bank0
 11890  0C00  0847               	movf	___flmul@temp+1,w
 11891  0C01  3A80               	xorlw	128
 11892  0C02  00B6               	movwf	??___flmul
 11893  0C03  3080               	movlw	128
 11894  0C04  0236               	subwf	??___flmul,w
 11895  0C05  1D03               	skipz
 11896  0C06  2C09               	goto	u5405
 11897  0C07  3001               	movlw	1
 11898  0C08  0246               	subwf	___flmul@temp,w
 11899  0C09                     u5405:
 11900  0C09  1803               	skipnc
 11901  0C0A  2C16               	goto	l3851
 11902  0C0B  3000               	movlw	0
 11903  0C0C  0020               	movlb	0	; select bank0
 11904  0C0D  00C5               	movwf	___flmul@prod+3
 11905  0C0E  3000               	movlw	0
 11906  0C0F  00C4               	movwf	___flmul@prod+2
 11907  0C10  3000               	movlw	0
 11908  0C11  00C3               	movwf	___flmul@prod+1
 11909  0C12  3000               	movlw	0
 11910  0C13  00C2               	movwf	___flmul@prod
 11911  0C14  01BB               	clrf	___flmul@sign
 11912  0C15  2C29               	goto	l816
 11913  0C16                     l3851:
 11914  0C16  0020               	movlb	0	; select bank0
 11915  0C17  0846               	movf	___flmul@temp,w
 11916  0C18  00B6               	movwf	??___flmul
 11917  0C19  0836               	movf	??___flmul,w
 11918  0C1A  00C1               	movwf	___flmul@bexp
 11919  0C1B  30FF               	movlw	255
 11920  0C1C  05C2               	andwf	___flmul@prod,f
 11921  0C1D  30FF               	movlw	255
 11922  0C1E  05C3               	andwf	___flmul@prod+1,f
 11923  0C1F  307F               	movlw	127
 11924  0C20  05C4               	andwf	___flmul@prod+2,f
 11925  0C21  3000               	movlw	0
 11926  0C22  05C5               	andwf	___flmul@prod+3,f
 11927  0C23  1841               	btfsc	___flmul@bexp,0
 11928  0C24  17C4               	bsf	___flmul@prod+2,7
 11929  0C25  3641               	lsrf	___flmul@bexp,w
 11930  0C26  00B6               	movwf	??___flmul
 11931  0C27  0836               	movf	??___flmul,w
 11932  0C28  00C5               	movwf	___flmul@prod+3
 11933  0C29                     l816:
 11934  0C29  083B               	movf	___flmul@sign,w
 11935  0C2A  00B6               	movwf	??___flmul
 11936  0C2B  0836               	movf	??___flmul,w
 11937  0C2C  04C5               	iorwf	___flmul@prod+3,f
 11938  0C2D  0845               	movf	___flmul@prod+3,w
 11939  0C2E  00B1               	movwf	?___flmul+3
 11940  0C2F  0844               	movf	___flmul@prod+2,w
 11941  0C30  00B0               	movwf	?___flmul+2
 11942  0C31  0843               	movf	___flmul@prod+1,w
 11943  0C32  00AF               	movwf	?___flmul+1
 11944  0C33  0842               	movf	___flmul@prod,w
 11945  0C34  00AE               	movwf	?___flmul
 11946  0C35  0008               	return
 11947  0C36                     __end_of___flmul:
 11948                           
 11949                           	psect	text26
 11950  1ADC                     __ptext26:	
 11951 ;; *************** function __Umul8_16 *****************
 11952 ;; Defined at:
 11953 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul8_16.c"
 11954 ;; Parameters:    Size  Location     Type
 11955 ;;  multiplier      1    wreg     unsigned char 
 11956 ;;  multiplicand    1    0[COMMON] unsigned char 
 11957 ;; Auto vars:     Size  Location     Type
 11958 ;;  multiplier      1    8[COMMON] unsigned char 
 11959 ;;  word_mpld       2    6[COMMON] unsigned int 
 11960 ;;  product         2    4[COMMON] unsigned int 
 11961 ;; Return value:  Size  Location     Type
 11962 ;;                  2    0[COMMON] unsigned int 
 11963 ;; Registers used:
 11964 ;;		wreg, status,2, status,0
 11965 ;; Tracked objects:
 11966 ;;		On entry : 1F/0
 11967 ;;		On exit  : 1F/0
 11968 ;;		Unchanged: 1F/0
 11969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11970 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11971 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11972 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11973 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11974 ;;Total ram usage:        9 bytes
 11975 ;; Hardware stack levels used: 1
 11976 ;; This function calls:
 11977 ;;		Nothing
 11978 ;; This function is called by:
 11979 ;;		___flmul
 11980 ;; This function uses a non-reentrant model
 11981 ;;
 11982                           
 11983                           
 11984                           ;psect for function __Umul8_16
 11985  1ADC                     __Umul8_16:
 11986                           
 11987                           ;incstack = 0
 11988                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 11989                           ;__Umul8_16@multiplier stored from wreg
 11990  1ADC  00F8               	movwf	__Umul8_16@multiplier
 11991  1ADD  01F4               	clrf	__Umul8_16@product
 11992  1ADE  01F5               	clrf	__Umul8_16@product+1
 11993  1ADF  0870               	movf	__Umul8_16@multiplicand,w
 11994  1AE0  00F2               	movwf	??__Umul8_16
 11995  1AE1  01F3               	clrf	??__Umul8_16+1
 11996  1AE2  0872               	movf	??__Umul8_16,w
 11997  1AE3  00F6               	movwf	__Umul8_16@word_mpld
 11998  1AE4  0873               	movf	??__Umul8_16+1,w
 11999  1AE5  00F7               	movwf	__Umul8_16@word_mpld+1
 12000  1AE6                     l3301:
 12001  1AE6  1C78               	btfss	__Umul8_16@multiplier,0
 12002  1AE7  2AEC               	goto	l823
 12003  1AE8  0876               	movf	__Umul8_16@word_mpld,w
 12004  1AE9  07F4               	addwf	__Umul8_16@product,f
 12005  1AEA  0877               	movf	__Umul8_16@word_mpld+1,w
 12006  1AEB  3DF5               	addwfc	__Umul8_16@product+1,f
 12007  1AEC                     l823:
 12008  1AEC  3001               	movlw	1
 12009  1AED                     u4175:
 12010  1AED  35F6               	lslf	__Umul8_16@word_mpld,f
 12011  1AEE  0DF7               	rlf	__Umul8_16@word_mpld+1,f
 12012  1AEF  0B89               	decfsz	9,f
 12013  1AF0  2AED               	goto	u4175
 12014  1AF1  1003               	clrc
 12015  1AF2  0CF8               	rrf	__Umul8_16@multiplier,f
 12016  1AF3  0878               	movf	__Umul8_16@multiplier,w
 12017  1AF4  1D03               	btfss	3,2
 12018  1AF5  2AE6               	goto	l3301
 12019  1AF6  0875               	movf	__Umul8_16@product+1,w
 12020  1AF7  00F1               	movwf	?__Umul8_16+1
 12021  1AF8  0874               	movf	__Umul8_16@product,w
 12022  1AF9  00F0               	movwf	?__Umul8_16
 12023  1AFA  0008               	return
 12024  1AFB                     __end_of__Umul8_16:
 12025                           
 12026                           	psect	text27
 12027  1EF0                     __ptext27:	
 12028 ;; *************** function ___flge *****************
 12029 ;; Defined at:
 12030 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
 12031 ;; Parameters:    Size  Location     Type
 12032 ;;  ff1             4   40[BANK0 ] unsigned int 
 12033 ;;  ff2             4   44[BANK0 ] unsigned int 
 12034 ;; Auto vars:     Size  Location     Type
 12035 ;;		None
 12036 ;; Return value:  Size  Location     Type
 12037 ;;		None               void
 12038 ;; Registers used:
 12039 ;;		wreg, status,2, status,0
 12040 ;; Tracked objects:
 12041 ;;		On entry : 1F/0
 12042 ;;		On exit  : 1F/0
 12043 ;;		Unchanged: 0/0
 12044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12045 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12047 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12048 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12049 ;;Total ram usage:       12 bytes
 12050 ;; Hardware stack levels used: 1
 12051 ;; This function calls:
 12052 ;;		Nothing
 12053 ;; This function is called by:
 12054 ;;		_efgtoa
 12055 ;; This function uses a non-reentrant model
 12056 ;;
 12057                           
 12058                           
 12059                           ;psect for function ___flge
 12060  1EF0                     ___flge:
 12061                           
 12062                           ;incstack = 0
 12063                           ; Regs used in ___flge: [wreg+status,2+status,0]
 12064  1EF0  3000               	movlw	0
 12065  1EF1  0548               	andwf	___flge@ff1,w
 12066  1EF2  00D0               	movwf	??___flge
 12067  1EF3  3000               	movlw	0
 12068  1EF4  0549               	andwf	___flge@ff1+1,w
 12069  1EF5  00D1               	movwf	??___flge+1
 12070  1EF6  3080               	movlw	128
 12071  1EF7  054A               	andwf	___flge@ff1+2,w
 12072  1EF8  00D2               	movwf	??___flge+2
 12073  1EF9  307F               	movlw	127
 12074  1EFA  054B               	andwf	___flge@ff1+3,w
 12075  1EFB  00D3               	movwf	??___flge+3
 12076  1EFC  0853               	movf	??___flge+3,w
 12077  1EFD  0452               	iorwf	??___flge+2,w
 12078  1EFE  0451               	iorwf	??___flge+1,w
 12079  1EFF  0450               	iorwf	??___flge,w
 12080  1F00  1D03               	skipz
 12081  1F01  2F0A               	goto	l585
 12082  1F02  3000               	movlw	0
 12083  1F03  00CB               	movwf	___flge@ff1+3
 12084  1F04  3000               	movlw	0
 12085  1F05  00CA               	movwf	___flge@ff1+2
 12086  1F06  3000               	movlw	0
 12087  1F07  00C9               	movwf	___flge@ff1+1
 12088  1F08  3000               	movlw	0
 12089  1F09  00C8               	movwf	___flge@ff1
 12090  1F0A                     l585:
 12091  1F0A  3000               	movlw	0
 12092  1F0B  054C               	andwf	___flge@ff2,w
 12093  1F0C  00D0               	movwf	??___flge
 12094  1F0D  3000               	movlw	0
 12095  1F0E  054D               	andwf	___flge@ff2+1,w
 12096  1F0F  00D1               	movwf	??___flge+1
 12097  1F10  3080               	movlw	128
 12098  1F11  054E               	andwf	___flge@ff2+2,w
 12099  1F12  00D2               	movwf	??___flge+2
 12100  1F13  307F               	movlw	127
 12101  1F14  054F               	andwf	___flge@ff2+3,w
 12102  1F15  00D3               	movwf	??___flge+3
 12103  1F16  0853               	movf	??___flge+3,w
 12104  1F17  0452               	iorwf	??___flge+2,w
 12105  1F18  0451               	iorwf	??___flge+1,w
 12106  1F19  0450               	iorwf	??___flge,w
 12107  1F1A  1D03               	skipz
 12108  1F1B  2F24               	goto	l3519
 12109  1F1C  3000               	movlw	0
 12110  1F1D  00CF               	movwf	___flge@ff2+3
 12111  1F1E  3000               	movlw	0
 12112  1F1F  00CE               	movwf	___flge@ff2+2
 12113  1F20  3000               	movlw	0
 12114  1F21  00CD               	movwf	___flge@ff2+1
 12115  1F22  3000               	movlw	0
 12116  1F23  00CC               	movwf	___flge@ff2
 12117  1F24                     l3519:
 12118  1F24  1FCB               	btfss	___flge@ff1+3,7
 12119  1F25  2F3E               	goto	l3523
 12120  1F26  3000               	movlw	0
 12121  1F27  00D0               	movwf	??___flge
 12122  1F28  3000               	movlw	0
 12123  1F29  00D1               	movwf	??___flge+1
 12124  1F2A  3000               	movlw	0
 12125  1F2B  00D2               	movwf	??___flge+2
 12126  1F2C  3080               	movlw	128
 12127  1F2D  00D3               	movwf	??___flge+3
 12128  1F2E  0848               	movf	___flge@ff1,w
 12129  1F2F  02D0               	subwf	??___flge,f
 12130  1F30  0849               	movf	___flge@ff1+1,w
 12131  1F31  3BD1               	subwfb	??___flge+1,f
 12132  1F32  084A               	movf	___flge@ff1+2,w
 12133  1F33  3BD2               	subwfb	??___flge+2,f
 12134  1F34  084B               	movf	___flge@ff1+3,w
 12135  1F35  3BD3               	subwfb	??___flge+3,f
 12136  1F36  0853               	movf	??___flge+3,w
 12137  1F37  00CB               	movwf	___flge@ff1+3
 12138  1F38  0852               	movf	??___flge+2,w
 12139  1F39  00CA               	movwf	___flge@ff1+2
 12140  1F3A  0851               	movf	??___flge+1,w
 12141  1F3B  00C9               	movwf	___flge@ff1+1
 12142  1F3C  0850               	movf	??___flge,w
 12143  1F3D  00C8               	movwf	___flge@ff1
 12144  1F3E                     l3523:
 12145  1F3E  1FCF               	btfss	___flge@ff2+3,7
 12146  1F3F  2F58               	goto	l588
 12147  1F40  3000               	movlw	0
 12148  1F41  00D0               	movwf	??___flge
 12149  1F42  3000               	movlw	0
 12150  1F43  00D1               	movwf	??___flge+1
 12151  1F44  3000               	movlw	0
 12152  1F45  00D2               	movwf	??___flge+2
 12153  1F46  3080               	movlw	128
 12154  1F47  00D3               	movwf	??___flge+3
 12155  1F48  084C               	movf	___flge@ff2,w
 12156  1F49  02D0               	subwf	??___flge,f
 12157  1F4A  084D               	movf	___flge@ff2+1,w
 12158  1F4B  3BD1               	subwfb	??___flge+1,f
 12159  1F4C  084E               	movf	___flge@ff2+2,w
 12160  1F4D  3BD2               	subwfb	??___flge+2,f
 12161  1F4E  084F               	movf	___flge@ff2+3,w
 12162  1F4F  3BD3               	subwfb	??___flge+3,f
 12163  1F50  0853               	movf	??___flge+3,w
 12164  1F51  00CF               	movwf	___flge@ff2+3
 12165  1F52  0852               	movf	??___flge+2,w
 12166  1F53  00CE               	movwf	___flge@ff2+2
 12167  1F54  0851               	movf	??___flge+1,w
 12168  1F55  00CD               	movwf	___flge@ff2+1
 12169  1F56  0850               	movf	??___flge,w
 12170  1F57  00CC               	movwf	___flge@ff2
 12171  1F58                     l588:
 12172  1F58  3080               	movlw	128
 12173  1F59  06CB               	xorwf	___flge@ff1+3,f
 12174  1F5A  3080               	movlw	128
 12175  1F5B  06CF               	xorwf	___flge@ff2+3,f
 12176  1F5C  084F               	movf	___flge@ff2+3,w
 12177  1F5D  024B               	subwf	___flge@ff1+3,w
 12178  1F5E  1D03               	skipz
 12179  1F5F  0008               	return
 12180  1F60  084E               	movf	___flge@ff2+2,w
 12181  1F61  024A               	subwf	___flge@ff1+2,w
 12182  1F62  1D03               	skipz
 12183  1F63  0008               	return
 12184  1F64  084D               	movf	___flge@ff2+1,w
 12185  1F65  0249               	subwf	___flge@ff1+1,w
 12186  1F66  1D03               	skipz
 12187  1F67  0008               	return
 12188  1F68  084C               	movf	___flge@ff2,w
 12189  1F69  0248               	subwf	___flge@ff1,w
 12190  1F6A  0008               	return
 12191  1F6B                     __end_of___flge:
 12192                           
 12193                           	psect	text28
 12194  1C3C                     __ptext28:	
 12195 ;; *************** function ___fleq *****************
 12196 ;; Defined at:
 12197 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
 12198 ;; Parameters:    Size  Location     Type
 12199 ;;  ff1             4    0[COMMON] unsigned int 
 12200 ;;  ff2             4    4[COMMON] unsigned int 
 12201 ;; Auto vars:     Size  Location     Type
 12202 ;;		None
 12203 ;; Return value:  Size  Location     Type
 12204 ;;		None               void
 12205 ;; Registers used:
 12206 ;;		wreg, status,2, status,0
 12207 ;; Tracked objects:
 12208 ;;		On entry : 1F/1
 12209 ;;		On exit  : 1F/1
 12210 ;;		Unchanged: 1F/0
 12211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12212 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12214 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12215 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12216 ;;Total ram usage:       12 bytes
 12217 ;; Hardware stack levels used: 1
 12218 ;; This function calls:
 12219 ;;		Nothing
 12220 ;; This function is called by:
 12221 ;;		_efgtoa
 12222 ;; This function uses a non-reentrant model
 12223 ;;
 12224                           
 12225                           
 12226                           ;psect for function ___fleq
 12227  1C3C                     ___fleq:
 12228                           
 12229                           ;incstack = 0
 12230                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 12231  1C3C  3000               	movlw	0
 12232  1C3D  0570               	andwf	___fleq@ff1,w
 12233  1C3E  00F8               	movwf	??___fleq
 12234  1C3F  3000               	movlw	0
 12235  1C40  0571               	andwf	___fleq@ff1+1,w
 12236  1C41  00F9               	movwf	??___fleq+1
 12237  1C42  3080               	movlw	128
 12238  1C43  0572               	andwf	___fleq@ff1+2,w
 12239  1C44  00FA               	movwf	??___fleq+2
 12240  1C45  307F               	movlw	127
 12241  1C46  0573               	andwf	___fleq@ff1+3,w
 12242  1C47  00FB               	movwf	??___fleq+3
 12243  1C48  087B               	movf	??___fleq+3,w
 12244  1C49  047A               	iorwf	??___fleq+2,w
 12245  1C4A  0479               	iorwf	??___fleq+1,w
 12246  1C4B  0478               	iorwf	??___fleq,w
 12247  1C4C  1D03               	skipz
 12248  1C4D  2C56               	goto	l576
 12249  1C4E  3000               	movlw	0
 12250  1C4F  00F3               	movwf	___fleq@ff1+3
 12251  1C50  3000               	movlw	0
 12252  1C51  00F2               	movwf	___fleq@ff1+2
 12253  1C52  3000               	movlw	0
 12254  1C53  00F1               	movwf	___fleq@ff1+1
 12255  1C54  3000               	movlw	0
 12256  1C55  00F0               	movwf	___fleq@ff1
 12257  1C56                     l576:
 12258  1C56  3000               	movlw	0
 12259  1C57  0574               	andwf	___fleq@ff2,w
 12260  1C58  00F8               	movwf	??___fleq
 12261  1C59  3000               	movlw	0
 12262  1C5A  0575               	andwf	___fleq@ff2+1,w
 12263  1C5B  00F9               	movwf	??___fleq+1
 12264  1C5C  3080               	movlw	128
 12265  1C5D  0576               	andwf	___fleq@ff2+2,w
 12266  1C5E  00FA               	movwf	??___fleq+2
 12267  1C5F  307F               	movlw	127
 12268  1C60  0577               	andwf	___fleq@ff2+3,w
 12269  1C61  00FB               	movwf	??___fleq+3
 12270  1C62  087B               	movf	??___fleq+3,w
 12271  1C63  047A               	iorwf	??___fleq+2,w
 12272  1C64  0479               	iorwf	??___fleq+1,w
 12273  1C65  0478               	iorwf	??___fleq,w
 12274  1C66  1D03               	skipz
 12275  1C67  2C70               	goto	l577
 12276  1C68  3000               	movlw	0
 12277  1C69  00F7               	movwf	___fleq@ff2+3
 12278  1C6A  3000               	movlw	0
 12279  1C6B  00F6               	movwf	___fleq@ff2+2
 12280  1C6C  3000               	movlw	0
 12281  1C6D  00F5               	movwf	___fleq@ff2+1
 12282  1C6E  3000               	movlw	0
 12283  1C6F  00F4               	movwf	___fleq@ff2
 12284  1C70                     l577:
 12285  1C70  0877               	movf	___fleq@ff2+3,w
 12286  1C71  0673               	xorwf	___fleq@ff1+3,w
 12287  1C72  1D03               	skipz
 12288  1C73  2C7E               	goto	u4715
 12289  1C74  0876               	movf	___fleq@ff2+2,w
 12290  1C75  0672               	xorwf	___fleq@ff1+2,w
 12291  1C76  1D03               	skipz
 12292  1C77  2C7E               	goto	u4715
 12293  1C78  0875               	movf	___fleq@ff2+1,w
 12294  1C79  0671               	xorwf	___fleq@ff1+1,w
 12295  1C7A  1D03               	skipz
 12296  1C7B  2C7E               	goto	u4715
 12297  1C7C  0874               	movf	___fleq@ff2,w
 12298  1C7D  0670               	xorwf	___fleq@ff1,w
 12299  1C7E                     u4715:
 12300  1C7E  1903               	skipnz
 12301  1C7F  2C82               	goto	l3509
 12302  1C80  1003               	clrc
 12303  1C81  0008               	return
 12304  1C82                     l3509:
 12305  1C82  1403               	setc
 12306  1C83  0008               	return
 12307  1C84                     __end_of___fleq:
 12308                           
 12309                           	psect	text29
 12310  1686                     __ptext29:	
 12311 ;; *************** function ___fldiv *****************
 12312 ;; Defined at:
 12313 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
 12314 ;; Parameters:    Size  Location     Type
 12315 ;;  a               4    0[COMMON] unsigned int 
 12316 ;;  b               4    4[COMMON] unsigned int 
 12317 ;; Auto vars:     Size  Location     Type
 12318 ;;  grs             4    7[BANK0 ] unsigned long 
 12319 ;;  rem             4    0[BANK0 ] unsigned long 
 12320 ;;  new_exp         2    5[BANK0 ] int 
 12321 ;;  aexp            1   12[BANK0 ] unsigned char 
 12322 ;;  bexp            1   11[BANK0 ] unsigned char 
 12323 ;;  sign            1    4[BANK0 ] unsigned char 
 12324 ;; Return value:  Size  Location     Type
 12325 ;;                  4    0[COMMON] unsigned char 
 12326 ;; Registers used:
 12327 ;;		wreg, status,2, status,0
 12328 ;; Tracked objects:
 12329 ;;		On entry : 1E/0
 12330 ;;		On exit  : 1F/0
 12331 ;;		Unchanged: 0/0
 12332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12333 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12334 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12335 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12336 ;;      Totals:        13      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12337 ;;Total ram usage:       26 bytes
 12338 ;; Hardware stack levels used: 1
 12339 ;; This function calls:
 12340 ;;		Nothing
 12341 ;; This function is called by:
 12342 ;;		_readEmissivity
 12343 ;;		_efgtoa
 12344 ;; This function uses a non-reentrant model
 12345 ;;
 12346                           
 12347                           
 12348                           ;psect for function ___fldiv
 12349  1686                     ___fldiv:
 12350                           
 12351                           ;incstack = 0
 12352                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 12353  1686  0877               	movf	___fldiv@b+3,w
 12354  1687  3980               	andlw	128
 12355  1688  00F8               	movwf	??___fldiv
 12356  1689  0878               	movf	??___fldiv,w
 12357  168A  0020               	movlb	0	; select bank0
 12358  168B  00A4               	movwf	___fldiv@sign
 12359  168C  3577               	lslf	___fldiv@b+3,w
 12360  168D  00F8               	movwf	??___fldiv
 12361  168E  0878               	movf	??___fldiv,w
 12362  168F  00AB               	movwf	___fldiv@bexp
 12363  1690  1BF6               	btfsc	___fldiv@b+2,7
 12364  1691  142B               	bsf	___fldiv@bexp,0
 12365  1692  082B               	movf	___fldiv@bexp,w
 12366  1693  1903               	btfsc	3,2
 12367  1694  2EA3               	goto	l3601
 12368  1695  0A2B               	incf	___fldiv@bexp,w
 12369  1696  1D03               	btfss	3,2
 12370  1697  2EA0               	goto	l3597
 12371  1698  3000               	movlw	0
 12372  1699  00F7               	movwf	___fldiv@b+3
 12373  169A  3000               	movlw	0
 12374  169B  00F6               	movwf	___fldiv@b+2
 12375  169C  3000               	movlw	0
 12376  169D  00F5               	movwf	___fldiv@b+1
 12377  169E  3000               	movlw	0
 12378  169F  00F4               	movwf	___fldiv@b
 12379  16A0                     l3597:
 12380  16A0  17F6               	bsf	___fldiv@b+2,7
 12381  16A1  01F7               	clrf	___fldiv@b+3
 12382  16A2  2EAB               	goto	l3603
 12383  16A3                     l3601:
 12384  16A3  3000               	movlw	0
 12385  16A4  00F7               	movwf	___fldiv@b+3
 12386  16A5  3000               	movlw	0
 12387  16A6  00F6               	movwf	___fldiv@b+2
 12388  16A7  3000               	movlw	0
 12389  16A8  00F5               	movwf	___fldiv@b+1
 12390  16A9  3000               	movlw	0
 12391  16AA  00F4               	movwf	___fldiv@b
 12392  16AB                     l3603:
 12393  16AB  0873               	movf	___fldiv@a+3,w
 12394  16AC  3980               	andlw	128
 12395  16AD  00F8               	movwf	??___fldiv
 12396  16AE  0878               	movf	??___fldiv,w
 12397  16AF  06A4               	xorwf	___fldiv@sign,f
 12398  16B0  3573               	lslf	___fldiv@a+3,w
 12399  16B1  00F8               	movwf	??___fldiv
 12400  16B2  0878               	movf	??___fldiv,w
 12401  16B3  00AC               	movwf	___fldiv@aexp
 12402  16B4  1BF2               	btfsc	___fldiv@a+2,7
 12403  16B5  142C               	bsf	___fldiv@aexp,0
 12404  16B6  082C               	movf	___fldiv@aexp,w
 12405  16B7  1903               	btfsc	3,2
 12406  16B8  2EC7               	goto	l3621
 12407  16B9  0A2C               	incf	___fldiv@aexp,w
 12408  16BA  1D03               	btfss	3,2
 12409  16BB  2EC4               	goto	l3617
 12410  16BC  3000               	movlw	0
 12411  16BD  00F3               	movwf	___fldiv@a+3
 12412  16BE  3000               	movlw	0
 12413  16BF  00F2               	movwf	___fldiv@a+2
 12414  16C0  3000               	movlw	0
 12415  16C1  00F1               	movwf	___fldiv@a+1
 12416  16C2  3000               	movlw	0
 12417  16C3  00F0               	movwf	___fldiv@a
 12418  16C4                     l3617:
 12419  16C4  17F2               	bsf	___fldiv@a+2,7
 12420  16C5  01F3               	clrf	___fldiv@a+3
 12421  16C6  2ECF               	goto	l764
 12422  16C7                     l3621:
 12423  16C7  3000               	movlw	0
 12424  16C8  00F3               	movwf	___fldiv@a+3
 12425  16C9  3000               	movlw	0
 12426  16CA  00F2               	movwf	___fldiv@a+2
 12427  16CB  3000               	movlw	0
 12428  16CC  00F1               	movwf	___fldiv@a+1
 12429  16CD  3000               	movlw	0
 12430  16CE  00F0               	movwf	___fldiv@a
 12431  16CF                     l764:
 12432  16CF  0873               	movf	___fldiv@a+3,w
 12433  16D0  0472               	iorwf	___fldiv@a+2,w
 12434  16D1  0471               	iorwf	___fldiv@a+1,w
 12435  16D2  0470               	iorwf	___fldiv@a,w
 12436  16D3  1D03               	skipz
 12437  16D4  2EEE               	goto	l3631
 12438  16D5  3000               	movlw	0
 12439  16D6  00F7               	movwf	___fldiv@b+3
 12440  16D7  3000               	movlw	0
 12441  16D8  00F6               	movwf	___fldiv@b+2
 12442  16D9  3000               	movlw	0
 12443  16DA  00F5               	movwf	___fldiv@b+1
 12444  16DB  3000               	movlw	0
 12445  16DC  00F4               	movwf	___fldiv@b
 12446  16DD  3080               	movlw	128
 12447  16DE  04F6               	iorwf	___fldiv@b+2,f
 12448  16DF  307F               	movlw	127
 12449  16E0  04F7               	iorwf	___fldiv@b+3,f
 12450  16E1                     L13:
 12451  16E1  0824               	movf	___fldiv@sign,w
 12452  16E2  00F8               	movwf	??___fldiv
 12453  16E3  0878               	movf	??___fldiv,w
 12454  16E4  04F7               	iorwf	___fldiv@b+3,f
 12455  16E5  0877               	movf	___fldiv@b+3,w
 12456  16E6  00F3               	movwf	?___fldiv+3
 12457  16E7  0876               	movf	___fldiv@b+2,w
 12458  16E8  00F2               	movwf	?___fldiv+2
 12459  16E9  0875               	movf	___fldiv@b+1,w
 12460  16EA  00F1               	movwf	?___fldiv+1
 12461  16EB  0874               	movf	___fldiv@b,w
 12462  16EC  00F0               	movwf	?___fldiv
 12463  16ED  0008               	return
 12464  16EE                     l3631:
 12465  16EE  082B               	movf	___fldiv@bexp,w
 12466  16EF  1D03               	btfss	3,2
 12467  16F0  2EFA               	goto	l3637
 12468  16F1  3000               	movlw	0
 12469  16F2  00F3               	movwf	?___fldiv+3
 12470  16F3  3000               	movlw	0
 12471  16F4  00F2               	movwf	?___fldiv+2
 12472  16F5  3000               	movlw	0
 12473  16F6  00F1               	movwf	?___fldiv+1
 12474  16F7  3000               	movlw	0
 12475  16F8  00F0               	movwf	?___fldiv
 12476  16F9  0008               	return
 12477  16FA                     l3637:
 12478  16FA  082B               	movf	___fldiv@bexp,w
 12479  16FB  00F8               	movwf	??___fldiv
 12480  16FC  01F9               	clrf	??___fldiv+1
 12481  16FD  0879               	movf	??___fldiv+1,w
 12482  16FE  00FB               	movwf	??___fldiv+3
 12483  16FF  082C               	movf	___fldiv@aexp,w
 12484  1700  0278               	subwf	??___fldiv,w
 12485  1701  00FA               	movwf	??___fldiv+2
 12486  1702  1C03               	skipc
 12487  1703  03FB               	decf	??___fldiv+3,f
 12488  1704  087A               	movf	??___fldiv+2,w
 12489  1705  3E7F               	addlw	127
 12490  1706  00A5               	movwf	___fldiv@new_exp
 12491  1707  3000               	movlw	0
 12492  1708  3D7B               	addwfc	??___fldiv+3,w
 12493  1709  00A6               	movwf	___fldiv@new_exp+1
 12494  170A  0877               	movf	___fldiv@b+3,w
 12495  170B  00A3               	movwf	___fldiv@rem+3
 12496  170C  0876               	movf	___fldiv@b+2,w
 12497  170D  00A2               	movwf	___fldiv@rem+2
 12498  170E  0875               	movf	___fldiv@b+1,w
 12499  170F  00A1               	movwf	___fldiv@rem+1
 12500  1710  0874               	movf	___fldiv@b,w
 12501  1711  00A0               	movwf	___fldiv@rem
 12502  1712  3000               	movlw	0
 12503  1713  00F7               	movwf	___fldiv@b+3
 12504  1714  3000               	movlw	0
 12505  1715  00F6               	movwf	___fldiv@b+2
 12506  1716  3000               	movlw	0
 12507  1717  00F5               	movwf	___fldiv@b+1
 12508  1718  3000               	movlw	0
 12509  1719  00F4               	movwf	___fldiv@b
 12510  171A  3000               	movlw	0
 12511  171B  00AA               	movwf	___fldiv@grs+3
 12512  171C  3000               	movlw	0
 12513  171D  00A9               	movwf	___fldiv@grs+2
 12514  171E  3000               	movlw	0
 12515  171F  00A8               	movwf	___fldiv@grs+1
 12516  1720  3000               	movlw	0
 12517  1721  00A7               	movwf	___fldiv@grs
 12518  1722  01AC               	clrf	___fldiv@aexp
 12519  1723                     l3665:
 12520  1723  301A               	movlw	26
 12521  1724  022C               	subwf	___fldiv@aexp,w
 12522  1725  1803               	btfsc	3,0
 12523  1726  2F5F               	goto	l3667
 12524  1727  082C               	movf	___fldiv@aexp,w
 12525  1728  1903               	btfsc	3,2
 12526  1729  2F41               	goto	l3657
 12527  172A  3001               	movlw	1
 12528  172B                     u4975:
 12529  172B  35A0               	lslf	___fldiv@rem,f
 12530  172C  0DA1               	rlf	___fldiv@rem+1,f
 12531  172D  0DA2               	rlf	___fldiv@rem+2,f
 12532  172E  0DA3               	rlf	___fldiv@rem+3,f
 12533  172F  0B89               	decfsz	9,f
 12534  1730  2F2B               	goto	u4975
 12535  1731  3001               	movlw	1
 12536  1732                     u4985:
 12537  1732  35F4               	lslf	___fldiv@b,f
 12538  1733  0DF5               	rlf	___fldiv@b+1,f
 12539  1734  0DF6               	rlf	___fldiv@b+2,f
 12540  1735  0DF7               	rlf	___fldiv@b+3,f
 12541  1736  0B89               	decfsz	9,f
 12542  1737  2F32               	goto	u4985
 12543  1738  1BAA               	btfsc	___fldiv@grs+3,7
 12544  1739  1474               	bsf	___fldiv@b,0
 12545  173A  3001               	movlw	1
 12546  173B                     u5005:
 12547  173B  35A7               	lslf	___fldiv@grs,f
 12548  173C  0DA8               	rlf	___fldiv@grs+1,f
 12549  173D  0DA9               	rlf	___fldiv@grs+2,f
 12550  173E  0DAA               	rlf	___fldiv@grs+3,f
 12551  173F  0B89               	decfsz	9,f
 12552  1740  2F3B               	goto	u5005
 12553  1741                     l3657:
 12554  1741  0873               	movf	___fldiv@a+3,w
 12555  1742  0223               	subwf	___fldiv@rem+3,w
 12556  1743  1D03               	skipz
 12557  1744  2F4F               	goto	u5015
 12558  1745  0872               	movf	___fldiv@a+2,w
 12559  1746  0222               	subwf	___fldiv@rem+2,w
 12560  1747  1D03               	skipz
 12561  1748  2F4F               	goto	u5015
 12562  1749  0871               	movf	___fldiv@a+1,w
 12563  174A  0221               	subwf	___fldiv@rem+1,w
 12564  174B  1D03               	skipz
 12565  174C  2F4F               	goto	u5015
 12566  174D  0870               	movf	___fldiv@a,w
 12567  174E  0220               	subwf	___fldiv@rem,w
 12568  174F                     u5015:
 12569  174F  1C03               	skipc
 12570  1750  2F5A               	goto	l3663
 12571  1751  172A               	bsf	___fldiv@grs+3,6
 12572  1752  0870               	movf	___fldiv@a,w
 12573  1753  02A0               	subwf	___fldiv@rem,f
 12574  1754  0871               	movf	___fldiv@a+1,w
 12575  1755  3BA1               	subwfb	___fldiv@rem+1,f
 12576  1756  0872               	movf	___fldiv@a+2,w
 12577  1757  3BA2               	subwfb	___fldiv@rem+2,f
 12578  1758  0873               	movf	___fldiv@a+3,w
 12579  1759  3BA3               	subwfb	___fldiv@rem+3,f
 12580  175A                     l3663:
 12581  175A  3001               	movlw	1
 12582  175B  00F8               	movwf	??___fldiv
 12583  175C  0878               	movf	??___fldiv,w
 12584  175D  07AC               	addwf	___fldiv@aexp,f
 12585  175E  2F23               	goto	l3665
 12586  175F                     l3667:
 12587  175F  0823               	movf	___fldiv@rem+3,w
 12588  1760  0422               	iorwf	___fldiv@rem+2,w
 12589  1761  0421               	iorwf	___fldiv@rem+1,w
 12590  1762  0420               	iorwf	___fldiv@rem,w
 12591  1763  1D03               	btfss	3,2
 12592  1764  1427               	bsf	___fldiv@grs,0
 12593  1765                     l3681:
 12594  1765  1BF6               	btfsc	___fldiv@b+2,7
 12595  1766  2F7C               	goto	l3683
 12596  1767  3001               	movlw	1
 12597  1768                     u5045:
 12598  1768  35F4               	lslf	___fldiv@b,f
 12599  1769  0DF5               	rlf	___fldiv@b+1,f
 12600  176A  0DF6               	rlf	___fldiv@b+2,f
 12601  176B  0DF7               	rlf	___fldiv@b+3,f
 12602  176C  0B89               	decfsz	9,f
 12603  176D  2F68               	goto	u5045
 12604  176E  1BAA               	btfsc	___fldiv@grs+3,7
 12605  176F  1474               	bsf	___fldiv@b,0
 12606  1770  3001               	movlw	1
 12607  1771                     u5065:
 12608  1771  35A7               	lslf	___fldiv@grs,f
 12609  1772  0DA8               	rlf	___fldiv@grs+1,f
 12610  1773  0DA9               	rlf	___fldiv@grs+2,f
 12611  1774  0DAA               	rlf	___fldiv@grs+3,f
 12612  1775  0B89               	decfsz	9,f
 12613  1776  2F71               	goto	u5065
 12614  1777  30FF               	movlw	255
 12615  1778  07A5               	addwf	___fldiv@new_exp,f
 12616  1779  30FF               	movlw	255
 12617  177A  3DA6               	addwfc	___fldiv@new_exp+1,f
 12618  177B  2F65               	goto	l3681
 12619  177C                     l3683:
 12620  177C  01AC               	clrf	___fldiv@aexp
 12621  177D  1FAA               	btfss	___fldiv@grs+3,7
 12622  177E  2F95               	goto	l3693
 12623  177F  30FF               	movlw	255
 12624  1780  0527               	andwf	___fldiv@grs,w
 12625  1781  00F8               	movwf	??___fldiv
 12626  1782  30FF               	movlw	255
 12627  1783  0528               	andwf	___fldiv@grs+1,w
 12628  1784  00F9               	movwf	??___fldiv+1
 12629  1785  30FF               	movlw	255
 12630  1786  0529               	andwf	___fldiv@grs+2,w
 12631  1787  00FA               	movwf	??___fldiv+2
 12632  1788  307F               	movlw	127
 12633  1789  052A               	andwf	___fldiv@grs+3,w
 12634  178A  00FB               	movwf	??___fldiv+3
 12635  178B  087B               	movf	??___fldiv+3,w
 12636  178C  047A               	iorwf	??___fldiv+2,w
 12637  178D  0479               	iorwf	??___fldiv+1,w
 12638  178E  0478               	iorwf	??___fldiv,w
 12639  178F  1903               	skipnz
 12640  1790  1874               	btfsc	___fldiv@b,0
 12641  1791  2F93               	goto	l3689
 12642  1792  2F95               	goto	l3693
 12643  1793                     l3689:
 12644  1793  01AC               	clrf	___fldiv@aexp
 12645  1794  0AAC               	incf	___fldiv@aexp,f
 12646  1795                     l3693:
 12647  1795  082C               	movf	___fldiv@aexp,w
 12648  1796  1903               	btfsc	3,2
 12649  1797  2FBE               	goto	l3703
 12650  1798  3001               	movlw	1
 12651  1799  07F4               	addwf	___fldiv@b,f
 12652  179A  3000               	movlw	0
 12653  179B  3DF5               	addwfc	___fldiv@b+1,f
 12654  179C  3000               	movlw	0
 12655  179D  3DF6               	addwfc	___fldiv@b+2,f
 12656  179E  3000               	movlw	0
 12657  179F  3DF7               	addwfc	___fldiv@b+3,f
 12658  17A0  1C77               	btfss	___fldiv@b+3,0
 12659  17A1  2FBE               	goto	l3703
 12660  17A2  0874               	movf	___fldiv@b,w
 12661  17A3  00F8               	movwf	??___fldiv
 12662  17A4  0875               	movf	___fldiv@b+1,w
 12663  17A5  00F9               	movwf	??___fldiv+1
 12664  17A6  0876               	movf	___fldiv@b+2,w
 12665  17A7  00FA               	movwf	??___fldiv+2
 12666  17A8  0877               	movf	___fldiv@b+3,w
 12667  17A9  00FB               	movwf	??___fldiv+3
 12668  17AA  3001               	movlw	1
 12669  17AB  00FC               	movwf	??___fldiv+4
 12670  17AC                     u5135:
 12671  17AC  37FB               	asrf	??___fldiv+3,f
 12672  17AD  0CFA               	rrf	??___fldiv+2,f
 12673  17AE  0CF9               	rrf	??___fldiv+1,f
 12674  17AF  0CF8               	rrf	??___fldiv,f
 12675  17B0  0BFC               	decfsz	??___fldiv+4,f
 12676  17B1  2FAC               	goto	u5135
 12677  17B2  087B               	movf	??___fldiv+3,w
 12678  17B3  00F7               	movwf	___fldiv@b+3
 12679  17B4  087A               	movf	??___fldiv+2,w
 12680  17B5  00F6               	movwf	___fldiv@b+2
 12681  17B6  0879               	movf	??___fldiv+1,w
 12682  17B7  00F5               	movwf	___fldiv@b+1
 12683  17B8  0878               	movf	??___fldiv,w
 12684  17B9  00F4               	movwf	___fldiv@b
 12685  17BA  3001               	movlw	1
 12686  17BB  07A5               	addwf	___fldiv@new_exp,f
 12687  17BC  3000               	movlw	0
 12688  17BD  3DA6               	addwfc	___fldiv@new_exp+1,f
 12689  17BE                     l3703:
 12690  17BE  0826               	movf	___fldiv@new_exp+1,w
 12691  17BF  3A80               	xorlw	128
 12692  17C0  00F8               	movwf	??___fldiv
 12693  17C1  3080               	movlw	128
 12694  17C2  0278               	subwf	??___fldiv,w
 12695  17C3  1D03               	skipz
 12696  17C4  2FC7               	goto	u5145
 12697  17C5  30FF               	movlw	255
 12698  17C6  0225               	subwf	___fldiv@new_exp,w
 12699  17C7                     u5145:
 12700  17C7  1C03               	skipc
 12701  17C8  2FD6               	goto	l785
 12702  17C9  30FF               	movlw	255
 12703  17CA  0020               	movlb	0	; select bank0
 12704  17CB  00A5               	movwf	___fldiv@new_exp
 12705  17CC  3000               	movlw	0
 12706  17CD  00A6               	movwf	___fldiv@new_exp+1
 12707  17CE  3000               	movlw	0
 12708  17CF  00F7               	movwf	___fldiv@b+3
 12709  17D0  3000               	movlw	0
 12710  17D1  00F6               	movwf	___fldiv@b+2
 12711  17D2  3000               	movlw	0
 12712  17D3  00F5               	movwf	___fldiv@b+1
 12713  17D4  3000               	movlw	0
 12714  17D5  00F4               	movwf	___fldiv@b
 12715  17D6                     l785:
 12716  17D6  0020               	movlb	0	; select bank0
 12717  17D7  0826               	movf	___fldiv@new_exp+1,w
 12718  17D8  3A80               	xorlw	128
 12719  17D9  00F8               	movwf	??___fldiv
 12720  17DA  3080               	movlw	128
 12721  17DB  0278               	subwf	??___fldiv,w
 12722  17DC  1D03               	skipz
 12723  17DD  2FE0               	goto	u5155
 12724  17DE  3001               	movlw	1
 12725  17DF  0225               	subwf	___fldiv@new_exp,w
 12726  17E0                     u5155:
 12727  17E0  1803               	skipnc
 12728  17E1  2FEE               	goto	l786
 12729  17E2  0020               	movlb	0	; select bank0
 12730  17E3  01A5               	clrf	___fldiv@new_exp
 12731  17E4  01A6               	clrf	___fldiv@new_exp+1
 12732  17E5  3000               	movlw	0
 12733  17E6  00F7               	movwf	___fldiv@b+3
 12734  17E7  3000               	movlw	0
 12735  17E8  00F6               	movwf	___fldiv@b+2
 12736  17E9  3000               	movlw	0
 12737  17EA  00F5               	movwf	___fldiv@b+1
 12738  17EB  3000               	movlw	0
 12739  17EC  00F4               	movwf	___fldiv@b
 12740  17ED  01A4               	clrf	___fldiv@sign
 12741  17EE                     l786:
 12742  17EE  0020               	movlb	0	; select bank0
 12743  17EF  0825               	movf	___fldiv@new_exp,w
 12744  17F0  00F8               	movwf	??___fldiv
 12745  17F1  0878               	movf	??___fldiv,w
 12746  17F2  00AB               	movwf	___fldiv@bexp
 12747  17F3  1C2B               	btfss	___fldiv@bexp,0
 12748  17F4  2FF7               	goto	l3717
 12749  17F5  17F6               	bsf	___fldiv@b+2,7
 12750  17F6  2FFB               	goto	l788
 12751  17F7                     l3717:
 12752  17F7  307F               	movlw	127
 12753  17F8  00F8               	movwf	??___fldiv
 12754  17F9  0878               	movf	??___fldiv,w
 12755  17FA  05F6               	andwf	___fldiv@b+2,f
 12756  17FB                     l788:
 12757  17FB  362B               	lsrf	___fldiv@bexp,w
 12758  17FC  00F8               	movwf	??___fldiv
 12759  17FD  0878               	movf	??___fldiv,w
 12760  17FE  00F7               	movwf	___fldiv@b+3
 12761  17FF  2EE1               	goto	L13
 12762  1800                     __end_of___fldiv:
 12763                           
 12764                           	psect	text30
 12765  1BB2                     __ptext30:	
 12766 ;; *************** function ___awmod *****************
 12767 ;; Defined at:
 12768 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
 12769 ;; Parameters:    Size  Location     Type
 12770 ;;  divisor         2    0[COMMON] int 
 12771 ;;  dividend        2    2[COMMON] int 
 12772 ;; Auto vars:     Size  Location     Type
 12773 ;;  sign            1    6[COMMON] unsigned char 
 12774 ;;  counter         1    5[COMMON] unsigned char 
 12775 ;; Return value:  Size  Location     Type
 12776 ;;                  2    0[COMMON] int 
 12777 ;; Registers used:
 12778 ;;		wreg, status,2, status,0
 12779 ;; Tracked objects:
 12780 ;;		On entry : 1F/1
 12781 ;;		On exit  : 1F/1
 12782 ;;		Unchanged: 1F/0
 12783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12784 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12785 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12786 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12787 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12788 ;;Total ram usage:        7 bytes
 12789 ;; Hardware stack levels used: 1
 12790 ;; This function calls:
 12791 ;;		Nothing
 12792 ;; This function is called by:
 12793 ;;		_efgtoa
 12794 ;; This function uses a non-reentrant model
 12795 ;;
 12796                           
 12797                           
 12798                           ;psect for function ___awmod
 12799  1BB2                     ___awmod:
 12800                           
 12801                           ;incstack = 0
 12802                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 12803  1BB2  01F6               	clrf	___awmod@sign
 12804  1BB3  1FF3               	btfss	___awmod@dividend+1,7
 12805  1BB4  2BBC               	goto	l3471
 12806  1BB5  09F2               	comf	___awmod@dividend,f
 12807  1BB6  09F3               	comf	___awmod@dividend+1,f
 12808  1BB7  0AF2               	incf	___awmod@dividend,f
 12809  1BB8  1903               	skipnz
 12810  1BB9  0AF3               	incf	___awmod@dividend+1,f
 12811  1BBA  01F6               	clrf	___awmod@sign
 12812  1BBB  0AF6               	incf	___awmod@sign,f
 12813  1BBC                     l3471:
 12814  1BBC  1FF1               	btfss	___awmod@divisor+1,7
 12815  1BBD  2BC3               	goto	l3475
 12816  1BBE  09F0               	comf	___awmod@divisor,f
 12817  1BBF  09F1               	comf	___awmod@divisor+1,f
 12818  1BC0  0AF0               	incf	___awmod@divisor,f
 12819  1BC1  1903               	skipnz
 12820  1BC2  0AF1               	incf	___awmod@divisor+1,f
 12821  1BC3                     l3475:
 12822  1BC3  0870               	movf	___awmod@divisor,w
 12823  1BC4  0471               	iorwf	___awmod@divisor+1,w
 12824  1BC5  1903               	btfsc	3,2
 12825  1BC6  2BEA               	goto	l3493
 12826  1BC7  01F5               	clrf	___awmod@counter
 12827  1BC8  0AF5               	incf	___awmod@counter,f
 12828  1BC9                     l3483:
 12829  1BC9  1BF1               	btfsc	___awmod@divisor+1,7
 12830  1BCA  2BD5               	goto	l3485
 12831  1BCB  3001               	movlw	1
 12832  1BCC                     u4635:
 12833  1BCC  35F0               	lslf	___awmod@divisor,f
 12834  1BCD  0DF1               	rlf	___awmod@divisor+1,f
 12835  1BCE  0B89               	decfsz	9,f
 12836  1BCF  2BCC               	goto	u4635
 12837  1BD0  3001               	movlw	1
 12838  1BD1  00F4               	movwf	??___awmod
 12839  1BD2  0874               	movf	??___awmod,w
 12840  1BD3  07F5               	addwf	___awmod@counter,f
 12841  1BD4  2BC9               	goto	l3483
 12842  1BD5                     l3485:
 12843  1BD5  0871               	movf	___awmod@divisor+1,w
 12844  1BD6  0273               	subwf	___awmod@dividend+1,w
 12845  1BD7  1D03               	skipz
 12846  1BD8  2BDB               	goto	u4655
 12847  1BD9  0870               	movf	___awmod@divisor,w
 12848  1BDA  0272               	subwf	___awmod@dividend,w
 12849  1BDB                     u4655:
 12850  1BDB  1C03               	skipc
 12851  1BDC  2BE1               	goto	l3489
 12852  1BDD  0870               	movf	___awmod@divisor,w
 12853  1BDE  02F2               	subwf	___awmod@dividend,f
 12854  1BDF  0871               	movf	___awmod@divisor+1,w
 12855  1BE0  3BF3               	subwfb	___awmod@dividend+1,f
 12856  1BE1                     l3489:
 12857  1BE1  3001               	movlw	1
 12858  1BE2                     u4665:
 12859  1BE2  36F1               	lsrf	___awmod@divisor+1,f
 12860  1BE3  0CF0               	rrf	___awmod@divisor,f
 12861  1BE4  0B89               	decfsz	9,f
 12862  1BE5  2BE2               	goto	u4665
 12863  1BE6  3001               	movlw	1
 12864  1BE7  02F5               	subwf	___awmod@counter,f
 12865  1BE8  1D03               	btfss	3,2
 12866  1BE9  2BD5               	goto	l3485
 12867  1BEA                     l3493:
 12868  1BEA  0876               	movf	___awmod@sign,w
 12869  1BEB  1903               	btfsc	3,2
 12870  1BEC  2BF2               	goto	l3497
 12871  1BED  09F2               	comf	___awmod@dividend,f
 12872  1BEE  09F3               	comf	___awmod@dividend+1,f
 12873  1BEF  0AF2               	incf	___awmod@dividend,f
 12874  1BF0  1903               	skipnz
 12875  1BF1  0AF3               	incf	___awmod@dividend+1,f
 12876  1BF2                     l3497:
 12877  1BF2  0873               	movf	___awmod@dividend+1,w
 12878  1BF3  00F1               	movwf	?___awmod+1
 12879  1BF4  0872               	movf	___awmod@dividend,w
 12880  1BF5  00F0               	movwf	?___awmod
 12881  1BF6  0008               	return
 12882  1BF7                     __end_of___awmod:
 12883                           
 12884                           	psect	text31
 12885  1D1F                     __ptext31:	
 12886 ;; *************** function ___awdiv *****************
 12887 ;; Defined at:
 12888 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 12889 ;; Parameters:    Size  Location     Type
 12890 ;;  divisor         2    0[COMMON] int 
 12891 ;;  dividend        2    2[COMMON] int 
 12892 ;; Auto vars:     Size  Location     Type
 12893 ;;  quotient        2    7[COMMON] int 
 12894 ;;  sign            1    6[COMMON] unsigned char 
 12895 ;;  counter         1    5[COMMON] unsigned char 
 12896 ;; Return value:  Size  Location     Type
 12897 ;;                  2    0[COMMON] int 
 12898 ;; Registers used:
 12899 ;;		wreg, status,2, status,0
 12900 ;; Tracked objects:
 12901 ;;		On entry : 1F/1
 12902 ;;		On exit  : 1F/1
 12903 ;;		Unchanged: 1F/0
 12904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12905 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12906 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12907 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12908 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12909 ;;Total ram usage:        9 bytes
 12910 ;; Hardware stack levels used: 1
 12911 ;; This function calls:
 12912 ;;		Nothing
 12913 ;; This function is called by:
 12914 ;;		_efgtoa
 12915 ;; This function uses a non-reentrant model
 12916 ;;
 12917                           
 12918                           
 12919                           ;psect for function ___awdiv
 12920  1D1F                     ___awdiv:
 12921                           
 12922                           ;incstack = 0
 12923                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 12924  1D1F  01F6               	clrf	___awdiv@sign
 12925  1D20  1FF1               	btfss	___awdiv@divisor+1,7
 12926  1D21  2D29               	goto	l3427
 12927  1D22  09F0               	comf	___awdiv@divisor,f
 12928  1D23  09F1               	comf	___awdiv@divisor+1,f
 12929  1D24  0AF0               	incf	___awdiv@divisor,f
 12930  1D25  1903               	skipnz
 12931  1D26  0AF1               	incf	___awdiv@divisor+1,f
 12932  1D27  01F6               	clrf	___awdiv@sign
 12933  1D28  0AF6               	incf	___awdiv@sign,f
 12934  1D29                     l3427:
 12935  1D29  1FF3               	btfss	___awdiv@dividend+1,7
 12936  1D2A  2D34               	goto	l3433
 12937  1D2B  09F2               	comf	___awdiv@dividend,f
 12938  1D2C  09F3               	comf	___awdiv@dividend+1,f
 12939  1D2D  0AF2               	incf	___awdiv@dividend,f
 12940  1D2E  1903               	skipnz
 12941  1D2F  0AF3               	incf	___awdiv@dividend+1,f
 12942  1D30  3001               	movlw	1
 12943  1D31  00F4               	movwf	??___awdiv
 12944  1D32  0874               	movf	??___awdiv,w
 12945  1D33  06F6               	xorwf	___awdiv@sign,f
 12946  1D34                     l3433:
 12947  1D34  01F7               	clrf	___awdiv@quotient
 12948  1D35  01F8               	clrf	___awdiv@quotient+1
 12949  1D36  0870               	movf	___awdiv@divisor,w
 12950  1D37  0471               	iorwf	___awdiv@divisor+1,w
 12951  1D38  1903               	btfsc	3,2
 12952  1D39  2D63               	goto	l3455
 12953  1D3A  01F5               	clrf	___awdiv@counter
 12954  1D3B  0AF5               	incf	___awdiv@counter,f
 12955  1D3C                     l3443:
 12956  1D3C  1BF1               	btfsc	___awdiv@divisor+1,7
 12957  1D3D  2D48               	goto	l3445
 12958  1D3E  3001               	movlw	1
 12959  1D3F                     u4535:
 12960  1D3F  35F0               	lslf	___awdiv@divisor,f
 12961  1D40  0DF1               	rlf	___awdiv@divisor+1,f
 12962  1D41  0B89               	decfsz	9,f
 12963  1D42  2D3F               	goto	u4535
 12964  1D43  3001               	movlw	1
 12965  1D44  00F4               	movwf	??___awdiv
 12966  1D45  0874               	movf	??___awdiv,w
 12967  1D46  07F5               	addwf	___awdiv@counter,f
 12968  1D47  2D3C               	goto	l3443
 12969  1D48                     l3445:
 12970  1D48  3001               	movlw	1
 12971  1D49                     u4555:
 12972  1D49  35F7               	lslf	___awdiv@quotient,f
 12973  1D4A  0DF8               	rlf	___awdiv@quotient+1,f
 12974  1D4B  0B89               	decfsz	9,f
 12975  1D4C  2D49               	goto	u4555
 12976  1D4D  0871               	movf	___awdiv@divisor+1,w
 12977  1D4E  0273               	subwf	___awdiv@dividend+1,w
 12978  1D4F  1D03               	skipz
 12979  1D50  2D53               	goto	u4565
 12980  1D51  0870               	movf	___awdiv@divisor,w
 12981  1D52  0272               	subwf	___awdiv@dividend,w
 12982  1D53                     u4565:
 12983  1D53  1C03               	skipc
 12984  1D54  2D5A               	goto	l3451
 12985  1D55  0870               	movf	___awdiv@divisor,w
 12986  1D56  02F2               	subwf	___awdiv@dividend,f
 12987  1D57  0871               	movf	___awdiv@divisor+1,w
 12988  1D58  3BF3               	subwfb	___awdiv@dividend+1,f
 12989  1D59  1477               	bsf	___awdiv@quotient,0
 12990  1D5A                     l3451:
 12991  1D5A  3001               	movlw	1
 12992  1D5B                     u4575:
 12993  1D5B  36F1               	lsrf	___awdiv@divisor+1,f
 12994  1D5C  0CF0               	rrf	___awdiv@divisor,f
 12995  1D5D  0B89               	decfsz	9,f
 12996  1D5E  2D5B               	goto	u4575
 12997  1D5F  3001               	movlw	1
 12998  1D60  02F5               	subwf	___awdiv@counter,f
 12999  1D61  1D03               	btfss	3,2
 13000  1D62  2D48               	goto	l3445
 13001  1D63                     l3455:
 13002  1D63  0876               	movf	___awdiv@sign,w
 13003  1D64  1903               	btfsc	3,2
 13004  1D65  2D6B               	goto	l3459
 13005  1D66  09F7               	comf	___awdiv@quotient,f
 13006  1D67  09F8               	comf	___awdiv@quotient+1,f
 13007  1D68  0AF7               	incf	___awdiv@quotient,f
 13008  1D69  1903               	skipnz
 13009  1D6A  0AF8               	incf	___awdiv@quotient+1,f
 13010  1D6B                     l3459:
 13011  1D6B  0878               	movf	___awdiv@quotient+1,w
 13012  1D6C  00F1               	movwf	?___awdiv+1
 13013  1D6D  0877               	movf	___awdiv@quotient,w
 13014  1D6E  00F0               	movwf	?___awdiv
 13015  1D6F  0008               	return
 13016  1D70                     __end_of___awdiv:
 13017                           
 13018                           	psect	text32
 13019  128D                     __ptext32:	
 13020 ;; *************** function _dtoa *****************
 13021 ;; Defined at:
 13022 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 13023 ;; Parameters:    Size  Location     Type
 13024 ;;  fp              1    wreg     PTR struct _IO_FILE
 13025 ;;		 -> NULL(0), 
 13026 ;;  d               8   16[BANK0 ] long long 
 13027 ;; Auto vars:     Size  Location     Type
 13028 ;;  fp              1   31[BANK0 ] PTR struct _IO_FILE
 13029 ;;		 -> NULL(0), 
 13030 ;;  n               8   36[BANK0 ] long long 
 13031 ;;  i               2   44[BANK0 ] int 
 13032 ;;  s               2   34[BANK0 ] int 
 13033 ;;  w               2   32[BANK0 ] int 
 13034 ;;  p               2   29[BANK0 ] int 
 13035 ;; Return value:  Size  Location     Type
 13036 ;;                  2   16[BANK0 ] int 
 13037 ;; Registers used:
 13038 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13039 ;; Tracked objects:
 13040 ;;		On entry : 1F/2
 13041 ;;		On exit  : 1F/0
 13042 ;;		Unchanged: 0/0
 13043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13044 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13045 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13046 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13047 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13048 ;;Total ram usage:       30 bytes
 13049 ;; Hardware stack levels used: 1
 13050 ;; Hardware stack levels required when called: 5
 13051 ;; This function calls:
 13052 ;;		___aodiv
 13053 ;;		___aomod
 13054 ;;		_abs
 13055 ;;		_pad
 13056 ;; This function is called by:
 13057 ;;		_vfpfcnvrt
 13058 ;; This function uses a non-reentrant model
 13059 ;;
 13060                           
 13061                           
 13062                           ;psect for function _dtoa
 13063  128D                     _dtoa:
 13064                           
 13065                           ;incstack = 0
 13066                           ; Regs used in _dtoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13067                           ;dtoa@fp stored from wreg
 13068  128D  0020               	movlb	0	; select bank0
 13069  128E  00BF               	movwf	dtoa@fp
 13070                           
 13071                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
 13072  128F  0830               	movf	dtoa@d,w
 13073  1290  00C4               	movwf	dtoa@n
 13074  1291  0831               	movf	dtoa@d+1,w
 13075  1292  00C5               	movwf	dtoa@n+1
 13076  1293  0832               	movf	dtoa@d+2,w
 13077  1294  00C6               	movwf	dtoa@n+2
 13078  1295  0833               	movf	dtoa@d+3,w
 13079  1296  00C7               	movwf	dtoa@n+3
 13080  1297  0834               	movf	dtoa@d+4,w
 13081  1298  00C8               	movwf	dtoa@n+4
 13082  1299  0835               	movf	dtoa@d+5,w
 13083  129A  00C9               	movwf	dtoa@n+5
 13084  129B  0836               	movf	dtoa@d+6,w
 13085  129C  00CA               	movwf	dtoa@n+6
 13086  129D  0837               	movf	dtoa@d+7,w
 13087  129E  00CB               	movwf	dtoa@n+7
 13088                           
 13089                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
 13090  129F  3044               	movlw	low dtoa@n
 13091  12A0  0086               	movwf	6
 13092  12A1  3000               	movlw	high dtoa@n
 13093  12A2  0087               	movwf	7
 13094  12A3  3F47               	moviw [7]fsr1
 13095  12A4  00B8               	movwf	??_dtoa
 13096  12A5  1FB8               	btfss	??_dtoa,7
 13097  12A6  2AA9               	goto	u5810
 13098  12A7  3001               	movlw	1
 13099  12A8  2AAA               	goto	u5820
 13100  12A9                     u5810:
 13101  12A9  3000               	movlw	0
 13102  12AA                     u5820:
 13103  12AA  0020               	movlb	0	; select bank0
 13104  12AB  00B9               	movwf	??_dtoa+1
 13105  12AC  01BA               	clrf	??_dtoa+2
 13106  12AD  0839               	movf	??_dtoa+1,w
 13107  12AE  00C2               	movwf	dtoa@s
 13108  12AF  083A               	movf	??_dtoa+2,w
 13109  12B0  00C3               	movwf	dtoa@s+1
 13110                           
 13111                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
 13112  12B1  0842               	movf	dtoa@s,w
 13113  12B2  0443               	iorwf	dtoa@s+1,w
 13114  12B3  1903               	btfsc	3,2
 13115  12B4  2AD3               	goto	l925
 13116                           
 13117                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
 13118  12B5  09C4               	comf	dtoa@n,f
 13119  12B6  09C5               	comf	dtoa@n+1,f
 13120  12B7  09C6               	comf	dtoa@n+2,f
 13121  12B8  09C7               	comf	dtoa@n+3,f
 13122  12B9  09C8               	comf	dtoa@n+4,f
 13123  12BA  09C9               	comf	dtoa@n+5,f
 13124  12BB  09CA               	comf	dtoa@n+6,f
 13125  12BC  09CB               	comf	dtoa@n+7,f
 13126  12BD  0AC4               	incf	dtoa@n,f
 13127  12BE  1D03               	skipz
 13128  12BF  2AD3               	goto	l925
 13129  12C0  0AC5               	incf	dtoa@n+1,f
 13130  12C1  1D03               	skipz
 13131  12C2  2AD3               	goto	l925
 13132  12C3  0AC6               	incf	dtoa@n+2,f
 13133  12C4  1D03               	skipz
 13134  12C5  2AD3               	goto	l925
 13135  12C6  0AC7               	incf	dtoa@n+3,f
 13136  12C7  1D03               	skipz
 13137  12C8  2AD3               	goto	l925
 13138  12C9  0AC8               	incf	dtoa@n+4,f
 13139  12CA  1D03               	skipz
 13140  12CB  2AD3               	goto	l925
 13141  12CC  0AC9               	incf	dtoa@n+5,f
 13142  12CD  1D03               	skipz
 13143  12CE  2AD3               	goto	l925
 13144  12CF  0ACA               	incf	dtoa@n+6,f
 13145  12D0  1D03               	skipz
 13146  12D1  2AD3               	goto	l925
 13147  12D2  0ACB               	incf	dtoa@n+7,f
 13148  12D3                     l925:	
 13149                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 297:     }
 13150                           
 13151                           
 13152                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
 13153  12D3  0021               	movlb	1	; select bank1
 13154  12D4  1BED               	btfsc	(_prec+1)^(0+128),7
 13155  12D5  2ADA               	goto	l926
 13156                           
 13157                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
 13158  12D6  30FD               	movlw	253
 13159  12D7  05EE               	andwf	_flags^(0+128),f
 13160  12D8  30FF               	movlw	255
 13161  12D9  05EF               	andwf	(_flags+1)^(0+128),f
 13162  12DA                     l926:	
 13163                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 302:     }
 13164                           
 13165                           
 13166                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
 13167  12DA  086D               	movf	(_prec+1)^(0+128),w
 13168  12DB  3A80               	xorlw	128
 13169  12DC  0020               	movlb	0	; select bank0
 13170  12DD  00B8               	movwf	??_dtoa
 13171  12DE  3080               	movlw	128
 13172  12DF  0238               	subwf	??_dtoa,w
 13173  12E0  1D03               	skipz
 13174  12E1  2AE5               	goto	u5865
 13175  12E2  3001               	movlw	1
 13176  12E3  0021               	movlb	1	; select bank1
 13177  12E4  026C               	subwf	_prec^(0+128),w
 13178  12E5                     u5865:
 13179  12E5  1803               	skipnc
 13180  12E6  2AED               	goto	l4001
 13181  12E7  3001               	movlw	1
 13182  12E8  0020               	movlb	0	; select bank0
 13183  12E9  00BD               	movwf	dtoa@p
 13184  12EA  3000               	movlw	0
 13185  12EB  00BE               	movwf	dtoa@p+1
 13186  12EC  2AF5               	goto	l930
 13187  12ED                     l4001:
 13188  12ED  0021               	movlb	1	; select bank1
 13189  12EE  086D               	movf	(_prec+1)^(0+128),w
 13190  12EF  0020               	movlb	0	; select bank0
 13191  12F0  00BE               	movwf	dtoa@p+1
 13192  12F1  0021               	movlb	1	; select bank1
 13193  12F2  086C               	movf	_prec^(0+128),w
 13194  12F3  0020               	movlb	0	; select bank0
 13195  12F4  00BD               	movwf	dtoa@p
 13196  12F5                     l930:
 13197                           
 13198                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
 13199  12F5  0022               	movlb	2	; select bank2
 13200  12F6  085A               	movf	(_width+1)^(0+256),w
 13201  12F7  0020               	movlb	0	; select bank0
 13202  12F8  00C1               	movwf	dtoa@w+1
 13203  12F9  0022               	movlb	2	; select bank2
 13204  12FA  0859               	movf	_width^(0+256),w
 13205  12FB  0020               	movlb	0	; select bank0
 13206  12FC  00C0               	movwf	dtoa@w
 13207                           
 13208                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
 13209  12FD  0842               	movf	dtoa@s,w
 13210  12FE  0443               	iorwf	dtoa@s+1,w
 13211  12FF  1D03               	btfss	3,2
 13212  1300  2B04               	goto	l4007
 13213  1301  0021               	movlb	1	; select bank1
 13214  1302  1D6E               	btfss	_flags^(0+128),2
 13215  1303  2B09               	goto	l931
 13216  1304                     l4007:
 13217                           
 13218                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
 13219  1304  30FF               	movlw	255
 13220  1305  0020               	movlb	0	; select bank0
 13221  1306  07C0               	addwf	dtoa@w,f
 13222  1307  30FF               	movlw	255
 13223  1308  3DC1               	addwfc	dtoa@w+1,f
 13224  1309                     l931:	
 13225                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 307:     }
 13226                           
 13227                           
 13228                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
 13229  1309  304F               	movlw	79
 13230  130A  0020               	movlb	0	; select bank0
 13231  130B  00CC               	movwf	dtoa@i
 13232  130C  3000               	movlw	0
 13233  130D  00CD               	movwf	dtoa@i+1
 13234                           
 13235                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
 13236  130E  0023               	movlb	3	; select bank3
 13237  130F  01EF               	clrf	(_dbuf^(0+384)+79)
 13238                           
 13239                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13240  1310  2B9D               	goto	l934
 13241  1311                     l4021:
 13242  1311  0020               	movlb	0	; select bank0
 13243  1312  0844               	movf	dtoa@n,w
 13244  1313  0445               	iorwf	dtoa@n+1,w
 13245  1314  0446               	iorwf	dtoa@n+2,w
 13246  1315  0447               	iorwf	dtoa@n+3,w
 13247  1316  0448               	iorwf	dtoa@n+4,w
 13248  1317  0449               	iorwf	dtoa@n+5,w
 13249  1318  044A               	iorwf	dtoa@n+6,w
 13250  1319  044B               	iorwf	dtoa@n+7,w
 13251  131A  1D03               	skipz
 13252  131B  2B36               	goto	l4011
 13253  131C  083E               	movf	dtoa@p+1,w
 13254  131D  3A80               	xorlw	128
 13255  131E  00B8               	movwf	??_dtoa
 13256  131F  3080               	movlw	128
 13257  1320  0238               	subwf	??_dtoa,w
 13258  1321  1D03               	skipz
 13259  1322  2B25               	goto	u5915
 13260  1323  3001               	movlw	1
 13261  1324  023D               	subwf	dtoa@p,w
 13262  1325                     u5915:
 13263  1325  1803               	skipnc
 13264  1326  2B36               	goto	l4011
 13265  1327  0020               	movlb	0	; select bank0
 13266  1328  0841               	movf	dtoa@w+1,w
 13267  1329  3A80               	xorlw	128
 13268  132A  00B8               	movwf	??_dtoa
 13269  132B  3080               	movlw	128
 13270  132C  0238               	subwf	??_dtoa,w
 13271  132D  1D03               	skipz
 13272  132E  2B31               	goto	u5925
 13273  132F  3001               	movlw	1
 13274  1330  0240               	subwf	dtoa@w,w
 13275  1331                     u5925:
 13276  1331  1C03               	skipc
 13277  1332  2BA9               	goto	l4029
 13278  1333  0021               	movlb	1	; select bank1
 13279  1334  1CEE               	btfss	_flags^(0+128),1
 13280  1335  2BA9               	goto	l4029
 13281  1336                     l4011:
 13282                           
 13283                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
 13284  1336  30FF               	movlw	255
 13285  1337  0020               	movlb	0	; select bank0
 13286  1338  07CC               	addwf	dtoa@i,f
 13287  1339  30FF               	movlw	255
 13288  133A  3DCD               	addwfc	dtoa@i+1,f
 13289                           
 13290                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
 13291  133B  300A               	movlw	10
 13292  133C  00A0               	movwf	___aomod@divisor
 13293  133D  01A1               	clrf	___aomod@divisor+1
 13294  133E  01A2               	clrf	___aomod@divisor+2
 13295  133F  01A3               	clrf	___aomod@divisor+3
 13296  1340  01A4               	clrf	___aomod@divisor+4
 13297  1341  01A5               	clrf	___aomod@divisor+5
 13298  1342  01A6               	clrf	___aomod@divisor+6
 13299  1343  01A7               	clrf	___aomod@divisor+7
 13300  1344  0844               	movf	dtoa@n,w
 13301  1345  00A8               	movwf	___aomod@dividend
 13302  1346  0845               	movf	dtoa@n+1,w
 13303  1347  00A9               	movwf	___aomod@dividend+1
 13304  1348  0846               	movf	dtoa@n+2,w
 13305  1349  00AA               	movwf	___aomod@dividend+2
 13306  134A  0847               	movf	dtoa@n+3,w
 13307  134B  00AB               	movwf	___aomod@dividend+3
 13308  134C  0848               	movf	dtoa@n+4,w
 13309  134D  00AC               	movwf	___aomod@dividend+4
 13310  134E  0849               	movf	dtoa@n+5,w
 13311  134F  00AD               	movwf	___aomod@dividend+5
 13312  1350  084A               	movf	dtoa@n+6,w
 13313  1351  00AE               	movwf	___aomod@dividend+6
 13314  1352  084B               	movf	dtoa@n+7,w
 13315  1353  00AF               	movwf	___aomod@dividend+7
 13316  1354  3191  21B1  3192   	fcall	___aomod
 13317  1357  0821               	movf	?___aomod+1,w
 13318  1358  00F4               	movwf	abs@a+1
 13319  1359  0820               	movf	?___aomod,w
 13320  135A  00F3               	movwf	abs@a
 13321  135B  3199  21A4  3192   	fcall	_abs
 13322  135E  0873               	movf	?_abs,w
 13323  135F  3E30               	addlw	48
 13324  1360  0020               	movlb	0	; select bank0
 13325  1361  00B8               	movwf	??_dtoa
 13326  1362  084C               	movf	dtoa@i,w
 13327  1363  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 13328  1364  0086               	movwf	6
 13329  1365  3001               	movlw	1	; select bank3/4
 13330  1366  0087               	movwf	7
 13331  1367  0838               	movf	??_dtoa,w
 13332  1368  0081               	movwf	1
 13333                           
 13334                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
 13335  1369  30FF               	movlw	255
 13336  136A  07BD               	addwf	dtoa@p,f
 13337  136B  30FF               	movlw	255
 13338  136C  3DBE               	addwfc	dtoa@p+1,f
 13339                           
 13340                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
 13341  136D  30FF               	movlw	255
 13342  136E  07C0               	addwf	dtoa@w,f
 13343  136F  30FF               	movlw	255
 13344  1370  3DC1               	addwfc	dtoa@w+1,f
 13345                           
 13346                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
 13347  1371  300A               	movlw	10
 13348  1372  00A0               	movwf	___aodiv@divisor
 13349  1373  01A1               	clrf	___aodiv@divisor+1
 13350  1374  01A2               	clrf	___aodiv@divisor+2
 13351  1375  01A3               	clrf	___aodiv@divisor+3
 13352  1376  01A4               	clrf	___aodiv@divisor+4
 13353  1377  01A5               	clrf	___aodiv@divisor+5
 13354  1378  01A6               	clrf	___aodiv@divisor+6
 13355  1379  01A7               	clrf	___aodiv@divisor+7
 13356  137A  0844               	movf	dtoa@n,w
 13357  137B  00A8               	movwf	___aodiv@dividend
 13358  137C  0845               	movf	dtoa@n+1,w
 13359  137D  00A9               	movwf	___aodiv@dividend+1
 13360  137E  0846               	movf	dtoa@n+2,w
 13361  137F  00AA               	movwf	___aodiv@dividend+2
 13362  1380  0847               	movf	dtoa@n+3,w
 13363  1381  00AB               	movwf	___aodiv@dividend+3
 13364  1382  0848               	movf	dtoa@n+4,w
 13365  1383  00AC               	movwf	___aodiv@dividend+4
 13366  1384  0849               	movf	dtoa@n+5,w
 13367  1385  00AD               	movwf	___aodiv@dividend+5
 13368  1386  084A               	movf	dtoa@n+6,w
 13369  1387  00AE               	movwf	___aodiv@dividend+6
 13370  1388  084B               	movf	dtoa@n+7,w
 13371  1389  00AF               	movwf	___aodiv@dividend+7
 13372  138A  3180  203D  3192   	fcall	___aodiv
 13373  138D  0820               	movf	?___aodiv,w
 13374  138E  00C4               	movwf	dtoa@n
 13375  138F  0821               	movf	?___aodiv+1,w
 13376  1390  00C5               	movwf	dtoa@n+1
 13377  1391  0822               	movf	?___aodiv+2,w
 13378  1392  00C6               	movwf	dtoa@n+2
 13379  1393  0823               	movf	?___aodiv+3,w
 13380  1394  00C7               	movwf	dtoa@n+3
 13381  1395  0824               	movf	?___aodiv+4,w
 13382  1396  00C8               	movwf	dtoa@n+4
 13383  1397  0825               	movf	?___aodiv+5,w
 13384  1398  00C9               	movwf	dtoa@n+5
 13385  1399  0826               	movf	?___aodiv+6,w
 13386  139A  00CA               	movwf	dtoa@n+6
 13387  139B  0827               	movf	?___aodiv+7,w
 13388  139C  00CB               	movwf	dtoa@n+7
 13389  139D                     l934:	
 13390                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 318:     }
 13391                           
 13392                           
 13393                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13394  139D  0020               	movlb	0	; select bank0
 13395  139E  084D               	movf	dtoa@i+1,w
 13396  139F  3A80               	xorlw	128
 13397  13A0  00B8               	movwf	??_dtoa
 13398  13A1  3080               	movlw	128
 13399  13A2  0238               	subwf	??_dtoa,w
 13400  13A3  1D03               	skipz
 13401  13A4  2BA7               	goto	u5895
 13402  13A5  3001               	movlw	1
 13403  13A6  024C               	subwf	dtoa@i,w
 13404  13A7                     u5895:
 13405  13A7  1803               	btfsc	3,0
 13406  13A8  2B11               	goto	l4021
 13407  13A9                     l4029:
 13408                           
 13409                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
 13410  13A9  0020               	movlb	0	; select bank0
 13411  13AA  0842               	movf	dtoa@s,w
 13412  13AB  0443               	iorwf	dtoa@s+1,w
 13413  13AC  1D03               	btfss	3,2
 13414  13AD  2BB1               	goto	l4033
 13415  13AE  0021               	movlb	1	; select bank1
 13416  13AF  1D6E               	btfss	_flags^(0+128),2
 13417  13B0  2BC9               	goto	l4043
 13418  13B1                     l4033:
 13419                           
 13420                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
 13421  13B1  30FF               	movlw	255
 13422  13B2  0020               	movlb	0	; select bank0
 13423  13B3  07CC               	addwf	dtoa@i,f
 13424  13B4  30FF               	movlw	255
 13425  13B5  3DCD               	addwfc	dtoa@i+1,f
 13426                           
 13427                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
 13428  13B6  0842               	movf	dtoa@s,w
 13429  13B7  0443               	iorwf	dtoa@s+1,w
 13430  13B8  1D03               	btfss	3,2
 13431  13B9  2BBC               	goto	l4039
 13432  13BA  302B               	movlw	43
 13433  13BB  2BBD               	goto	L14
 13434  13BC                     l4039:
 13435  13BC  302D               	movlw	45
 13436  13BD                     L14:
 13437  13BD  00BB               	movwf	_dtoa$930
 13438  13BE  3000               	movlw	0
 13439  13BF  00BC               	movwf	_dtoa$930+1
 13440  13C0  083B               	movf	_dtoa$930,w
 13441  13C1  00B8               	movwf	??_dtoa
 13442  13C2  084C               	movf	dtoa@i,w
 13443  13C3  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 13444  13C4  0086               	movwf	6
 13445  13C5  3001               	movlw	1	; select bank3/4
 13446  13C6  0087               	movwf	7
 13447  13C7  0838               	movf	??_dtoa,w
 13448  13C8  0081               	movwf	1
 13449  13C9                     l4043:
 13450                           
 13451                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
 13452  13C9  0020               	movlb	0	; select bank0
 13453  13CA  084C               	movf	dtoa@i,w
 13454  13CB  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 13455  13CC  00B8               	movwf	??_dtoa
 13456  13CD  0838               	movf	??_dtoa,w
 13457  13CE  00A7               	movwf	pad@buf
 13458  13CF  0841               	movf	dtoa@w+1,w
 13459  13D0  00A9               	movwf	pad@p+1
 13460  13D1  0840               	movf	dtoa@w,w
 13461  13D2  00A8               	movwf	pad@p
 13462  13D3  083F               	movf	dtoa@fp,w
 13463  13D4  319C  24D0         	fcall	_pad
 13464  13D6  0828               	movf	?_pad+1,w
 13465  13D7  00B1               	movwf	?_dtoa+1
 13466  13D8  0827               	movf	?_pad,w
 13467  13D9  00B0               	movwf	?_dtoa
 13468  13DA  0008               	return
 13469  13DB                     __end_of_dtoa:
 13470                           
 13471                           	psect	text33
 13472  1CD0                     __ptext33:	
 13473 ;; *************** function _pad *****************
 13474 ;; Defined at:
 13475 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 13476 ;; Parameters:    Size  Location     Type
 13477 ;;  fp              1    wreg     PTR struct _IO_FILE
 13478 ;;		 -> NULL(0), 
 13479 ;;  buf             1    7[BANK0 ] PTR unsigned char 
 13480 ;;		 -> dbuf(80), 
 13481 ;;  p               2    8[BANK0 ] int 
 13482 ;; Auto vars:     Size  Location     Type
 13483 ;;  fp              1   14[BANK0 ] PTR struct _IO_FILE
 13484 ;;		 -> NULL(0), 
 13485 ;;  w               2   12[BANK0 ] int 
 13486 ;;  i               2   10[BANK0 ] int 
 13487 ;; Return value:  Size  Location     Type
 13488 ;;                  2    7[BANK0 ] int 
 13489 ;; Registers used:
 13490 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13491 ;; Tracked objects:
 13492 ;;		On entry : 1E/0
 13493 ;;		On exit  : 1F/0
 13494 ;;		Unchanged: 0/0
 13495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13496 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13497 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13498 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13499 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13500 ;;Total ram usage:        9 bytes
 13501 ;; Hardware stack levels used: 1
 13502 ;; Hardware stack levels required when called: 4
 13503 ;; This function calls:
 13504 ;;		_fputc
 13505 ;;		_fputs
 13506 ;;		_strlen
 13507 ;; This function is called by:
 13508 ;;		_dtoa
 13509 ;;		_efgtoa
 13510 ;;		_xtoa
 13511 ;; This function uses a non-reentrant model
 13512 ;;
 13513                           
 13514                           
 13515                           ;psect for function _pad
 13516  1CD0                     _pad:
 13517                           
 13518                           ;incstack = 0
 13519                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13520                           ;pad@fp stored from wreg
 13521  1CD0  0020               	movlb	0	; select bank0
 13522  1CD1  00AE               	movwf	pad@fp
 13523                           
 13524                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 13525  1CD2  0021               	movlb	1	; select bank1
 13526  1CD3  1C6E               	btfss	_flags^(0+128),0
 13527  1CD4  2CDE               	goto	l3867
 13528                           
 13529                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 13530  1CD5  0020               	movlb	0	; select bank0
 13531  1CD6  082E               	movf	pad@fp,w
 13532  1CD7  00FC               	movwf	??_pad
 13533  1CD8  087C               	movf	??_pad,w
 13534  1CD9  00FB               	movwf	fputs@fp
 13535  1CDA  0827               	movf	pad@buf,w
 13536  1CDB  319B  235C  319C   	fcall	_fputs
 13537  1CDE                     l3867:
 13538                           
 13539                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 13540  1CDE  0020               	movlb	0	; select bank0
 13541  1CDF  1BA9               	btfsc	pad@p+1,7
 13542  1CE0  2CE6               	goto	l3871
 13543  1CE1  0829               	movf	pad@p+1,w
 13544  1CE2  00AD               	movwf	pad@w+1
 13545  1CE3  0828               	movf	pad@p,w
 13546  1CE4  00AC               	movwf	pad@w
 13547  1CE5  2CE8               	goto	l917
 13548  1CE6                     l3871:
 13549  1CE6  01AC               	clrf	pad@w
 13550  1CE7  01AD               	clrf	pad@w+1
 13551  1CE8                     l917:
 13552                           
 13553                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 13554  1CE8  01AA               	clrf	pad@i
 13555  1CE9  01AB               	clrf	pad@i+1
 13556  1CEA                     l3877:	
 13557                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 13558                           
 13559                           
 13560                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 13561  1CEA  082B               	movf	pad@i+1,w
 13562  1CEB  3A80               	xorlw	128
 13563  1CEC  00FC               	movwf	??_pad
 13564  1CED  082D               	movf	pad@w+1,w
 13565  1CEE  3A80               	xorlw	128
 13566  1CEF  027C               	subwf	??_pad,w
 13567  1CF0  1D03               	skipz
 13568  1CF1  2CF4               	goto	u5445
 13569  1CF2  082C               	movf	pad@w,w
 13570  1CF3  022A               	subwf	pad@i,w
 13571  1CF4                     u5445:
 13572  1CF4  1803               	btfsc	3,0
 13573  1CF5  2D08               	goto	l920
 13574                           
 13575                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 13576  1CF6  3020               	movlw	32
 13577  1CF7  00F3               	movwf	fputc@c
 13578  1CF8  3000               	movlw	0
 13579  1CF9  00F4               	movwf	fputc@c+1
 13580  1CFA  0020               	movlb	0	; select bank0
 13581  1CFB  082E               	movf	pad@fp,w
 13582  1CFC  00FC               	movwf	??_pad
 13583  1CFD  087C               	movf	??_pad,w
 13584  1CFE  00F5               	movwf	fputc@fp
 13585  1CFF  3180  2008  319C   	fcall	_fputc
 13586                           
 13587                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
 13588  1D02  3001               	movlw	1
 13589  1D03  0020               	movlb	0	; select bank0
 13590  1D04  07AA               	addwf	pad@i,f
 13591  1D05  3000               	movlw	0
 13592  1D06  3DAB               	addwfc	pad@i+1,f
 13593  1D07  2CEA               	goto	l3877
 13594  1D08                     l920:
 13595                           
 13596                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 13597  1D08  0021               	movlb	1	; select bank1
 13598  1D09  186E               	btfsc	_flags^(0+128),0
 13599  1D0A  2D14               	goto	l921
 13600                           
 13601                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 13602  1D0B  0020               	movlb	0	; select bank0
 13603  1D0C  082E               	movf	pad@fp,w
 13604  1D0D  00FC               	movwf	??_pad
 13605  1D0E  087C               	movf	??_pad,w
 13606  1D0F  00FB               	movwf	fputs@fp
 13607  1D10  0827               	movf	pad@buf,w
 13608  1D11  319B  235C  319C   	fcall	_fputs
 13609  1D14                     l921:	
 13610                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 92:     }
 13611                           
 13612                           
 13613                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 13614  1D14  0020               	movlb	0	; select bank0
 13615  1D15  0827               	movf	pad@buf,w
 13616  1D16  3199  21E9         	fcall	_strlen
 13617  1D18  082C               	movf	pad@w,w
 13618  1D19  0770               	addwf	?_strlen,w
 13619  1D1A  00A7               	movwf	?_pad
 13620  1D1B  082D               	movf	pad@w+1,w
 13621  1D1C  3D71               	addwfc	?_strlen+1,w
 13622  1D1D  00A8               	movwf	?_pad+1
 13623  1D1E  0008               	return
 13624  1D1F                     __end_of_pad:
 13625                           
 13626                           	psect	text34
 13627  19E9                     __ptext34:	
 13628 ;; *************** function _strlen *****************
 13629 ;; Defined at:
 13630 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
 13631 ;; Parameters:    Size  Location     Type
 13632 ;;  s               1    wreg     PTR const unsigned char 
 13633 ;;		 -> dbuf(80), 
 13634 ;; Auto vars:     Size  Location     Type
 13635 ;;  s               1    4[COMMON] PTR const unsigned char 
 13636 ;;		 -> dbuf(80), 
 13637 ;;  a               1    3[COMMON] PTR const unsigned char 
 13638 ;;		 -> dbuf(80), 
 13639 ;; Return value:  Size  Location     Type
 13640 ;;                  2    0[COMMON] unsigned int 
 13641 ;; Registers used:
 13642 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13643 ;; Tracked objects:
 13644 ;;		On entry : 1F/0
 13645 ;;		On exit  : 1F/0
 13646 ;;		Unchanged: 1F/0
 13647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13648 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13649 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13650 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13651 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13652 ;;Total ram usage:        5 bytes
 13653 ;; Hardware stack levels used: 1
 13654 ;; This function calls:
 13655 ;;		Nothing
 13656 ;; This function is called by:
 13657 ;;		_pad
 13658 ;; This function uses a non-reentrant model
 13659 ;;
 13660                           
 13661                           
 13662                           ;psect for function _strlen
 13663  19E9                     _strlen:
 13664                           
 13665                           ;incstack = 0
 13666                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 13667                           ;strlen@s stored from wreg
 13668  19E9  00F4               	movwf	strlen@s
 13669  19EA  0874               	movf	strlen@s,w
 13670  19EB  00F2               	movwf	??_strlen
 13671  19EC  0872               	movf	??_strlen,w
 13672  19ED  00F3               	movwf	strlen@a
 13673  19EE                     l3323:
 13674  19EE  0874               	movf	strlen@s,w
 13675  19EF  0086               	movwf	6
 13676  19F0  3001               	movlw	1	; select bank2/3
 13677  19F1  0087               	movwf	7
 13678  19F2  0801               	movf	1,w
 13679  19F3  1903               	btfsc	3,2
 13680  19F4  29FA               	goto	l3325
 13681  19F5  3001               	movlw	1
 13682  19F6  00F2               	movwf	??_strlen
 13683  19F7  0872               	movf	??_strlen,w
 13684  19F8  07F4               	addwf	strlen@s,f
 13685  19F9  29EE               	goto	l3323
 13686  19FA                     l3325:
 13687  19FA  0873               	movf	strlen@a,w
 13688  19FB  0274               	subwf	strlen@s,w
 13689  19FC  00F0               	movwf	?_strlen
 13690  19FD  01F1               	clrf	?_strlen+1
 13691  19FE  1BF0               	btfsc	?_strlen,7
 13692  19FF  03F1               	decf	?_strlen+1,f
 13693  1A00  0008               	return
 13694  1A01                     __end_of_strlen:
 13695                           
 13696                           	psect	text35
 13697  1B5C                     __ptext35:	
 13698 ;; *************** function _fputs *****************
 13699 ;; Defined at:
 13700 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
 13701 ;; Parameters:    Size  Location     Type
 13702 ;;  s               1    wreg     PTR const unsigned char 
 13703 ;;		 -> dbuf(80), 
 13704 ;;  fp              1   11[COMMON] PTR struct _IO_FILE
 13705 ;;		 -> NULL(0), 
 13706 ;; Auto vars:     Size  Location     Type
 13707 ;;  s               1    6[BANK0 ] PTR const unsigned char 
 13708 ;;		 -> dbuf(80), 
 13709 ;;  i               2    4[BANK0 ] int 
 13710 ;;  c               1    3[BANK0 ] unsigned char 
 13711 ;; Return value:  Size  Location     Type
 13712 ;;                  2   11[COMMON] int 
 13713 ;; Registers used:
 13714 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13715 ;; Tracked objects:
 13716 ;;		On entry : 1F/0
 13717 ;;		On exit  : 1F/0
 13718 ;;		Unchanged: 0/0
 13719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13720 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13721 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13722 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13723 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13724 ;;Total ram usage:        8 bytes
 13725 ;; Hardware stack levels used: 1
 13726 ;; Hardware stack levels required when called: 3
 13727 ;; This function calls:
 13728 ;;		_fputc
 13729 ;; This function is called by:
 13730 ;;		_pad
 13731 ;; This function uses a non-reentrant model
 13732 ;;
 13733                           
 13734                           
 13735                           ;psect for function _fputs
 13736  1B5C                     _fputs:
 13737                           
 13738                           ;incstack = 0
 13739                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13740                           ;fputs@s stored from wreg
 13741  1B5C  00A6               	movwf	fputs@s
 13742  1B5D  01A4               	clrf	fputs@i
 13743  1B5E  01A5               	clrf	fputs@i+1
 13744  1B5F                     l3317:
 13745  1B5F  0824               	movf	fputs@i,w
 13746  1B60  0726               	addwf	fputs@s,w
 13747  1B61  00A0               	movwf	??_fputs
 13748  1B62  0820               	movf	??_fputs,w
 13749  1B63  0086               	movwf	6
 13750  1B64  3001               	movlw	1	; select bank2/3
 13751  1B65  0087               	movwf	7
 13752  1B66  0801               	movf	1,w
 13753  1B67  00A1               	movwf	??_fputs+1
 13754  1B68  0821               	movf	??_fputs+1,w
 13755  1B69  00A3               	movwf	fputs@c
 13756  1B6A  0823               	movf	fputs@c,w
 13757  1B6B  1903               	btfsc	3,2
 13758  1B6C  0008               	return
 13759  1B6D  0823               	movf	fputs@c,w
 13760  1B6E  00A0               	movwf	??_fputs
 13761  1B6F  01A1               	clrf	??_fputs+1
 13762  1B70  0820               	movf	??_fputs,w
 13763  1B71  00F3               	movwf	fputc@c
 13764  1B72  0821               	movf	??_fputs+1,w
 13765  1B73  00F4               	movwf	fputc@c+1
 13766  1B74  087B               	movf	fputs@fp,w
 13767  1B75  00A2               	movwf	??_fputs+2
 13768  1B76  0822               	movf	??_fputs+2,w
 13769  1B77  00F5               	movwf	fputc@fp
 13770  1B78  3180  2008  319B   	fcall	_fputc
 13771  1B7B  3001               	movlw	1
 13772  1B7C  0020               	movlb	0	; select bank0
 13773  1B7D  07A4               	addwf	fputs@i,f
 13774  1B7E  3000               	movlw	0
 13775  1B7F  3DA5               	addwfc	fputs@i+1,f
 13776  1B80  2B5F               	goto	l3317
 13777  1B81                     __end_of_fputs:
 13778                           
 13779                           	psect	text36
 13780  0008                     __ptext36:	
 13781 ;; *************** function _fputc *****************
 13782 ;; Defined at:
 13783 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
 13784 ;; Parameters:    Size  Location     Type
 13785 ;;  c               2    3[COMMON] int 
 13786 ;;  fp              1    5[COMMON] PTR struct _IO_FILE
 13787 ;;		 -> NULL(0), 
 13788 ;; Auto vars:     Size  Location     Type
 13789 ;;		None
 13790 ;; Return value:  Size  Location     Type
 13791 ;;                  2    3[COMMON] int 
 13792 ;; Registers used:
 13793 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13794 ;; Tracked objects:
 13795 ;;		On entry : 1E/1
 13796 ;;		On exit  : 0/0
 13797 ;;		Unchanged: 0/0
 13798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13799 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13801 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13802 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13803 ;;Total ram usage:        8 bytes
 13804 ;; Hardware stack levels used: 1
 13805 ;; Hardware stack levels required when called: 2
 13806 ;; This function calls:
 13807 ;;		_putch
 13808 ;; This function is called by:
 13809 ;;		_pad
 13810 ;;		_vfpfcnvrt
 13811 ;;		_fputs
 13812 ;; This function uses a non-reentrant model
 13813 ;;
 13814                           
 13815                           
 13816                           ;psect for function _fputc
 13817  0008                     _fputc:
 13818                           
 13819                           ;incstack = 0
 13820                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13821  0008  0875               	movf	fputc@fp,w
 13822  0009  1D03               	btfss	3,2
 13823  000A  0875               	movf	fputc@fp,w
 13824  000B  1D03               	btfss	3,2
 13825  000C  2811               	goto	l3095
 13826  000D  0873               	movf	fputc@c,w
 13827  000E  3199  2121         	fcall	_putch
 13828  0010  0008               	return
 13829  0011                     l3095:
 13830  0011  0875               	movf	fputc@fp,w
 13831  0012  3E03               	addlw	3
 13832  0013  0086               	movwf	6
 13833  0014  0187               	clrf	7
 13834  0015  0016               	moviw fsr1++
 13835  0016  0401               	iorwf	1,w
 13836  0017  1903               	btfsc	3,2
 13837  0018  2834               	goto	l3099
 13838  0019  0875               	movf	fputc@fp,w
 13839  001A  3E03               	addlw	3
 13840  001B  0086               	movwf	6
 13841  001C  0187               	clrf	7
 13842  001D  3F40               	moviw [0]fsr1
 13843  001E  00F6               	movwf	??_fputc
 13844  001F  3F41               	moviw [1]fsr1
 13845  0020  00F7               	movwf	??_fputc+1
 13846  0021  0A75               	incf	fputc@fp,w
 13847  0022  0086               	movwf	6
 13848  0023  0187               	clrf	7
 13849  0024  3F40               	moviw [0]fsr1
 13850  0025  00F8               	movwf	??_fputc+2
 13851  0026  3F41               	moviw [1]fsr1
 13852  0027  00F9               	movwf	??_fputc+3
 13853  0028  0879               	movf	??_fputc+3,w
 13854  0029  3A80               	xorlw	128
 13855  002A  00FA               	movwf	??_fputc+4
 13856  002B  0877               	movf	??_fputc+1,w
 13857  002C  3A80               	xorlw	128
 13858  002D  027A               	subwf	??_fputc+4,w
 13859  002E  1D03               	skipz
 13860  002F  2832               	goto	u3725
 13861  0030  0876               	movf	??_fputc,w
 13862  0031  0278               	subwf	??_fputc+2,w
 13863  0032                     u3725:
 13864  0032  1803               	skipnc
 13865  0033  0008               	return
 13866  0034                     l3099:
 13867  0034  0A75               	incf	fputc@fp,w
 13868  0035  0086               	movwf	6
 13869  0036  0187               	clrf	7
 13870  0037  3001               	movlw	1
 13871  0038  0781               	addwf	1,f
 13872  0039  3141               	addfsr 1,1
 13873  003A  1803               	skipnc
 13874  003B  0A81               	incf	1,f
 13875  003C  0008               	return
 13876  003D                     __end_of_fputc:
 13877                           
 13878                           	psect	text37
 13879  1921                     __ptext37:	
 13880 ;; *************** function _putch *****************
 13881 ;; Defined at:
 13882 ;;		line 82 in file "uart.c"
 13883 ;; Parameters:    Size  Location     Type
 13884 ;;  dato            1    wreg     unsigned char 
 13885 ;; Auto vars:     Size  Location     Type
 13886 ;;  dato            1    2[COMMON] unsigned char 
 13887 ;; Return value:  Size  Location     Type
 13888 ;;                  1    wreg      void 
 13889 ;; Registers used:
 13890 ;;		wreg, status,2, status,0, pclath, cstack
 13891 ;; Tracked objects:
 13892 ;;		On entry : 1E/1
 13893 ;;		On exit  : 1F/2
 13894 ;;		Unchanged: 0/0
 13895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13897 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13899 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13900 ;;Total ram usage:        1 bytes
 13901 ;; Hardware stack levels used: 1
 13902 ;; Hardware stack levels required when called: 1
 13903 ;; This function calls:
 13904 ;;		_uart_tx
 13905 ;; This function is called by:
 13906 ;;		_fputc
 13907 ;; This function uses a non-reentrant model
 13908 ;;
 13909                           
 13910                           
 13911                           ;psect for function _putch
 13912  1921                     _putch:
 13913                           
 13914                           ;incstack = 0
 13915                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
 13916                           ;putch@dato stored from wreg
 13917  1921  00F2               	movwf	putch@dato
 13918                           
 13919                           ;uart.c: 84:     uart_tx( dato);
 13920  1922  0872               	movf	putch@dato,w
 13921  1923  3199  2145         	fcall	_uart_tx
 13922  1925  0008               	return
 13923  1926                     __end_of_putch:
 13924                           
 13925                           	psect	text38
 13926  1945                     __ptext38:	
 13927 ;; *************** function _uart_tx *****************
 13928 ;; Defined at:
 13929 ;;		line 63 in file "uart.c"
 13930 ;; Parameters:    Size  Location     Type
 13931 ;;  dato            1    wreg     unsigned char 
 13932 ;; Auto vars:     Size  Location     Type
 13933 ;;  dato            1    1[COMMON] unsigned char 
 13934 ;; Return value:  Size  Location     Type
 13935 ;;                  1    wreg      void 
 13936 ;; Registers used:
 13937 ;;		wreg, status,2, status,0
 13938 ;; Tracked objects:
 13939 ;;		On entry : 1E/1
 13940 ;;		On exit  : 1F/2
 13941 ;;		Unchanged: 0/0
 13942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13944 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13945 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13946 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13947 ;;Total ram usage:        2 bytes
 13948 ;; Hardware stack levels used: 1
 13949 ;; This function calls:
 13950 ;;		Nothing
 13951 ;; This function is called by:
 13952 ;;		_putch
 13953 ;; This function uses a non-reentrant model
 13954 ;;
 13955                           
 13956                           
 13957                           ;psect for function _uart_tx
 13958  1945                     _uart_tx:
 13959                           
 13960                           ;incstack = 0
 13961                           ; Regs used in _uart_tx: [wreg+status,2+status,0]
 13962                           ;uart_tx@dato stored from wreg
 13963  1945  00F1               	movwf	uart_tx@dato
 13964  1946                     l3083:	
 13965                           ;uart.c: 65:     while( ( (PIR3>>4) & 0x01) == 0){}
 13966                           
 13967  1946  002E               	movlb	14	; select bank14
 13968  1947  080F               	movf	15,w	;volatile
 13969  1948  00F0               	movwf	??_uart_tx
 13970  1949  3004               	movlw	4
 13971  194A                     u3675:
 13972  194A  36F0               	lsrf	??_uart_tx,f
 13973  194B  0B89               	decfsz	9,f
 13974  194C  294A               	goto	u3675
 13975  194D  1C70               	btfss	??_uart_tx,0
 13976  194E  2946               	goto	l3083
 13977                           
 13978                           ;uart.c: 66:         TX1REG = dato;
 13979  194F  0871               	movf	uart_tx@dato,w
 13980  1950  0022               	movlb	2	; select bank2
 13981  1951  009A               	movwf	26	;volatile
 13982  1952  0008               	return
 13983  1953                     __end_of_uart_tx:
 13984                           
 13985                           	psect	text39
 13986  19A4                     __ptext39:	
 13987 ;; *************** function _abs *****************
 13988 ;; Defined at:
 13989 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
 13990 ;; Parameters:    Size  Location     Type
 13991 ;;  a               2    3[COMMON] int 
 13992 ;; Auto vars:     Size  Location     Type
 13993 ;;		None
 13994 ;; Return value:  Size  Location     Type
 13995 ;;                  2    3[COMMON] int 
 13996 ;; Registers used:
 13997 ;;		wreg, status,2, status,0
 13998 ;; Tracked objects:
 13999 ;;		On entry : 1F/0
 14000 ;;		On exit  : 0/0
 14001 ;;		Unchanged: 0/0
 14002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14003 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14005 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14006 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14007 ;;Total ram usage:        4 bytes
 14008 ;; Hardware stack levels used: 1
 14009 ;; This function calls:
 14010 ;;		Nothing
 14011 ;; This function is called by:
 14012 ;;		_dtoa
 14013 ;; This function uses a non-reentrant model
 14014 ;;
 14015                           
 14016                           
 14017                           ;psect for function _abs
 14018  19A4                     _abs:
 14019                           
 14020                           ;incstack = 0
 14021                           ; Regs used in _abs: [wreg+status,2+status,0]
 14022  19A4  0874               	movf	abs@a+1,w
 14023  19A5  3A80               	xorlw	128
 14024  19A6  00F5               	movwf	??_abs
 14025  19A7  3080               	movlw	128
 14026  19A8  0275               	subwf	??_abs,w
 14027  19A9  1D03               	skipz
 14028  19AA  29AD               	goto	u5465
 14029  19AB  3001               	movlw	1
 14030  19AC  0273               	subwf	abs@a,w
 14031  19AD                     u5465:
 14032  19AD  1803               	skipnc
 14033  19AE  0008               	return
 14034  19AF  0973               	comf	abs@a,w
 14035  19B0  00F5               	movwf	??_abs
 14036  19B1  0974               	comf	abs@a+1,w
 14037  19B2  00F6               	movwf	??_abs+1
 14038  19B3  0AF5               	incf	??_abs,f
 14039  19B4  1903               	skipnz
 14040  19B5  0AF6               	incf	??_abs+1,f
 14041  19B6  0875               	movf	??_abs,w
 14042  19B7  00F3               	movwf	?_abs
 14043  19B8  0876               	movf	??_abs+1,w
 14044  19B9  00F4               	movwf	?_abs+1
 14045  19BA  0008               	return
 14046  19BB                     __end_of_abs:
 14047                           
 14048                           	psect	text40
 14049  11B1                     __ptext40:	
 14050 ;; *************** function ___aomod *****************
 14051 ;; Defined at:
 14052 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
 14053 ;; Parameters:    Size  Location     Type
 14054 ;;  divisor         8    0[BANK0 ] long long 
 14055 ;;  dividend        8    8[BANK0 ] long long 
 14056 ;; Auto vars:     Size  Location     Type
 14057 ;;  sign            1    2[COMMON] unsigned char 
 14058 ;;  counter         1    1[COMMON] unsigned char 
 14059 ;; Return value:  Size  Location     Type
 14060 ;;                  8    0[BANK0 ] long long 
 14061 ;; Registers used:
 14062 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14063 ;; Tracked objects:
 14064 ;;		On entry : 1F/0
 14065 ;;		On exit  : 1F/0
 14066 ;;		Unchanged: 0/0
 14067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14068 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14069 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14070 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14071 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14072 ;;Total ram usage:       19 bytes
 14073 ;; Hardware stack levels used: 1
 14074 ;; This function calls:
 14075 ;;		Nothing
 14076 ;; This function is called by:
 14077 ;;		_dtoa
 14078 ;; This function uses a non-reentrant model
 14079 ;;
 14080                           
 14081                           
 14082                           ;psect for function ___aomod
 14083  11B1                     ___aomod:
 14084                           
 14085                           ;incstack = 0
 14086                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
 14087  11B1  01F2               	clrf	___aomod@sign
 14088  11B2  3028               	movlw	low ___aomod@dividend
 14089  11B3  0086               	movwf	6
 14090  11B4  3000               	movlw	high ___aomod@dividend
 14091  11B5  0087               	movwf	7
 14092  11B6  3F47               	moviw [7]fsr1
 14093  11B7  00F0               	movwf	??___aomod
 14094  11B8  1FF0               	btfss	??___aomod,7
 14095  11B9  29DB               	goto	l3395
 14096  11BA  0020               	movlb	0	; select bank0
 14097  11BB  09A8               	comf	___aomod@dividend,f
 14098  11BC  09A9               	comf	___aomod@dividend+1,f
 14099  11BD  09AA               	comf	___aomod@dividend+2,f
 14100  11BE  09AB               	comf	___aomod@dividend+3,f
 14101  11BF  09AC               	comf	___aomod@dividend+4,f
 14102  11C0  09AD               	comf	___aomod@dividend+5,f
 14103  11C1  09AE               	comf	___aomod@dividend+6,f
 14104  11C2  09AF               	comf	___aomod@dividend+7,f
 14105  11C3  0AA8               	incf	___aomod@dividend,f
 14106  11C4  1D03               	skipz
 14107  11C5  29D9               	goto	u441lld
 14108  11C6  0AA9               	incf	___aomod@dividend+1,f
 14109  11C7  1D03               	skipz
 14110  11C8  29D9               	goto	u441lld
 14111  11C9  0AAA               	incf	___aomod@dividend+2,f
 14112  11CA  1D03               	skipz
 14113  11CB  29D9               	goto	u441lld
 14114  11CC  0AAB               	incf	___aomod@dividend+3,f
 14115  11CD  1D03               	skipz
 14116  11CE  29D9               	goto	u441lld
 14117  11CF  0AAC               	incf	___aomod@dividend+4,f
 14118  11D0  1D03               	skipz
 14119  11D1  29D9               	goto	u441lld
 14120  11D2  0AAD               	incf	___aomod@dividend+5,f
 14121  11D3  1D03               	skipz
 14122  11D4  29D9               	goto	u441lld
 14123  11D5  0AAE               	incf	___aomod@dividend+6,f
 14124  11D6  1D03               	skipz
 14125  11D7  29D9               	goto	u441lld
 14126  11D8  0AAF               	incf	___aomod@dividend+7,f
 14127  11D9                     u441lld:
 14128  11D9  01F2               	clrf	___aomod@sign
 14129  11DA  0AF2               	incf	___aomod@sign,f
 14130  11DB                     l3395:
 14131  11DB  3020               	movlw	low ___aomod@divisor
 14132  11DC  0086               	movwf	6
 14133  11DD  3000               	movlw	high ___aomod@divisor
 14134  11DE  0087               	movwf	7
 14135  11DF  3F47               	moviw [7]fsr1
 14136  11E0  00F0               	movwf	??___aomod
 14137  11E1  1FF0               	btfss	??___aomod,7
 14138  11E2  2A02               	goto	l3399
 14139  11E3  0020               	movlb	0	; select bank0
 14140  11E4  09A0               	comf	___aomod@divisor,f
 14141  11E5  09A1               	comf	___aomod@divisor+1,f
 14142  11E6  09A2               	comf	___aomod@divisor+2,f
 14143  11E7  09A3               	comf	___aomod@divisor+3,f
 14144  11E8  09A4               	comf	___aomod@divisor+4,f
 14145  11E9  09A5               	comf	___aomod@divisor+5,f
 14146  11EA  09A6               	comf	___aomod@divisor+6,f
 14147  11EB  09A7               	comf	___aomod@divisor+7,f
 14148  11EC  0AA0               	incf	___aomod@divisor,f
 14149  11ED  1D03               	skipz
 14150  11EE  2A02               	goto	l3399
 14151  11EF  0AA1               	incf	___aomod@divisor+1,f
 14152  11F0  1D03               	skipz
 14153  11F1  2A02               	goto	l3399
 14154  11F2  0AA2               	incf	___aomod@divisor+2,f
 14155  11F3  1D03               	skipz
 14156  11F4  2A02               	goto	l3399
 14157  11F5  0AA3               	incf	___aomod@divisor+3,f
 14158  11F6  1D03               	skipz
 14159  11F7  2A02               	goto	l3399
 14160  11F8  0AA4               	incf	___aomod@divisor+4,f
 14161  11F9  1D03               	skipz
 14162  11FA  2A02               	goto	l3399
 14163  11FB  0AA5               	incf	___aomod@divisor+5,f
 14164  11FC  1D03               	skipz
 14165  11FD  2A02               	goto	l3399
 14166  11FE  0AA6               	incf	___aomod@divisor+6,f
 14167  11FF  1D03               	skipz
 14168  1200  2A02               	goto	l3399
 14169  1201  0AA7               	incf	___aomod@divisor+7,f
 14170  1202                     l3399:
 14171  1202  0020               	movlb	0	; select bank0
 14172  1203  0820               	movf	___aomod@divisor,w
 14173  1204  0421               	iorwf	___aomod@divisor+1,w
 14174  1205  0422               	iorwf	___aomod@divisor+2,w
 14175  1206  0423               	iorwf	___aomod@divisor+3,w
 14176  1207  0424               	iorwf	___aomod@divisor+4,w
 14177  1208  0425               	iorwf	___aomod@divisor+5,w
 14178  1209  0426               	iorwf	___aomod@divisor+6,w
 14179  120A  0427               	iorwf	___aomod@divisor+7,w
 14180  120B  1903               	skipnz
 14181  120C  2A5A               	goto	l3415
 14182  120D  01F1               	clrf	___aomod@counter
 14183  120E  0AF1               	incf	___aomod@counter,f
 14184  120F                     l3407:
 14185  120F  1BA7               	btfsc	___aomod@divisor+7,7
 14186  1210  2A1E               	goto	l3409
 14187  1211  35A0               	lslf	___aomod@divisor,f
 14188  1212  0DA1               	rlf	___aomod@divisor+1,f
 14189  1213  0DA2               	rlf	___aomod@divisor+2,f
 14190  1214  0DA3               	rlf	___aomod@divisor+3,f
 14191  1215  0DA4               	rlf	___aomod@divisor+4,f
 14192  1216  0DA5               	rlf	___aomod@divisor+5,f
 14193  1217  0DA6               	rlf	___aomod@divisor+6,f
 14194  1218  0DA7               	rlf	___aomod@divisor+7,f
 14195  1219  3001               	movlw	1
 14196  121A  00F0               	movwf	??___aomod
 14197  121B  0870               	movf	??___aomod,w
 14198  121C  07F1               	addwf	___aomod@counter,f
 14199  121D  2A0F               	goto	l3407
 14200  121E                     l3409:
 14201  121E  0827               	movf	___aomod@divisor+7,w
 14202  121F  022F               	subwf	___aomod@dividend+7,w
 14203  1220  1D03               	skipz
 14204  1221  2A3C               	goto	u4465
 14205  1222  0826               	movf	___aomod@divisor+6,w
 14206  1223  022E               	subwf	___aomod@dividend+6,w
 14207  1224  1D03               	skipz
 14208  1225  2A3C               	goto	u4465
 14209  1226  0825               	movf	___aomod@divisor+5,w
 14210  1227  022D               	subwf	___aomod@dividend+5,w
 14211  1228  1D03               	skipz
 14212  1229  2A3C               	goto	u4465
 14213  122A  0824               	movf	___aomod@divisor+4,w
 14214  122B  022C               	subwf	___aomod@dividend+4,w
 14215  122C  1D03               	skipz
 14216  122D  2A3C               	goto	u4465
 14217  122E  0823               	movf	___aomod@divisor+3,w
 14218  122F  022B               	subwf	___aomod@dividend+3,w
 14219  1230  1D03               	skipz
 14220  1231  2A3C               	goto	u4465
 14221  1232  0822               	movf	___aomod@divisor+2,w
 14222  1233  022A               	subwf	___aomod@dividend+2,w
 14223  1234  1D03               	skipz
 14224  1235  2A3C               	goto	u4465
 14225  1236  0821               	movf	___aomod@divisor+1,w
 14226  1237  0229               	subwf	___aomod@dividend+1,w
 14227  1238  1D03               	skipz
 14228  1239  2A3C               	goto	u4465
 14229  123A  0820               	movf	___aomod@divisor,w
 14230  123B  0228               	subwf	___aomod@dividend,w
 14231  123C                     u4465:
 14232  123C  1C03               	skipc
 14233  123D  2A4E               	goto	l3413
 14234  123E  0820               	movf	___aomod@divisor,w
 14235  123F  02A8               	subwf	___aomod@dividend,f
 14236  1240  0821               	movf	___aomod@divisor+1,w
 14237  1241  3BA9               	subwfb	___aomod@dividend+1,f
 14238  1242  0822               	movf	___aomod@divisor+2,w
 14239  1243  3BAA               	subwfb	___aomod@dividend+2,f
 14240  1244  0823               	movf	___aomod@divisor+3,w
 14241  1245  3BAB               	subwfb	___aomod@dividend+3,f
 14242  1246  0824               	movf	___aomod@divisor+4,w
 14243  1247  3BAC               	subwfb	___aomod@dividend+4,f
 14244  1248  0825               	movf	___aomod@divisor+5,w
 14245  1249  3BAD               	subwfb	___aomod@dividend+5,f
 14246  124A  0826               	movf	___aomod@divisor+6,w
 14247  124B  3BAE               	subwfb	___aomod@dividend+6,f
 14248  124C  0827               	movf	___aomod@divisor+7,w
 14249  124D  3BAF               	subwfb	___aomod@dividend+7,f
 14250  124E                     l3413:
 14251  124E  36A7               	lsrf	___aomod@divisor+7,f
 14252  124F  0CA6               	rrf	___aomod@divisor+6,f
 14253  1250  0CA5               	rrf	___aomod@divisor+5,f
 14254  1251  0CA4               	rrf	___aomod@divisor+4,f
 14255  1252  0CA3               	rrf	___aomod@divisor+3,f
 14256  1253  0CA2               	rrf	___aomod@divisor+2,f
 14257  1254  0CA1               	rrf	___aomod@divisor+1,f
 14258  1255  0CA0               	rrf	___aomod@divisor,f
 14259  1256  3001               	movlw	1
 14260  1257  02F1               	subwf	___aomod@counter,f
 14261  1258  1D03               	btfss	3,2
 14262  1259  2A1E               	goto	l3409
 14263  125A                     l3415:
 14264  125A  0872               	movf	___aomod@sign,w
 14265  125B  1903               	btfsc	3,2
 14266  125C  2A7B               	goto	l520
 14267  125D  09A8               	comf	___aomod@dividend,f
 14268  125E  09A9               	comf	___aomod@dividend+1,f
 14269  125F  09AA               	comf	___aomod@dividend+2,f
 14270  1260  09AB               	comf	___aomod@dividend+3,f
 14271  1261  09AC               	comf	___aomod@dividend+4,f
 14272  1262  09AD               	comf	___aomod@dividend+5,f
 14273  1263  09AE               	comf	___aomod@dividend+6,f
 14274  1264  09AF               	comf	___aomod@dividend+7,f
 14275  1265  0AA8               	incf	___aomod@dividend,f
 14276  1266  1D03               	skipz
 14277  1267  2A7B               	goto	l520
 14278  1268  0AA9               	incf	___aomod@dividend+1,f
 14279  1269  1D03               	skipz
 14280  126A  2A7B               	goto	l520
 14281  126B  0AAA               	incf	___aomod@dividend+2,f
 14282  126C  1D03               	skipz
 14283  126D  2A7B               	goto	l520
 14284  126E  0AAB               	incf	___aomod@dividend+3,f
 14285  126F  1D03               	skipz
 14286  1270  2A7B               	goto	l520
 14287  1271  0AAC               	incf	___aomod@dividend+4,f
 14288  1272  1D03               	skipz
 14289  1273  2A7B               	goto	l520
 14290  1274  0AAD               	incf	___aomod@dividend+5,f
 14291  1275  1D03               	skipz
 14292  1276  2A7B               	goto	l520
 14293  1277  0AAE               	incf	___aomod@dividend+6,f
 14294  1278  1D03               	skipz
 14295  1279  2A7B               	goto	l520
 14296  127A  0AAF               	incf	___aomod@dividend+7,f
 14297  127B                     l520:
 14298  127B  0020               	movlb	0	; select bank0
 14299  127C  0828               	movf	___aomod@dividend,w
 14300  127D  00A0               	movwf	?___aomod
 14301  127E  0829               	movf	___aomod@dividend+1,w
 14302  127F  00A1               	movwf	?___aomod+1
 14303  1280  082A               	movf	___aomod@dividend+2,w
 14304  1281  00A2               	movwf	?___aomod+2
 14305  1282  082B               	movf	___aomod@dividend+3,w
 14306  1283  00A3               	movwf	?___aomod+3
 14307  1284  082C               	movf	___aomod@dividend+4,w
 14308  1285  00A4               	movwf	?___aomod+4
 14309  1286  082D               	movf	___aomod@dividend+5,w
 14310  1287  00A5               	movwf	?___aomod+5
 14311  1288  082E               	movf	___aomod@dividend+6,w
 14312  1289  00A6               	movwf	?___aomod+6
 14313  128A  082F               	movf	___aomod@dividend+7,w
 14314  128B  00A7               	movwf	?___aomod+7
 14315  128C  0008               	return
 14316  128D                     __end_of___aomod:
 14317                           
 14318                           	psect	text41
 14319  003D                     __ptext41:	
 14320 ;; *************** function ___aodiv *****************
 14321 ;; Defined at:
 14322 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
 14323 ;; Parameters:    Size  Location     Type
 14324 ;;  divisor         8    0[BANK0 ] long long 
 14325 ;;  dividend        8    8[BANK0 ] long long 
 14326 ;; Auto vars:     Size  Location     Type
 14327 ;;  quotient        8    3[COMMON] long long 
 14328 ;;  sign            1    2[COMMON] unsigned char 
 14329 ;;  counter         1    1[COMMON] unsigned char 
 14330 ;; Return value:  Size  Location     Type
 14331 ;;                  8    0[BANK0 ] long long 
 14332 ;; Registers used:
 14333 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14334 ;; Tracked objects:
 14335 ;;		On entry : 1F/0
 14336 ;;		On exit  : 1F/0
 14337 ;;		Unchanged: 0/0
 14338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14339 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14340 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14341 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14342 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14343 ;;Total ram usage:       27 bytes
 14344 ;; Hardware stack levels used: 1
 14345 ;; This function calls:
 14346 ;;		Nothing
 14347 ;; This function is called by:
 14348 ;;		_dtoa
 14349 ;; This function uses a non-reentrant model
 14350 ;;
 14351                           
 14352                           
 14353                           ;psect for function ___aodiv
 14354  003D                     ___aodiv:
 14355                           
 14356                           ;incstack = 0
 14357                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
 14358  003D  01F2               	clrf	___aodiv@sign
 14359  003E  3020               	movlw	low ___aodiv@divisor
 14360  003F  0086               	movwf	6
 14361  0040  3000               	movlw	high ___aodiv@divisor
 14362  0041  0087               	movwf	7
 14363  0042  3F47               	moviw [7]fsr1
 14364  0043  00F0               	movwf	??___aodiv
 14365  0044  1FF0               	btfss	??___aodiv,7
 14366  0045  2867               	goto	l3357
 14367  0046  0020               	movlb	0	; select bank0
 14368  0047  09A0               	comf	___aodiv@divisor,f
 14369  0048  09A1               	comf	___aodiv@divisor+1,f
 14370  0049  09A2               	comf	___aodiv@divisor+2,f
 14371  004A  09A3               	comf	___aodiv@divisor+3,f
 14372  004B  09A4               	comf	___aodiv@divisor+4,f
 14373  004C  09A5               	comf	___aodiv@divisor+5,f
 14374  004D  09A6               	comf	___aodiv@divisor+6,f
 14375  004E  09A7               	comf	___aodiv@divisor+7,f
 14376  004F  0AA0               	incf	___aodiv@divisor,f
 14377  0050  1D03               	skipz
 14378  0051  2865               	goto	u430lld
 14379  0052  0AA1               	incf	___aodiv@divisor+1,f
 14380  0053  1D03               	skipz
 14381  0054  2865               	goto	u430lld
 14382  0055  0AA2               	incf	___aodiv@divisor+2,f
 14383  0056  1D03               	skipz
 14384  0057  2865               	goto	u430lld
 14385  0058  0AA3               	incf	___aodiv@divisor+3,f
 14386  0059  1D03               	skipz
 14387  005A  2865               	goto	u430lld
 14388  005B  0AA4               	incf	___aodiv@divisor+4,f
 14389  005C  1D03               	skipz
 14390  005D  2865               	goto	u430lld
 14391  005E  0AA5               	incf	___aodiv@divisor+5,f
 14392  005F  1D03               	skipz
 14393  0060  2865               	goto	u430lld
 14394  0061  0AA6               	incf	___aodiv@divisor+6,f
 14395  0062  1D03               	skipz
 14396  0063  2865               	goto	u430lld
 14397  0064  0AA7               	incf	___aodiv@divisor+7,f
 14398  0065                     u430lld:
 14399  0065  01F2               	clrf	___aodiv@sign
 14400  0066  0AF2               	incf	___aodiv@sign,f
 14401  0067                     l3357:
 14402  0067  3028               	movlw	low ___aodiv@dividend
 14403  0068  0086               	movwf	6
 14404  0069  3000               	movlw	high ___aodiv@dividend
 14405  006A  0087               	movwf	7
 14406  006B  3F47               	moviw [7]fsr1
 14407  006C  00F0               	movwf	??___aodiv
 14408  006D  1FF0               	btfss	??___aodiv,7
 14409  006E  2892               	goto	l3363
 14410  006F  0020               	movlb	0	; select bank0
 14411  0070  09A8               	comf	___aodiv@dividend,f
 14412  0071  09A9               	comf	___aodiv@dividend+1,f
 14413  0072  09AA               	comf	___aodiv@dividend+2,f
 14414  0073  09AB               	comf	___aodiv@dividend+3,f
 14415  0074  09AC               	comf	___aodiv@dividend+4,f
 14416  0075  09AD               	comf	___aodiv@dividend+5,f
 14417  0076  09AE               	comf	___aodiv@dividend+6,f
 14418  0077  09AF               	comf	___aodiv@dividend+7,f
 14419  0078  0AA8               	incf	___aodiv@dividend,f
 14420  0079  1D03               	skipz
 14421  007A  288E               	goto	l3361
 14422  007B  0AA9               	incf	___aodiv@dividend+1,f
 14423  007C  1D03               	skipz
 14424  007D  288E               	goto	l3361
 14425  007E  0AAA               	incf	___aodiv@dividend+2,f
 14426  007F  1D03               	skipz
 14427  0080  288E               	goto	l3361
 14428  0081  0AAB               	incf	___aodiv@dividend+3,f
 14429  0082  1D03               	skipz
 14430  0083  288E               	goto	l3361
 14431  0084  0AAC               	incf	___aodiv@dividend+4,f
 14432  0085  1D03               	skipz
 14433  0086  288E               	goto	l3361
 14434  0087  0AAD               	incf	___aodiv@dividend+5,f
 14435  0088  1D03               	skipz
 14436  0089  288E               	goto	l3361
 14437  008A  0AAE               	incf	___aodiv@dividend+6,f
 14438  008B  1D03               	skipz
 14439  008C  288E               	goto	l3361
 14440  008D  0AAF               	incf	___aodiv@dividend+7,f
 14441  008E                     l3361:
 14442  008E  3001               	movlw	1
 14443  008F  00F0               	movwf	??___aodiv
 14444  0090  0870               	movf	??___aodiv,w
 14445  0091  06F2               	xorwf	___aodiv@sign,f
 14446  0092                     l3363:
 14447  0092  3073               	movlw	low ___aodiv@quotient
 14448  0093  0086               	movwf	6
 14449  0094  3000               	movlw	high ___aodiv@quotient
 14450  0095  0087               	movwf	7
 14451  0096  3008               	movlw	8
 14452  0097  00F0               	movwf	??___aodiv
 14453  0098  3000               	movlw	0
 14454  0099                     u4330:
 14455  0099  001E               	movwi fsr1++
 14456  009A  0BF0               	decfsz	??___aodiv,f
 14457  009B  2899               	goto	u4330
 14458  009C  0020               	movlb	0	; select bank0
 14459  009D  0820               	movf	___aodiv@divisor,w
 14460  009E  0421               	iorwf	___aodiv@divisor+1,w
 14461  009F  0422               	iorwf	___aodiv@divisor+2,w
 14462  00A0  0423               	iorwf	___aodiv@divisor+3,w
 14463  00A1  0424               	iorwf	___aodiv@divisor+4,w
 14464  00A2  0425               	iorwf	___aodiv@divisor+5,w
 14465  00A3  0426               	iorwf	___aodiv@divisor+6,w
 14466  00A4  0427               	iorwf	___aodiv@divisor+7,w
 14467  00A5  1903               	skipnz
 14468  00A6  28FD               	goto	l3385
 14469  00A7  01F1               	clrf	___aodiv@counter
 14470  00A8  0AF1               	incf	___aodiv@counter,f
 14471  00A9                     l3373:
 14472  00A9  1BA7               	btfsc	___aodiv@divisor+7,7
 14473  00AA  28B8               	goto	l3375
 14474  00AB  35A0               	lslf	___aodiv@divisor,f
 14475  00AC  0DA1               	rlf	___aodiv@divisor+1,f
 14476  00AD  0DA2               	rlf	___aodiv@divisor+2,f
 14477  00AE  0DA3               	rlf	___aodiv@divisor+3,f
 14478  00AF  0DA4               	rlf	___aodiv@divisor+4,f
 14479  00B0  0DA5               	rlf	___aodiv@divisor+5,f
 14480  00B1  0DA6               	rlf	___aodiv@divisor+6,f
 14481  00B2  0DA7               	rlf	___aodiv@divisor+7,f
 14482  00B3  3001               	movlw	1
 14483  00B4  00F0               	movwf	??___aodiv
 14484  00B5  0870               	movf	??___aodiv,w
 14485  00B6  07F1               	addwf	___aodiv@counter,f
 14486  00B7  28A9               	goto	l3373
 14487  00B8                     l3375:
 14488  00B8  35F3               	lslf	___aodiv@quotient,f
 14489  00B9  0DF4               	rlf	___aodiv@quotient+1,f
 14490  00BA  0DF5               	rlf	___aodiv@quotient+2,f
 14491  00BB  0DF6               	rlf	___aodiv@quotient+3,f
 14492  00BC  0DF7               	rlf	___aodiv@quotient+4,f
 14493  00BD  0DF8               	rlf	___aodiv@quotient+5,f
 14494  00BE  0DF9               	rlf	___aodiv@quotient+6,f
 14495  00BF  0DFA               	rlf	___aodiv@quotient+7,f
 14496  00C0  0827               	movf	___aodiv@divisor+7,w
 14497  00C1  022F               	subwf	___aodiv@dividend+7,w
 14498  00C2  1D03               	skipz
 14499  00C3  28DE               	goto	u4365
 14500  00C4  0826               	movf	___aodiv@divisor+6,w
 14501  00C5  022E               	subwf	___aodiv@dividend+6,w
 14502  00C6  1D03               	skipz
 14503  00C7  28DE               	goto	u4365
 14504  00C8  0825               	movf	___aodiv@divisor+5,w
 14505  00C9  022D               	subwf	___aodiv@dividend+5,w
 14506  00CA  1D03               	skipz
 14507  00CB  28DE               	goto	u4365
 14508  00CC  0824               	movf	___aodiv@divisor+4,w
 14509  00CD  022C               	subwf	___aodiv@dividend+4,w
 14510  00CE  1D03               	skipz
 14511  00CF  28DE               	goto	u4365
 14512  00D0  0823               	movf	___aodiv@divisor+3,w
 14513  00D1  022B               	subwf	___aodiv@dividend+3,w
 14514  00D2  1D03               	skipz
 14515  00D3  28DE               	goto	u4365
 14516  00D4  0822               	movf	___aodiv@divisor+2,w
 14517  00D5  022A               	subwf	___aodiv@dividend+2,w
 14518  00D6  1D03               	skipz
 14519  00D7  28DE               	goto	u4365
 14520  00D8  0821               	movf	___aodiv@divisor+1,w
 14521  00D9  0229               	subwf	___aodiv@dividend+1,w
 14522  00DA  1D03               	skipz
 14523  00DB  28DE               	goto	u4365
 14524  00DC  0820               	movf	___aodiv@divisor,w
 14525  00DD  0228               	subwf	___aodiv@dividend,w
 14526  00DE                     u4365:
 14527  00DE  1C03               	skipc
 14528  00DF  28F1               	goto	l3383
 14529  00E0  0820               	movf	___aodiv@divisor,w
 14530  00E1  02A8               	subwf	___aodiv@dividend,f
 14531  00E2  0821               	movf	___aodiv@divisor+1,w
 14532  00E3  3BA9               	subwfb	___aodiv@dividend+1,f
 14533  00E4  0822               	movf	___aodiv@divisor+2,w
 14534  00E5  3BAA               	subwfb	___aodiv@dividend+2,f
 14535  00E6  0823               	movf	___aodiv@divisor+3,w
 14536  00E7  3BAB               	subwfb	___aodiv@dividend+3,f
 14537  00E8  0824               	movf	___aodiv@divisor+4,w
 14538  00E9  3BAC               	subwfb	___aodiv@dividend+4,f
 14539  00EA  0825               	movf	___aodiv@divisor+5,w
 14540  00EB  3BAD               	subwfb	___aodiv@dividend+5,f
 14541  00EC  0826               	movf	___aodiv@divisor+6,w
 14542  00ED  3BAE               	subwfb	___aodiv@dividend+6,f
 14543  00EE  0827               	movf	___aodiv@divisor+7,w
 14544  00EF  3BAF               	subwfb	___aodiv@dividend+7,f
 14545  00F0  1473               	bsf	___aodiv@quotient,0
 14546  00F1                     l3383:
 14547  00F1  36A7               	lsrf	___aodiv@divisor+7,f
 14548  00F2  0CA6               	rrf	___aodiv@divisor+6,f
 14549  00F3  0CA5               	rrf	___aodiv@divisor+5,f
 14550  00F4  0CA4               	rrf	___aodiv@divisor+4,f
 14551  00F5  0CA3               	rrf	___aodiv@divisor+3,f
 14552  00F6  0CA2               	rrf	___aodiv@divisor+2,f
 14553  00F7  0CA1               	rrf	___aodiv@divisor+1,f
 14554  00F8  0CA0               	rrf	___aodiv@divisor,f
 14555  00F9  3001               	movlw	1
 14556  00FA  02F1               	subwf	___aodiv@counter,f
 14557  00FB  1D03               	btfss	3,2
 14558  00FC  28B8               	goto	l3375
 14559  00FD                     l3385:
 14560  00FD  0872               	movf	___aodiv@sign,w
 14561  00FE  1903               	btfsc	3,2
 14562  00FF  291E               	goto	l507
 14563  0100  09F3               	comf	___aodiv@quotient,f
 14564  0101  09F4               	comf	___aodiv@quotient+1,f
 14565  0102  09F5               	comf	___aodiv@quotient+2,f
 14566  0103  09F6               	comf	___aodiv@quotient+3,f
 14567  0104  09F7               	comf	___aodiv@quotient+4,f
 14568  0105  09F8               	comf	___aodiv@quotient+5,f
 14569  0106  09F9               	comf	___aodiv@quotient+6,f
 14570  0107  09FA               	comf	___aodiv@quotient+7,f
 14571  0108  0AF3               	incf	___aodiv@quotient,f
 14572  0109  1D03               	skipz
 14573  010A  291E               	goto	l507
 14574  010B  0AF4               	incf	___aodiv@quotient+1,f
 14575  010C  1D03               	skipz
 14576  010D  291E               	goto	l507
 14577  010E  0AF5               	incf	___aodiv@quotient+2,f
 14578  010F  1D03               	skipz
 14579  0110  291E               	goto	l507
 14580  0111  0AF6               	incf	___aodiv@quotient+3,f
 14581  0112  1D03               	skipz
 14582  0113  291E               	goto	l507
 14583  0114  0AF7               	incf	___aodiv@quotient+4,f
 14584  0115  1D03               	skipz
 14585  0116  291E               	goto	l507
 14586  0117  0AF8               	incf	___aodiv@quotient+5,f
 14587  0118  1D03               	skipz
 14588  0119  291E               	goto	l507
 14589  011A  0AF9               	incf	___aodiv@quotient+6,f
 14590  011B  1D03               	skipz
 14591  011C  291E               	goto	l507
 14592  011D  0AFA               	incf	___aodiv@quotient+7,f
 14593  011E                     l507:
 14594  011E  0873               	movf	___aodiv@quotient,w
 14595  011F  0020               	movlb	0	; select bank0
 14596  0120  00A0               	movwf	?___aodiv
 14597  0121  0874               	movf	___aodiv@quotient+1,w
 14598  0122  00A1               	movwf	?___aodiv+1
 14599  0123  0875               	movf	___aodiv@quotient+2,w
 14600  0124  00A2               	movwf	?___aodiv+2
 14601  0125  0876               	movf	___aodiv@quotient+3,w
 14602  0126  00A3               	movwf	?___aodiv+3
 14603  0127  0877               	movf	___aodiv@quotient+4,w
 14604  0128  00A4               	movwf	?___aodiv+4
 14605  0129  0878               	movf	___aodiv@quotient+5,w
 14606  012A  00A5               	movwf	?___aodiv+5
 14607  012B  0879               	movf	___aodiv@quotient+6,w
 14608  012C  00A6               	movwf	?___aodiv+6
 14609  012D  087A               	movf	___aodiv@quotient+7,w
 14610  012E  00A7               	movwf	?___aodiv+7
 14611  012F  0008               	return
 14612  0130                     __end_of___aodiv:
 14613                           
 14614                           	psect	text42
 14615  1040                     __ptext42:	
 14616 ;; *************** function _atoi *****************
 14617 ;; Defined at:
 14618 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
 14619 ;; Parameters:    Size  Location     Type
 14620 ;;  s               2    6[COMMON] PTR const unsigned char 
 14621 ;;		 -> STR_4(29), STR_3(23), STR_2(21), STR_1(16), 
 14622 ;; Auto vars:     Size  Location     Type
 14623 ;;  n               2    7[BANK0 ] int 
 14624 ;;  neg             2    0[BANK0 ] int 
 14625 ;; Return value:  Size  Location     Type
 14626 ;;                  2    6[COMMON] int 
 14627 ;; Registers used:
 14628 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14629 ;; Tracked objects:
 14630 ;;		On entry : 1F/0
 14631 ;;		On exit  : 1F/0
 14632 ;;		Unchanged: 0/0
 14633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14634 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14635 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14636 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14637 ;;      Totals:         6       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14638 ;;Total ram usage:       15 bytes
 14639 ;; Hardware stack levels used: 1
 14640 ;; Hardware stack levels required when called: 1
 14641 ;; This function calls:
 14642 ;;		___wmul
 14643 ;;		_isdigit
 14644 ;;		_isspace
 14645 ;; This function is called by:
 14646 ;;		_vfpfcnvrt
 14647 ;; This function uses a non-reentrant model
 14648 ;;
 14649                           
 14650                           
 14651                           ;psect for function _atoi
 14652  1040                     _atoi:
 14653                           
 14654                           ;incstack = 0
 14655                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14656  1040  01A7               	clrf	atoi@n
 14657  1041  01A8               	clrf	atoi@n+1
 14658  1042  01A0               	clrf	atoi@neg
 14659  1043  01A1               	clrf	atoi@neg+1
 14660  1044                     l4415:
 14661  1044  01A6               	clrf	_atoi$1034
 14662  1045  0AA6               	incf	_atoi$1034,f
 14663  1046  0876               	movf	atoi@s,w
 14664  1047  0084               	movwf	4
 14665  1048  0877               	movf	atoi@s+1,w
 14666  1049  0085               	movwf	5
 14667  104A  0012               	moviw fsr0++
 14668  104B  3A20               	xorlw	32
 14669  104C  1903               	btfsc	3,2
 14670  104D  2860               	goto	l4423
 14671  104E  0876               	movf	atoi@s,w
 14672  104F  0084               	movwf	4
 14673  1050  0877               	movf	atoi@s+1,w
 14674  1051  0085               	movwf	5
 14675  1052  0800               	movf	0,w	;code access
 14676  1053  3EF7               	addlw	247
 14677  1054  00F8               	movwf	??_atoi
 14678  1055  30FF               	movlw	255
 14679  1056  1803               	skipnc
 14680  1057  3000               	movlw	0
 14681  1058  00F9               	movwf	??_atoi+1
 14682  1059  3000               	movlw	0
 14683  105A  0279               	subwf	??_atoi+1,w
 14684  105B  3005               	movlw	5
 14685  105C  1903               	skipnz
 14686  105D  0278               	subwf	??_atoi,w
 14687  105E  1803               	btfsc	3,0
 14688  105F  01A6               	clrf	_atoi$1034
 14689  1060                     l4423:
 14690  1060  0826               	movf	_atoi$1034,w
 14691  1061  00F8               	movwf	??_atoi
 14692  1062  01F9               	clrf	??_atoi+1
 14693  1063  0878               	movf	??_atoi,w
 14694  1064  00A2               	movwf	_atoi$1033
 14695  1065  0879               	movf	??_atoi+1,w
 14696  1066  00A3               	movwf	_atoi$1033+1
 14697  1067  0822               	movf	_atoi$1033,w
 14698  1068  0423               	iorwf	_atoi$1033+1,w
 14699  1069  1903               	btfsc	3,2
 14700  106A  2875               	goto	l4431
 14701  106B  3001               	movlw	1
 14702  106C  07F6               	addwf	atoi@s,f
 14703  106D  3000               	movlw	0
 14704  106E  3DF7               	addwfc	atoi@s+1,f
 14705  106F  2844               	goto	l4415
 14706  1070                     l4429:
 14707  1070  3001               	movlw	1
 14708  1071  00A0               	movwf	atoi@neg
 14709  1072  3000               	movlw	0
 14710  1073  00A1               	movwf	atoi@neg+1
 14711  1074  28A7               	goto	l1154
 14712  1075                     l4431:
 14713  1075  0876               	movf	atoi@s,w
 14714  1076  0084               	movwf	4
 14715  1077  0877               	movf	atoi@s+1,w
 14716  1078  0085               	movwf	5
 14717  1079  0800               	movf	0,w	;code access
 14718  107A  00F8               	movwf	??_atoi
 14719  107B  01F9               	clrf	??_atoi+1
 14720                           
 14721                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14722                           ; Switch size 1, requested type "simple"
 14723                           ; Number of cases is 1, Range of values is 0 to 0
 14724                           ; switch strategies available:
 14725                           ; Name         Instructions Cycles
 14726                           ; simple_byte            4     3 (average)
 14727                           ; direct_byte            8     6 (fixed)
 14728                           ; jumptable            260     6 (fixed)
 14729                           ;	Chosen strategy is simple_byte
 14730  107C  0879               	movf	??_atoi+1,w
 14731  107D  3A00               	xorlw	0	; case 0
 14732  107E  1903               	skipnz
 14733  107F  2881               	goto	l4879
 14734  1080  28AB               	goto	l4437
 14735  1081                     l4879:
 14736                           
 14737                           ; Switch size 1, requested type "simple"
 14738                           ; Number of cases is 2, Range of values is 43 to 45
 14739                           ; switch strategies available:
 14740                           ; Name         Instructions Cycles
 14741                           ; simple_byte            7     4 (average)
 14742                           ; direct_byte           15     9 (fixed)
 14743                           ; jumptable            263     9 (fixed)
 14744                           ;	Chosen strategy is simple_byte
 14745  1081  0878               	movf	??_atoi,w
 14746  1082  3A2B               	xorlw	43	; case 43
 14747  1083  1903               	skipnz
 14748  1084  28A7               	goto	l1154
 14749  1085  3A06               	xorlw	6	; case 45
 14750  1086  1903               	skipnz
 14751  1087  2870               	goto	l4429
 14752  1088  28AB               	goto	l4437
 14753  1089                     l4433:
 14754  1089  0876               	movf	atoi@s,w
 14755  108A  0084               	movwf	4
 14756  108B  0877               	movf	atoi@s+1,w
 14757  108C  0085               	movwf	5
 14758  108D  0800               	movf	0,w	;code access
 14759  108E  00F8               	movwf	??_atoi
 14760  108F  0828               	movf	atoi@n+1,w
 14761  1090  00F1               	movwf	___wmul@multiplier+1
 14762  1091  0827               	movf	atoi@n,w
 14763  1092  00F0               	movwf	___wmul@multiplier
 14764  1093  300A               	movlw	10
 14765  1094  00F2               	movwf	___wmul@multiplicand
 14766  1095  3000               	movlw	0
 14767  1096  00F3               	movwf	___wmul@multiplicand+1
 14768  1097  319A  224D  3190   	fcall	___wmul
 14769  109A  0871               	movf	?___wmul+1,w
 14770  109B  00FA               	movwf	??_atoi+2
 14771  109C  0878               	movf	??_atoi,w
 14772  109D  0270               	subwf	?___wmul,w
 14773  109E  00F9               	movwf	??_atoi+1
 14774  109F  1C03               	skipc
 14775  10A0  03FA               	decf	??_atoi+2,f
 14776  10A1  0879               	movf	??_atoi+1,w
 14777  10A2  3E30               	addlw	48
 14778  10A3  00A7               	movwf	atoi@n
 14779  10A4  3000               	movlw	0
 14780  10A5  3D7A               	addwfc	??_atoi+2,w
 14781  10A6  00A8               	movwf	atoi@n+1
 14782  10A7                     l1154:
 14783  10A7  3001               	movlw	1
 14784  10A8  07F6               	addwf	atoi@s,f
 14785  10A9  3000               	movlw	0
 14786  10AA  3DF7               	addwfc	atoi@s+1,f
 14787  10AB                     l4437:
 14788  10AB  0876               	movf	atoi@s,w
 14789  10AC  0084               	movwf	4
 14790  10AD  0877               	movf	atoi@s+1,w
 14791  10AE  0085               	movwf	5
 14792  10AF  0800               	movf	0,w	;code access
 14793  10B0  3ED0               	addlw	208
 14794  10B1  00F8               	movwf	??_atoi
 14795  10B2  30FF               	movlw	255
 14796  10B3  1803               	skipnc
 14797  10B4  3000               	movlw	0
 14798  10B5  00F9               	movwf	??_atoi+1
 14799  10B6  3000               	movlw	0
 14800  10B7  0279               	subwf	??_atoi+1,w
 14801  10B8  300A               	movlw	10
 14802  10B9  1903               	skipnz
 14803  10BA  0278               	subwf	??_atoi,w
 14804  10BB  1803               	btfsc	3,0
 14805  10BC  28BF               	goto	u6710
 14806  10BD  3001               	movlw	1
 14807  10BE  28C0               	goto	u6720
 14808  10BF                     u6710:
 14809  10BF  3000               	movlw	0
 14810  10C0                     u6720:
 14811  10C0  00FA               	movwf	??_atoi+2
 14812  10C1  01FB               	clrf	??_atoi+3
 14813  10C2  087A               	movf	??_atoi+2,w
 14814  10C3  00A4               	movwf	_atoi$1035
 14815  10C4  087B               	movf	??_atoi+3,w
 14816  10C5  00A5               	movwf	_atoi$1035+1
 14817  10C6  0824               	movf	_atoi$1035,w
 14818  10C7  0425               	iorwf	_atoi$1035+1,w
 14819  10C8  1D03               	btfss	3,2
 14820  10C9  2889               	goto	l4433
 14821  10CA  0820               	movf	atoi@neg,w
 14822  10CB  0421               	iorwf	atoi@neg+1,w
 14823  10CC  1D03               	btfss	3,2
 14824  10CD  28DA               	goto	l4447
 14825  10CE  0927               	comf	atoi@n,w
 14826  10CF  00F8               	movwf	??_atoi
 14827  10D0  0928               	comf	atoi@n+1,w
 14828  10D1  00F9               	movwf	??_atoi+1
 14829  10D2  0AF8               	incf	??_atoi,f
 14830  10D3  1903               	skipnz
 14831  10D4  0AF9               	incf	??_atoi+1,f
 14832  10D5  0878               	movf	??_atoi,w
 14833  10D6  00F6               	movwf	?_atoi
 14834  10D7  0879               	movf	??_atoi+1,w
 14835  10D8  00F7               	movwf	?_atoi+1
 14836  10D9  0008               	return
 14837  10DA                     l4447:
 14838  10DA  0828               	movf	atoi@n+1,w
 14839  10DB  00F7               	movwf	?_atoi+1
 14840  10DC  0827               	movf	atoi@n,w
 14841  10DD  00F6               	movwf	?_atoi
 14842  10DE  0008               	return
 14843  10DF                     __end_of_atoi:
 14844                           
 14845                           	psect	text43
 14846  1A68                     __ptext43:	
 14847 ;; *************** function _isspace *****************
 14848 ;; Defined at:
 14849 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
 14850 ;; Parameters:    Size  Location     Type
 14851 ;;  c               2    0[COMMON] int 
 14852 ;; Auto vars:     Size  Location     Type
 14853 ;;		None
 14854 ;; Return value:  Size  Location     Type
 14855 ;;                  2    0[COMMON] int 
 14856 ;; Registers used:
 14857 ;;		wreg, status,2, status,0
 14858 ;; Tracked objects:
 14859 ;;		On entry : 0/0
 14860 ;;		On exit  : 0/0
 14861 ;;		Unchanged: 0/0
 14862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14863 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14864 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14865 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14866 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14867 ;;Total ram usage:        5 bytes
 14868 ;; Hardware stack levels used: 1
 14869 ;; This function calls:
 14870 ;;		Nothing
 14871 ;; This function is called by:
 14872 ;;		_atoi
 14873 ;; This function uses a non-reentrant model
 14874 ;;
 14875                           
 14876                           
 14877                           ;psect for function _isspace
 14878  1A68                     _isspace:
 14879                           
 14880                           ;incstack = 0
 14881                           ; Regs used in _isspace: [wreg+status,2+status,0]
 14882  1A68  01F4               	clrf	_isspace$1073
 14883  1A69  0AF4               	incf	_isspace$1073,f
 14884  1A6A  3020               	movlw	32
 14885  1A6B  0670               	xorwf	isspace@c,w
 14886  1A6C  0471               	iorwf	isspace@c+1,w
 14887  1A6D  1903               	btfsc	3,2
 14888  1A6E  2A7C               	goto	l3981
 14889  1A6F  0870               	movf	isspace@c,w
 14890  1A70  3EF7               	addlw	247
 14891  1A71  00F2               	movwf	??_isspace
 14892  1A72  30FF               	movlw	255
 14893  1A73  3D71               	addwfc	isspace@c+1,w
 14894  1A74  00F3               	movwf	??_isspace+1
 14895  1A75  3000               	movlw	0
 14896  1A76  0273               	subwf	??_isspace+1,w
 14897  1A77  3005               	movlw	5
 14898  1A78  1903               	skipnz
 14899  1A79  0272               	subwf	??_isspace,w
 14900  1A7A  1803               	btfsc	3,0
 14901  1A7B  01F4               	clrf	_isspace$1073
 14902  1A7C                     l3981:
 14903  1A7C  0874               	movf	_isspace$1073,w
 14904  1A7D  00F2               	movwf	??_isspace
 14905  1A7E  01F3               	clrf	??_isspace+1
 14906  1A7F  0872               	movf	??_isspace,w
 14907  1A80  00F0               	movwf	?_isspace
 14908  1A81  0873               	movf	??_isspace+1,w
 14909  1A82  00F1               	movwf	?_isspace+1
 14910  1A83  0008               	return
 14911  1A84                     __end_of_isspace:
 14912                           
 14913                           	psect	text44
 14914  198D                     __ptext44:	
 14915 ;; *************** function _isdigit *****************
 14916 ;; Defined at:
 14917 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
 14918 ;; Parameters:    Size  Location     Type
 14919 ;;  c               2    0[COMMON] int 
 14920 ;; Auto vars:     Size  Location     Type
 14921 ;;		None
 14922 ;; Return value:  Size  Location     Type
 14923 ;;                  2    0[COMMON] int 
 14924 ;; Registers used:
 14925 ;;		wreg, status,2, status,0
 14926 ;; Tracked objects:
 14927 ;;		On entry : 0/0
 14928 ;;		On exit  : 0/0
 14929 ;;		Unchanged: 0/0
 14930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14931 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14933 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14934 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14935 ;;Total ram usage:        6 bytes
 14936 ;; Hardware stack levels used: 1
 14937 ;; This function calls:
 14938 ;;		Nothing
 14939 ;; This function is called by:
 14940 ;;		_vfpfcnvrt
 14941 ;;		_atoi
 14942 ;; This function uses a non-reentrant model
 14943 ;;
 14944                           
 14945                           
 14946                           ;psect for function _isdigit
 14947  198D                     _isdigit:
 14948                           
 14949                           ;incstack = 0
 14950                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 14951  198D  0870               	movf	isdigit@c,w
 14952  198E  3ED0               	addlw	208
 14953  198F  00F2               	movwf	??_isdigit
 14954  1990  30FF               	movlw	255
 14955  1991  3D71               	addwfc	isdigit@c+1,w
 14956  1992  00F3               	movwf	??_isdigit+1
 14957  1993  3000               	movlw	0
 14958  1994  0273               	subwf	??_isdigit+1,w
 14959  1995  300A               	movlw	10
 14960  1996  1903               	skipnz
 14961  1997  0272               	subwf	??_isdigit,w
 14962  1998  1803               	btfsc	3,0
 14963  1999  299C               	goto	u5750
 14964  199A  3001               	movlw	1
 14965  199B  299D               	goto	u5760
 14966  199C                     u5750:
 14967  199C  3000               	movlw	0
 14968  199D                     u5760:
 14969  199D  00F4               	movwf	??_isdigit+2
 14970  199E  01F5               	clrf	??_isdigit+3
 14971  199F  0874               	movf	??_isdigit+2,w
 14972  19A0  00F0               	movwf	?_isdigit
 14973  19A1  0875               	movf	??_isdigit+3,w
 14974  19A2  00F1               	movwf	?_isdigit+1
 14975  19A3  0008               	return
 14976  19A4                     __end_of_isdigit:
 14977                           
 14978                           	psect	text45
 14979  1A4D                     __ptext45:	
 14980 ;; *************** function ___wmul *****************
 14981 ;; Defined at:
 14982 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 14983 ;; Parameters:    Size  Location     Type
 14984 ;;  multiplier      2    0[COMMON] unsigned int 
 14985 ;;  multiplicand    2    2[COMMON] unsigned int 
 14986 ;; Auto vars:     Size  Location     Type
 14987 ;;  product         2    4[COMMON] unsigned int 
 14988 ;; Return value:  Size  Location     Type
 14989 ;;                  2    0[COMMON] unsigned int 
 14990 ;; Registers used:
 14991 ;;		wreg, status,2, status,0
 14992 ;; Tracked objects:
 14993 ;;		On entry : 1F/0
 14994 ;;		On exit  : 1F/0
 14995 ;;		Unchanged: 1F/0
 14996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14997 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14998 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15000 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15001 ;;Total ram usage:        6 bytes
 15002 ;; Hardware stack levels used: 1
 15003 ;; This function calls:
 15004 ;;		Nothing
 15005 ;; This function is called by:
 15006 ;;		_atoi
 15007 ;; This function uses a non-reentrant model
 15008 ;;
 15009                           
 15010                           
 15011                           ;psect for function ___wmul
 15012  1A4D                     ___wmul:
 15013                           
 15014                           ;incstack = 0
 15015                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 15016  1A4D  01F4               	clrf	___wmul@product
 15017  1A4E  01F5               	clrf	___wmul@product+1
 15018  1A4F                     l3339:
 15019  1A4F  1C70               	btfss	___wmul@multiplier,0
 15020  1A50  2A55               	goto	l407
 15021  1A51  0872               	movf	___wmul@multiplicand,w
 15022  1A52  07F4               	addwf	___wmul@product,f
 15023  1A53  0873               	movf	___wmul@multiplicand+1,w
 15024  1A54  3DF5               	addwfc	___wmul@product+1,f
 15025  1A55                     l407:
 15026  1A55  3001               	movlw	1
 15027  1A56                     u4265:
 15028  1A56  35F2               	lslf	___wmul@multiplicand,f
 15029  1A57  0DF3               	rlf	___wmul@multiplicand+1,f
 15030  1A58  0B89               	decfsz	9,f
 15031  1A59  2A56               	goto	u4265
 15032  1A5A  3001               	movlw	1
 15033  1A5B                     u4275:
 15034  1A5B  36F1               	lsrf	___wmul@multiplier+1,f
 15035  1A5C  0CF0               	rrf	___wmul@multiplier,f
 15036  1A5D  0B89               	decfsz	9,f
 15037  1A5E  2A5B               	goto	u4275
 15038  1A5F  0870               	movf	___wmul@multiplier,w
 15039  1A60  0471               	iorwf	___wmul@multiplier+1,w
 15040  1A61  1D03               	btfss	3,2
 15041  1A62  2A4F               	goto	l3339
 15042  1A63  0875               	movf	___wmul@product+1,w
 15043  1A64  00F1               	movwf	?___wmul+1
 15044  1A65  0874               	movf	___wmul@product,w
 15045  1A66  00F0               	movwf	?___wmul
 15046  1A67  0008               	return
 15047  1A68                     __end_of___wmul:
 15048                           
 15049                           	psect	text46
 15050  1977                     __ptext46:	
 15051 ;; *************** function _port_init *****************
 15052 ;; Defined at:
 15053 ;;		line 90 in file "Main.c"
 15054 ;; Parameters:    Size  Location     Type
 15055 ;;		None
 15056 ;; Auto vars:     Size  Location     Type
 15057 ;;		None
 15058 ;; Return value:  Size  Location     Type
 15059 ;;                  1    wreg      void 
 15060 ;; Registers used:
 15061 ;;		wreg, status,2
 15062 ;; Tracked objects:
 15063 ;;		On entry : B1F/0
 15064 ;;		On exit  : B1F/1E
 15065 ;;		Unchanged: B00/0
 15066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15071 ;;Total ram usage:        0 bytes
 15072 ;; Hardware stack levels used: 1
 15073 ;; This function calls:
 15074 ;;		Nothing
 15075 ;; This function is called by:
 15076 ;;		_main
 15077 ;; This function uses a non-reentrant model
 15078 ;;
 15079                           
 15080                           
 15081                           ;psect for function _port_init
 15082  1977                     _port_init:
 15083                           
 15084                           ;Main.c: 92:     ANSELA = 0;
 15085                           
 15086                           ;incstack = 0
 15087                           ; Regs used in _port_init: [wreg+status,2]
 15088  1977  003E               	movlb	30	; select bank30
 15089  1978  01B8               	clrf	56	;volatile
 15090                           
 15091                           ;Main.c: 93:     LATA=0;
 15092  1979  0020               	movlb	0	; select bank0
 15093  197A  0196               	clrf	22	;volatile
 15094                           
 15095                           ;Main.c: 94:     PORTA =0;
 15096  197B  018C               	clrf	12	;volatile
 15097                           
 15098                           ;Main.c: 95:     TRISA = 0b11110000;
 15099  197C  30F0               	movlw	240
 15100  197D  0091               	movwf	17	;volatile
 15101                           
 15102                           ;Main.c: 98:     ANSELA = ANSELA | (1<<4);
 15103  197E  003E               	movlb	30	; select bank30
 15104  197F  0838               	movf	56,w	;volatile
 15105  1980  3810               	iorlw	16
 15106  1981  00B8               	movwf	56	;volatile
 15107                           
 15108                           ;Main.c: 100:     LATB=0;
 15109  1982  0020               	movlb	0	; select bank0
 15110  1983  0197               	clrf	23	;volatile
 15111                           
 15112                           ;Main.c: 101:     PORTB =0;
 15113  1984  018D               	clrf	13	;volatile
 15114                           
 15115                           ;Main.c: 102:     TRISB = TRISA | (1<<0);
 15116  1985  0811               	movf	17,w	;volatile
 15117  1986  3801               	iorlw	1
 15118  1987  0092               	movwf	18	;volatile
 15119                           
 15120                           ;Main.c: 103:     ANSELB = ANSELB | (1<<0);
 15121  1988  003E               	movlb	30	; select bank30
 15122  1989  0843               	movf	67,w	;volatile
 15123  198A  3801               	iorlw	1
 15124  198B  00C3               	movwf	67	;volatile
 15125  198C  0008               	return
 15126  198D                     __end_of_port_init:
 15127                           
 15128                           	psect	text47
 15129  1A33                     __ptext47:	
 15130 ;; *************** function _adc_init *****************
 15131 ;; Defined at:
 15132 ;;		line 3 in file "adc.c"
 15133 ;; Parameters:    Size  Location     Type
 15134 ;;		None
 15135 ;; Auto vars:     Size  Location     Type
 15136 ;;		None
 15137 ;; Return value:  Size  Location     Type
 15138 ;;                  1    wreg      void 
 15139 ;; Registers used:
 15140 ;;		wreg, status,2
 15141 ;; Tracked objects:
 15142 ;;		On entry : B1F/1E
 15143 ;;		On exit  : B1F/1
 15144 ;;		Unchanged: B00/0
 15145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15150 ;;Total ram usage:        0 bytes
 15151 ;; Hardware stack levels used: 1
 15152 ;; This function calls:
 15153 ;;		Nothing
 15154 ;; This function is called by:
 15155 ;;		_main
 15156 ;; This function uses a non-reentrant model
 15157 ;;
 15158                           
 15159                           
 15160                           ;psect for function _adc_init
 15161  1A33                     _adc_init:
 15162                           
 15163                           ;adc.c: 4:     ADCON0 = ADCON0 & ~(1<<7 | 1<<4 );
 15164                           
 15165                           ;incstack = 0
 15166                           ; Regs used in _adc_init: [wreg+status,2]
 15167  1A33  0021               	movlb	1	; select bank1
 15168  1A34  0813               	movf	19,w	;volatile
 15169  1A35  396F               	andlw	111
 15170  1A36  0093               	movwf	19	;volatile
 15171                           
 15172                           ;adc.c: 5:     ADCON0 = ADCON0 |(1<<2);
 15173  1A37  0813               	movf	19,w	;volatile
 15174  1A38  3804               	iorlw	4
 15175  1A39  0093               	movwf	19	;volatile
 15176                           
 15177                           ;adc.c: 6:     ADCON1 = ADCON1 |(1<<7);
 15178  1A3A  0814               	movf	20,w	;volatile
 15179  1A3B  3880               	iorlw	128
 15180  1A3C  0094               	movwf	20	;volatile
 15181                           
 15182                           ;adc.c: 7:     ADCON2 = ADCON2 & ~(7<<0 );
 15183  1A3D  0815               	movf	21,w	;volatile
 15184  1A3E  39F8               	andlw	248
 15185  1A3F  0095               	movwf	21	;volatile
 15186                           
 15187                           ;adc.c: 17:     ADCLK = ADCLK |(16<<0);
 15188  1A40  0818               	movf	24,w	;volatile
 15189  1A41  3810               	iorlw	16
 15190  1A42  0098               	movwf	24	;volatile
 15191                           
 15192                           ;adc.c: 19:     ADREF = ADREF & ~(1<<4 );
 15193  1A43  081A               	movf	26,w	;volatile
 15194  1A44  39EF               	andlw	239
 15195  1A45  009A               	movwf	26	;volatile
 15196                           
 15197                           ;adc.c: 20:     ADREF = ADREF & ~(3<<0 );
 15198  1A46  081A               	movf	26,w	;volatile
 15199  1A47  39FC               	andlw	252
 15200  1A48  009A               	movwf	26	;volatile
 15201                           
 15202                           ;adc.c: 23:     ADPCH = 4;
 15203  1A49  3004               	movlw	4
 15204  1A4A  009E               	movwf	30	;volatile
 15205                           
 15206                           ;adc.c: 24:     ADCAP = 0;
 15207  1A4B  019B               	clrf	27	;volatile
 15208  1A4C  0008               	return
 15209  1A4D                     __end_of_adc_init:
 15210                           
 15211                           	psect	text48
 15212  193C                     __ptext48:	
 15213 ;; *************** function _MLX90614_ReadTemp *****************
 15214 ;; Defined at:
 15215 ;;		line 33 in file "MLX90614.c"
 15216 ;; Parameters:    Size  Location     Type
 15217 ;;  Temp_Source     1    wreg     unsigned char 
 15218 ;; Auto vars:     Size  Location     Type
 15219 ;;  Temp_Source     1   11[COMMON] unsigned char 
 15220 ;; Return value:  Size  Location     Type
 15221 ;;                  2    9[COMMON] unsigned short 
 15222 ;; Registers used:
 15223 ;;		wreg, status,2, status,0, pclath, cstack
 15224 ;; Tracked objects:
 15225 ;;		On entry : 0/3
 15226 ;;		On exit  : 1F/3
 15227 ;;		Unchanged: 0/0
 15228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15229 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15230 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15232 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15233 ;;Total ram usage:        3 bytes
 15234 ;; Hardware stack levels used: 1
 15235 ;; Hardware stack levels required when called: 3
 15236 ;; This function calls:
 15237 ;;		_MLX90614_ReadReg
 15238 ;; This function is called by:
 15239 ;;		_main
 15240 ;; This function uses a non-reentrant model
 15241 ;;
 15242                           
 15243                           
 15244                           ;psect for function _MLX90614_ReadTemp
 15245  193C                     _MLX90614_ReadTemp:
 15246                           
 15247                           ;incstack = 0
 15248                           ; Regs used in _MLX90614_ReadTemp: [wreg+status,2+status,0+pclath+cstack]
 15249                           ;MLX90614_ReadTemp@Temp_Source stored from wreg
 15250  193C  00FB               	movwf	MLX90614_ReadTemp@Temp_Source
 15251                           
 15252                           ;MLX90614.c: 34:     return (MLX90614_ReadReg(Temp_Source));
 15253  193D  087B               	movf	MLX90614_ReadTemp@Temp_Source,w
 15254  193E  3190  200D         	fcall	_MLX90614_ReadReg
 15255  1940  0872               	movf	?_MLX90614_ReadReg+1,w
 15256  1941  00FA               	movwf	?_MLX90614_ReadTemp+1
 15257  1942  0871               	movf	?_MLX90614_ReadReg,w
 15258  1943  00F9               	movwf	?_MLX90614_ReadTemp
 15259  1944  0008               	return
 15260  1945                     __end_of_MLX90614_ReadTemp:
 15261                           
 15262                           	psect	text49
 15263  100D                     __ptext49:	
 15264 ;; *************** function _MLX90614_ReadReg *****************
 15265 ;; Defined at:
 15266 ;;		line 20 in file "MLX90614.c"
 15267 ;; Parameters:    Size  Location     Type
 15268 ;;  reg             1    wreg     unsigned char 
 15269 ;; Auto vars:     Size  Location     Type
 15270 ;;  reg             1    6[COMMON] unsigned char 
 15271 ;;  valReg          2    7[COMMON] unsigned short 
 15272 ;; Return value:  Size  Location     Type
 15273 ;;                  2    1[COMMON] unsigned short 
 15274 ;; Registers used:
 15275 ;;		wreg, status,2, status,0, pclath, cstack
 15276 ;; Tracked objects:
 15277 ;;		On entry : 0/1
 15278 ;;		On exit  : 1F/3
 15279 ;;		Unchanged: 0/0
 15280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15281 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15282 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15283 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15284 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15285 ;;Total ram usage:        8 bytes
 15286 ;; Hardware stack levels used: 1
 15287 ;; Hardware stack levels required when called: 2
 15288 ;; This function calls:
 15289 ;;		_I2C_read
 15290 ;;		_I2C_restart
 15291 ;;		_I2C_start
 15292 ;;		_I2C_stop
 15293 ;;		_I2C_write
 15294 ;; This function is called by:
 15295 ;;		_MLX90614_ReadTemp
 15296 ;;		_readEmissivity
 15297 ;; This function uses a non-reentrant model
 15298 ;;
 15299                           
 15300                           
 15301                           ;psect for function _MLX90614_ReadReg
 15302  100D                     _MLX90614_ReadReg:
 15303                           
 15304                           ;incstack = 0
 15305                           ; Regs used in _MLX90614_ReadReg: [wreg+status,2+status,0+pclath+cstack]
 15306                           ;MLX90614_ReadReg@reg stored from wreg
 15307  100D  00F6               	movwf	MLX90614_ReadReg@reg
 15308                           
 15309                           ;MLX90614.c: 21:     uint16_t valReg;;MLX90614.c: 22:     I2C_start();
 15310  100E  3199  211C  3190   	fcall	_I2C_start
 15311                           
 15312                           ;MLX90614.c: 23:     I2C_write(0x5A << 1);
 15313  1011  30B4               	movlw	180
 15314  1012  3199  2153  3190   	fcall	_I2C_write
 15315                           
 15316                           ;MLX90614.c: 24:     I2C_write(reg);
 15317  1015  0876               	movf	MLX90614_ReadReg@reg,w
 15318  1016  3199  2153  3190   	fcall	_I2C_write
 15319                           
 15320                           ;MLX90614.c: 25:     I2C_restart();
 15321  1019  3190  2000  3190   	fcall	_I2C_restart
 15322                           
 15323                           ;MLX90614.c: 26:     I2C_write(0x5A << 1);
 15324  101C  30B4               	movlw	180
 15325  101D  3199  2153  3190   	fcall	_I2C_write
 15326                           
 15327                           ;MLX90614.c: 27:     valReg = I2C_read(0);
 15328  1020  3000               	movlw	0
 15329  1021  3199  2163  3190   	fcall	_I2C_read
 15330  1024  00F3               	movwf	??_MLX90614_ReadReg
 15331  1025  01F4               	clrf	??_MLX90614_ReadReg+1
 15332  1026  0873               	movf	??_MLX90614_ReadReg,w
 15333  1027  00F7               	movwf	MLX90614_ReadReg@valReg
 15334  1028  0874               	movf	??_MLX90614_ReadReg+1,w
 15335  1029  00F8               	movwf	MLX90614_ReadReg@valReg+1
 15336                           
 15337                           ;MLX90614.c: 28:     valReg = (I2C_read(0) << 8) + valReg;
 15338  102A  3000               	movlw	0
 15339  102B  3199  2163  3190   	fcall	_I2C_read
 15340  102E  00F3               	movwf	??_MLX90614_ReadReg
 15341  102F  01F4               	clrf	??_MLX90614_ReadReg+1
 15342  1030  0873               	movf	??_MLX90614_ReadReg,w
 15343  1031  00F4               	movwf	??_MLX90614_ReadReg+1
 15344  1032  01F3               	clrf	??_MLX90614_ReadReg
 15345  1033  0877               	movf	MLX90614_ReadReg@valReg,w
 15346  1034  0773               	addwf	??_MLX90614_ReadReg,w
 15347  1035  00F7               	movwf	MLX90614_ReadReg@valReg
 15348  1036  0878               	movf	MLX90614_ReadReg@valReg+1,w
 15349  1037  3D74               	addwfc	??_MLX90614_ReadReg+1,w
 15350  1038  00F8               	movwf	MLX90614_ReadReg@valReg+1
 15351                           
 15352                           ;MLX90614.c: 29:     I2C_stop();
 15353  1039  3180  2004         	fcall	_I2C_stop
 15354                           
 15355                           ;MLX90614.c: 30:     return valReg;
 15356  103B  0878               	movf	MLX90614_ReadReg@valReg+1,w
 15357  103C  00F2               	movwf	?_MLX90614_ReadReg+1
 15358  103D  0877               	movf	MLX90614_ReadReg@valReg,w
 15359  103E  00F1               	movwf	?_MLX90614_ReadReg
 15360  103F  0008               	return
 15361  1040                     __end_of_MLX90614_ReadReg:
 15362                           
 15363                           	psect	text50
 15364  1953                     __ptext50:	
 15365 ;; *************** function _I2C_write *****************
 15366 ;; Defined at:
 15367 ;;		line 75 in file "I2C.c"
 15368 ;; Parameters:    Size  Location     Type
 15369 ;;  I2C_data        1    wreg     unsigned char 
 15370 ;; Auto vars:     Size  Location     Type
 15371 ;;  I2C_data        1    0[COMMON] unsigned char 
 15372 ;; Return value:  Size  Location     Type
 15373 ;;                  1    wreg      _Bool 
 15374 ;; Registers used:
 15375 ;;		wreg
 15376 ;; Tracked objects:
 15377 ;;		On entry : 1F/3
 15378 ;;		On exit  : 1F/3
 15379 ;;		Unchanged: 0/0
 15380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15382 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15384 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15385 ;;Total ram usage:        1 bytes
 15386 ;; Hardware stack levels used: 1
 15387 ;; This function calls:
 15388 ;;		Nothing
 15389 ;; This function is called by:
 15390 ;;		_MLX90614_ReadReg
 15391 ;;		_MLX90614_WriteReg
 15392 ;; This function uses a non-reentrant model
 15393 ;;
 15394                           
 15395                           
 15396                           ;psect for function _I2C_write
 15397  1953                     _I2C_write:
 15398                           
 15399                           ;incstack = 0
 15400                           ; Regs used in _I2C_write: [wreg]
 15401                           ;I2C_write@I2C_data stored from wreg
 15402  1953  00F0               	movwf	I2C_write@I2C_data
 15403                           
 15404                           ;I2C.c: 75: _Bool I2C_write(uint8_t I2C_data);I2C.c: 76: {;I2C.c: 77:     PIR3bits.SSP1I
      +                          F = 0;
 15405  1954  002E               	movlb	14	; select bank14
 15406  1955  100F               	bcf	15,0	;volatile
 15407                           
 15408                           ;I2C.c: 78:     SSP1BUF = I2C_data;
 15409  1956  0870               	movf	I2C_write@I2C_data,w
 15410  1957  0023               	movlb	3	; select bank3
 15411  1958  008C               	movwf	12	;volatile
 15412  1959                     l220:	
 15413                           ;I2C.c: 79:     while(PIR3bits.SSP1IF == 0);
 15414                           
 15415  1959  002E               	movlb	14	; select bank14
 15416  195A  1C0F               	btfss	15,0	;volatile
 15417  195B  2959               	goto	l220
 15418                           
 15419                           ;I2C.c: 80:     if(SSP1CON2bits.ACKSTAT==0)
 15420  195C  0023               	movlb	3	; select bank3
 15421  195D  1B11               	btfsc	17,6	;volatile
 15422  195E  2961               	goto	l4493
 15423                           
 15424                           ;I2C.c: 81:         return 1;
 15425  195F  3001               	movlw	1
 15426  1960  0008               	return
 15427  1961                     l4493:
 15428                           
 15429                           ;I2C.c: 83:         return 0;
 15430  1961  3000               	movlw	0
 15431  1962  0008               	return
 15432  1963                     __end_of_I2C_write:
 15433                           
 15434                           	psect	text51
 15435  0004                     __ptext51:	
 15436 ;; *************** function _I2C_stop *****************
 15437 ;; Defined at:
 15438 ;;		line 33 in file "I2C.c"
 15439 ;; Parameters:    Size  Location     Type
 15440 ;;		None
 15441 ;; Auto vars:     Size  Location     Type
 15442 ;;		None
 15443 ;; Return value:  Size  Location     Type
 15444 ;;                  1    wreg      void 
 15445 ;; Registers used:
 15446 ;;		None
 15447 ;; Tracked objects:
 15448 ;;		On entry : 1F/3
 15449 ;;		On exit  : 1F/3
 15450 ;;		Unchanged: 0/0
 15451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15456 ;;Total ram usage:        0 bytes
 15457 ;; Hardware stack levels used: 1
 15458 ;; This function calls:
 15459 ;;		Nothing
 15460 ;; This function is called by:
 15461 ;;		_MLX90614_ReadReg
 15462 ;;		_MLX90614_WriteReg
 15463 ;; This function uses a non-reentrant model
 15464 ;;
 15465                           
 15466                           
 15467                           ;psect for function _I2C_stop
 15468  0004                     _I2C_stop:
 15469                           
 15470                           ;I2C.c: 35:     SSP1CON2bits.PEN = 1;
 15471                           
 15472                           ;incstack = 0
 15473                           ; Regs used in _I2C_stop: []
 15474  0004  1511               	bsf	17,2	;volatile
 15475  0005                     l194:	
 15476                           ;I2C.c: 36:     while(SSP1CON2bits.PEN == 1);
 15477                           
 15478  0005  1D11               	btfss	17,2	;volatile
 15479  0006  0008               	return
 15480  0007  2805               	goto	l194
 15481  0008                     __end_of_I2C_stop:
 15482                           
 15483                           	psect	text52
 15484  191C                     __ptext52:	
 15485 ;; *************** function _I2C_start *****************
 15486 ;; Defined at:
 15487 ;;		line 21 in file "I2C.c"
 15488 ;; Parameters:    Size  Location     Type
 15489 ;;		None
 15490 ;; Auto vars:     Size  Location     Type
 15491 ;;		None
 15492 ;; Return value:  Size  Location     Type
 15493 ;;                  1    wreg      void 
 15494 ;; Registers used:
 15495 ;;		None
 15496 ;; Tracked objects:
 15497 ;;		On entry : 0/0
 15498 ;;		On exit  : 1F/3
 15499 ;;		Unchanged: 0/0
 15500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15505 ;;Total ram usage:        0 bytes
 15506 ;; Hardware stack levels used: 1
 15507 ;; This function calls:
 15508 ;;		Nothing
 15509 ;; This function is called by:
 15510 ;;		_MLX90614_ReadReg
 15511 ;;		_MLX90614_WriteReg
 15512 ;; This function uses a non-reentrant model
 15513 ;;
 15514                           
 15515                           
 15516                           ;psect for function _I2C_start
 15517  191C                     _I2C_start:
 15518                           
 15519                           ;I2C.c: 23:     SSP1CON2bits.SEN = 1;
 15520                           
 15521                           ;incstack = 0
 15522                           ; Regs used in _I2C_start: []
 15523  191C  0023               	movlb	3	; select bank3
 15524  191D  1411               	bsf	17,0	;volatile
 15525  191E                     l182:	
 15526                           ;I2C.c: 24:     while(SSP1CON2bits.SEN == 1);
 15527                           
 15528  191E  1C11               	btfss	17,0	;volatile
 15529  191F  0008               	return
 15530  1920  291E               	goto	l182
 15531  1921                     __end_of_I2C_start:
 15532                           
 15533                           	psect	text53
 15534  1000                     __ptext53:	
 15535 ;; *************** function _I2C_restart *****************
 15536 ;; Defined at:
 15537 ;;		line 27 in file "I2C.c"
 15538 ;; Parameters:    Size  Location     Type
 15539 ;;		None
 15540 ;; Auto vars:     Size  Location     Type
 15541 ;;		None
 15542 ;; Return value:  Size  Location     Type
 15543 ;;                  1    wreg      void 
 15544 ;; Registers used:
 15545 ;;		None
 15546 ;; Tracked objects:
 15547 ;;		On entry : 1F/3
 15548 ;;		On exit  : 1F/3
 15549 ;;		Unchanged: 0/0
 15550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15555 ;;Total ram usage:        0 bytes
 15556 ;; Hardware stack levels used: 1
 15557 ;; This function calls:
 15558 ;;		Nothing
 15559 ;; This function is called by:
 15560 ;;		_MLX90614_ReadReg
 15561 ;;		_MLX90614_WriteReg
 15562 ;; This function uses a non-reentrant model
 15563 ;;
 15564                           
 15565                           
 15566                           ;psect for function _I2C_restart
 15567  1000                     _I2C_restart:
 15568                           
 15569                           ;I2C.c: 29:     SSP1CON2bits.RSEN = 1;
 15570                           
 15571                           ;incstack = 0
 15572                           ; Regs used in _I2C_restart: []
 15573  1000  1491               	bsf	17,1	;volatile
 15574  1001                     l188:	
 15575                           ;I2C.c: 30:     while(SSP1CON2bits.RSEN == 1);
 15576                           
 15577  1001  1C91               	btfss	17,1	;volatile
 15578  1002  0008               	return
 15579  1003  2801               	goto	l188
 15580  1004                     __end_of_I2C_restart:
 15581                           
 15582                           	psect	text54
 15583  1963                     __ptext54:	
 15584 ;; *************** function _I2C_read *****************
 15585 ;; Defined at:
 15586 ;;		line 46 in file "I2C.c"
 15587 ;; Parameters:    Size  Location     Type
 15588 ;;  ack             1    wreg     _Bool 
 15589 ;; Auto vars:     Size  Location     Type
 15590 ;;  ack             1    0[COMMON] _Bool 
 15591 ;; Return value:  Size  Location     Type
 15592 ;;                  1    wreg      unsigned char 
 15593 ;; Registers used:
 15594 ;;		wreg, status,2, status,0, pclath, cstack
 15595 ;; Tracked objects:
 15596 ;;		On entry : 1F/3
 15597 ;;		On exit  : 1F/3
 15598 ;;		Unchanged: 0/0
 15599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15601 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15603 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15604 ;;Total ram usage:        1 bytes
 15605 ;; Hardware stack levels used: 1
 15606 ;; Hardware stack levels required when called: 1
 15607 ;; This function calls:
 15608 ;;		_I2C_ack
 15609 ;;		_I2C_nack
 15610 ;; This function is called by:
 15611 ;;		_MLX90614_ReadReg
 15612 ;; This function uses a non-reentrant model
 15613 ;;
 15614                           
 15615                           
 15616                           ;psect for function _I2C_read
 15617  1963                     _I2C_read:
 15618                           
 15619                           ;incstack = 0
 15620                           ; Regs used in _I2C_read: [wreg+status,2+status,0+pclath+cstack]
 15621                           ;I2C_read@ack stored from wreg
 15622  1963  00F0               	movwf	I2C_read@ack
 15623                           
 15624                           ;I2C.c: 46: uint8_t I2C_read(_Bool ack);I2C.c: 47: {;I2C.c: 48:     PIR3bits.SSP1IF = 0;
 15625  1964  002E               	movlb	14	; select bank14
 15626  1965  100F               	bcf	15,0	;volatile
 15627                           
 15628                           ;I2C.c: 49:     SSP1CON2bits.RCEN = 1;
 15629  1966  0023               	movlb	3	; select bank3
 15630  1967  1591               	bsf	17,3	;volatile
 15631  1968                     l200:	
 15632                           ;I2C.c: 50:     while(PIR3bits.SSP1IF == 0);
 15633                           
 15634  1968  002E               	movlb	14	; select bank14
 15635  1969  1C0F               	btfss	15,0	;volatile
 15636  196A  2968               	goto	l200
 15637                           
 15638                           ;I2C.c: 51:     if(ack){
 15639  196B  0870               	movf	I2C_read@ack,w
 15640  196C  1903               	btfsc	3,2
 15641  196D  2972               	goto	l4505
 15642                           
 15643                           ;I2C.c: 52:         I2C_ack();
 15644  196E  3199  212C  3199   	fcall	_I2C_ack
 15645                           
 15646                           ;I2C.c: 53:     }else{
 15647  1971  2974               	goto	l4507
 15648  1972                     l4505:
 15649                           
 15650                           ;I2C.c: 54:         I2C_nack();
 15651  1972  3199  2134         	fcall	_I2C_nack
 15652  1974                     l4507:
 15653                           
 15654                           ;I2C.c: 56:     return SSP1BUF;
 15655  1974  0023               	movlb	3	; select bank3
 15656  1975  080C               	movf	12,w	;volatile
 15657  1976  0008               	return
 15658  1977                     __end_of_I2C_read:
 15659                           
 15660                           	psect	text55
 15661  1934                     __ptext55:	
 15662 ;; *************** function _I2C_nack *****************
 15663 ;; Defined at:
 15664 ;;		line 67 in file "I2C.c"
 15665 ;; Parameters:    Size  Location     Type
 15666 ;;		None
 15667 ;; Auto vars:     Size  Location     Type
 15668 ;;		None
 15669 ;; Return value:  Size  Location     Type
 15670 ;;                  1    wreg      void 
 15671 ;; Registers used:
 15672 ;;		None
 15673 ;; Tracked objects:
 15674 ;;		On entry : 1F/E
 15675 ;;		On exit  : 1F/E
 15676 ;;		Unchanged: 0/0
 15677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15682 ;;Total ram usage:        0 bytes
 15683 ;; Hardware stack levels used: 1
 15684 ;; This function calls:
 15685 ;;		Nothing
 15686 ;; This function is called by:
 15687 ;;		_I2C_read
 15688 ;; This function uses a non-reentrant model
 15689 ;;
 15690                           
 15691                           
 15692                           ;psect for function _I2C_nack
 15693  1934                     _I2C_nack:
 15694                           
 15695                           ;I2C.c: 69:     PIR3bits.SSP1IF = 0;
 15696                           
 15697                           ;incstack = 0
 15698                           ; Regs used in _I2C_nack: []
 15699  1934  100F               	bcf	15,0	;volatile
 15700                           
 15701                           ;I2C.c: 70:     SSP1CON2bits.ACKDT = 1;
 15702  1935  0023               	movlb	3	; select bank3
 15703  1936  1691               	bsf	17,5	;volatile
 15704                           
 15705                           ;I2C.c: 71:     SSP1CON2bits.ACKEN = 1;
 15706  1937  1611               	bsf	17,4	;volatile
 15707  1938                     l214:	
 15708                           ;I2C.c: 72:     while(PIR3bits.SSP1IF == 0);
 15709                           
 15710  1938  002E               	movlb	14	; select bank14
 15711  1939  180F               	btfsc	15,0	;volatile
 15712  193A  0008               	return
 15713  193B  2938               	goto	l214
 15714  193C                     __end_of_I2C_nack:
 15715                           
 15716                           	psect	text56
 15717  192C                     __ptext56:	
 15718 ;; *************** function _I2C_ack *****************
 15719 ;; Defined at:
 15720 ;;		line 59 in file "I2C.c"
 15721 ;; Parameters:    Size  Location     Type
 15722 ;;		None
 15723 ;; Auto vars:     Size  Location     Type
 15724 ;;		None
 15725 ;; Return value:  Size  Location     Type
 15726 ;;                  1    wreg      void 
 15727 ;; Registers used:
 15728 ;;		None
 15729 ;; Tracked objects:
 15730 ;;		On entry : 1F/E
 15731 ;;		On exit  : 1F/E
 15732 ;;		Unchanged: 0/0
 15733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15738 ;;Total ram usage:        0 bytes
 15739 ;; Hardware stack levels used: 1
 15740 ;; This function calls:
 15741 ;;		Nothing
 15742 ;; This function is called by:
 15743 ;;		_I2C_read
 15744 ;; This function uses a non-reentrant model
 15745 ;;
 15746                           
 15747                           
 15748                           ;psect for function _I2C_ack
 15749  192C                     _I2C_ack:
 15750                           
 15751                           ;I2C.c: 61:     PIR3bits.SSP1IF = 0;
 15752                           
 15753                           ;incstack = 0
 15754                           ; Regs used in _I2C_ack: []
 15755  192C  100F               	bcf	15,0	;volatile
 15756                           
 15757                           ;I2C.c: 62:     SSP1CON2bits.ACKDT = 0;
 15758  192D  0023               	movlb	3	; select bank3
 15759  192E  1291               	bcf	17,5	;volatile
 15760                           
 15761                           ;I2C.c: 63:     SSP1CON2bits.ACKEN = 1;
 15762  192F  1611               	bsf	17,4	;volatile
 15763  1930                     l208:	
 15764                           ;I2C.c: 64:     while(PIR3bits.SSP1IF == 0);
 15765                           
 15766  1930  002E               	movlb	14	; select bank14
 15767  1931  180F               	btfsc	15,0	;volatile
 15768  1932  0008               	return
 15769  1933  2930               	goto	l208
 15770  1934                     __end_of_I2C_ack:
 15771                           
 15772                           	psect	text57
 15773  1A19                     __ptext57:	
 15774 ;; *************** function _I2C_init *****************
 15775 ;; Defined at:
 15776 ;;		line 4 in file "I2C.c"
 15777 ;; Parameters:    Size  Location     Type
 15778 ;;		None
 15779 ;; Auto vars:     Size  Location     Type
 15780 ;;		None
 15781 ;; Return value:  Size  Location     Type
 15782 ;;                  1    wreg      void 
 15783 ;; Registers used:
 15784 ;;		wreg, status,2
 15785 ;; Tracked objects:
 15786 ;;		On entry : B1F/1
 15787 ;;		On exit  : B1F/3
 15788 ;;		Unchanged: B00/0
 15789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15794 ;;Total ram usage:        0 bytes
 15795 ;; Hardware stack levels used: 1
 15796 ;; This function calls:
 15797 ;;		Nothing
 15798 ;; This function is called by:
 15799 ;;		_main
 15800 ;; This function uses a non-reentrant model
 15801 ;;
 15802                           
 15803                           
 15804                           ;psect for function _I2C_init
 15805  1A19                     _I2C_init:
 15806                           
 15807                           ;I2C.c: 6:     TRISCbits.TRISC3 = 1;
 15808                           
 15809                           ;incstack = 0
 15810                           ; Regs used in _I2C_init: [wreg+status,2]
 15811  1A19  0020               	movlb	0	; select bank0
 15812  1A1A  1593               	bsf	19,3	;volatile
 15813                           
 15814                           ;I2C.c: 7:     TRISCbits.TRISC4 = 1;
 15815  1A1B  1613               	bsf	19,4	;volatile
 15816                           
 15817                           ;I2C.c: 8:     ANSELCbits.ANSC3 = 0;
 15818  1A1C  003E               	movlb	30	; select bank30
 15819  1A1D  11CE               	bcf	78,3	;volatile
 15820                           
 15821                           ;I2C.c: 9:     ANSELCbits.ANSC4 = 0;
 15822  1A1E  124E               	bcf	78,4	;volatile
 15823                           
 15824                           ;I2C.c: 10:     SSP1CLKPPS = 0x14;
 15825  1A1F  3014               	movlw	20
 15826  1A20  003D               	movlb	29	; select bank29
 15827  1A21  00C5               	movwf	69	;volatile
 15828                           
 15829                           ;I2C.c: 11:     RC3PPS = 0x15;
 15830  1A22  3015               	movlw	21
 15831  1A23  003E               	movlb	30	; select bank30
 15832  1A24  00A3               	movwf	35	;volatile
 15833                           
 15834                           ;I2C.c: 12:     RC4PPS = 0x14;
 15835  1A25  3014               	movlw	20
 15836  1A26  00A4               	movwf	36	;volatile
 15837                           
 15838                           ;I2C.c: 13:     SSP1DATPPS = 0x13;
 15839  1A27  3013               	movlw	19
 15840  1A28  003D               	movlb	29	; select bank29
 15841  1A29  00C6               	movwf	70	;volatile
 15842                           
 15843                           ;I2C.c: 15:     SSP1STAT = 0b10000000;
 15844  1A2A  3080               	movlw	128
 15845  1A2B  0023               	movlb	3	; select bank3
 15846  1A2C  008F               	movwf	15	;volatile
 15847                           
 15848                           ;I2C.c: 16:  SSP1CON1 = 0b00101000;
 15849  1A2D  3028               	movlw	40
 15850  1A2E  0090               	movwf	16	;volatile
 15851                           
 15852                           ;I2C.c: 17:  SSP1CON3 = 0x00;
 15853  1A2F  0192               	clrf	18	;volatile
 15854                           
 15855                           ;I2C.c: 18:  SSP1ADD = ((32000000UL/(4UL*100000UL))-1);
 15856  1A30  304F               	movlw	79
 15857  1A31  008D               	movwf	13	;volatile
 15858  1A32  0008               	return
 15859  1A33                     __end_of_I2C_init:
 15860  007E                     btemp	set	126	;btemp
 15861  007E                     wtemp0	set	126
 15862                           
 15863                           	psect	idloc
 15864                           
 15865                           ;Config register IDLOC0 @ 0x8000
 15866                           ;	unspecified, using default values
 15867  8000                     	org	32768
 15868  8000  3FFF               	dw	16383
 15869                           
 15870                           ;Config register IDLOC1 @ 0x8001
 15871                           ;	unspecified, using default values
 15872  8001                     	org	32769
 15873  8001  3FFF               	dw	16383
 15874                           
 15875                           ;Config register IDLOC2 @ 0x8002
 15876                           ;	unspecified, using default values
 15877  8002                     	org	32770
 15878  8002  3FFF               	dw	16383
 15879                           
 15880                           ;Config register IDLOC3 @ 0x8003
 15881                           ;	unspecified, using default values
 15882  8003                     	org	32771
 15883  8003  3FFF               	dw	16383
 15884                           
 15885                           	psect	config
 15886                           
 15887                           ;Config register CONFIG1 @ 0x8007
 15888                           ;	External Oscillator mode selection bits
 15889                           ;	FEXTOSC = OFF, Oscillator not enabled
 15890                           ;	Power-up default value for COSC bits
 15891                           ;	RSTOSC = HFINT32, HFINTOSC with OSCFRQ= 32 MHz and CDIV = 1:1
 15892                           ;	Clock Out Enable bit
 15893                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 15894                           ;	Clock Switch Enable bit
 15895                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 15896                           ;	Fail-Safe Clock Monitor Enable bit
 15897                           ;	FCMEN = ON, FSCM timer enabled
 15898  8007                     	org	32775
 15899  8007  3F8C               	dw	16268
 15900                           
 15901                           ;Config register CONFIG2 @ 0x8008
 15902                           ;	Master Clear Enable bit
 15903                           ;	MCLRE = ON, MCLR pin is Master Clear function
 15904                           ;	Power-up Timer Enable bit
 15905                           ;	PWRTE = OFF, PWRT disabled
 15906                           ;	Low-Power BOR enable bit
 15907                           ;	LPBOREN = OFF, ULPBOR disabled
 15908                           ;	Brown-out reset enable bits
 15909                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 15910                           ;	Brown-out Reset Voltage Selection
 15911                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 15912                           ;	Zero-cross detect disable
 15913                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 15914                           ;	Peripheral Pin Select one-way control
 15915                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 15916                           ;	Stack Overflow/Underflow Reset Enable bit
 15917                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 15918                           ;	Background Debugger
 15919                           ;	DEBUG = 0x1, unprogrammed default
 15920  8008                     	org	32776
 15921  8008  3FFF               	dw	16383
 15922                           
 15923                           ;Config register CONFIG3 @ 0x8009
 15924                           ;	WDT Period Select bits
 15925                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 15926                           ;	WDT operating mode
 15927                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 15928                           ;	WDT Window Select bits
 15929                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 15930                           ;	WDT input clock selector
 15931                           ;	WDTCCS = SC, Software Control
 15932  8009                     	org	32777
 15933  8009  3F9F               	dw	16287
 15934                           
 15935                           ;Config register CONFIG4 @ 0x800A
 15936                           ;	UserNVM self-write protection bits
 15937                           ;	WRT = OFF, Write protection off
 15938                           ;	Scanner Enable bit
 15939                           ;	SCANE = available, Scanner module is available for use
 15940                           ;	Low Voltage Programming Enable bit
 15941                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 15942  800A                     	org	32778
 15943  800A  3FFF               	dw	16383
 15944                           
 15945                           ;Config register CONFIG5 @ 0x800B
 15946                           ;	UserNVM Program memory code protection bit
 15947                           ;	CP = OFF, Program Memory code protection disabled
 15948                           ;	DataNVM code protection bit
 15949                           ;	CPD = OFF, Data EEPROM code protection disabled
 15950  800B                     	org	32779
 15951  800B  3FFF               	dw	16383

Data Sizes:
    Strings     108
    Constant    0
    Data        0
    BSS         98
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     76      80
    BANK2            80     47      61
    BANK3            80      0      80
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK2[3]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK2[3]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S813_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_4(CODE[29]), STR_3(CODE[23]), STR_2(CODE[21]), STR_1(CODE[16]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_4(CODE[29]), STR_3(CODE[23]), STR_2(CODE[21]), STR_1(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 29
		 -> STR_4(CODE[29]), STR_3(CODE[23]), STR_2(CODE[21]), STR_1(CODE[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    xtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_4(CODE[29]), STR_3(CODE[23]), STR_2(CODE[21]), STR_1(CODE[16]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK2[2]), 


Critical Paths under _main in COMMON

    _main->___fltol
    _writeEmissivity->___fltol
    _MLX90614_WriteReg->_I2C_write
    _serial_init->___lldiv
    _readEmissivity->___fldiv
    ___xxtofl->_MLX90614_ReadTemp
    _vfpfcnvrt->_tolower
    _xtoa->_toupper
    _toupper->_islower
    _efgtoa->___fltol
    _efgtoa->_tolower
    _tolower->_isupper
    _floorf->___fldiv
    ___fltol->_MLX90614_ReadTemp
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_uart_tx
    _abs->___aomod
    _atoi->___wmul
    _atoi->_isdigit
    _MLX90614_ReadTemp->_MLX90614_ReadReg
    _MLX90614_ReadReg->_I2C_read
    _MLX90614_ReadReg->_I2C_write

Critical Paths under _main in BANK0

    _main->_printf
    _writeEmissivity->___fltol
    _readEmissivity->___xxtofl
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _xtoa->_pad
    _efgtoa->___flsub
    _floorf->___fldiv
    ___fltol->___flmul
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _main in BANK1

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK2

    _main->_printf
    _vfprintf->_vfpfcnvrt

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0   56351
                                             72 BANK1      4     4      0
                                             41 BANK2      6     6      0
                           _I2C_init
                  _MLX90614_ReadTemp
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _adc_init
                          _port_init
                             _printf
                     _readEmissivity
                        _serial_init
                    _writeEmissivity
 ---------------------------------------------------------------------------------
 (1) _writeEmissivity                                      7     3      4    4681
                                             49 BANK0      7     3      4
                  _MLX90614_WriteReg
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) _MLX90614_WriteReg                                    3     1      2     241
                                              1 COMMON     3     1      2
                        _I2C_restart
                          _I2C_start
                           _I2C_stop
                          _I2C_write
 ---------------------------------------------------------------------------------
 (1) _serial_init                                         10     6      4     458
                                              0 BANK0     10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _readEmissivity                                      12     8      4    2794
                                             14 BANK0     12     8      4
                   _MLX90614_ReadReg
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     626
                                              0 BANK0     14    10      4
                   _MLX90614_ReadReg (ARG)
                  _MLX90614_ReadTemp (ARG)
 ---------------------------------------------------------------------------------
 (1) _printf                                              14     4     10   40587
                                             79 BANK0      1     1      0
                                             71 BANK1      1     1      0
                                             31 BANK2     10     0     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3   40230
                                             63 BANK1      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           47    45      2   39867
                                             77 BANK0      2     0      2
                                             57 BANK1      6     6      0
                                              0 BANK2     31    31      0
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                38    29      9    5226
                                             15 BANK0     38    29      9
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     412
                                              6 COMMON     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              8     6      2     161
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     5      4     410
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              66    61      5   23564
                                             68 BANK0      9     4      5
                                              0 BANK1     57    57      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2    1020
                                              6 COMMON     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     541
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     6      2     641
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             13 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       16    12      4     287
                                              0 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     533
                                             12 COMMON     2     2      0
                                             40 BANK0      9     5      4
                  _MLX90614_ReadTemp (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2941
                                             60 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    2592
                                             40 BANK0     20    12      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    3786
                                             14 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     942
                                             40 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    2033
                                              0 COMMON    13     5      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4941
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3318
                                             12 COMMON     1     1      0
                                              7 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1127
                                             11 COMMON     1     0      1
                                              0 BANK0      7     7      0
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3     812
                                              3 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      44
                                              2 COMMON     1     1      0
                            _uart_tx
 ---------------------------------------------------------------------------------
 (9) _uart_tx                                              2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1363
                                              6 COMMON     6     4      2
                                              0 BANK0      9     9      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     207
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     313
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     370
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _port_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MLX90614_ReadTemp                                    3     1      2     134
                                              9 COMMON     3     1      2
                   _MLX90614_ReadReg
 ---------------------------------------------------------------------------------
 (2) _MLX90614_ReadReg                                     8     6      2     112
                                              1 COMMON     8     6      2
                           _I2C_read
                        _I2C_restart
                          _I2C_start
                           _I2C_stop
                          _I2C_write
 ---------------------------------------------------------------------------------
 (3) _I2C_write                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_restart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_read                                             1     1      0      22
                                              0 COMMON     1     1      0
                            _I2C_ack
                           _I2C_nack
 ---------------------------------------------------------------------------------
 (4) _I2C_nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_init
   _MLX90614_ReadTemp
     _MLX90614_ReadReg
       _I2C_read
         _I2C_ack
         _I2C_nack
       _I2C_restart
       _I2C_start
       _I2C_stop
       _I2C_write
   ___fladd
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
         _MLX90614_ReadReg (ARG)
         _MLX90614_ReadTemp (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___fltol
     _MLX90614_ReadTemp (ARG)
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _adc_init
   _port_init
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _uart_tx
             _fputs
               _fputc
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower
         _xtoa
           _isalpha
           _isupper
           _pad
           _toupper
             _islower
   _readEmissivity
     _MLX90614_ReadReg
     ___fldiv
     ___xxtofl
   _serial_init
     ___lldiv
   _writeEmissivity
     _MLX90614_WriteReg
       _I2C_restart
       _I2C_start
       _I2C_stop
       _I2C_write
     ___flmul
     ___fltol

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4C      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     2F      3D       9       76.2%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      50      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     13B      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     13B      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Jul 23 00:43:48 2022

                ___fldiv@aexp 002C                  ___fldiv@bexp 002B                  ___fldiv@sign 0024  
                ___awdiv@sign 0076           ___wmul@multiplicand 0072            __size_of_I2C_start 0005  
         __Umul8_16@word_mpld 0076            __size_of_I2C_write 0010                           l200 1968  
                         l220 1959                           l214 1938                           l208 1930  
                         l182 191E                           l407 1A55                           l520 127B  
                         l194 0005                           l507 011E                           l188 1001  
                         l712 091C                           l608 1E5C                           l714 08FF  
                         l708 0889                           l750 0A16                           l742 09FE  
                         l823 1AEC                           l920 1D08                           l576 1C56  
                         l816 0C29                           l921 1D14                           l577 1C70  
                         l585 1F0A                           l729 099F                           l930 12F5  
                         l931 1309                           l764 16CF                           l588 1F58  
                         l917 1CE8                           l925 12D3                           l861 1FD2  
                         l934 139D                           l926 12DA                           l862 1FDC  
                         l854 1FBE                           l848 1F88                           l785 17D6  
                         l786 17EE                           l788 17FB                           l981 034E  
                         l982 033B                           l992 0388                           _abs 19A4  
                         _pad 1CD0               __end_of_I2C_ack 1934                  ___awmod@sign 0076  
                         wreg 0009                  ___flmul@aexp 003C                  ___flmul@bexp 0041  
                ___flmul@sign 003B                  ___flmul@temp 0046                  ___flmul@prod 0042  
                ___fltol@exp1 007D                          l1012 05AD                          l1007 0599  
                        ?_abs 0073                          l1044 1539                          l1048 1554  
                        l1154 10A7                          l1069 1656            serial_init@baudios 0020  
                        l4001 12ED                          l3121 0859                          l1177 11A8  
                        l4011 1336                          l3123 0861                          l4021 1311  
                        l3301 1AE6                          l3141 087E                          l3117 0856  
                        l4007 1304                          l3215 093C                          l3207 092A  
                        l3151 0893                          l4033 13B1                          l3217 093E  
                        l3225 094D                          l3145 0881                          l4121 026C  
                        l4105 0228                          l4113 024B                          l3083 1946  
                        l3323 19EE                          l4043 13C9                          l3251 09BE  
                        l3243 09B1                          l3235 0997                          l4203 04F9  
                        l4131 02F3                          l3413 124E                          l3317 1B5F  
                        l3325 19FA                          l4029 13A9                          l3181 08CF  
                        l4221 05B4                          l4125 029A                          l4133 0318  
                        l3407 120F                          l3415 125A                          l3095 0011  
                        l4039 13BC                          l3191 0909                          l4311 0762  
                        l4151 0355                          l4143 0348                          l4127 02D2  
                        l3361 008E                          l3409 121E                          l3433 1D34  
                        l3601 16A3                          l3265 09D0                          l3257 09C5  
                        l4233 060C                          l4145 0350                          l4065 0189  
                        l4057 0178                          l3339 1A4F                          l3363 0092  
                        l3099 0034                          l3451 1D5A                          l3443 1D3C  
                        l3427 1D29                          l3603 16AB                          l3523 1F3E  
                        l3291 0A12                          l3259 09C7                          l4219 05AB  
                        l3373 00A9                          l3357 0067                          l3445 1D48  
                        l3621 16C7                          l3509 1C82                          l3269 09D2  
                        l3189 0907                          l4309 0728                          l4253 062A  
                        l4261 065E                          l4181 03B1                          l4069 018F  
                        l4077 01A2                          l4431 1075                          l4423 1060  
                        l4415 1044                          l3383 00F1                          l3375 00B8  
                        l3455 1D63                          l3471 1BBC                          l3703 17BE  
                        l3631 16EE                          l3519 1F24                          l3287 0A0E  
                        l3199 0917                          l3543 1E1C                          l4335 07B4  
                        l4319 077A                          l4343 07D3                          l4255 0648  
                        l4191 03C3                          l4167 0395                          l4159 0382  
                        l4087 01D3                          l4095 01F6                          l4407 1674  
                        l4505 1972                          l4433 1089                          l3385 00FD  
                        l3617 16C4                          l4281 0703                          l4273 06EC  
                        l4193 0488                          l4177 03A9                          l4169 0399  
                        l4353 154C                          l4507 1974                          l3395 11DB  
                        l3459 1D6B                          l3483 1BC9                          l3475 1BC3  
                        l3563 1E4A                          l3547 1E25                          l4363 157C  
                        l4437 10AB                          l4429 1070                          l3485 1BD5  
                        l3493 1BEA                          l3717 17F7                          l3637 16FA  
                        l3821 0BA8                          l3741 0A41                          l3573 1E69  
                        l3565 1E58                          l3901 1EC8                          l4269 06CE  
                        l4197 04DA                          l4621 0F43                          l4533 0C8F  
                        ?_pad 0027                          l4447 10DA                          l3399 1202  
                        l3663 175A                          l3831 0BC1                          l4471 1D86  
                        l4383 15E3                          l4367 1596                          l4391 1625  
                        l4359 1564                          l4631 0FA1                          l4535 0CA0  
                        l4543 0CD4                          l4703 1DFF                          l3497 1BF2  
                        l3489 1BE1                          l3681 1765                          l3657 1741  
                        l3665 1723                          l3841 0BEA                          l3737 0A37  
                        l3913 1B04                          l4297 0724                          l4641 0FCD  
                        l4609 0EE5                          l4617 0F21                          l4537 0CA9  
                        l3683 177C                          l3667 175F                          l3851 0C16  
                        l3827 0BBF                          l3819 0B91                          l3755 0A5A  
                        l3739 0A39                          l3907 1EEB                          l4299 072C  
                        l4555 0D18                          l4723 1F97                          l4707 1E0A  
                        l4493 1961                          l3693 1795                          l3597 16A0  
                        l3845 0BFF                          l3757 0A5C                          l4477 1DB2  
                        l4469 1DAB                          l4637 0FC7                          l4557 0D29  
                        l4565 0D5D                          l4717 1F80                          l3871 1CE6  
                        l3767 0A72                          l3759 0A64                          l3943 1164  
                        l4575 0DC0                          l4559 0D32                          l4647 0FD9  
                        l4751 1FF7                          l4727 1F9B                          l3689 1793  
                        l3945 1175                          l4761 1B89                          l4737 1FD0  
                        l4729 1FAB                          l3867 1CDE                          l4587 0E31  
                        l4579 0DE2                          l4763 1BA9                          l4739 1FC3  
                        l3981 1A7C                          l3877 1CEA                          l3949 118B  
                        l4693 1DD1                          l4599 0E82                          l4695 1DDF  
                        l4839 13FC                          l3897 1EC3                          l4879 1081  
                        STR_1 1849                          STR_2 1834                          STR_3 181D  
                        STR_4 1800                          STR_5 1859                          STR_6 1861  
                        STR_9 185D                          _LATA 0016                          _LATB 0017  
                        u4210 19CA                          u4220 19CB                          u5005 173B  
                        u4230 19E1                          u5015 174F                          u4240 19E2  
                        u4330 0099                          u6020 01C1                          u5045 1768  
                        u6030 01C2                          u5135 17AC                          u4175 1AED  
                        u4095 09E9                          u4265 1A56                          u5145 17C7  
                        u5065 1771                          u4275 1A5B                          u5155 17E0  
                        u5315 0B9D                          u6060 0216                          u4365 00DE  
                        u3725 0032                          u5405 0C09                          u3830 08EE  
                        u6070 0217                          u4535 1D3F                          u5255 0AE5  
                        u3840 08EF                          u7040 0EC4                          u4465 123C  
                        u5265 0B12                          u3825 08E3                          u6145 0346  
                        u5530 1EE3                          u7050 0EC5                          u3675 194A  
                        u4555 1D49                          u4635 1BCC                          u4715 1C7E  
                        u5275 0B64                          u7115 1DD4                          u5540 1EE4  
                        u5620 112E                          u5700 1AB6                          u5445 1CF4  
                        u4565 1D53                          u5285 0B80                          u5525 1ED5  
                        u5605 111B                          u6405 06EA                          u7205 1FA4  
                        u5710 1AB7                          u4575 1D5B                          u4655 1BDB  
                        u5295 0B94                          u6255 03D1                          u6175 0364  
                        u7135 1DE0                          u5560 1B29                          u5720 1B4A  
                        u5465 19AD                          u4665 1BE2                          u5385 0BD8  
                        u3953 095F                          u3945 0942                          u4825 1E4B  
                        u5625 112A                          u6185 037E                          u7225 1FB8  
                        u7145 1DF4                          u5810 12A9                          u5570 1B2A  
                        u5730 1B4B                          u5395 0BF3                          u3875 090D  
                        u5475 1E99                          u7155 1E00                          _PIR3 070F  
                        u5820 12AA                          u5645 1153                          u6525 1544  
                        u7245 1FCA                          u7325 1CA8                          u5750 199C  
                        u6710 10BF                          u6550 15AD                          u4855 1E60  
                        u5495 1EB2                          u6615 1609                          u5760 199D  
                        u6720 10C0                          u6480 07A4                          u6560 15AE  
                        u5665 117E                          u6465 076D                          u6625 162F  
                        u6545 1590                          u7337 1528                          u6490 07A5  
                        u5915 1325                          u3995 09B2                          u4795 1E2E  
                        u5595 1100                          u6395 06DC                          u7347 1C24  
                        u6580 15CD                          u6900 0CC6                          u5925 1331  
                        u5685 1194                          u6645 1645                          u7285 1FE4  
                        u7357 1C36                          u6590 15CE                          u6910 0CC7  
                        u4975 172B                          u6655 1651                          u5865 12E5  
                        u4985 1732                          u6950 0D4F                          u5895 13A7  
                        u6960 0D50                          abs@a 0073                          _dbuf 01A0  
                        _atoi 1040                          _main 13DB                          _dtoa 128D  
                        _prec 00EC                          _nout 0157                          pad@i 002A  
                        pad@p 0028                          fsr0h 0005                          fsr1h 0007  
                        indf0 0000                          fsr0l 0004                          indf1 0001  
                        fsr1l 0006                          pad@w 002C                          btemp 007E  
                        _xtoa 1530                 ___fpclassifyf 1E78              __end_of_I2C_nack 193C  
            __end_of_I2C_init 1A33              __end_of_I2C_read 1977                          start 0002  
           ?_MLX90614_ReadReg 0071              __end_of_I2C_stop 0008               ___fldiv@new_exp 0025  
                _tolower$1131 007C            ??_MLX90614_ReadReg 0073          __size_of_I2C_restart 0004  
                       ??_abs 0075                         ??_pad 007C                 ___fltol@sign1 007C  
             __end_of___aodiv 0130                         _ADCAP 009B                         ?_atoi 0076  
             __end_of___fladd 0A1E                         ?_main 0070                         ?_dtoa 0030  
                       _ADCLK 0098               __end_of___aomod 128D                         _ADPCH 009E  
             __end_of___fldiv 1800                         _ADREF 009A               __end_of___awdiv 1D70  
             __end_of___flneg 100D                         STR_10 1865                         STR_13 1869  
                       STR_15 1869               __end_of___awmod 1BF7               __end_of___flmul 0C36  
             __end_of___flsub 1AA1               __end_of___fltol 1E78               __end_of___lldiv 1E13  
             ___awdiv@divisor 0070                         ?_xtoa 002F               ___awdiv@counter 0075  
                vfpfcnvrt@fmt 006D                  vfpfcnvrt@llu 0128                         _PORTA 000C  
                       _PORTB 000D                         _TRISA 0011                         _TRISB 0012  
                       _TRISC 0013                         _RXPPS 0ECB                         _flags 00EE  
                       _fputc 0008               __end_of_isalpha 1ABE                         _fputs 1B5C  
             __end_of_isdigit 19A4                         atoi@n 0027                         pad@fp 002E  
                       atoi@s 0076                         _width 0159                         _putch 1921  
                       dtoa@d 0030                         dtoa@i 004C                         dtoa@n 0044  
                       dtoa@p 003D                         dtoa@s 0042                         dtoa@w 0040  
             __end_of_islower 19E9               __end_of_isspace 1A84             _MLX90614_ReadTemp 193C  
             __end_of_isupper 19D2               __end_of_uart_tx 1953                         status 0003  
           __end_of_I2C_start 1921            ?_MLX90614_ReadTemp 0079                         wtemp0 007E  
              ?___fpclassifyf 0070               __end_of_tolower 1B3B                         xtoa@c 0053  
                       xtoa@d 002F                         xtoa@i 0051                         xtoa@n 0049  
                       xtoa@p 0044                         xtoa@w 0047                         xtoa@x 0037  
           __end_of_I2C_write 1963               __end_of_strncmp 1DC1               __end_of_toupper 1B5C  
                _toupper$1146 007C               __initialization 07E9             I2C_write@I2C_data 0070  
         ??_MLX90614_ReadTemp 007B                  __end_of_atoi 10DF                  __end_of_main 1530  
                __end_of_dtoa 13DB             ??_writeEmissivity 0055                  __end_of_xtoa 1686  
           _MLX90614_WriteReg 1ABE                     ??_I2C_ack 0070                        ??_atoi 0078  
                      ??_main 00E8                        ??_dtoa 0038            ?_MLX90614_WriteReg 0071  
                      ??_xtoa 0038           ??_MLX90614_WriteReg 0073     __end_of_MLX90614_ReadTemp 1945  
                      _ADCON0 0093                        _ADCON1 0094                        _ADCON2 0095  
                      ?_fputc 0073                        ?_fputs 007B           MLX90614_ReadReg@reg 0076  
           readEmissivity@reg 0036              ___awdiv@dividend 0072                        _ANSELA 0F38  
                      ?_putch 0070                        _ANSELB 0F43                        _ANSELC 0F4E  
                      _RC0PPS 0F20              __end_of_adc_init 1A4D                        _RC1STA 011D  
                      _RC3PPS 0F23                        _RC4PPS 0F24                        u430lld 0065  
                      _TX1REG 011A                        u441lld 11D9                        _TX1STA 011E  
            __end_of___xxtofl 2000                  ?_serial_init 0020                  vfprintf@cfmt 00E5  
                      ___flge 1EF0                        ___fleq 1C3C     __end_of_MLX90614_WriteReg 1ADC  
                   ??___aodiv 0070                     ??___fladd 0050                     ??___aomod 0070  
                      ___wmul 1A4D                     ??___fldiv 0078                     ??___awdiv 0074  
                   ??___flneg 0074                     ??___awmod 0074                     ??___flmul 0036  
                   ??___flsub 007C                     ??___fltol 004C                     ??___lldiv 0078  
                      _efgtoa 0130                        _floorf 10DF              ___awdiv@quotient 0077  
             ___awmod@divisor 0070               ___awmod@counter 0075                        _printf 1A01  
                      pad@buf 0027                        dtoa@fp 003F                        _strcpy 1AFB  
                      _strlen 19E9                        fputc@c 0073                        fputs@c 0023  
                      fputs@i 0024                        fputs@s 0026                     ??_isalpha 0072  
                   ??_isdigit 0072            __size_of__Umul8_16 001F               ___fpclassifyf@e 0020  
             ___fpclassifyf@u 0022               ___fpclassifyf@x 0070                     ??_islower 0072  
                   ?_I2C_nack 0070                     ??_isspace 0072                     ?_I2C_init 0070  
                   ?_I2C_read 0070                     ??_isupper 0072                     ?_I2C_stop 0070  
                   ??_uart_tx 0070              __end_of_vfprintf 1BB2                     ??_tolower 0078  
                      xtoa@fp 0046                     ??_strncmp 0074                     ??_toupper 0078  
                  ___flge@ff1 0048                    ___flge@ff2 004C               ??___fpclassifyf 0074  
                ___xxtofl@arg 002A                  ___xxtofl@exp 0029                  ___xxtofl@val 0020  
                  ___fleq@ff1 0070                    ___fleq@ff2 0074       __end_of__initialization 07FD  
                  ___flneg@f1 0070                    ___fltol@f1 0048                __pcstackCOMMON 0070  
               __end_of_fputc 003D                 __end_of_fputs 1B81                 __end_of_putch 1926  
     __size_of_readEmissivity 003A                    ??_I2C_nack 0070                    ??_I2C_init 0070  
                  ??_I2C_read 0070                    ??_I2C_stop 0070    __size_of_MLX90614_ReadTemp 0009  
                     ??_fputc 0076                       ??_fputs 0020                       ??_putch 0072  
                  __pbssBANK1 00EC                    __pbssBANK2 014F                    __pbssBANK3 01A0  
           __end_of__Umul8_16 1AFB                    _efgtoa$954 00A0                    _efgtoa$963 00A6  
                  _efgtoa$955 00A2                    _efgtoa$964 00A8                    _efgtoa$965 00AA  
                  _efgtoa$959 00A4                    __pmaintext 13DB                       ?___flge 0048  
                     ?___fleq 0070    __size_of_MLX90614_WriteReg 001E                       ?___wmul 0070  
                     ?_efgtoa 0064                       ?_floorf 002D                       _I2C_ack 192C  
                     ?_printf 013F                     ?_adc_init 0070                       ?_strcpy 0070  
                     ?_strlen 0070     __size_of_MLX90614_ReadReg 0033                     ?___xxtofl 0020  
                     _SP1BRGH 011C                       _SP1BRGL 011B            __size_of_vfpfcnvrt 03CA  
          __size_of_port_init 0016                       _SSP1ADD 018D                       _SSP1BUF 018C  
             _writeEmissivity 1BF7                 ??_I2C_restart 0070        MLX90614_ReadReg@valReg 0077  
                   _I2C_start 191C                     _I2C_write 1953               __size_of___flge 007B  
             __size_of___fleq 0048                       ___aodiv 003D                       ___fladd 083D  
                     ___aomod 11B1                       ___fldiv 1686                       ___awdiv 1D1F  
                     ___flneg 1004                       ___awmod 1BB2                       ___flmul 0A1E  
                     ___flsub 1A84                       ___fltol 1E13                       ___lldiv 1DC1  
             __size_of___wmul 001B                     ?_vfprintf 00DF          __size_of_serial_init 004C  
             __size_of_efgtoa 06B9               __size_of_floorf 00D2                    ??_adc_init 0070  
                     __ptext1 1BF7                       __ptext2 1ABE                       __ptext3 1C84  
                     __ptext4 1DC1                       __ptext5 0803                       __ptext6 1F6B  
                     __ptext7 1A01                       __ptext8 1B81                       __ptext9 0C36  
             __size_of_printf 0018               __size_of_strcpy 001F               __size_of_strlen 0018  
                __size_of_abs 0017                  __size_of_pad 004F                       _isalpha 1AA1  
                     _isdigit 198D                    ??___xxtofl 0024              ___awmod@dividend 0072  
                     _islower 19D2                       _isspace 1A68                       _isupper 19BB  
                     efgtoa@c 0068                       efgtoa@d 00B8                       efgtoa@e 00D1  
                     efgtoa@f 0064                       efgtoa@g 00CD                       efgtoa@h 00C3  
                     efgtoa@i 00CB                       efgtoa@l 00C7                       efgtoa@m 00B2  
                     efgtoa@n 00D3                       efgtoa@p 00BC                       efgtoa@t 00AC  
                     efgtoa@u 00D5                       efgtoa@w 00BF                       _uart_tx 1945  
                     atoi@neg 0020                       _tolower 1B1A                       clrloop0 1927  
                     _strncmp 1D70                       _toupper 1B3B          end_of_initialization 07FD  
                     floorf@e 003B                       floorf@m 0037                       floorf@u 003D  
                     floorf@x 002D                       fputc@fp 0075                       fputs@fp 007B  
             ___lldiv@divisor 0070               ___lldiv@counter 007D                    ?_I2C_start 0070  
                  ?_I2C_write 0070             __end_of_vfpfcnvrt 1000                    efgtoa@mode 00C2  
           __end_of_port_init 198D                    efgtoa@sign 00BA           __end_of_I2C_restart 1004  
                  ??_vfprintf 00E2                       strcpy@d 0076                       strlen@a 0073  
                     strcpy@s 0074                       strlen@s 0074                   uart_tx@dato 0071  
              _readEmissivity 0803                   ___fladd@grs 005B                 ___xxtofl@sign 0028  
     __end_of_writeEmissivity 1C3C                     _TRISCbits 0013                   ___fldiv@grs 0027  
                 ___fldiv@rem 0020           writeEmissivity@ereg 0056             __size_of_I2C_nack 0008  
           __size_of_I2C_init 001A             __size_of_I2C_read 0014             __size_of_I2C_stop 0004  
                 ___flmul@grs 003D                __end_of___flge 1F6B                __end_of___fleq 1C84  
                 vfpfcnvrt@ap 006E                   vfpfcnvrt@ct 013A                   vfpfcnvrt@fp 013E  
                 vfpfcnvrt@ll 0120                __end_of___wmul 1A68                __end_of_efgtoa 07E9  
      __end_of_readEmissivity 083D                __end_of_floorf 11B1                    floorf@F527 014F  
            _MLX90614_ReadReg 100D                __end_of_printf 1A19                __end_of_strcpy 1B1A  
              __end_of_strlen 1A01           start_initialization 07E9                   __end_of_abs 19BB  
                 __end_of_pad 1D1F  MLX90614_ReadTemp@Temp_Source 007B         __end_of___fpclassifyf 1EF0  
                 _I2C_restart 1000                   ??_I2C_start 0070                   ??_I2C_write 0070  
                 vfprintf@fmt 00DF                      ??___flge 0050                      ??___fleq 0078  
                    ??___wmul 0074                      ??_efgtoa 0069                     __Umul8_16 1ADC  
                    ??_floorf 0031                      ?_I2C_ack 0070               ?_readEmissivity 002E  
                    ??_printf 006F                      ??_strcpy 0072                      ??_strlen 0072  
                   ___fladd@a 004C                     ___fladd@b 0048                     ___fldiv@a 0070  
                   ___fldiv@b 0074             __size_of_adc_init 001A                     ___flmul@a 0032  
                   ___flmul@b 002E                     ___flsub@a 005C                     ___flsub@b 0060  
                   ___latbits 0002                 __pcstackBANK0 0020                 __pcstackBANK1 00A0  
               __pcstackBANK2 0120              ___aodiv@dividend 0028              ?_writeEmissivity 0051  
           __size_of___xxtofl 0095                     _atoi$1033 0022                     _atoi$1034 0026  
                   _atoi$1035 0024                      ?___aodiv 0020                      ?___fladd 0048  
                    ?___aomod 0020                      ?___fldiv 0070                      ?___awdiv 0070  
            ___aodiv@quotient 0073                      ?___flneg 0070                      ?___awmod 0070  
                    ?___flmul 002E                      ?___flsub 005C                      ?___fltol 0048  
                    ?___lldiv 0070                    ?__Umul8_16 0070                     _high_byte 015C  
           __size_of_vfprintf 0031                      _BAUD1CON 011F                      ?_isalpha 0070  
                    ?_isdigit 0070                      ?_islower 0070                      _I2C_nack 1934  
                    ?_isspace 0070                      _I2C_init 1A19                      _I2C_read 1963  
                    ?_isupper 0070                      _I2C_stop 0004                      ?_uart_tx 0070  
                    ?_tolower 0076                __size_of_fputc 0035                __size_of_fputs 0025  
                    ?_strncmp 0070                      ?_toupper 0076                __size_of_putch 0005  
              ___wmul@product 0074                     clear_ram0 1926                 ??_serial_init 0024  
                    _PIR3bits 070F                   I2C_read@ack 0070                      _SSP1CON1 0190  
                    _SSP1CON3 0192                      _SSP1STAT 018F                     _vfpfcnvrt 0C36  
                   _port_init 1977                 serial_init@sx 0028              __size_of_I2C_ack 0008  
           ___wmul@multiplier 0070                     main@leerT 0149                  _isspace$1073 0074  
                  vfpfcnvrt@c 013D                    vfpfcnvrt@f 0136      __end_of_MLX90614_ReadReg 1040  
                  vfprintf@ap 00E1                    vfprintf@fp 00E4                   ??__Umul8_16 0072  
            __size_of___aodiv 00F3              __size_of___fladd 01E1              __size_of___aomod 00DC  
            __size_of___fldiv 017A              __size_of___awdiv 0051              __size_of___flneg 0009  
            __size_of___awmod 0045              __size_of___flmul 0218              __size_of___flsub 001D  
            __size_of___fltol 0065              __size_of___lldiv 0052                    ?_vfpfcnvrt 006D  
                  ?_port_init 0070           __end_of_serial_init 1CD0               ___aodiv@divisor 0020  
                    _adc_init 1A33               ___aodiv@counter 0071                    _ANSELCbits 0F4E  
          ___fpclassifyf@F465 0153                      ___xxtofl 1F6B              __size_of_isalpha 001D  
            __size_of_isdigit 0017                      _dtoa$930 003B              __size_of_islower 0017  
            __size_of_isspace 001C                      __ptext10 1530                      __ptext11 1B3B  
                    __ptext20 1E78                      __ptext12 19D2                      __ptext21 1E13  
                    __ptext13 1AA1                      __ptext30 1BB2                      __ptext22 1A84  
                    __ptext14 1D70                      __ptext31 1D1F                      __ptext23 083D  
                    __ptext15 0130                      __ptext40 11B1                      __ptext32 128D  
                    __ptext24 1004                      __ptext16 1B1A                      __ptext41 003D  
                    __ptext33 1CD0                      __ptext25 0A1E                      __ptext17 19BB  
                    __ptext50 1953                      __ptext42 1040                      __ptext34 19E9  
                    __ptext26 1ADC                      __ptext18 1AFB                      __ptext51 0004  
                    __ptext43 1A68                      __ptext35 1B5C                      __ptext27 1EF0  
                    __ptext19 10DF                      __ptext52 191C                      __ptext44 198D  
                    __ptext36 0008                      __ptext28 1C3C                      __ptext53 1000  
                    __ptext45 1A4D                      __ptext37 1921                      __ptext29 1686  
                    __ptext54 1963                      __ptext46 1977                      __ptext38 1945  
                    __ptext55 1934                      __ptext47 1A33                      __ptext39 19A4  
                    __ptext56 192C                      __ptext48 193C                      __ptext57 1A19  
                    __ptext49 100D              __size_of_isupper 0017                  _SSP1CON2bits 0191  
            __size_of_uart_tx 000E              __size_of_tolower 0021                    strcpy@dest 0077  
            __size_of_strncmp 0051              __size_of_toupper 0021                 __size_of_atoi 009F  
               __size_of_main 0155                 __size_of_dtoa 014E                 __size_of_xtoa 0156  
                ?_I2C_restart 0070                      _low_byte 015B                      efgtoa@fp 00BE  
                    efgtoa@ne 00B0                      efgtoa@pp 00AE                      efgtoa@ou 00B4  
            ??_readEmissivity 0032                      _xtoa$975 0040                      _xtoa$976 0042  
                    _vfprintf 1B81                     printf@fmt 013F                      main@temp 014B  
            ___aomod@dividend 0028                     putch@dato 0072          MLX90614_WriteReg@reg 0073  
        MLX90614_WriteReg@val 0071                __pstringtext10 0000                      isalpha@c 0070  
                    isdigit@c 0070     writeEmissivity@emissivity 0051                      islower@c 0070  
                    isspace@c 0070              ___lldiv@dividend 0074                     strcpy@src 0070  
                    isupper@c 0070                     strncmp@_l 0075                     strncmp@_r 0070  
                 _serial_init 1C84                   efgtoa@nmode 00C1                      printf@ap 00E7  
             ___aomod@divisor 0020                   ??_vfpfcnvrt 00D9               ___aomod@counter 0071  
                 ??_port_init 0070                 _vfpfcnvrt$990 0130                 _vfpfcnvrt$991 0132  
               _vfpfcnvrt$996 0134                 __pstringtext1 1800                 __pstringtext2 181D  
               __pstringtext3 1834                 __pstringtext4 1849                 __pstringtext5 1859  
               __pstringtext6 185D                 __pstringtext7 1861                 __pstringtext8 1865  
               __pstringtext9 1869        __Umul8_16@multiplicand 0070                      tolower@c 0076  
                  _SSP1DATPPS 0EC6        __size_of___fpclassifyf 0078                    _SSP1CLKPPS 0EC5  
            ___lldiv@quotient 0079                      strncmp@l 0078                      strncmp@n 0072  
                    strncmp@r 0076                      toupper@c 0076                 ___fladd@signs 0058  
                ___aodiv@sign 0072                  ___fladd@aexp 0059                  ___fladd@bexp 005A  
    __size_of_writeEmissivity 0045          __Umul8_16@multiplier 0078                  ___aomod@sign 0072  
           __Umul8_16@product 0074  
