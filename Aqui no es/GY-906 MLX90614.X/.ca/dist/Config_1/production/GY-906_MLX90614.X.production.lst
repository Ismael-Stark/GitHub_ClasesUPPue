

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Jul 23 00:42:54 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F18855
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    31                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    36                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    37                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    38                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text16,local,class=CODE,merge=1,delta=2,group=3
    40                           	psect	text17,local,class=CODE,merge=1,delta=2,group=3
    41                           	psect	text18,local,class=CODE,merge=1,delta=2,group=3
    42                           	psect	text19,local,class=CODE,merge=1,delta=2,group=3
    43                           	psect	text20,local,class=CODE,merge=1,delta=2,group=3
    44                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    54                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	text32,local,class=CODE,merge=1,delta=2,group=1
    56                           	psect	text33,local,class=CODE,merge=1,delta=2,group=1
    57                           	psect	text34,local,class=CODE,merge=1,delta=2,group=3
    58                           	psect	text35,local,class=CODE,merge=1,delta=2,group=3
    59                           	psect	text36,local,class=CODE,merge=1,delta=2,group=3
    60                           	psect	text37,local,class=CODE,merge=1,delta=2
    61                           	psect	text38,local,class=CODE,merge=1,delta=2
    62                           	psect	text39,local,class=CODE,merge=1,delta=2,group=3
    63                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    64                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text42,local,class=CODE,merge=1,delta=2,group=3
    66                           	psect	text43,local,class=CODE,merge=1,delta=2,group=3
    67                           	psect	text44,local,class=CODE,merge=1,delta=2,group=3
    68                           	psect	text45,local,class=CODE,merge=1,delta=2,group=2
    69                           	psect	text46,local,class=CODE,merge=1,delta=2
    70                           	psect	text47,local,class=CODE,merge=1,delta=2
    71                           	psect	text48,local,class=CODE,merge=1,delta=2
    72                           	psect	text49,local,class=CODE,merge=1,delta=2
    73                           	psect	text50,local,class=CODE,merge=1,delta=2
    74                           	psect	text51,local,class=CODE,merge=1,delta=2
    75                           	psect	text52,local,class=CODE,merge=1,delta=2
    76                           	psect	text53,local,class=CODE,merge=1,delta=2
    77                           	psect	text54,local,class=CODE,merge=1,delta=2
    78                           	psect	text55,local,class=CODE,merge=1,delta=2
    79                           	psect	text56,local,class=CODE,merge=1,delta=2
    80                           	psect	text57,local,class=CODE,merge=1,delta=2
    81                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    82                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    83                           	dabs	1,0x7E,2
    84  0000                     
    85                           ; Version 2.40
    86                           ; Generated 02/12/2021 GMT
    87                           ; 
    88                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    89                           ; All rights reserved.
    90                           ; 
    91                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    92                           ; 
    93                           ; Redistribution and use in source and binary forms, with or without modification, are
    94                           ; permitted provided that the following conditions are met:
    95                           ; 
    96                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    97                           ;        conditions and the following disclaimer.
    98                           ; 
    99                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   100                           ;        of conditions and the following disclaimer in the documentation and/or other
   101                           ;        materials provided with the distribution. Publication is not required when
   102                           ;        this file is used in an embedded application.
   103                           ; 
   104                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   105                           ;        software without specific prior written permission.
   106                           ; 
   107                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   108                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   109                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   110                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   111                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   112                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   113                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   114                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   115                           ; 
   116                           ; 
   117                           ; Code-generator required, PIC16F18855 Definitions
   118                           ; 
   119                           ; SFR Addresses
   120  0000                     	;# 
   121  0001                     	;# 
   122  0002                     	;# 
   123  0003                     	;# 
   124  0004                     	;# 
   125  0005                     	;# 
   126  0006                     	;# 
   127  0007                     	;# 
   128  0008                     	;# 
   129  0009                     	;# 
   130  000A                     	;# 
   131  000B                     	;# 
   132  000C                     	;# 
   133  000D                     	;# 
   134  000E                     	;# 
   135  0010                     	;# 
   136  0011                     	;# 
   137  0012                     	;# 
   138  0013                     	;# 
   139  0016                     	;# 
   140  0017                     	;# 
   141  0018                     	;# 
   142  001C                     	;# 
   143  001C                     	;# 
   144  001D                     	;# 
   145  001D                     	;# 
   146  001E                     	;# 
   147  001F                     	;# 
   148  008C                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  008E                     	;# 
   153  008F                     	;# 
   154  0090                     	;# 
   155  0090                     	;# 
   156  0091                     	;# 
   157  0093                     	;# 
   158  0094                     	;# 
   159  0095                     	;# 
   160  0096                     	;# 
   161  0097                     	;# 
   162  0098                     	;# 
   163  0099                     	;# 
   164  009A                     	;# 
   165  009B                     	;# 
   166  009C                     	;# 
   167  009D                     	;# 
   168  009E                     	;# 
   169  010C                     	;# 
   170  010D                     	;# 
   171  010E                     	;# 
   172  010E                     	;# 
   173  010F                     	;# 
   174  0110                     	;# 
   175  0110                     	;# 
   176  0111                     	;# 
   177  0112                     	;# 
   178  0112                     	;# 
   179  0113                     	;# 
   180  0114                     	;# 
   181  0114                     	;# 
   182  0115                     	;# 
   183  0116                     	;# 
   184  0116                     	;# 
   185  0117                     	;# 
   186  0119                     	;# 
   187  0119                     	;# 
   188  0119                     	;# 
   189  011A                     	;# 
   190  011A                     	;# 
   191  011A                     	;# 
   192  011B                     	;# 
   193  011B                     	;# 
   194  011B                     	;# 
   195  011B                     	;# 
   196  011B                     	;# 
   197  011C                     	;# 
   198  011C                     	;# 
   199  011C                     	;# 
   200  011D                     	;# 
   201  011D                     	;# 
   202  011D                     	;# 
   203  011E                     	;# 
   204  011E                     	;# 
   205  011E                     	;# 
   206  011F                     	;# 
   207  011F                     	;# 
   208  011F                     	;# 
   209  011F                     	;# 
   210  011F                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  018E                     	;# 
   214  018F                     	;# 
   215  0190                     	;# 
   216  0191                     	;# 
   217  0192                     	;# 
   218  0196                     	;# 
   219  0197                     	;# 
   220  0198                     	;# 
   221  0199                     	;# 
   222  019A                     	;# 
   223  019B                     	;# 
   224  019C                     	;# 
   225  020C                     	;# 
   226  020C                     	;# 
   227  020D                     	;# 
   228  020E                     	;# 
   229  020F                     	;# 
   230  020F                     	;# 
   231  0210                     	;# 
   232  0210                     	;# 
   233  0211                     	;# 
   234  0211                     	;# 
   235  0212                     	;# 
   236  0212                     	;# 
   237  0213                     	;# 
   238  0214                     	;# 
   239  0215                     	;# 
   240  0215                     	;# 
   241  0216                     	;# 
   242  0216                     	;# 
   243  0217                     	;# 
   244  0217                     	;# 
   245  0218                     	;# 
   246  0218                     	;# 
   247  0219                     	;# 
   248  021A                     	;# 
   249  021B                     	;# 
   250  021B                     	;# 
   251  021C                     	;# 
   252  021C                     	;# 
   253  021D                     	;# 
   254  021D                     	;# 
   255  021E                     	;# 
   256  021F                     	;# 
   257  028C                     	;# 
   258  028C                     	;# 
   259  028D                     	;# 
   260  028D                     	;# 
   261  028E                     	;# 
   262  028F                     	;# 
   263  0290                     	;# 
   264  0290                     	;# 
   265  0291                     	;# 
   266  0292                     	;# 
   267  0292                     	;# 
   268  0293                     	;# 
   269  0293                     	;# 
   270  0294                     	;# 
   271  0295                     	;# 
   272  0296                     	;# 
   273  0296                     	;# 
   274  0297                     	;# 
   275  0298                     	;# 
   276  0298                     	;# 
   277  0299                     	;# 
   278  0299                     	;# 
   279  029A                     	;# 
   280  029B                     	;# 
   281  029C                     	;# 
   282  029C                     	;# 
   283  029D                     	;# 
   284  030C                     	;# 
   285  030C                     	;# 
   286  030D                     	;# 
   287  030E                     	;# 
   288  030F                     	;# 
   289  0310                     	;# 
   290  0310                     	;# 
   291  0311                     	;# 
   292  0312                     	;# 
   293  0313                     	;# 
   294  0314                     	;# 
   295  0314                     	;# 
   296  0315                     	;# 
   297  0316                     	;# 
   298  0317                     	;# 
   299  0318                     	;# 
   300  0318                     	;# 
   301  0319                     	;# 
   302  031A                     	;# 
   303  031B                     	;# 
   304  031C                     	;# 
   305  031C                     	;# 
   306  031D                     	;# 
   307  031E                     	;# 
   308  031F                     	;# 
   309  038C                     	;# 
   310  038C                     	;# 
   311  038D                     	;# 
   312  038E                     	;# 
   313  0390                     	;# 
   314  0390                     	;# 
   315  0391                     	;# 
   316  0392                     	;# 
   317  040C                     	;# 
   318  040D                     	;# 
   319  040E                     	;# 
   320  040F                     	;# 
   321  0410                     	;# 
   322  0411                     	;# 
   323  0416                     	;# 
   324  0416                     	;# 
   325  0417                     	;# 
   326  0418                     	;# 
   327  0418                     	;# 
   328  0419                     	;# 
   329  041A                     	;# 
   330  041A                     	;# 
   331  041B                     	;# 
   332  041C                     	;# 
   333  041C                     	;# 
   334  041D                     	;# 
   335  041E                     	;# 
   336  041F                     	;# 
   337  048C                     	;# 
   338  048C                     	;# 
   339  048D                     	;# 
   340  048E                     	;# 
   341  048F                     	;# 
   342  048F                     	;# 
   343  0490                     	;# 
   344  0491                     	;# 
   345  0492                     	;# 
   346  0492                     	;# 
   347  0493                     	;# 
   348  0494                     	;# 
   349  0495                     	;# 
   350  0495                     	;# 
   351  0496                     	;# 
   352  0497                     	;# 
   353  0498                     	;# 
   354  0499                     	;# 
   355  049A                     	;# 
   356  049B                     	;# 
   357  049C                     	;# 
   358  049D                     	;# 
   359  050C                     	;# 
   360  050C                     	;# 
   361  050D                     	;# 
   362  050E                     	;# 
   363  050F                     	;# 
   364  050F                     	;# 
   365  0510                     	;# 
   366  0511                     	;# 
   367  0512                     	;# 
   368  0512                     	;# 
   369  0513                     	;# 
   370  0514                     	;# 
   371  0515                     	;# 
   372  0515                     	;# 
   373  0516                     	;# 
   374  0517                     	;# 
   375  0518                     	;# 
   376  0519                     	;# 
   377  051A                     	;# 
   378  051B                     	;# 
   379  051C                     	;# 
   380  051D                     	;# 
   381  058C                     	;# 
   382  058C                     	;# 
   383  058D                     	;# 
   384  058E                     	;# 
   385  058F                     	;# 
   386  058F                     	;# 
   387  0590                     	;# 
   388  0591                     	;# 
   389  0592                     	;# 
   390  0593                     	;# 
   391  060C                     	;# 
   392  060D                     	;# 
   393  060E                     	;# 
   394  060F                     	;# 
   395  0610                     	;# 
   396  0611                     	;# 
   397  0612                     	;# 
   398  0613                     	;# 
   399  0614                     	;# 
   400  0616                     	;# 
   401  0617                     	;# 
   402  0618                     	;# 
   403  0619                     	;# 
   404  061A                     	;# 
   405  061B                     	;# 
   406  061C                     	;# 
   407  061D                     	;# 
   408  061E                     	;# 
   409  068C                     	;# 
   410  068D                     	;# 
   411  068E                     	;# 
   412  068F                     	;# 
   413  0690                     	;# 
   414  0691                     	;# 
   415  0692                     	;# 
   416  0693                     	;# 
   417  0694                     	;# 
   418  070C                     	;# 
   419  070D                     	;# 
   420  070E                     	;# 
   421  070F                     	;# 
   422  0710                     	;# 
   423  0711                     	;# 
   424  0712                     	;# 
   425  0713                     	;# 
   426  0714                     	;# 
   427  0716                     	;# 
   428  0717                     	;# 
   429  0718                     	;# 
   430  0719                     	;# 
   431  071A                     	;# 
   432  071B                     	;# 
   433  071C                     	;# 
   434  071D                     	;# 
   435  071E                     	;# 
   436  0796                     	;# 
   437  0797                     	;# 
   438  0798                     	;# 
   439  0799                     	;# 
   440  079A                     	;# 
   441  079B                     	;# 
   442  080C                     	;# 
   443  080D                     	;# 
   444  080E                     	;# 
   445  080F                     	;# 
   446  0810                     	;# 
   447  0811                     	;# 
   448  0812                     	;# 
   449  0813                     	;# 
   450  0814                     	;# 
   451  081A                     	;# 
   452  081B                     	;# 
   453  081C                     	;# 
   454  081D                     	;# 
   455  081E                     	;# 
   456  081F                     	;# 
   457  088C                     	;# 
   458  088D                     	;# 
   459  088E                     	;# 
   460  088F                     	;# 
   461  0890                     	;# 
   462  0891                     	;# 
   463  0892                     	;# 
   464  0893                     	;# 
   465  0895                     	;# 
   466  0896                     	;# 
   467  0897                     	;# 
   468  0898                     	;# 
   469  0899                     	;# 
   470  089A                     	;# 
   471  089B                     	;# 
   472  090C                     	;# 
   473  090E                     	;# 
   474  090F                     	;# 
   475  091F                     	;# 
   476  091F                     	;# 
   477  098F                     	;# 
   478  098F                     	;# 
   479  0990                     	;# 
   480  0991                     	;# 
   481  0992                     	;# 
   482  0993                     	;# 
   483  0994                     	;# 
   484  0995                     	;# 
   485  0996                     	;# 
   486  0997                     	;# 
   487  0E0F                     	;# 
   488  0E10                     	;# 
   489  0E11                     	;# 
   490  0E12                     	;# 
   491  0E13                     	;# 
   492  0E14                     	;# 
   493  0E15                     	;# 
   494  0E16                     	;# 
   495  0E17                     	;# 
   496  0E18                     	;# 
   497  0E19                     	;# 
   498  0E1A                     	;# 
   499  0E1B                     	;# 
   500  0E1C                     	;# 
   501  0E1D                     	;# 
   502  0E1E                     	;# 
   503  0E1F                     	;# 
   504  0E20                     	;# 
   505  0E21                     	;# 
   506  0E22                     	;# 
   507  0E23                     	;# 
   508  0E24                     	;# 
   509  0E25                     	;# 
   510  0E26                     	;# 
   511  0E27                     	;# 
   512  0E28                     	;# 
   513  0E29                     	;# 
   514  0E2A                     	;# 
   515  0E2B                     	;# 
   516  0E2C                     	;# 
   517  0E2D                     	;# 
   518  0E2E                     	;# 
   519  0E2F                     	;# 
   520  0E30                     	;# 
   521  0E31                     	;# 
   522  0E32                     	;# 
   523  0E33                     	;# 
   524  0E34                     	;# 
   525  0E35                     	;# 
   526  0E36                     	;# 
   527  0E37                     	;# 
   528  0E8F                     	;# 
   529  0E90                     	;# 
   530  0E91                     	;# 
   531  0E92                     	;# 
   532  0E93                     	;# 
   533  0E94                     	;# 
   534  0E95                     	;# 
   535  0E96                     	;# 
   536  0E97                     	;# 
   537  0E9C                     	;# 
   538  0E9D                     	;# 
   539  0E9E                     	;# 
   540  0EA1                     	;# 
   541  0EA2                     	;# 
   542  0EA3                     	;# 
   543  0EA4                     	;# 
   544  0EA5                     	;# 
   545  0EA9                     	;# 
   546  0EAA                     	;# 
   547  0EAB                     	;# 
   548  0EAC                     	;# 
   549  0EB1                     	;# 
   550  0EB2                     	;# 
   551  0EB3                     	;# 
   552  0EB8                     	;# 
   553  0EB9                     	;# 
   554  0EBA                     	;# 
   555  0EBB                     	;# 
   556  0EBC                     	;# 
   557  0EBD                     	;# 
   558  0EBE                     	;# 
   559  0EC3                     	;# 
   560  0EC5                     	;# 
   561  0EC6                     	;# 
   562  0EC7                     	;# 
   563  0EC8                     	;# 
   564  0EC9                     	;# 
   565  0ECA                     	;# 
   566  0ECB                     	;# 
   567  0ECC                     	;# 
   568  0F10                     	;# 
   569  0F11                     	;# 
   570  0F12                     	;# 
   571  0F13                     	;# 
   572  0F14                     	;# 
   573  0F15                     	;# 
   574  0F16                     	;# 
   575  0F17                     	;# 
   576  0F18                     	;# 
   577  0F19                     	;# 
   578  0F1A                     	;# 
   579  0F1B                     	;# 
   580  0F1C                     	;# 
   581  0F1D                     	;# 
   582  0F1E                     	;# 
   583  0F1F                     	;# 
   584  0F20                     	;# 
   585  0F21                     	;# 
   586  0F22                     	;# 
   587  0F23                     	;# 
   588  0F24                     	;# 
   589  0F25                     	;# 
   590  0F26                     	;# 
   591  0F27                     	;# 
   592  0F38                     	;# 
   593  0F39                     	;# 
   594  0F3A                     	;# 
   595  0F3B                     	;# 
   596  0F3C                     	;# 
   597  0F3D                     	;# 
   598  0F3E                     	;# 
   599  0F3F                     	;# 
   600  0F40                     	;# 
   601  0F41                     	;# 
   602  0F43                     	;# 
   603  0F44                     	;# 
   604  0F45                     	;# 
   605  0F46                     	;# 
   606  0F47                     	;# 
   607  0F48                     	;# 
   608  0F49                     	;# 
   609  0F4A                     	;# 
   610  0F4B                     	;# 
   611  0F4C                     	;# 
   612  0F4E                     	;# 
   613  0F4F                     	;# 
   614  0F50                     	;# 
   615  0F51                     	;# 
   616  0F52                     	;# 
   617  0F53                     	;# 
   618  0F54                     	;# 
   619  0F55                     	;# 
   620  0F56                     	;# 
   621  0F57                     	;# 
   622  0F65                     	;# 
   623  0F68                     	;# 
   624  0F69                     	;# 
   625  0F6A                     	;# 
   626  0F6B                     	;# 
   627  0FE4                     	;# 
   628  0FE5                     	;# 
   629  0FE6                     	;# 
   630  0FE7                     	;# 
   631  0FE8                     	;# 
   632  0FE9                     	;# 
   633  0FEA                     	;# 
   634  0FEB                     	;# 
   635  0FED                     	;# 
   636  0FEE                     	;# 
   637  0FEF                     	;# 
   638  0000                     	;# 
   639  0001                     	;# 
   640  0002                     	;# 
   641  0003                     	;# 
   642  0004                     	;# 
   643  0005                     	;# 
   644  0006                     	;# 
   645  0007                     	;# 
   646  0008                     	;# 
   647  0009                     	;# 
   648  000A                     	;# 
   649  000B                     	;# 
   650  000C                     	;# 
   651  000D                     	;# 
   652  000E                     	;# 
   653  0010                     	;# 
   654  0011                     	;# 
   655  0012                     	;# 
   656  0013                     	;# 
   657  0016                     	;# 
   658  0017                     	;# 
   659  0018                     	;# 
   660  001C                     	;# 
   661  001C                     	;# 
   662  001D                     	;# 
   663  001D                     	;# 
   664  001E                     	;# 
   665  001F                     	;# 
   666  008C                     	;# 
   667  008C                     	;# 
   668  008D                     	;# 
   669  008E                     	;# 
   670  008E                     	;# 
   671  008F                     	;# 
   672  0090                     	;# 
   673  0090                     	;# 
   674  0091                     	;# 
   675  0093                     	;# 
   676  0094                     	;# 
   677  0095                     	;# 
   678  0096                     	;# 
   679  0097                     	;# 
   680  0098                     	;# 
   681  0099                     	;# 
   682  009A                     	;# 
   683  009B                     	;# 
   684  009C                     	;# 
   685  009D                     	;# 
   686  009E                     	;# 
   687  010C                     	;# 
   688  010D                     	;# 
   689  010E                     	;# 
   690  010E                     	;# 
   691  010F                     	;# 
   692  0110                     	;# 
   693  0110                     	;# 
   694  0111                     	;# 
   695  0112                     	;# 
   696  0112                     	;# 
   697  0113                     	;# 
   698  0114                     	;# 
   699  0114                     	;# 
   700  0115                     	;# 
   701  0116                     	;# 
   702  0116                     	;# 
   703  0117                     	;# 
   704  0119                     	;# 
   705  0119                     	;# 
   706  0119                     	;# 
   707  011A                     	;# 
   708  011A                     	;# 
   709  011A                     	;# 
   710  011B                     	;# 
   711  011B                     	;# 
   712  011B                     	;# 
   713  011B                     	;# 
   714  011B                     	;# 
   715  011C                     	;# 
   716  011C                     	;# 
   717  011C                     	;# 
   718  011D                     	;# 
   719  011D                     	;# 
   720  011D                     	;# 
   721  011E                     	;# 
   722  011E                     	;# 
   723  011E                     	;# 
   724  011F                     	;# 
   725  011F                     	;# 
   726  011F                     	;# 
   727  011F                     	;# 
   728  011F                     	;# 
   729  018C                     	;# 
   730  018D                     	;# 
   731  018E                     	;# 
   732  018F                     	;# 
   733  0190                     	;# 
   734  0191                     	;# 
   735  0192                     	;# 
   736  0196                     	;# 
   737  0197                     	;# 
   738  0198                     	;# 
   739  0199                     	;# 
   740  019A                     	;# 
   741  019B                     	;# 
   742  019C                     	;# 
   743  020C                     	;# 
   744  020C                     	;# 
   745  020D                     	;# 
   746  020E                     	;# 
   747  020F                     	;# 
   748  020F                     	;# 
   749  0210                     	;# 
   750  0210                     	;# 
   751  0211                     	;# 
   752  0211                     	;# 
   753  0212                     	;# 
   754  0212                     	;# 
   755  0213                     	;# 
   756  0214                     	;# 
   757  0215                     	;# 
   758  0215                     	;# 
   759  0216                     	;# 
   760  0216                     	;# 
   761  0217                     	;# 
   762  0217                     	;# 
   763  0218                     	;# 
   764  0218                     	;# 
   765  0219                     	;# 
   766  021A                     	;# 
   767  021B                     	;# 
   768  021B                     	;# 
   769  021C                     	;# 
   770  021C                     	;# 
   771  021D                     	;# 
   772  021D                     	;# 
   773  021E                     	;# 
   774  021F                     	;# 
   775  028C                     	;# 
   776  028C                     	;# 
   777  028D                     	;# 
   778  028D                     	;# 
   779  028E                     	;# 
   780  028F                     	;# 
   781  0290                     	;# 
   782  0290                     	;# 
   783  0291                     	;# 
   784  0292                     	;# 
   785  0292                     	;# 
   786  0293                     	;# 
   787  0293                     	;# 
   788  0294                     	;# 
   789  0295                     	;# 
   790  0296                     	;# 
   791  0296                     	;# 
   792  0297                     	;# 
   793  0298                     	;# 
   794  0298                     	;# 
   795  0299                     	;# 
   796  0299                     	;# 
   797  029A                     	;# 
   798  029B                     	;# 
   799  029C                     	;# 
   800  029C                     	;# 
   801  029D                     	;# 
   802  030C                     	;# 
   803  030C                     	;# 
   804  030D                     	;# 
   805  030E                     	;# 
   806  030F                     	;# 
   807  0310                     	;# 
   808  0310                     	;# 
   809  0311                     	;# 
   810  0312                     	;# 
   811  0313                     	;# 
   812  0314                     	;# 
   813  0314                     	;# 
   814  0315                     	;# 
   815  0316                     	;# 
   816  0317                     	;# 
   817  0318                     	;# 
   818  0318                     	;# 
   819  0319                     	;# 
   820  031A                     	;# 
   821  031B                     	;# 
   822  031C                     	;# 
   823  031C                     	;# 
   824  031D                     	;# 
   825  031E                     	;# 
   826  031F                     	;# 
   827  038C                     	;# 
   828  038C                     	;# 
   829  038D                     	;# 
   830  038E                     	;# 
   831  0390                     	;# 
   832  0390                     	;# 
   833  0391                     	;# 
   834  0392                     	;# 
   835  040C                     	;# 
   836  040D                     	;# 
   837  040E                     	;# 
   838  040F                     	;# 
   839  0410                     	;# 
   840  0411                     	;# 
   841  0416                     	;# 
   842  0416                     	;# 
   843  0417                     	;# 
   844  0418                     	;# 
   845  0418                     	;# 
   846  0419                     	;# 
   847  041A                     	;# 
   848  041A                     	;# 
   849  041B                     	;# 
   850  041C                     	;# 
   851  041C                     	;# 
   852  041D                     	;# 
   853  041E                     	;# 
   854  041F                     	;# 
   855  048C                     	;# 
   856  048C                     	;# 
   857  048D                     	;# 
   858  048E                     	;# 
   859  048F                     	;# 
   860  048F                     	;# 
   861  0490                     	;# 
   862  0491                     	;# 
   863  0492                     	;# 
   864  0492                     	;# 
   865  0493                     	;# 
   866  0494                     	;# 
   867  0495                     	;# 
   868  0495                     	;# 
   869  0496                     	;# 
   870  0497                     	;# 
   871  0498                     	;# 
   872  0499                     	;# 
   873  049A                     	;# 
   874  049B                     	;# 
   875  049C                     	;# 
   876  049D                     	;# 
   877  050C                     	;# 
   878  050C                     	;# 
   879  050D                     	;# 
   880  050E                     	;# 
   881  050F                     	;# 
   882  050F                     	;# 
   883  0510                     	;# 
   884  0511                     	;# 
   885  0512                     	;# 
   886  0512                     	;# 
   887  0513                     	;# 
   888  0514                     	;# 
   889  0515                     	;# 
   890  0515                     	;# 
   891  0516                     	;# 
   892  0517                     	;# 
   893  0518                     	;# 
   894  0519                     	;# 
   895  051A                     	;# 
   896  051B                     	;# 
   897  051C                     	;# 
   898  051D                     	;# 
   899  058C                     	;# 
   900  058C                     	;# 
   901  058D                     	;# 
   902  058E                     	;# 
   903  058F                     	;# 
   904  058F                     	;# 
   905  0590                     	;# 
   906  0591                     	;# 
   907  0592                     	;# 
   908  0593                     	;# 
   909  060C                     	;# 
   910  060D                     	;# 
   911  060E                     	;# 
   912  060F                     	;# 
   913  0610                     	;# 
   914  0611                     	;# 
   915  0612                     	;# 
   916  0613                     	;# 
   917  0614                     	;# 
   918  0616                     	;# 
   919  0617                     	;# 
   920  0618                     	;# 
   921  0619                     	;# 
   922  061A                     	;# 
   923  061B                     	;# 
   924  061C                     	;# 
   925  061D                     	;# 
   926  061E                     	;# 
   927  068C                     	;# 
   928  068D                     	;# 
   929  068E                     	;# 
   930  068F                     	;# 
   931  0690                     	;# 
   932  0691                     	;# 
   933  0692                     	;# 
   934  0693                     	;# 
   935  0694                     	;# 
   936  070C                     	;# 
   937  070D                     	;# 
   938  070E                     	;# 
   939  070F                     	;# 
   940  0710                     	;# 
   941  0711                     	;# 
   942  0712                     	;# 
   943  0713                     	;# 
   944  0714                     	;# 
   945  0716                     	;# 
   946  0717                     	;# 
   947  0718                     	;# 
   948  0719                     	;# 
   949  071A                     	;# 
   950  071B                     	;# 
   951  071C                     	;# 
   952  071D                     	;# 
   953  071E                     	;# 
   954  0796                     	;# 
   955  0797                     	;# 
   956  0798                     	;# 
   957  0799                     	;# 
   958  079A                     	;# 
   959  079B                     	;# 
   960  080C                     	;# 
   961  080D                     	;# 
   962  080E                     	;# 
   963  080F                     	;# 
   964  0810                     	;# 
   965  0811                     	;# 
   966  0812                     	;# 
   967  0813                     	;# 
   968  0814                     	;# 
   969  081A                     	;# 
   970  081B                     	;# 
   971  081C                     	;# 
   972  081D                     	;# 
   973  081E                     	;# 
   974  081F                     	;# 
   975  088C                     	;# 
   976  088D                     	;# 
   977  088E                     	;# 
   978  088F                     	;# 
   979  0890                     	;# 
   980  0891                     	;# 
   981  0892                     	;# 
   982  0893                     	;# 
   983  0895                     	;# 
   984  0896                     	;# 
   985  0897                     	;# 
   986  0898                     	;# 
   987  0899                     	;# 
   988  089A                     	;# 
   989  089B                     	;# 
   990  090C                     	;# 
   991  090E                     	;# 
   992  090F                     	;# 
   993  091F                     	;# 
   994  091F                     	;# 
   995  098F                     	;# 
   996  098F                     	;# 
   997  0990                     	;# 
   998  0991                     	;# 
   999  0992                     	;# 
  1000  0993                     	;# 
  1001  0994                     	;# 
  1002  0995                     	;# 
  1003  0996                     	;# 
  1004  0997                     	;# 
  1005  0E0F                     	;# 
  1006  0E10                     	;# 
  1007  0E11                     	;# 
  1008  0E12                     	;# 
  1009  0E13                     	;# 
  1010  0E14                     	;# 
  1011  0E15                     	;# 
  1012  0E16                     	;# 
  1013  0E17                     	;# 
  1014  0E18                     	;# 
  1015  0E19                     	;# 
  1016  0E1A                     	;# 
  1017  0E1B                     	;# 
  1018  0E1C                     	;# 
  1019  0E1D                     	;# 
  1020  0E1E                     	;# 
  1021  0E1F                     	;# 
  1022  0E20                     	;# 
  1023  0E21                     	;# 
  1024  0E22                     	;# 
  1025  0E23                     	;# 
  1026  0E24                     	;# 
  1027  0E25                     	;# 
  1028  0E26                     	;# 
  1029  0E27                     	;# 
  1030  0E28                     	;# 
  1031  0E29                     	;# 
  1032  0E2A                     	;# 
  1033  0E2B                     	;# 
  1034  0E2C                     	;# 
  1035  0E2D                     	;# 
  1036  0E2E                     	;# 
  1037  0E2F                     	;# 
  1038  0E30                     	;# 
  1039  0E31                     	;# 
  1040  0E32                     	;# 
  1041  0E33                     	;# 
  1042  0E34                     	;# 
  1043  0E35                     	;# 
  1044  0E36                     	;# 
  1045  0E37                     	;# 
  1046  0E8F                     	;# 
  1047  0E90                     	;# 
  1048  0E91                     	;# 
  1049  0E92                     	;# 
  1050  0E93                     	;# 
  1051  0E94                     	;# 
  1052  0E95                     	;# 
  1053  0E96                     	;# 
  1054  0E97                     	;# 
  1055  0E9C                     	;# 
  1056  0E9D                     	;# 
  1057  0E9E                     	;# 
  1058  0EA1                     	;# 
  1059  0EA2                     	;# 
  1060  0EA3                     	;# 
  1061  0EA4                     	;# 
  1062  0EA5                     	;# 
  1063  0EA9                     	;# 
  1064  0EAA                     	;# 
  1065  0EAB                     	;# 
  1066  0EAC                     	;# 
  1067  0EB1                     	;# 
  1068  0EB2                     	;# 
  1069  0EB3                     	;# 
  1070  0EB8                     	;# 
  1071  0EB9                     	;# 
  1072  0EBA                     	;# 
  1073  0EBB                     	;# 
  1074  0EBC                     	;# 
  1075  0EBD                     	;# 
  1076  0EBE                     	;# 
  1077  0EC3                     	;# 
  1078  0EC5                     	;# 
  1079  0EC6                     	;# 
  1080  0EC7                     	;# 
  1081  0EC8                     	;# 
  1082  0EC9                     	;# 
  1083  0ECA                     	;# 
  1084  0ECB                     	;# 
  1085  0ECC                     	;# 
  1086  0F10                     	;# 
  1087  0F11                     	;# 
  1088  0F12                     	;# 
  1089  0F13                     	;# 
  1090  0F14                     	;# 
  1091  0F15                     	;# 
  1092  0F16                     	;# 
  1093  0F17                     	;# 
  1094  0F18                     	;# 
  1095  0F19                     	;# 
  1096  0F1A                     	;# 
  1097  0F1B                     	;# 
  1098  0F1C                     	;# 
  1099  0F1D                     	;# 
  1100  0F1E                     	;# 
  1101  0F1F                     	;# 
  1102  0F20                     	;# 
  1103  0F21                     	;# 
  1104  0F22                     	;# 
  1105  0F23                     	;# 
  1106  0F24                     	;# 
  1107  0F25                     	;# 
  1108  0F26                     	;# 
  1109  0F27                     	;# 
  1110  0F38                     	;# 
  1111  0F39                     	;# 
  1112  0F3A                     	;# 
  1113  0F3B                     	;# 
  1114  0F3C                     	;# 
  1115  0F3D                     	;# 
  1116  0F3E                     	;# 
  1117  0F3F                     	;# 
  1118  0F40                     	;# 
  1119  0F41                     	;# 
  1120  0F43                     	;# 
  1121  0F44                     	;# 
  1122  0F45                     	;# 
  1123  0F46                     	;# 
  1124  0F47                     	;# 
  1125  0F48                     	;# 
  1126  0F49                     	;# 
  1127  0F4A                     	;# 
  1128  0F4B                     	;# 
  1129  0F4C                     	;# 
  1130  0F4E                     	;# 
  1131  0F4F                     	;# 
  1132  0F50                     	;# 
  1133  0F51                     	;# 
  1134  0F52                     	;# 
  1135  0F53                     	;# 
  1136  0F54                     	;# 
  1137  0F55                     	;# 
  1138  0F56                     	;# 
  1139  0F57                     	;# 
  1140  0F65                     	;# 
  1141  0F68                     	;# 
  1142  0F69                     	;# 
  1143  0F6A                     	;# 
  1144  0F6B                     	;# 
  1145  0FE4                     	;# 
  1146  0FE5                     	;# 
  1147  0FE6                     	;# 
  1148  0FE7                     	;# 
  1149  0FE8                     	;# 
  1150  0FE9                     	;# 
  1151  0FEA                     	;# 
  1152  0FEB                     	;# 
  1153  0FED                     	;# 
  1154  0FEE                     	;# 
  1155  0FEF                     	;# 
  1156  0000                     	;# 
  1157  0001                     	;# 
  1158  0002                     	;# 
  1159  0003                     	;# 
  1160  0004                     	;# 
  1161  0005                     	;# 
  1162  0006                     	;# 
  1163  0007                     	;# 
  1164  0008                     	;# 
  1165  0009                     	;# 
  1166  000A                     	;# 
  1167  000B                     	;# 
  1168  000C                     	;# 
  1169  000D                     	;# 
  1170  000E                     	;# 
  1171  0010                     	;# 
  1172  0011                     	;# 
  1173  0012                     	;# 
  1174  0013                     	;# 
  1175  0016                     	;# 
  1176  0017                     	;# 
  1177  0018                     	;# 
  1178  001C                     	;# 
  1179  001C                     	;# 
  1180  001D                     	;# 
  1181  001D                     	;# 
  1182  001E                     	;# 
  1183  001F                     	;# 
  1184  008C                     	;# 
  1185  008C                     	;# 
  1186  008D                     	;# 
  1187  008E                     	;# 
  1188  008E                     	;# 
  1189  008F                     	;# 
  1190  0090                     	;# 
  1191  0090                     	;# 
  1192  0091                     	;# 
  1193  0093                     	;# 
  1194  0094                     	;# 
  1195  0095                     	;# 
  1196  0096                     	;# 
  1197  0097                     	;# 
  1198  0098                     	;# 
  1199  0099                     	;# 
  1200  009A                     	;# 
  1201  009B                     	;# 
  1202  009C                     	;# 
  1203  009D                     	;# 
  1204  009E                     	;# 
  1205  010C                     	;# 
  1206  010D                     	;# 
  1207  010E                     	;# 
  1208  010E                     	;# 
  1209  010F                     	;# 
  1210  0110                     	;# 
  1211  0110                     	;# 
  1212  0111                     	;# 
  1213  0112                     	;# 
  1214  0112                     	;# 
  1215  0113                     	;# 
  1216  0114                     	;# 
  1217  0114                     	;# 
  1218  0115                     	;# 
  1219  0116                     	;# 
  1220  0116                     	;# 
  1221  0117                     	;# 
  1222  0119                     	;# 
  1223  0119                     	;# 
  1224  0119                     	;# 
  1225  011A                     	;# 
  1226  011A                     	;# 
  1227  011A                     	;# 
  1228  011B                     	;# 
  1229  011B                     	;# 
  1230  011B                     	;# 
  1231  011B                     	;# 
  1232  011B                     	;# 
  1233  011C                     	;# 
  1234  011C                     	;# 
  1235  011C                     	;# 
  1236  011D                     	;# 
  1237  011D                     	;# 
  1238  011D                     	;# 
  1239  011E                     	;# 
  1240  011E                     	;# 
  1241  011E                     	;# 
  1242  011F                     	;# 
  1243  011F                     	;# 
  1244  011F                     	;# 
  1245  011F                     	;# 
  1246  011F                     	;# 
  1247  018C                     	;# 
  1248  018D                     	;# 
  1249  018E                     	;# 
  1250  018F                     	;# 
  1251  0190                     	;# 
  1252  0191                     	;# 
  1253  0192                     	;# 
  1254  0196                     	;# 
  1255  0197                     	;# 
  1256  0198                     	;# 
  1257  0199                     	;# 
  1258  019A                     	;# 
  1259  019B                     	;# 
  1260  019C                     	;# 
  1261  020C                     	;# 
  1262  020C                     	;# 
  1263  020D                     	;# 
  1264  020E                     	;# 
  1265  020F                     	;# 
  1266  020F                     	;# 
  1267  0210                     	;# 
  1268  0210                     	;# 
  1269  0211                     	;# 
  1270  0211                     	;# 
  1271  0212                     	;# 
  1272  0212                     	;# 
  1273  0213                     	;# 
  1274  0214                     	;# 
  1275  0215                     	;# 
  1276  0215                     	;# 
  1277  0216                     	;# 
  1278  0216                     	;# 
  1279  0217                     	;# 
  1280  0217                     	;# 
  1281  0218                     	;# 
  1282  0218                     	;# 
  1283  0219                     	;# 
  1284  021A                     	;# 
  1285  021B                     	;# 
  1286  021B                     	;# 
  1287  021C                     	;# 
  1288  021C                     	;# 
  1289  021D                     	;# 
  1290  021D                     	;# 
  1291  021E                     	;# 
  1292  021F                     	;# 
  1293  028C                     	;# 
  1294  028C                     	;# 
  1295  028D                     	;# 
  1296  028D                     	;# 
  1297  028E                     	;# 
  1298  028F                     	;# 
  1299  0290                     	;# 
  1300  0290                     	;# 
  1301  0291                     	;# 
  1302  0292                     	;# 
  1303  0292                     	;# 
  1304  0293                     	;# 
  1305  0293                     	;# 
  1306  0294                     	;# 
  1307  0295                     	;# 
  1308  0296                     	;# 
  1309  0296                     	;# 
  1310  0297                     	;# 
  1311  0298                     	;# 
  1312  0298                     	;# 
  1313  0299                     	;# 
  1314  0299                     	;# 
  1315  029A                     	;# 
  1316  029B                     	;# 
  1317  029C                     	;# 
  1318  029C                     	;# 
  1319  029D                     	;# 
  1320  030C                     	;# 
  1321  030C                     	;# 
  1322  030D                     	;# 
  1323  030E                     	;# 
  1324  030F                     	;# 
  1325  0310                     	;# 
  1326  0310                     	;# 
  1327  0311                     	;# 
  1328  0312                     	;# 
  1329  0313                     	;# 
  1330  0314                     	;# 
  1331  0314                     	;# 
  1332  0315                     	;# 
  1333  0316                     	;# 
  1334  0317                     	;# 
  1335  0318                     	;# 
  1336  0318                     	;# 
  1337  0319                     	;# 
  1338  031A                     	;# 
  1339  031B                     	;# 
  1340  031C                     	;# 
  1341  031C                     	;# 
  1342  031D                     	;# 
  1343  031E                     	;# 
  1344  031F                     	;# 
  1345  038C                     	;# 
  1346  038C                     	;# 
  1347  038D                     	;# 
  1348  038E                     	;# 
  1349  0390                     	;# 
  1350  0390                     	;# 
  1351  0391                     	;# 
  1352  0392                     	;# 
  1353  040C                     	;# 
  1354  040D                     	;# 
  1355  040E                     	;# 
  1356  040F                     	;# 
  1357  0410                     	;# 
  1358  0411                     	;# 
  1359  0416                     	;# 
  1360  0416                     	;# 
  1361  0417                     	;# 
  1362  0418                     	;# 
  1363  0418                     	;# 
  1364  0419                     	;# 
  1365  041A                     	;# 
  1366  041A                     	;# 
  1367  041B                     	;# 
  1368  041C                     	;# 
  1369  041C                     	;# 
  1370  041D                     	;# 
  1371  041E                     	;# 
  1372  041F                     	;# 
  1373  048C                     	;# 
  1374  048C                     	;# 
  1375  048D                     	;# 
  1376  048E                     	;# 
  1377  048F                     	;# 
  1378  048F                     	;# 
  1379  0490                     	;# 
  1380  0491                     	;# 
  1381  0492                     	;# 
  1382  0492                     	;# 
  1383  0493                     	;# 
  1384  0494                     	;# 
  1385  0495                     	;# 
  1386  0495                     	;# 
  1387  0496                     	;# 
  1388  0497                     	;# 
  1389  0498                     	;# 
  1390  0499                     	;# 
  1391  049A                     	;# 
  1392  049B                     	;# 
  1393  049C                     	;# 
  1394  049D                     	;# 
  1395  050C                     	;# 
  1396  050C                     	;# 
  1397  050D                     	;# 
  1398  050E                     	;# 
  1399  050F                     	;# 
  1400  050F                     	;# 
  1401  0510                     	;# 
  1402  0511                     	;# 
  1403  0512                     	;# 
  1404  0512                     	;# 
  1405  0513                     	;# 
  1406  0514                     	;# 
  1407  0515                     	;# 
  1408  0515                     	;# 
  1409  0516                     	;# 
  1410  0517                     	;# 
  1411  0518                     	;# 
  1412  0519                     	;# 
  1413  051A                     	;# 
  1414  051B                     	;# 
  1415  051C                     	;# 
  1416  051D                     	;# 
  1417  058C                     	;# 
  1418  058C                     	;# 
  1419  058D                     	;# 
  1420  058E                     	;# 
  1421  058F                     	;# 
  1422  058F                     	;# 
  1423  0590                     	;# 
  1424  0591                     	;# 
  1425  0592                     	;# 
  1426  0593                     	;# 
  1427  060C                     	;# 
  1428  060D                     	;# 
  1429  060E                     	;# 
  1430  060F                     	;# 
  1431  0610                     	;# 
  1432  0611                     	;# 
  1433  0612                     	;# 
  1434  0613                     	;# 
  1435  0614                     	;# 
  1436  0616                     	;# 
  1437  0617                     	;# 
  1438  0618                     	;# 
  1439  0619                     	;# 
  1440  061A                     	;# 
  1441  061B                     	;# 
  1442  061C                     	;# 
  1443  061D                     	;# 
  1444  061E                     	;# 
  1445  068C                     	;# 
  1446  068D                     	;# 
  1447  068E                     	;# 
  1448  068F                     	;# 
  1449  0690                     	;# 
  1450  0691                     	;# 
  1451  0692                     	;# 
  1452  0693                     	;# 
  1453  0694                     	;# 
  1454  070C                     	;# 
  1455  070D                     	;# 
  1456  070E                     	;# 
  1457  070F                     	;# 
  1458  0710                     	;# 
  1459  0711                     	;# 
  1460  0712                     	;# 
  1461  0713                     	;# 
  1462  0714                     	;# 
  1463  0716                     	;# 
  1464  0717                     	;# 
  1465  0718                     	;# 
  1466  0719                     	;# 
  1467  071A                     	;# 
  1468  071B                     	;# 
  1469  071C                     	;# 
  1470  071D                     	;# 
  1471  071E                     	;# 
  1472  0796                     	;# 
  1473  0797                     	;# 
  1474  0798                     	;# 
  1475  0799                     	;# 
  1476  079A                     	;# 
  1477  079B                     	;# 
  1478  080C                     	;# 
  1479  080D                     	;# 
  1480  080E                     	;# 
  1481  080F                     	;# 
  1482  0810                     	;# 
  1483  0811                     	;# 
  1484  0812                     	;# 
  1485  0813                     	;# 
  1486  0814                     	;# 
  1487  081A                     	;# 
  1488  081B                     	;# 
  1489  081C                     	;# 
  1490  081D                     	;# 
  1491  081E                     	;# 
  1492  081F                     	;# 
  1493  088C                     	;# 
  1494  088D                     	;# 
  1495  088E                     	;# 
  1496  088F                     	;# 
  1497  0890                     	;# 
  1498  0891                     	;# 
  1499  0892                     	;# 
  1500  0893                     	;# 
  1501  0895                     	;# 
  1502  0896                     	;# 
  1503  0897                     	;# 
  1504  0898                     	;# 
  1505  0899                     	;# 
  1506  089A                     	;# 
  1507  089B                     	;# 
  1508  090C                     	;# 
  1509  090E                     	;# 
  1510  090F                     	;# 
  1511  091F                     	;# 
  1512  091F                     	;# 
  1513  098F                     	;# 
  1514  098F                     	;# 
  1515  0990                     	;# 
  1516  0991                     	;# 
  1517  0992                     	;# 
  1518  0993                     	;# 
  1519  0994                     	;# 
  1520  0995                     	;# 
  1521  0996                     	;# 
  1522  0997                     	;# 
  1523  0E0F                     	;# 
  1524  0E10                     	;# 
  1525  0E11                     	;# 
  1526  0E12                     	;# 
  1527  0E13                     	;# 
  1528  0E14                     	;# 
  1529  0E15                     	;# 
  1530  0E16                     	;# 
  1531  0E17                     	;# 
  1532  0E18                     	;# 
  1533  0E19                     	;# 
  1534  0E1A                     	;# 
  1535  0E1B                     	;# 
  1536  0E1C                     	;# 
  1537  0E1D                     	;# 
  1538  0E1E                     	;# 
  1539  0E1F                     	;# 
  1540  0E20                     	;# 
  1541  0E21                     	;# 
  1542  0E22                     	;# 
  1543  0E23                     	;# 
  1544  0E24                     	;# 
  1545  0E25                     	;# 
  1546  0E26                     	;# 
  1547  0E27                     	;# 
  1548  0E28                     	;# 
  1549  0E29                     	;# 
  1550  0E2A                     	;# 
  1551  0E2B                     	;# 
  1552  0E2C                     	;# 
  1553  0E2D                     	;# 
  1554  0E2E                     	;# 
  1555  0E2F                     	;# 
  1556  0E30                     	;# 
  1557  0E31                     	;# 
  1558  0E32                     	;# 
  1559  0E33                     	;# 
  1560  0E34                     	;# 
  1561  0E35                     	;# 
  1562  0E36                     	;# 
  1563  0E37                     	;# 
  1564  0E8F                     	;# 
  1565  0E90                     	;# 
  1566  0E91                     	;# 
  1567  0E92                     	;# 
  1568  0E93                     	;# 
  1569  0E94                     	;# 
  1570  0E95                     	;# 
  1571  0E96                     	;# 
  1572  0E97                     	;# 
  1573  0E9C                     	;# 
  1574  0E9D                     	;# 
  1575  0E9E                     	;# 
  1576  0EA1                     	;# 
  1577  0EA2                     	;# 
  1578  0EA3                     	;# 
  1579  0EA4                     	;# 
  1580  0EA5                     	;# 
  1581  0EA9                     	;# 
  1582  0EAA                     	;# 
  1583  0EAB                     	;# 
  1584  0EAC                     	;# 
  1585  0EB1                     	;# 
  1586  0EB2                     	;# 
  1587  0EB3                     	;# 
  1588  0EB8                     	;# 
  1589  0EB9                     	;# 
  1590  0EBA                     	;# 
  1591  0EBB                     	;# 
  1592  0EBC                     	;# 
  1593  0EBD                     	;# 
  1594  0EBE                     	;# 
  1595  0EC3                     	;# 
  1596  0EC5                     	;# 
  1597  0EC6                     	;# 
  1598  0EC7                     	;# 
  1599  0EC8                     	;# 
  1600  0EC9                     	;# 
  1601  0ECA                     	;# 
  1602  0ECB                     	;# 
  1603  0ECC                     	;# 
  1604  0F10                     	;# 
  1605  0F11                     	;# 
  1606  0F12                     	;# 
  1607  0F13                     	;# 
  1608  0F14                     	;# 
  1609  0F15                     	;# 
  1610  0F16                     	;# 
  1611  0F17                     	;# 
  1612  0F18                     	;# 
  1613  0F19                     	;# 
  1614  0F1A                     	;# 
  1615  0F1B                     	;# 
  1616  0F1C                     	;# 
  1617  0F1D                     	;# 
  1618  0F1E                     	;# 
  1619  0F1F                     	;# 
  1620  0F20                     	;# 
  1621  0F21                     	;# 
  1622  0F22                     	;# 
  1623  0F23                     	;# 
  1624  0F24                     	;# 
  1625  0F25                     	;# 
  1626  0F26                     	;# 
  1627  0F27                     	;# 
  1628  0F38                     	;# 
  1629  0F39                     	;# 
  1630  0F3A                     	;# 
  1631  0F3B                     	;# 
  1632  0F3C                     	;# 
  1633  0F3D                     	;# 
  1634  0F3E                     	;# 
  1635  0F3F                     	;# 
  1636  0F40                     	;# 
  1637  0F41                     	;# 
  1638  0F43                     	;# 
  1639  0F44                     	;# 
  1640  0F45                     	;# 
  1641  0F46                     	;# 
  1642  0F47                     	;# 
  1643  0F48                     	;# 
  1644  0F49                     	;# 
  1645  0F4A                     	;# 
  1646  0F4B                     	;# 
  1647  0F4C                     	;# 
  1648  0F4E                     	;# 
  1649  0F4F                     	;# 
  1650  0F50                     	;# 
  1651  0F51                     	;# 
  1652  0F52                     	;# 
  1653  0F53                     	;# 
  1654  0F54                     	;# 
  1655  0F55                     	;# 
  1656  0F56                     	;# 
  1657  0F57                     	;# 
  1658  0F65                     	;# 
  1659  0F68                     	;# 
  1660  0F69                     	;# 
  1661  0F6A                     	;# 
  1662  0F6B                     	;# 
  1663  0FE4                     	;# 
  1664  0FE5                     	;# 
  1665  0FE6                     	;# 
  1666  0FE7                     	;# 
  1667  0FE8                     	;# 
  1668  0FE9                     	;# 
  1669  0FEA                     	;# 
  1670  0FEB                     	;# 
  1671  0FED                     	;# 
  1672  0FEE                     	;# 
  1673  0FEF                     	;# 
  1674  0000                     	;# 
  1675  0001                     	;# 
  1676  0002                     	;# 
  1677  0003                     	;# 
  1678  0004                     	;# 
  1679  0005                     	;# 
  1680  0006                     	;# 
  1681  0007                     	;# 
  1682  0008                     	;# 
  1683  0009                     	;# 
  1684  000A                     	;# 
  1685  000B                     	;# 
  1686  000C                     	;# 
  1687  000D                     	;# 
  1688  000E                     	;# 
  1689  0010                     	;# 
  1690  0011                     	;# 
  1691  0012                     	;# 
  1692  0013                     	;# 
  1693  0016                     	;# 
  1694  0017                     	;# 
  1695  0018                     	;# 
  1696  001C                     	;# 
  1697  001C                     	;# 
  1698  001D                     	;# 
  1699  001D                     	;# 
  1700  001E                     	;# 
  1701  001F                     	;# 
  1702  008C                     	;# 
  1703  008C                     	;# 
  1704  008D                     	;# 
  1705  008E                     	;# 
  1706  008E                     	;# 
  1707  008F                     	;# 
  1708  0090                     	;# 
  1709  0090                     	;# 
  1710  0091                     	;# 
  1711  0093                     	;# 
  1712  0094                     	;# 
  1713  0095                     	;# 
  1714  0096                     	;# 
  1715  0097                     	;# 
  1716  0098                     	;# 
  1717  0099                     	;# 
  1718  009A                     	;# 
  1719  009B                     	;# 
  1720  009C                     	;# 
  1721  009D                     	;# 
  1722  009E                     	;# 
  1723  010C                     	;# 
  1724  010D                     	;# 
  1725  010E                     	;# 
  1726  010E                     	;# 
  1727  010F                     	;# 
  1728  0110                     	;# 
  1729  0110                     	;# 
  1730  0111                     	;# 
  1731  0112                     	;# 
  1732  0112                     	;# 
  1733  0113                     	;# 
  1734  0114                     	;# 
  1735  0114                     	;# 
  1736  0115                     	;# 
  1737  0116                     	;# 
  1738  0116                     	;# 
  1739  0117                     	;# 
  1740  0119                     	;# 
  1741  0119                     	;# 
  1742  0119                     	;# 
  1743  011A                     	;# 
  1744  011A                     	;# 
  1745  011A                     	;# 
  1746  011B                     	;# 
  1747  011B                     	;# 
  1748  011B                     	;# 
  1749  011B                     	;# 
  1750  011B                     	;# 
  1751  011C                     	;# 
  1752  011C                     	;# 
  1753  011C                     	;# 
  1754  011D                     	;# 
  1755  011D                     	;# 
  1756  011D                     	;# 
  1757  011E                     	;# 
  1758  011E                     	;# 
  1759  011E                     	;# 
  1760  011F                     	;# 
  1761  011F                     	;# 
  1762  011F                     	;# 
  1763  011F                     	;# 
  1764  011F                     	;# 
  1765  018C                     	;# 
  1766  018D                     	;# 
  1767  018E                     	;# 
  1768  018F                     	;# 
  1769  0190                     	;# 
  1770  0191                     	;# 
  1771  0192                     	;# 
  1772  0196                     	;# 
  1773  0197                     	;# 
  1774  0198                     	;# 
  1775  0199                     	;# 
  1776  019A                     	;# 
  1777  019B                     	;# 
  1778  019C                     	;# 
  1779  020C                     	;# 
  1780  020C                     	;# 
  1781  020D                     	;# 
  1782  020E                     	;# 
  1783  020F                     	;# 
  1784  020F                     	;# 
  1785  0210                     	;# 
  1786  0210                     	;# 
  1787  0211                     	;# 
  1788  0211                     	;# 
  1789  0212                     	;# 
  1790  0212                     	;# 
  1791  0213                     	;# 
  1792  0214                     	;# 
  1793  0215                     	;# 
  1794  0215                     	;# 
  1795  0216                     	;# 
  1796  0216                     	;# 
  1797  0217                     	;# 
  1798  0217                     	;# 
  1799  0218                     	;# 
  1800  0218                     	;# 
  1801  0219                     	;# 
  1802  021A                     	;# 
  1803  021B                     	;# 
  1804  021B                     	;# 
  1805  021C                     	;# 
  1806  021C                     	;# 
  1807  021D                     	;# 
  1808  021D                     	;# 
  1809  021E                     	;# 
  1810  021F                     	;# 
  1811  028C                     	;# 
  1812  028C                     	;# 
  1813  028D                     	;# 
  1814  028D                     	;# 
  1815  028E                     	;# 
  1816  028F                     	;# 
  1817  0290                     	;# 
  1818  0290                     	;# 
  1819  0291                     	;# 
  1820  0292                     	;# 
  1821  0292                     	;# 
  1822  0293                     	;# 
  1823  0293                     	;# 
  1824  0294                     	;# 
  1825  0295                     	;# 
  1826  0296                     	;# 
  1827  0296                     	;# 
  1828  0297                     	;# 
  1829  0298                     	;# 
  1830  0298                     	;# 
  1831  0299                     	;# 
  1832  0299                     	;# 
  1833  029A                     	;# 
  1834  029B                     	;# 
  1835  029C                     	;# 
  1836  029C                     	;# 
  1837  029D                     	;# 
  1838  030C                     	;# 
  1839  030C                     	;# 
  1840  030D                     	;# 
  1841  030E                     	;# 
  1842  030F                     	;# 
  1843  0310                     	;# 
  1844  0310                     	;# 
  1845  0311                     	;# 
  1846  0312                     	;# 
  1847  0313                     	;# 
  1848  0314                     	;# 
  1849  0314                     	;# 
  1850  0315                     	;# 
  1851  0316                     	;# 
  1852  0317                     	;# 
  1853  0318                     	;# 
  1854  0318                     	;# 
  1855  0319                     	;# 
  1856  031A                     	;# 
  1857  031B                     	;# 
  1858  031C                     	;# 
  1859  031C                     	;# 
  1860  031D                     	;# 
  1861  031E                     	;# 
  1862  031F                     	;# 
  1863  038C                     	;# 
  1864  038C                     	;# 
  1865  038D                     	;# 
  1866  038E                     	;# 
  1867  0390                     	;# 
  1868  0390                     	;# 
  1869  0391                     	;# 
  1870  0392                     	;# 
  1871  040C                     	;# 
  1872  040D                     	;# 
  1873  040E                     	;# 
  1874  040F                     	;# 
  1875  0410                     	;# 
  1876  0411                     	;# 
  1877  0416                     	;# 
  1878  0416                     	;# 
  1879  0417                     	;# 
  1880  0418                     	;# 
  1881  0418                     	;# 
  1882  0419                     	;# 
  1883  041A                     	;# 
  1884  041A                     	;# 
  1885  041B                     	;# 
  1886  041C                     	;# 
  1887  041C                     	;# 
  1888  041D                     	;# 
  1889  041E                     	;# 
  1890  041F                     	;# 
  1891  048C                     	;# 
  1892  048C                     	;# 
  1893  048D                     	;# 
  1894  048E                     	;# 
  1895  048F                     	;# 
  1896  048F                     	;# 
  1897  0490                     	;# 
  1898  0491                     	;# 
  1899  0492                     	;# 
  1900  0492                     	;# 
  1901  0493                     	;# 
  1902  0494                     	;# 
  1903  0495                     	;# 
  1904  0495                     	;# 
  1905  0496                     	;# 
  1906  0497                     	;# 
  1907  0498                     	;# 
  1908  0499                     	;# 
  1909  049A                     	;# 
  1910  049B                     	;# 
  1911  049C                     	;# 
  1912  049D                     	;# 
  1913  050C                     	;# 
  1914  050C                     	;# 
  1915  050D                     	;# 
  1916  050E                     	;# 
  1917  050F                     	;# 
  1918  050F                     	;# 
  1919  0510                     	;# 
  1920  0511                     	;# 
  1921  0512                     	;# 
  1922  0512                     	;# 
  1923  0513                     	;# 
  1924  0514                     	;# 
  1925  0515                     	;# 
  1926  0515                     	;# 
  1927  0516                     	;# 
  1928  0517                     	;# 
  1929  0518                     	;# 
  1930  0519                     	;# 
  1931  051A                     	;# 
  1932  051B                     	;# 
  1933  051C                     	;# 
  1934  051D                     	;# 
  1935  058C                     	;# 
  1936  058C                     	;# 
  1937  058D                     	;# 
  1938  058E                     	;# 
  1939  058F                     	;# 
  1940  058F                     	;# 
  1941  0590                     	;# 
  1942  0591                     	;# 
  1943  0592                     	;# 
  1944  0593                     	;# 
  1945  060C                     	;# 
  1946  060D                     	;# 
  1947  060E                     	;# 
  1948  060F                     	;# 
  1949  0610                     	;# 
  1950  0611                     	;# 
  1951  0612                     	;# 
  1952  0613                     	;# 
  1953  0614                     	;# 
  1954  0616                     	;# 
  1955  0617                     	;# 
  1956  0618                     	;# 
  1957  0619                     	;# 
  1958  061A                     	;# 
  1959  061B                     	;# 
  1960  061C                     	;# 
  1961  061D                     	;# 
  1962  061E                     	;# 
  1963  068C                     	;# 
  1964  068D                     	;# 
  1965  068E                     	;# 
  1966  068F                     	;# 
  1967  0690                     	;# 
  1968  0691                     	;# 
  1969  0692                     	;# 
  1970  0693                     	;# 
  1971  0694                     	;# 
  1972  070C                     	;# 
  1973  070D                     	;# 
  1974  070E                     	;# 
  1975  070F                     	;# 
  1976  0710                     	;# 
  1977  0711                     	;# 
  1978  0712                     	;# 
  1979  0713                     	;# 
  1980  0714                     	;# 
  1981  0716                     	;# 
  1982  0717                     	;# 
  1983  0718                     	;# 
  1984  0719                     	;# 
  1985  071A                     	;# 
  1986  071B                     	;# 
  1987  071C                     	;# 
  1988  071D                     	;# 
  1989  071E                     	;# 
  1990  0796                     	;# 
  1991  0797                     	;# 
  1992  0798                     	;# 
  1993  0799                     	;# 
  1994  079A                     	;# 
  1995  079B                     	;# 
  1996  080C                     	;# 
  1997  080D                     	;# 
  1998  080E                     	;# 
  1999  080F                     	;# 
  2000  0810                     	;# 
  2001  0811                     	;# 
  2002  0812                     	;# 
  2003  0813                     	;# 
  2004  0814                     	;# 
  2005  081A                     	;# 
  2006  081B                     	;# 
  2007  081C                     	;# 
  2008  081D                     	;# 
  2009  081E                     	;# 
  2010  081F                     	;# 
  2011  088C                     	;# 
  2012  088D                     	;# 
  2013  088E                     	;# 
  2014  088F                     	;# 
  2015  0890                     	;# 
  2016  0891                     	;# 
  2017  0892                     	;# 
  2018  0893                     	;# 
  2019  0895                     	;# 
  2020  0896                     	;# 
  2021  0897                     	;# 
  2022  0898                     	;# 
  2023  0899                     	;# 
  2024  089A                     	;# 
  2025  089B                     	;# 
  2026  090C                     	;# 
  2027  090E                     	;# 
  2028  090F                     	;# 
  2029  091F                     	;# 
  2030  091F                     	;# 
  2031  098F                     	;# 
  2032  098F                     	;# 
  2033  0990                     	;# 
  2034  0991                     	;# 
  2035  0992                     	;# 
  2036  0993                     	;# 
  2037  0994                     	;# 
  2038  0995                     	;# 
  2039  0996                     	;# 
  2040  0997                     	;# 
  2041  0E0F                     	;# 
  2042  0E10                     	;# 
  2043  0E11                     	;# 
  2044  0E12                     	;# 
  2045  0E13                     	;# 
  2046  0E14                     	;# 
  2047  0E15                     	;# 
  2048  0E16                     	;# 
  2049  0E17                     	;# 
  2050  0E18                     	;# 
  2051  0E19                     	;# 
  2052  0E1A                     	;# 
  2053  0E1B                     	;# 
  2054  0E1C                     	;# 
  2055  0E1D                     	;# 
  2056  0E1E                     	;# 
  2057  0E1F                     	;# 
  2058  0E20                     	;# 
  2059  0E21                     	;# 
  2060  0E22                     	;# 
  2061  0E23                     	;# 
  2062  0E24                     	;# 
  2063  0E25                     	;# 
  2064  0E26                     	;# 
  2065  0E27                     	;# 
  2066  0E28                     	;# 
  2067  0E29                     	;# 
  2068  0E2A                     	;# 
  2069  0E2B                     	;# 
  2070  0E2C                     	;# 
  2071  0E2D                     	;# 
  2072  0E2E                     	;# 
  2073  0E2F                     	;# 
  2074  0E30                     	;# 
  2075  0E31                     	;# 
  2076  0E32                     	;# 
  2077  0E33                     	;# 
  2078  0E34                     	;# 
  2079  0E35                     	;# 
  2080  0E36                     	;# 
  2081  0E37                     	;# 
  2082  0E8F                     	;# 
  2083  0E90                     	;# 
  2084  0E91                     	;# 
  2085  0E92                     	;# 
  2086  0E93                     	;# 
  2087  0E94                     	;# 
  2088  0E95                     	;# 
  2089  0E96                     	;# 
  2090  0E97                     	;# 
  2091  0E9C                     	;# 
  2092  0E9D                     	;# 
  2093  0E9E                     	;# 
  2094  0EA1                     	;# 
  2095  0EA2                     	;# 
  2096  0EA3                     	;# 
  2097  0EA4                     	;# 
  2098  0EA5                     	;# 
  2099  0EA9                     	;# 
  2100  0EAA                     	;# 
  2101  0EAB                     	;# 
  2102  0EAC                     	;# 
  2103  0EB1                     	;# 
  2104  0EB2                     	;# 
  2105  0EB3                     	;# 
  2106  0EB8                     	;# 
  2107  0EB9                     	;# 
  2108  0EBA                     	;# 
  2109  0EBB                     	;# 
  2110  0EBC                     	;# 
  2111  0EBD                     	;# 
  2112  0EBE                     	;# 
  2113  0EC3                     	;# 
  2114  0EC5                     	;# 
  2115  0EC6                     	;# 
  2116  0EC7                     	;# 
  2117  0EC8                     	;# 
  2118  0EC9                     	;# 
  2119  0ECA                     	;# 
  2120  0ECB                     	;# 
  2121  0ECC                     	;# 
  2122  0F10                     	;# 
  2123  0F11                     	;# 
  2124  0F12                     	;# 
  2125  0F13                     	;# 
  2126  0F14                     	;# 
  2127  0F15                     	;# 
  2128  0F16                     	;# 
  2129  0F17                     	;# 
  2130  0F18                     	;# 
  2131  0F19                     	;# 
  2132  0F1A                     	;# 
  2133  0F1B                     	;# 
  2134  0F1C                     	;# 
  2135  0F1D                     	;# 
  2136  0F1E                     	;# 
  2137  0F1F                     	;# 
  2138  0F20                     	;# 
  2139  0F21                     	;# 
  2140  0F22                     	;# 
  2141  0F23                     	;# 
  2142  0F24                     	;# 
  2143  0F25                     	;# 
  2144  0F26                     	;# 
  2145  0F27                     	;# 
  2146  0F38                     	;# 
  2147  0F39                     	;# 
  2148  0F3A                     	;# 
  2149  0F3B                     	;# 
  2150  0F3C                     	;# 
  2151  0F3D                     	;# 
  2152  0F3E                     	;# 
  2153  0F3F                     	;# 
  2154  0F40                     	;# 
  2155  0F41                     	;# 
  2156  0F43                     	;# 
  2157  0F44                     	;# 
  2158  0F45                     	;# 
  2159  0F46                     	;# 
  2160  0F47                     	;# 
  2161  0F48                     	;# 
  2162  0F49                     	;# 
  2163  0F4A                     	;# 
  2164  0F4B                     	;# 
  2165  0F4C                     	;# 
  2166  0F4E                     	;# 
  2167  0F4F                     	;# 
  2168  0F50                     	;# 
  2169  0F51                     	;# 
  2170  0F52                     	;# 
  2171  0F53                     	;# 
  2172  0F54                     	;# 
  2173  0F55                     	;# 
  2174  0F56                     	;# 
  2175  0F57                     	;# 
  2176  0F65                     	;# 
  2177  0F68                     	;# 
  2178  0F69                     	;# 
  2179  0F6A                     	;# 
  2180  0F6B                     	;# 
  2181  0FE4                     	;# 
  2182  0FE5                     	;# 
  2183  0FE6                     	;# 
  2184  0FE7                     	;# 
  2185  0FE8                     	;# 
  2186  0FE9                     	;# 
  2187  0FEA                     	;# 
  2188  0FEB                     	;# 
  2189  0FED                     	;# 
  2190  0FEE                     	;# 
  2191  0FEF                     	;# 
  2192  0000                     	;# 
  2193  0001                     	;# 
  2194  0002                     	;# 
  2195  0003                     	;# 
  2196  0004                     	;# 
  2197  0005                     	;# 
  2198  0006                     	;# 
  2199  0007                     	;# 
  2200  0008                     	;# 
  2201  0009                     	;# 
  2202  000A                     	;# 
  2203  000B                     	;# 
  2204  000C                     	;# 
  2205  000D                     	;# 
  2206  000E                     	;# 
  2207  0010                     	;# 
  2208  0011                     	;# 
  2209  0012                     	;# 
  2210  0013                     	;# 
  2211  0016                     	;# 
  2212  0017                     	;# 
  2213  0018                     	;# 
  2214  001C                     	;# 
  2215  001C                     	;# 
  2216  001D                     	;# 
  2217  001D                     	;# 
  2218  001E                     	;# 
  2219  001F                     	;# 
  2220  008C                     	;# 
  2221  008C                     	;# 
  2222  008D                     	;# 
  2223  008E                     	;# 
  2224  008E                     	;# 
  2225  008F                     	;# 
  2226  0090                     	;# 
  2227  0090                     	;# 
  2228  0091                     	;# 
  2229  0093                     	;# 
  2230  0094                     	;# 
  2231  0095                     	;# 
  2232  0096                     	;# 
  2233  0097                     	;# 
  2234  0098                     	;# 
  2235  0099                     	;# 
  2236  009A                     	;# 
  2237  009B                     	;# 
  2238  009C                     	;# 
  2239  009D                     	;# 
  2240  009E                     	;# 
  2241  010C                     	;# 
  2242  010D                     	;# 
  2243  010E                     	;# 
  2244  010E                     	;# 
  2245  010F                     	;# 
  2246  0110                     	;# 
  2247  0110                     	;# 
  2248  0111                     	;# 
  2249  0112                     	;# 
  2250  0112                     	;# 
  2251  0113                     	;# 
  2252  0114                     	;# 
  2253  0114                     	;# 
  2254  0115                     	;# 
  2255  0116                     	;# 
  2256  0116                     	;# 
  2257  0117                     	;# 
  2258  0119                     	;# 
  2259  0119                     	;# 
  2260  0119                     	;# 
  2261  011A                     	;# 
  2262  011A                     	;# 
  2263  011A                     	;# 
  2264  011B                     	;# 
  2265  011B                     	;# 
  2266  011B                     	;# 
  2267  011B                     	;# 
  2268  011B                     	;# 
  2269  011C                     	;# 
  2270  011C                     	;# 
  2271  011C                     	;# 
  2272  011D                     	;# 
  2273  011D                     	;# 
  2274  011D                     	;# 
  2275  011E                     	;# 
  2276  011E                     	;# 
  2277  011E                     	;# 
  2278  011F                     	;# 
  2279  011F                     	;# 
  2280  011F                     	;# 
  2281  011F                     	;# 
  2282  011F                     	;# 
  2283  018C                     	;# 
  2284  018D                     	;# 
  2285  018E                     	;# 
  2286  018F                     	;# 
  2287  0190                     	;# 
  2288  0191                     	;# 
  2289  0192                     	;# 
  2290  0196                     	;# 
  2291  0197                     	;# 
  2292  0198                     	;# 
  2293  0199                     	;# 
  2294  019A                     	;# 
  2295  019B                     	;# 
  2296  019C                     	;# 
  2297  020C                     	;# 
  2298  020C                     	;# 
  2299  020D                     	;# 
  2300  020E                     	;# 
  2301  020F                     	;# 
  2302  020F                     	;# 
  2303  0210                     	;# 
  2304  0210                     	;# 
  2305  0211                     	;# 
  2306  0211                     	;# 
  2307  0212                     	;# 
  2308  0212                     	;# 
  2309  0213                     	;# 
  2310  0214                     	;# 
  2311  0215                     	;# 
  2312  0215                     	;# 
  2313  0216                     	;# 
  2314  0216                     	;# 
  2315  0217                     	;# 
  2316  0217                     	;# 
  2317  0218                     	;# 
  2318  0218                     	;# 
  2319  0219                     	;# 
  2320  021A                     	;# 
  2321  021B                     	;# 
  2322  021B                     	;# 
  2323  021C                     	;# 
  2324  021C                     	;# 
  2325  021D                     	;# 
  2326  021D                     	;# 
  2327  021E                     	;# 
  2328  021F                     	;# 
  2329  028C                     	;# 
  2330  028C                     	;# 
  2331  028D                     	;# 
  2332  028D                     	;# 
  2333  028E                     	;# 
  2334  028F                     	;# 
  2335  0290                     	;# 
  2336  0290                     	;# 
  2337  0291                     	;# 
  2338  0292                     	;# 
  2339  0292                     	;# 
  2340  0293                     	;# 
  2341  0293                     	;# 
  2342  0294                     	;# 
  2343  0295                     	;# 
  2344  0296                     	;# 
  2345  0296                     	;# 
  2346  0297                     	;# 
  2347  0298                     	;# 
  2348  0298                     	;# 
  2349  0299                     	;# 
  2350  0299                     	;# 
  2351  029A                     	;# 
  2352  029B                     	;# 
  2353  029C                     	;# 
  2354  029C                     	;# 
  2355  029D                     	;# 
  2356  030C                     	;# 
  2357  030C                     	;# 
  2358  030D                     	;# 
  2359  030E                     	;# 
  2360  030F                     	;# 
  2361  0310                     	;# 
  2362  0310                     	;# 
  2363  0311                     	;# 
  2364  0312                     	;# 
  2365  0313                     	;# 
  2366  0314                     	;# 
  2367  0314                     	;# 
  2368  0315                     	;# 
  2369  0316                     	;# 
  2370  0317                     	;# 
  2371  0318                     	;# 
  2372  0318                     	;# 
  2373  0319                     	;# 
  2374  031A                     	;# 
  2375  031B                     	;# 
  2376  031C                     	;# 
  2377  031C                     	;# 
  2378  031D                     	;# 
  2379  031E                     	;# 
  2380  031F                     	;# 
  2381  038C                     	;# 
  2382  038C                     	;# 
  2383  038D                     	;# 
  2384  038E                     	;# 
  2385  0390                     	;# 
  2386  0390                     	;# 
  2387  0391                     	;# 
  2388  0392                     	;# 
  2389  040C                     	;# 
  2390  040D                     	;# 
  2391  040E                     	;# 
  2392  040F                     	;# 
  2393  0410                     	;# 
  2394  0411                     	;# 
  2395  0416                     	;# 
  2396  0416                     	;# 
  2397  0417                     	;# 
  2398  0418                     	;# 
  2399  0418                     	;# 
  2400  0419                     	;# 
  2401  041A                     	;# 
  2402  041A                     	;# 
  2403  041B                     	;# 
  2404  041C                     	;# 
  2405  041C                     	;# 
  2406  041D                     	;# 
  2407  041E                     	;# 
  2408  041F                     	;# 
  2409  048C                     	;# 
  2410  048C                     	;# 
  2411  048D                     	;# 
  2412  048E                     	;# 
  2413  048F                     	;# 
  2414  048F                     	;# 
  2415  0490                     	;# 
  2416  0491                     	;# 
  2417  0492                     	;# 
  2418  0492                     	;# 
  2419  0493                     	;# 
  2420  0494                     	;# 
  2421  0495                     	;# 
  2422  0495                     	;# 
  2423  0496                     	;# 
  2424  0497                     	;# 
  2425  0498                     	;# 
  2426  0499                     	;# 
  2427  049A                     	;# 
  2428  049B                     	;# 
  2429  049C                     	;# 
  2430  049D                     	;# 
  2431  050C                     	;# 
  2432  050C                     	;# 
  2433  050D                     	;# 
  2434  050E                     	;# 
  2435  050F                     	;# 
  2436  050F                     	;# 
  2437  0510                     	;# 
  2438  0511                     	;# 
  2439  0512                     	;# 
  2440  0512                     	;# 
  2441  0513                     	;# 
  2442  0514                     	;# 
  2443  0515                     	;# 
  2444  0515                     	;# 
  2445  0516                     	;# 
  2446  0517                     	;# 
  2447  0518                     	;# 
  2448  0519                     	;# 
  2449  051A                     	;# 
  2450  051B                     	;# 
  2451  051C                     	;# 
  2452  051D                     	;# 
  2453  058C                     	;# 
  2454  058C                     	;# 
  2455  058D                     	;# 
  2456  058E                     	;# 
  2457  058F                     	;# 
  2458  058F                     	;# 
  2459  0590                     	;# 
  2460  0591                     	;# 
  2461  0592                     	;# 
  2462  0593                     	;# 
  2463  060C                     	;# 
  2464  060D                     	;# 
  2465  060E                     	;# 
  2466  060F                     	;# 
  2467  0610                     	;# 
  2468  0611                     	;# 
  2469  0612                     	;# 
  2470  0613                     	;# 
  2471  0614                     	;# 
  2472  0616                     	;# 
  2473  0617                     	;# 
  2474  0618                     	;# 
  2475  0619                     	;# 
  2476  061A                     	;# 
  2477  061B                     	;# 
  2478  061C                     	;# 
  2479  061D                     	;# 
  2480  061E                     	;# 
  2481  068C                     	;# 
  2482  068D                     	;# 
  2483  068E                     	;# 
  2484  068F                     	;# 
  2485  0690                     	;# 
  2486  0691                     	;# 
  2487  0692                     	;# 
  2488  0693                     	;# 
  2489  0694                     	;# 
  2490  070C                     	;# 
  2491  070D                     	;# 
  2492  070E                     	;# 
  2493  070F                     	;# 
  2494  0710                     	;# 
  2495  0711                     	;# 
  2496  0712                     	;# 
  2497  0713                     	;# 
  2498  0714                     	;# 
  2499  0716                     	;# 
  2500  0717                     	;# 
  2501  0718                     	;# 
  2502  0719                     	;# 
  2503  071A                     	;# 
  2504  071B                     	;# 
  2505  071C                     	;# 
  2506  071D                     	;# 
  2507  071E                     	;# 
  2508  0796                     	;# 
  2509  0797                     	;# 
  2510  0798                     	;# 
  2511  0799                     	;# 
  2512  079A                     	;# 
  2513  079B                     	;# 
  2514  080C                     	;# 
  2515  080D                     	;# 
  2516  080E                     	;# 
  2517  080F                     	;# 
  2518  0810                     	;# 
  2519  0811                     	;# 
  2520  0812                     	;# 
  2521  0813                     	;# 
  2522  0814                     	;# 
  2523  081A                     	;# 
  2524  081B                     	;# 
  2525  081C                     	;# 
  2526  081D                     	;# 
  2527  081E                     	;# 
  2528  081F                     	;# 
  2529  088C                     	;# 
  2530  088D                     	;# 
  2531  088E                     	;# 
  2532  088F                     	;# 
  2533  0890                     	;# 
  2534  0891                     	;# 
  2535  0892                     	;# 
  2536  0893                     	;# 
  2537  0895                     	;# 
  2538  0896                     	;# 
  2539  0897                     	;# 
  2540  0898                     	;# 
  2541  0899                     	;# 
  2542  089A                     	;# 
  2543  089B                     	;# 
  2544  090C                     	;# 
  2545  090E                     	;# 
  2546  090F                     	;# 
  2547  091F                     	;# 
  2548  091F                     	;# 
  2549  098F                     	;# 
  2550  098F                     	;# 
  2551  0990                     	;# 
  2552  0991                     	;# 
  2553  0992                     	;# 
  2554  0993                     	;# 
  2555  0994                     	;# 
  2556  0995                     	;# 
  2557  0996                     	;# 
  2558  0997                     	;# 
  2559  0E0F                     	;# 
  2560  0E10                     	;# 
  2561  0E11                     	;# 
  2562  0E12                     	;# 
  2563  0E13                     	;# 
  2564  0E14                     	;# 
  2565  0E15                     	;# 
  2566  0E16                     	;# 
  2567  0E17                     	;# 
  2568  0E18                     	;# 
  2569  0E19                     	;# 
  2570  0E1A                     	;# 
  2571  0E1B                     	;# 
  2572  0E1C                     	;# 
  2573  0E1D                     	;# 
  2574  0E1E                     	;# 
  2575  0E1F                     	;# 
  2576  0E20                     	;# 
  2577  0E21                     	;# 
  2578  0E22                     	;# 
  2579  0E23                     	;# 
  2580  0E24                     	;# 
  2581  0E25                     	;# 
  2582  0E26                     	;# 
  2583  0E27                     	;# 
  2584  0E28                     	;# 
  2585  0E29                     	;# 
  2586  0E2A                     	;# 
  2587  0E2B                     	;# 
  2588  0E2C                     	;# 
  2589  0E2D                     	;# 
  2590  0E2E                     	;# 
  2591  0E2F                     	;# 
  2592  0E30                     	;# 
  2593  0E31                     	;# 
  2594  0E32                     	;# 
  2595  0E33                     	;# 
  2596  0E34                     	;# 
  2597  0E35                     	;# 
  2598  0E36                     	;# 
  2599  0E37                     	;# 
  2600  0E8F                     	;# 
  2601  0E90                     	;# 
  2602  0E91                     	;# 
  2603  0E92                     	;# 
  2604  0E93                     	;# 
  2605  0E94                     	;# 
  2606  0E95                     	;# 
  2607  0E96                     	;# 
  2608  0E97                     	;# 
  2609  0E9C                     	;# 
  2610  0E9D                     	;# 
  2611  0E9E                     	;# 
  2612  0EA1                     	;# 
  2613  0EA2                     	;# 
  2614  0EA3                     	;# 
  2615  0EA4                     	;# 
  2616  0EA5                     	;# 
  2617  0EA9                     	;# 
  2618  0EAA                     	;# 
  2619  0EAB                     	;# 
  2620  0EAC                     	;# 
  2621  0EB1                     	;# 
  2622  0EB2                     	;# 
  2623  0EB3                     	;# 
  2624  0EB8                     	;# 
  2625  0EB9                     	;# 
  2626  0EBA                     	;# 
  2627  0EBB                     	;# 
  2628  0EBC                     	;# 
  2629  0EBD                     	;# 
  2630  0EBE                     	;# 
  2631  0EC3                     	;# 
  2632  0EC5                     	;# 
  2633  0EC6                     	;# 
  2634  0EC7                     	;# 
  2635  0EC8                     	;# 
  2636  0EC9                     	;# 
  2637  0ECA                     	;# 
  2638  0ECB                     	;# 
  2639  0ECC                     	;# 
  2640  0F10                     	;# 
  2641  0F11                     	;# 
  2642  0F12                     	;# 
  2643  0F13                     	;# 
  2644  0F14                     	;# 
  2645  0F15                     	;# 
  2646  0F16                     	;# 
  2647  0F17                     	;# 
  2648  0F18                     	;# 
  2649  0F19                     	;# 
  2650  0F1A                     	;# 
  2651  0F1B                     	;# 
  2652  0F1C                     	;# 
  2653  0F1D                     	;# 
  2654  0F1E                     	;# 
  2655  0F1F                     	;# 
  2656  0F20                     	;# 
  2657  0F21                     	;# 
  2658  0F22                     	;# 
  2659  0F23                     	;# 
  2660  0F24                     	;# 
  2661  0F25                     	;# 
  2662  0F26                     	;# 
  2663  0F27                     	;# 
  2664  0F38                     	;# 
  2665  0F39                     	;# 
  2666  0F3A                     	;# 
  2667  0F3B                     	;# 
  2668  0F3C                     	;# 
  2669  0F3D                     	;# 
  2670  0F3E                     	;# 
  2671  0F3F                     	;# 
  2672  0F40                     	;# 
  2673  0F41                     	;# 
  2674  0F43                     	;# 
  2675  0F44                     	;# 
  2676  0F45                     	;# 
  2677  0F46                     	;# 
  2678  0F47                     	;# 
  2679  0F48                     	;# 
  2680  0F49                     	;# 
  2681  0F4A                     	;# 
  2682  0F4B                     	;# 
  2683  0F4C                     	;# 
  2684  0F4E                     	;# 
  2685  0F4F                     	;# 
  2686  0F50                     	;# 
  2687  0F51                     	;# 
  2688  0F52                     	;# 
  2689  0F53                     	;# 
  2690  0F54                     	;# 
  2691  0F55                     	;# 
  2692  0F56                     	;# 
  2693  0F57                     	;# 
  2694  0F65                     	;# 
  2695  0F68                     	;# 
  2696  0F69                     	;# 
  2697  0F6A                     	;# 
  2698  0F6B                     	;# 
  2699  0FE4                     	;# 
  2700  0FE5                     	;# 
  2701  0FE6                     	;# 
  2702  0FE7                     	;# 
  2703  0FE8                     	;# 
  2704  0FE9                     	;# 
  2705  0FEA                     	;# 
  2706  0FEB                     	;# 
  2707  0FED                     	;# 
  2708  0FEE                     	;# 
  2709  0FEF                     	;# 
  2710  0000                     	;# 
  2711  0001                     	;# 
  2712  0002                     	;# 
  2713  0003                     	;# 
  2714  0004                     	;# 
  2715  0005                     	;# 
  2716  0006                     	;# 
  2717  0007                     	;# 
  2718  0008                     	;# 
  2719  0009                     	;# 
  2720  000A                     	;# 
  2721  000B                     	;# 
  2722  000C                     	;# 
  2723  000D                     	;# 
  2724  000E                     	;# 
  2725  0010                     	;# 
  2726  0011                     	;# 
  2727  0012                     	;# 
  2728  0013                     	;# 
  2729  0016                     	;# 
  2730  0017                     	;# 
  2731  0018                     	;# 
  2732  001C                     	;# 
  2733  001C                     	;# 
  2734  001D                     	;# 
  2735  001D                     	;# 
  2736  001E                     	;# 
  2737  001F                     	;# 
  2738  008C                     	;# 
  2739  008C                     	;# 
  2740  008D                     	;# 
  2741  008E                     	;# 
  2742  008E                     	;# 
  2743  008F                     	;# 
  2744  0090                     	;# 
  2745  0090                     	;# 
  2746  0091                     	;# 
  2747  0093                     	;# 
  2748  0094                     	;# 
  2749  0095                     	;# 
  2750  0096                     	;# 
  2751  0097                     	;# 
  2752  0098                     	;# 
  2753  0099                     	;# 
  2754  009A                     	;# 
  2755  009B                     	;# 
  2756  009C                     	;# 
  2757  009D                     	;# 
  2758  009E                     	;# 
  2759  010C                     	;# 
  2760  010D                     	;# 
  2761  010E                     	;# 
  2762  010E                     	;# 
  2763  010F                     	;# 
  2764  0110                     	;# 
  2765  0110                     	;# 
  2766  0111                     	;# 
  2767  0112                     	;# 
  2768  0112                     	;# 
  2769  0113                     	;# 
  2770  0114                     	;# 
  2771  0114                     	;# 
  2772  0115                     	;# 
  2773  0116                     	;# 
  2774  0116                     	;# 
  2775  0117                     	;# 
  2776  0119                     	;# 
  2777  0119                     	;# 
  2778  0119                     	;# 
  2779  011A                     	;# 
  2780  011A                     	;# 
  2781  011A                     	;# 
  2782  011B                     	;# 
  2783  011B                     	;# 
  2784  011B                     	;# 
  2785  011B                     	;# 
  2786  011B                     	;# 
  2787  011C                     	;# 
  2788  011C                     	;# 
  2789  011C                     	;# 
  2790  011D                     	;# 
  2791  011D                     	;# 
  2792  011D                     	;# 
  2793  011E                     	;# 
  2794  011E                     	;# 
  2795  011E                     	;# 
  2796  011F                     	;# 
  2797  011F                     	;# 
  2798  011F                     	;# 
  2799  011F                     	;# 
  2800  011F                     	;# 
  2801  018C                     	;# 
  2802  018D                     	;# 
  2803  018E                     	;# 
  2804  018F                     	;# 
  2805  0190                     	;# 
  2806  0191                     	;# 
  2807  0192                     	;# 
  2808  0196                     	;# 
  2809  0197                     	;# 
  2810  0198                     	;# 
  2811  0199                     	;# 
  2812  019A                     	;# 
  2813  019B                     	;# 
  2814  019C                     	;# 
  2815  020C                     	;# 
  2816  020C                     	;# 
  2817  020D                     	;# 
  2818  020E                     	;# 
  2819  020F                     	;# 
  2820  020F                     	;# 
  2821  0210                     	;# 
  2822  0210                     	;# 
  2823  0211                     	;# 
  2824  0211                     	;# 
  2825  0212                     	;# 
  2826  0212                     	;# 
  2827  0213                     	;# 
  2828  0214                     	;# 
  2829  0215                     	;# 
  2830  0215                     	;# 
  2831  0216                     	;# 
  2832  0216                     	;# 
  2833  0217                     	;# 
  2834  0217                     	;# 
  2835  0218                     	;# 
  2836  0218                     	;# 
  2837  0219                     	;# 
  2838  021A                     	;# 
  2839  021B                     	;# 
  2840  021B                     	;# 
  2841  021C                     	;# 
  2842  021C                     	;# 
  2843  021D                     	;# 
  2844  021D                     	;# 
  2845  021E                     	;# 
  2846  021F                     	;# 
  2847  028C                     	;# 
  2848  028C                     	;# 
  2849  028D                     	;# 
  2850  028D                     	;# 
  2851  028E                     	;# 
  2852  028F                     	;# 
  2853  0290                     	;# 
  2854  0290                     	;# 
  2855  0291                     	;# 
  2856  0292                     	;# 
  2857  0292                     	;# 
  2858  0293                     	;# 
  2859  0293                     	;# 
  2860  0294                     	;# 
  2861  0295                     	;# 
  2862  0296                     	;# 
  2863  0296                     	;# 
  2864  0297                     	;# 
  2865  0298                     	;# 
  2866  0298                     	;# 
  2867  0299                     	;# 
  2868  0299                     	;# 
  2869  029A                     	;# 
  2870  029B                     	;# 
  2871  029C                     	;# 
  2872  029C                     	;# 
  2873  029D                     	;# 
  2874  030C                     	;# 
  2875  030C                     	;# 
  2876  030D                     	;# 
  2877  030E                     	;# 
  2878  030F                     	;# 
  2879  0310                     	;# 
  2880  0310                     	;# 
  2881  0311                     	;# 
  2882  0312                     	;# 
  2883  0313                     	;# 
  2884  0314                     	;# 
  2885  0314                     	;# 
  2886  0315                     	;# 
  2887  0316                     	;# 
  2888  0317                     	;# 
  2889  0318                     	;# 
  2890  0318                     	;# 
  2891  0319                     	;# 
  2892  031A                     	;# 
  2893  031B                     	;# 
  2894  031C                     	;# 
  2895  031C                     	;# 
  2896  031D                     	;# 
  2897  031E                     	;# 
  2898  031F                     	;# 
  2899  038C                     	;# 
  2900  038C                     	;# 
  2901  038D                     	;# 
  2902  038E                     	;# 
  2903  0390                     	;# 
  2904  0390                     	;# 
  2905  0391                     	;# 
  2906  0392                     	;# 
  2907  040C                     	;# 
  2908  040D                     	;# 
  2909  040E                     	;# 
  2910  040F                     	;# 
  2911  0410                     	;# 
  2912  0411                     	;# 
  2913  0416                     	;# 
  2914  0416                     	;# 
  2915  0417                     	;# 
  2916  0418                     	;# 
  2917  0418                     	;# 
  2918  0419                     	;# 
  2919  041A                     	;# 
  2920  041A                     	;# 
  2921  041B                     	;# 
  2922  041C                     	;# 
  2923  041C                     	;# 
  2924  041D                     	;# 
  2925  041E                     	;# 
  2926  041F                     	;# 
  2927  048C                     	;# 
  2928  048C                     	;# 
  2929  048D                     	;# 
  2930  048E                     	;# 
  2931  048F                     	;# 
  2932  048F                     	;# 
  2933  0490                     	;# 
  2934  0491                     	;# 
  2935  0492                     	;# 
  2936  0492                     	;# 
  2937  0493                     	;# 
  2938  0494                     	;# 
  2939  0495                     	;# 
  2940  0495                     	;# 
  2941  0496                     	;# 
  2942  0497                     	;# 
  2943  0498                     	;# 
  2944  0499                     	;# 
  2945  049A                     	;# 
  2946  049B                     	;# 
  2947  049C                     	;# 
  2948  049D                     	;# 
  2949  050C                     	;# 
  2950  050C                     	;# 
  2951  050D                     	;# 
  2952  050E                     	;# 
  2953  050F                     	;# 
  2954  050F                     	;# 
  2955  0510                     	;# 
  2956  0511                     	;# 
  2957  0512                     	;# 
  2958  0512                     	;# 
  2959  0513                     	;# 
  2960  0514                     	;# 
  2961  0515                     	;# 
  2962  0515                     	;# 
  2963  0516                     	;# 
  2964  0517                     	;# 
  2965  0518                     	;# 
  2966  0519                     	;# 
  2967  051A                     	;# 
  2968  051B                     	;# 
  2969  051C                     	;# 
  2970  051D                     	;# 
  2971  058C                     	;# 
  2972  058C                     	;# 
  2973  058D                     	;# 
  2974  058E                     	;# 
  2975  058F                     	;# 
  2976  058F                     	;# 
  2977  0590                     	;# 
  2978  0591                     	;# 
  2979  0592                     	;# 
  2980  0593                     	;# 
  2981  060C                     	;# 
  2982  060D                     	;# 
  2983  060E                     	;# 
  2984  060F                     	;# 
  2985  0610                     	;# 
  2986  0611                     	;# 
  2987  0612                     	;# 
  2988  0613                     	;# 
  2989  0614                     	;# 
  2990  0616                     	;# 
  2991  0617                     	;# 
  2992  0618                     	;# 
  2993  0619                     	;# 
  2994  061A                     	;# 
  2995  061B                     	;# 
  2996  061C                     	;# 
  2997  061D                     	;# 
  2998  061E                     	;# 
  2999  068C                     	;# 
  3000  068D                     	;# 
  3001  068E                     	;# 
  3002  068F                     	;# 
  3003  0690                     	;# 
  3004  0691                     	;# 
  3005  0692                     	;# 
  3006  0693                     	;# 
  3007  0694                     	;# 
  3008  070C                     	;# 
  3009  070D                     	;# 
  3010  070E                     	;# 
  3011  070F                     	;# 
  3012  0710                     	;# 
  3013  0711                     	;# 
  3014  0712                     	;# 
  3015  0713                     	;# 
  3016  0714                     	;# 
  3017  0716                     	;# 
  3018  0717                     	;# 
  3019  0718                     	;# 
  3020  0719                     	;# 
  3021  071A                     	;# 
  3022  071B                     	;# 
  3023  071C                     	;# 
  3024  071D                     	;# 
  3025  071E                     	;# 
  3026  0796                     	;# 
  3027  0797                     	;# 
  3028  0798                     	;# 
  3029  0799                     	;# 
  3030  079A                     	;# 
  3031  079B                     	;# 
  3032  080C                     	;# 
  3033  080D                     	;# 
  3034  080E                     	;# 
  3035  080F                     	;# 
  3036  0810                     	;# 
  3037  0811                     	;# 
  3038  0812                     	;# 
  3039  0813                     	;# 
  3040  0814                     	;# 
  3041  081A                     	;# 
  3042  081B                     	;# 
  3043  081C                     	;# 
  3044  081D                     	;# 
  3045  081E                     	;# 
  3046  081F                     	;# 
  3047  088C                     	;# 
  3048  088D                     	;# 
  3049  088E                     	;# 
  3050  088F                     	;# 
  3051  0890                     	;# 
  3052  0891                     	;# 
  3053  0892                     	;# 
  3054  0893                     	;# 
  3055  0895                     	;# 
  3056  0896                     	;# 
  3057  0897                     	;# 
  3058  0898                     	;# 
  3059  0899                     	;# 
  3060  089A                     	;# 
  3061  089B                     	;# 
  3062  090C                     	;# 
  3063  090E                     	;# 
  3064  090F                     	;# 
  3065  091F                     	;# 
  3066  091F                     	;# 
  3067  098F                     	;# 
  3068  098F                     	;# 
  3069  0990                     	;# 
  3070  0991                     	;# 
  3071  0992                     	;# 
  3072  0993                     	;# 
  3073  0994                     	;# 
  3074  0995                     	;# 
  3075  0996                     	;# 
  3076  0997                     	;# 
  3077  0E0F                     	;# 
  3078  0E10                     	;# 
  3079  0E11                     	;# 
  3080  0E12                     	;# 
  3081  0E13                     	;# 
  3082  0E14                     	;# 
  3083  0E15                     	;# 
  3084  0E16                     	;# 
  3085  0E17                     	;# 
  3086  0E18                     	;# 
  3087  0E19                     	;# 
  3088  0E1A                     	;# 
  3089  0E1B                     	;# 
  3090  0E1C                     	;# 
  3091  0E1D                     	;# 
  3092  0E1E                     	;# 
  3093  0E1F                     	;# 
  3094  0E20                     	;# 
  3095  0E21                     	;# 
  3096  0E22                     	;# 
  3097  0E23                     	;# 
  3098  0E24                     	;# 
  3099  0E25                     	;# 
  3100  0E26                     	;# 
  3101  0E27                     	;# 
  3102  0E28                     	;# 
  3103  0E29                     	;# 
  3104  0E2A                     	;# 
  3105  0E2B                     	;# 
  3106  0E2C                     	;# 
  3107  0E2D                     	;# 
  3108  0E2E                     	;# 
  3109  0E2F                     	;# 
  3110  0E30                     	;# 
  3111  0E31                     	;# 
  3112  0E32                     	;# 
  3113  0E33                     	;# 
  3114  0E34                     	;# 
  3115  0E35                     	;# 
  3116  0E36                     	;# 
  3117  0E37                     	;# 
  3118  0E8F                     	;# 
  3119  0E90                     	;# 
  3120  0E91                     	;# 
  3121  0E92                     	;# 
  3122  0E93                     	;# 
  3123  0E94                     	;# 
  3124  0E95                     	;# 
  3125  0E96                     	;# 
  3126  0E97                     	;# 
  3127  0E9C                     	;# 
  3128  0E9D                     	;# 
  3129  0E9E                     	;# 
  3130  0EA1                     	;# 
  3131  0EA2                     	;# 
  3132  0EA3                     	;# 
  3133  0EA4                     	;# 
  3134  0EA5                     	;# 
  3135  0EA9                     	;# 
  3136  0EAA                     	;# 
  3137  0EAB                     	;# 
  3138  0EAC                     	;# 
  3139  0EB1                     	;# 
  3140  0EB2                     	;# 
  3141  0EB3                     	;# 
  3142  0EB8                     	;# 
  3143  0EB9                     	;# 
  3144  0EBA                     	;# 
  3145  0EBB                     	;# 
  3146  0EBC                     	;# 
  3147  0EBD                     	;# 
  3148  0EBE                     	;# 
  3149  0EC3                     	;# 
  3150  0EC5                     	;# 
  3151  0EC6                     	;# 
  3152  0EC7                     	;# 
  3153  0EC8                     	;# 
  3154  0EC9                     	;# 
  3155  0ECA                     	;# 
  3156  0ECB                     	;# 
  3157  0ECC                     	;# 
  3158  0F10                     	;# 
  3159  0F11                     	;# 
  3160  0F12                     	;# 
  3161  0F13                     	;# 
  3162  0F14                     	;# 
  3163  0F15                     	;# 
  3164  0F16                     	;# 
  3165  0F17                     	;# 
  3166  0F18                     	;# 
  3167  0F19                     	;# 
  3168  0F1A                     	;# 
  3169  0F1B                     	;# 
  3170  0F1C                     	;# 
  3171  0F1D                     	;# 
  3172  0F1E                     	;# 
  3173  0F1F                     	;# 
  3174  0F20                     	;# 
  3175  0F21                     	;# 
  3176  0F22                     	;# 
  3177  0F23                     	;# 
  3178  0F24                     	;# 
  3179  0F25                     	;# 
  3180  0F26                     	;# 
  3181  0F27                     	;# 
  3182  0F38                     	;# 
  3183  0F39                     	;# 
  3184  0F3A                     	;# 
  3185  0F3B                     	;# 
  3186  0F3C                     	;# 
  3187  0F3D                     	;# 
  3188  0F3E                     	;# 
  3189  0F3F                     	;# 
  3190  0F40                     	;# 
  3191  0F41                     	;# 
  3192  0F43                     	;# 
  3193  0F44                     	;# 
  3194  0F45                     	;# 
  3195  0F46                     	;# 
  3196  0F47                     	;# 
  3197  0F48                     	;# 
  3198  0F49                     	;# 
  3199  0F4A                     	;# 
  3200  0F4B                     	;# 
  3201  0F4C                     	;# 
  3202  0F4E                     	;# 
  3203  0F4F                     	;# 
  3204  0F50                     	;# 
  3205  0F51                     	;# 
  3206  0F52                     	;# 
  3207  0F53                     	;# 
  3208  0F54                     	;# 
  3209  0F55                     	;# 
  3210  0F56                     	;# 
  3211  0F57                     	;# 
  3212  0F65                     	;# 
  3213  0F68                     	;# 
  3214  0F69                     	;# 
  3215  0F6A                     	;# 
  3216  0F6B                     	;# 
  3217  0FE4                     	;# 
  3218  0FE5                     	;# 
  3219  0FE6                     	;# 
  3220  0FE7                     	;# 
  3221  0FE8                     	;# 
  3222  0FE9                     	;# 
  3223  0FEA                     	;# 
  3224  0FEB                     	;# 
  3225  0FED                     	;# 
  3226  0FEE                     	;# 
  3227  0FEF                     	;# 
  3228  0013                     _TRISCbits	set	19
  3229  0013                     _TRISC	set	19
  3230  0012                     _TRISB	set	18
  3231  000D                     _PORTB	set	13
  3232  0017                     _LATB	set	23
  3233  0011                     _TRISA	set	17
  3234  000C                     _PORTA	set	12
  3235  0016                     _LATA	set	22
  3236  008C                     _ADRESL	set	140
  3237  008D                     _ADRESH	set	141
  3238  009B                     _ADCAP	set	155
  3239  009E                     _ADPCH	set	158
  3240  009A                     _ADREF	set	154
  3241  0098                     _ADCLK	set	152
  3242  0095                     _ADCON2	set	149
  3243  0094                     _ADCON1	set	148
  3244  0093                     _ADCON0	set	147
  3245  011A                     _TX1REG	set	282
  3246  0119                     _RC1REG	set	281
  3247  011C                     _SP1BRGH	set	284
  3248  011B                     _SP1BRGL	set	283
  3249  011E                     _TX1STA	set	286
  3250  011D                     _RC1STA	set	285
  3251  011F                     _BAUD1CON	set	287
  3252  018C                     _SSP1BUF	set	396
  3253  0191                     _SSP1CON2bits	set	401
  3254  018D                     _SSP1ADD	set	397
  3255  0192                     _SSP1CON3	set	402
  3256  0190                     _SSP1CON1	set	400
  3257  018F                     _SSP1STAT	set	399
  3258  070F                     _PIR3bits	set	1807
  3259  070F                     _PIR3	set	1807
  3260  0EC6                     _SSP1DATPPS	set	3782
  3261  0EC5                     _SSP1CLKPPS	set	3781
  3262  0ECB                     _RXPPS	set	3787
  3263  0F24                     _RC4PPS	set	3876
  3264  0F23                     _RC3PPS	set	3875
  3265  0F4E                     _ANSELCbits	set	3918
  3266  0F20                     _RC0PPS	set	3872
  3267  0F4E                     _ANSELC	set	3918
  3268  0F43                     _ANSELB	set	3907
  3269  0F38                     _ANSELA	set	3896
  3270                           
  3271                           	psect	stringtext1
  3272  1800                     __pstringtext1:
  3273  1800                     STR_4:
  3274  1800  344C               	retlw	76	;'L'
  3275  1801  3461               	retlw	97	;'a'
  3276  1802  3420               	retlw	32	;' '
  3277  1803  3474               	retlw	116	;'t'
  3278  1804  3465               	retlw	101	;'e'
  3279  1805  346D               	retlw	109	;'m'
  3280  1806  3470               	retlw	112	;'p'
  3281  1807  3465               	retlw	101	;'e'
  3282  1808  3472               	retlw	114	;'r'
  3283  1809  3461               	retlw	97	;'a'
  3284  180A  3474               	retlw	116	;'t'
  3285  180B  3475               	retlw	117	;'u'
  3286  180C  3472               	retlw	114	;'r'
  3287  180D  3461               	retlw	97	;'a'
  3288  180E  3420               	retlw	32	;' '
  3289  180F  3465               	retlw	101	;'e'
  3290  1810  3473               	retlw	115	;'s'
  3291  1811  343A               	retlw	58	;':'
  3292  1812  3420               	retlw	32	;' '
  3293  1813  3425               	retlw	37	;'%'
  3294  1814  3464               	retlw	100	;'d'
  3295  1815  342E               	retlw	46	;'.'
  3296  1816  3425               	retlw	37	;'%'
  3297  1817  3464               	retlw	100	;'d'
  3298  1818  342A               	retlw	42	;'*'
  3299  1819  3443               	retlw	67	;'C'
  3300  181A  340A               	retlw	10
  3301  181B  340A               	retlw	10
  3302  181C  3400               	retlw	0
  3303                           
  3304                           	psect	stringtext2
  3305  181D                     __pstringtext2:
  3306  181D                     STR_3:
  3307  181D  3472               	retlw	114	;'r'
  3308  181E  3465               	retlw	101	;'e'
  3309  181F  3461               	retlw	97	;'a'
  3310  1820  3464               	retlw	100	;'d'
  3311  1821  3445               	retlw	69	;'E'
  3312  1822  346D               	retlw	109	;'m'
  3313  1823  3469               	retlw	105	;'i'
  3314  1824  3473               	retlw	115	;'s'
  3315  1825  3473               	retlw	115	;'s'
  3316  1826  3469               	retlw	105	;'i'
  3317  1827  3476               	retlw	118	;'v'
  3318  1828  3469               	retlw	105	;'i'
  3319  1829  3474               	retlw	116	;'t'
  3320  182A  3479               	retlw	121	;'y'
  3321  182B  343A               	retlw	58	;':'
  3322  182C  3420               	retlw	32	;' '
  3323  182D  3425               	retlw	37	;'%'
  3324  182E  3433               	retlw	51	;'3'
  3325  182F  342E               	retlw	46	;'.'
  3326  1830  3432               	retlw	50	;'2'
  3327  1831  3466               	retlw	102	;'f'
  3328  1832  340A               	retlw	10
  3329  1833  3400               	retlw	0
  3330                           
  3331                           	psect	stringtext3
  3332  1834                     __pstringtext3:
  3333  1834                     STR_2:
  3334  1834  3454               	retlw	84	;'T'
  3335  1835  346F               	retlw	111	;'o'
  3336  1836  3462               	retlw	98	;'b'
  3337  1837  346A               	retlw	106	;'j'
  3338  1838  343A               	retlw	58	;':'
  3339  1839  3420               	retlw	32	;' '
  3340  183A  3425               	retlw	37	;'%'
  3341  183B  3433               	retlw	51	;'3'
  3342  183C  342E               	retlw	46	;'.'
  3343  183D  3432               	retlw	50	;'2'
  3344  183E  3466               	retlw	102	;'f'
  3345  183F  3409               	retlw	9
  3346  1840  3425               	retlw	37	;'%'
  3347  1841  3464               	retlw	100	;'d'
  3348  1842  3409               	retlw	9
  3349  1843  3430               	retlw	48	;'0'
  3350  1844  3478               	retlw	120	;'x'
  3351  1845  3425               	retlw	37	;'%'
  3352  1846  3478               	retlw	120	;'x'
  3353  1847  340A               	retlw	10
  3354  1848  3400               	retlw	0
  3355                           
  3356                           	psect	stringtext4
  3357  1849                     __pstringtext4:
  3358  1849                     STR_1:
  3359  1849  3474               	retlw	116	;'t'
  3360  184A  3465               	retlw	101	;'e'
  3361  184B  346D               	retlw	109	;'m'
  3362  184C  3470               	retlw	112	;'p'
  3363  184D  3441               	retlw	65	;'A'
  3364  184E  346D               	retlw	109	;'m'
  3365  184F  3462               	retlw	98	;'b'
  3366  1850  343A               	retlw	58	;':'
  3367  1851  3420               	retlw	32	;' '
  3368  1852  3425               	retlw	37	;'%'
  3369  1853  3433               	retlw	51	;'3'
  3370  1854  342E               	retlw	46	;'.'
  3371  1855  3432               	retlw	50	;'2'
  3372  1856  3466               	retlw	102	;'f'
  3373  1857  340A               	retlw	10
  3374  1858  3400               	retlw	0
  3375                           
  3376                           	psect	stringtext5
  3377  1859                     __pstringtext5:
  3378  1859                     STR_5:
  3379  1859  3449               	retlw	73	;'I'
  3380  185A  344E               	retlw	78	;'N'
  3381  185B  3446               	retlw	70	;'F'
  3382  185C  3400               	retlw	0
  3383                           
  3384                           	psect	stringtext6
  3385  185D                     __pstringtext6:
  3386  185D                     STR_9:
  3387  185D  344E               	retlw	78	;'N'
  3388  185E  3441               	retlw	65	;'A'
  3389  185F  344E               	retlw	78	;'N'
  3390  1860  3400               	retlw	0
  3391                           
  3392                           	psect	stringtext7
  3393  1861                     __pstringtext7:
  3394  1861                     STR_6:
  3395  1861  3469               	retlw	105	;'i'
  3396  1862  346E               	retlw	110	;'n'
  3397  1863  3466               	retlw	102	;'f'
  3398  1864  3400               	retlw	0
  3399                           
  3400                           	psect	stringtext8
  3401  1865                     __pstringtext8:
  3402  1865                     STR_10:
  3403  1865  346E               	retlw	110	;'n'
  3404  1866  3461               	retlw	97	;'a'
  3405  1867  346E               	retlw	110	;'n'
  3406  1868  3400               	retlw	0
  3407                           
  3408                           	psect	stringtext9
  3409  1869                     __pstringtext9:
  3410  1869                     STR_13:
  3411  1869  346C               	retlw	108	;'l'
  3412  186A  3466               	retlw	102	;'f'
  3413  186B  3400               	retlw	0
  3414                           
  3415                           	psect	stringtext10
  3416  0000                     __pstringtext10:
  3417  1869                     
  3418                           	psect	cinit
  3419  07E9                     start_initialization:	
  3420                           ; #config settings
  3421                           
  3422  07E9                     __initialization:
  3423                           
  3424                           ; Clear objects allocated to BANK1
  3425  07E9  0021               	movlb	1	; select bank1
  3426  07EA  01EC               	clrf	__pbssBANK1& (0+127)
  3427  07EB  01ED               	clrf	(__pbssBANK1+1)& (0+127)
  3428  07EC  01EE               	clrf	(__pbssBANK1+2)& (0+127)
  3429  07ED  01EF               	clrf	(__pbssBANK1+3)& (0+127)
  3430                           
  3431                           ; Clear objects allocated to BANK2
  3432  07EE  304F               	movlw	low __pbssBANK2
  3433  07EF  0084               	movwf	4
  3434  07F0  3001               	movlw	high __pbssBANK2
  3435  07F1  0085               	movwf	5
  3436  07F2  300E               	movlw	14
  3437  07F3  3198  20CE  3187   	fcall	clear_ram0
  3438                           
  3439                           ; Clear objects allocated to BANK3
  3440  07F6  30A0               	movlw	low __pbssBANK3
  3441  07F7  0084               	movwf	4
  3442  07F8  3001               	movlw	high __pbssBANK3
  3443  07F9  0085               	movwf	5
  3444  07FA  3050               	movlw	80
  3445  07FB  3198  20CE         	fcall	clear_ram0
  3446  07FD                     end_of_initialization:	
  3447                           ;End of C runtime variable initialization code
  3448                           
  3449  07FD                     __end_of__initialization:
  3450  07FD  0020               	movlb	0
  3451  07FE  3195  2D28         	ljmp	_main	;jump to C main() function
  3452                           
  3453                           	psect	bssBANK1
  3454  00EC                     __pbssBANK1:
  3455  00EC                     _prec:
  3456  00EC                     	ds	2
  3457  00EE                     _flags:
  3458  00EE                     	ds	2
  3459                           
  3460                           	psect	bssBANK2
  3461  014F                     __pbssBANK2:
  3462  014F                     floorf@F527:
  3463  014F                     	ds	4
  3464  0153                     ___fpclassifyf@F465:
  3465  0153                     	ds	4
  3466  0157                     _nout:
  3467  0157                     	ds	2
  3468  0159                     _width:
  3469  0159                     	ds	2
  3470  015B                     _low_byte:
  3471  015B                     	ds	1
  3472  015C                     _high_byte:
  3473  015C                     	ds	1
  3474                           
  3475                           	psect	bssBANK3
  3476  01A0                     __pbssBANK3:
  3477  01A0                     _dbuf:
  3478  01A0                     	ds	80
  3479                           
  3480                           	psect	clrtext
  3481  18CE                     clear_ram0:	
  3482                           ;	Called with FSR0 containing the base address, and
  3483                           ;	WREG with the size to clear
  3484                           
  3485  18CE  0064               	clrwdt	;clear the watchdog before getting into this loop
  3486  18CF                     clrloop0:
  3487  18CF  0180               	clrf	0	;clear RAM location pointed to by FSR
  3488  18D0  3101               	addfsr 0,1
  3489  18D1  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3490  18D2  28CF               	goto	clrloop0	;have we reached the end yet?
  3491  18D3  3400               	retlw	0	;all done for this memory range, return
  3492                           
  3493                           	psect	cstackBANK2
  3494  0120                     __pcstackBANK2:
  3495  0120                     vfpfcnvrt@ll:
  3496                           
  3497                           ; 8 bytes @ 0x0
  3498  0120                     	ds	8
  3499  0128                     vfpfcnvrt@llu:
  3500                           
  3501                           ; 8 bytes @ 0x8
  3502  0128                     	ds	8
  3503  0130                     _vfpfcnvrt$990:
  3504                           
  3505                           ; 2 bytes @ 0x10
  3506  0130                     	ds	2
  3507  0132                     _vfpfcnvrt$991:
  3508                           
  3509                           ; 2 bytes @ 0x12
  3510  0132                     	ds	2
  3511  0134                     _vfpfcnvrt$996:
  3512                           
  3513                           ; 2 bytes @ 0x14
  3514  0134                     	ds	2
  3515  0136                     vfpfcnvrt@f:
  3516                           
  3517                           ; 4 bytes @ 0x16
  3518  0136                     	ds	4
  3519  013A                     vfpfcnvrt@ct:
  3520                           
  3521                           ; 3 bytes @ 0x1A
  3522  013A                     	ds	3
  3523  013D                     vfpfcnvrt@c:
  3524                           
  3525                           ; 1 bytes @ 0x1D
  3526  013D                     	ds	1
  3527  013E                     vfpfcnvrt@fp:
  3528                           
  3529                           ; 1 bytes @ 0x1E
  3530  013E                     	ds	1
  3531  013F                     ?_printf:
  3532  013F                     printf@fmt:	
  3533                           ; 2 bytes @ 0x1F
  3534                           
  3535                           
  3536                           ; 2 bytes @ 0x1F
  3537  013F                     	ds	10
  3538  0149                     main@leerT:
  3539                           
  3540                           ; 2 bytes @ 0x29
  3541  0149                     	ds	2
  3542  014B                     main@temp:
  3543                           
  3544                           ; 4 bytes @ 0x2B
  3545  014B                     	ds	4
  3546                           
  3547                           	psect	cstackBANK1
  3548  00A0                     __pcstackBANK1:
  3549  00A0                     _efgtoa$954:
  3550                           
  3551                           ; 2 bytes @ 0x0
  3552  00A0                     	ds	2
  3553  00A2                     _efgtoa$955:
  3554                           
  3555                           ; 2 bytes @ 0x2
  3556  00A2                     	ds	2
  3557  00A4                     _efgtoa$959:
  3558                           
  3559                           ; 2 bytes @ 0x4
  3560  00A4                     	ds	2
  3561  00A6                     _efgtoa$963:
  3562                           
  3563                           ; 2 bytes @ 0x6
  3564  00A6                     	ds	2
  3565  00A8                     _efgtoa$964:
  3566                           
  3567                           ; 2 bytes @ 0x8
  3568  00A8                     	ds	2
  3569  00AA                     _efgtoa$965:
  3570                           
  3571                           ; 2 bytes @ 0xA
  3572  00AA                     	ds	2
  3573  00AC                     efgtoa@t:
  3574                           
  3575                           ; 2 bytes @ 0xC
  3576  00AC                     	ds	2
  3577  00AE                     efgtoa@pp:
  3578                           
  3579                           ; 2 bytes @ 0xE
  3580  00AE                     	ds	2
  3581  00B0                     efgtoa@ne:
  3582                           
  3583                           ; 2 bytes @ 0x10
  3584  00B0                     	ds	2
  3585  00B2                     efgtoa@m:
  3586                           
  3587                           ; 2 bytes @ 0x12
  3588  00B2                     	ds	2
  3589  00B4                     efgtoa@ou:
  3590                           
  3591                           ; 4 bytes @ 0x14
  3592  00B4                     	ds	4
  3593  00B8                     efgtoa@d:
  3594                           
  3595                           ; 2 bytes @ 0x18
  3596  00B8                     	ds	2
  3597  00BA                     efgtoa@sign:
  3598                           
  3599                           ; 2 bytes @ 0x1A
  3600  00BA                     	ds	2
  3601  00BC                     efgtoa@p:
  3602                           
  3603                           ; 2 bytes @ 0x1C
  3604  00BC                     	ds	2
  3605  00BE                     efgtoa@fp:
  3606                           
  3607                           ; 1 bytes @ 0x1E
  3608  00BE                     	ds	1
  3609  00BF                     efgtoa@w:
  3610                           
  3611                           ; 2 bytes @ 0x1F
  3612  00BF                     	ds	2
  3613  00C1                     efgtoa@nmode:
  3614                           
  3615                           ; 1 bytes @ 0x21
  3616  00C1                     	ds	1
  3617  00C2                     efgtoa@mode:
  3618                           
  3619                           ; 1 bytes @ 0x22
  3620  00C2                     	ds	1
  3621  00C3                     efgtoa@h:
  3622                           
  3623                           ; 4 bytes @ 0x23
  3624  00C3                     	ds	4
  3625  00C7                     efgtoa@l:
  3626                           
  3627                           ; 4 bytes @ 0x27
  3628  00C7                     	ds	4
  3629  00CB                     efgtoa@i:
  3630                           
  3631                           ; 2 bytes @ 0x2B
  3632  00CB                     	ds	2
  3633  00CD                     efgtoa@g:
  3634                           
  3635                           ; 4 bytes @ 0x2D
  3636  00CD                     	ds	4
  3637  00D1                     efgtoa@e:
  3638                           
  3639                           ; 2 bytes @ 0x31
  3640  00D1                     	ds	2
  3641  00D3                     efgtoa@n:
  3642                           
  3643                           ; 2 bytes @ 0x33
  3644  00D3                     	ds	2
  3645  00D5                     efgtoa@u:
  3646                           
  3647                           ; 4 bytes @ 0x35
  3648  00D5                     	ds	4
  3649  00D9                     ??_vfpfcnvrt:
  3650                           
  3651                           ; 1 bytes @ 0x39
  3652  00D9                     	ds	6
  3653  00DF                     ?_vfprintf:
  3654  00DF                     vfprintf@fmt:	
  3655                           ; 2 bytes @ 0x3F
  3656                           
  3657                           
  3658                           ; 2 bytes @ 0x3F
  3659  00DF                     	ds	2
  3660  00E1                     vfprintf@ap:
  3661                           
  3662                           ; 1 bytes @ 0x41
  3663  00E1                     	ds	1
  3664  00E2                     ??_vfprintf:
  3665                           
  3666                           ; 1 bytes @ 0x42
  3667  00E2                     	ds	2
  3668  00E4                     vfprintf@fp:
  3669                           
  3670                           ; 1 bytes @ 0x44
  3671  00E4                     	ds	1
  3672  00E5                     vfprintf@cfmt:
  3673                           
  3674                           ; 2 bytes @ 0x45
  3675  00E5                     	ds	2
  3676  00E7                     printf@ap:
  3677                           
  3678                           ; 1 bytes @ 0x47
  3679  00E7                     	ds	1
  3680  00E8                     ??_main:
  3681                           
  3682                           ; 1 bytes @ 0x48
  3683  00E8                     	ds	4
  3684                           
  3685                           	psect	cstackCOMMON
  3686  0070                     __pcstackCOMMON:
  3687  0070                     ?___fleq:
  3688  0070                     ?_port_init:	
  3689                           ; 1 bit 
  3690                           
  3691  0070                     ??_port_init:	
  3692                           ; 1 bytes @ 0x0
  3693                           
  3694  0070                     ?_adc_init:	
  3695                           ; 1 bytes @ 0x0
  3696                           
  3697  0070                     ??_adc_init:	
  3698                           ; 1 bytes @ 0x0
  3699                           
  3700  0070                     ?_I2C_init:	
  3701                           ; 1 bytes @ 0x0
  3702                           
  3703  0070                     ??_I2C_init:	
  3704                           ; 1 bytes @ 0x0
  3705                           
  3706  0070                     ?_I2C_start:	
  3707                           ; 1 bytes @ 0x0
  3708                           
  3709  0070                     ??_I2C_start:	
  3710                           ; 1 bytes @ 0x0
  3711                           
  3712  0070                     ?_I2C_write:	
  3713                           ; 1 bytes @ 0x0
  3714                           
  3715  0070                     ??_I2C_write:	
  3716                           ; 1 bytes @ 0x0
  3717                           
  3718  0070                     ?_I2C_restart:	
  3719                           ; 1 bytes @ 0x0
  3720                           
  3721  0070                     ??_I2C_restart:	
  3722                           ; 1 bytes @ 0x0
  3723                           
  3724  0070                     ?_I2C_read:	
  3725                           ; 1 bytes @ 0x0
  3726                           
  3727  0070                     ??_I2C_read:	
  3728                           ; 1 bytes @ 0x0
  3729                           
  3730  0070                     ?_I2C_stop:	
  3731                           ; 1 bytes @ 0x0
  3732                           
  3733  0070                     ??_I2C_stop:	
  3734                           ; 1 bytes @ 0x0
  3735                           
  3736  0070                     ?_I2C_ack:	
  3737                           ; 1 bytes @ 0x0
  3738                           
  3739  0070                     ??_I2C_ack:	
  3740                           ; 1 bytes @ 0x0
  3741                           
  3742  0070                     ?_I2C_nack:	
  3743                           ; 1 bytes @ 0x0
  3744                           
  3745  0070                     ??_I2C_nack:	
  3746                           ; 1 bytes @ 0x0
  3747                           
  3748  0070                     ?_strcpy:	
  3749                           ; 1 bytes @ 0x0
  3750                           
  3751  0070                     ?_main:	
  3752                           ; 1 bytes @ 0x0
  3753                           
  3754  0070                     ?_uart_tx:	
  3755                           ; 1 bytes @ 0x0
  3756                           
  3757  0070                     ??_uart_tx:	
  3758                           ; 1 bytes @ 0x0
  3759                           
  3760  0070                     ?_putch:	
  3761                           ; 1 bytes @ 0x0
  3762                           
  3763  0070                     ??___aodiv:	
  3764                           ; 1 bytes @ 0x0
  3765                           
  3766  0070                     ??___aomod:	
  3767                           ; 1 bytes @ 0x0
  3768                           
  3769  0070                     ?__Umul8_16:	
  3770                           ; 1 bytes @ 0x0
  3771                           
  3772  0070                     ?_strlen:	
  3773                           ; 2 bytes @ 0x0
  3774                           
  3775  0070                     ?___fpclassifyf:	
  3776                           ; 2 bytes @ 0x0
  3777                           
  3778  0070                     ?_isupper:	
  3779                           ; 2 bytes @ 0x0
  3780                           
  3781  0070                     ?_isalpha:	
  3782                           ; 2 bytes @ 0x0
  3783                           
  3784  0070                     ?_isdigit:	
  3785                           ; 2 bytes @ 0x0
  3786                           
  3787  0070                     ?_strncmp:	
  3788                           ; 2 bytes @ 0x0
  3789                           
  3790  0070                     ?_isspace:	
  3791                           ; 2 bytes @ 0x0
  3792                           
  3793  0070                     ?_islower:	
  3794                           ; 2 bytes @ 0x0
  3795                           
  3796  0070                     ?___wmul:	
  3797                           ; 2 bytes @ 0x0
  3798                           
  3799  0070                     ?___awdiv:	
  3800                           ; 2 bytes @ 0x0
  3801                           
  3802  0070                     ?___awmod:	
  3803                           ; 2 bytes @ 0x0
  3804                           
  3805  0070                     ?___lldiv:	
  3806                           ; 2 bytes @ 0x0
  3807                           
  3808  0070                     ?___flneg:	
  3809                           ; 4 bytes @ 0x0
  3810                           
  3811  0070                     ?___fldiv:	
  3812                           ; 4 bytes @ 0x0
  3813                           
  3814  0070                     I2C_read@ack:	
  3815                           ; 4 bytes @ 0x0
  3816                           
  3817  0070                     I2C_write@I2C_data:	
  3818                           ; 1 bytes @ 0x0
  3819                           
  3820  0070                     __Umul8_16@multiplicand:	
  3821                           ; 1 bytes @ 0x0
  3822                           
  3823  0070                     ___wmul@multiplier:	
  3824                           ; 1 bytes @ 0x0
  3825                           
  3826  0070                     ___awdiv@divisor:	
  3827                           ; 2 bytes @ 0x0
  3828                           
  3829  0070                     ___awmod@divisor:	
  3830                           ; 2 bytes @ 0x0
  3831                           
  3832  0070                     isalpha@c:	
  3833                           ; 2 bytes @ 0x0
  3834                           
  3835  0070                     isdigit@c:	
  3836                           ; 2 bytes @ 0x0
  3837                           
  3838  0070                     isspace@c:	
  3839                           ; 2 bytes @ 0x0
  3840                           
  3841  0070                     isupper@c:	
  3842                           ; 2 bytes @ 0x0
  3843                           
  3844  0070                     strcpy@src:	
  3845                           ; 2 bytes @ 0x0
  3846                           
  3847  0070                     strncmp@_r:	
  3848                           ; 2 bytes @ 0x0
  3849                           
  3850  0070                     islower@c:	
  3851                           ; 2 bytes @ 0x0
  3852                           
  3853  0070                     ___lldiv@divisor:	
  3854                           ; 2 bytes @ 0x0
  3855                           
  3856  0070                     ___fleq@ff1:	
  3857                           ; 4 bytes @ 0x0
  3858                           
  3859  0070                     ___flneg@f1:	
  3860                           ; 4 bytes @ 0x0
  3861                           
  3862  0070                     ___fldiv@a:	
  3863                           ; 4 bytes @ 0x0
  3864                           
  3865  0070                     ___fpclassifyf@x:	
  3866                           ; 4 bytes @ 0x0
  3867                           
  3868                           
  3869                           ; 4 bytes @ 0x0
  3870  0070                     	ds	1
  3871  0071                     ?_MLX90614_WriteReg:
  3872  0071                     ?_MLX90614_ReadReg:	
  3873                           ; 1 bytes @ 0x1
  3874                           
  3875  0071                     uart_tx@dato:	
  3876                           ; 2 bytes @ 0x1
  3877                           
  3878  0071                     ___aodiv@counter:	
  3879                           ; 1 bytes @ 0x1
  3880                           
  3881  0071                     ___aomod@counter:	
  3882                           ; 1 bytes @ 0x1
  3883                           
  3884  0071                     MLX90614_WriteReg@val:	
  3885                           ; 1 bytes @ 0x1
  3886                           
  3887                           
  3888                           ; 2 bytes @ 0x1
  3889  0071                     	ds	1
  3890  0072                     ??__Umul8_16:
  3891  0072                     ??_strlen:	
  3892                           ; 1 bytes @ 0x2
  3893                           
  3894  0072                     ??_isupper:	
  3895                           ; 1 bytes @ 0x2
  3896                           
  3897  0072                     ??_strcpy:	
  3898                           ; 1 bytes @ 0x2
  3899                           
  3900  0072                     ??_isalpha:	
  3901                           ; 1 bytes @ 0x2
  3902                           
  3903  0072                     ??_isdigit:	
  3904                           ; 1 bytes @ 0x2
  3905                           
  3906  0072                     ??_isspace:	
  3907                           ; 1 bytes @ 0x2
  3908                           
  3909  0072                     ??_islower:	
  3910                           ; 1 bytes @ 0x2
  3911                           
  3912  0072                     ??_putch:	
  3913                           ; 1 bytes @ 0x2
  3914                           
  3915  0072                     putch@dato:	
  3916                           ; 1 bytes @ 0x2
  3917                           
  3918  0072                     ___aodiv@sign:	
  3919                           ; 1 bytes @ 0x2
  3920                           
  3921  0072                     ___aomod@sign:	
  3922                           ; 1 bytes @ 0x2
  3923                           
  3924  0072                     ___wmul@multiplicand:	
  3925                           ; 1 bytes @ 0x2
  3926                           
  3927  0072                     ___awdiv@dividend:	
  3928                           ; 2 bytes @ 0x2
  3929                           
  3930  0072                     ___awmod@dividend:	
  3931                           ; 2 bytes @ 0x2
  3932                           
  3933  0072                     strncmp@n:	
  3934                           ; 2 bytes @ 0x2
  3935                           
  3936                           
  3937                           ; 2 bytes @ 0x2
  3938  0072                     	ds	1
  3939  0073                     ??_MLX90614_ReadReg:
  3940  0073                     ??_MLX90614_WriteReg:	
  3941                           ; 1 bytes @ 0x3
  3942                           
  3943  0073                     ?_fputc:	
  3944                           ; 1 bytes @ 0x3
  3945                           
  3946  0073                     ?_abs:	
  3947                           ; 2 bytes @ 0x3
  3948                           
  3949  0073                     MLX90614_WriteReg@reg:	
  3950                           ; 2 bytes @ 0x3
  3951                           
  3952  0073                     strlen@a:	
  3953                           ; 1 bytes @ 0x3
  3954                           
  3955  0073                     abs@a:	
  3956                           ; 1 bytes @ 0x3
  3957                           
  3958  0073                     fputc@c:	
  3959                           ; 2 bytes @ 0x3
  3960                           
  3961  0073                     ___aodiv@quotient:	
  3962                           ; 2 bytes @ 0x3
  3963                           
  3964                           
  3965                           ; 8 bytes @ 0x3
  3966  0073                     	ds	1
  3967  0074                     ??___fpclassifyf:
  3968  0074                     ??_strncmp:	
  3969                           ; 1 bytes @ 0x4
  3970                           
  3971  0074                     ??___wmul:	
  3972                           ; 1 bytes @ 0x4
  3973                           
  3974  0074                     ??___awdiv:	
  3975                           ; 1 bytes @ 0x4
  3976                           
  3977  0074                     ??___awmod:	
  3978                           ; 1 bytes @ 0x4
  3979                           
  3980  0074                     ??___flneg:	
  3981                           ; 1 bytes @ 0x4
  3982                           
  3983  0074                     _isspace$1073:	
  3984                           ; 1 bytes @ 0x4
  3985                           
  3986  0074                     strlen@s:	
  3987                           ; 1 bytes @ 0x4
  3988                           
  3989  0074                     ___wmul@product:	
  3990                           ; 1 bytes @ 0x4
  3991                           
  3992  0074                     __Umul8_16@product:	
  3993                           ; 2 bytes @ 0x4
  3994                           
  3995  0074                     strcpy@s:	
  3996                           ; 2 bytes @ 0x4
  3997                           
  3998  0074                     ___lldiv@dividend:	
  3999                           ; 2 bytes @ 0x4
  4000                           
  4001  0074                     ___fleq@ff2:	
  4002                           ; 4 bytes @ 0x4
  4003                           
  4004  0074                     ___fldiv@b:	
  4005                           ; 4 bytes @ 0x4
  4006                           
  4007                           
  4008                           ; 4 bytes @ 0x4
  4009  0074                     	ds	1
  4010  0075                     ??_abs:
  4011  0075                     ___awdiv@counter:	
  4012                           ; 1 bytes @ 0x5
  4013                           
  4014  0075                     ___awmod@counter:	
  4015                           ; 1 bytes @ 0x5
  4016                           
  4017  0075                     fputc@fp:	
  4018                           ; 1 bytes @ 0x5
  4019                           
  4020  0075                     strncmp@_l:	
  4021                           ; 1 bytes @ 0x5
  4022                           
  4023                           
  4024                           ; 1 bytes @ 0x5
  4025  0075                     	ds	1
  4026  0076                     ??_fputc:
  4027  0076                     ?_tolower:	
  4028                           ; 1 bytes @ 0x6
  4029                           
  4030  0076                     ?_toupper:	
  4031                           ; 2 bytes @ 0x6
  4032                           
  4033  0076                     ?_atoi:	
  4034                           ; 2 bytes @ 0x6
  4035                           
  4036  0076                     MLX90614_ReadReg@reg:	
  4037                           ; 2 bytes @ 0x6
  4038                           
  4039  0076                     ___awdiv@sign:	
  4040                           ; 1 bytes @ 0x6
  4041                           
  4042  0076                     ___awmod@sign:	
  4043                           ; 1 bytes @ 0x6
  4044                           
  4045  0076                     strcpy@d:	
  4046                           ; 1 bytes @ 0x6
  4047                           
  4048  0076                     __Umul8_16@word_mpld:	
  4049                           ; 1 bytes @ 0x6
  4050                           
  4051  0076                     atoi@s:	
  4052                           ; 2 bytes @ 0x6
  4053                           
  4054  0076                     strncmp@r:	
  4055                           ; 2 bytes @ 0x6
  4056                           
  4057  0076                     tolower@c:	
  4058                           ; 2 bytes @ 0x6
  4059                           
  4060  0076                     toupper@c:	
  4061                           ; 2 bytes @ 0x6
  4062                           
  4063                           
  4064                           ; 2 bytes @ 0x6
  4065  0076                     	ds	1
  4066  0077                     strcpy@dest:
  4067  0077                     MLX90614_ReadReg@valReg:	
  4068                           ; 1 bytes @ 0x7
  4069                           
  4070  0077                     ___awdiv@quotient:	
  4071                           ; 2 bytes @ 0x7
  4072                           
  4073                           
  4074                           ; 2 bytes @ 0x7
  4075  0077                     	ds	1
  4076  0078                     ??_tolower:
  4077  0078                     ??_toupper:	
  4078                           ; 1 bytes @ 0x8
  4079                           
  4080  0078                     ??_atoi:	
  4081                           ; 1 bytes @ 0x8
  4082                           
  4083  0078                     ??___lldiv:	
  4084                           ; 1 bytes @ 0x8
  4085                           
  4086  0078                     ??___fleq:	
  4087                           ; 1 bytes @ 0x8
  4088                           
  4089  0078                     ??___fldiv:	
  4090                           ; 1 bytes @ 0x8
  4091                           
  4092  0078                     __Umul8_16@multiplier:	
  4093                           ; 1 bytes @ 0x8
  4094                           
  4095  0078                     strncmp@l:	
  4096                           ; 1 bytes @ 0x8
  4097                           
  4098                           
  4099                           ; 1 bytes @ 0x8
  4100  0078                     	ds	1
  4101  0079                     ?_MLX90614_ReadTemp:
  4102  0079                     ___lldiv@quotient:	
  4103                           ; 2 bytes @ 0x9
  4104                           
  4105                           
  4106                           ; 4 bytes @ 0x9
  4107  0079                     	ds	2
  4108  007B                     ??_MLX90614_ReadTemp:
  4109  007B                     ?_fputs:	
  4110                           ; 1 bytes @ 0xB
  4111                           
  4112  007B                     MLX90614_ReadTemp@Temp_Source:	
  4113                           ; 2 bytes @ 0xB
  4114                           
  4115  007B                     fputs@fp:	
  4116                           ; 1 bytes @ 0xB
  4117                           
  4118                           
  4119                           ; 1 bytes @ 0xB
  4120  007B                     	ds	1
  4121  007C                     ??___flsub:
  4122  007C                     ??_pad:	
  4123                           ; 1 bytes @ 0xC
  4124                           
  4125  007C                     ___fltol@sign1:	
  4126                           ; 1 bytes @ 0xC
  4127                           
  4128  007C                     _tolower$1131:	
  4129                           ; 1 bytes @ 0xC
  4130                           
  4131  007C                     _toupper$1146:	
  4132                           ; 2 bytes @ 0xC
  4133                           
  4134                           
  4135                           ; 2 bytes @ 0xC
  4136  007C                     	ds	1
  4137  007D                     ___lldiv@counter:
  4138  007D                     ___fltol@exp1:	
  4139                           ; 1 bytes @ 0xD
  4140                           
  4141                           
  4142                           ; 1 bytes @ 0xD
  4143  007D                     	ds	1
  4144                           
  4145                           	psect	cstackBANK0
  4146  0020                     __pcstackBANK0:
  4147  0020                     ?_serial_init:
  4148  0020                     ??_fputs:	
  4149                           ; 1 bytes @ 0x0
  4150                           
  4151  0020                     ?___xxtofl:	
  4152                           ; 1 bytes @ 0x0
  4153                           
  4154  0020                     ?___aodiv:	
  4155                           ; 4 bytes @ 0x0
  4156                           
  4157  0020                     ?___aomod:	
  4158                           ; 8 bytes @ 0x0
  4159                           
  4160  0020                     ___fpclassifyf@e:	
  4161                           ; 8 bytes @ 0x0
  4162                           
  4163  0020                     atoi@neg:	
  4164                           ; 2 bytes @ 0x0
  4165                           
  4166  0020                     serial_init@baudios:	
  4167                           ; 2 bytes @ 0x0
  4168                           
  4169  0020                     ___fldiv@rem:	
  4170                           ; 4 bytes @ 0x0
  4171                           
  4172  0020                     ___xxtofl@val:	
  4173                           ; 4 bytes @ 0x0
  4174                           
  4175  0020                     ___aodiv@divisor:	
  4176                           ; 4 bytes @ 0x0
  4177                           
  4178  0020                     ___aomod@divisor:	
  4179                           ; 8 bytes @ 0x0
  4180                           
  4181                           
  4182                           ; 8 bytes @ 0x0
  4183  0020                     	ds	2
  4184  0022                     _atoi$1033:
  4185  0022                     ___fpclassifyf@u:	
  4186                           ; 2 bytes @ 0x2
  4187                           
  4188                           
  4189                           ; 4 bytes @ 0x2
  4190  0022                     	ds	1
  4191  0023                     fputs@c:
  4192                           
  4193                           ; 1 bytes @ 0x3
  4194  0023                     	ds	1
  4195  0024                     ??_serial_init:
  4196  0024                     ??___xxtofl:	
  4197                           ; 1 bytes @ 0x4
  4198                           
  4199  0024                     ___fldiv@sign:	
  4200                           ; 1 bytes @ 0x4
  4201                           
  4202  0024                     _atoi$1035:	
  4203                           ; 1 bytes @ 0x4
  4204                           
  4205  0024                     fputs@i:	
  4206                           ; 2 bytes @ 0x4
  4207                           
  4208                           
  4209                           ; 2 bytes @ 0x4
  4210  0024                     	ds	1
  4211  0025                     ___fldiv@new_exp:
  4212                           
  4213                           ; 2 bytes @ 0x5
  4214  0025                     	ds	1
  4215  0026                     _atoi$1034:
  4216  0026                     fputs@s:	
  4217                           ; 1 bytes @ 0x6
  4218                           
  4219                           
  4220                           ; 1 bytes @ 0x6
  4221  0026                     	ds	1
  4222  0027                     ?_pad:
  4223  0027                     pad@buf:	
  4224                           ; 2 bytes @ 0x7
  4225                           
  4226  0027                     atoi@n:	
  4227                           ; 1 bytes @ 0x7
  4228                           
  4229  0027                     ___fldiv@grs:	
  4230                           ; 2 bytes @ 0x7
  4231                           
  4232                           
  4233                           ; 4 bytes @ 0x7
  4234  0027                     	ds	1
  4235  0028                     ___xxtofl@sign:
  4236  0028                     serial_init@sx:	
  4237                           ; 1 bytes @ 0x8
  4238                           
  4239  0028                     pad@p:	
  4240                           ; 2 bytes @ 0x8
  4241                           
  4242  0028                     ___aodiv@dividend:	
  4243                           ; 2 bytes @ 0x8
  4244                           
  4245  0028                     ___aomod@dividend:	
  4246                           ; 8 bytes @ 0x8
  4247                           
  4248                           
  4249                           ; 8 bytes @ 0x8
  4250  0028                     	ds	1
  4251  0029                     ___xxtofl@exp:
  4252                           
  4253                           ; 1 bytes @ 0x9
  4254  0029                     	ds	1
  4255  002A                     pad@i:
  4256  002A                     ___xxtofl@arg:	
  4257                           ; 2 bytes @ 0xA
  4258                           
  4259                           
  4260                           ; 4 bytes @ 0xA
  4261  002A                     	ds	1
  4262  002B                     ___fldiv@bexp:
  4263                           
  4264                           ; 1 bytes @ 0xB
  4265  002B                     	ds	1
  4266  002C                     ___fldiv@aexp:
  4267  002C                     pad@w:	
  4268                           ; 1 bytes @ 0xC
  4269                           
  4270                           
  4271                           ; 2 bytes @ 0xC
  4272  002C                     	ds	1
  4273  002D                     ?_floorf:
  4274  002D                     floorf@x:	
  4275                           ; 4 bytes @ 0xD
  4276                           
  4277                           
  4278                           ; 4 bytes @ 0xD
  4279  002D                     	ds	1
  4280  002E                     ?_readEmissivity:
  4281  002E                     ?___flmul:	
  4282                           ; 4 bytes @ 0xE
  4283                           
  4284  002E                     pad@fp:	
  4285                           ; 4 bytes @ 0xE
  4286                           
  4287  002E                     ___flmul@b:	
  4288                           ; 1 bytes @ 0xE
  4289                           
  4290                           
  4291                           ; 4 bytes @ 0xE
  4292  002E                     	ds	1
  4293  002F                     ?_xtoa:
  4294  002F                     xtoa@d:	
  4295                           ; 2 bytes @ 0xF
  4296                           
  4297                           
  4298                           ; 8 bytes @ 0xF
  4299  002F                     	ds	1
  4300  0030                     ?_dtoa:
  4301  0030                     dtoa@d:	
  4302                           ; 2 bytes @ 0x10
  4303                           
  4304                           
  4305                           ; 8 bytes @ 0x10
  4306  0030                     	ds	1
  4307  0031                     ??_floorf:
  4308                           
  4309                           ; 1 bytes @ 0x11
  4310  0031                     	ds	1
  4311  0032                     ??_readEmissivity:
  4312  0032                     ___flmul@a:	
  4313                           ; 1 bytes @ 0x12
  4314                           
  4315                           
  4316                           ; 4 bytes @ 0x12
  4317  0032                     	ds	4
  4318  0036                     ??___flmul:
  4319  0036                     readEmissivity@reg:	
  4320                           ; 1 bytes @ 0x16
  4321                           
  4322                           
  4323                           ; 4 bytes @ 0x16
  4324  0036                     	ds	1
  4325  0037                     xtoa@x:
  4326  0037                     floorf@m:	
  4327                           ; 1 bytes @ 0x17
  4328                           
  4329                           
  4330                           ; 4 bytes @ 0x17
  4331  0037                     	ds	1
  4332  0038                     ??_dtoa:
  4333  0038                     ??_xtoa:	
  4334                           ; 1 bytes @ 0x18
  4335                           
  4336                           
  4337                           ; 1 bytes @ 0x18
  4338  0038                     	ds	3
  4339  003B                     ___flmul@sign:
  4340  003B                     _dtoa$930:	
  4341                           ; 1 bytes @ 0x1B
  4342                           
  4343  003B                     floorf@e:	
  4344                           ; 2 bytes @ 0x1B
  4345                           
  4346                           
  4347                           ; 2 bytes @ 0x1B
  4348  003B                     	ds	1
  4349  003C                     ___flmul@grs:
  4350                           
  4351                           ; 4 bytes @ 0x1C
  4352  003C                     	ds	1
  4353  003D                     dtoa@p:
  4354  003D                     floorf@u:	
  4355                           ; 2 bytes @ 0x1D
  4356                           
  4357                           
  4358                           ; 4 bytes @ 0x1D
  4359  003D                     	ds	2
  4360  003F                     dtoa@fp:
  4361                           
  4362                           ; 1 bytes @ 0x1F
  4363  003F                     	ds	1
  4364  0040                     ___flmul@aexp:
  4365  0040                     dtoa@w:	
  4366                           ; 1 bytes @ 0x20
  4367                           
  4368  0040                     _xtoa$975:	
  4369                           ; 2 bytes @ 0x20
  4370                           
  4371                           
  4372                           ; 2 bytes @ 0x20
  4373  0040                     	ds	1
  4374  0041                     ___flmul@bexp:
  4375                           
  4376                           ; 1 bytes @ 0x21
  4377  0041                     	ds	1
  4378  0042                     dtoa@s:
  4379  0042                     _xtoa$976:	
  4380                           ; 2 bytes @ 0x22
  4381                           
  4382  0042                     ___flmul@prod:	
  4383                           ; 2 bytes @ 0x22
  4384                           
  4385                           
  4386                           ; 4 bytes @ 0x22
  4387  0042                     	ds	2
  4388  0044                     xtoa@p:
  4389  0044                     dtoa@n:	
  4390                           ; 2 bytes @ 0x24
  4391                           
  4392                           
  4393                           ; 8 bytes @ 0x24
  4394  0044                     	ds	2
  4395  0046                     xtoa@fp:
  4396  0046                     ___flmul@temp:	
  4397                           ; 1 bytes @ 0x26
  4398                           
  4399                           
  4400                           ; 2 bytes @ 0x26
  4401  0046                     	ds	1
  4402  0047                     xtoa@w:
  4403                           
  4404                           ; 2 bytes @ 0x27
  4405  0047                     	ds	1
  4406  0048                     ?___flge:
  4407  0048                     ?___fltol:	
  4408                           ; 1 bit 
  4409                           
  4410  0048                     ?___fladd:	
  4411                           ; 4 bytes @ 0x28
  4412                           
  4413  0048                     ___flge@ff1:	
  4414                           ; 4 bytes @ 0x28
  4415                           
  4416  0048                     ___fltol@f1:	
  4417                           ; 4 bytes @ 0x28
  4418                           
  4419  0048                     ___fladd@b:	
  4420                           ; 4 bytes @ 0x28
  4421                           
  4422                           
  4423                           ; 4 bytes @ 0x28
  4424  0048                     	ds	1
  4425  0049                     xtoa@n:
  4426                           
  4427                           ; 8 bytes @ 0x29
  4428  0049                     	ds	3
  4429  004C                     ??___fltol:
  4430  004C                     dtoa@i:	
  4431                           ; 1 bytes @ 0x2C
  4432                           
  4433  004C                     ___flge@ff2:	
  4434                           ; 2 bytes @ 0x2C
  4435                           
  4436  004C                     ___fladd@a:	
  4437                           ; 4 bytes @ 0x2C
  4438                           
  4439                           
  4440                           ; 4 bytes @ 0x2C
  4441  004C                     	ds	4
  4442  0050                     ??___flge:
  4443  0050                     ??___fladd:	
  4444                           ; 1 bytes @ 0x30
  4445                           
  4446                           
  4447                           ; 1 bytes @ 0x30
  4448  0050                     	ds	1
  4449  0051                     ?_writeEmissivity:
  4450  0051                     xtoa@i:	
  4451                           ; 1 bytes @ 0x31
  4452                           
  4453  0051                     writeEmissivity@emissivity:	
  4454                           ; 2 bytes @ 0x31
  4455                           
  4456                           
  4457                           ; 4 bytes @ 0x31
  4458  0051                     	ds	2
  4459  0053                     xtoa@c:
  4460                           
  4461                           ; 2 bytes @ 0x33
  4462  0053                     	ds	2
  4463  0055                     ??_writeEmissivity:
  4464                           
  4465                           ; 1 bytes @ 0x35
  4466  0055                     	ds	1
  4467  0056                     writeEmissivity@ereg:
  4468                           
  4469                           ; 2 bytes @ 0x36
  4470  0056                     	ds	2
  4471  0058                     ___fladd@signs:
  4472                           
  4473                           ; 1 bytes @ 0x38
  4474  0058                     	ds	1
  4475  0059                     ___fladd@aexp:
  4476                           
  4477                           ; 1 bytes @ 0x39
  4478  0059                     	ds	1
  4479  005A                     ___fladd@bexp:
  4480                           
  4481                           ; 1 bytes @ 0x3A
  4482  005A                     	ds	1
  4483  005B                     ___fladd@grs:
  4484                           
  4485                           ; 1 bytes @ 0x3B
  4486  005B                     	ds	1
  4487  005C                     ?___flsub:
  4488  005C                     ___flsub@a:	
  4489                           ; 4 bytes @ 0x3C
  4490                           
  4491                           
  4492                           ; 4 bytes @ 0x3C
  4493  005C                     	ds	4
  4494  0060                     ___flsub@b:
  4495                           
  4496                           ; 4 bytes @ 0x40
  4497  0060                     	ds	4
  4498  0064                     ?_efgtoa:
  4499  0064                     efgtoa@f:	
  4500                           ; 2 bytes @ 0x44
  4501                           
  4502                           
  4503                           ; 4 bytes @ 0x44
  4504  0064                     	ds	4
  4505  0068                     efgtoa@c:
  4506                           
  4507                           ; 1 bytes @ 0x48
  4508  0068                     	ds	1
  4509  0069                     ??_efgtoa:
  4510                           
  4511                           ; 1 bytes @ 0x49
  4512  0069                     	ds	4
  4513  006D                     ?_vfpfcnvrt:
  4514  006D                     vfpfcnvrt@fmt:	
  4515                           ; 2 bytes @ 0x4D
  4516                           
  4517                           
  4518                           ; 1 bytes @ 0x4D
  4519  006D                     	ds	1
  4520  006E                     vfpfcnvrt@ap:
  4521                           
  4522                           ; 1 bytes @ 0x4E
  4523  006E                     	ds	1
  4524  006F                     ??_printf:
  4525                           
  4526                           ; 1 bytes @ 0x4F
  4527  006F                     	ds	1
  4528                           
  4529                           	psect	maintext
  4530  1528                     __pmaintext:	
  4531 ;;
  4532 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  4533 ;;
  4534 ;; *************** function _main *****************
  4535 ;; Defined at:
  4536 ;;		line 23 in file "Main.c"
  4537 ;; Parameters:    Size  Location     Type
  4538 ;;		None
  4539 ;; Auto vars:     Size  Location     Type
  4540 ;;  temp            4   43[BANK2 ] float 
  4541 ;;  leerT           2   41[BANK2 ] unsigned short 
  4542 ;;  flag            1    0        _Bool 
  4543 ;; Return value:  Size  Location     Type
  4544 ;;                  1    wreg      void 
  4545 ;; Registers used:
  4546 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4547 ;; Tracked objects:
  4548 ;;		On entry : B1F/0
  4549 ;;		On exit  : 0/0
  4550 ;;		Unchanged: 0/0
  4551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4553 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  4554 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4555 ;;      Totals:         0       0       4       6       0       0       0       0       0       0       0       0       
      +0       0
  4556 ;;Total ram usage:       10 bytes
  4557 ;; Hardware stack levels required when called: 9
  4558 ;; This function calls:
  4559 ;;		_I2C_init
  4560 ;;		_MLX90614_ReadTemp
  4561 ;;		___fladd
  4562 ;;		___flmul
  4563 ;;		___fltol
  4564 ;;		___xxtofl
  4565 ;;		_adc_init
  4566 ;;		_port_init
  4567 ;;		_printf
  4568 ;;		_readEmissivity
  4569 ;;		_serial_init
  4570 ;;		_writeEmissivity
  4571 ;; This function is called by:
  4572 ;;		Startup code after reset
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576                           
  4577                           ;psect for function _main
  4578  1528                     _main:
  4579                           
  4580                           ;Main.c: 26:     uint16_t leerT;;Main.c: 27:     port_init();
  4581                           
  4582                           ;incstack = 0
  4583                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4584  1528  3199  212A  3195   	fcall	_port_init
  4585                           
  4586                           ;Main.c: 28:     serial_init(9600);
  4587  152B  3000               	movlw	0
  4588  152C  0020               	movlb	0	; select bank0
  4589  152D  00A3               	movwf	serial_init@baudios+3
  4590  152E  3000               	movlw	0
  4591  152F  00A2               	movwf	serial_init@baudios+2
  4592  1530  3025               	movlw	37
  4593  1531  00A1               	movwf	serial_init@baudios+1
  4594  1532  3080               	movlw	128
  4595  1533  00A0               	movwf	serial_init@baudios
  4596  1534  319C  247F  3195   	fcall	_serial_init
  4597                           
  4598                           ;Main.c: 29:     adc_init();
  4599  1537  3199  21E6  3195   	fcall	_adc_init
  4600                           
  4601                           ;Main.c: 30:     I2C_init();
  4602  153A  3199  21CC  3195   	fcall	_I2C_init
  4603                           
  4604                           ;Main.c: 35:     writeEmissivity(0.5);
  4605  153D  303F               	movlw	63
  4606  153E  0020               	movlb	0	; select bank0
  4607  153F  00D4               	movwf	writeEmissivity@emissivity+3
  4608  1540  3000               	movlw	0
  4609  1541  00D3               	movwf	writeEmissivity@emissivity+2
  4610  1542  3000               	movlw	0
  4611  1543  00D2               	movwf	writeEmissivity@emissivity+1
  4612  1544  3000               	movlw	0
  4613  1545  00D1               	movwf	writeEmissivity@emissivity
  4614  1546  319C  2437  3195   	fcall	_writeEmissivity
  4615  1549                     l4921:
  4616                           
  4617                           ;Main.c: 47:         temp = (float)MLX90614_ReadTemp(0x06);
  4618  1549  3006               	movlw	6
  4619  154A  3198  20E6  3195   	fcall	_MLX90614_ReadTemp
  4620  154D  0879               	movf	?_MLX90614_ReadTemp,w
  4621  154E  0021               	movlb	1	; select bank1
  4622  154F  00E8               	movwf	??_main^(0+128)
  4623  1550  087A               	movf	?_MLX90614_ReadTemp+1,w
  4624  1551  00E9               	movwf	(??_main^(0+128)+1)
  4625  1552  01EA               	clrf	(??_main^(0+128)+2)
  4626  1553  01EB               	clrf	(??_main^(0+128)+3)
  4627  1554  086B               	movf	(??_main+3)^(0+128),w
  4628  1555  0020               	movlb	0	; select bank0
  4629  1556  00A3               	movwf	___xxtofl@val+3
  4630  1557  0021               	movlb	1	; select bank1
  4631  1558  086A               	movf	(??_main+2)^(0+128),w
  4632  1559  0020               	movlb	0	; select bank0
  4633  155A  00A2               	movwf	___xxtofl@val+2
  4634  155B  0021               	movlb	1	; select bank1
  4635  155C  0869               	movf	(??_main+1)^(0+128),w
  4636  155D  0020               	movlb	0	; select bank0
  4637  155E  00A1               	movwf	___xxtofl@val+1
  4638  155F  0021               	movlb	1	; select bank1
  4639  1560  0868               	movf	??_main^(0+128),w
  4640  1561  0020               	movlb	0	; select bank0
  4641  1562  00A0               	movwf	___xxtofl@val
  4642  1563  3000               	movlw	0
  4643  1564  319F  276A  3195   	fcall	___xxtofl
  4644  1567  0020               	movlb	0	; select bank0
  4645  1568  0823               	movf	?___xxtofl+3,w
  4646  1569  0022               	movlb	2	; select bank2
  4647  156A  00CE               	movwf	(main@temp+3)^(0+256)
  4648  156B  0020               	movlb	0	; select bank0
  4649  156C  0822               	movf	?___xxtofl+2,w
  4650  156D  0022               	movlb	2	; select bank2
  4651  156E  00CD               	movwf	(main@temp+2)^(0+256)
  4652  156F  0020               	movlb	0	; select bank0
  4653  1570  0821               	movf	?___xxtofl+1,w
  4654  1571  0022               	movlb	2	; select bank2
  4655  1572  00CC               	movwf	(main@temp+1)^(0+256)
  4656  1573  0020               	movlb	0	; select bank0
  4657  1574  0820               	movf	?___xxtofl,w
  4658  1575  0022               	movlb	2	; select bank2
  4659  1576  00CB               	movwf	main@temp^(0+256)
  4660                           
  4661                           ;Main.c: 48:         temp = (temp * 0.02) - 273.15;
  4662  1577  30C3               	movlw	195
  4663  1578  0020               	movlb	0	; select bank0
  4664  1579  00CB               	movwf	___fladd@b+3
  4665  157A  3088               	movlw	136
  4666  157B  00CA               	movwf	___fladd@b+2
  4667  157C  3093               	movlw	147
  4668  157D  00C9               	movwf	___fladd@b+1
  4669  157E  3033               	movlw	51
  4670  157F  00C8               	movwf	___fladd@b
  4671  1580  303C               	movlw	60
  4672  1581  00B1               	movwf	___flmul@b+3
  4673  1582  30A3               	movlw	163
  4674  1583  00B0               	movwf	___flmul@b+2
  4675  1584  30D7               	movlw	215
  4676  1585  00AF               	movwf	___flmul@b+1
  4677  1586  300A               	movlw	10
  4678  1587  00AE               	movwf	___flmul@b
  4679  1588  0022               	movlb	2	; select bank2
  4680  1589  084E               	movf	(main@temp+3)^(0+256),w
  4681  158A  0020               	movlb	0	; select bank0
  4682  158B  00B5               	movwf	___flmul@a+3
  4683  158C  0022               	movlb	2	; select bank2
  4684  158D  084D               	movf	(main@temp+2)^(0+256),w
  4685  158E  0020               	movlb	0	; select bank0
  4686  158F  00B4               	movwf	___flmul@a+2
  4687  1590  0022               	movlb	2	; select bank2
  4688  1591  084C               	movf	(main@temp+1)^(0+256),w
  4689  1592  0020               	movlb	0	; select bank0
  4690  1593  00B3               	movwf	___flmul@a+1
  4691  1594  0022               	movlb	2	; select bank2
  4692  1595  084B               	movf	main@temp^(0+256),w
  4693  1596  0020               	movlb	0	; select bank0
  4694  1597  00B2               	movwf	___flmul@a
  4695  1598  318A  2206  3195   	fcall	___flmul
  4696  159B  0020               	movlb	0	; select bank0
  4697  159C  0831               	movf	?___flmul+3,w
  4698  159D  00CF               	movwf	___fladd@a+3
  4699  159E  0830               	movf	?___flmul+2,w
  4700  159F  00CE               	movwf	___fladd@a+2
  4701  15A0  082F               	movf	?___flmul+1,w
  4702  15A1  00CD               	movwf	___fladd@a+1
  4703  15A2  082E               	movf	?___flmul,w
  4704  15A3  00CC               	movwf	___fladd@a
  4705  15A4  3188  2024  3195   	fcall	___fladd
  4706  15A7  0020               	movlb	0	; select bank0
  4707  15A8  084B               	movf	?___fladd+3,w
  4708  15A9  0022               	movlb	2	; select bank2
  4709  15AA  00CE               	movwf	(main@temp+3)^(0+256)
  4710  15AB  0020               	movlb	0	; select bank0
  4711  15AC  084A               	movf	?___fladd+2,w
  4712  15AD  0022               	movlb	2	; select bank2
  4713  15AE  00CD               	movwf	(main@temp+2)^(0+256)
  4714  15AF  0020               	movlb	0	; select bank0
  4715  15B0  0849               	movf	?___fladd+1,w
  4716  15B1  0022               	movlb	2	; select bank2
  4717  15B2  00CC               	movwf	(main@temp+1)^(0+256)
  4718  15B3  0020               	movlb	0	; select bank0
  4719  15B4  0848               	movf	?___fladd,w
  4720  15B5  0022               	movlb	2	; select bank2
  4721  15B6  00CB               	movwf	main@temp^(0+256)
  4722                           
  4723                           ;Main.c: 49:         printf("tempAmb: %3.2f\n",temp);
  4724  15B7  3049               	movlw	low (STR_1| (0+32768))
  4725  15B8  00BF               	movwf	printf@fmt^(0+256)
  4726  15B9  3098               	movlw	high (STR_1| (0+32768))
  4727  15BA  00C0               	movwf	(printf@fmt^(0+256)+1)
  4728  15BB  084E               	movf	(main@temp+3)^(0+256),w
  4729  15BC  00C4               	movwf	((?_printf+3)^(0+256)+2)
  4730  15BD  084D               	movf	(main@temp+2)^(0+256),w
  4731  15BE  00C3               	movwf	((?_printf+2)^(0+256)+2)
  4732  15BF  084C               	movf	(main@temp+1)^(0+256),w
  4733  15C0  00C2               	movwf	((?_printf+1)^(0+256)+2)
  4734  15C1  084B               	movf	main@temp^(0+256),w
  4735  15C2  00C1               	movwf	(?_printf^(0+256)+2)
  4736  15C3  3199  21B4  3195   	fcall	_printf
  4737                           
  4738                           ;Main.c: 50:         leerT = (float)MLX90614_ReadTemp(0x07);
  4739  15C6  3007               	movlw	7
  4740  15C7  3198  20E6  3195   	fcall	_MLX90614_ReadTemp
  4741  15CA  0879               	movf	?_MLX90614_ReadTemp,w
  4742  15CB  0021               	movlb	1	; select bank1
  4743  15CC  00E8               	movwf	??_main^(0+128)
  4744  15CD  087A               	movf	?_MLX90614_ReadTemp+1,w
  4745  15CE  00E9               	movwf	(??_main^(0+128)+1)
  4746  15CF  01EA               	clrf	(??_main^(0+128)+2)
  4747  15D0  01EB               	clrf	(??_main^(0+128)+3)
  4748  15D1  086B               	movf	(??_main+3)^(0+128),w
  4749  15D2  0020               	movlb	0	; select bank0
  4750  15D3  00A3               	movwf	___xxtofl@val+3
  4751  15D4  0021               	movlb	1	; select bank1
  4752  15D5  086A               	movf	(??_main+2)^(0+128),w
  4753  15D6  0020               	movlb	0	; select bank0
  4754  15D7  00A2               	movwf	___xxtofl@val+2
  4755  15D8  0021               	movlb	1	; select bank1
  4756  15D9  0869               	movf	(??_main+1)^(0+128),w
  4757  15DA  0020               	movlb	0	; select bank0
  4758  15DB  00A1               	movwf	___xxtofl@val+1
  4759  15DC  0021               	movlb	1	; select bank1
  4760  15DD  0868               	movf	??_main^(0+128),w
  4761  15DE  0020               	movlb	0	; select bank0
  4762  15DF  00A0               	movwf	___xxtofl@val
  4763  15E0  3000               	movlw	0
  4764  15E1  319F  276A  3195   	fcall	___xxtofl
  4765  15E4  0020               	movlb	0	; select bank0
  4766  15E5  0823               	movf	?___xxtofl+3,w
  4767  15E6  00CB               	movwf	___fltol@f1+3
  4768  15E7  0822               	movf	?___xxtofl+2,w
  4769  15E8  00CA               	movwf	___fltol@f1+2
  4770  15E9  0821               	movf	?___xxtofl+1,w
  4771  15EA  00C9               	movwf	___fltol@f1+1
  4772  15EB  0820               	movf	?___xxtofl,w
  4773  15EC  00C8               	movwf	___fltol@f1
  4774  15ED  319E  2610  3195   	fcall	___fltol
  4775  15F0  0020               	movlb	0	; select bank0
  4776  15F1  0849               	movf	?___fltol+1,w
  4777  15F2  0022               	movlb	2	; select bank2
  4778  15F3  00CA               	movwf	(main@leerT+1)^(0+256)
  4779  15F4  0020               	movlb	0	; select bank0
  4780  15F5  0848               	movf	?___fltol,w
  4781  15F6  0022               	movlb	2	; select bank2
  4782  15F7  00C9               	movwf	main@leerT^(0+256)
  4783                           
  4784                           ;Main.c: 51:         temp = (leerT * 0.02) - 273.15;
  4785  15F8  30C3               	movlw	195
  4786  15F9  0020               	movlb	0	; select bank0
  4787  15FA  00CB               	movwf	___fladd@b+3
  4788  15FB  3088               	movlw	136
  4789  15FC  00CA               	movwf	___fladd@b+2
  4790  15FD  3093               	movlw	147
  4791  15FE  00C9               	movwf	___fladd@b+1
  4792  15FF  3033               	movlw	51
  4793  1600  00C8               	movwf	___fladd@b
  4794  1601  303C               	movlw	60
  4795  1602  00B1               	movwf	___flmul@b+3
  4796  1603  30A3               	movlw	163
  4797  1604  00B0               	movwf	___flmul@b+2
  4798  1605  30D7               	movlw	215
  4799  1606  00AF               	movwf	___flmul@b+1
  4800  1607  300A               	movlw	10
  4801  1608  00AE               	movwf	___flmul@b
  4802  1609  0022               	movlb	2	; select bank2
  4803  160A  0849               	movf	main@leerT^(0+256),w
  4804  160B  0020               	movlb	0	; select bank0
  4805  160C  00A0               	movwf	___xxtofl@val
  4806  160D  0022               	movlb	2	; select bank2
  4807  160E  084A               	movf	(main@leerT+1)^(0+256),w
  4808  160F  0020               	movlb	0	; select bank0
  4809  1610  00A1               	movwf	___xxtofl@val+1
  4810  1611  01A2               	clrf	___xxtofl@val+2
  4811  1612  01A3               	clrf	___xxtofl@val+3
  4812  1613  3000               	movlw	0
  4813  1614  319F  276A  3195   	fcall	___xxtofl
  4814  1617  0020               	movlb	0	; select bank0
  4815  1618  0823               	movf	?___xxtofl+3,w
  4816  1619  00B5               	movwf	___flmul@a+3
  4817  161A  0822               	movf	?___xxtofl+2,w
  4818  161B  00B4               	movwf	___flmul@a+2
  4819  161C  0821               	movf	?___xxtofl+1,w
  4820  161D  00B3               	movwf	___flmul@a+1
  4821  161E  0820               	movf	?___xxtofl,w
  4822  161F  00B2               	movwf	___flmul@a
  4823  1620  318A  2206  3195   	fcall	___flmul
  4824  1623  0020               	movlb	0	; select bank0
  4825  1624  0831               	movf	?___flmul+3,w
  4826  1625  00CF               	movwf	___fladd@a+3
  4827  1626  0830               	movf	?___flmul+2,w
  4828  1627  00CE               	movwf	___fladd@a+2
  4829  1628  082F               	movf	?___flmul+1,w
  4830  1629  00CD               	movwf	___fladd@a+1
  4831  162A  082E               	movf	?___flmul,w
  4832  162B  00CC               	movwf	___fladd@a
  4833  162C  3188  2024  3195   	fcall	___fladd
  4834  162F  0020               	movlb	0	; select bank0
  4835  1630  084B               	movf	?___fladd+3,w
  4836  1631  0022               	movlb	2	; select bank2
  4837  1632  00CE               	movwf	(main@temp+3)^(0+256)
  4838  1633  0020               	movlb	0	; select bank0
  4839  1634  084A               	movf	?___fladd+2,w
  4840  1635  0022               	movlb	2	; select bank2
  4841  1636  00CD               	movwf	(main@temp+2)^(0+256)
  4842  1637  0020               	movlb	0	; select bank0
  4843  1638  0849               	movf	?___fladd+1,w
  4844  1639  0022               	movlb	2	; select bank2
  4845  163A  00CC               	movwf	(main@temp+1)^(0+256)
  4846  163B  0020               	movlb	0	; select bank0
  4847  163C  0848               	movf	?___fladd,w
  4848  163D  0022               	movlb	2	; select bank2
  4849  163E  00CB               	movwf	main@temp^(0+256)
  4850                           
  4851                           ;Main.c: 52:         printf("Tobj: %3.2f\t%d\t0x%x\n",temp,leerT,leerT);
  4852  163F  3034               	movlw	low (STR_2| (0+32768))
  4853  1640  00BF               	movwf	printf@fmt^(0+256)
  4854  1641  3098               	movlw	high (STR_2| (0+32768))
  4855  1642  00C0               	movwf	(printf@fmt^(0+256)+1)
  4856  1643  084E               	movf	(main@temp+3)^(0+256),w
  4857  1644  00C4               	movwf	((?_printf+3)^(0+256)+2)
  4858  1645  084D               	movf	(main@temp+2)^(0+256),w
  4859  1646  00C3               	movwf	((?_printf+2)^(0+256)+2)
  4860  1647  084C               	movf	(main@temp+1)^(0+256),w
  4861  1648  00C2               	movwf	((?_printf+1)^(0+256)+2)
  4862  1649  084B               	movf	main@temp^(0+256),w
  4863  164A  00C1               	movwf	(?_printf^(0+256)+2)
  4864  164B  084A               	movf	(main@leerT+1)^(0+256),w
  4865  164C  00C6               	movwf	((?_printf+1)^(0+256)+6)
  4866  164D  0849               	movf	main@leerT^(0+256),w
  4867  164E  00C5               	movwf	(?_printf^(0+256)+6)
  4868  164F  084A               	movf	(main@leerT+1)^(0+256),w
  4869  1650  00C8               	movwf	((?_printf+1)^(0+256)+8)
  4870  1651  0849               	movf	main@leerT^(0+256),w
  4871  1652  00C7               	movwf	(?_printf^(0+256)+8)
  4872  1653  3199  21B4  3195   	fcall	_printf
  4873                           
  4874                           ;Main.c: 53:         temp = readEmissivity();
  4875  1656  319B  236E  3195   	fcall	_readEmissivity
  4876  1659  0020               	movlb	0	; select bank0
  4877  165A  0831               	movf	?_readEmissivity+3,w
  4878  165B  0022               	movlb	2	; select bank2
  4879  165C  00CE               	movwf	(main@temp+3)^(0+256)
  4880  165D  0020               	movlb	0	; select bank0
  4881  165E  0830               	movf	?_readEmissivity+2,w
  4882  165F  0022               	movlb	2	; select bank2
  4883  1660  00CD               	movwf	(main@temp+2)^(0+256)
  4884  1661  0020               	movlb	0	; select bank0
  4885  1662  082F               	movf	?_readEmissivity+1,w
  4886  1663  0022               	movlb	2	; select bank2
  4887  1664  00CC               	movwf	(main@temp+1)^(0+256)
  4888  1665  0020               	movlb	0	; select bank0
  4889  1666  082E               	movf	?_readEmissivity,w
  4890  1667  0022               	movlb	2	; select bank2
  4891  1668  00CB               	movwf	main@temp^(0+256)
  4892                           
  4893                           ;Main.c: 54:         printf("readEmissivity: %3.2f\n",temp);
  4894  1669  301D               	movlw	low (STR_3| (0+32768))
  4895  166A  00BF               	movwf	printf@fmt^(0+256)
  4896  166B  3098               	movlw	high (STR_3| (0+32768))
  4897  166C  00C0               	movwf	(printf@fmt^(0+256)+1)
  4898  166D  084E               	movf	(main@temp+3)^(0+256),w
  4899  166E  00C4               	movwf	((?_printf+3)^(0+256)+2)
  4900  166F  084D               	movf	(main@temp+2)^(0+256),w
  4901  1670  00C3               	movwf	((?_printf+2)^(0+256)+2)
  4902  1671  084C               	movf	(main@temp+1)^(0+256),w
  4903  1672  00C2               	movwf	((?_printf+1)^(0+256)+2)
  4904  1673  084B               	movf	main@temp^(0+256),w
  4905  1674  00C1               	movwf	(?_printf^(0+256)+2)
  4906  1675  3199  21B4  3195   	fcall	_printf
  4907                           
  4908                           ;Main.c: 56:         _delay((unsigned long)((500)*(32000000UL/4000.0)));
  4909  1678  3015               	movlw	21
  4910  1679  0021               	movlb	1	; select bank1
  4911  167A  00E9               	movwf	(??_main^(0+128)+1)
  4912  167B  304B               	movlw	75
  4913  167C  00E8               	movwf	??_main^(0+128)
  4914  167D  30BE               	movlw	190
  4915  167E                     u7447:
  4916  167E  0B89               	decfsz	9,f
  4917  167F  2E7E               	goto	u7447
  4918  1680  0BE8               	decfsz	??_main^(0+128),f
  4919  1681  2E7E               	goto	u7447
  4920  1682  0BE9               	decfsz	(??_main^(0+128)+1),f
  4921  1683  2E7E               	goto	u7447
  4922  1684  0000               	nop
  4923  1685  2D49               	goto	l4921
  4924  1686                     __end_of_main:
  4925                           
  4926                           	psect	text1
  4927  1C37                     __ptext1:	
  4928 ;; *************** function _writeEmissivity *****************
  4929 ;; Defined at:
  4930 ;;		line 55 in file "MLX90614.c"
  4931 ;; Parameters:    Size  Location     Type
  4932 ;;  emissivity      4   49[BANK0 ] float 
  4933 ;; Auto vars:     Size  Location     Type
  4934 ;;  ereg            2   54[BANK0 ] unsigned short 
  4935 ;; Return value:  Size  Location     Type
  4936 ;;                  1    wreg      void 
  4937 ;; Registers used:
  4938 ;;		wreg, status,2, status,0, pclath, cstack
  4939 ;; Tracked objects:
  4940 ;;		On entry : 0/0
  4941 ;;		On exit  : 0/0
  4942 ;;		Unchanged: 0/0
  4943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4944 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4945 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4946 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4947 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4948 ;;Total ram usage:        7 bytes
  4949 ;; Hardware stack levels used: 1
  4950 ;; Hardware stack levels required when called: 2
  4951 ;; This function calls:
  4952 ;;		_MLX90614_WriteReg
  4953 ;;		___flmul
  4954 ;;		___fltol
  4955 ;; This function is called by:
  4956 ;;		_main
  4957 ;; This function uses a non-reentrant model
  4958 ;;
  4959                           
  4960                           
  4961                           ;psect for function _writeEmissivity
  4962  1C37                     _writeEmissivity:
  4963                           
  4964                           ;MLX90614.c: 56:     uint16_t ereg = (uint16_t)(0xffff * emissivity);
  4965                           
  4966                           ;incstack = 0
  4967                           ; Regs used in _writeEmissivity: [wreg+status,2+status,0+pclath+cstack]
  4968  1C37  0020               	movlb	0	; select bank0
  4969  1C38  0854               	movf	writeEmissivity@emissivity+3,w
  4970  1C39  00B5               	movwf	___flmul@a+3
  4971  1C3A  0853               	movf	writeEmissivity@emissivity+2,w
  4972  1C3B  00B4               	movwf	___flmul@a+2
  4973  1C3C  0852               	movf	writeEmissivity@emissivity+1,w
  4974  1C3D  00B3               	movwf	___flmul@a+1
  4975  1C3E  0851               	movf	writeEmissivity@emissivity,w
  4976  1C3F  00B2               	movwf	___flmul@a
  4977  1C40  3047               	movlw	71
  4978  1C41  00B1               	movwf	___flmul@b+3
  4979  1C42  307F               	movlw	127
  4980  1C43  00B0               	movwf	___flmul@b+2
  4981  1C44  30FF               	movlw	255
  4982  1C45  00AF               	movwf	___flmul@b+1
  4983  1C46  3000               	movlw	0
  4984  1C47  00AE               	movwf	___flmul@b
  4985  1C48  318A  2206  319C   	fcall	___flmul
  4986  1C4B  0020               	movlb	0	; select bank0
  4987  1C4C  0831               	movf	?___flmul+3,w
  4988  1C4D  00CB               	movwf	___fltol@f1+3
  4989  1C4E  0830               	movf	?___flmul+2,w
  4990  1C4F  00CA               	movwf	___fltol@f1+2
  4991  1C50  082F               	movf	?___flmul+1,w
  4992  1C51  00C9               	movwf	___fltol@f1+1
  4993  1C52  082E               	movf	?___flmul,w
  4994  1C53  00C8               	movwf	___fltol@f1
  4995  1C54  319E  2610  319C   	fcall	___fltol
  4996  1C57  0020               	movlb	0	; select bank0
  4997  1C58  0849               	movf	?___fltol+1,w
  4998  1C59  00D7               	movwf	writeEmissivity@ereg+1
  4999  1C5A  0848               	movf	?___fltol,w
  5000  1C5B  00D6               	movwf	writeEmissivity@ereg
  5001                           
  5002                           ;MLX90614.c: 57:     MLX90614_WriteReg(0x24,0);
  5003  1C5C  3000               	movlw	0
  5004  1C5D  00F1               	movwf	MLX90614_WriteReg@val
  5005  1C5E  00F2               	movwf	MLX90614_WriteReg@val+1
  5006  1C5F  3024               	movlw	36
  5007  1C60  319A  2237  319C   	fcall	_MLX90614_WriteReg
  5008                           
  5009                           ;MLX90614.c: 58:     _delay((unsigned long)((10)*(32000000UL/4000.0)));
  5010  1C63  3068               	movlw	104
  5011  1C64  0020               	movlb	0	; select bank0
  5012  1C65  00D5               	movwf	??_writeEmissivity
  5013  1C66  30E4               	movlw	228
  5014  1C67                     u7457:
  5015  1C67  0B89               	decfsz	9,f
  5016  1C68  2C67               	goto	u7457
  5017  1C69  0BD5               	decfsz	??_writeEmissivity,f
  5018  1C6A  2C67               	goto	u7457
  5019  1C6B  0000               	nop
  5020                           
  5021                           ;MLX90614.c: 59:     MLX90614_WriteReg(0x24,ereg);
  5022  1C6C  0020               	movlb	0	; select bank0
  5023  1C6D  0857               	movf	writeEmissivity@ereg+1,w
  5024  1C6E  00F2               	movwf	MLX90614_WriteReg@val+1
  5025  1C6F  0856               	movf	writeEmissivity@ereg,w
  5026  1C70  00F1               	movwf	MLX90614_WriteReg@val
  5027  1C71  3024               	movlw	36
  5028  1C72  319A  2237  319C   	fcall	_MLX90614_WriteReg
  5029                           
  5030                           ;MLX90614.c: 60:     _delay((unsigned long)((10)*(32000000UL/4000.0)));
  5031  1C75  3068               	movlw	104
  5032  1C76  0020               	movlb	0	; select bank0
  5033  1C77  00D5               	movwf	??_writeEmissivity
  5034  1C78  30E4               	movlw	228
  5035  1C79                     u7467:
  5036  1C79  0B89               	decfsz	9,f
  5037  1C7A  2C79               	goto	u7467
  5038  1C7B  0BD5               	decfsz	??_writeEmissivity,f
  5039  1C7C  2C79               	goto	u7467
  5040  1C7D  0000               	nop
  5041  1C7E  0008               	return
  5042  1C7F                     __end_of_writeEmissivity:
  5043                           
  5044                           	psect	text2
  5045  1A37                     __ptext2:	
  5046 ;; *************** function _MLX90614_WriteReg *****************
  5047 ;; Defined at:
  5048 ;;		line 43 in file "MLX90614.c"
  5049 ;; Parameters:    Size  Location     Type
  5050 ;;  reg             1    wreg     unsigned char 
  5051 ;;  val             2    1[COMMON] unsigned short 
  5052 ;; Auto vars:     Size  Location     Type
  5053 ;;  reg             1    3[COMMON] unsigned char 
  5054 ;; Return value:  Size  Location     Type
  5055 ;;                  1    wreg      void 
  5056 ;; Registers used:
  5057 ;;		wreg, status,2, status,0, pclath, cstack
  5058 ;; Tracked objects:
  5059 ;;		On entry : 0/0
  5060 ;;		On exit  : 0/0
  5061 ;;		Unchanged: 0/0
  5062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5063 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5064 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5066 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5067 ;;Total ram usage:        3 bytes
  5068 ;; Hardware stack levels used: 1
  5069 ;; Hardware stack levels required when called: 1
  5070 ;; This function calls:
  5071 ;;		_I2C_restart
  5072 ;;		_I2C_start
  5073 ;;		_I2C_stop
  5074 ;;		_I2C_write
  5075 ;; This function is called by:
  5076 ;;		_writeEmissivity
  5077 ;; This function uses a non-reentrant model
  5078 ;;
  5079                           
  5080                           
  5081                           ;psect for function _MLX90614_WriteReg
  5082  1A37                     _MLX90614_WriteReg:
  5083                           
  5084                           ;incstack = 0
  5085                           ; Regs used in _MLX90614_WriteReg: [wreg+status,2+status,0+pclath+cstack]
  5086                           ;MLX90614_WriteReg@reg stored from wreg
  5087  1A37  00F3               	movwf	MLX90614_WriteReg@reg
  5088                           
  5089                           ;MLX90614.c: 44:     I2C_start();
  5090  1A38  3198  20BF  319A   	fcall	_I2C_start
  5091                           
  5092                           ;MLX90614.c: 45:     I2C_write(0x5A << 1);
  5093  1A3B  30B4               	movlw	180
  5094  1A3C  3199  2106  319A   	fcall	_I2C_write
  5095                           
  5096                           ;MLX90614.c: 46:     I2C_write(reg);
  5097  1A3F  0873               	movf	MLX90614_WriteReg@reg,w
  5098  1A40  3199  2106  319A   	fcall	_I2C_write
  5099                           
  5100                           ;MLX90614.c: 47:     I2C_restart();
  5101  1A43  3198  20BA  319A   	fcall	_I2C_restart
  5102                           
  5103                           ;MLX90614.c: 48:     I2C_write((0x5A << 1)| 0x01);
  5104  1A46  30B5               	movlw	181
  5105  1A47  3199  2106  319A   	fcall	_I2C_write
  5106                           
  5107                           ;MLX90614.c: 49:     I2C_write(val & 0xff);
  5108  1A4A  0871               	movf	MLX90614_WriteReg@val,w
  5109  1A4B  3199  2106  319A   	fcall	_I2C_write
  5110                           
  5111                           ;MLX90614.c: 50:     I2C_write(val >> 8);
  5112  1A4E  0872               	movf	MLX90614_WriteReg@val+1,w
  5113  1A4F  3199  2106  319A   	fcall	_I2C_write
  5114                           
  5115                           ;MLX90614.c: 51:     I2C_stop();
  5116  1A52  3198  20C4         	fcall	_I2C_stop
  5117  1A54  0008               	return
  5118  1A55                     __end_of_MLX90614_WriteReg:
  5119                           
  5120                           	psect	text3
  5121  1C7F                     __ptext3:	
  5122 ;; *************** function _serial_init *****************
  5123 ;; Defined at:
  5124 ;;		line 4 in file "uart.c"
  5125 ;; Parameters:    Size  Location     Type
  5126 ;;  baudios         4    0[BANK0 ] unsigned long 
  5127 ;; Auto vars:     Size  Location     Type
  5128 ;;  sx              2    8[BANK0 ] unsigned short 
  5129 ;; Return value:  Size  Location     Type
  5130 ;;                  1    wreg      void 
  5131 ;; Registers used:
  5132 ;;		wreg, status,2, status,0, pclath, cstack
  5133 ;; Tracked objects:
  5134 ;;		On entry : 0/0
  5135 ;;		On exit  : 0/0
  5136 ;;		Unchanged: 0/0
  5137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5138 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5139 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5140 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5141 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5142 ;;Total ram usage:       10 bytes
  5143 ;; Hardware stack levels used: 1
  5144 ;; Hardware stack levels required when called: 1
  5145 ;; This function calls:
  5146 ;;		___lldiv
  5147 ;; This function is called by:
  5148 ;;		_main
  5149 ;; This function uses a non-reentrant model
  5150 ;;
  5151                           
  5152                           
  5153                           ;psect for function _serial_init
  5154  1C7F                     _serial_init:
  5155                           
  5156                           ;uart.c: 5:     uint16_t sx;;uart.c: 8:     BAUD1CON = 0x08;
  5157                           
  5158                           ;incstack = 0
  5159                           ; Regs used in _serial_init: [wreg+status,2+status,0+pclath+cstack]
  5160  1C7F  3008               	movlw	8
  5161  1C80  0022               	movlb	2	; select bank2
  5162  1C81  009F               	movwf	31	;volatile
  5163                           
  5164                           ;uart.c: 10:     RC1STA = 0b10010000;
  5165  1C82  3090               	movlw	144
  5166  1C83  009D               	movwf	29	;volatile
  5167                           
  5168                           ;uart.c: 16:     TX1STA = 0b00100100;
  5169  1C84  3024               	movlw	36
  5170  1C85  009E               	movwf	30	;volatile
  5171                           
  5172                           ;uart.c: 21:     sx = (uint16_t) (((32000000UL/baudios)/4 ) - 1 );
  5173  1C86  0020               	movlb	0	; select bank0
  5174  1C87  0823               	movf	serial_init@baudios+3,w
  5175  1C88  00F3               	movwf	___lldiv@divisor+3
  5176  1C89  0822               	movf	serial_init@baudios+2,w
  5177  1C8A  00F2               	movwf	___lldiv@divisor+2
  5178  1C8B  0821               	movf	serial_init@baudios+1,w
  5179  1C8C  00F1               	movwf	___lldiv@divisor+1
  5180  1C8D  0820               	movf	serial_init@baudios,w
  5181  1C8E  00F0               	movwf	___lldiv@divisor
  5182  1C8F  3001               	movlw	1
  5183  1C90  00F7               	movwf	___lldiv@dividend+3
  5184  1C91  30E8               	movlw	232
  5185  1C92  00F6               	movwf	___lldiv@dividend+2
  5186  1C93  3048               	movlw	72
  5187  1C94  00F5               	movwf	___lldiv@dividend+1
  5188  1C95  3000               	movlw	0
  5189  1C96  00F4               	movwf	___lldiv@dividend
  5190  1C97  319D  25BE  319C   	fcall	___lldiv
  5191  1C9A  0870               	movf	?___lldiv,w
  5192  1C9B  0020               	movlb	0	; select bank0
  5193  1C9C  00A4               	movwf	??_serial_init
  5194  1C9D  0871               	movf	?___lldiv+1,w
  5195  1C9E  00A5               	movwf	??_serial_init+1
  5196  1C9F  0872               	movf	?___lldiv+2,w
  5197  1CA0  00A6               	movwf	??_serial_init+2
  5198  1CA1  0873               	movf	?___lldiv+3,w
  5199  1CA2  00A7               	movwf	??_serial_init+3
  5200  1CA3  3002               	movlw	2
  5201  1CA4                     u7415:
  5202  1CA4  36A7               	lsrf	??_serial_init+3,f
  5203  1CA5  0CA6               	rrf	??_serial_init+2,f
  5204  1CA6  0CA5               	rrf	??_serial_init+1,f
  5205  1CA7  0CA4               	rrf	??_serial_init,f
  5206  1CA8  0B89               	decfsz	9,f
  5207  1CA9  2CA4               	goto	u7415
  5208  1CAA  0824               	movf	??_serial_init,w
  5209  1CAB  3EFF               	addlw	255
  5210  1CAC  00A8               	movwf	serial_init@sx
  5211  1CAD  30FF               	movlw	255
  5212  1CAE  3D25               	addwfc	??_serial_init+1,w
  5213  1CAF  00A9               	movwf	serial_init@sx+1
  5214                           
  5215                           ;uart.c: 22:     SP1BRGL = (uint8_t)sx;
  5216  1CB0  0828               	movf	serial_init@sx,w
  5217  1CB1  0022               	movlb	2	; select bank2
  5218  1CB2  009B               	movwf	27	;volatile
  5219                           
  5220                           ;uart.c: 23:     SP1BRGH = (uint8_t)(sx>>8);
  5221  1CB3  0020               	movlb	0	; select bank0
  5222  1CB4  0829               	movf	serial_init@sx+1,w
  5223  1CB5  0022               	movlb	2	; select bank2
  5224  1CB6  009C               	movwf	28	;volatile
  5225                           
  5226                           ;uart.c: 28:     TRISC = TRISC & ~(1<<0);
  5227  1CB7  0020               	movlb	0	; select bank0
  5228  1CB8  0813               	movf	19,w	;volatile
  5229  1CB9  39FE               	andlw	254
  5230  1CBA  0093               	movwf	19	;volatile
  5231                           
  5232                           ;uart.c: 29:     TRISC = TRISC |(1<<1);
  5233  1CBB  0813               	movf	19,w	;volatile
  5234  1CBC  3802               	iorlw	2
  5235  1CBD  0093               	movwf	19	;volatile
  5236                           
  5237                           ;uart.c: 30:     ANSELC = ANSELC & ~(1<<7);
  5238  1CBE  003E               	movlb	30	; select bank30
  5239  1CBF  084E               	movf	78,w	;volatile
  5240  1CC0  397F               	andlw	127
  5241  1CC1  00CE               	movwf	78	;volatile
  5242                           
  5243                           ;uart.c: 31:     ANSELC = ANSELC & ~(1<<2);
  5244  1CC2  084E               	movf	78,w	;volatile
  5245  1CC3  39FB               	andlw	251
  5246  1CC4  00CE               	movwf	78	;volatile
  5247                           
  5248                           ;uart.c: 32:     RXPPS = 0x11;
  5249  1CC5  3011               	movlw	17
  5250  1CC6  003D               	movlb	29	; select bank29
  5251  1CC7  00CB               	movwf	75	;volatile
  5252                           
  5253                           ;uart.c: 34:     RC0PPS = 0x10;
  5254  1CC8  3010               	movlw	16
  5255  1CC9  003E               	movlb	30	; select bank30
  5256  1CCA  00A0               	movwf	32	;volatile
  5257  1CCB  0008               	return
  5258  1CCC                     __end_of_serial_init:
  5259                           
  5260                           	psect	text4
  5261  1DBE                     __ptext4:	
  5262 ;; *************** function ___lldiv *****************
  5263 ;; Defined at:
  5264 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
  5265 ;; Parameters:    Size  Location     Type
  5266 ;;  divisor         4    0[COMMON] unsigned long 
  5267 ;;  dividend        4    4[COMMON] unsigned long 
  5268 ;; Auto vars:     Size  Location     Type
  5269 ;;  quotient        4    9[COMMON] unsigned long 
  5270 ;;  counter         1   13[COMMON] unsigned char 
  5271 ;; Return value:  Size  Location     Type
  5272 ;;                  4    0[COMMON] unsigned long 
  5273 ;; Registers used:
  5274 ;;		wreg, status,2, status,0
  5275 ;; Tracked objects:
  5276 ;;		On entry : 0/0
  5277 ;;		On exit  : 0/0
  5278 ;;		Unchanged: 0/0
  5279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5280 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5281 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5282 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5283 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5284 ;;Total ram usage:       14 bytes
  5285 ;; Hardware stack levels used: 1
  5286 ;; This function calls:
  5287 ;;		Nothing
  5288 ;; This function is called by:
  5289 ;;		_serial_init
  5290 ;; This function uses a non-reentrant model
  5291 ;;
  5292                           
  5293                           
  5294                           ;psect for function ___lldiv
  5295  1DBE                     ___lldiv:
  5296                           
  5297                           ;incstack = 0
  5298                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5299  1DBE  3000               	movlw	0
  5300  1DBF  00FC               	movwf	___lldiv@quotient+3
  5301  1DC0  3000               	movlw	0
  5302  1DC1  00FB               	movwf	___lldiv@quotient+2
  5303  1DC2  3000               	movlw	0
  5304  1DC3  00FA               	movwf	___lldiv@quotient+1
  5305  1DC4  3000               	movlw	0
  5306  1DC5  00F9               	movwf	___lldiv@quotient
  5307  1DC6  0873               	movf	___lldiv@divisor+3,w
  5308  1DC7  0472               	iorwf	___lldiv@divisor+2,w
  5309  1DC8  0471               	iorwf	___lldiv@divisor+1,w
  5310  1DC9  0470               	iorwf	___lldiv@divisor,w
  5311  1DCA  1903               	skipnz
  5312  1DCB  2E07               	goto	l4789
  5313  1DCC  01FD               	clrf	___lldiv@counter
  5314  1DCD  0AFD               	incf	___lldiv@counter,f
  5315  1DCE                     l4775:
  5316  1DCE  1BF3               	btfsc	___lldiv@divisor+3,7
  5317  1DCF  2DDC               	goto	l4777
  5318  1DD0  3001               	movlw	1
  5319  1DD1                     u7205:
  5320  1DD1  35F0               	lslf	___lldiv@divisor,f
  5321  1DD2  0DF1               	rlf	___lldiv@divisor+1,f
  5322  1DD3  0DF2               	rlf	___lldiv@divisor+2,f
  5323  1DD4  0DF3               	rlf	___lldiv@divisor+3,f
  5324  1DD5  0B89               	decfsz	9,f
  5325  1DD6  2DD1               	goto	u7205
  5326  1DD7  3001               	movlw	1
  5327  1DD8  00F8               	movwf	??___lldiv
  5328  1DD9  0878               	movf	??___lldiv,w
  5329  1DDA  07FD               	addwf	___lldiv@counter,f
  5330  1DDB  2DCE               	goto	l4775
  5331  1DDC                     l4777:
  5332  1DDC  3001               	movlw	1
  5333  1DDD                     u7225:
  5334  1DDD  35F9               	lslf	___lldiv@quotient,f
  5335  1DDE  0DFA               	rlf	___lldiv@quotient+1,f
  5336  1DDF  0DFB               	rlf	___lldiv@quotient+2,f
  5337  1DE0  0DFC               	rlf	___lldiv@quotient+3,f
  5338  1DE1  0B89               	decfsz	9,f
  5339  1DE2  2DDD               	goto	u7225
  5340  1DE3  0873               	movf	___lldiv@divisor+3,w
  5341  1DE4  0277               	subwf	___lldiv@dividend+3,w
  5342  1DE5  1D03               	skipz
  5343  1DE6  2DF1               	goto	u7235
  5344  1DE7  0872               	movf	___lldiv@divisor+2,w
  5345  1DE8  0276               	subwf	___lldiv@dividend+2,w
  5346  1DE9  1D03               	skipz
  5347  1DEA  2DF1               	goto	u7235
  5348  1DEB  0871               	movf	___lldiv@divisor+1,w
  5349  1DEC  0275               	subwf	___lldiv@dividend+1,w
  5350  1DED  1D03               	skipz
  5351  1DEE  2DF1               	goto	u7235
  5352  1DEF  0870               	movf	___lldiv@divisor,w
  5353  1DF0  0274               	subwf	___lldiv@dividend,w
  5354  1DF1                     u7235:
  5355  1DF1  1C03               	skipc
  5356  1DF2  2DFC               	goto	l4785
  5357  1DF3  0870               	movf	___lldiv@divisor,w
  5358  1DF4  02F4               	subwf	___lldiv@dividend,f
  5359  1DF5  0871               	movf	___lldiv@divisor+1,w
  5360  1DF6  3BF5               	subwfb	___lldiv@dividend+1,f
  5361  1DF7  0872               	movf	___lldiv@divisor+2,w
  5362  1DF8  3BF6               	subwfb	___lldiv@dividend+2,f
  5363  1DF9  0873               	movf	___lldiv@divisor+3,w
  5364  1DFA  3BF7               	subwfb	___lldiv@dividend+3,f
  5365  1DFB  1479               	bsf	___lldiv@quotient,0
  5366  1DFC                     l4785:
  5367  1DFC  3001               	movlw	1
  5368  1DFD                     u7245:
  5369  1DFD  36F3               	lsrf	___lldiv@divisor+3,f
  5370  1DFE  0CF2               	rrf	___lldiv@divisor+2,f
  5371  1DFF  0CF1               	rrf	___lldiv@divisor+1,f
  5372  1E00  0CF0               	rrf	___lldiv@divisor,f
  5373  1E01  0B89               	decfsz	9,f
  5374  1E02  2DFD               	goto	u7245
  5375  1E03  3001               	movlw	1
  5376  1E04  02FD               	subwf	___lldiv@counter,f
  5377  1E05  1D03               	btfss	3,2
  5378  1E06  2DDC               	goto	l4777
  5379  1E07                     l4789:
  5380  1E07  087C               	movf	___lldiv@quotient+3,w
  5381  1E08  00F3               	movwf	?___lldiv+3
  5382  1E09  087B               	movf	___lldiv@quotient+2,w
  5383  1E0A  00F2               	movwf	?___lldiv+2
  5384  1E0B  087A               	movf	___lldiv@quotient+1,w
  5385  1E0C  00F1               	movwf	?___lldiv+1
  5386  1E0D  0879               	movf	___lldiv@quotient,w
  5387  1E0E  00F0               	movwf	?___lldiv
  5388  1E0F  0008               	return
  5389  1E10                     __end_of___lldiv:
  5390                           
  5391                           	psect	text5
  5392  1B6E                     __ptext5:	
  5393 ;; *************** function _readEmissivity *****************
  5394 ;; Defined at:
  5395 ;;		line 37 in file "MLX90614.c"
  5396 ;; Parameters:    Size  Location     Type
  5397 ;;		None
  5398 ;; Auto vars:     Size  Location     Type
  5399 ;;  reg             4   22[BANK0 ] float 
  5400 ;; Return value:  Size  Location     Type
  5401 ;;                  4   14[BANK0 ] float 
  5402 ;; Registers used:
  5403 ;;		wreg, status,2, status,0, pclath, cstack
  5404 ;; Tracked objects:
  5405 ;;		On entry : 0/0
  5406 ;;		On exit  : 0/0
  5407 ;;		Unchanged: 0/0
  5408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5409 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5410 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5411 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5412 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5413 ;;Total ram usage:       12 bytes
  5414 ;; Hardware stack levels used: 1
  5415 ;; Hardware stack levels required when called: 3
  5416 ;; This function calls:
  5417 ;;		_MLX90614_ReadReg
  5418 ;;		___fldiv
  5419 ;;		___xxtofl
  5420 ;; This function is called by:
  5421 ;;		_main
  5422 ;; This function uses a non-reentrant model
  5423 ;;
  5424                           
  5425                           
  5426                           ;psect for function _readEmissivity
  5427  1B6E                     _readEmissivity:
  5428                           
  5429                           ;MLX90614.c: 38:     float reg;;MLX90614.c: 39:     reg = MLX90614_ReadReg(0x24);
  5430                           
  5431                           ;incstack = 0
  5432                           ; Regs used in _readEmissivity: [wreg+status,2+status,0+pclath+cstack]
  5433  1B6E  3024               	movlw	36
  5434  1B6F  319A  22D3  319B   	fcall	_MLX90614_ReadReg
  5435  1B72  0871               	movf	?_MLX90614_ReadReg,w
  5436  1B73  0020               	movlb	0	; select bank0
  5437  1B74  00B2               	movwf	??_readEmissivity
  5438  1B75  0872               	movf	?_MLX90614_ReadReg+1,w
  5439  1B76  00B3               	movwf	??_readEmissivity+1
  5440  1B77  01B4               	clrf	??_readEmissivity+2
  5441  1B78  01B5               	clrf	??_readEmissivity+3
  5442  1B79  0835               	movf	??_readEmissivity+3,w
  5443  1B7A  00A3               	movwf	___xxtofl@val+3
  5444  1B7B  0834               	movf	??_readEmissivity+2,w
  5445  1B7C  00A2               	movwf	___xxtofl@val+2
  5446  1B7D  0833               	movf	??_readEmissivity+1,w
  5447  1B7E  00A1               	movwf	___xxtofl@val+1
  5448  1B7F  0832               	movf	??_readEmissivity,w
  5449  1B80  00A0               	movwf	___xxtofl@val
  5450  1B81  3000               	movlw	0
  5451  1B82  319F  276A  319B   	fcall	___xxtofl
  5452  1B85  0020               	movlb	0	; select bank0
  5453  1B86  0823               	movf	?___xxtofl+3,w
  5454  1B87  00B9               	movwf	readEmissivity@reg+3
  5455  1B88  0822               	movf	?___xxtofl+2,w
  5456  1B89  00B8               	movwf	readEmissivity@reg+2
  5457  1B8A  0821               	movf	?___xxtofl+1,w
  5458  1B8B  00B7               	movwf	readEmissivity@reg+1
  5459  1B8C  0820               	movf	?___xxtofl,w
  5460  1B8D  00B6               	movwf	readEmissivity@reg
  5461                           
  5462                           ;MLX90614.c: 40:     return (reg / 65535.0);
  5463  1B8E  3047               	movlw	71
  5464  1B8F  00F3               	movwf	___fldiv@a+3
  5465  1B90  307F               	movlw	127
  5466  1B91  00F2               	movwf	___fldiv@a+2
  5467  1B92  30FF               	movlw	255
  5468  1B93  00F1               	movwf	___fldiv@a+1
  5469  1B94  3000               	movlw	0
  5470  1B95  00F0               	movwf	___fldiv@a
  5471  1B96  0839               	movf	readEmissivity@reg+3,w
  5472  1B97  00F7               	movwf	___fldiv@b+3
  5473  1B98  0838               	movf	readEmissivity@reg+2,w
  5474  1B99  00F6               	movwf	___fldiv@b+2
  5475  1B9A  0837               	movf	readEmissivity@reg+1,w
  5476  1B9B  00F5               	movwf	___fldiv@b+1
  5477  1B9C  0836               	movf	readEmissivity@reg,w
  5478  1B9D  00F4               	movwf	___fldiv@b
  5479  1B9E  3196  2686         	fcall	___fldiv
  5480  1BA0  0873               	movf	?___fldiv+3,w
  5481  1BA1  0020               	movlb	0	; select bank0
  5482  1BA2  00B1               	movwf	?_readEmissivity+3
  5483  1BA3  0872               	movf	?___fldiv+2,w
  5484  1BA4  00B0               	movwf	?_readEmissivity+2
  5485  1BA5  0871               	movf	?___fldiv+1,w
  5486  1BA6  00AF               	movwf	?_readEmissivity+1
  5487  1BA7  0870               	movf	?___fldiv,w
  5488  1BA8  00AE               	movwf	?_readEmissivity
  5489  1BA9  0008               	return
  5490  1BAA                     __end_of_readEmissivity:
  5491                           
  5492                           	psect	text6
  5493  1F6A                     __ptext6:	
  5494 ;; *************** function ___xxtofl *****************
  5495 ;; Defined at:
  5496 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  5497 ;; Parameters:    Size  Location     Type
  5498 ;;  sign            1    wreg     unsigned char 
  5499 ;;  val             4    0[BANK0 ] long 
  5500 ;; Auto vars:     Size  Location     Type
  5501 ;;  sign            1    8[BANK0 ] unsigned char 
  5502 ;;  arg             4   10[BANK0 ] unsigned long 
  5503 ;;  exp             1    9[BANK0 ] unsigned char 
  5504 ;; Return value:  Size  Location     Type
  5505 ;;                  4    0[BANK0 ] unsigned char 
  5506 ;; Registers used:
  5507 ;;		wreg, status,2, status,0
  5508 ;; Tracked objects:
  5509 ;;		On entry : 0/0
  5510 ;;		On exit  : 0/0
  5511 ;;		Unchanged: 0/0
  5512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5513 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5514 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5515 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5516 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5517 ;;Total ram usage:       14 bytes
  5518 ;; Hardware stack levels used: 1
  5519 ;; This function calls:
  5520 ;;		Nothing
  5521 ;; This function is called by:
  5522 ;;		_main
  5523 ;;		_readEmissivity
  5524 ;; This function uses a non-reentrant model
  5525 ;;
  5526                           
  5527                           
  5528                           ;psect for function ___xxtofl
  5529  1F6A                     ___xxtofl:
  5530                           
  5531                           ;incstack = 0
  5532                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5533                           ;___xxtofl@sign stored from wreg
  5534  1F6A  0020               	movlb	0	; select bank0
  5535  1F6B  00A8               	movwf	___xxtofl@sign
  5536  1F6C  0828               	movf	___xxtofl@sign,w
  5537  1F6D  1D03               	btfss	3,2
  5538  1F6E  1FA3               	btfss	___xxtofl@val+3,7
  5539  1F6F  2F80               	goto	l4799
  5540  1F70  0920               	comf	___xxtofl@val,w
  5541  1F71  00AA               	movwf	___xxtofl@arg
  5542  1F72  0921               	comf	___xxtofl@val+1,w
  5543  1F73  00AB               	movwf	___xxtofl@arg+1
  5544  1F74  0922               	comf	___xxtofl@val+2,w
  5545  1F75  00AC               	movwf	___xxtofl@arg+2
  5546  1F76  0923               	comf	___xxtofl@val+3,w
  5547  1F77  00AD               	movwf	___xxtofl@arg+3
  5548  1F78  0AAA               	incf	___xxtofl@arg,f
  5549  1F79  1903               	skipnz
  5550  1F7A  0AAB               	incf	___xxtofl@arg+1,f
  5551  1F7B  1903               	skipnz
  5552  1F7C  0AAC               	incf	___xxtofl@arg+2,f
  5553  1F7D  1903               	skipnz
  5554  1F7E  0AAD               	incf	___xxtofl@arg+3,f
  5555  1F7F  2F88               	goto	l848
  5556  1F80                     l4799:
  5557  1F80  0823               	movf	___xxtofl@val+3,w
  5558  1F81  00AD               	movwf	___xxtofl@arg+3
  5559  1F82  0822               	movf	___xxtofl@val+2,w
  5560  1F83  00AC               	movwf	___xxtofl@arg+2
  5561  1F84  0821               	movf	___xxtofl@val+1,w
  5562  1F85  00AB               	movwf	___xxtofl@arg+1
  5563  1F86  0820               	movf	___xxtofl@val,w
  5564  1F87  00AA               	movwf	___xxtofl@arg
  5565  1F88                     l848:
  5566  1F88  0823               	movf	___xxtofl@val+3,w
  5567  1F89  0422               	iorwf	___xxtofl@val+2,w
  5568  1F8A  0421               	iorwf	___xxtofl@val+1,w
  5569  1F8B  0420               	iorwf	___xxtofl@val,w
  5570  1F8C  1D03               	skipz
  5571  1F8D  2F97               	goto	l4805
  5572  1F8E  3000               	movlw	0
  5573  1F8F  00A3               	movwf	?___xxtofl+3
  5574  1F90  3000               	movlw	0
  5575  1F91  00A2               	movwf	?___xxtofl+2
  5576  1F92  3000               	movlw	0
  5577  1F93  00A1               	movwf	?___xxtofl+1
  5578  1F94  3000               	movlw	0
  5579  1F95  00A0               	movwf	?___xxtofl
  5580  1F96  0008               	return
  5581  1F97                     l4805:
  5582  1F97  3096               	movlw	150
  5583  1F98  00A4               	movwf	??___xxtofl
  5584  1F99  0824               	movf	??___xxtofl,w
  5585  1F9A  00A9               	movwf	___xxtofl@exp
  5586  1F9B                     l4809:
  5587  1F9B  30FE               	movlw	254
  5588  1F9C  052D               	andwf	___xxtofl@arg+3,w
  5589  1F9D  1903               	btfsc	3,2
  5590  1F9E  2FBE               	goto	l854
  5591  1F9F  3001               	movlw	1
  5592  1FA0  00A4               	movwf	??___xxtofl
  5593  1FA1  0824               	movf	??___xxtofl,w
  5594  1FA2  07A9               	addwf	___xxtofl@exp,f
  5595  1FA3  3001               	movlw	1
  5596  1FA4                     u7295:
  5597  1FA4  36AD               	lsrf	___xxtofl@arg+3,f
  5598  1FA5  0CAC               	rrf	___xxtofl@arg+2,f
  5599  1FA6  0CAB               	rrf	___xxtofl@arg+1,f
  5600  1FA7  0CAA               	rrf	___xxtofl@arg,f
  5601  1FA8  0B89               	decfsz	9,f
  5602  1FA9  2FA4               	goto	u7295
  5603  1FAA  2F9B               	goto	l4809
  5604  1FAB                     l4811:
  5605  1FAB  3001               	movlw	1
  5606  1FAC  00A4               	movwf	??___xxtofl
  5607  1FAD  0824               	movf	??___xxtofl,w
  5608  1FAE  07A9               	addwf	___xxtofl@exp,f
  5609  1FAF  3001               	movlw	1
  5610  1FB0  07AA               	addwf	___xxtofl@arg,f
  5611  1FB1  3000               	movlw	0
  5612  1FB2  3DAB               	addwfc	___xxtofl@arg+1,f
  5613  1FB3  3000               	movlw	0
  5614  1FB4  3DAC               	addwfc	___xxtofl@arg+2,f
  5615  1FB5  3000               	movlw	0
  5616  1FB6  3DAD               	addwfc	___xxtofl@arg+3,f
  5617  1FB7  3001               	movlw	1
  5618  1FB8                     u7315:
  5619  1FB8  36AD               	lsrf	___xxtofl@arg+3,f
  5620  1FB9  0CAC               	rrf	___xxtofl@arg+2,f
  5621  1FBA  0CAB               	rrf	___xxtofl@arg+1,f
  5622  1FBB  0CAA               	rrf	___xxtofl@arg,f
  5623  1FBC  0B89               	decfsz	9,f
  5624  1FBD  2FB8               	goto	u7315
  5625  1FBE                     l854:
  5626  1FBE  30FF               	movlw	255
  5627  1FBF  052D               	andwf	___xxtofl@arg+3,w
  5628  1FC0  1903               	btfsc	3,2
  5629  1FC1  2FD0               	goto	l4819
  5630  1FC2  2FAB               	goto	l4811
  5631  1FC3                     l4821:
  5632  1FC3  3002               	movlw	2
  5633  1FC4  0229               	subwf	___xxtofl@exp,w
  5634  1FC5  1C03               	btfss	3,0
  5635  1FC6  2FD2               	goto	l861
  5636  1FC7  3001               	movlw	1
  5637  1FC8  02A9               	subwf	___xxtofl@exp,f
  5638  1FC9  3001               	movlw	1
  5639  1FCA                     u7335:
  5640  1FCA  35AA               	lslf	___xxtofl@arg,f
  5641  1FCB  0DAB               	rlf	___xxtofl@arg+1,f
  5642  1FCC  0DAC               	rlf	___xxtofl@arg+2,f
  5643  1FCD  0DAD               	rlf	___xxtofl@arg+3,f
  5644  1FCE  0B89               	decfsz	9,f
  5645  1FCF  2FCA               	goto	u7335
  5646  1FD0                     l4819:
  5647  1FD0  1FAC               	btfss	___xxtofl@arg+2,7
  5648  1FD1  2FC3               	goto	l4821
  5649  1FD2                     l861:
  5650  1FD2  1829               	btfsc	___xxtofl@exp,0
  5651  1FD3  2FDC               	goto	l862
  5652  1FD4  30FF               	movlw	255
  5653  1FD5  05AA               	andwf	___xxtofl@arg,f
  5654  1FD6  30FF               	movlw	255
  5655  1FD7  05AB               	andwf	___xxtofl@arg+1,f
  5656  1FD8  307F               	movlw	127
  5657  1FD9  05AC               	andwf	___xxtofl@arg+2,f
  5658  1FDA  30FF               	movlw	255
  5659  1FDB  05AD               	andwf	___xxtofl@arg+3,f
  5660  1FDC                     l862:
  5661  1FDC  1003               	clrc
  5662  1FDD  0CA9               	rrf	___xxtofl@exp,f
  5663  1FDE  0829               	movf	___xxtofl@exp,w
  5664  1FDF  00A4               	movwf	??___xxtofl
  5665  1FE0  01A5               	clrf	??___xxtofl+1
  5666  1FE1  01A6               	clrf	??___xxtofl+2
  5667  1FE2  01A7               	clrf	??___xxtofl+3
  5668  1FE3  3018               	movlw	24
  5669  1FE4                     u7375:
  5670  1FE4  35A4               	lslf	??___xxtofl,f
  5671  1FE5  0DA5               	rlf	??___xxtofl+1,f
  5672  1FE6  0DA6               	rlf	??___xxtofl+2,f
  5673  1FE7  0DA7               	rlf	??___xxtofl+3,f
  5674  1FE8  0B89               	decfsz	9,f
  5675  1FE9  2FE4               	goto	u7375
  5676  1FEA  0824               	movf	??___xxtofl,w
  5677  1FEB  04AA               	iorwf	___xxtofl@arg,f
  5678  1FEC  0825               	movf	??___xxtofl+1,w
  5679  1FED  04AB               	iorwf	___xxtofl@arg+1,f
  5680  1FEE  0826               	movf	??___xxtofl+2,w
  5681  1FEF  04AC               	iorwf	___xxtofl@arg+2,f
  5682  1FF0  0827               	movf	??___xxtofl+3,w
  5683  1FF1  04AD               	iorwf	___xxtofl@arg+3,f
  5684  1FF2  0828               	movf	___xxtofl@sign,w
  5685  1FF3  1D03               	btfss	3,2
  5686  1FF4  1FA3               	btfss	___xxtofl@val+3,7
  5687  1FF5  2FF7               	goto	l4833
  5688  1FF6  17AD               	bsf	___xxtofl@arg+3,7
  5689  1FF7                     l4833:
  5690  1FF7  082D               	movf	___xxtofl@arg+3,w
  5691  1FF8  00A3               	movwf	?___xxtofl+3
  5692  1FF9  082C               	movf	___xxtofl@arg+2,w
  5693  1FFA  00A2               	movwf	?___xxtofl+2
  5694  1FFB  082B               	movf	___xxtofl@arg+1,w
  5695  1FFC  00A1               	movwf	?___xxtofl+1
  5696  1FFD  082A               	movf	___xxtofl@arg,w
  5697  1FFE  00A0               	movwf	?___xxtofl
  5698  1FFF  0008               	return
  5699  2000                     __end_of___xxtofl:
  5700                           
  5701                           	psect	text7
  5702  19B4                     __ptext7:	
  5703 ;; *************** function _printf *****************
  5704 ;; Defined at:
  5705 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  5706 ;; Parameters:    Size  Location     Type
  5707 ;;  fmt             2   31[BANK2 ] PTR const unsigned char 
  5708 ;;		 -> STR_4(29), STR_3(23), STR_2(21), STR_1(16), 
  5709 ;; Auto vars:     Size  Location     Type
  5710 ;;  ret             2    0        int 
  5711 ;;  ap              1   71[BANK1 ] PTR void [1]
  5712 ;;		 -> ?_printf(2), 
  5713 ;; Return value:  Size  Location     Type
  5714 ;;                  2   31[BANK2 ] int 
  5715 ;; Registers used:
  5716 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5717 ;; Tracked objects:
  5718 ;;		On entry : 0/0
  5719 ;;		On exit  : 0/0
  5720 ;;		Unchanged: 0/0
  5721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5722 ;;      Params:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0
  5723 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5724 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5725 ;;      Totals:         0       1       1      10       0       0       0       0       0       0       0       0       
      +0       0
  5726 ;;Total ram usage:       12 bytes
  5727 ;; Hardware stack levels used: 1
  5728 ;; Hardware stack levels required when called: 8
  5729 ;; This function calls:
  5730 ;;		_vfprintf
  5731 ;; This function is called by:
  5732 ;;		_main
  5733 ;;		_sensorPlaca
  5734 ;; This function uses a non-reentrant model
  5735 ;;
  5736                           
  5737                           
  5738                           ;psect for function _printf
  5739  19B4                     _printf:
  5740                           
  5741                           ;incstack = 0
  5742                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5743  19B4  3041               	movlw	(low ((?_printf| (0+256)+2)))& (0+255)
  5744  19B5  0020               	movlb	0	; select bank0
  5745  19B6  00EF               	movwf	??_printf
  5746  19B7  086F               	movf	??_printf,w
  5747  19B8  0021               	movlb	1	; select bank1
  5748  19B9  00E7               	movwf	printf@ap^(0+128)
  5749  19BA  0022               	movlb	2	; select bank2
  5750  19BB  0840               	movf	(printf@fmt+1)^(0+256),w
  5751  19BC  0021               	movlb	1	; select bank1
  5752  19BD  00E0               	movwf	(vfprintf@fmt+1)^(0+128)
  5753  19BE  0022               	movlb	2	; select bank2
  5754  19BF  083F               	movf	printf@fmt^(0+256),w
  5755  19C0  0021               	movlb	1	; select bank1
  5756  19C1  00DF               	movwf	vfprintf@fmt^(0+128)
  5757  19C2  30E7               	movlw	(low (printf@ap| 0))& (0+255)
  5758  19C3  0020               	movlb	0	; select bank0
  5759  19C4  00EF               	movwf	??_printf
  5760  19C5  086F               	movf	??_printf,w
  5761  19C6  0021               	movlb	1	; select bank1
  5762  19C7  00E1               	movwf	vfprintf@ap^(0+128)
  5763  19C8  3000               	movlw	0
  5764  19C9  319B  2306         	fcall	_vfprintf
  5765  19CB  0008               	return
  5766  19CC                     __end_of_printf:
  5767                           
  5768                           	psect	text8
  5769  1B06                     __ptext8:	
  5770 ;; *************** function _vfprintf *****************
  5771 ;; Defined at:
  5772 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5773 ;; Parameters:    Size  Location     Type
  5774 ;;  fp              1    wreg     PTR struct _IO_FILE
  5775 ;;		 -> NULL(0), 
  5776 ;;  fmt             2   63[BANK1 ] PTR const unsigned char 
  5777 ;;		 -> STR_4(29), STR_3(23), STR_2(21), STR_1(16), 
  5778 ;;  ap              1   65[BANK1 ] PTR PTR void 
  5779 ;;		 -> printf@ap(1), 
  5780 ;; Auto vars:     Size  Location     Type
  5781 ;;  fp              1   68[BANK1 ] PTR struct _IO_FILE
  5782 ;;		 -> NULL(0), 
  5783 ;;  cfmt            2   69[BANK1 ] PTR unsigned char 
  5784 ;;		 -> STR_4(29), STR_3(23), STR_2(21), STR_1(16), 
  5785 ;; Return value:  Size  Location     Type
  5786 ;;                  2   63[BANK1 ] int 
  5787 ;; Registers used:
  5788 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5789 ;; Tracked objects:
  5790 ;;		On entry : 0/0
  5791 ;;		On exit  : 0/0
  5792 ;;		Unchanged: 0/0
  5793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5794 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5795 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5796 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5797 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5798 ;;Total ram usage:        8 bytes
  5799 ;; Hardware stack levels used: 1
  5800 ;; Hardware stack levels required when called: 7
  5801 ;; This function calls:
  5802 ;;		_vfpfcnvrt
  5803 ;; This function is called by:
  5804 ;;		_printf
  5805 ;; This function uses a non-reentrant model
  5806 ;;
  5807                           
  5808                           
  5809                           ;psect for function _vfprintf
  5810  1B06                     _vfprintf:
  5811                           
  5812                           ;incstack = 0
  5813                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5814                           ;vfprintf@fp stored from wreg
  5815  1B06  0021               	movlb	1	; select bank1
  5816  1B07  00E4               	movwf	vfprintf@fp^(0+128)
  5817                           
  5818                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  5819  1B08  0860               	movf	(vfprintf@fmt+1)^(0+128),w
  5820  1B09  00E6               	movwf	(vfprintf@cfmt+1)^(0+128)
  5821  1B0A  085F               	movf	vfprintf@fmt^(0+128),w
  5822  1B0B  00E5               	movwf	vfprintf@cfmt^(0+128)
  5823                           
  5824                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  5825  1B0C  0022               	movlb	2	; select bank2
  5826  1B0D  01D7               	clrf	_nout^(0+256)
  5827  1B0E  01D8               	clrf	(_nout+1)^(0+256)
  5828  1B0F                     l4843:	
  5829                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5830                           
  5831                           
  5832                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5833  1B0F  0021               	movlb	1	; select bank1
  5834  1B10  0865               	movf	vfprintf@cfmt^(0+128),w
  5835  1B11  0084               	movwf	4
  5836  1B12  0866               	movf	(vfprintf@cfmt+1)^(0+128),w
  5837  1B13  0085               	movwf	5
  5838  1B14  0012               	moviw fsr0++
  5839  1B15  1903               	btfsc	3,2
  5840  1B16  2B30               	goto	l4845
  5841                           
  5842                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  5843  1B17  30E5               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  5844  1B18  00E2               	movwf	??_vfprintf^(0+128)
  5845  1B19  0862               	movf	??_vfprintf^(0+128),w
  5846  1B1A  0020               	movlb	0	; select bank0
  5847  1B1B  00ED               	movwf	vfpfcnvrt@fmt
  5848  1B1C  0021               	movlb	1	; select bank1
  5849  1B1D  0861               	movf	vfprintf@ap^(0+128),w
  5850  1B1E  00E3               	movwf	(??_vfprintf+1)^(0+128)
  5851  1B1F  0863               	movf	(??_vfprintf+1)^(0+128),w
  5852  1B20  0020               	movlb	0	; select bank0
  5853  1B21  00EE               	movwf	vfpfcnvrt@ap
  5854  1B22  0021               	movlb	1	; select bank1
  5855  1B23  0864               	movf	vfprintf@fp^(0+128),w
  5856  1B24  318C  2432  319B   	fcall	_vfpfcnvrt
  5857  1B27  0020               	movlb	0	; select bank0
  5858  1B28  086D               	movf	?_vfpfcnvrt,w
  5859  1B29  0022               	movlb	2	; select bank2
  5860  1B2A  07D7               	addwf	_nout^(0+256),f
  5861  1B2B  0020               	movlb	0	; select bank0
  5862  1B2C  086E               	movf	?_vfpfcnvrt+1,w
  5863  1B2D  0022               	movlb	2	; select bank2
  5864  1B2E  3DD8               	addwfc	(_nout+1)^(0+256),f
  5865  1B2F  2B0F               	goto	l4843
  5866  1B30                     l4845:
  5867                           
  5868                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  5869  1B30  0022               	movlb	2	; select bank2
  5870  1B31  0858               	movf	(_nout+1)^(0+256),w
  5871  1B32  0021               	movlb	1	; select bank1
  5872  1B33  00E0               	movwf	(?_vfprintf+1)^(0+128)
  5873  1B34  0022               	movlb	2	; select bank2
  5874  1B35  0857               	movf	_nout^(0+256),w
  5875  1B36  0021               	movlb	1	; select bank1
  5876  1B37  00DF               	movwf	?_vfprintf^(0+128)
  5877  1B38  0008               	return
  5878  1B39                     __end_of_vfprintf:
  5879                           
  5880                           	psect	text9
  5881  0C32                     __ptext9:	
  5882 ;; *************** function _vfpfcnvrt *****************
  5883 ;; Defined at:
  5884 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5885 ;; Parameters:    Size  Location     Type
  5886 ;;  fp              1    wreg     PTR struct _IO_FILE
  5887 ;;		 -> NULL(0), 
  5888 ;;  fmt             1   77[BANK0 ] PTR PTR unsigned char 
  5889 ;;		 -> vfprintf@cfmt(2), 
  5890 ;;  ap              1   78[BANK0 ] PTR PTR void 
  5891 ;;		 -> printf@ap(1), 
  5892 ;; Auto vars:     Size  Location     Type
  5893 ;;  fp              1   30[BANK2 ] PTR struct _IO_FILE
  5894 ;;		 -> NULL(0), 
  5895 ;;  llu             8    8[BANK2 ] unsigned long long 
  5896 ;;  ll              8    0[BANK2 ] long long 
  5897 ;;  f               4   22[BANK2 ] long long 
  5898 ;;  ct              3   26[BANK2 ] unsigned char [3]
  5899 ;;  vp              2    0        PTR void 
  5900 ;;  i               2    0        int 
  5901 ;;  done            2    0        int 
  5902 ;;  cp              2    0        PTR unsigned char 
  5903 ;;  c               1   29[BANK2 ] unsigned char 
  5904 ;; Return value:  Size  Location     Type
  5905 ;;                  2   77[BANK0 ] int 
  5906 ;; Registers used:
  5907 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5908 ;; Tracked objects:
  5909 ;;		On entry : 0/0
  5910 ;;		On exit  : 0/0
  5911 ;;		Unchanged: 0/0
  5912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5913 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5914 ;;      Locals:         0       0       0      31       0       0       0       0       0       0       0       0       
      +0       0
  5915 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5916 ;;      Totals:         0       2       6      31       0       0       0       0       0       0       0       0       
      +0       0
  5917 ;;Total ram usage:       39 bytes
  5918 ;; Hardware stack levels used: 1
  5919 ;; Hardware stack levels required when called: 6
  5920 ;; This function calls:
  5921 ;;		_atoi
  5922 ;;		_dtoa
  5923 ;;		_efgtoa
  5924 ;;		_fputc
  5925 ;;		_isdigit
  5926 ;;		_isupper
  5927 ;;		_strncmp
  5928 ;;		_tolower
  5929 ;;		_xtoa
  5930 ;; This function is called by:
  5931 ;;		_vfprintf
  5932 ;; This function uses a non-reentrant model
  5933 ;;
  5934                           
  5935                           
  5936                           ;psect for function _vfpfcnvrt
  5937  0C32                     _vfpfcnvrt:
  5938                           
  5939                           ;incstack = 0
  5940                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5941                           ;vfpfcnvrt@fp stored from wreg
  5942  0C32  0022               	movlb	2	; select bank2
  5943  0C33  00BE               	movwf	vfpfcnvrt@fp^(0+256)
  5944                           
  5945                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  5946  0C34  0020               	movlb	0	; select bank0
  5947  0C35  086D               	movf	vfpfcnvrt@fmt,w
  5948  0C36  0086               	movwf	6
  5949  0C37  0187               	clrf	7
  5950  0C38  3F40               	moviw [0]fsr1
  5951  0C39  0021               	movlb	1	; select bank1
  5952  0C3A  00D9               	movwf	??_vfpfcnvrt^(0+128)
  5953  0C3B  3F41               	moviw [1]fsr1
  5954  0C3C  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5955  0C3D  0859               	movf	??_vfpfcnvrt^(0+128),w
  5956  0C3E  0084               	movwf	4
  5957  0C3F  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5958  0C40  0085               	movwf	5
  5959  0C41  0012               	moviw fsr0++
  5960  0C42  3A25               	xorlw	37
  5961  0C43  1D03               	btfss	3,2
  5962  0C44  2FD9               	goto	l4729
  5963                           
  5964                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  5965  0C45  0020               	movlb	0	; select bank0
  5966  0C46  086D               	movf	vfpfcnvrt@fmt,w
  5967  0C47  0086               	movwf	6
  5968  0C48  0187               	clrf	7
  5969  0C49  3001               	movlw	1
  5970  0C4A  0781               	addwf	1,f
  5971  0C4B  3141               	addfsr 1,1
  5972  0C4C  1803               	skipnc
  5973  0C4D  0A81               	incf	1,f
  5974                           
  5975                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  5976  0C4E  0022               	movlb	2	; select bank2
  5977  0C4F  01D9               	clrf	_width^(0+256)
  5978  0C50  01DA               	clrf	(_width+1)^(0+256)
  5979  0C51  0021               	movlb	1	; select bank1
  5980  0C52  01EE               	clrf	_flags^(0+128)
  5981  0C53  01EF               	clrf	(_flags+1)^(0+128)
  5982                           
  5983                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  5984  0C54  30FF               	movlw	255
  5985  0C55  00EC               	movwf	_prec^(0+128)
  5986  0C56  30FF               	movlw	255
  5987  0C57  00ED               	movwf	(_prec^(0+128)+1)
  5988                           
  5989                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  5990  0C58  0020               	movlb	0	; select bank0
  5991  0C59  086D               	movf	vfpfcnvrt@fmt,w
  5992  0C5A  0086               	movwf	6
  5993  0C5B  0187               	clrf	7
  5994  0C5C  3F40               	moviw [0]fsr1
  5995  0C5D  0021               	movlb	1	; select bank1
  5996  0C5E  00D9               	movwf	??_vfpfcnvrt^(0+128)
  5997  0C5F  3F41               	moviw [1]fsr1
  5998  0C60  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5999  0C61  0859               	movf	??_vfpfcnvrt^(0+128),w
  6000  0C62  0084               	movwf	4
  6001  0C63  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  6002  0C64  0085               	movwf	5
  6003  0C65  0012               	moviw fsr0++
  6004  0C66  3A2A               	xorlw	42
  6005  0C67  1D03               	btfss	3,2
  6006  0C68  2C8B               	goto	l4615
  6007                           
  6008                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  6009  0C69  0020               	movlb	0	; select bank0
  6010  0C6A  086D               	movf	vfpfcnvrt@fmt,w
  6011  0C6B  0086               	movwf	6
  6012  0C6C  0187               	clrf	7
  6013  0C6D  3001               	movlw	1
  6014  0C6E  0781               	addwf	1,f
  6015  0C6F  3141               	addfsr 1,1
  6016  0C70  1803               	skipnc
  6017  0C71  0A81               	incf	1,f
  6018                           
  6019                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  6020  0C72  086E               	movf	vfpfcnvrt@ap,w
  6021  0C73  0086               	movwf	6
  6022  0C74  0187               	clrf	7
  6023  0C75  0801               	movf	1,w
  6024  0C76  0084               	movwf	4
  6025  0C77  3001               	movlw	1	; select bank2/3
  6026  0C78  0085               	movwf	5
  6027  0C79  3002               	movlw	2
  6028  0C7A  0781               	addwf	1,f
  6029  0C7B  3F00               	moviw [0]fsr0
  6030  0C7C  0022               	movlb	2	; select bank2
  6031  0C7D  00D9               	movwf	_width^(0+256)
  6032  0C7E  3F01               	moviw [1]fsr0
  6033  0C7F  00DA               	movwf	(_width+1)^(0+256)
  6034                           
  6035                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  6036  0C80  1FDA               	btfss	(_width+1)^(0+256),7
  6037  0C81  2CD0               	goto	l4625
  6038                           
  6039                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  6040  0C82  0021               	movlb	1	; select bank1
  6041  0C83  146E               	bsf	_flags^(0+128),0
  6042                           
  6043                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  6044  0C84  0022               	movlb	2	; select bank2
  6045  0C85  09D9               	comf	_width^(0+256),f
  6046  0C86  09DA               	comf	(_width+1)^(0+256),f
  6047  0C87  0AD9               	incf	_width^(0+256),f
  6048  0C88  1903               	skipnz
  6049  0C89  0ADA               	incf	(_width+1)^(0+256),f
  6050  0C8A  2CD0               	goto	l4625
  6051  0C8B                     l4615:
  6052                           
  6053                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  6054  0C8B  0020               	movlb	0	; select bank0
  6055  0C8C  086D               	movf	vfpfcnvrt@fmt,w
  6056  0C8D  0086               	movwf	6
  6057  0C8E  0187               	clrf	7
  6058  0C8F  3F40               	moviw [0]fsr1
  6059  0C90  00F6               	movwf	atoi@s
  6060  0C91  3F41               	moviw [1]fsr1
  6061  0C92  00F7               	movwf	atoi@s+1
  6062  0C93  3190  202A  318C   	fcall	_atoi
  6063  0C96  0877               	movf	?_atoi+1,w
  6064  0C97  0022               	movlb	2	; select bank2
  6065  0C98  00DA               	movwf	(_width+1)^(0+256)
  6066  0C99  0876               	movf	?_atoi,w
  6067  0C9A  00D9               	movwf	_width^(0+256)
  6068                           
  6069                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6070  0C9B  2CA5               	goto	l4619
  6071  0C9C                     l4617:
  6072                           
  6073                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  6074  0C9C  0020               	movlb	0	; select bank0
  6075  0C9D  086D               	movf	vfpfcnvrt@fmt,w
  6076  0C9E  0086               	movwf	6
  6077  0C9F  0187               	clrf	7
  6078  0CA0  3001               	movlw	1
  6079  0CA1  0781               	addwf	1,f
  6080  0CA2  3141               	addfsr 1,1
  6081  0CA3  1803               	skipnc
  6082  0CA4  0A81               	incf	1,f
  6083  0CA5                     l4619:
  6084  0CA5  0020               	movlb	0	; select bank0
  6085  0CA6  086D               	movf	vfpfcnvrt@fmt,w
  6086  0CA7  0086               	movwf	6
  6087  0CA8  0187               	clrf	7
  6088  0CA9  3F40               	moviw [0]fsr1
  6089  0CAA  0021               	movlb	1	; select bank1
  6090  0CAB  00D9               	movwf	??_vfpfcnvrt^(0+128)
  6091  0CAC  3F41               	moviw [1]fsr1
  6092  0CAD  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6093  0CAE  0859               	movf	??_vfpfcnvrt^(0+128),w
  6094  0CAF  0084               	movwf	4
  6095  0CB0  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  6096  0CB1  0085               	movwf	5
  6097  0CB2  0800               	movf	0,w	;code access
  6098  0CB3  3ED0               	addlw	208
  6099  0CB4  00DB               	movwf	(??_vfpfcnvrt+2)^(0+128)
  6100  0CB5  30FF               	movlw	255
  6101  0CB6  1803               	skipnc
  6102  0CB7  3000               	movlw	0
  6103  0CB8  00DC               	movwf	((??_vfpfcnvrt+2)^(0+128)+1)
  6104  0CB9  3000               	movlw	0
  6105  0CBA  025C               	subwf	(??_vfpfcnvrt+3)^(0+128),w
  6106  0CBB  300A               	movlw	10
  6107  0CBC  1903               	skipnz
  6108  0CBD  025B               	subwf	(??_vfpfcnvrt+2)^(0+128),w
  6109  0CBE  1803               	btfsc	3,0
  6110  0CBF  2CC2               	goto	u6990
  6111  0CC0  3001               	movlw	1
  6112  0CC1  2CC3               	goto	u7000
  6113  0CC2                     u6990:
  6114  0CC2  3000               	movlw	0
  6115  0CC3                     u7000:
  6116  0CC3  00DD               	movwf	(??_vfpfcnvrt+4)^(0+128)
  6117  0CC4  01DE               	clrf	((??_vfpfcnvrt+4)^(0+128)+1)
  6118  0CC5  085D               	movf	(??_vfpfcnvrt+4)^(0+128),w
  6119  0CC6  0022               	movlb	2	; select bank2
  6120  0CC7  00B0               	movwf	_vfpfcnvrt$990^(0+256)
  6121  0CC8  0021               	movlb	1	; select bank1
  6122  0CC9  085E               	movf	(??_vfpfcnvrt+5)^(0+128),w
  6123  0CCA  0022               	movlb	2	; select bank2
  6124  0CCB  00B1               	movwf	(_vfpfcnvrt$990+1)^(0+256)
  6125  0CCC  0830               	movf	_vfpfcnvrt$990^(0+256),w
  6126  0CCD  0431               	iorwf	(_vfpfcnvrt$990+1)^(0+256),w
  6127  0CCE  1D03               	btfss	3,2
  6128  0CCF  2C9C               	goto	l4617
  6129  0CD0                     l4625:
  6130                           
  6131                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  6132  0CD0  0020               	movlb	0	; select bank0
  6133  0CD1  086D               	movf	vfpfcnvrt@fmt,w
  6134  0CD2  0086               	movwf	6
  6135  0CD3  0187               	clrf	7
  6136  0CD4  3F40               	moviw [0]fsr1
  6137  0CD5  0021               	movlb	1	; select bank1
  6138  0CD6  00D9               	movwf	??_vfpfcnvrt^(0+128)
  6139  0CD7  3F41               	moviw [1]fsr1
  6140  0CD8  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6141  0CD9  0859               	movf	??_vfpfcnvrt^(0+128),w
  6142  0CDA  0084               	movwf	4
  6143  0CDB  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  6144  0CDC  0085               	movwf	5
  6145  0CDD  0012               	moviw fsr0++
  6146  0CDE  3A2E               	xorlw	46
  6147  0CDF  1D03               	btfss	3,2
  6148  0CE0  2D59               	goto	l4647
  6149                           
  6150                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  6151  0CE1  01EC               	clrf	_prec^(0+128)
  6152  0CE2  01ED               	clrf	(_prec+1)^(0+128)
  6153                           
  6154                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  6155  0CE3  0020               	movlb	0	; select bank0
  6156  0CE4  086D               	movf	vfpfcnvrt@fmt,w
  6157  0CE5  0086               	movwf	6
  6158  0CE6  0187               	clrf	7
  6159  0CE7  3001               	movlw	1
  6160  0CE8  0781               	addwf	1,f
  6161  0CE9  3141               	addfsr 1,1
  6162  0CEA  1803               	skipnc
  6163  0CEB  0A81               	incf	1,f
  6164                           
  6165                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  6166  0CEC  086D               	movf	vfpfcnvrt@fmt,w
  6167  0CED  0086               	movwf	6
  6168  0CEE  0187               	clrf	7
  6169  0CEF  3F40               	moviw [0]fsr1
  6170  0CF0  0021               	movlb	1	; select bank1
  6171  0CF1  00D9               	movwf	??_vfpfcnvrt^(0+128)
  6172  0CF2  3F41               	moviw [1]fsr1
  6173  0CF3  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6174  0CF4  0859               	movf	??_vfpfcnvrt^(0+128),w
  6175  0CF5  0084               	movwf	4
  6176  0CF6  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  6177  0CF7  0085               	movwf	5
  6178  0CF8  0012               	moviw fsr0++
  6179  0CF9  3A2A               	xorlw	42
  6180  0CFA  1D03               	btfss	3,2
  6181  0CFB  2D14               	goto	l4637
  6182                           
  6183                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  6184  0CFC  0020               	movlb	0	; select bank0
  6185  0CFD  086D               	movf	vfpfcnvrt@fmt,w
  6186  0CFE  0086               	movwf	6
  6187  0CFF  0187               	clrf	7
  6188  0D00  3001               	movlw	1
  6189  0D01  0781               	addwf	1,f
  6190  0D02  3141               	addfsr 1,1
  6191  0D03  1803               	skipnc
  6192  0D04  0A81               	incf	1,f
  6193                           
  6194                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  6195  0D05  086E               	movf	vfpfcnvrt@ap,w
  6196  0D06  0086               	movwf	6
  6197  0D07  0187               	clrf	7
  6198  0D08  0801               	movf	1,w
  6199  0D09  0084               	movwf	4
  6200  0D0A  3001               	movlw	1	; select bank2/3
  6201  0D0B  0085               	movwf	5
  6202  0D0C  3002               	movlw	2
  6203  0D0D  0781               	addwf	1,f
  6204  0D0E  3F00               	moviw [0]fsr0
  6205  0D0F  0021               	movlb	1	; select bank1
  6206  0D10  00EC               	movwf	_prec^(0+128)
  6207  0D11  3F01               	moviw [1]fsr0
  6208  0D12  00ED               	movwf	(_prec+1)^(0+128)
  6209                           
  6210                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  6211  0D13  2D59               	goto	l4647
  6212  0D14                     l4637:
  6213                           
  6214                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  6215  0D14  0020               	movlb	0	; select bank0
  6216  0D15  086D               	movf	vfpfcnvrt@fmt,w
  6217  0D16  0086               	movwf	6
  6218  0D17  0187               	clrf	7
  6219  0D18  3F40               	moviw [0]fsr1
  6220  0D19  00F6               	movwf	atoi@s
  6221  0D1A  3F41               	moviw [1]fsr1
  6222  0D1B  00F7               	movwf	atoi@s+1
  6223  0D1C  3190  202A  318C   	fcall	_atoi
  6224  0D1F  0877               	movf	?_atoi+1,w
  6225  0D20  0021               	movlb	1	; select bank1
  6226  0D21  00ED               	movwf	(_prec+1)^(0+128)
  6227  0D22  0876               	movf	?_atoi,w
  6228  0D23  00EC               	movwf	_prec^(0+128)
  6229                           
  6230                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6231  0D24  2D2E               	goto	l4641
  6232  0D25                     l4639:
  6233                           
  6234                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  6235  0D25  0020               	movlb	0	; select bank0
  6236  0D26  086D               	movf	vfpfcnvrt@fmt,w
  6237  0D27  0086               	movwf	6
  6238  0D28  0187               	clrf	7
  6239  0D29  3001               	movlw	1
  6240  0D2A  0781               	addwf	1,f
  6241  0D2B  3141               	addfsr 1,1
  6242  0D2C  1803               	skipnc
  6243  0D2D  0A81               	incf	1,f
  6244  0D2E                     l4641:
  6245  0D2E  0020               	movlb	0	; select bank0
  6246  0D2F  086D               	movf	vfpfcnvrt@fmt,w
  6247  0D30  0086               	movwf	6
  6248  0D31  0187               	clrf	7
  6249  0D32  3F40               	moviw [0]fsr1
  6250  0D33  0021               	movlb	1	; select bank1
  6251  0D34  00D9               	movwf	??_vfpfcnvrt^(0+128)
  6252  0D35  3F41               	moviw [1]fsr1
  6253  0D36  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6254  0D37  0859               	movf	??_vfpfcnvrt^(0+128),w
  6255  0D38  0084               	movwf	4
  6256  0D39  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  6257  0D3A  0085               	movwf	5
  6258  0D3B  0800               	movf	0,w	;code access
  6259  0D3C  3ED0               	addlw	208
  6260  0D3D  00DB               	movwf	(??_vfpfcnvrt+2)^(0+128)
  6261  0D3E  30FF               	movlw	255
  6262  0D3F  1803               	skipnc
  6263  0D40  3000               	movlw	0
  6264  0D41  00DC               	movwf	((??_vfpfcnvrt+2)^(0+128)+1)
  6265  0D42  3000               	movlw	0
  6266  0D43  025C               	subwf	(??_vfpfcnvrt+3)^(0+128),w
  6267  0D44  300A               	movlw	10
  6268  0D45  1903               	skipnz
  6269  0D46  025B               	subwf	(??_vfpfcnvrt+2)^(0+128),w
  6270  0D47  1803               	btfsc	3,0
  6271  0D48  2D4B               	goto	u7040
  6272  0D49  3001               	movlw	1
  6273  0D4A  2D4C               	goto	u7050
  6274  0D4B                     u7040:
  6275  0D4B  3000               	movlw	0
  6276  0D4C                     u7050:
  6277  0D4C  00DD               	movwf	(??_vfpfcnvrt+4)^(0+128)
  6278  0D4D  01DE               	clrf	((??_vfpfcnvrt+4)^(0+128)+1)
  6279  0D4E  085D               	movf	(??_vfpfcnvrt+4)^(0+128),w
  6280  0D4F  0022               	movlb	2	; select bank2
  6281  0D50  00B2               	movwf	_vfpfcnvrt$991^(0+256)
  6282  0D51  0021               	movlb	1	; select bank1
  6283  0D52  085E               	movf	(??_vfpfcnvrt+5)^(0+128),w
  6284  0D53  0022               	movlb	2	; select bank2
  6285  0D54  00B3               	movwf	(_vfpfcnvrt$991+1)^(0+256)
  6286  0D55  0832               	movf	_vfpfcnvrt$991^(0+256),w
  6287  0D56  0433               	iorwf	(_vfpfcnvrt$991+1)^(0+256),w
  6288  0D57  1D03               	btfss	3,2
  6289  0D58  2D25               	goto	l4639
  6290  0D59                     l4647:
  6291                           
  6292                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  6293  0D59  0020               	movlb	0	; select bank0
  6294  0D5A  086D               	movf	vfpfcnvrt@fmt,w
  6295  0D5B  0086               	movwf	6
  6296  0D5C  0187               	clrf	7
  6297  0D5D  3F40               	moviw [0]fsr1
  6298  0D5E  0021               	movlb	1	; select bank1
  6299  0D5F  00D9               	movwf	??_vfpfcnvrt^(0+128)
  6300  0D60  3F41               	moviw [1]fsr1
  6301  0D61  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6302  0D62  0859               	movf	??_vfpfcnvrt^(0+128),w
  6303  0D63  0084               	movwf	4
  6304  0D64  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  6305  0D65  0085               	movwf	5
  6306  0D66  0800               	movf	0,w	;code access
  6307  0D67  00DB               	movwf	(??_vfpfcnvrt+2)^(0+128)
  6308  0D68  01DC               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  6309  0D69  085B               	movf	(??_vfpfcnvrt+2)^(0+128),w
  6310  0D6A  00F6               	movwf	tolower@c
  6311  0D6B  085C               	movf	(??_vfpfcnvrt+3)^(0+128),w
  6312  0D6C  00F7               	movwf	tolower@c+1
  6313  0D6D  319A  22B2  318C   	fcall	_tolower
  6314  0D70  0876               	movf	?_tolower,w
  6315  0D71  0021               	movlb	1	; select bank1
  6316  0D72  00DD               	movwf	(??_vfpfcnvrt+4)^(0+128)
  6317  0D73  085D               	movf	(??_vfpfcnvrt+4)^(0+128),w
  6318  0D74  0022               	movlb	2	; select bank2
  6319  0D75  00BA               	movwf	vfpfcnvrt@ct^(0+256)
  6320                           
  6321                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  6322  0D76  083A               	movf	vfpfcnvrt@ct^(0+256),w
  6323  0D77  1903               	btfsc	3,2
  6324  0D78  2DBC               	goto	l4657
  6325                           
  6326                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  6327  0D79  0020               	movlb	0	; select bank0
  6328  0D7A  086D               	movf	vfpfcnvrt@fmt,w
  6329  0D7B  0086               	movwf	6
  6330  0D7C  0187               	clrf	7
  6331  0D7D  3F40               	moviw [0]fsr1
  6332  0D7E  0021               	movlb	1	; select bank1
  6333  0D7F  00D9               	movwf	??_vfpfcnvrt^(0+128)
  6334  0D80  3F41               	moviw [1]fsr1
  6335  0D81  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6336  0D82  3001               	movlw	1
  6337  0D83  0759               	addwf	??_vfpfcnvrt^(0+128),w
  6338  0D84  0084               	movwf	4
  6339  0D85  085A               	movf	(??_vfpfcnvrt^(0+128)+1),w
  6340  0D86  1803               	skipnc
  6341  0D87  0A5A               	incf	(??_vfpfcnvrt^(0+128)+1),w
  6342  0D88  0085               	movwf	5
  6343  0D89  0800               	movf	0,w	;code access
  6344  0D8A  00DB               	movwf	(??_vfpfcnvrt+2)^(0+128)
  6345  0D8B  01DC               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  6346  0D8C  085B               	movf	(??_vfpfcnvrt+2)^(0+128),w
  6347  0D8D  00F6               	movwf	tolower@c
  6348  0D8E  085C               	movf	(??_vfpfcnvrt+3)^(0+128),w
  6349  0D8F  00F7               	movwf	tolower@c+1
  6350  0D90  319A  22B2  318C   	fcall	_tolower
  6351  0D93  0876               	movf	?_tolower,w
  6352  0D94  0021               	movlb	1	; select bank1
  6353  0D95  00DD               	movwf	(??_vfpfcnvrt+4)^(0+128)
  6354  0D96  085D               	movf	(??_vfpfcnvrt+4)^(0+128),w
  6355  0D97  0022               	movlb	2	; select bank2
  6356  0D98  00BB               	movwf	(vfpfcnvrt@ct^(0+256)+1)
  6357                           
  6358                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  6359  0D99  083B               	movf	(vfpfcnvrt@ct^(0+256)+1),w
  6360  0D9A  1903               	btfsc	3,2
  6361  0D9B  2DBC               	goto	l4657
  6362                           
  6363                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  6364  0D9C  0020               	movlb	0	; select bank0
  6365  0D9D  086D               	movf	vfpfcnvrt@fmt,w
  6366  0D9E  0086               	movwf	6
  6367  0D9F  0187               	clrf	7
  6368  0DA0  3F40               	moviw [0]fsr1
  6369  0DA1  0021               	movlb	1	; select bank1
  6370  0DA2  00D9               	movwf	??_vfpfcnvrt^(0+128)
  6371  0DA3  3F41               	moviw [1]fsr1
  6372  0DA4  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6373  0DA5  3002               	movlw	2
  6374  0DA6  0759               	addwf	??_vfpfcnvrt^(0+128),w
  6375  0DA7  0084               	movwf	4
  6376  0DA8  085A               	movf	(??_vfpfcnvrt^(0+128)+1),w
  6377  0DA9  1803               	skipnc
  6378  0DAA  0A5A               	incf	(??_vfpfcnvrt^(0+128)+1),w
  6379  0DAB  0085               	movwf	5
  6380  0DAC  0800               	movf	0,w	;code access
  6381  0DAD  00DB               	movwf	(??_vfpfcnvrt+2)^(0+128)
  6382  0DAE  01DC               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  6383  0DAF  085B               	movf	(??_vfpfcnvrt+2)^(0+128),w
  6384  0DB0  00F6               	movwf	tolower@c
  6385  0DB1  085C               	movf	(??_vfpfcnvrt+3)^(0+128),w
  6386  0DB2  00F7               	movwf	tolower@c+1
  6387  0DB3  319A  22B2  318C   	fcall	_tolower
  6388  0DB6  0876               	movf	?_tolower,w
  6389  0DB7  0021               	movlb	1	; select bank1
  6390  0DB8  00DD               	movwf	(??_vfpfcnvrt+4)^(0+128)
  6391  0DB9  085D               	movf	(??_vfpfcnvrt+4)^(0+128),w
  6392  0DBA  0022               	movlb	2	; select bank2
  6393  0DBB  00BC               	movwf	(vfpfcnvrt@ct^(0+256)+2)
  6394  0DBC                     l4657:
  6395                           
  6396                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6397  0DBC  0020               	movlb	0	; select bank0
  6398  0DBD  086D               	movf	vfpfcnvrt@fmt,w
  6399  0DBE  0086               	movwf	6
  6400  0DBF  0187               	clrf	7
  6401  0DC0  3F40               	moviw [0]fsr1
  6402  0DC1  0021               	movlb	1	; select bank1
  6403  0DC2  00D9               	movwf	??_vfpfcnvrt^(0+128)
  6404  0DC3  3F41               	moviw [1]fsr1
  6405  0DC4  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6406  0DC5  0859               	movf	??_vfpfcnvrt^(0+128),w
  6407  0DC6  0084               	movwf	4
  6408  0DC7  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  6409  0DC8  0085               	movwf	5
  6410  0DC9  0012               	moviw fsr0++
  6411  0DCA  3A64               	xorlw	100
  6412  0DCB  1903               	btfsc	3,2
  6413  0DCC  2DDE               	goto	l4661
  6414  0DCD  0020               	movlb	0	; select bank0
  6415  0DCE  086D               	movf	vfpfcnvrt@fmt,w
  6416  0DCF  0086               	movwf	6
  6417  0DD0  0187               	clrf	7
  6418  0DD1  3F40               	moviw [0]fsr1
  6419  0DD2  0021               	movlb	1	; select bank1
  6420  0DD3  00D9               	movwf	??_vfpfcnvrt^(0+128)
  6421  0DD4  3F41               	moviw [1]fsr1
  6422  0DD5  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6423  0DD6  0859               	movf	??_vfpfcnvrt^(0+128),w
  6424  0DD7  0084               	movwf	4
  6425  0DD8  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  6426  0DD9  0085               	movwf	5
  6427  0DDA  0012               	moviw fsr0++
  6428  0DDB  3A69               	xorlw	105
  6429  0DDC  1D03               	btfss	3,2
  6430  0DDD  2E2E               	goto	l4669
  6431  0DDE                     l4661:
  6432                           
  6433                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  6434  0DDE  0020               	movlb	0	; select bank0
  6435  0DDF  086D               	movf	vfpfcnvrt@fmt,w
  6436  0DE0  0086               	movwf	6
  6437  0DE1  0187               	clrf	7
  6438  0DE2  3001               	movlw	1
  6439  0DE3  0781               	addwf	1,f
  6440  0DE4  3141               	addfsr 1,1
  6441  0DE5  1803               	skipnc
  6442  0DE6  0A81               	incf	1,f
  6443                           
  6444                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6445  0DE7  086E               	movf	vfpfcnvrt@ap,w
  6446  0DE8  0086               	movwf	6
  6447  0DE9  0187               	clrf	7
  6448  0DEA  0801               	movf	1,w
  6449  0DEB  0084               	movwf	4
  6450  0DEC  3001               	movlw	1	; select bank2/3
  6451  0DED  0085               	movwf	5
  6452  0DEE  3002               	movlw	2
  6453  0DEF  0781               	addwf	1,f
  6454  0DF0  3F00               	moviw [0]fsr0
  6455  0DF1  0021               	movlb	1	; select bank1
  6456  0DF2  00D9               	movwf	??_vfpfcnvrt^(0+128)
  6457  0DF3  3F01               	moviw [1]fsr0
  6458  0DF4  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6459  0DF5  0859               	movf	??_vfpfcnvrt^(0+128),w
  6460  0DF6  0022               	movlb	2	; select bank2
  6461  0DF7  00A0               	movwf	vfpfcnvrt@ll^(0+256)
  6462  0DF8  0021               	movlb	1	; select bank1
  6463  0DF9  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  6464  0DFA  0022               	movlb	2	; select bank2
  6465  0DFB  00A1               	movwf	(vfpfcnvrt@ll+1)^(0+256)
  6466  0DFC  0D89               	rlf	9,f
  6467  0DFD  3B89               	subwfb	9,f
  6468  0DFE  0989               	comf	9,f
  6469  0DFF  00A2               	movwf	(vfpfcnvrt@ll+2)^(0+256)
  6470  0E00  00A3               	movwf	(vfpfcnvrt@ll+3)^(0+256)
  6471  0E01  00A4               	movwf	(vfpfcnvrt@ll+4)^(0+256)
  6472  0E02  00A5               	movwf	(vfpfcnvrt@ll+5)^(0+256)
  6473  0E03  00A6               	movwf	(vfpfcnvrt@ll+6)^(0+256)
  6474  0E04  00A7               	movwf	(vfpfcnvrt@ll+7)^(0+256)
  6475                           
  6476                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  6477  0E05  0820               	movf	vfpfcnvrt@ll^(0+256),w
  6478  0E06  0020               	movlb	0	; select bank0
  6479  0E07  00B0               	movwf	dtoa@d
  6480  0E08  0022               	movlb	2	; select bank2
  6481  0E09  0821               	movf	(vfpfcnvrt@ll+1)^(0+256),w
  6482  0E0A  0020               	movlb	0	; select bank0
  6483  0E0B  00B1               	movwf	dtoa@d+1
  6484  0E0C  0022               	movlb	2	; select bank2
  6485  0E0D  0822               	movf	(vfpfcnvrt@ll+2)^(0+256),w
  6486  0E0E  0020               	movlb	0	; select bank0
  6487  0E0F  00B2               	movwf	dtoa@d+2
  6488  0E10  0022               	movlb	2	; select bank2
  6489  0E11  0823               	movf	(vfpfcnvrt@ll+3)^(0+256),w
  6490  0E12  0020               	movlb	0	; select bank0
  6491  0E13  00B3               	movwf	dtoa@d+3
  6492  0E14  0022               	movlb	2	; select bank2
  6493  0E15  0824               	movf	(vfpfcnvrt@ll+4)^(0+256),w
  6494  0E16  0020               	movlb	0	; select bank0
  6495  0E17  00B4               	movwf	dtoa@d+4
  6496  0E18  0022               	movlb	2	; select bank2
  6497  0E19  0825               	movf	(vfpfcnvrt@ll+5)^(0+256),w
  6498  0E1A  0020               	movlb	0	; select bank0
  6499  0E1B  00B5               	movwf	dtoa@d+5
  6500  0E1C  0022               	movlb	2	; select bank2
  6501  0E1D  0826               	movf	(vfpfcnvrt@ll+6)^(0+256),w
  6502  0E1E  0020               	movlb	0	; select bank0
  6503  0E1F  00B6               	movwf	dtoa@d+6
  6504  0E20  0022               	movlb	2	; select bank2
  6505  0E21  0827               	movf	(vfpfcnvrt@ll+7)^(0+256),w
  6506  0E22  0020               	movlb	0	; select bank0
  6507  0E23  00B7               	movwf	dtoa@d+7
  6508  0E24  0022               	movlb	2	; select bank2
  6509  0E25  083E               	movf	vfpfcnvrt@fp^(0+256),w
  6510  0E26  3192  227F         	fcall	_dtoa
  6511  0E28  0020               	movlb	0	; select bank0
  6512  0E29  0831               	movf	?_dtoa+1,w
  6513  0E2A  00EE               	movwf	?_vfpfcnvrt+1
  6514  0E2B  0830               	movf	?_dtoa,w
  6515  0E2C  00ED               	movwf	?_vfpfcnvrt
  6516  0E2D  0008               	return
  6517  0E2E                     l4669:
  6518                           
  6519                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  6520  0E2E  3066               	movlw	102
  6521  0E2F  0022               	movlb	2	; select bank2
  6522  0E30  063A               	xorwf	vfpfcnvrt@ct^(0+256),w
  6523  0E31  1D03               	btfss	3,2
  6524  0E32  2E80               	goto	l4681
  6525                           
  6526                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  6527  0E33  0020               	movlb	0	; select bank0
  6528  0E34  086D               	movf	vfpfcnvrt@fmt,w
  6529  0E35  0086               	movwf	6
  6530  0E36  0187               	clrf	7
  6531  0E37  3F40               	moviw [0]fsr1
  6532  0E38  0021               	movlb	1	; select bank1
  6533  0E39  00D9               	movwf	??_vfpfcnvrt^(0+128)
  6534  0E3A  3F41               	moviw [1]fsr1
  6535  0E3B  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6536  0E3C  0859               	movf	??_vfpfcnvrt^(0+128),w
  6537  0E3D  0084               	movwf	4
  6538  0E3E  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  6539  0E3F  0085               	movwf	5
  6540  0E40  0800               	movf	0,w	;code access
  6541  0E41  00DB               	movwf	(??_vfpfcnvrt+2)^(0+128)
  6542  0E42  085B               	movf	(??_vfpfcnvrt+2)^(0+128),w
  6543  0E43  0022               	movlb	2	; select bank2
  6544  0E44  00BD               	movwf	vfpfcnvrt@c^(0+256)
  6545                           
  6546                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  6547  0E45  0020               	movlb	0	; select bank0
  6548  0E46  086D               	movf	vfpfcnvrt@fmt,w
  6549  0E47  0086               	movwf	6
  6550  0E48  0187               	clrf	7
  6551  0E49  3001               	movlw	1
  6552  0E4A  0781               	addwf	1,f
  6553  0E4B  3141               	addfsr 1,1
  6554  0E4C  1803               	skipnc
  6555  0E4D  0A81               	incf	1,f
  6556                           
  6557                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  6558  0E4E  086E               	movf	vfpfcnvrt@ap,w
  6559  0E4F  0086               	movwf	6
  6560  0E50  0187               	clrf	7
  6561  0E51  0801               	movf	1,w
  6562  0E52  0084               	movwf	4
  6563  0E53  3001               	movlw	1	; select bank2/3
  6564  0E54  0085               	movwf	5
  6565  0E55  3004               	movlw	4
  6566  0E56  0781               	addwf	1,f
  6567  0E57  3F00               	moviw [0]fsr0
  6568  0E58  0022               	movlb	2	; select bank2
  6569  0E59  00B6               	movwf	vfpfcnvrt@f^(0+256)
  6570  0E5A  3F01               	moviw [1]fsr0
  6571  0E5B  00B7               	movwf	(vfpfcnvrt@f+1)^(0+256)
  6572  0E5C  3F02               	moviw [2]fsr0
  6573  0E5D  00B8               	movwf	(vfpfcnvrt@f+2)^(0+256)
  6574  0E5E  3F03               	moviw [3]fsr0
  6575  0E5F  00B9               	movwf	(vfpfcnvrt@f+3)^(0+256)
  6576                           
  6577                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  6578  0E60  0839               	movf	(vfpfcnvrt@f+3)^(0+256),w
  6579  0E61  0020               	movlb	0	; select bank0
  6580  0E62  00E7               	movwf	efgtoa@f+3
  6581  0E63  0022               	movlb	2	; select bank2
  6582  0E64  0838               	movf	(vfpfcnvrt@f+2)^(0+256),w
  6583  0E65  0020               	movlb	0	; select bank0
  6584  0E66  00E6               	movwf	efgtoa@f+2
  6585  0E67  0022               	movlb	2	; select bank2
  6586  0E68  0837               	movf	(vfpfcnvrt@f+1)^(0+256),w
  6587  0E69  0020               	movlb	0	; select bank0
  6588  0E6A  00E5               	movwf	efgtoa@f+1
  6589  0E6B  0022               	movlb	2	; select bank2
  6590  0E6C  0836               	movf	vfpfcnvrt@f^(0+256),w
  6591  0E6D  0020               	movlb	0	; select bank0
  6592  0E6E  00E4               	movwf	efgtoa@f
  6593  0E6F  0022               	movlb	2	; select bank2
  6594  0E70  083D               	movf	vfpfcnvrt@c^(0+256),w
  6595  0E71  0021               	movlb	1	; select bank1
  6596  0E72  00D9               	movwf	??_vfpfcnvrt^(0+128)
  6597  0E73  0859               	movf	??_vfpfcnvrt^(0+128),w
  6598  0E74  0020               	movlb	0	; select bank0
  6599  0E75  00E8               	movwf	efgtoa@c
  6600  0E76  0022               	movlb	2	; select bank2
  6601  0E77  083E               	movf	vfpfcnvrt@fp^(0+256),w
  6602  0E78  3181  2114         	fcall	_efgtoa
  6603  0E7A  0020               	movlb	0	; select bank0
  6604  0E7B  0865               	movf	?_efgtoa+1,w
  6605  0E7C  00EE               	movwf	?_vfpfcnvrt+1
  6606  0E7D  0864               	movf	?_efgtoa,w
  6607  0E7E  00ED               	movwf	?_vfpfcnvrt
  6608  0E7F  0008               	return
  6609  0E80                     l4681:
  6610                           
  6611                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  6612  0E80  3069               	movlw	low (STR_13| (0+32768))
  6613  0E81  00F0               	movwf	strncmp@_r
  6614  0E82  3098               	movlw	high (STR_13| (0+32768))
  6615  0E83  00F1               	movwf	strncmp@_r+1
  6616  0E84  3002               	movlw	2
  6617  0E85  00F2               	movwf	strncmp@n
  6618  0E86  3000               	movlw	0
  6619  0E87  00F3               	movwf	strncmp@n+1
  6620  0E88  303A               	movlw	(low (vfpfcnvrt@ct| (0+256)))& (0+255)
  6621  0E89  319D  256D  318C   	fcall	_strncmp
  6622  0E8C  0870               	movf	?_strncmp,w
  6623  0E8D  0471               	iorwf	?_strncmp+1,w
  6624  0E8E  1D03               	btfss	3,2
  6625  0E8F  2F20               	goto	l4699
  6626                           
  6627                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  6628  0E90  0020               	movlb	0	; select bank0
  6629  0E91  086D               	movf	vfpfcnvrt@fmt,w
  6630  0E92  0086               	movwf	6
  6631  0E93  0187               	clrf	7
  6632  0E94  3F40               	moviw [0]fsr1
  6633  0E95  0021               	movlb	1	; select bank1
  6634  0E96  00D9               	movwf	??_vfpfcnvrt^(0+128)
  6635  0E97  3F41               	moviw [1]fsr1
  6636  0E98  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6637  0E99  3001               	movlw	1
  6638  0E9A  0759               	addwf	??_vfpfcnvrt^(0+128),w
  6639  0E9B  0084               	movwf	4
  6640  0E9C  085A               	movf	(??_vfpfcnvrt^(0+128)+1),w
  6641  0E9D  1803               	skipnc
  6642  0E9E  0A5A               	incf	(??_vfpfcnvrt^(0+128)+1),w
  6643  0E9F  0085               	movwf	5
  6644  0EA0  0800               	movf	0,w	;code access
  6645  0EA1  00DB               	movwf	(??_vfpfcnvrt+2)^(0+128)
  6646  0EA2  085B               	movf	(??_vfpfcnvrt+2)^(0+128),w
  6647  0EA3  0022               	movlb	2	; select bank2
  6648  0EA4  00BD               	movwf	vfpfcnvrt@c^(0+256)
  6649  0EA5  0020               	movlb	0	; select bank0
  6650  0EA6  086D               	movf	vfpfcnvrt@fmt,w
  6651  0EA7  0086               	movwf	6
  6652  0EA8  0187               	clrf	7
  6653  0EA9  3F40               	moviw [0]fsr1
  6654  0EAA  0021               	movlb	1	; select bank1
  6655  0EAB  00D9               	movwf	??_vfpfcnvrt^(0+128)
  6656  0EAC  3F41               	moviw [1]fsr1
  6657  0EAD  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6658  0EAE  0859               	movf	??_vfpfcnvrt^(0+128),w
  6659  0EAF  0084               	movwf	4
  6660  0EB0  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  6661  0EB1  0085               	movwf	5
  6662  0EB2  0800               	movf	0,w	;code access
  6663  0EB3  3EBF               	addlw	191
  6664  0EB4  00DB               	movwf	(??_vfpfcnvrt+2)^(0+128)
  6665  0EB5  30FF               	movlw	255
  6666  0EB6  1803               	skipnc
  6667  0EB7  3000               	movlw	0
  6668  0EB8  00DC               	movwf	((??_vfpfcnvrt+2)^(0+128)+1)
  6669  0EB9  3000               	movlw	0
  6670  0EBA  025C               	subwf	(??_vfpfcnvrt+3)^(0+128),w
  6671  0EBB  301A               	movlw	26
  6672  0EBC  1903               	skipnz
  6673  0EBD  025B               	subwf	(??_vfpfcnvrt+2)^(0+128),w
  6674  0EBE  1803               	btfsc	3,0
  6675  0EBF  2EC2               	goto	u7130
  6676  0EC0  3001               	movlw	1
  6677  0EC1  2EC3               	goto	u7140
  6678  0EC2                     u7130:
  6679  0EC2  3000               	movlw	0
  6680  0EC3                     u7140:
  6681  0EC3  00DD               	movwf	(??_vfpfcnvrt+4)^(0+128)
  6682  0EC4  01DE               	clrf	((??_vfpfcnvrt+4)^(0+128)+1)
  6683  0EC5  085D               	movf	(??_vfpfcnvrt+4)^(0+128),w
  6684  0EC6  0022               	movlb	2	; select bank2
  6685  0EC7  00B4               	movwf	_vfpfcnvrt$996^(0+256)
  6686  0EC8  0021               	movlb	1	; select bank1
  6687  0EC9  085E               	movf	(??_vfpfcnvrt+5)^(0+128),w
  6688  0ECA  0022               	movlb	2	; select bank2
  6689  0ECB  00B5               	movwf	(_vfpfcnvrt$996+1)^(0+256)
  6690  0ECC  0834               	movf	_vfpfcnvrt$996^(0+256),w
  6691  0ECD  0435               	iorwf	(_vfpfcnvrt$996+1)^(0+256),w
  6692  0ECE  1903               	btfsc	3,2
  6693  0ECF  2EE3               	goto	l4691
  6694                           
  6695                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  6696  0ED0  0020               	movlb	0	; select bank0
  6697  0ED1  086E               	movf	vfpfcnvrt@ap,w
  6698  0ED2  0086               	movwf	6
  6699  0ED3  0187               	clrf	7
  6700  0ED4  0801               	movf	1,w
  6701  0ED5  0084               	movwf	4
  6702  0ED6  3001               	movlw	1	; select bank2/3
  6703  0ED7  0085               	movwf	5
  6704  0ED8  3004               	movlw	4
  6705  0ED9  0781               	addwf	1,f
  6706  0EDA  3F00               	moviw [0]fsr0
  6707  0EDB  0022               	movlb	2	; select bank2
  6708  0EDC  00B6               	movwf	vfpfcnvrt@f^(0+256)
  6709  0EDD  3F01               	moviw [1]fsr0
  6710  0EDE  00B7               	movwf	(vfpfcnvrt@f+1)^(0+256)
  6711  0EDF  3F02               	moviw [2]fsr0
  6712  0EE0  00B8               	movwf	(vfpfcnvrt@f+2)^(0+256)
  6713  0EE1  3F03               	moviw [3]fsr0
  6714  0EE2  2EF5               	goto	L1
  6715  0EE3                     l4691:	
  6716                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  6717                           
  6718                           
  6719                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  6720  0EE3  0020               	movlb	0	; select bank0
  6721  0EE4  086E               	movf	vfpfcnvrt@ap,w
  6722  0EE5  0086               	movwf	6
  6723  0EE6  0187               	clrf	7
  6724  0EE7  0801               	movf	1,w
  6725  0EE8  0084               	movwf	4
  6726  0EE9  3001               	movlw	1	; select bank2/3
  6727  0EEA  0085               	movwf	5
  6728  0EEB  3004               	movlw	4
  6729  0EEC  0781               	addwf	1,f
  6730  0EED  3F00               	moviw [0]fsr0
  6731  0EEE  0022               	movlb	2	; select bank2
  6732  0EEF  00B6               	movwf	vfpfcnvrt@f^(0+256)
  6733  0EF0  3F01               	moviw [1]fsr0
  6734  0EF1  00B7               	movwf	(vfpfcnvrt@f+1)^(0+256)
  6735  0EF2  3F02               	moviw [2]fsr0
  6736  0EF3  00B8               	movwf	(vfpfcnvrt@f+2)^(0+256)
  6737  0EF4  3F03               	moviw [3]fsr0
  6738  0EF5                     L1:
  6739  0EF5  00B9               	movwf	(vfpfcnvrt@f+3)^(0+256)
  6740                           
  6741                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  6742  0EF6  0020               	movlb	0	; select bank0
  6743  0EF7  086D               	movf	vfpfcnvrt@fmt,w
  6744  0EF8  0086               	movwf	6
  6745  0EF9  0187               	clrf	7
  6746  0EFA  3002               	movlw	2
  6747  0EFB  0781               	addwf	1,f
  6748  0EFC  3141               	addfsr 1,1
  6749  0EFD  1803               	skipnc
  6750  0EFE  0A81               	incf	1,f
  6751                           
  6752                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 960:             
      +                          return efgtoa(fp, f, c);
  6753  0EFF  0022               	movlb	2	; select bank2
  6754  0F00  0839               	movf	(vfpfcnvrt@f+3)^(0+256),w
  6755  0F01  0020               	movlb	0	; select bank0
  6756  0F02  00E7               	movwf	efgtoa@f+3
  6757  0F03  0022               	movlb	2	; select bank2
  6758  0F04  0838               	movf	(vfpfcnvrt@f+2)^(0+256),w
  6759  0F05  0020               	movlb	0	; select bank0
  6760  0F06  00E6               	movwf	efgtoa@f+2
  6761  0F07  0022               	movlb	2	; select bank2
  6762  0F08  0837               	movf	(vfpfcnvrt@f+1)^(0+256),w
  6763  0F09  0020               	movlb	0	; select bank0
  6764  0F0A  00E5               	movwf	efgtoa@f+1
  6765  0F0B  0022               	movlb	2	; select bank2
  6766  0F0C  0836               	movf	vfpfcnvrt@f^(0+256),w
  6767  0F0D  0020               	movlb	0	; select bank0
  6768  0F0E  00E4               	movwf	efgtoa@f
  6769  0F0F  0022               	movlb	2	; select bank2
  6770  0F10  083D               	movf	vfpfcnvrt@c^(0+256),w
  6771  0F11  0021               	movlb	1	; select bank1
  6772  0F12  00D9               	movwf	??_vfpfcnvrt^(0+128)
  6773  0F13  0859               	movf	??_vfpfcnvrt^(0+128),w
  6774  0F14  0020               	movlb	0	; select bank0
  6775  0F15  00E8               	movwf	efgtoa@c
  6776  0F16  0022               	movlb	2	; select bank2
  6777  0F17  083E               	movf	vfpfcnvrt@fp^(0+256),w
  6778  0F18  3181  2114         	fcall	_efgtoa
  6779  0F1A  0020               	movlb	0	; select bank0
  6780  0F1B  0865               	movf	?_efgtoa+1,w
  6781  0F1C  00EE               	movwf	?_vfpfcnvrt+1
  6782  0F1D  0864               	movf	?_efgtoa,w
  6783  0F1E  00ED               	movwf	?_vfpfcnvrt
  6784  0F1F  0008               	return
  6785  0F20                     l4699:
  6786                           
  6787                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  6788  0F20  0020               	movlb	0	; select bank0
  6789  0F21  086D               	movf	vfpfcnvrt@fmt,w
  6790  0F22  0086               	movwf	6
  6791  0F23  0187               	clrf	7
  6792  0F24  3F40               	moviw [0]fsr1
  6793  0F25  0021               	movlb	1	; select bank1
  6794  0F26  00D9               	movwf	??_vfpfcnvrt^(0+128)
  6795  0F27  3F41               	moviw [1]fsr1
  6796  0F28  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6797  0F29  0859               	movf	??_vfpfcnvrt^(0+128),w
  6798  0F2A  0084               	movwf	4
  6799  0F2B  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  6800  0F2C  0085               	movwf	5
  6801  0F2D  0012               	moviw fsr0++
  6802  0F2E  3A78               	xorlw	120
  6803  0F2F  1903               	btfsc	3,2
  6804  0F30  2F42               	goto	l4703
  6805  0F31  0020               	movlb	0	; select bank0
  6806  0F32  086D               	movf	vfpfcnvrt@fmt,w
  6807  0F33  0086               	movwf	6
  6808  0F34  0187               	clrf	7
  6809  0F35  3F40               	moviw [0]fsr1
  6810  0F36  0021               	movlb	1	; select bank1
  6811  0F37  00D9               	movwf	??_vfpfcnvrt^(0+128)
  6812  0F38  3F41               	moviw [1]fsr1
  6813  0F39  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6814  0F3A  0859               	movf	??_vfpfcnvrt^(0+128),w
  6815  0F3B  0084               	movwf	4
  6816  0F3C  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  6817  0F3D  0085               	movwf	5
  6818  0F3E  0012               	moviw fsr0++
  6819  0F3F  3A58               	xorlw	88
  6820  0F40  1D03               	btfss	3,2
  6821  0F41  2FA1               	goto	l4713
  6822  0F42                     l4703:
  6823                           
  6824                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  6825  0F42  0020               	movlb	0	; select bank0
  6826  0F43  086D               	movf	vfpfcnvrt@fmt,w
  6827  0F44  0086               	movwf	6
  6828  0F45  0187               	clrf	7
  6829  0F46  3F40               	moviw [0]fsr1
  6830  0F47  0021               	movlb	1	; select bank1
  6831  0F48  00D9               	movwf	??_vfpfcnvrt^(0+128)
  6832  0F49  3F41               	moviw [1]fsr1
  6833  0F4A  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6834  0F4B  0859               	movf	??_vfpfcnvrt^(0+128),w
  6835  0F4C  0084               	movwf	4
  6836  0F4D  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  6837  0F4E  0085               	movwf	5
  6838  0F4F  0800               	movf	0,w	;code access
  6839  0F50  00DB               	movwf	(??_vfpfcnvrt+2)^(0+128)
  6840  0F51  085B               	movf	(??_vfpfcnvrt+2)^(0+128),w
  6841  0F52  0022               	movlb	2	; select bank2
  6842  0F53  00BD               	movwf	vfpfcnvrt@c^(0+256)
  6843                           
  6844                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  6845  0F54  0020               	movlb	0	; select bank0
  6846  0F55  086D               	movf	vfpfcnvrt@fmt,w
  6847  0F56  0086               	movwf	6
  6848  0F57  0187               	clrf	7
  6849  0F58  3001               	movlw	1
  6850  0F59  0781               	addwf	1,f
  6851  0F5A  3141               	addfsr 1,1
  6852  0F5B  1803               	skipnc
  6853  0F5C  0A81               	incf	1,f
  6854                           
  6855                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  6856  0F5D  086E               	movf	vfpfcnvrt@ap,w
  6857  0F5E  0086               	movwf	6
  6858  0F5F  0187               	clrf	7
  6859  0F60  0801               	movf	1,w
  6860  0F61  0084               	movwf	4
  6861  0F62  3001               	movlw	1	; select bank2/3
  6862  0F63  0085               	movwf	5
  6863  0F64  3002               	movlw	2
  6864  0F65  0781               	addwf	1,f
  6865  0F66  3F00               	moviw [0]fsr0
  6866  0F67  0022               	movlb	2	; select bank2
  6867  0F68  00A8               	movwf	vfpfcnvrt@llu^(0+256)
  6868  0F69  3F01               	moviw [1]fsr0
  6869  0F6A  00A9               	movwf	(vfpfcnvrt@llu+1)^(0+256)
  6870  0F6B  01AA               	clrf	(vfpfcnvrt@llu+2)^(0+256)
  6871  0F6C  01AB               	clrf	(vfpfcnvrt@llu+3)^(0+256)
  6872  0F6D  01AC               	clrf	(vfpfcnvrt@llu+4)^(0+256)
  6873  0F6E  01AD               	clrf	(vfpfcnvrt@llu+5)^(0+256)
  6874  0F6F  01AE               	clrf	(vfpfcnvrt@llu+6)^(0+256)
  6875  0F70  01AF               	clrf	(vfpfcnvrt@llu+7)^(0+256)
  6876                           
  6877                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  6878  0F71  0828               	movf	vfpfcnvrt@llu^(0+256),w
  6879  0F72  0020               	movlb	0	; select bank0
  6880  0F73  00AF               	movwf	xtoa@d
  6881  0F74  0022               	movlb	2	; select bank2
  6882  0F75  0829               	movf	(vfpfcnvrt@llu+1)^(0+256),w
  6883  0F76  0020               	movlb	0	; select bank0
  6884  0F77  00B0               	movwf	xtoa@d+1
  6885  0F78  0022               	movlb	2	; select bank2
  6886  0F79  082A               	movf	(vfpfcnvrt@llu+2)^(0+256),w
  6887  0F7A  0020               	movlb	0	; select bank0
  6888  0F7B  00B1               	movwf	xtoa@d+2
  6889  0F7C  0022               	movlb	2	; select bank2
  6890  0F7D  082B               	movf	(vfpfcnvrt@llu+3)^(0+256),w
  6891  0F7E  0020               	movlb	0	; select bank0
  6892  0F7F  00B2               	movwf	xtoa@d+3
  6893  0F80  0022               	movlb	2	; select bank2
  6894  0F81  082C               	movf	(vfpfcnvrt@llu+4)^(0+256),w
  6895  0F82  0020               	movlb	0	; select bank0
  6896  0F83  00B3               	movwf	xtoa@d+4
  6897  0F84  0022               	movlb	2	; select bank2
  6898  0F85  082D               	movf	(vfpfcnvrt@llu+5)^(0+256),w
  6899  0F86  0020               	movlb	0	; select bank0
  6900  0F87  00B4               	movwf	xtoa@d+5
  6901  0F88  0022               	movlb	2	; select bank2
  6902  0F89  082E               	movf	(vfpfcnvrt@llu+6)^(0+256),w
  6903  0F8A  0020               	movlb	0	; select bank0
  6904  0F8B  00B5               	movwf	xtoa@d+6
  6905  0F8C  0022               	movlb	2	; select bank2
  6906  0F8D  082F               	movf	(vfpfcnvrt@llu+7)^(0+256),w
  6907  0F8E  0020               	movlb	0	; select bank0
  6908  0F8F  00B6               	movwf	xtoa@d+7
  6909  0F90  0022               	movlb	2	; select bank2
  6910  0F91  083D               	movf	vfpfcnvrt@c^(0+256),w
  6911  0F92  0021               	movlb	1	; select bank1
  6912  0F93  00D9               	movwf	??_vfpfcnvrt^(0+128)
  6913  0F94  0859               	movf	??_vfpfcnvrt^(0+128),w
  6914  0F95  0020               	movlb	0	; select bank0
  6915  0F96  00B7               	movwf	xtoa@x
  6916  0F97  0022               	movlb	2	; select bank2
  6917  0F98  083E               	movf	vfpfcnvrt@fp^(0+256),w
  6918  0F99  3193  23D0         	fcall	_xtoa
  6919  0F9B  0020               	movlb	0	; select bank0
  6920  0F9C  0830               	movf	?_xtoa+1,w
  6921  0F9D  00EE               	movwf	?_vfpfcnvrt+1
  6922  0F9E  082F               	movf	?_xtoa,w
  6923  0F9F  00ED               	movwf	?_vfpfcnvrt
  6924  0FA0  0008               	return
  6925  0FA1                     l4713:
  6926                           
  6927                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  6928  0FA1  0020               	movlb	0	; select bank0
  6929  0FA2  086D               	movf	vfpfcnvrt@fmt,w
  6930  0FA3  0086               	movwf	6
  6931  0FA4  0187               	clrf	7
  6932  0FA5  3F40               	moviw [0]fsr1
  6933  0FA6  0021               	movlb	1	; select bank1
  6934  0FA7  00D9               	movwf	??_vfpfcnvrt^(0+128)
  6935  0FA8  3F41               	moviw [1]fsr1
  6936  0FA9  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6937  0FAA  0859               	movf	??_vfpfcnvrt^(0+128),w
  6938  0FAB  0084               	movwf	4
  6939  0FAC  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  6940  0FAD  0085               	movwf	5
  6941  0FAE  0012               	moviw fsr0++
  6942  0FAF  3A25               	xorlw	37
  6943  0FB0  1D03               	btfss	3,2
  6944  0FB1  2FCD               	goto	l4723
  6945                           
  6946                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  6947  0FB2  0020               	movlb	0	; select bank0
  6948  0FB3  086D               	movf	vfpfcnvrt@fmt,w
  6949  0FB4  0086               	movwf	6
  6950  0FB5  0187               	clrf	7
  6951  0FB6  3001               	movlw	1
  6952  0FB7  0781               	addwf	1,f
  6953  0FB8  3141               	addfsr 1,1
  6954  0FB9  1803               	skipnc
  6955  0FBA  0A81               	incf	1,f
  6956                           
  6957                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  6958  0FBB  3025               	movlw	37
  6959  0FBC  00F3               	movwf	fputc@c
  6960  0FBD  3000               	movlw	0
  6961  0FBE  00F4               	movwf	fputc@c+1
  6962  0FBF  0022               	movlb	2	; select bank2
  6963  0FC0  083E               	movf	vfpfcnvrt@fp^(0+256),w
  6964  0FC1  0021               	movlb	1	; select bank1
  6965  0FC2  00D9               	movwf	??_vfpfcnvrt^(0+128)
  6966  0FC3  0859               	movf	??_vfpfcnvrt^(0+128),w
  6967  0FC4  00F5               	movwf	fputc@fp
  6968  0FC5  319B  2339         	fcall	_fputc
  6969  0FC7                     l4719:
  6970                           
  6971                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  6972  0FC7  3001               	movlw	1
  6973  0FC8  0020               	movlb	0	; select bank0
  6974  0FC9  00ED               	movwf	?_vfpfcnvrt
  6975  0FCA  3000               	movlw	0
  6976  0FCB  00EE               	movwf	?_vfpfcnvrt+1
  6977  0FCC  0008               	return
  6978  0FCD                     l4723:
  6979                           
  6980                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  6981  0FCD  0020               	movlb	0	; select bank0
  6982  0FCE  086D               	movf	vfpfcnvrt@fmt,w
  6983  0FCF  0086               	movwf	6
  6984  0FD0  0187               	clrf	7
  6985  0FD1  3001               	movlw	1
  6986  0FD2  0781               	addwf	1,f
  6987  0FD3  3141               	addfsr 1,1
  6988  0FD4  1803               	skipnc
  6989  0FD5  0A81               	incf	1,f
  6990                           
  6991                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  6992  0FD6  01ED               	clrf	?_vfpfcnvrt
  6993  0FD7  01EE               	clrf	?_vfpfcnvrt+1
  6994  0FD8  0008               	return
  6995  0FD9                     l4729:
  6996                           
  6997                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  6998  0FD9  0020               	movlb	0	; select bank0
  6999  0FDA  086D               	movf	vfpfcnvrt@fmt,w
  7000  0FDB  0086               	movwf	6
  7001  0FDC  0187               	clrf	7
  7002  0FDD  3F40               	moviw [0]fsr1
  7003  0FDE  0021               	movlb	1	; select bank1
  7004  0FDF  00D9               	movwf	??_vfpfcnvrt^(0+128)
  7005  0FE0  3F41               	moviw [1]fsr1
  7006  0FE1  00DA               	movwf	(??_vfpfcnvrt^(0+128)+1)
  7007  0FE2  0859               	movf	??_vfpfcnvrt^(0+128),w
  7008  0FE3  0084               	movwf	4
  7009  0FE4  085A               	movf	(??_vfpfcnvrt+1)^(0+128),w
  7010  0FE5  0085               	movwf	5
  7011  0FE6  0800               	movf	0,w	;code access
  7012  0FE7  00DB               	movwf	(??_vfpfcnvrt+2)^(0+128)
  7013  0FE8  01DC               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  7014  0FE9  085B               	movf	(??_vfpfcnvrt+2)^(0+128),w
  7015  0FEA  00F3               	movwf	fputc@c
  7016  0FEB  085C               	movf	(??_vfpfcnvrt+3)^(0+128),w
  7017  0FEC  00F4               	movwf	fputc@c+1
  7018  0FED  0022               	movlb	2	; select bank2
  7019  0FEE  083E               	movf	vfpfcnvrt@fp^(0+256),w
  7020  0FEF  0021               	movlb	1	; select bank1
  7021  0FF0  00DD               	movwf	(??_vfpfcnvrt+4)^(0+128)
  7022  0FF1  085D               	movf	(??_vfpfcnvrt+4)^(0+128),w
  7023  0FF2  00F5               	movwf	fputc@fp
  7024  0FF3  319B  2339  318C   	fcall	_fputc
  7025                           
  7026                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  7027  0FF6  0020               	movlb	0	; select bank0
  7028  0FF7  086D               	movf	vfpfcnvrt@fmt,w
  7029  0FF8  0086               	movwf	6
  7030  0FF9  0187               	clrf	7
  7031  0FFA  3001               	movlw	1
  7032  0FFB  0781               	addwf	1,f
  7033  0FFC  3141               	addfsr 1,1
  7034  0FFD  1803               	skipnc
  7035  0FFE  0A81               	incf	1,f
  7036  0FFF  2FC7               	goto	l4719
  7037  1000                     __end_of_vfpfcnvrt:
  7038                           
  7039                           	psect	text10
  7040  13D0                     __ptext10:	
  7041 ;; *************** function _xtoa *****************
  7042 ;; Defined at:
  7043 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7044 ;; Parameters:    Size  Location     Type
  7045 ;;  fp              1    wreg     PTR struct _IO_FILE
  7046 ;;		 -> NULL(0), 
  7047 ;;  d               8   15[BANK0 ] unsigned long long 
  7048 ;;  x               1   23[BANK0 ] unsigned char 
  7049 ;; Auto vars:     Size  Location     Type
  7050 ;;  fp              1   38[BANK0 ] PTR struct _IO_FILE
  7051 ;;		 -> NULL(0), 
  7052 ;;  n               8   41[BANK0 ] unsigned long long 
  7053 ;;  c               2   51[BANK0 ] int 
  7054 ;;  i               2   49[BANK0 ] int 
  7055 ;;  w               2   39[BANK0 ] int 
  7056 ;;  p               2   36[BANK0 ] int 
  7057 ;; Return value:  Size  Location     Type
  7058 ;;                  2   15[BANK0 ] int 
  7059 ;; Registers used:
  7060 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7061 ;; Tracked objects:
  7062 ;;		On entry : 0/0
  7063 ;;		On exit  : 0/0
  7064 ;;		Unchanged: 0/0
  7065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7066 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7067 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7068 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7069 ;;      Totals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7070 ;;Total ram usage:       38 bytes
  7071 ;; Hardware stack levels used: 1
  7072 ;; Hardware stack levels required when called: 5
  7073 ;; This function calls:
  7074 ;;		_isalpha
  7075 ;;		_isupper
  7076 ;;		_pad
  7077 ;;		_toupper
  7078 ;; This function is called by:
  7079 ;;		_vfpfcnvrt
  7080 ;; This function uses a non-reentrant model
  7081 ;;
  7082                           
  7083                           
  7084                           ;psect for function _xtoa
  7085  13D0                     _xtoa:
  7086                           
  7087                           ;incstack = 0
  7088                           ; Regs used in _xtoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7089                           ;xtoa@fp stored from wreg
  7090  13D0  0020               	movlb	0	; select bank0
  7091  13D1  00C6               	movwf	xtoa@fp
  7092                           
  7093                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  7094  13D2  0021               	movlb	1	; select bank1
  7095  13D3  1BED               	btfsc	(_prec+1)^(0+128),7
  7096  13D4  2BD9               	goto	l1044
  7097                           
  7098                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  7099  13D5  30FD               	movlw	253
  7100  13D6  05EE               	andwf	_flags^(0+128),f
  7101  13D7  30FF               	movlw	255
  7102  13D8  05EF               	andwf	(_flags+1)^(0+128),f
  7103  13D9                     l1044:	
  7104                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 653:     }
  7105                           
  7106                           
  7107                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  7108  13D9  086D               	movf	(_prec+1)^(0+128),w
  7109  13DA  3A80               	xorlw	128
  7110  13DB  0020               	movlb	0	; select bank0
  7111  13DC  00B8               	movwf	??_xtoa
  7112  13DD  3080               	movlw	128
  7113  13DE  0238               	subwf	??_xtoa,w
  7114  13DF  1D03               	skipz
  7115  13E0  2BE4               	goto	u6615
  7116  13E1  3001               	movlw	1
  7117  13E2  0021               	movlb	1	; select bank1
  7118  13E3  026C               	subwf	_prec^(0+128),w
  7119  13E4                     u6615:
  7120  13E4  1803               	skipnc
  7121  13E5  2BEC               	goto	l4433
  7122  13E6  3001               	movlw	1
  7123  13E7  0020               	movlb	0	; select bank0
  7124  13E8  00C4               	movwf	xtoa@p
  7125  13E9  3000               	movlw	0
  7126  13EA  00C5               	movwf	xtoa@p+1
  7127  13EB  2BF4               	goto	l1048
  7128  13EC                     l4433:
  7129  13EC  0021               	movlb	1	; select bank1
  7130  13ED  086D               	movf	(_prec+1)^(0+128),w
  7131  13EE  0020               	movlb	0	; select bank0
  7132  13EF  00C5               	movwf	xtoa@p+1
  7133  13F0  0021               	movlb	1	; select bank1
  7134  13F1  086C               	movf	_prec^(0+128),w
  7135  13F2  0020               	movlb	0	; select bank0
  7136  13F3  00C4               	movwf	xtoa@p
  7137  13F4                     l1048:
  7138                           
  7139                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  7140  13F4  0022               	movlb	2	; select bank2
  7141  13F5  085A               	movf	(_width+1)^(0+256),w
  7142  13F6  0020               	movlb	0	; select bank0
  7143  13F7  00C8               	movwf	xtoa@w+1
  7144  13F8  0022               	movlb	2	; select bank2
  7145  13F9  0859               	movf	_width^(0+256),w
  7146  13FA  0020               	movlb	0	; select bank0
  7147  13FB  00C7               	movwf	xtoa@w
  7148                           
  7149                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  7150  13FC  0021               	movlb	1	; select bank1
  7151  13FD  1E6E               	btfss	_flags^(0+128),4
  7152  13FE  2C04               	goto	l4439
  7153                           
  7154                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  7155  13FF  30FE               	movlw	254
  7156  1400  0020               	movlb	0	; select bank0
  7157  1401  07C7               	addwf	xtoa@w,f
  7158  1402  30FF               	movlw	255
  7159  1403  3DC8               	addwfc	xtoa@w+1,f
  7160  1404                     l4439:
  7161                           
  7162                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 661:     n = d;
  7163  1404  0020               	movlb	0	; select bank0
  7164  1405  082F               	movf	xtoa@d,w
  7165  1406  00C9               	movwf	xtoa@n
  7166  1407  0830               	movf	xtoa@d+1,w
  7167  1408  00CA               	movwf	xtoa@n+1
  7168  1409  0831               	movf	xtoa@d+2,w
  7169  140A  00CB               	movwf	xtoa@n+2
  7170  140B  0832               	movf	xtoa@d+3,w
  7171  140C  00CC               	movwf	xtoa@n+3
  7172  140D  0833               	movf	xtoa@d+4,w
  7173  140E  00CD               	movwf	xtoa@n+4
  7174  140F  0834               	movf	xtoa@d+5,w
  7175  1410  00CE               	movwf	xtoa@n+5
  7176  1411  0835               	movf	xtoa@d+6,w
  7177  1412  00CF               	movwf	xtoa@n+6
  7178  1413  0836               	movf	xtoa@d+7,w
  7179  1414  00D0               	movwf	xtoa@n+7
  7180                           
  7181                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  7182  1415  304F               	movlw	79
  7183  1416  00D1               	movwf	xtoa@i
  7184  1417  3000               	movlw	0
  7185  1418  00D2               	movwf	xtoa@i+1
  7186                           
  7187                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  7188  1419  0023               	movlb	3	; select bank3
  7189  141A  01EF               	clrf	(_dbuf^(0+384)+79)
  7190                           
  7191                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7192  141B  2CC6               	goto	l4471
  7193  141C                     l4443:
  7194                           
  7195                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 665:         --i;
  7196  141C  30FF               	movlw	255
  7197  141D  0020               	movlb	0	; select bank0
  7198  141E  07D1               	addwf	xtoa@i,f
  7199  141F  30FF               	movlw	255
  7200  1420  3DD2               	addwfc	xtoa@i+1,f
  7201                           
  7202                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  7203  1421  300F               	movlw	15
  7204  1422  0549               	andwf	xtoa@n,w
  7205  1423  00D3               	movwf	xtoa@c
  7206  1424  3000               	movlw	0
  7207  1425  054A               	andwf	xtoa@n+1,w
  7208  1426  00D4               	movwf	xtoa@c+1
  7209                           
  7210                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  7211  1427  0854               	movf	xtoa@c+1,w
  7212  1428  3A80               	xorlw	128
  7213  1429  00B8               	movwf	??_xtoa
  7214  142A  3080               	movlw	128
  7215  142B  0238               	subwf	??_xtoa,w
  7216  142C  1D03               	skipz
  7217  142D  2C30               	goto	u6635
  7218  142E  300A               	movlw	10
  7219  142F  0253               	subwf	xtoa@c,w
  7220  1430                     u6635:
  7221  1430  1C03               	skipc
  7222  1431  2C36               	goto	l4447
  7223  1432  0020               	movlb	0	; select bank0
  7224  1433  0853               	movf	xtoa@c,w
  7225  1434  3E57               	addlw	87
  7226  1435  2C39               	goto	L2
  7227  1436                     l4447:
  7228  1436  0020               	movlb	0	; select bank0
  7229  1437  0853               	movf	xtoa@c,w
  7230  1438  3E30               	addlw	48
  7231  1439                     L2:
  7232  1439  00D3               	movwf	xtoa@c
  7233  143A  3000               	movlw	0
  7234  143B  3D54               	addwfc	xtoa@c+1,w
  7235  143C  00D4               	movwf	xtoa@c+1
  7236  143D  0837               	movf	xtoa@x,w
  7237  143E  3EBF               	addlw	191
  7238  143F  00B8               	movwf	??_xtoa
  7239  1440  30FF               	movlw	255
  7240  1441  1803               	skipnc
  7241  1442  3000               	movlw	0
  7242  1443  00B9               	movwf	??_xtoa+1
  7243  1444  3000               	movlw	0
  7244  1445  0239               	subwf	??_xtoa+1,w
  7245  1446  301A               	movlw	26
  7246  1447  1903               	skipnz
  7247  1448  0238               	subwf	??_xtoa,w
  7248  1449  1803               	btfsc	3,0
  7249  144A  2C4D               	goto	u6640
  7250  144B  3001               	movlw	1
  7251  144C  2C4E               	goto	u6650
  7252  144D                     u6640:
  7253  144D  3000               	movlw	0
  7254  144E                     u6650:
  7255  144E  00BA               	movwf	??_xtoa+2
  7256  144F  01BB               	clrf	??_xtoa+3
  7257  1450  083A               	movf	??_xtoa+2,w
  7258  1451  00C0               	movwf	_xtoa$975
  7259  1452  083B               	movf	??_xtoa+3,w
  7260  1453  00C1               	movwf	_xtoa$975+1
  7261  1454  0840               	movf	_xtoa$975,w
  7262  1455  0441               	iorwf	_xtoa$975+1,w
  7263  1456  1903               	btfsc	3,2
  7264  1457  2C84               	goto	l4463
  7265  1458  3020               	movlw	32
  7266  1459  0453               	iorwf	xtoa@c,w
  7267  145A  00B8               	movwf	??_xtoa
  7268  145B  3000               	movlw	0
  7269  145C  0454               	iorwf	xtoa@c+1,w
  7270  145D  00B9               	movwf	??_xtoa+1
  7271  145E  0838               	movf	??_xtoa,w
  7272  145F  3E9F               	addlw	159
  7273  1460  00BA               	movwf	??_xtoa+2
  7274  1461  30FF               	movlw	255
  7275  1462  3D39               	addwfc	??_xtoa+1,w
  7276  1463  00BB               	movwf	??_xtoa+3
  7277  1464  3000               	movlw	0
  7278  1465  023B               	subwf	??_xtoa+3,w
  7279  1466  301A               	movlw	26
  7280  1467  1903               	skipnz
  7281  1468  023A               	subwf	??_xtoa+2,w
  7282  1469  1803               	btfsc	3,0
  7283  146A  2C6D               	goto	u6670
  7284  146B  3001               	movlw	1
  7285  146C  2C6E               	goto	u6680
  7286  146D                     u6670:
  7287  146D  3000               	movlw	0
  7288  146E                     u6680:
  7289  146E  00BC               	movwf	??_xtoa+4
  7290  146F  01BD               	clrf	??_xtoa+5
  7291  1470  083C               	movf	??_xtoa+4,w
  7292  1471  00C2               	movwf	_xtoa$976
  7293  1472  083D               	movf	??_xtoa+5,w
  7294  1473  00C3               	movwf	_xtoa$976+1
  7295  1474  0842               	movf	_xtoa$976,w
  7296  1475  0443               	iorwf	_xtoa$976+1,w
  7297  1476  1903               	btfsc	3,2
  7298  1477  2C84               	goto	l4463
  7299                           
  7300                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  7301  1478  0854               	movf	xtoa@c+1,w
  7302  1479  00F7               	movwf	toupper@c+1
  7303  147A  0853               	movf	xtoa@c,w
  7304  147B  00F6               	movwf	toupper@c
  7305  147C  3188  2003  3193   	fcall	_toupper
  7306  147F  0877               	movf	?_toupper+1,w
  7307  1480  0020               	movlb	0	; select bank0
  7308  1481  00D4               	movwf	xtoa@c+1
  7309  1482  0876               	movf	?_toupper,w
  7310  1483  00D3               	movwf	xtoa@c
  7311  1484                     l4463:
  7312                           
  7313                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  7314  1484  0853               	movf	xtoa@c,w
  7315  1485  00B8               	movwf	??_xtoa
  7316  1486  0851               	movf	xtoa@i,w
  7317  1487  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7318  1488  0086               	movwf	6
  7319  1489  3001               	movlw	1	; select bank3/4
  7320  148A  0087               	movwf	7
  7321  148B  0838               	movf	??_xtoa,w
  7322  148C  0081               	movwf	1
  7323                           
  7324                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 672:         --p;
  7325  148D  30FF               	movlw	255
  7326  148E  07C4               	addwf	xtoa@p,f
  7327  148F  30FF               	movlw	255
  7328  1490  3DC5               	addwfc	xtoa@p+1,f
  7329                           
  7330                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 673:         --w;
  7331  1491  30FF               	movlw	255
  7332  1492  07C7               	addwf	xtoa@w,f
  7333  1493  30FF               	movlw	255
  7334  1494  3DC8               	addwfc	xtoa@w+1,f
  7335                           
  7336                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  7337  1495  3049               	movlw	low xtoa@n
  7338  1496  0086               	movwf	6
  7339  1497  3000               	movlw	high xtoa@n
  7340  1498  0087               	movwf	7
  7341  1499  3F40               	moviw [0]fsr1
  7342  149A  00B8               	movwf	??_xtoa
  7343  149B  3F41               	moviw [1]fsr1
  7344  149C  00B9               	movwf	??_xtoa+1
  7345  149D  3F42               	moviw [2]fsr1
  7346  149E  00BA               	movwf	??_xtoa+2
  7347  149F  3F43               	moviw [3]fsr1
  7348  14A0  00BB               	movwf	??_xtoa+3
  7349  14A1  3F44               	moviw [4]fsr1
  7350  14A2  00BC               	movwf	??_xtoa+4
  7351  14A3  3F45               	moviw [5]fsr1
  7352  14A4  00BD               	movwf	??_xtoa+5
  7353  14A5  3F46               	moviw [6]fsr1
  7354  14A6  00BE               	movwf	??_xtoa+6
  7355  14A7  3F47               	moviw [7]fsr1
  7356  14A8  00BF               	movwf	??_xtoa+7
  7357  14A9  3004               	movlw	4
  7358  14AA                     u6705:
  7359  14AA  0020               	movlb	0	; select bank0
  7360  14AB  36BF               	lsrf	??_xtoa+7,f
  7361  14AC  0CBE               	rrf	??_xtoa+6,f
  7362  14AD  0CBD               	rrf	??_xtoa+5,f
  7363  14AE  0CBC               	rrf	??_xtoa+4,f
  7364  14AF  0CBB               	rrf	??_xtoa+3,f
  7365  14B0  0CBA               	rrf	??_xtoa+2,f
  7366  14B1  0CB9               	rrf	??_xtoa+1,f
  7367  14B2  0CB8               	rrf	??_xtoa,f
  7368  14B3  0B89               	decfsz	9,f
  7369  14B4  2CAA               	goto	u6705
  7370  14B5  0020               	movlb	0	; select bank0
  7371  14B6  083F               	movf	??_xtoa+7,w
  7372  14B7  00D0               	movwf	xtoa@n+7
  7373  14B8  083E               	movf	??_xtoa+6,w
  7374  14B9  00CF               	movwf	xtoa@n+6
  7375  14BA  083D               	movf	??_xtoa+5,w
  7376  14BB  00CE               	movwf	xtoa@n+5
  7377  14BC  083C               	movf	??_xtoa+4,w
  7378  14BD  00CD               	movwf	xtoa@n+4
  7379  14BE  083B               	movf	??_xtoa+3,w
  7380  14BF  00CC               	movwf	xtoa@n+3
  7381  14C0  083A               	movf	??_xtoa+2,w
  7382  14C1  00CB               	movwf	xtoa@n+2
  7383  14C2  0839               	movf	??_xtoa+1,w
  7384  14C3  00CA               	movwf	xtoa@n+1
  7385  14C4  0838               	movf	??_xtoa,w
  7386  14C5  00C9               	movwf	xtoa@n
  7387  14C6                     l4471:
  7388                           
  7389                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7390  14C6  0020               	movlb	0	; select bank0
  7391  14C7  0852               	movf	xtoa@i+1,w
  7392  14C8  3A80               	xorlw	128
  7393  14C9  00B8               	movwf	??_xtoa
  7394  14CA  3080               	movlw	128
  7395  14CB  0238               	subwf	??_xtoa,w
  7396  14CC  1D03               	skipz
  7397  14CD  2CD0               	goto	u6715
  7398  14CE  3002               	movlw	2
  7399  14CF  0251               	subwf	xtoa@i,w
  7400  14D0                     u6715:
  7401  14D0  1C03               	skipc
  7402  14D1  2CF7               	goto	l1069
  7403  14D2  0020               	movlb	0	; select bank0
  7404  14D3  0849               	movf	xtoa@n,w
  7405  14D4  044A               	iorwf	xtoa@n+1,w
  7406  14D5  044B               	iorwf	xtoa@n+2,w
  7407  14D6  044C               	iorwf	xtoa@n+3,w
  7408  14D7  044D               	iorwf	xtoa@n+4,w
  7409  14D8  044E               	iorwf	xtoa@n+5,w
  7410  14D9  044F               	iorwf	xtoa@n+6,w
  7411  14DA  0450               	iorwf	xtoa@n+7,w
  7412  14DB  1D03               	skipz
  7413  14DC  2C1C               	goto	l4443
  7414  14DD  0845               	movf	xtoa@p+1,w
  7415  14DE  3A80               	xorlw	128
  7416  14DF  00B8               	movwf	??_xtoa
  7417  14E0  3080               	movlw	128
  7418  14E1  0238               	subwf	??_xtoa,w
  7419  14E2  1D03               	skipz
  7420  14E3  2CE6               	goto	u6735
  7421  14E4  3001               	movlw	1
  7422  14E5  0244               	subwf	xtoa@p,w
  7423  14E6                     u6735:
  7424  14E6  1803               	skipnc
  7425  14E7  2C1C               	goto	l4443
  7426  14E8  0020               	movlb	0	; select bank0
  7427  14E9  0848               	movf	xtoa@w+1,w
  7428  14EA  3A80               	xorlw	128
  7429  14EB  00B8               	movwf	??_xtoa
  7430  14EC  3080               	movlw	128
  7431  14ED  0238               	subwf	??_xtoa,w
  7432  14EE  1D03               	skipz
  7433  14EF  2CF2               	goto	u6745
  7434  14F0  3001               	movlw	1
  7435  14F1  0247               	subwf	xtoa@w,w
  7436  14F2                     u6745:
  7437  14F2  1C03               	skipc
  7438  14F3  2CF7               	goto	l1069
  7439  14F4  0021               	movlb	1	; select bank1
  7440  14F5  18EE               	btfsc	_flags^(0+128),1
  7441  14F6  2C1C               	goto	l4443
  7442  14F7                     l1069:
  7443                           
  7444                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  7445  14F7  0021               	movlb	1	; select bank1
  7446  14F8  1E6E               	btfss	_flags^(0+128),4
  7447  14F9  2D15               	goto	l4487
  7448                           
  7449                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 679:         --i;
  7450  14FA  30FF               	movlw	255
  7451  14FB  0020               	movlb	0	; select bank0
  7452  14FC  07D1               	addwf	xtoa@i,f
  7453  14FD  30FF               	movlw	255
  7454  14FE  3DD2               	addwfc	xtoa@i+1,f
  7455                           
  7456                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  7457  14FF  0837               	movf	xtoa@x,w
  7458  1500  00B8               	movwf	??_xtoa
  7459  1501  0851               	movf	xtoa@i,w
  7460  1502  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7461  1503  0086               	movwf	6
  7462  1504  3001               	movlw	1	; select bank3/4
  7463  1505  0087               	movwf	7
  7464  1506  0838               	movf	??_xtoa,w
  7465  1507  0081               	movwf	1
  7466                           
  7467                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 681:         --i;
  7468  1508  30FF               	movlw	255
  7469  1509  07D1               	addwf	xtoa@i,f
  7470  150A  30FF               	movlw	255
  7471  150B  3DD2               	addwfc	xtoa@i+1,f
  7472                           
  7473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  7474  150C  3030               	movlw	48
  7475  150D  00B8               	movwf	??_xtoa
  7476  150E  0851               	movf	xtoa@i,w
  7477  150F  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7478  1510  0086               	movwf	6
  7479  1511  3001               	movlw	1	; select bank3/4
  7480  1512  0087               	movwf	7
  7481  1513  0838               	movf	??_xtoa,w
  7482  1514  0081               	movwf	1
  7483  1515                     l4487:
  7484                           
  7485                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  7486  1515  0020               	movlb	0	; select bank0
  7487  1516  0851               	movf	xtoa@i,w
  7488  1517  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7489  1518  00B8               	movwf	??_xtoa
  7490  1519  0838               	movf	??_xtoa,w
  7491  151A  00A7               	movwf	pad@buf
  7492  151B  0848               	movf	xtoa@w+1,w
  7493  151C  00A9               	movwf	pad@p+1
  7494  151D  0847               	movf	xtoa@w,w
  7495  151E  00A8               	movwf	pad@p
  7496  151F  0846               	movf	xtoa@fp,w
  7497  1520  319C  24CC         	fcall	_pad
  7498  1522  0020               	movlb	0	; select bank0
  7499  1523  0828               	movf	?_pad+1,w
  7500  1524  00B0               	movwf	?_xtoa+1
  7501  1525  0827               	movf	?_pad,w
  7502  1526  00AF               	movwf	?_xtoa
  7503  1527  0008               	return
  7504  1528                     __end_of_xtoa:
  7505                           
  7506                           	psect	text11
  7507  0803                     __ptext11:	
  7508 ;; *************** function _toupper *****************
  7509 ;; Defined at:
  7510 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\toupper.c"
  7511 ;; Parameters:    Size  Location     Type
  7512 ;;  c               2    6[COMMON] int 
  7513 ;; Auto vars:     Size  Location     Type
  7514 ;;		None
  7515 ;; Return value:  Size  Location     Type
  7516 ;;                  2    6[COMMON] int 
  7517 ;; Registers used:
  7518 ;;		wreg, status,2, status,0
  7519 ;; Tracked objects:
  7520 ;;		On entry : 0/0
  7521 ;;		On exit  : 0/0
  7522 ;;		Unchanged: 0/0
  7523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7524 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7525 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7526 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7527 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7528 ;;Total ram usage:        8 bytes
  7529 ;; Hardware stack levels used: 1
  7530 ;; Hardware stack levels required when called: 1
  7531 ;; This function calls:
  7532 ;;		_islower
  7533 ;; This function is called by:
  7534 ;;		_xtoa
  7535 ;; This function uses a non-reentrant model
  7536 ;;
  7537                           
  7538                           
  7539                           ;psect for function _toupper
  7540  0803                     _toupper:
  7541                           
  7542                           ;incstack = 0
  7543                           ; Regs used in _toupper: [wreg+status,2+status,0]
  7544  0803  0876               	movf	toupper@c,w
  7545  0804  3E9F               	addlw	159
  7546  0805  00F8               	movwf	??_toupper
  7547  0806  30FF               	movlw	255
  7548  0807  3D77               	addwfc	toupper@c+1,w
  7549  0808  00F9               	movwf	??_toupper+1
  7550  0809  3000               	movlw	0
  7551  080A  0279               	subwf	??_toupper+1,w
  7552  080B  301A               	movlw	26
  7553  080C  1903               	skipnz
  7554  080D  0278               	subwf	??_toupper,w
  7555  080E  1803               	btfsc	3,0
  7556  080F  2812               	goto	u5810
  7557  0810  3001               	movlw	1
  7558  0811  2813               	goto	u5820
  7559  0812                     u5810:
  7560  0812  3000               	movlw	0
  7561  0813                     u5820:
  7562  0813  00FA               	movwf	??_toupper+2
  7563  0814  01FB               	clrf	??_toupper+3
  7564  0815  087A               	movf	??_toupper+2,w
  7565  0816  00FC               	movwf	_toupper$1146
  7566  0817  087B               	movf	??_toupper+3,w
  7567  0818  00FD               	movwf	_toupper$1146+1
  7568  0819  087C               	movf	_toupper$1146,w
  7569  081A  047D               	iorwf	_toupper$1146+1,w
  7570  081B  1903               	btfsc	3,2
  7571  081C  0008               	return
  7572  081D  305F               	movlw	95
  7573  081E  0576               	andwf	toupper@c,w
  7574  081F  00F6               	movwf	?_toupper
  7575  0820  3000               	movlw	0
  7576  0821  0577               	andwf	toupper@c+1,w
  7577  0822  00F7               	movwf	?_toupper+1
  7578  0823  0008               	return
  7579  0824                     __end_of_toupper:
  7580                           
  7581                           	psect	text12
  7582  1985                     __ptext12:	
  7583 ;; *************** function _islower *****************
  7584 ;; Defined at:
  7585 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\islower.c"
  7586 ;; Parameters:    Size  Location     Type
  7587 ;;  c               2    0[COMMON] int 
  7588 ;; Auto vars:     Size  Location     Type
  7589 ;;		None
  7590 ;; Return value:  Size  Location     Type
  7591 ;;                  2    0[COMMON] int 
  7592 ;; Registers used:
  7593 ;;		wreg, status,2, status,0
  7594 ;; Tracked objects:
  7595 ;;		On entry : 0/0
  7596 ;;		On exit  : 0/0
  7597 ;;		Unchanged: 0/0
  7598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7599 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7601 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7602 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7603 ;;Total ram usage:        6 bytes
  7604 ;; Hardware stack levels used: 1
  7605 ;; This function calls:
  7606 ;;		Nothing
  7607 ;; This function is called by:
  7608 ;;		_toupper
  7609 ;; This function uses a non-reentrant model
  7610 ;;
  7611                           
  7612                           
  7613                           ;psect for function _islower
  7614  1985                     _islower:
  7615                           
  7616                           ;incstack = 0
  7617                           ; Regs used in _islower: [wreg+status,2+status,0]
  7618  1985  0870               	movf	islower@c,w
  7619  1986  3E9F               	addlw	159
  7620  1987  00F2               	movwf	??_islower
  7621  1988  30FF               	movlw	255
  7622  1989  3D71               	addwfc	islower@c+1,w
  7623  198A  00F3               	movwf	??_islower+1
  7624  198B  3000               	movlw	0
  7625  198C  0273               	subwf	??_islower+1,w
  7626  198D  301A               	movlw	26
  7627  198E  1903               	skipnz
  7628  198F  0272               	subwf	??_islower,w
  7629  1990  1803               	btfsc	3,0
  7630  1991  2994               	goto	u4310
  7631  1992  3001               	movlw	1
  7632  1993  2995               	goto	u4320
  7633  1994                     u4310:
  7634  1994  3000               	movlw	0
  7635  1995                     u4320:
  7636  1995  00F4               	movwf	??_islower+2
  7637  1996  01F5               	clrf	??_islower+3
  7638  1997  0874               	movf	??_islower+2,w
  7639  1998  00F0               	movwf	?_islower
  7640  1999  0875               	movf	??_islower+3,w
  7641  199A  00F1               	movwf	?_islower+1
  7642  199B  0008               	return
  7643  199C                     __end_of_islower:
  7644                           
  7645                           	psect	text13
  7646  0004                     __ptext13:	
  7647 ;; *************** function _isalpha *****************
  7648 ;; Defined at:
  7649 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isalpha.c"
  7650 ;; Parameters:    Size  Location     Type
  7651 ;;  c               2    0[COMMON] int 
  7652 ;; Auto vars:     Size  Location     Type
  7653 ;;		None
  7654 ;; Return value:  Size  Location     Type
  7655 ;;                  2    0[COMMON] int 
  7656 ;; Registers used:
  7657 ;;		wreg, status,2, status,0
  7658 ;; Tracked objects:
  7659 ;;		On entry : 0/0
  7660 ;;		On exit  : 0/0
  7661 ;;		Unchanged: 0/0
  7662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7663 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7665 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7666 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7667 ;;Total ram usage:        8 bytes
  7668 ;; Hardware stack levels used: 1
  7669 ;; This function calls:
  7670 ;;		Nothing
  7671 ;; This function is called by:
  7672 ;;		_xtoa
  7673 ;; This function uses a non-reentrant model
  7674 ;;
  7675                           
  7676                           
  7677                           ;psect for function _isalpha
  7678  0004                     _isalpha:
  7679                           
  7680                           ;incstack = 0
  7681                           ; Regs used in _isalpha: [wreg+status,2+status,0]
  7682  0004  3020               	movlw	32
  7683  0005  0470               	iorwf	isalpha@c,w
  7684  0006  00F2               	movwf	??_isalpha
  7685  0007  3000               	movlw	0
  7686  0008  0471               	iorwf	isalpha@c+1,w
  7687  0009  00F3               	movwf	??_isalpha+1
  7688  000A  0872               	movf	??_isalpha,w
  7689  000B  3E9F               	addlw	159
  7690  000C  00F4               	movwf	??_isalpha+2
  7691  000D  30FF               	movlw	255
  7692  000E  3D73               	addwfc	??_isalpha+1,w
  7693  000F  00F5               	movwf	??_isalpha+3
  7694  0010  3000               	movlw	0
  7695  0011  0275               	subwf	??_isalpha+3,w
  7696  0012  301A               	movlw	26
  7697  0013  1903               	skipnz
  7698  0014  0274               	subwf	??_isalpha+2,w
  7699  0015  1803               	btfsc	3,0
  7700  0016  2819               	goto	u5790
  7701  0017  3001               	movlw	1
  7702  0018  281A               	goto	u5800
  7703  0019                     u5790:
  7704  0019  3000               	movlw	0
  7705  001A                     u5800:
  7706  001A  00F6               	movwf	??_isalpha+4
  7707  001B  01F7               	clrf	??_isalpha+5
  7708  001C  0876               	movf	??_isalpha+4,w
  7709  001D  00F0               	movwf	?_isalpha
  7710  001E  0877               	movf	??_isalpha+5,w
  7711  001F  00F1               	movwf	?_isalpha+1
  7712  0020  0008               	return
  7713  0021                     __end_of_isalpha:
  7714                           
  7715                           	psect	text14
  7716  1D6D                     __ptext14:	
  7717 ;; *************** function _strncmp *****************
  7718 ;; Defined at:
  7719 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  7720 ;; Parameters:    Size  Location     Type
  7721 ;;  _l              1    wreg     PTR const unsigned char 
  7722 ;;		 -> vfpfcnvrt@ct(3), 
  7723 ;;  _r              2    0[COMMON] PTR const unsigned char 
  7724 ;;		 -> STR_15(3), 
  7725 ;;  n               2    2[COMMON] unsigned int 
  7726 ;; Auto vars:     Size  Location     Type
  7727 ;;  _l              1    5[COMMON] PTR const unsigned char 
  7728 ;;		 -> vfpfcnvrt@ct(3), 
  7729 ;;  r               2    6[COMMON] PTR const unsigned char 
  7730 ;;		 -> STR_15(3), 
  7731 ;;  l               1    8[COMMON] PTR const unsigned char 
  7732 ;;		 -> vfpfcnvrt@ct(3), 
  7733 ;; Return value:  Size  Location     Type
  7734 ;;                  2    0[COMMON] int 
  7735 ;; Registers used:
  7736 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  7737 ;; Tracked objects:
  7738 ;;		On entry : 0/0
  7739 ;;		On exit  : 0/0
  7740 ;;		Unchanged: 0/0
  7741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7742 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7743 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7744 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7745 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7746 ;;Total ram usage:        9 bytes
  7747 ;; Hardware stack levels used: 1
  7748 ;; This function calls:
  7749 ;;		Nothing
  7750 ;; This function is called by:
  7751 ;;		_vfpfcnvrt
  7752 ;; This function uses a non-reentrant model
  7753 ;;
  7754                           
  7755                           
  7756                           ;psect for function _strncmp
  7757  1D6D                     _strncmp:
  7758                           
  7759                           ;incstack = 0
  7760                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
  7761                           ;strncmp@_l stored from wreg
  7762  1D6D  00F5               	movwf	strncmp@_l
  7763  1D6E  0875               	movf	strncmp@_l,w
  7764  1D6F  00F4               	movwf	??_strncmp
  7765  1D70  0874               	movf	??_strncmp,w
  7766  1D71  00F8               	movwf	strncmp@l
  7767  1D72  0871               	movf	strncmp@_r+1,w
  7768  1D73  00F7               	movwf	strncmp@r+1
  7769  1D74  0870               	movf	strncmp@_r,w
  7770  1D75  00F6               	movwf	strncmp@r
  7771  1D76  3001               	movlw	1
  7772  1D77  02F2               	subwf	strncmp@n,f
  7773  1D78  3000               	movlw	0
  7774  1D79  3BF3               	subwfb	strncmp@n+1,f
  7775  1D7A  0A72               	incf	strncmp@n,w
  7776  1D7B  1D03               	skipz
  7777  1D7C  2DA8               	goto	l4551
  7778  1D7D  0A73               	incf	strncmp@n+1,w
  7779  1D7E  1D03               	btfss	3,2
  7780  1D7F  2DA8               	goto	l4551
  7781  1D80  01F0               	clrf	?_strncmp
  7782  1D81  01F1               	clrf	?_strncmp+1
  7783  1D82  0008               	return
  7784  1D83                     l4553:
  7785  1D83  0876               	movf	strncmp@r,w
  7786  1D84  0084               	movwf	4
  7787  1D85  0877               	movf	strncmp@r+1,w
  7788  1D86  0085               	movwf	5
  7789  1D87  0012               	moviw fsr0++
  7790  1D88  1903               	btfsc	3,2
  7791  1D89  2DAF               	goto	l4559
  7792  1D8A  0872               	movf	strncmp@n,w
  7793  1D8B  0473               	iorwf	strncmp@n+1,w
  7794  1D8C  1903               	btfsc	3,2
  7795  1D8D  2DAF               	goto	l4559
  7796  1D8E  0876               	movf	strncmp@r,w
  7797  1D8F  0084               	movwf	4
  7798  1D90  0877               	movf	strncmp@r+1,w
  7799  1D91  0085               	movwf	5
  7800  1D92  0800               	movf	0,w	;code access
  7801  1D93  00F4               	movwf	??_strncmp
  7802  1D94  0878               	movf	strncmp@l,w
  7803  1D95  0086               	movwf	6
  7804  1D96  3001               	movlw	1	; select bank2/3
  7805  1D97  0087               	movwf	7
  7806  1D98  0801               	movf	1,w
  7807  1D99  0674               	xorwf	??_strncmp,w
  7808  1D9A  1D03               	btfss	3,2
  7809  1D9B  2DAF               	goto	l4559
  7810  1D9C  3001               	movlw	1
  7811  1D9D  00F4               	movwf	??_strncmp
  7812  1D9E  0874               	movf	??_strncmp,w
  7813  1D9F  07F8               	addwf	strncmp@l,f
  7814  1DA0  3001               	movlw	1
  7815  1DA1  07F6               	addwf	strncmp@r,f
  7816  1DA2  3000               	movlw	0
  7817  1DA3  3DF7               	addwfc	strncmp@r+1,f
  7818  1DA4  3001               	movlw	1
  7819  1DA5  02F2               	subwf	strncmp@n,f
  7820  1DA6  3000               	movlw	0
  7821  1DA7  3BF3               	subwfb	strncmp@n+1,f
  7822  1DA8                     l4551:
  7823  1DA8  0878               	movf	strncmp@l,w
  7824  1DA9  0086               	movwf	6
  7825  1DAA  3001               	movlw	1	; select bank2/3
  7826  1DAB  0087               	movwf	7
  7827  1DAC  0801               	movf	1,w
  7828  1DAD  1D03               	btfss	3,2
  7829  1DAE  2D83               	goto	l4553
  7830  1DAF                     l4559:
  7831  1DAF  0878               	movf	strncmp@l,w
  7832  1DB0  0086               	movwf	6
  7833  1DB1  3001               	movlw	1	; select bank2/3
  7834  1DB2  0087               	movwf	7
  7835  1DB3  0876               	movf	strncmp@r,w
  7836  1DB4  0084               	movwf	4
  7837  1DB5  0877               	movf	strncmp@r+1,w
  7838  1DB6  0085               	movwf	5
  7839  1DB7  0800               	movf	0,w	;code access
  7840  1DB8  0201               	subwf	1,w
  7841  1DB9  00F0               	movwf	?_strncmp
  7842  1DBA  01F1               	clrf	?_strncmp+1
  7843  1DBB  1C03               	skipc
  7844  1DBC  03F1               	decf	?_strncmp+1,f
  7845  1DBD  0008               	return
  7846  1DBE                     __end_of_strncmp:
  7847                           
  7848                           	psect	text15
  7849  0114                     __ptext15:	
  7850 ;; *************** function _efgtoa *****************
  7851 ;; Defined at:
  7852 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7853 ;; Parameters:    Size  Location     Type
  7854 ;;  fp              1    wreg     PTR struct _IO_FILE
  7855 ;;		 -> NULL(0), 
  7856 ;;  f               4   68[BANK0 ] PTR struct _IO_FILE
  7857 ;;  c               1   72[BANK0 ] unsigned char 
  7858 ;; Auto vars:     Size  Location     Type
  7859 ;;  fp              1   30[BANK1 ] PTR struct _IO_FILE
  7860 ;;		 -> NULL(0), 
  7861 ;;  u               4   53[BANK1 ] PTR struct _IO_FILE
  7862 ;;  g               4   45[BANK1 ] PTR struct _IO_FILE
  7863 ;;  l               4   39[BANK1 ] PTR struct _IO_FILE
  7864 ;;  h               4   35[BANK1 ] PTR struct _IO_FILE
  7865 ;;  ou              4   20[BANK1 ] PTR struct _IO_FILE
  7866 ;;  n               2   51[BANK1 ] int 
  7867 ;;  e               2   49[BANK1 ] int 
  7868 ;;  i               2   43[BANK1 ] int 
  7869 ;;  w               2   31[BANK1 ] int 
  7870 ;;  p               2   28[BANK1 ] int 
  7871 ;;  sign            2   26[BANK1 ] int 
  7872 ;;  d               2   24[BANK1 ] int 
  7873 ;;  m               2   18[BANK1 ] int 
  7874 ;;  ne              2   16[BANK1 ] int 
  7875 ;;  pp              2   14[BANK1 ] int 
  7876 ;;  t               2   12[BANK1 ] int 
  7877 ;;  mode            1   34[BANK1 ] unsigned char 
  7878 ;;  nmode           1   33[BANK1 ] unsigned char 
  7879 ;; Return value:  Size  Location     Type
  7880 ;;                  2   68[BANK0 ] int 
  7881 ;; Registers used:
  7882 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7883 ;; Tracked objects:
  7884 ;;		On entry : 0/0
  7885 ;;		On exit  : 0/0
  7886 ;;		Unchanged: 0/0
  7887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7888 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7889 ;;      Locals:         0       0      57       0       0       0       0       0       0       0       0       0       
      +0       0
  7890 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7891 ;;      Totals:         0       9      57       0       0       0       0       0       0       0       0       0       
      +0       0
  7892 ;;Total ram usage:       66 bytes
  7893 ;; Hardware stack levels used: 1
  7894 ;; Hardware stack levels required when called: 5
  7895 ;; This function calls:
  7896 ;;		___awdiv
  7897 ;;		___awmod
  7898 ;;		___fladd
  7899 ;;		___fldiv
  7900 ;;		___fleq
  7901 ;;		___flge
  7902 ;;		___flmul
  7903 ;;		___flneg
  7904 ;;		___flsub
  7905 ;;		___fltol
  7906 ;;		___fpclassifyf
  7907 ;;		_floorf
  7908 ;;		_isupper
  7909 ;;		_pad
  7910 ;;		_strcpy
  7911 ;;		_tolower
  7912 ;; This function is called by:
  7913 ;;		_vfpfcnvrt
  7914 ;; This function uses a non-reentrant model
  7915 ;;
  7916                           
  7917                           
  7918                           ;psect for function _efgtoa
  7919  0114                     _efgtoa:
  7920                           
  7921                           ;incstack = 0
  7922                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7923                           ;efgtoa@fp stored from wreg
  7924  0114  0021               	movlb	1	; select bank1
  7925  0115  00BE               	movwf	efgtoa@fp^(0+128)
  7926                           
  7927                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  7928  0116  01BA               	clrf	efgtoa@sign^(0+128)
  7929  0117  01BB               	clrf	(efgtoa@sign+1)^(0+128)
  7930                           
  7931                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  7932  0118  0020               	movlb	0	; select bank0
  7933  0119  0867               	movf	efgtoa@f+3,w
  7934  011A  0021               	movlb	1	; select bank1
  7935  011B  00D0               	movwf	(efgtoa@g+3)^(0+128)
  7936  011C  0020               	movlb	0	; select bank0
  7937  011D  0866               	movf	efgtoa@f+2,w
  7938  011E  0021               	movlb	1	; select bank1
  7939  011F  00CF               	movwf	(efgtoa@g+2)^(0+128)
  7940  0120  0020               	movlb	0	; select bank0
  7941  0121  0865               	movf	efgtoa@f+1,w
  7942  0122  0021               	movlb	1	; select bank1
  7943  0123  00CE               	movwf	(efgtoa@g+1)^(0+128)
  7944  0124  0020               	movlb	0	; select bank0
  7945  0125  0864               	movf	efgtoa@f,w
  7946  0126  0021               	movlb	1	; select bank1
  7947  0127  00CD               	movwf	efgtoa@g^(0+128)
  7948                           
  7949                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  7950  0128  0850               	movf	(efgtoa@g+3)^(0+128),w
  7951  0129  0020               	movlb	0	; select bank0
  7952  012A  00CB               	movwf	___flge@ff1+3
  7953  012B  0021               	movlb	1	; select bank1
  7954  012C  084F               	movf	(efgtoa@g+2)^(0+128),w
  7955  012D  0020               	movlb	0	; select bank0
  7956  012E  00CA               	movwf	___flge@ff1+2
  7957  012F  0021               	movlb	1	; select bank1
  7958  0130  084E               	movf	(efgtoa@g+1)^(0+128),w
  7959  0131  0020               	movlb	0	; select bank0
  7960  0132  00C9               	movwf	___flge@ff1+1
  7961  0133  0021               	movlb	1	; select bank1
  7962  0134  084D               	movf	efgtoa@g^(0+128),w
  7963  0135  0020               	movlb	0	; select bank0
  7964  0136  00C8               	movwf	___flge@ff1
  7965  0137  3000               	movlw	0
  7966  0138  00CF               	movwf	___flge@ff2+3
  7967  0139  3000               	movlw	0
  7968  013A  00CE               	movwf	___flge@ff2+2
  7969  013B  3000               	movlw	0
  7970  013C  00CD               	movwf	___flge@ff2+1
  7971  013D  3000               	movlw	0
  7972  013E  00CC               	movwf	___flge@ff2
  7973  013F  319E  26EE  3181   	fcall	___flge
  7974  0142  1803               	btfsc	3,0
  7975  0143  295D               	goto	l4137
  7976                           
  7977                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  7978  0144  3001               	movlw	1
  7979  0145  0021               	movlb	1	; select bank1
  7980  0146  00BA               	movwf	efgtoa@sign^(0+128)
  7981  0147  3000               	movlw	0
  7982  0148  00BB               	movwf	(efgtoa@sign^(0+128)+1)
  7983                           
  7984                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  7985  0149  0850               	movf	(efgtoa@g+3)^(0+128),w
  7986  014A  00F3               	movwf	___flneg@f1+3
  7987  014B  084F               	movf	(efgtoa@g+2)^(0+128),w
  7988  014C  00F2               	movwf	___flneg@f1+2
  7989  014D  084E               	movf	(efgtoa@g+1)^(0+128),w
  7990  014E  00F1               	movwf	___flneg@f1+1
  7991  014F  084D               	movf	efgtoa@g^(0+128),w
  7992  0150  00F0               	movwf	___flneg@f1
  7993  0151  3198  20EF  3181   	fcall	___flneg
  7994  0154  0873               	movf	?___flneg+3,w
  7995  0155  0021               	movlb	1	; select bank1
  7996  0156  00D0               	movwf	(efgtoa@g+3)^(0+128)
  7997  0157  0872               	movf	?___flneg+2,w
  7998  0158  00CF               	movwf	(efgtoa@g+2)^(0+128)
  7999  0159  0871               	movf	?___flneg+1,w
  8000  015A  00CE               	movwf	(efgtoa@g+1)^(0+128)
  8001  015B  0870               	movf	?___flneg,w
  8002  015C  00CD               	movwf	efgtoa@g^(0+128)
  8003  015D                     l4137:
  8004                           
  8005                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  8006  015D  0021               	movlb	1	; select bank1
  8007  015E  01D3               	clrf	efgtoa@n^(0+128)
  8008  015F  01D4               	clrf	(efgtoa@n+1)^(0+128)
  8009                           
  8010                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  8011  0160  0022               	movlb	2	; select bank2
  8012  0161  085A               	movf	(_width+1)^(0+256),w
  8013  0162  0021               	movlb	1	; select bank1
  8014  0163  00C0               	movwf	(efgtoa@w+1)^(0+128)
  8015  0164  0022               	movlb	2	; select bank2
  8016  0165  0859               	movf	_width^(0+256),w
  8017  0166  0021               	movlb	1	; select bank1
  8018  0167  00BF               	movwf	efgtoa@w^(0+128)
  8019                           
  8020                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  8021  0168  083A               	movf	efgtoa@sign^(0+128),w
  8022  0169  043B               	iorwf	(efgtoa@sign+1)^(0+128),w
  8023  016A  1D03               	btfss	3,2
  8024  016B  296E               	goto	l4145
  8025  016C  1D6E               	btfss	_flags^(0+128),2
  8026  016D  2987               	goto	l4157
  8027  016E                     l4145:
  8028                           
  8029                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  8030  016E  083A               	movf	efgtoa@sign^(0+128),w
  8031  016F  043B               	iorwf	(efgtoa@sign+1)^(0+128),w
  8032  0170  1D03               	btfss	3,2
  8033  0171  2974               	goto	l4149
  8034  0172  302B               	movlw	43
  8035  0173  2975               	goto	L3
  8036  0174                     l4149:
  8037  0174  302D               	movlw	45
  8038  0175                     L3:
  8039  0175  00A0               	movwf	_efgtoa$954^(0+128)
  8040  0176  3000               	movlw	0
  8041  0177  00A1               	movwf	(_efgtoa$954^(0+128)+1)
  8042  0178  0820               	movf	_efgtoa$954^(0+128),w
  8043  0179  0020               	movlb	0	; select bank0
  8044  017A  00E9               	movwf	??_efgtoa
  8045  017B  0869               	movf	??_efgtoa,w
  8046  017C  0023               	movlb	3	; select bank3
  8047  017D  00A0               	movwf	_dbuf^(0+384)
  8048                           
  8049                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  8050  017E  3001               	movlw	1
  8051  017F  0021               	movlb	1	; select bank1
  8052  0180  07D3               	addwf	efgtoa@n^(0+128),f
  8053  0181  3000               	movlw	0
  8054  0182  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  8055                           
  8056                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  8057  0183  30FF               	movlw	255
  8058  0184  07BF               	addwf	efgtoa@w^(0+128),f
  8059  0185  30FF               	movlw	255
  8060  0186  3DC0               	addwfc	(efgtoa@w+1)^(0+128),f
  8061  0187                     l4157:
  8062                           
  8063                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  8064  0187  0850               	movf	(efgtoa@g+3)^(0+128),w
  8065  0188  00F3               	movwf	___fpclassifyf@x+3
  8066  0189  084F               	movf	(efgtoa@g+2)^(0+128),w
  8067  018A  00F2               	movwf	___fpclassifyf@x+2
  8068  018B  084E               	movf	(efgtoa@g+1)^(0+128),w
  8069  018C  00F1               	movwf	___fpclassifyf@x+1
  8070  018D  084D               	movf	efgtoa@g^(0+128),w
  8071  018E  00F0               	movwf	___fpclassifyf@x
  8072  018F  319E  2676  3181   	fcall	___fpclassifyf
  8073  0192  0370               	decf	?___fpclassifyf,w
  8074  0193  0471               	iorwf	?___fpclassifyf+1,w
  8075  0194  1D03               	btfss	3,2
  8076  0195  29DE               	goto	l4175
  8077  0196  0020               	movlb	0	; select bank0
  8078  0197  0868               	movf	efgtoa@c,w
  8079  0198  3EBF               	addlw	191
  8080  0199  00E9               	movwf	??_efgtoa
  8081  019A  30FF               	movlw	255
  8082  019B  1803               	skipnc
  8083  019C  3000               	movlw	0
  8084  019D  00EA               	movwf	??_efgtoa+1
  8085  019E  3000               	movlw	0
  8086  019F  026A               	subwf	??_efgtoa+1,w
  8087  01A0  301A               	movlw	26
  8088  01A1  1903               	skipnz
  8089  01A2  0269               	subwf	??_efgtoa,w
  8090  01A3  1803               	btfsc	3,0
  8091  01A4  29A7               	goto	u6110
  8092  01A5  3001               	movlw	1
  8093  01A6  29A8               	goto	u6120
  8094  01A7                     u6110:
  8095  01A7  3000               	movlw	0
  8096  01A8                     u6120:
  8097  01A8  00EB               	movwf	??_efgtoa+2
  8098  01A9  01EC               	clrf	??_efgtoa+3
  8099  01AA  086B               	movf	??_efgtoa+2,w
  8100  01AB  0021               	movlb	1	; select bank1
  8101  01AC  00A2               	movwf	_efgtoa$955^(0+128)
  8102  01AD  0020               	movlb	0	; select bank0
  8103  01AE  086C               	movf	??_efgtoa+3,w
  8104  01AF  0021               	movlb	1	; select bank1
  8105  01B0  00A3               	movwf	(_efgtoa$955+1)^(0+128)
  8106  01B1  0822               	movf	_efgtoa$955^(0+128),w
  8107  01B2  0423               	iorwf	(_efgtoa$955+1)^(0+128),w
  8108  01B3  1903               	btfsc	3,2
  8109  01B4  29B9               	goto	l4167
  8110                           
  8111                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  8112  01B5  3059               	movlw	low (STR_5| (0+32768))
  8113  01B6  00F0               	movwf	strcpy@src
  8114  01B7  3098               	movlw	high (STR_5| (0+32768))
  8115  01B8  29BC               	goto	L4
  8116  01B9                     l4167:	
  8117                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  8118                           
  8119                           
  8120                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  8121  01B9  3061               	movlw	low (STR_6| (0+32768))
  8122  01BA  00F0               	movwf	strcpy@src
  8123  01BB  3098               	movlw	high (STR_6| (0+32768))
  8124  01BC                     L4:
  8125  01BC  00F1               	movwf	strcpy@src+1
  8126  01BD  0853               	movf	efgtoa@n^(0+128),w
  8127  01BE  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8128  01BF  319A  2293  3181   	fcall	_strcpy
  8129                           
  8130                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  8131  01C2  30FD               	movlw	253
  8132  01C3  0021               	movlb	1	; select bank1
  8133  01C4  07BF               	addwf	efgtoa@w^(0+128),f
  8134  01C5  30FF               	movlw	255
  8135  01C6  3DC0               	addwfc	(efgtoa@w+1)^(0+128),f
  8136                           
  8137                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  8138  01C7  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
  8139  01C8  0020               	movlb	0	; select bank0
  8140  01C9  00E9               	movwf	??_efgtoa
  8141  01CA  0869               	movf	??_efgtoa,w
  8142  01CB  00A7               	movwf	pad@buf
  8143  01CC  0021               	movlb	1	; select bank1
  8144  01CD  0840               	movf	(efgtoa@w+1)^(0+128),w
  8145  01CE  0020               	movlb	0	; select bank0
  8146  01CF  00A9               	movwf	pad@p+1
  8147  01D0  0021               	movlb	1	; select bank1
  8148  01D1  083F               	movf	efgtoa@w^(0+128),w
  8149  01D2  0020               	movlb	0	; select bank0
  8150  01D3  00A8               	movwf	pad@p
  8151  01D4  0021               	movlb	1	; select bank1
  8152  01D5  083E               	movf	efgtoa@fp^(0+128),w
  8153  01D6  319C  24CC         	fcall	_pad
  8154  01D8  0020               	movlb	0	; select bank0
  8155  01D9  0828               	movf	?_pad+1,w
  8156  01DA  00E5               	movwf	?_efgtoa+1
  8157  01DB  0827               	movf	?_pad,w
  8158  01DC  00E4               	movwf	?_efgtoa
  8159  01DD  0008               	return
  8160  01DE                     l4175:
  8161                           
  8162                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  8163  01DE  0021               	movlb	1	; select bank1
  8164  01DF  0850               	movf	(efgtoa@g+3)^(0+128),w
  8165  01E0  00F3               	movwf	___fpclassifyf@x+3
  8166  01E1  084F               	movf	(efgtoa@g+2)^(0+128),w
  8167  01E2  00F2               	movwf	___fpclassifyf@x+2
  8168  01E3  084E               	movf	(efgtoa@g+1)^(0+128),w
  8169  01E4  00F1               	movwf	___fpclassifyf@x+1
  8170  01E5  084D               	movf	efgtoa@g^(0+128),w
  8171  01E6  00F0               	movwf	___fpclassifyf@x
  8172  01E7  319E  2676  3181   	fcall	___fpclassifyf
  8173  01EA  0870               	movf	?___fpclassifyf,w
  8174  01EB  0471               	iorwf	?___fpclassifyf+1,w
  8175  01EC  1D03               	btfss	3,2
  8176  01ED  2A36               	goto	l4193
  8177  01EE  0020               	movlb	0	; select bank0
  8178  01EF  0868               	movf	efgtoa@c,w
  8179  01F0  3EBF               	addlw	191
  8180  01F1  00E9               	movwf	??_efgtoa
  8181  01F2  30FF               	movlw	255
  8182  01F3  1803               	skipnc
  8183  01F4  3000               	movlw	0
  8184  01F5  00EA               	movwf	??_efgtoa+1
  8185  01F6  3000               	movlw	0
  8186  01F7  026A               	subwf	??_efgtoa+1,w
  8187  01F8  301A               	movlw	26
  8188  01F9  1903               	skipnz
  8189  01FA  0269               	subwf	??_efgtoa,w
  8190  01FB  1803               	btfsc	3,0
  8191  01FC  29FF               	goto	u6150
  8192  01FD  3001               	movlw	1
  8193  01FE  2A00               	goto	u6160
  8194  01FF                     u6150:
  8195  01FF  3000               	movlw	0
  8196  0200                     u6160:
  8197  0200  00EB               	movwf	??_efgtoa+2
  8198  0201  01EC               	clrf	??_efgtoa+3
  8199  0202  086B               	movf	??_efgtoa+2,w
  8200  0203  0021               	movlb	1	; select bank1
  8201  0204  00A4               	movwf	_efgtoa$959^(0+128)
  8202  0205  0020               	movlb	0	; select bank0
  8203  0206  086C               	movf	??_efgtoa+3,w
  8204  0207  0021               	movlb	1	; select bank1
  8205  0208  00A5               	movwf	(_efgtoa$959+1)^(0+128)
  8206  0209  0824               	movf	_efgtoa$959^(0+128),w
  8207  020A  0425               	iorwf	(_efgtoa$959+1)^(0+128),w
  8208  020B  1903               	btfsc	3,2
  8209  020C  2A11               	goto	l4185
  8210                           
  8211                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  8212  020D  305D               	movlw	low (STR_9| (0+32768))
  8213  020E  00F0               	movwf	strcpy@src
  8214  020F  3098               	movlw	high (STR_9| (0+32768))
  8215  0210  2A14               	goto	L5
  8216  0211                     l4185:	
  8217                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  8218                           
  8219                           
  8220                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  8221  0211  3065               	movlw	low (STR_10| (0+32768))
  8222  0212  00F0               	movwf	strcpy@src
  8223  0213  3098               	movlw	high (STR_10| (0+32768))
  8224  0214                     L5:
  8225  0214  00F1               	movwf	strcpy@src+1
  8226  0215  0853               	movf	efgtoa@n^(0+128),w
  8227  0216  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8228  0217  319A  2293  3181   	fcall	_strcpy
  8229                           
  8230                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 371:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  8231  021A  30FD               	movlw	253
  8232  021B  0021               	movlb	1	; select bank1
  8233  021C  07BF               	addwf	efgtoa@w^(0+128),f
  8234  021D  30FF               	movlw	255
  8235  021E  3DC0               	addwfc	(efgtoa@w+1)^(0+128),f
  8236                           
  8237                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 372:         retu
      +                          rn pad(fp, &dbuf[0], w);
  8238  021F  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
  8239  0220  0020               	movlb	0	; select bank0
  8240  0221  00E9               	movwf	??_efgtoa
  8241  0222  0869               	movf	??_efgtoa,w
  8242  0223  00A7               	movwf	pad@buf
  8243  0224  0021               	movlb	1	; select bank1
  8244  0225  0840               	movf	(efgtoa@w+1)^(0+128),w
  8245  0226  0020               	movlb	0	; select bank0
  8246  0227  00A9               	movwf	pad@p+1
  8247  0228  0021               	movlb	1	; select bank1
  8248  0229  083F               	movf	efgtoa@w^(0+128),w
  8249  022A  0020               	movlb	0	; select bank0
  8250  022B  00A8               	movwf	pad@p
  8251  022C  0021               	movlb	1	; select bank1
  8252  022D  083E               	movf	efgtoa@fp^(0+128),w
  8253  022E  319C  24CC         	fcall	_pad
  8254  0230  0020               	movlb	0	; select bank0
  8255  0231  0828               	movf	?_pad+1,w
  8256  0232  00E5               	movwf	?_efgtoa+1
  8257  0233  0827               	movf	?_pad,w
  8258  0234  00E4               	movwf	?_efgtoa
  8259  0235  0008               	return
  8260  0236                     l4193:
  8261                           
  8262                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  8263  0236  303F               	movlw	63
  8264  0237  0021               	movlb	1	; select bank1
  8265  0238  00D8               	movwf	(efgtoa@u+3)^(0+128)
  8266  0239  3080               	movlw	128
  8267  023A  00D7               	movwf	(efgtoa@u+2)^(0+128)
  8268  023B  3000               	movlw	0
  8269  023C  00D6               	movwf	(efgtoa@u+1)^(0+128)
  8270  023D  3000               	movlw	0
  8271  023E  00D5               	movwf	efgtoa@u^(0+128)
  8272                           
  8273                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  8274  023F  01D1               	clrf	efgtoa@e^(0+128)
  8275  0240  01D2               	clrf	(efgtoa@e+1)^(0+128)
  8276                           
  8277                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  8278  0241  0850               	movf	(efgtoa@g+3)^(0+128),w
  8279  0242  00F3               	movwf	___fleq@ff1+3
  8280  0243  084F               	movf	(efgtoa@g+2)^(0+128),w
  8281  0244  00F2               	movwf	___fleq@ff1+2
  8282  0245  084E               	movf	(efgtoa@g+1)^(0+128),w
  8283  0246  00F1               	movwf	___fleq@ff1+1
  8284  0247  084D               	movf	efgtoa@g^(0+128),w
  8285  0248  00F0               	movwf	___fleq@ff1
  8286  0249  3000               	movlw	0
  8287  024A  00F7               	movwf	___fleq@ff2+3
  8288  024B  3000               	movlw	0
  8289  024C  00F6               	movwf	___fleq@ff2+2
  8290  024D  3000               	movlw	0
  8291  024E  00F5               	movwf	___fleq@ff2+1
  8292  024F  3000               	movlw	0
  8293  0250  00F4               	movwf	___fleq@ff2
  8294  0251  319B  23EF  3181   	fcall	___fleq
  8295  0254  1C03               	btfss	3,0
  8296  0255  2A87               	goto	l4205
  8297  0256  2B07               	goto	l4213
  8298  0257                     l4201:
  8299                           
  8300                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  8301  0257  3041               	movlw	65
  8302  0258  0020               	movlb	0	; select bank0
  8303  0259  00B1               	movwf	___flmul@b+3
  8304  025A  3020               	movlw	32
  8305  025B  00B0               	movwf	___flmul@b+2
  8306  025C  3000               	movlw	0
  8307  025D  00AF               	movwf	___flmul@b+1
  8308  025E  3000               	movlw	0
  8309  025F  00AE               	movwf	___flmul@b
  8310  0260  0021               	movlb	1	; select bank1
  8311  0261  0858               	movf	(efgtoa@u+3)^(0+128),w
  8312  0262  0020               	movlb	0	; select bank0
  8313  0263  00B5               	movwf	___flmul@a+3
  8314  0264  0021               	movlb	1	; select bank1
  8315  0265  0857               	movf	(efgtoa@u+2)^(0+128),w
  8316  0266  0020               	movlb	0	; select bank0
  8317  0267  00B4               	movwf	___flmul@a+2
  8318  0268  0021               	movlb	1	; select bank1
  8319  0269  0856               	movf	(efgtoa@u+1)^(0+128),w
  8320  026A  0020               	movlb	0	; select bank0
  8321  026B  00B3               	movwf	___flmul@a+1
  8322  026C  0021               	movlb	1	; select bank1
  8323  026D  0855               	movf	efgtoa@u^(0+128),w
  8324  026E  0020               	movlb	0	; select bank0
  8325  026F  00B2               	movwf	___flmul@a
  8326  0270  318A  2206  3181   	fcall	___flmul
  8327  0273  0020               	movlb	0	; select bank0
  8328  0274  0831               	movf	?___flmul+3,w
  8329  0275  0021               	movlb	1	; select bank1
  8330  0276  00D8               	movwf	(efgtoa@u+3)^(0+128)
  8331  0277  0020               	movlb	0	; select bank0
  8332  0278  0830               	movf	?___flmul+2,w
  8333  0279  0021               	movlb	1	; select bank1
  8334  027A  00D7               	movwf	(efgtoa@u+2)^(0+128)
  8335  027B  0020               	movlb	0	; select bank0
  8336  027C  082F               	movf	?___flmul+1,w
  8337  027D  0021               	movlb	1	; select bank1
  8338  027E  00D6               	movwf	(efgtoa@u+1)^(0+128)
  8339  027F  0020               	movlb	0	; select bank0
  8340  0280  082E               	movf	?___flmul,w
  8341  0281  0021               	movlb	1	; select bank1
  8342  0282  00D5               	movwf	efgtoa@u^(0+128)
  8343                           
  8344                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  8345  0283  3001               	movlw	1
  8346  0284  07D1               	addwf	efgtoa@e^(0+128),f
  8347  0285  3000               	movlw	0
  8348  0286  3DD2               	addwfc	(efgtoa@e+1)^(0+128),f
  8349  0287                     l4205:
  8350                           
  8351                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  8352  0287  0021               	movlb	1	; select bank1
  8353  0288  0850               	movf	(efgtoa@g+3)^(0+128),w
  8354  0289  0020               	movlb	0	; select bank0
  8355  028A  00CB               	movwf	___flge@ff1+3
  8356  028B  0021               	movlb	1	; select bank1
  8357  028C  084F               	movf	(efgtoa@g+2)^(0+128),w
  8358  028D  0020               	movlb	0	; select bank0
  8359  028E  00CA               	movwf	___flge@ff1+2
  8360  028F  0021               	movlb	1	; select bank1
  8361  0290  084E               	movf	(efgtoa@g+1)^(0+128),w
  8362  0291  0020               	movlb	0	; select bank0
  8363  0292  00C9               	movwf	___flge@ff1+1
  8364  0293  0021               	movlb	1	; select bank1
  8365  0294  084D               	movf	efgtoa@g^(0+128),w
  8366  0295  0020               	movlb	0	; select bank0
  8367  0296  00C8               	movwf	___flge@ff1
  8368  0297  3041               	movlw	65
  8369  0298  00B1               	movwf	___flmul@b+3
  8370  0299  3020               	movlw	32
  8371  029A  00B0               	movwf	___flmul@b+2
  8372  029B  3000               	movlw	0
  8373  029C  00AF               	movwf	___flmul@b+1
  8374  029D  3000               	movlw	0
  8375  029E  00AE               	movwf	___flmul@b
  8376  029F  0021               	movlb	1	; select bank1
  8377  02A0  0858               	movf	(efgtoa@u+3)^(0+128),w
  8378  02A1  0020               	movlb	0	; select bank0
  8379  02A2  00B5               	movwf	___flmul@a+3
  8380  02A3  0021               	movlb	1	; select bank1
  8381  02A4  0857               	movf	(efgtoa@u+2)^(0+128),w
  8382  02A5  0020               	movlb	0	; select bank0
  8383  02A6  00B4               	movwf	___flmul@a+2
  8384  02A7  0021               	movlb	1	; select bank1
  8385  02A8  0856               	movf	(efgtoa@u+1)^(0+128),w
  8386  02A9  0020               	movlb	0	; select bank0
  8387  02AA  00B3               	movwf	___flmul@a+1
  8388  02AB  0021               	movlb	1	; select bank1
  8389  02AC  0855               	movf	efgtoa@u^(0+128),w
  8390  02AD  0020               	movlb	0	; select bank0
  8391  02AE  00B2               	movwf	___flmul@a
  8392  02AF  318A  2206  3181   	fcall	___flmul
  8393  02B2  0020               	movlb	0	; select bank0
  8394  02B3  0831               	movf	?___flmul+3,w
  8395  02B4  00CF               	movwf	___flge@ff2+3
  8396  02B5  0830               	movf	?___flmul+2,w
  8397  02B6  00CE               	movwf	___flge@ff2+2
  8398  02B7  082F               	movf	?___flmul+1,w
  8399  02B8  00CD               	movwf	___flge@ff2+1
  8400  02B9  082E               	movf	?___flmul,w
  8401  02BA  00CC               	movwf	___flge@ff2
  8402  02BB  319E  26EE  3181   	fcall	___flge
  8403  02BE  1C03               	btfss	3,0
  8404  02BF  2AE2               	goto	l4211
  8405  02C0  2A57               	goto	l4201
  8406  02C1                     l4207:
  8407                           
  8408                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  8409  02C1  3041               	movlw	65
  8410  02C2  00F3               	movwf	___fldiv@a+3
  8411  02C3  3020               	movlw	32
  8412  02C4  00F2               	movwf	___fldiv@a+2
  8413  02C5  3000               	movlw	0
  8414  02C6  00F1               	movwf	___fldiv@a+1
  8415  02C7  3000               	movlw	0
  8416  02C8  00F0               	movwf	___fldiv@a
  8417  02C9  0021               	movlb	1	; select bank1
  8418  02CA  0858               	movf	(efgtoa@u+3)^(0+128),w
  8419  02CB  00F7               	movwf	___fldiv@b+3
  8420  02CC  0857               	movf	(efgtoa@u+2)^(0+128),w
  8421  02CD  00F6               	movwf	___fldiv@b+2
  8422  02CE  0856               	movf	(efgtoa@u+1)^(0+128),w
  8423  02CF  00F5               	movwf	___fldiv@b+1
  8424  02D0  0855               	movf	efgtoa@u^(0+128),w
  8425  02D1  00F4               	movwf	___fldiv@b
  8426  02D2  3196  2686  3181   	fcall	___fldiv
  8427  02D5  0873               	movf	?___fldiv+3,w
  8428  02D6  0021               	movlb	1	; select bank1
  8429  02D7  00D8               	movwf	(efgtoa@u+3)^(0+128)
  8430  02D8  0872               	movf	?___fldiv+2,w
  8431  02D9  00D7               	movwf	(efgtoa@u+2)^(0+128)
  8432  02DA  0871               	movf	?___fldiv+1,w
  8433  02DB  00D6               	movwf	(efgtoa@u+1)^(0+128)
  8434  02DC  0870               	movf	?___fldiv,w
  8435  02DD  00D5               	movwf	efgtoa@u^(0+128)
  8436                           
  8437                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  8438  02DE  30FF               	movlw	255
  8439  02DF  07D1               	addwf	efgtoa@e^(0+128),f
  8440  02E0  30FF               	movlw	255
  8441  02E1  3DD2               	addwfc	(efgtoa@e+1)^(0+128),f
  8442  02E2                     l4211:
  8443                           
  8444                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  8445  02E2  0021               	movlb	1	; select bank1
  8446  02E3  0850               	movf	(efgtoa@g+3)^(0+128),w
  8447  02E4  0020               	movlb	0	; select bank0
  8448  02E5  00CB               	movwf	___flge@ff1+3
  8449  02E6  0021               	movlb	1	; select bank1
  8450  02E7  084F               	movf	(efgtoa@g+2)^(0+128),w
  8451  02E8  0020               	movlb	0	; select bank0
  8452  02E9  00CA               	movwf	___flge@ff1+2
  8453  02EA  0021               	movlb	1	; select bank1
  8454  02EB  084E               	movf	(efgtoa@g+1)^(0+128),w
  8455  02EC  0020               	movlb	0	; select bank0
  8456  02ED  00C9               	movwf	___flge@ff1+1
  8457  02EE  0021               	movlb	1	; select bank1
  8458  02EF  084D               	movf	efgtoa@g^(0+128),w
  8459  02F0  0020               	movlb	0	; select bank0
  8460  02F1  00C8               	movwf	___flge@ff1
  8461  02F2  0021               	movlb	1	; select bank1
  8462  02F3  0858               	movf	(efgtoa@u+3)^(0+128),w
  8463  02F4  0020               	movlb	0	; select bank0
  8464  02F5  00CF               	movwf	___flge@ff2+3
  8465  02F6  0021               	movlb	1	; select bank1
  8466  02F7  0857               	movf	(efgtoa@u+2)^(0+128),w
  8467  02F8  0020               	movlb	0	; select bank0
  8468  02F9  00CE               	movwf	___flge@ff2+2
  8469  02FA  0021               	movlb	1	; select bank1
  8470  02FB  0856               	movf	(efgtoa@u+1)^(0+128),w
  8471  02FC  0020               	movlb	0	; select bank0
  8472  02FD  00CD               	movwf	___flge@ff2+1
  8473  02FE  0021               	movlb	1	; select bank1
  8474  02FF  0855               	movf	efgtoa@u^(0+128),w
  8475  0300  0020               	movlb	0	; select bank0
  8476  0301  00CC               	movwf	___flge@ff2
  8477  0302  319E  26EE  3181   	fcall	___flge
  8478  0305  1C03               	btfss	3,0
  8479  0306  2AC1               	goto	l4207
  8480  0307                     l4213:
  8481                           
  8482                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  8483  0307  0020               	movlb	0	; select bank0
  8484  0308  0868               	movf	efgtoa@c,w
  8485  0309  00E9               	movwf	??_efgtoa
  8486  030A  01EA               	clrf	??_efgtoa+1
  8487  030B  0869               	movf	??_efgtoa,w
  8488  030C  00F6               	movwf	tolower@c
  8489  030D  086A               	movf	??_efgtoa+1,w
  8490  030E  00F7               	movwf	tolower@c+1
  8491  030F  319A  22B2  3181   	fcall	_tolower
  8492  0312  0876               	movf	?_tolower,w
  8493  0313  0020               	movlb	0	; select bank0
  8494  0314  00EB               	movwf	??_efgtoa+2
  8495  0315  086B               	movf	??_efgtoa+2,w
  8496  0316  0021               	movlb	1	; select bank1
  8497  0317  00C2               	movwf	efgtoa@mode^(0+128)
  8498                           
  8499                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  8500  0318  0842               	movf	efgtoa@mode^(0+128),w
  8501  0319  0020               	movlb	0	; select bank0
  8502  031A  00E9               	movwf	??_efgtoa
  8503  031B  0869               	movf	??_efgtoa,w
  8504  031C  0021               	movlb	1	; select bank1
  8505  031D  00C1               	movwf	efgtoa@nmode^(0+128)
  8506                           
  8507                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  8508  031E  3067               	movlw	103
  8509  031F  0642               	xorwf	efgtoa@mode^(0+128),w
  8510  0320  1D03               	btfss	3,2
  8511  0321  2B3D               	goto	l981
  8512                           
  8513                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  8514  0322  086C               	movf	_prec^(0+128),w
  8515  0323  046D               	iorwf	(_prec+1)^(0+128),w
  8516  0324  1D03               	btfss	3,2
  8517  0325  2B2A               	goto	l982
  8518                           
  8519                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  8520  0326  3001               	movlw	1
  8521  0327  00EC               	movwf	_prec^(0+128)
  8522  0328  3000               	movlw	0
  8523  0329  00ED               	movwf	(_prec^(0+128)+1)
  8524  032A                     l982:	
  8525                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 395:   }
  8526                           
  8527                           
  8528                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  8529  032A  086D               	movf	(_prec+1)^(0+128),w
  8530  032B  3A80               	xorlw	128
  8531  032C  0020               	movlb	0	; select bank0
  8532  032D  00E9               	movwf	??_efgtoa
  8533  032E  3080               	movlw	128
  8534  032F  0269               	subwf	??_efgtoa,w
  8535  0330  1D03               	skipz
  8536  0331  2B35               	goto	u6235
  8537  0332  3001               	movlw	1
  8538  0333  0021               	movlb	1	; select bank1
  8539  0334  026C               	subwf	_prec^(0+128),w
  8540  0335                     u6235:
  8541  0335  1803               	skipnc
  8542  0336  2B3F               	goto	l4225
  8543  0337                     l4223:
  8544  0337  3006               	movlw	6
  8545  0338  0021               	movlb	1	; select bank1
  8546  0339  00BC               	movwf	efgtoa@p^(0+128)
  8547  033A  3000               	movlw	0
  8548  033B  00BD               	movwf	(efgtoa@p^(0+128)+1)
  8549  033C  2B44               	goto	l4231
  8550  033D                     l981:
  8551                           
  8552                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  8553  033D  1BED               	btfsc	(_prec+1)^(0+128),7
  8554  033E  2B37               	goto	l4223
  8555  033F                     l4225:
  8556  033F  0021               	movlb	1	; select bank1
  8557  0340  086D               	movf	(_prec+1)^(0+128),w
  8558  0341  00BD               	movwf	(efgtoa@p+1)^(0+128)
  8559  0342  086C               	movf	_prec^(0+128),w
  8560  0343  00BC               	movwf	efgtoa@p^(0+128)
  8561  0344                     l4231:
  8562                           
  8563                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  8564  0344  3067               	movlw	103
  8565  0345  0642               	xorwf	efgtoa@mode^(0+128),w
  8566  0346  1D03               	btfss	3,2
  8567  0347  2B77               	goto	l992
  8568                           
  8569                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  8570  0348  0852               	movf	(efgtoa@e+1)^(0+128),w
  8571  0349  3A80               	xorlw	128
  8572  034A  0020               	movlb	0	; select bank0
  8573  034B  00E9               	movwf	??_efgtoa
  8574  034C  307F               	movlw	127
  8575  034D  0269               	subwf	??_efgtoa,w
  8576  034E  1D03               	skipz
  8577  034F  2B53               	goto	u6265
  8578  0350  30FC               	movlw	252
  8579  0351  0021               	movlb	1	; select bank1
  8580  0352  0251               	subwf	efgtoa@e^(0+128),w
  8581  0353                     u6265:
  8582  0353  1C03               	skipc
  8583  0354  2B71               	goto	l4239
  8584  0355  0021               	movlb	1	; select bank1
  8585  0356  083C               	movf	efgtoa@p^(0+128),w
  8586  0357  3EFF               	addlw	255
  8587  0358  0020               	movlb	0	; select bank0
  8588  0359  00E9               	movwf	??_efgtoa
  8589  035A  30FF               	movlw	255
  8590  035B  0021               	movlb	1	; select bank1
  8591  035C  3D3D               	addwfc	(efgtoa@p+1)^(0+128),w
  8592  035D  0020               	movlb	0	; select bank0
  8593  035E  00EA               	movwf	??_efgtoa+1
  8594  035F  086A               	movf	??_efgtoa+1,w
  8595  0360  3A80               	xorlw	128
  8596  0361  00EB               	movwf	??_efgtoa+2
  8597  0362  0021               	movlb	1	; select bank1
  8598  0363  0852               	movf	(efgtoa@e+1)^(0+128),w
  8599  0364  3A80               	xorlw	128
  8600  0365  0020               	movlb	0	; select bank0
  8601  0366  026B               	subwf	??_efgtoa+2,w
  8602  0367  1D03               	skipz
  8603  0368  2B6D               	goto	u6275
  8604  0369  0021               	movlb	1	; select bank1
  8605  036A  0851               	movf	efgtoa@e^(0+128),w
  8606  036B  0020               	movlb	0	; select bank0
  8607  036C  0269               	subwf	??_efgtoa,w
  8608  036D                     u6275:
  8609  036D  1C03               	skipc
  8610  036E  2B71               	goto	l4239
  8611                           
  8612                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  8613  036F  3066               	movlw	102
  8614  0370  2B72               	goto	L6
  8615  0371                     l4239:	
  8616                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  8617                           
  8618                           
  8619                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  8620  0371  3065               	movlw	101
  8621  0372                     L6:
  8622  0372  0020               	movlb	0	; select bank0
  8623  0373  00E9               	movwf	??_efgtoa
  8624  0374  0869               	movf	??_efgtoa,w
  8625  0375  0021               	movlb	1	; select bank1
  8626  0376  00C1               	movwf	efgtoa@nmode^(0+128)
  8627  0377                     l992:	
  8628                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 408:     }
  8629                           
  8630                           
  8631                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  8632  0377  083D               	movf	(efgtoa@p+1)^(0+128),w
  8633  0378  00B3               	movwf	(efgtoa@m+1)^(0+128)
  8634  0379  083C               	movf	efgtoa@p^(0+128),w
  8635  037A  00B2               	movwf	efgtoa@m^(0+128)
  8636                           
  8637                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  8638  037B  3067               	movlw	103
  8639  037C  0642               	xorwf	efgtoa@mode^(0+128),w
  8640  037D  1D03               	btfss	3,2
  8641  037E  2B84               	goto	l4247
  8642  037F  3066               	movlw	102
  8643  0380  0641               	xorwf	efgtoa@nmode^(0+128),w
  8644  0381  1903               	btfsc	3,2
  8645  0382  1FD2               	btfss	(efgtoa@e+1)^(0+128),7
  8646  0383  2B88               	goto	l4249
  8647  0384                     l4247:
  8648                           
  8649                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  8650  0384  3001               	movlw	1
  8651  0385  07B2               	addwf	efgtoa@m^(0+128),f
  8652  0386  3000               	movlw	0
  8653  0387  3DB3               	addwfc	(efgtoa@m+1)^(0+128),f
  8654  0388                     l4249:
  8655                           
  8656                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  8657  0388  3066               	movlw	102
  8658  0389  0641               	xorwf	efgtoa@nmode^(0+128),w
  8659  038A  1D03               	btfss	3,2
  8660  038B  2BA0               	goto	l4261
  8661                           
  8662                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  8663  038C  1FD2               	btfss	(efgtoa@e+1)^(0+128),7
  8664  038D  2B98               	goto	l4257
  8665                           
  8666                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  8667  038E  303F               	movlw	63
  8668  038F  00D8               	movwf	(efgtoa@u+3)^(0+128)
  8669  0390  3080               	movlw	128
  8670  0391  00D7               	movwf	(efgtoa@u+2)^(0+128)
  8671  0392  3000               	movlw	0
  8672  0393  00D6               	movwf	(efgtoa@u+1)^(0+128)
  8673  0394  3000               	movlw	0
  8674  0395  00D5               	movwf	efgtoa@u^(0+128)
  8675                           
  8676                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  8677  0396  01D1               	clrf	efgtoa@e^(0+128)
  8678  0397  01D2               	clrf	(efgtoa@e+1)^(0+128)
  8679  0398                     l4257:
  8680                           
  8681                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  8682  0398  3067               	movlw	103
  8683  0399  0642               	xorwf	efgtoa@mode^(0+128),w
  8684  039A  1903               	btfsc	3,2
  8685  039B  2BA0               	goto	l4261
  8686                           
  8687                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  8688  039C  0851               	movf	efgtoa@e^(0+128),w
  8689  039D  07B2               	addwf	efgtoa@m^(0+128),f
  8690  039E  0852               	movf	(efgtoa@e+1)^(0+128),w
  8691  039F  3DB3               	addwfc	(efgtoa@m+1)^(0+128),f
  8692  03A0                     l4261:
  8693                           
  8694                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  8695  03A0  01CB               	clrf	efgtoa@i^(0+128)
  8696  03A1  01CC               	clrf	(efgtoa@i+1)^(0+128)
  8697                           
  8698                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  8699  03A2  0850               	movf	(efgtoa@g+3)^(0+128),w
  8700  03A3  00C6               	movwf	(efgtoa@h+3)^(0+128)
  8701  03A4  084F               	movf	(efgtoa@g+2)^(0+128),w
  8702  03A5  00C5               	movwf	(efgtoa@h+2)^(0+128)
  8703  03A6  084E               	movf	(efgtoa@g+1)^(0+128),w
  8704  03A7  00C4               	movwf	(efgtoa@h+1)^(0+128)
  8705  03A8  084D               	movf	efgtoa@g^(0+128),w
  8706  03A9  00C3               	movwf	efgtoa@h^(0+128)
  8707                           
  8708                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  8709  03AA  0858               	movf	(efgtoa@u+3)^(0+128),w
  8710  03AB  00B7               	movwf	(efgtoa@ou+3)^(0+128)
  8711  03AC  0857               	movf	(efgtoa@u+2)^(0+128),w
  8712  03AD  00B6               	movwf	(efgtoa@ou+2)^(0+128)
  8713  03AE  0856               	movf	(efgtoa@u+1)^(0+128),w
  8714  03AF  00B5               	movwf	(efgtoa@ou+1)^(0+128)
  8715  03B0  0855               	movf	efgtoa@u^(0+128),w
  8716  03B1  00B4               	movwf	efgtoa@ou^(0+128)
  8717  03B2                     l4271:	
  8718                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  8719                           
  8720                           
  8721                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  8722  03B2  084C               	movf	(efgtoa@i+1)^(0+128),w
  8723  03B3  3A80               	xorlw	128
  8724  03B4  0020               	movlb	0	; select bank0
  8725  03B5  00E9               	movwf	??_efgtoa
  8726  03B6  0021               	movlb	1	; select bank1
  8727  03B7  0833               	movf	(efgtoa@m+1)^(0+128),w
  8728  03B8  3A80               	xorlw	128
  8729  03B9  0020               	movlb	0	; select bank0
  8730  03BA  0269               	subwf	??_efgtoa,w
  8731  03BB  1D03               	skipz
  8732  03BC  2BC0               	goto	u6345
  8733  03BD  0021               	movlb	1	; select bank1
  8734  03BE  0832               	movf	efgtoa@m^(0+128),w
  8735  03BF  024B               	subwf	efgtoa@i^(0+128),w
  8736  03C0                     u6345:
  8737  03C0  1803               	btfsc	3,0
  8738  03C1  2C7B               	goto	l4273
  8739                           
  8740                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  8741  03C2  0021               	movlb	1	; select bank1
  8742  03C3  0858               	movf	(efgtoa@u+3)^(0+128),w
  8743  03C4  00F3               	movwf	___fldiv@a+3
  8744  03C5  0857               	movf	(efgtoa@u+2)^(0+128),w
  8745  03C6  00F2               	movwf	___fldiv@a+2
  8746  03C7  0856               	movf	(efgtoa@u+1)^(0+128),w
  8747  03C8  00F1               	movwf	___fldiv@a+1
  8748  03C9  0855               	movf	efgtoa@u^(0+128),w
  8749  03CA  00F0               	movwf	___fldiv@a
  8750  03CB  0846               	movf	(efgtoa@h+3)^(0+128),w
  8751  03CC  00F7               	movwf	___fldiv@b+3
  8752  03CD  0845               	movf	(efgtoa@h+2)^(0+128),w
  8753  03CE  00F6               	movwf	___fldiv@b+2
  8754  03CF  0844               	movf	(efgtoa@h+1)^(0+128),w
  8755  03D0  00F5               	movwf	___fldiv@b+1
  8756  03D1  0843               	movf	efgtoa@h^(0+128),w
  8757  03D2  00F4               	movwf	___fldiv@b
  8758  03D3  3196  2686  3181   	fcall	___fldiv
  8759  03D6  0873               	movf	?___fldiv+3,w
  8760  03D7  0020               	movlb	0	; select bank0
  8761  03D8  00B0               	movwf	floorf@x+3
  8762  03D9  0872               	movf	?___fldiv+2,w
  8763  03DA  00AF               	movwf	floorf@x+2
  8764  03DB  0871               	movf	?___fldiv+1,w
  8765  03DC  00AE               	movwf	floorf@x+1
  8766  03DD  0870               	movf	?___fldiv,w
  8767  03DE  00AD               	movwf	floorf@x
  8768  03DF  3190  20CB  3181   	fcall	_floorf
  8769  03E2  0020               	movlb	0	; select bank0
  8770  03E3  0830               	movf	?_floorf+3,w
  8771  03E4  0021               	movlb	1	; select bank1
  8772  03E5  00CA               	movwf	(efgtoa@l+3)^(0+128)
  8773  03E6  0020               	movlb	0	; select bank0
  8774  03E7  082F               	movf	?_floorf+2,w
  8775  03E8  0021               	movlb	1	; select bank1
  8776  03E9  00C9               	movwf	(efgtoa@l+2)^(0+128)
  8777  03EA  0020               	movlb	0	; select bank0
  8778  03EB  082E               	movf	?_floorf+1,w
  8779  03EC  0021               	movlb	1	; select bank1
  8780  03ED  00C8               	movwf	(efgtoa@l+1)^(0+128)
  8781  03EE  0020               	movlb	0	; select bank0
  8782  03EF  082D               	movf	?_floorf,w
  8783  03F0  0021               	movlb	1	; select bank1
  8784  03F1  00C7               	movwf	efgtoa@l^(0+128)
  8785                           
  8786                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  8787  03F2  084A               	movf	(efgtoa@l+3)^(0+128),w
  8788  03F3  0020               	movlb	0	; select bank0
  8789  03F4  00CB               	movwf	___fltol@f1+3
  8790  03F5  0021               	movlb	1	; select bank1
  8791  03F6  0849               	movf	(efgtoa@l+2)^(0+128),w
  8792  03F7  0020               	movlb	0	; select bank0
  8793  03F8  00CA               	movwf	___fltol@f1+2
  8794  03F9  0021               	movlb	1	; select bank1
  8795  03FA  0848               	movf	(efgtoa@l+1)^(0+128),w
  8796  03FB  0020               	movlb	0	; select bank0
  8797  03FC  00C9               	movwf	___fltol@f1+1
  8798  03FD  0021               	movlb	1	; select bank1
  8799  03FE  0847               	movf	efgtoa@l^(0+128),w
  8800  03FF  0020               	movlb	0	; select bank0
  8801  0400  00C8               	movwf	___fltol@f1
  8802  0401  319E  2610  3181   	fcall	___fltol
  8803  0404  0020               	movlb	0	; select bank0
  8804  0405  0849               	movf	?___fltol+1,w
  8805  0406  0021               	movlb	1	; select bank1
  8806  0407  00B9               	movwf	(efgtoa@d+1)^(0+128)
  8807  0408  0020               	movlb	0	; select bank0
  8808  0409  0848               	movf	?___fltol,w
  8809  040A  0021               	movlb	1	; select bank1
  8810  040B  00B8               	movwf	efgtoa@d^(0+128)
  8811                           
  8812                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  8813  040C  084A               	movf	(efgtoa@l+3)^(0+128),w
  8814  040D  0020               	movlb	0	; select bank0
  8815  040E  00B5               	movwf	___flmul@a+3
  8816  040F  0021               	movlb	1	; select bank1
  8817  0410  0849               	movf	(efgtoa@l+2)^(0+128),w
  8818  0411  0020               	movlb	0	; select bank0
  8819  0412  00B4               	movwf	___flmul@a+2
  8820  0413  0021               	movlb	1	; select bank1
  8821  0414  0848               	movf	(efgtoa@l+1)^(0+128),w
  8822  0415  0020               	movlb	0	; select bank0
  8823  0416  00B3               	movwf	___flmul@a+1
  8824  0417  0021               	movlb	1	; select bank1
  8825  0418  0847               	movf	efgtoa@l^(0+128),w
  8826  0419  0020               	movlb	0	; select bank0
  8827  041A  00B2               	movwf	___flmul@a
  8828  041B  0021               	movlb	1	; select bank1
  8829  041C  0858               	movf	(efgtoa@u+3)^(0+128),w
  8830  041D  0020               	movlb	0	; select bank0
  8831  041E  00B1               	movwf	___flmul@b+3
  8832  041F  0021               	movlb	1	; select bank1
  8833  0420  0857               	movf	(efgtoa@u+2)^(0+128),w
  8834  0421  0020               	movlb	0	; select bank0
  8835  0422  00B0               	movwf	___flmul@b+2
  8836  0423  0021               	movlb	1	; select bank1
  8837  0424  0856               	movf	(efgtoa@u+1)^(0+128),w
  8838  0425  0020               	movlb	0	; select bank0
  8839  0426  00AF               	movwf	___flmul@b+1
  8840  0427  0021               	movlb	1	; select bank1
  8841  0428  0855               	movf	efgtoa@u^(0+128),w
  8842  0429  0020               	movlb	0	; select bank0
  8843  042A  00AE               	movwf	___flmul@b
  8844  042B  318A  2206  3181   	fcall	___flmul
  8845  042E  0020               	movlb	0	; select bank0
  8846  042F  0831               	movf	?___flmul+3,w
  8847  0430  00DF               	movwf	___flsub@a+3
  8848  0431  0830               	movf	?___flmul+2,w
  8849  0432  00DE               	movwf	___flsub@a+2
  8850  0433  082F               	movf	?___flmul+1,w
  8851  0434  00DD               	movwf	___flsub@a+1
  8852  0435  082E               	movf	?___flmul,w
  8853  0436  00DC               	movwf	___flsub@a
  8854  0437  0021               	movlb	1	; select bank1
  8855  0438  0846               	movf	(efgtoa@h+3)^(0+128),w
  8856  0439  0020               	movlb	0	; select bank0
  8857  043A  00E3               	movwf	___flsub@b+3
  8858  043B  0021               	movlb	1	; select bank1
  8859  043C  0845               	movf	(efgtoa@h+2)^(0+128),w
  8860  043D  0020               	movlb	0	; select bank0
  8861  043E  00E2               	movwf	___flsub@b+2
  8862  043F  0021               	movlb	1	; select bank1
  8863  0440  0844               	movf	(efgtoa@h+1)^(0+128),w
  8864  0441  0020               	movlb	0	; select bank0
  8865  0442  00E1               	movwf	___flsub@b+1
  8866  0443  0021               	movlb	1	; select bank1
  8867  0444  0843               	movf	efgtoa@h^(0+128),w
  8868  0445  0020               	movlb	0	; select bank0
  8869  0446  00E0               	movwf	___flsub@b
  8870  0447  319A  2274  3181   	fcall	___flsub
  8871  044A  0020               	movlb	0	; select bank0
  8872  044B  085F               	movf	?___flsub+3,w
  8873  044C  0021               	movlb	1	; select bank1
  8874  044D  00C6               	movwf	(efgtoa@h+3)^(0+128)
  8875  044E  0020               	movlb	0	; select bank0
  8876  044F  085E               	movf	?___flsub+2,w
  8877  0450  0021               	movlb	1	; select bank1
  8878  0451  00C5               	movwf	(efgtoa@h+2)^(0+128)
  8879  0452  0020               	movlb	0	; select bank0
  8880  0453  085D               	movf	?___flsub+1,w
  8881  0454  0021               	movlb	1	; select bank1
  8882  0455  00C4               	movwf	(efgtoa@h+1)^(0+128)
  8883  0456  0020               	movlb	0	; select bank0
  8884  0457  085C               	movf	?___flsub,w
  8885  0458  0021               	movlb	1	; select bank1
  8886  0459  00C3               	movwf	efgtoa@h^(0+128)
  8887                           
  8888                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  8889  045A  3041               	movlw	65
  8890  045B  00F3               	movwf	___fldiv@a+3
  8891  045C  3020               	movlw	32
  8892  045D  00F2               	movwf	___fldiv@a+2
  8893  045E  3000               	movlw	0
  8894  045F  00F1               	movwf	___fldiv@a+1
  8895  0460  3000               	movlw	0
  8896  0461  00F0               	movwf	___fldiv@a
  8897  0462  0858               	movf	(efgtoa@u+3)^(0+128),w
  8898  0463  00F7               	movwf	___fldiv@b+3
  8899  0464  0857               	movf	(efgtoa@u+2)^(0+128),w
  8900  0465  00F6               	movwf	___fldiv@b+2
  8901  0466  0856               	movf	(efgtoa@u+1)^(0+128),w
  8902  0467  00F5               	movwf	___fldiv@b+1
  8903  0468  0855               	movf	efgtoa@u^(0+128),w
  8904  0469  00F4               	movwf	___fldiv@b
  8905  046A  3196  2686  3181   	fcall	___fldiv
  8906  046D  0873               	movf	?___fldiv+3,w
  8907  046E  0021               	movlb	1	; select bank1
  8908  046F  00D8               	movwf	(efgtoa@u+3)^(0+128)
  8909  0470  0872               	movf	?___fldiv+2,w
  8910  0471  00D7               	movwf	(efgtoa@u+2)^(0+128)
  8911  0472  0871               	movf	?___fldiv+1,w
  8912  0473  00D6               	movwf	(efgtoa@u+1)^(0+128)
  8913  0474  0870               	movf	?___fldiv,w
  8914  0475  00D5               	movwf	efgtoa@u^(0+128)
  8915                           
  8916                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  8917  0476  3001               	movlw	1
  8918  0477  07CB               	addwf	efgtoa@i^(0+128),f
  8919  0478  3000               	movlw	0
  8920  0479  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  8921  047A  2BB2               	goto	l4271
  8922  047B                     l4273:
  8923                           
  8924                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  8925  047B  3040               	movlw	64
  8926  047C  0020               	movlb	0	; select bank0
  8927  047D  00B1               	movwf	___flmul@b+3
  8928  047E  30A0               	movlw	160
  8929  047F  00B0               	movwf	___flmul@b+2
  8930  0480  3000               	movlw	0
  8931  0481  00AF               	movwf	___flmul@b+1
  8932  0482  3000               	movlw	0
  8933  0483  00AE               	movwf	___flmul@b
  8934  0484  0021               	movlb	1	; select bank1
  8935  0485  0858               	movf	(efgtoa@u+3)^(0+128),w
  8936  0486  0020               	movlb	0	; select bank0
  8937  0487  00B5               	movwf	___flmul@a+3
  8938  0488  0021               	movlb	1	; select bank1
  8939  0489  0857               	movf	(efgtoa@u+2)^(0+128),w
  8940  048A  0020               	movlb	0	; select bank0
  8941  048B  00B4               	movwf	___flmul@a+2
  8942  048C  0021               	movlb	1	; select bank1
  8943  048D  0856               	movf	(efgtoa@u+1)^(0+128),w
  8944  048E  0020               	movlb	0	; select bank0
  8945  048F  00B3               	movwf	___flmul@a+1
  8946  0490  0021               	movlb	1	; select bank1
  8947  0491  0855               	movf	efgtoa@u^(0+128),w
  8948  0492  0020               	movlb	0	; select bank0
  8949  0493  00B2               	movwf	___flmul@a
  8950  0494  318A  2206  3181   	fcall	___flmul
  8951  0497  0020               	movlb	0	; select bank0
  8952  0498  0831               	movf	?___flmul+3,w
  8953  0499  0021               	movlb	1	; select bank1
  8954  049A  00CA               	movwf	(efgtoa@l+3)^(0+128)
  8955  049B  0020               	movlb	0	; select bank0
  8956  049C  0830               	movf	?___flmul+2,w
  8957  049D  0021               	movlb	1	; select bank1
  8958  049E  00C9               	movwf	(efgtoa@l+2)^(0+128)
  8959  049F  0020               	movlb	0	; select bank0
  8960  04A0  082F               	movf	?___flmul+1,w
  8961  04A1  0021               	movlb	1	; select bank1
  8962  04A2  00C8               	movwf	(efgtoa@l+1)^(0+128)
  8963  04A3  0020               	movlb	0	; select bank0
  8964  04A4  082E               	movf	?___flmul,w
  8965  04A5  0021               	movlb	1	; select bank1
  8966  04A6  00C7               	movwf	efgtoa@l^(0+128)
  8967                           
  8968                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  8969  04A7  0846               	movf	(efgtoa@h+3)^(0+128),w
  8970  04A8  0020               	movlb	0	; select bank0
  8971  04A9  00CB               	movwf	___flge@ff1+3
  8972  04AA  0021               	movlb	1	; select bank1
  8973  04AB  0845               	movf	(efgtoa@h+2)^(0+128),w
  8974  04AC  0020               	movlb	0	; select bank0
  8975  04AD  00CA               	movwf	___flge@ff1+2
  8976  04AE  0021               	movlb	1	; select bank1
  8977  04AF  0844               	movf	(efgtoa@h+1)^(0+128),w
  8978  04B0  0020               	movlb	0	; select bank0
  8979  04B1  00C9               	movwf	___flge@ff1+1
  8980  04B2  0021               	movlb	1	; select bank1
  8981  04B3  0843               	movf	efgtoa@h^(0+128),w
  8982  04B4  0020               	movlb	0	; select bank0
  8983  04B5  00C8               	movwf	___flge@ff1
  8984  04B6  0021               	movlb	1	; select bank1
  8985  04B7  084A               	movf	(efgtoa@l+3)^(0+128),w
  8986  04B8  0020               	movlb	0	; select bank0
  8987  04B9  00CF               	movwf	___flge@ff2+3
  8988  04BA  0021               	movlb	1	; select bank1
  8989  04BB  0849               	movf	(efgtoa@l+2)^(0+128),w
  8990  04BC  0020               	movlb	0	; select bank0
  8991  04BD  00CE               	movwf	___flge@ff2+2
  8992  04BE  0021               	movlb	1	; select bank1
  8993  04BF  0848               	movf	(efgtoa@l+1)^(0+128),w
  8994  04C0  0020               	movlb	0	; select bank0
  8995  04C1  00CD               	movwf	___flge@ff2+1
  8996  04C2  0021               	movlb	1	; select bank1
  8997  04C3  0847               	movf	efgtoa@l^(0+128),w
  8998  04C4  0020               	movlb	0	; select bank0
  8999  04C5  00CC               	movwf	___flge@ff2
  9000  04C6  319E  26EE  3181   	fcall	___flge
  9001  04C9  1803               	btfsc	3,0
  9002  04CA  2CCE               	goto	l4277
  9003                           
  9004                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  9005  04CB  3000               	movlw	0
  9006  04CC  0021               	movlb	1	; select bank1
  9007  04CD  2CE8               	goto	L7
  9008  04CE                     l4277:	
  9009                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  9010                           
  9011                           
  9012                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  9013  04CE  0021               	movlb	1	; select bank1
  9014  04CF  0846               	movf	(efgtoa@h+3)^(0+128),w
  9015  04D0  00F3               	movwf	___fleq@ff1+3
  9016  04D1  0845               	movf	(efgtoa@h+2)^(0+128),w
  9017  04D2  00F2               	movwf	___fleq@ff1+2
  9018  04D3  0844               	movf	(efgtoa@h+1)^(0+128),w
  9019  04D4  00F1               	movwf	___fleq@ff1+1
  9020  04D5  0843               	movf	efgtoa@h^(0+128),w
  9021  04D6  00F0               	movwf	___fleq@ff1
  9022  04D7  084A               	movf	(efgtoa@l+3)^(0+128),w
  9023  04D8  00F7               	movwf	___fleq@ff2+3
  9024  04D9  0849               	movf	(efgtoa@l+2)^(0+128),w
  9025  04DA  00F6               	movwf	___fleq@ff2+2
  9026  04DB  0848               	movf	(efgtoa@l+1)^(0+128),w
  9027  04DC  00F5               	movwf	___fleq@ff2+1
  9028  04DD  0847               	movf	efgtoa@l^(0+128),w
  9029  04DE  00F4               	movwf	___fleq@ff2
  9030  04DF  319B  23EF  3181   	fcall	___fleq
  9031  04E2  1C03               	btfss	3,0
  9032  04E3  2CEF               	goto	l4283
  9033  04E4  0021               	movlb	1	; select bank1
  9034  04E5  1838               	btfsc	efgtoa@d^(0+128),0
  9035  04E6  2CEF               	goto	l4283
  9036                           
  9037                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  9038  04E7  3000               	movlw	0
  9039  04E8                     L7:
  9040  04E8  00CA               	movwf	(efgtoa@l+3)^(0+128)
  9041  04E9  3000               	movlw	0
  9042  04EA  00C9               	movwf	(efgtoa@l+2)^(0+128)
  9043  04EB  3000               	movlw	0
  9044  04EC  00C8               	movwf	(efgtoa@l+1)^(0+128)
  9045  04ED  3000               	movlw	0
  9046  04EE  00C7               	movwf	efgtoa@l^(0+128)
  9047  04EF                     l4283:
  9048                           
  9049                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  9050  04EF  0021               	movlb	1	; select bank1
  9051  04F0  084A               	movf	(efgtoa@l+3)^(0+128),w
  9052  04F1  0020               	movlb	0	; select bank0
  9053  04F2  00CB               	movwf	___fladd@b+3
  9054  04F3  0021               	movlb	1	; select bank1
  9055  04F4  0849               	movf	(efgtoa@l+2)^(0+128),w
  9056  04F5  0020               	movlb	0	; select bank0
  9057  04F6  00CA               	movwf	___fladd@b+2
  9058  04F7  0021               	movlb	1	; select bank1
  9059  04F8  0848               	movf	(efgtoa@l+1)^(0+128),w
  9060  04F9  0020               	movlb	0	; select bank0
  9061  04FA  00C9               	movwf	___fladd@b+1
  9062  04FB  0021               	movlb	1	; select bank1
  9063  04FC  0847               	movf	efgtoa@l^(0+128),w
  9064  04FD  0020               	movlb	0	; select bank0
  9065  04FE  00C8               	movwf	___fladd@b
  9066  04FF  0021               	movlb	1	; select bank1
  9067  0500  0850               	movf	(efgtoa@g+3)^(0+128),w
  9068  0501  0020               	movlb	0	; select bank0
  9069  0502  00CF               	movwf	___fladd@a+3
  9070  0503  0021               	movlb	1	; select bank1
  9071  0504  084F               	movf	(efgtoa@g+2)^(0+128),w
  9072  0505  0020               	movlb	0	; select bank0
  9073  0506  00CE               	movwf	___fladd@a+2
  9074  0507  0021               	movlb	1	; select bank1
  9075  0508  084E               	movf	(efgtoa@g+1)^(0+128),w
  9076  0509  0020               	movlb	0	; select bank0
  9077  050A  00CD               	movwf	___fladd@a+1
  9078  050B  0021               	movlb	1	; select bank1
  9079  050C  084D               	movf	efgtoa@g^(0+128),w
  9080  050D  0020               	movlb	0	; select bank0
  9081  050E  00CC               	movwf	___fladd@a
  9082  050F  3188  2024  3181   	fcall	___fladd
  9083  0512  0020               	movlb	0	; select bank0
  9084  0513  084B               	movf	?___fladd+3,w
  9085  0514  0021               	movlb	1	; select bank1
  9086  0515  00C6               	movwf	(efgtoa@h+3)^(0+128)
  9087  0516  0020               	movlb	0	; select bank0
  9088  0517  084A               	movf	?___fladd+2,w
  9089  0518  0021               	movlb	1	; select bank1
  9090  0519  00C5               	movwf	(efgtoa@h+2)^(0+128)
  9091  051A  0020               	movlb	0	; select bank0
  9092  051B  0849               	movf	?___fladd+1,w
  9093  051C  0021               	movlb	1	; select bank1
  9094  051D  00C4               	movwf	(efgtoa@h+1)^(0+128)
  9095  051E  0020               	movlb	0	; select bank0
  9096  051F  0848               	movf	?___fladd,w
  9097  0520  0021               	movlb	1	; select bank1
  9098  0521  00C3               	movwf	efgtoa@h^(0+128)
  9099                           
  9100                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  9101  0522  0846               	movf	(efgtoa@h+3)^(0+128),w
  9102  0523  0020               	movlb	0	; select bank0
  9103  0524  00CB               	movwf	___flge@ff1+3
  9104  0525  0021               	movlb	1	; select bank1
  9105  0526  0845               	movf	(efgtoa@h+2)^(0+128),w
  9106  0527  0020               	movlb	0	; select bank0
  9107  0528  00CA               	movwf	___flge@ff1+2
  9108  0529  0021               	movlb	1	; select bank1
  9109  052A  0844               	movf	(efgtoa@h+1)^(0+128),w
  9110  052B  0020               	movlb	0	; select bank0
  9111  052C  00C9               	movwf	___flge@ff1+1
  9112  052D  0021               	movlb	1	; select bank1
  9113  052E  0843               	movf	efgtoa@h^(0+128),w
  9114  052F  0020               	movlb	0	; select bank0
  9115  0530  00C8               	movwf	___flge@ff1
  9116  0531  3041               	movlw	65
  9117  0532  00B1               	movwf	___flmul@b+3
  9118  0533  3020               	movlw	32
  9119  0534  00B0               	movwf	___flmul@b+2
  9120  0535  3000               	movlw	0
  9121  0536  00AF               	movwf	___flmul@b+1
  9122  0537  3000               	movlw	0
  9123  0538  00AE               	movwf	___flmul@b
  9124  0539  0021               	movlb	1	; select bank1
  9125  053A  0837               	movf	(efgtoa@ou+3)^(0+128),w
  9126  053B  0020               	movlb	0	; select bank0
  9127  053C  00B5               	movwf	___flmul@a+3
  9128  053D  0021               	movlb	1	; select bank1
  9129  053E  0836               	movf	(efgtoa@ou+2)^(0+128),w
  9130  053F  0020               	movlb	0	; select bank0
  9131  0540  00B4               	movwf	___flmul@a+2
  9132  0541  0021               	movlb	1	; select bank1
  9133  0542  0835               	movf	(efgtoa@ou+1)^(0+128),w
  9134  0543  0020               	movlb	0	; select bank0
  9135  0544  00B3               	movwf	___flmul@a+1
  9136  0545  0021               	movlb	1	; select bank1
  9137  0546  0834               	movf	efgtoa@ou^(0+128),w
  9138  0547  0020               	movlb	0	; select bank0
  9139  0548  00B2               	movwf	___flmul@a
  9140  0549  318A  2206  3181   	fcall	___flmul
  9141  054C  0020               	movlb	0	; select bank0
  9142  054D  0831               	movf	?___flmul+3,w
  9143  054E  00CF               	movwf	___flge@ff2+3
  9144  054F  0830               	movf	?___flmul+2,w
  9145  0550  00CE               	movwf	___flge@ff2+2
  9146  0551  082F               	movf	?___flmul+1,w
  9147  0552  00CD               	movwf	___flge@ff2+1
  9148  0553  082E               	movf	?___flmul,w
  9149  0554  00CC               	movwf	___flge@ff2
  9150  0555  319E  26EE  3181   	fcall	___flge
  9151  0558  1C03               	btfss	3,0
  9152  0559  2D93               	goto	l1007
  9153                           
  9154                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  9155  055A  3001               	movlw	1
  9156  055B  0021               	movlb	1	; select bank1
  9157  055C  07D1               	addwf	efgtoa@e^(0+128),f
  9158  055D  3000               	movlw	0
  9159  055E  3DD2               	addwfc	(efgtoa@e+1)^(0+128),f
  9160                           
  9161                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  9162  055F  3041               	movlw	65
  9163  0560  0020               	movlb	0	; select bank0
  9164  0561  00B1               	movwf	___flmul@b+3
  9165  0562  3020               	movlw	32
  9166  0563  00B0               	movwf	___flmul@b+2
  9167  0564  3000               	movlw	0
  9168  0565  00AF               	movwf	___flmul@b+1
  9169  0566  3000               	movlw	0
  9170  0567  00AE               	movwf	___flmul@b
  9171  0568  0021               	movlb	1	; select bank1
  9172  0569  0837               	movf	(efgtoa@ou+3)^(0+128),w
  9173  056A  0020               	movlb	0	; select bank0
  9174  056B  00B5               	movwf	___flmul@a+3
  9175  056C  0021               	movlb	1	; select bank1
  9176  056D  0836               	movf	(efgtoa@ou+2)^(0+128),w
  9177  056E  0020               	movlb	0	; select bank0
  9178  056F  00B4               	movwf	___flmul@a+2
  9179  0570  0021               	movlb	1	; select bank1
  9180  0571  0835               	movf	(efgtoa@ou+1)^(0+128),w
  9181  0572  0020               	movlb	0	; select bank0
  9182  0573  00B3               	movwf	___flmul@a+1
  9183  0574  0021               	movlb	1	; select bank1
  9184  0575  0834               	movf	efgtoa@ou^(0+128),w
  9185  0576  0020               	movlb	0	; select bank0
  9186  0577  00B2               	movwf	___flmul@a
  9187  0578  318A  2206  3181   	fcall	___flmul
  9188  057B  0020               	movlb	0	; select bank0
  9189  057C  0831               	movf	?___flmul+3,w
  9190  057D  0021               	movlb	1	; select bank1
  9191  057E  00B7               	movwf	(efgtoa@ou+3)^(0+128)
  9192  057F  0020               	movlb	0	; select bank0
  9193  0580  0830               	movf	?___flmul+2,w
  9194  0581  0021               	movlb	1	; select bank1
  9195  0582  00B6               	movwf	(efgtoa@ou+2)^(0+128)
  9196  0583  0020               	movlb	0	; select bank0
  9197  0584  082F               	movf	?___flmul+1,w
  9198  0585  0021               	movlb	1	; select bank1
  9199  0586  00B5               	movwf	(efgtoa@ou+1)^(0+128)
  9200  0587  0020               	movlb	0	; select bank0
  9201  0588  082E               	movf	?___flmul,w
  9202  0589  0021               	movlb	1	; select bank1
  9203  058A  00B4               	movwf	efgtoa@ou^(0+128)
  9204                           
  9205                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  9206  058B  3066               	movlw	102
  9207  058C  0641               	xorwf	efgtoa@nmode^(0+128),w
  9208  058D  1D03               	btfss	3,2
  9209  058E  2D93               	goto	l1007
  9210                           
  9211                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  9212  058F  3001               	movlw	1
  9213  0590  07B2               	addwf	efgtoa@m^(0+128),f
  9214  0591  3000               	movlw	0
  9215  0592  3DB3               	addwfc	(efgtoa@m+1)^(0+128),f
  9216  0593                     l1007:	
  9217                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 460:  }
  9218                           
  9219                           
  9220                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  9221  0593  0021               	movlb	1	; select bank1
  9222  0594  0837               	movf	(efgtoa@ou+3)^(0+128),w
  9223  0595  00D8               	movwf	(efgtoa@u+3)^(0+128)
  9224  0596  0836               	movf	(efgtoa@ou+2)^(0+128),w
  9225  0597  00D7               	movwf	(efgtoa@u+2)^(0+128)
  9226  0598  0835               	movf	(efgtoa@ou+1)^(0+128),w
  9227  0599  00D6               	movwf	(efgtoa@u+1)^(0+128)
  9228  059A  0834               	movf	efgtoa@ou^(0+128),w
  9229  059B  00D5               	movwf	efgtoa@u^(0+128)
  9230                           
  9231                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  9232  059C  3065               	movlw	101
  9233  059D  0641               	xorwf	efgtoa@nmode^(0+128),w
  9234  059E  1903               	btfsc	3,2
  9235  059F  2DA5               	goto	l4299
  9236  05A0  0852               	movf	(efgtoa@e+1)^(0+128),w
  9237  05A1  00B1               	movwf	(efgtoa@ne+1)^(0+128)
  9238  05A2  0851               	movf	efgtoa@e^(0+128),w
  9239  05A3  00B0               	movwf	efgtoa@ne^(0+128)
  9240  05A4  2DA7               	goto	l1012
  9241  05A5                     l4299:
  9242  05A5  01B0               	clrf	efgtoa@ne^(0+128)
  9243  05A6  01B1               	clrf	(efgtoa@ne+1)^(0+128)
  9244  05A7                     l1012:
  9245                           
  9246                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  9247  05A7  01AE               	clrf	efgtoa@pp^(0+128)
  9248  05A8  01AF               	clrf	(efgtoa@pp+1)^(0+128)
  9249                           
  9250                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  9251  05A9  01AC               	clrf	efgtoa@t^(0+128)
  9252  05AA  01AD               	clrf	(efgtoa@t+1)^(0+128)
  9253                           
  9254                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  9255  05AB  01CB               	clrf	efgtoa@i^(0+128)
  9256  05AC  01CC               	clrf	(efgtoa@i+1)^(0+128)
  9257                           
  9258                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  9259  05AD  2ECC               	goto	l4349
  9260  05AE                     l4301:
  9261                           
  9262                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  9263  05AE  0021               	movlb	1	; select bank1
  9264  05AF  0858               	movf	(efgtoa@u+3)^(0+128),w
  9265  05B0  00F3               	movwf	___fldiv@a+3
  9266  05B1  0857               	movf	(efgtoa@u+2)^(0+128),w
  9267  05B2  00F2               	movwf	___fldiv@a+2
  9268  05B3  0856               	movf	(efgtoa@u+1)^(0+128),w
  9269  05B4  00F1               	movwf	___fldiv@a+1
  9270  05B5  0855               	movf	efgtoa@u^(0+128),w
  9271  05B6  00F0               	movwf	___fldiv@a
  9272  05B7  0846               	movf	(efgtoa@h+3)^(0+128),w
  9273  05B8  00F7               	movwf	___fldiv@b+3
  9274  05B9  0845               	movf	(efgtoa@h+2)^(0+128),w
  9275  05BA  00F6               	movwf	___fldiv@b+2
  9276  05BB  0844               	movf	(efgtoa@h+1)^(0+128),w
  9277  05BC  00F5               	movwf	___fldiv@b+1
  9278  05BD  0843               	movf	efgtoa@h^(0+128),w
  9279  05BE  00F4               	movwf	___fldiv@b
  9280  05BF  3196  2686  3181   	fcall	___fldiv
  9281  05C2  0873               	movf	?___fldiv+3,w
  9282  05C3  0020               	movlb	0	; select bank0
  9283  05C4  00B0               	movwf	floorf@x+3
  9284  05C5  0872               	movf	?___fldiv+2,w
  9285  05C6  00AF               	movwf	floorf@x+2
  9286  05C7  0871               	movf	?___fldiv+1,w
  9287  05C8  00AE               	movwf	floorf@x+1
  9288  05C9  0870               	movf	?___fldiv,w
  9289  05CA  00AD               	movwf	floorf@x
  9290  05CB  3190  20CB  3181   	fcall	_floorf
  9291  05CE  0020               	movlb	0	; select bank0
  9292  05CF  0830               	movf	?_floorf+3,w
  9293  05D0  0021               	movlb	1	; select bank1
  9294  05D1  00CA               	movwf	(efgtoa@l+3)^(0+128)
  9295  05D2  0020               	movlb	0	; select bank0
  9296  05D3  082F               	movf	?_floorf+2,w
  9297  05D4  0021               	movlb	1	; select bank1
  9298  05D5  00C9               	movwf	(efgtoa@l+2)^(0+128)
  9299  05D6  0020               	movlb	0	; select bank0
  9300  05D7  082E               	movf	?_floorf+1,w
  9301  05D8  0021               	movlb	1	; select bank1
  9302  05D9  00C8               	movwf	(efgtoa@l+1)^(0+128)
  9303  05DA  0020               	movlb	0	; select bank0
  9304  05DB  082D               	movf	?_floorf,w
  9305  05DC  0021               	movlb	1	; select bank1
  9306  05DD  00C7               	movwf	efgtoa@l^(0+128)
  9307                           
  9308                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  9309  05DE  084A               	movf	(efgtoa@l+3)^(0+128),w
  9310  05DF  0020               	movlb	0	; select bank0
  9311  05E0  00CB               	movwf	___fltol@f1+3
  9312  05E1  0021               	movlb	1	; select bank1
  9313  05E2  0849               	movf	(efgtoa@l+2)^(0+128),w
  9314  05E3  0020               	movlb	0	; select bank0
  9315  05E4  00CA               	movwf	___fltol@f1+2
  9316  05E5  0021               	movlb	1	; select bank1
  9317  05E6  0848               	movf	(efgtoa@l+1)^(0+128),w
  9318  05E7  0020               	movlb	0	; select bank0
  9319  05E8  00C9               	movwf	___fltol@f1+1
  9320  05E9  0021               	movlb	1	; select bank1
  9321  05EA  0847               	movf	efgtoa@l^(0+128),w
  9322  05EB  0020               	movlb	0	; select bank0
  9323  05EC  00C8               	movwf	___fltol@f1
  9324  05ED  319E  2610  3181   	fcall	___fltol
  9325  05F0  0020               	movlb	0	; select bank0
  9326  05F1  0849               	movf	?___fltol+1,w
  9327  05F2  0021               	movlb	1	; select bank1
  9328  05F3  00B9               	movwf	(efgtoa@d+1)^(0+128)
  9329  05F4  0020               	movlb	0	; select bank0
  9330  05F5  0848               	movf	?___fltol,w
  9331  05F6  0021               	movlb	1	; select bank1
  9332  05F7  00B8               	movwf	efgtoa@d^(0+128)
  9333                           
  9334                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  9335  05F8  1A6E               	btfsc	_flags^(0+128),4
  9336  05F9  2E08               	goto	l4313
  9337  05FA  0838               	movf	efgtoa@d^(0+128),w
  9338  05FB  0439               	iorwf	(efgtoa@d+1)^(0+128),w
  9339  05FC  1D03               	btfss	3,2
  9340  05FD  2E08               	goto	l4313
  9341  05FE  3067               	movlw	103
  9342  05FF  0642               	xorwf	efgtoa@mode^(0+128),w
  9343  0600  1903               	btfsc	3,2
  9344  0601  1FB1               	btfss	(efgtoa@ne+1)^(0+128),7
  9345  0602  2E08               	goto	l4313
  9346                           
  9347                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  9348  0603  3001               	movlw	1
  9349  0604  07AC               	addwf	efgtoa@t^(0+128),f
  9350  0605  3000               	movlw	0
  9351  0606  3DAD               	addwfc	(efgtoa@t+1)^(0+128),f
  9352                           
  9353                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  9354  0607  2E5A               	goto	l4341
  9355  0608                     l4313:
  9356                           
  9357                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  9358  0608  082E               	movf	efgtoa@pp^(0+128),w
  9359  0609  042F               	iorwf	(efgtoa@pp+1)^(0+128),w
  9360  060A  1903               	btfsc	3,2
  9361  060B  1FB1               	btfss	(efgtoa@ne+1)^(0+128),7
  9362  060C  2E26               	goto	l4333
  9363                           
  9364                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  9365  060D  302E               	movlw	46
  9366  060E  0020               	movlb	0	; select bank0
  9367  060F  00E9               	movwf	??_efgtoa
  9368  0610  0021               	movlb	1	; select bank1
  9369  0611  0853               	movf	efgtoa@n^(0+128),w
  9370  0612  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9371  0613  0086               	movwf	6
  9372  0614  3001               	movlw	1	; select bank3/4
  9373  0615  0087               	movwf	7
  9374  0616  0020               	movlb	0	; select bank0
  9375  0617  0869               	movf	??_efgtoa,w
  9376  0618  0081               	movwf	1
  9377  0619  3001               	movlw	1
  9378  061A  0021               	movlb	1	; select bank1
  9379  061B  07D3               	addwf	efgtoa@n^(0+128),f
  9380  061C  3000               	movlw	0
  9381  061D  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  9382                           
  9383                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  9384  061E  30FF               	movlw	255
  9385  061F  07BF               	addwf	efgtoa@w^(0+128),f
  9386  0620  30FF               	movlw	255
  9387  0621  3DC0               	addwfc	(efgtoa@w+1)^(0+128),f
  9388                           
  9389                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  9390  0622  3001               	movlw	1
  9391  0623  00AE               	movwf	efgtoa@pp^(0+128)
  9392  0624  3000               	movlw	0
  9393  0625  00AF               	movwf	(efgtoa@pp^(0+128)+1)
  9394  0626                     l4333:
  9395                           
  9396                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  9397  0626  082C               	movf	efgtoa@t^(0+128),w
  9398  0627  042D               	iorwf	(efgtoa@t+1)^(0+128),w
  9399  0628  1903               	btfsc	3,2
  9400  0629  2E44               	goto	l4335
  9401                           
  9402                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  9403  062A  3030               	movlw	48
  9404  062B  0020               	movlb	0	; select bank0
  9405  062C  00E9               	movwf	??_efgtoa
  9406  062D  0021               	movlb	1	; select bank1
  9407  062E  0853               	movf	efgtoa@n^(0+128),w
  9408  062F  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9409  0630  0086               	movwf	6
  9410  0631  3001               	movlw	1	; select bank3/4
  9411  0632  0087               	movwf	7
  9412  0633  0020               	movlb	0	; select bank0
  9413  0634  0869               	movf	??_efgtoa,w
  9414  0635  0081               	movwf	1
  9415  0636  3001               	movlw	1
  9416  0637  0021               	movlb	1	; select bank1
  9417  0638  07D3               	addwf	efgtoa@n^(0+128),f
  9418  0639  3000               	movlw	0
  9419  063A  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  9420                           
  9421                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  9422  063B  30FF               	movlw	255
  9423  063C  07BF               	addwf	efgtoa@w^(0+128),f
  9424  063D  30FF               	movlw	255
  9425  063E  3DC0               	addwfc	(efgtoa@w+1)^(0+128),f
  9426                           
  9427                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  9428  063F  30FF               	movlw	255
  9429  0640  07AC               	addwf	efgtoa@t^(0+128),f
  9430  0641  30FF               	movlw	255
  9431  0642  3DAD               	addwfc	(efgtoa@t+1)^(0+128),f
  9432  0643  2E26               	goto	l4333
  9433  0644                     l4335:
  9434                           
  9435                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  9436  0644  0838               	movf	efgtoa@d^(0+128),w
  9437  0645  3E30               	addlw	48
  9438  0646  0020               	movlb	0	; select bank0
  9439  0647  00E9               	movwf	??_efgtoa
  9440  0648  0021               	movlb	1	; select bank1
  9441  0649  0853               	movf	efgtoa@n^(0+128),w
  9442  064A  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9443  064B  0086               	movwf	6
  9444  064C  3001               	movlw	1	; select bank3/4
  9445  064D  0087               	movwf	7
  9446  064E  0020               	movlb	0	; select bank0
  9447  064F  0869               	movf	??_efgtoa,w
  9448  0650  0081               	movwf	1
  9449  0651  3001               	movlw	1
  9450  0652  0021               	movlb	1	; select bank1
  9451  0653  07D3               	addwf	efgtoa@n^(0+128),f
  9452  0654  3000               	movlw	0
  9453  0655  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  9454                           
  9455                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  9456  0656  30FF               	movlw	255
  9457  0657  07BF               	addwf	efgtoa@w^(0+128),f
  9458  0658  30FF               	movlw	255
  9459  0659  3DC0               	addwfc	(efgtoa@w+1)^(0+128),f
  9460  065A                     l4341:
  9461                           
  9462                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  9463  065A  084A               	movf	(efgtoa@l+3)^(0+128),w
  9464  065B  0020               	movlb	0	; select bank0
  9465  065C  00B5               	movwf	___flmul@a+3
  9466  065D  0021               	movlb	1	; select bank1
  9467  065E  0849               	movf	(efgtoa@l+2)^(0+128),w
  9468  065F  0020               	movlb	0	; select bank0
  9469  0660  00B4               	movwf	___flmul@a+2
  9470  0661  0021               	movlb	1	; select bank1
  9471  0662  0848               	movf	(efgtoa@l+1)^(0+128),w
  9472  0663  0020               	movlb	0	; select bank0
  9473  0664  00B3               	movwf	___flmul@a+1
  9474  0665  0021               	movlb	1	; select bank1
  9475  0666  0847               	movf	efgtoa@l^(0+128),w
  9476  0667  0020               	movlb	0	; select bank0
  9477  0668  00B2               	movwf	___flmul@a
  9478  0669  0021               	movlb	1	; select bank1
  9479  066A  0858               	movf	(efgtoa@u+3)^(0+128),w
  9480  066B  0020               	movlb	0	; select bank0
  9481  066C  00B1               	movwf	___flmul@b+3
  9482  066D  0021               	movlb	1	; select bank1
  9483  066E  0857               	movf	(efgtoa@u+2)^(0+128),w
  9484  066F  0020               	movlb	0	; select bank0
  9485  0670  00B0               	movwf	___flmul@b+2
  9486  0671  0021               	movlb	1	; select bank1
  9487  0672  0856               	movf	(efgtoa@u+1)^(0+128),w
  9488  0673  0020               	movlb	0	; select bank0
  9489  0674  00AF               	movwf	___flmul@b+1
  9490  0675  0021               	movlb	1	; select bank1
  9491  0676  0855               	movf	efgtoa@u^(0+128),w
  9492  0677  0020               	movlb	0	; select bank0
  9493  0678  00AE               	movwf	___flmul@b
  9494  0679  318A  2206  3181   	fcall	___flmul
  9495  067C  0020               	movlb	0	; select bank0
  9496  067D  0831               	movf	?___flmul+3,w
  9497  067E  00DF               	movwf	___flsub@a+3
  9498  067F  0830               	movf	?___flmul+2,w
  9499  0680  00DE               	movwf	___flsub@a+2
  9500  0681  082F               	movf	?___flmul+1,w
  9501  0682  00DD               	movwf	___flsub@a+1
  9502  0683  082E               	movf	?___flmul,w
  9503  0684  00DC               	movwf	___flsub@a
  9504  0685  0021               	movlb	1	; select bank1
  9505  0686  0846               	movf	(efgtoa@h+3)^(0+128),w
  9506  0687  0020               	movlb	0	; select bank0
  9507  0688  00E3               	movwf	___flsub@b+3
  9508  0689  0021               	movlb	1	; select bank1
  9509  068A  0845               	movf	(efgtoa@h+2)^(0+128),w
  9510  068B  0020               	movlb	0	; select bank0
  9511  068C  00E2               	movwf	___flsub@b+2
  9512  068D  0021               	movlb	1	; select bank1
  9513  068E  0844               	movf	(efgtoa@h+1)^(0+128),w
  9514  068F  0020               	movlb	0	; select bank0
  9515  0690  00E1               	movwf	___flsub@b+1
  9516  0691  0021               	movlb	1	; select bank1
  9517  0692  0843               	movf	efgtoa@h^(0+128),w
  9518  0693  0020               	movlb	0	; select bank0
  9519  0694  00E0               	movwf	___flsub@b
  9520  0695  319A  2274  3181   	fcall	___flsub
  9521  0698  0020               	movlb	0	; select bank0
  9522  0699  085F               	movf	?___flsub+3,w
  9523  069A  0021               	movlb	1	; select bank1
  9524  069B  00C6               	movwf	(efgtoa@h+3)^(0+128)
  9525  069C  0020               	movlb	0	; select bank0
  9526  069D  085E               	movf	?___flsub+2,w
  9527  069E  0021               	movlb	1	; select bank1
  9528  069F  00C5               	movwf	(efgtoa@h+2)^(0+128)
  9529  06A0  0020               	movlb	0	; select bank0
  9530  06A1  085D               	movf	?___flsub+1,w
  9531  06A2  0021               	movlb	1	; select bank1
  9532  06A3  00C4               	movwf	(efgtoa@h+1)^(0+128)
  9533  06A4  0020               	movlb	0	; select bank0
  9534  06A5  085C               	movf	?___flsub,w
  9535  06A6  0021               	movlb	1	; select bank1
  9536  06A7  00C3               	movwf	efgtoa@h^(0+128)
  9537                           
  9538                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  9539  06A8  3041               	movlw	65
  9540  06A9  00F3               	movwf	___fldiv@a+3
  9541  06AA  3020               	movlw	32
  9542  06AB  00F2               	movwf	___fldiv@a+2
  9543  06AC  3000               	movlw	0
  9544  06AD  00F1               	movwf	___fldiv@a+1
  9545  06AE  3000               	movlw	0
  9546  06AF  00F0               	movwf	___fldiv@a
  9547  06B0  0858               	movf	(efgtoa@u+3)^(0+128),w
  9548  06B1  00F7               	movwf	___fldiv@b+3
  9549  06B2  0857               	movf	(efgtoa@u+2)^(0+128),w
  9550  06B3  00F6               	movwf	___fldiv@b+2
  9551  06B4  0856               	movf	(efgtoa@u+1)^(0+128),w
  9552  06B5  00F5               	movwf	___fldiv@b+1
  9553  06B6  0855               	movf	efgtoa@u^(0+128),w
  9554  06B7  00F4               	movwf	___fldiv@b
  9555  06B8  3196  2686  3181   	fcall	___fldiv
  9556  06BB  0873               	movf	?___fldiv+3,w
  9557  06BC  0021               	movlb	1	; select bank1
  9558  06BD  00D8               	movwf	(efgtoa@u+3)^(0+128)
  9559  06BE  0872               	movf	?___fldiv+2,w
  9560  06BF  00D7               	movwf	(efgtoa@u+2)^(0+128)
  9561  06C0  0871               	movf	?___fldiv+1,w
  9562  06C1  00D6               	movwf	(efgtoa@u+1)^(0+128)
  9563  06C2  0870               	movf	?___fldiv,w
  9564  06C3  00D5               	movwf	efgtoa@u^(0+128)
  9565                           
  9566                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  9567  06C4  30FF               	movlw	255
  9568  06C5  07B0               	addwf	efgtoa@ne^(0+128),f
  9569  06C6  30FF               	movlw	255
  9570  06C7  3DB1               	addwfc	(efgtoa@ne+1)^(0+128),f
  9571                           
  9572                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  9573  06C8  3001               	movlw	1
  9574  06C9  07CB               	addwf	efgtoa@i^(0+128),f
  9575  06CA  3000               	movlw	0
  9576  06CB  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  9577  06CC                     l4349:
  9578                           
  9579                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  9580  06CC  084C               	movf	(efgtoa@i+1)^(0+128),w
  9581  06CD  3A80               	xorlw	128
  9582  06CE  0020               	movlb	0	; select bank0
  9583  06CF  00E9               	movwf	??_efgtoa
  9584  06D0  0021               	movlb	1	; select bank1
  9585  06D1  0833               	movf	(efgtoa@m+1)^(0+128),w
  9586  06D2  3A80               	xorlw	128
  9587  06D3  0020               	movlb	0	; select bank0
  9588  06D4  0269               	subwf	??_efgtoa,w
  9589  06D5  1D03               	skipz
  9590  06D6  2EDA               	goto	u6485
  9591  06D7  0021               	movlb	1	; select bank1
  9592  06D8  0832               	movf	efgtoa@m^(0+128),w
  9593  06D9  024B               	subwf	efgtoa@i^(0+128),w
  9594  06DA                     u6485:
  9595  06DA  1803               	skipnc
  9596  06DB  2EEA               	goto	l4353
  9597  06DC  0021               	movlb	1	; select bank1
  9598  06DD  0854               	movf	(efgtoa@n+1)^(0+128),w
  9599  06DE  3A80               	xorlw	128
  9600  06DF  0020               	movlb	0	; select bank0
  9601  06E0  00E9               	movwf	??_efgtoa
  9602  06E1  3080               	movlw	128
  9603  06E2  0269               	subwf	??_efgtoa,w
  9604  06E3  1D03               	skipz
  9605  06E4  2EE8               	goto	u6495
  9606  06E5  304B               	movlw	75
  9607  06E6  0021               	movlb	1	; select bank1
  9608  06E7  0253               	subwf	efgtoa@n^(0+128),w
  9609  06E8                     u6495:
  9610  06E8  1C03               	skipc
  9611  06E9  2DAE               	goto	l4301
  9612  06EA                     l4353:
  9613                           
  9614                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  9615  06EA  0021               	movlb	1	; select bank1
  9616  06EB  082E               	movf	efgtoa@pp^(0+128),w
  9617  06EC  042F               	iorwf	(efgtoa@pp+1)^(0+128),w
  9618  06ED  1903               	btfsc	3,2
  9619  06EE  1E6E               	btfss	_flags^(0+128),4
  9620  06EF  2F01               	goto	l4361
  9621                           
  9622                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  9623  06F0  302E               	movlw	46
  9624  06F1  0020               	movlb	0	; select bank0
  9625  06F2  00E9               	movwf	??_efgtoa
  9626  06F3  0021               	movlb	1	; select bank1
  9627  06F4  0853               	movf	efgtoa@n^(0+128),w
  9628  06F5  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9629  06F6  0086               	movwf	6
  9630  06F7  3001               	movlw	1	; select bank3/4
  9631  06F8  0087               	movwf	7
  9632  06F9  0020               	movlb	0	; select bank0
  9633  06FA  0869               	movf	??_efgtoa,w
  9634  06FB  0081               	movwf	1
  9635  06FC  3001               	movlw	1
  9636  06FD  0021               	movlb	1	; select bank1
  9637  06FE  07D3               	addwf	efgtoa@n^(0+128),f
  9638  06FF  3000               	movlw	0
  9639  0700  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  9640  0701                     l4361:
  9641                           
  9642                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  9643  0701  0853               	movf	efgtoa@n^(0+128),w
  9644  0702  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9645  0703  0086               	movwf	6
  9646  0704  3001               	movlw	1	; select bank3/4
  9647  0705  0087               	movwf	7
  9648  0706  0181               	clrf	1
  9649                           
  9650                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  9651  0707  3065               	movlw	101
  9652  0708  0641               	xorwf	efgtoa@nmode^(0+128),w
  9653  0709  1D03               	btfss	3,2
  9654  070A  2FD2               	goto	l4423
  9655                           
  9656                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  9657  070B  304F               	movlw	79
  9658  070C  00CB               	movwf	efgtoa@i^(0+128)
  9659  070D  3000               	movlw	0
  9660  070E  00CC               	movwf	(efgtoa@i^(0+128)+1)
  9661                           
  9662                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  9663  070F  084B               	movf	efgtoa@i^(0+128),w
  9664  0710  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9665  0711  0086               	movwf	6
  9666  0712  3001               	movlw	1	; select bank3/4
  9667  0713  0087               	movwf	7
  9668  0714  0181               	clrf	1
  9669                           
  9670                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  9671  0715  01BA               	clrf	efgtoa@sign^(0+128)
  9672  0716  01BB               	clrf	(efgtoa@sign+1)^(0+128)
  9673                           
  9674                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  9675  0717  1FD2               	btfss	(efgtoa@e+1)^(0+128),7
  9676  0718  2F22               	goto	l4377
  9677                           
  9678                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  9679  0719  3001               	movlw	1
  9680  071A  00BA               	movwf	efgtoa@sign^(0+128)
  9681  071B  3000               	movlw	0
  9682  071C  00BB               	movwf	(efgtoa@sign^(0+128)+1)
  9683                           
  9684                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  9685  071D  09D1               	comf	efgtoa@e^(0+128),f
  9686  071E  09D2               	comf	(efgtoa@e+1)^(0+128),f
  9687  071F  0AD1               	incf	efgtoa@e^(0+128),f
  9688  0720  1903               	skipnz
  9689  0721  0AD2               	incf	(efgtoa@e+1)^(0+128),f
  9690  0722                     l4377:
  9691                           
  9692                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  9693  0722  3002               	movlw	2
  9694  0723  00BC               	movwf	efgtoa@p^(0+128)
  9695  0724  3000               	movlw	0
  9696  0725  00BD               	movwf	(efgtoa@p^(0+128)+1)
  9697  0726                     l4389:	
  9698                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  9699                           
  9700                           
  9701                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  9702  0726  0851               	movf	efgtoa@e^(0+128),w
  9703  0727  0452               	iorwf	(efgtoa@e+1)^(0+128),w
  9704  0728  1903               	btfsc	3,2
  9705  0729  2F61               	goto	l4391
  9706  072A                     l4379:
  9707                           
  9708                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  9709  072A  30FF               	movlw	255
  9710  072B  0021               	movlb	1	; select bank1
  9711  072C  07CB               	addwf	efgtoa@i^(0+128),f
  9712  072D  30FF               	movlw	255
  9713  072E  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  9714                           
  9715                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  9716  072F  300A               	movlw	10
  9717  0730  00F0               	movwf	___awmod@divisor
  9718  0731  3000               	movlw	0
  9719  0732  00F1               	movwf	___awmod@divisor+1
  9720  0733  0852               	movf	(efgtoa@e+1)^(0+128),w
  9721  0734  00F3               	movwf	___awmod@dividend+1
  9722  0735  0851               	movf	efgtoa@e^(0+128),w
  9723  0736  00F2               	movwf	___awmod@dividend
  9724  0737  319B  23AA  3181   	fcall	___awmod
  9725  073A  0870               	movf	?___awmod,w
  9726  073B  3E30               	addlw	48
  9727  073C  0020               	movlb	0	; select bank0
  9728  073D  00E9               	movwf	??_efgtoa
  9729  073E  0021               	movlb	1	; select bank1
  9730  073F  084B               	movf	efgtoa@i^(0+128),w
  9731  0740  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9732  0741  0086               	movwf	6
  9733  0742  3001               	movlw	1	; select bank3/4
  9734  0743  0087               	movwf	7
  9735  0744  0020               	movlb	0	; select bank0
  9736  0745  0869               	movf	??_efgtoa,w
  9737  0746  0081               	movwf	1
  9738                           
  9739                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  9740  0747  300A               	movlw	10
  9741  0748  00F0               	movwf	___awdiv@divisor
  9742  0749  3000               	movlw	0
  9743  074A  00F1               	movwf	___awdiv@divisor+1
  9744  074B  0021               	movlb	1	; select bank1
  9745  074C  0852               	movf	(efgtoa@e+1)^(0+128),w
  9746  074D  00F3               	movwf	___awdiv@dividend+1
  9747  074E  0851               	movf	efgtoa@e^(0+128),w
  9748  074F  00F2               	movwf	___awdiv@dividend
  9749  0750  319D  251C  3181   	fcall	___awdiv
  9750  0753  0871               	movf	?___awdiv+1,w
  9751  0754  0021               	movlb	1	; select bank1
  9752  0755  00D2               	movwf	(efgtoa@e+1)^(0+128)
  9753  0756  0870               	movf	?___awdiv,w
  9754  0757  00D1               	movwf	efgtoa@e^(0+128)
  9755                           
  9756                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  9757  0758  30FF               	movlw	255
  9758  0759  07BC               	addwf	efgtoa@p^(0+128),f
  9759  075A  30FF               	movlw	255
  9760  075B  3DBD               	addwfc	(efgtoa@p+1)^(0+128),f
  9761                           
  9762                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  9763  075C  30FF               	movlw	255
  9764  075D  07BF               	addwf	efgtoa@w^(0+128),f
  9765  075E  30FF               	movlw	255
  9766  075F  3DC0               	addwfc	(efgtoa@w+1)^(0+128),f
  9767  0760  2F26               	goto	l4389
  9768  0761                     l4391:
  9769  0761  083D               	movf	(efgtoa@p+1)^(0+128),w
  9770  0762  3A80               	xorlw	128
  9771  0763  0020               	movlb	0	; select bank0
  9772  0764  00E9               	movwf	??_efgtoa
  9773  0765  3080               	movlw	128
  9774  0766  0269               	subwf	??_efgtoa,w
  9775  0767  1D03               	skipz
  9776  0768  2F6C               	goto	u6555
  9777  0769  3001               	movlw	1
  9778  076A  0021               	movlb	1	; select bank1
  9779  076B  023C               	subwf	efgtoa@p^(0+128),w
  9780  076C                     u6555:
  9781  076C  1803               	skipnc
  9782  076D  2F2A               	goto	l4379
  9783                           
  9784                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  9785  076E  30FF               	movlw	255
  9786  076F  0021               	movlb	1	; select bank1
  9787  0770  07CB               	addwf	efgtoa@i^(0+128),f
  9788  0771  30FF               	movlw	255
  9789  0772  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  9790                           
  9791                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  9792  0773  083A               	movf	efgtoa@sign^(0+128),w
  9793  0774  043B               	iorwf	(efgtoa@sign+1)^(0+128),w
  9794  0775  1D03               	btfss	3,2
  9795  0776  2F79               	goto	l4399
  9796  0777  302B               	movlw	43
  9797  0778  2F7A               	goto	L8
  9798  0779                     l4399:
  9799  0779  302D               	movlw	45
  9800  077A                     L8:
  9801  077A  00A6               	movwf	_efgtoa$963^(0+128)
  9802  077B  3000               	movlw	0
  9803  077C  00A7               	movwf	(_efgtoa$963^(0+128)+1)
  9804  077D  0826               	movf	_efgtoa$963^(0+128),w
  9805  077E  0020               	movlb	0	; select bank0
  9806  077F  00E9               	movwf	??_efgtoa
  9807  0780  0021               	movlb	1	; select bank1
  9808  0781  084B               	movf	efgtoa@i^(0+128),w
  9809  0782  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9810  0783  0086               	movwf	6
  9811  0784  3001               	movlw	1	; select bank3/4
  9812  0785  0087               	movwf	7
  9813  0786  0020               	movlb	0	; select bank0
  9814  0787  0869               	movf	??_efgtoa,w
  9815  0788  0081               	movwf	1
  9816                           
  9817                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  9818  0789  30FF               	movlw	255
  9819  078A  0021               	movlb	1	; select bank1
  9820  078B  07BF               	addwf	efgtoa@w^(0+128),f
  9821  078C  30FF               	movlw	255
  9822  078D  3DC0               	addwfc	(efgtoa@w+1)^(0+128),f
  9823                           
  9824                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  9825  078E  30FF               	movlw	255
  9826  078F  07CB               	addwf	efgtoa@i^(0+128),f
  9827  0790  30FF               	movlw	255
  9828  0791  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  9829  0792  0020               	movlb	0	; select bank0
  9830  0793  0868               	movf	efgtoa@c,w
  9831  0794  3EBF               	addlw	191
  9832  0795  00E9               	movwf	??_efgtoa
  9833  0796  30FF               	movlw	255
  9834  0797  1803               	skipnc
  9835  0798  3000               	movlw	0
  9836  0799  00EA               	movwf	??_efgtoa+1
  9837  079A  3000               	movlw	0
  9838  079B  026A               	subwf	??_efgtoa+1,w
  9839  079C  301A               	movlw	26
  9840  079D  1903               	skipnz
  9841  079E  0269               	subwf	??_efgtoa,w
  9842  079F  1803               	btfsc	3,0
  9843  07A0  2FA3               	goto	u6570
  9844  07A1  3001               	movlw	1
  9845  07A2  2FA4               	goto	u6580
  9846  07A3                     u6570:
  9847  07A3  3000               	movlw	0
  9848  07A4                     u6580:
  9849  07A4  00EB               	movwf	??_efgtoa+2
  9850  07A5  01EC               	clrf	??_efgtoa+3
  9851  07A6  086B               	movf	??_efgtoa+2,w
  9852  07A7  0021               	movlb	1	; select bank1
  9853  07A8  00AA               	movwf	_efgtoa$965^(0+128)
  9854  07A9  0020               	movlb	0	; select bank0
  9855  07AA  086C               	movf	??_efgtoa+3,w
  9856  07AB  0021               	movlb	1	; select bank1
  9857  07AC  00AB               	movwf	(_efgtoa$965+1)^(0+128)
  9858  07AD  082A               	movf	_efgtoa$965^(0+128),w
  9859  07AE  042B               	iorwf	(_efgtoa$965+1)^(0+128),w
  9860  07AF  1D03               	btfss	3,2
  9861  07B0  2FB3               	goto	l4415
  9862  07B1  3065               	movlw	101
  9863  07B2  2FB4               	goto	L9
  9864  07B3                     l4415:
  9865  07B3  3045               	movlw	69
  9866  07B4                     L9:
  9867  07B4  00A8               	movwf	_efgtoa$964^(0+128)
  9868  07B5  3000               	movlw	0
  9869  07B6  00A9               	movwf	(_efgtoa$964^(0+128)+1)
  9870  07B7  0828               	movf	_efgtoa$964^(0+128),w
  9871  07B8  0020               	movlb	0	; select bank0
  9872  07B9  00E9               	movwf	??_efgtoa
  9873  07BA  0021               	movlb	1	; select bank1
  9874  07BB  084B               	movf	efgtoa@i^(0+128),w
  9875  07BC  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9876  07BD  0086               	movwf	6
  9877  07BE  3001               	movlw	1	; select bank3/4
  9878  07BF  0087               	movwf	7
  9879  07C0  0020               	movlb	0	; select bank0
  9880  07C1  0869               	movf	??_efgtoa,w
  9881  07C2  0081               	movwf	1
  9882                           
  9883                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  9884  07C3  30FF               	movlw	255
  9885  07C4  0021               	movlb	1	; select bank1
  9886  07C5  07BF               	addwf	efgtoa@w^(0+128),f
  9887  07C6  30FF               	movlw	255
  9888  07C7  3DC0               	addwfc	(efgtoa@w+1)^(0+128),f
  9889                           
  9890                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  9891  07C8  084B               	movf	efgtoa@i^(0+128),w
  9892  07C9  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9893  07CA  00F0               	movwf	strcpy@src
  9894  07CB  3001               	movlw	1
  9895  07CC  00F1               	movwf	strcpy@src+1
  9896  07CD  0853               	movf	efgtoa@n^(0+128),w
  9897  07CE  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9898  07CF  319A  2293  3181   	fcall	_strcpy
  9899  07D2                     l4423:
  9900                           
  9901                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 524:     return p
      +                          ad(fp, &dbuf[0], w);
  9902  07D2  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
  9903  07D3  0020               	movlb	0	; select bank0
  9904  07D4  00E9               	movwf	??_efgtoa
  9905  07D5  0869               	movf	??_efgtoa,w
  9906  07D6  00A7               	movwf	pad@buf
  9907  07D7  0021               	movlb	1	; select bank1
  9908  07D8  0840               	movf	(efgtoa@w+1)^(0+128),w
  9909  07D9  0020               	movlb	0	; select bank0
  9910  07DA  00A9               	movwf	pad@p+1
  9911  07DB  0021               	movlb	1	; select bank1
  9912  07DC  083F               	movf	efgtoa@w^(0+128),w
  9913  07DD  0020               	movlb	0	; select bank0
  9914  07DE  00A8               	movwf	pad@p
  9915  07DF  0021               	movlb	1	; select bank1
  9916  07E0  083E               	movf	efgtoa@fp^(0+128),w
  9917  07E1  319C  24CC         	fcall	_pad
  9918  07E3  0020               	movlb	0	; select bank0
  9919  07E4  0828               	movf	?_pad+1,w
  9920  07E5  00E5               	movwf	?_efgtoa+1
  9921  07E6  0827               	movf	?_pad,w
  9922  07E7  00E4               	movwf	?_efgtoa
  9923  07E8  0008               	return
  9924  07E9                     __end_of_efgtoa:
  9925                           
  9926                           	psect	text16
  9927  1AB2                     __ptext16:	
  9928 ;; *************** function _tolower *****************
  9929 ;; Defined at:
  9930 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  9931 ;; Parameters:    Size  Location     Type
  9932 ;;  c               2    6[COMMON] int 
  9933 ;; Auto vars:     Size  Location     Type
  9934 ;;		None
  9935 ;; Return value:  Size  Location     Type
  9936 ;;                  2    6[COMMON] int 
  9937 ;; Registers used:
  9938 ;;		wreg, status,2, status,0
  9939 ;; Tracked objects:
  9940 ;;		On entry : 0/0
  9941 ;;		On exit  : 0/0
  9942 ;;		Unchanged: 0/0
  9943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9944 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9945 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9946 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9947 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9948 ;;Total ram usage:        8 bytes
  9949 ;; Hardware stack levels used: 1
  9950 ;; Hardware stack levels required when called: 1
  9951 ;; This function calls:
  9952 ;;		_isupper
  9953 ;; This function is called by:
  9954 ;;		_efgtoa
  9955 ;;		_vfpfcnvrt
  9956 ;; This function uses a non-reentrant model
  9957 ;;
  9958                           
  9959                           
  9960                           ;psect for function _tolower
  9961  1AB2                     _tolower:
  9962                           
  9963                           ;incstack = 0
  9964                           ; Regs used in _tolower: [wreg+status,2+status,0]
  9965  1AB2  0876               	movf	tolower@c,w
  9966  1AB3  3EBF               	addlw	191
  9967  1AB4  00F8               	movwf	??_tolower
  9968  1AB5  30FF               	movlw	255
  9969  1AB6  3D77               	addwfc	tolower@c+1,w
  9970  1AB7  00F9               	movwf	??_tolower+1
  9971  1AB8  3000               	movlw	0
  9972  1AB9  0279               	subwf	??_tolower+1,w
  9973  1ABA  301A               	movlw	26
  9974  1ABB  1903               	skipnz
  9975  1ABC  0278               	subwf	??_tolower,w
  9976  1ABD  1803               	btfsc	3,0
  9977  1ABE  2AC1               	goto	u5650
  9978  1ABF  3001               	movlw	1
  9979  1AC0  2AC2               	goto	u5660
  9980  1AC1                     u5650:
  9981  1AC1  3000               	movlw	0
  9982  1AC2                     u5660:
  9983  1AC2  00FA               	movwf	??_tolower+2
  9984  1AC3  01FB               	clrf	??_tolower+3
  9985  1AC4  087A               	movf	??_tolower+2,w
  9986  1AC5  00FC               	movwf	_tolower$1131
  9987  1AC6  087B               	movf	??_tolower+3,w
  9988  1AC7  00FD               	movwf	_tolower$1131+1
  9989  1AC8  087C               	movf	_tolower$1131,w
  9990  1AC9  047D               	iorwf	_tolower$1131+1,w
  9991  1ACA  1903               	btfsc	3,2
  9992  1ACB  0008               	return
  9993  1ACC  3020               	movlw	32
  9994  1ACD  0476               	iorwf	tolower@c,w
  9995  1ACE  00F6               	movwf	?_tolower
  9996  1ACF  3000               	movlw	0
  9997  1AD0  0477               	iorwf	tolower@c+1,w
  9998  1AD1  00F7               	movwf	?_tolower+1
  9999  1AD2  0008               	return
 10000  1AD3                     __end_of_tolower:
 10001                           
 10002                           	psect	text17
 10003  196E                     __ptext17:	
 10004 ;; *************** function _isupper *****************
 10005 ;; Defined at:
 10006 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
 10007 ;; Parameters:    Size  Location     Type
 10008 ;;  c               2    0[COMMON] int 
 10009 ;; Auto vars:     Size  Location     Type
 10010 ;;		None
 10011 ;; Return value:  Size  Location     Type
 10012 ;;                  2    0[COMMON] int 
 10013 ;; Registers used:
 10014 ;;		wreg, status,2, status,0
 10015 ;; Tracked objects:
 10016 ;;		On entry : 0/0
 10017 ;;		On exit  : 0/0
 10018 ;;		Unchanged: 0/0
 10019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10020 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10022 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10023 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10024 ;;Total ram usage:        6 bytes
 10025 ;; Hardware stack levels used: 1
 10026 ;; This function calls:
 10027 ;;		Nothing
 10028 ;; This function is called by:
 10029 ;;		_efgtoa
 10030 ;;		_xtoa
 10031 ;;		_vfpfcnvrt
 10032 ;;		_tolower
 10033 ;; This function uses a non-reentrant model
 10034 ;;
 10035                           
 10036                           
 10037                           ;psect for function _isupper
 10038  196E                     _isupper:
 10039                           
 10040                           ;incstack = 0
 10041                           ; Regs used in _isupper: [wreg+status,2+status,0]
 10042  196E  0870               	movf	isupper@c,w
 10043  196F  3EBF               	addlw	191
 10044  1970  00F2               	movwf	??_isupper
 10045  1971  30FF               	movlw	255
 10046  1972  3D71               	addwfc	isupper@c+1,w
 10047  1973  00F3               	movwf	??_isupper+1
 10048  1974  3000               	movlw	0
 10049  1975  0273               	subwf	??_isupper+1,w
 10050  1976  301A               	movlw	26
 10051  1977  1903               	skipnz
 10052  1978  0272               	subwf	??_isupper,w
 10053  1979  1803               	btfsc	3,0
 10054  197A  297D               	goto	u4290
 10055  197B  3001               	movlw	1
 10056  197C  297E               	goto	u4300
 10057  197D                     u4290:
 10058  197D  3000               	movlw	0
 10059  197E                     u4300:
 10060  197E  00F4               	movwf	??_isupper+2
 10061  197F  01F5               	clrf	??_isupper+3
 10062  1980  0874               	movf	??_isupper+2,w
 10063  1981  00F0               	movwf	?_isupper
 10064  1982  0875               	movf	??_isupper+3,w
 10065  1983  00F1               	movwf	?_isupper+1
 10066  1984  0008               	return
 10067  1985                     __end_of_isupper:
 10068                           
 10069                           	psect	text18
 10070  1A93                     __ptext18:	
 10071 ;; *************** function _strcpy *****************
 10072 ;; Defined at:
 10073 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
 10074 ;; Parameters:    Size  Location     Type
 10075 ;;  dest            1    wreg     PTR unsigned char 
 10076 ;;		 -> dbuf(80), 
 10077 ;;  src             2    0[COMMON] PTR const unsigned char 
 10078 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
 10079 ;;		 -> dbuf(80), 
 10080 ;; Auto vars:     Size  Location     Type
 10081 ;;  dest            1    7[COMMON] PTR unsigned char 
 10082 ;;		 -> dbuf(80), 
 10083 ;;  s               2    4[COMMON] PTR const unsigned char 
 10084 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
 10085 ;;		 -> dbuf(80), 
 10086 ;;  d               1    6[COMMON] PTR unsigned char 
 10087 ;;		 -> dbuf(80), 
 10088 ;; Return value:  Size  Location     Type
 10089 ;;                  1    wreg      PTR unsigned char 
 10090 ;; Registers used:
 10091 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 10092 ;; Tracked objects:
 10093 ;;		On entry : 0/0
 10094 ;;		On exit  : 0/0
 10095 ;;		Unchanged: 0/0
 10096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10097 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10098 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10099 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10100 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10101 ;;Total ram usage:        8 bytes
 10102 ;; Hardware stack levels used: 1
 10103 ;; This function calls:
 10104 ;;		Nothing
 10105 ;; This function is called by:
 10106 ;;		_efgtoa
 10107 ;; This function uses a non-reentrant model
 10108 ;;
 10109                           
 10110                           
 10111                           ;psect for function _strcpy
 10112  1A93                     _strcpy:
 10113                           
 10114                           ;incstack = 0
 10115                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
 10116                           ;strcpy@dest stored from wreg
 10117  1A93  00F7               	movwf	strcpy@dest
 10118  1A94  0871               	movf	strcpy@src+1,w
 10119  1A95  00F5               	movwf	strcpy@s+1
 10120  1A96  0870               	movf	strcpy@src,w
 10121  1A97  00F4               	movwf	strcpy@s
 10122  1A98  0877               	movf	strcpy@dest,w
 10123  1A99  00F2               	movwf	??_strcpy
 10124  1A9A  0872               	movf	??_strcpy,w
 10125  1A9B  00F6               	movwf	strcpy@d
 10126  1A9C                     l3993:
 10127  1A9C  0876               	movf	strcpy@d,w
 10128  1A9D  0086               	movwf	6
 10129  1A9E  3001               	movlw	1	; select bank2/3
 10130  1A9F  0087               	movwf	7
 10131  1AA0  0AF6               	incf	strcpy@d,f
 10132  1AA1  0875               	movf	strcpy@s+1,w
 10133  1AA2  00F3               	movwf	??_strcpy+1
 10134  1AA3  0874               	movf	strcpy@s,w
 10135  1AA4  00F2               	movwf	??_strcpy
 10136  1AA5  0AF4               	incf	strcpy@s,f
 10137  1AA6  1903               	skipnz
 10138  1AA7  0AF5               	incf	strcpy@s+1,f
 10139  1AA8  0872               	movf	??_strcpy,w
 10140  1AA9  0084               	movwf	4
 10141  1AAA  0873               	movf	??_strcpy+1,w
 10142  1AAB  0085               	movwf	5
 10143  1AAC  0800               	movf	0,w	;code access
 10144  1AAD  3FC0               	movwi [0]fsr1
 10145  1AAE  0889               	movf	9,f
 10146  1AAF  1903               	btfsc	3,2
 10147  1AB0  0008               	return
 10148  1AB1  2A9C               	goto	l3993
 10149  1AB2                     __end_of_strcpy:
 10150                           
 10151                           	psect	text19
 10152  10CB                     __ptext19:	
 10153 ;; *************** function _floorf *****************
 10154 ;; Defined at:
 10155 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
 10156 ;; Parameters:    Size  Location     Type
 10157 ;;  x               4   13[BANK0 ] float 
 10158 ;; Auto vars:     Size  Location     Type
 10159 ;;  u               4   29[BANK0 ] struct .
 10160 ;;  m               4   23[BANK0 ] unsigned long 
 10161 ;;  e               2   27[BANK0 ] int 
 10162 ;; Return value:  Size  Location     Type
 10163 ;;                  4   13[BANK0 ] float 
 10164 ;; Registers used:
 10165 ;;		wreg, status,2, status,0
 10166 ;; Tracked objects:
 10167 ;;		On entry : 0/0
 10168 ;;		On exit  : 0/0
 10169 ;;		Unchanged: 0/0
 10170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10171 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10172 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10173 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10174 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10175 ;;Total ram usage:       20 bytes
 10176 ;; Hardware stack levels used: 1
 10177 ;; This function calls:
 10178 ;;		Nothing
 10179 ;; This function is called by:
 10180 ;;		_efgtoa
 10181 ;; This function uses a non-reentrant model
 10182 ;;
 10183                           
 10184                           
 10185                           ;psect for function _floorf
 10186  10CB                     _floorf:
 10187                           
 10188                           ;incstack = 0
 10189                           ; Regs used in _floorf: [wreg+status,2+status,0]
 10190  10CB  0022               	movlb	2	; select bank2
 10191  10CC  0852               	movf	(floorf@F527+3)^(0+256),w
 10192  10CD  0020               	movlb	0	; select bank0
 10193  10CE  00C0               	movwf	floorf@u+3
 10194  10CF  0022               	movlb	2	; select bank2
 10195  10D0  0851               	movf	(floorf@F527+2)^(0+256),w
 10196  10D1  0020               	movlb	0	; select bank0
 10197  10D2  00BF               	movwf	floorf@u+2
 10198  10D3  0022               	movlb	2	; select bank2
 10199  10D4  0850               	movf	(floorf@F527+1)^(0+256),w
 10200  10D5  0020               	movlb	0	; select bank0
 10201  10D6  00BE               	movwf	floorf@u+1
 10202  10D7  0022               	movlb	2	; select bank2
 10203  10D8  084F               	movf	floorf@F527^(0+256),w
 10204  10D9  0020               	movlb	0	; select bank0
 10205  10DA  00BD               	movwf	floorf@u
 10206  10DB  0830               	movf	floorf@x+3,w
 10207  10DC  00C0               	movwf	floorf@u+3
 10208  10DD  082F               	movf	floorf@x+2,w
 10209  10DE  00BF               	movwf	floorf@u+2
 10210  10DF  082E               	movf	floorf@x+1,w
 10211  10E0  00BE               	movwf	floorf@u+1
 10212  10E1  082D               	movf	floorf@x,w
 10213  10E2  00BD               	movwf	floorf@u
 10214  10E3  083D               	movf	floorf@u,w
 10215  10E4  00B1               	movwf	??_floorf
 10216  10E5  083E               	movf	floorf@u+1,w
 10217  10E6  00B2               	movwf	??_floorf+1
 10218  10E7  083F               	movf	floorf@u+2,w
 10219  10E8  00B3               	movwf	??_floorf+2
 10220  10E9  0840               	movf	floorf@u+3,w
 10221  10EA  00B4               	movwf	??_floorf+3
 10222  10EB  3017               	movlw	23
 10223  10EC                     u5685:
 10224  10EC  36B4               	lsrf	??_floorf+3,f
 10225  10ED  0CB3               	rrf	??_floorf+2,f
 10226  10EE  0CB2               	rrf	??_floorf+1,f
 10227  10EF  0CB1               	rrf	??_floorf,f
 10228  10F0  0B89               	decfsz	9,f
 10229  10F1  28EC               	goto	u5685
 10230  10F2  30FF               	movlw	255
 10231  10F3  0531               	andwf	??_floorf,w
 10232  10F4  00B5               	movwf	??_floorf+4
 10233  10F5  3000               	movlw	0
 10234  10F6  0532               	andwf	??_floorf+1,w
 10235  10F7  00B6               	movwf	??_floorf+5
 10236  10F8  0835               	movf	??_floorf+4,w
 10237  10F9  3E81               	addlw	129
 10238  10FA  00BB               	movwf	floorf@e
 10239  10FB  30FF               	movlw	255
 10240  10FC  3D36               	addwfc	??_floorf+5,w
 10241  10FD  00BC               	movwf	floorf@e+1
 10242  10FE  083C               	movf	floorf@e+1,w
 10243  10FF  3A80               	xorlw	128
 10244  1100  00B1               	movwf	??_floorf
 10245  1101  3080               	movlw	128
 10246  1102  0231               	subwf	??_floorf,w
 10247  1103  1D03               	skipz
 10248  1104  2907               	goto	u5695
 10249  1105  3017               	movlw	23
 10250  1106  023B               	subwf	floorf@e,w
 10251  1107                     u5695:
 10252  1107  1803               	btfsc	3,0
 10253  1108  0008               	return
 10254  1109  0020               	movlb	0	; select bank0
 10255  110A  1BBC               	btfsc	floorf@e+1,7
 10256  110B  2964               	goto	l4025
 10257  110C  30FF               	movlw	255
 10258  110D  00B1               	movwf	??_floorf
 10259  110E  30FF               	movlw	255
 10260  110F  00B2               	movwf	??_floorf+1
 10261  1110  307F               	movlw	127
 10262  1111  00B3               	movwf	??_floorf+2
 10263  1112  3000               	movlw	0
 10264  1113  00B4               	movwf	??_floorf+3
 10265  1114  0A3B               	incf	floorf@e,w
 10266  1115  291A               	goto	u5710
 10267  1116                     u5715:
 10268  1116  37B4               	asrf	??_floorf+3,f
 10269  1117  0CB3               	rrf	??_floorf+2,f
 10270  1118  0CB2               	rrf	??_floorf+1,f
 10271  1119  0CB1               	rrf	??_floorf,f
 10272  111A                     u5710:
 10273  111A  0B89               	decfsz	9,f
 10274  111B  2916               	goto	u5715
 10275  111C  0834               	movf	??_floorf+3,w
 10276  111D  00BA               	movwf	floorf@m+3
 10277  111E  0833               	movf	??_floorf+2,w
 10278  111F  00B9               	movwf	floorf@m+2
 10279  1120  0832               	movf	??_floorf+1,w
 10280  1121  00B8               	movwf	floorf@m+1
 10281  1122  0831               	movf	??_floorf,w
 10282  1123  00B7               	movwf	floorf@m
 10283  1124  083D               	movf	floorf@u,w
 10284  1125  0537               	andwf	floorf@m,w
 10285  1126  00B1               	movwf	??_floorf
 10286  1127  083E               	movf	floorf@u+1,w
 10287  1128  0538               	andwf	floorf@m+1,w
 10288  1129  00B2               	movwf	??_floorf+1
 10289  112A  083F               	movf	floorf@u+2,w
 10290  112B  0539               	andwf	floorf@m+2,w
 10291  112C  00B3               	movwf	??_floorf+2
 10292  112D  0840               	movf	floorf@u+3,w
 10293  112E  053A               	andwf	floorf@m+3,w
 10294  112F  00B4               	movwf	??_floorf+3
 10295  1130  0834               	movf	??_floorf+3,w
 10296  1131  0433               	iorwf	??_floorf+2,w
 10297  1132  0432               	iorwf	??_floorf+1,w
 10298  1133  0431               	iorwf	??_floorf,w
 10299  1134  1903               	btfsc	3,2
 10300  1135  0008               	return
 10301  1136  083D               	movf	floorf@u,w
 10302  1137  00B1               	movwf	??_floorf
 10303  1138  083E               	movf	floorf@u+1,w
 10304  1139  00B2               	movwf	??_floorf+1
 10305  113A  083F               	movf	floorf@u+2,w
 10306  113B  00B3               	movwf	??_floorf+2
 10307  113C  0840               	movf	floorf@u+3,w
 10308  113D  00B4               	movwf	??_floorf+3
 10309  113E  301F               	movlw	31
 10310  113F                     u5735:
 10311  113F  36B4               	lsrf	??_floorf+3,f
 10312  1140  0CB3               	rrf	??_floorf+2,f
 10313  1141  0CB2               	rrf	??_floorf+1,f
 10314  1142  0CB1               	rrf	??_floorf,f
 10315  1143  0B89               	decfsz	9,f
 10316  1144  293F               	goto	u5735
 10317  1145  0834               	movf	??_floorf+3,w
 10318  1146  0433               	iorwf	??_floorf+2,w
 10319  1147  0432               	iorwf	??_floorf+1,w
 10320  1148  0431               	iorwf	??_floorf,w
 10321  1149  1903               	skipnz
 10322  114A  2953               	goto	l4023
 10323  114B  0837               	movf	floorf@m,w
 10324  114C  07BD               	addwf	floorf@u,f
 10325  114D  0838               	movf	floorf@m+1,w
 10326  114E  3DBE               	addwfc	floorf@u+1,f
 10327  114F  0839               	movf	floorf@m+2,w
 10328  1150  3DBF               	addwfc	floorf@u+2,f
 10329  1151  083A               	movf	floorf@m+3,w
 10330  1152  3DC0               	addwfc	floorf@u+3,f
 10331  1153                     l4023:
 10332  1153  0937               	comf	floorf@m,w
 10333  1154  00B1               	movwf	??_floorf
 10334  1155  0938               	comf	floorf@m+1,w
 10335  1156  00B2               	movwf	??_floorf+1
 10336  1157  0939               	comf	floorf@m+2,w
 10337  1158  00B3               	movwf	??_floorf+2
 10338  1159  093A               	comf	floorf@m+3,w
 10339  115A  00B4               	movwf	??_floorf+3
 10340  115B  0831               	movf	??_floorf,w
 10341  115C  05BD               	andwf	floorf@u,f
 10342  115D  0832               	movf	??_floorf+1,w
 10343  115E  05BE               	andwf	floorf@u+1,f
 10344  115F  0833               	movf	??_floorf+2,w
 10345  1160  05BF               	andwf	floorf@u+2,f
 10346  1161  0834               	movf	??_floorf+3,w
 10347  1162  05C0               	andwf	floorf@u+3,f
 10348  1163  299A               	goto	l1177
 10349  1164                     l4025:
 10350  1164  083D               	movf	floorf@u,w
 10351  1165  00B1               	movwf	??_floorf
 10352  1166  083E               	movf	floorf@u+1,w
 10353  1167  00B2               	movwf	??_floorf+1
 10354  1168  083F               	movf	floorf@u+2,w
 10355  1169  00B3               	movwf	??_floorf+2
 10356  116A  0840               	movf	floorf@u+3,w
 10357  116B  00B4               	movwf	??_floorf+3
 10358  116C  301F               	movlw	31
 10359  116D                     u5755:
 10360  116D  36B4               	lsrf	??_floorf+3,f
 10361  116E  0CB3               	rrf	??_floorf+2,f
 10362  116F  0CB2               	rrf	??_floorf+1,f
 10363  1170  0CB1               	rrf	??_floorf,f
 10364  1171  0B89               	decfsz	9,f
 10365  1172  296D               	goto	u5755
 10366  1173  0834               	movf	??_floorf+3,w
 10367  1174  0433               	iorwf	??_floorf+2,w
 10368  1175  0432               	iorwf	??_floorf+1,w
 10369  1176  0431               	iorwf	??_floorf,w
 10370  1177  1D03               	skipz
 10371  1178  297D               	goto	l4029
 10372  1179  3000               	movlw	0
 10373  117A  00C0               	movwf	floorf@u+3
 10374  117B  3000               	movlw	0
 10375  117C  2995               	goto	L10
 10376  117D                     l4029:
 10377  117D  083D               	movf	floorf@u,w
 10378  117E  00B1               	movwf	??_floorf
 10379  117F  083E               	movf	floorf@u+1,w
 10380  1180  00B2               	movwf	??_floorf+1
 10381  1181  083F               	movf	floorf@u+2,w
 10382  1182  00B3               	movwf	??_floorf+2
 10383  1183  0840               	movf	floorf@u+3,w
 10384  1184  00B4               	movwf	??_floorf+3
 10385  1185  3001               	movlw	1
 10386  1186                     u5775:
 10387  1186  35B1               	lslf	??_floorf,f
 10388  1187  0DB2               	rlf	??_floorf+1,f
 10389  1188  0DB3               	rlf	??_floorf+2,f
 10390  1189  0DB4               	rlf	??_floorf+3,f
 10391  118A  0B89               	decfsz	9,f
 10392  118B  2986               	goto	u5775
 10393  118C  0834               	movf	??_floorf+3,w
 10394  118D  0433               	iorwf	??_floorf+2,w
 10395  118E  0432               	iorwf	??_floorf+1,w
 10396  118F  0431               	iorwf	??_floorf,w
 10397  1190  1903               	skipnz
 10398  1191  299A               	goto	l1177
 10399  1192  30BF               	movlw	191
 10400  1193  00C0               	movwf	floorf@u+3
 10401  1194  3080               	movlw	128
 10402  1195                     L10:
 10403  1195  00BF               	movwf	floorf@u+2
 10404  1196  3000               	movlw	0
 10405  1197  00BE               	movwf	floorf@u+1
 10406  1198  3000               	movlw	0
 10407  1199  00BD               	movwf	floorf@u
 10408  119A                     l1177:
 10409  119A  0840               	movf	floorf@u+3,w
 10410  119B  00B0               	movwf	?_floorf+3
 10411  119C  083F               	movf	floorf@u+2,w
 10412  119D  00AF               	movwf	?_floorf+2
 10413  119E  083E               	movf	floorf@u+1,w
 10414  119F  00AE               	movwf	?_floorf+1
 10415  11A0  083D               	movf	floorf@u,w
 10416  11A1  00AD               	movwf	?_floorf
 10417  11A2  0008               	return
 10418  11A3                     __end_of_floorf:
 10419                           
 10420                           	psect	text20
 10421  1E76                     __ptext20:	
 10422 ;; *************** function ___fpclassifyf *****************
 10423 ;; Defined at:
 10424 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
 10425 ;; Parameters:    Size  Location     Type
 10426 ;;  x               4    0[COMMON] float 
 10427 ;; Auto vars:     Size  Location     Type
 10428 ;;  u               4    2[BANK0 ] struct .
 10429 ;;  e               2    0[BANK0 ] int 
 10430 ;; Return value:  Size  Location     Type
 10431 ;;                  2    0[COMMON] int 
 10432 ;; Registers used:
 10433 ;;		wreg, status,2, status,0
 10434 ;; Tracked objects:
 10435 ;;		On entry : 0/0
 10436 ;;		On exit  : 0/0
 10437 ;;		Unchanged: 0/0
 10438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10439 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10440 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10441 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10442 ;;      Totals:        10       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10443 ;;Total ram usage:       16 bytes
 10444 ;; Hardware stack levels used: 1
 10445 ;; This function calls:
 10446 ;;		Nothing
 10447 ;; This function is called by:
 10448 ;;		_efgtoa
 10449 ;; This function uses a non-reentrant model
 10450 ;;
 10451                           
 10452                           
 10453                           ;psect for function ___fpclassifyf
 10454  1E76                     ___fpclassifyf:
 10455                           
 10456                           ;incstack = 0
 10457                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
 10458  1E76  0022               	movlb	2	; select bank2
 10459  1E77  0856               	movf	(___fpclassifyf@F465+3)^(0+256),w
 10460  1E78  0020               	movlb	0	; select bank0
 10461  1E79  00A5               	movwf	___fpclassifyf@u+3
 10462  1E7A  0022               	movlb	2	; select bank2
 10463  1E7B  0855               	movf	(___fpclassifyf@F465+2)^(0+256),w
 10464  1E7C  0020               	movlb	0	; select bank0
 10465  1E7D  00A4               	movwf	___fpclassifyf@u+2
 10466  1E7E  0022               	movlb	2	; select bank2
 10467  1E7F  0854               	movf	(___fpclassifyf@F465+1)^(0+256),w
 10468  1E80  0020               	movlb	0	; select bank0
 10469  1E81  00A3               	movwf	___fpclassifyf@u+1
 10470  1E82  0022               	movlb	2	; select bank2
 10471  1E83  0853               	movf	___fpclassifyf@F465^(0+256),w
 10472  1E84  0020               	movlb	0	; select bank0
 10473  1E85  00A2               	movwf	___fpclassifyf@u
 10474  1E86  0873               	movf	___fpclassifyf@x+3,w
 10475  1E87  00A5               	movwf	___fpclassifyf@u+3
 10476  1E88  0872               	movf	___fpclassifyf@x+2,w
 10477  1E89  00A4               	movwf	___fpclassifyf@u+2
 10478  1E8A  0871               	movf	___fpclassifyf@x+1,w
 10479  1E8B  00A3               	movwf	___fpclassifyf@u+1
 10480  1E8C  0870               	movf	___fpclassifyf@x,w
 10481  1E8D  00A2               	movwf	___fpclassifyf@u
 10482  1E8E  0822               	movf	___fpclassifyf@u,w
 10483  1E8F  00F4               	movwf	??___fpclassifyf
 10484  1E90  0823               	movf	___fpclassifyf@u+1,w
 10485  1E91  00F5               	movwf	??___fpclassifyf+1
 10486  1E92  0824               	movf	___fpclassifyf@u+2,w
 10487  1E93  00F6               	movwf	??___fpclassifyf+2
 10488  1E94  0825               	movf	___fpclassifyf@u+3,w
 10489  1E95  00F7               	movwf	??___fpclassifyf+3
 10490  1E96  3017               	movlw	23
 10491  1E97                     u5565:
 10492  1E97  36F7               	lsrf	??___fpclassifyf+3,f
 10493  1E98  0CF6               	rrf	??___fpclassifyf+2,f
 10494  1E99  0CF5               	rrf	??___fpclassifyf+1,f
 10495  1E9A  0CF4               	rrf	??___fpclassifyf,f
 10496  1E9B  0B89               	decfsz	9,f
 10497  1E9C  2E97               	goto	u5565
 10498  1E9D  30FF               	movlw	255
 10499  1E9E  0574               	andwf	??___fpclassifyf,w
 10500  1E9F  00A0               	movwf	___fpclassifyf@e
 10501  1EA0  3000               	movlw	0
 10502  1EA1  0575               	andwf	??___fpclassifyf+1,w
 10503  1EA2  00A1               	movwf	___fpclassifyf@e+1
 10504  1EA3  0820               	movf	___fpclassifyf@e,w
 10505  1EA4  0421               	iorwf	___fpclassifyf@e+1,w
 10506  1EA5  1D03               	btfss	3,2
 10507  1EA6  2EC6               	goto	l3981
 10508  1EA7  0822               	movf	___fpclassifyf@u,w
 10509  1EA8  00F4               	movwf	??___fpclassifyf
 10510  1EA9  0823               	movf	___fpclassifyf@u+1,w
 10511  1EAA  00F5               	movwf	??___fpclassifyf+1
 10512  1EAB  0824               	movf	___fpclassifyf@u+2,w
 10513  1EAC  00F6               	movwf	??___fpclassifyf+2
 10514  1EAD  0825               	movf	___fpclassifyf@u+3,w
 10515  1EAE  00F7               	movwf	??___fpclassifyf+3
 10516  1EAF  3001               	movlw	1
 10517  1EB0                     u5585:
 10518  1EB0  35F4               	lslf	??___fpclassifyf,f
 10519  1EB1  0DF5               	rlf	??___fpclassifyf+1,f
 10520  1EB2  0DF6               	rlf	??___fpclassifyf+2,f
 10521  1EB3  0DF7               	rlf	??___fpclassifyf+3,f
 10522  1EB4  0B89               	decfsz	9,f
 10523  1EB5  2EB0               	goto	u5585
 10524  1EB6  0877               	movf	??___fpclassifyf+3,w
 10525  1EB7  0476               	iorwf	??___fpclassifyf+2,w
 10526  1EB8  0475               	iorwf	??___fpclassifyf+1,w
 10527  1EB9  0474               	iorwf	??___fpclassifyf,w
 10528  1EBA  1D03               	skipz
 10529  1EBB  2EC1               	goto	l3977
 10530  1EBC  3002               	movlw	2
 10531  1EBD  00F0               	movwf	?___fpclassifyf
 10532  1EBE  3000               	movlw	0
 10533  1EBF  00F1               	movwf	?___fpclassifyf+1
 10534  1EC0  0008               	return
 10535  1EC1                     l3977:
 10536  1EC1  3003               	movlw	3
 10537  1EC2  00F0               	movwf	?___fpclassifyf
 10538  1EC3  3000               	movlw	0
 10539  1EC4  00F1               	movwf	?___fpclassifyf+1
 10540  1EC5  0008               	return
 10541  1EC6                     l3981:
 10542  1EC6  0A20               	incf	___fpclassifyf@e,w
 10543  1EC7  0421               	iorwf	___fpclassifyf@e+1,w
 10544  1EC8  1D03               	btfss	3,2
 10545  1EC9  2EE9               	goto	l3987
 10546  1ECA  0822               	movf	___fpclassifyf@u,w
 10547  1ECB  00F4               	movwf	??___fpclassifyf
 10548  1ECC  0823               	movf	___fpclassifyf@u+1,w
 10549  1ECD  00F5               	movwf	??___fpclassifyf+1
 10550  1ECE  0824               	movf	___fpclassifyf@u+2,w
 10551  1ECF  00F6               	movwf	??___fpclassifyf+2
 10552  1ED0  0825               	movf	___fpclassifyf@u+3,w
 10553  1ED1  00F7               	movwf	??___fpclassifyf+3
 10554  1ED2  3009               	movlw	9
 10555  1ED3                     u5615:
 10556  1ED3  35F4               	lslf	??___fpclassifyf,f
 10557  1ED4  0DF5               	rlf	??___fpclassifyf+1,f
 10558  1ED5  0DF6               	rlf	??___fpclassifyf+2,f
 10559  1ED6  0DF7               	rlf	??___fpclassifyf+3,f
 10560  1ED7  0B89               	decfsz	9,f
 10561  1ED8  2ED3               	goto	u5615
 10562  1ED9  0877               	movf	??___fpclassifyf+3,w
 10563  1EDA  0476               	iorwf	??___fpclassifyf+2,w
 10564  1EDB  0475               	iorwf	??___fpclassifyf+1,w
 10565  1EDC  0474               	iorwf	??___fpclassifyf,w
 10566  1EDD  1D03               	btfss	3,2
 10567  1EDE  2EE1               	goto	u5620
 10568  1EDF  3001               	movlw	1
 10569  1EE0  2EE2               	goto	u5630
 10570  1EE1                     u5620:
 10571  1EE1  3000               	movlw	0
 10572  1EE2                     u5630:
 10573  1EE2  00F8               	movwf	??___fpclassifyf+4
 10574  1EE3  01F9               	clrf	??___fpclassifyf+5
 10575  1EE4  0878               	movf	??___fpclassifyf+4,w
 10576  1EE5  00F0               	movwf	?___fpclassifyf
 10577  1EE6  0879               	movf	??___fpclassifyf+5,w
 10578  1EE7  00F1               	movwf	?___fpclassifyf+1
 10579  1EE8  0008               	return
 10580  1EE9                     l3987:
 10581  1EE9  3004               	movlw	4
 10582  1EEA  00F0               	movwf	?___fpclassifyf
 10583  1EEB  3000               	movlw	0
 10584  1EEC  00F1               	movwf	?___fpclassifyf+1
 10585  1EED  0008               	return
 10586  1EEE                     __end_of___fpclassifyf:
 10587                           
 10588                           	psect	text21
 10589  1E10                     __ptext21:	
 10590 ;; *************** function ___fltol *****************
 10591 ;; Defined at:
 10592 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
 10593 ;; Parameters:    Size  Location     Type
 10594 ;;  f1              4   40[BANK0 ] int 
 10595 ;; Auto vars:     Size  Location     Type
 10596 ;;  exp1            1   13[COMMON] unsigned char 
 10597 ;;  sign1           1   12[COMMON] unsigned char 
 10598 ;; Return value:  Size  Location     Type
 10599 ;;                  4   40[BANK0 ] long 
 10600 ;; Registers used:
 10601 ;;		wreg, status,2, status,0
 10602 ;; Tracked objects:
 10603 ;;		On entry : 0/0
 10604 ;;		On exit  : 0/0
 10605 ;;		Unchanged: 0/0
 10606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10607 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10608 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10609 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10610 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10611 ;;Total ram usage:       11 bytes
 10612 ;; Hardware stack levels used: 1
 10613 ;; This function calls:
 10614 ;;		Nothing
 10615 ;; This function is called by:
 10616 ;;		_main
 10617 ;;		_writeEmissivity
 10618 ;;		_efgtoa
 10619 ;; This function uses a non-reentrant model
 10620 ;;
 10621                           
 10622                           
 10623                           ;psect for function ___fltol
 10624  1E10                     ___fltol:
 10625                           
 10626                           ;incstack = 0
 10627                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 10628  1E10  1003               	clrc
 10629  1E11  0020               	movlb	0	; select bank0
 10630  1E12  0D4A               	rlf	___fltol@f1+2,w
 10631  1E13  0D4B               	rlf	___fltol@f1+3,w
 10632  1E14  00CC               	movwf	??___fltol
 10633  1E15  084C               	movf	??___fltol,w
 10634  1E16  00FD               	movwf	___fltol@exp1
 10635  1E17  087D               	movf	___fltol@exp1,w
 10636  1E18  1D03               	btfss	3,2
 10637  1E19  2E23               	goto	l3627
 10638  1E1A                     l3623:
 10639  1E1A  3000               	movlw	0
 10640  1E1B  00CB               	movwf	?___fltol+3
 10641  1E1C  3000               	movlw	0
 10642  1E1D  00CA               	movwf	?___fltol+2
 10643  1E1E  3000               	movlw	0
 10644  1E1F  00C9               	movwf	?___fltol+1
 10645  1E20  3000               	movlw	0
 10646  1E21  00C8               	movwf	?___fltol
 10647  1E22  0008               	return
 10648  1E23                     l3627:
 10649  1E23  0848               	movf	___fltol@f1,w
 10650  1E24  00CC               	movwf	??___fltol
 10651  1E25  0849               	movf	___fltol@f1+1,w
 10652  1E26  00CD               	movwf	??___fltol+1
 10653  1E27  084A               	movf	___fltol@f1+2,w
 10654  1E28  00CE               	movwf	??___fltol+2
 10655  1E29  084B               	movf	___fltol@f1+3,w
 10656  1E2A  00CF               	movwf	??___fltol+3
 10657  1E2B  301F               	movlw	31
 10658  1E2C                     u4875:
 10659  1E2C  36CF               	lsrf	??___fltol+3,f
 10660  1E2D  0CCE               	rrf	??___fltol+2,f
 10661  1E2E  0CCD               	rrf	??___fltol+1,f
 10662  1E2F  0CCC               	rrf	??___fltol,f
 10663  1E30  0B89               	decfsz	9,f
 10664  1E31  2E2C               	goto	u4875
 10665  1E32  084C               	movf	??___fltol,w
 10666  1E33  00D0               	movwf	??___fltol+4
 10667  1E34  0850               	movf	??___fltol+4,w
 10668  1E35  00FC               	movwf	___fltol@sign1
 10669  1E36  17CA               	bsf	___fltol@f1+2,7
 10670  1E37  30FF               	movlw	255
 10671  1E38  05C8               	andwf	___fltol@f1,f
 10672  1E39  30FF               	movlw	255
 10673  1E3A  05C9               	andwf	___fltol@f1+1,f
 10674  1E3B  30FF               	movlw	255
 10675  1E3C  05CA               	andwf	___fltol@f1+2,f
 10676  1E3D  3000               	movlw	0
 10677  1E3E  05CB               	andwf	___fltol@f1+3,f
 10678  1E3F  3096               	movlw	150
 10679  1E40  02FD               	subwf	___fltol@exp1,f
 10680  1E41  1FFD               	btfss	___fltol@exp1,7
 10681  1E42  2E56               	goto	l3645
 10682  1E43  087D               	movf	___fltol@exp1,w
 10683  1E44  3A80               	xorlw	128
 10684  1E45  3E97               	addlw	151
 10685  1E46  1C03               	btfss	3,0
 10686  1E47  2E1A               	goto	l3623
 10687  1E48                     l3643:
 10688  1E48  3001               	movlw	1
 10689  1E49                     u4905:
 10690  1E49  36CB               	lsrf	___fltol@f1+3,f
 10691  1E4A  0CCA               	rrf	___fltol@f1+2,f
 10692  1E4B  0CC9               	rrf	___fltol@f1+1,f
 10693  1E4C  0CC8               	rrf	___fltol@f1,f
 10694  1E4D  0B89               	decfsz	9,f
 10695  1E4E  2E49               	goto	u4905
 10696  1E4F  3001               	movlw	1
 10697  1E50  00CC               	movwf	??___fltol
 10698  1E51  084C               	movf	??___fltol,w
 10699  1E52  07FD               	addwf	___fltol@exp1,f
 10700  1E53  1903               	btfsc	3,2
 10701  1E54  2E67               	goto	l3653
 10702  1E55  2E48               	goto	l3643
 10703  1E56                     l3645:
 10704  1E56  3020               	movlw	32
 10705  1E57  027D               	subwf	___fltol@exp1,w
 10706  1E58  1803               	btfsc	3,0
 10707  1E59  2E1A               	goto	l3623
 10708  1E5A                     l608:
 10709  1E5A  087D               	movf	___fltol@exp1,w
 10710  1E5B  1903               	btfsc	3,2
 10711  1E5C  2E67               	goto	l3653
 10712  1E5D  3001               	movlw	1
 10713  1E5E                     u4935:
 10714  1E5E  35C8               	lslf	___fltol@f1,f
 10715  1E5F  0DC9               	rlf	___fltol@f1+1,f
 10716  1E60  0DCA               	rlf	___fltol@f1+2,f
 10717  1E61  0DCB               	rlf	___fltol@f1+3,f
 10718  1E62  0B89               	decfsz	9,f
 10719  1E63  2E5E               	goto	u4935
 10720  1E64  3001               	movlw	1
 10721  1E65  02FD               	subwf	___fltol@exp1,f
 10722  1E66  2E5A               	goto	l608
 10723  1E67                     l3653:
 10724  1E67  087C               	movf	___fltol@sign1,w
 10725  1E68  1903               	btfsc	3,2
 10726  1E69  0008               	return
 10727  1E6A  09C8               	comf	___fltol@f1,f
 10728  1E6B  09C9               	comf	___fltol@f1+1,f
 10729  1E6C  09CA               	comf	___fltol@f1+2,f
 10730  1E6D  09CB               	comf	___fltol@f1+3,f
 10731  1E6E  0AC8               	incf	___fltol@f1,f
 10732  1E6F  1903               	skipnz
 10733  1E70  0AC9               	incf	___fltol@f1+1,f
 10734  1E71  1903               	skipnz
 10735  1E72  0ACA               	incf	___fltol@f1+2,f
 10736  1E73  1903               	skipnz
 10737  1E74  0ACB               	incf	___fltol@f1+3,f
 10738  1E75  0008               	return
 10739  1E76                     __end_of___fltol:
 10740                           
 10741                           	psect	text22
 10742  1A74                     __ptext22:	
 10743 ;; *************** function ___flsub *****************
 10744 ;; Defined at:
 10745 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
 10746 ;; Parameters:    Size  Location     Type
 10747 ;;  a               4   60[BANK0 ] long 
 10748 ;;  b               4   64[BANK0 ] long 
 10749 ;; Auto vars:     Size  Location     Type
 10750 ;;		None
 10751 ;; Return value:  Size  Location     Type
 10752 ;;                  4   60[BANK0 ] long 
 10753 ;; Registers used:
 10754 ;;		wreg, status,2, status,0, pclath, cstack
 10755 ;; Tracked objects:
 10756 ;;		On entry : 0/0
 10757 ;;		On exit  : 0/0
 10758 ;;		Unchanged: 0/0
 10759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10760 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10763 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10764 ;;Total ram usage:        8 bytes
 10765 ;; Hardware stack levels used: 1
 10766 ;; Hardware stack levels required when called: 1
 10767 ;; This function calls:
 10768 ;;		___fladd
 10769 ;; This function is called by:
 10770 ;;		_efgtoa
 10771 ;; This function uses a non-reentrant model
 10772 ;;
 10773                           
 10774                           
 10775                           ;psect for function ___flsub
 10776  1A74                     ___flsub:
 10777                           
 10778                           ;incstack = 0
 10779                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 10780  1A74  3080               	movlw	128
 10781  1A75  0020               	movlb	0	; select bank0
 10782  1A76  06DF               	xorwf	___flsub@a+3,f
 10783  1A77  0863               	movf	___flsub@b+3,w
 10784  1A78  00CB               	movwf	___fladd@b+3
 10785  1A79  0862               	movf	___flsub@b+2,w
 10786  1A7A  00CA               	movwf	___fladd@b+2
 10787  1A7B  0861               	movf	___flsub@b+1,w
 10788  1A7C  00C9               	movwf	___fladd@b+1
 10789  1A7D  0860               	movf	___flsub@b,w
 10790  1A7E  00C8               	movwf	___fladd@b
 10791  1A7F  085F               	movf	___flsub@a+3,w
 10792  1A80  00CF               	movwf	___fladd@a+3
 10793  1A81  085E               	movf	___flsub@a+2,w
 10794  1A82  00CE               	movwf	___fladd@a+2
 10795  1A83  085D               	movf	___flsub@a+1,w
 10796  1A84  00CD               	movwf	___fladd@a+1
 10797  1A85  085C               	movf	___flsub@a,w
 10798  1A86  00CC               	movwf	___fladd@a
 10799  1A87  3188  2024         	fcall	___fladd
 10800  1A89  0020               	movlb	0	; select bank0
 10801  1A8A  084B               	movf	?___fladd+3,w
 10802  1A8B  00DF               	movwf	?___flsub+3
 10803  1A8C  084A               	movf	?___fladd+2,w
 10804  1A8D  00DE               	movwf	?___flsub+2
 10805  1A8E  0849               	movf	?___fladd+1,w
 10806  1A8F  00DD               	movwf	?___flsub+1
 10807  1A90  0848               	movf	?___fladd,w
 10808  1A91  00DC               	movwf	?___flsub
 10809  1A92  0008               	return
 10810  1A93                     __end_of___flsub:
 10811                           
 10812                           	psect	text23
 10813  0824                     __ptext23:	
 10814 ;; *************** function ___fladd *****************
 10815 ;; Defined at:
 10816 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
 10817 ;; Parameters:    Size  Location     Type
 10818 ;;  b               4   40[BANK0 ] long 
 10819 ;;  a               4   44[BANK0 ] long 
 10820 ;; Auto vars:     Size  Location     Type
 10821 ;;  grs             1   59[BANK0 ] unsigned char 
 10822 ;;  bexp            1   58[BANK0 ] unsigned char 
 10823 ;;  aexp            1   57[BANK0 ] unsigned char 
 10824 ;;  signs           1   56[BANK0 ] unsigned char 
 10825 ;; Return value:  Size  Location     Type
 10826 ;;                  4   40[BANK0 ] unsigned char 
 10827 ;; Registers used:
 10828 ;;		wreg, status,2, status,0
 10829 ;; Tracked objects:
 10830 ;;		On entry : 0/0
 10831 ;;		On exit  : 0/0
 10832 ;;		Unchanged: 0/0
 10833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10834 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10835 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10836 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10837 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10838 ;;Total ram usage:       20 bytes
 10839 ;; Hardware stack levels used: 1
 10840 ;; This function calls:
 10841 ;;		Nothing
 10842 ;; This function is called by:
 10843 ;;		_main
 10844 ;;		___flsub
 10845 ;;		_efgtoa
 10846 ;; This function uses a non-reentrant model
 10847 ;;
 10848                           
 10849                           
 10850                           ;psect for function ___fladd
 10851  0824                     ___fladd:
 10852                           
 10853                           ;incstack = 0
 10854                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 10855  0824  0020               	movlb	0	; select bank0
 10856  0825  084B               	movf	___fladd@b+3,w
 10857  0826  3980               	andlw	128
 10858  0827  00D0               	movwf	??___fladd
 10859  0828  0850               	movf	??___fladd,w
 10860  0829  00D8               	movwf	___fladd@signs
 10861  082A  354B               	lslf	___fladd@b+3,w
 10862  082B  00D0               	movwf	??___fladd
 10863  082C  0850               	movf	??___fladd,w
 10864  082D  00DA               	movwf	___fladd@bexp
 10865  082E  1BCA               	btfsc	___fladd@b+2,7
 10866  082F  145A               	bsf	___fladd@bexp,0
 10867  0830  085A               	movf	___fladd@bexp,w
 10868  0831  1903               	btfsc	3,2
 10869  0832  2841               	goto	l3201
 10870  0833  0A5A               	incf	___fladd@bexp,w
 10871  0834  1D03               	btfss	3,2
 10872  0835  283E               	goto	l3197
 10873  0836  3000               	movlw	0
 10874  0837  00CB               	movwf	___fladd@b+3
 10875  0838  3000               	movlw	0
 10876  0839  00CA               	movwf	___fladd@b+2
 10877  083A  3000               	movlw	0
 10878  083B  00C9               	movwf	___fladd@b+1
 10879  083C  3000               	movlw	0
 10880  083D  00C8               	movwf	___fladd@b
 10881  083E                     l3197:
 10882  083E  17CA               	bsf	___fladd@b+2,7
 10883  083F  01CB               	clrf	___fladd@b+3
 10884  0840  2849               	goto	l3203
 10885  0841                     l3201:
 10886  0841  3000               	movlw	0
 10887  0842  00CB               	movwf	___fladd@b+3
 10888  0843  3000               	movlw	0
 10889  0844  00CA               	movwf	___fladd@b+2
 10890  0845  3000               	movlw	0
 10891  0846  00C9               	movwf	___fladd@b+1
 10892  0847  3000               	movlw	0
 10893  0848  00C8               	movwf	___fladd@b
 10894  0849                     l3203:
 10895  0849  084F               	movf	___fladd@a+3,w
 10896  084A  3980               	andlw	128
 10897  084B  00D0               	movwf	??___fladd
 10898  084C  0850               	movf	??___fladd,w
 10899  084D  00D9               	movwf	___fladd@aexp
 10900  084E  0859               	movf	___fladd@aexp,w
 10901  084F  0658               	xorwf	___fladd@signs,w
 10902  0850  1D03               	btfss	3,2
 10903  0851  1758               	bsf	___fladd@signs,6
 10904  0852  354F               	lslf	___fladd@a+3,w
 10905  0853  00D0               	movwf	??___fladd
 10906  0854  0850               	movf	??___fladd,w
 10907  0855  00D9               	movwf	___fladd@aexp
 10908  0856  1BCE               	btfsc	___fladd@a+2,7
 10909  0857  1459               	bsf	___fladd@aexp,0
 10910  0858  0859               	movf	___fladd@aexp,w
 10911  0859  1903               	btfsc	3,2
 10912  085A  2869               	goto	l3225
 10913  085B  0A59               	incf	___fladd@aexp,w
 10914  085C  1D03               	btfss	3,2
 10915  085D  2866               	goto	l3221
 10916  085E  3000               	movlw	0
 10917  085F  00CF               	movwf	___fladd@a+3
 10918  0860  3000               	movlw	0
 10919  0861  00CE               	movwf	___fladd@a+2
 10920  0862  3000               	movlw	0
 10921  0863  00CD               	movwf	___fladd@a+1
 10922  0864  3000               	movlw	0
 10923  0865  00CC               	movwf	___fladd@a
 10924  0866                     l3221:
 10925  0866  17CE               	bsf	___fladd@a+2,7
 10926  0867  01CF               	clrf	___fladd@a+3
 10927  0868  2871               	goto	l708
 10928  0869                     l3225:
 10929  0869  3000               	movlw	0
 10930  086A  00CF               	movwf	___fladd@a+3
 10931  086B  3000               	movlw	0
 10932  086C  00CE               	movwf	___fladd@a+2
 10933  086D  3000               	movlw	0
 10934  086E  00CD               	movwf	___fladd@a+1
 10935  086F  3000               	movlw	0
 10936  0870  00CC               	movwf	___fladd@a
 10937  0871                     l708:
 10938  0871  085A               	movf	___fladd@bexp,w
 10939  0872  0259               	subwf	___fladd@aexp,w
 10940  0873  1803               	skipnc
 10941  0874  28B7               	goto	l3261
 10942  0875  1F58               	btfss	___fladd@signs,6
 10943  0876  287B               	goto	l3231
 10944  0877  3080               	movlw	128
 10945  0878  00D0               	movwf	??___fladd
 10946  0879  0850               	movf	??___fladd,w
 10947  087A  06D8               	xorwf	___fladd@signs,f
 10948  087B                     l3231:
 10949  087B  085A               	movf	___fladd@bexp,w
 10950  087C  00D0               	movwf	??___fladd
 10951  087D  0850               	movf	??___fladd,w
 10952  087E  00DB               	movwf	___fladd@grs
 10953  087F  0859               	movf	___fladd@aexp,w
 10954  0880  00D0               	movwf	??___fladd
 10955  0881  0850               	movf	??___fladd,w
 10956  0882  00DA               	movwf	___fladd@bexp
 10957  0883  085B               	movf	___fladd@grs,w
 10958  0884  00D0               	movwf	??___fladd
 10959  0885  0850               	movf	??___fladd,w
 10960  0886  00D9               	movwf	___fladd@aexp
 10961  0887  0848               	movf	___fladd@b,w
 10962  0888  00D0               	movwf	??___fladd
 10963  0889  0850               	movf	??___fladd,w
 10964  088A  00DB               	movwf	___fladd@grs
 10965  088B  084C               	movf	___fladd@a,w
 10966  088C  00D0               	movwf	??___fladd
 10967  088D  0850               	movf	??___fladd,w
 10968  088E  00C8               	movwf	___fladd@b
 10969  088F  085B               	movf	___fladd@grs,w
 10970  0890  00D0               	movwf	??___fladd
 10971  0891  0850               	movf	??___fladd,w
 10972  0892  00CC               	movwf	___fladd@a
 10973  0893  0849               	movf	___fladd@b+1,w
 10974  0894  00D0               	movwf	??___fladd
 10975  0895  0850               	movf	??___fladd,w
 10976  0896  00DB               	movwf	___fladd@grs
 10977  0897  084D               	movf	___fladd@a+1,w
 10978  0898  00D0               	movwf	??___fladd
 10979  0899  0850               	movf	??___fladd,w
 10980  089A  00C9               	movwf	___fladd@b+1
 10981  089B  085B               	movf	___fladd@grs,w
 10982  089C  00D0               	movwf	??___fladd
 10983  089D  0850               	movf	??___fladd,w
 10984  089E  00CD               	movwf	___fladd@a+1
 10985  089F  084A               	movf	___fladd@b+2,w
 10986  08A0  00D0               	movwf	??___fladd
 10987  08A1  0850               	movf	??___fladd,w
 10988  08A2  00DB               	movwf	___fladd@grs
 10989  08A3  084E               	movf	___fladd@a+2,w
 10990  08A4  00D0               	movwf	??___fladd
 10991  08A5  0850               	movf	??___fladd,w
 10992  08A6  00CA               	movwf	___fladd@b+2
 10993  08A7  085B               	movf	___fladd@grs,w
 10994  08A8  00D0               	movwf	??___fladd
 10995  08A9  0850               	movf	??___fladd,w
 10996  08AA  00CE               	movwf	___fladd@a+2
 10997  08AB  084B               	movf	___fladd@b+3,w
 10998  08AC  00D0               	movwf	??___fladd
 10999  08AD  0850               	movf	??___fladd,w
 11000  08AE  00DB               	movwf	___fladd@grs
 11001  08AF  084F               	movf	___fladd@a+3,w
 11002  08B0  00D0               	movwf	??___fladd
 11003  08B1  0850               	movf	??___fladd,w
 11004  08B2  00CB               	movwf	___fladd@b+3
 11005  08B3  085B               	movf	___fladd@grs,w
 11006  08B4  00D0               	movwf	??___fladd
 11007  08B5  0850               	movf	??___fladd,w
 11008  08B6  00CF               	movwf	___fladd@a+3
 11009  08B7                     l3261:
 11010  08B7  01DB               	clrf	___fladd@grs
 11011  08B8  0859               	movf	___fladd@aexp,w
 11012  08B9  00D0               	movwf	??___fladd
 11013  08BA  01D1               	clrf	??___fladd+1
 11014  08BB  0851               	movf	??___fladd+1,w
 11015  08BC  00D3               	movwf	??___fladd+3
 11016  08BD  085A               	movf	___fladd@bexp,w
 11017  08BE  0250               	subwf	??___fladd,w
 11018  08BF  00D2               	movwf	??___fladd+2
 11019  08C0  1C03               	skipc
 11020  08C1  03D3               	decf	??___fladd+3,f
 11021  08C2  0853               	movf	??___fladd+3,w
 11022  08C3  3A80               	xorlw	128
 11023  08C4  00D4               	movwf	??___fladd+4
 11024  08C5  3080               	movlw	128
 11025  08C6  0254               	subwf	??___fladd+4,w
 11026  08C7  1D03               	skipz
 11027  08C8  28CB               	goto	u3905
 11028  08C9  301A               	movlw	26
 11029  08CA  0252               	subwf	??___fladd+2,w
 11030  08CB                     u3905:
 11031  08CB  1C03               	skipc
 11032  08CC  28FF               	goto	l3279
 11033  08CD  0020               	movlb	0	; select bank0
 11034  08CE  084B               	movf	___fladd@b+3,w
 11035  08CF  044A               	iorwf	___fladd@b+2,w
 11036  08D0  0449               	iorwf	___fladd@b+1,w
 11037  08D1  0448               	iorwf	___fladd@b,w
 11038  08D2  1903               	btfsc	3,2
 11039  08D3  28D6               	goto	u3910
 11040  08D4  3001               	movlw	1
 11041  08D5  28D7               	goto	u3920
 11042  08D6                     u3910:
 11043  08D6  3000               	movlw	0
 11044  08D7                     u3920:
 11045  08D7  00D0               	movwf	??___fladd
 11046  08D8  0850               	movf	??___fladd,w
 11047  08D9  00DB               	movwf	___fladd@grs
 11048  08DA  3000               	movlw	0
 11049  08DB  00CB               	movwf	___fladd@b+3
 11050  08DC  3000               	movlw	0
 11051  08DD  00CA               	movwf	___fladd@b+2
 11052  08DE  3000               	movlw	0
 11053  08DF  00C9               	movwf	___fladd@b+1
 11054  08E0  3000               	movlw	0
 11055  08E1  00C8               	movwf	___fladd@b
 11056  08E2  0859               	movf	___fladd@aexp,w
 11057  08E3  00D0               	movwf	??___fladd
 11058  08E4  0850               	movf	??___fladd,w
 11059  08E5  00DA               	movwf	___fladd@bexp
 11060  08E6  2904               	goto	l712
 11061  08E7                     l714:
 11062  08E7  1C5B               	btfss	___fladd@grs,0
 11063  08E8  28EF               	goto	l3269
 11064  08E9  365B               	lsrf	___fladd@grs,w
 11065  08EA  3801               	iorlw	1
 11066  08EB  00D0               	movwf	??___fladd
 11067  08EC  0850               	movf	??___fladd,w
 11068  08ED  00DB               	movwf	___fladd@grs
 11069  08EE  28F1               	goto	l3271
 11070  08EF                     l3269:
 11071  08EF  1003               	clrc
 11072  08F0  0CDB               	rrf	___fladd@grs,f
 11073  08F1                     l3271:
 11074  08F1  1848               	btfsc	___fladd@b,0
 11075  08F2  17DB               	bsf	___fladd@grs,7
 11076  08F3  3001               	movlw	1
 11077  08F4  00D0               	movwf	??___fladd
 11078  08F5                     u3955:
 11079  08F5  37CB               	asrf	___fladd@b+3,f
 11080  08F6  0CCA               	rrf	___fladd@b+2,f
 11081  08F7  0CC9               	rrf	___fladd@b+1,f
 11082  08F8  0CC8               	rrf	___fladd@b,f
 11083  08F9  0BD0               	decfsz	??___fladd& (0+127),f
 11084  08FA  28F5               	goto	u3955
 11085  08FB  3001               	movlw	1
 11086  08FC  00D0               	movwf	??___fladd
 11087  08FD  0850               	movf	??___fladd,w
 11088  08FE  07DA               	addwf	___fladd@bexp,f
 11089  08FF                     l3279:
 11090  08FF  0020               	movlb	0	; select bank0
 11091  0900  0859               	movf	___fladd@aexp,w
 11092  0901  025A               	subwf	___fladd@bexp,w
 11093  0902  1C03               	skipc
 11094  0903  28E7               	goto	l714
 11095  0904                     l712:
 11096  0904  1B58               	btfsc	___fladd@signs,6
 11097  0905  2935               	goto	l3305
 11098  0906  085A               	movf	___fladd@bexp,w
 11099  0907  1D03               	btfss	3,2
 11100  0908  2912               	goto	l3287
 11101  0909  3000               	movlw	0
 11102  090A  00CB               	movwf	?___fladd+3
 11103  090B  3000               	movlw	0
 11104  090C  00CA               	movwf	?___fladd+2
 11105  090D  3000               	movlw	0
 11106  090E  00C9               	movwf	?___fladd+1
 11107  090F  3000               	movlw	0
 11108  0910  00C8               	movwf	?___fladd
 11109  0911  0008               	return
 11110  0912                     l3287:
 11111  0912  084C               	movf	___fladd@a,w
 11112  0913  07C8               	addwf	___fladd@b,f
 11113  0914  084D               	movf	___fladd@a+1,w
 11114  0915  3DC9               	addwfc	___fladd@b+1,f
 11115  0916  084E               	movf	___fladd@a+2,w
 11116  0917  3DCA               	addwfc	___fladd@b+2,f
 11117  0918  084F               	movf	___fladd@a+3,w
 11118  0919  3DCB               	addwfc	___fladd@b+3,f
 11119  091A  1C4B               	btfss	___fladd@b+3,0
 11120  091B  29AF               	goto	l3339
 11121  091C  1C5B               	btfss	___fladd@grs,0
 11122  091D  2924               	goto	l3295
 11123  091E  365B               	lsrf	___fladd@grs,w
 11124  091F  3801               	iorlw	1
 11125  0920  00D0               	movwf	??___fladd
 11126  0921  0850               	movf	??___fladd,w
 11127  0922  00DB               	movwf	___fladd@grs
 11128  0923  2926               	goto	l3297
 11129  0924                     l3295:
 11130  0924  1003               	clrc
 11131  0925  0CDB               	rrf	___fladd@grs,f
 11132  0926                     l3297:
 11133  0926  1848               	btfsc	___fladd@b,0
 11134  0927  17DB               	bsf	___fladd@grs,7
 11135  0928  3001               	movlw	1
 11136  0929  00D0               	movwf	??___fladd
 11137  092A                     u4025:
 11138  092A  37CB               	asrf	___fladd@b+3,f
 11139  092B  0CCA               	rrf	___fladd@b+2,f
 11140  092C  0CC9               	rrf	___fladd@b+1,f
 11141  092D  0CC8               	rrf	___fladd@b,f
 11142  092E  0BD0               	decfsz	??___fladd& (0+127),f
 11143  092F  292A               	goto	u4025
 11144  0930  3001               	movlw	1
 11145  0931  00D0               	movwf	??___fladd
 11146  0932  0850               	movf	??___fladd,w
 11147  0933  07DA               	addwf	___fladd@bexp,f
 11148  0934  29AF               	goto	l3339
 11149  0935                     l3305:
 11150  0935  084B               	movf	___fladd@b+3,w
 11151  0936  3A80               	xorlw	128
 11152  0937  00D0               	movwf	??___fladd
 11153  0938  084F               	movf	___fladd@a+3,w
 11154  0939  3A80               	xorlw	128
 11155  093A  0250               	subwf	??___fladd,w
 11156  093B  1D03               	skipz
 11157  093C  2947               	goto	u4033
 11158  093D  084E               	movf	___fladd@a+2,w
 11159  093E  024A               	subwf	___fladd@b+2,w
 11160  093F  1D03               	skipz
 11161  0940  2947               	goto	u4033
 11162  0941  084D               	movf	___fladd@a+1,w
 11163  0942  0249               	subwf	___fladd@b+1,w
 11164  0943  1D03               	skipz
 11165  0944  2947               	goto	u4033
 11166  0945  084C               	movf	___fladd@a,w
 11167  0946  0248               	subwf	___fladd@b,w
 11168  0947                     u4033:
 11169  0947  1803               	skipnc
 11170  0948  297F               	goto	l3315
 11171  0949  30FF               	movlw	255
 11172  094A  00D0               	movwf	??___fladd
 11173  094B  30FF               	movlw	255
 11174  094C  00D1               	movwf	??___fladd+1
 11175  094D  30FF               	movlw	255
 11176  094E  00D2               	movwf	??___fladd+2
 11177  094F  30FF               	movlw	255
 11178  0950  00D3               	movwf	??___fladd+3
 11179  0951  0848               	movf	___fladd@b,w
 11180  0952  024C               	subwf	___fladd@a,w
 11181  0953  00D4               	movwf	??___fladd+4
 11182  0954  0849               	movf	___fladd@b+1,w
 11183  0955  3B4D               	subwfb	___fladd@a+1,w
 11184  0956  00D5               	movwf	??___fladd+5
 11185  0957  084A               	movf	___fladd@b+2,w
 11186  0958  3B4E               	subwfb	___fladd@a+2,w
 11187  0959  00D6               	movwf	??___fladd+6
 11188  095A  084B               	movf	___fladd@b+3,w
 11189  095B  3B4F               	subwfb	___fladd@a+3,w
 11190  095C  00D7               	movwf	??___fladd+7
 11191  095D  0854               	movf	??___fladd+4,w
 11192  095E  07D0               	addwf	??___fladd,f
 11193  095F  0855               	movf	??___fladd+5,w
 11194  0960  3DD1               	addwfc	??___fladd+1,f
 11195  0961  0856               	movf	??___fladd+6,w
 11196  0962  3DD2               	addwfc	??___fladd+2,f
 11197  0963  0857               	movf	??___fladd+7,w
 11198  0964  3DD3               	addwfc	??___fladd+3,f
 11199  0965  0853               	movf	??___fladd+3,w
 11200  0966  00CB               	movwf	___fladd@b+3
 11201  0967  0852               	movf	??___fladd+2,w
 11202  0968  00CA               	movwf	___fladd@b+2
 11203  0969  0851               	movf	??___fladd+1,w
 11204  096A  00C9               	movwf	___fladd@b+1
 11205  096B  0850               	movf	??___fladd,w
 11206  096C  00C8               	movwf	___fladd@b
 11207  096D  3080               	movlw	128
 11208  096E  00D0               	movwf	??___fladd
 11209  096F  0850               	movf	??___fladd,w
 11210  0970  06D8               	xorwf	___fladd@signs,f
 11211  0971  09DB               	comf	___fladd@grs,f
 11212  0972  0ADB               	incf	___fladd@grs,f
 11213  0973  085B               	movf	___fladd@grs,w
 11214  0974  1D03               	btfss	3,2
 11215  0975  2987               	goto	l729
 11216  0976  3001               	movlw	1
 11217  0977  07C8               	addwf	___fladd@b,f
 11218  0978  3000               	movlw	0
 11219  0979  3DC9               	addwfc	___fladd@b+1,f
 11220  097A  3000               	movlw	0
 11221  097B  3DCA               	addwfc	___fladd@b+2,f
 11222  097C  3000               	movlw	0
 11223  097D  3DCB               	addwfc	___fladd@b+3,f
 11224  097E  2987               	goto	l729
 11225  097F                     l3315:
 11226  097F  084C               	movf	___fladd@a,w
 11227  0980  02C8               	subwf	___fladd@b,f
 11228  0981  084D               	movf	___fladd@a+1,w
 11229  0982  3BC9               	subwfb	___fladd@b+1,f
 11230  0983  084E               	movf	___fladd@a+2,w
 11231  0984  3BCA               	subwfb	___fladd@b+2,f
 11232  0985  084F               	movf	___fladd@a+3,w
 11233  0986  3BCB               	subwfb	___fladd@b+3,f
 11234  0987                     l729:
 11235  0987  084B               	movf	___fladd@b+3,w
 11236  0988  044A               	iorwf	___fladd@b+2,w
 11237  0989  0449               	iorwf	___fladd@b+1,w
 11238  098A  0448               	iorwf	___fladd@b,w
 11239  098B  1D03               	skipz
 11240  098C  29AD               	goto	l3337
 11241  098D  085B               	movf	___fladd@grs,w
 11242  098E  1D03               	btfss	3,2
 11243  098F  29AD               	goto	l3337
 11244  0990  3000               	movlw	0
 11245  0991  00CB               	movwf	?___fladd+3
 11246  0992  3000               	movlw	0
 11247  0993  00CA               	movwf	?___fladd+2
 11248  0994  3000               	movlw	0
 11249  0995  00C9               	movwf	?___fladd+1
 11250  0996  3000               	movlw	0
 11251  0997  00C8               	movwf	?___fladd
 11252  0998  0008               	return
 11253  0999                     l3323:
 11254  0999  3001               	movlw	1
 11255  099A                     u4075:
 11256  099A  35C8               	lslf	___fladd@b,f
 11257  099B  0DC9               	rlf	___fladd@b+1,f
 11258  099C  0DCA               	rlf	___fladd@b+2,f
 11259  099D  0DCB               	rlf	___fladd@b+3,f
 11260  099E  0B89               	decfsz	9,f
 11261  099F  299A               	goto	u4075
 11262  09A0  1BDB               	btfsc	___fladd@grs,7
 11263  09A1  1448               	bsf	___fladd@b,0
 11264  09A2  1C5B               	btfss	___fladd@grs,0
 11265  09A3  29A6               	goto	l3331
 11266  09A4  1403               	setc
 11267  09A5  29A7               	goto	L11
 11268  09A6                     l3331:
 11269  09A6  1003               	clrc
 11270  09A7                     L11:
 11271  09A7  0DDB               	rlf	___fladd@grs,f
 11272  09A8  085A               	movf	___fladd@bexp,w
 11273  09A9  1903               	btfsc	3,2
 11274  09AA  29AD               	goto	l3337
 11275  09AB  3001               	movlw	1
 11276  09AC  02DA               	subwf	___fladd@bexp,f
 11277  09AD                     l3337:
 11278  09AD  1FCA               	btfss	___fladd@b+2,7
 11279  09AE  2999               	goto	l3323
 11280  09AF                     l3339:
 11281  09AF  01D9               	clrf	___fladd@aexp
 11282  09B0  1FDB               	btfss	___fladd@grs,7
 11283  09B1  29BA               	goto	l3349
 11284  09B2  085B               	movf	___fladd@grs,w
 11285  09B3  397F               	andlw	127
 11286  09B4  1903               	btfsc	3,2
 11287  09B5  1848               	btfsc	___fladd@b,0
 11288  09B6  29B8               	goto	l3345
 11289  09B7  29BA               	goto	l3349
 11290  09B8                     l3345:
 11291  09B8  01D9               	clrf	___fladd@aexp
 11292  09B9  0AD9               	incf	___fladd@aexp,f
 11293  09BA                     l3349:
 11294  09BA  0859               	movf	___fladd@aexp,w
 11295  09BB  1903               	btfsc	3,2
 11296  09BC  29E6               	goto	l742
 11297  09BD  3001               	movlw	1
 11298  09BE  07C8               	addwf	___fladd@b,f
 11299  09BF  3000               	movlw	0
 11300  09C0  3DC9               	addwfc	___fladd@b+1,f
 11301  09C1  3000               	movlw	0
 11302  09C2  3DCA               	addwfc	___fladd@b+2,f
 11303  09C3  3000               	movlw	0
 11304  09C4  3DCB               	addwfc	___fladd@b+3,f
 11305  09C5  1C4B               	btfss	___fladd@b+3,0
 11306  09C6  29E6               	goto	l742
 11307  09C7  0848               	movf	___fladd@b,w
 11308  09C8  00D0               	movwf	??___fladd
 11309  09C9  0849               	movf	___fladd@b+1,w
 11310  09CA  00D1               	movwf	??___fladd+1
 11311  09CB  084A               	movf	___fladd@b+2,w
 11312  09CC  00D2               	movwf	??___fladd+2
 11313  09CD  084B               	movf	___fladd@b+3,w
 11314  09CE  00D3               	movwf	??___fladd+3
 11315  09CF  3001               	movlw	1
 11316  09D0  00D4               	movwf	??___fladd+4
 11317  09D1                     u4175:
 11318  09D1  37D3               	asrf	??___fladd+3,f
 11319  09D2  0CD2               	rrf	??___fladd+2,f
 11320  09D3  0CD1               	rrf	??___fladd+1,f
 11321  09D4  0CD0               	rrf	??___fladd,f
 11322  09D5  0BD4               	decfsz	??___fladd+4,f
 11323  09D6  29D1               	goto	u4175
 11324  09D7  0853               	movf	??___fladd+3,w
 11325  09D8  00CB               	movwf	___fladd@b+3
 11326  09D9  0852               	movf	??___fladd+2,w
 11327  09DA  00CA               	movwf	___fladd@b+2
 11328  09DB  0851               	movf	??___fladd+1,w
 11329  09DC  00C9               	movwf	___fladd@b+1
 11330  09DD  0850               	movf	??___fladd,w
 11331  09DE  00C8               	movwf	___fladd@b
 11332  09DF  0A5A               	incf	___fladd@bexp,w
 11333  09E0  1903               	btfsc	3,2
 11334  09E1  29E6               	goto	l742
 11335  09E2  3001               	movlw	1
 11336  09E3  00D0               	movwf	??___fladd
 11337  09E4  0850               	movf	??___fladd,w
 11338  09E5  07DA               	addwf	___fladd@bexp,f
 11339  09E6                     l742:
 11340  09E6  0A5A               	incf	___fladd@bexp,w
 11341  09E7  1D03               	btfss	3,2
 11342  09E8  085A               	movf	___fladd@bexp,w
 11343  09E9  1D03               	btfss	3,2
 11344  09EA  29F6               	goto	l3367
 11345  09EB  3000               	movlw	0
 11346  09EC  00CB               	movwf	___fladd@b+3
 11347  09ED  3000               	movlw	0
 11348  09EE  00CA               	movwf	___fladd@b+2
 11349  09EF  3000               	movlw	0
 11350  09F0  00C9               	movwf	___fladd@b+1
 11351  09F1  3000               	movlw	0
 11352  09F2  00C8               	movwf	___fladd@b
 11353  09F3  085A               	movf	___fladd@bexp,w
 11354  09F4  1903               	btfsc	3,2
 11355  09F5  01D8               	clrf	___fladd@signs
 11356  09F6                     l3367:
 11357  09F6  1C5A               	btfss	___fladd@bexp,0
 11358  09F7  29FA               	goto	l3371
 11359  09F8  17CA               	bsf	___fladd@b+2,7
 11360  09F9  29FE               	goto	l750
 11361  09FA                     l3371:
 11362  09FA  307F               	movlw	127
 11363  09FB  00D0               	movwf	??___fladd
 11364  09FC  0850               	movf	??___fladd,w
 11365  09FD  05CA               	andwf	___fladd@b+2,f
 11366  09FE                     l750:
 11367  09FE  365A               	lsrf	___fladd@bexp,w
 11368  09FF  00D0               	movwf	??___fladd
 11369  0A00  0850               	movf	??___fladd,w
 11370  0A01  00CB               	movwf	___fladd@b+3
 11371  0A02  1FD8               	btfss	___fladd@signs,7
 11372  0A03  0008               	return
 11373  0A04  17CB               	bsf	___fladd@b+3,7
 11374  0A05  0008               	return
 11375  0A06                     __end_of___fladd:
 11376                           
 11377                           	psect	text24
 11378  18EF                     __ptext24:	
 11379 ;; *************** function ___flneg *****************
 11380 ;; Defined at:
 11381 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
 11382 ;; Parameters:    Size  Location     Type
 11383 ;;  f1              4    0[COMMON] unsigned char 
 11384 ;; Auto vars:     Size  Location     Type
 11385 ;;		None
 11386 ;; Return value:  Size  Location     Type
 11387 ;;                  4    0[COMMON] unsigned char 
 11388 ;; Registers used:
 11389 ;;		wreg
 11390 ;; Tracked objects:
 11391 ;;		On entry : 0/0
 11392 ;;		On exit  : 0/0
 11393 ;;		Unchanged: 0/0
 11394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11395 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11398 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11399 ;;Total ram usage:        4 bytes
 11400 ;; Hardware stack levels used: 1
 11401 ;; This function calls:
 11402 ;;		Nothing
 11403 ;; This function is called by:
 11404 ;;		_efgtoa
 11405 ;; This function uses a non-reentrant model
 11406 ;;
 11407                           
 11408                           
 11409                           ;psect for function ___flneg
 11410  18EF                     ___flneg:
 11411                           
 11412                           ;incstack = 0
 11413                           ; Regs used in ___flneg: [wreg]
 11414  18EF  0873               	movf	___flneg@f1+3,w
 11415  18F0  0472               	iorwf	___flneg@f1+2,w
 11416  18F1  0471               	iorwf	___flneg@f1+1,w
 11417  18F2  0470               	iorwf	___flneg@f1,w
 11418  18F3  1903               	skipnz
 11419  18F4  0008               	return
 11420  18F5  3080               	movlw	128
 11421  18F6  06F3               	xorwf	___flneg@f1+3,f
 11422  18F7  0008               	return
 11423  18F8                     __end_of___flneg:
 11424                           
 11425                           	psect	text25
 11426  0A06                     __ptext25:	
 11427 ;; *************** function ___flmul *****************
 11428 ;; Defined at:
 11429 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
 11430 ;; Parameters:    Size  Location     Type
 11431 ;;  b               4   14[BANK0 ] unsigned char 
 11432 ;;  a               4   18[BANK0 ] unsigned char 
 11433 ;; Auto vars:     Size  Location     Type
 11434 ;;  prod            4   34[BANK0 ] struct .
 11435 ;;  grs             4   28[BANK0 ] unsigned long 
 11436 ;;  temp            2   38[BANK0 ] struct .
 11437 ;;  bexp            1   33[BANK0 ] unsigned char 
 11438 ;;  aexp            1   32[BANK0 ] unsigned char 
 11439 ;;  sign            1   27[BANK0 ] unsigned char 
 11440 ;; Return value:  Size  Location     Type
 11441 ;;                  4   14[BANK0 ] unsigned char 
 11442 ;; Registers used:
 11443 ;;		wreg, status,2, status,0, pclath, cstack
 11444 ;; Tracked objects:
 11445 ;;		On entry : 0/0
 11446 ;;		On exit  : 0/0
 11447 ;;		Unchanged: 0/0
 11448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11449 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11450 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11451 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11452 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11453 ;;Total ram usage:       26 bytes
 11454 ;; Hardware stack levels used: 1
 11455 ;; Hardware stack levels required when called: 1
 11456 ;; This function calls:
 11457 ;;		__Umul8_16
 11458 ;; This function is called by:
 11459 ;;		_main
 11460 ;;		_writeEmissivity
 11461 ;;		_efgtoa
 11462 ;; This function uses a non-reentrant model
 11463 ;;
 11464                           
 11465                           
 11466                           ;psect for function ___flmul
 11467  0A06                     ___flmul:
 11468                           
 11469                           ;incstack = 0
 11470                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 11471  0A06  0020               	movlb	0	; select bank0
 11472  0A07  0831               	movf	___flmul@b+3,w
 11473  0A08  3980               	andlw	128
 11474  0A09  00B6               	movwf	??___flmul
 11475  0A0A  0836               	movf	??___flmul,w
 11476  0A0B  00BB               	movwf	___flmul@sign
 11477  0A0C  3531               	lslf	___flmul@b+3,w
 11478  0A0D  00B6               	movwf	??___flmul
 11479  0A0E  0836               	movf	??___flmul,w
 11480  0A0F  00C1               	movwf	___flmul@bexp
 11481  0A10  1BB0               	btfsc	___flmul@b+2,7
 11482  0A11  1441               	bsf	___flmul@bexp,0
 11483  0A12  0841               	movf	___flmul@bexp,w
 11484  0A13  1903               	btfsc	3,2
 11485  0A14  2A22               	goto	l3819
 11486  0A15  0A41               	incf	___flmul@bexp,w
 11487  0A16  1D03               	btfss	3,2
 11488  0A17  2A20               	goto	l3817
 11489  0A18  3000               	movlw	0
 11490  0A19  00B1               	movwf	___flmul@b+3
 11491  0A1A  3000               	movlw	0
 11492  0A1B  00B0               	movwf	___flmul@b+2
 11493  0A1C  3000               	movlw	0
 11494  0A1D  00AF               	movwf	___flmul@b+1
 11495  0A1E  3000               	movlw	0
 11496  0A1F  00AE               	movwf	___flmul@b
 11497  0A20                     l3817:
 11498  0A20  17B0               	bsf	___flmul@b+2,7
 11499  0A21  2A2A               	goto	l3821
 11500  0A22                     l3819:
 11501  0A22  3000               	movlw	0
 11502  0A23  00B1               	movwf	___flmul@b+3
 11503  0A24  3000               	movlw	0
 11504  0A25  00B0               	movwf	___flmul@b+2
 11505  0A26  3000               	movlw	0
 11506  0A27  00AF               	movwf	___flmul@b+1
 11507  0A28  3000               	movlw	0
 11508  0A29  00AE               	movwf	___flmul@b
 11509  0A2A                     l3821:
 11510  0A2A  0835               	movf	___flmul@a+3,w
 11511  0A2B  3980               	andlw	128
 11512  0A2C  00B6               	movwf	??___flmul
 11513  0A2D  0836               	movf	??___flmul,w
 11514  0A2E  06BB               	xorwf	___flmul@sign,f
 11515  0A2F  3535               	lslf	___flmul@a+3,w
 11516  0A30  00B6               	movwf	??___flmul
 11517  0A31  0836               	movf	??___flmul,w
 11518  0A32  00C0               	movwf	___flmul@aexp
 11519  0A33  1BB4               	btfsc	___flmul@a+2,7
 11520  0A34  1440               	bsf	___flmul@aexp,0
 11521  0A35  0840               	movf	___flmul@aexp,w
 11522  0A36  1903               	btfsc	3,2
 11523  0A37  2A45               	goto	l3837
 11524  0A38  0A40               	incf	___flmul@aexp,w
 11525  0A39  1D03               	btfss	3,2
 11526  0A3A  2A43               	goto	l3835
 11527  0A3B  3000               	movlw	0
 11528  0A3C  00B5               	movwf	___flmul@a+3
 11529  0A3D  3000               	movlw	0
 11530  0A3E  00B4               	movwf	___flmul@a+2
 11531  0A3F  3000               	movlw	0
 11532  0A40  00B3               	movwf	___flmul@a+1
 11533  0A41  3000               	movlw	0
 11534  0A42  00B2               	movwf	___flmul@a
 11535  0A43                     l3835:
 11536  0A43  17B4               	bsf	___flmul@a+2,7
 11537  0A44  2A4D               	goto	l3839
 11538  0A45                     l3837:
 11539  0A45  3000               	movlw	0
 11540  0A46  00B5               	movwf	___flmul@a+3
 11541  0A47  3000               	movlw	0
 11542  0A48  00B4               	movwf	___flmul@a+2
 11543  0A49  3000               	movlw	0
 11544  0A4A  00B3               	movwf	___flmul@a+1
 11545  0A4B  3000               	movlw	0
 11546  0A4C  00B2               	movwf	___flmul@a
 11547  0A4D                     l3839:
 11548  0A4D  0840               	movf	___flmul@aexp,w
 11549  0A4E  1D03               	btfss	3,2
 11550  0A4F  0841               	movf	___flmul@bexp,w
 11551  0A50  1D03               	btfss	3,2
 11552  0A51  2A5B               	goto	l3847
 11553  0A52  3000               	movlw	0
 11554  0A53  00B1               	movwf	?___flmul+3
 11555  0A54  3000               	movlw	0
 11556  0A55  00B0               	movwf	?___flmul+2
 11557  0A56  3000               	movlw	0
 11558  0A57  00AF               	movwf	?___flmul+1
 11559  0A58  3000               	movlw	0
 11560  0A59  00AE               	movwf	?___flmul
 11561  0A5A  0008               	return
 11562  0A5B                     l3847:
 11563  0A5B  082E               	movf	___flmul@b,w
 11564  0A5C  00B6               	movwf	??___flmul
 11565  0A5D  0836               	movf	??___flmul,w
 11566  0A5E  00F0               	movwf	__Umul8_16@multiplicand
 11567  0A5F  0834               	movf	___flmul@a+2,w
 11568  0A60  319A  2255  318A   	fcall	__Umul8_16
 11569  0A63  0871               	movf	?__Umul8_16+1,w
 11570  0A64  0020               	movlb	0	; select bank0
 11571  0A65  00C7               	movwf	___flmul@temp+1
 11572  0A66  0870               	movf	?__Umul8_16,w
 11573  0A67  00C6               	movwf	___flmul@temp
 11574  0A68  0846               	movf	___flmul@temp,w
 11575  0A69  00B6               	movwf	??___flmul
 11576  0A6A  01B7               	clrf	??___flmul+1
 11577  0A6B  01B8               	clrf	??___flmul+2
 11578  0A6C  01B9               	clrf	??___flmul+3
 11579  0A6D  0839               	movf	??___flmul+3,w
 11580  0A6E  00BF               	movwf	___flmul@grs+3
 11581  0A6F  0838               	movf	??___flmul+2,w
 11582  0A70  00BE               	movwf	___flmul@grs+2
 11583  0A71  0837               	movf	??___flmul+1,w
 11584  0A72  00BD               	movwf	___flmul@grs+1
 11585  0A73  0836               	movf	??___flmul,w
 11586  0A74  00BC               	movwf	___flmul@grs
 11587  0A75  0847               	movf	___flmul@temp+1,w
 11588  0A76  00B6               	movwf	??___flmul
 11589  0A77  01B7               	clrf	??___flmul+1
 11590  0A78  01B8               	clrf	??___flmul+2
 11591  0A79  01B9               	clrf	??___flmul+3
 11592  0A7A  0839               	movf	??___flmul+3,w
 11593  0A7B  00C5               	movwf	___flmul@prod+3
 11594  0A7C  0838               	movf	??___flmul+2,w
 11595  0A7D  00C4               	movwf	___flmul@prod+2
 11596  0A7E  0837               	movf	??___flmul+1,w
 11597  0A7F  00C3               	movwf	___flmul@prod+1
 11598  0A80  0836               	movf	??___flmul,w
 11599  0A81  00C2               	movwf	___flmul@prod
 11600  0A82  082F               	movf	___flmul@b+1,w
 11601  0A83  00B6               	movwf	??___flmul
 11602  0A84  0836               	movf	??___flmul,w
 11603  0A85  00F0               	movwf	__Umul8_16@multiplicand
 11604  0A86  0833               	movf	___flmul@a+1,w
 11605  0A87  319A  2255  318A   	fcall	__Umul8_16
 11606  0A8A  0871               	movf	?__Umul8_16+1,w
 11607  0A8B  0020               	movlb	0	; select bank0
 11608  0A8C  00C7               	movwf	___flmul@temp+1
 11609  0A8D  0870               	movf	?__Umul8_16,w
 11610  0A8E  00C6               	movwf	___flmul@temp
 11611  0A8F  0846               	movf	___flmul@temp,w
 11612  0A90  00B6               	movwf	??___flmul
 11613  0A91  01B7               	clrf	??___flmul+1
 11614  0A92  01B8               	clrf	??___flmul+2
 11615  0A93  01B9               	clrf	??___flmul+3
 11616  0A94  0836               	movf	??___flmul,w
 11617  0A95  07BC               	addwf	___flmul@grs,f
 11618  0A96  0837               	movf	??___flmul+1,w
 11619  0A97  3DBD               	addwfc	___flmul@grs+1,f
 11620  0A98  0838               	movf	??___flmul+2,w
 11621  0A99  3DBE               	addwfc	___flmul@grs+2,f
 11622  0A9A  0839               	movf	??___flmul+3,w
 11623  0A9B  3DBF               	addwfc	___flmul@grs+3,f
 11624  0A9C  0847               	movf	___flmul@temp+1,w
 11625  0A9D  00B6               	movwf	??___flmul
 11626  0A9E  01B7               	clrf	??___flmul+1
 11627  0A9F  01B8               	clrf	??___flmul+2
 11628  0AA0  01B9               	clrf	??___flmul+3
 11629  0AA1  0836               	movf	??___flmul,w
 11630  0AA2  07C2               	addwf	___flmul@prod,f
 11631  0AA3  0837               	movf	??___flmul+1,w
 11632  0AA4  3DC3               	addwfc	___flmul@prod+1,f
 11633  0AA5  0838               	movf	??___flmul+2,w
 11634  0AA6  3DC4               	addwfc	___flmul@prod+2,f
 11635  0AA7  0839               	movf	??___flmul+3,w
 11636  0AA8  3DC5               	addwfc	___flmul@prod+3,f
 11637  0AA9  0830               	movf	___flmul@b+2,w
 11638  0AAA  00B6               	movwf	??___flmul
 11639  0AAB  0836               	movf	??___flmul,w
 11640  0AAC  00F0               	movwf	__Umul8_16@multiplicand
 11641  0AAD  0832               	movf	___flmul@a,w
 11642  0AAE  319A  2255  318A   	fcall	__Umul8_16
 11643  0AB1  0871               	movf	?__Umul8_16+1,w
 11644  0AB2  0020               	movlb	0	; select bank0
 11645  0AB3  00C7               	movwf	___flmul@temp+1
 11646  0AB4  0870               	movf	?__Umul8_16,w
 11647  0AB5  00C6               	movwf	___flmul@temp
 11648  0AB6  0846               	movf	___flmul@temp,w
 11649  0AB7  00B6               	movwf	??___flmul
 11650  0AB8  01B7               	clrf	??___flmul+1
 11651  0AB9  01B8               	clrf	??___flmul+2
 11652  0ABA  01B9               	clrf	??___flmul+3
 11653  0ABB  0836               	movf	??___flmul,w
 11654  0ABC  07BC               	addwf	___flmul@grs,f
 11655  0ABD  0837               	movf	??___flmul+1,w
 11656  0ABE  3DBD               	addwfc	___flmul@grs+1,f
 11657  0ABF  0838               	movf	??___flmul+2,w
 11658  0AC0  3DBE               	addwfc	___flmul@grs+2,f
 11659  0AC1  0839               	movf	??___flmul+3,w
 11660  0AC2  3DBF               	addwfc	___flmul@grs+3,f
 11661  0AC3  0847               	movf	___flmul@temp+1,w
 11662  0AC4  00B6               	movwf	??___flmul
 11663  0AC5  01B7               	clrf	??___flmul+1
 11664  0AC6  01B8               	clrf	??___flmul+2
 11665  0AC7  01B9               	clrf	??___flmul+3
 11666  0AC8  0836               	movf	??___flmul,w
 11667  0AC9  07C2               	addwf	___flmul@prod,f
 11668  0ACA  0837               	movf	??___flmul+1,w
 11669  0ACB  3DC3               	addwfc	___flmul@prod+1,f
 11670  0ACC  0838               	movf	??___flmul+2,w
 11671  0ACD  3DC4               	addwfc	___flmul@prod+2,f
 11672  0ACE  0839               	movf	??___flmul+3,w
 11673  0ACF  3DC5               	addwfc	___flmul@prod+3,f
 11674  0AD0  3008               	movlw	8
 11675  0AD1                     u5335:
 11676  0AD1  35BC               	lslf	___flmul@grs,f
 11677  0AD2  0DBD               	rlf	___flmul@grs+1,f
 11678  0AD3  0DBE               	rlf	___flmul@grs+2,f
 11679  0AD4  0DBF               	rlf	___flmul@grs+3,f
 11680  0AD5  0B89               	decfsz	9,f
 11681  0AD6  2AD1               	goto	u5335
 11682  0AD7  082F               	movf	___flmul@b+1,w
 11683  0AD8  00B6               	movwf	??___flmul
 11684  0AD9  0836               	movf	??___flmul,w
 11685  0ADA  00F0               	movwf	__Umul8_16@multiplicand
 11686  0ADB  0832               	movf	___flmul@a,w
 11687  0ADC  319A  2255  318A   	fcall	__Umul8_16
 11688  0ADF  0871               	movf	?__Umul8_16+1,w
 11689  0AE0  0020               	movlb	0	; select bank0
 11690  0AE1  00C7               	movwf	___flmul@temp+1
 11691  0AE2  0870               	movf	?__Umul8_16,w
 11692  0AE3  00C6               	movwf	___flmul@temp
 11693  0AE4  0846               	movf	___flmul@temp,w
 11694  0AE5  07BC               	addwf	___flmul@grs,f
 11695  0AE6  0847               	movf	___flmul@temp+1,w
 11696  0AE7  3DBD               	addwfc	___flmul@grs+1,f
 11697  0AE8  3000               	movlw	0
 11698  0AE9  3DBE               	addwfc	___flmul@grs+2,f
 11699  0AEA  3DBF               	addwfc	___flmul@grs+3,f
 11700  0AEB  082E               	movf	___flmul@b,w
 11701  0AEC  00B6               	movwf	??___flmul
 11702  0AED  0836               	movf	??___flmul,w
 11703  0AEE  00F0               	movwf	__Umul8_16@multiplicand
 11704  0AEF  0833               	movf	___flmul@a+1,w
 11705  0AF0  319A  2255  318A   	fcall	__Umul8_16
 11706  0AF3  0871               	movf	?__Umul8_16+1,w
 11707  0AF4  0020               	movlb	0	; select bank0
 11708  0AF5  00C7               	movwf	___flmul@temp+1
 11709  0AF6  0870               	movf	?__Umul8_16,w
 11710  0AF7  00C6               	movwf	___flmul@temp
 11711  0AF8  0846               	movf	___flmul@temp,w
 11712  0AF9  07BC               	addwf	___flmul@grs,f
 11713  0AFA  0847               	movf	___flmul@temp+1,w
 11714  0AFB  3DBD               	addwfc	___flmul@grs+1,f
 11715  0AFC  3000               	movlw	0
 11716  0AFD  3DBE               	addwfc	___flmul@grs+2,f
 11717  0AFE  3DBF               	addwfc	___flmul@grs+3,f
 11718  0AFF  3008               	movlw	8
 11719  0B00                     u5345:
 11720  0B00  35BC               	lslf	___flmul@grs,f
 11721  0B01  0DBD               	rlf	___flmul@grs+1,f
 11722  0B02  0DBE               	rlf	___flmul@grs+2,f
 11723  0B03  0DBF               	rlf	___flmul@grs+3,f
 11724  0B04  0B89               	decfsz	9,f
 11725  0B05  2B00               	goto	u5345
 11726  0B06  082E               	movf	___flmul@b,w
 11727  0B07  00B6               	movwf	??___flmul
 11728  0B08  0836               	movf	??___flmul,w
 11729  0B09  00F0               	movwf	__Umul8_16@multiplicand
 11730  0B0A  0832               	movf	___flmul@a,w
 11731  0B0B  319A  2255  318A   	fcall	__Umul8_16
 11732  0B0E  0871               	movf	?__Umul8_16+1,w
 11733  0B0F  0020               	movlb	0	; select bank0
 11734  0B10  00C7               	movwf	___flmul@temp+1
 11735  0B11  0870               	movf	?__Umul8_16,w
 11736  0B12  00C6               	movwf	___flmul@temp
 11737  0B13  0846               	movf	___flmul@temp,w
 11738  0B14  07BC               	addwf	___flmul@grs,f
 11739  0B15  0847               	movf	___flmul@temp+1,w
 11740  0B16  3DBD               	addwfc	___flmul@grs+1,f
 11741  0B17  3000               	movlw	0
 11742  0B18  3DBE               	addwfc	___flmul@grs+2,f
 11743  0B19  3DBF               	addwfc	___flmul@grs+3,f
 11744  0B1A  082F               	movf	___flmul@b+1,w
 11745  0B1B  00B6               	movwf	??___flmul
 11746  0B1C  0836               	movf	??___flmul,w
 11747  0B1D  00F0               	movwf	__Umul8_16@multiplicand
 11748  0B1E  0834               	movf	___flmul@a+2,w
 11749  0B1F  319A  2255  318A   	fcall	__Umul8_16
 11750  0B22  0871               	movf	?__Umul8_16+1,w
 11751  0B23  0020               	movlb	0	; select bank0
 11752  0B24  00C7               	movwf	___flmul@temp+1
 11753  0B25  0870               	movf	?__Umul8_16,w
 11754  0B26  00C6               	movwf	___flmul@temp
 11755  0B27  0846               	movf	___flmul@temp,w
 11756  0B28  07C2               	addwf	___flmul@prod,f
 11757  0B29  0847               	movf	___flmul@temp+1,w
 11758  0B2A  3DC3               	addwfc	___flmul@prod+1,f
 11759  0B2B  3000               	movlw	0
 11760  0B2C  3DC4               	addwfc	___flmul@prod+2,f
 11761  0B2D  3DC5               	addwfc	___flmul@prod+3,f
 11762  0B2E  0830               	movf	___flmul@b+2,w
 11763  0B2F  00B6               	movwf	??___flmul
 11764  0B30  0836               	movf	??___flmul,w
 11765  0B31  00F0               	movwf	__Umul8_16@multiplicand
 11766  0B32  0833               	movf	___flmul@a+1,w
 11767  0B33  319A  2255  318A   	fcall	__Umul8_16
 11768  0B36  0871               	movf	?__Umul8_16+1,w
 11769  0B37  0020               	movlb	0	; select bank0
 11770  0B38  00C7               	movwf	___flmul@temp+1
 11771  0B39  0870               	movf	?__Umul8_16,w
 11772  0B3A  00C6               	movwf	___flmul@temp
 11773  0B3B  0846               	movf	___flmul@temp,w
 11774  0B3C  07C2               	addwf	___flmul@prod,f
 11775  0B3D  0847               	movf	___flmul@temp+1,w
 11776  0B3E  3DC3               	addwfc	___flmul@prod+1,f
 11777  0B3F  3000               	movlw	0
 11778  0B40  3DC4               	addwfc	___flmul@prod+2,f
 11779  0B41  3DC5               	addwfc	___flmul@prod+3,f
 11780  0B42  0830               	movf	___flmul@b+2,w
 11781  0B43  00B6               	movwf	??___flmul
 11782  0B44  0836               	movf	??___flmul,w
 11783  0B45  00F0               	movwf	__Umul8_16@multiplicand
 11784  0B46  0834               	movf	___flmul@a+2,w
 11785  0B47  319A  2255  318A   	fcall	__Umul8_16
 11786  0B4A  0871               	movf	?__Umul8_16+1,w
 11787  0B4B  0020               	movlb	0	; select bank0
 11788  0B4C  00C7               	movwf	___flmul@temp+1
 11789  0B4D  0870               	movf	?__Umul8_16,w
 11790  0B4E  00C6               	movwf	___flmul@temp
 11791  0B4F  0846               	movf	___flmul@temp,w
 11792  0B50  00B6               	movwf	??___flmul
 11793  0B51  0847               	movf	___flmul@temp+1,w
 11794  0B52  00B7               	movwf	??___flmul+1
 11795  0B53  01B8               	clrf	??___flmul+2
 11796  0B54  01B9               	clrf	??___flmul+3
 11797  0B55  3008               	movlw	8
 11798  0B56                     u5355:
 11799  0B56  35B6               	lslf	??___flmul,f
 11800  0B57  0DB7               	rlf	??___flmul+1,f
 11801  0B58  0DB8               	rlf	??___flmul+2,f
 11802  0B59  0DB9               	rlf	??___flmul+3,f
 11803  0B5A  0B89               	decfsz	9,f
 11804  0B5B  2B56               	goto	u5355
 11805  0B5C  0836               	movf	??___flmul,w
 11806  0B5D  07C2               	addwf	___flmul@prod,f
 11807  0B5E  0837               	movf	??___flmul+1,w
 11808  0B5F  3DC3               	addwfc	___flmul@prod+1,f
 11809  0B60  0838               	movf	??___flmul+2,w
 11810  0B61  3DC4               	addwfc	___flmul@prod+2,f
 11811  0B62  0839               	movf	??___flmul+3,w
 11812  0B63  3DC5               	addwfc	___flmul@prod+3,f
 11813  0B64  083C               	movf	___flmul@grs,w
 11814  0B65  00B6               	movwf	??___flmul
 11815  0B66  083D               	movf	___flmul@grs+1,w
 11816  0B67  00B7               	movwf	??___flmul+1
 11817  0B68  083E               	movf	___flmul@grs+2,w
 11818  0B69  00B8               	movwf	??___flmul+2
 11819  0B6A  083F               	movf	___flmul@grs+3,w
 11820  0B6B  00B9               	movwf	??___flmul+3
 11821  0B6C  3018               	movlw	24
 11822  0B6D                     u5365:
 11823  0B6D  36B9               	lsrf	??___flmul+3,f
 11824  0B6E  0CB8               	rrf	??___flmul+2,f
 11825  0B6F  0CB7               	rrf	??___flmul+1,f
 11826  0B70  0CB6               	rrf	??___flmul,f
 11827  0B71  0B89               	decfsz	9,f
 11828  0B72  2B6D               	goto	u5365
 11829  0B73  0836               	movf	??___flmul,w
 11830  0B74  07C2               	addwf	___flmul@prod,f
 11831  0B75  0837               	movf	??___flmul+1,w
 11832  0B76  3DC3               	addwfc	___flmul@prod+1,f
 11833  0B77  0838               	movf	??___flmul+2,w
 11834  0B78  3DC4               	addwfc	___flmul@prod+2,f
 11835  0B79  0839               	movf	??___flmul+3,w
 11836  0B7A  3DC5               	addwfc	___flmul@prod+3,f
 11837  0B7B  3008               	movlw	8
 11838  0B7C                     u5375:
 11839  0B7C  35BC               	lslf	___flmul@grs,f
 11840  0B7D  0DBD               	rlf	___flmul@grs+1,f
 11841  0B7E  0DBE               	rlf	___flmul@grs+2,f
 11842  0B7F  0DBF               	rlf	___flmul@grs+3,f
 11843  0B80  0B89               	decfsz	9,f
 11844  0B81  2B7C               	goto	u5375
 11845  0B82  0841               	movf	___flmul@bexp,w
 11846  0B83  0740               	addwf	___flmul@aexp,w
 11847  0B84  00B6               	movwf	??___flmul
 11848  0B85  01B7               	clrf	??___flmul+1
 11849  0B86  0DB7               	rlf	??___flmul+1,f
 11850  0B87  0836               	movf	??___flmul,w
 11851  0B88  3E82               	addlw	130
 11852  0B89  00C6               	movwf	___flmul@temp
 11853  0B8A  30FF               	movlw	255
 11854  0B8B  3D37               	addwfc	??___flmul+1,w
 11855  0B8C  00C7               	movwf	___flmul@temp+1
 11856  0B8D                     l3899:
 11857  0B8D  1BC4               	btfsc	___flmul@prod+2,7
 11858  0B8E  2BA4               	goto	l3901
 11859  0B8F  3001               	movlw	1
 11860  0B90                     u5385:
 11861  0B90  35C2               	lslf	___flmul@prod,f
 11862  0B91  0DC3               	rlf	___flmul@prod+1,f
 11863  0B92  0DC4               	rlf	___flmul@prod+2,f
 11864  0B93  0DC5               	rlf	___flmul@prod+3,f
 11865  0B94  0B89               	decfsz	9,f
 11866  0B95  2B90               	goto	u5385
 11867  0B96  1BBF               	btfsc	___flmul@grs+3,7
 11868  0B97  1442               	bsf	___flmul@prod,0
 11869  0B98  3001               	movlw	1
 11870  0B99                     u5405:
 11871  0B99  35BC               	lslf	___flmul@grs,f
 11872  0B9A  0DBD               	rlf	___flmul@grs+1,f
 11873  0B9B  0DBE               	rlf	___flmul@grs+2,f
 11874  0B9C  0DBF               	rlf	___flmul@grs+3,f
 11875  0B9D  0B89               	decfsz	9,f
 11876  0B9E  2B99               	goto	u5405
 11877  0B9F  30FF               	movlw	255
 11878  0BA0  07C6               	addwf	___flmul@temp,f
 11879  0BA1  30FF               	movlw	255
 11880  0BA2  3DC7               	addwfc	___flmul@temp+1,f
 11881  0BA3  2B8D               	goto	l3899
 11882  0BA4                     l3901:
 11883  0BA4  01C0               	clrf	___flmul@aexp
 11884  0BA5  1FBF               	btfss	___flmul@grs+3,7
 11885  0BA6  2BBD               	goto	l3911
 11886  0BA7  30FF               	movlw	255
 11887  0BA8  053C               	andwf	___flmul@grs,w
 11888  0BA9  00B6               	movwf	??___flmul
 11889  0BAA  30FF               	movlw	255
 11890  0BAB  053D               	andwf	___flmul@grs+1,w
 11891  0BAC  00B7               	movwf	??___flmul+1
 11892  0BAD  30FF               	movlw	255
 11893  0BAE  053E               	andwf	___flmul@grs+2,w
 11894  0BAF  00B8               	movwf	??___flmul+2
 11895  0BB0  307F               	movlw	127
 11896  0BB1  053F               	andwf	___flmul@grs+3,w
 11897  0BB2  00B9               	movwf	??___flmul+3
 11898  0BB3  0839               	movf	??___flmul+3,w
 11899  0BB4  0438               	iorwf	??___flmul+2,w
 11900  0BB5  0437               	iorwf	??___flmul+1,w
 11901  0BB6  0436               	iorwf	??___flmul,w
 11902  0BB7  1903               	skipnz
 11903  0BB8  1842               	btfsc	___flmul@prod,0
 11904  0BB9  2BBB               	goto	l3907
 11905  0BBA  2BBD               	goto	l3911
 11906  0BBB                     l3907:
 11907  0BBB  01C0               	clrf	___flmul@aexp
 11908  0BBC  0AC0               	incf	___flmul@aexp,f
 11909  0BBD                     l3911:
 11910  0BBD  0840               	movf	___flmul@aexp,w
 11911  0BBE  1903               	btfsc	3,2
 11912  0BBF  2BE6               	goto	l3921
 11913  0BC0  3001               	movlw	1
 11914  0BC1  07C2               	addwf	___flmul@prod,f
 11915  0BC2  3000               	movlw	0
 11916  0BC3  3DC3               	addwfc	___flmul@prod+1,f
 11917  0BC4  3000               	movlw	0
 11918  0BC5  3DC4               	addwfc	___flmul@prod+2,f
 11919  0BC6  3000               	movlw	0
 11920  0BC7  3DC5               	addwfc	___flmul@prod+3,f
 11921  0BC8  1C45               	btfss	___flmul@prod+3,0
 11922  0BC9  2BE6               	goto	l3921
 11923  0BCA  0842               	movf	___flmul@prod,w
 11924  0BCB  00B6               	movwf	??___flmul
 11925  0BCC  0843               	movf	___flmul@prod+1,w
 11926  0BCD  00B7               	movwf	??___flmul+1
 11927  0BCE  0844               	movf	___flmul@prod+2,w
 11928  0BCF  00B8               	movwf	??___flmul+2
 11929  0BD0  0845               	movf	___flmul@prod+3,w
 11930  0BD1  00B9               	movwf	??___flmul+3
 11931  0BD2  3001               	movlw	1
 11932  0BD3  00BA               	movwf	??___flmul+4
 11933  0BD4                     u5475:
 11934  0BD4  37B9               	asrf	??___flmul+3,f
 11935  0BD5  0CB8               	rrf	??___flmul+2,f
 11936  0BD6  0CB7               	rrf	??___flmul+1,f
 11937  0BD7  0CB6               	rrf	??___flmul,f
 11938  0BD8  0BBA               	decfsz	??___flmul+4,f
 11939  0BD9  2BD4               	goto	u5475
 11940  0BDA  0839               	movf	??___flmul+3,w
 11941  0BDB  00C5               	movwf	___flmul@prod+3
 11942  0BDC  0838               	movf	??___flmul+2,w
 11943  0BDD  00C4               	movwf	___flmul@prod+2
 11944  0BDE  0837               	movf	??___flmul+1,w
 11945  0BDF  00C3               	movwf	___flmul@prod+1
 11946  0BE0  0836               	movf	??___flmul,w
 11947  0BE1  00C2               	movwf	___flmul@prod
 11948  0BE2  3001               	movlw	1
 11949  0BE3  07C6               	addwf	___flmul@temp,f
 11950  0BE4  3000               	movlw	0
 11951  0BE5  3DC7               	addwfc	___flmul@temp+1,f
 11952  0BE6                     l3921:
 11953  0BE6  0847               	movf	___flmul@temp+1,w
 11954  0BE7  3A80               	xorlw	128
 11955  0BE8  00B6               	movwf	??___flmul
 11956  0BE9  3080               	movlw	128
 11957  0BEA  0236               	subwf	??___flmul,w
 11958  0BEB  1D03               	skipz
 11959  0BEC  2BEF               	goto	u5485
 11960  0BED  30FF               	movlw	255
 11961  0BEE  0246               	subwf	___flmul@temp,w
 11962  0BEF                     u5485:
 11963  0BEF  1C03               	skipc
 11964  0BF0  2BFB               	goto	l3925
 11965  0BF1  307F               	movlw	127
 11966  0BF2  0020               	movlb	0	; select bank0
 11967  0BF3  00C5               	movwf	___flmul@prod+3
 11968  0BF4  3080               	movlw	128
 11969  0BF5  00C4               	movwf	___flmul@prod+2
 11970  0BF6  3000               	movlw	0
 11971  0BF7  00C3               	movwf	___flmul@prod+1
 11972  0BF8  3000               	movlw	0
 11973  0BF9  00C2               	movwf	___flmul@prod
 11974  0BFA  2C25               	goto	l816
 11975  0BFB                     l3925:
 11976  0BFB  0020               	movlb	0	; select bank0
 11977  0BFC  0847               	movf	___flmul@temp+1,w
 11978  0BFD  3A80               	xorlw	128
 11979  0BFE  00B6               	movwf	??___flmul
 11980  0BFF  3080               	movlw	128
 11981  0C00  0236               	subwf	??___flmul,w
 11982  0C01  1D03               	skipz
 11983  0C02  2C05               	goto	u5495
 11984  0C03  3001               	movlw	1
 11985  0C04  0246               	subwf	___flmul@temp,w
 11986  0C05                     u5495:
 11987  0C05  1803               	skipnc
 11988  0C06  2C12               	goto	l3931
 11989  0C07  3000               	movlw	0
 11990  0C08  0020               	movlb	0	; select bank0
 11991  0C09  00C5               	movwf	___flmul@prod+3
 11992  0C0A  3000               	movlw	0
 11993  0C0B  00C4               	movwf	___flmul@prod+2
 11994  0C0C  3000               	movlw	0
 11995  0C0D  00C3               	movwf	___flmul@prod+1
 11996  0C0E  3000               	movlw	0
 11997  0C0F  00C2               	movwf	___flmul@prod
 11998  0C10  01BB               	clrf	___flmul@sign
 11999  0C11  2C25               	goto	l816
 12000  0C12                     l3931:
 12001  0C12  0020               	movlb	0	; select bank0
 12002  0C13  0846               	movf	___flmul@temp,w
 12003  0C14  00B6               	movwf	??___flmul
 12004  0C15  0836               	movf	??___flmul,w
 12005  0C16  00C1               	movwf	___flmul@bexp
 12006  0C17  30FF               	movlw	255
 12007  0C18  05C2               	andwf	___flmul@prod,f
 12008  0C19  30FF               	movlw	255
 12009  0C1A  05C3               	andwf	___flmul@prod+1,f
 12010  0C1B  307F               	movlw	127
 12011  0C1C  05C4               	andwf	___flmul@prod+2,f
 12012  0C1D  3000               	movlw	0
 12013  0C1E  05C5               	andwf	___flmul@prod+3,f
 12014  0C1F  1841               	btfsc	___flmul@bexp,0
 12015  0C20  17C4               	bsf	___flmul@prod+2,7
 12016  0C21  3641               	lsrf	___flmul@bexp,w
 12017  0C22  00B6               	movwf	??___flmul
 12018  0C23  0836               	movf	??___flmul,w
 12019  0C24  00C5               	movwf	___flmul@prod+3
 12020  0C25                     l816:
 12021  0C25  083B               	movf	___flmul@sign,w
 12022  0C26  00B6               	movwf	??___flmul
 12023  0C27  0836               	movf	??___flmul,w
 12024  0C28  04C5               	iorwf	___flmul@prod+3,f
 12025  0C29  0845               	movf	___flmul@prod+3,w
 12026  0C2A  00B1               	movwf	?___flmul+3
 12027  0C2B  0844               	movf	___flmul@prod+2,w
 12028  0C2C  00B0               	movwf	?___flmul+2
 12029  0C2D  0843               	movf	___flmul@prod+1,w
 12030  0C2E  00AF               	movwf	?___flmul+1
 12031  0C2F  0842               	movf	___flmul@prod,w
 12032  0C30  00AE               	movwf	?___flmul
 12033  0C31  0008               	return
 12034  0C32                     __end_of___flmul:
 12035                           
 12036                           	psect	text26
 12037  1A55                     __ptext26:	
 12038 ;; *************** function __Umul8_16 *****************
 12039 ;; Defined at:
 12040 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul8_16.c"
 12041 ;; Parameters:    Size  Location     Type
 12042 ;;  multiplier      1    wreg     unsigned char 
 12043 ;;  multiplicand    1    0[COMMON] unsigned char 
 12044 ;; Auto vars:     Size  Location     Type
 12045 ;;  multiplier      1    8[COMMON] unsigned char 
 12046 ;;  word_mpld       2    6[COMMON] unsigned int 
 12047 ;;  product         2    4[COMMON] unsigned int 
 12048 ;; Return value:  Size  Location     Type
 12049 ;;                  2    0[COMMON] unsigned int 
 12050 ;; Registers used:
 12051 ;;		wreg, status,2, status,0
 12052 ;; Tracked objects:
 12053 ;;		On entry : 0/0
 12054 ;;		On exit  : 0/0
 12055 ;;		Unchanged: 0/0
 12056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12057 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12058 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12059 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12060 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12061 ;;Total ram usage:        9 bytes
 12062 ;; Hardware stack levels used: 1
 12063 ;; This function calls:
 12064 ;;		Nothing
 12065 ;; This function is called by:
 12066 ;;		___flmul
 12067 ;; This function uses a non-reentrant model
 12068 ;;
 12069                           
 12070                           
 12071                           ;psect for function __Umul8_16
 12072  1A55                     __Umul8_16:
 12073                           
 12074                           ;incstack = 0
 12075                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 12076                           ;__Umul8_16@multiplier stored from wreg
 12077  1A55  00F8               	movwf	__Umul8_16@multiplier
 12078  1A56  01F4               	clrf	__Umul8_16@product
 12079  1A57  01F5               	clrf	__Umul8_16@product+1
 12080  1A58  0870               	movf	__Umul8_16@multiplicand,w
 12081  1A59  00F2               	movwf	??__Umul8_16
 12082  1A5A  01F3               	clrf	??__Umul8_16+1
 12083  1A5B  0872               	movf	??__Umul8_16,w
 12084  1A5C  00F6               	movwf	__Umul8_16@word_mpld
 12085  1A5D  0873               	movf	??__Umul8_16+1,w
 12086  1A5E  00F7               	movwf	__Umul8_16@word_mpld+1
 12087  1A5F                     l3381:
 12088  1A5F  1C78               	btfss	__Umul8_16@multiplier,0
 12089  1A60  2A65               	goto	l823
 12090  1A61  0876               	movf	__Umul8_16@word_mpld,w
 12091  1A62  07F4               	addwf	__Umul8_16@product,f
 12092  1A63  0877               	movf	__Umul8_16@word_mpld+1,w
 12093  1A64  3DF5               	addwfc	__Umul8_16@product+1,f
 12094  1A65                     l823:
 12095  1A65  3001               	movlw	1
 12096  1A66                     u4255:
 12097  1A66  35F6               	lslf	__Umul8_16@word_mpld,f
 12098  1A67  0DF7               	rlf	__Umul8_16@word_mpld+1,f
 12099  1A68  0B89               	decfsz	9,f
 12100  1A69  2A66               	goto	u4255
 12101  1A6A  1003               	clrc
 12102  1A6B  0CF8               	rrf	__Umul8_16@multiplier,f
 12103  1A6C  0878               	movf	__Umul8_16@multiplier,w
 12104  1A6D  1D03               	btfss	3,2
 12105  1A6E  2A5F               	goto	l3381
 12106  1A6F  0875               	movf	__Umul8_16@product+1,w
 12107  1A70  00F1               	movwf	?__Umul8_16+1
 12108  1A71  0874               	movf	__Umul8_16@product,w
 12109  1A72  00F0               	movwf	?__Umul8_16
 12110  1A73  0008               	return
 12111  1A74                     __end_of__Umul8_16:
 12112                           
 12113                           	psect	text27
 12114  1EEE                     __ptext27:	
 12115 ;; *************** function ___flge *****************
 12116 ;; Defined at:
 12117 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
 12118 ;; Parameters:    Size  Location     Type
 12119 ;;  ff1             4   40[BANK0 ] unsigned int 
 12120 ;;  ff2             4   44[BANK0 ] unsigned int 
 12121 ;; Auto vars:     Size  Location     Type
 12122 ;;		None
 12123 ;; Return value:  Size  Location     Type
 12124 ;;		None               void
 12125 ;; Registers used:
 12126 ;;		wreg, status,2, status,0
 12127 ;; Tracked objects:
 12128 ;;		On entry : 0/0
 12129 ;;		On exit  : 0/0
 12130 ;;		Unchanged: 0/0
 12131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12132 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12134 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12135 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12136 ;;Total ram usage:       12 bytes
 12137 ;; Hardware stack levels used: 1
 12138 ;; This function calls:
 12139 ;;		Nothing
 12140 ;; This function is called by:
 12141 ;;		_efgtoa
 12142 ;; This function uses a non-reentrant model
 12143 ;;
 12144                           
 12145                           
 12146                           ;psect for function ___flge
 12147  1EEE                     ___flge:
 12148                           
 12149                           ;incstack = 0
 12150                           ; Regs used in ___flge: [wreg+status,2+status,0]
 12151  1EEE  3000               	movlw	0
 12152  1EEF  0020               	movlb	0	; select bank0
 12153  1EF0  0548               	andwf	___flge@ff1,w
 12154  1EF1  00D0               	movwf	??___flge
 12155  1EF2  3000               	movlw	0
 12156  1EF3  0549               	andwf	___flge@ff1+1,w
 12157  1EF4  00D1               	movwf	??___flge+1
 12158  1EF5  3080               	movlw	128
 12159  1EF6  054A               	andwf	___flge@ff1+2,w
 12160  1EF7  00D2               	movwf	??___flge+2
 12161  1EF8  307F               	movlw	127
 12162  1EF9  054B               	andwf	___flge@ff1+3,w
 12163  1EFA  00D3               	movwf	??___flge+3
 12164  1EFB  0853               	movf	??___flge+3,w
 12165  1EFC  0452               	iorwf	??___flge+2,w
 12166  1EFD  0451               	iorwf	??___flge+1,w
 12167  1EFE  0450               	iorwf	??___flge,w
 12168  1EFF  1D03               	skipz
 12169  1F00  2F09               	goto	l585
 12170  1F01  3000               	movlw	0
 12171  1F02  00CB               	movwf	___flge@ff1+3
 12172  1F03  3000               	movlw	0
 12173  1F04  00CA               	movwf	___flge@ff1+2
 12174  1F05  3000               	movlw	0
 12175  1F06  00C9               	movwf	___flge@ff1+1
 12176  1F07  3000               	movlw	0
 12177  1F08  00C8               	movwf	___flge@ff1
 12178  1F09                     l585:
 12179  1F09  3000               	movlw	0
 12180  1F0A  054C               	andwf	___flge@ff2,w
 12181  1F0B  00D0               	movwf	??___flge
 12182  1F0C  3000               	movlw	0
 12183  1F0D  054D               	andwf	___flge@ff2+1,w
 12184  1F0E  00D1               	movwf	??___flge+1
 12185  1F0F  3080               	movlw	128
 12186  1F10  054E               	andwf	___flge@ff2+2,w
 12187  1F11  00D2               	movwf	??___flge+2
 12188  1F12  307F               	movlw	127
 12189  1F13  054F               	andwf	___flge@ff2+3,w
 12190  1F14  00D3               	movwf	??___flge+3
 12191  1F15  0853               	movf	??___flge+3,w
 12192  1F16  0452               	iorwf	??___flge+2,w
 12193  1F17  0451               	iorwf	??___flge+1,w
 12194  1F18  0450               	iorwf	??___flge,w
 12195  1F19  1D03               	skipz
 12196  1F1A  2F23               	goto	l3599
 12197  1F1B  3000               	movlw	0
 12198  1F1C  00CF               	movwf	___flge@ff2+3
 12199  1F1D  3000               	movlw	0
 12200  1F1E  00CE               	movwf	___flge@ff2+2
 12201  1F1F  3000               	movlw	0
 12202  1F20  00CD               	movwf	___flge@ff2+1
 12203  1F21  3000               	movlw	0
 12204  1F22  00CC               	movwf	___flge@ff2
 12205  1F23                     l3599:
 12206  1F23  1FCB               	btfss	___flge@ff1+3,7
 12207  1F24  2F3D               	goto	l3603
 12208  1F25  3000               	movlw	0
 12209  1F26  00D0               	movwf	??___flge
 12210  1F27  3000               	movlw	0
 12211  1F28  00D1               	movwf	??___flge+1
 12212  1F29  3000               	movlw	0
 12213  1F2A  00D2               	movwf	??___flge+2
 12214  1F2B  3080               	movlw	128
 12215  1F2C  00D3               	movwf	??___flge+3
 12216  1F2D  0848               	movf	___flge@ff1,w
 12217  1F2E  02D0               	subwf	??___flge,f
 12218  1F2F  0849               	movf	___flge@ff1+1,w
 12219  1F30  3BD1               	subwfb	??___flge+1,f
 12220  1F31  084A               	movf	___flge@ff1+2,w
 12221  1F32  3BD2               	subwfb	??___flge+2,f
 12222  1F33  084B               	movf	___flge@ff1+3,w
 12223  1F34  3BD3               	subwfb	??___flge+3,f
 12224  1F35  0853               	movf	??___flge+3,w
 12225  1F36  00CB               	movwf	___flge@ff1+3
 12226  1F37  0852               	movf	??___flge+2,w
 12227  1F38  00CA               	movwf	___flge@ff1+2
 12228  1F39  0851               	movf	??___flge+1,w
 12229  1F3A  00C9               	movwf	___flge@ff1+1
 12230  1F3B  0850               	movf	??___flge,w
 12231  1F3C  00C8               	movwf	___flge@ff1
 12232  1F3D                     l3603:
 12233  1F3D  1FCF               	btfss	___flge@ff2+3,7
 12234  1F3E  2F57               	goto	l588
 12235  1F3F  3000               	movlw	0
 12236  1F40  00D0               	movwf	??___flge
 12237  1F41  3000               	movlw	0
 12238  1F42  00D1               	movwf	??___flge+1
 12239  1F43  3000               	movlw	0
 12240  1F44  00D2               	movwf	??___flge+2
 12241  1F45  3080               	movlw	128
 12242  1F46  00D3               	movwf	??___flge+3
 12243  1F47  084C               	movf	___flge@ff2,w
 12244  1F48  02D0               	subwf	??___flge,f
 12245  1F49  084D               	movf	___flge@ff2+1,w
 12246  1F4A  3BD1               	subwfb	??___flge+1,f
 12247  1F4B  084E               	movf	___flge@ff2+2,w
 12248  1F4C  3BD2               	subwfb	??___flge+2,f
 12249  1F4D  084F               	movf	___flge@ff2+3,w
 12250  1F4E  3BD3               	subwfb	??___flge+3,f
 12251  1F4F  0853               	movf	??___flge+3,w
 12252  1F50  00CF               	movwf	___flge@ff2+3
 12253  1F51  0852               	movf	??___flge+2,w
 12254  1F52  00CE               	movwf	___flge@ff2+2
 12255  1F53  0851               	movf	??___flge+1,w
 12256  1F54  00CD               	movwf	___flge@ff2+1
 12257  1F55  0850               	movf	??___flge,w
 12258  1F56  00CC               	movwf	___flge@ff2
 12259  1F57                     l588:
 12260  1F57  3080               	movlw	128
 12261  1F58  06CB               	xorwf	___flge@ff1+3,f
 12262  1F59  3080               	movlw	128
 12263  1F5A  06CF               	xorwf	___flge@ff2+3,f
 12264  1F5B  084F               	movf	___flge@ff2+3,w
 12265  1F5C  024B               	subwf	___flge@ff1+3,w
 12266  1F5D  1D03               	skipz
 12267  1F5E  0008               	return
 12268  1F5F  084E               	movf	___flge@ff2+2,w
 12269  1F60  024A               	subwf	___flge@ff1+2,w
 12270  1F61  1D03               	skipz
 12271  1F62  0008               	return
 12272  1F63  084D               	movf	___flge@ff2+1,w
 12273  1F64  0249               	subwf	___flge@ff1+1,w
 12274  1F65  1D03               	skipz
 12275  1F66  0008               	return
 12276  1F67  084C               	movf	___flge@ff2,w
 12277  1F68  0248               	subwf	___flge@ff1,w
 12278  1F69  0008               	return
 12279  1F6A                     __end_of___flge:
 12280                           
 12281                           	psect	text28
 12282  1BEF                     __ptext28:	
 12283 ;; *************** function ___fleq *****************
 12284 ;; Defined at:
 12285 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
 12286 ;; Parameters:    Size  Location     Type
 12287 ;;  ff1             4    0[COMMON] unsigned int 
 12288 ;;  ff2             4    4[COMMON] unsigned int 
 12289 ;; Auto vars:     Size  Location     Type
 12290 ;;		None
 12291 ;; Return value:  Size  Location     Type
 12292 ;;		None               void
 12293 ;; Registers used:
 12294 ;;		wreg, status,2, status,0
 12295 ;; Tracked objects:
 12296 ;;		On entry : 0/0
 12297 ;;		On exit  : 0/0
 12298 ;;		Unchanged: 0/0
 12299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12300 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12302 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12303 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12304 ;;Total ram usage:       12 bytes
 12305 ;; Hardware stack levels used: 1
 12306 ;; This function calls:
 12307 ;;		Nothing
 12308 ;; This function is called by:
 12309 ;;		_efgtoa
 12310 ;; This function uses a non-reentrant model
 12311 ;;
 12312                           
 12313                           
 12314                           ;psect for function ___fleq
 12315  1BEF                     ___fleq:
 12316                           
 12317                           ;incstack = 0
 12318                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 12319  1BEF  3000               	movlw	0
 12320  1BF0  0570               	andwf	___fleq@ff1,w
 12321  1BF1  00F8               	movwf	??___fleq
 12322  1BF2  3000               	movlw	0
 12323  1BF3  0571               	andwf	___fleq@ff1+1,w
 12324  1BF4  00F9               	movwf	??___fleq+1
 12325  1BF5  3080               	movlw	128
 12326  1BF6  0572               	andwf	___fleq@ff1+2,w
 12327  1BF7  00FA               	movwf	??___fleq+2
 12328  1BF8  307F               	movlw	127
 12329  1BF9  0573               	andwf	___fleq@ff1+3,w
 12330  1BFA  00FB               	movwf	??___fleq+3
 12331  1BFB  087B               	movf	??___fleq+3,w
 12332  1BFC  047A               	iorwf	??___fleq+2,w
 12333  1BFD  0479               	iorwf	??___fleq+1,w
 12334  1BFE  0478               	iorwf	??___fleq,w
 12335  1BFF  1D03               	skipz
 12336  1C00  2C09               	goto	l576
 12337  1C01  3000               	movlw	0
 12338  1C02  00F3               	movwf	___fleq@ff1+3
 12339  1C03  3000               	movlw	0
 12340  1C04  00F2               	movwf	___fleq@ff1+2
 12341  1C05  3000               	movlw	0
 12342  1C06  00F1               	movwf	___fleq@ff1+1
 12343  1C07  3000               	movlw	0
 12344  1C08  00F0               	movwf	___fleq@ff1
 12345  1C09                     l576:
 12346  1C09  3000               	movlw	0
 12347  1C0A  0574               	andwf	___fleq@ff2,w
 12348  1C0B  00F8               	movwf	??___fleq
 12349  1C0C  3000               	movlw	0
 12350  1C0D  0575               	andwf	___fleq@ff2+1,w
 12351  1C0E  00F9               	movwf	??___fleq+1
 12352  1C0F  3080               	movlw	128
 12353  1C10  0576               	andwf	___fleq@ff2+2,w
 12354  1C11  00FA               	movwf	??___fleq+2
 12355  1C12  307F               	movlw	127
 12356  1C13  0577               	andwf	___fleq@ff2+3,w
 12357  1C14  00FB               	movwf	??___fleq+3
 12358  1C15  087B               	movf	??___fleq+3,w
 12359  1C16  047A               	iorwf	??___fleq+2,w
 12360  1C17  0479               	iorwf	??___fleq+1,w
 12361  1C18  0478               	iorwf	??___fleq,w
 12362  1C19  1D03               	skipz
 12363  1C1A  2C23               	goto	l577
 12364  1C1B  3000               	movlw	0
 12365  1C1C  00F7               	movwf	___fleq@ff2+3
 12366  1C1D  3000               	movlw	0
 12367  1C1E  00F6               	movwf	___fleq@ff2+2
 12368  1C1F  3000               	movlw	0
 12369  1C20  00F5               	movwf	___fleq@ff2+1
 12370  1C21  3000               	movlw	0
 12371  1C22  00F4               	movwf	___fleq@ff2
 12372  1C23                     l577:
 12373  1C23  0877               	movf	___fleq@ff2+3,w
 12374  1C24  0673               	xorwf	___fleq@ff1+3,w
 12375  1C25  1D03               	skipz
 12376  1C26  2C31               	goto	u4795
 12377  1C27  0876               	movf	___fleq@ff2+2,w
 12378  1C28  0672               	xorwf	___fleq@ff1+2,w
 12379  1C29  1D03               	skipz
 12380  1C2A  2C31               	goto	u4795
 12381  1C2B  0875               	movf	___fleq@ff2+1,w
 12382  1C2C  0671               	xorwf	___fleq@ff1+1,w
 12383  1C2D  1D03               	skipz
 12384  1C2E  2C31               	goto	u4795
 12385  1C2F  0874               	movf	___fleq@ff2,w
 12386  1C30  0670               	xorwf	___fleq@ff1,w
 12387  1C31                     u4795:
 12388  1C31  1903               	skipnz
 12389  1C32  2C35               	goto	l3589
 12390  1C33  1003               	clrc
 12391  1C34  0008               	return
 12392  1C35                     l3589:
 12393  1C35  1403               	setc
 12394  1C36  0008               	return
 12395  1C37                     __end_of___fleq:
 12396                           
 12397                           	psect	text29
 12398  1686                     __ptext29:	
 12399 ;; *************** function ___fldiv *****************
 12400 ;; Defined at:
 12401 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
 12402 ;; Parameters:    Size  Location     Type
 12403 ;;  a               4    0[COMMON] unsigned int 
 12404 ;;  b               4    4[COMMON] unsigned int 
 12405 ;; Auto vars:     Size  Location     Type
 12406 ;;  grs             4    7[BANK0 ] unsigned long 
 12407 ;;  rem             4    0[BANK0 ] unsigned long 
 12408 ;;  new_exp         2    5[BANK0 ] int 
 12409 ;;  aexp            1   12[BANK0 ] unsigned char 
 12410 ;;  bexp            1   11[BANK0 ] unsigned char 
 12411 ;;  sign            1    4[BANK0 ] unsigned char 
 12412 ;; Return value:  Size  Location     Type
 12413 ;;                  4    0[COMMON] unsigned char 
 12414 ;; Registers used:
 12415 ;;		wreg, status,2, status,0
 12416 ;; Tracked objects:
 12417 ;;		On entry : 0/0
 12418 ;;		On exit  : 0/0
 12419 ;;		Unchanged: 0/0
 12420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12421 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12422 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12423 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12424 ;;      Totals:        13      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12425 ;;Total ram usage:       26 bytes
 12426 ;; Hardware stack levels used: 1
 12427 ;; This function calls:
 12428 ;;		Nothing
 12429 ;; This function is called by:
 12430 ;;		_readEmissivity
 12431 ;;		_efgtoa
 12432 ;; This function uses a non-reentrant model
 12433 ;;
 12434                           
 12435                           
 12436                           ;psect for function ___fldiv
 12437  1686                     ___fldiv:
 12438                           
 12439                           ;incstack = 0
 12440                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 12441  1686  0877               	movf	___fldiv@b+3,w
 12442  1687  3980               	andlw	128
 12443  1688  00F8               	movwf	??___fldiv
 12444  1689  0878               	movf	??___fldiv,w
 12445  168A  0020               	movlb	0	; select bank0
 12446  168B  00A4               	movwf	___fldiv@sign
 12447  168C  3577               	lslf	___fldiv@b+3,w
 12448  168D  00F8               	movwf	??___fldiv
 12449  168E  0878               	movf	??___fldiv,w
 12450  168F  00AB               	movwf	___fldiv@bexp
 12451  1690  1BF6               	btfsc	___fldiv@b+2,7
 12452  1691  142B               	bsf	___fldiv@bexp,0
 12453  1692  082B               	movf	___fldiv@bexp,w
 12454  1693  1903               	btfsc	3,2
 12455  1694  2EA3               	goto	l3681
 12456  1695  0A2B               	incf	___fldiv@bexp,w
 12457  1696  1D03               	btfss	3,2
 12458  1697  2EA0               	goto	l3677
 12459  1698  3000               	movlw	0
 12460  1699  00F7               	movwf	___fldiv@b+3
 12461  169A  3000               	movlw	0
 12462  169B  00F6               	movwf	___fldiv@b+2
 12463  169C  3000               	movlw	0
 12464  169D  00F5               	movwf	___fldiv@b+1
 12465  169E  3000               	movlw	0
 12466  169F  00F4               	movwf	___fldiv@b
 12467  16A0                     l3677:
 12468  16A0  17F6               	bsf	___fldiv@b+2,7
 12469  16A1  01F7               	clrf	___fldiv@b+3
 12470  16A2  2EAB               	goto	l3683
 12471  16A3                     l3681:
 12472  16A3  3000               	movlw	0
 12473  16A4  00F7               	movwf	___fldiv@b+3
 12474  16A5  3000               	movlw	0
 12475  16A6  00F6               	movwf	___fldiv@b+2
 12476  16A7  3000               	movlw	0
 12477  16A8  00F5               	movwf	___fldiv@b+1
 12478  16A9  3000               	movlw	0
 12479  16AA  00F4               	movwf	___fldiv@b
 12480  16AB                     l3683:
 12481  16AB  0873               	movf	___fldiv@a+3,w
 12482  16AC  3980               	andlw	128
 12483  16AD  00F8               	movwf	??___fldiv
 12484  16AE  0878               	movf	??___fldiv,w
 12485  16AF  06A4               	xorwf	___fldiv@sign,f
 12486  16B0  3573               	lslf	___fldiv@a+3,w
 12487  16B1  00F8               	movwf	??___fldiv
 12488  16B2  0878               	movf	??___fldiv,w
 12489  16B3  00AC               	movwf	___fldiv@aexp
 12490  16B4  1BF2               	btfsc	___fldiv@a+2,7
 12491  16B5  142C               	bsf	___fldiv@aexp,0
 12492  16B6  082C               	movf	___fldiv@aexp,w
 12493  16B7  1903               	btfsc	3,2
 12494  16B8  2EC7               	goto	l3701
 12495  16B9  0A2C               	incf	___fldiv@aexp,w
 12496  16BA  1D03               	btfss	3,2
 12497  16BB  2EC4               	goto	l3697
 12498  16BC  3000               	movlw	0
 12499  16BD  00F3               	movwf	___fldiv@a+3
 12500  16BE  3000               	movlw	0
 12501  16BF  00F2               	movwf	___fldiv@a+2
 12502  16C0  3000               	movlw	0
 12503  16C1  00F1               	movwf	___fldiv@a+1
 12504  16C2  3000               	movlw	0
 12505  16C3  00F0               	movwf	___fldiv@a
 12506  16C4                     l3697:
 12507  16C4  17F2               	bsf	___fldiv@a+2,7
 12508  16C5  01F3               	clrf	___fldiv@a+3
 12509  16C6  2ECF               	goto	l764
 12510  16C7                     l3701:
 12511  16C7  3000               	movlw	0
 12512  16C8  00F3               	movwf	___fldiv@a+3
 12513  16C9  3000               	movlw	0
 12514  16CA  00F2               	movwf	___fldiv@a+2
 12515  16CB  3000               	movlw	0
 12516  16CC  00F1               	movwf	___fldiv@a+1
 12517  16CD  3000               	movlw	0
 12518  16CE  00F0               	movwf	___fldiv@a
 12519  16CF                     l764:
 12520  16CF  0873               	movf	___fldiv@a+3,w
 12521  16D0  0472               	iorwf	___fldiv@a+2,w
 12522  16D1  0471               	iorwf	___fldiv@a+1,w
 12523  16D2  0470               	iorwf	___fldiv@a,w
 12524  16D3  1D03               	skipz
 12525  16D4  2EEE               	goto	l3711
 12526  16D5  3000               	movlw	0
 12527  16D6  00F7               	movwf	___fldiv@b+3
 12528  16D7  3000               	movlw	0
 12529  16D8  00F6               	movwf	___fldiv@b+2
 12530  16D9  3000               	movlw	0
 12531  16DA  00F5               	movwf	___fldiv@b+1
 12532  16DB  3000               	movlw	0
 12533  16DC  00F4               	movwf	___fldiv@b
 12534  16DD  3080               	movlw	128
 12535  16DE  04F6               	iorwf	___fldiv@b+2,f
 12536  16DF  307F               	movlw	127
 12537  16E0  04F7               	iorwf	___fldiv@b+3,f
 12538  16E1                     L13:
 12539  16E1  0824               	movf	___fldiv@sign,w
 12540  16E2  00F8               	movwf	??___fldiv
 12541  16E3  0878               	movf	??___fldiv,w
 12542  16E4  04F7               	iorwf	___fldiv@b+3,f
 12543  16E5  0877               	movf	___fldiv@b+3,w
 12544  16E6  00F3               	movwf	?___fldiv+3
 12545  16E7  0876               	movf	___fldiv@b+2,w
 12546  16E8  00F2               	movwf	?___fldiv+2
 12547  16E9  0875               	movf	___fldiv@b+1,w
 12548  16EA  00F1               	movwf	?___fldiv+1
 12549  16EB  0874               	movf	___fldiv@b,w
 12550  16EC  00F0               	movwf	?___fldiv
 12551  16ED  0008               	return
 12552  16EE                     l3711:
 12553  16EE  082B               	movf	___fldiv@bexp,w
 12554  16EF  1D03               	btfss	3,2
 12555  16F0  2EFA               	goto	l3717
 12556  16F1  3000               	movlw	0
 12557  16F2  00F3               	movwf	?___fldiv+3
 12558  16F3  3000               	movlw	0
 12559  16F4  00F2               	movwf	?___fldiv+2
 12560  16F5  3000               	movlw	0
 12561  16F6  00F1               	movwf	?___fldiv+1
 12562  16F7  3000               	movlw	0
 12563  16F8  00F0               	movwf	?___fldiv
 12564  16F9  0008               	return
 12565  16FA                     l3717:
 12566  16FA  082B               	movf	___fldiv@bexp,w
 12567  16FB  00F8               	movwf	??___fldiv
 12568  16FC  01F9               	clrf	??___fldiv+1
 12569  16FD  0879               	movf	??___fldiv+1,w
 12570  16FE  00FB               	movwf	??___fldiv+3
 12571  16FF  082C               	movf	___fldiv@aexp,w
 12572  1700  0278               	subwf	??___fldiv,w
 12573  1701  00FA               	movwf	??___fldiv+2
 12574  1702  1C03               	skipc
 12575  1703  03FB               	decf	??___fldiv+3,f
 12576  1704  087A               	movf	??___fldiv+2,w
 12577  1705  3E7F               	addlw	127
 12578  1706  00A5               	movwf	___fldiv@new_exp
 12579  1707  3000               	movlw	0
 12580  1708  3D7B               	addwfc	??___fldiv+3,w
 12581  1709  00A6               	movwf	___fldiv@new_exp+1
 12582  170A  0877               	movf	___fldiv@b+3,w
 12583  170B  00A3               	movwf	___fldiv@rem+3
 12584  170C  0876               	movf	___fldiv@b+2,w
 12585  170D  00A2               	movwf	___fldiv@rem+2
 12586  170E  0875               	movf	___fldiv@b+1,w
 12587  170F  00A1               	movwf	___fldiv@rem+1
 12588  1710  0874               	movf	___fldiv@b,w
 12589  1711  00A0               	movwf	___fldiv@rem
 12590  1712  3000               	movlw	0
 12591  1713  00F7               	movwf	___fldiv@b+3
 12592  1714  3000               	movlw	0
 12593  1715  00F6               	movwf	___fldiv@b+2
 12594  1716  3000               	movlw	0
 12595  1717  00F5               	movwf	___fldiv@b+1
 12596  1718  3000               	movlw	0
 12597  1719  00F4               	movwf	___fldiv@b
 12598  171A  3000               	movlw	0
 12599  171B  00AA               	movwf	___fldiv@grs+3
 12600  171C  3000               	movlw	0
 12601  171D  00A9               	movwf	___fldiv@grs+2
 12602  171E  3000               	movlw	0
 12603  171F  00A8               	movwf	___fldiv@grs+1
 12604  1720  3000               	movlw	0
 12605  1721  00A7               	movwf	___fldiv@grs
 12606  1722  01AC               	clrf	___fldiv@aexp
 12607  1723                     l3745:
 12608  1723  301A               	movlw	26
 12609  1724  022C               	subwf	___fldiv@aexp,w
 12610  1725  1803               	btfsc	3,0
 12611  1726  2F5F               	goto	l3747
 12612  1727  082C               	movf	___fldiv@aexp,w
 12613  1728  1903               	btfsc	3,2
 12614  1729  2F41               	goto	l3737
 12615  172A  3001               	movlw	1
 12616  172B                     u5055:
 12617  172B  35A0               	lslf	___fldiv@rem,f
 12618  172C  0DA1               	rlf	___fldiv@rem+1,f
 12619  172D  0DA2               	rlf	___fldiv@rem+2,f
 12620  172E  0DA3               	rlf	___fldiv@rem+3,f
 12621  172F  0B89               	decfsz	9,f
 12622  1730  2F2B               	goto	u5055
 12623  1731  3001               	movlw	1
 12624  1732                     u5065:
 12625  1732  35F4               	lslf	___fldiv@b,f
 12626  1733  0DF5               	rlf	___fldiv@b+1,f
 12627  1734  0DF6               	rlf	___fldiv@b+2,f
 12628  1735  0DF7               	rlf	___fldiv@b+3,f
 12629  1736  0B89               	decfsz	9,f
 12630  1737  2F32               	goto	u5065
 12631  1738  1BAA               	btfsc	___fldiv@grs+3,7
 12632  1739  1474               	bsf	___fldiv@b,0
 12633  173A  3001               	movlw	1
 12634  173B                     u5085:
 12635  173B  35A7               	lslf	___fldiv@grs,f
 12636  173C  0DA8               	rlf	___fldiv@grs+1,f
 12637  173D  0DA9               	rlf	___fldiv@grs+2,f
 12638  173E  0DAA               	rlf	___fldiv@grs+3,f
 12639  173F  0B89               	decfsz	9,f
 12640  1740  2F3B               	goto	u5085
 12641  1741                     l3737:
 12642  1741  0873               	movf	___fldiv@a+3,w
 12643  1742  0223               	subwf	___fldiv@rem+3,w
 12644  1743  1D03               	skipz
 12645  1744  2F4F               	goto	u5095
 12646  1745  0872               	movf	___fldiv@a+2,w
 12647  1746  0222               	subwf	___fldiv@rem+2,w
 12648  1747  1D03               	skipz
 12649  1748  2F4F               	goto	u5095
 12650  1749  0871               	movf	___fldiv@a+1,w
 12651  174A  0221               	subwf	___fldiv@rem+1,w
 12652  174B  1D03               	skipz
 12653  174C  2F4F               	goto	u5095
 12654  174D  0870               	movf	___fldiv@a,w
 12655  174E  0220               	subwf	___fldiv@rem,w
 12656  174F                     u5095:
 12657  174F  1C03               	skipc
 12658  1750  2F5A               	goto	l3743
 12659  1751  172A               	bsf	___fldiv@grs+3,6
 12660  1752  0870               	movf	___fldiv@a,w
 12661  1753  02A0               	subwf	___fldiv@rem,f
 12662  1754  0871               	movf	___fldiv@a+1,w
 12663  1755  3BA1               	subwfb	___fldiv@rem+1,f
 12664  1756  0872               	movf	___fldiv@a+2,w
 12665  1757  3BA2               	subwfb	___fldiv@rem+2,f
 12666  1758  0873               	movf	___fldiv@a+3,w
 12667  1759  3BA3               	subwfb	___fldiv@rem+3,f
 12668  175A                     l3743:
 12669  175A  3001               	movlw	1
 12670  175B  00F8               	movwf	??___fldiv
 12671  175C  0878               	movf	??___fldiv,w
 12672  175D  07AC               	addwf	___fldiv@aexp,f
 12673  175E  2F23               	goto	l3745
 12674  175F                     l3747:
 12675  175F  0823               	movf	___fldiv@rem+3,w
 12676  1760  0422               	iorwf	___fldiv@rem+2,w
 12677  1761  0421               	iorwf	___fldiv@rem+1,w
 12678  1762  0420               	iorwf	___fldiv@rem,w
 12679  1763  1D03               	btfss	3,2
 12680  1764  1427               	bsf	___fldiv@grs,0
 12681  1765                     l3761:
 12682  1765  1BF6               	btfsc	___fldiv@b+2,7
 12683  1766  2F7C               	goto	l3763
 12684  1767  3001               	movlw	1
 12685  1768                     u5125:
 12686  1768  35F4               	lslf	___fldiv@b,f
 12687  1769  0DF5               	rlf	___fldiv@b+1,f
 12688  176A  0DF6               	rlf	___fldiv@b+2,f
 12689  176B  0DF7               	rlf	___fldiv@b+3,f
 12690  176C  0B89               	decfsz	9,f
 12691  176D  2F68               	goto	u5125
 12692  176E  1BAA               	btfsc	___fldiv@grs+3,7
 12693  176F  1474               	bsf	___fldiv@b,0
 12694  1770  3001               	movlw	1
 12695  1771                     u5145:
 12696  1771  35A7               	lslf	___fldiv@grs,f
 12697  1772  0DA8               	rlf	___fldiv@grs+1,f
 12698  1773  0DA9               	rlf	___fldiv@grs+2,f
 12699  1774  0DAA               	rlf	___fldiv@grs+3,f
 12700  1775  0B89               	decfsz	9,f
 12701  1776  2F71               	goto	u5145
 12702  1777  30FF               	movlw	255
 12703  1778  07A5               	addwf	___fldiv@new_exp,f
 12704  1779  30FF               	movlw	255
 12705  177A  3DA6               	addwfc	___fldiv@new_exp+1,f
 12706  177B  2F65               	goto	l3761
 12707  177C                     l3763:
 12708  177C  01AC               	clrf	___fldiv@aexp
 12709  177D  1FAA               	btfss	___fldiv@grs+3,7
 12710  177E  2F95               	goto	l3773
 12711  177F  30FF               	movlw	255
 12712  1780  0527               	andwf	___fldiv@grs,w
 12713  1781  00F8               	movwf	??___fldiv
 12714  1782  30FF               	movlw	255
 12715  1783  0528               	andwf	___fldiv@grs+1,w
 12716  1784  00F9               	movwf	??___fldiv+1
 12717  1785  30FF               	movlw	255
 12718  1786  0529               	andwf	___fldiv@grs+2,w
 12719  1787  00FA               	movwf	??___fldiv+2
 12720  1788  307F               	movlw	127
 12721  1789  052A               	andwf	___fldiv@grs+3,w
 12722  178A  00FB               	movwf	??___fldiv+3
 12723  178B  087B               	movf	??___fldiv+3,w
 12724  178C  047A               	iorwf	??___fldiv+2,w
 12725  178D  0479               	iorwf	??___fldiv+1,w
 12726  178E  0478               	iorwf	??___fldiv,w
 12727  178F  1903               	skipnz
 12728  1790  1874               	btfsc	___fldiv@b,0
 12729  1791  2F93               	goto	l3769
 12730  1792  2F95               	goto	l3773
 12731  1793                     l3769:
 12732  1793  01AC               	clrf	___fldiv@aexp
 12733  1794  0AAC               	incf	___fldiv@aexp,f
 12734  1795                     l3773:
 12735  1795  082C               	movf	___fldiv@aexp,w
 12736  1796  1903               	btfsc	3,2
 12737  1797  2FBE               	goto	l3783
 12738  1798  3001               	movlw	1
 12739  1799  07F4               	addwf	___fldiv@b,f
 12740  179A  3000               	movlw	0
 12741  179B  3DF5               	addwfc	___fldiv@b+1,f
 12742  179C  3000               	movlw	0
 12743  179D  3DF6               	addwfc	___fldiv@b+2,f
 12744  179E  3000               	movlw	0
 12745  179F  3DF7               	addwfc	___fldiv@b+3,f
 12746  17A0  1C77               	btfss	___fldiv@b+3,0
 12747  17A1  2FBE               	goto	l3783
 12748  17A2  0874               	movf	___fldiv@b,w
 12749  17A3  00F8               	movwf	??___fldiv
 12750  17A4  0875               	movf	___fldiv@b+1,w
 12751  17A5  00F9               	movwf	??___fldiv+1
 12752  17A6  0876               	movf	___fldiv@b+2,w
 12753  17A7  00FA               	movwf	??___fldiv+2
 12754  17A8  0877               	movf	___fldiv@b+3,w
 12755  17A9  00FB               	movwf	??___fldiv+3
 12756  17AA  3001               	movlw	1
 12757  17AB  00FC               	movwf	??___fldiv+4
 12758  17AC                     u5215:
 12759  17AC  37FB               	asrf	??___fldiv+3,f
 12760  17AD  0CFA               	rrf	??___fldiv+2,f
 12761  17AE  0CF9               	rrf	??___fldiv+1,f
 12762  17AF  0CF8               	rrf	??___fldiv,f
 12763  17B0  0BFC               	decfsz	??___fldiv+4,f
 12764  17B1  2FAC               	goto	u5215
 12765  17B2  087B               	movf	??___fldiv+3,w
 12766  17B3  00F7               	movwf	___fldiv@b+3
 12767  17B4  087A               	movf	??___fldiv+2,w
 12768  17B5  00F6               	movwf	___fldiv@b+2
 12769  17B6  0879               	movf	??___fldiv+1,w
 12770  17B7  00F5               	movwf	___fldiv@b+1
 12771  17B8  0878               	movf	??___fldiv,w
 12772  17B9  00F4               	movwf	___fldiv@b
 12773  17BA  3001               	movlw	1
 12774  17BB  07A5               	addwf	___fldiv@new_exp,f
 12775  17BC  3000               	movlw	0
 12776  17BD  3DA6               	addwfc	___fldiv@new_exp+1,f
 12777  17BE                     l3783:
 12778  17BE  0826               	movf	___fldiv@new_exp+1,w
 12779  17BF  3A80               	xorlw	128
 12780  17C0  00F8               	movwf	??___fldiv
 12781  17C1  3080               	movlw	128
 12782  17C2  0278               	subwf	??___fldiv,w
 12783  17C3  1D03               	skipz
 12784  17C4  2FC7               	goto	u5225
 12785  17C5  30FF               	movlw	255
 12786  17C6  0225               	subwf	___fldiv@new_exp,w
 12787  17C7                     u5225:
 12788  17C7  1C03               	skipc
 12789  17C8  2FD6               	goto	l785
 12790  17C9  30FF               	movlw	255
 12791  17CA  0020               	movlb	0	; select bank0
 12792  17CB  00A5               	movwf	___fldiv@new_exp
 12793  17CC  3000               	movlw	0
 12794  17CD  00A6               	movwf	___fldiv@new_exp+1
 12795  17CE  3000               	movlw	0
 12796  17CF  00F7               	movwf	___fldiv@b+3
 12797  17D0  3000               	movlw	0
 12798  17D1  00F6               	movwf	___fldiv@b+2
 12799  17D2  3000               	movlw	0
 12800  17D3  00F5               	movwf	___fldiv@b+1
 12801  17D4  3000               	movlw	0
 12802  17D5  00F4               	movwf	___fldiv@b
 12803  17D6                     l785:
 12804  17D6  0020               	movlb	0	; select bank0
 12805  17D7  0826               	movf	___fldiv@new_exp+1,w
 12806  17D8  3A80               	xorlw	128
 12807  17D9  00F8               	movwf	??___fldiv
 12808  17DA  3080               	movlw	128
 12809  17DB  0278               	subwf	??___fldiv,w
 12810  17DC  1D03               	skipz
 12811  17DD  2FE0               	goto	u5235
 12812  17DE  3001               	movlw	1
 12813  17DF  0225               	subwf	___fldiv@new_exp,w
 12814  17E0                     u5235:
 12815  17E0  1803               	skipnc
 12816  17E1  2FEE               	goto	l786
 12817  17E2  0020               	movlb	0	; select bank0
 12818  17E3  01A5               	clrf	___fldiv@new_exp
 12819  17E4  01A6               	clrf	___fldiv@new_exp+1
 12820  17E5  3000               	movlw	0
 12821  17E6  00F7               	movwf	___fldiv@b+3
 12822  17E7  3000               	movlw	0
 12823  17E8  00F6               	movwf	___fldiv@b+2
 12824  17E9  3000               	movlw	0
 12825  17EA  00F5               	movwf	___fldiv@b+1
 12826  17EB  3000               	movlw	0
 12827  17EC  00F4               	movwf	___fldiv@b
 12828  17ED  01A4               	clrf	___fldiv@sign
 12829  17EE                     l786:
 12830  17EE  0020               	movlb	0	; select bank0
 12831  17EF  0825               	movf	___fldiv@new_exp,w
 12832  17F0  00F8               	movwf	??___fldiv
 12833  17F1  0878               	movf	??___fldiv,w
 12834  17F2  00AB               	movwf	___fldiv@bexp
 12835  17F3  1C2B               	btfss	___fldiv@bexp,0
 12836  17F4  2FF7               	goto	l3797
 12837  17F5  17F6               	bsf	___fldiv@b+2,7
 12838  17F6  2FFB               	goto	l788
 12839  17F7                     l3797:
 12840  17F7  307F               	movlw	127
 12841  17F8  00F8               	movwf	??___fldiv
 12842  17F9  0878               	movf	??___fldiv,w
 12843  17FA  05F6               	andwf	___fldiv@b+2,f
 12844  17FB                     l788:
 12845  17FB  362B               	lsrf	___fldiv@bexp,w
 12846  17FC  00F8               	movwf	??___fldiv
 12847  17FD  0878               	movf	??___fldiv,w
 12848  17FE  00F7               	movwf	___fldiv@b+3
 12849  17FF  2EE1               	goto	L13
 12850  1800                     __end_of___fldiv:
 12851                           
 12852                           	psect	text30
 12853  1BAA                     __ptext30:	
 12854 ;; *************** function ___awmod *****************
 12855 ;; Defined at:
 12856 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
 12857 ;; Parameters:    Size  Location     Type
 12858 ;;  divisor         2    0[COMMON] int 
 12859 ;;  dividend        2    2[COMMON] int 
 12860 ;; Auto vars:     Size  Location     Type
 12861 ;;  sign            1    6[COMMON] unsigned char 
 12862 ;;  counter         1    5[COMMON] unsigned char 
 12863 ;; Return value:  Size  Location     Type
 12864 ;;                  2    0[COMMON] int 
 12865 ;; Registers used:
 12866 ;;		wreg, status,2, status,0
 12867 ;; Tracked objects:
 12868 ;;		On entry : 0/0
 12869 ;;		On exit  : 0/0
 12870 ;;		Unchanged: 0/0
 12871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12872 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12873 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12874 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12875 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12876 ;;Total ram usage:        7 bytes
 12877 ;; Hardware stack levels used: 1
 12878 ;; This function calls:
 12879 ;;		Nothing
 12880 ;; This function is called by:
 12881 ;;		_efgtoa
 12882 ;; This function uses a non-reentrant model
 12883 ;;
 12884                           
 12885                           
 12886                           ;psect for function ___awmod
 12887  1BAA                     ___awmod:
 12888                           
 12889                           ;incstack = 0
 12890                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 12891  1BAA  01F6               	clrf	___awmod@sign
 12892  1BAB  1FF3               	btfss	___awmod@dividend+1,7
 12893  1BAC  2BB4               	goto	l3551
 12894  1BAD  09F2               	comf	___awmod@dividend,f
 12895  1BAE  09F3               	comf	___awmod@dividend+1,f
 12896  1BAF  0AF2               	incf	___awmod@dividend,f
 12897  1BB0  1903               	skipnz
 12898  1BB1  0AF3               	incf	___awmod@dividend+1,f
 12899  1BB2  01F6               	clrf	___awmod@sign
 12900  1BB3  0AF6               	incf	___awmod@sign,f
 12901  1BB4                     l3551:
 12902  1BB4  1FF1               	btfss	___awmod@divisor+1,7
 12903  1BB5  2BBB               	goto	l3555
 12904  1BB6  09F0               	comf	___awmod@divisor,f
 12905  1BB7  09F1               	comf	___awmod@divisor+1,f
 12906  1BB8  0AF0               	incf	___awmod@divisor,f
 12907  1BB9  1903               	skipnz
 12908  1BBA  0AF1               	incf	___awmod@divisor+1,f
 12909  1BBB                     l3555:
 12910  1BBB  0870               	movf	___awmod@divisor,w
 12911  1BBC  0471               	iorwf	___awmod@divisor+1,w
 12912  1BBD  1903               	btfsc	3,2
 12913  1BBE  2BE2               	goto	l3573
 12914  1BBF  01F5               	clrf	___awmod@counter
 12915  1BC0  0AF5               	incf	___awmod@counter,f
 12916  1BC1                     l3563:
 12917  1BC1  1BF1               	btfsc	___awmod@divisor+1,7
 12918  1BC2  2BCD               	goto	l3565
 12919  1BC3  3001               	movlw	1
 12920  1BC4                     u4715:
 12921  1BC4  35F0               	lslf	___awmod@divisor,f
 12922  1BC5  0DF1               	rlf	___awmod@divisor+1,f
 12923  1BC6  0B89               	decfsz	9,f
 12924  1BC7  2BC4               	goto	u4715
 12925  1BC8  3001               	movlw	1
 12926  1BC9  00F4               	movwf	??___awmod
 12927  1BCA  0874               	movf	??___awmod,w
 12928  1BCB  07F5               	addwf	___awmod@counter,f
 12929  1BCC  2BC1               	goto	l3563
 12930  1BCD                     l3565:
 12931  1BCD  0871               	movf	___awmod@divisor+1,w
 12932  1BCE  0273               	subwf	___awmod@dividend+1,w
 12933  1BCF  1D03               	skipz
 12934  1BD0  2BD3               	goto	u4735
 12935  1BD1  0870               	movf	___awmod@divisor,w
 12936  1BD2  0272               	subwf	___awmod@dividend,w
 12937  1BD3                     u4735:
 12938  1BD3  1C03               	skipc
 12939  1BD4  2BD9               	goto	l3569
 12940  1BD5  0870               	movf	___awmod@divisor,w
 12941  1BD6  02F2               	subwf	___awmod@dividend,f
 12942  1BD7  0871               	movf	___awmod@divisor+1,w
 12943  1BD8  3BF3               	subwfb	___awmod@dividend+1,f
 12944  1BD9                     l3569:
 12945  1BD9  3001               	movlw	1
 12946  1BDA                     u4745:
 12947  1BDA  36F1               	lsrf	___awmod@divisor+1,f
 12948  1BDB  0CF0               	rrf	___awmod@divisor,f
 12949  1BDC  0B89               	decfsz	9,f
 12950  1BDD  2BDA               	goto	u4745
 12951  1BDE  3001               	movlw	1
 12952  1BDF  02F5               	subwf	___awmod@counter,f
 12953  1BE0  1D03               	btfss	3,2
 12954  1BE1  2BCD               	goto	l3565
 12955  1BE2                     l3573:
 12956  1BE2  0876               	movf	___awmod@sign,w
 12957  1BE3  1903               	btfsc	3,2
 12958  1BE4  2BEA               	goto	l3577
 12959  1BE5  09F2               	comf	___awmod@dividend,f
 12960  1BE6  09F3               	comf	___awmod@dividend+1,f
 12961  1BE7  0AF2               	incf	___awmod@dividend,f
 12962  1BE8  1903               	skipnz
 12963  1BE9  0AF3               	incf	___awmod@dividend+1,f
 12964  1BEA                     l3577:
 12965  1BEA  0873               	movf	___awmod@dividend+1,w
 12966  1BEB  00F1               	movwf	?___awmod+1
 12967  1BEC  0872               	movf	___awmod@dividend,w
 12968  1BED  00F0               	movwf	?___awmod
 12969  1BEE  0008               	return
 12970  1BEF                     __end_of___awmod:
 12971                           
 12972                           	psect	text31
 12973  1D1C                     __ptext31:	
 12974 ;; *************** function ___awdiv *****************
 12975 ;; Defined at:
 12976 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 12977 ;; Parameters:    Size  Location     Type
 12978 ;;  divisor         2    0[COMMON] int 
 12979 ;;  dividend        2    2[COMMON] int 
 12980 ;; Auto vars:     Size  Location     Type
 12981 ;;  quotient        2    7[COMMON] int 
 12982 ;;  sign            1    6[COMMON] unsigned char 
 12983 ;;  counter         1    5[COMMON] unsigned char 
 12984 ;; Return value:  Size  Location     Type
 12985 ;;                  2    0[COMMON] int 
 12986 ;; Registers used:
 12987 ;;		wreg, status,2, status,0
 12988 ;; Tracked objects:
 12989 ;;		On entry : 0/0
 12990 ;;		On exit  : 0/0
 12991 ;;		Unchanged: 0/0
 12992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12993 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12994 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12995 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12996 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12997 ;;Total ram usage:        9 bytes
 12998 ;; Hardware stack levels used: 1
 12999 ;; This function calls:
 13000 ;;		Nothing
 13001 ;; This function is called by:
 13002 ;;		_efgtoa
 13003 ;; This function uses a non-reentrant model
 13004 ;;
 13005                           
 13006                           
 13007                           ;psect for function ___awdiv
 13008  1D1C                     ___awdiv:
 13009                           
 13010                           ;incstack = 0
 13011                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 13012  1D1C  01F6               	clrf	___awdiv@sign
 13013  1D1D  1FF1               	btfss	___awdiv@divisor+1,7
 13014  1D1E  2D26               	goto	l3507
 13015  1D1F  09F0               	comf	___awdiv@divisor,f
 13016  1D20  09F1               	comf	___awdiv@divisor+1,f
 13017  1D21  0AF0               	incf	___awdiv@divisor,f
 13018  1D22  1903               	skipnz
 13019  1D23  0AF1               	incf	___awdiv@divisor+1,f
 13020  1D24  01F6               	clrf	___awdiv@sign
 13021  1D25  0AF6               	incf	___awdiv@sign,f
 13022  1D26                     l3507:
 13023  1D26  1FF3               	btfss	___awdiv@dividend+1,7
 13024  1D27  2D31               	goto	l3513
 13025  1D28  09F2               	comf	___awdiv@dividend,f
 13026  1D29  09F3               	comf	___awdiv@dividend+1,f
 13027  1D2A  0AF2               	incf	___awdiv@dividend,f
 13028  1D2B  1903               	skipnz
 13029  1D2C  0AF3               	incf	___awdiv@dividend+1,f
 13030  1D2D  3001               	movlw	1
 13031  1D2E  00F4               	movwf	??___awdiv
 13032  1D2F  0874               	movf	??___awdiv,w
 13033  1D30  06F6               	xorwf	___awdiv@sign,f
 13034  1D31                     l3513:
 13035  1D31  01F7               	clrf	___awdiv@quotient
 13036  1D32  01F8               	clrf	___awdiv@quotient+1
 13037  1D33  0870               	movf	___awdiv@divisor,w
 13038  1D34  0471               	iorwf	___awdiv@divisor+1,w
 13039  1D35  1903               	btfsc	3,2
 13040  1D36  2D60               	goto	l3535
 13041  1D37  01F5               	clrf	___awdiv@counter
 13042  1D38  0AF5               	incf	___awdiv@counter,f
 13043  1D39                     l3523:
 13044  1D39  1BF1               	btfsc	___awdiv@divisor+1,7
 13045  1D3A  2D45               	goto	l3525
 13046  1D3B  3001               	movlw	1
 13047  1D3C                     u4615:
 13048  1D3C  35F0               	lslf	___awdiv@divisor,f
 13049  1D3D  0DF1               	rlf	___awdiv@divisor+1,f
 13050  1D3E  0B89               	decfsz	9,f
 13051  1D3F  2D3C               	goto	u4615
 13052  1D40  3001               	movlw	1
 13053  1D41  00F4               	movwf	??___awdiv
 13054  1D42  0874               	movf	??___awdiv,w
 13055  1D43  07F5               	addwf	___awdiv@counter,f
 13056  1D44  2D39               	goto	l3523
 13057  1D45                     l3525:
 13058  1D45  3001               	movlw	1
 13059  1D46                     u4635:
 13060  1D46  35F7               	lslf	___awdiv@quotient,f
 13061  1D47  0DF8               	rlf	___awdiv@quotient+1,f
 13062  1D48  0B89               	decfsz	9,f
 13063  1D49  2D46               	goto	u4635
 13064  1D4A  0871               	movf	___awdiv@divisor+1,w
 13065  1D4B  0273               	subwf	___awdiv@dividend+1,w
 13066  1D4C  1D03               	skipz
 13067  1D4D  2D50               	goto	u4645
 13068  1D4E  0870               	movf	___awdiv@divisor,w
 13069  1D4F  0272               	subwf	___awdiv@dividend,w
 13070  1D50                     u4645:
 13071  1D50  1C03               	skipc
 13072  1D51  2D57               	goto	l3531
 13073  1D52  0870               	movf	___awdiv@divisor,w
 13074  1D53  02F2               	subwf	___awdiv@dividend,f
 13075  1D54  0871               	movf	___awdiv@divisor+1,w
 13076  1D55  3BF3               	subwfb	___awdiv@dividend+1,f
 13077  1D56  1477               	bsf	___awdiv@quotient,0
 13078  1D57                     l3531:
 13079  1D57  3001               	movlw	1
 13080  1D58                     u4655:
 13081  1D58  36F1               	lsrf	___awdiv@divisor+1,f
 13082  1D59  0CF0               	rrf	___awdiv@divisor,f
 13083  1D5A  0B89               	decfsz	9,f
 13084  1D5B  2D58               	goto	u4655
 13085  1D5C  3001               	movlw	1
 13086  1D5D  02F5               	subwf	___awdiv@counter,f
 13087  1D5E  1D03               	btfss	3,2
 13088  1D5F  2D45               	goto	l3525
 13089  1D60                     l3535:
 13090  1D60  0876               	movf	___awdiv@sign,w
 13091  1D61  1903               	btfsc	3,2
 13092  1D62  2D68               	goto	l3539
 13093  1D63  09F7               	comf	___awdiv@quotient,f
 13094  1D64  09F8               	comf	___awdiv@quotient+1,f
 13095  1D65  0AF7               	incf	___awdiv@quotient,f
 13096  1D66  1903               	skipnz
 13097  1D67  0AF8               	incf	___awdiv@quotient+1,f
 13098  1D68                     l3539:
 13099  1D68  0878               	movf	___awdiv@quotient+1,w
 13100  1D69  00F1               	movwf	?___awdiv+1
 13101  1D6A  0877               	movf	___awdiv@quotient,w
 13102  1D6B  00F0               	movwf	?___awdiv
 13103  1D6C  0008               	return
 13104  1D6D                     __end_of___awdiv:
 13105                           
 13106                           	psect	text32
 13107  127F                     __ptext32:	
 13108 ;; *************** function _dtoa *****************
 13109 ;; Defined at:
 13110 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 13111 ;; Parameters:    Size  Location     Type
 13112 ;;  fp              1    wreg     PTR struct _IO_FILE
 13113 ;;		 -> NULL(0), 
 13114 ;;  d               8   16[BANK0 ] long long 
 13115 ;; Auto vars:     Size  Location     Type
 13116 ;;  fp              1   31[BANK0 ] PTR struct _IO_FILE
 13117 ;;		 -> NULL(0), 
 13118 ;;  n               8   36[BANK0 ] long long 
 13119 ;;  i               2   44[BANK0 ] int 
 13120 ;;  s               2   34[BANK0 ] int 
 13121 ;;  w               2   32[BANK0 ] int 
 13122 ;;  p               2   29[BANK0 ] int 
 13123 ;; Return value:  Size  Location     Type
 13124 ;;                  2   16[BANK0 ] int 
 13125 ;; Registers used:
 13126 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13127 ;; Tracked objects:
 13128 ;;		On entry : 0/0
 13129 ;;		On exit  : 0/0
 13130 ;;		Unchanged: 0/0
 13131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13132 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13133 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13134 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13135 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13136 ;;Total ram usage:       30 bytes
 13137 ;; Hardware stack levels used: 1
 13138 ;; Hardware stack levels required when called: 5
 13139 ;; This function calls:
 13140 ;;		___aodiv
 13141 ;;		___aomod
 13142 ;;		_abs
 13143 ;;		_pad
 13144 ;; This function is called by:
 13145 ;;		_vfpfcnvrt
 13146 ;; This function uses a non-reentrant model
 13147 ;;
 13148                           
 13149                           
 13150                           ;psect for function _dtoa
 13151  127F                     _dtoa:
 13152                           
 13153                           ;incstack = 0
 13154                           ; Regs used in _dtoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13155                           ;dtoa@fp stored from wreg
 13156  127F  0020               	movlb	0	; select bank0
 13157  1280  00BF               	movwf	dtoa@fp
 13158                           
 13159                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
 13160  1281  0830               	movf	dtoa@d,w
 13161  1282  00C4               	movwf	dtoa@n
 13162  1283  0831               	movf	dtoa@d+1,w
 13163  1284  00C5               	movwf	dtoa@n+1
 13164  1285  0832               	movf	dtoa@d+2,w
 13165  1286  00C6               	movwf	dtoa@n+2
 13166  1287  0833               	movf	dtoa@d+3,w
 13167  1288  00C7               	movwf	dtoa@n+3
 13168  1289  0834               	movf	dtoa@d+4,w
 13169  128A  00C8               	movwf	dtoa@n+4
 13170  128B  0835               	movf	dtoa@d+5,w
 13171  128C  00C9               	movwf	dtoa@n+5
 13172  128D  0836               	movf	dtoa@d+6,w
 13173  128E  00CA               	movwf	dtoa@n+6
 13174  128F  0837               	movf	dtoa@d+7,w
 13175  1290  00CB               	movwf	dtoa@n+7
 13176                           
 13177                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
 13178  1291  3044               	movlw	low dtoa@n
 13179  1292  0086               	movwf	6
 13180  1293  3000               	movlw	high dtoa@n
 13181  1294  0087               	movwf	7
 13182  1295  3F47               	moviw [7]fsr1
 13183  1296  00B8               	movwf	??_dtoa
 13184  1297  1FB8               	btfss	??_dtoa,7
 13185  1298  2A9B               	goto	u5900
 13186  1299  3001               	movlw	1
 13187  129A  2A9C               	goto	u5910
 13188  129B                     u5900:
 13189  129B  3000               	movlw	0
 13190  129C                     u5910:
 13191  129C  0020               	movlb	0	; select bank0
 13192  129D  00B9               	movwf	??_dtoa+1
 13193  129E  01BA               	clrf	??_dtoa+2
 13194  129F  0839               	movf	??_dtoa+1,w
 13195  12A0  00C2               	movwf	dtoa@s
 13196  12A1  083A               	movf	??_dtoa+2,w
 13197  12A2  00C3               	movwf	dtoa@s+1
 13198                           
 13199                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
 13200  12A3  0842               	movf	dtoa@s,w
 13201  12A4  0443               	iorwf	dtoa@s+1,w
 13202  12A5  1903               	btfsc	3,2
 13203  12A6  2AC5               	goto	l925
 13204                           
 13205                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
 13206  12A7  09C4               	comf	dtoa@n,f
 13207  12A8  09C5               	comf	dtoa@n+1,f
 13208  12A9  09C6               	comf	dtoa@n+2,f
 13209  12AA  09C7               	comf	dtoa@n+3,f
 13210  12AB  09C8               	comf	dtoa@n+4,f
 13211  12AC  09C9               	comf	dtoa@n+5,f
 13212  12AD  09CA               	comf	dtoa@n+6,f
 13213  12AE  09CB               	comf	dtoa@n+7,f
 13214  12AF  0AC4               	incf	dtoa@n,f
 13215  12B0  1D03               	skipz
 13216  12B1  2AC5               	goto	l925
 13217  12B2  0AC5               	incf	dtoa@n+1,f
 13218  12B3  1D03               	skipz
 13219  12B4  2AC5               	goto	l925
 13220  12B5  0AC6               	incf	dtoa@n+2,f
 13221  12B6  1D03               	skipz
 13222  12B7  2AC5               	goto	l925
 13223  12B8  0AC7               	incf	dtoa@n+3,f
 13224  12B9  1D03               	skipz
 13225  12BA  2AC5               	goto	l925
 13226  12BB  0AC8               	incf	dtoa@n+4,f
 13227  12BC  1D03               	skipz
 13228  12BD  2AC5               	goto	l925
 13229  12BE  0AC9               	incf	dtoa@n+5,f
 13230  12BF  1D03               	skipz
 13231  12C0  2AC5               	goto	l925
 13232  12C1  0ACA               	incf	dtoa@n+6,f
 13233  12C2  1D03               	skipz
 13234  12C3  2AC5               	goto	l925
 13235  12C4  0ACB               	incf	dtoa@n+7,f
 13236  12C5                     l925:	
 13237                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 297:     }
 13238                           
 13239                           
 13240                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
 13241  12C5  0021               	movlb	1	; select bank1
 13242  12C6  1BED               	btfsc	(_prec+1)^(0+128),7
 13243  12C7  2ACC               	goto	l926
 13244                           
 13245                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
 13246  12C8  30FD               	movlw	253
 13247  12C9  05EE               	andwf	_flags^(0+128),f
 13248  12CA  30FF               	movlw	255
 13249  12CB  05EF               	andwf	(_flags+1)^(0+128),f
 13250  12CC                     l926:	
 13251                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 302:     }
 13252                           
 13253                           
 13254                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
 13255  12CC  086D               	movf	(_prec+1)^(0+128),w
 13256  12CD  3A80               	xorlw	128
 13257  12CE  0020               	movlb	0	; select bank0
 13258  12CF  00B8               	movwf	??_dtoa
 13259  12D0  3080               	movlw	128
 13260  12D1  0238               	subwf	??_dtoa,w
 13261  12D2  1D03               	skipz
 13262  12D3  2AD7               	goto	u5955
 13263  12D4  3001               	movlw	1
 13264  12D5  0021               	movlb	1	; select bank1
 13265  12D6  026C               	subwf	_prec^(0+128),w
 13266  12D7                     u5955:
 13267  12D7  1803               	skipnc
 13268  12D8  2ADF               	goto	l4081
 13269  12D9  3001               	movlw	1
 13270  12DA  0020               	movlb	0	; select bank0
 13271  12DB  00BD               	movwf	dtoa@p
 13272  12DC  3000               	movlw	0
 13273  12DD  00BE               	movwf	dtoa@p+1
 13274  12DE  2AE7               	goto	l930
 13275  12DF                     l4081:
 13276  12DF  0021               	movlb	1	; select bank1
 13277  12E0  086D               	movf	(_prec+1)^(0+128),w
 13278  12E1  0020               	movlb	0	; select bank0
 13279  12E2  00BE               	movwf	dtoa@p+1
 13280  12E3  0021               	movlb	1	; select bank1
 13281  12E4  086C               	movf	_prec^(0+128),w
 13282  12E5  0020               	movlb	0	; select bank0
 13283  12E6  00BD               	movwf	dtoa@p
 13284  12E7                     l930:
 13285                           
 13286                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
 13287  12E7  0022               	movlb	2	; select bank2
 13288  12E8  085A               	movf	(_width+1)^(0+256),w
 13289  12E9  0020               	movlb	0	; select bank0
 13290  12EA  00C1               	movwf	dtoa@w+1
 13291  12EB  0022               	movlb	2	; select bank2
 13292  12EC  0859               	movf	_width^(0+256),w
 13293  12ED  0020               	movlb	0	; select bank0
 13294  12EE  00C0               	movwf	dtoa@w
 13295                           
 13296                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
 13297  12EF  0842               	movf	dtoa@s,w
 13298  12F0  0443               	iorwf	dtoa@s+1,w
 13299  12F1  1D03               	btfss	3,2
 13300  12F2  2AF6               	goto	l4087
 13301  12F3  0021               	movlb	1	; select bank1
 13302  12F4  1D6E               	btfss	_flags^(0+128),2
 13303  12F5  2AFB               	goto	l931
 13304  12F6                     l4087:
 13305                           
 13306                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
 13307  12F6  30FF               	movlw	255
 13308  12F7  0020               	movlb	0	; select bank0
 13309  12F8  07C0               	addwf	dtoa@w,f
 13310  12F9  30FF               	movlw	255
 13311  12FA  3DC1               	addwfc	dtoa@w+1,f
 13312  12FB                     l931:	
 13313                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 307:     }
 13314                           
 13315                           
 13316                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
 13317  12FB  304F               	movlw	79
 13318  12FC  0020               	movlb	0	; select bank0
 13319  12FD  00CC               	movwf	dtoa@i
 13320  12FE  3000               	movlw	0
 13321  12FF  00CD               	movwf	dtoa@i+1
 13322                           
 13323                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
 13324  1300  0023               	movlb	3	; select bank3
 13325  1301  01EF               	clrf	(_dbuf^(0+384)+79)
 13326                           
 13327                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13328  1302  2B91               	goto	l934
 13329  1303                     l4101:
 13330  1303  0020               	movlb	0	; select bank0
 13331  1304  0844               	movf	dtoa@n,w
 13332  1305  0445               	iorwf	dtoa@n+1,w
 13333  1306  0446               	iorwf	dtoa@n+2,w
 13334  1307  0447               	iorwf	dtoa@n+3,w
 13335  1308  0448               	iorwf	dtoa@n+4,w
 13336  1309  0449               	iorwf	dtoa@n+5,w
 13337  130A  044A               	iorwf	dtoa@n+6,w
 13338  130B  044B               	iorwf	dtoa@n+7,w
 13339  130C  1D03               	skipz
 13340  130D  2B28               	goto	l4091
 13341  130E  083E               	movf	dtoa@p+1,w
 13342  130F  3A80               	xorlw	128
 13343  1310  00B8               	movwf	??_dtoa
 13344  1311  3080               	movlw	128
 13345  1312  0238               	subwf	??_dtoa,w
 13346  1313  1D03               	skipz
 13347  1314  2B17               	goto	u6005
 13348  1315  3001               	movlw	1
 13349  1316  023D               	subwf	dtoa@p,w
 13350  1317                     u6005:
 13351  1317  1803               	skipnc
 13352  1318  2B28               	goto	l4091
 13353  1319  0020               	movlb	0	; select bank0
 13354  131A  0841               	movf	dtoa@w+1,w
 13355  131B  3A80               	xorlw	128
 13356  131C  00B8               	movwf	??_dtoa
 13357  131D  3080               	movlw	128
 13358  131E  0238               	subwf	??_dtoa,w
 13359  131F  1D03               	skipz
 13360  1320  2B23               	goto	u6015
 13361  1321  3001               	movlw	1
 13362  1322  0240               	subwf	dtoa@w,w
 13363  1323                     u6015:
 13364  1323  1C03               	skipc
 13365  1324  2B9D               	goto	l4109
 13366  1325  0021               	movlb	1	; select bank1
 13367  1326  1CEE               	btfss	_flags^(0+128),1
 13368  1327  2B9D               	goto	l4109
 13369  1328                     l4091:
 13370                           
 13371                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
 13372  1328  30FF               	movlw	255
 13373  1329  0020               	movlb	0	; select bank0
 13374  132A  07CC               	addwf	dtoa@i,f
 13375  132B  30FF               	movlw	255
 13376  132C  3DCD               	addwfc	dtoa@i+1,f
 13377                           
 13378                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
 13379  132D  300A               	movlw	10
 13380  132E  00A0               	movwf	___aomod@divisor
 13381  132F  01A1               	clrf	___aomod@divisor+1
 13382  1330  01A2               	clrf	___aomod@divisor+2
 13383  1331  01A3               	clrf	___aomod@divisor+3
 13384  1332  01A4               	clrf	___aomod@divisor+4
 13385  1333  01A5               	clrf	___aomod@divisor+5
 13386  1334  01A6               	clrf	___aomod@divisor+6
 13387  1335  01A7               	clrf	___aomod@divisor+7
 13388  1336  0844               	movf	dtoa@n,w
 13389  1337  00A8               	movwf	___aomod@dividend
 13390  1338  0845               	movf	dtoa@n+1,w
 13391  1339  00A9               	movwf	___aomod@dividend+1
 13392  133A  0846               	movf	dtoa@n+2,w
 13393  133B  00AA               	movwf	___aomod@dividend+2
 13394  133C  0847               	movf	dtoa@n+3,w
 13395  133D  00AB               	movwf	___aomod@dividend+3
 13396  133E  0848               	movf	dtoa@n+4,w
 13397  133F  00AC               	movwf	___aomod@dividend+4
 13398  1340  0849               	movf	dtoa@n+5,w
 13399  1341  00AD               	movwf	___aomod@dividend+5
 13400  1342  084A               	movf	dtoa@n+6,w
 13401  1343  00AE               	movwf	___aomod@dividend+6
 13402  1344  084B               	movf	dtoa@n+7,w
 13403  1345  00AF               	movwf	___aomod@dividend+7
 13404  1346  3191  21A3  3192   	fcall	___aomod
 13405  1349  0020               	movlb	0	; select bank0
 13406  134A  0821               	movf	?___aomod+1,w
 13407  134B  00F4               	movwf	abs@a+1
 13408  134C  0820               	movf	?___aomod,w
 13409  134D  00F3               	movwf	abs@a
 13410  134E  3199  2157  3192   	fcall	_abs
 13411  1351  0873               	movf	?_abs,w
 13412  1352  3E30               	addlw	48
 13413  1353  0020               	movlb	0	; select bank0
 13414  1354  00B8               	movwf	??_dtoa
 13415  1355  084C               	movf	dtoa@i,w
 13416  1356  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 13417  1357  0086               	movwf	6
 13418  1358  3001               	movlw	1	; select bank3/4
 13419  1359  0087               	movwf	7
 13420  135A  0838               	movf	??_dtoa,w
 13421  135B  0081               	movwf	1
 13422                           
 13423                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
 13424  135C  30FF               	movlw	255
 13425  135D  07BD               	addwf	dtoa@p,f
 13426  135E  30FF               	movlw	255
 13427  135F  3DBE               	addwfc	dtoa@p+1,f
 13428                           
 13429                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
 13430  1360  30FF               	movlw	255
 13431  1361  07C0               	addwf	dtoa@w,f
 13432  1362  30FF               	movlw	255
 13433  1363  3DC1               	addwfc	dtoa@w+1,f
 13434                           
 13435                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
 13436  1364  300A               	movlw	10
 13437  1365  00A0               	movwf	___aodiv@divisor
 13438  1366  01A1               	clrf	___aodiv@divisor+1
 13439  1367  01A2               	clrf	___aodiv@divisor+2
 13440  1368  01A3               	clrf	___aodiv@divisor+3
 13441  1369  01A4               	clrf	___aodiv@divisor+4
 13442  136A  01A5               	clrf	___aodiv@divisor+5
 13443  136B  01A6               	clrf	___aodiv@divisor+6
 13444  136C  01A7               	clrf	___aodiv@divisor+7
 13445  136D  0844               	movf	dtoa@n,w
 13446  136E  00A8               	movwf	___aodiv@dividend
 13447  136F  0845               	movf	dtoa@n+1,w
 13448  1370  00A9               	movwf	___aodiv@dividend+1
 13449  1371  0846               	movf	dtoa@n+2,w
 13450  1372  00AA               	movwf	___aodiv@dividend+2
 13451  1373  0847               	movf	dtoa@n+3,w
 13452  1374  00AB               	movwf	___aodiv@dividend+3
 13453  1375  0848               	movf	dtoa@n+4,w
 13454  1376  00AC               	movwf	___aodiv@dividend+4
 13455  1377  0849               	movf	dtoa@n+5,w
 13456  1378  00AD               	movwf	___aodiv@dividend+5
 13457  1379  084A               	movf	dtoa@n+6,w
 13458  137A  00AE               	movwf	___aodiv@dividend+6
 13459  137B  084B               	movf	dtoa@n+7,w
 13460  137C  00AF               	movwf	___aodiv@dividend+7
 13461  137D  3180  2021  3192   	fcall	___aodiv
 13462  1380  0020               	movlb	0	; select bank0
 13463  1381  0820               	movf	?___aodiv,w
 13464  1382  00C4               	movwf	dtoa@n
 13465  1383  0821               	movf	?___aodiv+1,w
 13466  1384  00C5               	movwf	dtoa@n+1
 13467  1385  0822               	movf	?___aodiv+2,w
 13468  1386  00C6               	movwf	dtoa@n+2
 13469  1387  0823               	movf	?___aodiv+3,w
 13470  1388  00C7               	movwf	dtoa@n+3
 13471  1389  0824               	movf	?___aodiv+4,w
 13472  138A  00C8               	movwf	dtoa@n+4
 13473  138B  0825               	movf	?___aodiv+5,w
 13474  138C  00C9               	movwf	dtoa@n+5
 13475  138D  0826               	movf	?___aodiv+6,w
 13476  138E  00CA               	movwf	dtoa@n+6
 13477  138F  0827               	movf	?___aodiv+7,w
 13478  1390  00CB               	movwf	dtoa@n+7
 13479  1391                     l934:	
 13480                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 318:     }
 13481                           
 13482                           
 13483                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13484  1391  0020               	movlb	0	; select bank0
 13485  1392  084D               	movf	dtoa@i+1,w
 13486  1393  3A80               	xorlw	128
 13487  1394  00B8               	movwf	??_dtoa
 13488  1395  3080               	movlw	128
 13489  1396  0238               	subwf	??_dtoa,w
 13490  1397  1D03               	skipz
 13491  1398  2B9B               	goto	u5985
 13492  1399  3001               	movlw	1
 13493  139A  024C               	subwf	dtoa@i,w
 13494  139B                     u5985:
 13495  139B  1803               	btfsc	3,0
 13496  139C  2B03               	goto	l4101
 13497  139D                     l4109:
 13498                           
 13499                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
 13500  139D  0020               	movlb	0	; select bank0
 13501  139E  0842               	movf	dtoa@s,w
 13502  139F  0443               	iorwf	dtoa@s+1,w
 13503  13A0  1D03               	btfss	3,2
 13504  13A1  2BA5               	goto	l4113
 13505  13A2  0021               	movlb	1	; select bank1
 13506  13A3  1D6E               	btfss	_flags^(0+128),2
 13507  13A4  2BBD               	goto	l4123
 13508  13A5                     l4113:
 13509                           
 13510                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
 13511  13A5  30FF               	movlw	255
 13512  13A6  0020               	movlb	0	; select bank0
 13513  13A7  07CC               	addwf	dtoa@i,f
 13514  13A8  30FF               	movlw	255
 13515  13A9  3DCD               	addwfc	dtoa@i+1,f
 13516                           
 13517                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
 13518  13AA  0842               	movf	dtoa@s,w
 13519  13AB  0443               	iorwf	dtoa@s+1,w
 13520  13AC  1D03               	btfss	3,2
 13521  13AD  2BB0               	goto	l4119
 13522  13AE  302B               	movlw	43
 13523  13AF  2BB1               	goto	L14
 13524  13B0                     l4119:
 13525  13B0  302D               	movlw	45
 13526  13B1                     L14:
 13527  13B1  00BB               	movwf	_dtoa$930
 13528  13B2  3000               	movlw	0
 13529  13B3  00BC               	movwf	_dtoa$930+1
 13530  13B4  083B               	movf	_dtoa$930,w
 13531  13B5  00B8               	movwf	??_dtoa
 13532  13B6  084C               	movf	dtoa@i,w
 13533  13B7  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 13534  13B8  0086               	movwf	6
 13535  13B9  3001               	movlw	1	; select bank3/4
 13536  13BA  0087               	movwf	7
 13537  13BB  0838               	movf	??_dtoa,w
 13538  13BC  0081               	movwf	1
 13539  13BD                     l4123:
 13540                           
 13541                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
 13542  13BD  0020               	movlb	0	; select bank0
 13543  13BE  084C               	movf	dtoa@i,w
 13544  13BF  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 13545  13C0  00B8               	movwf	??_dtoa
 13546  13C1  0838               	movf	??_dtoa,w
 13547  13C2  00A7               	movwf	pad@buf
 13548  13C3  0841               	movf	dtoa@w+1,w
 13549  13C4  00A9               	movwf	pad@p+1
 13550  13C5  0840               	movf	dtoa@w,w
 13551  13C6  00A8               	movwf	pad@p
 13552  13C7  083F               	movf	dtoa@fp,w
 13553  13C8  319C  24CC         	fcall	_pad
 13554  13CA  0020               	movlb	0	; select bank0
 13555  13CB  0828               	movf	?_pad+1,w
 13556  13CC  00B1               	movwf	?_dtoa+1
 13557  13CD  0827               	movf	?_pad,w
 13558  13CE  00B0               	movwf	?_dtoa
 13559  13CF  0008               	return
 13560  13D0                     __end_of_dtoa:
 13561                           
 13562                           	psect	text33
 13563  1CCC                     __ptext33:	
 13564 ;; *************** function _pad *****************
 13565 ;; Defined at:
 13566 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 13567 ;; Parameters:    Size  Location     Type
 13568 ;;  fp              1    wreg     PTR struct _IO_FILE
 13569 ;;		 -> NULL(0), 
 13570 ;;  buf             1    7[BANK0 ] PTR unsigned char 
 13571 ;;		 -> dbuf(80), 
 13572 ;;  p               2    8[BANK0 ] int 
 13573 ;; Auto vars:     Size  Location     Type
 13574 ;;  fp              1   14[BANK0 ] PTR struct _IO_FILE
 13575 ;;		 -> NULL(0), 
 13576 ;;  w               2   12[BANK0 ] int 
 13577 ;;  i               2   10[BANK0 ] int 
 13578 ;; Return value:  Size  Location     Type
 13579 ;;                  2    7[BANK0 ] int 
 13580 ;; Registers used:
 13581 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13582 ;; Tracked objects:
 13583 ;;		On entry : 0/0
 13584 ;;		On exit  : 0/0
 13585 ;;		Unchanged: 0/0
 13586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13587 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13588 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13589 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13590 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13591 ;;Total ram usage:        9 bytes
 13592 ;; Hardware stack levels used: 1
 13593 ;; Hardware stack levels required when called: 4
 13594 ;; This function calls:
 13595 ;;		_fputc
 13596 ;;		_fputs
 13597 ;;		_strlen
 13598 ;; This function is called by:
 13599 ;;		_dtoa
 13600 ;;		_efgtoa
 13601 ;;		_xtoa
 13602 ;; This function uses a non-reentrant model
 13603 ;;
 13604                           
 13605                           
 13606                           ;psect for function _pad
 13607  1CCC                     _pad:
 13608                           
 13609                           ;incstack = 0
 13610                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13611                           ;pad@fp stored from wreg
 13612  1CCC  0020               	movlb	0	; select bank0
 13613  1CCD  00AE               	movwf	pad@fp
 13614                           
 13615                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 13616  1CCE  0021               	movlb	1	; select bank1
 13617  1CCF  1C6E               	btfss	_flags^(0+128),0
 13618  1CD0  2CDA               	goto	l3947
 13619                           
 13620                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 13621  1CD1  0020               	movlb	0	; select bank0
 13622  1CD2  082E               	movf	pad@fp,w
 13623  1CD3  00FC               	movwf	??_pad
 13624  1CD4  087C               	movf	??_pad,w
 13625  1CD5  00FB               	movwf	fputs@fp
 13626  1CD6  0827               	movf	pad@buf,w
 13627  1CD7  3190  2004  319C   	fcall	_fputs
 13628  1CDA                     l3947:
 13629                           
 13630                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 13631  1CDA  0020               	movlb	0	; select bank0
 13632  1CDB  1BA9               	btfsc	pad@p+1,7
 13633  1CDC  2CE2               	goto	l3951
 13634  1CDD  0829               	movf	pad@p+1,w
 13635  1CDE  00AD               	movwf	pad@w+1
 13636  1CDF  0828               	movf	pad@p,w
 13637  1CE0  00AC               	movwf	pad@w
 13638  1CE1  2CE4               	goto	l917
 13639  1CE2                     l3951:
 13640  1CE2  01AC               	clrf	pad@w
 13641  1CE3  01AD               	clrf	pad@w+1
 13642  1CE4                     l917:
 13643                           
 13644                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 13645  1CE4  01AA               	clrf	pad@i
 13646  1CE5  01AB               	clrf	pad@i+1
 13647  1CE6                     l3957:	
 13648                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 13649                           
 13650                           
 13651                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 13652  1CE6  082B               	movf	pad@i+1,w
 13653  1CE7  3A80               	xorlw	128
 13654  1CE8  00FC               	movwf	??_pad
 13655  1CE9  082D               	movf	pad@w+1,w
 13656  1CEA  3A80               	xorlw	128
 13657  1CEB  027C               	subwf	??_pad,w
 13658  1CEC  1D03               	skipz
 13659  1CED  2CF0               	goto	u5535
 13660  1CEE  082C               	movf	pad@w,w
 13661  1CEF  022A               	subwf	pad@i,w
 13662  1CF0                     u5535:
 13663  1CF0  1803               	btfsc	3,0
 13664  1CF1  2D04               	goto	l920
 13665                           
 13666                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 13667  1CF2  3020               	movlw	32
 13668  1CF3  00F3               	movwf	fputc@c
 13669  1CF4  3000               	movlw	0
 13670  1CF5  00F4               	movwf	fputc@c+1
 13671  1CF6  0020               	movlb	0	; select bank0
 13672  1CF7  082E               	movf	pad@fp,w
 13673  1CF8  00FC               	movwf	??_pad
 13674  1CF9  087C               	movf	??_pad,w
 13675  1CFA  00F5               	movwf	fputc@fp
 13676  1CFB  319B  2339  319C   	fcall	_fputc
 13677                           
 13678                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
 13679  1CFE  3001               	movlw	1
 13680  1CFF  0020               	movlb	0	; select bank0
 13681  1D00  07AA               	addwf	pad@i,f
 13682  1D01  3000               	movlw	0
 13683  1D02  3DAB               	addwfc	pad@i+1,f
 13684  1D03  2CE6               	goto	l3957
 13685  1D04                     l920:
 13686                           
 13687                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 13688  1D04  0021               	movlb	1	; select bank1
 13689  1D05  186E               	btfsc	_flags^(0+128),0
 13690  1D06  2D10               	goto	l921
 13691                           
 13692                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 13693  1D07  0020               	movlb	0	; select bank0
 13694  1D08  082E               	movf	pad@fp,w
 13695  1D09  00FC               	movwf	??_pad
 13696  1D0A  087C               	movf	??_pad,w
 13697  1D0B  00FB               	movwf	fputs@fp
 13698  1D0C  0827               	movf	pad@buf,w
 13699  1D0D  3190  2004  319C   	fcall	_fputs
 13700  1D10                     l921:	
 13701                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 92:     }
 13702                           
 13703                           
 13704                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 13705  1D10  0020               	movlb	0	; select bank0
 13706  1D11  0827               	movf	pad@buf,w
 13707  1D12  3199  219C         	fcall	_strlen
 13708  1D14  0020               	movlb	0	; select bank0
 13709  1D15  082C               	movf	pad@w,w
 13710  1D16  0770               	addwf	?_strlen,w
 13711  1D17  00A7               	movwf	?_pad
 13712  1D18  082D               	movf	pad@w+1,w
 13713  1D19  3D71               	addwfc	?_strlen+1,w
 13714  1D1A  00A8               	movwf	?_pad+1
 13715  1D1B  0008               	return
 13716  1D1C                     __end_of_pad:
 13717                           
 13718                           	psect	text34
 13719  199C                     __ptext34:	
 13720 ;; *************** function _strlen *****************
 13721 ;; Defined at:
 13722 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
 13723 ;; Parameters:    Size  Location     Type
 13724 ;;  s               1    wreg     PTR const unsigned char 
 13725 ;;		 -> dbuf(80), 
 13726 ;; Auto vars:     Size  Location     Type
 13727 ;;  s               1    4[COMMON] PTR const unsigned char 
 13728 ;;		 -> dbuf(80), 
 13729 ;;  a               1    3[COMMON] PTR const unsigned char 
 13730 ;;		 -> dbuf(80), 
 13731 ;; Return value:  Size  Location     Type
 13732 ;;                  2    0[COMMON] unsigned int 
 13733 ;; Registers used:
 13734 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13735 ;; Tracked objects:
 13736 ;;		On entry : 0/0
 13737 ;;		On exit  : 0/0
 13738 ;;		Unchanged: 0/0
 13739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13740 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13741 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13742 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13743 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13744 ;;Total ram usage:        5 bytes
 13745 ;; Hardware stack levels used: 1
 13746 ;; This function calls:
 13747 ;;		Nothing
 13748 ;; This function is called by:
 13749 ;;		_pad
 13750 ;; This function uses a non-reentrant model
 13751 ;;
 13752                           
 13753                           
 13754                           ;psect for function _strlen
 13755  199C                     _strlen:
 13756                           
 13757                           ;incstack = 0
 13758                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 13759                           ;strlen@s stored from wreg
 13760  199C  00F4               	movwf	strlen@s
 13761  199D  0874               	movf	strlen@s,w
 13762  199E  00F2               	movwf	??_strlen
 13763  199F  0872               	movf	??_strlen,w
 13764  19A0  00F3               	movwf	strlen@a
 13765  19A1                     l3403:
 13766  19A1  0874               	movf	strlen@s,w
 13767  19A2  0086               	movwf	6
 13768  19A3  3001               	movlw	1	; select bank2/3
 13769  19A4  0087               	movwf	7
 13770  19A5  0801               	movf	1,w
 13771  19A6  1903               	btfsc	3,2
 13772  19A7  29AD               	goto	l3405
 13773  19A8  3001               	movlw	1
 13774  19A9  00F2               	movwf	??_strlen
 13775  19AA  0872               	movf	??_strlen,w
 13776  19AB  07F4               	addwf	strlen@s,f
 13777  19AC  29A1               	goto	l3403
 13778  19AD                     l3405:
 13779  19AD  0873               	movf	strlen@a,w
 13780  19AE  0274               	subwf	strlen@s,w
 13781  19AF  00F0               	movwf	?_strlen
 13782  19B0  01F1               	clrf	?_strlen+1
 13783  19B1  1BF0               	btfsc	?_strlen,7
 13784  19B2  03F1               	decf	?_strlen+1,f
 13785  19B3  0008               	return
 13786  19B4                     __end_of_strlen:
 13787                           
 13788                           	psect	text35
 13789  1004                     __ptext35:	
 13790 ;; *************** function _fputs *****************
 13791 ;; Defined at:
 13792 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
 13793 ;; Parameters:    Size  Location     Type
 13794 ;;  s               1    wreg     PTR const unsigned char 
 13795 ;;		 -> dbuf(80), 
 13796 ;;  fp              1   11[COMMON] PTR struct _IO_FILE
 13797 ;;		 -> NULL(0), 
 13798 ;; Auto vars:     Size  Location     Type
 13799 ;;  s               1    6[BANK0 ] PTR const unsigned char 
 13800 ;;		 -> dbuf(80), 
 13801 ;;  i               2    4[BANK0 ] int 
 13802 ;;  c               1    3[BANK0 ] unsigned char 
 13803 ;; Return value:  Size  Location     Type
 13804 ;;                  2   11[COMMON] int 
 13805 ;; Registers used:
 13806 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13807 ;; Tracked objects:
 13808 ;;		On entry : 0/0
 13809 ;;		On exit  : 0/0
 13810 ;;		Unchanged: 0/0
 13811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13812 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13813 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13814 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13815 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13816 ;;Total ram usage:        8 bytes
 13817 ;; Hardware stack levels used: 1
 13818 ;; Hardware stack levels required when called: 3
 13819 ;; This function calls:
 13820 ;;		_fputc
 13821 ;; This function is called by:
 13822 ;;		_pad
 13823 ;; This function uses a non-reentrant model
 13824 ;;
 13825                           
 13826                           
 13827                           ;psect for function _fputs
 13828  1004                     _fputs:
 13829                           
 13830                           ;incstack = 0
 13831                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13832                           ;fputs@s stored from wreg
 13833  1004  0020               	movlb	0	; select bank0
 13834  1005  00A6               	movwf	fputs@s
 13835  1006  01A4               	clrf	fputs@i
 13836  1007  01A5               	clrf	fputs@i+1
 13837  1008                     l3397:
 13838  1008  0824               	movf	fputs@i,w
 13839  1009  0726               	addwf	fputs@s,w
 13840  100A  00A0               	movwf	??_fputs
 13841  100B  0820               	movf	??_fputs,w
 13842  100C  0086               	movwf	6
 13843  100D  3001               	movlw	1	; select bank2/3
 13844  100E  0087               	movwf	7
 13845  100F  0801               	movf	1,w
 13846  1010  00A1               	movwf	??_fputs+1
 13847  1011  0821               	movf	??_fputs+1,w
 13848  1012  00A3               	movwf	fputs@c
 13849  1013  0823               	movf	fputs@c,w
 13850  1014  1903               	btfsc	3,2
 13851  1015  0008               	return
 13852  1016  0823               	movf	fputs@c,w
 13853  1017  00A0               	movwf	??_fputs
 13854  1018  01A1               	clrf	??_fputs+1
 13855  1019  0820               	movf	??_fputs,w
 13856  101A  00F3               	movwf	fputc@c
 13857  101B  0821               	movf	??_fputs+1,w
 13858  101C  00F4               	movwf	fputc@c+1
 13859  101D  087B               	movf	fputs@fp,w
 13860  101E  00A2               	movwf	??_fputs+2
 13861  101F  0822               	movf	??_fputs+2,w
 13862  1020  00F5               	movwf	fputc@fp
 13863  1021  319B  2339  3190   	fcall	_fputc
 13864  1024  3001               	movlw	1
 13865  1025  0020               	movlb	0	; select bank0
 13866  1026  07A4               	addwf	fputs@i,f
 13867  1027  3000               	movlw	0
 13868  1028  3DA5               	addwfc	fputs@i+1,f
 13869  1029  2808               	goto	l3397
 13870  102A                     __end_of_fputs:
 13871                           
 13872                           	psect	text36
 13873  1B39                     __ptext36:	
 13874 ;; *************** function _fputc *****************
 13875 ;; Defined at:
 13876 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
 13877 ;; Parameters:    Size  Location     Type
 13878 ;;  c               2    3[COMMON] int 
 13879 ;;  fp              1    5[COMMON] PTR struct _IO_FILE
 13880 ;;		 -> NULL(0), 
 13881 ;; Auto vars:     Size  Location     Type
 13882 ;;		None
 13883 ;; Return value:  Size  Location     Type
 13884 ;;                  2    3[COMMON] int 
 13885 ;; Registers used:
 13886 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13887 ;; Tracked objects:
 13888 ;;		On entry : 0/0
 13889 ;;		On exit  : 0/0
 13890 ;;		Unchanged: 0/0
 13891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13892 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13894 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13895 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13896 ;;Total ram usage:        8 bytes
 13897 ;; Hardware stack levels used: 1
 13898 ;; Hardware stack levels required when called: 2
 13899 ;; This function calls:
 13900 ;;		_putch
 13901 ;; This function is called by:
 13902 ;;		_pad
 13903 ;;		_vfpfcnvrt
 13904 ;;		_fputs
 13905 ;; This function uses a non-reentrant model
 13906 ;;
 13907                           
 13908                           
 13909                           ;psect for function _fputc
 13910  1B39                     _fputc:
 13911                           
 13912                           ;incstack = 0
 13913                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13914  1B39  0875               	movf	fputc@fp,w
 13915  1B3A  1D03               	btfss	3,2
 13916  1B3B  0875               	movf	fputc@fp,w
 13917  1B3C  1D03               	btfss	3,2
 13918  1B3D  2B42               	goto	l3175
 13919  1B3E  0873               	movf	fputc@c,w
 13920  1B3F  3198  20C9         	fcall	_putch
 13921  1B41  0008               	return
 13922  1B42                     l3175:
 13923  1B42  0875               	movf	fputc@fp,w
 13924  1B43  3E03               	addlw	3
 13925  1B44  0086               	movwf	6
 13926  1B45  0187               	clrf	7
 13927  1B46  0016               	moviw fsr1++
 13928  1B47  0401               	iorwf	1,w
 13929  1B48  1903               	btfsc	3,2
 13930  1B49  2B65               	goto	l3179
 13931  1B4A  0875               	movf	fputc@fp,w
 13932  1B4B  3E03               	addlw	3
 13933  1B4C  0086               	movwf	6
 13934  1B4D  0187               	clrf	7
 13935  1B4E  3F40               	moviw [0]fsr1
 13936  1B4F  00F6               	movwf	??_fputc
 13937  1B50  3F41               	moviw [1]fsr1
 13938  1B51  00F7               	movwf	??_fputc+1
 13939  1B52  0A75               	incf	fputc@fp,w
 13940  1B53  0086               	movwf	6
 13941  1B54  0187               	clrf	7
 13942  1B55  3F40               	moviw [0]fsr1
 13943  1B56  00F8               	movwf	??_fputc+2
 13944  1B57  3F41               	moviw [1]fsr1
 13945  1B58  00F9               	movwf	??_fputc+3
 13946  1B59  0879               	movf	??_fputc+3,w
 13947  1B5A  3A80               	xorlw	128
 13948  1B5B  00FA               	movwf	??_fputc+4
 13949  1B5C  0877               	movf	??_fputc+1,w
 13950  1B5D  3A80               	xorlw	128
 13951  1B5E  027A               	subwf	??_fputc+4,w
 13952  1B5F  1D03               	skipz
 13953  1B60  2B63               	goto	u3805
 13954  1B61  0876               	movf	??_fputc,w
 13955  1B62  0278               	subwf	??_fputc+2,w
 13956  1B63                     u3805:
 13957  1B63  1803               	skipnc
 13958  1B64  0008               	return
 13959  1B65                     l3179:
 13960  1B65  0A75               	incf	fputc@fp,w
 13961  1B66  0086               	movwf	6
 13962  1B67  0187               	clrf	7
 13963  1B68  3001               	movlw	1
 13964  1B69  0781               	addwf	1,f
 13965  1B6A  3141               	addfsr 1,1
 13966  1B6B  1803               	skipnc
 13967  1B6C  0A81               	incf	1,f
 13968  1B6D  0008               	return
 13969  1B6E                     __end_of_fputc:
 13970                           
 13971                           	psect	text37
 13972  18C9                     __ptext37:	
 13973 ;; *************** function _putch *****************
 13974 ;; Defined at:
 13975 ;;		line 82 in file "uart.c"
 13976 ;; Parameters:    Size  Location     Type
 13977 ;;  dato            1    wreg     unsigned char 
 13978 ;; Auto vars:     Size  Location     Type
 13979 ;;  dato            1    2[COMMON] unsigned char 
 13980 ;; Return value:  Size  Location     Type
 13981 ;;                  1    wreg      void 
 13982 ;; Registers used:
 13983 ;;		wreg, status,2, status,0, pclath, cstack
 13984 ;; Tracked objects:
 13985 ;;		On entry : 0/0
 13986 ;;		On exit  : 0/0
 13987 ;;		Unchanged: 0/0
 13988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13990 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13992 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13993 ;;Total ram usage:        1 bytes
 13994 ;; Hardware stack levels used: 1
 13995 ;; Hardware stack levels required when called: 1
 13996 ;; This function calls:
 13997 ;;		_uart_tx
 13998 ;; This function is called by:
 13999 ;;		_fputc
 14000 ;; This function uses a non-reentrant model
 14001 ;;
 14002                           
 14003                           
 14004                           ;psect for function _putch
 14005  18C9                     _putch:
 14006                           
 14007                           ;incstack = 0
 14008                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
 14009                           ;putch@dato stored from wreg
 14010  18C9  00F2               	movwf	putch@dato
 14011                           
 14012                           ;uart.c: 84:     uart_tx( dato);
 14013  18CA  0872               	movf	putch@dato,w
 14014  18CB  3198  20F8         	fcall	_uart_tx
 14015  18CD  0008               	return
 14016  18CE                     __end_of_putch:
 14017                           
 14018                           	psect	text38
 14019  18F8                     __ptext38:	
 14020 ;; *************** function _uart_tx *****************
 14021 ;; Defined at:
 14022 ;;		line 63 in file "uart.c"
 14023 ;; Parameters:    Size  Location     Type
 14024 ;;  dato            1    wreg     unsigned char 
 14025 ;; Auto vars:     Size  Location     Type
 14026 ;;  dato            1    1[COMMON] unsigned char 
 14027 ;; Return value:  Size  Location     Type
 14028 ;;                  1    wreg      void 
 14029 ;; Registers used:
 14030 ;;		wreg, status,2, status,0
 14031 ;; Tracked objects:
 14032 ;;		On entry : 0/0
 14033 ;;		On exit  : 0/0
 14034 ;;		Unchanged: 0/0
 14035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14037 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14038 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14039 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14040 ;;Total ram usage:        2 bytes
 14041 ;; Hardware stack levels used: 1
 14042 ;; This function calls:
 14043 ;;		Nothing
 14044 ;; This function is called by:
 14045 ;;		_putch
 14046 ;;		_uart_send_string
 14047 ;; This function uses a non-reentrant model
 14048 ;;
 14049                           
 14050                           
 14051                           ;psect for function _uart_tx
 14052  18F8                     _uart_tx:
 14053                           
 14054                           ;incstack = 0
 14055                           ; Regs used in _uart_tx: [wreg+status,2+status,0]
 14056                           ;uart_tx@dato stored from wreg
 14057  18F8  00F1               	movwf	uart_tx@dato
 14058  18F9                     l3163:	
 14059                           ;uart.c: 65:     while( ( (PIR3>>4) & 0x01) == 0){}
 14060                           
 14061  18F9  002E               	movlb	14	; select bank14
 14062  18FA  080F               	movf	15,w	;volatile
 14063  18FB  00F0               	movwf	??_uart_tx
 14064  18FC  3004               	movlw	4
 14065  18FD                     u3755:
 14066  18FD  36F0               	lsrf	??_uart_tx,f
 14067  18FE  0B89               	decfsz	9,f
 14068  18FF  28FD               	goto	u3755
 14069  1900  1C70               	btfss	??_uart_tx,0
 14070  1901  28F9               	goto	l3163
 14071                           
 14072                           ;uart.c: 66:         TX1REG = dato;
 14073  1902  0871               	movf	uart_tx@dato,w
 14074  1903  0022               	movlb	2	; select bank2
 14075  1904  009A               	movwf	26	;volatile
 14076  1905  0008               	return
 14077  1906                     __end_of_uart_tx:
 14078                           
 14079                           	psect	text39
 14080  1957                     __ptext39:	
 14081 ;; *************** function _abs *****************
 14082 ;; Defined at:
 14083 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
 14084 ;; Parameters:    Size  Location     Type
 14085 ;;  a               2    3[COMMON] int 
 14086 ;; Auto vars:     Size  Location     Type
 14087 ;;		None
 14088 ;; Return value:  Size  Location     Type
 14089 ;;                  2    3[COMMON] int 
 14090 ;; Registers used:
 14091 ;;		wreg, status,2, status,0
 14092 ;; Tracked objects:
 14093 ;;		On entry : 0/0
 14094 ;;		On exit  : 0/0
 14095 ;;		Unchanged: 0/0
 14096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14097 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14099 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14100 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14101 ;;Total ram usage:        4 bytes
 14102 ;; Hardware stack levels used: 1
 14103 ;; This function calls:
 14104 ;;		Nothing
 14105 ;; This function is called by:
 14106 ;;		_dtoa
 14107 ;; This function uses a non-reentrant model
 14108 ;;
 14109                           
 14110                           
 14111                           ;psect for function _abs
 14112  1957                     _abs:
 14113                           
 14114                           ;incstack = 0
 14115                           ; Regs used in _abs: [wreg+status,2+status,0]
 14116  1957  0874               	movf	abs@a+1,w
 14117  1958  3A80               	xorlw	128
 14118  1959  00F5               	movwf	??_abs
 14119  195A  3080               	movlw	128
 14120  195B  0275               	subwf	??_abs,w
 14121  195C  1D03               	skipz
 14122  195D  2960               	goto	u5555
 14123  195E  3001               	movlw	1
 14124  195F  0273               	subwf	abs@a,w
 14125  1960                     u5555:
 14126  1960  1803               	skipnc
 14127  1961  0008               	return
 14128  1962  0973               	comf	abs@a,w
 14129  1963  00F5               	movwf	??_abs
 14130  1964  0974               	comf	abs@a+1,w
 14131  1965  00F6               	movwf	??_abs+1
 14132  1966  0AF5               	incf	??_abs,f
 14133  1967  1903               	skipnz
 14134  1968  0AF6               	incf	??_abs+1,f
 14135  1969  0875               	movf	??_abs,w
 14136  196A  00F3               	movwf	?_abs
 14137  196B  0876               	movf	??_abs+1,w
 14138  196C  00F4               	movwf	?_abs+1
 14139  196D  0008               	return
 14140  196E                     __end_of_abs:
 14141                           
 14142                           	psect	text40
 14143  11A3                     __ptext40:	
 14144 ;; *************** function ___aomod *****************
 14145 ;; Defined at:
 14146 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
 14147 ;; Parameters:    Size  Location     Type
 14148 ;;  divisor         8    0[BANK0 ] long long 
 14149 ;;  dividend        8    8[BANK0 ] long long 
 14150 ;; Auto vars:     Size  Location     Type
 14151 ;;  sign            1    2[COMMON] unsigned char 
 14152 ;;  counter         1    1[COMMON] unsigned char 
 14153 ;; Return value:  Size  Location     Type
 14154 ;;                  8    0[BANK0 ] long long 
 14155 ;; Registers used:
 14156 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14157 ;; Tracked objects:
 14158 ;;		On entry : 0/0
 14159 ;;		On exit  : 0/0
 14160 ;;		Unchanged: 0/0
 14161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14162 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14163 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14164 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14165 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14166 ;;Total ram usage:       19 bytes
 14167 ;; Hardware stack levels used: 1
 14168 ;; This function calls:
 14169 ;;		Nothing
 14170 ;; This function is called by:
 14171 ;;		_dtoa
 14172 ;; This function uses a non-reentrant model
 14173 ;;
 14174                           
 14175                           
 14176                           ;psect for function ___aomod
 14177  11A3                     ___aomod:
 14178                           
 14179                           ;incstack = 0
 14180                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
 14181  11A3  01F2               	clrf	___aomod@sign
 14182  11A4  3028               	movlw	low ___aomod@dividend
 14183  11A5  0086               	movwf	6
 14184  11A6  3000               	movlw	high ___aomod@dividend
 14185  11A7  0087               	movwf	7
 14186  11A8  3F47               	moviw [7]fsr1
 14187  11A9  00F0               	movwf	??___aomod
 14188  11AA  1FF0               	btfss	??___aomod,7
 14189  11AB  29CD               	goto	l3475
 14190  11AC  0020               	movlb	0	; select bank0
 14191  11AD  09A8               	comf	___aomod@dividend,f
 14192  11AE  09A9               	comf	___aomod@dividend+1,f
 14193  11AF  09AA               	comf	___aomod@dividend+2,f
 14194  11B0  09AB               	comf	___aomod@dividend+3,f
 14195  11B1  09AC               	comf	___aomod@dividend+4,f
 14196  11B2  09AD               	comf	___aomod@dividend+5,f
 14197  11B3  09AE               	comf	___aomod@dividend+6,f
 14198  11B4  09AF               	comf	___aomod@dividend+7,f
 14199  11B5  0AA8               	incf	___aomod@dividend,f
 14200  11B6  1D03               	skipz
 14201  11B7  29CB               	goto	u449lld
 14202  11B8  0AA9               	incf	___aomod@dividend+1,f
 14203  11B9  1D03               	skipz
 14204  11BA  29CB               	goto	u449lld
 14205  11BB  0AAA               	incf	___aomod@dividend+2,f
 14206  11BC  1D03               	skipz
 14207  11BD  29CB               	goto	u449lld
 14208  11BE  0AAB               	incf	___aomod@dividend+3,f
 14209  11BF  1D03               	skipz
 14210  11C0  29CB               	goto	u449lld
 14211  11C1  0AAC               	incf	___aomod@dividend+4,f
 14212  11C2  1D03               	skipz
 14213  11C3  29CB               	goto	u449lld
 14214  11C4  0AAD               	incf	___aomod@dividend+5,f
 14215  11C5  1D03               	skipz
 14216  11C6  29CB               	goto	u449lld
 14217  11C7  0AAE               	incf	___aomod@dividend+6,f
 14218  11C8  1D03               	skipz
 14219  11C9  29CB               	goto	u449lld
 14220  11CA  0AAF               	incf	___aomod@dividend+7,f
 14221  11CB                     u449lld:
 14222  11CB  01F2               	clrf	___aomod@sign
 14223  11CC  0AF2               	incf	___aomod@sign,f
 14224  11CD                     l3475:
 14225  11CD  3020               	movlw	low ___aomod@divisor
 14226  11CE  0086               	movwf	6
 14227  11CF  3000               	movlw	high ___aomod@divisor
 14228  11D0  0087               	movwf	7
 14229  11D1  3F47               	moviw [7]fsr1
 14230  11D2  00F0               	movwf	??___aomod
 14231  11D3  1FF0               	btfss	??___aomod,7
 14232  11D4  29F4               	goto	l3479
 14233  11D5  0020               	movlb	0	; select bank0
 14234  11D6  09A0               	comf	___aomod@divisor,f
 14235  11D7  09A1               	comf	___aomod@divisor+1,f
 14236  11D8  09A2               	comf	___aomod@divisor+2,f
 14237  11D9  09A3               	comf	___aomod@divisor+3,f
 14238  11DA  09A4               	comf	___aomod@divisor+4,f
 14239  11DB  09A5               	comf	___aomod@divisor+5,f
 14240  11DC  09A6               	comf	___aomod@divisor+6,f
 14241  11DD  09A7               	comf	___aomod@divisor+7,f
 14242  11DE  0AA0               	incf	___aomod@divisor,f
 14243  11DF  1D03               	skipz
 14244  11E0  29F4               	goto	l3479
 14245  11E1  0AA1               	incf	___aomod@divisor+1,f
 14246  11E2  1D03               	skipz
 14247  11E3  29F4               	goto	l3479
 14248  11E4  0AA2               	incf	___aomod@divisor+2,f
 14249  11E5  1D03               	skipz
 14250  11E6  29F4               	goto	l3479
 14251  11E7  0AA3               	incf	___aomod@divisor+3,f
 14252  11E8  1D03               	skipz
 14253  11E9  29F4               	goto	l3479
 14254  11EA  0AA4               	incf	___aomod@divisor+4,f
 14255  11EB  1D03               	skipz
 14256  11EC  29F4               	goto	l3479
 14257  11ED  0AA5               	incf	___aomod@divisor+5,f
 14258  11EE  1D03               	skipz
 14259  11EF  29F4               	goto	l3479
 14260  11F0  0AA6               	incf	___aomod@divisor+6,f
 14261  11F1  1D03               	skipz
 14262  11F2  29F4               	goto	l3479
 14263  11F3  0AA7               	incf	___aomod@divisor+7,f
 14264  11F4                     l3479:
 14265  11F4  0020               	movlb	0	; select bank0
 14266  11F5  0820               	movf	___aomod@divisor,w
 14267  11F6  0421               	iorwf	___aomod@divisor+1,w
 14268  11F7  0422               	iorwf	___aomod@divisor+2,w
 14269  11F8  0423               	iorwf	___aomod@divisor+3,w
 14270  11F9  0424               	iorwf	___aomod@divisor+4,w
 14271  11FA  0425               	iorwf	___aomod@divisor+5,w
 14272  11FB  0426               	iorwf	___aomod@divisor+6,w
 14273  11FC  0427               	iorwf	___aomod@divisor+7,w
 14274  11FD  1903               	skipnz
 14275  11FE  2A4C               	goto	l3495
 14276  11FF  01F1               	clrf	___aomod@counter
 14277  1200  0AF1               	incf	___aomod@counter,f
 14278  1201                     l3487:
 14279  1201  1BA7               	btfsc	___aomod@divisor+7,7
 14280  1202  2A10               	goto	l3489
 14281  1203  35A0               	lslf	___aomod@divisor,f
 14282  1204  0DA1               	rlf	___aomod@divisor+1,f
 14283  1205  0DA2               	rlf	___aomod@divisor+2,f
 14284  1206  0DA3               	rlf	___aomod@divisor+3,f
 14285  1207  0DA4               	rlf	___aomod@divisor+4,f
 14286  1208  0DA5               	rlf	___aomod@divisor+5,f
 14287  1209  0DA6               	rlf	___aomod@divisor+6,f
 14288  120A  0DA7               	rlf	___aomod@divisor+7,f
 14289  120B  3001               	movlw	1
 14290  120C  00F0               	movwf	??___aomod
 14291  120D  0870               	movf	??___aomod,w
 14292  120E  07F1               	addwf	___aomod@counter,f
 14293  120F  2A01               	goto	l3487
 14294  1210                     l3489:
 14295  1210  0827               	movf	___aomod@divisor+7,w
 14296  1211  022F               	subwf	___aomod@dividend+7,w
 14297  1212  1D03               	skipz
 14298  1213  2A2E               	goto	u4545
 14299  1214  0826               	movf	___aomod@divisor+6,w
 14300  1215  022E               	subwf	___aomod@dividend+6,w
 14301  1216  1D03               	skipz
 14302  1217  2A2E               	goto	u4545
 14303  1218  0825               	movf	___aomod@divisor+5,w
 14304  1219  022D               	subwf	___aomod@dividend+5,w
 14305  121A  1D03               	skipz
 14306  121B  2A2E               	goto	u4545
 14307  121C  0824               	movf	___aomod@divisor+4,w
 14308  121D  022C               	subwf	___aomod@dividend+4,w
 14309  121E  1D03               	skipz
 14310  121F  2A2E               	goto	u4545
 14311  1220  0823               	movf	___aomod@divisor+3,w
 14312  1221  022B               	subwf	___aomod@dividend+3,w
 14313  1222  1D03               	skipz
 14314  1223  2A2E               	goto	u4545
 14315  1224  0822               	movf	___aomod@divisor+2,w
 14316  1225  022A               	subwf	___aomod@dividend+2,w
 14317  1226  1D03               	skipz
 14318  1227  2A2E               	goto	u4545
 14319  1228  0821               	movf	___aomod@divisor+1,w
 14320  1229  0229               	subwf	___aomod@dividend+1,w
 14321  122A  1D03               	skipz
 14322  122B  2A2E               	goto	u4545
 14323  122C  0820               	movf	___aomod@divisor,w
 14324  122D  0228               	subwf	___aomod@dividend,w
 14325  122E                     u4545:
 14326  122E  1C03               	skipc
 14327  122F  2A40               	goto	l3493
 14328  1230  0820               	movf	___aomod@divisor,w
 14329  1231  02A8               	subwf	___aomod@dividend,f
 14330  1232  0821               	movf	___aomod@divisor+1,w
 14331  1233  3BA9               	subwfb	___aomod@dividend+1,f
 14332  1234  0822               	movf	___aomod@divisor+2,w
 14333  1235  3BAA               	subwfb	___aomod@dividend+2,f
 14334  1236  0823               	movf	___aomod@divisor+3,w
 14335  1237  3BAB               	subwfb	___aomod@dividend+3,f
 14336  1238  0824               	movf	___aomod@divisor+4,w
 14337  1239  3BAC               	subwfb	___aomod@dividend+4,f
 14338  123A  0825               	movf	___aomod@divisor+5,w
 14339  123B  3BAD               	subwfb	___aomod@dividend+5,f
 14340  123C  0826               	movf	___aomod@divisor+6,w
 14341  123D  3BAE               	subwfb	___aomod@dividend+6,f
 14342  123E  0827               	movf	___aomod@divisor+7,w
 14343  123F  3BAF               	subwfb	___aomod@dividend+7,f
 14344  1240                     l3493:
 14345  1240  36A7               	lsrf	___aomod@divisor+7,f
 14346  1241  0CA6               	rrf	___aomod@divisor+6,f
 14347  1242  0CA5               	rrf	___aomod@divisor+5,f
 14348  1243  0CA4               	rrf	___aomod@divisor+4,f
 14349  1244  0CA3               	rrf	___aomod@divisor+3,f
 14350  1245  0CA2               	rrf	___aomod@divisor+2,f
 14351  1246  0CA1               	rrf	___aomod@divisor+1,f
 14352  1247  0CA0               	rrf	___aomod@divisor,f
 14353  1248  3001               	movlw	1
 14354  1249  02F1               	subwf	___aomod@counter,f
 14355  124A  1D03               	btfss	3,2
 14356  124B  2A10               	goto	l3489
 14357  124C                     l3495:
 14358  124C  0872               	movf	___aomod@sign,w
 14359  124D  1903               	btfsc	3,2
 14360  124E  2A6D               	goto	l520
 14361  124F  09A8               	comf	___aomod@dividend,f
 14362  1250  09A9               	comf	___aomod@dividend+1,f
 14363  1251  09AA               	comf	___aomod@dividend+2,f
 14364  1252  09AB               	comf	___aomod@dividend+3,f
 14365  1253  09AC               	comf	___aomod@dividend+4,f
 14366  1254  09AD               	comf	___aomod@dividend+5,f
 14367  1255  09AE               	comf	___aomod@dividend+6,f
 14368  1256  09AF               	comf	___aomod@dividend+7,f
 14369  1257  0AA8               	incf	___aomod@dividend,f
 14370  1258  1D03               	skipz
 14371  1259  2A6D               	goto	l520
 14372  125A  0AA9               	incf	___aomod@dividend+1,f
 14373  125B  1D03               	skipz
 14374  125C  2A6D               	goto	l520
 14375  125D  0AAA               	incf	___aomod@dividend+2,f
 14376  125E  1D03               	skipz
 14377  125F  2A6D               	goto	l520
 14378  1260  0AAB               	incf	___aomod@dividend+3,f
 14379  1261  1D03               	skipz
 14380  1262  2A6D               	goto	l520
 14381  1263  0AAC               	incf	___aomod@dividend+4,f
 14382  1264  1D03               	skipz
 14383  1265  2A6D               	goto	l520
 14384  1266  0AAD               	incf	___aomod@dividend+5,f
 14385  1267  1D03               	skipz
 14386  1268  2A6D               	goto	l520
 14387  1269  0AAE               	incf	___aomod@dividend+6,f
 14388  126A  1D03               	skipz
 14389  126B  2A6D               	goto	l520
 14390  126C  0AAF               	incf	___aomod@dividend+7,f
 14391  126D                     l520:
 14392  126D  0020               	movlb	0	; select bank0
 14393  126E  0828               	movf	___aomod@dividend,w
 14394  126F  00A0               	movwf	?___aomod
 14395  1270  0829               	movf	___aomod@dividend+1,w
 14396  1271  00A1               	movwf	?___aomod+1
 14397  1272  082A               	movf	___aomod@dividend+2,w
 14398  1273  00A2               	movwf	?___aomod+2
 14399  1274  082B               	movf	___aomod@dividend+3,w
 14400  1275  00A3               	movwf	?___aomod+3
 14401  1276  082C               	movf	___aomod@dividend+4,w
 14402  1277  00A4               	movwf	?___aomod+4
 14403  1278  082D               	movf	___aomod@dividend+5,w
 14404  1279  00A5               	movwf	?___aomod+5
 14405  127A  082E               	movf	___aomod@dividend+6,w
 14406  127B  00A6               	movwf	?___aomod+6
 14407  127C  082F               	movf	___aomod@dividend+7,w
 14408  127D  00A7               	movwf	?___aomod+7
 14409  127E  0008               	return
 14410  127F                     __end_of___aomod:
 14411                           
 14412                           	psect	text41
 14413  0021                     __ptext41:	
 14414 ;; *************** function ___aodiv *****************
 14415 ;; Defined at:
 14416 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
 14417 ;; Parameters:    Size  Location     Type
 14418 ;;  divisor         8    0[BANK0 ] long long 
 14419 ;;  dividend        8    8[BANK0 ] long long 
 14420 ;; Auto vars:     Size  Location     Type
 14421 ;;  quotient        8    3[COMMON] long long 
 14422 ;;  sign            1    2[COMMON] unsigned char 
 14423 ;;  counter         1    1[COMMON] unsigned char 
 14424 ;; Return value:  Size  Location     Type
 14425 ;;                  8    0[BANK0 ] long long 
 14426 ;; Registers used:
 14427 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14428 ;; Tracked objects:
 14429 ;;		On entry : 0/0
 14430 ;;		On exit  : 0/0
 14431 ;;		Unchanged: 0/0
 14432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14433 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14434 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14435 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14436 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14437 ;;Total ram usage:       27 bytes
 14438 ;; Hardware stack levels used: 1
 14439 ;; This function calls:
 14440 ;;		Nothing
 14441 ;; This function is called by:
 14442 ;;		_dtoa
 14443 ;; This function uses a non-reentrant model
 14444 ;;
 14445                           
 14446                           
 14447                           ;psect for function ___aodiv
 14448  0021                     ___aodiv:
 14449                           
 14450                           ;incstack = 0
 14451                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
 14452  0021  01F2               	clrf	___aodiv@sign
 14453  0022  3020               	movlw	low ___aodiv@divisor
 14454  0023  0086               	movwf	6
 14455  0024  3000               	movlw	high ___aodiv@divisor
 14456  0025  0087               	movwf	7
 14457  0026  3F47               	moviw [7]fsr1
 14458  0027  00F0               	movwf	??___aodiv
 14459  0028  1FF0               	btfss	??___aodiv,7
 14460  0029  284B               	goto	l3437
 14461  002A  0020               	movlb	0	; select bank0
 14462  002B  09A0               	comf	___aodiv@divisor,f
 14463  002C  09A1               	comf	___aodiv@divisor+1,f
 14464  002D  09A2               	comf	___aodiv@divisor+2,f
 14465  002E  09A3               	comf	___aodiv@divisor+3,f
 14466  002F  09A4               	comf	___aodiv@divisor+4,f
 14467  0030  09A5               	comf	___aodiv@divisor+5,f
 14468  0031  09A6               	comf	___aodiv@divisor+6,f
 14469  0032  09A7               	comf	___aodiv@divisor+7,f
 14470  0033  0AA0               	incf	___aodiv@divisor,f
 14471  0034  1D03               	skipz
 14472  0035  2849               	goto	u438lld
 14473  0036  0AA1               	incf	___aodiv@divisor+1,f
 14474  0037  1D03               	skipz
 14475  0038  2849               	goto	u438lld
 14476  0039  0AA2               	incf	___aodiv@divisor+2,f
 14477  003A  1D03               	skipz
 14478  003B  2849               	goto	u438lld
 14479  003C  0AA3               	incf	___aodiv@divisor+3,f
 14480  003D  1D03               	skipz
 14481  003E  2849               	goto	u438lld
 14482  003F  0AA4               	incf	___aodiv@divisor+4,f
 14483  0040  1D03               	skipz
 14484  0041  2849               	goto	u438lld
 14485  0042  0AA5               	incf	___aodiv@divisor+5,f
 14486  0043  1D03               	skipz
 14487  0044  2849               	goto	u438lld
 14488  0045  0AA6               	incf	___aodiv@divisor+6,f
 14489  0046  1D03               	skipz
 14490  0047  2849               	goto	u438lld
 14491  0048  0AA7               	incf	___aodiv@divisor+7,f
 14492  0049                     u438lld:
 14493  0049  01F2               	clrf	___aodiv@sign
 14494  004A  0AF2               	incf	___aodiv@sign,f
 14495  004B                     l3437:
 14496  004B  3028               	movlw	low ___aodiv@dividend
 14497  004C  0086               	movwf	6
 14498  004D  3000               	movlw	high ___aodiv@dividend
 14499  004E  0087               	movwf	7
 14500  004F  3F47               	moviw [7]fsr1
 14501  0050  00F0               	movwf	??___aodiv
 14502  0051  1FF0               	btfss	??___aodiv,7
 14503  0052  2876               	goto	l3443
 14504  0053  0020               	movlb	0	; select bank0
 14505  0054  09A8               	comf	___aodiv@dividend,f
 14506  0055  09A9               	comf	___aodiv@dividend+1,f
 14507  0056  09AA               	comf	___aodiv@dividend+2,f
 14508  0057  09AB               	comf	___aodiv@dividend+3,f
 14509  0058  09AC               	comf	___aodiv@dividend+4,f
 14510  0059  09AD               	comf	___aodiv@dividend+5,f
 14511  005A  09AE               	comf	___aodiv@dividend+6,f
 14512  005B  09AF               	comf	___aodiv@dividend+7,f
 14513  005C  0AA8               	incf	___aodiv@dividend,f
 14514  005D  1D03               	skipz
 14515  005E  2872               	goto	l3441
 14516  005F  0AA9               	incf	___aodiv@dividend+1,f
 14517  0060  1D03               	skipz
 14518  0061  2872               	goto	l3441
 14519  0062  0AAA               	incf	___aodiv@dividend+2,f
 14520  0063  1D03               	skipz
 14521  0064  2872               	goto	l3441
 14522  0065  0AAB               	incf	___aodiv@dividend+3,f
 14523  0066  1D03               	skipz
 14524  0067  2872               	goto	l3441
 14525  0068  0AAC               	incf	___aodiv@dividend+4,f
 14526  0069  1D03               	skipz
 14527  006A  2872               	goto	l3441
 14528  006B  0AAD               	incf	___aodiv@dividend+5,f
 14529  006C  1D03               	skipz
 14530  006D  2872               	goto	l3441
 14531  006E  0AAE               	incf	___aodiv@dividend+6,f
 14532  006F  1D03               	skipz
 14533  0070  2872               	goto	l3441
 14534  0071  0AAF               	incf	___aodiv@dividend+7,f
 14535  0072                     l3441:
 14536  0072  3001               	movlw	1
 14537  0073  00F0               	movwf	??___aodiv
 14538  0074  0870               	movf	??___aodiv,w
 14539  0075  06F2               	xorwf	___aodiv@sign,f
 14540  0076                     l3443:
 14541  0076  3073               	movlw	low ___aodiv@quotient
 14542  0077  0086               	movwf	6
 14543  0078  3000               	movlw	high ___aodiv@quotient
 14544  0079  0087               	movwf	7
 14545  007A  3008               	movlw	8
 14546  007B  00F0               	movwf	??___aodiv
 14547  007C  3000               	movlw	0
 14548  007D                     u4410:
 14549  007D  001E               	movwi fsr1++
 14550  007E  0BF0               	decfsz	??___aodiv,f
 14551  007F  287D               	goto	u4410
 14552  0080  0020               	movlb	0	; select bank0
 14553  0081  0820               	movf	___aodiv@divisor,w
 14554  0082  0421               	iorwf	___aodiv@divisor+1,w
 14555  0083  0422               	iorwf	___aodiv@divisor+2,w
 14556  0084  0423               	iorwf	___aodiv@divisor+3,w
 14557  0085  0424               	iorwf	___aodiv@divisor+4,w
 14558  0086  0425               	iorwf	___aodiv@divisor+5,w
 14559  0087  0426               	iorwf	___aodiv@divisor+6,w
 14560  0088  0427               	iorwf	___aodiv@divisor+7,w
 14561  0089  1903               	skipnz
 14562  008A  28E1               	goto	l3465
 14563  008B  01F1               	clrf	___aodiv@counter
 14564  008C  0AF1               	incf	___aodiv@counter,f
 14565  008D                     l3453:
 14566  008D  1BA7               	btfsc	___aodiv@divisor+7,7
 14567  008E  289C               	goto	l3455
 14568  008F  35A0               	lslf	___aodiv@divisor,f
 14569  0090  0DA1               	rlf	___aodiv@divisor+1,f
 14570  0091  0DA2               	rlf	___aodiv@divisor+2,f
 14571  0092  0DA3               	rlf	___aodiv@divisor+3,f
 14572  0093  0DA4               	rlf	___aodiv@divisor+4,f
 14573  0094  0DA5               	rlf	___aodiv@divisor+5,f
 14574  0095  0DA6               	rlf	___aodiv@divisor+6,f
 14575  0096  0DA7               	rlf	___aodiv@divisor+7,f
 14576  0097  3001               	movlw	1
 14577  0098  00F0               	movwf	??___aodiv
 14578  0099  0870               	movf	??___aodiv,w
 14579  009A  07F1               	addwf	___aodiv@counter,f
 14580  009B  288D               	goto	l3453
 14581  009C                     l3455:
 14582  009C  35F3               	lslf	___aodiv@quotient,f
 14583  009D  0DF4               	rlf	___aodiv@quotient+1,f
 14584  009E  0DF5               	rlf	___aodiv@quotient+2,f
 14585  009F  0DF6               	rlf	___aodiv@quotient+3,f
 14586  00A0  0DF7               	rlf	___aodiv@quotient+4,f
 14587  00A1  0DF8               	rlf	___aodiv@quotient+5,f
 14588  00A2  0DF9               	rlf	___aodiv@quotient+6,f
 14589  00A3  0DFA               	rlf	___aodiv@quotient+7,f
 14590  00A4  0827               	movf	___aodiv@divisor+7,w
 14591  00A5  022F               	subwf	___aodiv@dividend+7,w
 14592  00A6  1D03               	skipz
 14593  00A7  28C2               	goto	u4445
 14594  00A8  0826               	movf	___aodiv@divisor+6,w
 14595  00A9  022E               	subwf	___aodiv@dividend+6,w
 14596  00AA  1D03               	skipz
 14597  00AB  28C2               	goto	u4445
 14598  00AC  0825               	movf	___aodiv@divisor+5,w
 14599  00AD  022D               	subwf	___aodiv@dividend+5,w
 14600  00AE  1D03               	skipz
 14601  00AF  28C2               	goto	u4445
 14602  00B0  0824               	movf	___aodiv@divisor+4,w
 14603  00B1  022C               	subwf	___aodiv@dividend+4,w
 14604  00B2  1D03               	skipz
 14605  00B3  28C2               	goto	u4445
 14606  00B4  0823               	movf	___aodiv@divisor+3,w
 14607  00B5  022B               	subwf	___aodiv@dividend+3,w
 14608  00B6  1D03               	skipz
 14609  00B7  28C2               	goto	u4445
 14610  00B8  0822               	movf	___aodiv@divisor+2,w
 14611  00B9  022A               	subwf	___aodiv@dividend+2,w
 14612  00BA  1D03               	skipz
 14613  00BB  28C2               	goto	u4445
 14614  00BC  0821               	movf	___aodiv@divisor+1,w
 14615  00BD  0229               	subwf	___aodiv@dividend+1,w
 14616  00BE  1D03               	skipz
 14617  00BF  28C2               	goto	u4445
 14618  00C0  0820               	movf	___aodiv@divisor,w
 14619  00C1  0228               	subwf	___aodiv@dividend,w
 14620  00C2                     u4445:
 14621  00C2  1C03               	skipc
 14622  00C3  28D5               	goto	l3463
 14623  00C4  0820               	movf	___aodiv@divisor,w
 14624  00C5  02A8               	subwf	___aodiv@dividend,f
 14625  00C6  0821               	movf	___aodiv@divisor+1,w
 14626  00C7  3BA9               	subwfb	___aodiv@dividend+1,f
 14627  00C8  0822               	movf	___aodiv@divisor+2,w
 14628  00C9  3BAA               	subwfb	___aodiv@dividend+2,f
 14629  00CA  0823               	movf	___aodiv@divisor+3,w
 14630  00CB  3BAB               	subwfb	___aodiv@dividend+3,f
 14631  00CC  0824               	movf	___aodiv@divisor+4,w
 14632  00CD  3BAC               	subwfb	___aodiv@dividend+4,f
 14633  00CE  0825               	movf	___aodiv@divisor+5,w
 14634  00CF  3BAD               	subwfb	___aodiv@dividend+5,f
 14635  00D0  0826               	movf	___aodiv@divisor+6,w
 14636  00D1  3BAE               	subwfb	___aodiv@dividend+6,f
 14637  00D2  0827               	movf	___aodiv@divisor+7,w
 14638  00D3  3BAF               	subwfb	___aodiv@dividend+7,f
 14639  00D4  1473               	bsf	___aodiv@quotient,0
 14640  00D5                     l3463:
 14641  00D5  36A7               	lsrf	___aodiv@divisor+7,f
 14642  00D6  0CA6               	rrf	___aodiv@divisor+6,f
 14643  00D7  0CA5               	rrf	___aodiv@divisor+5,f
 14644  00D8  0CA4               	rrf	___aodiv@divisor+4,f
 14645  00D9  0CA3               	rrf	___aodiv@divisor+3,f
 14646  00DA  0CA2               	rrf	___aodiv@divisor+2,f
 14647  00DB  0CA1               	rrf	___aodiv@divisor+1,f
 14648  00DC  0CA0               	rrf	___aodiv@divisor,f
 14649  00DD  3001               	movlw	1
 14650  00DE  02F1               	subwf	___aodiv@counter,f
 14651  00DF  1D03               	btfss	3,2
 14652  00E0  289C               	goto	l3455
 14653  00E1                     l3465:
 14654  00E1  0872               	movf	___aodiv@sign,w
 14655  00E2  1903               	btfsc	3,2
 14656  00E3  2902               	goto	l507
 14657  00E4  09F3               	comf	___aodiv@quotient,f
 14658  00E5  09F4               	comf	___aodiv@quotient+1,f
 14659  00E6  09F5               	comf	___aodiv@quotient+2,f
 14660  00E7  09F6               	comf	___aodiv@quotient+3,f
 14661  00E8  09F7               	comf	___aodiv@quotient+4,f
 14662  00E9  09F8               	comf	___aodiv@quotient+5,f
 14663  00EA  09F9               	comf	___aodiv@quotient+6,f
 14664  00EB  09FA               	comf	___aodiv@quotient+7,f
 14665  00EC  0AF3               	incf	___aodiv@quotient,f
 14666  00ED  1D03               	skipz
 14667  00EE  2902               	goto	l507
 14668  00EF  0AF4               	incf	___aodiv@quotient+1,f
 14669  00F0  1D03               	skipz
 14670  00F1  2902               	goto	l507
 14671  00F2  0AF5               	incf	___aodiv@quotient+2,f
 14672  00F3  1D03               	skipz
 14673  00F4  2902               	goto	l507
 14674  00F5  0AF6               	incf	___aodiv@quotient+3,f
 14675  00F6  1D03               	skipz
 14676  00F7  2902               	goto	l507
 14677  00F8  0AF7               	incf	___aodiv@quotient+4,f
 14678  00F9  1D03               	skipz
 14679  00FA  2902               	goto	l507
 14680  00FB  0AF8               	incf	___aodiv@quotient+5,f
 14681  00FC  1D03               	skipz
 14682  00FD  2902               	goto	l507
 14683  00FE  0AF9               	incf	___aodiv@quotient+6,f
 14684  00FF  1D03               	skipz
 14685  0100  2902               	goto	l507
 14686  0101  0AFA               	incf	___aodiv@quotient+7,f
 14687  0102                     l507:
 14688  0102  0873               	movf	___aodiv@quotient,w
 14689  0103  0020               	movlb	0	; select bank0
 14690  0104  00A0               	movwf	?___aodiv
 14691  0105  0874               	movf	___aodiv@quotient+1,w
 14692  0106  00A1               	movwf	?___aodiv+1
 14693  0107  0875               	movf	___aodiv@quotient+2,w
 14694  0108  00A2               	movwf	?___aodiv+2
 14695  0109  0876               	movf	___aodiv@quotient+3,w
 14696  010A  00A3               	movwf	?___aodiv+3
 14697  010B  0877               	movf	___aodiv@quotient+4,w
 14698  010C  00A4               	movwf	?___aodiv+4
 14699  010D  0878               	movf	___aodiv@quotient+5,w
 14700  010E  00A5               	movwf	?___aodiv+5
 14701  010F  0879               	movf	___aodiv@quotient+6,w
 14702  0110  00A6               	movwf	?___aodiv+6
 14703  0111  087A               	movf	___aodiv@quotient+7,w
 14704  0112  00A7               	movwf	?___aodiv+7
 14705  0113  0008               	return
 14706  0114                     __end_of___aodiv:
 14707                           
 14708                           	psect	text42
 14709  102A                     __ptext42:	
 14710 ;; *************** function _atoi *****************
 14711 ;; Defined at:
 14712 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
 14713 ;; Parameters:    Size  Location     Type
 14714 ;;  s               2    6[COMMON] PTR const unsigned char 
 14715 ;;		 -> STR_4(29), STR_3(23), STR_2(21), STR_1(16), 
 14716 ;; Auto vars:     Size  Location     Type
 14717 ;;  n               2    7[BANK0 ] int 
 14718 ;;  neg             2    0[BANK0 ] int 
 14719 ;; Return value:  Size  Location     Type
 14720 ;;                  2    6[COMMON] int 
 14721 ;; Registers used:
 14722 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14723 ;; Tracked objects:
 14724 ;;		On entry : 0/0
 14725 ;;		On exit  : 0/0
 14726 ;;		Unchanged: 0/0
 14727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14728 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14729 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14730 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14731 ;;      Totals:         6       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14732 ;;Total ram usage:       15 bytes
 14733 ;; Hardware stack levels used: 1
 14734 ;; Hardware stack levels required when called: 1
 14735 ;; This function calls:
 14736 ;;		___wmul
 14737 ;;		_isdigit
 14738 ;;		_isspace
 14739 ;; This function is called by:
 14740 ;;		_vfpfcnvrt
 14741 ;; This function uses a non-reentrant model
 14742 ;;
 14743                           
 14744                           
 14745                           ;psect for function _atoi
 14746  102A                     _atoi:
 14747                           
 14748                           ;incstack = 0
 14749                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14750  102A  0020               	movlb	0	; select bank0
 14751  102B  01A7               	clrf	atoi@n
 14752  102C  01A8               	clrf	atoi@n+1
 14753  102D  01A0               	clrf	atoi@neg
 14754  102E  01A1               	clrf	atoi@neg+1
 14755  102F                     l4495:
 14756  102F  01A6               	clrf	_atoi$1034
 14757  1030  0AA6               	incf	_atoi$1034,f
 14758  1031  0876               	movf	atoi@s,w
 14759  1032  0084               	movwf	4
 14760  1033  0877               	movf	atoi@s+1,w
 14761  1034  0085               	movwf	5
 14762  1035  0012               	moviw fsr0++
 14763  1036  3A20               	xorlw	32
 14764  1037  1903               	btfsc	3,2
 14765  1038  284B               	goto	l4503
 14766  1039  0876               	movf	atoi@s,w
 14767  103A  0084               	movwf	4
 14768  103B  0877               	movf	atoi@s+1,w
 14769  103C  0085               	movwf	5
 14770  103D  0800               	movf	0,w	;code access
 14771  103E  3EF7               	addlw	247
 14772  103F  00F8               	movwf	??_atoi
 14773  1040  30FF               	movlw	255
 14774  1041  1803               	skipnc
 14775  1042  3000               	movlw	0
 14776  1043  00F9               	movwf	??_atoi+1
 14777  1044  3000               	movlw	0
 14778  1045  0279               	subwf	??_atoi+1,w
 14779  1046  3005               	movlw	5
 14780  1047  1903               	skipnz
 14781  1048  0278               	subwf	??_atoi,w
 14782  1049  1803               	btfsc	3,0
 14783  104A  01A6               	clrf	_atoi$1034
 14784  104B                     l4503:
 14785  104B  0826               	movf	_atoi$1034,w
 14786  104C  00F8               	movwf	??_atoi
 14787  104D  01F9               	clrf	??_atoi+1
 14788  104E  0878               	movf	??_atoi,w
 14789  104F  00A2               	movwf	_atoi$1033
 14790  1050  0879               	movf	??_atoi+1,w
 14791  1051  00A3               	movwf	_atoi$1033+1
 14792  1052  0822               	movf	_atoi$1033,w
 14793  1053  0423               	iorwf	_atoi$1033+1,w
 14794  1054  1903               	btfsc	3,2
 14795  1055  2860               	goto	l4511
 14796  1056  3001               	movlw	1
 14797  1057  07F6               	addwf	atoi@s,f
 14798  1058  3000               	movlw	0
 14799  1059  3DF7               	addwfc	atoi@s+1,f
 14800  105A  282F               	goto	l4495
 14801  105B                     l4509:
 14802  105B  3001               	movlw	1
 14803  105C  00A0               	movwf	atoi@neg
 14804  105D  3000               	movlw	0
 14805  105E  00A1               	movwf	atoi@neg+1
 14806  105F  2893               	goto	l1154
 14807  1060                     l4511:
 14808  1060  0876               	movf	atoi@s,w
 14809  1061  0084               	movwf	4
 14810  1062  0877               	movf	atoi@s+1,w
 14811  1063  0085               	movwf	5
 14812  1064  0800               	movf	0,w	;code access
 14813  1065  00F8               	movwf	??_atoi
 14814  1066  01F9               	clrf	??_atoi+1
 14815                           
 14816                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14817                           ; Switch size 1, requested type "simple"
 14818                           ; Number of cases is 1, Range of values is 0 to 0
 14819                           ; switch strategies available:
 14820                           ; Name         Instructions Cycles
 14821                           ; simple_byte            4     3 (average)
 14822                           ; direct_byte            8     6 (fixed)
 14823                           ; jumptable            260     6 (fixed)
 14824                           ;	Chosen strategy is simple_byte
 14825  1067  0879               	movf	??_atoi+1,w
 14826  1068  3A00               	xorlw	0	; case 0
 14827  1069  1903               	skipnz
 14828  106A  286C               	goto	l5011
 14829  106B  2897               	goto	l4517
 14830  106C                     l5011:
 14831                           
 14832                           ; Switch size 1, requested type "simple"
 14833                           ; Number of cases is 2, Range of values is 43 to 45
 14834                           ; switch strategies available:
 14835                           ; Name         Instructions Cycles
 14836                           ; simple_byte            7     4 (average)
 14837                           ; direct_byte           15     9 (fixed)
 14838                           ; jumptable            263     9 (fixed)
 14839                           ;	Chosen strategy is simple_byte
 14840  106C  0878               	movf	??_atoi,w
 14841  106D  3A2B               	xorlw	43	; case 43
 14842  106E  1903               	skipnz
 14843  106F  2893               	goto	l1154
 14844  1070  3A06               	xorlw	6	; case 45
 14845  1071  1903               	skipnz
 14846  1072  285B               	goto	l4509
 14847  1073  2897               	goto	l4517
 14848  1074                     l4513:
 14849  1074  0876               	movf	atoi@s,w
 14850  1075  0084               	movwf	4
 14851  1076  0877               	movf	atoi@s+1,w
 14852  1077  0085               	movwf	5
 14853  1078  0800               	movf	0,w	;code access
 14854  1079  00F8               	movwf	??_atoi
 14855  107A  0828               	movf	atoi@n+1,w
 14856  107B  00F1               	movwf	___wmul@multiplier+1
 14857  107C  0827               	movf	atoi@n,w
 14858  107D  00F0               	movwf	___wmul@multiplier
 14859  107E  300A               	movlw	10
 14860  107F  00F2               	movwf	___wmul@multiplicand
 14861  1080  3000               	movlw	0
 14862  1081  00F3               	movwf	___wmul@multiplicand+1
 14863  1082  319A  2200  3190   	fcall	___wmul
 14864  1085  0871               	movf	?___wmul+1,w
 14865  1086  00FA               	movwf	??_atoi+2
 14866  1087  0878               	movf	??_atoi,w
 14867  1088  0270               	subwf	?___wmul,w
 14868  1089  00F9               	movwf	??_atoi+1
 14869  108A  1C03               	skipc
 14870  108B  03FA               	decf	??_atoi+2,f
 14871  108C  0879               	movf	??_atoi+1,w
 14872  108D  3E30               	addlw	48
 14873  108E  0020               	movlb	0	; select bank0
 14874  108F  00A7               	movwf	atoi@n
 14875  1090  3000               	movlw	0
 14876  1091  3D7A               	addwfc	??_atoi+2,w
 14877  1092  00A8               	movwf	atoi@n+1
 14878  1093                     l1154:
 14879  1093  3001               	movlw	1
 14880  1094  07F6               	addwf	atoi@s,f
 14881  1095  3000               	movlw	0
 14882  1096  3DF7               	addwfc	atoi@s+1,f
 14883  1097                     l4517:
 14884  1097  0876               	movf	atoi@s,w
 14885  1098  0084               	movwf	4
 14886  1099  0877               	movf	atoi@s+1,w
 14887  109A  0085               	movwf	5
 14888  109B  0800               	movf	0,w	;code access
 14889  109C  3ED0               	addlw	208
 14890  109D  00F8               	movwf	??_atoi
 14891  109E  30FF               	movlw	255
 14892  109F  1803               	skipnc
 14893  10A0  3000               	movlw	0
 14894  10A1  00F9               	movwf	??_atoi+1
 14895  10A2  3000               	movlw	0
 14896  10A3  0279               	subwf	??_atoi+1,w
 14897  10A4  300A               	movlw	10
 14898  10A5  1903               	skipnz
 14899  10A6  0278               	subwf	??_atoi,w
 14900  10A7  1803               	btfsc	3,0
 14901  10A8  28AB               	goto	u6800
 14902  10A9  3001               	movlw	1
 14903  10AA  28AC               	goto	u6810
 14904  10AB                     u6800:
 14905  10AB  3000               	movlw	0
 14906  10AC                     u6810:
 14907  10AC  00FA               	movwf	??_atoi+2
 14908  10AD  01FB               	clrf	??_atoi+3
 14909  10AE  087A               	movf	??_atoi+2,w
 14910  10AF  00A4               	movwf	_atoi$1035
 14911  10B0  087B               	movf	??_atoi+3,w
 14912  10B1  00A5               	movwf	_atoi$1035+1
 14913  10B2  0824               	movf	_atoi$1035,w
 14914  10B3  0425               	iorwf	_atoi$1035+1,w
 14915  10B4  1D03               	btfss	3,2
 14916  10B5  2874               	goto	l4513
 14917  10B6  0820               	movf	atoi@neg,w
 14918  10B7  0421               	iorwf	atoi@neg+1,w
 14919  10B8  1D03               	btfss	3,2
 14920  10B9  28C6               	goto	l4527
 14921  10BA  0927               	comf	atoi@n,w
 14922  10BB  00F8               	movwf	??_atoi
 14923  10BC  0928               	comf	atoi@n+1,w
 14924  10BD  00F9               	movwf	??_atoi+1
 14925  10BE  0AF8               	incf	??_atoi,f
 14926  10BF  1903               	skipnz
 14927  10C0  0AF9               	incf	??_atoi+1,f
 14928  10C1  0878               	movf	??_atoi,w
 14929  10C2  00F6               	movwf	?_atoi
 14930  10C3  0879               	movf	??_atoi+1,w
 14931  10C4  00F7               	movwf	?_atoi+1
 14932  10C5  0008               	return
 14933  10C6                     l4527:
 14934  10C6  0828               	movf	atoi@n+1,w
 14935  10C7  00F7               	movwf	?_atoi+1
 14936  10C8  0827               	movf	atoi@n,w
 14937  10C9  00F6               	movwf	?_atoi
 14938  10CA  0008               	return
 14939  10CB                     __end_of_atoi:
 14940                           
 14941                           	psect	text43
 14942  1A1B                     __ptext43:	
 14943 ;; *************** function _isspace *****************
 14944 ;; Defined at:
 14945 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
 14946 ;; Parameters:    Size  Location     Type
 14947 ;;  c               2    0[COMMON] int 
 14948 ;; Auto vars:     Size  Location     Type
 14949 ;;		None
 14950 ;; Return value:  Size  Location     Type
 14951 ;;                  2    0[COMMON] int 
 14952 ;; Registers used:
 14953 ;;		wreg, status,2, status,0
 14954 ;; Tracked objects:
 14955 ;;		On entry : 0/0
 14956 ;;		On exit  : 0/0
 14957 ;;		Unchanged: 0/0
 14958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14959 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14960 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14961 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14962 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14963 ;;Total ram usage:        5 bytes
 14964 ;; Hardware stack levels used: 1
 14965 ;; This function calls:
 14966 ;;		Nothing
 14967 ;; This function is called by:
 14968 ;;		_atoi
 14969 ;; This function uses a non-reentrant model
 14970 ;;
 14971                           
 14972                           
 14973                           ;psect for function _isspace
 14974  1A1B                     _isspace:
 14975                           
 14976                           ;incstack = 0
 14977                           ; Regs used in _isspace: [wreg+status,2+status,0]
 14978  1A1B  01F4               	clrf	_isspace$1073
 14979  1A1C  0AF4               	incf	_isspace$1073,f
 14980  1A1D  3020               	movlw	32
 14981  1A1E  0670               	xorwf	isspace@c,w
 14982  1A1F  0471               	iorwf	isspace@c+1,w
 14983  1A20  1903               	btfsc	3,2
 14984  1A21  2A2F               	goto	l4061
 14985  1A22  0870               	movf	isspace@c,w
 14986  1A23  3EF7               	addlw	247
 14987  1A24  00F2               	movwf	??_isspace
 14988  1A25  30FF               	movlw	255
 14989  1A26  3D71               	addwfc	isspace@c+1,w
 14990  1A27  00F3               	movwf	??_isspace+1
 14991  1A28  3000               	movlw	0
 14992  1A29  0273               	subwf	??_isspace+1,w
 14993  1A2A  3005               	movlw	5
 14994  1A2B  1903               	skipnz
 14995  1A2C  0272               	subwf	??_isspace,w
 14996  1A2D  1803               	btfsc	3,0
 14997  1A2E  01F4               	clrf	_isspace$1073
 14998  1A2F                     l4061:
 14999  1A2F  0874               	movf	_isspace$1073,w
 15000  1A30  00F2               	movwf	??_isspace
 15001  1A31  01F3               	clrf	??_isspace+1
 15002  1A32  0872               	movf	??_isspace,w
 15003  1A33  00F0               	movwf	?_isspace
 15004  1A34  0873               	movf	??_isspace+1,w
 15005  1A35  00F1               	movwf	?_isspace+1
 15006  1A36  0008               	return
 15007  1A37                     __end_of_isspace:
 15008                           
 15009                           	psect	text44
 15010  1940                     __ptext44:	
 15011 ;; *************** function _isdigit *****************
 15012 ;; Defined at:
 15013 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
 15014 ;; Parameters:    Size  Location     Type
 15015 ;;  c               2    0[COMMON] int 
 15016 ;; Auto vars:     Size  Location     Type
 15017 ;;		None
 15018 ;; Return value:  Size  Location     Type
 15019 ;;                  2    0[COMMON] int 
 15020 ;; Registers used:
 15021 ;;		wreg, status,2, status,0
 15022 ;; Tracked objects:
 15023 ;;		On entry : 0/0
 15024 ;;		On exit  : 0/0
 15025 ;;		Unchanged: 0/0
 15026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15027 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15029 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15030 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15031 ;;Total ram usage:        6 bytes
 15032 ;; Hardware stack levels used: 1
 15033 ;; This function calls:
 15034 ;;		Nothing
 15035 ;; This function is called by:
 15036 ;;		_vfpfcnvrt
 15037 ;;		_atoi
 15038 ;; This function uses a non-reentrant model
 15039 ;;
 15040                           
 15041                           
 15042                           ;psect for function _isdigit
 15043  1940                     _isdigit:
 15044                           
 15045                           ;incstack = 0
 15046                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 15047  1940  0870               	movf	isdigit@c,w
 15048  1941  3ED0               	addlw	208
 15049  1942  00F2               	movwf	??_isdigit
 15050  1943  30FF               	movlw	255
 15051  1944  3D71               	addwfc	isdigit@c+1,w
 15052  1945  00F3               	movwf	??_isdigit+1
 15053  1946  3000               	movlw	0
 15054  1947  0273               	subwf	??_isdigit+1,w
 15055  1948  300A               	movlw	10
 15056  1949  1903               	skipnz
 15057  194A  0272               	subwf	??_isdigit,w
 15058  194B  1803               	btfsc	3,0
 15059  194C  294F               	goto	u5840
 15060  194D  3001               	movlw	1
 15061  194E  2950               	goto	u5850
 15062  194F                     u5840:
 15063  194F  3000               	movlw	0
 15064  1950                     u5850:
 15065  1950  00F4               	movwf	??_isdigit+2
 15066  1951  01F5               	clrf	??_isdigit+3
 15067  1952  0874               	movf	??_isdigit+2,w
 15068  1953  00F0               	movwf	?_isdigit
 15069  1954  0875               	movf	??_isdigit+3,w
 15070  1955  00F1               	movwf	?_isdigit+1
 15071  1956  0008               	return
 15072  1957                     __end_of_isdigit:
 15073                           
 15074                           	psect	text45
 15075  1A00                     __ptext45:	
 15076 ;; *************** function ___wmul *****************
 15077 ;; Defined at:
 15078 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 15079 ;; Parameters:    Size  Location     Type
 15080 ;;  multiplier      2    0[COMMON] unsigned int 
 15081 ;;  multiplicand    2    2[COMMON] unsigned int 
 15082 ;; Auto vars:     Size  Location     Type
 15083 ;;  product         2    4[COMMON] unsigned int 
 15084 ;; Return value:  Size  Location     Type
 15085 ;;                  2    0[COMMON] unsigned int 
 15086 ;; Registers used:
 15087 ;;		wreg, status,2, status,0
 15088 ;; Tracked objects:
 15089 ;;		On entry : 0/0
 15090 ;;		On exit  : 0/0
 15091 ;;		Unchanged: 0/0
 15092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15093 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15094 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15096 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15097 ;;Total ram usage:        6 bytes
 15098 ;; Hardware stack levels used: 1
 15099 ;; This function calls:
 15100 ;;		Nothing
 15101 ;; This function is called by:
 15102 ;;		_atoi
 15103 ;;		_sensorPlaca
 15104 ;; This function uses a non-reentrant model
 15105 ;;
 15106                           
 15107                           
 15108                           ;psect for function ___wmul
 15109  1A00                     ___wmul:
 15110                           
 15111                           ;incstack = 0
 15112                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 15113  1A00  01F4               	clrf	___wmul@product
 15114  1A01  01F5               	clrf	___wmul@product+1
 15115  1A02                     l3419:
 15116  1A02  1C70               	btfss	___wmul@multiplier,0
 15117  1A03  2A08               	goto	l407
 15118  1A04  0872               	movf	___wmul@multiplicand,w
 15119  1A05  07F4               	addwf	___wmul@product,f
 15120  1A06  0873               	movf	___wmul@multiplicand+1,w
 15121  1A07  3DF5               	addwfc	___wmul@product+1,f
 15122  1A08                     l407:
 15123  1A08  3001               	movlw	1
 15124  1A09                     u4345:
 15125  1A09  35F2               	lslf	___wmul@multiplicand,f
 15126  1A0A  0DF3               	rlf	___wmul@multiplicand+1,f
 15127  1A0B  0B89               	decfsz	9,f
 15128  1A0C  2A09               	goto	u4345
 15129  1A0D  3001               	movlw	1
 15130  1A0E                     u4355:
 15131  1A0E  36F1               	lsrf	___wmul@multiplier+1,f
 15132  1A0F  0CF0               	rrf	___wmul@multiplier,f
 15133  1A10  0B89               	decfsz	9,f
 15134  1A11  2A0E               	goto	u4355
 15135  1A12  0870               	movf	___wmul@multiplier,w
 15136  1A13  0471               	iorwf	___wmul@multiplier+1,w
 15137  1A14  1D03               	btfss	3,2
 15138  1A15  2A02               	goto	l3419
 15139  1A16  0875               	movf	___wmul@product+1,w
 15140  1A17  00F1               	movwf	?___wmul+1
 15141  1A18  0874               	movf	___wmul@product,w
 15142  1A19  00F0               	movwf	?___wmul
 15143  1A1A  0008               	return
 15144  1A1B                     __end_of___wmul:
 15145                           
 15146                           	psect	text46
 15147  192A                     __ptext46:	
 15148 ;; *************** function _port_init *****************
 15149 ;; Defined at:
 15150 ;;		line 90 in file "Main.c"
 15151 ;; Parameters:    Size  Location     Type
 15152 ;;		None
 15153 ;; Auto vars:     Size  Location     Type
 15154 ;;		None
 15155 ;; Return value:  Size  Location     Type
 15156 ;;                  1    wreg      void 
 15157 ;; Registers used:
 15158 ;;		wreg, status,2
 15159 ;; Tracked objects:
 15160 ;;		On entry : 0/0
 15161 ;;		On exit  : 0/0
 15162 ;;		Unchanged: 0/0
 15163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15168 ;;Total ram usage:        0 bytes
 15169 ;; Hardware stack levels used: 1
 15170 ;; This function calls:
 15171 ;;		Nothing
 15172 ;; This function is called by:
 15173 ;;		_main
 15174 ;; This function uses a non-reentrant model
 15175 ;;
 15176                           
 15177                           
 15178                           ;psect for function _port_init
 15179  192A                     _port_init:
 15180                           
 15181                           ;Main.c: 92:     ANSELA = 0;
 15182                           
 15183                           ;incstack = 0
 15184                           ; Regs used in _port_init: [wreg+status,2]
 15185  192A  003E               	movlb	30	; select bank30
 15186  192B  01B8               	clrf	56	;volatile
 15187                           
 15188                           ;Main.c: 93:     LATA=0;
 15189  192C  0020               	movlb	0	; select bank0
 15190  192D  0196               	clrf	22	;volatile
 15191                           
 15192                           ;Main.c: 94:     PORTA =0;
 15193  192E  018C               	clrf	12	;volatile
 15194                           
 15195                           ;Main.c: 95:     TRISA = 0b11110000;
 15196  192F  30F0               	movlw	240
 15197  1930  0091               	movwf	17	;volatile
 15198                           
 15199                           ;Main.c: 98:     ANSELA = ANSELA | (1<<4);
 15200  1931  003E               	movlb	30	; select bank30
 15201  1932  0838               	movf	56,w	;volatile
 15202  1933  3810               	iorlw	16
 15203  1934  00B8               	movwf	56	;volatile
 15204                           
 15205                           ;Main.c: 100:     LATB=0;
 15206  1935  0020               	movlb	0	; select bank0
 15207  1936  0197               	clrf	23	;volatile
 15208                           
 15209                           ;Main.c: 101:     PORTB =0;
 15210  1937  018D               	clrf	13	;volatile
 15211                           
 15212                           ;Main.c: 102:     TRISB = TRISA | (1<<0);
 15213  1938  0811               	movf	17,w	;volatile
 15214  1939  3801               	iorlw	1
 15215  193A  0092               	movwf	18	;volatile
 15216                           
 15217                           ;Main.c: 103:     ANSELB = ANSELB | (1<<0);
 15218  193B  003E               	movlb	30	; select bank30
 15219  193C  0843               	movf	67,w	;volatile
 15220  193D  3801               	iorlw	1
 15221  193E  00C3               	movwf	67	;volatile
 15222  193F  0008               	return
 15223  1940                     __end_of_port_init:
 15224                           
 15225                           	psect	text47
 15226  19E6                     __ptext47:	
 15227 ;; *************** function _adc_init *****************
 15228 ;; Defined at:
 15229 ;;		line 3 in file "adc.c"
 15230 ;; Parameters:    Size  Location     Type
 15231 ;;		None
 15232 ;; Auto vars:     Size  Location     Type
 15233 ;;		None
 15234 ;; Return value:  Size  Location     Type
 15235 ;;                  1    wreg      void 
 15236 ;; Registers used:
 15237 ;;		wreg, status,2
 15238 ;; Tracked objects:
 15239 ;;		On entry : 0/0
 15240 ;;		On exit  : 0/0
 15241 ;;		Unchanged: 0/0
 15242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15247 ;;Total ram usage:        0 bytes
 15248 ;; Hardware stack levels used: 1
 15249 ;; This function calls:
 15250 ;;		Nothing
 15251 ;; This function is called by:
 15252 ;;		_main
 15253 ;; This function uses a non-reentrant model
 15254 ;;
 15255                           
 15256                           
 15257                           ;psect for function _adc_init
 15258  19E6                     _adc_init:
 15259                           
 15260                           ;adc.c: 4:     ADCON0 = ADCON0 & ~(1<<7 | 1<<4 );
 15261                           
 15262                           ;incstack = 0
 15263                           ; Regs used in _adc_init: [wreg+status,2]
 15264  19E6  0021               	movlb	1	; select bank1
 15265  19E7  0813               	movf	19,w	;volatile
 15266  19E8  396F               	andlw	111
 15267  19E9  0093               	movwf	19	;volatile
 15268                           
 15269                           ;adc.c: 5:     ADCON0 = ADCON0 |(1<<2);
 15270  19EA  0813               	movf	19,w	;volatile
 15271  19EB  3804               	iorlw	4
 15272  19EC  0093               	movwf	19	;volatile
 15273                           
 15274                           ;adc.c: 6:     ADCON1 = ADCON1 |(1<<7);
 15275  19ED  0814               	movf	20,w	;volatile
 15276  19EE  3880               	iorlw	128
 15277  19EF  0094               	movwf	20	;volatile
 15278                           
 15279                           ;adc.c: 7:     ADCON2 = ADCON2 & ~(7<<0 );
 15280  19F0  0815               	movf	21,w	;volatile
 15281  19F1  39F8               	andlw	248
 15282  19F2  0095               	movwf	21	;volatile
 15283                           
 15284                           ;adc.c: 17:     ADCLK = ADCLK |(16<<0);
 15285  19F3  0818               	movf	24,w	;volatile
 15286  19F4  3810               	iorlw	16
 15287  19F5  0098               	movwf	24	;volatile
 15288                           
 15289                           ;adc.c: 19:     ADREF = ADREF & ~(1<<4 );
 15290  19F6  081A               	movf	26,w	;volatile
 15291  19F7  39EF               	andlw	239
 15292  19F8  009A               	movwf	26	;volatile
 15293                           
 15294                           ;adc.c: 20:     ADREF = ADREF & ~(3<<0 );
 15295  19F9  081A               	movf	26,w	;volatile
 15296  19FA  39FC               	andlw	252
 15297  19FB  009A               	movwf	26	;volatile
 15298                           
 15299                           ;adc.c: 23:     ADPCH = 4;
 15300  19FC  3004               	movlw	4
 15301  19FD  009E               	movwf	30	;volatile
 15302                           
 15303                           ;adc.c: 24:     ADCAP = 0;
 15304  19FE  019B               	clrf	27	;volatile
 15305  19FF  0008               	return
 15306  1A00                     __end_of_adc_init:
 15307                           
 15308                           	psect	text48
 15309  18E6                     __ptext48:	
 15310 ;; *************** function _MLX90614_ReadTemp *****************
 15311 ;; Defined at:
 15312 ;;		line 33 in file "MLX90614.c"
 15313 ;; Parameters:    Size  Location     Type
 15314 ;;  Temp_Source     1    wreg     unsigned char 
 15315 ;; Auto vars:     Size  Location     Type
 15316 ;;  Temp_Source     1   11[COMMON] unsigned char 
 15317 ;; Return value:  Size  Location     Type
 15318 ;;                  2    9[COMMON] unsigned short 
 15319 ;; Registers used:
 15320 ;;		wreg, status,2, status,0, pclath, cstack
 15321 ;; Tracked objects:
 15322 ;;		On entry : 0/0
 15323 ;;		On exit  : 0/0
 15324 ;;		Unchanged: 0/0
 15325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15326 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15327 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15329 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15330 ;;Total ram usage:        3 bytes
 15331 ;; Hardware stack levels used: 1
 15332 ;; Hardware stack levels required when called: 3
 15333 ;; This function calls:
 15334 ;;		_MLX90614_ReadReg
 15335 ;; This function is called by:
 15336 ;;		_main
 15337 ;; This function uses a non-reentrant model
 15338 ;;
 15339                           
 15340                           
 15341                           ;psect for function _MLX90614_ReadTemp
 15342  18E6                     _MLX90614_ReadTemp:
 15343                           
 15344                           ;incstack = 0
 15345                           ; Regs used in _MLX90614_ReadTemp: [wreg+status,2+status,0+pclath+cstack]
 15346                           ;MLX90614_ReadTemp@Temp_Source stored from wreg
 15347  18E6  00FB               	movwf	MLX90614_ReadTemp@Temp_Source
 15348                           
 15349                           ;MLX90614.c: 34:     return (MLX90614_ReadReg(Temp_Source));
 15350  18E7  087B               	movf	MLX90614_ReadTemp@Temp_Source,w
 15351  18E8  319A  22D3         	fcall	_MLX90614_ReadReg
 15352  18EA  0872               	movf	?_MLX90614_ReadReg+1,w
 15353  18EB  00FA               	movwf	?_MLX90614_ReadTemp+1
 15354  18EC  0871               	movf	?_MLX90614_ReadReg,w
 15355  18ED  00F9               	movwf	?_MLX90614_ReadTemp
 15356  18EE  0008               	return
 15357  18EF                     __end_of_MLX90614_ReadTemp:
 15358                           
 15359                           	psect	text49
 15360  1AD3                     __ptext49:	
 15361 ;; *************** function _MLX90614_ReadReg *****************
 15362 ;; Defined at:
 15363 ;;		line 20 in file "MLX90614.c"
 15364 ;; Parameters:    Size  Location     Type
 15365 ;;  reg             1    wreg     unsigned char 
 15366 ;; Auto vars:     Size  Location     Type
 15367 ;;  reg             1    6[COMMON] unsigned char 
 15368 ;;  valReg          2    7[COMMON] unsigned short 
 15369 ;; Return value:  Size  Location     Type
 15370 ;;                  2    1[COMMON] unsigned short 
 15371 ;; Registers used:
 15372 ;;		wreg, status,2, status,0, pclath, cstack
 15373 ;; Tracked objects:
 15374 ;;		On entry : 0/0
 15375 ;;		On exit  : 0/0
 15376 ;;		Unchanged: 0/0
 15377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15378 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15379 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15380 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15381 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15382 ;;Total ram usage:        8 bytes
 15383 ;; Hardware stack levels used: 1
 15384 ;; Hardware stack levels required when called: 2
 15385 ;; This function calls:
 15386 ;;		_I2C_read
 15387 ;;		_I2C_restart
 15388 ;;		_I2C_start
 15389 ;;		_I2C_stop
 15390 ;;		_I2C_write
 15391 ;; This function is called by:
 15392 ;;		_MLX90614_ReadTemp
 15393 ;;		_readEmissivity
 15394 ;; This function uses a non-reentrant model
 15395 ;;
 15396                           
 15397                           
 15398                           ;psect for function _MLX90614_ReadReg
 15399  1AD3                     _MLX90614_ReadReg:
 15400                           
 15401                           ;incstack = 0
 15402                           ; Regs used in _MLX90614_ReadReg: [wreg+status,2+status,0+pclath+cstack]
 15403                           ;MLX90614_ReadReg@reg stored from wreg
 15404  1AD3  00F6               	movwf	MLX90614_ReadReg@reg
 15405                           
 15406                           ;MLX90614.c: 21:     uint16_t valReg;;MLX90614.c: 22:     I2C_start();
 15407  1AD4  3198  20BF  319A   	fcall	_I2C_start
 15408                           
 15409                           ;MLX90614.c: 23:     I2C_write(0x5A << 1);
 15410  1AD7  30B4               	movlw	180
 15411  1AD8  3199  2106  319A   	fcall	_I2C_write
 15412                           
 15413                           ;MLX90614.c: 24:     I2C_write(reg);
 15414  1ADB  0876               	movf	MLX90614_ReadReg@reg,w
 15415  1ADC  3199  2106  319A   	fcall	_I2C_write
 15416                           
 15417                           ;MLX90614.c: 25:     I2C_restart();
 15418  1ADF  3198  20BA  319A   	fcall	_I2C_restart
 15419                           
 15420                           ;MLX90614.c: 26:     I2C_write(0x5A << 1);
 15421  1AE2  30B4               	movlw	180
 15422  1AE3  3199  2106  319A   	fcall	_I2C_write
 15423                           
 15424                           ;MLX90614.c: 27:     valReg = I2C_read(0);
 15425  1AE6  3000               	movlw	0
 15426  1AE7  3199  2116  319A   	fcall	_I2C_read
 15427  1AEA  00F3               	movwf	??_MLX90614_ReadReg
 15428  1AEB  01F4               	clrf	??_MLX90614_ReadReg+1
 15429  1AEC  0873               	movf	??_MLX90614_ReadReg,w
 15430  1AED  00F7               	movwf	MLX90614_ReadReg@valReg
 15431  1AEE  0874               	movf	??_MLX90614_ReadReg+1,w
 15432  1AEF  00F8               	movwf	MLX90614_ReadReg@valReg+1
 15433                           
 15434                           ;MLX90614.c: 28:     valReg = (I2C_read(0) << 8) + valReg;
 15435  1AF0  3000               	movlw	0
 15436  1AF1  3199  2116  319A   	fcall	_I2C_read
 15437  1AF4  00F3               	movwf	??_MLX90614_ReadReg
 15438  1AF5  01F4               	clrf	??_MLX90614_ReadReg+1
 15439  1AF6  0873               	movf	??_MLX90614_ReadReg,w
 15440  1AF7  00F4               	movwf	??_MLX90614_ReadReg+1
 15441  1AF8  01F3               	clrf	??_MLX90614_ReadReg
 15442  1AF9  0877               	movf	MLX90614_ReadReg@valReg,w
 15443  1AFA  0773               	addwf	??_MLX90614_ReadReg,w
 15444  1AFB  00F7               	movwf	MLX90614_ReadReg@valReg
 15445  1AFC  0878               	movf	MLX90614_ReadReg@valReg+1,w
 15446  1AFD  3D74               	addwfc	??_MLX90614_ReadReg+1,w
 15447  1AFE  00F8               	movwf	MLX90614_ReadReg@valReg+1
 15448                           
 15449                           ;MLX90614.c: 29:     I2C_stop();
 15450  1AFF  3198  20C4         	fcall	_I2C_stop
 15451                           
 15452                           ;MLX90614.c: 30:     return valReg;
 15453  1B01  0878               	movf	MLX90614_ReadReg@valReg+1,w
 15454  1B02  00F2               	movwf	?_MLX90614_ReadReg+1
 15455  1B03  0877               	movf	MLX90614_ReadReg@valReg,w
 15456  1B04  00F1               	movwf	?_MLX90614_ReadReg
 15457  1B05  0008               	return
 15458  1B06                     __end_of_MLX90614_ReadReg:
 15459                           
 15460                           	psect	text50
 15461  1906                     __ptext50:	
 15462 ;; *************** function _I2C_write *****************
 15463 ;; Defined at:
 15464 ;;		line 75 in file "I2C.c"
 15465 ;; Parameters:    Size  Location     Type
 15466 ;;  I2C_data        1    wreg     unsigned char 
 15467 ;; Auto vars:     Size  Location     Type
 15468 ;;  I2C_data        1    0[COMMON] unsigned char 
 15469 ;; Return value:  Size  Location     Type
 15470 ;;                  1    wreg      _Bool 
 15471 ;; Registers used:
 15472 ;;		wreg
 15473 ;; Tracked objects:
 15474 ;;		On entry : 0/0
 15475 ;;		On exit  : 0/0
 15476 ;;		Unchanged: 0/0
 15477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15479 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15481 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15482 ;;Total ram usage:        1 bytes
 15483 ;; Hardware stack levels used: 1
 15484 ;; This function calls:
 15485 ;;		Nothing
 15486 ;; This function is called by:
 15487 ;;		_MLX90614_ReadReg
 15488 ;;		_MLX90614_WriteReg
 15489 ;;		_sensorPlaca
 15490 ;;		_MLX90614_init
 15491 ;; This function uses a non-reentrant model
 15492 ;;
 15493                           
 15494                           
 15495                           ;psect for function _I2C_write
 15496  1906                     _I2C_write:
 15497                           
 15498                           ;incstack = 0
 15499                           ; Regs used in _I2C_write: [wreg]
 15500                           ;I2C_write@I2C_data stored from wreg
 15501  1906  00F0               	movwf	I2C_write@I2C_data
 15502                           
 15503                           ;I2C.c: 75: _Bool I2C_write(uint8_t I2C_data);I2C.c: 76: {;I2C.c: 77:     PIR3bits.SSP1I
      +                          F = 0;
 15504  1907  002E               	movlb	14	; select bank14
 15505  1908  100F               	bcf	15,0	;volatile
 15506                           
 15507                           ;I2C.c: 78:     SSP1BUF = I2C_data;
 15508  1909  0870               	movf	I2C_write@I2C_data,w
 15509  190A  0023               	movlb	3	; select bank3
 15510  190B  008C               	movwf	12	;volatile
 15511  190C                     l220:	
 15512                           ;I2C.c: 79:     while(PIR3bits.SSP1IF == 0);
 15513                           
 15514  190C  002E               	movlb	14	; select bank14
 15515  190D  1C0F               	btfss	15,0	;volatile
 15516  190E  290C               	goto	l220
 15517                           
 15518                           ;I2C.c: 80:     if(SSP1CON2bits.ACKSTAT==0)
 15519  190F  0023               	movlb	3	; select bank3
 15520  1910  1B11               	btfsc	17,6	;volatile
 15521  1911  2914               	goto	l4575
 15522                           
 15523                           ;I2C.c: 81:         return 1;
 15524  1912  3001               	movlw	1
 15525  1913  0008               	return
 15526  1914                     l4575:
 15527                           
 15528                           ;I2C.c: 83:         return 0;
 15529  1914  3000               	movlw	0
 15530  1915  0008               	return
 15531  1916                     __end_of_I2C_write:
 15532                           
 15533                           	psect	text51
 15534  18C4                     __ptext51:	
 15535 ;; *************** function _I2C_stop *****************
 15536 ;; Defined at:
 15537 ;;		line 33 in file "I2C.c"
 15538 ;; Parameters:    Size  Location     Type
 15539 ;;		None
 15540 ;; Auto vars:     Size  Location     Type
 15541 ;;		None
 15542 ;; Return value:  Size  Location     Type
 15543 ;;                  1    wreg      void 
 15544 ;; Registers used:
 15545 ;;		None
 15546 ;; Tracked objects:
 15547 ;;		On entry : 0/0
 15548 ;;		On exit  : 0/0
 15549 ;;		Unchanged: 0/0
 15550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15555 ;;Total ram usage:        0 bytes
 15556 ;; Hardware stack levels used: 1
 15557 ;; This function calls:
 15558 ;;		Nothing
 15559 ;; This function is called by:
 15560 ;;		_MLX90614_ReadReg
 15561 ;;		_MLX90614_WriteReg
 15562 ;;		_sensorPlaca
 15563 ;;		_MLX90614_init
 15564 ;; This function uses a non-reentrant model
 15565 ;;
 15566                           
 15567                           
 15568                           ;psect for function _I2C_stop
 15569  18C4                     _I2C_stop:
 15570                           
 15571                           ;I2C.c: 35:     SSP1CON2bits.PEN = 1;
 15572                           
 15573                           ;incstack = 0
 15574                           ; Regs used in _I2C_stop: []
 15575  18C4  0023               	movlb	3	; select bank3
 15576  18C5  1511               	bsf	17,2	;volatile
 15577  18C6                     l194:	
 15578                           ;I2C.c: 36:     while(SSP1CON2bits.PEN == 1);
 15579                           
 15580  18C6  1D11               	btfss	17,2	;volatile
 15581  18C7  0008               	return
 15582  18C8  28C6               	goto	l194
 15583  18C9                     __end_of_I2C_stop:
 15584                           
 15585                           	psect	text52
 15586  18BF                     __ptext52:	
 15587 ;; *************** function _I2C_start *****************
 15588 ;; Defined at:
 15589 ;;		line 21 in file "I2C.c"
 15590 ;; Parameters:    Size  Location     Type
 15591 ;;		None
 15592 ;; Auto vars:     Size  Location     Type
 15593 ;;		None
 15594 ;; Return value:  Size  Location     Type
 15595 ;;                  1    wreg      void 
 15596 ;; Registers used:
 15597 ;;		None
 15598 ;; Tracked objects:
 15599 ;;		On entry : 0/0
 15600 ;;		On exit  : 0/0
 15601 ;;		Unchanged: 0/0
 15602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15607 ;;Total ram usage:        0 bytes
 15608 ;; Hardware stack levels used: 1
 15609 ;; This function calls:
 15610 ;;		Nothing
 15611 ;; This function is called by:
 15612 ;;		_MLX90614_ReadReg
 15613 ;;		_MLX90614_WriteReg
 15614 ;;		_sensorPlaca
 15615 ;;		_MLX90614_init
 15616 ;; This function uses a non-reentrant model
 15617 ;;
 15618                           
 15619                           
 15620                           ;psect for function _I2C_start
 15621  18BF                     _I2C_start:
 15622                           
 15623                           ;I2C.c: 23:     SSP1CON2bits.SEN = 1;
 15624                           
 15625                           ;incstack = 0
 15626                           ; Regs used in _I2C_start: []
 15627  18BF  0023               	movlb	3	; select bank3
 15628  18C0  1411               	bsf	17,0	;volatile
 15629  18C1                     l182:	
 15630                           ;I2C.c: 24:     while(SSP1CON2bits.SEN == 1);
 15631                           
 15632  18C1  1C11               	btfss	17,0	;volatile
 15633  18C2  0008               	return
 15634  18C3  28C1               	goto	l182
 15635  18C4                     __end_of_I2C_start:
 15636                           
 15637                           	psect	text53
 15638  18BA                     __ptext53:	
 15639 ;; *************** function _I2C_restart *****************
 15640 ;; Defined at:
 15641 ;;		line 27 in file "I2C.c"
 15642 ;; Parameters:    Size  Location     Type
 15643 ;;		None
 15644 ;; Auto vars:     Size  Location     Type
 15645 ;;		None
 15646 ;; Return value:  Size  Location     Type
 15647 ;;                  1    wreg      void 
 15648 ;; Registers used:
 15649 ;;		None
 15650 ;; Tracked objects:
 15651 ;;		On entry : 0/0
 15652 ;;		On exit  : 0/0
 15653 ;;		Unchanged: 0/0
 15654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15659 ;;Total ram usage:        0 bytes
 15660 ;; Hardware stack levels used: 1
 15661 ;; This function calls:
 15662 ;;		Nothing
 15663 ;; This function is called by:
 15664 ;;		_MLX90614_ReadReg
 15665 ;;		_MLX90614_WriteReg
 15666 ;;		_sensorPlaca
 15667 ;; This function uses a non-reentrant model
 15668 ;;
 15669                           
 15670                           
 15671                           ;psect for function _I2C_restart
 15672  18BA                     _I2C_restart:
 15673                           
 15674                           ;I2C.c: 29:     SSP1CON2bits.RSEN = 1;
 15675                           
 15676                           ;incstack = 0
 15677                           ; Regs used in _I2C_restart: []
 15678  18BA  0023               	movlb	3	; select bank3
 15679  18BB  1491               	bsf	17,1	;volatile
 15680  18BC                     l188:	
 15681                           ;I2C.c: 30:     while(SSP1CON2bits.RSEN == 1);
 15682                           
 15683  18BC  1C91               	btfss	17,1	;volatile
 15684  18BD  0008               	return
 15685  18BE  28BC               	goto	l188
 15686  18BF                     __end_of_I2C_restart:
 15687                           
 15688                           	psect	text54
 15689  1916                     __ptext54:	
 15690 ;; *************** function _I2C_read *****************
 15691 ;; Defined at:
 15692 ;;		line 46 in file "I2C.c"
 15693 ;; Parameters:    Size  Location     Type
 15694 ;;  ack             1    wreg     _Bool 
 15695 ;; Auto vars:     Size  Location     Type
 15696 ;;  ack             1    0[COMMON] _Bool 
 15697 ;; Return value:  Size  Location     Type
 15698 ;;                  1    wreg      unsigned char 
 15699 ;; Registers used:
 15700 ;;		wreg, status,2, status,0, pclath, cstack
 15701 ;; Tracked objects:
 15702 ;;		On entry : 0/0
 15703 ;;		On exit  : 0/0
 15704 ;;		Unchanged: 0/0
 15705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15707 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15709 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15710 ;;Total ram usage:        1 bytes
 15711 ;; Hardware stack levels used: 1
 15712 ;; Hardware stack levels required when called: 1
 15713 ;; This function calls:
 15714 ;;		_I2C_ack
 15715 ;;		_I2C_nack
 15716 ;; This function is called by:
 15717 ;;		_MLX90614_ReadReg
 15718 ;;		_sensorPlaca
 15719 ;; This function uses a non-reentrant model
 15720 ;;
 15721                           
 15722                           
 15723                           ;psect for function _I2C_read
 15724  1916                     _I2C_read:
 15725                           
 15726                           ;incstack = 0
 15727                           ; Regs used in _I2C_read: [wreg+status,2+status,0+pclath+cstack]
 15728                           ;I2C_read@ack stored from wreg
 15729  1916  00F0               	movwf	I2C_read@ack
 15730                           
 15731                           ;I2C.c: 46: uint8_t I2C_read(_Bool ack);I2C.c: 47: {;I2C.c: 48:     PIR3bits.SSP1IF = 0;
 15732  1917  002E               	movlb	14	; select bank14
 15733  1918  100F               	bcf	15,0	;volatile
 15734                           
 15735                           ;I2C.c: 49:     SSP1CON2bits.RCEN = 1;
 15736  1919  0023               	movlb	3	; select bank3
 15737  191A  1591               	bsf	17,3	;volatile
 15738  191B                     l200:	
 15739                           ;I2C.c: 50:     while(PIR3bits.SSP1IF == 0);
 15740                           
 15741  191B  002E               	movlb	14	; select bank14
 15742  191C  1C0F               	btfss	15,0	;volatile
 15743  191D  291B               	goto	l200
 15744                           
 15745                           ;I2C.c: 51:     if(ack){
 15746  191E  0870               	movf	I2C_read@ack,w
 15747  191F  1903               	btfsc	3,2
 15748  1920  2925               	goto	l4587
 15749                           
 15750                           ;I2C.c: 52:         I2C_ack();
 15751  1921  3198  20D4  3199   	fcall	_I2C_ack
 15752                           
 15753                           ;I2C.c: 53:     }else{
 15754  1924  2927               	goto	l4589
 15755  1925                     l4587:
 15756                           
 15757                           ;I2C.c: 54:         I2C_nack();
 15758  1925  3198  20DD         	fcall	_I2C_nack
 15759  1927                     l4589:
 15760                           
 15761                           ;I2C.c: 56:     return SSP1BUF;
 15762  1927  0023               	movlb	3	; select bank3
 15763  1928  080C               	movf	12,w	;volatile
 15764  1929  0008               	return
 15765  192A                     __end_of_I2C_read:
 15766                           
 15767                           	psect	text55
 15768  18DD                     __ptext55:	
 15769 ;; *************** function _I2C_nack *****************
 15770 ;; Defined at:
 15771 ;;		line 67 in file "I2C.c"
 15772 ;; Parameters:    Size  Location     Type
 15773 ;;		None
 15774 ;; Auto vars:     Size  Location     Type
 15775 ;;		None
 15776 ;; Return value:  Size  Location     Type
 15777 ;;                  1    wreg      void 
 15778 ;; Registers used:
 15779 ;;		None
 15780 ;; Tracked objects:
 15781 ;;		On entry : 0/0
 15782 ;;		On exit  : 0/0
 15783 ;;		Unchanged: 0/0
 15784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15789 ;;Total ram usage:        0 bytes
 15790 ;; Hardware stack levels used: 1
 15791 ;; This function calls:
 15792 ;;		Nothing
 15793 ;; This function is called by:
 15794 ;;		_I2C_read
 15795 ;; This function uses a non-reentrant model
 15796 ;;
 15797                           
 15798                           
 15799                           ;psect for function _I2C_nack
 15800  18DD                     _I2C_nack:
 15801                           
 15802                           ;I2C.c: 69:     PIR3bits.SSP1IF = 0;
 15803                           
 15804                           ;incstack = 0
 15805                           ; Regs used in _I2C_nack: []
 15806  18DD  002E               	movlb	14	; select bank14
 15807  18DE  100F               	bcf	15,0	;volatile
 15808                           
 15809                           ;I2C.c: 70:     SSP1CON2bits.ACKDT = 1;
 15810  18DF  0023               	movlb	3	; select bank3
 15811  18E0  1691               	bsf	17,5	;volatile
 15812                           
 15813                           ;I2C.c: 71:     SSP1CON2bits.ACKEN = 1;
 15814  18E1  1611               	bsf	17,4	;volatile
 15815  18E2                     l214:	
 15816                           ;I2C.c: 72:     while(PIR3bits.SSP1IF == 0);
 15817                           
 15818  18E2  002E               	movlb	14	; select bank14
 15819  18E3  180F               	btfsc	15,0	;volatile
 15820  18E4  0008               	return
 15821  18E5  28E2               	goto	l214
 15822  18E6                     __end_of_I2C_nack:
 15823                           
 15824                           	psect	text56
 15825  18D4                     __ptext56:	
 15826 ;; *************** function _I2C_ack *****************
 15827 ;; Defined at:
 15828 ;;		line 59 in file "I2C.c"
 15829 ;; Parameters:    Size  Location     Type
 15830 ;;		None
 15831 ;; Auto vars:     Size  Location     Type
 15832 ;;		None
 15833 ;; Return value:  Size  Location     Type
 15834 ;;                  1    wreg      void 
 15835 ;; Registers used:
 15836 ;;		None
 15837 ;; Tracked objects:
 15838 ;;		On entry : 0/0
 15839 ;;		On exit  : 0/0
 15840 ;;		Unchanged: 0/0
 15841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15846 ;;Total ram usage:        0 bytes
 15847 ;; Hardware stack levels used: 1
 15848 ;; This function calls:
 15849 ;;		Nothing
 15850 ;; This function is called by:
 15851 ;;		_I2C_read
 15852 ;; This function uses a non-reentrant model
 15853 ;;
 15854                           
 15855                           
 15856                           ;psect for function _I2C_ack
 15857  18D4                     _I2C_ack:
 15858                           
 15859                           ;I2C.c: 61:     PIR3bits.SSP1IF = 0;
 15860                           
 15861                           ;incstack = 0
 15862                           ; Regs used in _I2C_ack: []
 15863  18D4  002E               	movlb	14	; select bank14
 15864  18D5  100F               	bcf	15,0	;volatile
 15865                           
 15866                           ;I2C.c: 62:     SSP1CON2bits.ACKDT = 0;
 15867  18D6  0023               	movlb	3	; select bank3
 15868  18D7  1291               	bcf	17,5	;volatile
 15869                           
 15870                           ;I2C.c: 63:     SSP1CON2bits.ACKEN = 1;
 15871  18D8  1611               	bsf	17,4	;volatile
 15872  18D9                     l208:	
 15873                           ;I2C.c: 64:     while(PIR3bits.SSP1IF == 0);
 15874                           
 15875  18D9  002E               	movlb	14	; select bank14
 15876  18DA  180F               	btfsc	15,0	;volatile
 15877  18DB  0008               	return
 15878  18DC  28D9               	goto	l208
 15879  18DD                     __end_of_I2C_ack:
 15880                           
 15881                           	psect	text57
 15882  19CC                     __ptext57:	
 15883 ;; *************** function _I2C_init *****************
 15884 ;; Defined at:
 15885 ;;		line 4 in file "I2C.c"
 15886 ;; Parameters:    Size  Location     Type
 15887 ;;		None
 15888 ;; Auto vars:     Size  Location     Type
 15889 ;;		None
 15890 ;; Return value:  Size  Location     Type
 15891 ;;                  1    wreg      void 
 15892 ;; Registers used:
 15893 ;;		wreg, status,2
 15894 ;; Tracked objects:
 15895 ;;		On entry : 0/0
 15896 ;;		On exit  : 0/0
 15897 ;;		Unchanged: 0/0
 15898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15903 ;;Total ram usage:        0 bytes
 15904 ;; Hardware stack levels used: 1
 15905 ;; This function calls:
 15906 ;;		Nothing
 15907 ;; This function is called by:
 15908 ;;		_main
 15909 ;; This function uses a non-reentrant model
 15910 ;;
 15911                           
 15912                           
 15913                           ;psect for function _I2C_init
 15914  19CC                     _I2C_init:
 15915                           
 15916                           ;I2C.c: 6:     TRISCbits.TRISC3 = 1;
 15917                           
 15918                           ;incstack = 0
 15919                           ; Regs used in _I2C_init: [wreg+status,2]
 15920  19CC  0020               	movlb	0	; select bank0
 15921  19CD  1593               	bsf	19,3	;volatile
 15922                           
 15923                           ;I2C.c: 7:     TRISCbits.TRISC4 = 1;
 15924  19CE  1613               	bsf	19,4	;volatile
 15925                           
 15926                           ;I2C.c: 8:     ANSELCbits.ANSC3 = 0;
 15927  19CF  003E               	movlb	30	; select bank30
 15928  19D0  11CE               	bcf	78,3	;volatile
 15929                           
 15930                           ;I2C.c: 9:     ANSELCbits.ANSC4 = 0;
 15931  19D1  124E               	bcf	78,4	;volatile
 15932                           
 15933                           ;I2C.c: 10:     SSP1CLKPPS = 0x14;
 15934  19D2  3014               	movlw	20
 15935  19D3  003D               	movlb	29	; select bank29
 15936  19D4  00C5               	movwf	69	;volatile
 15937                           
 15938                           ;I2C.c: 11:     RC3PPS = 0x15;
 15939  19D5  3015               	movlw	21
 15940  19D6  003E               	movlb	30	; select bank30
 15941  19D7  00A3               	movwf	35	;volatile
 15942                           
 15943                           ;I2C.c: 12:     RC4PPS = 0x14;
 15944  19D8  3014               	movlw	20
 15945  19D9  00A4               	movwf	36	;volatile
 15946                           
 15947                           ;I2C.c: 13:     SSP1DATPPS = 0x13;
 15948  19DA  3013               	movlw	19
 15949  19DB  003D               	movlb	29	; select bank29
 15950  19DC  00C6               	movwf	70	;volatile
 15951                           
 15952                           ;I2C.c: 15:     SSP1STAT = 0b10000000;
 15953  19DD  3080               	movlw	128
 15954  19DE  0023               	movlb	3	; select bank3
 15955  19DF  008F               	movwf	15	;volatile
 15956                           
 15957                           ;I2C.c: 16:  SSP1CON1 = 0b00101000;
 15958  19E0  3028               	movlw	40
 15959  19E1  0090               	movwf	16	;volatile
 15960                           
 15961                           ;I2C.c: 17:  SSP1CON3 = 0x00;
 15962  19E2  0192               	clrf	18	;volatile
 15963                           
 15964                           ;I2C.c: 18:  SSP1ADD = ((32000000UL/(4UL*100000UL))-1);
 15965  19E3  304F               	movlw	79
 15966  19E4  008D               	movwf	13	;volatile
 15967  19E5  0008               	return
 15968  19E6                     __end_of_I2C_init:
 15969  007E                     btemp	set	126	;btemp
 15970  007E                     wtemp0	set	126
 15971                           
 15972                           	psect	idloc
 15973                           
 15974                           ;Config register IDLOC0 @ 0x8000
 15975                           ;	unspecified, using default values
 15976  8000                     	org	32768
 15977  8000  3FFF               	dw	16383
 15978                           
 15979                           ;Config register IDLOC1 @ 0x8001
 15980                           ;	unspecified, using default values
 15981  8001                     	org	32769
 15982  8001  3FFF               	dw	16383
 15983                           
 15984                           ;Config register IDLOC2 @ 0x8002
 15985                           ;	unspecified, using default values
 15986  8002                     	org	32770
 15987  8002  3FFF               	dw	16383
 15988                           
 15989                           ;Config register IDLOC3 @ 0x8003
 15990                           ;	unspecified, using default values
 15991  8003                     	org	32771
 15992  8003  3FFF               	dw	16383
 15993                           
 15994                           	psect	config
 15995                           
 15996                           ;Config register CONFIG1 @ 0x8007
 15997                           ;	External Oscillator mode selection bits
 15998                           ;	FEXTOSC = OFF, Oscillator not enabled
 15999                           ;	Power-up default value for COSC bits
 16000                           ;	RSTOSC = HFINT32, HFINTOSC with OSCFRQ= 32 MHz and CDIV = 1:1
 16001                           ;	Clock Out Enable bit
 16002                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 16003                           ;	Clock Switch Enable bit
 16004                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 16005                           ;	Fail-Safe Clock Monitor Enable bit
 16006                           ;	FCMEN = ON, FSCM timer enabled
 16007  8007                     	org	32775
 16008  8007  3F8C               	dw	16268
 16009                           
 16010                           ;Config register CONFIG2 @ 0x8008
 16011                           ;	Master Clear Enable bit
 16012                           ;	MCLRE = ON, MCLR pin is Master Clear function
 16013                           ;	Power-up Timer Enable bit
 16014                           ;	PWRTE = OFF, PWRT disabled
 16015                           ;	Low-Power BOR enable bit
 16016                           ;	LPBOREN = OFF, ULPBOR disabled
 16017                           ;	Brown-out reset enable bits
 16018                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 16019                           ;	Brown-out Reset Voltage Selection
 16020                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 16021                           ;	Zero-cross detect disable
 16022                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 16023                           ;	Peripheral Pin Select one-way control
 16024                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 16025                           ;	Stack Overflow/Underflow Reset Enable bit
 16026                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 16027                           ;	Background Debugger
 16028                           ;	DEBUG = 0x1, unprogrammed default
 16029  8008                     	org	32776
 16030  8008  3FFF               	dw	16383
 16031                           
 16032                           ;Config register CONFIG3 @ 0x8009
 16033                           ;	WDT Period Select bits
 16034                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 16035                           ;	WDT operating mode
 16036                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 16037                           ;	WDT Window Select bits
 16038                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 16039                           ;	WDT input clock selector
 16040                           ;	WDTCCS = SC, Software Control
 16041  8009                     	org	32777
 16042  8009  3F9F               	dw	16287
 16043                           
 16044                           ;Config register CONFIG4 @ 0x800A
 16045                           ;	UserNVM self-write protection bits
 16046                           ;	WRT = OFF, Write protection off
 16047                           ;	Scanner Enable bit
 16048                           ;	SCANE = available, Scanner module is available for use
 16049                           ;	Low Voltage Programming Enable bit
 16050                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 16051  800A                     	org	32778
 16052  800A  3FFF               	dw	16383
 16053                           
 16054                           ;Config register CONFIG5 @ 0x800B
 16055                           ;	UserNVM Program memory code protection bit
 16056                           ;	CP = OFF, Program Memory code protection disabled
 16057                           ;	DataNVM code protection bit
 16058                           ;	CPD = OFF, Data EEPROM code protection disabled
 16059  800B                     	org	32779
 16060  800B  3FFF               	dw	16383

Data Sizes:
    Strings     108
    Constant    0
    Data        0
    BSS         98
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     76      80
    BANK2            80     47      61
    BANK3            80      0      80
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK2[3]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK2[3]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S813_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_4(CODE[29]), STR_3(CODE[23]), STR_2(CODE[21]), STR_1(CODE[16]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_4(CODE[29]), STR_3(CODE[23]), STR_2(CODE[21]), STR_1(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 29
		 -> STR_4(CODE[29]), STR_3(CODE[23]), STR_2(CODE[21]), STR_1(CODE[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    xtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_4(CODE[29]), STR_3(CODE[23]), STR_2(CODE[21]), STR_1(CODE[16]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK2[2]), 


Critical Paths under _main in COMMON

    _main->___fltol
    _writeEmissivity->___fltol
    _MLX90614_WriteReg->_I2C_write
    _serial_init->___lldiv
    _readEmissivity->___fldiv
    ___xxtofl->_MLX90614_ReadTemp
    _vfpfcnvrt->_tolower
    _xtoa->_toupper
    _toupper->_islower
    _efgtoa->___fltol
    _efgtoa->_tolower
    _tolower->_isupper
    _floorf->___fldiv
    ___fltol->_MLX90614_ReadTemp
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_uart_tx
    _abs->___aomod
    _atoi->___wmul
    _atoi->_isdigit
    _MLX90614_ReadTemp->_MLX90614_ReadReg
    _MLX90614_ReadReg->_I2C_read
    _MLX90614_ReadReg->_I2C_write

Critical Paths under _main in BANK0

    _main->_printf
    _writeEmissivity->___fltol
    _readEmissivity->___xxtofl
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _xtoa->_pad
    _efgtoa->___flsub
    _floorf->___fldiv
    ___fltol->___flmul
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _main in BANK1

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK2

    _main->_printf
    _vfprintf->_vfpfcnvrt

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0   56385
                                             72 BANK1      4     4      0
                                             41 BANK2      6     6      0
                           _I2C_init
                  _MLX90614_ReadTemp
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _adc_init
                          _port_init
                             _printf
                     _readEmissivity
                        _serial_init
                    _writeEmissivity
 ---------------------------------------------------------------------------------
 (1) _writeEmissivity                                      7     3      4    4679
                                             49 BANK0      7     3      4
                  _MLX90614_WriteReg
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) _MLX90614_WriteReg                                    3     1      2     240
                                              1 COMMON     3     1      2
                        _I2C_restart
                          _I2C_start
                           _I2C_stop
                          _I2C_write
 ---------------------------------------------------------------------------------
 (1) _serial_init                                         10     6      4     457
                                              0 BANK0     10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _readEmissivity                                      12     8      4    2794
                                             14 BANK0     12     8      4
                   _MLX90614_ReadReg
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     626
                                              0 BANK0     14    10      4
                   _MLX90614_ReadReg (ARG)
                  _MLX90614_ReadTemp (ARG)
 ---------------------------------------------------------------------------------
 (1) _printf                                              14     4     10   40625
                                             79 BANK0      1     1      0
                                             71 BANK1      1     1      0
                                             31 BANK2     10     0     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3   40255
                                             63 BANK1      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           47    45      2   39892
                                             77 BANK0      2     0      2
                                             57 BANK1      6     6      0
                                              0 BANK2     31    31      0
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                38    29      9    5226
                                             15 BANK0     38    29      9
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     412
                                              6 COMMON     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              8     6      2     161
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     5      4     410
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              66    61      5   23563
                                             68 BANK0      9     4      5
                                              0 BANK1     57    57      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2    1020
                                              6 COMMON     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     541
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     6      2     641
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             13 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       16    12      4     287
                                              0 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     533
                                             12 COMMON     2     2      0
                                             40 BANK0      9     5      4
                  _MLX90614_ReadTemp (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2941
                                             60 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    2592
                                             40 BANK0     20    12      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    3785
                                             14 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     942
                                             40 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    2033
                                              0 COMMON    13     5      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4941
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3318
                                             12 COMMON     1     1      0
                                              7 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1127
                                             11 COMMON     1     0      1
                                              0 BANK0      7     7      0
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3     812
                                              3 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      44
                                              2 COMMON     1     1      0
                            _uart_tx
 ---------------------------------------------------------------------------------
 (9) _uart_tx                                              2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1389
                                              6 COMMON     6     4      2
                                              0 BANK0      9     9      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     207
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     313
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _port_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MLX90614_ReadTemp                                    3     1      2     134
                                              9 COMMON     3     1      2
                   _MLX90614_ReadReg
 ---------------------------------------------------------------------------------
 (2) _MLX90614_ReadReg                                     8     6      2     112
                                              1 COMMON     8     6      2
                           _I2C_read
                        _I2C_restart
                          _I2C_start
                           _I2C_stop
                          _I2C_write
 ---------------------------------------------------------------------------------
 (3) _I2C_write                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_restart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_read                                             1     1      0      22
                                              0 COMMON     1     1      0
                            _I2C_ack
                           _I2C_nack
 ---------------------------------------------------------------------------------
 (4) _I2C_nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_init
   _MLX90614_ReadTemp
     _MLX90614_ReadReg
       _I2C_read
         _I2C_ack
         _I2C_nack
       _I2C_restart
       _I2C_start
       _I2C_stop
       _I2C_write
   ___fladd
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
         _MLX90614_ReadReg (ARG)
         _MLX90614_ReadTemp (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___fltol
     _MLX90614_ReadTemp (ARG)
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _adc_init
   _port_init
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _uart_tx
             _fputs
               _fputc
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower
         _xtoa
           _isalpha
           _isupper
           _pad
           _toupper
             _islower
   _readEmissivity
     _MLX90614_ReadReg
     ___fldiv
     ___xxtofl
   _serial_init
     ___lldiv
   _writeEmissivity
     _MLX90614_WriteReg
       _I2C_restart
       _I2C_start
       _I2C_stop
       _I2C_write
     ___flmul
     ___fltol

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4C      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     2F      3D       9       76.2%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      50      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     13B      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     13B      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Jul 23 00:42:54 2022

                ___fldiv@aexp 002C                  ___fldiv@bexp 002B                  ___fldiv@sign 0024  
                ___awdiv@sign 0076           ___wmul@multiplicand 0072            __size_of_I2C_start 0005  
         __Umul8_16@word_mpld 0076            __size_of_I2C_write 0010                           l200 191B  
                         l220 190C                           l214 18E2                           l208 18D9  
                         l182 18C1                           l407 1A08                           l520 126D  
                         l194 18C6                           l507 0102                           l188 18BC  
                         l712 0904                           l608 1E5A                           l714 08E7  
                         l708 0871                           l750 09FE                           l742 09E6  
                         l823 1A65                           l920 1D04                           l576 1C09  
                         l816 0C25                           l921 1D10                           l577 1C23  
                         l585 1F09                           l729 0987                           l930 12E7  
                         l931 12FB                           l764 16CF                           l588 1F57  
                         l917 1CE4                           l925 12C5                           l861 1FD2  
                         l934 1391                           l926 12CC                           l862 1FDC  
                         l854 1FBE                           l848 1F88                           l785 17D6  
                         l786 17EE                           l788 17FB                           l981 033D  
                         l982 032A                           l992 0377                           _abs 1957  
                         _pad 1CCC               __end_of_I2C_ack 18DD                  ___awmod@sign 0076  
                         wreg 0009                  ___flmul@aexp 0040                  ___flmul@bexp 0041  
                ___flmul@sign 003B                  ___flmul@temp 0046                  ___flmul@prod 0042  
                ___fltol@exp1 007D                          l1012 05A7                          l1007 0593  
                        ?_abs 0073                          l1044 13D9                          l1048 13F4  
                        l1154 1093                          l1069 14F7            serial_init@baudios 0020  
                        l3201 0841                          l1177 119A                          l3203 0849  
                        l4101 1303                          l3221 0866                          l3231 087B  
                        l4023 1153                          l4113 13A5                          l3305 0935  
                        l3225 0869                          l4025 1164                          l4201 0257  
                        l5011 106C                          l3163 18F9                          l3403 19A1  
                        l4123 13BD                          l3331 09A6                          l3323 0999  
                        l3315 097F                          l4211 02E2                          l4061 1A2F  
                        l3405 19AD                          l4109 139D                          l3261 08B7  
                        l4029 117D                          l4301 05AE                          l4205 0287  
                        l4213 0307                          l3175 1B42                          l4119 13B0  
                        l3271 08F1                          l4231 0344                          l4223 0337  
                        l4207 02C1                          l3441 0072                          l4081 12DF  
                        l3513 1D31                          l3345 09B8                          l3337 09AD  
                        l4313 0608                          l4225 033F                          l4145 016E  
                        l4137 015D                          l3419 1A02                          l3443 0076  
                        l3179 1B65                          l4091 1328                          l3531 1D57  
                        l3523 1D39                          l3507 1D26                          l3603 1F3D  
                        l3371 09FA                          l3339 09AF                          l3453 008D  
                        l3437 004B                          l3525 1D45                          l3701 16C7  
                        l3381 1A5F                          l3349 09BA                          l3269 08EF  
                        l3197 083E                          l4333 0626                          l4341 065A  
                        l4261 03A0                          l4149 0174                          l4157 0187  
                        l4511 1060                          l4503 104B                          l3463 00D5  
                        l3455 009C                          l4087 12F6                          l3535 1D60  
                        l3551 1BB4                          l3711 16EE                          l3367 09F6  
                        l3295 0924                          l3287 0912                          l3279 08FF  
                        l3623 1E1A                          l4415 07B3                          l4423 07D2  
                        l4335 0644                          l4271 03B2                          l4247 0384  
                        l4239 0371                          l4167 01B9                          l4175 01DE  
                        l4513 1074                          l3465 00E1                          l3297 0926  
                        l4361 0701                          l4353 06EA                          l4273 047B  
                        l4257 0398                          l4249 0388                          l4185 0211  
                        l4193 0236                          l4433 13EC                          l3475 11CD  
                        l3539 1D68                          l3563 1BC1                          l3555 1BBB  
                        l3643 1E48                          l3627 1E23                          l4283 04EF  
                        l4443 141C                          l4517 1097                          l4509 105B  
                        l3493 1240                          l3397 1008                          l3565 1BCD  
                        l3573 1BE2                          l3717 16FA                          l3901 0BA4  
                        l3821 0A2A                          l3653 1E67                          l3645 1E56  
                        l4349 06CC                          l4277 04CE                          ?_pad 0027  
                        l4527 10C6                          l3487 1201                          l3495 124C  
                        l3479 11F4                          l3743 175A                          l3911 0BBD  
                        l4391 0761                          l4551 1DA8                          l4463 1484  
                        l4447 1436                          l4471 14C6                          l4439 1404  
                        l4703 0F42                          l4615 0C8B                          l3489 1210  
                        l3577 1BEA                          l3569 1BD9                          l3761 1765  
                        l3737 1741                          l3745 1723                          l3681 16A3  
                        l3921 0BE6                          l3817 0A20                          l4377 0722  
                        l4553 1D83                          l4713 0FA1                          l4641 0D2E  
                        l4617 0C9C                          l4625 0CD0                          l3763 177C  
                        l3747 175F                          l3683 16AB                          l3931 0C12  
                        l3907 0BBB                          l3835 0A43                          l3819 0A22  
                        l4379 072A                          l4299 05A5                          l4723 0FCD  
                        l4619 0CA5                          l4811 1FAB                          l3773 1795  
                        l3677 16A0                          l3589 1C35                          l3925 0BFB  
                        l3837 0A45                          l4389 0726                          l4661 0DDE  
                        l4637 0D14                          l4821 1FC3                          l4805 1F97  
                        l4575 1914                          l4495 102F                          l3951 1CE2  
                        l3783 17BE                          l3599 1F23                          l3847 0A5B  
                        l3839 0A4D                          l4399 0779                          l4559 1DAF  
                        l4487 1515                          l4719 0FC7                          l4639 0D25  
                        l4647 0D59                          l3769 1793                          l3697 16C4  
                        l4681 0E80                          l4657 0DBC                          l4729 0FD9  
                        l4833 1FF7                          l4809 1F9B                          l4921 1549  
                        l4587 1925                          l3947 1CDA                          l4691 0EE3  
                        l4843 1B0F                          l4819 1FD0                          l4589 1927  
                        l3957 1CE6                          l3797 17F7                          l3981 1EC6  
                        l4669 0E2E                          l4845 1B30                          l4775 1DCE  
                        l3977 1EC1                          l3993 1A9C                          l4785 1DFC  
                        l4777 1DDC                          l3899 0B8D                          l3987 1EE9  
                        l4699 0F20                          l4789 1E07                          l4799 1F80  
                        STR_1 1849                          STR_2 1834                          STR_3 181D  
                        STR_4 1800                          STR_5 1859                          STR_6 1861  
                        STR_9 185D                          _LATA 0016                          _LATB 0017  
                        u4033 0947                          u4025 092A                          u4300 197E  
                        u4310 1994                          u4320 1995                          u4410 007D  
                        u4075 099A                          u6005 1317                          u5125 1768  
                        u6110 01A7                          u6015 1323                          u5215 17AC  
                        u5055 172B                          u4255 1A66                          u4175 09D1  
                        u6120 01A8                          u7000 0CC3                          u4345 1A09  
                        u5225 17C7                          u5145 1771                          u5065 1732  
                        u4290 197D                          u4355 1A0E                          u5235 17E0  
                        u4445 00C2                          u3805 1B63                          u5085 173B  
                        u5405 0B99                          u3910 08D6                          u6150 01FF  
                        u4615 1D3C                          u5095 174F                          u5335 0AD1  
                        u3920 08D7                          u6160 0200                          u7040 0D4B  
                        u4545 122E                          u5345 0B00                          u3905 08CB  
                        u7130 0EC2                          u7050 0D4C                          u3755 18FD  
                        u4635 1D46                          u4715 1BC4                          u5355 0B56  
                        u6235 0335                          u5620 1EE1                          u7140 0EC3  
                        u4645 1D50                          u5365 0B6D                          u7205 1DD1  
                        u5630 1EE2                          u5710 111A                          u5535 1CF0  
                        u4655 1D58                          u4735 1BD3                          u5375 0B7C  
                        u5615 1ED3                          u5800 001A                          u4745 1BDA  
                        u5385 0B90                          u4905 1E49                          u6345 03C0  
                        u6265 0353                          u7225 1DDD                          u5650 1AC1  
                        u5810 0812                          u5555 1960                          u5475 0BD4  
                        u3955 08F5                          u5715 1116                          u6275 036D  
                        u7315 1FB8                          u7235 1DF1                          _PIR3 070F  
                        u5900 129B                          u5660 1AC2                          u5820 0813  
                        u5485 0BEF                          u5565 1E97                          u7245 1DFD  
                        u5910 129C                          u5495 0C05                          u4935 1E5E  
                        u5735 113F                          u6615 13E4                          u7335 1FCA  
                        u7415 1CA4                          u5840 194F                          u6800 10AB  
                        u6640 144D                          u5585 1EB0                          u6705 14AA  
                        u5850 1950                          u6810 10AC                          u6570 07A3  
                        u6650 144E                          u4795 1C31                          u4875 1E2C  
                        u5755 116D                          u6555 076C                          u6715 14D0  
                        u6635 1430                          u6580 07A4                          u5685 10EC  
                        u6485 06DA                          u5790 0019                          u6670 146D  
                        u5775 1186                          u5695 1107                          u6495 06E8  
                        u6735 14E6                          u7375 1FE4                          u7295 1FA4  
                        u7447 167E                          u6680 146E                          u6745 14F2  
                        u7457 1C67                          u5955 12D7                          u7467 1C79  
                        u5985 139B                          u6990 0CC2                          abs@a 0073  
                        _dbuf 01A0                          _atoi 102A                          _main 1528  
                        _dtoa 127F                          _prec 00EC                          _nout 0157  
                        pad@i 002A                          pad@p 0028                          fsr0h 0005  
                        fsr1h 0007                          indf0 0000                          fsr0l 0004  
                        indf1 0001                          fsr1l 0006                          pad@w 002C  
                        btemp 007E                          _xtoa 13D0                 ___fpclassifyf 1E76  
            __end_of_I2C_nack 18E6              __end_of_I2C_init 19E6              __end_of_I2C_read 192A  
                        start 0002             ?_MLX90614_ReadReg 0071              __end_of_I2C_stop 18C9  
             ___fldiv@new_exp 0025                  _tolower$1131 007C            ??_MLX90614_ReadReg 0073  
        __size_of_I2C_restart 0005                         ??_abs 0075                         ??_pad 007C  
               ___fltol@sign1 007C               __end_of___aodiv 0114                         _ADCAP 009B  
                       ?_atoi 0076               __end_of___fladd 0A06                         ?_main 0070  
                       ?_dtoa 0030                         _ADCLK 0098               __end_of___aomod 127F  
                       _ADPCH 009E               __end_of___fldiv 1800                         _ADREF 009A  
             __end_of___awdiv 1D6D               __end_of___flneg 18F8                         STR_10 1865  
                       STR_13 1869                         STR_15 1869               __end_of___awmod 1BEF  
             __end_of___flmul 0C32               __end_of___flsub 1A93               __end_of___fltol 1E76  
             __end_of___lldiv 1E10               ___awdiv@divisor 0070                         ?_xtoa 002F  
             ___awdiv@counter 0075                  vfpfcnvrt@fmt 006D                  vfpfcnvrt@llu 0128  
                       _PORTA 000C                         _PORTB 000D                         _TRISA 0011  
                       _TRISB 0012                         _TRISC 0013                         _RXPPS 0ECB  
                       _flags 00EE                         _fputc 1B39               __end_of_isalpha 0021  
                       _fputs 1004               __end_of_isdigit 1957                         atoi@n 0027  
                       pad@fp 002E                         atoi@s 0076                         _width 0159  
                       _putch 18C9                         dtoa@d 0030                         dtoa@i 004C  
                       dtoa@n 0044                         dtoa@p 003D                         dtoa@s 0042  
                       dtoa@w 0040               __end_of_islower 199C               __end_of_isspace 1A37  
           _MLX90614_ReadTemp 18E6               __end_of_isupper 1985               __end_of_uart_tx 1906  
                       status 0003             __end_of_I2C_start 18C4            ?_MLX90614_ReadTemp 0079  
                       wtemp0 007E                ?___fpclassifyf 0070               __end_of_tolower 1AD3  
                       xtoa@c 0053                         xtoa@d 002F                         xtoa@i 0051  
                       xtoa@n 0049                         xtoa@p 0044                         xtoa@w 0047  
                       xtoa@x 0037             __end_of_I2C_write 1916               __end_of_strncmp 1DBE  
             __end_of_toupper 0824                  _toupper$1146 007C               __initialization 07E9  
           I2C_write@I2C_data 0070           ??_MLX90614_ReadTemp 007B                  __end_of_atoi 10CB  
                __end_of_main 1686                  __end_of_dtoa 13D0             ??_writeEmissivity 0055  
                __end_of_xtoa 1528             _MLX90614_WriteReg 1A37                     ??_I2C_ack 0070  
                      ??_atoi 0078                        ??_main 00E8                        ??_dtoa 0038  
          ?_MLX90614_WriteReg 0071                        ??_xtoa 0038           ??_MLX90614_WriteReg 0073  
   __end_of_MLX90614_ReadTemp 18EF                        _ADCON0 0093                        _ADCON1 0094  
                      _ADCON2 0095                        ?_fputc 0073                        ?_fputs 007B  
                      _ADRESH 008D                        _ADRESL 008C           MLX90614_ReadReg@reg 0076  
           readEmissivity@reg 0036              ___awdiv@dividend 0072                        _ANSELA 0F38  
                      ?_putch 0070                        _ANSELB 0F43                        _ANSELC 0F4E  
                      _RC1REG 0119                        _RC0PPS 0F20              __end_of_adc_init 1A00  
                      _RC1STA 011D                        _RC3PPS 0F23                        _RC4PPS 0F24  
                      _TX1REG 011A                        _TX1STA 011E                        u438lld 0049  
                      u449lld 11CB              __end_of___xxtofl 2000                  ?_serial_init 0020  
                vfprintf@cfmt 00E5                        ___flge 1EEE                        ___fleq 1BEF  
   __end_of_MLX90614_WriteReg 1A55                     ??___aodiv 0070                     ??___fladd 0050  
                   ??___aomod 0070                        ___wmul 1A00                     ??___fldiv 0078  
                   ??___awdiv 0074                     ??___flneg 0074                     ??___awmod 0074  
                   ??___flmul 0036                     ??___flsub 007C                     ??___fltol 004C  
                   ??___lldiv 0078                        _efgtoa 0114                        _floorf 10CB  
            ___awdiv@quotient 0077               ___awmod@divisor 0070               ___awmod@counter 0075  
                      _printf 19B4                        pad@buf 0027                        dtoa@fp 003F  
                      _strcpy 1A93                        _strlen 199C                        fputc@c 0073  
                      fputs@c 0023                        fputs@i 0024                        fputs@s 0026  
                   ??_isalpha 0072                     ??_isdigit 0072            __size_of__Umul8_16 001F  
             ___fpclassifyf@e 0020               ___fpclassifyf@u 0022               ___fpclassifyf@x 0070  
                   ??_islower 0072                     ?_I2C_nack 0070                     ??_isspace 0072  
                   ?_I2C_init 0070                     ?_I2C_read 0070                     ??_isupper 0072  
                   ?_I2C_stop 0070                     ??_uart_tx 0070              __end_of_vfprintf 1B39  
                   ??_tolower 0078                        xtoa@fp 0046                     ??_strncmp 0074  
                   ??_toupper 0078                    ___flge@ff1 0048                    ___flge@ff2 004C  
             ??___fpclassifyf 0074                  ___xxtofl@arg 002A                  ___xxtofl@exp 0029  
                ___xxtofl@val 0020                    ___fleq@ff1 0070                    ___fleq@ff2 0074  
     __end_of__initialization 07FD                    ___flneg@f1 0070                    ___fltol@f1 0048  
              __pcstackCOMMON 0070                 __end_of_fputc 1B6E                 __end_of_fputs 102A  
               __end_of_putch 18CE       __size_of_readEmissivity 003C                    ??_I2C_nack 0070  
                  ??_I2C_init 0070                    ??_I2C_read 0070                    ??_I2C_stop 0070  
  __size_of_MLX90614_ReadTemp 0009                       ??_fputc 0076                       ??_fputs 0020  
                     ??_putch 0072                    __pbssBANK1 00EC                    __pbssBANK2 014F  
                  __pbssBANK3 01A0             __end_of__Umul8_16 1A74                    _efgtoa$954 00A0  
                  _efgtoa$963 00A6                    _efgtoa$955 00A2                    _efgtoa$964 00A8  
                  _efgtoa$965 00AA                    _efgtoa$959 00A4                    __pmaintext 1528  
                     ?___flge 0048                       ?___fleq 0070    __size_of_MLX90614_WriteReg 001E  
                     ?___wmul 0070                       ?_efgtoa 0064                       ?_floorf 002D  
                     _I2C_ack 18D4                       ?_printf 013F                     ?_adc_init 0070  
                     ?_strcpy 0070                       ?_strlen 0070     __size_of_MLX90614_ReadReg 0033  
                   ?___xxtofl 0020                       _SP1BRGH 011C                       _SP1BRGL 011B  
          __size_of_vfpfcnvrt 03CE            __size_of_port_init 0016                       _SSP1ADD 018D  
                     _SSP1BUF 018C               _writeEmissivity 1C37                 ??_I2C_restart 0070  
      MLX90614_ReadReg@valReg 0077                     _I2C_start 18BF                     _I2C_write 1906  
             __size_of___flge 007C               __size_of___fleq 0048                       ___aodiv 0021  
                     ___fladd 0824                       ___aomod 11A3                       ___fldiv 1686  
                     ___awdiv 1D1C                       ___flneg 18EF                       ___awmod 1BAA  
                     ___flmul 0A06                       ___flsub 1A74                       ___fltol 1E10  
                     ___lldiv 1DBE               __size_of___wmul 001B                     ?_vfprintf 00DF  
        __size_of_serial_init 004D               __size_of_efgtoa 06D5               __size_of_floorf 00D8  
                  ??_adc_init 0070                       __ptext1 1C37                       __ptext2 1A37  
                     __ptext3 1C7F                       __ptext4 1DBE                       __ptext5 1B6E  
                     __ptext6 1F6A                       __ptext7 19B4                       __ptext8 1B06  
                     __ptext9 0C32               __size_of_printf 0018               __size_of_strcpy 001F  
             __size_of_strlen 0018                  __size_of_abs 0017                  __size_of_pad 0050  
                     _isalpha 0004                       _isdigit 1940                    ??___xxtofl 0024  
            ___awmod@dividend 0072                       _islower 1985                       _isspace 1A1B  
                     _isupper 196E                       efgtoa@c 0068                       efgtoa@d 00B8  
                     efgtoa@e 00D1                       efgtoa@f 0064                       efgtoa@g 00CD  
                     efgtoa@h 00C3                       efgtoa@i 00CB                       efgtoa@l 00C7  
                     efgtoa@m 00B2                       efgtoa@n 00D3                       efgtoa@p 00BC  
                     efgtoa@t 00AC                       efgtoa@u 00D5                       efgtoa@w 00BF  
                     _uart_tx 18F8                       atoi@neg 0020                       _tolower 1AB2  
                     clrloop0 18CF                       _strncmp 1D6D                       _toupper 0803  
        end_of_initialization 07FD                       floorf@e 003B                       floorf@m 0037  
                     floorf@u 003D                       floorf@x 002D                       fputc@fp 0075  
                     fputs@fp 007B               ___lldiv@divisor 0070               ___lldiv@counter 007D  
                  ?_I2C_start 0070                    ?_I2C_write 0070             __end_of_vfpfcnvrt 1000  
                  efgtoa@mode 00C2             __end_of_port_init 1940                    efgtoa@sign 00BA  
         __end_of_I2C_restart 18BF                    ??_vfprintf 00E2                       strcpy@d 0076  
                     strlen@a 0073                       strcpy@s 0074                       strlen@s 0074  
                 uart_tx@dato 0071                _readEmissivity 1B6E                   ___fladd@grs 005B  
               ___xxtofl@sign 0028       __end_of_writeEmissivity 1C7F                     _TRISCbits 0013  
                 ___fldiv@grs 0027                   ___fldiv@rem 0020           writeEmissivity@ereg 0056  
           __size_of_I2C_nack 0009             __size_of_I2C_init 001A             __size_of_I2C_read 0014  
           __size_of_I2C_stop 0005                   ___flmul@grs 003C                __end_of___flge 1F6A  
              __end_of___fleq 1C37                   vfpfcnvrt@ap 006E                   vfpfcnvrt@ct 013A  
                 vfpfcnvrt@fp 013E                   vfpfcnvrt@ll 0120                __end_of___wmul 1A1B  
              __end_of_efgtoa 07E9        __end_of_readEmissivity 1BAA                __end_of_floorf 11A3  
                  floorf@F527 014F              _MLX90614_ReadReg 1AD3                __end_of_printf 19CC  
              __end_of_strcpy 1AB2                __end_of_strlen 19B4           start_initialization 07E9  
                 __end_of_abs 196E                   __end_of_pad 1D1C  MLX90614_ReadTemp@Temp_Source 007B  
       __end_of___fpclassifyf 1EEE                   _I2C_restart 18BA                   ??_I2C_start 0070  
                 ??_I2C_write 0070                   vfprintf@fmt 00DF                      ??___flge 0050  
                    ??___fleq 0078                      ??___wmul 0074                      ??_efgtoa 0069  
                   __Umul8_16 1A55                      ??_floorf 0031                      ?_I2C_ack 0070  
             ?_readEmissivity 002E                      ??_printf 006F                      ??_strcpy 0072  
                    ??_strlen 0072                     ___fladd@a 004C                     ___fladd@b 0048  
                   ___fldiv@a 0070                     ___fldiv@b 0074             __size_of_adc_init 001A  
                   ___flmul@a 0032                     ___flmul@b 002E                     ___flsub@a 005C  
                   ___flsub@b 0060                     ___latbits 0002                 __pcstackBANK0 0020  
               __pcstackBANK1 00A0                 __pcstackBANK2 0120              ___aodiv@dividend 0028  
            ?_writeEmissivity 0051             __size_of___xxtofl 0096                     _atoi$1033 0022  
                   _atoi$1034 0026                     _atoi$1035 0024                      ?___aodiv 0020  
                    ?___fladd 0048                      ?___aomod 0020                      ?___fldiv 0070  
                    ?___awdiv 0070              ___aodiv@quotient 0073                      ?___flneg 0070  
                    ?___awmod 0070                      ?___flmul 002E                      ?___flsub 005C  
                    ?___fltol 0048                      ?___lldiv 0070                    ?__Umul8_16 0070  
                   _high_byte 015C             __size_of_vfprintf 0033                      _BAUD1CON 011F  
                    ?_isalpha 0070                      ?_isdigit 0070                      ?_islower 0070  
                    _I2C_nack 18DD                      ?_isspace 0070                      _I2C_init 19CC  
                    _I2C_read 1916                      ?_isupper 0070                      _I2C_stop 18C4  
                    ?_uart_tx 0070                      ?_tolower 0076                __size_of_fputc 0035  
              __size_of_fputs 0026                      ?_strncmp 0070                      ?_toupper 0076  
              __size_of_putch 0005                ___wmul@product 0074                     clear_ram0 18CE  
               ??_serial_init 0024                      _PIR3bits 070F                   I2C_read@ack 0070  
                    _SSP1CON1 0190                      _SSP1CON3 0192                      _SSP1STAT 018F  
                   _vfpfcnvrt 0C32                     _port_init 192A                 serial_init@sx 0028  
            __size_of_I2C_ack 0009             ___wmul@multiplier 0070                     main@leerT 0149  
                _isspace$1073 0074                    vfpfcnvrt@c 013D                    vfpfcnvrt@f 0136  
    __end_of_MLX90614_ReadReg 1B06                    vfprintf@ap 00E1                    vfprintf@fp 00E4  
                 ??__Umul8_16 0072              __size_of___aodiv 00F3              __size_of___fladd 01E2  
            __size_of___aomod 00DC              __size_of___fldiv 017A              __size_of___awdiv 0051  
            __size_of___flneg 0009              __size_of___awmod 0045              __size_of___flmul 022C  
            __size_of___flsub 001F              __size_of___fltol 0066              __size_of___lldiv 0052  
                  ?_vfpfcnvrt 006D                    ?_port_init 0070           __end_of_serial_init 1CCC  
             ___aodiv@divisor 0020                      _adc_init 19E6               ___aodiv@counter 0071  
                  _ANSELCbits 0F4E            ___fpclassifyf@F465 0153                      ___xxtofl 1F6A  
            __size_of_isalpha 001D              __size_of_isdigit 0017                      _dtoa$930 003B  
            __size_of_islower 0017              __size_of_isspace 001C                      __ptext10 13D0  
                    __ptext11 0803                      __ptext20 1E76                      __ptext12 1985  
                    __ptext21 1E10                      __ptext13 0004                      __ptext30 1BAA  
                    __ptext22 1A74                      __ptext14 1D6D                      __ptext31 1D1C  
                    __ptext23 0824                      __ptext15 0114                      __ptext40 11A3  
                    __ptext32 127F                      __ptext24 18EF                      __ptext16 1AB2  
                    __ptext41 0021                      __ptext33 1CCC                      __ptext25 0A06  
                    __ptext17 196E                      __ptext50 1906                      __ptext42 102A  
                    __ptext34 199C                      __ptext26 1A55                      __ptext18 1A93  
                    __ptext51 18C4                      __ptext43 1A1B                      __ptext35 1004  
                    __ptext27 1EEE                      __ptext19 10CB                      __ptext52 18BF  
                    __ptext44 1940                      __ptext36 1B39                      __ptext28 1BEF  
                    __ptext53 18BA                      __ptext45 1A00                      __ptext37 18C9  
                    __ptext29 1686                      __ptext54 1916                      __ptext46 192A  
                    __ptext38 18F8                      __ptext55 18DD                      __ptext47 19E6  
                    __ptext39 1957                      __ptext56 18D4                      __ptext48 18E6  
                    __ptext57 19CC                      __ptext49 1AD3              __size_of_isupper 0017  
                _SSP1CON2bits 0191              __size_of_uart_tx 000E              __size_of_tolower 0021  
                  strcpy@dest 0077              __size_of_strncmp 0051              __size_of_toupper 0021  
               __size_of_atoi 00A1                 __size_of_main 015E                 __size_of_dtoa 0151  
               __size_of_xtoa 0158                  ?_I2C_restart 0070                      _low_byte 015B  
                    efgtoa@fp 00BE                      efgtoa@ne 00B0                      efgtoa@pp 00AE  
                    efgtoa@ou 00B4              ??_readEmissivity 0032                      _xtoa$975 0040  
                    _xtoa$976 0042                      _vfprintf 1B06                     printf@fmt 013F  
                    main@temp 014B              ___aomod@dividend 0028                     putch@dato 0072  
        MLX90614_WriteReg@reg 0073          MLX90614_WriteReg@val 0071                __pstringtext10 0000  
                    isalpha@c 0070                      isdigit@c 0070     writeEmissivity@emissivity 0051  
                    islower@c 0070                      isspace@c 0070              ___lldiv@dividend 0074  
                   strcpy@src 0070                      isupper@c 0070                     strncmp@_l 0075  
                   strncmp@_r 0070                   _serial_init 1C7F                   efgtoa@nmode 00C1  
                    printf@ap 00E7               ___aomod@divisor 0020                   ??_vfpfcnvrt 00D9  
             ___aomod@counter 0071                   ??_port_init 0070                 _vfpfcnvrt$990 0130  
               _vfpfcnvrt$991 0132                 _vfpfcnvrt$996 0134                 __pstringtext1 1800  
               __pstringtext2 181D                 __pstringtext3 1834                 __pstringtext4 1849  
               __pstringtext5 1859                 __pstringtext6 185D                 __pstringtext7 1861  
               __pstringtext8 1865                 __pstringtext9 1869        __Umul8_16@multiplicand 0070  
                    tolower@c 0076                    _SSP1DATPPS 0EC6        __size_of___fpclassifyf 0078  
                  _SSP1CLKPPS 0EC5              ___lldiv@quotient 0079                      strncmp@l 0078  
                    strncmp@n 0072                      strncmp@r 0076                      toupper@c 0076  
               ___fladd@signs 0058                  ___aodiv@sign 0072                  ___fladd@aexp 0059  
                ___fladd@bexp 005A      __size_of_writeEmissivity 0048          __Umul8_16@multiplier 0078  
                ___aomod@sign 0072             __Umul8_16@product 0074  
