

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Aug 03 13:58:01 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	16F18855
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    30                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    34                           	psect	text16,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text17,local,class=CODE,merge=1,delta=2,group=3
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2,group=3
    39                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2,group=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2,group=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2,group=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2,group=2
    64                           	psect	text46,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    66                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    67                           	dabs	1,0x7E,2
    68  0000                     
    69                           ; Version 2.40
    70                           ; Generated 02/12/2021 GMT
    71                           ; 
    72                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution. Publication is not required when
    86                           ;        this file is used in an embedded application.
    87                           ; 
    88                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    89                           ;        software without specific prior written permission.
    90                           ; 
    91                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    92                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    93                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    94                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    95                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    96                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    97                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    98                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    99                           ; 
   100                           ; 
   101                           ; Code-generator required, PIC16F18855 Definitions
   102                           ; 
   103                           ; SFR Addresses
   104  0000                     	;# 
   105  0001                     	;# 
   106  0002                     	;# 
   107  0003                     	;# 
   108  0004                     	;# 
   109  0005                     	;# 
   110  0006                     	;# 
   111  0007                     	;# 
   112  0008                     	;# 
   113  0009                     	;# 
   114  000A                     	;# 
   115  000B                     	;# 
   116  000C                     	;# 
   117  000D                     	;# 
   118  000E                     	;# 
   119  0010                     	;# 
   120  0011                     	;# 
   121  0012                     	;# 
   122  0013                     	;# 
   123  0016                     	;# 
   124  0017                     	;# 
   125  0018                     	;# 
   126  001C                     	;# 
   127  001C                     	;# 
   128  001D                     	;# 
   129  001D                     	;# 
   130  001E                     	;# 
   131  001F                     	;# 
   132  008C                     	;# 
   133  008C                     	;# 
   134  008D                     	;# 
   135  008E                     	;# 
   136  008E                     	;# 
   137  008F                     	;# 
   138  0090                     	;# 
   139  0090                     	;# 
   140  0091                     	;# 
   141  0093                     	;# 
   142  0094                     	;# 
   143  0095                     	;# 
   144  0096                     	;# 
   145  0097                     	;# 
   146  0098                     	;# 
   147  0099                     	;# 
   148  009A                     	;# 
   149  009B                     	;# 
   150  009C                     	;# 
   151  009D                     	;# 
   152  009E                     	;# 
   153  010C                     	;# 
   154  010D                     	;# 
   155  010E                     	;# 
   156  010E                     	;# 
   157  010F                     	;# 
   158  0110                     	;# 
   159  0110                     	;# 
   160  0111                     	;# 
   161  0112                     	;# 
   162  0112                     	;# 
   163  0113                     	;# 
   164  0114                     	;# 
   165  0114                     	;# 
   166  0115                     	;# 
   167  0116                     	;# 
   168  0116                     	;# 
   169  0117                     	;# 
   170  0119                     	;# 
   171  0119                     	;# 
   172  0119                     	;# 
   173  011A                     	;# 
   174  011A                     	;# 
   175  011A                     	;# 
   176  011B                     	;# 
   177  011B                     	;# 
   178  011B                     	;# 
   179  011B                     	;# 
   180  011B                     	;# 
   181  011C                     	;# 
   182  011C                     	;# 
   183  011C                     	;# 
   184  011D                     	;# 
   185  011D                     	;# 
   186  011D                     	;# 
   187  011E                     	;# 
   188  011E                     	;# 
   189  011E                     	;# 
   190  011F                     	;# 
   191  011F                     	;# 
   192  011F                     	;# 
   193  011F                     	;# 
   194  011F                     	;# 
   195  018C                     	;# 
   196  018D                     	;# 
   197  018E                     	;# 
   198  018F                     	;# 
   199  0190                     	;# 
   200  0191                     	;# 
   201  0192                     	;# 
   202  0196                     	;# 
   203  0197                     	;# 
   204  0198                     	;# 
   205  0199                     	;# 
   206  019A                     	;# 
   207  019B                     	;# 
   208  019C                     	;# 
   209  020C                     	;# 
   210  020C                     	;# 
   211  020D                     	;# 
   212  020E                     	;# 
   213  020F                     	;# 
   214  020F                     	;# 
   215  0210                     	;# 
   216  0210                     	;# 
   217  0211                     	;# 
   218  0211                     	;# 
   219  0212                     	;# 
   220  0212                     	;# 
   221  0213                     	;# 
   222  0214                     	;# 
   223  0215                     	;# 
   224  0215                     	;# 
   225  0216                     	;# 
   226  0216                     	;# 
   227  0217                     	;# 
   228  0217                     	;# 
   229  0218                     	;# 
   230  0218                     	;# 
   231  0219                     	;# 
   232  021A                     	;# 
   233  021B                     	;# 
   234  021B                     	;# 
   235  021C                     	;# 
   236  021C                     	;# 
   237  021D                     	;# 
   238  021D                     	;# 
   239  021E                     	;# 
   240  021F                     	;# 
   241  028C                     	;# 
   242  028C                     	;# 
   243  028D                     	;# 
   244  028D                     	;# 
   245  028E                     	;# 
   246  028F                     	;# 
   247  0290                     	;# 
   248  0290                     	;# 
   249  0291                     	;# 
   250  0292                     	;# 
   251  0292                     	;# 
   252  0293                     	;# 
   253  0293                     	;# 
   254  0294                     	;# 
   255  0295                     	;# 
   256  0296                     	;# 
   257  0296                     	;# 
   258  0297                     	;# 
   259  0298                     	;# 
   260  0298                     	;# 
   261  0299                     	;# 
   262  0299                     	;# 
   263  029A                     	;# 
   264  029B                     	;# 
   265  029C                     	;# 
   266  029C                     	;# 
   267  029D                     	;# 
   268  030C                     	;# 
   269  030C                     	;# 
   270  030D                     	;# 
   271  030E                     	;# 
   272  030F                     	;# 
   273  0310                     	;# 
   274  0310                     	;# 
   275  0311                     	;# 
   276  0312                     	;# 
   277  0313                     	;# 
   278  0314                     	;# 
   279  0314                     	;# 
   280  0315                     	;# 
   281  0316                     	;# 
   282  0317                     	;# 
   283  0318                     	;# 
   284  0318                     	;# 
   285  0319                     	;# 
   286  031A                     	;# 
   287  031B                     	;# 
   288  031C                     	;# 
   289  031C                     	;# 
   290  031D                     	;# 
   291  031E                     	;# 
   292  031F                     	;# 
   293  038C                     	;# 
   294  038C                     	;# 
   295  038D                     	;# 
   296  038E                     	;# 
   297  0390                     	;# 
   298  0390                     	;# 
   299  0391                     	;# 
   300  0392                     	;# 
   301  040C                     	;# 
   302  040D                     	;# 
   303  040E                     	;# 
   304  040F                     	;# 
   305  0410                     	;# 
   306  0411                     	;# 
   307  0416                     	;# 
   308  0416                     	;# 
   309  0417                     	;# 
   310  0418                     	;# 
   311  0418                     	;# 
   312  0419                     	;# 
   313  041A                     	;# 
   314  041A                     	;# 
   315  041B                     	;# 
   316  041C                     	;# 
   317  041C                     	;# 
   318  041D                     	;# 
   319  041E                     	;# 
   320  041F                     	;# 
   321  048C                     	;# 
   322  048C                     	;# 
   323  048D                     	;# 
   324  048E                     	;# 
   325  048F                     	;# 
   326  048F                     	;# 
   327  0490                     	;# 
   328  0491                     	;# 
   329  0492                     	;# 
   330  0492                     	;# 
   331  0493                     	;# 
   332  0494                     	;# 
   333  0495                     	;# 
   334  0495                     	;# 
   335  0496                     	;# 
   336  0497                     	;# 
   337  0498                     	;# 
   338  0499                     	;# 
   339  049A                     	;# 
   340  049B                     	;# 
   341  049C                     	;# 
   342  049D                     	;# 
   343  050C                     	;# 
   344  050C                     	;# 
   345  050D                     	;# 
   346  050E                     	;# 
   347  050F                     	;# 
   348  050F                     	;# 
   349  0510                     	;# 
   350  0511                     	;# 
   351  0512                     	;# 
   352  0512                     	;# 
   353  0513                     	;# 
   354  0514                     	;# 
   355  0515                     	;# 
   356  0515                     	;# 
   357  0516                     	;# 
   358  0517                     	;# 
   359  0518                     	;# 
   360  0519                     	;# 
   361  051A                     	;# 
   362  051B                     	;# 
   363  051C                     	;# 
   364  051D                     	;# 
   365  058C                     	;# 
   366  058C                     	;# 
   367  058D                     	;# 
   368  058E                     	;# 
   369  058F                     	;# 
   370  058F                     	;# 
   371  0590                     	;# 
   372  0591                     	;# 
   373  0592                     	;# 
   374  0593                     	;# 
   375  060C                     	;# 
   376  060D                     	;# 
   377  060E                     	;# 
   378  060F                     	;# 
   379  0610                     	;# 
   380  0611                     	;# 
   381  0612                     	;# 
   382  0613                     	;# 
   383  0614                     	;# 
   384  0616                     	;# 
   385  0617                     	;# 
   386  0618                     	;# 
   387  0619                     	;# 
   388  061A                     	;# 
   389  061B                     	;# 
   390  061C                     	;# 
   391  061D                     	;# 
   392  061E                     	;# 
   393  068C                     	;# 
   394  068D                     	;# 
   395  068E                     	;# 
   396  068F                     	;# 
   397  0690                     	;# 
   398  0691                     	;# 
   399  0692                     	;# 
   400  0693                     	;# 
   401  0694                     	;# 
   402  070C                     	;# 
   403  070D                     	;# 
   404  070E                     	;# 
   405  070F                     	;# 
   406  0710                     	;# 
   407  0711                     	;# 
   408  0712                     	;# 
   409  0713                     	;# 
   410  0714                     	;# 
   411  0716                     	;# 
   412  0717                     	;# 
   413  0718                     	;# 
   414  0719                     	;# 
   415  071A                     	;# 
   416  071B                     	;# 
   417  071C                     	;# 
   418  071D                     	;# 
   419  071E                     	;# 
   420  0796                     	;# 
   421  0797                     	;# 
   422  0798                     	;# 
   423  0799                     	;# 
   424  079A                     	;# 
   425  079B                     	;# 
   426  080C                     	;# 
   427  080D                     	;# 
   428  080E                     	;# 
   429  080F                     	;# 
   430  0810                     	;# 
   431  0811                     	;# 
   432  0812                     	;# 
   433  0813                     	;# 
   434  0814                     	;# 
   435  081A                     	;# 
   436  081B                     	;# 
   437  081C                     	;# 
   438  081D                     	;# 
   439  081E                     	;# 
   440  081F                     	;# 
   441  088C                     	;# 
   442  088D                     	;# 
   443  088E                     	;# 
   444  088F                     	;# 
   445  0890                     	;# 
   446  0891                     	;# 
   447  0892                     	;# 
   448  0893                     	;# 
   449  0895                     	;# 
   450  0896                     	;# 
   451  0897                     	;# 
   452  0898                     	;# 
   453  0899                     	;# 
   454  089A                     	;# 
   455  089B                     	;# 
   456  090C                     	;# 
   457  090E                     	;# 
   458  090F                     	;# 
   459  091F                     	;# 
   460  091F                     	;# 
   461  098F                     	;# 
   462  098F                     	;# 
   463  0990                     	;# 
   464  0991                     	;# 
   465  0992                     	;# 
   466  0993                     	;# 
   467  0994                     	;# 
   468  0995                     	;# 
   469  0996                     	;# 
   470  0997                     	;# 
   471  0E0F                     	;# 
   472  0E10                     	;# 
   473  0E11                     	;# 
   474  0E12                     	;# 
   475  0E13                     	;# 
   476  0E14                     	;# 
   477  0E15                     	;# 
   478  0E16                     	;# 
   479  0E17                     	;# 
   480  0E18                     	;# 
   481  0E19                     	;# 
   482  0E1A                     	;# 
   483  0E1B                     	;# 
   484  0E1C                     	;# 
   485  0E1D                     	;# 
   486  0E1E                     	;# 
   487  0E1F                     	;# 
   488  0E20                     	;# 
   489  0E21                     	;# 
   490  0E22                     	;# 
   491  0E23                     	;# 
   492  0E24                     	;# 
   493  0E25                     	;# 
   494  0E26                     	;# 
   495  0E27                     	;# 
   496  0E28                     	;# 
   497  0E29                     	;# 
   498  0E2A                     	;# 
   499  0E2B                     	;# 
   500  0E2C                     	;# 
   501  0E2D                     	;# 
   502  0E2E                     	;# 
   503  0E2F                     	;# 
   504  0E30                     	;# 
   505  0E31                     	;# 
   506  0E32                     	;# 
   507  0E33                     	;# 
   508  0E34                     	;# 
   509  0E35                     	;# 
   510  0E36                     	;# 
   511  0E37                     	;# 
   512  0E8F                     	;# 
   513  0E90                     	;# 
   514  0E91                     	;# 
   515  0E92                     	;# 
   516  0E93                     	;# 
   517  0E94                     	;# 
   518  0E95                     	;# 
   519  0E96                     	;# 
   520  0E97                     	;# 
   521  0E9C                     	;# 
   522  0E9D                     	;# 
   523  0E9E                     	;# 
   524  0EA1                     	;# 
   525  0EA2                     	;# 
   526  0EA3                     	;# 
   527  0EA4                     	;# 
   528  0EA5                     	;# 
   529  0EA9                     	;# 
   530  0EAA                     	;# 
   531  0EAB                     	;# 
   532  0EAC                     	;# 
   533  0EB1                     	;# 
   534  0EB2                     	;# 
   535  0EB3                     	;# 
   536  0EB8                     	;# 
   537  0EB9                     	;# 
   538  0EBA                     	;# 
   539  0EBB                     	;# 
   540  0EBC                     	;# 
   541  0EBD                     	;# 
   542  0EBE                     	;# 
   543  0EC3                     	;# 
   544  0EC5                     	;# 
   545  0EC6                     	;# 
   546  0EC7                     	;# 
   547  0EC8                     	;# 
   548  0EC9                     	;# 
   549  0ECA                     	;# 
   550  0ECB                     	;# 
   551  0ECC                     	;# 
   552  0F10                     	;# 
   553  0F11                     	;# 
   554  0F12                     	;# 
   555  0F13                     	;# 
   556  0F14                     	;# 
   557  0F15                     	;# 
   558  0F16                     	;# 
   559  0F17                     	;# 
   560  0F18                     	;# 
   561  0F19                     	;# 
   562  0F1A                     	;# 
   563  0F1B                     	;# 
   564  0F1C                     	;# 
   565  0F1D                     	;# 
   566  0F1E                     	;# 
   567  0F1F                     	;# 
   568  0F20                     	;# 
   569  0F21                     	;# 
   570  0F22                     	;# 
   571  0F23                     	;# 
   572  0F24                     	;# 
   573  0F25                     	;# 
   574  0F26                     	;# 
   575  0F27                     	;# 
   576  0F38                     	;# 
   577  0F39                     	;# 
   578  0F3A                     	;# 
   579  0F3B                     	;# 
   580  0F3C                     	;# 
   581  0F3D                     	;# 
   582  0F3E                     	;# 
   583  0F3F                     	;# 
   584  0F40                     	;# 
   585  0F41                     	;# 
   586  0F43                     	;# 
   587  0F44                     	;# 
   588  0F45                     	;# 
   589  0F46                     	;# 
   590  0F47                     	;# 
   591  0F48                     	;# 
   592  0F49                     	;# 
   593  0F4A                     	;# 
   594  0F4B                     	;# 
   595  0F4C                     	;# 
   596  0F4E                     	;# 
   597  0F4F                     	;# 
   598  0F50                     	;# 
   599  0F51                     	;# 
   600  0F52                     	;# 
   601  0F53                     	;# 
   602  0F54                     	;# 
   603  0F55                     	;# 
   604  0F56                     	;# 
   605  0F57                     	;# 
   606  0F65                     	;# 
   607  0F68                     	;# 
   608  0F69                     	;# 
   609  0F6A                     	;# 
   610  0F6B                     	;# 
   611  0FE4                     	;# 
   612  0FE5                     	;# 
   613  0FE6                     	;# 
   614  0FE7                     	;# 
   615  0FE8                     	;# 
   616  0FE9                     	;# 
   617  0FEA                     	;# 
   618  0FEB                     	;# 
   619  0FED                     	;# 
   620  0FEE                     	;# 
   621  0FEF                     	;# 
   622  0000                     	;# 
   623  0001                     	;# 
   624  0002                     	;# 
   625  0003                     	;# 
   626  0004                     	;# 
   627  0005                     	;# 
   628  0006                     	;# 
   629  0007                     	;# 
   630  0008                     	;# 
   631  0009                     	;# 
   632  000A                     	;# 
   633  000B                     	;# 
   634  000C                     	;# 
   635  000D                     	;# 
   636  000E                     	;# 
   637  0010                     	;# 
   638  0011                     	;# 
   639  0012                     	;# 
   640  0013                     	;# 
   641  0016                     	;# 
   642  0017                     	;# 
   643  0018                     	;# 
   644  001C                     	;# 
   645  001C                     	;# 
   646  001D                     	;# 
   647  001D                     	;# 
   648  001E                     	;# 
   649  001F                     	;# 
   650  008C                     	;# 
   651  008C                     	;# 
   652  008D                     	;# 
   653  008E                     	;# 
   654  008E                     	;# 
   655  008F                     	;# 
   656  0090                     	;# 
   657  0090                     	;# 
   658  0091                     	;# 
   659  0093                     	;# 
   660  0094                     	;# 
   661  0095                     	;# 
   662  0096                     	;# 
   663  0097                     	;# 
   664  0098                     	;# 
   665  0099                     	;# 
   666  009A                     	;# 
   667  009B                     	;# 
   668  009C                     	;# 
   669  009D                     	;# 
   670  009E                     	;# 
   671  010C                     	;# 
   672  010D                     	;# 
   673  010E                     	;# 
   674  010E                     	;# 
   675  010F                     	;# 
   676  0110                     	;# 
   677  0110                     	;# 
   678  0111                     	;# 
   679  0112                     	;# 
   680  0112                     	;# 
   681  0113                     	;# 
   682  0114                     	;# 
   683  0114                     	;# 
   684  0115                     	;# 
   685  0116                     	;# 
   686  0116                     	;# 
   687  0117                     	;# 
   688  0119                     	;# 
   689  0119                     	;# 
   690  0119                     	;# 
   691  011A                     	;# 
   692  011A                     	;# 
   693  011A                     	;# 
   694  011B                     	;# 
   695  011B                     	;# 
   696  011B                     	;# 
   697  011B                     	;# 
   698  011B                     	;# 
   699  011C                     	;# 
   700  011C                     	;# 
   701  011C                     	;# 
   702  011D                     	;# 
   703  011D                     	;# 
   704  011D                     	;# 
   705  011E                     	;# 
   706  011E                     	;# 
   707  011E                     	;# 
   708  011F                     	;# 
   709  011F                     	;# 
   710  011F                     	;# 
   711  011F                     	;# 
   712  011F                     	;# 
   713  018C                     	;# 
   714  018D                     	;# 
   715  018E                     	;# 
   716  018F                     	;# 
   717  0190                     	;# 
   718  0191                     	;# 
   719  0192                     	;# 
   720  0196                     	;# 
   721  0197                     	;# 
   722  0198                     	;# 
   723  0199                     	;# 
   724  019A                     	;# 
   725  019B                     	;# 
   726  019C                     	;# 
   727  020C                     	;# 
   728  020C                     	;# 
   729  020D                     	;# 
   730  020E                     	;# 
   731  020F                     	;# 
   732  020F                     	;# 
   733  0210                     	;# 
   734  0210                     	;# 
   735  0211                     	;# 
   736  0211                     	;# 
   737  0212                     	;# 
   738  0212                     	;# 
   739  0213                     	;# 
   740  0214                     	;# 
   741  0215                     	;# 
   742  0215                     	;# 
   743  0216                     	;# 
   744  0216                     	;# 
   745  0217                     	;# 
   746  0217                     	;# 
   747  0218                     	;# 
   748  0218                     	;# 
   749  0219                     	;# 
   750  021A                     	;# 
   751  021B                     	;# 
   752  021B                     	;# 
   753  021C                     	;# 
   754  021C                     	;# 
   755  021D                     	;# 
   756  021D                     	;# 
   757  021E                     	;# 
   758  021F                     	;# 
   759  028C                     	;# 
   760  028C                     	;# 
   761  028D                     	;# 
   762  028D                     	;# 
   763  028E                     	;# 
   764  028F                     	;# 
   765  0290                     	;# 
   766  0290                     	;# 
   767  0291                     	;# 
   768  0292                     	;# 
   769  0292                     	;# 
   770  0293                     	;# 
   771  0293                     	;# 
   772  0294                     	;# 
   773  0295                     	;# 
   774  0296                     	;# 
   775  0296                     	;# 
   776  0297                     	;# 
   777  0298                     	;# 
   778  0298                     	;# 
   779  0299                     	;# 
   780  0299                     	;# 
   781  029A                     	;# 
   782  029B                     	;# 
   783  029C                     	;# 
   784  029C                     	;# 
   785  029D                     	;# 
   786  030C                     	;# 
   787  030C                     	;# 
   788  030D                     	;# 
   789  030E                     	;# 
   790  030F                     	;# 
   791  0310                     	;# 
   792  0310                     	;# 
   793  0311                     	;# 
   794  0312                     	;# 
   795  0313                     	;# 
   796  0314                     	;# 
   797  0314                     	;# 
   798  0315                     	;# 
   799  0316                     	;# 
   800  0317                     	;# 
   801  0318                     	;# 
   802  0318                     	;# 
   803  0319                     	;# 
   804  031A                     	;# 
   805  031B                     	;# 
   806  031C                     	;# 
   807  031C                     	;# 
   808  031D                     	;# 
   809  031E                     	;# 
   810  031F                     	;# 
   811  038C                     	;# 
   812  038C                     	;# 
   813  038D                     	;# 
   814  038E                     	;# 
   815  0390                     	;# 
   816  0390                     	;# 
   817  0391                     	;# 
   818  0392                     	;# 
   819  040C                     	;# 
   820  040D                     	;# 
   821  040E                     	;# 
   822  040F                     	;# 
   823  0410                     	;# 
   824  0411                     	;# 
   825  0416                     	;# 
   826  0416                     	;# 
   827  0417                     	;# 
   828  0418                     	;# 
   829  0418                     	;# 
   830  0419                     	;# 
   831  041A                     	;# 
   832  041A                     	;# 
   833  041B                     	;# 
   834  041C                     	;# 
   835  041C                     	;# 
   836  041D                     	;# 
   837  041E                     	;# 
   838  041F                     	;# 
   839  048C                     	;# 
   840  048C                     	;# 
   841  048D                     	;# 
   842  048E                     	;# 
   843  048F                     	;# 
   844  048F                     	;# 
   845  0490                     	;# 
   846  0491                     	;# 
   847  0492                     	;# 
   848  0492                     	;# 
   849  0493                     	;# 
   850  0494                     	;# 
   851  0495                     	;# 
   852  0495                     	;# 
   853  0496                     	;# 
   854  0497                     	;# 
   855  0498                     	;# 
   856  0499                     	;# 
   857  049A                     	;# 
   858  049B                     	;# 
   859  049C                     	;# 
   860  049D                     	;# 
   861  050C                     	;# 
   862  050C                     	;# 
   863  050D                     	;# 
   864  050E                     	;# 
   865  050F                     	;# 
   866  050F                     	;# 
   867  0510                     	;# 
   868  0511                     	;# 
   869  0512                     	;# 
   870  0512                     	;# 
   871  0513                     	;# 
   872  0514                     	;# 
   873  0515                     	;# 
   874  0515                     	;# 
   875  0516                     	;# 
   876  0517                     	;# 
   877  0518                     	;# 
   878  0519                     	;# 
   879  051A                     	;# 
   880  051B                     	;# 
   881  051C                     	;# 
   882  051D                     	;# 
   883  058C                     	;# 
   884  058C                     	;# 
   885  058D                     	;# 
   886  058E                     	;# 
   887  058F                     	;# 
   888  058F                     	;# 
   889  0590                     	;# 
   890  0591                     	;# 
   891  0592                     	;# 
   892  0593                     	;# 
   893  060C                     	;# 
   894  060D                     	;# 
   895  060E                     	;# 
   896  060F                     	;# 
   897  0610                     	;# 
   898  0611                     	;# 
   899  0612                     	;# 
   900  0613                     	;# 
   901  0614                     	;# 
   902  0616                     	;# 
   903  0617                     	;# 
   904  0618                     	;# 
   905  0619                     	;# 
   906  061A                     	;# 
   907  061B                     	;# 
   908  061C                     	;# 
   909  061D                     	;# 
   910  061E                     	;# 
   911  068C                     	;# 
   912  068D                     	;# 
   913  068E                     	;# 
   914  068F                     	;# 
   915  0690                     	;# 
   916  0691                     	;# 
   917  0692                     	;# 
   918  0693                     	;# 
   919  0694                     	;# 
   920  070C                     	;# 
   921  070D                     	;# 
   922  070E                     	;# 
   923  070F                     	;# 
   924  0710                     	;# 
   925  0711                     	;# 
   926  0712                     	;# 
   927  0713                     	;# 
   928  0714                     	;# 
   929  0716                     	;# 
   930  0717                     	;# 
   931  0718                     	;# 
   932  0719                     	;# 
   933  071A                     	;# 
   934  071B                     	;# 
   935  071C                     	;# 
   936  071D                     	;# 
   937  071E                     	;# 
   938  0796                     	;# 
   939  0797                     	;# 
   940  0798                     	;# 
   941  0799                     	;# 
   942  079A                     	;# 
   943  079B                     	;# 
   944  080C                     	;# 
   945  080D                     	;# 
   946  080E                     	;# 
   947  080F                     	;# 
   948  0810                     	;# 
   949  0811                     	;# 
   950  0812                     	;# 
   951  0813                     	;# 
   952  0814                     	;# 
   953  081A                     	;# 
   954  081B                     	;# 
   955  081C                     	;# 
   956  081D                     	;# 
   957  081E                     	;# 
   958  081F                     	;# 
   959  088C                     	;# 
   960  088D                     	;# 
   961  088E                     	;# 
   962  088F                     	;# 
   963  0890                     	;# 
   964  0891                     	;# 
   965  0892                     	;# 
   966  0893                     	;# 
   967  0895                     	;# 
   968  0896                     	;# 
   969  0897                     	;# 
   970  0898                     	;# 
   971  0899                     	;# 
   972  089A                     	;# 
   973  089B                     	;# 
   974  090C                     	;# 
   975  090E                     	;# 
   976  090F                     	;# 
   977  091F                     	;# 
   978  091F                     	;# 
   979  098F                     	;# 
   980  098F                     	;# 
   981  0990                     	;# 
   982  0991                     	;# 
   983  0992                     	;# 
   984  0993                     	;# 
   985  0994                     	;# 
   986  0995                     	;# 
   987  0996                     	;# 
   988  0997                     	;# 
   989  0E0F                     	;# 
   990  0E10                     	;# 
   991  0E11                     	;# 
   992  0E12                     	;# 
   993  0E13                     	;# 
   994  0E14                     	;# 
   995  0E15                     	;# 
   996  0E16                     	;# 
   997  0E17                     	;# 
   998  0E18                     	;# 
   999  0E19                     	;# 
  1000  0E1A                     	;# 
  1001  0E1B                     	;# 
  1002  0E1C                     	;# 
  1003  0E1D                     	;# 
  1004  0E1E                     	;# 
  1005  0E1F                     	;# 
  1006  0E20                     	;# 
  1007  0E21                     	;# 
  1008  0E22                     	;# 
  1009  0E23                     	;# 
  1010  0E24                     	;# 
  1011  0E25                     	;# 
  1012  0E26                     	;# 
  1013  0E27                     	;# 
  1014  0E28                     	;# 
  1015  0E29                     	;# 
  1016  0E2A                     	;# 
  1017  0E2B                     	;# 
  1018  0E2C                     	;# 
  1019  0E2D                     	;# 
  1020  0E2E                     	;# 
  1021  0E2F                     	;# 
  1022  0E30                     	;# 
  1023  0E31                     	;# 
  1024  0E32                     	;# 
  1025  0E33                     	;# 
  1026  0E34                     	;# 
  1027  0E35                     	;# 
  1028  0E36                     	;# 
  1029  0E37                     	;# 
  1030  0E8F                     	;# 
  1031  0E90                     	;# 
  1032  0E91                     	;# 
  1033  0E92                     	;# 
  1034  0E93                     	;# 
  1035  0E94                     	;# 
  1036  0E95                     	;# 
  1037  0E96                     	;# 
  1038  0E97                     	;# 
  1039  0E9C                     	;# 
  1040  0E9D                     	;# 
  1041  0E9E                     	;# 
  1042  0EA1                     	;# 
  1043  0EA2                     	;# 
  1044  0EA3                     	;# 
  1045  0EA4                     	;# 
  1046  0EA5                     	;# 
  1047  0EA9                     	;# 
  1048  0EAA                     	;# 
  1049  0EAB                     	;# 
  1050  0EAC                     	;# 
  1051  0EB1                     	;# 
  1052  0EB2                     	;# 
  1053  0EB3                     	;# 
  1054  0EB8                     	;# 
  1055  0EB9                     	;# 
  1056  0EBA                     	;# 
  1057  0EBB                     	;# 
  1058  0EBC                     	;# 
  1059  0EBD                     	;# 
  1060  0EBE                     	;# 
  1061  0EC3                     	;# 
  1062  0EC5                     	;# 
  1063  0EC6                     	;# 
  1064  0EC7                     	;# 
  1065  0EC8                     	;# 
  1066  0EC9                     	;# 
  1067  0ECA                     	;# 
  1068  0ECB                     	;# 
  1069  0ECC                     	;# 
  1070  0F10                     	;# 
  1071  0F11                     	;# 
  1072  0F12                     	;# 
  1073  0F13                     	;# 
  1074  0F14                     	;# 
  1075  0F15                     	;# 
  1076  0F16                     	;# 
  1077  0F17                     	;# 
  1078  0F18                     	;# 
  1079  0F19                     	;# 
  1080  0F1A                     	;# 
  1081  0F1B                     	;# 
  1082  0F1C                     	;# 
  1083  0F1D                     	;# 
  1084  0F1E                     	;# 
  1085  0F1F                     	;# 
  1086  0F20                     	;# 
  1087  0F21                     	;# 
  1088  0F22                     	;# 
  1089  0F23                     	;# 
  1090  0F24                     	;# 
  1091  0F25                     	;# 
  1092  0F26                     	;# 
  1093  0F27                     	;# 
  1094  0F38                     	;# 
  1095  0F39                     	;# 
  1096  0F3A                     	;# 
  1097  0F3B                     	;# 
  1098  0F3C                     	;# 
  1099  0F3D                     	;# 
  1100  0F3E                     	;# 
  1101  0F3F                     	;# 
  1102  0F40                     	;# 
  1103  0F41                     	;# 
  1104  0F43                     	;# 
  1105  0F44                     	;# 
  1106  0F45                     	;# 
  1107  0F46                     	;# 
  1108  0F47                     	;# 
  1109  0F48                     	;# 
  1110  0F49                     	;# 
  1111  0F4A                     	;# 
  1112  0F4B                     	;# 
  1113  0F4C                     	;# 
  1114  0F4E                     	;# 
  1115  0F4F                     	;# 
  1116  0F50                     	;# 
  1117  0F51                     	;# 
  1118  0F52                     	;# 
  1119  0F53                     	;# 
  1120  0F54                     	;# 
  1121  0F55                     	;# 
  1122  0F56                     	;# 
  1123  0F57                     	;# 
  1124  0F65                     	;# 
  1125  0F68                     	;# 
  1126  0F69                     	;# 
  1127  0F6A                     	;# 
  1128  0F6B                     	;# 
  1129  0FE4                     	;# 
  1130  0FE5                     	;# 
  1131  0FE6                     	;# 
  1132  0FE7                     	;# 
  1133  0FE8                     	;# 
  1134  0FE9                     	;# 
  1135  0FEA                     	;# 
  1136  0FEB                     	;# 
  1137  0FED                     	;# 
  1138  0FEE                     	;# 
  1139  0FEF                     	;# 
  1140  0000                     	;# 
  1141  0001                     	;# 
  1142  0002                     	;# 
  1143  0003                     	;# 
  1144  0004                     	;# 
  1145  0005                     	;# 
  1146  0006                     	;# 
  1147  0007                     	;# 
  1148  0008                     	;# 
  1149  0009                     	;# 
  1150  000A                     	;# 
  1151  000B                     	;# 
  1152  000C                     	;# 
  1153  000D                     	;# 
  1154  000E                     	;# 
  1155  0010                     	;# 
  1156  0011                     	;# 
  1157  0012                     	;# 
  1158  0013                     	;# 
  1159  0016                     	;# 
  1160  0017                     	;# 
  1161  0018                     	;# 
  1162  001C                     	;# 
  1163  001C                     	;# 
  1164  001D                     	;# 
  1165  001D                     	;# 
  1166  001E                     	;# 
  1167  001F                     	;# 
  1168  008C                     	;# 
  1169  008C                     	;# 
  1170  008D                     	;# 
  1171  008E                     	;# 
  1172  008E                     	;# 
  1173  008F                     	;# 
  1174  0090                     	;# 
  1175  0090                     	;# 
  1176  0091                     	;# 
  1177  0093                     	;# 
  1178  0094                     	;# 
  1179  0095                     	;# 
  1180  0096                     	;# 
  1181  0097                     	;# 
  1182  0098                     	;# 
  1183  0099                     	;# 
  1184  009A                     	;# 
  1185  009B                     	;# 
  1186  009C                     	;# 
  1187  009D                     	;# 
  1188  009E                     	;# 
  1189  010C                     	;# 
  1190  010D                     	;# 
  1191  010E                     	;# 
  1192  010E                     	;# 
  1193  010F                     	;# 
  1194  0110                     	;# 
  1195  0110                     	;# 
  1196  0111                     	;# 
  1197  0112                     	;# 
  1198  0112                     	;# 
  1199  0113                     	;# 
  1200  0114                     	;# 
  1201  0114                     	;# 
  1202  0115                     	;# 
  1203  0116                     	;# 
  1204  0116                     	;# 
  1205  0117                     	;# 
  1206  0119                     	;# 
  1207  0119                     	;# 
  1208  0119                     	;# 
  1209  011A                     	;# 
  1210  011A                     	;# 
  1211  011A                     	;# 
  1212  011B                     	;# 
  1213  011B                     	;# 
  1214  011B                     	;# 
  1215  011B                     	;# 
  1216  011B                     	;# 
  1217  011C                     	;# 
  1218  011C                     	;# 
  1219  011C                     	;# 
  1220  011D                     	;# 
  1221  011D                     	;# 
  1222  011D                     	;# 
  1223  011E                     	;# 
  1224  011E                     	;# 
  1225  011E                     	;# 
  1226  011F                     	;# 
  1227  011F                     	;# 
  1228  011F                     	;# 
  1229  011F                     	;# 
  1230  011F                     	;# 
  1231  018C                     	;# 
  1232  018D                     	;# 
  1233  018E                     	;# 
  1234  018F                     	;# 
  1235  0190                     	;# 
  1236  0191                     	;# 
  1237  0192                     	;# 
  1238  0196                     	;# 
  1239  0197                     	;# 
  1240  0198                     	;# 
  1241  0199                     	;# 
  1242  019A                     	;# 
  1243  019B                     	;# 
  1244  019C                     	;# 
  1245  020C                     	;# 
  1246  020C                     	;# 
  1247  020D                     	;# 
  1248  020E                     	;# 
  1249  020F                     	;# 
  1250  020F                     	;# 
  1251  0210                     	;# 
  1252  0210                     	;# 
  1253  0211                     	;# 
  1254  0211                     	;# 
  1255  0212                     	;# 
  1256  0212                     	;# 
  1257  0213                     	;# 
  1258  0214                     	;# 
  1259  0215                     	;# 
  1260  0215                     	;# 
  1261  0216                     	;# 
  1262  0216                     	;# 
  1263  0217                     	;# 
  1264  0217                     	;# 
  1265  0218                     	;# 
  1266  0218                     	;# 
  1267  0219                     	;# 
  1268  021A                     	;# 
  1269  021B                     	;# 
  1270  021B                     	;# 
  1271  021C                     	;# 
  1272  021C                     	;# 
  1273  021D                     	;# 
  1274  021D                     	;# 
  1275  021E                     	;# 
  1276  021F                     	;# 
  1277  028C                     	;# 
  1278  028C                     	;# 
  1279  028D                     	;# 
  1280  028D                     	;# 
  1281  028E                     	;# 
  1282  028F                     	;# 
  1283  0290                     	;# 
  1284  0290                     	;# 
  1285  0291                     	;# 
  1286  0292                     	;# 
  1287  0292                     	;# 
  1288  0293                     	;# 
  1289  0293                     	;# 
  1290  0294                     	;# 
  1291  0295                     	;# 
  1292  0296                     	;# 
  1293  0296                     	;# 
  1294  0297                     	;# 
  1295  0298                     	;# 
  1296  0298                     	;# 
  1297  0299                     	;# 
  1298  0299                     	;# 
  1299  029A                     	;# 
  1300  029B                     	;# 
  1301  029C                     	;# 
  1302  029C                     	;# 
  1303  029D                     	;# 
  1304  030C                     	;# 
  1305  030C                     	;# 
  1306  030D                     	;# 
  1307  030E                     	;# 
  1308  030F                     	;# 
  1309  0310                     	;# 
  1310  0310                     	;# 
  1311  0311                     	;# 
  1312  0312                     	;# 
  1313  0313                     	;# 
  1314  0314                     	;# 
  1315  0314                     	;# 
  1316  0315                     	;# 
  1317  0316                     	;# 
  1318  0317                     	;# 
  1319  0318                     	;# 
  1320  0318                     	;# 
  1321  0319                     	;# 
  1322  031A                     	;# 
  1323  031B                     	;# 
  1324  031C                     	;# 
  1325  031C                     	;# 
  1326  031D                     	;# 
  1327  031E                     	;# 
  1328  031F                     	;# 
  1329  038C                     	;# 
  1330  038C                     	;# 
  1331  038D                     	;# 
  1332  038E                     	;# 
  1333  0390                     	;# 
  1334  0390                     	;# 
  1335  0391                     	;# 
  1336  0392                     	;# 
  1337  040C                     	;# 
  1338  040D                     	;# 
  1339  040E                     	;# 
  1340  040F                     	;# 
  1341  0410                     	;# 
  1342  0411                     	;# 
  1343  0416                     	;# 
  1344  0416                     	;# 
  1345  0417                     	;# 
  1346  0418                     	;# 
  1347  0418                     	;# 
  1348  0419                     	;# 
  1349  041A                     	;# 
  1350  041A                     	;# 
  1351  041B                     	;# 
  1352  041C                     	;# 
  1353  041C                     	;# 
  1354  041D                     	;# 
  1355  041E                     	;# 
  1356  041F                     	;# 
  1357  048C                     	;# 
  1358  048C                     	;# 
  1359  048D                     	;# 
  1360  048E                     	;# 
  1361  048F                     	;# 
  1362  048F                     	;# 
  1363  0490                     	;# 
  1364  0491                     	;# 
  1365  0492                     	;# 
  1366  0492                     	;# 
  1367  0493                     	;# 
  1368  0494                     	;# 
  1369  0495                     	;# 
  1370  0495                     	;# 
  1371  0496                     	;# 
  1372  0497                     	;# 
  1373  0498                     	;# 
  1374  0499                     	;# 
  1375  049A                     	;# 
  1376  049B                     	;# 
  1377  049C                     	;# 
  1378  049D                     	;# 
  1379  050C                     	;# 
  1380  050C                     	;# 
  1381  050D                     	;# 
  1382  050E                     	;# 
  1383  050F                     	;# 
  1384  050F                     	;# 
  1385  0510                     	;# 
  1386  0511                     	;# 
  1387  0512                     	;# 
  1388  0512                     	;# 
  1389  0513                     	;# 
  1390  0514                     	;# 
  1391  0515                     	;# 
  1392  0515                     	;# 
  1393  0516                     	;# 
  1394  0517                     	;# 
  1395  0518                     	;# 
  1396  0519                     	;# 
  1397  051A                     	;# 
  1398  051B                     	;# 
  1399  051C                     	;# 
  1400  051D                     	;# 
  1401  058C                     	;# 
  1402  058C                     	;# 
  1403  058D                     	;# 
  1404  058E                     	;# 
  1405  058F                     	;# 
  1406  058F                     	;# 
  1407  0590                     	;# 
  1408  0591                     	;# 
  1409  0592                     	;# 
  1410  0593                     	;# 
  1411  060C                     	;# 
  1412  060D                     	;# 
  1413  060E                     	;# 
  1414  060F                     	;# 
  1415  0610                     	;# 
  1416  0611                     	;# 
  1417  0612                     	;# 
  1418  0613                     	;# 
  1419  0614                     	;# 
  1420  0616                     	;# 
  1421  0617                     	;# 
  1422  0618                     	;# 
  1423  0619                     	;# 
  1424  061A                     	;# 
  1425  061B                     	;# 
  1426  061C                     	;# 
  1427  061D                     	;# 
  1428  061E                     	;# 
  1429  068C                     	;# 
  1430  068D                     	;# 
  1431  068E                     	;# 
  1432  068F                     	;# 
  1433  0690                     	;# 
  1434  0691                     	;# 
  1435  0692                     	;# 
  1436  0693                     	;# 
  1437  0694                     	;# 
  1438  070C                     	;# 
  1439  070D                     	;# 
  1440  070E                     	;# 
  1441  070F                     	;# 
  1442  0710                     	;# 
  1443  0711                     	;# 
  1444  0712                     	;# 
  1445  0713                     	;# 
  1446  0714                     	;# 
  1447  0716                     	;# 
  1448  0717                     	;# 
  1449  0718                     	;# 
  1450  0719                     	;# 
  1451  071A                     	;# 
  1452  071B                     	;# 
  1453  071C                     	;# 
  1454  071D                     	;# 
  1455  071E                     	;# 
  1456  0796                     	;# 
  1457  0797                     	;# 
  1458  0798                     	;# 
  1459  0799                     	;# 
  1460  079A                     	;# 
  1461  079B                     	;# 
  1462  080C                     	;# 
  1463  080D                     	;# 
  1464  080E                     	;# 
  1465  080F                     	;# 
  1466  0810                     	;# 
  1467  0811                     	;# 
  1468  0812                     	;# 
  1469  0813                     	;# 
  1470  0814                     	;# 
  1471  081A                     	;# 
  1472  081B                     	;# 
  1473  081C                     	;# 
  1474  081D                     	;# 
  1475  081E                     	;# 
  1476  081F                     	;# 
  1477  088C                     	;# 
  1478  088D                     	;# 
  1479  088E                     	;# 
  1480  088F                     	;# 
  1481  0890                     	;# 
  1482  0891                     	;# 
  1483  0892                     	;# 
  1484  0893                     	;# 
  1485  0895                     	;# 
  1486  0896                     	;# 
  1487  0897                     	;# 
  1488  0898                     	;# 
  1489  0899                     	;# 
  1490  089A                     	;# 
  1491  089B                     	;# 
  1492  090C                     	;# 
  1493  090E                     	;# 
  1494  090F                     	;# 
  1495  091F                     	;# 
  1496  091F                     	;# 
  1497  098F                     	;# 
  1498  098F                     	;# 
  1499  0990                     	;# 
  1500  0991                     	;# 
  1501  0992                     	;# 
  1502  0993                     	;# 
  1503  0994                     	;# 
  1504  0995                     	;# 
  1505  0996                     	;# 
  1506  0997                     	;# 
  1507  0E0F                     	;# 
  1508  0E10                     	;# 
  1509  0E11                     	;# 
  1510  0E12                     	;# 
  1511  0E13                     	;# 
  1512  0E14                     	;# 
  1513  0E15                     	;# 
  1514  0E16                     	;# 
  1515  0E17                     	;# 
  1516  0E18                     	;# 
  1517  0E19                     	;# 
  1518  0E1A                     	;# 
  1519  0E1B                     	;# 
  1520  0E1C                     	;# 
  1521  0E1D                     	;# 
  1522  0E1E                     	;# 
  1523  0E1F                     	;# 
  1524  0E20                     	;# 
  1525  0E21                     	;# 
  1526  0E22                     	;# 
  1527  0E23                     	;# 
  1528  0E24                     	;# 
  1529  0E25                     	;# 
  1530  0E26                     	;# 
  1531  0E27                     	;# 
  1532  0E28                     	;# 
  1533  0E29                     	;# 
  1534  0E2A                     	;# 
  1535  0E2B                     	;# 
  1536  0E2C                     	;# 
  1537  0E2D                     	;# 
  1538  0E2E                     	;# 
  1539  0E2F                     	;# 
  1540  0E30                     	;# 
  1541  0E31                     	;# 
  1542  0E32                     	;# 
  1543  0E33                     	;# 
  1544  0E34                     	;# 
  1545  0E35                     	;# 
  1546  0E36                     	;# 
  1547  0E37                     	;# 
  1548  0E8F                     	;# 
  1549  0E90                     	;# 
  1550  0E91                     	;# 
  1551  0E92                     	;# 
  1552  0E93                     	;# 
  1553  0E94                     	;# 
  1554  0E95                     	;# 
  1555  0E96                     	;# 
  1556  0E97                     	;# 
  1557  0E9C                     	;# 
  1558  0E9D                     	;# 
  1559  0E9E                     	;# 
  1560  0EA1                     	;# 
  1561  0EA2                     	;# 
  1562  0EA3                     	;# 
  1563  0EA4                     	;# 
  1564  0EA5                     	;# 
  1565  0EA9                     	;# 
  1566  0EAA                     	;# 
  1567  0EAB                     	;# 
  1568  0EAC                     	;# 
  1569  0EB1                     	;# 
  1570  0EB2                     	;# 
  1571  0EB3                     	;# 
  1572  0EB8                     	;# 
  1573  0EB9                     	;# 
  1574  0EBA                     	;# 
  1575  0EBB                     	;# 
  1576  0EBC                     	;# 
  1577  0EBD                     	;# 
  1578  0EBE                     	;# 
  1579  0EC3                     	;# 
  1580  0EC5                     	;# 
  1581  0EC6                     	;# 
  1582  0EC7                     	;# 
  1583  0EC8                     	;# 
  1584  0EC9                     	;# 
  1585  0ECA                     	;# 
  1586  0ECB                     	;# 
  1587  0ECC                     	;# 
  1588  0F10                     	;# 
  1589  0F11                     	;# 
  1590  0F12                     	;# 
  1591  0F13                     	;# 
  1592  0F14                     	;# 
  1593  0F15                     	;# 
  1594  0F16                     	;# 
  1595  0F17                     	;# 
  1596  0F18                     	;# 
  1597  0F19                     	;# 
  1598  0F1A                     	;# 
  1599  0F1B                     	;# 
  1600  0F1C                     	;# 
  1601  0F1D                     	;# 
  1602  0F1E                     	;# 
  1603  0F1F                     	;# 
  1604  0F20                     	;# 
  1605  0F21                     	;# 
  1606  0F22                     	;# 
  1607  0F23                     	;# 
  1608  0F24                     	;# 
  1609  0F25                     	;# 
  1610  0F26                     	;# 
  1611  0F27                     	;# 
  1612  0F38                     	;# 
  1613  0F39                     	;# 
  1614  0F3A                     	;# 
  1615  0F3B                     	;# 
  1616  0F3C                     	;# 
  1617  0F3D                     	;# 
  1618  0F3E                     	;# 
  1619  0F3F                     	;# 
  1620  0F40                     	;# 
  1621  0F41                     	;# 
  1622  0F43                     	;# 
  1623  0F44                     	;# 
  1624  0F45                     	;# 
  1625  0F46                     	;# 
  1626  0F47                     	;# 
  1627  0F48                     	;# 
  1628  0F49                     	;# 
  1629  0F4A                     	;# 
  1630  0F4B                     	;# 
  1631  0F4C                     	;# 
  1632  0F4E                     	;# 
  1633  0F4F                     	;# 
  1634  0F50                     	;# 
  1635  0F51                     	;# 
  1636  0F52                     	;# 
  1637  0F53                     	;# 
  1638  0F54                     	;# 
  1639  0F55                     	;# 
  1640  0F56                     	;# 
  1641  0F57                     	;# 
  1642  0F65                     	;# 
  1643  0F68                     	;# 
  1644  0F69                     	;# 
  1645  0F6A                     	;# 
  1646  0F6B                     	;# 
  1647  0FE4                     	;# 
  1648  0FE5                     	;# 
  1649  0FE6                     	;# 
  1650  0FE7                     	;# 
  1651  0FE8                     	;# 
  1652  0FE9                     	;# 
  1653  0FEA                     	;# 
  1654  0FEB                     	;# 
  1655  0FED                     	;# 
  1656  0FEE                     	;# 
  1657  0FEF                     	;# 
  1658  0000                     	;# 
  1659  0001                     	;# 
  1660  0002                     	;# 
  1661  0003                     	;# 
  1662  0004                     	;# 
  1663  0005                     	;# 
  1664  0006                     	;# 
  1665  0007                     	;# 
  1666  0008                     	;# 
  1667  0009                     	;# 
  1668  000A                     	;# 
  1669  000B                     	;# 
  1670  000C                     	;# 
  1671  000D                     	;# 
  1672  000E                     	;# 
  1673  0010                     	;# 
  1674  0011                     	;# 
  1675  0012                     	;# 
  1676  0013                     	;# 
  1677  0016                     	;# 
  1678  0017                     	;# 
  1679  0018                     	;# 
  1680  001C                     	;# 
  1681  001C                     	;# 
  1682  001D                     	;# 
  1683  001D                     	;# 
  1684  001E                     	;# 
  1685  001F                     	;# 
  1686  008C                     	;# 
  1687  008C                     	;# 
  1688  008D                     	;# 
  1689  008E                     	;# 
  1690  008E                     	;# 
  1691  008F                     	;# 
  1692  0090                     	;# 
  1693  0090                     	;# 
  1694  0091                     	;# 
  1695  0093                     	;# 
  1696  0094                     	;# 
  1697  0095                     	;# 
  1698  0096                     	;# 
  1699  0097                     	;# 
  1700  0098                     	;# 
  1701  0099                     	;# 
  1702  009A                     	;# 
  1703  009B                     	;# 
  1704  009C                     	;# 
  1705  009D                     	;# 
  1706  009E                     	;# 
  1707  010C                     	;# 
  1708  010D                     	;# 
  1709  010E                     	;# 
  1710  010E                     	;# 
  1711  010F                     	;# 
  1712  0110                     	;# 
  1713  0110                     	;# 
  1714  0111                     	;# 
  1715  0112                     	;# 
  1716  0112                     	;# 
  1717  0113                     	;# 
  1718  0114                     	;# 
  1719  0114                     	;# 
  1720  0115                     	;# 
  1721  0116                     	;# 
  1722  0116                     	;# 
  1723  0117                     	;# 
  1724  0119                     	;# 
  1725  0119                     	;# 
  1726  0119                     	;# 
  1727  011A                     	;# 
  1728  011A                     	;# 
  1729  011A                     	;# 
  1730  011B                     	;# 
  1731  011B                     	;# 
  1732  011B                     	;# 
  1733  011B                     	;# 
  1734  011B                     	;# 
  1735  011C                     	;# 
  1736  011C                     	;# 
  1737  011C                     	;# 
  1738  011D                     	;# 
  1739  011D                     	;# 
  1740  011D                     	;# 
  1741  011E                     	;# 
  1742  011E                     	;# 
  1743  011E                     	;# 
  1744  011F                     	;# 
  1745  011F                     	;# 
  1746  011F                     	;# 
  1747  011F                     	;# 
  1748  011F                     	;# 
  1749  018C                     	;# 
  1750  018D                     	;# 
  1751  018E                     	;# 
  1752  018F                     	;# 
  1753  0190                     	;# 
  1754  0191                     	;# 
  1755  0192                     	;# 
  1756  0196                     	;# 
  1757  0197                     	;# 
  1758  0198                     	;# 
  1759  0199                     	;# 
  1760  019A                     	;# 
  1761  019B                     	;# 
  1762  019C                     	;# 
  1763  020C                     	;# 
  1764  020C                     	;# 
  1765  020D                     	;# 
  1766  020E                     	;# 
  1767  020F                     	;# 
  1768  020F                     	;# 
  1769  0210                     	;# 
  1770  0210                     	;# 
  1771  0211                     	;# 
  1772  0211                     	;# 
  1773  0212                     	;# 
  1774  0212                     	;# 
  1775  0213                     	;# 
  1776  0214                     	;# 
  1777  0215                     	;# 
  1778  0215                     	;# 
  1779  0216                     	;# 
  1780  0216                     	;# 
  1781  0217                     	;# 
  1782  0217                     	;# 
  1783  0218                     	;# 
  1784  0218                     	;# 
  1785  0219                     	;# 
  1786  021A                     	;# 
  1787  021B                     	;# 
  1788  021B                     	;# 
  1789  021C                     	;# 
  1790  021C                     	;# 
  1791  021D                     	;# 
  1792  021D                     	;# 
  1793  021E                     	;# 
  1794  021F                     	;# 
  1795  028C                     	;# 
  1796  028C                     	;# 
  1797  028D                     	;# 
  1798  028D                     	;# 
  1799  028E                     	;# 
  1800  028F                     	;# 
  1801  0290                     	;# 
  1802  0290                     	;# 
  1803  0291                     	;# 
  1804  0292                     	;# 
  1805  0292                     	;# 
  1806  0293                     	;# 
  1807  0293                     	;# 
  1808  0294                     	;# 
  1809  0295                     	;# 
  1810  0296                     	;# 
  1811  0296                     	;# 
  1812  0297                     	;# 
  1813  0298                     	;# 
  1814  0298                     	;# 
  1815  0299                     	;# 
  1816  0299                     	;# 
  1817  029A                     	;# 
  1818  029B                     	;# 
  1819  029C                     	;# 
  1820  029C                     	;# 
  1821  029D                     	;# 
  1822  030C                     	;# 
  1823  030C                     	;# 
  1824  030D                     	;# 
  1825  030E                     	;# 
  1826  030F                     	;# 
  1827  0310                     	;# 
  1828  0310                     	;# 
  1829  0311                     	;# 
  1830  0312                     	;# 
  1831  0313                     	;# 
  1832  0314                     	;# 
  1833  0314                     	;# 
  1834  0315                     	;# 
  1835  0316                     	;# 
  1836  0317                     	;# 
  1837  0318                     	;# 
  1838  0318                     	;# 
  1839  0319                     	;# 
  1840  031A                     	;# 
  1841  031B                     	;# 
  1842  031C                     	;# 
  1843  031C                     	;# 
  1844  031D                     	;# 
  1845  031E                     	;# 
  1846  031F                     	;# 
  1847  038C                     	;# 
  1848  038C                     	;# 
  1849  038D                     	;# 
  1850  038E                     	;# 
  1851  0390                     	;# 
  1852  0390                     	;# 
  1853  0391                     	;# 
  1854  0392                     	;# 
  1855  040C                     	;# 
  1856  040D                     	;# 
  1857  040E                     	;# 
  1858  040F                     	;# 
  1859  0410                     	;# 
  1860  0411                     	;# 
  1861  0416                     	;# 
  1862  0416                     	;# 
  1863  0417                     	;# 
  1864  0418                     	;# 
  1865  0418                     	;# 
  1866  0419                     	;# 
  1867  041A                     	;# 
  1868  041A                     	;# 
  1869  041B                     	;# 
  1870  041C                     	;# 
  1871  041C                     	;# 
  1872  041D                     	;# 
  1873  041E                     	;# 
  1874  041F                     	;# 
  1875  048C                     	;# 
  1876  048C                     	;# 
  1877  048D                     	;# 
  1878  048E                     	;# 
  1879  048F                     	;# 
  1880  048F                     	;# 
  1881  0490                     	;# 
  1882  0491                     	;# 
  1883  0492                     	;# 
  1884  0492                     	;# 
  1885  0493                     	;# 
  1886  0494                     	;# 
  1887  0495                     	;# 
  1888  0495                     	;# 
  1889  0496                     	;# 
  1890  0497                     	;# 
  1891  0498                     	;# 
  1892  0499                     	;# 
  1893  049A                     	;# 
  1894  049B                     	;# 
  1895  049C                     	;# 
  1896  049D                     	;# 
  1897  050C                     	;# 
  1898  050C                     	;# 
  1899  050D                     	;# 
  1900  050E                     	;# 
  1901  050F                     	;# 
  1902  050F                     	;# 
  1903  0510                     	;# 
  1904  0511                     	;# 
  1905  0512                     	;# 
  1906  0512                     	;# 
  1907  0513                     	;# 
  1908  0514                     	;# 
  1909  0515                     	;# 
  1910  0515                     	;# 
  1911  0516                     	;# 
  1912  0517                     	;# 
  1913  0518                     	;# 
  1914  0519                     	;# 
  1915  051A                     	;# 
  1916  051B                     	;# 
  1917  051C                     	;# 
  1918  051D                     	;# 
  1919  058C                     	;# 
  1920  058C                     	;# 
  1921  058D                     	;# 
  1922  058E                     	;# 
  1923  058F                     	;# 
  1924  058F                     	;# 
  1925  0590                     	;# 
  1926  0591                     	;# 
  1927  0592                     	;# 
  1928  0593                     	;# 
  1929  060C                     	;# 
  1930  060D                     	;# 
  1931  060E                     	;# 
  1932  060F                     	;# 
  1933  0610                     	;# 
  1934  0611                     	;# 
  1935  0612                     	;# 
  1936  0613                     	;# 
  1937  0614                     	;# 
  1938  0616                     	;# 
  1939  0617                     	;# 
  1940  0618                     	;# 
  1941  0619                     	;# 
  1942  061A                     	;# 
  1943  061B                     	;# 
  1944  061C                     	;# 
  1945  061D                     	;# 
  1946  061E                     	;# 
  1947  068C                     	;# 
  1948  068D                     	;# 
  1949  068E                     	;# 
  1950  068F                     	;# 
  1951  0690                     	;# 
  1952  0691                     	;# 
  1953  0692                     	;# 
  1954  0693                     	;# 
  1955  0694                     	;# 
  1956  070C                     	;# 
  1957  070D                     	;# 
  1958  070E                     	;# 
  1959  070F                     	;# 
  1960  0710                     	;# 
  1961  0711                     	;# 
  1962  0712                     	;# 
  1963  0713                     	;# 
  1964  0714                     	;# 
  1965  0716                     	;# 
  1966  0717                     	;# 
  1967  0718                     	;# 
  1968  0719                     	;# 
  1969  071A                     	;# 
  1970  071B                     	;# 
  1971  071C                     	;# 
  1972  071D                     	;# 
  1973  071E                     	;# 
  1974  0796                     	;# 
  1975  0797                     	;# 
  1976  0798                     	;# 
  1977  0799                     	;# 
  1978  079A                     	;# 
  1979  079B                     	;# 
  1980  080C                     	;# 
  1981  080D                     	;# 
  1982  080E                     	;# 
  1983  080F                     	;# 
  1984  0810                     	;# 
  1985  0811                     	;# 
  1986  0812                     	;# 
  1987  0813                     	;# 
  1988  0814                     	;# 
  1989  081A                     	;# 
  1990  081B                     	;# 
  1991  081C                     	;# 
  1992  081D                     	;# 
  1993  081E                     	;# 
  1994  081F                     	;# 
  1995  088C                     	;# 
  1996  088D                     	;# 
  1997  088E                     	;# 
  1998  088F                     	;# 
  1999  0890                     	;# 
  2000  0891                     	;# 
  2001  0892                     	;# 
  2002  0893                     	;# 
  2003  0895                     	;# 
  2004  0896                     	;# 
  2005  0897                     	;# 
  2006  0898                     	;# 
  2007  0899                     	;# 
  2008  089A                     	;# 
  2009  089B                     	;# 
  2010  090C                     	;# 
  2011  090E                     	;# 
  2012  090F                     	;# 
  2013  091F                     	;# 
  2014  091F                     	;# 
  2015  098F                     	;# 
  2016  098F                     	;# 
  2017  0990                     	;# 
  2018  0991                     	;# 
  2019  0992                     	;# 
  2020  0993                     	;# 
  2021  0994                     	;# 
  2022  0995                     	;# 
  2023  0996                     	;# 
  2024  0997                     	;# 
  2025  0E0F                     	;# 
  2026  0E10                     	;# 
  2027  0E11                     	;# 
  2028  0E12                     	;# 
  2029  0E13                     	;# 
  2030  0E14                     	;# 
  2031  0E15                     	;# 
  2032  0E16                     	;# 
  2033  0E17                     	;# 
  2034  0E18                     	;# 
  2035  0E19                     	;# 
  2036  0E1A                     	;# 
  2037  0E1B                     	;# 
  2038  0E1C                     	;# 
  2039  0E1D                     	;# 
  2040  0E1E                     	;# 
  2041  0E1F                     	;# 
  2042  0E20                     	;# 
  2043  0E21                     	;# 
  2044  0E22                     	;# 
  2045  0E23                     	;# 
  2046  0E24                     	;# 
  2047  0E25                     	;# 
  2048  0E26                     	;# 
  2049  0E27                     	;# 
  2050  0E28                     	;# 
  2051  0E29                     	;# 
  2052  0E2A                     	;# 
  2053  0E2B                     	;# 
  2054  0E2C                     	;# 
  2055  0E2D                     	;# 
  2056  0E2E                     	;# 
  2057  0E2F                     	;# 
  2058  0E30                     	;# 
  2059  0E31                     	;# 
  2060  0E32                     	;# 
  2061  0E33                     	;# 
  2062  0E34                     	;# 
  2063  0E35                     	;# 
  2064  0E36                     	;# 
  2065  0E37                     	;# 
  2066  0E8F                     	;# 
  2067  0E90                     	;# 
  2068  0E91                     	;# 
  2069  0E92                     	;# 
  2070  0E93                     	;# 
  2071  0E94                     	;# 
  2072  0E95                     	;# 
  2073  0E96                     	;# 
  2074  0E97                     	;# 
  2075  0E9C                     	;# 
  2076  0E9D                     	;# 
  2077  0E9E                     	;# 
  2078  0EA1                     	;# 
  2079  0EA2                     	;# 
  2080  0EA3                     	;# 
  2081  0EA4                     	;# 
  2082  0EA5                     	;# 
  2083  0EA9                     	;# 
  2084  0EAA                     	;# 
  2085  0EAB                     	;# 
  2086  0EAC                     	;# 
  2087  0EB1                     	;# 
  2088  0EB2                     	;# 
  2089  0EB3                     	;# 
  2090  0EB8                     	;# 
  2091  0EB9                     	;# 
  2092  0EBA                     	;# 
  2093  0EBB                     	;# 
  2094  0EBC                     	;# 
  2095  0EBD                     	;# 
  2096  0EBE                     	;# 
  2097  0EC3                     	;# 
  2098  0EC5                     	;# 
  2099  0EC6                     	;# 
  2100  0EC7                     	;# 
  2101  0EC8                     	;# 
  2102  0EC9                     	;# 
  2103  0ECA                     	;# 
  2104  0ECB                     	;# 
  2105  0ECC                     	;# 
  2106  0F10                     	;# 
  2107  0F11                     	;# 
  2108  0F12                     	;# 
  2109  0F13                     	;# 
  2110  0F14                     	;# 
  2111  0F15                     	;# 
  2112  0F16                     	;# 
  2113  0F17                     	;# 
  2114  0F18                     	;# 
  2115  0F19                     	;# 
  2116  0F1A                     	;# 
  2117  0F1B                     	;# 
  2118  0F1C                     	;# 
  2119  0F1D                     	;# 
  2120  0F1E                     	;# 
  2121  0F1F                     	;# 
  2122  0F20                     	;# 
  2123  0F21                     	;# 
  2124  0F22                     	;# 
  2125  0F23                     	;# 
  2126  0F24                     	;# 
  2127  0F25                     	;# 
  2128  0F26                     	;# 
  2129  0F27                     	;# 
  2130  0F38                     	;# 
  2131  0F39                     	;# 
  2132  0F3A                     	;# 
  2133  0F3B                     	;# 
  2134  0F3C                     	;# 
  2135  0F3D                     	;# 
  2136  0F3E                     	;# 
  2137  0F3F                     	;# 
  2138  0F40                     	;# 
  2139  0F41                     	;# 
  2140  0F43                     	;# 
  2141  0F44                     	;# 
  2142  0F45                     	;# 
  2143  0F46                     	;# 
  2144  0F47                     	;# 
  2145  0F48                     	;# 
  2146  0F49                     	;# 
  2147  0F4A                     	;# 
  2148  0F4B                     	;# 
  2149  0F4C                     	;# 
  2150  0F4E                     	;# 
  2151  0F4F                     	;# 
  2152  0F50                     	;# 
  2153  0F51                     	;# 
  2154  0F52                     	;# 
  2155  0F53                     	;# 
  2156  0F54                     	;# 
  2157  0F55                     	;# 
  2158  0F56                     	;# 
  2159  0F57                     	;# 
  2160  0F65                     	;# 
  2161  0F68                     	;# 
  2162  0F69                     	;# 
  2163  0F6A                     	;# 
  2164  0F6B                     	;# 
  2165  0FE4                     	;# 
  2166  0FE5                     	;# 
  2167  0FE6                     	;# 
  2168  0FE7                     	;# 
  2169  0FE8                     	;# 
  2170  0FE9                     	;# 
  2171  0FEA                     	;# 
  2172  0FEB                     	;# 
  2173  0FED                     	;# 
  2174  0FEE                     	;# 
  2175  0FEF                     	;# 
  2176  0000                     	;# 
  2177  0001                     	;# 
  2178  0002                     	;# 
  2179  0003                     	;# 
  2180  0004                     	;# 
  2181  0005                     	;# 
  2182  0006                     	;# 
  2183  0007                     	;# 
  2184  0008                     	;# 
  2185  0009                     	;# 
  2186  000A                     	;# 
  2187  000B                     	;# 
  2188  000C                     	;# 
  2189  000D                     	;# 
  2190  000E                     	;# 
  2191  0010                     	;# 
  2192  0011                     	;# 
  2193  0012                     	;# 
  2194  0013                     	;# 
  2195  0016                     	;# 
  2196  0017                     	;# 
  2197  0018                     	;# 
  2198  001C                     	;# 
  2199  001C                     	;# 
  2200  001D                     	;# 
  2201  001D                     	;# 
  2202  001E                     	;# 
  2203  001F                     	;# 
  2204  008C                     	;# 
  2205  008C                     	;# 
  2206  008D                     	;# 
  2207  008E                     	;# 
  2208  008E                     	;# 
  2209  008F                     	;# 
  2210  0090                     	;# 
  2211  0090                     	;# 
  2212  0091                     	;# 
  2213  0093                     	;# 
  2214  0094                     	;# 
  2215  0095                     	;# 
  2216  0096                     	;# 
  2217  0097                     	;# 
  2218  0098                     	;# 
  2219  0099                     	;# 
  2220  009A                     	;# 
  2221  009B                     	;# 
  2222  009C                     	;# 
  2223  009D                     	;# 
  2224  009E                     	;# 
  2225  010C                     	;# 
  2226  010D                     	;# 
  2227  010E                     	;# 
  2228  010E                     	;# 
  2229  010F                     	;# 
  2230  0110                     	;# 
  2231  0110                     	;# 
  2232  0111                     	;# 
  2233  0112                     	;# 
  2234  0112                     	;# 
  2235  0113                     	;# 
  2236  0114                     	;# 
  2237  0114                     	;# 
  2238  0115                     	;# 
  2239  0116                     	;# 
  2240  0116                     	;# 
  2241  0117                     	;# 
  2242  0119                     	;# 
  2243  0119                     	;# 
  2244  0119                     	;# 
  2245  011A                     	;# 
  2246  011A                     	;# 
  2247  011A                     	;# 
  2248  011B                     	;# 
  2249  011B                     	;# 
  2250  011B                     	;# 
  2251  011B                     	;# 
  2252  011B                     	;# 
  2253  011C                     	;# 
  2254  011C                     	;# 
  2255  011C                     	;# 
  2256  011D                     	;# 
  2257  011D                     	;# 
  2258  011D                     	;# 
  2259  011E                     	;# 
  2260  011E                     	;# 
  2261  011E                     	;# 
  2262  011F                     	;# 
  2263  011F                     	;# 
  2264  011F                     	;# 
  2265  011F                     	;# 
  2266  011F                     	;# 
  2267  018C                     	;# 
  2268  018D                     	;# 
  2269  018E                     	;# 
  2270  018F                     	;# 
  2271  0190                     	;# 
  2272  0191                     	;# 
  2273  0192                     	;# 
  2274  0196                     	;# 
  2275  0197                     	;# 
  2276  0198                     	;# 
  2277  0199                     	;# 
  2278  019A                     	;# 
  2279  019B                     	;# 
  2280  019C                     	;# 
  2281  020C                     	;# 
  2282  020C                     	;# 
  2283  020D                     	;# 
  2284  020E                     	;# 
  2285  020F                     	;# 
  2286  020F                     	;# 
  2287  0210                     	;# 
  2288  0210                     	;# 
  2289  0211                     	;# 
  2290  0211                     	;# 
  2291  0212                     	;# 
  2292  0212                     	;# 
  2293  0213                     	;# 
  2294  0214                     	;# 
  2295  0215                     	;# 
  2296  0215                     	;# 
  2297  0216                     	;# 
  2298  0216                     	;# 
  2299  0217                     	;# 
  2300  0217                     	;# 
  2301  0218                     	;# 
  2302  0218                     	;# 
  2303  0219                     	;# 
  2304  021A                     	;# 
  2305  021B                     	;# 
  2306  021B                     	;# 
  2307  021C                     	;# 
  2308  021C                     	;# 
  2309  021D                     	;# 
  2310  021D                     	;# 
  2311  021E                     	;# 
  2312  021F                     	;# 
  2313  028C                     	;# 
  2314  028C                     	;# 
  2315  028D                     	;# 
  2316  028D                     	;# 
  2317  028E                     	;# 
  2318  028F                     	;# 
  2319  0290                     	;# 
  2320  0290                     	;# 
  2321  0291                     	;# 
  2322  0292                     	;# 
  2323  0292                     	;# 
  2324  0293                     	;# 
  2325  0293                     	;# 
  2326  0294                     	;# 
  2327  0295                     	;# 
  2328  0296                     	;# 
  2329  0296                     	;# 
  2330  0297                     	;# 
  2331  0298                     	;# 
  2332  0298                     	;# 
  2333  0299                     	;# 
  2334  0299                     	;# 
  2335  029A                     	;# 
  2336  029B                     	;# 
  2337  029C                     	;# 
  2338  029C                     	;# 
  2339  029D                     	;# 
  2340  030C                     	;# 
  2341  030C                     	;# 
  2342  030D                     	;# 
  2343  030E                     	;# 
  2344  030F                     	;# 
  2345  0310                     	;# 
  2346  0310                     	;# 
  2347  0311                     	;# 
  2348  0312                     	;# 
  2349  0313                     	;# 
  2350  0314                     	;# 
  2351  0314                     	;# 
  2352  0315                     	;# 
  2353  0316                     	;# 
  2354  0317                     	;# 
  2355  0318                     	;# 
  2356  0318                     	;# 
  2357  0319                     	;# 
  2358  031A                     	;# 
  2359  031B                     	;# 
  2360  031C                     	;# 
  2361  031C                     	;# 
  2362  031D                     	;# 
  2363  031E                     	;# 
  2364  031F                     	;# 
  2365  038C                     	;# 
  2366  038C                     	;# 
  2367  038D                     	;# 
  2368  038E                     	;# 
  2369  0390                     	;# 
  2370  0390                     	;# 
  2371  0391                     	;# 
  2372  0392                     	;# 
  2373  040C                     	;# 
  2374  040D                     	;# 
  2375  040E                     	;# 
  2376  040F                     	;# 
  2377  0410                     	;# 
  2378  0411                     	;# 
  2379  0416                     	;# 
  2380  0416                     	;# 
  2381  0417                     	;# 
  2382  0418                     	;# 
  2383  0418                     	;# 
  2384  0419                     	;# 
  2385  041A                     	;# 
  2386  041A                     	;# 
  2387  041B                     	;# 
  2388  041C                     	;# 
  2389  041C                     	;# 
  2390  041D                     	;# 
  2391  041E                     	;# 
  2392  041F                     	;# 
  2393  048C                     	;# 
  2394  048C                     	;# 
  2395  048D                     	;# 
  2396  048E                     	;# 
  2397  048F                     	;# 
  2398  048F                     	;# 
  2399  0490                     	;# 
  2400  0491                     	;# 
  2401  0492                     	;# 
  2402  0492                     	;# 
  2403  0493                     	;# 
  2404  0494                     	;# 
  2405  0495                     	;# 
  2406  0495                     	;# 
  2407  0496                     	;# 
  2408  0497                     	;# 
  2409  0498                     	;# 
  2410  0499                     	;# 
  2411  049A                     	;# 
  2412  049B                     	;# 
  2413  049C                     	;# 
  2414  049D                     	;# 
  2415  050C                     	;# 
  2416  050C                     	;# 
  2417  050D                     	;# 
  2418  050E                     	;# 
  2419  050F                     	;# 
  2420  050F                     	;# 
  2421  0510                     	;# 
  2422  0511                     	;# 
  2423  0512                     	;# 
  2424  0512                     	;# 
  2425  0513                     	;# 
  2426  0514                     	;# 
  2427  0515                     	;# 
  2428  0515                     	;# 
  2429  0516                     	;# 
  2430  0517                     	;# 
  2431  0518                     	;# 
  2432  0519                     	;# 
  2433  051A                     	;# 
  2434  051B                     	;# 
  2435  051C                     	;# 
  2436  051D                     	;# 
  2437  058C                     	;# 
  2438  058C                     	;# 
  2439  058D                     	;# 
  2440  058E                     	;# 
  2441  058F                     	;# 
  2442  058F                     	;# 
  2443  0590                     	;# 
  2444  0591                     	;# 
  2445  0592                     	;# 
  2446  0593                     	;# 
  2447  060C                     	;# 
  2448  060D                     	;# 
  2449  060E                     	;# 
  2450  060F                     	;# 
  2451  0610                     	;# 
  2452  0611                     	;# 
  2453  0612                     	;# 
  2454  0613                     	;# 
  2455  0614                     	;# 
  2456  0616                     	;# 
  2457  0617                     	;# 
  2458  0618                     	;# 
  2459  0619                     	;# 
  2460  061A                     	;# 
  2461  061B                     	;# 
  2462  061C                     	;# 
  2463  061D                     	;# 
  2464  061E                     	;# 
  2465  068C                     	;# 
  2466  068D                     	;# 
  2467  068E                     	;# 
  2468  068F                     	;# 
  2469  0690                     	;# 
  2470  0691                     	;# 
  2471  0692                     	;# 
  2472  0693                     	;# 
  2473  0694                     	;# 
  2474  070C                     	;# 
  2475  070D                     	;# 
  2476  070E                     	;# 
  2477  070F                     	;# 
  2478  0710                     	;# 
  2479  0711                     	;# 
  2480  0712                     	;# 
  2481  0713                     	;# 
  2482  0714                     	;# 
  2483  0716                     	;# 
  2484  0717                     	;# 
  2485  0718                     	;# 
  2486  0719                     	;# 
  2487  071A                     	;# 
  2488  071B                     	;# 
  2489  071C                     	;# 
  2490  071D                     	;# 
  2491  071E                     	;# 
  2492  0796                     	;# 
  2493  0797                     	;# 
  2494  0798                     	;# 
  2495  0799                     	;# 
  2496  079A                     	;# 
  2497  079B                     	;# 
  2498  080C                     	;# 
  2499  080D                     	;# 
  2500  080E                     	;# 
  2501  080F                     	;# 
  2502  0810                     	;# 
  2503  0811                     	;# 
  2504  0812                     	;# 
  2505  0813                     	;# 
  2506  0814                     	;# 
  2507  081A                     	;# 
  2508  081B                     	;# 
  2509  081C                     	;# 
  2510  081D                     	;# 
  2511  081E                     	;# 
  2512  081F                     	;# 
  2513  088C                     	;# 
  2514  088D                     	;# 
  2515  088E                     	;# 
  2516  088F                     	;# 
  2517  0890                     	;# 
  2518  0891                     	;# 
  2519  0892                     	;# 
  2520  0893                     	;# 
  2521  0895                     	;# 
  2522  0896                     	;# 
  2523  0897                     	;# 
  2524  0898                     	;# 
  2525  0899                     	;# 
  2526  089A                     	;# 
  2527  089B                     	;# 
  2528  090C                     	;# 
  2529  090E                     	;# 
  2530  090F                     	;# 
  2531  091F                     	;# 
  2532  091F                     	;# 
  2533  098F                     	;# 
  2534  098F                     	;# 
  2535  0990                     	;# 
  2536  0991                     	;# 
  2537  0992                     	;# 
  2538  0993                     	;# 
  2539  0994                     	;# 
  2540  0995                     	;# 
  2541  0996                     	;# 
  2542  0997                     	;# 
  2543  0E0F                     	;# 
  2544  0E10                     	;# 
  2545  0E11                     	;# 
  2546  0E12                     	;# 
  2547  0E13                     	;# 
  2548  0E14                     	;# 
  2549  0E15                     	;# 
  2550  0E16                     	;# 
  2551  0E17                     	;# 
  2552  0E18                     	;# 
  2553  0E19                     	;# 
  2554  0E1A                     	;# 
  2555  0E1B                     	;# 
  2556  0E1C                     	;# 
  2557  0E1D                     	;# 
  2558  0E1E                     	;# 
  2559  0E1F                     	;# 
  2560  0E20                     	;# 
  2561  0E21                     	;# 
  2562  0E22                     	;# 
  2563  0E23                     	;# 
  2564  0E24                     	;# 
  2565  0E25                     	;# 
  2566  0E26                     	;# 
  2567  0E27                     	;# 
  2568  0E28                     	;# 
  2569  0E29                     	;# 
  2570  0E2A                     	;# 
  2571  0E2B                     	;# 
  2572  0E2C                     	;# 
  2573  0E2D                     	;# 
  2574  0E2E                     	;# 
  2575  0E2F                     	;# 
  2576  0E30                     	;# 
  2577  0E31                     	;# 
  2578  0E32                     	;# 
  2579  0E33                     	;# 
  2580  0E34                     	;# 
  2581  0E35                     	;# 
  2582  0E36                     	;# 
  2583  0E37                     	;# 
  2584  0E8F                     	;# 
  2585  0E90                     	;# 
  2586  0E91                     	;# 
  2587  0E92                     	;# 
  2588  0E93                     	;# 
  2589  0E94                     	;# 
  2590  0E95                     	;# 
  2591  0E96                     	;# 
  2592  0E97                     	;# 
  2593  0E9C                     	;# 
  2594  0E9D                     	;# 
  2595  0E9E                     	;# 
  2596  0EA1                     	;# 
  2597  0EA2                     	;# 
  2598  0EA3                     	;# 
  2599  0EA4                     	;# 
  2600  0EA5                     	;# 
  2601  0EA9                     	;# 
  2602  0EAA                     	;# 
  2603  0EAB                     	;# 
  2604  0EAC                     	;# 
  2605  0EB1                     	;# 
  2606  0EB2                     	;# 
  2607  0EB3                     	;# 
  2608  0EB8                     	;# 
  2609  0EB9                     	;# 
  2610  0EBA                     	;# 
  2611  0EBB                     	;# 
  2612  0EBC                     	;# 
  2613  0EBD                     	;# 
  2614  0EBE                     	;# 
  2615  0EC3                     	;# 
  2616  0EC5                     	;# 
  2617  0EC6                     	;# 
  2618  0EC7                     	;# 
  2619  0EC8                     	;# 
  2620  0EC9                     	;# 
  2621  0ECA                     	;# 
  2622  0ECB                     	;# 
  2623  0ECC                     	;# 
  2624  0F10                     	;# 
  2625  0F11                     	;# 
  2626  0F12                     	;# 
  2627  0F13                     	;# 
  2628  0F14                     	;# 
  2629  0F15                     	;# 
  2630  0F16                     	;# 
  2631  0F17                     	;# 
  2632  0F18                     	;# 
  2633  0F19                     	;# 
  2634  0F1A                     	;# 
  2635  0F1B                     	;# 
  2636  0F1C                     	;# 
  2637  0F1D                     	;# 
  2638  0F1E                     	;# 
  2639  0F1F                     	;# 
  2640  0F20                     	;# 
  2641  0F21                     	;# 
  2642  0F22                     	;# 
  2643  0F23                     	;# 
  2644  0F24                     	;# 
  2645  0F25                     	;# 
  2646  0F26                     	;# 
  2647  0F27                     	;# 
  2648  0F38                     	;# 
  2649  0F39                     	;# 
  2650  0F3A                     	;# 
  2651  0F3B                     	;# 
  2652  0F3C                     	;# 
  2653  0F3D                     	;# 
  2654  0F3E                     	;# 
  2655  0F3F                     	;# 
  2656  0F40                     	;# 
  2657  0F41                     	;# 
  2658  0F43                     	;# 
  2659  0F44                     	;# 
  2660  0F45                     	;# 
  2661  0F46                     	;# 
  2662  0F47                     	;# 
  2663  0F48                     	;# 
  2664  0F49                     	;# 
  2665  0F4A                     	;# 
  2666  0F4B                     	;# 
  2667  0F4C                     	;# 
  2668  0F4E                     	;# 
  2669  0F4F                     	;# 
  2670  0F50                     	;# 
  2671  0F51                     	;# 
  2672  0F52                     	;# 
  2673  0F53                     	;# 
  2674  0F54                     	;# 
  2675  0F55                     	;# 
  2676  0F56                     	;# 
  2677  0F57                     	;# 
  2678  0F65                     	;# 
  2679  0F68                     	;# 
  2680  0F69                     	;# 
  2681  0F6A                     	;# 
  2682  0F6B                     	;# 
  2683  0FE4                     	;# 
  2684  0FE5                     	;# 
  2685  0FE6                     	;# 
  2686  0FE7                     	;# 
  2687  0FE8                     	;# 
  2688  0FE9                     	;# 
  2689  0FEA                     	;# 
  2690  0FEB                     	;# 
  2691  0FED                     	;# 
  2692  0FEE                     	;# 
  2693  0FEF                     	;# 
  2694  0000                     	;# 
  2695  0001                     	;# 
  2696  0002                     	;# 
  2697  0003                     	;# 
  2698  0004                     	;# 
  2699  0005                     	;# 
  2700  0006                     	;# 
  2701  0007                     	;# 
  2702  0008                     	;# 
  2703  0009                     	;# 
  2704  000A                     	;# 
  2705  000B                     	;# 
  2706  000C                     	;# 
  2707  000D                     	;# 
  2708  000E                     	;# 
  2709  0010                     	;# 
  2710  0011                     	;# 
  2711  0012                     	;# 
  2712  0013                     	;# 
  2713  0016                     	;# 
  2714  0017                     	;# 
  2715  0018                     	;# 
  2716  001C                     	;# 
  2717  001C                     	;# 
  2718  001D                     	;# 
  2719  001D                     	;# 
  2720  001E                     	;# 
  2721  001F                     	;# 
  2722  008C                     	;# 
  2723  008C                     	;# 
  2724  008D                     	;# 
  2725  008E                     	;# 
  2726  008E                     	;# 
  2727  008F                     	;# 
  2728  0090                     	;# 
  2729  0090                     	;# 
  2730  0091                     	;# 
  2731  0093                     	;# 
  2732  0094                     	;# 
  2733  0095                     	;# 
  2734  0096                     	;# 
  2735  0097                     	;# 
  2736  0098                     	;# 
  2737  0099                     	;# 
  2738  009A                     	;# 
  2739  009B                     	;# 
  2740  009C                     	;# 
  2741  009D                     	;# 
  2742  009E                     	;# 
  2743  010C                     	;# 
  2744  010D                     	;# 
  2745  010E                     	;# 
  2746  010E                     	;# 
  2747  010F                     	;# 
  2748  0110                     	;# 
  2749  0110                     	;# 
  2750  0111                     	;# 
  2751  0112                     	;# 
  2752  0112                     	;# 
  2753  0113                     	;# 
  2754  0114                     	;# 
  2755  0114                     	;# 
  2756  0115                     	;# 
  2757  0116                     	;# 
  2758  0116                     	;# 
  2759  0117                     	;# 
  2760  0119                     	;# 
  2761  0119                     	;# 
  2762  0119                     	;# 
  2763  011A                     	;# 
  2764  011A                     	;# 
  2765  011A                     	;# 
  2766  011B                     	;# 
  2767  011B                     	;# 
  2768  011B                     	;# 
  2769  011B                     	;# 
  2770  011B                     	;# 
  2771  011C                     	;# 
  2772  011C                     	;# 
  2773  011C                     	;# 
  2774  011D                     	;# 
  2775  011D                     	;# 
  2776  011D                     	;# 
  2777  011E                     	;# 
  2778  011E                     	;# 
  2779  011E                     	;# 
  2780  011F                     	;# 
  2781  011F                     	;# 
  2782  011F                     	;# 
  2783  011F                     	;# 
  2784  011F                     	;# 
  2785  018C                     	;# 
  2786  018D                     	;# 
  2787  018E                     	;# 
  2788  018F                     	;# 
  2789  0190                     	;# 
  2790  0191                     	;# 
  2791  0192                     	;# 
  2792  0196                     	;# 
  2793  0197                     	;# 
  2794  0198                     	;# 
  2795  0199                     	;# 
  2796  019A                     	;# 
  2797  019B                     	;# 
  2798  019C                     	;# 
  2799  020C                     	;# 
  2800  020C                     	;# 
  2801  020D                     	;# 
  2802  020E                     	;# 
  2803  020F                     	;# 
  2804  020F                     	;# 
  2805  0210                     	;# 
  2806  0210                     	;# 
  2807  0211                     	;# 
  2808  0211                     	;# 
  2809  0212                     	;# 
  2810  0212                     	;# 
  2811  0213                     	;# 
  2812  0214                     	;# 
  2813  0215                     	;# 
  2814  0215                     	;# 
  2815  0216                     	;# 
  2816  0216                     	;# 
  2817  0217                     	;# 
  2818  0217                     	;# 
  2819  0218                     	;# 
  2820  0218                     	;# 
  2821  0219                     	;# 
  2822  021A                     	;# 
  2823  021B                     	;# 
  2824  021B                     	;# 
  2825  021C                     	;# 
  2826  021C                     	;# 
  2827  021D                     	;# 
  2828  021D                     	;# 
  2829  021E                     	;# 
  2830  021F                     	;# 
  2831  028C                     	;# 
  2832  028C                     	;# 
  2833  028D                     	;# 
  2834  028D                     	;# 
  2835  028E                     	;# 
  2836  028F                     	;# 
  2837  0290                     	;# 
  2838  0290                     	;# 
  2839  0291                     	;# 
  2840  0292                     	;# 
  2841  0292                     	;# 
  2842  0293                     	;# 
  2843  0293                     	;# 
  2844  0294                     	;# 
  2845  0295                     	;# 
  2846  0296                     	;# 
  2847  0296                     	;# 
  2848  0297                     	;# 
  2849  0298                     	;# 
  2850  0298                     	;# 
  2851  0299                     	;# 
  2852  0299                     	;# 
  2853  029A                     	;# 
  2854  029B                     	;# 
  2855  029C                     	;# 
  2856  029C                     	;# 
  2857  029D                     	;# 
  2858  030C                     	;# 
  2859  030C                     	;# 
  2860  030D                     	;# 
  2861  030E                     	;# 
  2862  030F                     	;# 
  2863  0310                     	;# 
  2864  0310                     	;# 
  2865  0311                     	;# 
  2866  0312                     	;# 
  2867  0313                     	;# 
  2868  0314                     	;# 
  2869  0314                     	;# 
  2870  0315                     	;# 
  2871  0316                     	;# 
  2872  0317                     	;# 
  2873  0318                     	;# 
  2874  0318                     	;# 
  2875  0319                     	;# 
  2876  031A                     	;# 
  2877  031B                     	;# 
  2878  031C                     	;# 
  2879  031C                     	;# 
  2880  031D                     	;# 
  2881  031E                     	;# 
  2882  031F                     	;# 
  2883  038C                     	;# 
  2884  038C                     	;# 
  2885  038D                     	;# 
  2886  038E                     	;# 
  2887  0390                     	;# 
  2888  0390                     	;# 
  2889  0391                     	;# 
  2890  0392                     	;# 
  2891  040C                     	;# 
  2892  040D                     	;# 
  2893  040E                     	;# 
  2894  040F                     	;# 
  2895  0410                     	;# 
  2896  0411                     	;# 
  2897  0416                     	;# 
  2898  0416                     	;# 
  2899  0417                     	;# 
  2900  0418                     	;# 
  2901  0418                     	;# 
  2902  0419                     	;# 
  2903  041A                     	;# 
  2904  041A                     	;# 
  2905  041B                     	;# 
  2906  041C                     	;# 
  2907  041C                     	;# 
  2908  041D                     	;# 
  2909  041E                     	;# 
  2910  041F                     	;# 
  2911  048C                     	;# 
  2912  048C                     	;# 
  2913  048D                     	;# 
  2914  048E                     	;# 
  2915  048F                     	;# 
  2916  048F                     	;# 
  2917  0490                     	;# 
  2918  0491                     	;# 
  2919  0492                     	;# 
  2920  0492                     	;# 
  2921  0493                     	;# 
  2922  0494                     	;# 
  2923  0495                     	;# 
  2924  0495                     	;# 
  2925  0496                     	;# 
  2926  0497                     	;# 
  2927  0498                     	;# 
  2928  0499                     	;# 
  2929  049A                     	;# 
  2930  049B                     	;# 
  2931  049C                     	;# 
  2932  049D                     	;# 
  2933  050C                     	;# 
  2934  050C                     	;# 
  2935  050D                     	;# 
  2936  050E                     	;# 
  2937  050F                     	;# 
  2938  050F                     	;# 
  2939  0510                     	;# 
  2940  0511                     	;# 
  2941  0512                     	;# 
  2942  0512                     	;# 
  2943  0513                     	;# 
  2944  0514                     	;# 
  2945  0515                     	;# 
  2946  0515                     	;# 
  2947  0516                     	;# 
  2948  0517                     	;# 
  2949  0518                     	;# 
  2950  0519                     	;# 
  2951  051A                     	;# 
  2952  051B                     	;# 
  2953  051C                     	;# 
  2954  051D                     	;# 
  2955  058C                     	;# 
  2956  058C                     	;# 
  2957  058D                     	;# 
  2958  058E                     	;# 
  2959  058F                     	;# 
  2960  058F                     	;# 
  2961  0590                     	;# 
  2962  0591                     	;# 
  2963  0592                     	;# 
  2964  0593                     	;# 
  2965  060C                     	;# 
  2966  060D                     	;# 
  2967  060E                     	;# 
  2968  060F                     	;# 
  2969  0610                     	;# 
  2970  0611                     	;# 
  2971  0612                     	;# 
  2972  0613                     	;# 
  2973  0614                     	;# 
  2974  0616                     	;# 
  2975  0617                     	;# 
  2976  0618                     	;# 
  2977  0619                     	;# 
  2978  061A                     	;# 
  2979  061B                     	;# 
  2980  061C                     	;# 
  2981  061D                     	;# 
  2982  061E                     	;# 
  2983  068C                     	;# 
  2984  068D                     	;# 
  2985  068E                     	;# 
  2986  068F                     	;# 
  2987  0690                     	;# 
  2988  0691                     	;# 
  2989  0692                     	;# 
  2990  0693                     	;# 
  2991  0694                     	;# 
  2992  070C                     	;# 
  2993  070D                     	;# 
  2994  070E                     	;# 
  2995  070F                     	;# 
  2996  0710                     	;# 
  2997  0711                     	;# 
  2998  0712                     	;# 
  2999  0713                     	;# 
  3000  0714                     	;# 
  3001  0716                     	;# 
  3002  0717                     	;# 
  3003  0718                     	;# 
  3004  0719                     	;# 
  3005  071A                     	;# 
  3006  071B                     	;# 
  3007  071C                     	;# 
  3008  071D                     	;# 
  3009  071E                     	;# 
  3010  0796                     	;# 
  3011  0797                     	;# 
  3012  0798                     	;# 
  3013  0799                     	;# 
  3014  079A                     	;# 
  3015  079B                     	;# 
  3016  080C                     	;# 
  3017  080D                     	;# 
  3018  080E                     	;# 
  3019  080F                     	;# 
  3020  0810                     	;# 
  3021  0811                     	;# 
  3022  0812                     	;# 
  3023  0813                     	;# 
  3024  0814                     	;# 
  3025  081A                     	;# 
  3026  081B                     	;# 
  3027  081C                     	;# 
  3028  081D                     	;# 
  3029  081E                     	;# 
  3030  081F                     	;# 
  3031  088C                     	;# 
  3032  088D                     	;# 
  3033  088E                     	;# 
  3034  088F                     	;# 
  3035  0890                     	;# 
  3036  0891                     	;# 
  3037  0892                     	;# 
  3038  0893                     	;# 
  3039  0895                     	;# 
  3040  0896                     	;# 
  3041  0897                     	;# 
  3042  0898                     	;# 
  3043  0899                     	;# 
  3044  089A                     	;# 
  3045  089B                     	;# 
  3046  090C                     	;# 
  3047  090E                     	;# 
  3048  090F                     	;# 
  3049  091F                     	;# 
  3050  091F                     	;# 
  3051  098F                     	;# 
  3052  098F                     	;# 
  3053  0990                     	;# 
  3054  0991                     	;# 
  3055  0992                     	;# 
  3056  0993                     	;# 
  3057  0994                     	;# 
  3058  0995                     	;# 
  3059  0996                     	;# 
  3060  0997                     	;# 
  3061  0E0F                     	;# 
  3062  0E10                     	;# 
  3063  0E11                     	;# 
  3064  0E12                     	;# 
  3065  0E13                     	;# 
  3066  0E14                     	;# 
  3067  0E15                     	;# 
  3068  0E16                     	;# 
  3069  0E17                     	;# 
  3070  0E18                     	;# 
  3071  0E19                     	;# 
  3072  0E1A                     	;# 
  3073  0E1B                     	;# 
  3074  0E1C                     	;# 
  3075  0E1D                     	;# 
  3076  0E1E                     	;# 
  3077  0E1F                     	;# 
  3078  0E20                     	;# 
  3079  0E21                     	;# 
  3080  0E22                     	;# 
  3081  0E23                     	;# 
  3082  0E24                     	;# 
  3083  0E25                     	;# 
  3084  0E26                     	;# 
  3085  0E27                     	;# 
  3086  0E28                     	;# 
  3087  0E29                     	;# 
  3088  0E2A                     	;# 
  3089  0E2B                     	;# 
  3090  0E2C                     	;# 
  3091  0E2D                     	;# 
  3092  0E2E                     	;# 
  3093  0E2F                     	;# 
  3094  0E30                     	;# 
  3095  0E31                     	;# 
  3096  0E32                     	;# 
  3097  0E33                     	;# 
  3098  0E34                     	;# 
  3099  0E35                     	;# 
  3100  0E36                     	;# 
  3101  0E37                     	;# 
  3102  0E8F                     	;# 
  3103  0E90                     	;# 
  3104  0E91                     	;# 
  3105  0E92                     	;# 
  3106  0E93                     	;# 
  3107  0E94                     	;# 
  3108  0E95                     	;# 
  3109  0E96                     	;# 
  3110  0E97                     	;# 
  3111  0E9C                     	;# 
  3112  0E9D                     	;# 
  3113  0E9E                     	;# 
  3114  0EA1                     	;# 
  3115  0EA2                     	;# 
  3116  0EA3                     	;# 
  3117  0EA4                     	;# 
  3118  0EA5                     	;# 
  3119  0EA9                     	;# 
  3120  0EAA                     	;# 
  3121  0EAB                     	;# 
  3122  0EAC                     	;# 
  3123  0EB1                     	;# 
  3124  0EB2                     	;# 
  3125  0EB3                     	;# 
  3126  0EB8                     	;# 
  3127  0EB9                     	;# 
  3128  0EBA                     	;# 
  3129  0EBB                     	;# 
  3130  0EBC                     	;# 
  3131  0EBD                     	;# 
  3132  0EBE                     	;# 
  3133  0EC3                     	;# 
  3134  0EC5                     	;# 
  3135  0EC6                     	;# 
  3136  0EC7                     	;# 
  3137  0EC8                     	;# 
  3138  0EC9                     	;# 
  3139  0ECA                     	;# 
  3140  0ECB                     	;# 
  3141  0ECC                     	;# 
  3142  0F10                     	;# 
  3143  0F11                     	;# 
  3144  0F12                     	;# 
  3145  0F13                     	;# 
  3146  0F14                     	;# 
  3147  0F15                     	;# 
  3148  0F16                     	;# 
  3149  0F17                     	;# 
  3150  0F18                     	;# 
  3151  0F19                     	;# 
  3152  0F1A                     	;# 
  3153  0F1B                     	;# 
  3154  0F1C                     	;# 
  3155  0F1D                     	;# 
  3156  0F1E                     	;# 
  3157  0F1F                     	;# 
  3158  0F20                     	;# 
  3159  0F21                     	;# 
  3160  0F22                     	;# 
  3161  0F23                     	;# 
  3162  0F24                     	;# 
  3163  0F25                     	;# 
  3164  0F26                     	;# 
  3165  0F27                     	;# 
  3166  0F38                     	;# 
  3167  0F39                     	;# 
  3168  0F3A                     	;# 
  3169  0F3B                     	;# 
  3170  0F3C                     	;# 
  3171  0F3D                     	;# 
  3172  0F3E                     	;# 
  3173  0F3F                     	;# 
  3174  0F40                     	;# 
  3175  0F41                     	;# 
  3176  0F43                     	;# 
  3177  0F44                     	;# 
  3178  0F45                     	;# 
  3179  0F46                     	;# 
  3180  0F47                     	;# 
  3181  0F48                     	;# 
  3182  0F49                     	;# 
  3183  0F4A                     	;# 
  3184  0F4B                     	;# 
  3185  0F4C                     	;# 
  3186  0F4E                     	;# 
  3187  0F4F                     	;# 
  3188  0F50                     	;# 
  3189  0F51                     	;# 
  3190  0F52                     	;# 
  3191  0F53                     	;# 
  3192  0F54                     	;# 
  3193  0F55                     	;# 
  3194  0F56                     	;# 
  3195  0F57                     	;# 
  3196  0F65                     	;# 
  3197  0F68                     	;# 
  3198  0F69                     	;# 
  3199  0F6A                     	;# 
  3200  0F6B                     	;# 
  3201  0FE4                     	;# 
  3202  0FE5                     	;# 
  3203  0FE6                     	;# 
  3204  0FE7                     	;# 
  3205  0FE8                     	;# 
  3206  0FE9                     	;# 
  3207  0FEA                     	;# 
  3208  0FEB                     	;# 
  3209  0FED                     	;# 
  3210  0FEE                     	;# 
  3211  0FEF                     	;# 
  3212                           
  3213                           	psect	idataBANK1
  3214  1354                     __pidataBANK1:
  3215                           
  3216                           ;initializer for stoa@F1141
  3217  1354  3428               	retlw	40
  3218  1355  346E               	retlw	110
  3219  1356  3475               	retlw	117
  3220  1357  346C               	retlw	108
  3221  1358  346C               	retlw	108
  3222  1359  3429               	retlw	41
  3223  135A  3400               	retlw	0
  3224  0013                     _TRISCbits	set	19
  3225  0013                     _TRISC	set	19
  3226  0012                     _TRISB	set	18
  3227  000D                     _PORTB	set	13
  3228  0017                     _LATB	set	23
  3229  0011                     _TRISA	set	17
  3230  000C                     _PORTA	set	12
  3231  0016                     _LATA	set	22
  3232  009B                     _ADCAP	set	155
  3233  009E                     _ADPCH	set	158
  3234  009A                     _ADREF	set	154
  3235  0098                     _ADCLK	set	152
  3236  0095                     _ADCON2	set	149
  3237  0094                     _ADCON1	set	148
  3238  0093                     _ADCON0	set	147
  3239  011A                     _TX1REG	set	282
  3240  011C                     _SP1BRGH	set	284
  3241  011B                     _SP1BRGL	set	283
  3242  011E                     _TX1STA	set	286
  3243  011D                     _RC1STA	set	285
  3244  011F                     _BAUD1CON	set	287
  3245  018C                     _SSP1BUF	set	396
  3246  0191                     _SSP1CON2bits	set	401
  3247  018D                     _SSP1ADD	set	397
  3248  0192                     _SSP1CON3	set	402
  3249  0190                     _SSP1CON1	set	400
  3250  018F                     _SSP1STAT	set	399
  3251  070F                     _PIR3bits	set	1807
  3252  070F                     _PIR3	set	1807
  3253  0EC6                     _SSP1DATPPS	set	3782
  3254  0EC5                     _SSP1CLKPPS	set	3781
  3255  0ECB                     _RXPPS	set	3787
  3256  0F24                     _RC4PPS	set	3876
  3257  0F23                     _RC3PPS	set	3875
  3258  0F4E                     _ANSELCbits	set	3918
  3259  0F20                     _RC0PPS	set	3872
  3260  0F4E                     _ANSELC	set	3918
  3261  0F43                     _ANSELB	set	3907
  3262  0F38                     _ANSELA	set	3896
  3263                           
  3264                           	psect	stringtext1
  3265  1800                     __pstringtext1:
  3266  1800                     STR_1:
  3267  1800  347B               	retlw	123	;'{'
  3268  1801  3422               	retlw	34	;'"'
  3269  1802  3474               	retlw	116	;'t'
  3270  1803  3441               	retlw	65	;'A'
  3271  1804  346D               	retlw	109	;'m'
  3272  1805  3462               	retlw	98	;'b'
  3273  1806  3422               	retlw	34	;'"'
  3274  1807  343A               	retlw	58	;':'
  3275  1808  3422               	retlw	34	;'"'
  3276  1809  3425               	retlw	37	;'%'
  3277  180A  3473               	retlw	115	;'s'
  3278  180B  3422               	retlw	34	;'"'
  3279  180C  342C               	retlw	44	;','
  3280  180D  3422               	retlw	34	;'"'
  3281  180E  3474               	retlw	116	;'t'
  3282  180F  346F               	retlw	111	;'o'
  3283  1810  3462               	retlw	98	;'b'
  3284  1811  346A               	retlw	106	;'j'
  3285  1812  3422               	retlw	34	;'"'
  3286  1813  343A               	retlw	58	;':'
  3287  1814  3422               	retlw	34	;'"'
  3288  1815  3400               	retlw	0
  3289                           
  3290                           	psect	stringtext2
  3291  1816                     __pstringtext2:
  3292  1816                     STR_2:
  3293  1816  3425               	retlw	37	;'%'
  3294  1817  3473               	retlw	115	;'s'
  3295  1818  3422               	retlw	34	;'"'
  3296  1819  342C               	retlw	44	;','
  3297  181A  3422               	retlw	34	;'"'
  3298  181B  3474               	retlw	116	;'t'
  3299  181C  3470               	retlw	112	;'p'
  3300  181D  346C               	retlw	108	;'l'
  3301  181E  3461               	retlw	97	;'a'
  3302  181F  3463               	retlw	99	;'c'
  3303  1820  3461               	retlw	97	;'a'
  3304  1821  3422               	retlw	34	;'"'
  3305  1822  343A               	retlw	58	;':'
  3306  1823  3422               	retlw	34	;'"'
  3307  1824  3400               	retlw	0
  3308                           
  3309                           	psect	stringtext3
  3310  1825                     __pstringtext3:
  3311  1825                     STR_3:
  3312  1825  3425               	retlw	37	;'%'
  3313  1826  3464               	retlw	100	;'d'
  3314  1827  342E               	retlw	46	;'.'
  3315  1828  3425               	retlw	37	;'%'
  3316  1829  3464               	retlw	100	;'d'
  3317  182A  3422               	retlw	34	;'"'
  3318  182B  347D               	retlw	125	;'}'
  3319  182C  3400               	retlw	0
  3320                           
  3321                           	psect	stringtext4
  3322  182D                     __pstringtext4:
  3323  182D                     STR_4:
  3324  182D  3430               	retlw	48	;'0'
  3325  182E  3478               	retlw	120	;'x'
  3326  182F  3425               	retlw	37	;'%'
  3327  1830  3478               	retlw	120	;'x'
  3328  1831  340A               	retlw	10
  3329  1832  3400               	retlw	0
  3330                           
  3331                           	psect	stringtext5
  3332  0000                     __pstringtext5:
  3333  182D                     
  3334                           	psect	cinit
  3335  07EA                     start_initialization:	
  3336                           ; #config settings
  3337                           
  3338  07EA                     __initialization:
  3339                           
  3340                           ; Initialize objects allocated to BANK1
  3341  07EA  3054               	movlw	low __pidataBANK1
  3342  07EB  0084               	movwf	4
  3343  07EC  3093               	movlw	(high __pidataBANK1)| (0+128)
  3344  07ED  0085               	movwf	5
  3345  07EE  30E9               	movlw	low __pdataBANK1
  3346  07EF  0086               	movwf	6
  3347  07F0  3000               	movlw	high __pdataBANK1
  3348  07F1  0087               	movwf	7
  3349  07F2  3007               	movlw	7
  3350  07F3  3193  234E  3187   	fcall	init_ram
  3351                           
  3352                           ; Clear objects allocated to BANK1
  3353  07F6  30A0               	movlw	low __pbssBANK1
  3354  07F7  0084               	movwf	4
  3355  07F8  3000               	movlw	high __pbssBANK1
  3356  07F9  0085               	movwf	5
  3357  07FA  302A               	movlw	42
  3358  07FB  3193  2348         	fcall	clear_ram0
  3359  07FD                     end_of_initialization:	
  3360                           ;End of C runtime variable initialization code
  3361                           
  3362  07FD                     __end_of__initialization:
  3363  07FD  0020               	movlb	0
  3364  07FE  3188  28D8         	ljmp	_main	;jump to C main() function
  3365                           
  3366                           	psect	bssBANK1
  3367  00A0                     __pbssBANK1:
  3368  00A0                     _nout:
  3369  00A0                     	ds	2
  3370  00A2                     _width:
  3371  00A2                     	ds	2
  3372  00A4                     _prec:
  3373  00A4                     	ds	2
  3374  00A6                     _flags:
  3375  00A6                     	ds	2
  3376  00A8                     _low_byte:
  3377  00A8                     	ds	1
  3378  00A9                     _high_byte:
  3379  00A9                     	ds	1
  3380  00AA                     _dbuf:
  3381  00AA                     	ds	32
  3382                           
  3383                           	psect	dataBANK1
  3384  00E9                     __pdataBANK1:
  3385  00E9                     stoa@F1141:
  3386  00E9                     	ds	7
  3387                           
  3388                           	psect	inittext
  3389  134E                     init_ram:
  3390  134E  00FE               	movwf	126
  3391  134F                     initloop:
  3392  134F  0012               	moviw fsr0++
  3393  1350  001E               	movwi fsr1++
  3394  1351  0BFE               	decfsz	126,f
  3395  1352  2B4F               	goto	initloop
  3396  1353  3400               	retlw	0
  3397                           
  3398                           	psect	clrtext
  3399  1348                     clear_ram0:	
  3400                           ;	Called with FSR0 containing the base address, and
  3401                           ;	WREG with the size to clear
  3402                           
  3403  1348  0064               	clrwdt	;clear the watchdog before getting into this loop
  3404  1349                     clrloop0:
  3405  1349  0180               	clrf	0	;clear RAM location pointed to by FSR
  3406  134A  3101               	addfsr 0,1
  3407  134B  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3408  134C  2B49               	goto	clrloop0	;have we reached the end yet?
  3409  134D  3400               	retlw	0	;all done for this memory range, return
  3410                           
  3411                           	psect	cstackBANK1
  3412  00CA                     __pcstackBANK1:
  3413  00CA                     ?_vfprintf:
  3414  00CA                     FLOAT_to_string@tempo_int:	
  3415                           ; 2 bytes @ 0x0
  3416                           
  3417  00CA                     vfprintf@fmt:	
  3418                           ; 2 bytes @ 0x0
  3419                           
  3420                           
  3421                           ; 2 bytes @ 0x0
  3422  00CA                     	ds	2
  3423  00CC                     vfprintf@ap:
  3424  00CC                     FLOAT_to_string@tempo_float:	
  3425                           ; 1 bytes @ 0x2
  3426                           
  3427                           
  3428                           ; 4 bytes @ 0x2
  3429  00CC                     	ds	1
  3430  00CD                     ??_vfprintf:
  3431                           
  3432                           ; 1 bytes @ 0x3
  3433  00CD                     	ds	2
  3434  00CF                     vfprintf@fp:
  3435                           
  3436                           ; 1 bytes @ 0x5
  3437  00CF                     	ds	1
  3438  00D0                     FLOAT_to_string@largo_n:
  3439  00D0                     vfprintf@cfmt:	
  3440                           ; 2 bytes @ 0x6
  3441                           
  3442                           
  3443                           ; 2 bytes @ 0x6
  3444  00D0                     	ds	2
  3445  00D2                     ?_printf:
  3446  00D2                     FLOAT_to_string@cont_for:	
  3447                           ; 2 bytes @ 0x8
  3448                           
  3449  00D2                     printf@fmt:	
  3450                           ; 2 bytes @ 0x8
  3451                           
  3452                           
  3453                           ; 2 bytes @ 0x8
  3454  00D2                     	ds	2
  3455  00D4                     FLOAT_to_string@largo_entera:
  3456                           
  3457                           ; 2 bytes @ 0xA
  3458  00D4                     	ds	4
  3459  00D8                     printf@ap:
  3460                           
  3461                           ; 1 bytes @ 0xE
  3462  00D8                     	ds	1
  3463  00D9                     ??_sensorPlaca:
  3464                           
  3465                           ; 1 bytes @ 0xF
  3466  00D9                     	ds	2
  3467  00DB                     ??_main:
  3468                           
  3469                           ; 1 bytes @ 0x11
  3470  00DB                     	ds	2
  3471  00DD                     main@buffer:
  3472                           
  3473                           ; 8 bytes @ 0x13
  3474  00DD                     	ds	8
  3475  00E5                     main@temp:
  3476                           
  3477                           ; 4 bytes @ 0x1B
  3478  00E5                     	ds	4
  3479                           
  3480                           	psect	cstackCOMMON
  3481  0070                     __pcstackCOMMON:
  3482  0070                     ?___flge:
  3483  0070                     ?_port_init:	
  3484                           ; 1 bit 
  3485                           
  3486  0070                     ??_port_init:	
  3487                           ; 1 bytes @ 0x0
  3488                           
  3489  0070                     ?_adc_init:	
  3490                           ; 1 bytes @ 0x0
  3491                           
  3492  0070                     ??_adc_init:	
  3493                           ; 1 bytes @ 0x0
  3494                           
  3495  0070                     ?_i2c_init:	
  3496                           ; 1 bytes @ 0x0
  3497                           
  3498  0070                     ??_i2c_init:	
  3499                           ; 1 bytes @ 0x0
  3500                           
  3501  0070                     ?_sensorPlaca:	
  3502                           ; 1 bytes @ 0x0
  3503                           
  3504  0070                     ?_i2c_start:	
  3505                           ; 1 bytes @ 0x0
  3506                           
  3507  0070                     ??_i2c_start:	
  3508                           ; 1 bytes @ 0x0
  3509                           
  3510  0070                     ?_i2c_write:	
  3511                           ; 1 bytes @ 0x0
  3512                           
  3513  0070                     ??_i2c_write:	
  3514                           ; 1 bytes @ 0x0
  3515                           
  3516  0070                     ?_i2c_restart:	
  3517                           ; 1 bytes @ 0x0
  3518                           
  3519  0070                     ??_i2c_restart:	
  3520                           ; 1 bytes @ 0x0
  3521                           
  3522  0070                     ?_i2c_read:	
  3523                           ; 1 bytes @ 0x0
  3524                           
  3525  0070                     ??_i2c_read:	
  3526                           ; 1 bytes @ 0x0
  3527                           
  3528  0070                     ?_i2c_stop:	
  3529                           ; 1 bytes @ 0x0
  3530                           
  3531  0070                     ??_i2c_stop:	
  3532                           ; 1 bytes @ 0x0
  3533                           
  3534  0070                     ?_i2c_ack:	
  3535                           ; 1 bytes @ 0x0
  3536                           
  3537  0070                     ??_i2c_ack:	
  3538                           ; 1 bytes @ 0x0
  3539                           
  3540  0070                     ?_i2c_nack:	
  3541                           ; 1 bytes @ 0x0
  3542                           
  3543  0070                     ??_i2c_nack:	
  3544                           ; 1 bytes @ 0x0
  3545                           
  3546  0070                     ?_main:	
  3547                           ; 1 bytes @ 0x0
  3548                           
  3549  0070                     ?_uart_tx:	
  3550                           ; 1 bytes @ 0x0
  3551                           
  3552  0070                     ??_uart_tx:	
  3553                           ; 1 bytes @ 0x0
  3554                           
  3555  0070                     ?_putch:	
  3556                           ; 1 bytes @ 0x0
  3557                           
  3558  0070                     ??___aodiv:	
  3559                           ; 1 bytes @ 0x0
  3560                           
  3561  0070                     ??___aomod:	
  3562                           ; 1 bytes @ 0x0
  3563                           
  3564  0070                     ?__Umul8_16:	
  3565                           ; 1 bytes @ 0x0
  3566                           
  3567  0070                     ?_strlen:	
  3568                           ; 2 bytes @ 0x0
  3569                           
  3570  0070                     ?_isupper:	
  3571                           ; 2 bytes @ 0x0
  3572                           
  3573  0070                     ?_isalpha:	
  3574                           ; 2 bytes @ 0x0
  3575                           
  3576  0070                     ?_islower:	
  3577                           ; 2 bytes @ 0x0
  3578                           
  3579  0070                     ?___wmul:	
  3580                           ; 2 bytes @ 0x0
  3581                           
  3582  0070                     ?___lldiv:	
  3583                           ; 2 bytes @ 0x0
  3584                           
  3585  0070                     ?___flneg:	
  3586                           ; 4 bytes @ 0x0
  3587                           
  3588  0070                     ?___fltol:	
  3589                           ; 4 bytes @ 0x0
  3590                           
  3591  0070                     ?___fldiv:	
  3592                           ; 4 bytes @ 0x0
  3593                           
  3594  0070                     i2c_read@ack:	
  3595                           ; 4 bytes @ 0x0
  3596                           
  3597  0070                     i2c_write@I2C_data:	
  3598                           ; 1 bytes @ 0x0
  3599                           
  3600  0070                     __Umul8_16@multiplicand:	
  3601                           ; 1 bytes @ 0x0
  3602                           
  3603  0070                     ___wmul@multiplier:	
  3604                           ; 1 bytes @ 0x0
  3605                           
  3606  0070                     isalpha@c:	
  3607                           ; 2 bytes @ 0x0
  3608                           
  3609  0070                     isupper@c:	
  3610                           ; 2 bytes @ 0x0
  3611                           
  3612  0070                     islower@c:	
  3613                           ; 2 bytes @ 0x0
  3614                           
  3615  0070                     ___lldiv@divisor:	
  3616                           ; 2 bytes @ 0x0
  3617                           
  3618  0070                     ___flge@ff1:	
  3619                           ; 4 bytes @ 0x0
  3620                           
  3621  0070                     ___flneg@f1:	
  3622                           ; 4 bytes @ 0x0
  3623                           
  3624  0070                     ___fltol@f1:	
  3625                           ; 4 bytes @ 0x0
  3626                           
  3627  0070                     ___fldiv@a:	
  3628                           ; 4 bytes @ 0x0
  3629                           
  3630                           
  3631                           ; 4 bytes @ 0x0
  3632  0070                     	ds	1
  3633  0071                     ?_MLX90614_ReadReg:
  3634  0071                     uart_tx@dato:	
  3635                           ; 2 bytes @ 0x1
  3636                           
  3637  0071                     ___aodiv@counter:	
  3638                           ; 1 bytes @ 0x1
  3639                           
  3640  0071                     ___aomod@counter:	
  3641                           ; 1 bytes @ 0x1
  3642                           
  3643                           
  3644                           ; 1 bytes @ 0x1
  3645  0071                     	ds	1
  3646  0072                     ??__Umul8_16:
  3647  0072                     ??_strlen:	
  3648                           ; 1 bytes @ 0x2
  3649                           
  3650  0072                     ??_isupper:	
  3651                           ; 1 bytes @ 0x2
  3652                           
  3653  0072                     ??_isalpha:	
  3654                           ; 1 bytes @ 0x2
  3655                           
  3656  0072                     ??_islower:	
  3657                           ; 1 bytes @ 0x2
  3658                           
  3659  0072                     ??_putch:	
  3660                           ; 1 bytes @ 0x2
  3661                           
  3662  0072                     putch@dato:	
  3663                           ; 1 bytes @ 0x2
  3664                           
  3665  0072                     ___aodiv@sign:	
  3666                           ; 1 bytes @ 0x2
  3667                           
  3668  0072                     ___aomod@sign:	
  3669                           ; 1 bytes @ 0x2
  3670                           
  3671  0072                     ___wmul@multiplicand:	
  3672                           ; 1 bytes @ 0x2
  3673                           
  3674                           
  3675                           ; 2 bytes @ 0x2
  3676  0072                     	ds	1
  3677  0073                     ??_MLX90614_ReadReg:
  3678  0073                     ?_fputc:	
  3679                           ; 1 bytes @ 0x3
  3680                           
  3681  0073                     ?_abs:	
  3682                           ; 2 bytes @ 0x3
  3683                           
  3684  0073                     strlen@a:	
  3685                           ; 2 bytes @ 0x3
  3686                           
  3687  0073                     abs@a:	
  3688                           ; 1 bytes @ 0x3
  3689                           
  3690  0073                     fputc@c:	
  3691                           ; 2 bytes @ 0x3
  3692                           
  3693  0073                     ___aodiv@quotient:	
  3694                           ; 2 bytes @ 0x3
  3695                           
  3696                           
  3697                           ; 8 bytes @ 0x3
  3698  0073                     	ds	1
  3699  0074                     ??___wmul:
  3700  0074                     ??___flneg:	
  3701                           ; 1 bytes @ 0x4
  3702                           
  3703  0074                     ??___fltol:	
  3704                           ; 1 bytes @ 0x4
  3705                           
  3706  0074                     strlen@s:	
  3707                           ; 1 bytes @ 0x4
  3708                           
  3709  0074                     ___wmul@product:	
  3710                           ; 1 bytes @ 0x4
  3711                           
  3712  0074                     __Umul8_16@product:	
  3713                           ; 2 bytes @ 0x4
  3714                           
  3715  0074                     ___lldiv@dividend:	
  3716                           ; 2 bytes @ 0x4
  3717                           
  3718  0074                     ___flge@ff2:	
  3719                           ; 4 bytes @ 0x4
  3720                           
  3721  0074                     ___fldiv@b:	
  3722                           ; 4 bytes @ 0x4
  3723                           
  3724                           
  3725                           ; 4 bytes @ 0x4
  3726  0074                     	ds	1
  3727  0075                     ??_abs:
  3728  0075                     fputc@fp:	
  3729                           ; 1 bytes @ 0x5
  3730                           
  3731                           
  3732                           ; 1 bytes @ 0x5
  3733  0075                     	ds	1
  3734  0076                     ??_fputc:
  3735  0076                     ?_toupper:	
  3736                           ; 1 bytes @ 0x6
  3737                           
  3738  0076                     MLX90614_ReadReg@reg:	
  3739                           ; 2 bytes @ 0x6
  3740                           
  3741  0076                     __Umul8_16@word_mpld:	
  3742                           ; 1 bytes @ 0x6
  3743                           
  3744  0076                     toupper@c:	
  3745                           ; 2 bytes @ 0x6
  3746                           
  3747                           
  3748                           ; 2 bytes @ 0x6
  3749  0076                     	ds	1
  3750  0077                     MLX90614_ReadReg@valReg:
  3751                           
  3752                           ; 2 bytes @ 0x7
  3753  0077                     	ds	1
  3754  0078                     ??_toupper:
  3755  0078                     ??___lldiv:	
  3756                           ; 1 bytes @ 0x8
  3757                           
  3758  0078                     ??___flge:	
  3759                           ; 1 bytes @ 0x8
  3760                           
  3761  0078                     ??___fldiv:	
  3762                           ; 1 bytes @ 0x8
  3763                           
  3764  0078                     __Umul8_16@multiplier:	
  3765                           ; 1 bytes @ 0x8
  3766                           
  3767                           
  3768                           ; 1 bytes @ 0x8
  3769  0078                     	ds	1
  3770  0079                     ?___xxtofl:
  3771  0079                     ___fltol@sign1:	
  3772                           ; 4 bytes @ 0x9
  3773                           
  3774  0079                     ___lldiv@quotient:	
  3775                           ; 1 bytes @ 0x9
  3776                           
  3777  0079                     ___xxtofl@val:	
  3778                           ; 4 bytes @ 0x9
  3779                           
  3780                           
  3781                           ; 4 bytes @ 0x9
  3782  0079                     	ds	1
  3783  007A                     ___fltol@exp1:
  3784                           
  3785                           ; 1 bytes @ 0xA
  3786  007A                     	ds	1
  3787  007B                     ?_fputs:
  3788  007B                     ?_stoa:	
  3789                           ; 2 bytes @ 0xB
  3790                           
  3791  007B                     stoa@s:	
  3792                           ; 2 bytes @ 0xB
  3793                           
  3794  007B                     fputs@fp:	
  3795                           ; 1 bytes @ 0xB
  3796                           
  3797                           
  3798                           ; 1 bytes @ 0xB
  3799  007B                     	ds	1
  3800  007C                     ??_pad:
  3801  007C                     _toupper$1027:	
  3802                           ; 1 bytes @ 0xC
  3803                           
  3804                           
  3805                           ; 2 bytes @ 0xC
  3806  007C                     	ds	1
  3807  007D                     ??_FLOAT_to_string:
  3808  007D                     ??___flsub:	
  3809                           ; 1 bytes @ 0xD
  3810                           
  3811  007D                     ___lldiv@counter:	
  3812                           ; 1 bytes @ 0xD
  3813                           
  3814                           
  3815                           ; 1 bytes @ 0xD
  3816  007D                     	ds	1
  3817                           
  3818                           	psect	cstackBANK0
  3819  0020                     __pcstackBANK0:
  3820  0020                     ?_serial_init:
  3821  0020                     ??_fputs:	
  3822                           ; 1 bytes @ 0x0
  3823                           
  3824  0020                     ??___xxtofl:	
  3825                           ; 1 bytes @ 0x0
  3826                           
  3827  0020                     ??_stoa:	
  3828                           ; 1 bytes @ 0x0
  3829                           
  3830  0020                     ?___aodiv:	
  3831                           ; 1 bytes @ 0x0
  3832                           
  3833  0020                     ?___aomod:	
  3834                           ; 8 bytes @ 0x0
  3835                           
  3836  0020                     serial_init@baudios:	
  3837                           ; 8 bytes @ 0x0
  3838                           
  3839  0020                     ___fldiv@rem:	
  3840                           ; 4 bytes @ 0x0
  3841                           
  3842  0020                     ___aodiv@divisor:	
  3843                           ; 4 bytes @ 0x0
  3844                           
  3845  0020                     ___aomod@divisor:	
  3846                           ; 8 bytes @ 0x0
  3847                           
  3848                           
  3849                           ; 8 bytes @ 0x0
  3850  0020                     	ds	3
  3851  0023                     fputs@c:
  3852  0023                     stoa@nuls:	
  3853                           ; 1 bytes @ 0x3
  3854                           
  3855                           
  3856                           ; 7 bytes @ 0x3
  3857  0023                     	ds	1
  3858  0024                     ??_serial_init:
  3859  0024                     ___fldiv@sign:	
  3860                           ; 1 bytes @ 0x4
  3861                           
  3862  0024                     ___xxtofl@sign:	
  3863                           ; 1 bytes @ 0x4
  3864                           
  3865  0024                     fputs@i:	
  3866                           ; 1 bytes @ 0x4
  3867                           
  3868                           
  3869                           ; 2 bytes @ 0x4
  3870  0024                     	ds	1
  3871  0025                     ___xxtofl@exp:
  3872  0025                     ___fldiv@new_exp:	
  3873                           ; 1 bytes @ 0x5
  3874                           
  3875                           
  3876                           ; 2 bytes @ 0x5
  3877  0025                     	ds	1
  3878  0026                     fputs@s:
  3879  0026                     ___xxtofl@arg:	
  3880                           ; 1 bytes @ 0x6
  3881                           
  3882                           
  3883                           ; 4 bytes @ 0x6
  3884  0026                     	ds	1
  3885  0027                     ?_pad:
  3886  0027                     pad@buf:	
  3887                           ; 2 bytes @ 0x7
  3888                           
  3889  0027                     ___fldiv@grs:	
  3890                           ; 1 bytes @ 0x7
  3891                           
  3892                           
  3893                           ; 4 bytes @ 0x7
  3894  0027                     	ds	1
  3895  0028                     serial_init@sx:
  3896  0028                     pad@p:	
  3897                           ; 2 bytes @ 0x8
  3898                           
  3899  0028                     ___aodiv@dividend:	
  3900                           ; 2 bytes @ 0x8
  3901                           
  3902  0028                     ___aomod@dividend:	
  3903                           ; 8 bytes @ 0x8
  3904                           
  3905                           
  3906                           ; 8 bytes @ 0x8
  3907  0028                     	ds	2
  3908  002A                     ?___flmul:
  3909  002A                     pad@i:	
  3910                           ; 4 bytes @ 0xA
  3911                           
  3912  002A                     stoa@i:	
  3913                           ; 2 bytes @ 0xA
  3914                           
  3915  002A                     ___flmul@b:	
  3916                           ; 2 bytes @ 0xA
  3917                           
  3918                           
  3919                           ; 4 bytes @ 0xA
  3920  002A                     	ds	1
  3921  002B                     ___fldiv@bexp:
  3922                           
  3923                           ; 1 bytes @ 0xB
  3924  002B                     	ds	1
  3925  002C                     ___fldiv@aexp:
  3926  002C                     pad@w:	
  3927                           ; 1 bytes @ 0xC
  3928                           
  3929  002C                     stoa@w:	
  3930                           ; 2 bytes @ 0xC
  3931                           
  3932                           
  3933                           ; 2 bytes @ 0xC
  3934  002C                     	ds	2
  3935  002E                     pad@fp:
  3936  002E                     stoa@fp:	
  3937                           ; 1 bytes @ 0xE
  3938                           
  3939  002E                     ___flmul@a:	
  3940                           ; 1 bytes @ 0xE
  3941                           
  3942                           
  3943                           ; 4 bytes @ 0xE
  3944  002E                     	ds	1
  3945  002F                     ?_xtoa:
  3946  002F                     stoa@cp:	
  3947                           ; 2 bytes @ 0xF
  3948                           
  3949  002F                     xtoa@d:	
  3950                           ; 1 bytes @ 0xF
  3951                           
  3952                           
  3953                           ; 8 bytes @ 0xF
  3954  002F                     	ds	1
  3955  0030                     ?_dtoa:
  3956  0030                     stoa@p:	
  3957                           ; 2 bytes @ 0x10
  3958                           
  3959  0030                     dtoa@d:	
  3960                           ; 2 bytes @ 0x10
  3961                           
  3962                           
  3963                           ; 8 bytes @ 0x10
  3964  0030                     	ds	2
  3965  0032                     ??___flmul:
  3966  0032                     stoa@l:	
  3967                           ; 1 bytes @ 0x12
  3968                           
  3969                           
  3970                           ; 2 bytes @ 0x12
  3971  0032                     	ds	5
  3972  0037                     ___flmul@sign:
  3973  0037                     xtoa@x:	
  3974                           ; 1 bytes @ 0x17
  3975                           
  3976                           
  3977                           ; 1 bytes @ 0x17
  3978  0037                     	ds	1
  3979  0038                     ??_dtoa:
  3980  0038                     ??_xtoa:	
  3981                           ; 1 bytes @ 0x18
  3982                           
  3983  0038                     ___flmul@aexp:	
  3984                           ; 1 bytes @ 0x18
  3985                           
  3986                           
  3987                           ; 1 bytes @ 0x18
  3988  0038                     	ds	1
  3989  0039                     ___flmul@grs:
  3990                           
  3991                           ; 4 bytes @ 0x19
  3992  0039                     	ds	2
  3993  003B                     _dtoa$926:
  3994                           
  3995                           ; 2 bytes @ 0x1B
  3996  003B                     	ds	2
  3997  003D                     ___flmul@bexp:
  3998  003D                     dtoa@p:	
  3999                           ; 1 bytes @ 0x1D
  4000                           
  4001                           
  4002                           ; 2 bytes @ 0x1D
  4003  003D                     	ds	1
  4004  003E                     ___flmul@prod:
  4005                           
  4006                           ; 4 bytes @ 0x1E
  4007  003E                     	ds	1
  4008  003F                     dtoa@fp:
  4009                           
  4010                           ; 1 bytes @ 0x1F
  4011  003F                     	ds	1
  4012  0040                     dtoa@w:
  4013  0040                     _xtoa$947:	
  4014                           ; 2 bytes @ 0x20
  4015                           
  4016                           
  4017                           ; 2 bytes @ 0x20
  4018  0040                     	ds	2
  4019  0042                     ___flmul@temp:
  4020  0042                     dtoa@s:	
  4021                           ; 2 bytes @ 0x22
  4022                           
  4023  0042                     _xtoa$948:	
  4024                           ; 2 bytes @ 0x22
  4025                           
  4026                           
  4027                           ; 2 bytes @ 0x22
  4028  0042                     	ds	2
  4029  0044                     ?___fladd:
  4030  0044                     xtoa@p:	
  4031                           ; 4 bytes @ 0x24
  4032                           
  4033  0044                     ___fladd@b:	
  4034                           ; 2 bytes @ 0x24
  4035                           
  4036  0044                     dtoa@n:	
  4037                           ; 4 bytes @ 0x24
  4038                           
  4039                           
  4040                           ; 8 bytes @ 0x24
  4041  0044                     	ds	2
  4042  0046                     xtoa@fp:
  4043                           
  4044                           ; 1 bytes @ 0x26
  4045  0046                     	ds	1
  4046  0047                     xtoa@w:
  4047                           
  4048                           ; 2 bytes @ 0x27
  4049  0047                     	ds	1
  4050  0048                     ___fladd@a:
  4051                           
  4052                           ; 4 bytes @ 0x28
  4053  0048                     	ds	1
  4054  0049                     xtoa@n:
  4055                           
  4056                           ; 8 bytes @ 0x29
  4057  0049                     	ds	3
  4058  004C                     ??___fladd:
  4059  004C                     dtoa@i:	
  4060                           ; 1 bytes @ 0x2C
  4061                           
  4062                           
  4063                           ; 2 bytes @ 0x2C
  4064  004C                     	ds	5
  4065  0051                     xtoa@i:
  4066                           
  4067                           ; 2 bytes @ 0x31
  4068  0051                     	ds	2
  4069  0053                     xtoa@c:
  4070                           
  4071                           ; 2 bytes @ 0x33
  4072  0053                     	ds	1
  4073  0054                     ___fladd@signs:
  4074                           
  4075                           ; 1 bytes @ 0x34
  4076  0054                     	ds	1
  4077  0055                     ?_vfpfcnvrt:
  4078  0055                     ___fladd@aexp:	
  4079                           ; 2 bytes @ 0x35
  4080                           
  4081  0055                     vfpfcnvrt@fmt:	
  4082                           ; 1 bytes @ 0x35
  4083                           
  4084                           
  4085                           ; 1 bytes @ 0x35
  4086  0055                     	ds	1
  4087  0056                     ___fladd@bexp:
  4088  0056                     vfpfcnvrt@ap:	
  4089                           ; 1 bytes @ 0x36
  4090                           
  4091                           
  4092                           ; 1 bytes @ 0x36
  4093  0056                     	ds	1
  4094  0057                     ??_vfpfcnvrt:
  4095  0057                     ___fladd@grs:	
  4096                           ; 1 bytes @ 0x37
  4097                           
  4098                           
  4099                           ; 1 bytes @ 0x37
  4100  0057                     	ds	1
  4101  0058                     ?_MLX90614_readAmbientTempC:
  4102  0058                     ?_MLX90614_readObjectTempC:	
  4103                           ; 4 bytes @ 0x38
  4104                           
  4105  0058                     ?___flsub:	
  4106                           ; 4 bytes @ 0x38
  4107                           
  4108  0058                     ___flsub@a:	
  4109                           ; 4 bytes @ 0x38
  4110                           
  4111                           
  4112                           ; 4 bytes @ 0x38
  4113  0058                     	ds	4
  4114  005C                     ??_MLX90614_readAmbientTempC:
  4115  005C                     ??_MLX90614_readObjectTempC:	
  4116                           ; 1 bytes @ 0x3C
  4117                           
  4118  005C                     ___flsub@b:	
  4119                           ; 1 bytes @ 0x3C
  4120                           
  4121  005C                     vfpfcnvrt@ll:	
  4122                           ; 4 bytes @ 0x3C
  4123                           
  4124                           
  4125                           ; 8 bytes @ 0x3C
  4126  005C                     	ds	4
  4127  0060                     ?_FLOAT_to_string:
  4128  0060                     FLOAT_to_string@number:	
  4129                           ; 1 bytes @ 0x40
  4130                           
  4131                           
  4132                           ; 4 bytes @ 0x40
  4133  0060                     	ds	4
  4134  0064                     FLOAT_to_string@text:
  4135  0064                     vfpfcnvrt@llu:	
  4136                           ; 1 bytes @ 0x44
  4137                           
  4138                           
  4139                           ; 8 bytes @ 0x44
  4140  0064                     	ds	1
  4141  0065                     FLOAT_to_string@decimal:
  4142                           
  4143                           ; 1 bytes @ 0x45
  4144  0065                     	ds	7
  4145  006C                     vfpfcnvrt@c:
  4146                           
  4147                           ; 1 bytes @ 0x4C
  4148  006C                     	ds	1
  4149  006D                     vfpfcnvrt@cp:
  4150                           
  4151                           ; 1 bytes @ 0x4D
  4152  006D                     	ds	1
  4153  006E                     vfpfcnvrt@fp:
  4154                           
  4155                           ; 1 bytes @ 0x4E
  4156  006E                     	ds	1
  4157  006F                     ??_printf:
  4158                           
  4159                           ; 1 bytes @ 0x4F
  4160  006F                     	ds	1
  4161                           
  4162                           	psect	maintext
  4163  08D8                     __pmaintext:	
  4164 ;;
  4165 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4166 ;;
  4167 ;; *************** function _main *****************
  4168 ;; Defined at:
  4169 ;;		line 26 in file "Main.c"
  4170 ;; Parameters:    Size  Location     Type
  4171 ;;		None
  4172 ;; Auto vars:     Size  Location     Type
  4173 ;;  buffer          8   19[BANK1 ] unsigned char [8]
  4174 ;;  temp            4   27[BANK1 ] float 
  4175 ;;  leerReg         2    0        unsigned short 
  4176 ;;  flag            1    0        _Bool 
  4177 ;; Return value:  Size  Location     Type
  4178 ;;                  1    wreg      void 
  4179 ;; Registers used:
  4180 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4181 ;; Tracked objects:
  4182 ;;		On entry : B1F/0
  4183 ;;		On exit  : 0/0
  4184 ;;		Unchanged: 0/0
  4185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4187 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  4188 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4189 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  4190 ;;Total ram usage:       14 bytes
  4191 ;; Hardware stack levels required when called: 10
  4192 ;; This function calls:
  4193 ;;		_FLOAT_to_string
  4194 ;;		_MLX90614_readAmbientTempC
  4195 ;;		_MLX90614_readObjectTempC
  4196 ;;		_adc_init
  4197 ;;		_i2c_init
  4198 ;;		_port_init
  4199 ;;		_printf
  4200 ;;		_sensorPlaca
  4201 ;;		_serial_init
  4202 ;; This function is called by:
  4203 ;;		Startup code after reset
  4204 ;; This function uses a non-reentrant model
  4205 ;;
  4206                           
  4207                           
  4208                           ;psect for function _main
  4209  08D8                     _main:
  4210                           
  4211                           ;Main.c: 29:     uint16_t leerReg;;Main.c: 30:     uint8_t buffer[8];;Main.c: 31:     po
      +                          rt_init();
  4212                           
  4213                           ;incstack = 0
  4214                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4215  08D8  3193  23B1  3188   	fcall	_port_init
  4216                           
  4217                           ;Main.c: 32:     serial_init(9600);
  4218  08DB  3000               	movlw	0
  4219  08DC  0020               	movlb	0	; select bank0
  4220  08DD  00A3               	movwf	serial_init@baudios+3
  4221  08DE  3000               	movlw	0
  4222  08DF  00A2               	movwf	serial_init@baudios+2
  4223  08E0  3025               	movlw	37
  4224  08E1  00A1               	movwf	serial_init@baudios+1
  4225  08E2  3080               	movlw	128
  4226  08E3  00A0               	movwf	serial_init@baudios
  4227  08E4  3195  25D1  3188   	fcall	_serial_init
  4228                           
  4229                           ;Main.c: 33:     adc_init();
  4230  08E7  3194  2423  3188   	fcall	_adc_init
  4231                           
  4232                           ;Main.c: 34:     i2c_init();
  4233  08EA  3194  243D  3188   	fcall	_i2c_init
  4234  08ED                     l3683:
  4235                           
  4236                           ;Main.c: 53:         temp = MLX90614_readAmbientTempC();
  4237  08ED  3195  2545  3188   	fcall	_MLX90614_readAmbientTempC
  4238  08F0  085B               	movf	?_MLX90614_readAmbientTempC+3,w
  4239  08F1  0021               	movlb	1	; select bank1
  4240  08F2  00E8               	movwf	(main@temp+3)^(0+128)
  4241  08F3  0020               	movlb	0	; select bank0
  4242  08F4  085A               	movf	?_MLX90614_readAmbientTempC+2,w
  4243  08F5  0021               	movlb	1	; select bank1
  4244  08F6  00E7               	movwf	(main@temp+2)^(0+128)
  4245  08F7  0020               	movlb	0	; select bank0
  4246  08F8  0859               	movf	?_MLX90614_readAmbientTempC+1,w
  4247  08F9  0021               	movlb	1	; select bank1
  4248  08FA  00E6               	movwf	(main@temp+1)^(0+128)
  4249  08FB  0020               	movlb	0	; select bank0
  4250  08FC  0858               	movf	?_MLX90614_readAmbientTempC,w
  4251  08FD  0021               	movlb	1	; select bank1
  4252  08FE  00E5               	movwf	main@temp^(0+128)
  4253                           
  4254                           ;Main.c: 54:         FLOAT_to_string(temp,buffer,2);
  4255  08FF  0868               	movf	(main@temp+3)^(0+128),w
  4256  0900  0020               	movlb	0	; select bank0
  4257  0901  00E3               	movwf	FLOAT_to_string@number+3
  4258  0902  0021               	movlb	1	; select bank1
  4259  0903  0867               	movf	(main@temp+2)^(0+128),w
  4260  0904  0020               	movlb	0	; select bank0
  4261  0905  00E2               	movwf	FLOAT_to_string@number+2
  4262  0906  0021               	movlb	1	; select bank1
  4263  0907  0866               	movf	(main@temp+1)^(0+128),w
  4264  0908  0020               	movlb	0	; select bank0
  4265  0909  00E1               	movwf	FLOAT_to_string@number+1
  4266  090A  0021               	movlb	1	; select bank1
  4267  090B  0865               	movf	main@temp^(0+128),w
  4268  090C  0020               	movlb	0	; select bank0
  4269  090D  00E0               	movwf	FLOAT_to_string@number
  4270  090E  30DD               	movlw	(low (main@buffer| 0))& (0+255)
  4271  090F  0021               	movlb	1	; select bank1
  4272  0910  00DB               	movwf	??_main^(0+128)
  4273  0911  085B               	movf	??_main^(0+128),w
  4274  0912  0020               	movlb	0	; select bank0
  4275  0913  00E4               	movwf	FLOAT_to_string@text
  4276  0914  3002               	movlw	2
  4277  0915  0021               	movlb	1	; select bank1
  4278  0916  00DC               	movwf	(??_main+1)^(0+128)
  4279  0917  085C               	movf	(??_main+1)^(0+128),w
  4280  0918  0020               	movlb	0	; select bank0
  4281  0919  00E5               	movwf	FLOAT_to_string@decimal
  4282  091A  3185  25A2  3188   	fcall	_FLOAT_to_string
  4283                           
  4284                           ;Main.c: 57:         printf("{\"tAmb\":\"%s\",\"tobj\":\"",buffer);
  4285  091D  3000               	movlw	low (STR_1| (0+32768))
  4286  091E  0021               	movlb	1	; select bank1
  4287  091F  00D2               	movwf	printf@fmt^(0+128)
  4288  0920  3098               	movlw	high (STR_1| (0+32768))
  4289  0921  00D3               	movwf	(printf@fmt^(0+128)+1)
  4290  0922  30DD               	movlw	(low (main@buffer| 0))& (0+255)
  4291  0923  00DB               	movwf	??_main^(0+128)
  4292  0924  085B               	movf	??_main^(0+128),w
  4293  0925  00D4               	movwf	(low ((?_printf| 0+2)))^(0+128)
  4294  0926  3193  239D  3188   	fcall	_printf
  4295                           
  4296                           ;Main.c: 62:         temp = MLX90614_readObjectTempC();
  4297  0929  3195  258B  3188   	fcall	_MLX90614_readObjectTempC
  4298  092C  085B               	movf	?_MLX90614_readObjectTempC+3,w
  4299  092D  0021               	movlb	1	; select bank1
  4300  092E  00E8               	movwf	(main@temp+3)^(0+128)
  4301  092F  0020               	movlb	0	; select bank0
  4302  0930  085A               	movf	?_MLX90614_readObjectTempC+2,w
  4303  0931  0021               	movlb	1	; select bank1
  4304  0932  00E7               	movwf	(main@temp+2)^(0+128)
  4305  0933  0020               	movlb	0	; select bank0
  4306  0934  0859               	movf	?_MLX90614_readObjectTempC+1,w
  4307  0935  0021               	movlb	1	; select bank1
  4308  0936  00E6               	movwf	(main@temp+1)^(0+128)
  4309  0937  0020               	movlb	0	; select bank0
  4310  0938  0858               	movf	?_MLX90614_readObjectTempC,w
  4311  0939  0021               	movlb	1	; select bank1
  4312  093A  00E5               	movwf	main@temp^(0+128)
  4313                           
  4314                           ;Main.c: 71:         FLOAT_to_string(temp,buffer,2);
  4315  093B  0868               	movf	(main@temp+3)^(0+128),w
  4316  093C  0020               	movlb	0	; select bank0
  4317  093D  00E3               	movwf	FLOAT_to_string@number+3
  4318  093E  0021               	movlb	1	; select bank1
  4319  093F  0867               	movf	(main@temp+2)^(0+128),w
  4320  0940  0020               	movlb	0	; select bank0
  4321  0941  00E2               	movwf	FLOAT_to_string@number+2
  4322  0942  0021               	movlb	1	; select bank1
  4323  0943  0866               	movf	(main@temp+1)^(0+128),w
  4324  0944  0020               	movlb	0	; select bank0
  4325  0945  00E1               	movwf	FLOAT_to_string@number+1
  4326  0946  0021               	movlb	1	; select bank1
  4327  0947  0865               	movf	main@temp^(0+128),w
  4328  0948  0020               	movlb	0	; select bank0
  4329  0949  00E0               	movwf	FLOAT_to_string@number
  4330  094A  30DD               	movlw	(low (main@buffer| 0))& (0+255)
  4331  094B  0021               	movlb	1	; select bank1
  4332  094C  00DB               	movwf	??_main^(0+128)
  4333  094D  085B               	movf	??_main^(0+128),w
  4334  094E  0020               	movlb	0	; select bank0
  4335  094F  00E4               	movwf	FLOAT_to_string@text
  4336  0950  3002               	movlw	2
  4337  0951  0021               	movlb	1	; select bank1
  4338  0952  00DC               	movwf	(??_main+1)^(0+128)
  4339  0953  085C               	movf	(??_main+1)^(0+128),w
  4340  0954  0020               	movlb	0	; select bank0
  4341  0955  00E5               	movwf	FLOAT_to_string@decimal
  4342  0956  3185  25A2  3188   	fcall	_FLOAT_to_string
  4343                           
  4344                           ;Main.c: 73:         printf("%s\",\"tplaca\":\"",buffer);
  4345  0959  3016               	movlw	low (STR_2| (0+32768))
  4346  095A  0021               	movlb	1	; select bank1
  4347  095B  00D2               	movwf	printf@fmt^(0+128)
  4348  095C  3098               	movlw	high (STR_2| (0+32768))
  4349  095D  00D3               	movwf	(printf@fmt^(0+128)+1)
  4350  095E  30DD               	movlw	(low (main@buffer| 0))& (0+255)
  4351  095F  00DB               	movwf	??_main^(0+128)
  4352  0960  085B               	movf	??_main^(0+128),w
  4353  0961  00D4               	movwf	(low ((?_printf| 0+2)))^(0+128)
  4354  0962  3193  239D  3188   	fcall	_printf
  4355                           
  4356                           ;Main.c: 74:         sensorPlaca();
  4357  0965  3196  26BD  3188   	fcall	_sensorPlaca
  4358                           
  4359                           ;Main.c: 76:         _delay((unsigned long)((1000)*(32000000UL/4000.0)));
  4360  0968  3029               	movlw	41
  4361  0969  0021               	movlb	1	; select bank1
  4362  096A  00DC               	movwf	(??_main^(0+128)+1)
  4363  096B  3096               	movlw	150
  4364  096C  00DB               	movwf	??_main^(0+128)
  4365  096D  307F               	movlw	127
  4366  096E                     u5137:
  4367  096E  0B89               	decfsz	9,f
  4368  096F  296E               	goto	u5137
  4369  0970  0BDB               	decfsz	??_main^(0+128),f
  4370  0971  296E               	goto	u5137
  4371  0972  0BDC               	decfsz	(??_main^(0+128)+1),f
  4372  0973  296E               	goto	u5137
  4373  0974  28ED               	goto	l3683
  4374  0975                     __end_of_main:
  4375                           
  4376                           	psect	text1
  4377  15D1                     __ptext1:	
  4378 ;; *************** function _serial_init *****************
  4379 ;; Defined at:
  4380 ;;		line 4 in file "uart.c"
  4381 ;; Parameters:    Size  Location     Type
  4382 ;;  baudios         4    0[BANK0 ] unsigned long 
  4383 ;; Auto vars:     Size  Location     Type
  4384 ;;  sx              2    8[BANK0 ] unsigned short 
  4385 ;; Return value:  Size  Location     Type
  4386 ;;                  1    wreg      void 
  4387 ;; Registers used:
  4388 ;;		wreg, status,2, status,0, pclath, cstack
  4389 ;; Tracked objects:
  4390 ;;		On entry : B1F/0
  4391 ;;		On exit  : B1F/1E
  4392 ;;		Unchanged: B00/0
  4393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4394 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4395 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4396 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4397 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4398 ;;Total ram usage:       10 bytes
  4399 ;; Hardware stack levels used: 1
  4400 ;; Hardware stack levels required when called: 1
  4401 ;; This function calls:
  4402 ;;		___lldiv
  4403 ;; This function is called by:
  4404 ;;		_main
  4405 ;; This function uses a non-reentrant model
  4406 ;;
  4407                           
  4408                           
  4409                           ;psect for function _serial_init
  4410  15D1                     _serial_init:
  4411                           
  4412                           ;uart.c: 5:     uint16_t sx;;uart.c: 8:     BAUD1CON = 0x08;
  4413                           
  4414                           ;incstack = 0
  4415                           ; Regs used in _serial_init: [wreg+status,2+status,0+pclath+cstack]
  4416  15D1  3008               	movlw	8
  4417  15D2  0022               	movlb	2	; select bank2
  4418  15D3  009F               	movwf	31	;volatile
  4419                           
  4420                           ;uart.c: 10:     RC1STA = 0b10010000;
  4421  15D4  3090               	movlw	144
  4422  15D5  009D               	movwf	29	;volatile
  4423                           
  4424                           ;uart.c: 16:     TX1STA = 0b00100100;
  4425  15D6  3024               	movlw	36
  4426  15D7  009E               	movwf	30	;volatile
  4427                           
  4428                           ;uart.c: 21:     sx = (uint16_t) (((32000000UL/baudios)/4 ) - 1 );
  4429  15D8  0020               	movlb	0	; select bank0
  4430  15D9  0823               	movf	serial_init@baudios+3,w
  4431  15DA  00F3               	movwf	___lldiv@divisor+3
  4432  15DB  0822               	movf	serial_init@baudios+2,w
  4433  15DC  00F2               	movwf	___lldiv@divisor+2
  4434  15DD  0821               	movf	serial_init@baudios+1,w
  4435  15DE  00F1               	movwf	___lldiv@divisor+1
  4436  15DF  0820               	movf	serial_init@baudios,w
  4437  15E0  00F0               	movwf	___lldiv@divisor
  4438  15E1  3001               	movlw	1
  4439  15E2  00F7               	movwf	___lldiv@dividend+3
  4440  15E3  30E8               	movlw	232
  4441  15E4  00F6               	movwf	___lldiv@dividend+2
  4442  15E5  3048               	movlw	72
  4443  15E6  00F5               	movwf	___lldiv@dividend+1
  4444  15E7  3000               	movlw	0
  4445  15E8  00F4               	movwf	___lldiv@dividend
  4446  15E9  3196  266B  3195   	fcall	___lldiv
  4447  15EC  0870               	movf	?___lldiv,w
  4448  15ED  00A4               	movwf	??_serial_init
  4449  15EE  0871               	movf	?___lldiv+1,w
  4450  15EF  00A5               	movwf	??_serial_init+1
  4451  15F0  0872               	movf	?___lldiv+2,w
  4452  15F1  00A6               	movwf	??_serial_init+2
  4453  15F2  0873               	movf	?___lldiv+3,w
  4454  15F3  00A7               	movwf	??_serial_init+3
  4455  15F4  3002               	movlw	2
  4456  15F5                     u5005:
  4457  15F5  36A7               	lsrf	??_serial_init+3,f
  4458  15F6  0CA6               	rrf	??_serial_init+2,f
  4459  15F7  0CA5               	rrf	??_serial_init+1,f
  4460  15F8  0CA4               	rrf	??_serial_init,f
  4461  15F9  0B89               	decfsz	9,f
  4462  15FA  2DF5               	goto	u5005
  4463  15FB  0824               	movf	??_serial_init,w
  4464  15FC  3EFF               	addlw	255
  4465  15FD  00A8               	movwf	serial_init@sx
  4466  15FE  30FF               	movlw	255
  4467  15FF  3D25               	addwfc	??_serial_init+1,w
  4468  1600  00A9               	movwf	serial_init@sx+1
  4469                           
  4470                           ;uart.c: 22:     SP1BRGL = (uint8_t)sx;
  4471  1601  0828               	movf	serial_init@sx,w
  4472  1602  0022               	movlb	2	; select bank2
  4473  1603  009B               	movwf	27	;volatile
  4474                           
  4475                           ;uart.c: 23:     SP1BRGH = (uint8_t)(sx>>8);
  4476  1604  0020               	movlb	0	; select bank0
  4477  1605  0829               	movf	serial_init@sx+1,w
  4478  1606  0022               	movlb	2	; select bank2
  4479  1607  009C               	movwf	28	;volatile
  4480                           
  4481                           ;uart.c: 28:     TRISC = TRISC & ~(1<<0);
  4482  1608  0020               	movlb	0	; select bank0
  4483  1609  0813               	movf	19,w	;volatile
  4484  160A  39FE               	andlw	254
  4485  160B  0093               	movwf	19	;volatile
  4486                           
  4487                           ;uart.c: 29:     TRISC = TRISC |(1<<1);
  4488  160C  0813               	movf	19,w	;volatile
  4489  160D  3802               	iorlw	2
  4490  160E  0093               	movwf	19	;volatile
  4491                           
  4492                           ;uart.c: 30:     ANSELC = ANSELC & ~(1<<7);
  4493  160F  003E               	movlb	30	; select bank30
  4494  1610  084E               	movf	78,w	;volatile
  4495  1611  397F               	andlw	127
  4496  1612  00CE               	movwf	78	;volatile
  4497                           
  4498                           ;uart.c: 31:     ANSELC = ANSELC & ~(1<<2);
  4499  1613  084E               	movf	78,w	;volatile
  4500  1614  39FB               	andlw	251
  4501  1615  00CE               	movwf	78	;volatile
  4502                           
  4503                           ;uart.c: 32:     RXPPS = 0x11;
  4504  1616  3011               	movlw	17
  4505  1617  003D               	movlb	29	; select bank29
  4506  1618  00CB               	movwf	75	;volatile
  4507                           
  4508                           ;uart.c: 34:     RC0PPS = 0x10;
  4509  1619  3010               	movlw	16
  4510  161A  003E               	movlb	30	; select bank30
  4511  161B  00A0               	movwf	32	;volatile
  4512  161C  0008               	return
  4513  161D                     __end_of_serial_init:
  4514                           
  4515                           	psect	text2
  4516  166B                     __ptext2:	
  4517 ;; *************** function ___lldiv *****************
  4518 ;; Defined at:
  4519 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
  4520 ;; Parameters:    Size  Location     Type
  4521 ;;  divisor         4    0[COMMON] unsigned long 
  4522 ;;  dividend        4    4[COMMON] unsigned long 
  4523 ;; Auto vars:     Size  Location     Type
  4524 ;;  quotient        4    9[COMMON] unsigned long 
  4525 ;;  counter         1   13[COMMON] unsigned char 
  4526 ;; Return value:  Size  Location     Type
  4527 ;;                  4    0[COMMON] unsigned long 
  4528 ;; Registers used:
  4529 ;;		wreg, status,2, status,0
  4530 ;; Tracked objects:
  4531 ;;		On entry : B1F/0
  4532 ;;		On exit  : B1F/0
  4533 ;;		Unchanged: B1F/0
  4534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4535 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4536 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4537 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4538 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4539 ;;Total ram usage:       14 bytes
  4540 ;; Hardware stack levels used: 1
  4541 ;; This function calls:
  4542 ;;		Nothing
  4543 ;; This function is called by:
  4544 ;;		_serial_init
  4545 ;; This function uses a non-reentrant model
  4546 ;;
  4547                           
  4548                           
  4549                           ;psect for function ___lldiv
  4550  166B                     ___lldiv:
  4551                           
  4552                           ;incstack = 0
  4553                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4554  166B  3000               	movlw	0
  4555  166C  00FC               	movwf	___lldiv@quotient+3
  4556  166D  3000               	movlw	0
  4557  166E  00FB               	movwf	___lldiv@quotient+2
  4558  166F  3000               	movlw	0
  4559  1670  00FA               	movwf	___lldiv@quotient+1
  4560  1671  3000               	movlw	0
  4561  1672  00F9               	movwf	___lldiv@quotient
  4562  1673  0873               	movf	___lldiv@divisor+3,w
  4563  1674  0472               	iorwf	___lldiv@divisor+2,w
  4564  1675  0471               	iorwf	___lldiv@divisor+1,w
  4565  1676  0470               	iorwf	___lldiv@divisor,w
  4566  1677  1903               	skipnz
  4567  1678  2EB4               	goto	l3117
  4568  1679  01FD               	clrf	___lldiv@counter
  4569  167A  0AFD               	incf	___lldiv@counter,f
  4570  167B                     l3103:
  4571  167B  1BF3               	btfsc	___lldiv@divisor+3,7
  4572  167C  2E89               	goto	l3105
  4573  167D  3001               	movlw	1
  4574  167E                     u4105:
  4575  167E  35F0               	lslf	___lldiv@divisor,f
  4576  167F  0DF1               	rlf	___lldiv@divisor+1,f
  4577  1680  0DF2               	rlf	___lldiv@divisor+2,f
  4578  1681  0DF3               	rlf	___lldiv@divisor+3,f
  4579  1682  0B89               	decfsz	9,f
  4580  1683  2E7E               	goto	u4105
  4581  1684  3001               	movlw	1
  4582  1685  00F8               	movwf	??___lldiv
  4583  1686  0878               	movf	??___lldiv,w
  4584  1687  07FD               	addwf	___lldiv@counter,f
  4585  1688  2E7B               	goto	l3103
  4586  1689                     l3105:
  4587  1689  3001               	movlw	1
  4588  168A                     u4125:
  4589  168A  35F9               	lslf	___lldiv@quotient,f
  4590  168B  0DFA               	rlf	___lldiv@quotient+1,f
  4591  168C  0DFB               	rlf	___lldiv@quotient+2,f
  4592  168D  0DFC               	rlf	___lldiv@quotient+3,f
  4593  168E  0B89               	decfsz	9,f
  4594  168F  2E8A               	goto	u4125
  4595  1690  0873               	movf	___lldiv@divisor+3,w
  4596  1691  0277               	subwf	___lldiv@dividend+3,w
  4597  1692  1D03               	skipz
  4598  1693  2E9E               	goto	u4135
  4599  1694  0872               	movf	___lldiv@divisor+2,w
  4600  1695  0276               	subwf	___lldiv@dividend+2,w
  4601  1696  1D03               	skipz
  4602  1697  2E9E               	goto	u4135
  4603  1698  0871               	movf	___lldiv@divisor+1,w
  4604  1699  0275               	subwf	___lldiv@dividend+1,w
  4605  169A  1D03               	skipz
  4606  169B  2E9E               	goto	u4135
  4607  169C  0870               	movf	___lldiv@divisor,w
  4608  169D  0274               	subwf	___lldiv@dividend,w
  4609  169E                     u4135:
  4610  169E  1C03               	skipc
  4611  169F  2EA9               	goto	l3113
  4612  16A0  0870               	movf	___lldiv@divisor,w
  4613  16A1  02F4               	subwf	___lldiv@dividend,f
  4614  16A2  0871               	movf	___lldiv@divisor+1,w
  4615  16A3  3BF5               	subwfb	___lldiv@dividend+1,f
  4616  16A4  0872               	movf	___lldiv@divisor+2,w
  4617  16A5  3BF6               	subwfb	___lldiv@dividend+2,f
  4618  16A6  0873               	movf	___lldiv@divisor+3,w
  4619  16A7  3BF7               	subwfb	___lldiv@dividend+3,f
  4620  16A8  1479               	bsf	___lldiv@quotient,0
  4621  16A9                     l3113:
  4622  16A9  3001               	movlw	1
  4623  16AA                     u4145:
  4624  16AA  36F3               	lsrf	___lldiv@divisor+3,f
  4625  16AB  0CF2               	rrf	___lldiv@divisor+2,f
  4626  16AC  0CF1               	rrf	___lldiv@divisor+1,f
  4627  16AD  0CF0               	rrf	___lldiv@divisor,f
  4628  16AE  0B89               	decfsz	9,f
  4629  16AF  2EAA               	goto	u4145
  4630  16B0  3001               	movlw	1
  4631  16B1  02FD               	subwf	___lldiv@counter,f
  4632  16B2  1D03               	btfss	3,2
  4633  16B3  2E89               	goto	l3105
  4634  16B4                     l3117:
  4635  16B4  087C               	movf	___lldiv@quotient+3,w
  4636  16B5  00F3               	movwf	?___lldiv+3
  4637  16B6  087B               	movf	___lldiv@quotient+2,w
  4638  16B7  00F2               	movwf	?___lldiv+2
  4639  16B8  087A               	movf	___lldiv@quotient+1,w
  4640  16B9  00F1               	movwf	?___lldiv+1
  4641  16BA  0879               	movf	___lldiv@quotient,w
  4642  16BB  00F0               	movwf	?___lldiv
  4643  16BC  0008               	return
  4644  16BD                     __end_of___lldiv:
  4645                           
  4646                           	psect	text3
  4647  16BD                     __ptext3:	
  4648 ;; *************** function _sensorPlaca *****************
  4649 ;; Defined at:
  4650 ;;		line 88 in file "Main.c"
  4651 ;; Parameters:    Size  Location     Type
  4652 ;;		None
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;		None
  4655 ;; Return value:  Size  Location     Type
  4656 ;;                  1    wreg      void 
  4657 ;; Registers used:
  4658 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4659 ;; Tracked objects:
  4660 ;;		On entry : 1F/1
  4661 ;;		On exit  : 1F/1
  4662 ;;		Unchanged: 0/0
  4663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4666 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4667 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4668 ;;Total ram usage:        2 bytes
  4669 ;; Hardware stack levels used: 1
  4670 ;; Hardware stack levels required when called: 9
  4671 ;; This function calls:
  4672 ;;		___wmul
  4673 ;;		_i2c_read
  4674 ;;		_i2c_restart
  4675 ;;		_i2c_start
  4676 ;;		_i2c_stop
  4677 ;;		_i2c_write
  4678 ;;		_printf
  4679 ;; This function is called by:
  4680 ;;		_main
  4681 ;; This function uses a non-reentrant model
  4682 ;;
  4683                           
  4684                           
  4685                           ;psect for function _sensorPlaca
  4686  16BD                     _sensorPlaca:
  4687                           
  4688                           ;Main.c: 89:     i2c_start();
  4689                           
  4690                           ;incstack = 0
  4691                           ; Regs used in _sensorPlaca: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4692  16BD  3193  2339  3196   	fcall	_i2c_start
  4693                           
  4694                           ;Main.c: 90:         i2c_write(0b01110000);
  4695  16C0  3070               	movlw	112
  4696  16C1  3193  2379  3196   	fcall	_i2c_write
  4697                           
  4698                           ;Main.c: 91:         i2c_write(0);
  4699  16C4  3000               	movlw	0
  4700  16C5  3193  2379  3196   	fcall	_i2c_write
  4701                           
  4702                           ;Main.c: 92:         i2c_restart();
  4703  16C8  3193  2335  3196   	fcall	_i2c_restart
  4704                           
  4705                           ;Main.c: 93:         i2c_write(0b01110001);
  4706  16CB  3071               	movlw	113
  4707  16CC  3193  2379  3196   	fcall	_i2c_write
  4708                           
  4709                           ;Main.c: 94:         high_byte = (int8_t)i2c_read(0);
  4710  16CF  3000               	movlw	0
  4711  16D0  3193  2389  3196   	fcall	_i2c_read
  4712  16D3  0021               	movlb	1	; select bank1
  4713  16D4  00D9               	movwf	??_sensorPlaca^(0+128)
  4714  16D5  0859               	movf	??_sensorPlaca^(0+128),w
  4715  16D6  00A9               	movwf	_high_byte^(0+128)
  4716                           
  4717                           ;Main.c: 95:         i2c_stop();
  4718  16D7  3193  233E  3196   	fcall	_i2c_stop
  4719                           
  4720                           ;Main.c: 97:         i2c_start();
  4721  16DA  3193  2339  3196   	fcall	_i2c_start
  4722                           
  4723                           ;Main.c: 98:         i2c_write(0b01110000);
  4724  16DD  3070               	movlw	112
  4725  16DE  3193  2379  3196   	fcall	_i2c_write
  4726                           
  4727                           ;Main.c: 99:         i2c_write(2);
  4728  16E1  3002               	movlw	2
  4729  16E2  3193  2379  3196   	fcall	_i2c_write
  4730                           
  4731                           ;Main.c: 100:         i2c_restart();
  4732  16E5  3193  2335  3196   	fcall	_i2c_restart
  4733                           
  4734                           ;Main.c: 101:         i2c_write(0b01110001);
  4735  16E8  3071               	movlw	113
  4736  16E9  3193  2379  3196   	fcall	_i2c_write
  4737                           
  4738                           ;Main.c: 102:         low_byte = i2c_read(0);
  4739  16EC  3000               	movlw	0
  4740  16ED  3193  2389  3196   	fcall	_i2c_read
  4741  16F0  0021               	movlb	1	; select bank1
  4742  16F1  00D9               	movwf	??_sensorPlaca^(0+128)
  4743  16F2  0859               	movf	??_sensorPlaca^(0+128),w
  4744  16F3  00A8               	movwf	_low_byte^(0+128)
  4745                           
  4746                           ;Main.c: 103:         i2c_stop();
  4747  16F4  3193  233E  3196   	fcall	_i2c_stop
  4748                           
  4749                           ;Main.c: 105:         low_byte = low_byte >> 6;
  4750  16F7  0021               	movlb	1	; select bank1
  4751  16F8  0828               	movf	_low_byte^(0+128),w
  4752  16F9  00D9               	movwf	??_sensorPlaca^(0+128)
  4753  16FA  3006               	movlw	6
  4754  16FB                     u5125:
  4755  16FB  36D9               	lsrf	??_sensorPlaca^(0+128),f
  4756  16FC  0B89               	decfsz	9,f
  4757  16FD  2EFB               	goto	u5125
  4758  16FE  0859               	movf	??_sensorPlaca^(0+128),w
  4759  16FF  00DA               	movwf	(??_sensorPlaca+1)^(0+128)
  4760  1700  085A               	movf	(??_sensorPlaca+1)^(0+128),w
  4761  1701  00A8               	movwf	_low_byte^(0+128)
  4762                           
  4763                           ;Main.c: 107:         printf("%d.%d\"}",high_byte, low_byte *25);
  4764  1702  3025               	movlw	low (STR_3| (0+32768))
  4765  1703  00D2               	movwf	printf@fmt^(0+128)
  4766  1704  3098               	movlw	high (STR_3| (0+32768))
  4767  1705  00D3               	movwf	(printf@fmt^(0+128)+1)
  4768  1706  0829               	movf	_high_byte^(0+128),w
  4769  1707  00D4               	movwf	(?_printf^(0+128)+2)
  4770  1708  01D5               	clrf	((?_printf+1)^(0+128)+2)
  4771  1709  1BD4               	btfsc	(?_printf^(0+128)+2),7
  4772  170A  03D5               	decf	((?_printf+1)^(0+128)+2),f
  4773  170B  0828               	movf	_low_byte^(0+128),w
  4774  170C  00D9               	movwf	??_sensorPlaca^(0+128)
  4775  170D  01DA               	clrf	(??_sensorPlaca^(0+128)+1)
  4776  170E  0859               	movf	??_sensorPlaca^(0+128),w
  4777  170F  00F0               	movwf	___wmul@multiplier
  4778  1710  085A               	movf	(??_sensorPlaca+1)^(0+128),w
  4779  1711  00F1               	movwf	___wmul@multiplier+1
  4780  1712  3019               	movlw	25
  4781  1713  00F2               	movwf	___wmul@multiplicand
  4782  1714  3000               	movlw	0
  4783  1715  00F3               	movwf	___wmul@multiplicand+1
  4784  1716  3194  2457  3196   	fcall	___wmul
  4785  1719  0871               	movf	?___wmul+1,w
  4786  171A  00D7               	movwf	((?_printf+1)^(0+128)+4)
  4787  171B  0870               	movf	?___wmul,w
  4788  171C  00D6               	movwf	(?_printf^(0+128)+4)
  4789  171D  3193  239D         	fcall	_printf
  4790  171F  0008               	return
  4791  1720                     __end_of_sensorPlaca:
  4792                           
  4793                           	psect	text4
  4794  139D                     __ptext4:	
  4795 ;; *************** function _printf *****************
  4796 ;; Defined at:
  4797 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  4798 ;; Parameters:    Size  Location     Type
  4799 ;;  fmt             2    8[BANK1 ] PTR const unsigned char 
  4800 ;;		 -> STR_5(6), STR_4(6), STR_3(8), STR_2(15), 
  4801 ;;		 -> STR_1(22), 
  4802 ;; Auto vars:     Size  Location     Type
  4803 ;;  ret             2    0        int 
  4804 ;;  ap              1   14[BANK1 ] PTR void [1]
  4805 ;;		 -> ?_printf(2), 
  4806 ;; Return value:  Size  Location     Type
  4807 ;;                  2    8[BANK1 ] int 
  4808 ;; Registers used:
  4809 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4810 ;; Tracked objects:
  4811 ;;		On entry : 1F/1
  4812 ;;		On exit  : 1F/1
  4813 ;;		Unchanged: 0/0
  4814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4815 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  4816 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4817 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4818 ;;      Totals:         0       1       7       0       0       0       0       0       0       0       0       0       
      +0       0
  4819 ;;Total ram usage:        8 bytes
  4820 ;; Hardware stack levels used: 1
  4821 ;; Hardware stack levels required when called: 8
  4822 ;; This function calls:
  4823 ;;		_vfprintf
  4824 ;; This function is called by:
  4825 ;;		_main
  4826 ;;		_sensorPlaca
  4827 ;; This function uses a non-reentrant model
  4828 ;;
  4829                           
  4830                           
  4831                           ;psect for function _printf
  4832  139D                     _printf:
  4833                           
  4834                           ;incstack = 0
  4835                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4836  139D  30D4               	movlw	(low ((?_printf| 0+2)))& (0+255)
  4837  139E  0020               	movlb	0	; select bank0
  4838  139F  00EF               	movwf	??_printf
  4839  13A0  086F               	movf	??_printf,w
  4840  13A1  0021               	movlb	1	; select bank1
  4841  13A2  00D8               	movwf	printf@ap^(0+128)
  4842  13A3  0853               	movf	(printf@fmt+1)^(0+128),w
  4843  13A4  00CB               	movwf	(vfprintf@fmt+1)^(0+128)
  4844  13A5  0852               	movf	printf@fmt^(0+128),w
  4845  13A6  00CA               	movwf	vfprintf@fmt^(0+128)
  4846  13A7  30D8               	movlw	(low (printf@ap| 0))& (0+255)
  4847  13A8  0020               	movlb	0	; select bank0
  4848  13A9  00EF               	movwf	??_printf
  4849  13AA  086F               	movf	??_printf,w
  4850  13AB  0021               	movlb	1	; select bank1
  4851  13AC  00CC               	movwf	vfprintf@ap^(0+128)
  4852  13AD  3000               	movlw	0
  4853  13AE  3180  2004         	fcall	_vfprintf
  4854  13B0  0008               	return
  4855  13B1                     __end_of_printf:
  4856                           
  4857                           	psect	text5
  4858  0004                     __ptext5:	
  4859 ;; *************** function _vfprintf *****************
  4860 ;; Defined at:
  4861 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4862 ;; Parameters:    Size  Location     Type
  4863 ;;  fp              1    wreg     PTR struct _IO_FILE
  4864 ;;		 -> NULL(0), 
  4865 ;;  fmt             2    0[BANK1 ] PTR const unsigned char 
  4866 ;;		 -> STR_5(6), STR_4(6), STR_3(8), STR_2(15), 
  4867 ;;		 -> STR_1(22), 
  4868 ;;  ap              1    2[BANK1 ] PTR PTR void 
  4869 ;;		 -> printf@ap(1), 
  4870 ;; Auto vars:     Size  Location     Type
  4871 ;;  fp              1    5[BANK1 ] PTR struct _IO_FILE
  4872 ;;		 -> NULL(0), 
  4873 ;;  cfmt            2    6[BANK1 ] PTR unsigned char 
  4874 ;;		 -> STR_5(6), STR_4(6), STR_3(8), STR_2(15), 
  4875 ;;		 -> STR_1(22), 
  4876 ;; Return value:  Size  Location     Type
  4877 ;;                  2    0[BANK1 ] int 
  4878 ;; Registers used:
  4879 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4880 ;; Tracked objects:
  4881 ;;		On entry : 1F/1
  4882 ;;		On exit  : 1F/1
  4883 ;;		Unchanged: 0/0
  4884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4885 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4886 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4887 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4888 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  4889 ;;Total ram usage:        8 bytes
  4890 ;; Hardware stack levels used: 1
  4891 ;; Hardware stack levels required when called: 7
  4892 ;; This function calls:
  4893 ;;		_vfpfcnvrt
  4894 ;; This function is called by:
  4895 ;;		_printf
  4896 ;; This function uses a non-reentrant model
  4897 ;;
  4898                           
  4899                           
  4900                           ;psect for function _vfprintf
  4901  0004                     _vfprintf:
  4902                           
  4903                           ;incstack = 0
  4904                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4905                           ;vfprintf@fp stored from wreg
  4906  0004  00CF               	movwf	vfprintf@fp^(0+128)
  4907                           
  4908                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  4909  0005  084B               	movf	(vfprintf@fmt+1)^(0+128),w
  4910  0006  00D1               	movwf	(vfprintf@cfmt+1)^(0+128)
  4911  0007  084A               	movf	vfprintf@fmt^(0+128),w
  4912  0008  00D0               	movwf	vfprintf@cfmt^(0+128)
  4913                           
  4914                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  4915  0009  01A0               	clrf	_nout^(0+128)
  4916  000A  01A1               	clrf	(_nout+1)^(0+128)
  4917  000B                     l3053:	
  4918                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4919                           
  4920                           
  4921                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4922  000B  0850               	movf	vfprintf@cfmt^(0+128),w
  4923  000C  0084               	movwf	4
  4924  000D  0851               	movf	(vfprintf@cfmt+1)^(0+128),w
  4925  000E  0085               	movwf	5
  4926  000F  0012               	moviw fsr0++
  4927  0010  1903               	btfsc	3,2
  4928  0011  282A               	goto	l3055
  4929                           
  4930                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  4931  0012  30D0               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  4932  0013  00CD               	movwf	??_vfprintf^(0+128)
  4933  0014  084D               	movf	??_vfprintf^(0+128),w
  4934  0015  0020               	movlb	0	; select bank0
  4935  0016  00D5               	movwf	vfpfcnvrt@fmt
  4936  0017  0021               	movlb	1	; select bank1
  4937  0018  084C               	movf	vfprintf@ap^(0+128),w
  4938  0019  00CE               	movwf	(??_vfprintf+1)^(0+128)
  4939  001A  084E               	movf	(??_vfprintf+1)^(0+128),w
  4940  001B  0020               	movlb	0	; select bank0
  4941  001C  00D6               	movwf	vfpfcnvrt@ap
  4942  001D  0021               	movlb	1	; select bank1
  4943  001E  084F               	movf	vfprintf@fp^(0+128),w
  4944  001F  318E  26A0  3180   	fcall	_vfpfcnvrt
  4945  0022  0855               	movf	?_vfpfcnvrt,w
  4946  0023  0021               	movlb	1	; select bank1
  4947  0024  07A0               	addwf	_nout^(0+128),f
  4948  0025  0020               	movlb	0	; select bank0
  4949  0026  0856               	movf	?_vfpfcnvrt+1,w
  4950  0027  0021               	movlb	1	; select bank1
  4951  0028  3DA1               	addwfc	(_nout+1)^(0+128),f
  4952  0029  280B               	goto	l3053
  4953  002A                     l3055:
  4954                           
  4955                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  4956  002A  0821               	movf	(_nout+1)^(0+128),w
  4957  002B  00CB               	movwf	(?_vfprintf+1)^(0+128)
  4958  002C  0820               	movf	_nout^(0+128),w
  4959  002D  00CA               	movwf	?_vfprintf^(0+128)
  4960  002E  0008               	return
  4961  002F                     __end_of_vfprintf:
  4962                           
  4963                           	psect	text6
  4964  0EA0                     __ptext6:	
  4965 ;; *************** function _vfpfcnvrt *****************
  4966 ;; Defined at:
  4967 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4968 ;; Parameters:    Size  Location     Type
  4969 ;;  fp              1    wreg     PTR struct _IO_FILE
  4970 ;;		 -> NULL(0), 
  4971 ;;  fmt             1   53[BANK0 ] PTR PTR unsigned char 
  4972 ;;		 -> vfprintf@cfmt(2), 
  4973 ;;  ap              1   54[BANK0 ] PTR PTR void 
  4974 ;;		 -> printf@ap(1), 
  4975 ;; Auto vars:     Size  Location     Type
  4976 ;;  fp              1   78[BANK0 ] PTR struct _IO_FILE
  4977 ;;		 -> NULL(0), 
  4978 ;;  llu             8   68[BANK0 ] unsigned long long 
  4979 ;;  ll              8   60[BANK0 ] long long 
  4980 ;;  f               4    0        long long 
  4981 ;;  ct              3    0        unsigned char [3]
  4982 ;;  vp              2    0        PTR void 
  4983 ;;  i               2    0        int 
  4984 ;;  done            2    0        int 
  4985 ;;  cp              1   77[BANK0 ] PTR unsigned char 
  4986 ;;		 -> ?_printf(2), MLX90614_writeEmissivity@emissivity(4), main@buffer(8), 
  4987 ;;  c               1   76[BANK0 ] unsigned char 
  4988 ;; Return value:  Size  Location     Type
  4989 ;;                  2   53[BANK0 ] int 
  4990 ;; Registers used:
  4991 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4992 ;; Tracked objects:
  4993 ;;		On entry : 1F/1
  4994 ;;		On exit  : 1F/0
  4995 ;;		Unchanged: 0/0
  4996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4997 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4998 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4999 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5000 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5001 ;;Total ram usage:       26 bytes
  5002 ;; Hardware stack levels used: 1
  5003 ;; Hardware stack levels required when called: 6
  5004 ;; This function calls:
  5005 ;;		_dtoa
  5006 ;;		_fputc
  5007 ;;		_stoa
  5008 ;;		_xtoa
  5009 ;; This function is called by:
  5010 ;;		_vfprintf
  5011 ;; This function uses a non-reentrant model
  5012 ;;
  5013                           
  5014                           
  5015                           ;psect for function _vfpfcnvrt
  5016  0EA0                     _vfpfcnvrt:
  5017                           
  5018                           ;incstack = 0
  5019                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5020                           ;vfpfcnvrt@fp stored from wreg
  5021  0EA0  0020               	movlb	0	; select bank0
  5022  0EA1  00EE               	movwf	vfpfcnvrt@fp
  5023                           
  5024                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  5025  0EA2  0855               	movf	vfpfcnvrt@fmt,w
  5026  0EA3  0086               	movwf	6
  5027  0EA4  0187               	clrf	7
  5028  0EA5  3F40               	moviw [0]fsr1
  5029  0EA6  00D7               	movwf	??_vfpfcnvrt
  5030  0EA7  3F41               	moviw [1]fsr1
  5031  0EA8  00D8               	movwf	??_vfpfcnvrt+1
  5032  0EA9  0857               	movf	??_vfpfcnvrt,w
  5033  0EAA  0084               	movwf	4
  5034  0EAB  0858               	movf	??_vfpfcnvrt+1,w
  5035  0EAC  0085               	movwf	5
  5036  0EAD  0012               	moviw fsr0++
  5037  0EAE  3A25               	xorlw	37
  5038  0EAF  1D03               	btfss	3,2
  5039  0EB0  2FDD               	goto	l2799
  5040                           
  5041                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  5042  0EB1  0855               	movf	vfpfcnvrt@fmt,w
  5043  0EB2  0086               	movwf	6
  5044  0EB3  0187               	clrf	7
  5045  0EB4  3001               	movlw	1
  5046  0EB5  0781               	addwf	1,f
  5047  0EB6  3141               	addfsr 1,1
  5048  0EB7  1803               	skipnc
  5049  0EB8  0A81               	incf	1,f
  5050                           
  5051                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  5052  0EB9  0021               	movlb	1	; select bank1
  5053  0EBA  01A2               	clrf	_width^(0+128)
  5054  0EBB  01A3               	clrf	(_width+1)^(0+128)
  5055  0EBC  01A6               	clrf	_flags^(0+128)
  5056  0EBD  01A7               	clrf	(_flags+1)^(0+128)
  5057                           
  5058                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  5059  0EBE  30FF               	movlw	255
  5060  0EBF  00A4               	movwf	_prec^(0+128)
  5061  0EC0  30FF               	movlw	255
  5062  0EC1  00A5               	movwf	(_prec^(0+128)+1)
  5063                           
  5064                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5065  0EC2  0020               	movlb	0	; select bank0
  5066  0EC3  0855               	movf	vfpfcnvrt@fmt,w
  5067  0EC4  0086               	movwf	6
  5068  0EC5  0187               	clrf	7
  5069  0EC6  3F40               	moviw [0]fsr1
  5070  0EC7  00D7               	movwf	??_vfpfcnvrt
  5071  0EC8  3F41               	moviw [1]fsr1
  5072  0EC9  00D8               	movwf	??_vfpfcnvrt+1
  5073  0ECA  0857               	movf	??_vfpfcnvrt,w
  5074  0ECB  0084               	movwf	4
  5075  0ECC  0858               	movf	??_vfpfcnvrt+1,w
  5076  0ECD  0085               	movwf	5
  5077  0ECE  0012               	moviw fsr0++
  5078  0ECF  3A64               	xorlw	100
  5079  0ED0  1903               	btfsc	3,2
  5080  0ED1  2EE1               	goto	l2751
  5081  0ED2  0855               	movf	vfpfcnvrt@fmt,w
  5082  0ED3  0086               	movwf	6
  5083  0ED4  0187               	clrf	7
  5084  0ED5  3F40               	moviw [0]fsr1
  5085  0ED6  00D7               	movwf	??_vfpfcnvrt
  5086  0ED7  3F41               	moviw [1]fsr1
  5087  0ED8  00D8               	movwf	??_vfpfcnvrt+1
  5088  0ED9  0857               	movf	??_vfpfcnvrt,w
  5089  0EDA  0084               	movwf	4
  5090  0EDB  0858               	movf	??_vfpfcnvrt+1,w
  5091  0EDC  0085               	movwf	5
  5092  0EDD  0012               	moviw fsr0++
  5093  0EDE  3A69               	xorlw	105
  5094  0EDF  1D03               	btfss	3,2
  5095  0EE0  2F1A               	goto	l2759
  5096  0EE1                     l2751:
  5097                           
  5098                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  5099  0EE1  0855               	movf	vfpfcnvrt@fmt,w
  5100  0EE2  0086               	movwf	6
  5101  0EE3  0187               	clrf	7
  5102  0EE4  3001               	movlw	1
  5103  0EE5  0781               	addwf	1,f
  5104  0EE6  3141               	addfsr 1,1
  5105  0EE7  1803               	skipnc
  5106  0EE8  0A81               	incf	1,f
  5107                           
  5108                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5109  0EE9  0856               	movf	vfpfcnvrt@ap,w
  5110  0EEA  0086               	movwf	6
  5111  0EEB  0187               	clrf	7
  5112  0EEC  0801               	movf	1,w
  5113  0EED  0084               	movwf	4
  5114  0EEE  0185               	clrf	5
  5115  0EEF  3002               	movlw	2
  5116  0EF0  0781               	addwf	1,f
  5117  0EF1  3F00               	moviw [0]fsr0
  5118  0EF2  00D7               	movwf	??_vfpfcnvrt
  5119  0EF3  3F01               	moviw [1]fsr0
  5120  0EF4  00D8               	movwf	??_vfpfcnvrt+1
  5121  0EF5  0857               	movf	??_vfpfcnvrt,w
  5122  0EF6  00DC               	movwf	vfpfcnvrt@ll
  5123  0EF7  0858               	movf	??_vfpfcnvrt+1,w
  5124  0EF8  00DD               	movwf	vfpfcnvrt@ll+1
  5125  0EF9  0D89               	rlf	9,f
  5126  0EFA  3B89               	subwfb	9,f
  5127  0EFB  0989               	comf	9,f
  5128  0EFC  00DE               	movwf	vfpfcnvrt@ll+2
  5129  0EFD  00DF               	movwf	vfpfcnvrt@ll+3
  5130  0EFE  00E0               	movwf	vfpfcnvrt@ll+4
  5131  0EFF  00E1               	movwf	vfpfcnvrt@ll+5
  5132  0F00  00E2               	movwf	vfpfcnvrt@ll+6
  5133  0F01  00E3               	movwf	vfpfcnvrt@ll+7
  5134                           
  5135                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  5136  0F02  085C               	movf	vfpfcnvrt@ll,w
  5137  0F03  00B0               	movwf	dtoa@d
  5138  0F04  085D               	movf	vfpfcnvrt@ll+1,w
  5139  0F05  00B1               	movwf	dtoa@d+1
  5140  0F06  085E               	movf	vfpfcnvrt@ll+2,w
  5141  0F07  00B2               	movwf	dtoa@d+2
  5142  0F08  085F               	movf	vfpfcnvrt@ll+3,w
  5143  0F09  00B3               	movwf	dtoa@d+3
  5144  0F0A  0860               	movf	vfpfcnvrt@ll+4,w
  5145  0F0B  00B4               	movwf	dtoa@d+4
  5146  0F0C  0861               	movf	vfpfcnvrt@ll+5,w
  5147  0F0D  00B5               	movwf	dtoa@d+5
  5148  0F0E  0862               	movf	vfpfcnvrt@ll+6,w
  5149  0F0F  00B6               	movwf	dtoa@d+6
  5150  0F10  0863               	movf	vfpfcnvrt@ll+7,w
  5151  0F11  00B7               	movwf	dtoa@d+7
  5152  0F12  086E               	movf	vfpfcnvrt@fp,w
  5153  0F13  318C  2403         	fcall	_dtoa
  5154  0F15  0831               	movf	?_dtoa+1,w
  5155  0F16  00D6               	movwf	?_vfpfcnvrt+1
  5156  0F17  0830               	movf	?_dtoa,w
  5157  0F18  00D5               	movwf	?_vfpfcnvrt
  5158  0F19  0008               	return
  5159  0F1A                     l2759:
  5160                           
  5161                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1171:         if 
      +                          (*fmt[0] == 's') {
  5162  0F1A  0855               	movf	vfpfcnvrt@fmt,w
  5163  0F1B  0086               	movwf	6
  5164  0F1C  0187               	clrf	7
  5165  0F1D  3F40               	moviw [0]fsr1
  5166  0F1E  00D7               	movwf	??_vfpfcnvrt
  5167  0F1F  3F41               	moviw [1]fsr1
  5168  0F20  00D8               	movwf	??_vfpfcnvrt+1
  5169  0F21  0857               	movf	??_vfpfcnvrt,w
  5170  0F22  0084               	movwf	4
  5171  0F23  0858               	movf	??_vfpfcnvrt+1,w
  5172  0F24  0085               	movwf	5
  5173  0F25  0012               	moviw fsr0++
  5174  0F26  3A73               	xorlw	115
  5175  0F27  1D03               	btfss	3,2
  5176  0F28  2F48               	goto	l2769
  5177                           
  5178                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1173:            
      +                           ++*fmt;
  5179  0F29  0855               	movf	vfpfcnvrt@fmt,w
  5180  0F2A  0086               	movwf	6
  5181  0F2B  0187               	clrf	7
  5182  0F2C  3001               	movlw	1
  5183  0F2D  0781               	addwf	1,f
  5184  0F2E  3141               	addfsr 1,1
  5185  0F2F  1803               	skipnc
  5186  0F30  0A81               	incf	1,f
  5187                           
  5188                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1174:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5189  0F31  0856               	movf	vfpfcnvrt@ap,w
  5190  0F32  0086               	movwf	6
  5191  0F33  0187               	clrf	7
  5192  0F34  3F40               	moviw [0]fsr1
  5193  0F35  0084               	movwf	4
  5194  0F36  0185               	clrf	5
  5195  0F37  0A81               	incf	1,f
  5196  0F38  0800               	movf	0,w
  5197  0F39  00D7               	movwf	??_vfpfcnvrt
  5198  0F3A  0857               	movf	??_vfpfcnvrt,w
  5199  0F3B  00ED               	movwf	vfpfcnvrt@cp
  5200                           
  5201                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1176:            
      +                           return stoa(fp, cp);
  5202  0F3C  086D               	movf	vfpfcnvrt@cp,w
  5203  0F3D  00D7               	movwf	??_vfpfcnvrt
  5204  0F3E  0857               	movf	??_vfpfcnvrt,w
  5205  0F3F  00FB               	movwf	stoa@s
  5206  0F40  086E               	movf	vfpfcnvrt@fp,w
  5207  0F41  3189  2175         	fcall	_stoa
  5208  0F43  087C               	movf	?_stoa+1,w
  5209  0F44  00D6               	movwf	?_vfpfcnvrt+1
  5210  0F45  087B               	movf	?_stoa,w
  5211  0F46  00D5               	movwf	?_vfpfcnvrt
  5212  0F47  0008               	return
  5213  0F48                     l2769:
  5214                           
  5215                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  5216  0F48  0855               	movf	vfpfcnvrt@fmt,w
  5217  0F49  0086               	movwf	6
  5218  0F4A  0187               	clrf	7
  5219  0F4B  3F40               	moviw [0]fsr1
  5220  0F4C  00D7               	movwf	??_vfpfcnvrt
  5221  0F4D  3F41               	moviw [1]fsr1
  5222  0F4E  00D8               	movwf	??_vfpfcnvrt+1
  5223  0F4F  0857               	movf	??_vfpfcnvrt,w
  5224  0F50  0084               	movwf	4
  5225  0F51  0858               	movf	??_vfpfcnvrt+1,w
  5226  0F52  0085               	movwf	5
  5227  0F53  0012               	moviw fsr0++
  5228  0F54  3A78               	xorlw	120
  5229  0F55  1903               	btfsc	3,2
  5230  0F56  2F66               	goto	l2773
  5231  0F57  0855               	movf	vfpfcnvrt@fmt,w
  5232  0F58  0086               	movwf	6
  5233  0F59  0187               	clrf	7
  5234  0F5A  3F40               	moviw [0]fsr1
  5235  0F5B  00D7               	movwf	??_vfpfcnvrt
  5236  0F5C  3F41               	moviw [1]fsr1
  5237  0F5D  00D8               	movwf	??_vfpfcnvrt+1
  5238  0F5E  0857               	movf	??_vfpfcnvrt,w
  5239  0F5F  0084               	movwf	4
  5240  0F60  0858               	movf	??_vfpfcnvrt+1,w
  5241  0F61  0085               	movwf	5
  5242  0F62  0012               	moviw fsr0++
  5243  0F63  3A58               	xorlw	88
  5244  0F64  1D03               	btfss	3,2
  5245  0F65  2FAB               	goto	l2783
  5246  0F66                     l2773:
  5247                           
  5248                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  5249  0F66  0855               	movf	vfpfcnvrt@fmt,w
  5250  0F67  0086               	movwf	6
  5251  0F68  0187               	clrf	7
  5252  0F69  3F40               	moviw [0]fsr1
  5253  0F6A  00D7               	movwf	??_vfpfcnvrt
  5254  0F6B  3F41               	moviw [1]fsr1
  5255  0F6C  00D8               	movwf	??_vfpfcnvrt+1
  5256  0F6D  0857               	movf	??_vfpfcnvrt,w
  5257  0F6E  0084               	movwf	4
  5258  0F6F  0858               	movf	??_vfpfcnvrt+1,w
  5259  0F70  0085               	movwf	5
  5260  0F71  0800               	movf	0,w	;code access
  5261  0F72  00D9               	movwf	??_vfpfcnvrt+2
  5262  0F73  0859               	movf	??_vfpfcnvrt+2,w
  5263  0F74  00EC               	movwf	vfpfcnvrt@c
  5264                           
  5265                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  5266  0F75  0855               	movf	vfpfcnvrt@fmt,w
  5267  0F76  0086               	movwf	6
  5268  0F77  0187               	clrf	7
  5269  0F78  3001               	movlw	1
  5270  0F79  0781               	addwf	1,f
  5271  0F7A  3141               	addfsr 1,1
  5272  0F7B  1803               	skipnc
  5273  0F7C  0A81               	incf	1,f
  5274                           
  5275                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  5276  0F7D  0856               	movf	vfpfcnvrt@ap,w
  5277  0F7E  0086               	movwf	6
  5278  0F7F  0187               	clrf	7
  5279  0F80  0801               	movf	1,w
  5280  0F81  0084               	movwf	4
  5281  0F82  0185               	clrf	5
  5282  0F83  3002               	movlw	2
  5283  0F84  0781               	addwf	1,f
  5284  0F85  3F00               	moviw [0]fsr0
  5285  0F86  00E4               	movwf	vfpfcnvrt@llu
  5286  0F87  3F01               	moviw [1]fsr0
  5287  0F88  00E5               	movwf	vfpfcnvrt@llu+1
  5288  0F89  01E6               	clrf	vfpfcnvrt@llu+2
  5289  0F8A  01E7               	clrf	vfpfcnvrt@llu+3
  5290  0F8B  01E8               	clrf	vfpfcnvrt@llu+4
  5291  0F8C  01E9               	clrf	vfpfcnvrt@llu+5
  5292  0F8D  01EA               	clrf	vfpfcnvrt@llu+6
  5293  0F8E  01EB               	clrf	vfpfcnvrt@llu+7
  5294                           
  5295                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  5296  0F8F  0864               	movf	vfpfcnvrt@llu,w
  5297  0F90  00AF               	movwf	xtoa@d
  5298  0F91  0865               	movf	vfpfcnvrt@llu+1,w
  5299  0F92  00B0               	movwf	xtoa@d+1
  5300  0F93  0866               	movf	vfpfcnvrt@llu+2,w
  5301  0F94  00B1               	movwf	xtoa@d+2
  5302  0F95  0867               	movf	vfpfcnvrt@llu+3,w
  5303  0F96  00B2               	movwf	xtoa@d+3
  5304  0F97  0868               	movf	vfpfcnvrt@llu+4,w
  5305  0F98  00B3               	movwf	xtoa@d+4
  5306  0F99  0869               	movf	vfpfcnvrt@llu+5,w
  5307  0F9A  00B4               	movwf	xtoa@d+5
  5308  0F9B  086A               	movf	vfpfcnvrt@llu+6,w
  5309  0F9C  00B5               	movwf	xtoa@d+6
  5310  0F9D  086B               	movf	vfpfcnvrt@llu+7,w
  5311  0F9E  00B6               	movwf	xtoa@d+7
  5312  0F9F  086C               	movf	vfpfcnvrt@c,w
  5313  0FA0  00D7               	movwf	??_vfpfcnvrt
  5314  0FA1  0857               	movf	??_vfpfcnvrt,w
  5315  0FA2  00B7               	movwf	xtoa@x
  5316  0FA3  086E               	movf	vfpfcnvrt@fp,w
  5317  0FA4  318D  254E         	fcall	_xtoa
  5318  0FA6  0830               	movf	?_xtoa+1,w
  5319  0FA7  00D6               	movwf	?_vfpfcnvrt+1
  5320  0FA8  082F               	movf	?_xtoa,w
  5321  0FA9  00D5               	movwf	?_vfpfcnvrt
  5322  0FAA  0008               	return
  5323  0FAB                     l2783:
  5324                           
  5325                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  5326  0FAB  0855               	movf	vfpfcnvrt@fmt,w
  5327  0FAC  0086               	movwf	6
  5328  0FAD  0187               	clrf	7
  5329  0FAE  3F40               	moviw [0]fsr1
  5330  0FAF  00D7               	movwf	??_vfpfcnvrt
  5331  0FB0  3F41               	moviw [1]fsr1
  5332  0FB1  00D8               	movwf	??_vfpfcnvrt+1
  5333  0FB2  0857               	movf	??_vfpfcnvrt,w
  5334  0FB3  0084               	movwf	4
  5335  0FB4  0858               	movf	??_vfpfcnvrt+1,w
  5336  0FB5  0085               	movwf	5
  5337  0FB6  0012               	moviw fsr0++
  5338  0FB7  3A25               	xorlw	37
  5339  0FB8  1D03               	btfss	3,2
  5340  0FB9  2FD2               	goto	l2793
  5341                           
  5342                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  5343  0FBA  0855               	movf	vfpfcnvrt@fmt,w
  5344  0FBB  0086               	movwf	6
  5345  0FBC  0187               	clrf	7
  5346  0FBD  3001               	movlw	1
  5347  0FBE  0781               	addwf	1,f
  5348  0FBF  3141               	addfsr 1,1
  5349  0FC0  1803               	skipnc
  5350  0FC1  0A81               	incf	1,f
  5351                           
  5352                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  5353  0FC2  3025               	movlw	37
  5354  0FC3  00F3               	movwf	fputc@c
  5355  0FC4  3000               	movlw	0
  5356  0FC5  00F4               	movwf	fputc@c+1
  5357  0FC6  086E               	movf	vfpfcnvrt@fp,w
  5358  0FC7  00D7               	movwf	??_vfpfcnvrt
  5359  0FC8  0857               	movf	??_vfpfcnvrt,w
  5360  0FC9  00F5               	movwf	fputc@fp
  5361  0FCA  3195  2510         	fcall	_fputc
  5362  0FCC                     l2789:
  5363                           
  5364                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  5365  0FCC  3001               	movlw	1
  5366  0FCD  0020               	movlb	0	; select bank0
  5367  0FCE  00D5               	movwf	?_vfpfcnvrt
  5368  0FCF  3000               	movlw	0
  5369  0FD0  00D6               	movwf	?_vfpfcnvrt+1
  5370  0FD1  0008               	return
  5371  0FD2                     l2793:
  5372                           
  5373                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  5374  0FD2  0855               	movf	vfpfcnvrt@fmt,w
  5375  0FD3  0086               	movwf	6
  5376  0FD4  0187               	clrf	7
  5377  0FD5  3001               	movlw	1
  5378  0FD6  0781               	addwf	1,f
  5379  0FD7  3141               	addfsr 1,1
  5380  0FD8  1803               	skipnc
  5381  0FD9  0A81               	incf	1,f
  5382                           
  5383                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  5384  0FDA  01D5               	clrf	?_vfpfcnvrt
  5385  0FDB  01D6               	clrf	?_vfpfcnvrt+1
  5386  0FDC  0008               	return
  5387  0FDD                     l2799:
  5388                           
  5389                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  5390  0FDD  0855               	movf	vfpfcnvrt@fmt,w
  5391  0FDE  0086               	movwf	6
  5392  0FDF  0187               	clrf	7
  5393  0FE0  3F40               	moviw [0]fsr1
  5394  0FE1  00D7               	movwf	??_vfpfcnvrt
  5395  0FE2  3F41               	moviw [1]fsr1
  5396  0FE3  00D8               	movwf	??_vfpfcnvrt+1
  5397  0FE4  0857               	movf	??_vfpfcnvrt,w
  5398  0FE5  0084               	movwf	4
  5399  0FE6  0858               	movf	??_vfpfcnvrt+1,w
  5400  0FE7  0085               	movwf	5
  5401  0FE8  0800               	movf	0,w	;code access
  5402  0FE9  00D9               	movwf	??_vfpfcnvrt+2
  5403  0FEA  01DA               	clrf	??_vfpfcnvrt+3
  5404  0FEB  0859               	movf	??_vfpfcnvrt+2,w
  5405  0FEC  00F3               	movwf	fputc@c
  5406  0FED  085A               	movf	??_vfpfcnvrt+3,w
  5407  0FEE  00F4               	movwf	fputc@c+1
  5408  0FEF  086E               	movf	vfpfcnvrt@fp,w
  5409  0FF0  00DB               	movwf	??_vfpfcnvrt+4
  5410  0FF1  085B               	movf	??_vfpfcnvrt+4,w
  5411  0FF2  00F5               	movwf	fputc@fp
  5412  0FF3  3195  2510  318E   	fcall	_fputc
  5413                           
  5414                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  5415  0FF6  0020               	movlb	0	; select bank0
  5416  0FF7  0855               	movf	vfpfcnvrt@fmt,w
  5417  0FF8  0086               	movwf	6
  5418  0FF9  0187               	clrf	7
  5419  0FFA  3001               	movlw	1
  5420  0FFB  0781               	addwf	1,f
  5421  0FFC  3141               	addfsr 1,1
  5422  0FFD  1803               	skipnc
  5423  0FFE  0A81               	incf	1,f
  5424  0FFF  2FCC               	goto	l2789
  5425  1000                     __end_of_vfpfcnvrt:
  5426                           
  5427                           	psect	text7
  5428  0D4E                     __ptext7:	
  5429 ;; *************** function _xtoa *****************
  5430 ;; Defined at:
  5431 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5432 ;; Parameters:    Size  Location     Type
  5433 ;;  fp              1    wreg     PTR struct _IO_FILE
  5434 ;;		 -> NULL(0), 
  5435 ;;  d               8   15[BANK0 ] unsigned long long 
  5436 ;;  x               1   23[BANK0 ] unsigned char 
  5437 ;; Auto vars:     Size  Location     Type
  5438 ;;  fp              1   38[BANK0 ] PTR struct _IO_FILE
  5439 ;;		 -> NULL(0), 
  5440 ;;  n               8   41[BANK0 ] unsigned long long 
  5441 ;;  c               2   51[BANK0 ] int 
  5442 ;;  i               2   49[BANK0 ] int 
  5443 ;;  w               2   39[BANK0 ] int 
  5444 ;;  p               2   36[BANK0 ] int 
  5445 ;; Return value:  Size  Location     Type
  5446 ;;                  2   15[BANK0 ] int 
  5447 ;; Registers used:
  5448 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5449 ;; Tracked objects:
  5450 ;;		On entry : 1F/0
  5451 ;;		On exit  : 1F/0
  5452 ;;		Unchanged: 0/0
  5453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5454 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5455 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5456 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5457 ;;      Totals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5458 ;;Total ram usage:       38 bytes
  5459 ;; Hardware stack levels used: 1
  5460 ;; Hardware stack levels required when called: 5
  5461 ;; This function calls:
  5462 ;;		_isalpha
  5463 ;;		_isupper
  5464 ;;		_pad
  5465 ;;		_toupper
  5466 ;; This function is called by:
  5467 ;;		_vfpfcnvrt
  5468 ;; This function uses a non-reentrant model
  5469 ;;
  5470                           
  5471                           
  5472                           ;psect for function _xtoa
  5473  0D4E                     _xtoa:
  5474                           
  5475                           ;incstack = 0
  5476                           ; Regs used in _xtoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5477                           ;xtoa@fp stored from wreg
  5478  0D4E  00C6               	movwf	xtoa@fp
  5479                           
  5480                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  5481  0D4F  0021               	movlb	1	; select bank1
  5482  0D50  1BA5               	btfsc	(_prec+1)^(0+128),7
  5483  0D51  2D56               	goto	l1006
  5484                           
  5485                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  5486  0D52  30FD               	movlw	253
  5487  0D53  05A6               	andwf	_flags^(0+128),f
  5488  0D54  30FF               	movlw	255
  5489  0D55  05A7               	andwf	(_flags+1)^(0+128),f
  5490  0D56                     l1006:	
  5491                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 653:     }
  5492                           
  5493                           
  5494                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  5495  0D56  0825               	movf	(_prec+1)^(0+128),w
  5496  0D57  3A80               	xorlw	128
  5497  0D58  0020               	movlb	0	; select bank0
  5498  0D59  00B8               	movwf	??_xtoa
  5499  0D5A  3080               	movlw	128
  5500  0D5B  0238               	subwf	??_xtoa,w
  5501  0D5C  1D03               	skipz
  5502  0D5D  2D61               	goto	u3265
  5503  0D5E  3001               	movlw	1
  5504  0D5F  0021               	movlb	1	; select bank1
  5505  0D60  0224               	subwf	_prec^(0+128),w
  5506  0D61                     u3265:
  5507  0D61  1803               	skipnc
  5508  0D62  2D69               	goto	l2677
  5509  0D63  3001               	movlw	1
  5510  0D64  0020               	movlb	0	; select bank0
  5511  0D65  00C4               	movwf	xtoa@p
  5512  0D66  3000               	movlw	0
  5513  0D67  00C5               	movwf	xtoa@p+1
  5514  0D68  2D71               	goto	l1010
  5515  0D69                     l2677:
  5516  0D69  0021               	movlb	1	; select bank1
  5517  0D6A  0825               	movf	(_prec+1)^(0+128),w
  5518  0D6B  0020               	movlb	0	; select bank0
  5519  0D6C  00C5               	movwf	xtoa@p+1
  5520  0D6D  0021               	movlb	1	; select bank1
  5521  0D6E  0824               	movf	_prec^(0+128),w
  5522  0D6F  0020               	movlb	0	; select bank0
  5523  0D70  00C4               	movwf	xtoa@p
  5524  0D71                     l1010:
  5525                           
  5526                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  5527  0D71  0021               	movlb	1	; select bank1
  5528  0D72  0823               	movf	(_width+1)^(0+128),w
  5529  0D73  0020               	movlb	0	; select bank0
  5530  0D74  00C8               	movwf	xtoa@w+1
  5531  0D75  0021               	movlb	1	; select bank1
  5532  0D76  0822               	movf	_width^(0+128),w
  5533  0D77  0020               	movlb	0	; select bank0
  5534  0D78  00C7               	movwf	xtoa@w
  5535                           
  5536                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  5537  0D79  0021               	movlb	1	; select bank1
  5538  0D7A  1E26               	btfss	_flags^(0+128),4
  5539  0D7B  2D81               	goto	l2683
  5540                           
  5541                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  5542  0D7C  30FE               	movlw	254
  5543  0D7D  0020               	movlb	0	; select bank0
  5544  0D7E  07C7               	addwf	xtoa@w,f
  5545  0D7F  30FF               	movlw	255
  5546  0D80  3DC8               	addwfc	xtoa@w+1,f
  5547  0D81                     l2683:
  5548                           
  5549                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 661:     n = d;
  5550  0D81  0020               	movlb	0	; select bank0
  5551  0D82  082F               	movf	xtoa@d,w
  5552  0D83  00C9               	movwf	xtoa@n
  5553  0D84  0830               	movf	xtoa@d+1,w
  5554  0D85  00CA               	movwf	xtoa@n+1
  5555  0D86  0831               	movf	xtoa@d+2,w
  5556  0D87  00CB               	movwf	xtoa@n+2
  5557  0D88  0832               	movf	xtoa@d+3,w
  5558  0D89  00CC               	movwf	xtoa@n+3
  5559  0D8A  0833               	movf	xtoa@d+4,w
  5560  0D8B  00CD               	movwf	xtoa@n+4
  5561  0D8C  0834               	movf	xtoa@d+5,w
  5562  0D8D  00CE               	movwf	xtoa@n+5
  5563  0D8E  0835               	movf	xtoa@d+6,w
  5564  0D8F  00CF               	movwf	xtoa@n+6
  5565  0D90  0836               	movf	xtoa@d+7,w
  5566  0D91  00D0               	movwf	xtoa@n+7
  5567                           
  5568                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  5569  0D92  301F               	movlw	31
  5570  0D93  00D1               	movwf	xtoa@i
  5571  0D94  3000               	movlw	0
  5572  0D95  00D2               	movwf	xtoa@i+1
  5573                           
  5574                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  5575  0D96  0021               	movlb	1	; select bank1
  5576  0D97  01C9               	clrf	(_dbuf^(0+128)+31)
  5577                           
  5578                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5579  0D98  2E41               	goto	l2715
  5580  0D99                     l2687:
  5581                           
  5582                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 665:         --i;
  5583  0D99  30FF               	movlw	255
  5584  0D9A  0020               	movlb	0	; select bank0
  5585  0D9B  07D1               	addwf	xtoa@i,f
  5586  0D9C  30FF               	movlw	255
  5587  0D9D  3DD2               	addwfc	xtoa@i+1,f
  5588                           
  5589                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  5590  0D9E  300F               	movlw	15
  5591  0D9F  0549               	andwf	xtoa@n,w
  5592  0DA0  00D3               	movwf	xtoa@c
  5593  0DA1  3000               	movlw	0
  5594  0DA2  054A               	andwf	xtoa@n+1,w
  5595  0DA3  00D4               	movwf	xtoa@c+1
  5596                           
  5597                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  5598  0DA4  0854               	movf	xtoa@c+1,w
  5599  0DA5  3A80               	xorlw	128
  5600  0DA6  00B8               	movwf	??_xtoa
  5601  0DA7  3080               	movlw	128
  5602  0DA8  0238               	subwf	??_xtoa,w
  5603  0DA9  1D03               	skipz
  5604  0DAA  2DAD               	goto	u3285
  5605  0DAB  300A               	movlw	10
  5606  0DAC  0253               	subwf	xtoa@c,w
  5607  0DAD                     u3285:
  5608  0DAD  1C03               	skipc
  5609  0DAE  2DB3               	goto	l2691
  5610  0DAF  0020               	movlb	0	; select bank0
  5611  0DB0  0853               	movf	xtoa@c,w
  5612  0DB1  3E57               	addlw	87
  5613  0DB2  2DB6               	goto	L1
  5614  0DB3                     l2691:
  5615  0DB3  0020               	movlb	0	; select bank0
  5616  0DB4  0853               	movf	xtoa@c,w
  5617  0DB5  3E30               	addlw	48
  5618  0DB6                     L1:
  5619  0DB6  00D3               	movwf	xtoa@c
  5620  0DB7  3000               	movlw	0
  5621  0DB8  3D54               	addwfc	xtoa@c+1,w
  5622  0DB9  00D4               	movwf	xtoa@c+1
  5623  0DBA  0837               	movf	xtoa@x,w
  5624  0DBB  3EBF               	addlw	191
  5625  0DBC  00B8               	movwf	??_xtoa
  5626  0DBD  30FF               	movlw	255
  5627  0DBE  1803               	skipnc
  5628  0DBF  3000               	movlw	0
  5629  0DC0  00B9               	movwf	??_xtoa+1
  5630  0DC1  3000               	movlw	0
  5631  0DC2  0239               	subwf	??_xtoa+1,w
  5632  0DC3  301A               	movlw	26
  5633  0DC4  1903               	skipnz
  5634  0DC5  0238               	subwf	??_xtoa,w
  5635  0DC6  1803               	btfsc	3,0
  5636  0DC7  2DCA               	goto	u3290
  5637  0DC8  3001               	movlw	1
  5638  0DC9  2DCB               	goto	u3300
  5639  0DCA                     u3290:
  5640  0DCA  3000               	movlw	0
  5641  0DCB                     u3300:
  5642  0DCB  00BA               	movwf	??_xtoa+2
  5643  0DCC  01BB               	clrf	??_xtoa+3
  5644  0DCD  083A               	movf	??_xtoa+2,w
  5645  0DCE  00C0               	movwf	_xtoa$947
  5646  0DCF  083B               	movf	??_xtoa+3,w
  5647  0DD0  00C1               	movwf	_xtoa$947+1
  5648  0DD1  0840               	movf	_xtoa$947,w
  5649  0DD2  0441               	iorwf	_xtoa$947+1,w
  5650  0DD3  1903               	btfsc	3,2
  5651  0DD4  2E00               	goto	l2707
  5652  0DD5  3020               	movlw	32
  5653  0DD6  0453               	iorwf	xtoa@c,w
  5654  0DD7  00B8               	movwf	??_xtoa
  5655  0DD8  3000               	movlw	0
  5656  0DD9  0454               	iorwf	xtoa@c+1,w
  5657  0DDA  00B9               	movwf	??_xtoa+1
  5658  0DDB  0838               	movf	??_xtoa,w
  5659  0DDC  3E9F               	addlw	159
  5660  0DDD  00BA               	movwf	??_xtoa+2
  5661  0DDE  30FF               	movlw	255
  5662  0DDF  3D39               	addwfc	??_xtoa+1,w
  5663  0DE0  00BB               	movwf	??_xtoa+3
  5664  0DE1  3000               	movlw	0
  5665  0DE2  023B               	subwf	??_xtoa+3,w
  5666  0DE3  301A               	movlw	26
  5667  0DE4  1903               	skipnz
  5668  0DE5  023A               	subwf	??_xtoa+2,w
  5669  0DE6  1803               	btfsc	3,0
  5670  0DE7  2DEA               	goto	u3320
  5671  0DE8  3001               	movlw	1
  5672  0DE9  2DEB               	goto	u3330
  5673  0DEA                     u3320:
  5674  0DEA  3000               	movlw	0
  5675  0DEB                     u3330:
  5676  0DEB  00BC               	movwf	??_xtoa+4
  5677  0DEC  01BD               	clrf	??_xtoa+5
  5678  0DED  083C               	movf	??_xtoa+4,w
  5679  0DEE  00C2               	movwf	_xtoa$948
  5680  0DEF  083D               	movf	??_xtoa+5,w
  5681  0DF0  00C3               	movwf	_xtoa$948+1
  5682  0DF1  0842               	movf	_xtoa$948,w
  5683  0DF2  0443               	iorwf	_xtoa$948+1,w
  5684  0DF3  1903               	btfsc	3,2
  5685  0DF4  2E00               	goto	l2707
  5686                           
  5687                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  5688  0DF5  0854               	movf	xtoa@c+1,w
  5689  0DF6  00F7               	movwf	toupper@c+1
  5690  0DF7  0853               	movf	xtoa@c,w
  5691  0DF8  00F6               	movwf	toupper@c
  5692  0DF9  3194  24CB  318D   	fcall	_toupper
  5693  0DFC  0877               	movf	?_toupper+1,w
  5694  0DFD  00D4               	movwf	xtoa@c+1
  5695  0DFE  0876               	movf	?_toupper,w
  5696  0DFF  00D3               	movwf	xtoa@c
  5697  0E00                     l2707:
  5698                           
  5699                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  5700  0E00  0853               	movf	xtoa@c,w
  5701  0E01  00B8               	movwf	??_xtoa
  5702  0E02  0851               	movf	xtoa@i,w
  5703  0E03  3EAA               	addlw	(low (_dbuf| 0))& (0+255)
  5704  0E04  0086               	movwf	6
  5705  0E05  0187               	clrf	7
  5706  0E06  0838               	movf	??_xtoa,w
  5707  0E07  0081               	movwf	1
  5708                           
  5709                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 672:         --p;
  5710  0E08  30FF               	movlw	255
  5711  0E09  07C4               	addwf	xtoa@p,f
  5712  0E0A  30FF               	movlw	255
  5713  0E0B  3DC5               	addwfc	xtoa@p+1,f
  5714                           
  5715                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 673:         --w;
  5716  0E0C  30FF               	movlw	255
  5717  0E0D  07C7               	addwf	xtoa@w,f
  5718  0E0E  30FF               	movlw	255
  5719  0E0F  3DC8               	addwfc	xtoa@w+1,f
  5720                           
  5721                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  5722  0E10  3049               	movlw	low xtoa@n
  5723  0E11  0086               	movwf	6
  5724  0E12  3000               	movlw	high xtoa@n
  5725  0E13  0087               	movwf	7
  5726  0E14  3F40               	moviw [0]fsr1
  5727  0E15  00B8               	movwf	??_xtoa
  5728  0E16  3F41               	moviw [1]fsr1
  5729  0E17  00B9               	movwf	??_xtoa+1
  5730  0E18  3F42               	moviw [2]fsr1
  5731  0E19  00BA               	movwf	??_xtoa+2
  5732  0E1A  3F43               	moviw [3]fsr1
  5733  0E1B  00BB               	movwf	??_xtoa+3
  5734  0E1C  3F44               	moviw [4]fsr1
  5735  0E1D  00BC               	movwf	??_xtoa+4
  5736  0E1E  3F45               	moviw [5]fsr1
  5737  0E1F  00BD               	movwf	??_xtoa+5
  5738  0E20  3F46               	moviw [6]fsr1
  5739  0E21  00BE               	movwf	??_xtoa+6
  5740  0E22  3F47               	moviw [7]fsr1
  5741  0E23  00BF               	movwf	??_xtoa+7
  5742  0E24  3004               	movlw	4
  5743  0E25                     u3355:
  5744  0E25  0020               	movlb	0	; select bank0
  5745  0E26  36BF               	lsrf	??_xtoa+7,f
  5746  0E27  0CBE               	rrf	??_xtoa+6,f
  5747  0E28  0CBD               	rrf	??_xtoa+5,f
  5748  0E29  0CBC               	rrf	??_xtoa+4,f
  5749  0E2A  0CBB               	rrf	??_xtoa+3,f
  5750  0E2B  0CBA               	rrf	??_xtoa+2,f
  5751  0E2C  0CB9               	rrf	??_xtoa+1,f
  5752  0E2D  0CB8               	rrf	??_xtoa,f
  5753  0E2E  0B89               	decfsz	9,f
  5754  0E2F  2E25               	goto	u3355
  5755  0E30  0020               	movlb	0	; select bank0
  5756  0E31  083F               	movf	??_xtoa+7,w
  5757  0E32  00D0               	movwf	xtoa@n+7
  5758  0E33  083E               	movf	??_xtoa+6,w
  5759  0E34  00CF               	movwf	xtoa@n+6
  5760  0E35  083D               	movf	??_xtoa+5,w
  5761  0E36  00CE               	movwf	xtoa@n+5
  5762  0E37  083C               	movf	??_xtoa+4,w
  5763  0E38  00CD               	movwf	xtoa@n+4
  5764  0E39  083B               	movf	??_xtoa+3,w
  5765  0E3A  00CC               	movwf	xtoa@n+3
  5766  0E3B  083A               	movf	??_xtoa+2,w
  5767  0E3C  00CB               	movwf	xtoa@n+2
  5768  0E3D  0839               	movf	??_xtoa+1,w
  5769  0E3E  00CA               	movwf	xtoa@n+1
  5770  0E3F  0838               	movf	??_xtoa,w
  5771  0E40  00C9               	movwf	xtoa@n
  5772  0E41                     l2715:
  5773                           
  5774                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5775  0E41  0020               	movlb	0	; select bank0
  5776  0E42  0852               	movf	xtoa@i+1,w
  5777  0E43  3A80               	xorlw	128
  5778  0E44  00B8               	movwf	??_xtoa
  5779  0E45  3080               	movlw	128
  5780  0E46  0238               	subwf	??_xtoa,w
  5781  0E47  1D03               	skipz
  5782  0E48  2E4B               	goto	u3365
  5783  0E49  3002               	movlw	2
  5784  0E4A  0251               	subwf	xtoa@i,w
  5785  0E4B                     u3365:
  5786  0E4B  1C03               	skipc
  5787  0E4C  2E72               	goto	l1031
  5788  0E4D  0020               	movlb	0	; select bank0
  5789  0E4E  0849               	movf	xtoa@n,w
  5790  0E4F  044A               	iorwf	xtoa@n+1,w
  5791  0E50  044B               	iorwf	xtoa@n+2,w
  5792  0E51  044C               	iorwf	xtoa@n+3,w
  5793  0E52  044D               	iorwf	xtoa@n+4,w
  5794  0E53  044E               	iorwf	xtoa@n+5,w
  5795  0E54  044F               	iorwf	xtoa@n+6,w
  5796  0E55  0450               	iorwf	xtoa@n+7,w
  5797  0E56  1D03               	skipz
  5798  0E57  2D99               	goto	l2687
  5799  0E58  0845               	movf	xtoa@p+1,w
  5800  0E59  3A80               	xorlw	128
  5801  0E5A  00B8               	movwf	??_xtoa
  5802  0E5B  3080               	movlw	128
  5803  0E5C  0238               	subwf	??_xtoa,w
  5804  0E5D  1D03               	skipz
  5805  0E5E  2E61               	goto	u3385
  5806  0E5F  3001               	movlw	1
  5807  0E60  0244               	subwf	xtoa@p,w
  5808  0E61                     u3385:
  5809  0E61  1803               	skipnc
  5810  0E62  2D99               	goto	l2687
  5811  0E63  0020               	movlb	0	; select bank0
  5812  0E64  0848               	movf	xtoa@w+1,w
  5813  0E65  3A80               	xorlw	128
  5814  0E66  00B8               	movwf	??_xtoa
  5815  0E67  3080               	movlw	128
  5816  0E68  0238               	subwf	??_xtoa,w
  5817  0E69  1D03               	skipz
  5818  0E6A  2E6D               	goto	u3395
  5819  0E6B  3001               	movlw	1
  5820  0E6C  0247               	subwf	xtoa@w,w
  5821  0E6D                     u3395:
  5822  0E6D  1C03               	skipc
  5823  0E6E  2E72               	goto	l1031
  5824  0E6F  0021               	movlb	1	; select bank1
  5825  0E70  18A6               	btfsc	_flags^(0+128),1
  5826  0E71  2D99               	goto	l2687
  5827  0E72                     l1031:
  5828                           
  5829                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  5830  0E72  0021               	movlb	1	; select bank1
  5831  0E73  1E26               	btfss	_flags^(0+128),4
  5832  0E74  2E8E               	goto	l2731
  5833                           
  5834                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 679:         --i;
  5835  0E75  30FF               	movlw	255
  5836  0E76  0020               	movlb	0	; select bank0
  5837  0E77  07D1               	addwf	xtoa@i,f
  5838  0E78  30FF               	movlw	255
  5839  0E79  3DD2               	addwfc	xtoa@i+1,f
  5840                           
  5841                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  5842  0E7A  0837               	movf	xtoa@x,w
  5843  0E7B  00B8               	movwf	??_xtoa
  5844  0E7C  0851               	movf	xtoa@i,w
  5845  0E7D  3EAA               	addlw	(low (_dbuf| 0))& (0+255)
  5846  0E7E  0086               	movwf	6
  5847  0E7F  0187               	clrf	7
  5848  0E80  0838               	movf	??_xtoa,w
  5849  0E81  0081               	movwf	1
  5850                           
  5851                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 681:         --i;
  5852  0E82  30FF               	movlw	255
  5853  0E83  07D1               	addwf	xtoa@i,f
  5854  0E84  30FF               	movlw	255
  5855  0E85  3DD2               	addwfc	xtoa@i+1,f
  5856                           
  5857                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  5858  0E86  3030               	movlw	48
  5859  0E87  00B8               	movwf	??_xtoa
  5860  0E88  0851               	movf	xtoa@i,w
  5861  0E89  3EAA               	addlw	(low (_dbuf| 0))& (0+255)
  5862  0E8A  0086               	movwf	6
  5863  0E8B  0187               	clrf	7
  5864  0E8C  0838               	movf	??_xtoa,w
  5865  0E8D  0081               	movwf	1
  5866  0E8E                     l2731:
  5867                           
  5868                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  5869  0E8E  0020               	movlb	0	; select bank0
  5870  0E8F  0851               	movf	xtoa@i,w
  5871  0E90  3EAA               	addlw	(low (_dbuf| 0))& (0+255)
  5872  0E91  00B8               	movwf	??_xtoa
  5873  0E92  0838               	movf	??_xtoa,w
  5874  0E93  00A7               	movwf	pad@buf
  5875  0E94  0848               	movf	xtoa@w+1,w
  5876  0E95  00A9               	movwf	pad@p+1
  5877  0E96  0847               	movf	xtoa@w,w
  5878  0E97  00A8               	movwf	pad@p
  5879  0E98  0846               	movf	xtoa@fp,w
  5880  0E99  3196  261D         	fcall	_pad
  5881  0E9B  0828               	movf	?_pad+1,w
  5882  0E9C  00B0               	movwf	?_xtoa+1
  5883  0E9D  0827               	movf	?_pad,w
  5884  0E9E  00AF               	movwf	?_xtoa
  5885  0E9F  0008               	return
  5886  0EA0                     __end_of_xtoa:
  5887                           
  5888                           	psect	text8
  5889  14CB                     __ptext8:	
  5890 ;; *************** function _toupper *****************
  5891 ;; Defined at:
  5892 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\toupper.c"
  5893 ;; Parameters:    Size  Location     Type
  5894 ;;  c               2    6[COMMON] int 
  5895 ;; Auto vars:     Size  Location     Type
  5896 ;;		None
  5897 ;; Return value:  Size  Location     Type
  5898 ;;                  2    6[COMMON] int 
  5899 ;; Registers used:
  5900 ;;		wreg, status,2, status,0
  5901 ;; Tracked objects:
  5902 ;;		On entry : 1F/0
  5903 ;;		On exit  : 1F/0
  5904 ;;		Unchanged: 1F/0
  5905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5906 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5907 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5908 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5909 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5910 ;;Total ram usage:        8 bytes
  5911 ;; Hardware stack levels used: 1
  5912 ;; Hardware stack levels required when called: 1
  5913 ;; This function calls:
  5914 ;;		_islower
  5915 ;; This function is called by:
  5916 ;;		_xtoa
  5917 ;; This function uses a non-reentrant model
  5918 ;;
  5919                           
  5920                           
  5921                           ;psect for function _toupper
  5922  14CB                     _toupper:
  5923                           
  5924                           ;incstack = 0
  5925                           ; Regs used in _toupper: [wreg+status,2+status,0]
  5926  14CB  0876               	movf	toupper@c,w
  5927  14CC  3E9F               	addlw	159
  5928  14CD  00F8               	movwf	??_toupper
  5929  14CE  30FF               	movlw	255
  5930  14CF  3D77               	addwfc	toupper@c+1,w
  5931  14D0  00F9               	movwf	??_toupper+1
  5932  14D1  3000               	movlw	0
  5933  14D2  0279               	subwf	??_toupper+1,w
  5934  14D3  301A               	movlw	26
  5935  14D4  1903               	skipnz
  5936  14D5  0278               	subwf	??_toupper,w
  5937  14D6  1803               	btfsc	3,0
  5938  14D7  2CDA               	goto	u2970
  5939  14D8  3001               	movlw	1
  5940  14D9  2CDB               	goto	u2980
  5941  14DA                     u2970:
  5942  14DA  3000               	movlw	0
  5943  14DB                     u2980:
  5944  14DB  00FA               	movwf	??_toupper+2
  5945  14DC  01FB               	clrf	??_toupper+3
  5946  14DD  087A               	movf	??_toupper+2,w
  5947  14DE  00FC               	movwf	_toupper$1027
  5948  14DF  087B               	movf	??_toupper+3,w
  5949  14E0  00FD               	movwf	_toupper$1027+1
  5950  14E1  087C               	movf	_toupper$1027,w
  5951  14E2  047D               	iorwf	_toupper$1027+1,w
  5952  14E3  1903               	btfsc	3,2
  5953  14E4  0008               	return
  5954  14E5  305F               	movlw	95
  5955  14E6  0576               	andwf	toupper@c,w
  5956  14E7  00F6               	movwf	?_toupper
  5957  14E8  3000               	movlw	0
  5958  14E9  0577               	andwf	toupper@c+1,w
  5959  14EA  00F7               	movwf	?_toupper+1
  5960  14EB  0008               	return
  5961  14EC                     __end_of_toupper:
  5962                           
  5963                           	psect	text9
  5964  140C                     __ptext9:	
  5965 ;; *************** function _islower *****************
  5966 ;; Defined at:
  5967 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\islower.c"
  5968 ;; Parameters:    Size  Location     Type
  5969 ;;  c               2    0[COMMON] int 
  5970 ;; Auto vars:     Size  Location     Type
  5971 ;;		None
  5972 ;; Return value:  Size  Location     Type
  5973 ;;                  2    0[COMMON] int 
  5974 ;; Registers used:
  5975 ;;		wreg, status,2, status,0
  5976 ;; Tracked objects:
  5977 ;;		On entry : 0/0
  5978 ;;		On exit  : 0/0
  5979 ;;		Unchanged: 0/0
  5980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5981 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5983 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5984 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5985 ;;Total ram usage:        6 bytes
  5986 ;; Hardware stack levels used: 1
  5987 ;; This function calls:
  5988 ;;		Nothing
  5989 ;; This function is called by:
  5990 ;;		_toupper
  5991 ;; This function uses a non-reentrant model
  5992 ;;
  5993                           
  5994                           
  5995                           ;psect for function _islower
  5996  140C                     _islower:
  5997                           
  5998                           ;incstack = 0
  5999                           ; Regs used in _islower: [wreg+status,2+status,0]
  6000  140C  0870               	movf	islower@c,w
  6001  140D  3E9F               	addlw	159
  6002  140E  00F2               	movwf	??_islower
  6003  140F  30FF               	movlw	255
  6004  1410  3D71               	addwfc	islower@c+1,w
  6005  1411  00F3               	movwf	??_islower+1
  6006  1412  3000               	movlw	0
  6007  1413  0273               	subwf	??_islower+1,w
  6008  1414  301A               	movlw	26
  6009  1415  1903               	skipnz
  6010  1416  0272               	subwf	??_islower,w
  6011  1417  1803               	btfsc	3,0
  6012  1418  2C1B               	goto	u2650
  6013  1419  3001               	movlw	1
  6014  141A  2C1C               	goto	u2660
  6015  141B                     u2650:
  6016  141B  3000               	movlw	0
  6017  141C                     u2660:
  6018  141C  00F4               	movwf	??_islower+2
  6019  141D  01F5               	clrf	??_islower+3
  6020  141E  0874               	movf	??_islower+2,w
  6021  141F  00F0               	movwf	?_islower
  6022  1420  0875               	movf	??_islower+3,w
  6023  1421  00F1               	movwf	?_islower+1
  6024  1422  0008               	return
  6025  1423                     __end_of_islower:
  6026                           
  6027                           	psect	text10
  6028  13F5                     __ptext10:	
  6029 ;; *************** function _isupper *****************
  6030 ;; Defined at:
  6031 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  6032 ;; Parameters:    Size  Location     Type
  6033 ;;  c               2    0[COMMON] int 
  6034 ;; Auto vars:     Size  Location     Type
  6035 ;;		None
  6036 ;; Return value:  Size  Location     Type
  6037 ;;                  2    0[COMMON] int 
  6038 ;; Registers used:
  6039 ;;		wreg, status,2, status,0
  6040 ;; Tracked objects:
  6041 ;;		On entry : 0/0
  6042 ;;		On exit  : 0/0
  6043 ;;		Unchanged: 0/0
  6044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6045 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6047 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6048 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6049 ;;Total ram usage:        6 bytes
  6050 ;; Hardware stack levels used: 1
  6051 ;; This function calls:
  6052 ;;		Nothing
  6053 ;; This function is called by:
  6054 ;;		_xtoa
  6055 ;; This function uses a non-reentrant model
  6056 ;;
  6057                           
  6058                           
  6059                           ;psect for function _isupper
  6060  13F5                     _isupper:
  6061                           
  6062                           ;incstack = 0
  6063                           ; Regs used in _isupper: [wreg+status,2+status,0]
  6064  13F5  0870               	movf	isupper@c,w
  6065  13F6  3EBF               	addlw	191
  6066  13F7  00F2               	movwf	??_isupper
  6067  13F8  30FF               	movlw	255
  6068  13F9  3D71               	addwfc	isupper@c+1,w
  6069  13FA  00F3               	movwf	??_isupper+1
  6070  13FB  3000               	movlw	0
  6071  13FC  0273               	subwf	??_isupper+1,w
  6072  13FD  301A               	movlw	26
  6073  13FE  1903               	skipnz
  6074  13FF  0272               	subwf	??_isupper,w
  6075  1400  1803               	btfsc	3,0
  6076  1401  2C04               	goto	u2930
  6077  1402  3001               	movlw	1
  6078  1403  2C05               	goto	u2940
  6079  1404                     u2930:
  6080  1404  3000               	movlw	0
  6081  1405                     u2940:
  6082  1405  00F4               	movwf	??_isupper+2
  6083  1406  01F5               	clrf	??_isupper+3
  6084  1407  0874               	movf	??_isupper+2,w
  6085  1408  00F0               	movwf	?_isupper
  6086  1409  0875               	movf	??_isupper+3,w
  6087  140A  00F1               	movwf	?_isupper+1
  6088  140B  0008               	return
  6089  140C                     __end_of_isupper:
  6090                           
  6091                           	psect	text11
  6092  148F                     __ptext11:	
  6093 ;; *************** function _isalpha *****************
  6094 ;; Defined at:
  6095 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isalpha.c"
  6096 ;; Parameters:    Size  Location     Type
  6097 ;;  c               2    0[COMMON] int 
  6098 ;; Auto vars:     Size  Location     Type
  6099 ;;		None
  6100 ;; Return value:  Size  Location     Type
  6101 ;;                  2    0[COMMON] int 
  6102 ;; Registers used:
  6103 ;;		wreg, status,2, status,0
  6104 ;; Tracked objects:
  6105 ;;		On entry : 0/0
  6106 ;;		On exit  : 0/0
  6107 ;;		Unchanged: 0/0
  6108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6109 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6111 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6112 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6113 ;;Total ram usage:        8 bytes
  6114 ;; Hardware stack levels used: 1
  6115 ;; This function calls:
  6116 ;;		Nothing
  6117 ;; This function is called by:
  6118 ;;		_xtoa
  6119 ;; This function uses a non-reentrant model
  6120 ;;
  6121                           
  6122                           
  6123                           ;psect for function _isalpha
  6124  148F                     _isalpha:
  6125                           
  6126                           ;incstack = 0
  6127                           ; Regs used in _isalpha: [wreg+status,2+status,0]
  6128  148F  3020               	movlw	32
  6129  1490  0470               	iorwf	isalpha@c,w
  6130  1491  00F2               	movwf	??_isalpha
  6131  1492  3000               	movlw	0
  6132  1493  0471               	iorwf	isalpha@c+1,w
  6133  1494  00F3               	movwf	??_isalpha+1
  6134  1495  0872               	movf	??_isalpha,w
  6135  1496  3E9F               	addlw	159
  6136  1497  00F4               	movwf	??_isalpha+2
  6137  1498  30FF               	movlw	255
  6138  1499  3D73               	addwfc	??_isalpha+1,w
  6139  149A  00F5               	movwf	??_isalpha+3
  6140  149B  3000               	movlw	0
  6141  149C  0275               	subwf	??_isalpha+3,w
  6142  149D  301A               	movlw	26
  6143  149E  1903               	skipnz
  6144  149F  0274               	subwf	??_isalpha+2,w
  6145  14A0  1803               	btfsc	3,0
  6146  14A1  2CA4               	goto	u2950
  6147  14A2  3001               	movlw	1
  6148  14A3  2CA5               	goto	u2960
  6149  14A4                     u2950:
  6150  14A4  3000               	movlw	0
  6151  14A5                     u2960:
  6152  14A5  00F6               	movwf	??_isalpha+4
  6153  14A6  01F7               	clrf	??_isalpha+5
  6154  14A7  0876               	movf	??_isalpha+4,w
  6155  14A8  00F0               	movwf	?_isalpha
  6156  14A9  0877               	movf	??_isalpha+5,w
  6157  14AA  00F1               	movwf	?_isalpha+1
  6158  14AB  0008               	return
  6159  14AC                     __end_of_isalpha:
  6160                           
  6161                           	psect	text12
  6162  0975                     __ptext12:	
  6163 ;; *************** function _stoa *****************
  6164 ;; Defined at:
  6165 ;;		line 568 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6166 ;; Parameters:    Size  Location     Type
  6167 ;;  fp              1    wreg     PTR struct _IO_FILE
  6168 ;;		 -> NULL(0), 
  6169 ;;  s               1   11[COMMON] PTR unsigned char 
  6170 ;;		 -> ?_printf(2), MLX90614_writeEmissivity@emissivity(4), main@buffer(8), 
  6171 ;; Auto vars:     Size  Location     Type
  6172 ;;  fp              1   14[BANK0 ] PTR struct _IO_FILE
  6173 ;;		 -> NULL(0), 
  6174 ;;  nuls            7    3[BANK0 ] unsigned char [7]
  6175 ;;  l               2   18[BANK0 ] int 
  6176 ;;  p               2   16[BANK0 ] int 
  6177 ;;  w               2   12[BANK0 ] int 
  6178 ;;  i               2   10[BANK0 ] int 
  6179 ;;  cp              1   15[BANK0 ] PTR unsigned char 
  6180 ;;		 -> stoa@nuls(7), ?_printf(2), MLX90614_writeEmissivity@emissivity(4), main@buffer(8), 
  6181 ;; Return value:  Size  Location     Type
  6182 ;;                  2   11[COMMON] int 
  6183 ;; Registers used:
  6184 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6185 ;; Tracked objects:
  6186 ;;		On entry : 1F/0
  6187 ;;		On exit  : 1F/0
  6188 ;;		Unchanged: 0/0
  6189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6190 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6191 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6192 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6193 ;;      Totals:         2      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6194 ;;Total ram usage:       22 bytes
  6195 ;; Hardware stack levels used: 1
  6196 ;; Hardware stack levels required when called: 3
  6197 ;; This function calls:
  6198 ;;		_fputc
  6199 ;;		_strlen
  6200 ;; This function is called by:
  6201 ;;		_vfpfcnvrt
  6202 ;; This function uses a non-reentrant model
  6203 ;;
  6204                           
  6205                           
  6206                           ;psect for function _stoa
  6207  0975                     _stoa:
  6208                           
  6209                           ;incstack = 0
  6210                           ; Regs used in _stoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6211                           ;stoa@fp stored from wreg
  6212  0975  00AE               	movwf	stoa@fp
  6213                           
  6214                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 568: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 569: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 570:  
      +                             char *cp, nuls[] = "(null)";
  6215  0976  30E9               	movlw	low stoa@F1141
  6216  0977  0086               	movwf	6
  6217  0978  3000               	movlw	high stoa@F1141
  6218  0979  0087               	movwf	7
  6219  097A  3023               	movlw	low stoa@nuls
  6220  097B  0084               	movwf	4
  6221  097C  3000               	movlw	high stoa@nuls
  6222  097D  0085               	movwf	5
  6223  097E  3007               	movlw	7
  6224  097F  00A0               	movwf	??_stoa
  6225  0980                     u3160:
  6226  0980  0016               	moviw fsr1++
  6227  0981  001A               	movwi fsr0++
  6228  0982  0BA0               	decfsz	??_stoa,f
  6229  0983  2980               	goto	u3160
  6230                           
  6231                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 571:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 574:     c
      +                          p = s;
  6232  0984  087B               	movf	stoa@s,w
  6233  0985  00A0               	movwf	??_stoa
  6234  0986  0820               	movf	??_stoa,w
  6235  0987  00AF               	movwf	stoa@cp
  6236                           
  6237                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 575:     if (!cp)
      +                           {
  6238  0988  082F               	movf	stoa@cp,w
  6239  0989  1D03               	btfss	3,2
  6240  098A  298F               	goto	l2629
  6241                           
  6242                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 576:         cp =
      +                           nuls;
  6243  098B  3023               	movlw	(low (stoa@nuls| 0))& (0+255)
  6244  098C  00A0               	movwf	??_stoa
  6245  098D  0820               	movf	??_stoa,w
  6246  098E  00AF               	movwf	stoa@cp
  6247  098F                     l2629:
  6248                           
  6249                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 580:     l = (int
      +                          )strlen(cp);
  6250  098F  082F               	movf	stoa@cp,w
  6251  0990  3193  23DE  3189   	fcall	_strlen
  6252  0993  0871               	movf	?_strlen+1,w
  6253  0994  00B3               	movwf	stoa@l+1
  6254  0995  0870               	movf	?_strlen,w
  6255  0996  00B2               	movwf	stoa@l
  6256                           
  6257                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 581:     p = prec
      +                          ;
  6258  0997  0021               	movlb	1	; select bank1
  6259  0998  0825               	movf	(_prec+1)^(0+128),w
  6260  0999  0020               	movlb	0	; select bank0
  6261  099A  00B1               	movwf	stoa@p+1
  6262  099B  0021               	movlb	1	; select bank1
  6263  099C  0824               	movf	_prec^(0+128),w
  6264  099D  0020               	movlb	0	; select bank0
  6265  099E  00B0               	movwf	stoa@p
  6266                           
  6267                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 582:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  6268  099F  1BB1               	btfsc	stoa@p+1,7
  6269  09A0  29B2               	goto	l989
  6270  09A1  0831               	movf	stoa@p+1,w
  6271  09A2  3A80               	xorlw	128
  6272  09A3  00A0               	movwf	??_stoa
  6273  09A4  0833               	movf	stoa@l+1,w
  6274  09A5  3A80               	xorlw	128
  6275  09A6  0220               	subwf	??_stoa,w
  6276  09A7  1D03               	skipz
  6277  09A8  29AB               	goto	u3195
  6278  09A9  0832               	movf	stoa@l,w
  6279  09AA  0230               	subwf	stoa@p,w
  6280  09AB                     u3195:
  6281  09AB  1803               	btfsc	3,0
  6282  09AC  29B2               	goto	l989
  6283  09AD  0020               	movlb	0	; select bank0
  6284  09AE  0831               	movf	stoa@p+1,w
  6285  09AF  00B3               	movwf	stoa@l+1
  6286  09B0  0830               	movf	stoa@p,w
  6287  09B1  00B2               	movwf	stoa@l
  6288  09B2                     l989:
  6289                           
  6290                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 583:     p = l;
  6291  09B2  0020               	movlb	0	; select bank0
  6292  09B3  0833               	movf	stoa@l+1,w
  6293  09B4  00B1               	movwf	stoa@p+1
  6294  09B5  0832               	movf	stoa@l,w
  6295  09B6  00B0               	movwf	stoa@p
  6296                           
  6297                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 584:     w = widt
      +                          h;
  6298  09B7  0021               	movlb	1	; select bank1
  6299  09B8  0823               	movf	(_width+1)^(0+128),w
  6300  09B9  0020               	movlb	0	; select bank0
  6301  09BA  00AD               	movwf	stoa@w+1
  6302  09BB  0021               	movlb	1	; select bank1
  6303  09BC  0822               	movf	_width^(0+128),w
  6304  09BD  0020               	movlb	0	; select bank0
  6305  09BE  00AC               	movwf	stoa@w
  6306                           
  6307                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 587:     if (!(fl
      +                          ags & (1 << 0))) {
  6308  09BF  0021               	movlb	1	; select bank1
  6309  09C0  1C26               	btfss	_flags^(0+128),0
  6310  09C1  29D4               	goto	l2647
  6311  09C2  29E1               	goto	l2649
  6312  09C3                     l2643:
  6313                           
  6314                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 589:             
      +                          fputc(' ', fp);
  6315  09C3  3020               	movlw	32
  6316  09C4  00F3               	movwf	fputc@c
  6317  09C5  3000               	movlw	0
  6318  09C6  00F4               	movwf	fputc@c+1
  6319  09C7  0020               	movlb	0	; select bank0
  6320  09C8  082E               	movf	stoa@fp,w
  6321  09C9  00A0               	movwf	??_stoa
  6322  09CA  0820               	movf	??_stoa,w
  6323  09CB  00F5               	movwf	fputc@fp
  6324  09CC  3195  2510  3189   	fcall	_fputc
  6325                           
  6326                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 590:             
      +                          ++l;
  6327  09CF  3001               	movlw	1
  6328  09D0  0020               	movlb	0	; select bank0
  6329  09D1  07B2               	addwf	stoa@l,f
  6330  09D2  3000               	movlw	0
  6331  09D3  3DB3               	addwfc	stoa@l+1,f
  6332  09D4                     l2647:
  6333                           
  6334                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 588:         whil
      +                          e (l < w) {
  6335  09D4  0020               	movlb	0	; select bank0
  6336  09D5  0833               	movf	stoa@l+1,w
  6337  09D6  3A80               	xorlw	128
  6338  09D7  00A0               	movwf	??_stoa
  6339  09D8  082D               	movf	stoa@w+1,w
  6340  09D9  3A80               	xorlw	128
  6341  09DA  0220               	subwf	??_stoa,w
  6342  09DB  1D03               	skipz
  6343  09DC  29DF               	goto	u3215
  6344  09DD  082C               	movf	stoa@w,w
  6345  09DE  0232               	subwf	stoa@l,w
  6346  09DF                     u3215:
  6347  09DF  1C03               	skipc
  6348  09E0  29C3               	goto	l2643
  6349  09E1                     l2649:
  6350                           
  6351                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 595:     i = 0;
  6352  09E1  0020               	movlb	0	; select bank0
  6353  09E2  01AA               	clrf	stoa@i
  6354  09E3  01AB               	clrf	stoa@i+1
  6355  09E4                     l2657:	
  6356                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  6357                           
  6358                           
  6359                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  6360  09E4  082B               	movf	stoa@i+1,w
  6361  09E5  3A80               	xorlw	128
  6362  09E6  00A0               	movwf	??_stoa
  6363  09E7  0831               	movf	stoa@p+1,w
  6364  09E8  3A80               	xorlw	128
  6365  09E9  0220               	subwf	??_stoa,w
  6366  09EA  1D03               	skipz
  6367  09EB  29EE               	goto	u3225
  6368  09EC  0830               	movf	stoa@p,w
  6369  09ED  022A               	subwf	stoa@i,w
  6370  09EE                     u3225:
  6371  09EE  1803               	btfsc	3,0
  6372  09EF  2A0C               	goto	l998
  6373                           
  6374                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 597:         fput
      +                          c(*cp, fp);
  6375  09F0  0020               	movlb	0	; select bank0
  6376  09F1  082F               	movf	stoa@cp,w
  6377  09F2  0086               	movwf	6
  6378  09F3  0187               	clrf	7
  6379  09F4  0801               	movf	1,w
  6380  09F5  00A0               	movwf	??_stoa
  6381  09F6  01A1               	clrf	??_stoa+1
  6382  09F7  0820               	movf	??_stoa,w
  6383  09F8  00F3               	movwf	fputc@c
  6384  09F9  0821               	movf	??_stoa+1,w
  6385  09FA  00F4               	movwf	fputc@c+1
  6386  09FB  082E               	movf	stoa@fp,w
  6387  09FC  00A2               	movwf	??_stoa+2
  6388  09FD  0822               	movf	??_stoa+2,w
  6389  09FE  00F5               	movwf	fputc@fp
  6390  09FF  3195  2510  3189   	fcall	_fputc
  6391                           
  6392                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 598:         ++cp
      +                          ;
  6393  0A02  3001               	movlw	1
  6394  0A03  0020               	movlb	0	; select bank0
  6395  0A04  00A0               	movwf	??_stoa
  6396  0A05  0820               	movf	??_stoa,w
  6397  0A06  07AF               	addwf	stoa@cp,f
  6398                           
  6399                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 599:         ++i;
  6400  0A07  3001               	movlw	1
  6401  0A08  07AA               	addwf	stoa@i,f
  6402  0A09  3000               	movlw	0
  6403  0A0A  3DAB               	addwfc	stoa@i+1,f
  6404  0A0B  29E4               	goto	l2657
  6405  0A0C                     l998:
  6406                           
  6407                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 603:     if (flag
      +                          s & (1 << 0)) {
  6408  0A0C  0021               	movlb	1	; select bank1
  6409  0A0D  1826               	btfsc	_flags^(0+128),0
  6410  0A0E  2A21               	goto	l2665
  6411  0A0F  2A2E               	goto	l2667
  6412  0A10                     l2661:
  6413                           
  6414                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 605:             
      +                          fputc(' ', fp);
  6415  0A10  3020               	movlw	32
  6416  0A11  00F3               	movwf	fputc@c
  6417  0A12  3000               	movlw	0
  6418  0A13  00F4               	movwf	fputc@c+1
  6419  0A14  0020               	movlb	0	; select bank0
  6420  0A15  082E               	movf	stoa@fp,w
  6421  0A16  00A0               	movwf	??_stoa
  6422  0A17  0820               	movf	??_stoa,w
  6423  0A18  00F5               	movwf	fputc@fp
  6424  0A19  3195  2510  3189   	fcall	_fputc
  6425                           
  6426                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 606:             
      +                          ++l;
  6427  0A1C  3001               	movlw	1
  6428  0A1D  0020               	movlb	0	; select bank0
  6429  0A1E  07B2               	addwf	stoa@l,f
  6430  0A1F  3000               	movlw	0
  6431  0A20  3DB3               	addwfc	stoa@l+1,f
  6432  0A21                     l2665:
  6433                           
  6434                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 604:         whil
      +                          e (l < w) {
  6435  0A21  0020               	movlb	0	; select bank0
  6436  0A22  0833               	movf	stoa@l+1,w
  6437  0A23  3A80               	xorlw	128
  6438  0A24  00A0               	movwf	??_stoa
  6439  0A25  082D               	movf	stoa@w+1,w
  6440  0A26  3A80               	xorlw	128
  6441  0A27  0220               	subwf	??_stoa,w
  6442  0A28  1D03               	skipz
  6443  0A29  2A2C               	goto	u3245
  6444  0A2A  082C               	movf	stoa@w,w
  6445  0A2B  0232               	subwf	stoa@l,w
  6446  0A2C                     u3245:
  6447  0A2C  1C03               	skipc
  6448  0A2D  2A10               	goto	l2661
  6449  0A2E                     l2667:
  6450                           
  6451                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 610:     return l
      +                          ;
  6452  0A2E  0020               	movlb	0	; select bank0
  6453  0A2F  0833               	movf	stoa@l+1,w
  6454  0A30  00FC               	movwf	?_stoa+1
  6455  0A31  0832               	movf	stoa@l,w
  6456  0A32  00FB               	movwf	?_stoa
  6457  0A33  0008               	return
  6458  0A34                     __end_of_stoa:
  6459                           
  6460                           	psect	text13
  6461  0C03                     __ptext13:	
  6462 ;; *************** function _dtoa *****************
  6463 ;; Defined at:
  6464 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6465 ;; Parameters:    Size  Location     Type
  6466 ;;  fp              1    wreg     PTR struct _IO_FILE
  6467 ;;		 -> NULL(0), 
  6468 ;;  d               8   16[BANK0 ] long long 
  6469 ;; Auto vars:     Size  Location     Type
  6470 ;;  fp              1   31[BANK0 ] PTR struct _IO_FILE
  6471 ;;		 -> NULL(0), 
  6472 ;;  n               8   36[BANK0 ] long long 
  6473 ;;  i               2   44[BANK0 ] int 
  6474 ;;  s               2   34[BANK0 ] int 
  6475 ;;  w               2   32[BANK0 ] int 
  6476 ;;  p               2   29[BANK0 ] int 
  6477 ;; Return value:  Size  Location     Type
  6478 ;;                  2   16[BANK0 ] int 
  6479 ;; Registers used:
  6480 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6481 ;; Tracked objects:
  6482 ;;		On entry : 1F/0
  6483 ;;		On exit  : 1F/0
  6484 ;;		Unchanged: 0/0
  6485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6486 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6487 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6488 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6489 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6490 ;;Total ram usage:       30 bytes
  6491 ;; Hardware stack levels used: 1
  6492 ;; Hardware stack levels required when called: 5
  6493 ;; This function calls:
  6494 ;;		___aodiv
  6495 ;;		___aomod
  6496 ;;		_abs
  6497 ;;		_pad
  6498 ;; This function is called by:
  6499 ;;		_vfpfcnvrt
  6500 ;; This function uses a non-reentrant model
  6501 ;;
  6502                           
  6503                           
  6504                           ;psect for function _dtoa
  6505  0C03                     _dtoa:
  6506                           
  6507                           ;incstack = 0
  6508                           ; Regs used in _dtoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6509                           ;dtoa@fp stored from wreg
  6510  0C03  00BF               	movwf	dtoa@fp
  6511                           
  6512                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  6513  0C04  0830               	movf	dtoa@d,w
  6514  0C05  00C4               	movwf	dtoa@n
  6515  0C06  0831               	movf	dtoa@d+1,w
  6516  0C07  00C5               	movwf	dtoa@n+1
  6517  0C08  0832               	movf	dtoa@d+2,w
  6518  0C09  00C6               	movwf	dtoa@n+2
  6519  0C0A  0833               	movf	dtoa@d+3,w
  6520  0C0B  00C7               	movwf	dtoa@n+3
  6521  0C0C  0834               	movf	dtoa@d+4,w
  6522  0C0D  00C8               	movwf	dtoa@n+4
  6523  0C0E  0835               	movf	dtoa@d+5,w
  6524  0C0F  00C9               	movwf	dtoa@n+5
  6525  0C10  0836               	movf	dtoa@d+6,w
  6526  0C11  00CA               	movwf	dtoa@n+6
  6527  0C12  0837               	movf	dtoa@d+7,w
  6528  0C13  00CB               	movwf	dtoa@n+7
  6529                           
  6530                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  6531  0C14  3044               	movlw	low dtoa@n
  6532  0C15  0086               	movwf	6
  6533  0C16  3000               	movlw	high dtoa@n
  6534  0C17  0087               	movwf	7
  6535  0C18  3F47               	moviw [7]fsr1
  6536  0C19  00B8               	movwf	??_dtoa
  6537  0C1A  1FB8               	btfss	??_dtoa,7
  6538  0C1B  2C1E               	goto	u3000
  6539  0C1C  3001               	movlw	1
  6540  0C1D  2C1F               	goto	u3010
  6541  0C1E                     u3000:
  6542  0C1E  3000               	movlw	0
  6543  0C1F                     u3010:
  6544  0C1F  0020               	movlb	0	; select bank0
  6545  0C20  00B9               	movwf	??_dtoa+1
  6546  0C21  01BA               	clrf	??_dtoa+2
  6547  0C22  0839               	movf	??_dtoa+1,w
  6548  0C23  00C2               	movwf	dtoa@s
  6549  0C24  083A               	movf	??_dtoa+2,w
  6550  0C25  00C3               	movwf	dtoa@s+1
  6551                           
  6552                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  6553  0C26  0842               	movf	dtoa@s,w
  6554  0C27  0443               	iorwf	dtoa@s+1,w
  6555  0C28  1903               	btfsc	3,2
  6556  0C29  2C48               	goto	l957
  6557                           
  6558                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  6559  0C2A  09C4               	comf	dtoa@n,f
  6560  0C2B  09C5               	comf	dtoa@n+1,f
  6561  0C2C  09C6               	comf	dtoa@n+2,f
  6562  0C2D  09C7               	comf	dtoa@n+3,f
  6563  0C2E  09C8               	comf	dtoa@n+4,f
  6564  0C2F  09C9               	comf	dtoa@n+5,f
  6565  0C30  09CA               	comf	dtoa@n+6,f
  6566  0C31  09CB               	comf	dtoa@n+7,f
  6567  0C32  0AC4               	incf	dtoa@n,f
  6568  0C33  1D03               	skipz
  6569  0C34  2C48               	goto	l957
  6570  0C35  0AC5               	incf	dtoa@n+1,f
  6571  0C36  1D03               	skipz
  6572  0C37  2C48               	goto	l957
  6573  0C38  0AC6               	incf	dtoa@n+2,f
  6574  0C39  1D03               	skipz
  6575  0C3A  2C48               	goto	l957
  6576  0C3B  0AC7               	incf	dtoa@n+3,f
  6577  0C3C  1D03               	skipz
  6578  0C3D  2C48               	goto	l957
  6579  0C3E  0AC8               	incf	dtoa@n+4,f
  6580  0C3F  1D03               	skipz
  6581  0C40  2C48               	goto	l957
  6582  0C41  0AC9               	incf	dtoa@n+5,f
  6583  0C42  1D03               	skipz
  6584  0C43  2C48               	goto	l957
  6585  0C44  0ACA               	incf	dtoa@n+6,f
  6586  0C45  1D03               	skipz
  6587  0C46  2C48               	goto	l957
  6588  0C47  0ACB               	incf	dtoa@n+7,f
  6589  0C48                     l957:	
  6590                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 297:     }
  6591                           
  6592                           
  6593                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  6594  0C48  0021               	movlb	1	; select bank1
  6595  0C49  1BA5               	btfsc	(_prec+1)^(0+128),7
  6596  0C4A  2C4F               	goto	l958
  6597                           
  6598                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  6599  0C4B  30FD               	movlw	253
  6600  0C4C  05A6               	andwf	_flags^(0+128),f
  6601  0C4D  30FF               	movlw	255
  6602  0C4E  05A7               	andwf	(_flags+1)^(0+128),f
  6603  0C4F                     l958:	
  6604                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 302:     }
  6605                           
  6606                           
  6607                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  6608  0C4F  0825               	movf	(_prec+1)^(0+128),w
  6609  0C50  3A80               	xorlw	128
  6610  0C51  0020               	movlb	0	; select bank0
  6611  0C52  00B8               	movwf	??_dtoa
  6612  0C53  3080               	movlw	128
  6613  0C54  0238               	subwf	??_dtoa,w
  6614  0C55  1D03               	skipz
  6615  0C56  2C5A               	goto	u3055
  6616  0C57  3001               	movlw	1
  6617  0C58  0021               	movlb	1	; select bank1
  6618  0C59  0224               	subwf	_prec^(0+128),w
  6619  0C5A                     u3055:
  6620  0C5A  1803               	skipnc
  6621  0C5B  2C62               	goto	l2575
  6622  0C5C  3001               	movlw	1
  6623  0C5D  0020               	movlb	0	; select bank0
  6624  0C5E  00BD               	movwf	dtoa@p
  6625  0C5F  3000               	movlw	0
  6626  0C60  00BE               	movwf	dtoa@p+1
  6627  0C61  2C6A               	goto	l962
  6628  0C62                     l2575:
  6629  0C62  0021               	movlb	1	; select bank1
  6630  0C63  0825               	movf	(_prec+1)^(0+128),w
  6631  0C64  0020               	movlb	0	; select bank0
  6632  0C65  00BE               	movwf	dtoa@p+1
  6633  0C66  0021               	movlb	1	; select bank1
  6634  0C67  0824               	movf	_prec^(0+128),w
  6635  0C68  0020               	movlb	0	; select bank0
  6636  0C69  00BD               	movwf	dtoa@p
  6637  0C6A                     l962:
  6638                           
  6639                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  6640  0C6A  0021               	movlb	1	; select bank1
  6641  0C6B  0823               	movf	(_width+1)^(0+128),w
  6642  0C6C  0020               	movlb	0	; select bank0
  6643  0C6D  00C1               	movwf	dtoa@w+1
  6644  0C6E  0021               	movlb	1	; select bank1
  6645  0C6F  0822               	movf	_width^(0+128),w
  6646  0C70  0020               	movlb	0	; select bank0
  6647  0C71  00C0               	movwf	dtoa@w
  6648                           
  6649                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  6650  0C72  0842               	movf	dtoa@s,w
  6651  0C73  0443               	iorwf	dtoa@s+1,w
  6652  0C74  1D03               	btfss	3,2
  6653  0C75  2C79               	goto	l2581
  6654  0C76  0021               	movlb	1	; select bank1
  6655  0C77  1D26               	btfss	_flags^(0+128),2
  6656  0C78  2C7E               	goto	l963
  6657  0C79                     l2581:
  6658                           
  6659                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  6660  0C79  30FF               	movlw	255
  6661  0C7A  0020               	movlb	0	; select bank0
  6662  0C7B  07C0               	addwf	dtoa@w,f
  6663  0C7C  30FF               	movlw	255
  6664  0C7D  3DC1               	addwfc	dtoa@w+1,f
  6665  0C7E                     l963:	
  6666                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 307:     }
  6667                           
  6668                           
  6669                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  6670  0C7E  301F               	movlw	31
  6671  0C7F  0020               	movlb	0	; select bank0
  6672  0C80  00CC               	movwf	dtoa@i
  6673  0C81  3000               	movlw	0
  6674  0C82  00CD               	movwf	dtoa@i+1
  6675                           
  6676                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  6677  0C83  0021               	movlb	1	; select bank1
  6678  0C84  01C9               	clrf	(_dbuf^(0+128)+31)
  6679                           
  6680                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6681  0C85  2D11               	goto	l966
  6682  0C86                     l2595:
  6683  0C86  0020               	movlb	0	; select bank0
  6684  0C87  0844               	movf	dtoa@n,w
  6685  0C88  0445               	iorwf	dtoa@n+1,w
  6686  0C89  0446               	iorwf	dtoa@n+2,w
  6687  0C8A  0447               	iorwf	dtoa@n+3,w
  6688  0C8B  0448               	iorwf	dtoa@n+4,w
  6689  0C8C  0449               	iorwf	dtoa@n+5,w
  6690  0C8D  044A               	iorwf	dtoa@n+6,w
  6691  0C8E  044B               	iorwf	dtoa@n+7,w
  6692  0C8F  1D03               	skipz
  6693  0C90  2CAB               	goto	l2585
  6694  0C91  083E               	movf	dtoa@p+1,w
  6695  0C92  3A80               	xorlw	128
  6696  0C93  00B8               	movwf	??_dtoa
  6697  0C94  3080               	movlw	128
  6698  0C95  0238               	subwf	??_dtoa,w
  6699  0C96  1D03               	skipz
  6700  0C97  2C9A               	goto	u3105
  6701  0C98  3001               	movlw	1
  6702  0C99  023D               	subwf	dtoa@p,w
  6703  0C9A                     u3105:
  6704  0C9A  1803               	skipnc
  6705  0C9B  2CAB               	goto	l2585
  6706  0C9C  0020               	movlb	0	; select bank0
  6707  0C9D  0841               	movf	dtoa@w+1,w
  6708  0C9E  3A80               	xorlw	128
  6709  0C9F  00B8               	movwf	??_dtoa
  6710  0CA0  3080               	movlw	128
  6711  0CA1  0238               	subwf	??_dtoa,w
  6712  0CA2  1D03               	skipz
  6713  0CA3  2CA6               	goto	u3115
  6714  0CA4  3001               	movlw	1
  6715  0CA5  0240               	subwf	dtoa@w,w
  6716  0CA6                     u3115:
  6717  0CA6  1C03               	skipc
  6718  0CA7  2D1D               	goto	l2603
  6719  0CA8  0021               	movlb	1	; select bank1
  6720  0CA9  1CA6               	btfss	_flags^(0+128),1
  6721  0CAA  2D1D               	goto	l2603
  6722  0CAB                     l2585:
  6723                           
  6724                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  6725  0CAB  30FF               	movlw	255
  6726  0CAC  0020               	movlb	0	; select bank0
  6727  0CAD  07CC               	addwf	dtoa@i,f
  6728  0CAE  30FF               	movlw	255
  6729  0CAF  3DCD               	addwfc	dtoa@i+1,f
  6730                           
  6731                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  6732  0CB0  300A               	movlw	10
  6733  0CB1  00A0               	movwf	___aomod@divisor
  6734  0CB2  01A1               	clrf	___aomod@divisor+1
  6735  0CB3  01A2               	clrf	___aomod@divisor+2
  6736  0CB4  01A3               	clrf	___aomod@divisor+3
  6737  0CB5  01A4               	clrf	___aomod@divisor+4
  6738  0CB6  01A5               	clrf	___aomod@divisor+5
  6739  0CB7  01A6               	clrf	___aomod@divisor+6
  6740  0CB8  01A7               	clrf	___aomod@divisor+7
  6741  0CB9  0844               	movf	dtoa@n,w
  6742  0CBA  00A8               	movwf	___aomod@dividend
  6743  0CBB  0845               	movf	dtoa@n+1,w
  6744  0CBC  00A9               	movwf	___aomod@dividend+1
  6745  0CBD  0846               	movf	dtoa@n+2,w
  6746  0CBE  00AA               	movwf	___aomod@dividend+2
  6747  0CBF  0847               	movf	dtoa@n+3,w
  6748  0CC0  00AB               	movwf	___aomod@dividend+3
  6749  0CC1  0848               	movf	dtoa@n+4,w
  6750  0CC2  00AC               	movwf	___aomod@dividend+4
  6751  0CC3  0849               	movf	dtoa@n+5,w
  6752  0CC4  00AD               	movwf	___aomod@dividend+5
  6753  0CC5  084A               	movf	dtoa@n+6,w
  6754  0CC6  00AE               	movwf	___aomod@dividend+6
  6755  0CC7  084B               	movf	dtoa@n+7,w
  6756  0CC8  00AF               	movwf	___aomod@dividend+7
  6757  0CC9  318A  2234  318C   	fcall	___aomod
  6758  0CCC  0821               	movf	?___aomod+1,w
  6759  0CCD  00F4               	movwf	abs@a+1
  6760  0CCE  0820               	movf	?___aomod,w
  6761  0CCF  00F3               	movwf	abs@a
  6762  0CD0  3193  23C7  318C   	fcall	_abs
  6763  0CD3  0873               	movf	?_abs,w
  6764  0CD4  3E30               	addlw	48
  6765  0CD5  0020               	movlb	0	; select bank0
  6766  0CD6  00B8               	movwf	??_dtoa
  6767  0CD7  084C               	movf	dtoa@i,w
  6768  0CD8  3EAA               	addlw	(low (_dbuf| 0))& (0+255)
  6769  0CD9  0086               	movwf	6
  6770  0CDA  0187               	clrf	7
  6771  0CDB  0838               	movf	??_dtoa,w
  6772  0CDC  0081               	movwf	1
  6773                           
  6774                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  6775  0CDD  30FF               	movlw	255
  6776  0CDE  07BD               	addwf	dtoa@p,f
  6777  0CDF  30FF               	movlw	255
  6778  0CE0  3DBE               	addwfc	dtoa@p+1,f
  6779                           
  6780                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  6781  0CE1  30FF               	movlw	255
  6782  0CE2  07C0               	addwf	dtoa@w,f
  6783  0CE3  30FF               	movlw	255
  6784  0CE4  3DC1               	addwfc	dtoa@w+1,f
  6785                           
  6786                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  6787  0CE5  300A               	movlw	10
  6788  0CE6  00A0               	movwf	___aodiv@divisor
  6789  0CE7  01A1               	clrf	___aodiv@divisor+1
  6790  0CE8  01A2               	clrf	___aodiv@divisor+2
  6791  0CE9  01A3               	clrf	___aodiv@divisor+3
  6792  0CEA  01A4               	clrf	___aodiv@divisor+4
  6793  0CEB  01A5               	clrf	___aodiv@divisor+5
  6794  0CEC  01A6               	clrf	___aodiv@divisor+6
  6795  0CED  01A7               	clrf	___aodiv@divisor+7
  6796  0CEE  0844               	movf	dtoa@n,w
  6797  0CEF  00A8               	movwf	___aodiv@dividend
  6798  0CF0  0845               	movf	dtoa@n+1,w
  6799  0CF1  00A9               	movwf	___aodiv@dividend+1
  6800  0CF2  0846               	movf	dtoa@n+2,w
  6801  0CF3  00AA               	movwf	___aodiv@dividend+2
  6802  0CF4  0847               	movf	dtoa@n+3,w
  6803  0CF5  00AB               	movwf	___aodiv@dividend+3
  6804  0CF6  0848               	movf	dtoa@n+4,w
  6805  0CF7  00AC               	movwf	___aodiv@dividend+4
  6806  0CF8  0849               	movf	dtoa@n+5,w
  6807  0CF9  00AD               	movwf	___aodiv@dividend+5
  6808  0CFA  084A               	movf	dtoa@n+6,w
  6809  0CFB  00AE               	movwf	___aodiv@dividend+6
  6810  0CFC  084B               	movf	dtoa@n+7,w
  6811  0CFD  00AF               	movwf	___aodiv@dividend+7
  6812  0CFE  318B  2310  318C   	fcall	___aodiv
  6813  0D01  0820               	movf	?___aodiv,w
  6814  0D02  00C4               	movwf	dtoa@n
  6815  0D03  0821               	movf	?___aodiv+1,w
  6816  0D04  00C5               	movwf	dtoa@n+1
  6817  0D05  0822               	movf	?___aodiv+2,w
  6818  0D06  00C6               	movwf	dtoa@n+2
  6819  0D07  0823               	movf	?___aodiv+3,w
  6820  0D08  00C7               	movwf	dtoa@n+3
  6821  0D09  0824               	movf	?___aodiv+4,w
  6822  0D0A  00C8               	movwf	dtoa@n+4
  6823  0D0B  0825               	movf	?___aodiv+5,w
  6824  0D0C  00C9               	movwf	dtoa@n+5
  6825  0D0D  0826               	movf	?___aodiv+6,w
  6826  0D0E  00CA               	movwf	dtoa@n+6
  6827  0D0F  0827               	movf	?___aodiv+7,w
  6828  0D10  00CB               	movwf	dtoa@n+7
  6829  0D11                     l966:	
  6830                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 318:     }
  6831                           
  6832                           
  6833                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6834  0D11  0020               	movlb	0	; select bank0
  6835  0D12  084D               	movf	dtoa@i+1,w
  6836  0D13  3A80               	xorlw	128
  6837  0D14  00B8               	movwf	??_dtoa
  6838  0D15  3080               	movlw	128
  6839  0D16  0238               	subwf	??_dtoa,w
  6840  0D17  1D03               	skipz
  6841  0D18  2D1B               	goto	u3085
  6842  0D19  3001               	movlw	1
  6843  0D1A  024C               	subwf	dtoa@i,w
  6844  0D1B                     u3085:
  6845  0D1B  1803               	btfsc	3,0
  6846  0D1C  2C86               	goto	l2595
  6847  0D1D                     l2603:
  6848                           
  6849                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  6850  0D1D  0020               	movlb	0	; select bank0
  6851  0D1E  0842               	movf	dtoa@s,w
  6852  0D1F  0443               	iorwf	dtoa@s+1,w
  6853  0D20  1D03               	btfss	3,2
  6854  0D21  2D25               	goto	l2607
  6855  0D22  0021               	movlb	1	; select bank1
  6856  0D23  1D26               	btfss	_flags^(0+128),2
  6857  0D24  2D3C               	goto	l2617
  6858  0D25                     l2607:
  6859                           
  6860                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  6861  0D25  30FF               	movlw	255
  6862  0D26  0020               	movlb	0	; select bank0
  6863  0D27  07CC               	addwf	dtoa@i,f
  6864  0D28  30FF               	movlw	255
  6865  0D29  3DCD               	addwfc	dtoa@i+1,f
  6866                           
  6867                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  6868  0D2A  0842               	movf	dtoa@s,w
  6869  0D2B  0443               	iorwf	dtoa@s+1,w
  6870  0D2C  1D03               	btfss	3,2
  6871  0D2D  2D30               	goto	l2613
  6872  0D2E  302B               	movlw	43
  6873  0D2F  2D31               	goto	L2
  6874  0D30                     l2613:
  6875  0D30  302D               	movlw	45
  6876  0D31                     L2:
  6877  0D31  00BB               	movwf	_dtoa$926
  6878  0D32  3000               	movlw	0
  6879  0D33  00BC               	movwf	_dtoa$926+1
  6880  0D34  083B               	movf	_dtoa$926,w
  6881  0D35  00B8               	movwf	??_dtoa
  6882  0D36  084C               	movf	dtoa@i,w
  6883  0D37  3EAA               	addlw	(low (_dbuf| 0))& (0+255)
  6884  0D38  0086               	movwf	6
  6885  0D39  0187               	clrf	7
  6886  0D3A  0838               	movf	??_dtoa,w
  6887  0D3B  0081               	movwf	1
  6888  0D3C                     l2617:
  6889                           
  6890                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  6891  0D3C  0020               	movlb	0	; select bank0
  6892  0D3D  084C               	movf	dtoa@i,w
  6893  0D3E  3EAA               	addlw	(low (_dbuf| 0))& (0+255)
  6894  0D3F  00B8               	movwf	??_dtoa
  6895  0D40  0838               	movf	??_dtoa,w
  6896  0D41  00A7               	movwf	pad@buf
  6897  0D42  0841               	movf	dtoa@w+1,w
  6898  0D43  00A9               	movwf	pad@p+1
  6899  0D44  0840               	movf	dtoa@w,w
  6900  0D45  00A8               	movwf	pad@p
  6901  0D46  083F               	movf	dtoa@fp,w
  6902  0D47  3196  261D         	fcall	_pad
  6903  0D49  0828               	movf	?_pad+1,w
  6904  0D4A  00B1               	movwf	?_dtoa+1
  6905  0D4B  0827               	movf	?_pad,w
  6906  0D4C  00B0               	movwf	?_dtoa
  6907  0D4D  0008               	return
  6908  0D4E                     __end_of_dtoa:
  6909                           
  6910                           	psect	text14
  6911  161D                     __ptext14:	
  6912 ;; *************** function _pad *****************
  6913 ;; Defined at:
  6914 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6915 ;; Parameters:    Size  Location     Type
  6916 ;;  fp              1    wreg     PTR struct _IO_FILE
  6917 ;;		 -> NULL(0), 
  6918 ;;  buf             1    7[BANK0 ] PTR unsigned char 
  6919 ;;		 -> dbuf(32), 
  6920 ;;  p               2    8[BANK0 ] int 
  6921 ;; Auto vars:     Size  Location     Type
  6922 ;;  fp              1   14[BANK0 ] PTR struct _IO_FILE
  6923 ;;		 -> NULL(0), 
  6924 ;;  w               2   12[BANK0 ] int 
  6925 ;;  i               2   10[BANK0 ] int 
  6926 ;; Return value:  Size  Location     Type
  6927 ;;                  2    7[BANK0 ] int 
  6928 ;; Registers used:
  6929 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6930 ;; Tracked objects:
  6931 ;;		On entry : 1F/0
  6932 ;;		On exit  : 1F/0
  6933 ;;		Unchanged: 0/0
  6934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6935 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6936 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6937 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6938 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6939 ;;Total ram usage:        9 bytes
  6940 ;; Hardware stack levels used: 1
  6941 ;; Hardware stack levels required when called: 4
  6942 ;; This function calls:
  6943 ;;		_fputc
  6944 ;;		_fputs
  6945 ;;		_strlen
  6946 ;; This function is called by:
  6947 ;;		_dtoa
  6948 ;;		_xtoa
  6949 ;; This function uses a non-reentrant model
  6950 ;;
  6951                           
  6952                           
  6953                           ;psect for function _pad
  6954  161D                     _pad:
  6955                           
  6956                           ;incstack = 0
  6957                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6958                           ;pad@fp stored from wreg
  6959  161D  00AE               	movwf	pad@fp
  6960                           
  6961                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6962  161E  0021               	movlb	1	; select bank1
  6963  161F  1C26               	btfss	_flags^(0+128),0
  6964  1620  2E2A               	goto	l2525
  6965                           
  6966                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6967  1621  0020               	movlb	0	; select bank0
  6968  1622  082E               	movf	pad@fp,w
  6969  1623  00FC               	movwf	??_pad
  6970  1624  087C               	movf	??_pad,w
  6971  1625  00FB               	movwf	fputs@fp
  6972  1626  0827               	movf	pad@buf,w
  6973  1627  3194  24EC  3196   	fcall	_fputs
  6974  162A                     l2525:
  6975                           
  6976                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6977  162A  0020               	movlb	0	; select bank0
  6978  162B  1BA9               	btfsc	pad@p+1,7
  6979  162C  2E32               	goto	l2529
  6980  162D  0829               	movf	pad@p+1,w
  6981  162E  00AD               	movwf	pad@w+1
  6982  162F  0828               	movf	pad@p,w
  6983  1630  00AC               	movwf	pad@w
  6984  1631  2E34               	goto	l949
  6985  1632                     l2529:
  6986  1632  01AC               	clrf	pad@w
  6987  1633  01AD               	clrf	pad@w+1
  6988  1634                     l949:
  6989                           
  6990                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6991  1634  01AA               	clrf	pad@i
  6992  1635  01AB               	clrf	pad@i+1
  6993  1636                     l2535:	
  6994                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6995                           
  6996                           
  6997                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6998  1636  082B               	movf	pad@i+1,w
  6999  1637  3A80               	xorlw	128
  7000  1638  00FC               	movwf	??_pad
  7001  1639  082D               	movf	pad@w+1,w
  7002  163A  3A80               	xorlw	128
  7003  163B  027C               	subwf	??_pad,w
  7004  163C  1D03               	skipz
  7005  163D  2E40               	goto	u2905
  7006  163E  082C               	movf	pad@w,w
  7007  163F  022A               	subwf	pad@i,w
  7008  1640                     u2905:
  7009  1640  1803               	btfsc	3,0
  7010  1641  2E54               	goto	l952
  7011                           
  7012                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7013  1642  3020               	movlw	32
  7014  1643  00F3               	movwf	fputc@c
  7015  1644  3000               	movlw	0
  7016  1645  00F4               	movwf	fputc@c+1
  7017  1646  0020               	movlb	0	; select bank0
  7018  1647  082E               	movf	pad@fp,w
  7019  1648  00FC               	movwf	??_pad
  7020  1649  087C               	movf	??_pad,w
  7021  164A  00F5               	movwf	fputc@fp
  7022  164B  3195  2510  3196   	fcall	_fputc
  7023                           
  7024                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7025  164E  3001               	movlw	1
  7026  164F  0020               	movlb	0	; select bank0
  7027  1650  07AA               	addwf	pad@i,f
  7028  1651  3000               	movlw	0
  7029  1652  3DAB               	addwfc	pad@i+1,f
  7030  1653  2E36               	goto	l2535
  7031  1654                     l952:
  7032                           
  7033                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7034  1654  0021               	movlb	1	; select bank1
  7035  1655  1826               	btfsc	_flags^(0+128),0
  7036  1656  2E60               	goto	l953
  7037                           
  7038                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7039  1657  0020               	movlb	0	; select bank0
  7040  1658  082E               	movf	pad@fp,w
  7041  1659  00FC               	movwf	??_pad
  7042  165A  087C               	movf	??_pad,w
  7043  165B  00FB               	movwf	fputs@fp
  7044  165C  0827               	movf	pad@buf,w
  7045  165D  3194  24EC  3196   	fcall	_fputs
  7046  1660                     l953:	
  7047                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 92:     }
  7048                           
  7049                           
  7050                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  7051  1660  0020               	movlb	0	; select bank0
  7052  1661  0827               	movf	pad@buf,w
  7053  1662  3193  23DE         	fcall	_strlen
  7054  1664  082C               	movf	pad@w,w
  7055  1665  0770               	addwf	?_strlen,w
  7056  1666  00A7               	movwf	?_pad
  7057  1667  082D               	movf	pad@w+1,w
  7058  1668  3D71               	addwfc	?_strlen+1,w
  7059  1669  00A8               	movwf	?_pad+1
  7060  166A  0008               	return
  7061  166B                     __end_of_pad:
  7062                           
  7063                           	psect	text15
  7064  13DE                     __ptext15:	
  7065 ;; *************** function _strlen *****************
  7066 ;; Defined at:
  7067 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  7068 ;; Parameters:    Size  Location     Type
  7069 ;;  s               1    wreg     PTR const unsigned char 
  7070 ;;		 -> stoa@nuls(7), dbuf(32), ?_printf(2), MLX90614_writeEmissivity@emissivity(4), 
  7071 ;;		 -> main@buffer(8), 
  7072 ;; Auto vars:     Size  Location     Type
  7073 ;;  s               1    4[COMMON] PTR const unsigned char 
  7074 ;;		 -> stoa@nuls(7), dbuf(32), ?_printf(2), MLX90614_writeEmissivity@emissivity(4), 
  7075 ;;		 -> main@buffer(8), 
  7076 ;;  a               1    3[COMMON] PTR const unsigned char 
  7077 ;;		 -> stoa@nuls(7), dbuf(32), ?_printf(2), MLX90614_writeEmissivity@emissivity(4), 
  7078 ;;		 -> main@buffer(8), 
  7079 ;; Return value:  Size  Location     Type
  7080 ;;                  2    0[COMMON] unsigned int 
  7081 ;; Registers used:
  7082 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7083 ;; Tracked objects:
  7084 ;;		On entry : 1F/0
  7085 ;;		On exit  : 1F/0
  7086 ;;		Unchanged: 1F/0
  7087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7088 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7089 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7090 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7091 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7092 ;;Total ram usage:        5 bytes
  7093 ;; Hardware stack levels used: 1
  7094 ;; This function calls:
  7095 ;;		Nothing
  7096 ;; This function is called by:
  7097 ;;		_pad
  7098 ;;		_stoa
  7099 ;; This function uses a non-reentrant model
  7100 ;;
  7101                           
  7102                           
  7103                           ;psect for function _strlen
  7104  13DE                     _strlen:
  7105                           
  7106                           ;incstack = 0
  7107                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  7108                           ;strlen@s stored from wreg
  7109  13DE  00F4               	movwf	strlen@s
  7110  13DF  0874               	movf	strlen@s,w
  7111  13E0  00F2               	movwf	??_strlen
  7112  13E1  0872               	movf	??_strlen,w
  7113  13E2  00F3               	movwf	strlen@a
  7114  13E3                     l2443:
  7115  13E3  0874               	movf	strlen@s,w
  7116  13E4  0086               	movwf	6
  7117  13E5  0187               	clrf	7
  7118  13E6  0801               	movf	1,w
  7119  13E7  1903               	btfsc	3,2
  7120  13E8  2BEE               	goto	l2445
  7121  13E9  3001               	movlw	1
  7122  13EA  00F2               	movwf	??_strlen
  7123  13EB  0872               	movf	??_strlen,w
  7124  13EC  07F4               	addwf	strlen@s,f
  7125  13ED  2BE3               	goto	l2443
  7126  13EE                     l2445:
  7127  13EE  0873               	movf	strlen@a,w
  7128  13EF  0274               	subwf	strlen@s,w
  7129  13F0  00F0               	movwf	?_strlen
  7130  13F1  01F1               	clrf	?_strlen+1
  7131  13F2  1BF0               	btfsc	?_strlen,7
  7132  13F3  03F1               	decf	?_strlen+1,f
  7133  13F4  0008               	return
  7134  13F5                     __end_of_strlen:
  7135                           
  7136                           	psect	text16
  7137  14EC                     __ptext16:	
  7138 ;; *************** function _fputs *****************
  7139 ;; Defined at:
  7140 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  7141 ;; Parameters:    Size  Location     Type
  7142 ;;  s               1    wreg     PTR const unsigned char 
  7143 ;;		 -> dbuf(32), 
  7144 ;;  fp              1   11[COMMON] PTR struct _IO_FILE
  7145 ;;		 -> NULL(0), 
  7146 ;; Auto vars:     Size  Location     Type
  7147 ;;  s               1    6[BANK0 ] PTR const unsigned char 
  7148 ;;		 -> dbuf(32), 
  7149 ;;  i               2    4[BANK0 ] int 
  7150 ;;  c               1    3[BANK0 ] unsigned char 
  7151 ;; Return value:  Size  Location     Type
  7152 ;;                  2   11[COMMON] int 
  7153 ;; Registers used:
  7154 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7155 ;; Tracked objects:
  7156 ;;		On entry : 1F/0
  7157 ;;		On exit  : 1F/0
  7158 ;;		Unchanged: 0/0
  7159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7160 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7161 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7162 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7163 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7164 ;;Total ram usage:        8 bytes
  7165 ;; Hardware stack levels used: 1
  7166 ;; Hardware stack levels required when called: 3
  7167 ;; This function calls:
  7168 ;;		_fputc
  7169 ;; This function is called by:
  7170 ;;		_pad
  7171 ;; This function uses a non-reentrant model
  7172 ;;
  7173                           
  7174                           
  7175                           ;psect for function _fputs
  7176  14EC                     _fputs:
  7177                           
  7178                           ;incstack = 0
  7179                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7180                           ;fputs@s stored from wreg
  7181  14EC  00A6               	movwf	fputs@s
  7182  14ED  01A4               	clrf	fputs@i
  7183  14EE  01A5               	clrf	fputs@i+1
  7184  14EF                     l2437:
  7185  14EF  0824               	movf	fputs@i,w
  7186  14F0  0726               	addwf	fputs@s,w
  7187  14F1  00A0               	movwf	??_fputs
  7188  14F2  0820               	movf	??_fputs,w
  7189  14F3  0086               	movwf	6
  7190  14F4  0187               	clrf	7
  7191  14F5  0801               	movf	1,w
  7192  14F6  00A1               	movwf	??_fputs+1
  7193  14F7  0821               	movf	??_fputs+1,w
  7194  14F8  00A3               	movwf	fputs@c
  7195  14F9  0823               	movf	fputs@c,w
  7196  14FA  1903               	btfsc	3,2
  7197  14FB  0008               	return
  7198  14FC  0823               	movf	fputs@c,w
  7199  14FD  00A0               	movwf	??_fputs
  7200  14FE  01A1               	clrf	??_fputs+1
  7201  14FF  0820               	movf	??_fputs,w
  7202  1500  00F3               	movwf	fputc@c
  7203  1501  0821               	movf	??_fputs+1,w
  7204  1502  00F4               	movwf	fputc@c+1
  7205  1503  087B               	movf	fputs@fp,w
  7206  1504  00A2               	movwf	??_fputs+2
  7207  1505  0822               	movf	??_fputs+2,w
  7208  1506  00F5               	movwf	fputc@fp
  7209  1507  3195  2510  3194   	fcall	_fputc
  7210  150A  3001               	movlw	1
  7211  150B  0020               	movlb	0	; select bank0
  7212  150C  07A4               	addwf	fputs@i,f
  7213  150D  3000               	movlw	0
  7214  150E  3DA5               	addwfc	fputs@i+1,f
  7215  150F  2CEF               	goto	l2437
  7216  1510                     __end_of_fputs:
  7217                           
  7218                           	psect	text17
  7219  1510                     __ptext17:	
  7220 ;; *************** function _fputc *****************
  7221 ;; Defined at:
  7222 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  7223 ;; Parameters:    Size  Location     Type
  7224 ;;  c               2    3[COMMON] int 
  7225 ;;  fp              1    5[COMMON] PTR struct _IO_FILE
  7226 ;;		 -> NULL(0), 
  7227 ;; Auto vars:     Size  Location     Type
  7228 ;;		None
  7229 ;; Return value:  Size  Location     Type
  7230 ;;                  2    3[COMMON] int 
  7231 ;; Registers used:
  7232 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7233 ;; Tracked objects:
  7234 ;;		On entry : 1F/0
  7235 ;;		On exit  : 0/0
  7236 ;;		Unchanged: 0/0
  7237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7238 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7240 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7241 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7242 ;;Total ram usage:        8 bytes
  7243 ;; Hardware stack levels used: 1
  7244 ;; Hardware stack levels required when called: 2
  7245 ;; This function calls:
  7246 ;;		_putch
  7247 ;; This function is called by:
  7248 ;;		_pad
  7249 ;;		_stoa
  7250 ;;		_vfpfcnvrt
  7251 ;;		_fputs
  7252 ;; This function uses a non-reentrant model
  7253 ;;
  7254                           
  7255                           
  7256                           ;psect for function _fputc
  7257  1510                     _fputc:
  7258                           
  7259                           ;incstack = 0
  7260                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7261  1510  0875               	movf	fputc@fp,w
  7262  1511  1D03               	btfss	3,2
  7263  1512  0875               	movf	fputc@fp,w
  7264  1513  1D03               	btfss	3,2
  7265  1514  2D19               	goto	l2423
  7266  1515  0873               	movf	fputc@c,w
  7267  1516  3193  2343         	fcall	_putch
  7268  1518  0008               	return
  7269  1519                     l2423:
  7270  1519  0875               	movf	fputc@fp,w
  7271  151A  3E03               	addlw	3
  7272  151B  0086               	movwf	6
  7273  151C  0187               	clrf	7
  7274  151D  0016               	moviw fsr1++
  7275  151E  0401               	iorwf	1,w
  7276  151F  1903               	btfsc	3,2
  7277  1520  2D3C               	goto	l2427
  7278  1521  0875               	movf	fputc@fp,w
  7279  1522  3E03               	addlw	3
  7280  1523  0086               	movwf	6
  7281  1524  0187               	clrf	7
  7282  1525  3F40               	moviw [0]fsr1
  7283  1526  00F6               	movwf	??_fputc
  7284  1527  3F41               	moviw [1]fsr1
  7285  1528  00F7               	movwf	??_fputc+1
  7286  1529  0A75               	incf	fputc@fp,w
  7287  152A  0086               	movwf	6
  7288  152B  0187               	clrf	7
  7289  152C  3F40               	moviw [0]fsr1
  7290  152D  00F8               	movwf	??_fputc+2
  7291  152E  3F41               	moviw [1]fsr1
  7292  152F  00F9               	movwf	??_fputc+3
  7293  1530  0879               	movf	??_fputc+3,w
  7294  1531  3A80               	xorlw	128
  7295  1532  00FA               	movwf	??_fputc+4
  7296  1533  0877               	movf	??_fputc+1,w
  7297  1534  3A80               	xorlw	128
  7298  1535  027A               	subwf	??_fputc+4,w
  7299  1536  1D03               	skipz
  7300  1537  2D3A               	goto	u2625
  7301  1538  0876               	movf	??_fputc,w
  7302  1539  0278               	subwf	??_fputc+2,w
  7303  153A                     u2625:
  7304  153A  1803               	skipnc
  7305  153B  0008               	return
  7306  153C                     l2427:
  7307  153C  0A75               	incf	fputc@fp,w
  7308  153D  0086               	movwf	6
  7309  153E  0187               	clrf	7
  7310  153F  3001               	movlw	1
  7311  1540  0781               	addwf	1,f
  7312  1541  3141               	addfsr 1,1
  7313  1542  1803               	skipnc
  7314  1543  0A81               	incf	1,f
  7315  1544  0008               	return
  7316  1545                     __end_of_fputc:
  7317                           
  7318                           	psect	text18
  7319  1343                     __ptext18:	
  7320 ;; *************** function _putch *****************
  7321 ;; Defined at:
  7322 ;;		line 82 in file "uart.c"
  7323 ;; Parameters:    Size  Location     Type
  7324 ;;  dato            1    wreg     unsigned char 
  7325 ;; Auto vars:     Size  Location     Type
  7326 ;;  dato            1    2[COMMON] unsigned char 
  7327 ;; Return value:  Size  Location     Type
  7328 ;;                  1    wreg      void 
  7329 ;; Registers used:
  7330 ;;		wreg, status,2, status,0, pclath, cstack
  7331 ;; Tracked objects:
  7332 ;;		On entry : 1F/0
  7333 ;;		On exit  : 1F/2
  7334 ;;		Unchanged: 0/0
  7335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7337 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7339 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7340 ;;Total ram usage:        1 bytes
  7341 ;; Hardware stack levels used: 1
  7342 ;; Hardware stack levels required when called: 1
  7343 ;; This function calls:
  7344 ;;		_uart_tx
  7345 ;; This function is called by:
  7346 ;;		_fputc
  7347 ;; This function uses a non-reentrant model
  7348 ;;
  7349                           
  7350                           
  7351                           ;psect for function _putch
  7352  1343                     _putch:
  7353                           
  7354                           ;incstack = 0
  7355                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  7356                           ;putch@dato stored from wreg
  7357  1343  00F2               	movwf	putch@dato
  7358                           
  7359                           ;uart.c: 84:     uart_tx( dato);
  7360  1344  0872               	movf	putch@dato,w
  7361  1345  3193  236B         	fcall	_uart_tx
  7362  1347  0008               	return
  7363  1348                     __end_of_putch:
  7364                           
  7365                           	psect	text19
  7366  136B                     __ptext19:	
  7367 ;; *************** function _uart_tx *****************
  7368 ;; Defined at:
  7369 ;;		line 63 in file "uart.c"
  7370 ;; Parameters:    Size  Location     Type
  7371 ;;  dato            1    wreg     unsigned char 
  7372 ;; Auto vars:     Size  Location     Type
  7373 ;;  dato            1    1[COMMON] unsigned char 
  7374 ;; Return value:  Size  Location     Type
  7375 ;;                  1    wreg      void 
  7376 ;; Registers used:
  7377 ;;		wreg, status,2, status,0
  7378 ;; Tracked objects:
  7379 ;;		On entry : 1F/0
  7380 ;;		On exit  : 1F/2
  7381 ;;		Unchanged: 0/0
  7382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7384 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7385 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7386 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7387 ;;Total ram usage:        2 bytes
  7388 ;; Hardware stack levels used: 1
  7389 ;; This function calls:
  7390 ;;		Nothing
  7391 ;; This function is called by:
  7392 ;;		_putch
  7393 ;; This function uses a non-reentrant model
  7394 ;;
  7395                           
  7396                           
  7397                           ;psect for function _uart_tx
  7398  136B                     _uart_tx:
  7399                           
  7400                           ;incstack = 0
  7401                           ; Regs used in _uart_tx: [wreg+status,2+status,0]
  7402                           ;uart_tx@dato stored from wreg
  7403  136B  00F1               	movwf	uart_tx@dato
  7404  136C                     l2411:	
  7405                           ;uart.c: 65:     while( ( (PIR3>>4) & 0x01) == 0){}
  7406                           
  7407  136C  002E               	movlb	14	; select bank14
  7408  136D  080F               	movf	15,w	;volatile
  7409  136E  00F0               	movwf	??_uart_tx
  7410  136F  3004               	movlw	4
  7411  1370                     u2575:
  7412  1370  36F0               	lsrf	??_uart_tx,f
  7413  1371  0B89               	decfsz	9,f
  7414  1372  2B70               	goto	u2575
  7415  1373  1C70               	btfss	??_uart_tx,0
  7416  1374  2B6C               	goto	l2411
  7417                           
  7418                           ;uart.c: 66:         TX1REG = dato;
  7419  1375  0871               	movf	uart_tx@dato,w
  7420  1376  0022               	movlb	2	; select bank2
  7421  1377  009A               	movwf	26	;volatile
  7422  1378  0008               	return
  7423  1379                     __end_of_uart_tx:
  7424                           
  7425                           	psect	text20
  7426  13C7                     __ptext20:	
  7427 ;; *************** function _abs *****************
  7428 ;; Defined at:
  7429 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  7430 ;; Parameters:    Size  Location     Type
  7431 ;;  a               2    3[COMMON] int 
  7432 ;; Auto vars:     Size  Location     Type
  7433 ;;		None
  7434 ;; Return value:  Size  Location     Type
  7435 ;;                  2    3[COMMON] int 
  7436 ;; Registers used:
  7437 ;;		wreg, status,2, status,0
  7438 ;; Tracked objects:
  7439 ;;		On entry : 1F/0
  7440 ;;		On exit  : 0/0
  7441 ;;		Unchanged: 0/0
  7442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7443 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7445 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7446 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7447 ;;Total ram usage:        4 bytes
  7448 ;; Hardware stack levels used: 1
  7449 ;; This function calls:
  7450 ;;		Nothing
  7451 ;; This function is called by:
  7452 ;;		_dtoa
  7453 ;; This function uses a non-reentrant model
  7454 ;;
  7455                           
  7456                           
  7457                           ;psect for function _abs
  7458  13C7                     _abs:
  7459                           
  7460                           ;incstack = 0
  7461                           ; Regs used in _abs: [wreg+status,2+status,0]
  7462  13C7  0874               	movf	abs@a+1,w
  7463  13C8  3A80               	xorlw	128
  7464  13C9  00F5               	movwf	??_abs
  7465  13CA  3080               	movlw	128
  7466  13CB  0275               	subwf	??_abs,w
  7467  13CC  1D03               	skipz
  7468  13CD  2BD0               	goto	u2925
  7469  13CE  3001               	movlw	1
  7470  13CF  0273               	subwf	abs@a,w
  7471  13D0                     u2925:
  7472  13D0  1803               	skipnc
  7473  13D1  0008               	return
  7474  13D2  0973               	comf	abs@a,w
  7475  13D3  00F5               	movwf	??_abs
  7476  13D4  0974               	comf	abs@a+1,w
  7477  13D5  00F6               	movwf	??_abs+1
  7478  13D6  0AF5               	incf	??_abs,f
  7479  13D7  1903               	skipnz
  7480  13D8  0AF6               	incf	??_abs+1,f
  7481  13D9  0875               	movf	??_abs,w
  7482  13DA  00F3               	movwf	?_abs
  7483  13DB  0876               	movf	??_abs+1,w
  7484  13DC  00F4               	movwf	?_abs+1
  7485  13DD  0008               	return
  7486  13DE                     __end_of_abs:
  7487                           
  7488                           	psect	text21
  7489  0A34                     __ptext21:	
  7490 ;; *************** function ___aomod *****************
  7491 ;; Defined at:
  7492 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  7493 ;; Parameters:    Size  Location     Type
  7494 ;;  divisor         8    0[BANK0 ] long long 
  7495 ;;  dividend        8    8[BANK0 ] long long 
  7496 ;; Auto vars:     Size  Location     Type
  7497 ;;  sign            1    2[COMMON] unsigned char 
  7498 ;;  counter         1    1[COMMON] unsigned char 
  7499 ;; Return value:  Size  Location     Type
  7500 ;;                  8    0[BANK0 ] long long 
  7501 ;; Registers used:
  7502 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7503 ;; Tracked objects:
  7504 ;;		On entry : 1F/0
  7505 ;;		On exit  : 1F/0
  7506 ;;		Unchanged: 0/0
  7507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7508 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7509 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7510 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7511 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7512 ;;Total ram usage:       19 bytes
  7513 ;; Hardware stack levels used: 1
  7514 ;; This function calls:
  7515 ;;		Nothing
  7516 ;; This function is called by:
  7517 ;;		_dtoa
  7518 ;; This function uses a non-reentrant model
  7519 ;;
  7520                           
  7521                           
  7522                           ;psect for function ___aomod
  7523  0A34                     ___aomod:
  7524                           
  7525                           ;incstack = 0
  7526                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  7527  0A34  01F2               	clrf	___aomod@sign
  7528  0A35  3028               	movlw	low ___aomod@dividend
  7529  0A36  0086               	movwf	6
  7530  0A37  3000               	movlw	high ___aomod@dividend
  7531  0A38  0087               	movwf	7
  7532  0A39  3F47               	moviw [7]fsr1
  7533  0A3A  00F0               	movwf	??___aomod
  7534  0A3B  1FF0               	btfss	??___aomod,7
  7535  0A3C  2A5E               	goto	l2497
  7536  0A3D  0020               	movlb	0	; select bank0
  7537  0A3E  09A8               	comf	___aomod@dividend,f
  7538  0A3F  09A9               	comf	___aomod@dividend+1,f
  7539  0A40  09AA               	comf	___aomod@dividend+2,f
  7540  0A41  09AB               	comf	___aomod@dividend+3,f
  7541  0A42  09AC               	comf	___aomod@dividend+4,f
  7542  0A43  09AD               	comf	___aomod@dividend+5,f
  7543  0A44  09AE               	comf	___aomod@dividend+6,f
  7544  0A45  09AF               	comf	___aomod@dividend+7,f
  7545  0A46  0AA8               	incf	___aomod@dividend,f
  7546  0A47  1D03               	skipz
  7547  0A48  2A5C               	goto	u279lld
  7548  0A49  0AA9               	incf	___aomod@dividend+1,f
  7549  0A4A  1D03               	skipz
  7550  0A4B  2A5C               	goto	u279lld
  7551  0A4C  0AAA               	incf	___aomod@dividend+2,f
  7552  0A4D  1D03               	skipz
  7553  0A4E  2A5C               	goto	u279lld
  7554  0A4F  0AAB               	incf	___aomod@dividend+3,f
  7555  0A50  1D03               	skipz
  7556  0A51  2A5C               	goto	u279lld
  7557  0A52  0AAC               	incf	___aomod@dividend+4,f
  7558  0A53  1D03               	skipz
  7559  0A54  2A5C               	goto	u279lld
  7560  0A55  0AAD               	incf	___aomod@dividend+5,f
  7561  0A56  1D03               	skipz
  7562  0A57  2A5C               	goto	u279lld
  7563  0A58  0AAE               	incf	___aomod@dividend+6,f
  7564  0A59  1D03               	skipz
  7565  0A5A  2A5C               	goto	u279lld
  7566  0A5B  0AAF               	incf	___aomod@dividend+7,f
  7567  0A5C                     u279lld:
  7568  0A5C  01F2               	clrf	___aomod@sign
  7569  0A5D  0AF2               	incf	___aomod@sign,f
  7570  0A5E                     l2497:
  7571  0A5E  3020               	movlw	low ___aomod@divisor
  7572  0A5F  0086               	movwf	6
  7573  0A60  3000               	movlw	high ___aomod@divisor
  7574  0A61  0087               	movwf	7
  7575  0A62  3F47               	moviw [7]fsr1
  7576  0A63  00F0               	movwf	??___aomod
  7577  0A64  1FF0               	btfss	??___aomod,7
  7578  0A65  2A85               	goto	l2501
  7579  0A66  0020               	movlb	0	; select bank0
  7580  0A67  09A0               	comf	___aomod@divisor,f
  7581  0A68  09A1               	comf	___aomod@divisor+1,f
  7582  0A69  09A2               	comf	___aomod@divisor+2,f
  7583  0A6A  09A3               	comf	___aomod@divisor+3,f
  7584  0A6B  09A4               	comf	___aomod@divisor+4,f
  7585  0A6C  09A5               	comf	___aomod@divisor+5,f
  7586  0A6D  09A6               	comf	___aomod@divisor+6,f
  7587  0A6E  09A7               	comf	___aomod@divisor+7,f
  7588  0A6F  0AA0               	incf	___aomod@divisor,f
  7589  0A70  1D03               	skipz
  7590  0A71  2A85               	goto	l2501
  7591  0A72  0AA1               	incf	___aomod@divisor+1,f
  7592  0A73  1D03               	skipz
  7593  0A74  2A85               	goto	l2501
  7594  0A75  0AA2               	incf	___aomod@divisor+2,f
  7595  0A76  1D03               	skipz
  7596  0A77  2A85               	goto	l2501
  7597  0A78  0AA3               	incf	___aomod@divisor+3,f
  7598  0A79  1D03               	skipz
  7599  0A7A  2A85               	goto	l2501
  7600  0A7B  0AA4               	incf	___aomod@divisor+4,f
  7601  0A7C  1D03               	skipz
  7602  0A7D  2A85               	goto	l2501
  7603  0A7E  0AA5               	incf	___aomod@divisor+5,f
  7604  0A7F  1D03               	skipz
  7605  0A80  2A85               	goto	l2501
  7606  0A81  0AA6               	incf	___aomod@divisor+6,f
  7607  0A82  1D03               	skipz
  7608  0A83  2A85               	goto	l2501
  7609  0A84  0AA7               	incf	___aomod@divisor+7,f
  7610  0A85                     l2501:
  7611  0A85  0020               	movlb	0	; select bank0
  7612  0A86  0820               	movf	___aomod@divisor,w
  7613  0A87  0421               	iorwf	___aomod@divisor+1,w
  7614  0A88  0422               	iorwf	___aomod@divisor+2,w
  7615  0A89  0423               	iorwf	___aomod@divisor+3,w
  7616  0A8A  0424               	iorwf	___aomod@divisor+4,w
  7617  0A8B  0425               	iorwf	___aomod@divisor+5,w
  7618  0A8C  0426               	iorwf	___aomod@divisor+6,w
  7619  0A8D  0427               	iorwf	___aomod@divisor+7,w
  7620  0A8E  1903               	skipnz
  7621  0A8F  2ADD               	goto	l2517
  7622  0A90  01F1               	clrf	___aomod@counter
  7623  0A91  0AF1               	incf	___aomod@counter,f
  7624  0A92                     l2509:
  7625  0A92  1BA7               	btfsc	___aomod@divisor+7,7
  7626  0A93  2AA1               	goto	l2511
  7627  0A94  35A0               	lslf	___aomod@divisor,f
  7628  0A95  0DA1               	rlf	___aomod@divisor+1,f
  7629  0A96  0DA2               	rlf	___aomod@divisor+2,f
  7630  0A97  0DA3               	rlf	___aomod@divisor+3,f
  7631  0A98  0DA4               	rlf	___aomod@divisor+4,f
  7632  0A99  0DA5               	rlf	___aomod@divisor+5,f
  7633  0A9A  0DA6               	rlf	___aomod@divisor+6,f
  7634  0A9B  0DA7               	rlf	___aomod@divisor+7,f
  7635  0A9C  3001               	movlw	1
  7636  0A9D  00F0               	movwf	??___aomod
  7637  0A9E  0870               	movf	??___aomod,w
  7638  0A9F  07F1               	addwf	___aomod@counter,f
  7639  0AA0  2A92               	goto	l2509
  7640  0AA1                     l2511:
  7641  0AA1  0827               	movf	___aomod@divisor+7,w
  7642  0AA2  022F               	subwf	___aomod@dividend+7,w
  7643  0AA3  1D03               	skipz
  7644  0AA4  2ABF               	goto	u2845
  7645  0AA5  0826               	movf	___aomod@divisor+6,w
  7646  0AA6  022E               	subwf	___aomod@dividend+6,w
  7647  0AA7  1D03               	skipz
  7648  0AA8  2ABF               	goto	u2845
  7649  0AA9  0825               	movf	___aomod@divisor+5,w
  7650  0AAA  022D               	subwf	___aomod@dividend+5,w
  7651  0AAB  1D03               	skipz
  7652  0AAC  2ABF               	goto	u2845
  7653  0AAD  0824               	movf	___aomod@divisor+4,w
  7654  0AAE  022C               	subwf	___aomod@dividend+4,w
  7655  0AAF  1D03               	skipz
  7656  0AB0  2ABF               	goto	u2845
  7657  0AB1  0823               	movf	___aomod@divisor+3,w
  7658  0AB2  022B               	subwf	___aomod@dividend+3,w
  7659  0AB3  1D03               	skipz
  7660  0AB4  2ABF               	goto	u2845
  7661  0AB5  0822               	movf	___aomod@divisor+2,w
  7662  0AB6  022A               	subwf	___aomod@dividend+2,w
  7663  0AB7  1D03               	skipz
  7664  0AB8  2ABF               	goto	u2845
  7665  0AB9  0821               	movf	___aomod@divisor+1,w
  7666  0ABA  0229               	subwf	___aomod@dividend+1,w
  7667  0ABB  1D03               	skipz
  7668  0ABC  2ABF               	goto	u2845
  7669  0ABD  0820               	movf	___aomod@divisor,w
  7670  0ABE  0228               	subwf	___aomod@dividend,w
  7671  0ABF                     u2845:
  7672  0ABF  1C03               	skipc
  7673  0AC0  2AD1               	goto	l2515
  7674  0AC1  0820               	movf	___aomod@divisor,w
  7675  0AC2  02A8               	subwf	___aomod@dividend,f
  7676  0AC3  0821               	movf	___aomod@divisor+1,w
  7677  0AC4  3BA9               	subwfb	___aomod@dividend+1,f
  7678  0AC5  0822               	movf	___aomod@divisor+2,w
  7679  0AC6  3BAA               	subwfb	___aomod@dividend+2,f
  7680  0AC7  0823               	movf	___aomod@divisor+3,w
  7681  0AC8  3BAB               	subwfb	___aomod@dividend+3,f
  7682  0AC9  0824               	movf	___aomod@divisor+4,w
  7683  0ACA  3BAC               	subwfb	___aomod@dividend+4,f
  7684  0ACB  0825               	movf	___aomod@divisor+5,w
  7685  0ACC  3BAD               	subwfb	___aomod@dividend+5,f
  7686  0ACD  0826               	movf	___aomod@divisor+6,w
  7687  0ACE  3BAE               	subwfb	___aomod@dividend+6,f
  7688  0ACF  0827               	movf	___aomod@divisor+7,w
  7689  0AD0  3BAF               	subwfb	___aomod@dividend+7,f
  7690  0AD1                     l2515:
  7691  0AD1  36A7               	lsrf	___aomod@divisor+7,f
  7692  0AD2  0CA6               	rrf	___aomod@divisor+6,f
  7693  0AD3  0CA5               	rrf	___aomod@divisor+5,f
  7694  0AD4  0CA4               	rrf	___aomod@divisor+4,f
  7695  0AD5  0CA3               	rrf	___aomod@divisor+3,f
  7696  0AD6  0CA2               	rrf	___aomod@divisor+2,f
  7697  0AD7  0CA1               	rrf	___aomod@divisor+1,f
  7698  0AD8  0CA0               	rrf	___aomod@divisor,f
  7699  0AD9  3001               	movlw	1
  7700  0ADA  02F1               	subwf	___aomod@counter,f
  7701  0ADB  1D03               	btfss	3,2
  7702  0ADC  2AA1               	goto	l2511
  7703  0ADD                     l2517:
  7704  0ADD  0872               	movf	___aomod@sign,w
  7705  0ADE  1903               	btfsc	3,2
  7706  0ADF  2AFE               	goto	l566
  7707  0AE0  09A8               	comf	___aomod@dividend,f
  7708  0AE1  09A9               	comf	___aomod@dividend+1,f
  7709  0AE2  09AA               	comf	___aomod@dividend+2,f
  7710  0AE3  09AB               	comf	___aomod@dividend+3,f
  7711  0AE4  09AC               	comf	___aomod@dividend+4,f
  7712  0AE5  09AD               	comf	___aomod@dividend+5,f
  7713  0AE6  09AE               	comf	___aomod@dividend+6,f
  7714  0AE7  09AF               	comf	___aomod@dividend+7,f
  7715  0AE8  0AA8               	incf	___aomod@dividend,f
  7716  0AE9  1D03               	skipz
  7717  0AEA  2AFE               	goto	l566
  7718  0AEB  0AA9               	incf	___aomod@dividend+1,f
  7719  0AEC  1D03               	skipz
  7720  0AED  2AFE               	goto	l566
  7721  0AEE  0AAA               	incf	___aomod@dividend+2,f
  7722  0AEF  1D03               	skipz
  7723  0AF0  2AFE               	goto	l566
  7724  0AF1  0AAB               	incf	___aomod@dividend+3,f
  7725  0AF2  1D03               	skipz
  7726  0AF3  2AFE               	goto	l566
  7727  0AF4  0AAC               	incf	___aomod@dividend+4,f
  7728  0AF5  1D03               	skipz
  7729  0AF6  2AFE               	goto	l566
  7730  0AF7  0AAD               	incf	___aomod@dividend+5,f
  7731  0AF8  1D03               	skipz
  7732  0AF9  2AFE               	goto	l566
  7733  0AFA  0AAE               	incf	___aomod@dividend+6,f
  7734  0AFB  1D03               	skipz
  7735  0AFC  2AFE               	goto	l566
  7736  0AFD  0AAF               	incf	___aomod@dividend+7,f
  7737  0AFE                     l566:
  7738  0AFE  0020               	movlb	0	; select bank0
  7739  0AFF  0828               	movf	___aomod@dividend,w
  7740  0B00  00A0               	movwf	?___aomod
  7741  0B01  0829               	movf	___aomod@dividend+1,w
  7742  0B02  00A1               	movwf	?___aomod+1
  7743  0B03  082A               	movf	___aomod@dividend+2,w
  7744  0B04  00A2               	movwf	?___aomod+2
  7745  0B05  082B               	movf	___aomod@dividend+3,w
  7746  0B06  00A3               	movwf	?___aomod+3
  7747  0B07  082C               	movf	___aomod@dividend+4,w
  7748  0B08  00A4               	movwf	?___aomod+4
  7749  0B09  082D               	movf	___aomod@dividend+5,w
  7750  0B0A  00A5               	movwf	?___aomod+5
  7751  0B0B  082E               	movf	___aomod@dividend+6,w
  7752  0B0C  00A6               	movwf	?___aomod+6
  7753  0B0D  082F               	movf	___aomod@dividend+7,w
  7754  0B0E  00A7               	movwf	?___aomod+7
  7755  0B0F  0008               	return
  7756  0B10                     __end_of___aomod:
  7757                           
  7758                           	psect	text22
  7759  0B10                     __ptext22:	
  7760 ;; *************** function ___aodiv *****************
  7761 ;; Defined at:
  7762 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  7763 ;; Parameters:    Size  Location     Type
  7764 ;;  divisor         8    0[BANK0 ] long long 
  7765 ;;  dividend        8    8[BANK0 ] long long 
  7766 ;; Auto vars:     Size  Location     Type
  7767 ;;  quotient        8    3[COMMON] long long 
  7768 ;;  sign            1    2[COMMON] unsigned char 
  7769 ;;  counter         1    1[COMMON] unsigned char 
  7770 ;; Return value:  Size  Location     Type
  7771 ;;                  8    0[BANK0 ] long long 
  7772 ;; Registers used:
  7773 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7774 ;; Tracked objects:
  7775 ;;		On entry : 1F/0
  7776 ;;		On exit  : 1F/0
  7777 ;;		Unchanged: 0/0
  7778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7779 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7780 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7781 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7782 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7783 ;;Total ram usage:       27 bytes
  7784 ;; Hardware stack levels used: 1
  7785 ;; This function calls:
  7786 ;;		Nothing
  7787 ;; This function is called by:
  7788 ;;		_dtoa
  7789 ;; This function uses a non-reentrant model
  7790 ;;
  7791                           
  7792                           
  7793                           ;psect for function ___aodiv
  7794  0B10                     ___aodiv:
  7795                           
  7796                           ;incstack = 0
  7797                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  7798  0B10  01F2               	clrf	___aodiv@sign
  7799  0B11  3020               	movlw	low ___aodiv@divisor
  7800  0B12  0086               	movwf	6
  7801  0B13  3000               	movlw	high ___aodiv@divisor
  7802  0B14  0087               	movwf	7
  7803  0B15  3F47               	moviw [7]fsr1
  7804  0B16  00F0               	movwf	??___aodiv
  7805  0B17  1FF0               	btfss	??___aodiv,7
  7806  0B18  2B3A               	goto	l2459
  7807  0B19  0020               	movlb	0	; select bank0
  7808  0B1A  09A0               	comf	___aodiv@divisor,f
  7809  0B1B  09A1               	comf	___aodiv@divisor+1,f
  7810  0B1C  09A2               	comf	___aodiv@divisor+2,f
  7811  0B1D  09A3               	comf	___aodiv@divisor+3,f
  7812  0B1E  09A4               	comf	___aodiv@divisor+4,f
  7813  0B1F  09A5               	comf	___aodiv@divisor+5,f
  7814  0B20  09A6               	comf	___aodiv@divisor+6,f
  7815  0B21  09A7               	comf	___aodiv@divisor+7,f
  7816  0B22  0AA0               	incf	___aodiv@divisor,f
  7817  0B23  1D03               	skipz
  7818  0B24  2B38               	goto	u268lld
  7819  0B25  0AA1               	incf	___aodiv@divisor+1,f
  7820  0B26  1D03               	skipz
  7821  0B27  2B38               	goto	u268lld
  7822  0B28  0AA2               	incf	___aodiv@divisor+2,f
  7823  0B29  1D03               	skipz
  7824  0B2A  2B38               	goto	u268lld
  7825  0B2B  0AA3               	incf	___aodiv@divisor+3,f
  7826  0B2C  1D03               	skipz
  7827  0B2D  2B38               	goto	u268lld
  7828  0B2E  0AA4               	incf	___aodiv@divisor+4,f
  7829  0B2F  1D03               	skipz
  7830  0B30  2B38               	goto	u268lld
  7831  0B31  0AA5               	incf	___aodiv@divisor+5,f
  7832  0B32  1D03               	skipz
  7833  0B33  2B38               	goto	u268lld
  7834  0B34  0AA6               	incf	___aodiv@divisor+6,f
  7835  0B35  1D03               	skipz
  7836  0B36  2B38               	goto	u268lld
  7837  0B37  0AA7               	incf	___aodiv@divisor+7,f
  7838  0B38                     u268lld:
  7839  0B38  01F2               	clrf	___aodiv@sign
  7840  0B39  0AF2               	incf	___aodiv@sign,f
  7841  0B3A                     l2459:
  7842  0B3A  3028               	movlw	low ___aodiv@dividend
  7843  0B3B  0086               	movwf	6
  7844  0B3C  3000               	movlw	high ___aodiv@dividend
  7845  0B3D  0087               	movwf	7
  7846  0B3E  3F47               	moviw [7]fsr1
  7847  0B3F  00F0               	movwf	??___aodiv
  7848  0B40  1FF0               	btfss	??___aodiv,7
  7849  0B41  2B65               	goto	l2465
  7850  0B42  0020               	movlb	0	; select bank0
  7851  0B43  09A8               	comf	___aodiv@dividend,f
  7852  0B44  09A9               	comf	___aodiv@dividend+1,f
  7853  0B45  09AA               	comf	___aodiv@dividend+2,f
  7854  0B46  09AB               	comf	___aodiv@dividend+3,f
  7855  0B47  09AC               	comf	___aodiv@dividend+4,f
  7856  0B48  09AD               	comf	___aodiv@dividend+5,f
  7857  0B49  09AE               	comf	___aodiv@dividend+6,f
  7858  0B4A  09AF               	comf	___aodiv@dividend+7,f
  7859  0B4B  0AA8               	incf	___aodiv@dividend,f
  7860  0B4C  1D03               	skipz
  7861  0B4D  2B61               	goto	l2463
  7862  0B4E  0AA9               	incf	___aodiv@dividend+1,f
  7863  0B4F  1D03               	skipz
  7864  0B50  2B61               	goto	l2463
  7865  0B51  0AAA               	incf	___aodiv@dividend+2,f
  7866  0B52  1D03               	skipz
  7867  0B53  2B61               	goto	l2463
  7868  0B54  0AAB               	incf	___aodiv@dividend+3,f
  7869  0B55  1D03               	skipz
  7870  0B56  2B61               	goto	l2463
  7871  0B57  0AAC               	incf	___aodiv@dividend+4,f
  7872  0B58  1D03               	skipz
  7873  0B59  2B61               	goto	l2463
  7874  0B5A  0AAD               	incf	___aodiv@dividend+5,f
  7875  0B5B  1D03               	skipz
  7876  0B5C  2B61               	goto	l2463
  7877  0B5D  0AAE               	incf	___aodiv@dividend+6,f
  7878  0B5E  1D03               	skipz
  7879  0B5F  2B61               	goto	l2463
  7880  0B60  0AAF               	incf	___aodiv@dividend+7,f
  7881  0B61                     l2463:
  7882  0B61  3001               	movlw	1
  7883  0B62  00F0               	movwf	??___aodiv
  7884  0B63  0870               	movf	??___aodiv,w
  7885  0B64  06F2               	xorwf	___aodiv@sign,f
  7886  0B65                     l2465:
  7887  0B65  3073               	movlw	low ___aodiv@quotient
  7888  0B66  0086               	movwf	6
  7889  0B67  3000               	movlw	high ___aodiv@quotient
  7890  0B68  0087               	movwf	7
  7891  0B69  3008               	movlw	8
  7892  0B6A  00F0               	movwf	??___aodiv
  7893  0B6B  3000               	movlw	0
  7894  0B6C                     u2710:
  7895  0B6C  001E               	movwi fsr1++
  7896  0B6D  0BF0               	decfsz	??___aodiv,f
  7897  0B6E  2B6C               	goto	u2710
  7898  0B6F  0020               	movlb	0	; select bank0
  7899  0B70  0820               	movf	___aodiv@divisor,w
  7900  0B71  0421               	iorwf	___aodiv@divisor+1,w
  7901  0B72  0422               	iorwf	___aodiv@divisor+2,w
  7902  0B73  0423               	iorwf	___aodiv@divisor+3,w
  7903  0B74  0424               	iorwf	___aodiv@divisor+4,w
  7904  0B75  0425               	iorwf	___aodiv@divisor+5,w
  7905  0B76  0426               	iorwf	___aodiv@divisor+6,w
  7906  0B77  0427               	iorwf	___aodiv@divisor+7,w
  7907  0B78  1903               	skipnz
  7908  0B79  2BD0               	goto	l2487
  7909  0B7A  01F1               	clrf	___aodiv@counter
  7910  0B7B  0AF1               	incf	___aodiv@counter,f
  7911  0B7C                     l2475:
  7912  0B7C  1BA7               	btfsc	___aodiv@divisor+7,7
  7913  0B7D  2B8B               	goto	l2477
  7914  0B7E  35A0               	lslf	___aodiv@divisor,f
  7915  0B7F  0DA1               	rlf	___aodiv@divisor+1,f
  7916  0B80  0DA2               	rlf	___aodiv@divisor+2,f
  7917  0B81  0DA3               	rlf	___aodiv@divisor+3,f
  7918  0B82  0DA4               	rlf	___aodiv@divisor+4,f
  7919  0B83  0DA5               	rlf	___aodiv@divisor+5,f
  7920  0B84  0DA6               	rlf	___aodiv@divisor+6,f
  7921  0B85  0DA7               	rlf	___aodiv@divisor+7,f
  7922  0B86  3001               	movlw	1
  7923  0B87  00F0               	movwf	??___aodiv
  7924  0B88  0870               	movf	??___aodiv,w
  7925  0B89  07F1               	addwf	___aodiv@counter,f
  7926  0B8A  2B7C               	goto	l2475
  7927  0B8B                     l2477:
  7928  0B8B  35F3               	lslf	___aodiv@quotient,f
  7929  0B8C  0DF4               	rlf	___aodiv@quotient+1,f
  7930  0B8D  0DF5               	rlf	___aodiv@quotient+2,f
  7931  0B8E  0DF6               	rlf	___aodiv@quotient+3,f
  7932  0B8F  0DF7               	rlf	___aodiv@quotient+4,f
  7933  0B90  0DF8               	rlf	___aodiv@quotient+5,f
  7934  0B91  0DF9               	rlf	___aodiv@quotient+6,f
  7935  0B92  0DFA               	rlf	___aodiv@quotient+7,f
  7936  0B93  0827               	movf	___aodiv@divisor+7,w
  7937  0B94  022F               	subwf	___aodiv@dividend+7,w
  7938  0B95  1D03               	skipz
  7939  0B96  2BB1               	goto	u2745
  7940  0B97  0826               	movf	___aodiv@divisor+6,w
  7941  0B98  022E               	subwf	___aodiv@dividend+6,w
  7942  0B99  1D03               	skipz
  7943  0B9A  2BB1               	goto	u2745
  7944  0B9B  0825               	movf	___aodiv@divisor+5,w
  7945  0B9C  022D               	subwf	___aodiv@dividend+5,w
  7946  0B9D  1D03               	skipz
  7947  0B9E  2BB1               	goto	u2745
  7948  0B9F  0824               	movf	___aodiv@divisor+4,w
  7949  0BA0  022C               	subwf	___aodiv@dividend+4,w
  7950  0BA1  1D03               	skipz
  7951  0BA2  2BB1               	goto	u2745
  7952  0BA3  0823               	movf	___aodiv@divisor+3,w
  7953  0BA4  022B               	subwf	___aodiv@dividend+3,w
  7954  0BA5  1D03               	skipz
  7955  0BA6  2BB1               	goto	u2745
  7956  0BA7  0822               	movf	___aodiv@divisor+2,w
  7957  0BA8  022A               	subwf	___aodiv@dividend+2,w
  7958  0BA9  1D03               	skipz
  7959  0BAA  2BB1               	goto	u2745
  7960  0BAB  0821               	movf	___aodiv@divisor+1,w
  7961  0BAC  0229               	subwf	___aodiv@dividend+1,w
  7962  0BAD  1D03               	skipz
  7963  0BAE  2BB1               	goto	u2745
  7964  0BAF  0820               	movf	___aodiv@divisor,w
  7965  0BB0  0228               	subwf	___aodiv@dividend,w
  7966  0BB1                     u2745:
  7967  0BB1  1C03               	skipc
  7968  0BB2  2BC4               	goto	l2485
  7969  0BB3  0820               	movf	___aodiv@divisor,w
  7970  0BB4  02A8               	subwf	___aodiv@dividend,f
  7971  0BB5  0821               	movf	___aodiv@divisor+1,w
  7972  0BB6  3BA9               	subwfb	___aodiv@dividend+1,f
  7973  0BB7  0822               	movf	___aodiv@divisor+2,w
  7974  0BB8  3BAA               	subwfb	___aodiv@dividend+2,f
  7975  0BB9  0823               	movf	___aodiv@divisor+3,w
  7976  0BBA  3BAB               	subwfb	___aodiv@dividend+3,f
  7977  0BBB  0824               	movf	___aodiv@divisor+4,w
  7978  0BBC  3BAC               	subwfb	___aodiv@dividend+4,f
  7979  0BBD  0825               	movf	___aodiv@divisor+5,w
  7980  0BBE  3BAD               	subwfb	___aodiv@dividend+5,f
  7981  0BBF  0826               	movf	___aodiv@divisor+6,w
  7982  0BC0  3BAE               	subwfb	___aodiv@dividend+6,f
  7983  0BC1  0827               	movf	___aodiv@divisor+7,w
  7984  0BC2  3BAF               	subwfb	___aodiv@dividend+7,f
  7985  0BC3  1473               	bsf	___aodiv@quotient,0
  7986  0BC4                     l2485:
  7987  0BC4  36A7               	lsrf	___aodiv@divisor+7,f
  7988  0BC5  0CA6               	rrf	___aodiv@divisor+6,f
  7989  0BC6  0CA5               	rrf	___aodiv@divisor+5,f
  7990  0BC7  0CA4               	rrf	___aodiv@divisor+4,f
  7991  0BC8  0CA3               	rrf	___aodiv@divisor+3,f
  7992  0BC9  0CA2               	rrf	___aodiv@divisor+2,f
  7993  0BCA  0CA1               	rrf	___aodiv@divisor+1,f
  7994  0BCB  0CA0               	rrf	___aodiv@divisor,f
  7995  0BCC  3001               	movlw	1
  7996  0BCD  02F1               	subwf	___aodiv@counter,f
  7997  0BCE  1D03               	btfss	3,2
  7998  0BCF  2B8B               	goto	l2477
  7999  0BD0                     l2487:
  8000  0BD0  0872               	movf	___aodiv@sign,w
  8001  0BD1  1903               	btfsc	3,2
  8002  0BD2  2BF1               	goto	l553
  8003  0BD3  09F3               	comf	___aodiv@quotient,f
  8004  0BD4  09F4               	comf	___aodiv@quotient+1,f
  8005  0BD5  09F5               	comf	___aodiv@quotient+2,f
  8006  0BD6  09F6               	comf	___aodiv@quotient+3,f
  8007  0BD7  09F7               	comf	___aodiv@quotient+4,f
  8008  0BD8  09F8               	comf	___aodiv@quotient+5,f
  8009  0BD9  09F9               	comf	___aodiv@quotient+6,f
  8010  0BDA  09FA               	comf	___aodiv@quotient+7,f
  8011  0BDB  0AF3               	incf	___aodiv@quotient,f
  8012  0BDC  1D03               	skipz
  8013  0BDD  2BF1               	goto	l553
  8014  0BDE  0AF4               	incf	___aodiv@quotient+1,f
  8015  0BDF  1D03               	skipz
  8016  0BE0  2BF1               	goto	l553
  8017  0BE1  0AF5               	incf	___aodiv@quotient+2,f
  8018  0BE2  1D03               	skipz
  8019  0BE3  2BF1               	goto	l553
  8020  0BE4  0AF6               	incf	___aodiv@quotient+3,f
  8021  0BE5  1D03               	skipz
  8022  0BE6  2BF1               	goto	l553
  8023  0BE7  0AF7               	incf	___aodiv@quotient+4,f
  8024  0BE8  1D03               	skipz
  8025  0BE9  2BF1               	goto	l553
  8026  0BEA  0AF8               	incf	___aodiv@quotient+5,f
  8027  0BEB  1D03               	skipz
  8028  0BEC  2BF1               	goto	l553
  8029  0BED  0AF9               	incf	___aodiv@quotient+6,f
  8030  0BEE  1D03               	skipz
  8031  0BEF  2BF1               	goto	l553
  8032  0BF0  0AFA               	incf	___aodiv@quotient+7,f
  8033  0BF1                     l553:
  8034  0BF1  0873               	movf	___aodiv@quotient,w
  8035  0BF2  0020               	movlb	0	; select bank0
  8036  0BF3  00A0               	movwf	?___aodiv
  8037  0BF4  0874               	movf	___aodiv@quotient+1,w
  8038  0BF5  00A1               	movwf	?___aodiv+1
  8039  0BF6  0875               	movf	___aodiv@quotient+2,w
  8040  0BF7  00A2               	movwf	?___aodiv+2
  8041  0BF8  0876               	movf	___aodiv@quotient+3,w
  8042  0BF9  00A3               	movwf	?___aodiv+3
  8043  0BFA  0877               	movf	___aodiv@quotient+4,w
  8044  0BFB  00A4               	movwf	?___aodiv+4
  8045  0BFC  0878               	movf	___aodiv@quotient+5,w
  8046  0BFD  00A5               	movwf	?___aodiv+5
  8047  0BFE  0879               	movf	___aodiv@quotient+6,w
  8048  0BFF  00A6               	movwf	?___aodiv+6
  8049  0C00  087A               	movf	___aodiv@quotient+7,w
  8050  0C01  00A7               	movwf	?___aodiv+7
  8051  0C02  0008               	return
  8052  0C03                     __end_of___aodiv:
  8053                           
  8054                           	psect	text23
  8055  1457                     __ptext23:	
  8056 ;; *************** function ___wmul *****************
  8057 ;; Defined at:
  8058 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  8059 ;; Parameters:    Size  Location     Type
  8060 ;;  multiplier      2    0[COMMON] unsigned int 
  8061 ;;  multiplicand    2    2[COMMON] unsigned int 
  8062 ;; Auto vars:     Size  Location     Type
  8063 ;;  product         2    4[COMMON] unsigned int 
  8064 ;; Return value:  Size  Location     Type
  8065 ;;                  2    0[COMMON] unsigned int 
  8066 ;; Registers used:
  8067 ;;		wreg, status,2, status,0
  8068 ;; Tracked objects:
  8069 ;;		On entry : 1F/1
  8070 ;;		On exit  : 1F/1
  8071 ;;		Unchanged: 1F/0
  8072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8073 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8074 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8076 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8077 ;;Total ram usage:        6 bytes
  8078 ;; Hardware stack levels used: 1
  8079 ;; This function calls:
  8080 ;;		Nothing
  8081 ;; This function is called by:
  8082 ;;		_sensorPlaca
  8083 ;; This function uses a non-reentrant model
  8084 ;;
  8085                           
  8086                           
  8087                           ;psect for function ___wmul
  8088  1457                     ___wmul:
  8089                           
  8090                           ;incstack = 0
  8091                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8092  1457  01F4               	clrf	___wmul@product
  8093  1458  01F5               	clrf	___wmul@product+1
  8094  1459                     l3085:
  8095  1459  1C70               	btfss	___wmul@multiplier,0
  8096  145A  2C5F               	goto	l453
  8097  145B  0872               	movf	___wmul@multiplicand,w
  8098  145C  07F4               	addwf	___wmul@product,f
  8099  145D  0873               	movf	___wmul@multiplicand+1,w
  8100  145E  3DF5               	addwfc	___wmul@product+1,f
  8101  145F                     l453:
  8102  145F  3001               	movlw	1
  8103  1460                     u4065:
  8104  1460  35F2               	lslf	___wmul@multiplicand,f
  8105  1461  0DF3               	rlf	___wmul@multiplicand+1,f
  8106  1462  0B89               	decfsz	9,f
  8107  1463  2C60               	goto	u4065
  8108  1464  3001               	movlw	1
  8109  1465                     u4075:
  8110  1465  36F1               	lsrf	___wmul@multiplier+1,f
  8111  1466  0CF0               	rrf	___wmul@multiplier,f
  8112  1467  0B89               	decfsz	9,f
  8113  1468  2C65               	goto	u4075
  8114  1469  0870               	movf	___wmul@multiplier,w
  8115  146A  0471               	iorwf	___wmul@multiplier+1,w
  8116  146B  1D03               	btfss	3,2
  8117  146C  2C59               	goto	l3085
  8118  146D  0875               	movf	___wmul@product+1,w
  8119  146E  00F1               	movwf	?___wmul+1
  8120  146F  0874               	movf	___wmul@product,w
  8121  1470  00F0               	movwf	?___wmul
  8122  1471  0008               	return
  8123  1472                     __end_of___wmul:
  8124                           
  8125                           	psect	text24
  8126  13B1                     __ptext24:	
  8127 ;; *************** function _port_init *****************
  8128 ;; Defined at:
  8129 ;;		line 111 in file "Main.c"
  8130 ;; Parameters:    Size  Location     Type
  8131 ;;		None
  8132 ;; Auto vars:     Size  Location     Type
  8133 ;;		None
  8134 ;; Return value:  Size  Location     Type
  8135 ;;                  1    wreg      void 
  8136 ;; Registers used:
  8137 ;;		wreg, status,2
  8138 ;; Tracked objects:
  8139 ;;		On entry : B1F/0
  8140 ;;		On exit  : B1F/1E
  8141 ;;		Unchanged: B00/0
  8142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8147 ;;Total ram usage:        0 bytes
  8148 ;; Hardware stack levels used: 1
  8149 ;; This function calls:
  8150 ;;		Nothing
  8151 ;; This function is called by:
  8152 ;;		_main
  8153 ;; This function uses a non-reentrant model
  8154 ;;
  8155                           
  8156                           
  8157                           ;psect for function _port_init
  8158  13B1                     _port_init:
  8159                           
  8160                           ;Main.c: 113:     ANSELA = 0;
  8161                           
  8162                           ;incstack = 0
  8163                           ; Regs used in _port_init: [wreg+status,2]
  8164  13B1  003E               	movlb	30	; select bank30
  8165  13B2  01B8               	clrf	56	;volatile
  8166                           
  8167                           ;Main.c: 114:     LATA=0;
  8168  13B3  0020               	movlb	0	; select bank0
  8169  13B4  0196               	clrf	22	;volatile
  8170                           
  8171                           ;Main.c: 115:     PORTA =0;
  8172  13B5  018C               	clrf	12	;volatile
  8173                           
  8174                           ;Main.c: 116:     TRISA = 0b11110000;
  8175  13B6  30F0               	movlw	240
  8176  13B7  0091               	movwf	17	;volatile
  8177                           
  8178                           ;Main.c: 119:     ANSELA = ANSELA | (1<<4);
  8179  13B8  003E               	movlb	30	; select bank30
  8180  13B9  0838               	movf	56,w	;volatile
  8181  13BA  3810               	iorlw	16
  8182  13BB  00B8               	movwf	56	;volatile
  8183                           
  8184                           ;Main.c: 121:     LATB=0;
  8185  13BC  0020               	movlb	0	; select bank0
  8186  13BD  0197               	clrf	23	;volatile
  8187                           
  8188                           ;Main.c: 122:     PORTB =0;
  8189  13BE  018D               	clrf	13	;volatile
  8190                           
  8191                           ;Main.c: 123:     TRISB = TRISA | (1<<0);
  8192  13BF  0811               	movf	17,w	;volatile
  8193  13C0  3801               	iorlw	1
  8194  13C1  0092               	movwf	18	;volatile
  8195                           
  8196                           ;Main.c: 124:     ANSELB = ANSELB | (1<<0);
  8197  13C2  003E               	movlb	30	; select bank30
  8198  13C3  0843               	movf	67,w	;volatile
  8199  13C4  3801               	iorlw	1
  8200  13C5  00C3               	movwf	67	;volatile
  8201  13C6  0008               	return
  8202  13C7                     __end_of_port_init:
  8203                           
  8204                           	psect	text25
  8205  143D                     __ptext25:	
  8206 ;; *************** function _i2c_init *****************
  8207 ;; Defined at:
  8208 ;;		line 4 in file "I2C.c"
  8209 ;; Parameters:    Size  Location     Type
  8210 ;;		None
  8211 ;; Auto vars:     Size  Location     Type
  8212 ;;		None
  8213 ;; Return value:  Size  Location     Type
  8214 ;;                  1    wreg      void 
  8215 ;; Registers used:
  8216 ;;		wreg, status,2
  8217 ;; Tracked objects:
  8218 ;;		On entry : B1F/1
  8219 ;;		On exit  : B1F/3
  8220 ;;		Unchanged: B00/0
  8221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8226 ;;Total ram usage:        0 bytes
  8227 ;; Hardware stack levels used: 1
  8228 ;; This function calls:
  8229 ;;		Nothing
  8230 ;; This function is called by:
  8231 ;;		_main
  8232 ;; This function uses a non-reentrant model
  8233 ;;
  8234                           
  8235                           
  8236                           ;psect for function _i2c_init
  8237  143D                     _i2c_init:
  8238                           
  8239                           ;I2C.c: 6:     TRISCbits.TRISC3 = 1;
  8240                           
  8241                           ;incstack = 0
  8242                           ; Regs used in _i2c_init: [wreg+status,2]
  8243  143D  0020               	movlb	0	; select bank0
  8244  143E  1593               	bsf	19,3	;volatile
  8245                           
  8246                           ;I2C.c: 7:     TRISCbits.TRISC4 = 1;
  8247  143F  1613               	bsf	19,4	;volatile
  8248                           
  8249                           ;I2C.c: 8:     ANSELCbits.ANSC3 = 0;
  8250  1440  003E               	movlb	30	; select bank30
  8251  1441  11CE               	bcf	78,3	;volatile
  8252                           
  8253                           ;I2C.c: 9:     ANSELCbits.ANSC4 = 0;
  8254  1442  124E               	bcf	78,4	;volatile
  8255                           
  8256                           ;I2C.c: 10:     SSP1CLKPPS = 0x14;
  8257  1443  3014               	movlw	20
  8258  1444  003D               	movlb	29	; select bank29
  8259  1445  00C5               	movwf	69	;volatile
  8260                           
  8261                           ;I2C.c: 11:     RC3PPS = 0x15;
  8262  1446  3015               	movlw	21
  8263  1447  003E               	movlb	30	; select bank30
  8264  1448  00A3               	movwf	35	;volatile
  8265                           
  8266                           ;I2C.c: 12:     RC4PPS = 0x14;
  8267  1449  3014               	movlw	20
  8268  144A  00A4               	movwf	36	;volatile
  8269                           
  8270                           ;I2C.c: 13:     SSP1DATPPS = 0x13;
  8271  144B  3013               	movlw	19
  8272  144C  003D               	movlb	29	; select bank29
  8273  144D  00C6               	movwf	70	;volatile
  8274                           
  8275                           ;I2C.c: 15:     SSP1STAT = 0b10000000;
  8276  144E  3080               	movlw	128
  8277  144F  0023               	movlb	3	; select bank3
  8278  1450  008F               	movwf	15	;volatile
  8279                           
  8280                           ;I2C.c: 16:  SSP1CON1 = 0b00101000;
  8281  1451  3028               	movlw	40
  8282  1452  0090               	movwf	16	;volatile
  8283                           
  8284                           ;I2C.c: 17:  SSP1CON3 = 0x00;
  8285  1453  0192               	clrf	18	;volatile
  8286                           
  8287                           ;I2C.c: 18:  SSP1ADD = ((32000000UL/(4UL*100000UL))-1);
  8288  1454  304F               	movlw	79
  8289  1455  008D               	movwf	13	;volatile
  8290  1456  0008               	return
  8291  1457                     __end_of_i2c_init:
  8292                           
  8293                           	psect	text26
  8294  1423                     __ptext26:	
  8295 ;; *************** function _adc_init *****************
  8296 ;; Defined at:
  8297 ;;		line 3 in file "adc.c"
  8298 ;; Parameters:    Size  Location     Type
  8299 ;;		None
  8300 ;; Auto vars:     Size  Location     Type
  8301 ;;		None
  8302 ;; Return value:  Size  Location     Type
  8303 ;;                  1    wreg      void 
  8304 ;; Registers used:
  8305 ;;		wreg, status,2
  8306 ;; Tracked objects:
  8307 ;;		On entry : B1F/1E
  8308 ;;		On exit  : B1F/1
  8309 ;;		Unchanged: B00/0
  8310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8315 ;;Total ram usage:        0 bytes
  8316 ;; Hardware stack levels used: 1
  8317 ;; This function calls:
  8318 ;;		Nothing
  8319 ;; This function is called by:
  8320 ;;		_main
  8321 ;; This function uses a non-reentrant model
  8322 ;;
  8323                           
  8324                           
  8325                           ;psect for function _adc_init
  8326  1423                     _adc_init:
  8327                           
  8328                           ;adc.c: 4:     ADCON0 = ADCON0 & ~(1<<7 | 1<<4 );
  8329                           
  8330                           ;incstack = 0
  8331                           ; Regs used in _adc_init: [wreg+status,2]
  8332  1423  0021               	movlb	1	; select bank1
  8333  1424  0813               	movf	19,w	;volatile
  8334  1425  396F               	andlw	111
  8335  1426  0093               	movwf	19	;volatile
  8336                           
  8337                           ;adc.c: 5:     ADCON0 = ADCON0 |(1<<2);
  8338  1427  0813               	movf	19,w	;volatile
  8339  1428  3804               	iorlw	4
  8340  1429  0093               	movwf	19	;volatile
  8341                           
  8342                           ;adc.c: 6:     ADCON1 = ADCON1 |(1<<7);
  8343  142A  0814               	movf	20,w	;volatile
  8344  142B  3880               	iorlw	128
  8345  142C  0094               	movwf	20	;volatile
  8346                           
  8347                           ;adc.c: 7:     ADCON2 = ADCON2 & ~(7<<0 );
  8348  142D  0815               	movf	21,w	;volatile
  8349  142E  39F8               	andlw	248
  8350  142F  0095               	movwf	21	;volatile
  8351                           
  8352                           ;adc.c: 17:     ADCLK = ADCLK |(16<<0);
  8353  1430  0818               	movf	24,w	;volatile
  8354  1431  3810               	iorlw	16
  8355  1432  0098               	movwf	24	;volatile
  8356                           
  8357                           ;adc.c: 19:     ADREF = ADREF & ~(1<<4 );
  8358  1433  081A               	movf	26,w	;volatile
  8359  1434  39EF               	andlw	239
  8360  1435  009A               	movwf	26	;volatile
  8361                           
  8362                           ;adc.c: 20:     ADREF = ADREF & ~(3<<0 );
  8363  1436  081A               	movf	26,w	;volatile
  8364  1437  39FC               	andlw	252
  8365  1438  009A               	movwf	26	;volatile
  8366                           
  8367                           ;adc.c: 23:     ADPCH = 4;
  8368  1439  3004               	movlw	4
  8369  143A  009E               	movwf	30	;volatile
  8370                           
  8371                           ;adc.c: 24:     ADCAP = 0;
  8372  143B  019B               	clrf	27	;volatile
  8373  143C  0008               	return
  8374  143D                     __end_of_adc_init:
  8375                           
  8376                           	psect	text27
  8377  158B                     __ptext27:	
  8378 ;; *************** function _MLX90614_readObjectTempC *****************
  8379 ;; Defined at:
  8380 ;;		line 51 in file "MLX90614.c"
  8381 ;; Parameters:    Size  Location     Type
  8382 ;;		None
  8383 ;; Auto vars:     Size  Location     Type
  8384 ;;		None
  8385 ;; Return value:  Size  Location     Type
  8386 ;;                  4   56[BANK0 ] float 
  8387 ;; Registers used:
  8388 ;;		wreg, status,2, status,0, pclath, cstack
  8389 ;; Tracked objects:
  8390 ;;		On entry : 1F/1
  8391 ;;		On exit  : 1F/0
  8392 ;;		Unchanged: 0/0
  8393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8394 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8396 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8397 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8398 ;;Total ram usage:        8 bytes
  8399 ;; Hardware stack levels used: 1
  8400 ;; Hardware stack levels required when called: 3
  8401 ;; This function calls:
  8402 ;;		_MLX90614_ReadReg
  8403 ;;		___fladd
  8404 ;;		___flmul
  8405 ;;		___xxtofl
  8406 ;; This function is called by:
  8407 ;;		_main
  8408 ;; This function uses a non-reentrant model
  8409 ;;
  8410                           
  8411                           
  8412                           ;psect for function _MLX90614_readObjectTempC
  8413  158B                     _MLX90614_readObjectTempC:
  8414                           
  8415                           ;MLX90614.c: 52:     return ((MLX90614_ReadReg(0x07)* 0.02) - 273.15);
  8416                           
  8417                           ;incstack = 0
  8418                           ; Regs used in _MLX90614_readObjectTempC: [wreg+status,2+status,0+pclath+cstack]
  8419  158B  30C3               	movlw	195
  8420  158C  0020               	movlb	0	; select bank0
  8421  158D  00C7               	movwf	___fladd@b+3
  8422  158E  3088               	movlw	136
  8423  158F  00C6               	movwf	___fladd@b+2
  8424  1590  3093               	movlw	147
  8425  1591  00C5               	movwf	___fladd@b+1
  8426  1592  3033               	movlw	51
  8427  1593  00C4               	movwf	___fladd@b
  8428  1594  303C               	movlw	60
  8429  1595  00AD               	movwf	___flmul@b+3
  8430  1596  30A3               	movlw	163
  8431  1597  00AC               	movwf	___flmul@b+2
  8432  1598  30D7               	movlw	215
  8433  1599  00AB               	movwf	___flmul@b+1
  8434  159A  300A               	movlw	10
  8435  159B  00AA               	movwf	___flmul@b
  8436  159C  3007               	movlw	7
  8437  159D  3188  200B  3195   	fcall	_MLX90614_ReadReg
  8438  15A0  0871               	movf	?_MLX90614_ReadReg,w
  8439  15A1  0020               	movlb	0	; select bank0
  8440  15A2  00DC               	movwf	??_MLX90614_readObjectTempC
  8441  15A3  0872               	movf	?_MLX90614_ReadReg+1,w
  8442  15A4  00DD               	movwf	??_MLX90614_readObjectTempC+1
  8443  15A5  01DE               	clrf	??_MLX90614_readObjectTempC+2
  8444  15A6  01DF               	clrf	??_MLX90614_readObjectTempC+3
  8445  15A7  085F               	movf	??_MLX90614_readObjectTempC+3,w
  8446  15A8  00FC               	movwf	___xxtofl@val+3
  8447  15A9  085E               	movf	??_MLX90614_readObjectTempC+2,w
  8448  15AA  00FB               	movwf	___xxtofl@val+2
  8449  15AB  085D               	movf	??_MLX90614_readObjectTempC+1,w
  8450  15AC  00FA               	movwf	___xxtofl@val+1
  8451  15AD  085C               	movf	??_MLX90614_readObjectTempC,w
  8452  15AE  00F9               	movwf	___xxtofl@val
  8453  15AF  3000               	movlw	0
  8454  15B0  3188  2042  3195   	fcall	___xxtofl
  8455  15B3  087C               	movf	?___xxtofl+3,w
  8456  15B4  00B1               	movwf	___flmul@a+3
  8457  15B5  087B               	movf	?___xxtofl+2,w
  8458  15B6  00B0               	movwf	___flmul@a+2
  8459  15B7  087A               	movf	?___xxtofl+1,w
  8460  15B8  00AF               	movwf	___flmul@a+1
  8461  15B9  0879               	movf	?___xxtofl,w
  8462  15BA  00AE               	movwf	___flmul@a
  8463  15BB  3183  238A  3195   	fcall	___flmul
  8464  15BE  082D               	movf	?___flmul+3,w
  8465  15BF  00CB               	movwf	___fladd@a+3
  8466  15C0  082C               	movf	?___flmul+2,w
  8467  15C1  00CA               	movwf	___fladd@a+2
  8468  15C2  082B               	movf	?___flmul+1,w
  8469  15C3  00C9               	movwf	___fladd@a+1
  8470  15C4  082A               	movf	?___flmul,w
  8471  15C5  00C8               	movwf	___fladd@a
  8472  15C6  3181  21A9         	fcall	___fladd
  8473  15C8  0847               	movf	?___fladd+3,w
  8474  15C9  00DB               	movwf	?_MLX90614_readObjectTempC+3
  8475  15CA  0846               	movf	?___fladd+2,w
  8476  15CB  00DA               	movwf	?_MLX90614_readObjectTempC+2
  8477  15CC  0845               	movf	?___fladd+1,w
  8478  15CD  00D9               	movwf	?_MLX90614_readObjectTempC+1
  8479  15CE  0844               	movf	?___fladd,w
  8480  15CF  00D8               	movwf	?_MLX90614_readObjectTempC
  8481  15D0  0008               	return
  8482  15D1                     __end_of_MLX90614_readObjectTempC:
  8483                           
  8484                           	psect	text28
  8485  1545                     __ptext28:	
  8486 ;; *************** function _MLX90614_readAmbientTempC *****************
  8487 ;; Defined at:
  8488 ;;		line 54 in file "MLX90614.c"
  8489 ;; Parameters:    Size  Location     Type
  8490 ;;		None
  8491 ;; Auto vars:     Size  Location     Type
  8492 ;;		None
  8493 ;; Return value:  Size  Location     Type
  8494 ;;                  4   56[BANK0 ] float 
  8495 ;; Registers used:
  8496 ;;		wreg, status,2, status,0, pclath, cstack
  8497 ;; Tracked objects:
  8498 ;;		On entry : 0/3
  8499 ;;		On exit  : 1F/0
  8500 ;;		Unchanged: 0/0
  8501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8502 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8504 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8505 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8506 ;;Total ram usage:        8 bytes
  8507 ;; Hardware stack levels used: 1
  8508 ;; Hardware stack levels required when called: 3
  8509 ;; This function calls:
  8510 ;;		_MLX90614_ReadReg
  8511 ;;		___fladd
  8512 ;;		___flmul
  8513 ;;		___xxtofl
  8514 ;; This function is called by:
  8515 ;;		_main
  8516 ;; This function uses a non-reentrant model
  8517 ;;
  8518                           
  8519                           
  8520                           ;psect for function _MLX90614_readAmbientTempC
  8521  1545                     _MLX90614_readAmbientTempC:
  8522                           
  8523                           ;MLX90614.c: 55:     return ((MLX90614_ReadReg(0x06)* 0.02) - 273.15);
  8524                           
  8525                           ;incstack = 0
  8526                           ; Regs used in _MLX90614_readAmbientTempC: [wreg+status,2+status,0+pclath+cstack]
  8527  1545  30C3               	movlw	195
  8528  1546  0020               	movlb	0	; select bank0
  8529  1547  00C7               	movwf	___fladd@b+3
  8530  1548  3088               	movlw	136
  8531  1549  00C6               	movwf	___fladd@b+2
  8532  154A  3093               	movlw	147
  8533  154B  00C5               	movwf	___fladd@b+1
  8534  154C  3033               	movlw	51
  8535  154D  00C4               	movwf	___fladd@b
  8536  154E  303C               	movlw	60
  8537  154F  00AD               	movwf	___flmul@b+3
  8538  1550  30A3               	movlw	163
  8539  1551  00AC               	movwf	___flmul@b+2
  8540  1552  30D7               	movlw	215
  8541  1553  00AB               	movwf	___flmul@b+1
  8542  1554  300A               	movlw	10
  8543  1555  00AA               	movwf	___flmul@b
  8544  1556  3006               	movlw	6
  8545  1557  3188  200B  3195   	fcall	_MLX90614_ReadReg
  8546  155A  0871               	movf	?_MLX90614_ReadReg,w
  8547  155B  0020               	movlb	0	; select bank0
  8548  155C  00DC               	movwf	??_MLX90614_readAmbientTempC
  8549  155D  0872               	movf	?_MLX90614_ReadReg+1,w
  8550  155E  00DD               	movwf	??_MLX90614_readAmbientTempC+1
  8551  155F  01DE               	clrf	??_MLX90614_readAmbientTempC+2
  8552  1560  01DF               	clrf	??_MLX90614_readAmbientTempC+3
  8553  1561  085F               	movf	??_MLX90614_readAmbientTempC+3,w
  8554  1562  00FC               	movwf	___xxtofl@val+3
  8555  1563  085E               	movf	??_MLX90614_readAmbientTempC+2,w
  8556  1564  00FB               	movwf	___xxtofl@val+2
  8557  1565  085D               	movf	??_MLX90614_readAmbientTempC+1,w
  8558  1566  00FA               	movwf	___xxtofl@val+1
  8559  1567  085C               	movf	??_MLX90614_readAmbientTempC,w
  8560  1568  00F9               	movwf	___xxtofl@val
  8561  1569  3000               	movlw	0
  8562  156A  3188  2042  3195   	fcall	___xxtofl
  8563  156D  087C               	movf	?___xxtofl+3,w
  8564  156E  00B1               	movwf	___flmul@a+3
  8565  156F  087B               	movf	?___xxtofl+2,w
  8566  1570  00B0               	movwf	___flmul@a+2
  8567  1571  087A               	movf	?___xxtofl+1,w
  8568  1572  00AF               	movwf	___flmul@a+1
  8569  1573  0879               	movf	?___xxtofl,w
  8570  1574  00AE               	movwf	___flmul@a
  8571  1575  3183  238A  3195   	fcall	___flmul
  8572  1578  082D               	movf	?___flmul+3,w
  8573  1579  00CB               	movwf	___fladd@a+3
  8574  157A  082C               	movf	?___flmul+2,w
  8575  157B  00CA               	movwf	___fladd@a+2
  8576  157C  082B               	movf	?___flmul+1,w
  8577  157D  00C9               	movwf	___fladd@a+1
  8578  157E  082A               	movf	?___flmul,w
  8579  157F  00C8               	movwf	___fladd@a
  8580  1580  3181  21A9         	fcall	___fladd
  8581  1582  0847               	movf	?___fladd+3,w
  8582  1583  00DB               	movwf	?_MLX90614_readAmbientTempC+3
  8583  1584  0846               	movf	?___fladd+2,w
  8584  1585  00DA               	movwf	?_MLX90614_readAmbientTempC+2
  8585  1586  0845               	movf	?___fladd+1,w
  8586  1587  00D9               	movwf	?_MLX90614_readAmbientTempC+1
  8587  1588  0844               	movf	?___fladd,w
  8588  1589  00D8               	movwf	?_MLX90614_readAmbientTempC
  8589  158A  0008               	return
  8590  158B                     __end_of_MLX90614_readAmbientTempC:
  8591                           
  8592                           	psect	text29
  8593  080B                     __ptext29:	
  8594 ;; *************** function _MLX90614_ReadReg *****************
  8595 ;; Defined at:
  8596 ;;		line 32 in file "MLX90614.c"
  8597 ;; Parameters:    Size  Location     Type
  8598 ;;  reg             1    wreg     unsigned char 
  8599 ;; Auto vars:     Size  Location     Type
  8600 ;;  reg             1    6[COMMON] unsigned char 
  8601 ;;  valReg          2    7[COMMON] unsigned short 
  8602 ;;  pec             1    0        unsigned char 
  8603 ;; Return value:  Size  Location     Type
  8604 ;;                  2    1[COMMON] unsigned short 
  8605 ;; Registers used:
  8606 ;;		wreg, status,2, status,0, pclath, cstack
  8607 ;; Tracked objects:
  8608 ;;		On entry : 1F/0
  8609 ;;		On exit  : 1F/3
  8610 ;;		Unchanged: 0/0
  8611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8612 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8613 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8614 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8615 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8616 ;;Total ram usage:        8 bytes
  8617 ;; Hardware stack levels used: 1
  8618 ;; Hardware stack levels required when called: 2
  8619 ;; This function calls:
  8620 ;;		_i2c_read
  8621 ;;		_i2c_restart
  8622 ;;		_i2c_start
  8623 ;;		_i2c_stop
  8624 ;;		_i2c_write
  8625 ;; This function is called by:
  8626 ;;		_MLX90614_readObjectTempC
  8627 ;;		_MLX90614_readAmbientTempC
  8628 ;; This function uses a non-reentrant model
  8629 ;;
  8630                           
  8631                           
  8632                           ;psect for function _MLX90614_ReadReg
  8633  080B                     _MLX90614_ReadReg:
  8634                           
  8635                           ;incstack = 0
  8636                           ; Regs used in _MLX90614_ReadReg: [wreg+status,2+status,0+pclath+cstack]
  8637                           ;MLX90614_ReadReg@reg stored from wreg
  8638  080B  00F6               	movwf	MLX90614_ReadReg@reg
  8639                           
  8640                           ;MLX90614.c: 33:     uint16_t valReg;;MLX90614.c: 34:     uint8_t pec;;MLX90614.c: 35:  
      +                             i2c_start();
  8641  080C  3193  2339  3188   	fcall	_i2c_start
  8642                           
  8643                           ;MLX90614.c: 36:     i2c_write(0x5A << 1);
  8644  080F  30B4               	movlw	180
  8645  0810  3193  2379  3188   	fcall	_i2c_write
  8646                           
  8647                           ;MLX90614.c: 37:     i2c_write(reg);
  8648  0813  0876               	movf	MLX90614_ReadReg@reg,w
  8649  0814  3193  2379  3188   	fcall	_i2c_write
  8650                           
  8651                           ;MLX90614.c: 38:     i2c_restart();
  8652  0817  3193  2335  3188   	fcall	_i2c_restart
  8653                           
  8654                           ;MLX90614.c: 39:     i2c_write((0x5A << 1)|0x01);
  8655  081A  30B5               	movlw	181
  8656  081B  3193  2379  3188   	fcall	_i2c_write
  8657                           
  8658                           ;MLX90614.c: 40:     valReg = i2c_read(1);
  8659  081E  3001               	movlw	1
  8660  081F  3193  2389  3188   	fcall	_i2c_read
  8661  0822  00F3               	movwf	??_MLX90614_ReadReg
  8662  0823  01F4               	clrf	??_MLX90614_ReadReg+1
  8663  0824  0873               	movf	??_MLX90614_ReadReg,w
  8664  0825  00F7               	movwf	MLX90614_ReadReg@valReg
  8665  0826  0874               	movf	??_MLX90614_ReadReg+1,w
  8666  0827  00F8               	movwf	MLX90614_ReadReg@valReg+1
  8667                           
  8668                           ;MLX90614.c: 41:     valReg = (i2c_read(1) << 8) + valReg;
  8669  0828  3001               	movlw	1
  8670  0829  3193  2389  3188   	fcall	_i2c_read
  8671  082C  00F3               	movwf	??_MLX90614_ReadReg
  8672  082D  01F4               	clrf	??_MLX90614_ReadReg+1
  8673  082E  0873               	movf	??_MLX90614_ReadReg,w
  8674  082F  00F4               	movwf	??_MLX90614_ReadReg+1
  8675  0830  01F3               	clrf	??_MLX90614_ReadReg
  8676  0831  0877               	movf	MLX90614_ReadReg@valReg,w
  8677  0832  0773               	addwf	??_MLX90614_ReadReg,w
  8678  0833  00F7               	movwf	MLX90614_ReadReg@valReg
  8679  0834  0878               	movf	MLX90614_ReadReg@valReg+1,w
  8680  0835  3D74               	addwfc	??_MLX90614_ReadReg+1,w
  8681  0836  00F8               	movwf	MLX90614_ReadReg@valReg+1
  8682  0837  3001               	movlw	1
  8683  0838  3193  2389  3188   	fcall	_i2c_read
  8684                           
  8685                           ;MLX90614.c: 43:     i2c_stop();
  8686  083B  3193  233E         	fcall	_i2c_stop
  8687                           
  8688                           ;MLX90614.c: 44:     return valReg;
  8689  083D  0878               	movf	MLX90614_ReadReg@valReg+1,w
  8690  083E  00F2               	movwf	?_MLX90614_ReadReg+1
  8691  083F  0877               	movf	MLX90614_ReadReg@valReg,w
  8692  0840  00F1               	movwf	?_MLX90614_ReadReg
  8693  0841  0008               	return
  8694  0842                     __end_of_MLX90614_ReadReg:
  8695                           
  8696                           	psect	text30
  8697  1379                     __ptext30:	
  8698 ;; *************** function _i2c_write *****************
  8699 ;; Defined at:
  8700 ;;		line 75 in file "I2C.c"
  8701 ;; Parameters:    Size  Location     Type
  8702 ;;  I2C_data        1    wreg     unsigned char 
  8703 ;; Auto vars:     Size  Location     Type
  8704 ;;  I2C_data        1    0[COMMON] unsigned char 
  8705 ;; Return value:  Size  Location     Type
  8706 ;;                  1    wreg      _Bool 
  8707 ;; Registers used:
  8708 ;;		wreg
  8709 ;; Tracked objects:
  8710 ;;		On entry : 1F/3
  8711 ;;		On exit  : 1F/3
  8712 ;;		Unchanged: 0/0
  8713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8715 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8717 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8718 ;;Total ram usage:        1 bytes
  8719 ;; Hardware stack levels used: 1
  8720 ;; This function calls:
  8721 ;;		Nothing
  8722 ;; This function is called by:
  8723 ;;		_sensorPlaca
  8724 ;;		_MLX90614_ReadReg
  8725 ;; This function uses a non-reentrant model
  8726 ;;
  8727                           
  8728                           
  8729                           ;psect for function _i2c_write
  8730  1379                     _i2c_write:
  8731                           
  8732                           ;incstack = 0
  8733                           ; Regs used in _i2c_write: [wreg]
  8734                           ;i2c_write@I2C_data stored from wreg
  8735  1379  00F0               	movwf	i2c_write@I2C_data
  8736                           
  8737                           ;I2C.c: 75: _Bool i2c_write(uint8_t I2C_data);I2C.c: 76: {;I2C.c: 77:     PIR3bits.SSP1I
      +                          F = 0;
  8738  137A  002E               	movlb	14	; select bank14
  8739  137B  100F               	bcf	15,0	;volatile
  8740                           
  8741                           ;I2C.c: 78:     SSP1BUF = I2C_data;
  8742  137C  0870               	movf	i2c_write@I2C_data,w
  8743  137D  0023               	movlb	3	; select bank3
  8744  137E  008C               	movwf	12	;volatile
  8745  137F                     l246:	
  8746                           ;I2C.c: 79:     while(PIR3bits.SSP1IF == 0);
  8747                           
  8748  137F  002E               	movlb	14	; select bank14
  8749  1380  1C0F               	btfss	15,0	;volatile
  8750  1381  2B7F               	goto	l246
  8751                           
  8752                           ;I2C.c: 80:     if(SSP1CON2bits.ACKSTAT==0)
  8753  1382  0023               	movlb	3	; select bank3
  8754  1383  1B11               	btfsc	17,6	;volatile
  8755  1384  2B87               	goto	l2819
  8756                           
  8757                           ;I2C.c: 81:         return 1;
  8758  1385  3001               	movlw	1
  8759  1386  0008               	return
  8760  1387                     l2819:
  8761                           
  8762                           ;I2C.c: 83:         return 0;
  8763  1387  3000               	movlw	0
  8764  1388  0008               	return
  8765  1389                     __end_of_i2c_write:
  8766                           
  8767                           	psect	text31
  8768  133E                     __ptext31:	
  8769 ;; *************** function _i2c_stop *****************
  8770 ;; Defined at:
  8771 ;;		line 33 in file "I2C.c"
  8772 ;; Parameters:    Size  Location     Type
  8773 ;;		None
  8774 ;; Auto vars:     Size  Location     Type
  8775 ;;		None
  8776 ;; Return value:  Size  Location     Type
  8777 ;;                  1    wreg      void 
  8778 ;; Registers used:
  8779 ;;		None
  8780 ;; Tracked objects:
  8781 ;;		On entry : 1D/1
  8782 ;;		On exit  : 1F/3
  8783 ;;		Unchanged: 0/0
  8784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8789 ;;Total ram usage:        0 bytes
  8790 ;; Hardware stack levels used: 1
  8791 ;; This function calls:
  8792 ;;		Nothing
  8793 ;; This function is called by:
  8794 ;;		_sensorPlaca
  8795 ;;		_MLX90614_ReadReg
  8796 ;; This function uses a non-reentrant model
  8797 ;;
  8798                           
  8799                           
  8800                           ;psect for function _i2c_stop
  8801  133E                     _i2c_stop:
  8802                           
  8803                           ;I2C.c: 35:     SSP1CON2bits.PEN = 1;
  8804                           
  8805                           ;incstack = 0
  8806                           ; Regs used in _i2c_stop: []
  8807  133E  0023               	movlb	3	; select bank3
  8808  133F  1511               	bsf	17,2	;volatile
  8809  1340                     l220:	
  8810                           ;I2C.c: 36:     while(SSP1CON2bits.PEN == 1);
  8811                           
  8812  1340  1D11               	btfss	17,2	;volatile
  8813  1341  0008               	return
  8814  1342  2B40               	goto	l220
  8815  1343                     __end_of_i2c_stop:
  8816                           
  8817                           	psect	text32
  8818  1339                     __ptext32:	
  8819 ;; *************** function _i2c_start *****************
  8820 ;; Defined at:
  8821 ;;		line 21 in file "I2C.c"
  8822 ;; Parameters:    Size  Location     Type
  8823 ;;		None
  8824 ;; Auto vars:     Size  Location     Type
  8825 ;;		None
  8826 ;; Return value:  Size  Location     Type
  8827 ;;                  1    wreg      void 
  8828 ;; Registers used:
  8829 ;;		None
  8830 ;; Tracked objects:
  8831 ;;		On entry : 1C/1
  8832 ;;		On exit  : 1F/3
  8833 ;;		Unchanged: 0/0
  8834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8839 ;;Total ram usage:        0 bytes
  8840 ;; Hardware stack levels used: 1
  8841 ;; This function calls:
  8842 ;;		Nothing
  8843 ;; This function is called by:
  8844 ;;		_sensorPlaca
  8845 ;;		_MLX90614_ReadReg
  8846 ;; This function uses a non-reentrant model
  8847 ;;
  8848                           
  8849                           
  8850                           ;psect for function _i2c_start
  8851  1339                     _i2c_start:
  8852                           
  8853                           ;I2C.c: 23:     SSP1CON2bits.SEN = 1;
  8854                           
  8855                           ;incstack = 0
  8856                           ; Regs used in _i2c_start: []
  8857  1339  0023               	movlb	3	; select bank3
  8858  133A  1411               	bsf	17,0	;volatile
  8859  133B                     l208:	
  8860                           ;I2C.c: 24:     while(SSP1CON2bits.SEN == 1);
  8861                           
  8862  133B  1C11               	btfss	17,0	;volatile
  8863  133C  0008               	return
  8864  133D  2B3B               	goto	l208
  8865  133E                     __end_of_i2c_start:
  8866                           
  8867                           	psect	text33
  8868  1335                     __ptext33:	
  8869 ;; *************** function _i2c_restart *****************
  8870 ;; Defined at:
  8871 ;;		line 27 in file "I2C.c"
  8872 ;; Parameters:    Size  Location     Type
  8873 ;;		None
  8874 ;; Auto vars:     Size  Location     Type
  8875 ;;		None
  8876 ;; Return value:  Size  Location     Type
  8877 ;;                  1    wreg      void 
  8878 ;; Registers used:
  8879 ;;		None
  8880 ;; Tracked objects:
  8881 ;;		On entry : 1F/3
  8882 ;;		On exit  : 1F/3
  8883 ;;		Unchanged: 0/0
  8884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8889 ;;Total ram usage:        0 bytes
  8890 ;; Hardware stack levels used: 1
  8891 ;; This function calls:
  8892 ;;		Nothing
  8893 ;; This function is called by:
  8894 ;;		_sensorPlaca
  8895 ;;		_MLX90614_ReadReg
  8896 ;; This function uses a non-reentrant model
  8897 ;;
  8898                           
  8899                           
  8900                           ;psect for function _i2c_restart
  8901  1335                     _i2c_restart:
  8902                           
  8903                           ;I2C.c: 29:     SSP1CON2bits.RSEN = 1;
  8904                           
  8905                           ;incstack = 0
  8906                           ; Regs used in _i2c_restart: []
  8907  1335  1491               	bsf	17,1	;volatile
  8908  1336                     l214:	
  8909                           ;I2C.c: 30:     while(SSP1CON2bits.RSEN == 1);
  8910                           
  8911  1336  1C91               	btfss	17,1	;volatile
  8912  1337  0008               	return
  8913  1338  2B36               	goto	l214
  8914  1339                     __end_of_i2c_restart:
  8915                           
  8916                           	psect	text34
  8917  1389                     __ptext34:	
  8918 ;; *************** function _i2c_read *****************
  8919 ;; Defined at:
  8920 ;;		line 46 in file "I2C.c"
  8921 ;; Parameters:    Size  Location     Type
  8922 ;;  ack             1    wreg     _Bool 
  8923 ;; Auto vars:     Size  Location     Type
  8924 ;;  ack             1    0[COMMON] _Bool 
  8925 ;; Return value:  Size  Location     Type
  8926 ;;                  1    wreg      unsigned char 
  8927 ;; Registers used:
  8928 ;;		wreg, status,2, status,0, pclath, cstack
  8929 ;; Tracked objects:
  8930 ;;		On entry : 1F/3
  8931 ;;		On exit  : 1F/3
  8932 ;;		Unchanged: 0/0
  8933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8935 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8937 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8938 ;;Total ram usage:        1 bytes
  8939 ;; Hardware stack levels used: 1
  8940 ;; Hardware stack levels required when called: 1
  8941 ;; This function calls:
  8942 ;;		_i2c_ack
  8943 ;;		_i2c_nack
  8944 ;; This function is called by:
  8945 ;;		_sensorPlaca
  8946 ;;		_MLX90614_ReadReg
  8947 ;; This function uses a non-reentrant model
  8948 ;;
  8949                           
  8950                           
  8951                           ;psect for function _i2c_read
  8952  1389                     _i2c_read:
  8953                           
  8954                           ;incstack = 0
  8955                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  8956                           ;i2c_read@ack stored from wreg
  8957  1389  00F0               	movwf	i2c_read@ack
  8958                           
  8959                           ;I2C.c: 46: uint8_t i2c_read(_Bool ack);I2C.c: 47: {;I2C.c: 48:     PIR3bits.SSP1IF = 0;
  8960  138A  002E               	movlb	14	; select bank14
  8961  138B  100F               	bcf	15,0	;volatile
  8962                           
  8963                           ;I2C.c: 49:     SSP1CON2bits.RCEN = 1;
  8964  138C  0023               	movlb	3	; select bank3
  8965  138D  1591               	bsf	17,3	;volatile
  8966  138E                     l226:	
  8967                           ;I2C.c: 50:     while(PIR3bits.SSP1IF == 0);
  8968                           
  8969  138E  002E               	movlb	14	; select bank14
  8970  138F  1C0F               	btfss	15,0	;volatile
  8971  1390  2B8E               	goto	l226
  8972                           
  8973                           ;I2C.c: 51:     if(ack){
  8974  1391  0870               	movf	i2c_read@ack,w
  8975  1392  1903               	btfsc	3,2
  8976  1393  2B98               	goto	l2831
  8977                           
  8978                           ;I2C.c: 52:         i2c_ack();
  8979  1394  3193  235B  3193   	fcall	_i2c_ack
  8980                           
  8981                           ;I2C.c: 53:     }else{
  8982  1397  2B9A               	goto	l2833
  8983  1398                     l2831:
  8984                           
  8985                           ;I2C.c: 54:         i2c_nack();
  8986  1398  3193  2363         	fcall	_i2c_nack
  8987  139A                     l2833:
  8988                           
  8989                           ;I2C.c: 56:     return SSP1BUF;
  8990  139A  0023               	movlb	3	; select bank3
  8991  139B  080C               	movf	12,w	;volatile
  8992  139C  0008               	return
  8993  139D                     __end_of_i2c_read:
  8994                           
  8995                           	psect	text35
  8996  1363                     __ptext35:	
  8997 ;; *************** function _i2c_nack *****************
  8998 ;; Defined at:
  8999 ;;		line 67 in file "I2C.c"
  9000 ;; Parameters:    Size  Location     Type
  9001 ;;		None
  9002 ;; Auto vars:     Size  Location     Type
  9003 ;;		None
  9004 ;; Return value:  Size  Location     Type
  9005 ;;                  1    wreg      void 
  9006 ;; Registers used:
  9007 ;;		None
  9008 ;; Tracked objects:
  9009 ;;		On entry : 1F/E
  9010 ;;		On exit  : 1F/E
  9011 ;;		Unchanged: 0/0
  9012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9017 ;;Total ram usage:        0 bytes
  9018 ;; Hardware stack levels used: 1
  9019 ;; This function calls:
  9020 ;;		Nothing
  9021 ;; This function is called by:
  9022 ;;		_i2c_read
  9023 ;; This function uses a non-reentrant model
  9024 ;;
  9025                           
  9026                           
  9027                           ;psect for function _i2c_nack
  9028  1363                     _i2c_nack:
  9029                           
  9030                           ;I2C.c: 69:     PIR3bits.SSP1IF = 0;
  9031                           
  9032                           ;incstack = 0
  9033                           ; Regs used in _i2c_nack: []
  9034  1363  100F               	bcf	15,0	;volatile
  9035                           
  9036                           ;I2C.c: 70:     SSP1CON2bits.ACKDT = 1;
  9037  1364  0023               	movlb	3	; select bank3
  9038  1365  1691               	bsf	17,5	;volatile
  9039                           
  9040                           ;I2C.c: 71:     SSP1CON2bits.ACKEN = 1;
  9041  1366  1611               	bsf	17,4	;volatile
  9042  1367                     l240:	
  9043                           ;I2C.c: 72:     while(PIR3bits.SSP1IF == 0);
  9044                           
  9045  1367  002E               	movlb	14	; select bank14
  9046  1368  180F               	btfsc	15,0	;volatile
  9047  1369  0008               	return
  9048  136A  2B67               	goto	l240
  9049  136B                     __end_of_i2c_nack:
  9050                           
  9051                           	psect	text36
  9052  135B                     __ptext36:	
  9053 ;; *************** function _i2c_ack *****************
  9054 ;; Defined at:
  9055 ;;		line 59 in file "I2C.c"
  9056 ;; Parameters:    Size  Location     Type
  9057 ;;		None
  9058 ;; Auto vars:     Size  Location     Type
  9059 ;;		None
  9060 ;; Return value:  Size  Location     Type
  9061 ;;                  1    wreg      void 
  9062 ;; Registers used:
  9063 ;;		None
  9064 ;; Tracked objects:
  9065 ;;		On entry : 1F/E
  9066 ;;		On exit  : 1F/E
  9067 ;;		Unchanged: 0/0
  9068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9073 ;;Total ram usage:        0 bytes
  9074 ;; Hardware stack levels used: 1
  9075 ;; This function calls:
  9076 ;;		Nothing
  9077 ;; This function is called by:
  9078 ;;		_i2c_read
  9079 ;; This function uses a non-reentrant model
  9080 ;;
  9081                           
  9082                           
  9083                           ;psect for function _i2c_ack
  9084  135B                     _i2c_ack:
  9085                           
  9086                           ;I2C.c: 61:     PIR3bits.SSP1IF = 0;
  9087                           
  9088                           ;incstack = 0
  9089                           ; Regs used in _i2c_ack: []
  9090  135B  100F               	bcf	15,0	;volatile
  9091                           
  9092                           ;I2C.c: 62:     SSP1CON2bits.ACKDT = 0;
  9093  135C  0023               	movlb	3	; select bank3
  9094  135D  1291               	bcf	17,5	;volatile
  9095                           
  9096                           ;I2C.c: 63:     SSP1CON2bits.ACKEN = 1;
  9097  135E  1611               	bsf	17,4	;volatile
  9098  135F                     l234:	
  9099                           ;I2C.c: 64:     while(PIR3bits.SSP1IF == 0);
  9100                           
  9101  135F  002E               	movlb	14	; select bank14
  9102  1360  180F               	btfsc	15,0	;volatile
  9103  1361  0008               	return
  9104  1362  2B5F               	goto	l234
  9105  1363                     __end_of_i2c_ack:
  9106                           
  9107                           	psect	text37
  9108  05A2                     __ptext37:	
  9109 ;; *************** function _FLOAT_to_string *****************
  9110 ;; Defined at:
  9111 ;;		line 132 in file "Main.c"
  9112 ;; Parameters:    Size  Location     Type
  9113 ;;  number          4   64[BANK0 ] void 
  9114 ;;  text            1   68[BANK0 ] PTR unsigned char 
  9115 ;;		 -> main@buffer(8), 
  9116 ;;  decimal         1   69[BANK0 ] unsigned char 
  9117 ;; Auto vars:     Size  Location     Type
  9118 ;;  tempo_float     4    2[BANK1 ] unsigned char 
  9119 ;;  largo_entera    2   10[BANK1 ] int 
  9120 ;;  cont_for        2    8[BANK1 ] int 
  9121 ;;  largo_n         2    6[BANK1 ] int 
  9122 ;;  tempo_int       2    0[BANK1 ] int 
  9123 ;; Return value:  Size  Location     Type
  9124 ;;                  1    wreg      void 
  9125 ;; Registers used:
  9126 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9127 ;; Tracked objects:
  9128 ;;		On entry : 1F/0
  9129 ;;		On exit  : 1F/0
  9130 ;;		Unchanged: 0/0
  9131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9132 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9133 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  9134 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9135 ;;      Totals:         1       6      12       0       0       0       0       0       0       0       0       0       
      +0       0
  9136 ;;Total ram usage:       19 bytes
  9137 ;; Hardware stack levels used: 1
  9138 ;; Hardware stack levels required when called: 2
  9139 ;; This function calls:
  9140 ;;		___fladd
  9141 ;;		___fldiv
  9142 ;;		___flge
  9143 ;;		___flmul
  9144 ;;		___flneg
  9145 ;;		___flsub
  9146 ;;		___fltol
  9147 ;;		___xxtofl
  9148 ;; This function is called by:
  9149 ;;		_main
  9150 ;; This function uses a non-reentrant model
  9151 ;;
  9152                           
  9153                           
  9154                           ;psect for function _FLOAT_to_string
  9155  05A2                     _FLOAT_to_string:
  9156                           
  9157                           ;Main.c: 132: void FLOAT_to_string(double number, char *text, char decimal);Main.c: 133:
      +                           {;Main.c: 134:     int largo_entera, largo_n, cont_for, tempo_int;;Main.c: 135:     dou
      +                          ble tempo_float;;Main.c: 137:     largo_n = decimal + 1;
  9158                           
  9159                           ;incstack = 0
  9160                           ; Regs used in _FLOAT_to_string: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9161  05A2  0865               	movf	FLOAT_to_string@decimal,w
  9162  05A3  3E01               	addlw	1
  9163  05A4  0021               	movlb	1	; select bank1
  9164  05A5  00D0               	movwf	FLOAT_to_string@largo_n^(0+128)
  9165  05A6  3000               	movlw	0
  9166  05A7  1803               	skipnc
  9167  05A8  3001               	movlw	1
  9168  05A9  00D1               	movwf	(FLOAT_to_string@largo_n^(0+128)+1)
  9169                           
  9170                           ;Main.c: 138:     largo_entera = 0;
  9171  05AA  01D4               	clrf	FLOAT_to_string@largo_entera^(0+128)
  9172  05AB  01D5               	clrf	(FLOAT_to_string@largo_entera+1)^(0+128)
  9173                           
  9174                           ;Main.c: 140:     if (number < 0)
  9175  05AC  0020               	movlb	0	; select bank0
  9176  05AD  0863               	movf	FLOAT_to_string@number+3,w
  9177  05AE  00F3               	movwf	___flge@ff1+3
  9178  05AF  0862               	movf	FLOAT_to_string@number+2,w
  9179  05B0  00F2               	movwf	___flge@ff1+2
  9180  05B1  0861               	movf	FLOAT_to_string@number+1,w
  9181  05B2  00F1               	movwf	___flge@ff1+1
  9182  05B3  0860               	movf	FLOAT_to_string@number,w
  9183  05B4  00F0               	movwf	___flge@ff1
  9184  05B5  3000               	movlw	0
  9185  05B6  00F7               	movwf	___flge@ff2+3
  9186  05B7  3000               	movlw	0
  9187  05B8  00F6               	movwf	___flge@ff2+2
  9188  05B9  3000               	movlw	0
  9189  05BA  00F5               	movwf	___flge@ff2+1
  9190  05BB  3000               	movlw	0
  9191  05BC  00F4               	movwf	___flge@ff2
  9192  05BD  3197  2785  3185   	fcall	___flge
  9193  05C0  1803               	btfsc	3,0
  9194  05C1  2DE0               	goto	l3571
  9195                           
  9196                           ;Main.c: 141:     {;Main.c: 142:         *text++ = '-';
  9197  05C2  302D               	movlw	45
  9198  05C3  00FD               	movwf	??_FLOAT_to_string
  9199  05C4  0864               	movf	FLOAT_to_string@text,w
  9200  05C5  0086               	movwf	6
  9201  05C6  0187               	clrf	7
  9202  05C7  087D               	movf	??_FLOAT_to_string,w
  9203  05C8  0081               	movwf	1
  9204  05C9  3001               	movlw	1
  9205  05CA  00FD               	movwf	??_FLOAT_to_string
  9206  05CB  087D               	movf	??_FLOAT_to_string,w
  9207  05CC  07E4               	addwf	FLOAT_to_string@text,f
  9208                           
  9209                           ;Main.c: 143:         number = -number;
  9210  05CD  0863               	movf	FLOAT_to_string@number+3,w
  9211  05CE  00F3               	movwf	___flneg@f1+3
  9212  05CF  0862               	movf	FLOAT_to_string@number+2,w
  9213  05D0  00F2               	movwf	___flneg@f1+2
  9214  05D1  0861               	movf	FLOAT_to_string@number+1,w
  9215  05D2  00F1               	movwf	___flneg@f1+1
  9216  05D3  0860               	movf	FLOAT_to_string@number,w
  9217  05D4  00F0               	movwf	___flneg@f1
  9218  05D5  3188  2002  3185   	fcall	___flneg
  9219  05D8  0873               	movf	?___flneg+3,w
  9220  05D9  00E3               	movwf	FLOAT_to_string@number+3
  9221  05DA  0872               	movf	?___flneg+2,w
  9222  05DB  00E2               	movwf	FLOAT_to_string@number+2
  9223  05DC  0871               	movf	?___flneg+1,w
  9224  05DD  00E1               	movwf	FLOAT_to_string@number+1
  9225  05DE  0870               	movf	?___flneg,w
  9226  05DF  00E0               	movwf	FLOAT_to_string@number
  9227  05E0                     l3571:
  9228                           
  9229                           ;Main.c: 146:     if (number > 0.0) while (number < 1.0)
  9230  05E0  3000               	movlw	0
  9231  05E1  00F3               	movwf	___flge@ff1+3
  9232  05E2  3000               	movlw	0
  9233  05E3  00F2               	movwf	___flge@ff1+2
  9234  05E4  3000               	movlw	0
  9235  05E5  00F1               	movwf	___flge@ff1+1
  9236  05E6  3000               	movlw	0
  9237  05E7  00F0               	movwf	___flge@ff1
  9238  05E8  0863               	movf	FLOAT_to_string@number+3,w
  9239  05E9  00F7               	movwf	___flge@ff2+3
  9240  05EA  0862               	movf	FLOAT_to_string@number+2,w
  9241  05EB  00F6               	movwf	___flge@ff2+2
  9242  05EC  0861               	movf	FLOAT_to_string@number+1,w
  9243  05ED  00F5               	movwf	___flge@ff2+1
  9244  05EE  0860               	movf	FLOAT_to_string@number,w
  9245  05EF  00F4               	movwf	___flge@ff2
  9246  05F0  3197  2785  3185   	fcall	___flge
  9247  05F3  1C03               	btfss	3,0
  9248  05F4  2E16               	goto	l3579
  9249  05F5  2E4D               	goto	l3585
  9250  05F6                     l3575:
  9251                           
  9252                           ;Main.c: 147:     {;Main.c: 148:         number =number* 10.00;
  9253  05F6  3041               	movlw	65
  9254  05F7  00AD               	movwf	___flmul@b+3
  9255  05F8  3020               	movlw	32
  9256  05F9  00AC               	movwf	___flmul@b+2
  9257  05FA  3000               	movlw	0
  9258  05FB  00AB               	movwf	___flmul@b+1
  9259  05FC  3000               	movlw	0
  9260  05FD  00AA               	movwf	___flmul@b
  9261  05FE  0863               	movf	FLOAT_to_string@number+3,w
  9262  05FF  00B1               	movwf	___flmul@a+3
  9263  0600  0862               	movf	FLOAT_to_string@number+2,w
  9264  0601  00B0               	movwf	___flmul@a+2
  9265  0602  0861               	movf	FLOAT_to_string@number+1,w
  9266  0603  00AF               	movwf	___flmul@a+1
  9267  0604  0860               	movf	FLOAT_to_string@number,w
  9268  0605  00AE               	movwf	___flmul@a
  9269  0606  3183  238A  3185   	fcall	___flmul
  9270  0609  082D               	movf	?___flmul+3,w
  9271  060A  00E3               	movwf	FLOAT_to_string@number+3
  9272  060B  082C               	movf	?___flmul+2,w
  9273  060C  00E2               	movwf	FLOAT_to_string@number+2
  9274  060D  082B               	movf	?___flmul+1,w
  9275  060E  00E1               	movwf	FLOAT_to_string@number+1
  9276  060F  082A               	movf	?___flmul,w
  9277  0610  00E0               	movwf	FLOAT_to_string@number
  9278                           
  9279                           ;Main.c: 149:         largo_entera--;
  9280  0611  30FF               	movlw	255
  9281  0612  0021               	movlb	1	; select bank1
  9282  0613  07D4               	addwf	FLOAT_to_string@largo_entera^(0+128),f
  9283  0614  30FF               	movlw	255
  9284  0615  3DD5               	addwfc	(FLOAT_to_string@largo_entera+1)^(0+128),f
  9285  0616                     l3579:
  9286                           
  9287                           ;Main.c: 146:     if (number > 0.0) while (number < 1.0)
  9288  0616  0020               	movlb	0	; select bank0
  9289  0617  0863               	movf	FLOAT_to_string@number+3,w
  9290  0618  00F3               	movwf	___flge@ff1+3
  9291  0619  0862               	movf	FLOAT_to_string@number+2,w
  9292  061A  00F2               	movwf	___flge@ff1+2
  9293  061B  0861               	movf	FLOAT_to_string@number+1,w
  9294  061C  00F1               	movwf	___flge@ff1+1
  9295  061D  0860               	movf	FLOAT_to_string@number,w
  9296  061E  00F0               	movwf	___flge@ff1
  9297  061F  303F               	movlw	63
  9298  0620  00F7               	movwf	___flge@ff2+3
  9299  0621  3080               	movlw	128
  9300  0622  00F6               	movwf	___flge@ff2+2
  9301  0623  3000               	movlw	0
  9302  0624  00F5               	movwf	___flge@ff2+1
  9303  0625  3000               	movlw	0
  9304  0626  00F4               	movwf	___flge@ff2
  9305  0627  3197  2785  3185   	fcall	___flge
  9306  062A  1803               	btfsc	3,0
  9307  062B  2E4D               	goto	l3585
  9308  062C  2DF6               	goto	l3575
  9309  062D                     l3581:
  9310                           
  9311                           ;Main.c: 154:     {;Main.c: 155:         number = number/10.0;
  9312  062D  3041               	movlw	65
  9313  062E  00F3               	movwf	___fldiv@a+3
  9314  062F  3020               	movlw	32
  9315  0630  00F2               	movwf	___fldiv@a+2
  9316  0631  3000               	movlw	0
  9317  0632  00F1               	movwf	___fldiv@a+1
  9318  0633  3000               	movlw	0
  9319  0634  00F0               	movwf	___fldiv@a
  9320  0635  0863               	movf	FLOAT_to_string@number+3,w
  9321  0636  00F7               	movwf	___fldiv@b+3
  9322  0637  0862               	movf	FLOAT_to_string@number+2,w
  9323  0638  00F6               	movwf	___fldiv@b+2
  9324  0639  0861               	movf	FLOAT_to_string@number+1,w
  9325  063A  00F5               	movwf	___fldiv@b+1
  9326  063B  0860               	movf	FLOAT_to_string@number,w
  9327  063C  00F4               	movwf	___fldiv@b
  9328  063D  3180  202F  3185   	fcall	___fldiv
  9329  0640  0873               	movf	?___fldiv+3,w
  9330  0641  00E3               	movwf	FLOAT_to_string@number+3
  9331  0642  0872               	movf	?___fldiv+2,w
  9332  0643  00E2               	movwf	FLOAT_to_string@number+2
  9333  0644  0871               	movf	?___fldiv+1,w
  9334  0645  00E1               	movwf	FLOAT_to_string@number+1
  9335  0646  0870               	movf	?___fldiv,w
  9336  0647  00E0               	movwf	FLOAT_to_string@number
  9337                           
  9338                           ;Main.c: 156:         largo_entera++;
  9339  0648  3001               	movlw	1
  9340  0649  0021               	movlb	1	; select bank1
  9341  064A  07D4               	addwf	FLOAT_to_string@largo_entera^(0+128),f
  9342  064B  3000               	movlw	0
  9343  064C  3DD5               	addwfc	(FLOAT_to_string@largo_entera+1)^(0+128),f
  9344  064D                     l3585:
  9345                           
  9346                           ;Main.c: 153:     while (number >= 10.0)
  9347  064D  0020               	movlb	0	; select bank0
  9348  064E  0863               	movf	FLOAT_to_string@number+3,w
  9349  064F  00F3               	movwf	___flge@ff1+3
  9350  0650  0862               	movf	FLOAT_to_string@number+2,w
  9351  0651  00F2               	movwf	___flge@ff1+2
  9352  0652  0861               	movf	FLOAT_to_string@number+1,w
  9353  0653  00F1               	movwf	___flge@ff1+1
  9354  0654  0860               	movf	FLOAT_to_string@number,w
  9355  0655  00F0               	movwf	___flge@ff1
  9356  0656  3041               	movlw	65
  9357  0657  00F7               	movwf	___flge@ff2+3
  9358  0658  3020               	movlw	32
  9359  0659  00F6               	movwf	___flge@ff2+2
  9360  065A  3000               	movlw	0
  9361  065B  00F5               	movwf	___flge@ff2+1
  9362  065C  3000               	movlw	0
  9363  065D  00F4               	movwf	___flge@ff2
  9364  065E  3197  2785  3185   	fcall	___flge
  9365  0661  1803               	btfsc	3,0
  9366  0662  2E2D               	goto	l3581
  9367                           
  9368                           ;Main.c: 158:     largo_n = largo_n+largo_entera;
  9369  0663  0021               	movlb	1	; select bank1
  9370  0664  0854               	movf	FLOAT_to_string@largo_entera^(0+128),w
  9371  0665  0750               	addwf	FLOAT_to_string@largo_n^(0+128),w
  9372  0666  00D0               	movwf	FLOAT_to_string@largo_n^(0+128)
  9373  0667  0855               	movf	(FLOAT_to_string@largo_entera+1)^(0+128),w
  9374  0668  3D51               	addwfc	(FLOAT_to_string@largo_n+1)^(0+128),w
  9375  0669  00D1               	movwf	(FLOAT_to_string@largo_n+1)^(0+128)
  9376                           
  9377                           ;Main.c: 163:     for (tempo_float = cont_for = 1; cont_for < largo_n; cont_for++)
  9378  066A  3001               	movlw	1
  9379  066B  00D2               	movwf	FLOAT_to_string@cont_for^(0+128)
  9380  066C  3000               	movlw	0
  9381  066D  00D3               	movwf	(FLOAT_to_string@cont_for^(0+128)+1)
  9382  066E  0852               	movf	FLOAT_to_string@cont_for^(0+128),w
  9383  066F  00F9               	movwf	___xxtofl@val
  9384  0670  0853               	movf	(FLOAT_to_string@cont_for+1)^(0+128),w
  9385  0671  00FA               	movwf	___xxtofl@val+1
  9386  0672  0D89               	rlf	9,f
  9387  0673  3B89               	subwfb	9,f
  9388  0674  0989               	comf	9,f
  9389  0675  00FB               	movwf	___xxtofl@val+2
  9390  0676  00FC               	movwf	___xxtofl@val+3
  9391  0677  3001               	movlw	1
  9392  0678  3188  2042  3185   	fcall	___xxtofl
  9393  067B  087C               	movf	?___xxtofl+3,w
  9394  067C  0021               	movlb	1	; select bank1
  9395  067D  00CF               	movwf	(FLOAT_to_string@tempo_float+3)^(0+128)
  9396  067E  087B               	movf	?___xxtofl+2,w
  9397  067F  00CE               	movwf	(FLOAT_to_string@tempo_float+2)^(0+128)
  9398  0680  087A               	movf	?___xxtofl+1,w
  9399  0681  00CD               	movwf	(FLOAT_to_string@tempo_float+1)^(0+128)
  9400  0682  0879               	movf	?___xxtofl,w
  9401  0683  00CC               	movwf	FLOAT_to_string@tempo_float^(0+128)
  9402  0684                     l3595:
  9403  0684  0853               	movf	(FLOAT_to_string@cont_for+1)^(0+128),w
  9404  0685  3A80               	xorlw	128
  9405  0686  00FD               	movwf	??_FLOAT_to_string
  9406  0687  0851               	movf	(FLOAT_to_string@largo_n+1)^(0+128),w
  9407  0688  3A80               	xorlw	128
  9408  0689  027D               	subwf	??_FLOAT_to_string,w
  9409  068A  1D03               	skipz
  9410  068B  2E8E               	goto	u5055
  9411  068C  0850               	movf	FLOAT_to_string@largo_n^(0+128),w
  9412  068D  0252               	subwf	FLOAT_to_string@cont_for^(0+128),w
  9413  068E                     u5055:
  9414  068E  1803               	btfsc	3,0
  9415  068F  2EB2               	goto	l3597
  9416                           
  9417                           ;Main.c: 164:         tempo_float = tempo_float/10.0;
  9418  0690  3041               	movlw	65
  9419  0691  00F3               	movwf	___fldiv@a+3
  9420  0692  3020               	movlw	32
  9421  0693  00F2               	movwf	___fldiv@a+2
  9422  0694  3000               	movlw	0
  9423  0695  00F1               	movwf	___fldiv@a+1
  9424  0696  3000               	movlw	0
  9425  0697  00F0               	movwf	___fldiv@a
  9426  0698  0021               	movlb	1	; select bank1
  9427  0699  084F               	movf	(FLOAT_to_string@tempo_float+3)^(0+128),w
  9428  069A  00F7               	movwf	___fldiv@b+3
  9429  069B  084E               	movf	(FLOAT_to_string@tempo_float+2)^(0+128),w
  9430  069C  00F6               	movwf	___fldiv@b+2
  9431  069D  084D               	movf	(FLOAT_to_string@tempo_float+1)^(0+128),w
  9432  069E  00F5               	movwf	___fldiv@b+1
  9433  069F  084C               	movf	FLOAT_to_string@tempo_float^(0+128),w
  9434  06A0  00F4               	movwf	___fldiv@b
  9435  06A1  3180  202F  3185   	fcall	___fldiv
  9436  06A4  0873               	movf	?___fldiv+3,w
  9437  06A5  0021               	movlb	1	; select bank1
  9438  06A6  00CF               	movwf	(FLOAT_to_string@tempo_float+3)^(0+128)
  9439  06A7  0872               	movf	?___fldiv+2,w
  9440  06A8  00CE               	movwf	(FLOAT_to_string@tempo_float+2)^(0+128)
  9441  06A9  0871               	movf	?___fldiv+1,w
  9442  06AA  00CD               	movwf	(FLOAT_to_string@tempo_float+1)^(0+128)
  9443  06AB  0870               	movf	?___fldiv,w
  9444  06AC  00CC               	movwf	FLOAT_to_string@tempo_float^(0+128)
  9445  06AD  3001               	movlw	1
  9446  06AE  07D2               	addwf	FLOAT_to_string@cont_for^(0+128),f
  9447  06AF  3000               	movlw	0
  9448  06B0  3DD3               	addwfc	(FLOAT_to_string@cont_for+1)^(0+128),f
  9449  06B1  2E84               	goto	l3595
  9450  06B2                     l3597:
  9451                           
  9452                           ;Main.c: 166:     number += tempo_float/2.0;
  9453  06B2  0021               	movlb	1	; select bank1
  9454  06B3  084F               	movf	(FLOAT_to_string@tempo_float+3)^(0+128),w
  9455  06B4  00F7               	movwf	___fldiv@b+3
  9456  06B5  084E               	movf	(FLOAT_to_string@tempo_float+2)^(0+128),w
  9457  06B6  00F6               	movwf	___fldiv@b+2
  9458  06B7  084D               	movf	(FLOAT_to_string@tempo_float+1)^(0+128),w
  9459  06B8  00F5               	movwf	___fldiv@b+1
  9460  06B9  084C               	movf	FLOAT_to_string@tempo_float^(0+128),w
  9461  06BA  00F4               	movwf	___fldiv@b
  9462  06BB  3040               	movlw	64
  9463  06BC  00F3               	movwf	___fldiv@a+3
  9464  06BD  3000               	movlw	0
  9465  06BE  00F2               	movwf	___fldiv@a+2
  9466  06BF  3000               	movlw	0
  9467  06C0  00F1               	movwf	___fldiv@a+1
  9468  06C1  3000               	movlw	0
  9469  06C2  00F0               	movwf	___fldiv@a
  9470  06C3  3180  202F  3185   	fcall	___fldiv
  9471  06C6  0873               	movf	?___fldiv+3,w
  9472  06C7  00C7               	movwf	___fladd@b+3
  9473  06C8  0872               	movf	?___fldiv+2,w
  9474  06C9  00C6               	movwf	___fladd@b+2
  9475  06CA  0871               	movf	?___fldiv+1,w
  9476  06CB  00C5               	movwf	___fladd@b+1
  9477  06CC  0870               	movf	?___fldiv,w
  9478  06CD  00C4               	movwf	___fladd@b
  9479  06CE  0863               	movf	FLOAT_to_string@number+3,w
  9480  06CF  00CB               	movwf	___fladd@a+3
  9481  06D0  0862               	movf	FLOAT_to_string@number+2,w
  9482  06D1  00CA               	movwf	___fladd@a+2
  9483  06D2  0861               	movf	FLOAT_to_string@number+1,w
  9484  06D3  00C9               	movwf	___fladd@a+1
  9485  06D4  0860               	movf	FLOAT_to_string@number,w
  9486  06D5  00C8               	movwf	___fladd@a
  9487  06D6  3181  21A9  3185   	fcall	___fladd
  9488  06D9  0847               	movf	?___fladd+3,w
  9489  06DA  00E3               	movwf	FLOAT_to_string@number+3
  9490  06DB  0846               	movf	?___fladd+2,w
  9491  06DC  00E2               	movwf	FLOAT_to_string@number+2
  9492  06DD  0845               	movf	?___fladd+1,w
  9493  06DE  00E1               	movwf	FLOAT_to_string@number+1
  9494  06DF  0844               	movf	?___fladd,w
  9495  06E0  00E0               	movwf	FLOAT_to_string@number
  9496                           
  9497                           ;Main.c: 167:     if (number >= 10.0)
  9498  06E1  0863               	movf	FLOAT_to_string@number+3,w
  9499  06E2  00F3               	movwf	___flge@ff1+3
  9500  06E3  0862               	movf	FLOAT_to_string@number+2,w
  9501  06E4  00F2               	movwf	___flge@ff1+2
  9502  06E5  0861               	movf	FLOAT_to_string@number+1,w
  9503  06E6  00F1               	movwf	___flge@ff1+1
  9504  06E7  0860               	movf	FLOAT_to_string@number,w
  9505  06E8  00F0               	movwf	___flge@ff1
  9506  06E9  3041               	movlw	65
  9507  06EA  00F7               	movwf	___flge@ff2+3
  9508  06EB  3020               	movlw	32
  9509  06EC  00F6               	movwf	___flge@ff2+2
  9510  06ED  3000               	movlw	0
  9511  06EE  00F5               	movwf	___flge@ff2+1
  9512  06EF  3000               	movlw	0
  9513  06F0  00F4               	movwf	___flge@ff2
  9514  06F1  3197  2785  3185   	fcall	___flge
  9515  06F4  1C03               	btfss	3,0
  9516  06F5  2F03               	goto	l3601
  9517                           
  9518                           ;Main.c: 168:     {;Main.c: 169:         number = 1.0;
  9519  06F6  303F               	movlw	63
  9520  06F7  00E3               	movwf	FLOAT_to_string@number+3
  9521  06F8  3080               	movlw	128
  9522  06F9  00E2               	movwf	FLOAT_to_string@number+2
  9523  06FA  3000               	movlw	0
  9524  06FB  00E1               	movwf	FLOAT_to_string@number+1
  9525  06FC  3000               	movlw	0
  9526  06FD  00E0               	movwf	FLOAT_to_string@number
  9527                           
  9528                           ;Main.c: 170:         largo_entera++;
  9529  06FE  3001               	movlw	1
  9530  06FF  0021               	movlb	1	; select bank1
  9531  0700  07D4               	addwf	FLOAT_to_string@largo_entera^(0+128),f
  9532  0701  3000               	movlw	0
  9533  0702  3DD5               	addwfc	(FLOAT_to_string@largo_entera+1)^(0+128),f
  9534  0703                     l3601:
  9535                           
  9536                           ;Main.c: 172:     if (largo_entera<0)
  9537  0703  0021               	movlb	1	; select bank1
  9538  0704  1FD5               	btfss	(FLOAT_to_string@largo_entera+1)^(0+128),7
  9539  0705  2F48               	goto	l3623
  9540                           
  9541                           ;Main.c: 173:     {;Main.c: 174:         *text++ = '0'; *text++ = '.';
  9542  0706  3030               	movlw	48
  9543  0707  00FD               	movwf	??_FLOAT_to_string
  9544  0708  0020               	movlb	0	; select bank0
  9545  0709  0864               	movf	FLOAT_to_string@text,w
  9546  070A  0086               	movwf	6
  9547  070B  0187               	clrf	7
  9548  070C  087D               	movf	??_FLOAT_to_string,w
  9549  070D  0081               	movwf	1
  9550  070E  3001               	movlw	1
  9551  070F  00FD               	movwf	??_FLOAT_to_string
  9552  0710  087D               	movf	??_FLOAT_to_string,w
  9553  0711  07E4               	addwf	FLOAT_to_string@text,f
  9554  0712  302E               	movlw	46
  9555  0713  00FD               	movwf	??_FLOAT_to_string
  9556  0714  0864               	movf	FLOAT_to_string@text,w
  9557  0715  0086               	movwf	6
  9558  0716  0187               	clrf	7
  9559  0717  087D               	movf	??_FLOAT_to_string,w
  9560  0718  0081               	movwf	1
  9561  0719  3001               	movlw	1
  9562  071A  00FD               	movwf	??_FLOAT_to_string
  9563  071B  087D               	movf	??_FLOAT_to_string,w
  9564  071C  07E4               	addwf	FLOAT_to_string@text,f
  9565                           
  9566                           ;Main.c: 175:         if (largo_n < 0)
  9567  071D  0021               	movlb	1	; select bank1
  9568  071E  1FD1               	btfss	(FLOAT_to_string@largo_n+1)^(0+128),7
  9569  071F  2F26               	goto	l3613
  9570                           
  9571                           ;Main.c: 176:             largo_entera = largo_entera-largo_n;
  9572  0720  0850               	movf	FLOAT_to_string@largo_n^(0+128),w
  9573  0721  0254               	subwf	FLOAT_to_string@largo_entera^(0+128),w
  9574  0722  00D4               	movwf	FLOAT_to_string@largo_entera^(0+128)
  9575  0723  0851               	movf	(FLOAT_to_string@largo_n+1)^(0+128),w
  9576  0724  3B55               	subwfb	(FLOAT_to_string@largo_entera+1)^(0+128),w
  9577  0725  00D5               	movwf	(FLOAT_to_string@largo_entera+1)^(0+128)
  9578  0726                     l3613:
  9579                           
  9580                           ;Main.c: 177:         for (cont_for = -1; cont_for > largo_entera; cont_for--)
  9581  0726  30FF               	movlw	255
  9582  0727  00D2               	movwf	FLOAT_to_string@cont_for^(0+128)
  9583  0728  30FF               	movlw	255
  9584  0729  00D3               	movwf	(FLOAT_to_string@cont_for^(0+128)+1)
  9585  072A                     l3621:
  9586  072A  0855               	movf	(FLOAT_to_string@largo_entera+1)^(0+128),w
  9587  072B  3A80               	xorlw	128
  9588  072C  00FD               	movwf	??_FLOAT_to_string
  9589  072D  0853               	movf	(FLOAT_to_string@cont_for+1)^(0+128),w
  9590  072E  3A80               	xorlw	128
  9591  072F  027D               	subwf	??_FLOAT_to_string,w
  9592  0730  1D03               	skipz
  9593  0731  2F34               	goto	u5095
  9594  0732  0852               	movf	FLOAT_to_string@cont_for^(0+128),w
  9595  0733  0254               	subwf	FLOAT_to_string@largo_entera^(0+128),w
  9596  0734                     u5095:
  9597  0734  1803               	btfsc	3,0
  9598  0735  2F48               	goto	l3623
  9599                           
  9600                           ;Main.c: 178:             *text++ = '0';
  9601  0736  3030               	movlw	48
  9602  0737  00FD               	movwf	??_FLOAT_to_string
  9603  0738  0020               	movlb	0	; select bank0
  9604  0739  0864               	movf	FLOAT_to_string@text,w
  9605  073A  0086               	movwf	6
  9606  073B  0187               	clrf	7
  9607  073C  087D               	movf	??_FLOAT_to_string,w
  9608  073D  0081               	movwf	1
  9609  073E  3001               	movlw	1
  9610  073F  00FD               	movwf	??_FLOAT_to_string
  9611  0740  087D               	movf	??_FLOAT_to_string,w
  9612  0741  07E4               	addwf	FLOAT_to_string@text,f
  9613  0742  30FF               	movlw	255
  9614  0743  0021               	movlb	1	; select bank1
  9615  0744  07D2               	addwf	FLOAT_to_string@cont_for^(0+128),f
  9616  0745  30FF               	movlw	255
  9617  0746  3DD3               	addwfc	(FLOAT_to_string@cont_for+1)^(0+128),f
  9618  0747  2F2A               	goto	l3621
  9619  0748                     l3623:
  9620                           
  9621                           ;Main.c: 180:     for (cont_for=0; cont_for < largo_n; cont_for++)
  9622  0748  0021               	movlb	1	; select bank1
  9623  0749  01D2               	clrf	FLOAT_to_string@cont_for^(0+128)
  9624  074A  01D3               	clrf	(FLOAT_to_string@cont_for+1)^(0+128)
  9625  074B                     l3643:
  9626  074B  0853               	movf	(FLOAT_to_string@cont_for+1)^(0+128),w
  9627  074C  3A80               	xorlw	128
  9628  074D  00FD               	movwf	??_FLOAT_to_string
  9629  074E  0851               	movf	(FLOAT_to_string@largo_n+1)^(0+128),w
  9630  074F  3A80               	xorlw	128
  9631  0750  027D               	subwf	??_FLOAT_to_string,w
  9632  0751  1D03               	skipz
  9633  0752  2F55               	goto	u5115
  9634  0753  0850               	movf	FLOAT_to_string@largo_n^(0+128),w
  9635  0754  0252               	subwf	FLOAT_to_string@cont_for^(0+128),w
  9636  0755                     u5115:
  9637  0755  1803               	btfsc	3,0
  9638  0756  2FE4               	goto	l3645
  9639                           
  9640                           ;Main.c: 181:     {;Main.c: 182:         tempo_int = (int)number;
  9641  0757  0020               	movlb	0	; select bank0
  9642  0758  0863               	movf	FLOAT_to_string@number+3,w
  9643  0759  00F3               	movwf	___fltol@f1+3
  9644  075A  0862               	movf	FLOAT_to_string@number+2,w
  9645  075B  00F2               	movwf	___fltol@f1+2
  9646  075C  0861               	movf	FLOAT_to_string@number+1,w
  9647  075D  00F1               	movwf	___fltol@f1+1
  9648  075E  0860               	movf	FLOAT_to_string@number,w
  9649  075F  00F0               	movwf	___fltol@f1
  9650  0760  3197  2720  3185   	fcall	___fltol
  9651  0763  0871               	movf	?___fltol+1,w
  9652  0764  0021               	movlb	1	; select bank1
  9653  0765  00CB               	movwf	(FLOAT_to_string@tempo_int+1)^(0+128)
  9654  0766  0870               	movf	?___fltol,w
  9655  0767  00CA               	movwf	FLOAT_to_string@tempo_int^(0+128)
  9656                           
  9657                           ;Main.c: 183:         *text++ = (char)tempo_int + 48;
  9658  0768  084A               	movf	FLOAT_to_string@tempo_int^(0+128),w
  9659  0769  3E30               	addlw	48
  9660  076A  00FD               	movwf	??_FLOAT_to_string
  9661  076B  0020               	movlb	0	; select bank0
  9662  076C  0864               	movf	FLOAT_to_string@text,w
  9663  076D  0086               	movwf	6
  9664  076E  0187               	clrf	7
  9665  076F  087D               	movf	??_FLOAT_to_string,w
  9666  0770  0081               	movwf	1
  9667  0771  3001               	movlw	1
  9668  0772  00FD               	movwf	??_FLOAT_to_string
  9669  0773  087D               	movf	??_FLOAT_to_string,w
  9670  0774  07E4               	addwf	FLOAT_to_string@text,f
  9671                           
  9672                           ;Main.c: 184:         if (cont_for == largo_entera )
  9673  0775  0021               	movlb	1	; select bank1
  9674  0776  0855               	movf	(FLOAT_to_string@largo_entera+1)^(0+128),w
  9675  0777  0653               	xorwf	(FLOAT_to_string@cont_for+1)^(0+128),w
  9676  0778  1D03               	skipz
  9677  0779  2F7C               	goto	u5105
  9678  077A  0854               	movf	FLOAT_to_string@largo_entera^(0+128),w
  9679  077B  0652               	xorwf	FLOAT_to_string@cont_for^(0+128),w
  9680  077C                     u5105:
  9681  077C  1D03               	skipz
  9682  077D  2F8A               	goto	l3637
  9683                           
  9684                           ;Main.c: 185:             *text++ = '.';
  9685  077E  302E               	movlw	46
  9686  077F  00FD               	movwf	??_FLOAT_to_string
  9687  0780  0020               	movlb	0	; select bank0
  9688  0781  0864               	movf	FLOAT_to_string@text,w
  9689  0782  0086               	movwf	6
  9690  0783  0187               	clrf	7
  9691  0784  087D               	movf	??_FLOAT_to_string,w
  9692  0785  0081               	movwf	1
  9693  0786  3001               	movlw	1
  9694  0787  00FD               	movwf	??_FLOAT_to_string
  9695  0788  087D               	movf	??_FLOAT_to_string,w
  9696  0789  07E4               	addwf	FLOAT_to_string@text,f
  9697  078A                     l3637:
  9698                           
  9699                           ;Main.c: 186:         number -= (tempo_float=tempo_int);
  9700  078A  0021               	movlb	1	; select bank1
  9701  078B  084A               	movf	FLOAT_to_string@tempo_int^(0+128),w
  9702  078C  00F9               	movwf	___xxtofl@val
  9703  078D  084B               	movf	(FLOAT_to_string@tempo_int+1)^(0+128),w
  9704  078E  00FA               	movwf	___xxtofl@val+1
  9705  078F  0D89               	rlf	9,f
  9706  0790  3B89               	subwfb	9,f
  9707  0791  0989               	comf	9,f
  9708  0792  00FB               	movwf	___xxtofl@val+2
  9709  0793  00FC               	movwf	___xxtofl@val+3
  9710  0794  3001               	movlw	1
  9711  0795  3188  2042  3185   	fcall	___xxtofl
  9712  0798  087C               	movf	?___xxtofl+3,w
  9713  0799  0021               	movlb	1	; select bank1
  9714  079A  00CF               	movwf	(FLOAT_to_string@tempo_float+3)^(0+128)
  9715  079B  087B               	movf	?___xxtofl+2,w
  9716  079C  00CE               	movwf	(FLOAT_to_string@tempo_float+2)^(0+128)
  9717  079D  087A               	movf	?___xxtofl+1,w
  9718  079E  00CD               	movwf	(FLOAT_to_string@tempo_float+1)^(0+128)
  9719  079F  0879               	movf	?___xxtofl,w
  9720  07A0  00CC               	movwf	FLOAT_to_string@tempo_float^(0+128)
  9721  07A1  084F               	movf	(FLOAT_to_string@tempo_float+3)^(0+128),w
  9722  07A2  0020               	movlb	0	; select bank0
  9723  07A3  00DB               	movwf	___flsub@a+3
  9724  07A4  0021               	movlb	1	; select bank1
  9725  07A5  084E               	movf	(FLOAT_to_string@tempo_float+2)^(0+128),w
  9726  07A6  0020               	movlb	0	; select bank0
  9727  07A7  00DA               	movwf	___flsub@a+2
  9728  07A8  0021               	movlb	1	; select bank1
  9729  07A9  084D               	movf	(FLOAT_to_string@tempo_float+1)^(0+128),w
  9730  07AA  0020               	movlb	0	; select bank0
  9731  07AB  00D9               	movwf	___flsub@a+1
  9732  07AC  0021               	movlb	1	; select bank1
  9733  07AD  084C               	movf	FLOAT_to_string@tempo_float^(0+128),w
  9734  07AE  0020               	movlb	0	; select bank0
  9735  07AF  00D8               	movwf	___flsub@a
  9736  07B0  0863               	movf	FLOAT_to_string@number+3,w
  9737  07B1  00DF               	movwf	___flsub@b+3
  9738  07B2  0862               	movf	FLOAT_to_string@number+2,w
  9739  07B3  00DE               	movwf	___flsub@b+2
  9740  07B4  0861               	movf	FLOAT_to_string@number+1,w
  9741  07B5  00DD               	movwf	___flsub@b+1
  9742  07B6  0860               	movf	FLOAT_to_string@number,w
  9743  07B7  00DC               	movwf	___flsub@b
  9744  07B8  3194  2472  3185   	fcall	___flsub
  9745  07BB  085B               	movf	?___flsub+3,w
  9746  07BC  00E3               	movwf	FLOAT_to_string@number+3
  9747  07BD  085A               	movf	?___flsub+2,w
  9748  07BE  00E2               	movwf	FLOAT_to_string@number+2
  9749  07BF  0859               	movf	?___flsub+1,w
  9750  07C0  00E1               	movwf	FLOAT_to_string@number+1
  9751  07C1  0858               	movf	?___flsub,w
  9752  07C2  00E0               	movwf	FLOAT_to_string@number
  9753                           
  9754                           ;Main.c: 187:         number = number *10.0;
  9755  07C3  3041               	movlw	65
  9756  07C4  00AD               	movwf	___flmul@b+3
  9757  07C5  3020               	movlw	32
  9758  07C6  00AC               	movwf	___flmul@b+2
  9759  07C7  3000               	movlw	0
  9760  07C8  00AB               	movwf	___flmul@b+1
  9761  07C9  3000               	movlw	0
  9762  07CA  00AA               	movwf	___flmul@b
  9763  07CB  0863               	movf	FLOAT_to_string@number+3,w
  9764  07CC  00B1               	movwf	___flmul@a+3
  9765  07CD  0862               	movf	FLOAT_to_string@number+2,w
  9766  07CE  00B0               	movwf	___flmul@a+2
  9767  07CF  0861               	movf	FLOAT_to_string@number+1,w
  9768  07D0  00AF               	movwf	___flmul@a+1
  9769  07D1  0860               	movf	FLOAT_to_string@number,w
  9770  07D2  00AE               	movwf	___flmul@a
  9771  07D3  3183  238A  3185   	fcall	___flmul
  9772  07D6  082D               	movf	?___flmul+3,w
  9773  07D7  00E3               	movwf	FLOAT_to_string@number+3
  9774  07D8  082C               	movf	?___flmul+2,w
  9775  07D9  00E2               	movwf	FLOAT_to_string@number+2
  9776  07DA  082B               	movf	?___flmul+1,w
  9777  07DB  00E1               	movwf	FLOAT_to_string@number+1
  9778  07DC  082A               	movf	?___flmul,w
  9779  07DD  00E0               	movwf	FLOAT_to_string@number
  9780                           
  9781                           ;Main.c: 188:     }
  9782  07DE  3001               	movlw	1
  9783  07DF  0021               	movlb	1	; select bank1
  9784  07E0  07D2               	addwf	FLOAT_to_string@cont_for^(0+128),f
  9785  07E1  3000               	movlw	0
  9786  07E2  3DD3               	addwfc	(FLOAT_to_string@cont_for+1)^(0+128),f
  9787  07E3  2F4B               	goto	l3643
  9788  07E4                     l3645:
  9789                           
  9790                           ;Main.c: 189:     *text =0;
  9791  07E4  0020               	movlb	0	; select bank0
  9792  07E5  0864               	movf	FLOAT_to_string@text,w
  9793  07E6  0086               	movwf	6
  9794  07E7  0187               	clrf	7
  9795  07E8  0181               	clrf	1
  9796  07E9  0008               	return
  9797  07EA                     __end_of_FLOAT_to_string:
  9798                           
  9799                           	psect	text38
  9800  0842                     __ptext38:	
  9801 ;; *************** function ___xxtofl *****************
  9802 ;; Defined at:
  9803 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  9804 ;; Parameters:    Size  Location     Type
  9805 ;;  sign            1    wreg     unsigned char 
  9806 ;;  val             4    9[COMMON] long 
  9807 ;; Auto vars:     Size  Location     Type
  9808 ;;  sign            1    4[BANK0 ] unsigned char 
  9809 ;;  arg             4    6[BANK0 ] unsigned long 
  9810 ;;  exp             1    5[BANK0 ] unsigned char 
  9811 ;; Return value:  Size  Location     Type
  9812 ;;                  4    9[COMMON] unsigned char 
  9813 ;; Registers used:
  9814 ;;		wreg, status,2, status,0
  9815 ;; Tracked objects:
  9816 ;;		On entry : 1E/0
  9817 ;;		On exit  : 1F/0
  9818 ;;		Unchanged: 0/0
  9819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9820 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9821 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9822 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9823 ;;      Totals:         4      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9824 ;;Total ram usage:       14 bytes
  9825 ;; Hardware stack levels used: 1
  9826 ;; This function calls:
  9827 ;;		Nothing
  9828 ;; This function is called by:
  9829 ;;		_FLOAT_to_string
  9830 ;;		_MLX90614_readObjectTempC
  9831 ;;		_MLX90614_readAmbientTempC
  9832 ;; This function uses a non-reentrant model
  9833 ;;
  9834                           
  9835                           
  9836                           ;psect for function ___xxtofl
  9837  0842                     ___xxtofl:
  9838                           
  9839                           ;incstack = 0
  9840                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  9841                           ;___xxtofl@sign stored from wreg
  9842  0842  0020               	movlb	0	; select bank0
  9843  0843  00A4               	movwf	___xxtofl@sign
  9844  0844  0824               	movf	___xxtofl@sign,w
  9845  0845  1D03               	btfss	3,2
  9846  0846  1FFC               	btfss	___xxtofl@val+3,7
  9847  0847  2858               	goto	l3477
  9848  0848  0979               	comf	___xxtofl@val,w
  9849  0849  00A6               	movwf	___xxtofl@arg
  9850  084A  097A               	comf	___xxtofl@val+1,w
  9851  084B  00A7               	movwf	___xxtofl@arg+1
  9852  084C  097B               	comf	___xxtofl@val+2,w
  9853  084D  00A8               	movwf	___xxtofl@arg+2
  9854  084E  097C               	comf	___xxtofl@val+3,w
  9855  084F  00A9               	movwf	___xxtofl@arg+3
  9856  0850  0AA6               	incf	___xxtofl@arg,f
  9857  0851  1903               	skipnz
  9858  0852  0AA7               	incf	___xxtofl@arg+1,f
  9859  0853  1903               	skipnz
  9860  0854  0AA8               	incf	___xxtofl@arg+2,f
  9861  0855  1903               	skipnz
  9862  0856  0AA9               	incf	___xxtofl@arg+3,f
  9863  0857  2860               	goto	l894
  9864  0858                     l3477:
  9865  0858  087C               	movf	___xxtofl@val+3,w
  9866  0859  00A9               	movwf	___xxtofl@arg+3
  9867  085A  087B               	movf	___xxtofl@val+2,w
  9868  085B  00A8               	movwf	___xxtofl@arg+2
  9869  085C  087A               	movf	___xxtofl@val+1,w
  9870  085D  00A7               	movwf	___xxtofl@arg+1
  9871  085E  0879               	movf	___xxtofl@val,w
  9872  085F  00A6               	movwf	___xxtofl@arg
  9873  0860                     l894:
  9874  0860  087C               	movf	___xxtofl@val+3,w
  9875  0861  047B               	iorwf	___xxtofl@val+2,w
  9876  0862  047A               	iorwf	___xxtofl@val+1,w
  9877  0863  0479               	iorwf	___xxtofl@val,w
  9878  0864  1D03               	skipz
  9879  0865  286F               	goto	l3483
  9880  0866  3000               	movlw	0
  9881  0867  00FC               	movwf	?___xxtofl+3
  9882  0868  3000               	movlw	0
  9883  0869  00FB               	movwf	?___xxtofl+2
  9884  086A  3000               	movlw	0
  9885  086B  00FA               	movwf	?___xxtofl+1
  9886  086C  3000               	movlw	0
  9887  086D  00F9               	movwf	?___xxtofl
  9888  086E  0008               	return
  9889  086F                     l3483:
  9890  086F  3096               	movlw	150
  9891  0870  00A0               	movwf	??___xxtofl
  9892  0871  0820               	movf	??___xxtofl,w
  9893  0872  00A5               	movwf	___xxtofl@exp
  9894  0873                     l3487:
  9895  0873  30FE               	movlw	254
  9896  0874  0529               	andwf	___xxtofl@arg+3,w
  9897  0875  1903               	btfsc	3,2
  9898  0876  2896               	goto	l900
  9899  0877  3001               	movlw	1
  9900  0878  00A0               	movwf	??___xxtofl
  9901  0879  0820               	movf	??___xxtofl,w
  9902  087A  07A5               	addwf	___xxtofl@exp,f
  9903  087B  3001               	movlw	1
  9904  087C                     u4895:
  9905  087C  36A9               	lsrf	___xxtofl@arg+3,f
  9906  087D  0CA8               	rrf	___xxtofl@arg+2,f
  9907  087E  0CA7               	rrf	___xxtofl@arg+1,f
  9908  087F  0CA6               	rrf	___xxtofl@arg,f
  9909  0880  0B89               	decfsz	9,f
  9910  0881  287C               	goto	u4895
  9911  0882  2873               	goto	l3487
  9912  0883                     l3489:
  9913  0883  3001               	movlw	1
  9914  0884  00A0               	movwf	??___xxtofl
  9915  0885  0820               	movf	??___xxtofl,w
  9916  0886  07A5               	addwf	___xxtofl@exp,f
  9917  0887  3001               	movlw	1
  9918  0888  07A6               	addwf	___xxtofl@arg,f
  9919  0889  3000               	movlw	0
  9920  088A  3DA7               	addwfc	___xxtofl@arg+1,f
  9921  088B  3000               	movlw	0
  9922  088C  3DA8               	addwfc	___xxtofl@arg+2,f
  9923  088D  3000               	movlw	0
  9924  088E  3DA9               	addwfc	___xxtofl@arg+3,f
  9925  088F  3001               	movlw	1
  9926  0890                     u4915:
  9927  0890  36A9               	lsrf	___xxtofl@arg+3,f
  9928  0891  0CA8               	rrf	___xxtofl@arg+2,f
  9929  0892  0CA7               	rrf	___xxtofl@arg+1,f
  9930  0893  0CA6               	rrf	___xxtofl@arg,f
  9931  0894  0B89               	decfsz	9,f
  9932  0895  2890               	goto	u4915
  9933  0896                     l900:
  9934  0896  30FF               	movlw	255
  9935  0897  0529               	andwf	___xxtofl@arg+3,w
  9936  0898  1903               	btfsc	3,2
  9937  0899  28A8               	goto	l3497
  9938  089A  2883               	goto	l3489
  9939  089B                     l3499:
  9940  089B  3002               	movlw	2
  9941  089C  0225               	subwf	___xxtofl@exp,w
  9942  089D  1C03               	btfss	3,0
  9943  089E  28AA               	goto	l907
  9944  089F  3001               	movlw	1
  9945  08A0  02A5               	subwf	___xxtofl@exp,f
  9946  08A1  3001               	movlw	1
  9947  08A2                     u4935:
  9948  08A2  35A6               	lslf	___xxtofl@arg,f
  9949  08A3  0DA7               	rlf	___xxtofl@arg+1,f
  9950  08A4  0DA8               	rlf	___xxtofl@arg+2,f
  9951  08A5  0DA9               	rlf	___xxtofl@arg+3,f
  9952  08A6  0B89               	decfsz	9,f
  9953  08A7  28A2               	goto	u4935
  9954  08A8                     l3497:
  9955  08A8  1FA8               	btfss	___xxtofl@arg+2,7
  9956  08A9  289B               	goto	l3499
  9957  08AA                     l907:
  9958  08AA  1825               	btfsc	___xxtofl@exp,0
  9959  08AB  28B4               	goto	l908
  9960  08AC  30FF               	movlw	255
  9961  08AD  05A6               	andwf	___xxtofl@arg,f
  9962  08AE  30FF               	movlw	255
  9963  08AF  05A7               	andwf	___xxtofl@arg+1,f
  9964  08B0  307F               	movlw	127
  9965  08B1  05A8               	andwf	___xxtofl@arg+2,f
  9966  08B2  30FF               	movlw	255
  9967  08B3  05A9               	andwf	___xxtofl@arg+3,f
  9968  08B4                     l908:
  9969  08B4  1003               	clrc
  9970  08B5  0CA5               	rrf	___xxtofl@exp,f
  9971  08B6  0825               	movf	___xxtofl@exp,w
  9972  08B7  00A0               	movwf	??___xxtofl
  9973  08B8  01A1               	clrf	??___xxtofl+1
  9974  08B9  01A2               	clrf	??___xxtofl+2
  9975  08BA  01A3               	clrf	??___xxtofl+3
  9976  08BB  3018               	movlw	24
  9977  08BC                     u4975:
  9978  08BC  35A0               	lslf	??___xxtofl,f
  9979  08BD  0DA1               	rlf	??___xxtofl+1,f
  9980  08BE  0DA2               	rlf	??___xxtofl+2,f
  9981  08BF  0DA3               	rlf	??___xxtofl+3,f
  9982  08C0  0B89               	decfsz	9,f
  9983  08C1  28BC               	goto	u4975
  9984  08C2  0820               	movf	??___xxtofl,w
  9985  08C3  04A6               	iorwf	___xxtofl@arg,f
  9986  08C4  0821               	movf	??___xxtofl+1,w
  9987  08C5  04A7               	iorwf	___xxtofl@arg+1,f
  9988  08C6  0822               	movf	??___xxtofl+2,w
  9989  08C7  04A8               	iorwf	___xxtofl@arg+2,f
  9990  08C8  0823               	movf	??___xxtofl+3,w
  9991  08C9  04A9               	iorwf	___xxtofl@arg+3,f
  9992  08CA  0824               	movf	___xxtofl@sign,w
  9993  08CB  1D03               	btfss	3,2
  9994  08CC  1FFC               	btfss	___xxtofl@val+3,7
  9995  08CD  28CF               	goto	l3511
  9996  08CE  17A9               	bsf	___xxtofl@arg+3,7
  9997  08CF                     l3511:
  9998  08CF  0829               	movf	___xxtofl@arg+3,w
  9999  08D0  00FC               	movwf	?___xxtofl+3
 10000  08D1  0828               	movf	___xxtofl@arg+2,w
 10001  08D2  00FB               	movwf	?___xxtofl+2
 10002  08D3  0827               	movf	___xxtofl@arg+1,w
 10003  08D4  00FA               	movwf	?___xxtofl+1
 10004  08D5  0826               	movf	___xxtofl@arg,w
 10005  08D6  00F9               	movwf	?___xxtofl
 10006  08D7  0008               	return
 10007  08D8                     __end_of___xxtofl:
 10008                           
 10009                           	psect	text39
 10010  1720                     __ptext39:	
 10011 ;; *************** function ___fltol *****************
 10012 ;; Defined at:
 10013 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
 10014 ;; Parameters:    Size  Location     Type
 10015 ;;  f1              4    0[COMMON] unsigned char 
 10016 ;; Auto vars:     Size  Location     Type
 10017 ;;  exp1            1   10[COMMON] unsigned char 
 10018 ;;  sign1           1    9[COMMON] unsigned char 
 10019 ;; Return value:  Size  Location     Type
 10020 ;;                  4    0[COMMON] long 
 10021 ;; Registers used:
 10022 ;;		wreg, status,2, status,0
 10023 ;; Tracked objects:
 10024 ;;		On entry : 1F/0
 10025 ;;		On exit  : 1F/0
 10026 ;;		Unchanged: 1F/0
 10027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10028 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10029 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10030 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10031 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10032 ;;Total ram usage:       11 bytes
 10033 ;; Hardware stack levels used: 1
 10034 ;; This function calls:
 10035 ;;		Nothing
 10036 ;; This function is called by:
 10037 ;;		_FLOAT_to_string
 10038 ;; This function uses a non-reentrant model
 10039 ;;
 10040                           
 10041                           
 10042                           ;psect for function ___fltol
 10043  1720                     ___fltol:
 10044                           
 10045                           ;incstack = 0
 10046                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 10047  1720  1003               	clrc
 10048  1721  0D72               	rlf	___fltol@f1+2,w
 10049  1722  0D73               	rlf	___fltol@f1+3,w
 10050  1723  00F4               	movwf	??___fltol
 10051  1724  0874               	movf	??___fltol,w
 10052  1725  00FA               	movwf	___fltol@exp1
 10053  1726  087A               	movf	___fltol@exp1,w
 10054  1727  1D03               	btfss	3,2
 10055  1728  2F32               	goto	l3155
 10056  1729                     l3151:
 10057  1729  3000               	movlw	0
 10058  172A  00F3               	movwf	?___fltol+3
 10059  172B  3000               	movlw	0
 10060  172C  00F2               	movwf	?___fltol+2
 10061  172D  3000               	movlw	0
 10062  172E  00F1               	movwf	?___fltol+1
 10063  172F  3000               	movlw	0
 10064  1730  00F0               	movwf	?___fltol
 10065  1731  0008               	return
 10066  1732                     l3155:
 10067  1732  0870               	movf	___fltol@f1,w
 10068  1733  00F4               	movwf	??___fltol
 10069  1734  0871               	movf	___fltol@f1+1,w
 10070  1735  00F5               	movwf	??___fltol+1
 10071  1736  0872               	movf	___fltol@f1+2,w
 10072  1737  00F6               	movwf	??___fltol+2
 10073  1738  0873               	movf	___fltol@f1+3,w
 10074  1739  00F7               	movwf	??___fltol+3
 10075  173A  301F               	movlw	31
 10076  173B                     u4235:
 10077  173B  36F7               	lsrf	??___fltol+3,f
 10078  173C  0CF6               	rrf	??___fltol+2,f
 10079  173D  0CF5               	rrf	??___fltol+1,f
 10080  173E  0CF4               	rrf	??___fltol,f
 10081  173F  0B89               	decfsz	9,f
 10082  1740  2F3B               	goto	u4235
 10083  1741  0874               	movf	??___fltol,w
 10084  1742  00F8               	movwf	??___fltol+4
 10085  1743  0878               	movf	??___fltol+4,w
 10086  1744  00F9               	movwf	___fltol@sign1
 10087  1745  17F2               	bsf	___fltol@f1+2,7
 10088  1746  30FF               	movlw	255
 10089  1747  05F0               	andwf	___fltol@f1,f
 10090  1748  30FF               	movlw	255
 10091  1749  05F1               	andwf	___fltol@f1+1,f
 10092  174A  30FF               	movlw	255
 10093  174B  05F2               	andwf	___fltol@f1+2,f
 10094  174C  3000               	movlw	0
 10095  174D  05F3               	andwf	___fltol@f1+3,f
 10096  174E  3096               	movlw	150
 10097  174F  02FA               	subwf	___fltol@exp1,f
 10098  1750  1FFA               	btfss	___fltol@exp1,7
 10099  1751  2F65               	goto	l3173
 10100  1752  087A               	movf	___fltol@exp1,w
 10101  1753  3A80               	xorlw	128
 10102  1754  3E97               	addlw	151
 10103  1755  1C03               	btfss	3,0
 10104  1756  2F29               	goto	l3151
 10105  1757                     l3171:
 10106  1757  3001               	movlw	1
 10107  1758                     u4265:
 10108  1758  36F3               	lsrf	___fltol@f1+3,f
 10109  1759  0CF2               	rrf	___fltol@f1+2,f
 10110  175A  0CF1               	rrf	___fltol@f1+1,f
 10111  175B  0CF0               	rrf	___fltol@f1,f
 10112  175C  0B89               	decfsz	9,f
 10113  175D  2F58               	goto	u4265
 10114  175E  3001               	movlw	1
 10115  175F  00F4               	movwf	??___fltol
 10116  1760  0874               	movf	??___fltol,w
 10117  1761  07FA               	addwf	___fltol@exp1,f
 10118  1762  1903               	btfsc	3,2
 10119  1763  2F76               	goto	l3181
 10120  1764  2F57               	goto	l3171
 10121  1765                     l3173:
 10122  1765  3020               	movlw	32
 10123  1766  027A               	subwf	___fltol@exp1,w
 10124  1767  1803               	btfsc	3,0
 10125  1768  2F29               	goto	l3151
 10126  1769                     l654:
 10127  1769  087A               	movf	___fltol@exp1,w
 10128  176A  1903               	btfsc	3,2
 10129  176B  2F76               	goto	l3181
 10130  176C  3001               	movlw	1
 10131  176D                     u4295:
 10132  176D  35F0               	lslf	___fltol@f1,f
 10133  176E  0DF1               	rlf	___fltol@f1+1,f
 10134  176F  0DF2               	rlf	___fltol@f1+2,f
 10135  1770  0DF3               	rlf	___fltol@f1+3,f
 10136  1771  0B89               	decfsz	9,f
 10137  1772  2F6D               	goto	u4295
 10138  1773  3001               	movlw	1
 10139  1774  02FA               	subwf	___fltol@exp1,f
 10140  1775  2F69               	goto	l654
 10141  1776                     l3181:
 10142  1776  0879               	movf	___fltol@sign1,w
 10143  1777  1903               	btfsc	3,2
 10144  1778  0008               	return
 10145  1779  09F0               	comf	___fltol@f1,f
 10146  177A  09F1               	comf	___fltol@f1+1,f
 10147  177B  09F2               	comf	___fltol@f1+2,f
 10148  177C  09F3               	comf	___fltol@f1+3,f
 10149  177D  0AF0               	incf	___fltol@f1,f
 10150  177E  1903               	skipnz
 10151  177F  0AF1               	incf	___fltol@f1+1,f
 10152  1780  1903               	skipnz
 10153  1781  0AF2               	incf	___fltol@f1+2,f
 10154  1782  1903               	skipnz
 10155  1783  0AF3               	incf	___fltol@f1+3,f
 10156  1784  0008               	return
 10157  1785                     __end_of___fltol:
 10158                           
 10159                           	psect	text40
 10160  1472                     __ptext40:	
 10161 ;; *************** function ___flsub *****************
 10162 ;; Defined at:
 10163 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
 10164 ;; Parameters:    Size  Location     Type
 10165 ;;  a               4   56[BANK0 ] long 
 10166 ;;  b               4   60[BANK0 ] long 
 10167 ;; Auto vars:     Size  Location     Type
 10168 ;;		None
 10169 ;; Return value:  Size  Location     Type
 10170 ;;                  4   56[BANK0 ] long 
 10171 ;; Registers used:
 10172 ;;		wreg, status,2, status,0, pclath, cstack
 10173 ;; Tracked objects:
 10174 ;;		On entry : 1F/0
 10175 ;;		On exit  : 1F/0
 10176 ;;		Unchanged: 0/0
 10177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10178 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10181 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10182 ;;Total ram usage:        8 bytes
 10183 ;; Hardware stack levels used: 1
 10184 ;; Hardware stack levels required when called: 1
 10185 ;; This function calls:
 10186 ;;		___fladd
 10187 ;; This function is called by:
 10188 ;;		_FLOAT_to_string
 10189 ;; This function uses a non-reentrant model
 10190 ;;
 10191                           
 10192                           
 10193                           ;psect for function ___flsub
 10194  1472                     ___flsub:
 10195                           
 10196                           ;incstack = 0
 10197                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 10198  1472  3080               	movlw	128
 10199  1473  06DB               	xorwf	___flsub@a+3,f
 10200  1474  085F               	movf	___flsub@b+3,w
 10201  1475  00C7               	movwf	___fladd@b+3
 10202  1476  085E               	movf	___flsub@b+2,w
 10203  1477  00C6               	movwf	___fladd@b+2
 10204  1478  085D               	movf	___flsub@b+1,w
 10205  1479  00C5               	movwf	___fladd@b+1
 10206  147A  085C               	movf	___flsub@b,w
 10207  147B  00C4               	movwf	___fladd@b
 10208  147C  085B               	movf	___flsub@a+3,w
 10209  147D  00CB               	movwf	___fladd@a+3
 10210  147E  085A               	movf	___flsub@a+2,w
 10211  147F  00CA               	movwf	___fladd@a+2
 10212  1480  0859               	movf	___flsub@a+1,w
 10213  1481  00C9               	movwf	___fladd@a+1
 10214  1482  0858               	movf	___flsub@a,w
 10215  1483  00C8               	movwf	___fladd@a
 10216  1484  3181  21A9         	fcall	___fladd
 10217  1486  0847               	movf	?___fladd+3,w
 10218  1487  00DB               	movwf	?___flsub+3
 10219  1488  0846               	movf	?___fladd+2,w
 10220  1489  00DA               	movwf	?___flsub+2
 10221  148A  0845               	movf	?___fladd+1,w
 10222  148B  00D9               	movwf	?___flsub+1
 10223  148C  0844               	movf	?___fladd,w
 10224  148D  00D8               	movwf	?___flsub
 10225  148E  0008               	return
 10226  148F                     __end_of___flsub:
 10227                           
 10228                           	psect	text41
 10229  01A9                     __ptext41:	
 10230 ;; *************** function ___fladd *****************
 10231 ;; Defined at:
 10232 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
 10233 ;; Parameters:    Size  Location     Type
 10234 ;;  b               4   36[BANK0 ] long 
 10235 ;;  a               4   40[BANK0 ] long 
 10236 ;; Auto vars:     Size  Location     Type
 10237 ;;  grs             1   55[BANK0 ] unsigned char 
 10238 ;;  bexp            1   54[BANK0 ] unsigned char 
 10239 ;;  aexp            1   53[BANK0 ] unsigned char 
 10240 ;;  signs           1   52[BANK0 ] unsigned char 
 10241 ;; Return value:  Size  Location     Type
 10242 ;;                  4   36[BANK0 ] unsigned char 
 10243 ;; Registers used:
 10244 ;;		wreg, status,2, status,0
 10245 ;; Tracked objects:
 10246 ;;		On entry : 1F/0
 10247 ;;		On exit  : 1F/0
 10248 ;;		Unchanged: 0/0
 10249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10250 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10251 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10252 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10253 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10254 ;;Total ram usage:       20 bytes
 10255 ;; Hardware stack levels used: 1
 10256 ;; This function calls:
 10257 ;;		Nothing
 10258 ;; This function is called by:
 10259 ;;		_FLOAT_to_string
 10260 ;;		_MLX90614_readObjectTempC
 10261 ;;		_MLX90614_readAmbientTempC
 10262 ;;		___flsub
 10263 ;; This function uses a non-reentrant model
 10264 ;;
 10265                           
 10266                           
 10267                           ;psect for function ___fladd
 10268  01A9                     ___fladd:
 10269                           
 10270                           ;incstack = 0
 10271                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 10272  01A9  0847               	movf	___fladd@b+3,w
 10273  01AA  3980               	andlw	128
 10274  01AB  00CC               	movwf	??___fladd
 10275  01AC  084C               	movf	??___fladd,w
 10276  01AD  00D4               	movwf	___fladd@signs
 10277  01AE  3547               	lslf	___fladd@b+3,w
 10278  01AF  00CC               	movwf	??___fladd
 10279  01B0  084C               	movf	??___fladd,w
 10280  01B1  00D6               	movwf	___fladd@bexp
 10281  01B2  1BC6               	btfsc	___fladd@b+2,7
 10282  01B3  1456               	bsf	___fladd@bexp,0
 10283  01B4  0856               	movf	___fladd@bexp,w
 10284  01B5  1903               	btfsc	3,2
 10285  01B6  29C5               	goto	l2857
 10286  01B7  0A56               	incf	___fladd@bexp,w
 10287  01B8  1D03               	btfss	3,2
 10288  01B9  29C2               	goto	l2853
 10289  01BA  3000               	movlw	0
 10290  01BB  00C7               	movwf	___fladd@b+3
 10291  01BC  3000               	movlw	0
 10292  01BD  00C6               	movwf	___fladd@b+2
 10293  01BE  3000               	movlw	0
 10294  01BF  00C5               	movwf	___fladd@b+1
 10295  01C0  3000               	movlw	0
 10296  01C1  00C4               	movwf	___fladd@b
 10297  01C2                     l2853:
 10298  01C2  17C6               	bsf	___fladd@b+2,7
 10299  01C3  01C7               	clrf	___fladd@b+3
 10300  01C4  29CD               	goto	l2859
 10301  01C5                     l2857:
 10302  01C5  3000               	movlw	0
 10303  01C6  00C7               	movwf	___fladd@b+3
 10304  01C7  3000               	movlw	0
 10305  01C8  00C6               	movwf	___fladd@b+2
 10306  01C9  3000               	movlw	0
 10307  01CA  00C5               	movwf	___fladd@b+1
 10308  01CB  3000               	movlw	0
 10309  01CC  00C4               	movwf	___fladd@b
 10310  01CD                     l2859:
 10311  01CD  084B               	movf	___fladd@a+3,w
 10312  01CE  3980               	andlw	128
 10313  01CF  00CC               	movwf	??___fladd
 10314  01D0  084C               	movf	??___fladd,w
 10315  01D1  00D5               	movwf	___fladd@aexp
 10316  01D2  0855               	movf	___fladd@aexp,w
 10317  01D3  0654               	xorwf	___fladd@signs,w
 10318  01D4  1D03               	btfss	3,2
 10319  01D5  1754               	bsf	___fladd@signs,6
 10320  01D6  354B               	lslf	___fladd@a+3,w
 10321  01D7  00CC               	movwf	??___fladd
 10322  01D8  084C               	movf	??___fladd,w
 10323  01D9  00D5               	movwf	___fladd@aexp
 10324  01DA  1BCA               	btfsc	___fladd@a+2,7
 10325  01DB  1455               	bsf	___fladd@aexp,0
 10326  01DC  0855               	movf	___fladd@aexp,w
 10327  01DD  1903               	btfsc	3,2
 10328  01DE  29ED               	goto	l2881
 10329  01DF  0A55               	incf	___fladd@aexp,w
 10330  01E0  1D03               	btfss	3,2
 10331  01E1  29EA               	goto	l2877
 10332  01E2  3000               	movlw	0
 10333  01E3  00CB               	movwf	___fladd@a+3
 10334  01E4  3000               	movlw	0
 10335  01E5  00CA               	movwf	___fladd@a+2
 10336  01E6  3000               	movlw	0
 10337  01E7  00C9               	movwf	___fladd@a+1
 10338  01E8  3000               	movlw	0
 10339  01E9  00C8               	movwf	___fladd@a
 10340  01EA                     l2877:
 10341  01EA  17CA               	bsf	___fladd@a+2,7
 10342  01EB  01CB               	clrf	___fladd@a+3
 10343  01EC  29F5               	goto	l754
 10344  01ED                     l2881:
 10345  01ED  3000               	movlw	0
 10346  01EE  00CB               	movwf	___fladd@a+3
 10347  01EF  3000               	movlw	0
 10348  01F0  00CA               	movwf	___fladd@a+2
 10349  01F1  3000               	movlw	0
 10350  01F2  00C9               	movwf	___fladd@a+1
 10351  01F3  3000               	movlw	0
 10352  01F4  00C8               	movwf	___fladd@a
 10353  01F5                     l754:
 10354  01F5  0856               	movf	___fladd@bexp,w
 10355  01F6  0255               	subwf	___fladd@aexp,w
 10356  01F7  1803               	skipnc
 10357  01F8  2A3B               	goto	l2917
 10358  01F9  1F54               	btfss	___fladd@signs,6
 10359  01FA  29FF               	goto	l2887
 10360  01FB  3080               	movlw	128
 10361  01FC  00CC               	movwf	??___fladd
 10362  01FD  084C               	movf	??___fladd,w
 10363  01FE  06D4               	xorwf	___fladd@signs,f
 10364  01FF                     l2887:
 10365  01FF  0856               	movf	___fladd@bexp,w
 10366  0200  00CC               	movwf	??___fladd
 10367  0201  084C               	movf	??___fladd,w
 10368  0202  00D7               	movwf	___fladd@grs
 10369  0203  0855               	movf	___fladd@aexp,w
 10370  0204  00CC               	movwf	??___fladd
 10371  0205  084C               	movf	??___fladd,w
 10372  0206  00D6               	movwf	___fladd@bexp
 10373  0207  0857               	movf	___fladd@grs,w
 10374  0208  00CC               	movwf	??___fladd
 10375  0209  084C               	movf	??___fladd,w
 10376  020A  00D5               	movwf	___fladd@aexp
 10377  020B  0844               	movf	___fladd@b,w
 10378  020C  00CC               	movwf	??___fladd
 10379  020D  084C               	movf	??___fladd,w
 10380  020E  00D7               	movwf	___fladd@grs
 10381  020F  0848               	movf	___fladd@a,w
 10382  0210  00CC               	movwf	??___fladd
 10383  0211  084C               	movf	??___fladd,w
 10384  0212  00C4               	movwf	___fladd@b
 10385  0213  0857               	movf	___fladd@grs,w
 10386  0214  00CC               	movwf	??___fladd
 10387  0215  084C               	movf	??___fladd,w
 10388  0216  00C8               	movwf	___fladd@a
 10389  0217  0845               	movf	___fladd@b+1,w
 10390  0218  00CC               	movwf	??___fladd
 10391  0219  084C               	movf	??___fladd,w
 10392  021A  00D7               	movwf	___fladd@grs
 10393  021B  0849               	movf	___fladd@a+1,w
 10394  021C  00CC               	movwf	??___fladd
 10395  021D  084C               	movf	??___fladd,w
 10396  021E  00C5               	movwf	___fladd@b+1
 10397  021F  0857               	movf	___fladd@grs,w
 10398  0220  00CC               	movwf	??___fladd
 10399  0221  084C               	movf	??___fladd,w
 10400  0222  00C9               	movwf	___fladd@a+1
 10401  0223  0846               	movf	___fladd@b+2,w
 10402  0224  00CC               	movwf	??___fladd
 10403  0225  084C               	movf	??___fladd,w
 10404  0226  00D7               	movwf	___fladd@grs
 10405  0227  084A               	movf	___fladd@a+2,w
 10406  0228  00CC               	movwf	??___fladd
 10407  0229  084C               	movf	??___fladd,w
 10408  022A  00C6               	movwf	___fladd@b+2
 10409  022B  0857               	movf	___fladd@grs,w
 10410  022C  00CC               	movwf	??___fladd
 10411  022D  084C               	movf	??___fladd,w
 10412  022E  00CA               	movwf	___fladd@a+2
 10413  022F  0847               	movf	___fladd@b+3,w
 10414  0230  00CC               	movwf	??___fladd
 10415  0231  084C               	movf	??___fladd,w
 10416  0232  00D7               	movwf	___fladd@grs
 10417  0233  084B               	movf	___fladd@a+3,w
 10418  0234  00CC               	movwf	??___fladd
 10419  0235  084C               	movf	??___fladd,w
 10420  0236  00C7               	movwf	___fladd@b+3
 10421  0237  0857               	movf	___fladd@grs,w
 10422  0238  00CC               	movwf	??___fladd
 10423  0239  084C               	movf	??___fladd,w
 10424  023A  00CB               	movwf	___fladd@a+3
 10425  023B                     l2917:
 10426  023B  01D7               	clrf	___fladd@grs
 10427  023C  0855               	movf	___fladd@aexp,w
 10428  023D  00CC               	movwf	??___fladd
 10429  023E  01CD               	clrf	??___fladd+1
 10430  023F  084D               	movf	??___fladd+1,w
 10431  0240  00CF               	movwf	??___fladd+3
 10432  0241  0856               	movf	___fladd@bexp,w
 10433  0242  024C               	subwf	??___fladd,w
 10434  0243  00CE               	movwf	??___fladd+2
 10435  0244  1C03               	skipc
 10436  0245  03CF               	decf	??___fladd+3,f
 10437  0246  084F               	movf	??___fladd+3,w
 10438  0247  3A80               	xorlw	128
 10439  0248  00D0               	movwf	??___fladd+4
 10440  0249  3080               	movlw	128
 10441  024A  0250               	subwf	??___fladd+4,w
 10442  024B  1D03               	skipz
 10443  024C  2A4F               	goto	u3675
 10444  024D  301A               	movlw	26
 10445  024E  024E               	subwf	??___fladd+2,w
 10446  024F                     u3675:
 10447  024F  1C03               	skipc
 10448  0250  2A83               	goto	l2935
 10449  0251  0020               	movlb	0	; select bank0
 10450  0252  0847               	movf	___fladd@b+3,w
 10451  0253  0446               	iorwf	___fladd@b+2,w
 10452  0254  0445               	iorwf	___fladd@b+1,w
 10453  0255  0444               	iorwf	___fladd@b,w
 10454  0256  1903               	btfsc	3,2
 10455  0257  2A5A               	goto	u3680
 10456  0258  3001               	movlw	1
 10457  0259  2A5B               	goto	u3690
 10458  025A                     u3680:
 10459  025A  3000               	movlw	0
 10460  025B                     u3690:
 10461  025B  00CC               	movwf	??___fladd
 10462  025C  084C               	movf	??___fladd,w
 10463  025D  00D7               	movwf	___fladd@grs
 10464  025E  3000               	movlw	0
 10465  025F  00C7               	movwf	___fladd@b+3
 10466  0260  3000               	movlw	0
 10467  0261  00C6               	movwf	___fladd@b+2
 10468  0262  3000               	movlw	0
 10469  0263  00C5               	movwf	___fladd@b+1
 10470  0264  3000               	movlw	0
 10471  0265  00C4               	movwf	___fladd@b
 10472  0266  0855               	movf	___fladd@aexp,w
 10473  0267  00CC               	movwf	??___fladd
 10474  0268  084C               	movf	??___fladd,w
 10475  0269  00D6               	movwf	___fladd@bexp
 10476  026A  2A88               	goto	l758
 10477  026B                     l760:
 10478  026B  1C57               	btfss	___fladd@grs,0
 10479  026C  2A73               	goto	l2925
 10480  026D  3657               	lsrf	___fladd@grs,w
 10481  026E  3801               	iorlw	1
 10482  026F  00CC               	movwf	??___fladd
 10483  0270  084C               	movf	??___fladd,w
 10484  0271  00D7               	movwf	___fladd@grs
 10485  0272  2A75               	goto	l2927
 10486  0273                     l2925:
 10487  0273  1003               	clrc
 10488  0274  0CD7               	rrf	___fladd@grs,f
 10489  0275                     l2927:
 10490  0275  1844               	btfsc	___fladd@b,0
 10491  0276  17D7               	bsf	___fladd@grs,7
 10492  0277  3001               	movlw	1
 10493  0278  00CC               	movwf	??___fladd
 10494  0279                     u3725:
 10495  0279  37C7               	asrf	___fladd@b+3,f
 10496  027A  0CC6               	rrf	___fladd@b+2,f
 10497  027B  0CC5               	rrf	___fladd@b+1,f
 10498  027C  0CC4               	rrf	___fladd@b,f
 10499  027D  0BCC               	decfsz	??___fladd& (0+127),f
 10500  027E  2A79               	goto	u3725
 10501  027F  3001               	movlw	1
 10502  0280  00CC               	movwf	??___fladd
 10503  0281  084C               	movf	??___fladd,w
 10504  0282  07D6               	addwf	___fladd@bexp,f
 10505  0283                     l2935:
 10506  0283  0020               	movlb	0	; select bank0
 10507  0284  0855               	movf	___fladd@aexp,w
 10508  0285  0256               	subwf	___fladd@bexp,w
 10509  0286  1C03               	skipc
 10510  0287  2A6B               	goto	l760
 10511  0288                     l758:
 10512  0288  1B54               	btfsc	___fladd@signs,6
 10513  0289  2AB9               	goto	l2961
 10514  028A  0856               	movf	___fladd@bexp,w
 10515  028B  1D03               	btfss	3,2
 10516  028C  2A96               	goto	l2943
 10517  028D  3000               	movlw	0
 10518  028E  00C7               	movwf	?___fladd+3
 10519  028F  3000               	movlw	0
 10520  0290  00C6               	movwf	?___fladd+2
 10521  0291  3000               	movlw	0
 10522  0292  00C5               	movwf	?___fladd+1
 10523  0293  3000               	movlw	0
 10524  0294  00C4               	movwf	?___fladd
 10525  0295  0008               	return
 10526  0296                     l2943:
 10527  0296  0848               	movf	___fladd@a,w
 10528  0297  07C4               	addwf	___fladd@b,f
 10529  0298  0849               	movf	___fladd@a+1,w
 10530  0299  3DC5               	addwfc	___fladd@b+1,f
 10531  029A  084A               	movf	___fladd@a+2,w
 10532  029B  3DC6               	addwfc	___fladd@b+2,f
 10533  029C  084B               	movf	___fladd@a+3,w
 10534  029D  3DC7               	addwfc	___fladd@b+3,f
 10535  029E  1C47               	btfss	___fladd@b+3,0
 10536  029F  2B33               	goto	l2995
 10537  02A0  1C57               	btfss	___fladd@grs,0
 10538  02A1  2AA8               	goto	l2951
 10539  02A2  3657               	lsrf	___fladd@grs,w
 10540  02A3  3801               	iorlw	1
 10541  02A4  00CC               	movwf	??___fladd
 10542  02A5  084C               	movf	??___fladd,w
 10543  02A6  00D7               	movwf	___fladd@grs
 10544  02A7  2AAA               	goto	l2953
 10545  02A8                     l2951:
 10546  02A8  1003               	clrc
 10547  02A9  0CD7               	rrf	___fladd@grs,f
 10548  02AA                     l2953:
 10549  02AA  1844               	btfsc	___fladd@b,0
 10550  02AB  17D7               	bsf	___fladd@grs,7
 10551  02AC  3001               	movlw	1
 10552  02AD  00CC               	movwf	??___fladd
 10553  02AE                     u3795:
 10554  02AE  37C7               	asrf	___fladd@b+3,f
 10555  02AF  0CC6               	rrf	___fladd@b+2,f
 10556  02B0  0CC5               	rrf	___fladd@b+1,f
 10557  02B1  0CC4               	rrf	___fladd@b,f
 10558  02B2  0BCC               	decfsz	??___fladd& (0+127),f
 10559  02B3  2AAE               	goto	u3795
 10560  02B4  3001               	movlw	1
 10561  02B5  00CC               	movwf	??___fladd
 10562  02B6  084C               	movf	??___fladd,w
 10563  02B7  07D6               	addwf	___fladd@bexp,f
 10564  02B8  2B33               	goto	l2995
 10565  02B9                     l2961:
 10566  02B9  0847               	movf	___fladd@b+3,w
 10567  02BA  3A80               	xorlw	128
 10568  02BB  00CC               	movwf	??___fladd
 10569  02BC  084B               	movf	___fladd@a+3,w
 10570  02BD  3A80               	xorlw	128
 10571  02BE  024C               	subwf	??___fladd,w
 10572  02BF  1D03               	skipz
 10573  02C0  2ACB               	goto	u3803
 10574  02C1  084A               	movf	___fladd@a+2,w
 10575  02C2  0246               	subwf	___fladd@b+2,w
 10576  02C3  1D03               	skipz
 10577  02C4  2ACB               	goto	u3803
 10578  02C5  0849               	movf	___fladd@a+1,w
 10579  02C6  0245               	subwf	___fladd@b+1,w
 10580  02C7  1D03               	skipz
 10581  02C8  2ACB               	goto	u3803
 10582  02C9  0848               	movf	___fladd@a,w
 10583  02CA  0244               	subwf	___fladd@b,w
 10584  02CB                     u3803:
 10585  02CB  1803               	skipnc
 10586  02CC  2B03               	goto	l2971
 10587  02CD  30FF               	movlw	255
 10588  02CE  00CC               	movwf	??___fladd
 10589  02CF  30FF               	movlw	255
 10590  02D0  00CD               	movwf	??___fladd+1
 10591  02D1  30FF               	movlw	255
 10592  02D2  00CE               	movwf	??___fladd+2
 10593  02D3  30FF               	movlw	255
 10594  02D4  00CF               	movwf	??___fladd+3
 10595  02D5  0844               	movf	___fladd@b,w
 10596  02D6  0248               	subwf	___fladd@a,w
 10597  02D7  00D0               	movwf	??___fladd+4
 10598  02D8  0845               	movf	___fladd@b+1,w
 10599  02D9  3B49               	subwfb	___fladd@a+1,w
 10600  02DA  00D1               	movwf	??___fladd+5
 10601  02DB  0846               	movf	___fladd@b+2,w
 10602  02DC  3B4A               	subwfb	___fladd@a+2,w
 10603  02DD  00D2               	movwf	??___fladd+6
 10604  02DE  0847               	movf	___fladd@b+3,w
 10605  02DF  3B4B               	subwfb	___fladd@a+3,w
 10606  02E0  00D3               	movwf	??___fladd+7
 10607  02E1  0850               	movf	??___fladd+4,w
 10608  02E2  07CC               	addwf	??___fladd,f
 10609  02E3  0851               	movf	??___fladd+5,w
 10610  02E4  3DCD               	addwfc	??___fladd+1,f
 10611  02E5  0852               	movf	??___fladd+6,w
 10612  02E6  3DCE               	addwfc	??___fladd+2,f
 10613  02E7  0853               	movf	??___fladd+7,w
 10614  02E8  3DCF               	addwfc	??___fladd+3,f
 10615  02E9  084F               	movf	??___fladd+3,w
 10616  02EA  00C7               	movwf	___fladd@b+3
 10617  02EB  084E               	movf	??___fladd+2,w
 10618  02EC  00C6               	movwf	___fladd@b+2
 10619  02ED  084D               	movf	??___fladd+1,w
 10620  02EE  00C5               	movwf	___fladd@b+1
 10621  02EF  084C               	movf	??___fladd,w
 10622  02F0  00C4               	movwf	___fladd@b
 10623  02F1  3080               	movlw	128
 10624  02F2  00CC               	movwf	??___fladd
 10625  02F3  084C               	movf	??___fladd,w
 10626  02F4  06D4               	xorwf	___fladd@signs,f
 10627  02F5  09D7               	comf	___fladd@grs,f
 10628  02F6  0AD7               	incf	___fladd@grs,f
 10629  02F7  0857               	movf	___fladd@grs,w
 10630  02F8  1D03               	btfss	3,2
 10631  02F9  2B0B               	goto	l775
 10632  02FA  3001               	movlw	1
 10633  02FB  07C4               	addwf	___fladd@b,f
 10634  02FC  3000               	movlw	0
 10635  02FD  3DC5               	addwfc	___fladd@b+1,f
 10636  02FE  3000               	movlw	0
 10637  02FF  3DC6               	addwfc	___fladd@b+2,f
 10638  0300  3000               	movlw	0
 10639  0301  3DC7               	addwfc	___fladd@b+3,f
 10640  0302  2B0B               	goto	l775
 10641  0303                     l2971:
 10642  0303  0848               	movf	___fladd@a,w
 10643  0304  02C4               	subwf	___fladd@b,f
 10644  0305  0849               	movf	___fladd@a+1,w
 10645  0306  3BC5               	subwfb	___fladd@b+1,f
 10646  0307  084A               	movf	___fladd@a+2,w
 10647  0308  3BC6               	subwfb	___fladd@b+2,f
 10648  0309  084B               	movf	___fladd@a+3,w
 10649  030A  3BC7               	subwfb	___fladd@b+3,f
 10650  030B                     l775:
 10651  030B  0847               	movf	___fladd@b+3,w
 10652  030C  0446               	iorwf	___fladd@b+2,w
 10653  030D  0445               	iorwf	___fladd@b+1,w
 10654  030E  0444               	iorwf	___fladd@b,w
 10655  030F  1D03               	skipz
 10656  0310  2B31               	goto	l2993
 10657  0311  0857               	movf	___fladd@grs,w
 10658  0312  1D03               	btfss	3,2
 10659  0313  2B31               	goto	l2993
 10660  0314  3000               	movlw	0
 10661  0315  00C7               	movwf	?___fladd+3
 10662  0316  3000               	movlw	0
 10663  0317  00C6               	movwf	?___fladd+2
 10664  0318  3000               	movlw	0
 10665  0319  00C5               	movwf	?___fladd+1
 10666  031A  3000               	movlw	0
 10667  031B  00C4               	movwf	?___fladd
 10668  031C  0008               	return
 10669  031D                     l2979:
 10670  031D  3001               	movlw	1
 10671  031E                     u3845:
 10672  031E  35C4               	lslf	___fladd@b,f
 10673  031F  0DC5               	rlf	___fladd@b+1,f
 10674  0320  0DC6               	rlf	___fladd@b+2,f
 10675  0321  0DC7               	rlf	___fladd@b+3,f
 10676  0322  0B89               	decfsz	9,f
 10677  0323  2B1E               	goto	u3845
 10678  0324  1BD7               	btfsc	___fladd@grs,7
 10679  0325  1444               	bsf	___fladd@b,0
 10680  0326  1C57               	btfss	___fladd@grs,0
 10681  0327  2B2A               	goto	l2987
 10682  0328  1403               	setc
 10683  0329  2B2B               	goto	L3
 10684  032A                     l2987:
 10685  032A  1003               	clrc
 10686  032B                     L3:
 10687  032B  0DD7               	rlf	___fladd@grs,f
 10688  032C  0856               	movf	___fladd@bexp,w
 10689  032D  1903               	btfsc	3,2
 10690  032E  2B31               	goto	l2993
 10691  032F  3001               	movlw	1
 10692  0330  02D6               	subwf	___fladd@bexp,f
 10693  0331                     l2993:
 10694  0331  1FC6               	btfss	___fladd@b+2,7
 10695  0332  2B1D               	goto	l2979
 10696  0333                     l2995:
 10697  0333  01D5               	clrf	___fladd@aexp
 10698  0334  1FD7               	btfss	___fladd@grs,7
 10699  0335  2B3E               	goto	l3005
 10700  0336  0857               	movf	___fladd@grs,w
 10701  0337  397F               	andlw	127
 10702  0338  1903               	btfsc	3,2
 10703  0339  1844               	btfsc	___fladd@b,0
 10704  033A  2B3C               	goto	l3001
 10705  033B  2B3E               	goto	l3005
 10706  033C                     l3001:
 10707  033C  01D5               	clrf	___fladd@aexp
 10708  033D  0AD5               	incf	___fladd@aexp,f
 10709  033E                     l3005:
 10710  033E  0855               	movf	___fladd@aexp,w
 10711  033F  1903               	btfsc	3,2
 10712  0340  2B6A               	goto	l788
 10713  0341  3001               	movlw	1
 10714  0342  07C4               	addwf	___fladd@b,f
 10715  0343  3000               	movlw	0
 10716  0344  3DC5               	addwfc	___fladd@b+1,f
 10717  0345  3000               	movlw	0
 10718  0346  3DC6               	addwfc	___fladd@b+2,f
 10719  0347  3000               	movlw	0
 10720  0348  3DC7               	addwfc	___fladd@b+3,f
 10721  0349  1C47               	btfss	___fladd@b+3,0
 10722  034A  2B6A               	goto	l788
 10723  034B  0844               	movf	___fladd@b,w
 10724  034C  00CC               	movwf	??___fladd
 10725  034D  0845               	movf	___fladd@b+1,w
 10726  034E  00CD               	movwf	??___fladd+1
 10727  034F  0846               	movf	___fladd@b+2,w
 10728  0350  00CE               	movwf	??___fladd+2
 10729  0351  0847               	movf	___fladd@b+3,w
 10730  0352  00CF               	movwf	??___fladd+3
 10731  0353  3001               	movlw	1
 10732  0354  00D0               	movwf	??___fladd+4
 10733  0355                     u3945:
 10734  0355  37CF               	asrf	??___fladd+3,f
 10735  0356  0CCE               	rrf	??___fladd+2,f
 10736  0357  0CCD               	rrf	??___fladd+1,f
 10737  0358  0CCC               	rrf	??___fladd,f
 10738  0359  0BD0               	decfsz	??___fladd+4,f
 10739  035A  2B55               	goto	u3945
 10740  035B  084F               	movf	??___fladd+3,w
 10741  035C  00C7               	movwf	___fladd@b+3
 10742  035D  084E               	movf	??___fladd+2,w
 10743  035E  00C6               	movwf	___fladd@b+2
 10744  035F  084D               	movf	??___fladd+1,w
 10745  0360  00C5               	movwf	___fladd@b+1
 10746  0361  084C               	movf	??___fladd,w
 10747  0362  00C4               	movwf	___fladd@b
 10748  0363  0A56               	incf	___fladd@bexp,w
 10749  0364  1903               	btfsc	3,2
 10750  0365  2B6A               	goto	l788
 10751  0366  3001               	movlw	1
 10752  0367  00CC               	movwf	??___fladd
 10753  0368  084C               	movf	??___fladd,w
 10754  0369  07D6               	addwf	___fladd@bexp,f
 10755  036A                     l788:
 10756  036A  0A56               	incf	___fladd@bexp,w
 10757  036B  1D03               	btfss	3,2
 10758  036C  0856               	movf	___fladd@bexp,w
 10759  036D  1D03               	btfss	3,2
 10760  036E  2B7A               	goto	l3023
 10761  036F  3000               	movlw	0
 10762  0370  00C7               	movwf	___fladd@b+3
 10763  0371  3000               	movlw	0
 10764  0372  00C6               	movwf	___fladd@b+2
 10765  0373  3000               	movlw	0
 10766  0374  00C5               	movwf	___fladd@b+1
 10767  0375  3000               	movlw	0
 10768  0376  00C4               	movwf	___fladd@b
 10769  0377  0856               	movf	___fladd@bexp,w
 10770  0378  1903               	btfsc	3,2
 10771  0379  01D4               	clrf	___fladd@signs
 10772  037A                     l3023:
 10773  037A  1C56               	btfss	___fladd@bexp,0
 10774  037B  2B7E               	goto	l3027
 10775  037C  17C6               	bsf	___fladd@b+2,7
 10776  037D  2B82               	goto	l796
 10777  037E                     l3027:
 10778  037E  307F               	movlw	127
 10779  037F  00CC               	movwf	??___fladd
 10780  0380  084C               	movf	??___fladd,w
 10781  0381  05C6               	andwf	___fladd@b+2,f
 10782  0382                     l796:
 10783  0382  3656               	lsrf	___fladd@bexp,w
 10784  0383  00CC               	movwf	??___fladd
 10785  0384  084C               	movf	??___fladd,w
 10786  0385  00C7               	movwf	___fladd@b+3
 10787  0386  1FD4               	btfss	___fladd@signs,7
 10788  0387  0008               	return
 10789  0388  17C7               	bsf	___fladd@b+3,7
 10790  0389  0008               	return
 10791  038A                     __end_of___fladd:
 10792                           
 10793                           	psect	text42
 10794  0802                     __ptext42:	
 10795 ;; *************** function ___flneg *****************
 10796 ;; Defined at:
 10797 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
 10798 ;; Parameters:    Size  Location     Type
 10799 ;;  f1              4    0[COMMON] unsigned char 
 10800 ;; Auto vars:     Size  Location     Type
 10801 ;;		None
 10802 ;; Return value:  Size  Location     Type
 10803 ;;                  4    0[COMMON] unsigned char 
 10804 ;; Registers used:
 10805 ;;		wreg
 10806 ;; Tracked objects:
 10807 ;;		On entry : 1F/0
 10808 ;;		On exit  : 1F/0
 10809 ;;		Unchanged: 1F/0
 10810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10811 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10814 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10815 ;;Total ram usage:        4 bytes
 10816 ;; Hardware stack levels used: 1
 10817 ;; This function calls:
 10818 ;;		Nothing
 10819 ;; This function is called by:
 10820 ;;		_FLOAT_to_string
 10821 ;; This function uses a non-reentrant model
 10822 ;;
 10823                           
 10824                           
 10825                           ;psect for function ___flneg
 10826  0802                     ___flneg:
 10827                           
 10828                           ;incstack = 0
 10829                           ; Regs used in ___flneg: [wreg]
 10830  0802  0873               	movf	___flneg@f1+3,w
 10831  0803  0472               	iorwf	___flneg@f1+2,w
 10832  0804  0471               	iorwf	___flneg@f1+1,w
 10833  0805  0470               	iorwf	___flneg@f1,w
 10834  0806  1903               	skipnz
 10835  0807  0008               	return
 10836  0808  3080               	movlw	128
 10837  0809  06F3               	xorwf	___flneg@f1+3,f
 10838  080A  0008               	return
 10839  080B                     __end_of___flneg:
 10840                           
 10841                           	psect	text43
 10842  038A                     __ptext43:	
 10843 ;; *************** function ___flmul *****************
 10844 ;; Defined at:
 10845 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
 10846 ;; Parameters:    Size  Location     Type
 10847 ;;  b               4   10[BANK0 ] unsigned char 
 10848 ;;  a               4   14[BANK0 ] unsigned char 
 10849 ;; Auto vars:     Size  Location     Type
 10850 ;;  prod            4   30[BANK0 ] struct .
 10851 ;;  grs             4   25[BANK0 ] unsigned long 
 10852 ;;  temp            2   34[BANK0 ] struct .
 10853 ;;  bexp            1   29[BANK0 ] unsigned char 
 10854 ;;  aexp            1   24[BANK0 ] unsigned char 
 10855 ;;  sign            1   23[BANK0 ] unsigned char 
 10856 ;; Return value:  Size  Location     Type
 10857 ;;                  4   10[BANK0 ] unsigned char 
 10858 ;; Registers used:
 10859 ;;		wreg, status,2, status,0, pclath, cstack
 10860 ;; Tracked objects:
 10861 ;;		On entry : 1F/0
 10862 ;;		On exit  : 1F/0
 10863 ;;		Unchanged: 0/0
 10864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10865 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10866 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10867 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10868 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10869 ;;Total ram usage:       26 bytes
 10870 ;; Hardware stack levels used: 1
 10871 ;; Hardware stack levels required when called: 1
 10872 ;; This function calls:
 10873 ;;		__Umul8_16
 10874 ;; This function is called by:
 10875 ;;		_FLOAT_to_string
 10876 ;;		_MLX90614_readObjectTempC
 10877 ;;		_MLX90614_readAmbientTempC
 10878 ;; This function uses a non-reentrant model
 10879 ;;
 10880                           
 10881                           
 10882                           ;psect for function ___flmul
 10883  038A                     ___flmul:
 10884                           
 10885                           ;incstack = 0
 10886                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 10887  038A  082D               	movf	___flmul@b+3,w
 10888  038B  3980               	andlw	128
 10889  038C  00B2               	movwf	??___flmul
 10890  038D  0832               	movf	??___flmul,w
 10891  038E  00B7               	movwf	___flmul@sign
 10892  038F  352D               	lslf	___flmul@b+3,w
 10893  0390  00B2               	movwf	??___flmul
 10894  0391  0832               	movf	??___flmul,w
 10895  0392  00BD               	movwf	___flmul@bexp
 10896  0393  1BAC               	btfsc	___flmul@b+2,7
 10897  0394  143D               	bsf	___flmul@bexp,0
 10898  0395  083D               	movf	___flmul@bexp,w
 10899  0396  1903               	btfsc	3,2
 10900  0397  2BA5               	goto	l3347
 10901  0398  0A3D               	incf	___flmul@bexp,w
 10902  0399  1D03               	btfss	3,2
 10903  039A  2BA3               	goto	l3345
 10904  039B  3000               	movlw	0
 10905  039C  00AD               	movwf	___flmul@b+3
 10906  039D  3000               	movlw	0
 10907  039E  00AC               	movwf	___flmul@b+2
 10908  039F  3000               	movlw	0
 10909  03A0  00AB               	movwf	___flmul@b+1
 10910  03A1  3000               	movlw	0
 10911  03A2  00AA               	movwf	___flmul@b
 10912  03A3                     l3345:
 10913  03A3  17AC               	bsf	___flmul@b+2,7
 10914  03A4  2BAD               	goto	l3349
 10915  03A5                     l3347:
 10916  03A5  3000               	movlw	0
 10917  03A6  00AD               	movwf	___flmul@b+3
 10918  03A7  3000               	movlw	0
 10919  03A8  00AC               	movwf	___flmul@b+2
 10920  03A9  3000               	movlw	0
 10921  03AA  00AB               	movwf	___flmul@b+1
 10922  03AB  3000               	movlw	0
 10923  03AC  00AA               	movwf	___flmul@b
 10924  03AD                     l3349:
 10925  03AD  0831               	movf	___flmul@a+3,w
 10926  03AE  3980               	andlw	128
 10927  03AF  00B2               	movwf	??___flmul
 10928  03B0  0832               	movf	??___flmul,w
 10929  03B1  06B7               	xorwf	___flmul@sign,f
 10930  03B2  3531               	lslf	___flmul@a+3,w
 10931  03B3  00B2               	movwf	??___flmul
 10932  03B4  0832               	movf	??___flmul,w
 10933  03B5  00B8               	movwf	___flmul@aexp
 10934  03B6  1BB0               	btfsc	___flmul@a+2,7
 10935  03B7  1438               	bsf	___flmul@aexp,0
 10936  03B8  0838               	movf	___flmul@aexp,w
 10937  03B9  1903               	btfsc	3,2
 10938  03BA  2BC8               	goto	l3365
 10939  03BB  0A38               	incf	___flmul@aexp,w
 10940  03BC  1D03               	btfss	3,2
 10941  03BD  2BC6               	goto	l3363
 10942  03BE  3000               	movlw	0
 10943  03BF  00B1               	movwf	___flmul@a+3
 10944  03C0  3000               	movlw	0
 10945  03C1  00B0               	movwf	___flmul@a+2
 10946  03C2  3000               	movlw	0
 10947  03C3  00AF               	movwf	___flmul@a+1
 10948  03C4  3000               	movlw	0
 10949  03C5  00AE               	movwf	___flmul@a
 10950  03C6                     l3363:
 10951  03C6  17B0               	bsf	___flmul@a+2,7
 10952  03C7  2BD0               	goto	l3367
 10953  03C8                     l3365:
 10954  03C8  3000               	movlw	0
 10955  03C9  00B1               	movwf	___flmul@a+3
 10956  03CA  3000               	movlw	0
 10957  03CB  00B0               	movwf	___flmul@a+2
 10958  03CC  3000               	movlw	0
 10959  03CD  00AF               	movwf	___flmul@a+1
 10960  03CE  3000               	movlw	0
 10961  03CF  00AE               	movwf	___flmul@a
 10962  03D0                     l3367:
 10963  03D0  0838               	movf	___flmul@aexp,w
 10964  03D1  1D03               	btfss	3,2
 10965  03D2  083D               	movf	___flmul@bexp,w
 10966  03D3  1D03               	btfss	3,2
 10967  03D4  2BDE               	goto	l3375
 10968  03D5  3000               	movlw	0
 10969  03D6  00AD               	movwf	?___flmul+3
 10970  03D7  3000               	movlw	0
 10971  03D8  00AC               	movwf	?___flmul+2
 10972  03D9  3000               	movlw	0
 10973  03DA  00AB               	movwf	?___flmul+1
 10974  03DB  3000               	movlw	0
 10975  03DC  00AA               	movwf	?___flmul
 10976  03DD  0008               	return
 10977  03DE                     l3375:
 10978  03DE  082A               	movf	___flmul@b,w
 10979  03DF  00B2               	movwf	??___flmul
 10980  03E0  0832               	movf	??___flmul,w
 10981  03E1  00F0               	movwf	__Umul8_16@multiplicand
 10982  03E2  0830               	movf	___flmul@a+2,w
 10983  03E3  3194  24AC  3183   	fcall	__Umul8_16
 10984  03E6  0871               	movf	?__Umul8_16+1,w
 10985  03E7  00C3               	movwf	___flmul@temp+1
 10986  03E8  0870               	movf	?__Umul8_16,w
 10987  03E9  00C2               	movwf	___flmul@temp
 10988  03EA  0842               	movf	___flmul@temp,w
 10989  03EB  00B2               	movwf	??___flmul
 10990  03EC  01B3               	clrf	??___flmul+1
 10991  03ED  01B4               	clrf	??___flmul+2
 10992  03EE  01B5               	clrf	??___flmul+3
 10993  03EF  0835               	movf	??___flmul+3,w
 10994  03F0  00BC               	movwf	___flmul@grs+3
 10995  03F1  0834               	movf	??___flmul+2,w
 10996  03F2  00BB               	movwf	___flmul@grs+2
 10997  03F3  0833               	movf	??___flmul+1,w
 10998  03F4  00BA               	movwf	___flmul@grs+1
 10999  03F5  0832               	movf	??___flmul,w
 11000  03F6  00B9               	movwf	___flmul@grs
 11001  03F7  0843               	movf	___flmul@temp+1,w
 11002  03F8  00B2               	movwf	??___flmul
 11003  03F9  01B3               	clrf	??___flmul+1
 11004  03FA  01B4               	clrf	??___flmul+2
 11005  03FB  01B5               	clrf	??___flmul+3
 11006  03FC  0835               	movf	??___flmul+3,w
 11007  03FD  00C1               	movwf	___flmul@prod+3
 11008  03FE  0834               	movf	??___flmul+2,w
 11009  03FF  00C0               	movwf	___flmul@prod+2
 11010  0400  0833               	movf	??___flmul+1,w
 11011  0401  00BF               	movwf	___flmul@prod+1
 11012  0402  0832               	movf	??___flmul,w
 11013  0403  00BE               	movwf	___flmul@prod
 11014  0404  082B               	movf	___flmul@b+1,w
 11015  0405  00B2               	movwf	??___flmul
 11016  0406  0832               	movf	??___flmul,w
 11017  0407  00F0               	movwf	__Umul8_16@multiplicand
 11018  0408  082F               	movf	___flmul@a+1,w
 11019  0409  3194  24AC  3183   	fcall	__Umul8_16
 11020  040C  0871               	movf	?__Umul8_16+1,w
 11021  040D  00C3               	movwf	___flmul@temp+1
 11022  040E  0870               	movf	?__Umul8_16,w
 11023  040F  00C2               	movwf	___flmul@temp
 11024  0410  0842               	movf	___flmul@temp,w
 11025  0411  00B2               	movwf	??___flmul
 11026  0412  01B3               	clrf	??___flmul+1
 11027  0413  01B4               	clrf	??___flmul+2
 11028  0414  01B5               	clrf	??___flmul+3
 11029  0415  0832               	movf	??___flmul,w
 11030  0416  07B9               	addwf	___flmul@grs,f
 11031  0417  0833               	movf	??___flmul+1,w
 11032  0418  3DBA               	addwfc	___flmul@grs+1,f
 11033  0419  0834               	movf	??___flmul+2,w
 11034  041A  3DBB               	addwfc	___flmul@grs+2,f
 11035  041B  0835               	movf	??___flmul+3,w
 11036  041C  3DBC               	addwfc	___flmul@grs+3,f
 11037  041D  0843               	movf	___flmul@temp+1,w
 11038  041E  00B2               	movwf	??___flmul
 11039  041F  01B3               	clrf	??___flmul+1
 11040  0420  01B4               	clrf	??___flmul+2
 11041  0421  01B5               	clrf	??___flmul+3
 11042  0422  0832               	movf	??___flmul,w
 11043  0423  07BE               	addwf	___flmul@prod,f
 11044  0424  0833               	movf	??___flmul+1,w
 11045  0425  3DBF               	addwfc	___flmul@prod+1,f
 11046  0426  0834               	movf	??___flmul+2,w
 11047  0427  3DC0               	addwfc	___flmul@prod+2,f
 11048  0428  0835               	movf	??___flmul+3,w
 11049  0429  3DC1               	addwfc	___flmul@prod+3,f
 11050  042A  082C               	movf	___flmul@b+2,w
 11051  042B  00B2               	movwf	??___flmul
 11052  042C  0832               	movf	??___flmul,w
 11053  042D  00F0               	movwf	__Umul8_16@multiplicand
 11054  042E  082E               	movf	___flmul@a,w
 11055  042F  3194  24AC  3183   	fcall	__Umul8_16
 11056  0432  0871               	movf	?__Umul8_16+1,w
 11057  0433  00C3               	movwf	___flmul@temp+1
 11058  0434  0870               	movf	?__Umul8_16,w
 11059  0435  00C2               	movwf	___flmul@temp
 11060  0436  0842               	movf	___flmul@temp,w
 11061  0437  00B2               	movwf	??___flmul
 11062  0438  01B3               	clrf	??___flmul+1
 11063  0439  01B4               	clrf	??___flmul+2
 11064  043A  01B5               	clrf	??___flmul+3
 11065  043B  0832               	movf	??___flmul,w
 11066  043C  07B9               	addwf	___flmul@grs,f
 11067  043D  0833               	movf	??___flmul+1,w
 11068  043E  3DBA               	addwfc	___flmul@grs+1,f
 11069  043F  0834               	movf	??___flmul+2,w
 11070  0440  3DBB               	addwfc	___flmul@grs+2,f
 11071  0441  0835               	movf	??___flmul+3,w
 11072  0442  3DBC               	addwfc	___flmul@grs+3,f
 11073  0443  0843               	movf	___flmul@temp+1,w
 11074  0444  00B2               	movwf	??___flmul
 11075  0445  01B3               	clrf	??___flmul+1
 11076  0446  01B4               	clrf	??___flmul+2
 11077  0447  01B5               	clrf	??___flmul+3
 11078  0448  0832               	movf	??___flmul,w
 11079  0449  07BE               	addwf	___flmul@prod,f
 11080  044A  0833               	movf	??___flmul+1,w
 11081  044B  3DBF               	addwfc	___flmul@prod+1,f
 11082  044C  0834               	movf	??___flmul+2,w
 11083  044D  3DC0               	addwfc	___flmul@prod+2,f
 11084  044E  0835               	movf	??___flmul+3,w
 11085  044F  3DC1               	addwfc	___flmul@prod+3,f
 11086  0450  3008               	movlw	8
 11087  0451                     u4695:
 11088  0451  35B9               	lslf	___flmul@grs,f
 11089  0452  0DBA               	rlf	___flmul@grs+1,f
 11090  0453  0DBB               	rlf	___flmul@grs+2,f
 11091  0454  0DBC               	rlf	___flmul@grs+3,f
 11092  0455  0B89               	decfsz	9,f
 11093  0456  2C51               	goto	u4695
 11094  0457  082B               	movf	___flmul@b+1,w
 11095  0458  00B2               	movwf	??___flmul
 11096  0459  0832               	movf	??___flmul,w
 11097  045A  00F0               	movwf	__Umul8_16@multiplicand
 11098  045B  082E               	movf	___flmul@a,w
 11099  045C  3194  24AC  3183   	fcall	__Umul8_16
 11100  045F  0871               	movf	?__Umul8_16+1,w
 11101  0460  00C3               	movwf	___flmul@temp+1
 11102  0461  0870               	movf	?__Umul8_16,w
 11103  0462  00C2               	movwf	___flmul@temp
 11104  0463  0842               	movf	___flmul@temp,w
 11105  0464  07B9               	addwf	___flmul@grs,f
 11106  0465  0843               	movf	___flmul@temp+1,w
 11107  0466  3DBA               	addwfc	___flmul@grs+1,f
 11108  0467  3000               	movlw	0
 11109  0468  3DBB               	addwfc	___flmul@grs+2,f
 11110  0469  3DBC               	addwfc	___flmul@grs+3,f
 11111  046A  082A               	movf	___flmul@b,w
 11112  046B  00B2               	movwf	??___flmul
 11113  046C  0832               	movf	??___flmul,w
 11114  046D  00F0               	movwf	__Umul8_16@multiplicand
 11115  046E  082F               	movf	___flmul@a+1,w
 11116  046F  3194  24AC  3183   	fcall	__Umul8_16
 11117  0472  0871               	movf	?__Umul8_16+1,w
 11118  0473  00C3               	movwf	___flmul@temp+1
 11119  0474  0870               	movf	?__Umul8_16,w
 11120  0475  00C2               	movwf	___flmul@temp
 11121  0476  0842               	movf	___flmul@temp,w
 11122  0477  07B9               	addwf	___flmul@grs,f
 11123  0478  0843               	movf	___flmul@temp+1,w
 11124  0479  3DBA               	addwfc	___flmul@grs+1,f
 11125  047A  3000               	movlw	0
 11126  047B  3DBB               	addwfc	___flmul@grs+2,f
 11127  047C  3DBC               	addwfc	___flmul@grs+3,f
 11128  047D  3008               	movlw	8
 11129  047E                     u4705:
 11130  047E  35B9               	lslf	___flmul@grs,f
 11131  047F  0DBA               	rlf	___flmul@grs+1,f
 11132  0480  0DBB               	rlf	___flmul@grs+2,f
 11133  0481  0DBC               	rlf	___flmul@grs+3,f
 11134  0482  0B89               	decfsz	9,f
 11135  0483  2C7E               	goto	u4705
 11136  0484  082A               	movf	___flmul@b,w
 11137  0485  00B2               	movwf	??___flmul
 11138  0486  0832               	movf	??___flmul,w
 11139  0487  00F0               	movwf	__Umul8_16@multiplicand
 11140  0488  082E               	movf	___flmul@a,w
 11141  0489  3194  24AC  3183   	fcall	__Umul8_16
 11142  048C  0871               	movf	?__Umul8_16+1,w
 11143  048D  00C3               	movwf	___flmul@temp+1
 11144  048E  0870               	movf	?__Umul8_16,w
 11145  048F  00C2               	movwf	___flmul@temp
 11146  0490  0842               	movf	___flmul@temp,w
 11147  0491  07B9               	addwf	___flmul@grs,f
 11148  0492  0843               	movf	___flmul@temp+1,w
 11149  0493  3DBA               	addwfc	___flmul@grs+1,f
 11150  0494  3000               	movlw	0
 11151  0495  3DBB               	addwfc	___flmul@grs+2,f
 11152  0496  3DBC               	addwfc	___flmul@grs+3,f
 11153  0497  082B               	movf	___flmul@b+1,w
 11154  0498  00B2               	movwf	??___flmul
 11155  0499  0832               	movf	??___flmul,w
 11156  049A  00F0               	movwf	__Umul8_16@multiplicand
 11157  049B  0830               	movf	___flmul@a+2,w
 11158  049C  3194  24AC  3183   	fcall	__Umul8_16
 11159  049F  0871               	movf	?__Umul8_16+1,w
 11160  04A0  00C3               	movwf	___flmul@temp+1
 11161  04A1  0870               	movf	?__Umul8_16,w
 11162  04A2  00C2               	movwf	___flmul@temp
 11163  04A3  0842               	movf	___flmul@temp,w
 11164  04A4  07BE               	addwf	___flmul@prod,f
 11165  04A5  0843               	movf	___flmul@temp+1,w
 11166  04A6  3DBF               	addwfc	___flmul@prod+1,f
 11167  04A7  3000               	movlw	0
 11168  04A8  3DC0               	addwfc	___flmul@prod+2,f
 11169  04A9  3DC1               	addwfc	___flmul@prod+3,f
 11170  04AA  082C               	movf	___flmul@b+2,w
 11171  04AB  00B2               	movwf	??___flmul
 11172  04AC  0832               	movf	??___flmul,w
 11173  04AD  00F0               	movwf	__Umul8_16@multiplicand
 11174  04AE  082F               	movf	___flmul@a+1,w
 11175  04AF  3194  24AC  3183   	fcall	__Umul8_16
 11176  04B2  0871               	movf	?__Umul8_16+1,w
 11177  04B3  00C3               	movwf	___flmul@temp+1
 11178  04B4  0870               	movf	?__Umul8_16,w
 11179  04B5  00C2               	movwf	___flmul@temp
 11180  04B6  0842               	movf	___flmul@temp,w
 11181  04B7  07BE               	addwf	___flmul@prod,f
 11182  04B8  0843               	movf	___flmul@temp+1,w
 11183  04B9  3DBF               	addwfc	___flmul@prod+1,f
 11184  04BA  3000               	movlw	0
 11185  04BB  3DC0               	addwfc	___flmul@prod+2,f
 11186  04BC  3DC1               	addwfc	___flmul@prod+3,f
 11187  04BD  082C               	movf	___flmul@b+2,w
 11188  04BE  00B2               	movwf	??___flmul
 11189  04BF  0832               	movf	??___flmul,w
 11190  04C0  00F0               	movwf	__Umul8_16@multiplicand
 11191  04C1  0830               	movf	___flmul@a+2,w
 11192  04C2  3194  24AC  3183   	fcall	__Umul8_16
 11193  04C5  0871               	movf	?__Umul8_16+1,w
 11194  04C6  00C3               	movwf	___flmul@temp+1
 11195  04C7  0870               	movf	?__Umul8_16,w
 11196  04C8  00C2               	movwf	___flmul@temp
 11197  04C9  0842               	movf	___flmul@temp,w
 11198  04CA  00B2               	movwf	??___flmul
 11199  04CB  0843               	movf	___flmul@temp+1,w
 11200  04CC  00B3               	movwf	??___flmul+1
 11201  04CD  01B4               	clrf	??___flmul+2
 11202  04CE  01B5               	clrf	??___flmul+3
 11203  04CF  3008               	movlw	8
 11204  04D0                     u4715:
 11205  04D0  35B2               	lslf	??___flmul,f
 11206  04D1  0DB3               	rlf	??___flmul+1,f
 11207  04D2  0DB4               	rlf	??___flmul+2,f
 11208  04D3  0DB5               	rlf	??___flmul+3,f
 11209  04D4  0B89               	decfsz	9,f
 11210  04D5  2CD0               	goto	u4715
 11211  04D6  0832               	movf	??___flmul,w
 11212  04D7  07BE               	addwf	___flmul@prod,f
 11213  04D8  0833               	movf	??___flmul+1,w
 11214  04D9  3DBF               	addwfc	___flmul@prod+1,f
 11215  04DA  0834               	movf	??___flmul+2,w
 11216  04DB  3DC0               	addwfc	___flmul@prod+2,f
 11217  04DC  0835               	movf	??___flmul+3,w
 11218  04DD  3DC1               	addwfc	___flmul@prod+3,f
 11219  04DE  083C               	movf	___flmul@grs+3,w
 11220  04DF  00B2               	movwf	??___flmul
 11221  04E0  01B3               	clrf	??___flmul+1
 11222  04E1  01B4               	clrf	??___flmul+2
 11223  04E2  01B5               	clrf	??___flmul+3
 11224  04E3  0832               	movf	??___flmul,w
 11225  04E4  07BE               	addwf	___flmul@prod,f
 11226  04E5  0833               	movf	??___flmul+1,w
 11227  04E6  3DBF               	addwfc	___flmul@prod+1,f
 11228  04E7  0834               	movf	??___flmul+2,w
 11229  04E8  3DC0               	addwfc	___flmul@prod+2,f
 11230  04E9  0835               	movf	??___flmul+3,w
 11231  04EA  3DC1               	addwfc	___flmul@prod+3,f
 11232  04EB  3008               	movlw	8
 11233  04EC                     u4725:
 11234  04EC  35B9               	lslf	___flmul@grs,f
 11235  04ED  0DBA               	rlf	___flmul@grs+1,f
 11236  04EE  0DBB               	rlf	___flmul@grs+2,f
 11237  04EF  0DBC               	rlf	___flmul@grs+3,f
 11238  04F0  0B89               	decfsz	9,f
 11239  04F1  2CEC               	goto	u4725
 11240  04F2  083D               	movf	___flmul@bexp,w
 11241  04F3  0738               	addwf	___flmul@aexp,w
 11242  04F4  00B2               	movwf	??___flmul
 11243  04F5  01B3               	clrf	??___flmul+1
 11244  04F6  0DB3               	rlf	??___flmul+1,f
 11245  04F7  0832               	movf	??___flmul,w
 11246  04F8  3E82               	addlw	130
 11247  04F9  00C2               	movwf	___flmul@temp
 11248  04FA  30FF               	movlw	255
 11249  04FB  3D33               	addwfc	??___flmul+1,w
 11250  04FC  00C3               	movwf	___flmul@temp+1
 11251  04FD                     l3427:
 11252  04FD  1BC0               	btfsc	___flmul@prod+2,7
 11253  04FE  2D14               	goto	l3429
 11254  04FF  3001               	movlw	1
 11255  0500                     u4735:
 11256  0500  35BE               	lslf	___flmul@prod,f
 11257  0501  0DBF               	rlf	___flmul@prod+1,f
 11258  0502  0DC0               	rlf	___flmul@prod+2,f
 11259  0503  0DC1               	rlf	___flmul@prod+3,f
 11260  0504  0B89               	decfsz	9,f
 11261  0505  2D00               	goto	u4735
 11262  0506  1BBC               	btfsc	___flmul@grs+3,7
 11263  0507  143E               	bsf	___flmul@prod,0
 11264  0508  3001               	movlw	1
 11265  0509                     u4755:
 11266  0509  35B9               	lslf	___flmul@grs,f
 11267  050A  0DBA               	rlf	___flmul@grs+1,f
 11268  050B  0DBB               	rlf	___flmul@grs+2,f
 11269  050C  0DBC               	rlf	___flmul@grs+3,f
 11270  050D  0B89               	decfsz	9,f
 11271  050E  2D09               	goto	u4755
 11272  050F  30FF               	movlw	255
 11273  0510  07C2               	addwf	___flmul@temp,f
 11274  0511  30FF               	movlw	255
 11275  0512  3DC3               	addwfc	___flmul@temp+1,f
 11276  0513  2CFD               	goto	l3427
 11277  0514                     l3429:
 11278  0514  01B8               	clrf	___flmul@aexp
 11279  0515  1FBC               	btfss	___flmul@grs+3,7
 11280  0516  2D2D               	goto	l3439
 11281  0517  30FF               	movlw	255
 11282  0518  0539               	andwf	___flmul@grs,w
 11283  0519  00B2               	movwf	??___flmul
 11284  051A  30FF               	movlw	255
 11285  051B  053A               	andwf	___flmul@grs+1,w
 11286  051C  00B3               	movwf	??___flmul+1
 11287  051D  30FF               	movlw	255
 11288  051E  053B               	andwf	___flmul@grs+2,w
 11289  051F  00B4               	movwf	??___flmul+2
 11290  0520  307F               	movlw	127
 11291  0521  053C               	andwf	___flmul@grs+3,w
 11292  0522  00B5               	movwf	??___flmul+3
 11293  0523  0835               	movf	??___flmul+3,w
 11294  0524  0434               	iorwf	??___flmul+2,w
 11295  0525  0433               	iorwf	??___flmul+1,w
 11296  0526  0432               	iorwf	??___flmul,w
 11297  0527  1903               	skipnz
 11298  0528  183E               	btfsc	___flmul@prod,0
 11299  0529  2D2B               	goto	l3435
 11300  052A  2D2D               	goto	l3439
 11301  052B                     l3435:
 11302  052B  01B8               	clrf	___flmul@aexp
 11303  052C  0AB8               	incf	___flmul@aexp,f
 11304  052D                     l3439:
 11305  052D  0838               	movf	___flmul@aexp,w
 11306  052E  1903               	btfsc	3,2
 11307  052F  2D56               	goto	l3449
 11308  0530  3001               	movlw	1
 11309  0531  07BE               	addwf	___flmul@prod,f
 11310  0532  3000               	movlw	0
 11311  0533  3DBF               	addwfc	___flmul@prod+1,f
 11312  0534  3000               	movlw	0
 11313  0535  3DC0               	addwfc	___flmul@prod+2,f
 11314  0536  3000               	movlw	0
 11315  0537  3DC1               	addwfc	___flmul@prod+3,f
 11316  0538  1C41               	btfss	___flmul@prod+3,0
 11317  0539  2D56               	goto	l3449
 11318  053A  083E               	movf	___flmul@prod,w
 11319  053B  00B2               	movwf	??___flmul
 11320  053C  083F               	movf	___flmul@prod+1,w
 11321  053D  00B3               	movwf	??___flmul+1
 11322  053E  0840               	movf	___flmul@prod+2,w
 11323  053F  00B4               	movwf	??___flmul+2
 11324  0540  0841               	movf	___flmul@prod+3,w
 11325  0541  00B5               	movwf	??___flmul+3
 11326  0542  3001               	movlw	1
 11327  0543  00B6               	movwf	??___flmul+4
 11328  0544                     u4825:
 11329  0544  37B5               	asrf	??___flmul+3,f
 11330  0545  0CB4               	rrf	??___flmul+2,f
 11331  0546  0CB3               	rrf	??___flmul+1,f
 11332  0547  0CB2               	rrf	??___flmul,f
 11333  0548  0BB6               	decfsz	??___flmul+4,f
 11334  0549  2D44               	goto	u4825
 11335  054A  0835               	movf	??___flmul+3,w
 11336  054B  00C1               	movwf	___flmul@prod+3
 11337  054C  0834               	movf	??___flmul+2,w
 11338  054D  00C0               	movwf	___flmul@prod+2
 11339  054E  0833               	movf	??___flmul+1,w
 11340  054F  00BF               	movwf	___flmul@prod+1
 11341  0550  0832               	movf	??___flmul,w
 11342  0551  00BE               	movwf	___flmul@prod
 11343  0552  3001               	movlw	1
 11344  0553  07C2               	addwf	___flmul@temp,f
 11345  0554  3000               	movlw	0
 11346  0555  3DC3               	addwfc	___flmul@temp+1,f
 11347  0556                     l3449:
 11348  0556  0843               	movf	___flmul@temp+1,w
 11349  0557  3A80               	xorlw	128
 11350  0558  00B2               	movwf	??___flmul
 11351  0559  3080               	movlw	128
 11352  055A  0232               	subwf	??___flmul,w
 11353  055B  1D03               	skipz
 11354  055C  2D5F               	goto	u4835
 11355  055D  30FF               	movlw	255
 11356  055E  0242               	subwf	___flmul@temp,w
 11357  055F                     u4835:
 11358  055F  1C03               	skipc
 11359  0560  2D6B               	goto	l3453
 11360  0561  307F               	movlw	127
 11361  0562  0020               	movlb	0	; select bank0
 11362  0563  00C1               	movwf	___flmul@prod+3
 11363  0564  3080               	movlw	128
 11364  0565  00C0               	movwf	___flmul@prod+2
 11365  0566  3000               	movlw	0
 11366  0567  00BF               	movwf	___flmul@prod+1
 11367  0568  3000               	movlw	0
 11368  0569  00BE               	movwf	___flmul@prod
 11369  056A  2D95               	goto	l862
 11370  056B                     l3453:
 11371  056B  0020               	movlb	0	; select bank0
 11372  056C  0843               	movf	___flmul@temp+1,w
 11373  056D  3A80               	xorlw	128
 11374  056E  00B2               	movwf	??___flmul
 11375  056F  3080               	movlw	128
 11376  0570  0232               	subwf	??___flmul,w
 11377  0571  1D03               	skipz
 11378  0572  2D75               	goto	u4845
 11379  0573  3001               	movlw	1
 11380  0574  0242               	subwf	___flmul@temp,w
 11381  0575                     u4845:
 11382  0575  1803               	skipnc
 11383  0576  2D82               	goto	l3459
 11384  0577  3000               	movlw	0
 11385  0578  0020               	movlb	0	; select bank0
 11386  0579  00C1               	movwf	___flmul@prod+3
 11387  057A  3000               	movlw	0
 11388  057B  00C0               	movwf	___flmul@prod+2
 11389  057C  3000               	movlw	0
 11390  057D  00BF               	movwf	___flmul@prod+1
 11391  057E  3000               	movlw	0
 11392  057F  00BE               	movwf	___flmul@prod
 11393  0580  01B7               	clrf	___flmul@sign
 11394  0581  2D95               	goto	l862
 11395  0582                     l3459:
 11396  0582  0020               	movlb	0	; select bank0
 11397  0583  0842               	movf	___flmul@temp,w
 11398  0584  00B2               	movwf	??___flmul
 11399  0585  0832               	movf	??___flmul,w
 11400  0586  00BD               	movwf	___flmul@bexp
 11401  0587  30FF               	movlw	255
 11402  0588  05BE               	andwf	___flmul@prod,f
 11403  0589  30FF               	movlw	255
 11404  058A  05BF               	andwf	___flmul@prod+1,f
 11405  058B  307F               	movlw	127
 11406  058C  05C0               	andwf	___flmul@prod+2,f
 11407  058D  3000               	movlw	0
 11408  058E  05C1               	andwf	___flmul@prod+3,f
 11409  058F  183D               	btfsc	___flmul@bexp,0
 11410  0590  17C0               	bsf	___flmul@prod+2,7
 11411  0591  363D               	lsrf	___flmul@bexp,w
 11412  0592  00B2               	movwf	??___flmul
 11413  0593  0832               	movf	??___flmul,w
 11414  0594  00C1               	movwf	___flmul@prod+3
 11415  0595                     l862:
 11416  0595  0837               	movf	___flmul@sign,w
 11417  0596  00B2               	movwf	??___flmul
 11418  0597  0832               	movf	??___flmul,w
 11419  0598  04C1               	iorwf	___flmul@prod+3,f
 11420  0599  0841               	movf	___flmul@prod+3,w
 11421  059A  00AD               	movwf	?___flmul+3
 11422  059B  0840               	movf	___flmul@prod+2,w
 11423  059C  00AC               	movwf	?___flmul+2
 11424  059D  083F               	movf	___flmul@prod+1,w
 11425  059E  00AB               	movwf	?___flmul+1
 11426  059F  083E               	movf	___flmul@prod,w
 11427  05A0  00AA               	movwf	?___flmul
 11428  05A1  0008               	return
 11429  05A2                     __end_of___flmul:
 11430                           
 11431                           	psect	text44
 11432  14AC                     __ptext44:	
 11433 ;; *************** function __Umul8_16 *****************
 11434 ;; Defined at:
 11435 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul8_16.c"
 11436 ;; Parameters:    Size  Location     Type
 11437 ;;  multiplier      1    wreg     unsigned char 
 11438 ;;  multiplicand    1    0[COMMON] unsigned char 
 11439 ;; Auto vars:     Size  Location     Type
 11440 ;;  multiplier      1    8[COMMON] unsigned char 
 11441 ;;  word_mpld       2    6[COMMON] unsigned int 
 11442 ;;  product         2    4[COMMON] unsigned int 
 11443 ;; Return value:  Size  Location     Type
 11444 ;;                  2    0[COMMON] unsigned int 
 11445 ;; Registers used:
 11446 ;;		wreg, status,2, status,0
 11447 ;; Tracked objects:
 11448 ;;		On entry : 1F/0
 11449 ;;		On exit  : 1F/0
 11450 ;;		Unchanged: 1F/0
 11451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11452 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11453 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11454 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11455 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11456 ;;Total ram usage:        9 bytes
 11457 ;; Hardware stack levels used: 1
 11458 ;; This function calls:
 11459 ;;		Nothing
 11460 ;; This function is called by:
 11461 ;;		___flmul
 11462 ;; This function uses a non-reentrant model
 11463 ;;
 11464                           
 11465                           
 11466                           ;psect for function __Umul8_16
 11467  14AC                     __Umul8_16:
 11468                           
 11469                           ;incstack = 0
 11470                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 11471                           ;__Umul8_16@multiplier stored from wreg
 11472  14AC  00F8               	movwf	__Umul8_16@multiplier
 11473  14AD  01F4               	clrf	__Umul8_16@product
 11474  14AE  01F5               	clrf	__Umul8_16@product+1
 11475  14AF  0870               	movf	__Umul8_16@multiplicand,w
 11476  14B0  00F2               	movwf	??__Umul8_16
 11477  14B1  01F3               	clrf	??__Umul8_16+1
 11478  14B2  0872               	movf	??__Umul8_16,w
 11479  14B3  00F6               	movwf	__Umul8_16@word_mpld
 11480  14B4  0873               	movf	??__Umul8_16+1,w
 11481  14B5  00F7               	movwf	__Umul8_16@word_mpld+1
 11482  14B6                     l3037:
 11483  14B6  1C78               	btfss	__Umul8_16@multiplier,0
 11484  14B7  2CBC               	goto	l869
 11485  14B8  0876               	movf	__Umul8_16@word_mpld,w
 11486  14B9  07F4               	addwf	__Umul8_16@product,f
 11487  14BA  0877               	movf	__Umul8_16@word_mpld+1,w
 11488  14BB  3DF5               	addwfc	__Umul8_16@product+1,f
 11489  14BC                     l869:
 11490  14BC  3001               	movlw	1
 11491  14BD                     u4025:
 11492  14BD  35F6               	lslf	__Umul8_16@word_mpld,f
 11493  14BE  0DF7               	rlf	__Umul8_16@word_mpld+1,f
 11494  14BF  0B89               	decfsz	9,f
 11495  14C0  2CBD               	goto	u4025
 11496  14C1  1003               	clrc
 11497  14C2  0CF8               	rrf	__Umul8_16@multiplier,f
 11498  14C3  0878               	movf	__Umul8_16@multiplier,w
 11499  14C4  1D03               	btfss	3,2
 11500  14C5  2CB6               	goto	l3037
 11501  14C6  0875               	movf	__Umul8_16@product+1,w
 11502  14C7  00F1               	movwf	?__Umul8_16+1
 11503  14C8  0874               	movf	__Umul8_16@product,w
 11504  14C9  00F0               	movwf	?__Umul8_16
 11505  14CA  0008               	return
 11506  14CB                     __end_of__Umul8_16:
 11507                           
 11508                           	psect	text45
 11509  1785                     __ptext45:	
 11510 ;; *************** function ___flge *****************
 11511 ;; Defined at:
 11512 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
 11513 ;; Parameters:    Size  Location     Type
 11514 ;;  ff1             4    0[COMMON] unsigned int 
 11515 ;;  ff2             4    4[COMMON] unsigned int 
 11516 ;; Auto vars:     Size  Location     Type
 11517 ;;		None
 11518 ;; Return value:  Size  Location     Type
 11519 ;;		None               void
 11520 ;; Registers used:
 11521 ;;		wreg, status,2, status,0
 11522 ;; Tracked objects:
 11523 ;;		On entry : 1F/0
 11524 ;;		On exit  : 1F/0
 11525 ;;		Unchanged: 1F/0
 11526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11527 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11529 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11530 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11531 ;;Total ram usage:       12 bytes
 11532 ;; Hardware stack levels used: 1
 11533 ;; This function calls:
 11534 ;;		Nothing
 11535 ;; This function is called by:
 11536 ;;		_FLOAT_to_string
 11537 ;; This function uses a non-reentrant model
 11538 ;;
 11539                           
 11540                           
 11541                           ;psect for function ___flge
 11542  1785                     ___flge:
 11543                           
 11544                           ;incstack = 0
 11545                           ; Regs used in ___flge: [wreg+status,2+status,0]
 11546  1785  3000               	movlw	0
 11547  1786  0570               	andwf	___flge@ff1,w
 11548  1787  00F8               	movwf	??___flge
 11549  1788  3000               	movlw	0
 11550  1789  0571               	andwf	___flge@ff1+1,w
 11551  178A  00F9               	movwf	??___flge+1
 11552  178B  3080               	movlw	128
 11553  178C  0572               	andwf	___flge@ff1+2,w
 11554  178D  00FA               	movwf	??___flge+2
 11555  178E  307F               	movlw	127
 11556  178F  0573               	andwf	___flge@ff1+3,w
 11557  1790  00FB               	movwf	??___flge+3
 11558  1791  087B               	movf	??___flge+3,w
 11559  1792  047A               	iorwf	??___flge+2,w
 11560  1793  0479               	iorwf	??___flge+1,w
 11561  1794  0478               	iorwf	??___flge,w
 11562  1795  1D03               	skipz
 11563  1796  2F9F               	goto	l631
 11564  1797  3000               	movlw	0
 11565  1798  00F3               	movwf	___flge@ff1+3
 11566  1799  3000               	movlw	0
 11567  179A  00F2               	movwf	___flge@ff1+2
 11568  179B  3000               	movlw	0
 11569  179C  00F1               	movwf	___flge@ff1+1
 11570  179D  3000               	movlw	0
 11571  179E  00F0               	movwf	___flge@ff1
 11572  179F                     l631:
 11573  179F  3000               	movlw	0
 11574  17A0  0574               	andwf	___flge@ff2,w
 11575  17A1  00F8               	movwf	??___flge
 11576  17A2  3000               	movlw	0
 11577  17A3  0575               	andwf	___flge@ff2+1,w
 11578  17A4  00F9               	movwf	??___flge+1
 11579  17A5  3080               	movlw	128
 11580  17A6  0576               	andwf	___flge@ff2+2,w
 11581  17A7  00FA               	movwf	??___flge+2
 11582  17A8  307F               	movlw	127
 11583  17A9  0577               	andwf	___flge@ff2+3,w
 11584  17AA  00FB               	movwf	??___flge+3
 11585  17AB  087B               	movf	??___flge+3,w
 11586  17AC  047A               	iorwf	??___flge+2,w
 11587  17AD  0479               	iorwf	??___flge+1,w
 11588  17AE  0478               	iorwf	??___flge,w
 11589  17AF  1D03               	skipz
 11590  17B0  2FB9               	goto	l3127
 11591  17B1  3000               	movlw	0
 11592  17B2  00F7               	movwf	___flge@ff2+3
 11593  17B3  3000               	movlw	0
 11594  17B4  00F6               	movwf	___flge@ff2+2
 11595  17B5  3000               	movlw	0
 11596  17B6  00F5               	movwf	___flge@ff2+1
 11597  17B7  3000               	movlw	0
 11598  17B8  00F4               	movwf	___flge@ff2
 11599  17B9                     l3127:
 11600  17B9  1FF3               	btfss	___flge@ff1+3,7
 11601  17BA  2FD3               	goto	l3131
 11602  17BB  3000               	movlw	0
 11603  17BC  00F8               	movwf	??___flge
 11604  17BD  3000               	movlw	0
 11605  17BE  00F9               	movwf	??___flge+1
 11606  17BF  3000               	movlw	0
 11607  17C0  00FA               	movwf	??___flge+2
 11608  17C1  3080               	movlw	128
 11609  17C2  00FB               	movwf	??___flge+3
 11610  17C3  0870               	movf	___flge@ff1,w
 11611  17C4  02F8               	subwf	??___flge,f
 11612  17C5  0871               	movf	___flge@ff1+1,w
 11613  17C6  3BF9               	subwfb	??___flge+1,f
 11614  17C7  0872               	movf	___flge@ff1+2,w
 11615  17C8  3BFA               	subwfb	??___flge+2,f
 11616  17C9  0873               	movf	___flge@ff1+3,w
 11617  17CA  3BFB               	subwfb	??___flge+3,f
 11618  17CB  087B               	movf	??___flge+3,w
 11619  17CC  00F3               	movwf	___flge@ff1+3
 11620  17CD  087A               	movf	??___flge+2,w
 11621  17CE  00F2               	movwf	___flge@ff1+2
 11622  17CF  0879               	movf	??___flge+1,w
 11623  17D0  00F1               	movwf	___flge@ff1+1
 11624  17D1  0878               	movf	??___flge,w
 11625  17D2  00F0               	movwf	___flge@ff1
 11626  17D3                     l3131:
 11627  17D3  1FF7               	btfss	___flge@ff2+3,7
 11628  17D4  2FED               	goto	l634
 11629  17D5  3000               	movlw	0
 11630  17D6  00F8               	movwf	??___flge
 11631  17D7  3000               	movlw	0
 11632  17D8  00F9               	movwf	??___flge+1
 11633  17D9  3000               	movlw	0
 11634  17DA  00FA               	movwf	??___flge+2
 11635  17DB  3080               	movlw	128
 11636  17DC  00FB               	movwf	??___flge+3
 11637  17DD  0874               	movf	___flge@ff2,w
 11638  17DE  02F8               	subwf	??___flge,f
 11639  17DF  0875               	movf	___flge@ff2+1,w
 11640  17E0  3BF9               	subwfb	??___flge+1,f
 11641  17E1  0876               	movf	___flge@ff2+2,w
 11642  17E2  3BFA               	subwfb	??___flge+2,f
 11643  17E3  0877               	movf	___flge@ff2+3,w
 11644  17E4  3BFB               	subwfb	??___flge+3,f
 11645  17E5  087B               	movf	??___flge+3,w
 11646  17E6  00F7               	movwf	___flge@ff2+3
 11647  17E7  087A               	movf	??___flge+2,w
 11648  17E8  00F6               	movwf	___flge@ff2+2
 11649  17E9  0879               	movf	??___flge+1,w
 11650  17EA  00F5               	movwf	___flge@ff2+1
 11651  17EB  0878               	movf	??___flge,w
 11652  17EC  00F4               	movwf	___flge@ff2
 11653  17ED                     l634:
 11654  17ED  3080               	movlw	128
 11655  17EE  06F3               	xorwf	___flge@ff1+3,f
 11656  17EF  3080               	movlw	128
 11657  17F0  06F7               	xorwf	___flge@ff2+3,f
 11658  17F1  0877               	movf	___flge@ff2+3,w
 11659  17F2  0273               	subwf	___flge@ff1+3,w
 11660  17F3  1D03               	skipz
 11661  17F4  0008               	return
 11662  17F5  0876               	movf	___flge@ff2+2,w
 11663  17F6  0272               	subwf	___flge@ff1+2,w
 11664  17F7  1D03               	skipz
 11665  17F8  0008               	return
 11666  17F9  0875               	movf	___flge@ff2+1,w
 11667  17FA  0271               	subwf	___flge@ff1+1,w
 11668  17FB  1D03               	skipz
 11669  17FC  0008               	return
 11670  17FD  0874               	movf	___flge@ff2,w
 11671  17FE  0270               	subwf	___flge@ff1,w
 11672  17FF  0008               	return
 11673  1800                     __end_of___flge:
 11674                           
 11675                           	psect	text46
 11676  002F                     __ptext46:	
 11677 ;; *************** function ___fldiv *****************
 11678 ;; Defined at:
 11679 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
 11680 ;; Parameters:    Size  Location     Type
 11681 ;;  a               4    0[COMMON] unsigned int 
 11682 ;;  b               4    4[COMMON] unsigned int 
 11683 ;; Auto vars:     Size  Location     Type
 11684 ;;  grs             4    7[BANK0 ] unsigned long 
 11685 ;;  rem             4    0[BANK0 ] unsigned long 
 11686 ;;  new_exp         2    5[BANK0 ] int 
 11687 ;;  aexp            1   12[BANK0 ] unsigned char 
 11688 ;;  bexp            1   11[BANK0 ] unsigned char 
 11689 ;;  sign            1    4[BANK0 ] unsigned char 
 11690 ;; Return value:  Size  Location     Type
 11691 ;;                  4    0[COMMON] unsigned char 
 11692 ;; Registers used:
 11693 ;;		wreg, status,2, status,0
 11694 ;; Tracked objects:
 11695 ;;		On entry : 1E/0
 11696 ;;		On exit  : 1F/0
 11697 ;;		Unchanged: 0/0
 11698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11699 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11700 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11701 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11702 ;;      Totals:        13      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11703 ;;Total ram usage:       26 bytes
 11704 ;; Hardware stack levels used: 1
 11705 ;; This function calls:
 11706 ;;		Nothing
 11707 ;; This function is called by:
 11708 ;;		_FLOAT_to_string
 11709 ;; This function uses a non-reentrant model
 11710 ;;
 11711                           
 11712                           
 11713                           ;psect for function ___fldiv
 11714  002F                     ___fldiv:
 11715                           
 11716                           ;incstack = 0
 11717                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 11718  002F  0877               	movf	___fldiv@b+3,w
 11719  0030  3980               	andlw	128
 11720  0031  00F8               	movwf	??___fldiv
 11721  0032  0878               	movf	??___fldiv,w
 11722  0033  0020               	movlb	0	; select bank0
 11723  0034  00A4               	movwf	___fldiv@sign
 11724  0035  3577               	lslf	___fldiv@b+3,w
 11725  0036  00F8               	movwf	??___fldiv
 11726  0037  0878               	movf	??___fldiv,w
 11727  0038  00AB               	movwf	___fldiv@bexp
 11728  0039  1BF6               	btfsc	___fldiv@b+2,7
 11729  003A  142B               	bsf	___fldiv@bexp,0
 11730  003B  082B               	movf	___fldiv@bexp,w
 11731  003C  1903               	btfsc	3,2
 11732  003D  284C               	goto	l3209
 11733  003E  0A2B               	incf	___fldiv@bexp,w
 11734  003F  1D03               	btfss	3,2
 11735  0040  2849               	goto	l3205
 11736  0041  3000               	movlw	0
 11737  0042  00F7               	movwf	___fldiv@b+3
 11738  0043  3000               	movlw	0
 11739  0044  00F6               	movwf	___fldiv@b+2
 11740  0045  3000               	movlw	0
 11741  0046  00F5               	movwf	___fldiv@b+1
 11742  0047  3000               	movlw	0
 11743  0048  00F4               	movwf	___fldiv@b
 11744  0049                     l3205:
 11745  0049  17F6               	bsf	___fldiv@b+2,7
 11746  004A  01F7               	clrf	___fldiv@b+3
 11747  004B  2854               	goto	l3211
 11748  004C                     l3209:
 11749  004C  3000               	movlw	0
 11750  004D  00F7               	movwf	___fldiv@b+3
 11751  004E  3000               	movlw	0
 11752  004F  00F6               	movwf	___fldiv@b+2
 11753  0050  3000               	movlw	0
 11754  0051  00F5               	movwf	___fldiv@b+1
 11755  0052  3000               	movlw	0
 11756  0053  00F4               	movwf	___fldiv@b
 11757  0054                     l3211:
 11758  0054  0873               	movf	___fldiv@a+3,w
 11759  0055  3980               	andlw	128
 11760  0056  00F8               	movwf	??___fldiv
 11761  0057  0878               	movf	??___fldiv,w
 11762  0058  06A4               	xorwf	___fldiv@sign,f
 11763  0059  3573               	lslf	___fldiv@a+3,w
 11764  005A  00F8               	movwf	??___fldiv
 11765  005B  0878               	movf	??___fldiv,w
 11766  005C  00AC               	movwf	___fldiv@aexp
 11767  005D  1BF2               	btfsc	___fldiv@a+2,7
 11768  005E  142C               	bsf	___fldiv@aexp,0
 11769  005F  082C               	movf	___fldiv@aexp,w
 11770  0060  1903               	btfsc	3,2
 11771  0061  2870               	goto	l3229
 11772  0062  0A2C               	incf	___fldiv@aexp,w
 11773  0063  1D03               	btfss	3,2
 11774  0064  286D               	goto	l3225
 11775  0065  3000               	movlw	0
 11776  0066  00F3               	movwf	___fldiv@a+3
 11777  0067  3000               	movlw	0
 11778  0068  00F2               	movwf	___fldiv@a+2
 11779  0069  3000               	movlw	0
 11780  006A  00F1               	movwf	___fldiv@a+1
 11781  006B  3000               	movlw	0
 11782  006C  00F0               	movwf	___fldiv@a
 11783  006D                     l3225:
 11784  006D  17F2               	bsf	___fldiv@a+2,7
 11785  006E  01F3               	clrf	___fldiv@a+3
 11786  006F  2878               	goto	l810
 11787  0070                     l3229:
 11788  0070  3000               	movlw	0
 11789  0071  00F3               	movwf	___fldiv@a+3
 11790  0072  3000               	movlw	0
 11791  0073  00F2               	movwf	___fldiv@a+2
 11792  0074  3000               	movlw	0
 11793  0075  00F1               	movwf	___fldiv@a+1
 11794  0076  3000               	movlw	0
 11795  0077  00F0               	movwf	___fldiv@a
 11796  0078                     l810:
 11797  0078  0873               	movf	___fldiv@a+3,w
 11798  0079  0472               	iorwf	___fldiv@a+2,w
 11799  007A  0471               	iorwf	___fldiv@a+1,w
 11800  007B  0470               	iorwf	___fldiv@a,w
 11801  007C  1D03               	skipz
 11802  007D  2897               	goto	l3239
 11803  007E  3000               	movlw	0
 11804  007F  00F7               	movwf	___fldiv@b+3
 11805  0080  3000               	movlw	0
 11806  0081  00F6               	movwf	___fldiv@b+2
 11807  0082  3000               	movlw	0
 11808  0083  00F5               	movwf	___fldiv@b+1
 11809  0084  3000               	movlw	0
 11810  0085  00F4               	movwf	___fldiv@b
 11811  0086  3080               	movlw	128
 11812  0087  04F6               	iorwf	___fldiv@b+2,f
 11813  0088  307F               	movlw	127
 11814  0089  04F7               	iorwf	___fldiv@b+3,f
 11815  008A                     L5:
 11816  008A  0824               	movf	___fldiv@sign,w
 11817  008B  00F8               	movwf	??___fldiv
 11818  008C  0878               	movf	??___fldiv,w
 11819  008D  04F7               	iorwf	___fldiv@b+3,f
 11820  008E  0877               	movf	___fldiv@b+3,w
 11821  008F  00F3               	movwf	?___fldiv+3
 11822  0090  0876               	movf	___fldiv@b+2,w
 11823  0091  00F2               	movwf	?___fldiv+2
 11824  0092  0875               	movf	___fldiv@b+1,w
 11825  0093  00F1               	movwf	?___fldiv+1
 11826  0094  0874               	movf	___fldiv@b,w
 11827  0095  00F0               	movwf	?___fldiv
 11828  0096  0008               	return
 11829  0097                     l3239:
 11830  0097  082B               	movf	___fldiv@bexp,w
 11831  0098  1D03               	btfss	3,2
 11832  0099  28A3               	goto	l3245
 11833  009A  3000               	movlw	0
 11834  009B  00F3               	movwf	?___fldiv+3
 11835  009C  3000               	movlw	0
 11836  009D  00F2               	movwf	?___fldiv+2
 11837  009E  3000               	movlw	0
 11838  009F  00F1               	movwf	?___fldiv+1
 11839  00A0  3000               	movlw	0
 11840  00A1  00F0               	movwf	?___fldiv
 11841  00A2  0008               	return
 11842  00A3                     l3245:
 11843  00A3  082B               	movf	___fldiv@bexp,w
 11844  00A4  00F8               	movwf	??___fldiv
 11845  00A5  01F9               	clrf	??___fldiv+1
 11846  00A6  0879               	movf	??___fldiv+1,w
 11847  00A7  00FB               	movwf	??___fldiv+3
 11848  00A8  082C               	movf	___fldiv@aexp,w
 11849  00A9  0278               	subwf	??___fldiv,w
 11850  00AA  00FA               	movwf	??___fldiv+2
 11851  00AB  1C03               	skipc
 11852  00AC  03FB               	decf	??___fldiv+3,f
 11853  00AD  087A               	movf	??___fldiv+2,w
 11854  00AE  3E7F               	addlw	127
 11855  00AF  00A5               	movwf	___fldiv@new_exp
 11856  00B0  3000               	movlw	0
 11857  00B1  3D7B               	addwfc	??___fldiv+3,w
 11858  00B2  00A6               	movwf	___fldiv@new_exp+1
 11859  00B3  0877               	movf	___fldiv@b+3,w
 11860  00B4  00A3               	movwf	___fldiv@rem+3
 11861  00B5  0876               	movf	___fldiv@b+2,w
 11862  00B6  00A2               	movwf	___fldiv@rem+2
 11863  00B7  0875               	movf	___fldiv@b+1,w
 11864  00B8  00A1               	movwf	___fldiv@rem+1
 11865  00B9  0874               	movf	___fldiv@b,w
 11866  00BA  00A0               	movwf	___fldiv@rem
 11867  00BB  3000               	movlw	0
 11868  00BC  00F7               	movwf	___fldiv@b+3
 11869  00BD  3000               	movlw	0
 11870  00BE  00F6               	movwf	___fldiv@b+2
 11871  00BF  3000               	movlw	0
 11872  00C0  00F5               	movwf	___fldiv@b+1
 11873  00C1  3000               	movlw	0
 11874  00C2  00F4               	movwf	___fldiv@b
 11875  00C3  3000               	movlw	0
 11876  00C4  00AA               	movwf	___fldiv@grs+3
 11877  00C5  3000               	movlw	0
 11878  00C6  00A9               	movwf	___fldiv@grs+2
 11879  00C7  3000               	movlw	0
 11880  00C8  00A8               	movwf	___fldiv@grs+1
 11881  00C9  3000               	movlw	0
 11882  00CA  00A7               	movwf	___fldiv@grs
 11883  00CB  01AC               	clrf	___fldiv@aexp
 11884  00CC                     l3273:
 11885  00CC  301A               	movlw	26
 11886  00CD  022C               	subwf	___fldiv@aexp,w
 11887  00CE  1803               	btfsc	3,0
 11888  00CF  2908               	goto	l3275
 11889  00D0  082C               	movf	___fldiv@aexp,w
 11890  00D1  1903               	btfsc	3,2
 11891  00D2  28EA               	goto	l3265
 11892  00D3  3001               	movlw	1
 11893  00D4                     u4415:
 11894  00D4  35A0               	lslf	___fldiv@rem,f
 11895  00D5  0DA1               	rlf	___fldiv@rem+1,f
 11896  00D6  0DA2               	rlf	___fldiv@rem+2,f
 11897  00D7  0DA3               	rlf	___fldiv@rem+3,f
 11898  00D8  0B89               	decfsz	9,f
 11899  00D9  28D4               	goto	u4415
 11900  00DA  3001               	movlw	1
 11901  00DB                     u4425:
 11902  00DB  35F4               	lslf	___fldiv@b,f
 11903  00DC  0DF5               	rlf	___fldiv@b+1,f
 11904  00DD  0DF6               	rlf	___fldiv@b+2,f
 11905  00DE  0DF7               	rlf	___fldiv@b+3,f
 11906  00DF  0B89               	decfsz	9,f
 11907  00E0  28DB               	goto	u4425
 11908  00E1  1BAA               	btfsc	___fldiv@grs+3,7
 11909  00E2  1474               	bsf	___fldiv@b,0
 11910  00E3  3001               	movlw	1
 11911  00E4                     u4445:
 11912  00E4  35A7               	lslf	___fldiv@grs,f
 11913  00E5  0DA8               	rlf	___fldiv@grs+1,f
 11914  00E6  0DA9               	rlf	___fldiv@grs+2,f
 11915  00E7  0DAA               	rlf	___fldiv@grs+3,f
 11916  00E8  0B89               	decfsz	9,f
 11917  00E9  28E4               	goto	u4445
 11918  00EA                     l3265:
 11919  00EA  0873               	movf	___fldiv@a+3,w
 11920  00EB  0223               	subwf	___fldiv@rem+3,w
 11921  00EC  1D03               	skipz
 11922  00ED  28F8               	goto	u4455
 11923  00EE  0872               	movf	___fldiv@a+2,w
 11924  00EF  0222               	subwf	___fldiv@rem+2,w
 11925  00F0  1D03               	skipz
 11926  00F1  28F8               	goto	u4455
 11927  00F2  0871               	movf	___fldiv@a+1,w
 11928  00F3  0221               	subwf	___fldiv@rem+1,w
 11929  00F4  1D03               	skipz
 11930  00F5  28F8               	goto	u4455
 11931  00F6  0870               	movf	___fldiv@a,w
 11932  00F7  0220               	subwf	___fldiv@rem,w
 11933  00F8                     u4455:
 11934  00F8  1C03               	skipc
 11935  00F9  2903               	goto	l3271
 11936  00FA  172A               	bsf	___fldiv@grs+3,6
 11937  00FB  0870               	movf	___fldiv@a,w
 11938  00FC  02A0               	subwf	___fldiv@rem,f
 11939  00FD  0871               	movf	___fldiv@a+1,w
 11940  00FE  3BA1               	subwfb	___fldiv@rem+1,f
 11941  00FF  0872               	movf	___fldiv@a+2,w
 11942  0100  3BA2               	subwfb	___fldiv@rem+2,f
 11943  0101  0873               	movf	___fldiv@a+3,w
 11944  0102  3BA3               	subwfb	___fldiv@rem+3,f
 11945  0103                     l3271:
 11946  0103  3001               	movlw	1
 11947  0104  00F8               	movwf	??___fldiv
 11948  0105  0878               	movf	??___fldiv,w
 11949  0106  07AC               	addwf	___fldiv@aexp,f
 11950  0107  28CC               	goto	l3273
 11951  0108                     l3275:
 11952  0108  0823               	movf	___fldiv@rem+3,w
 11953  0109  0422               	iorwf	___fldiv@rem+2,w
 11954  010A  0421               	iorwf	___fldiv@rem+1,w
 11955  010B  0420               	iorwf	___fldiv@rem,w
 11956  010C  1D03               	btfss	3,2
 11957  010D  1427               	bsf	___fldiv@grs,0
 11958  010E                     l3289:
 11959  010E  1BF6               	btfsc	___fldiv@b+2,7
 11960  010F  2925               	goto	l3291
 11961  0110  3001               	movlw	1
 11962  0111                     u4485:
 11963  0111  35F4               	lslf	___fldiv@b,f
 11964  0112  0DF5               	rlf	___fldiv@b+1,f
 11965  0113  0DF6               	rlf	___fldiv@b+2,f
 11966  0114  0DF7               	rlf	___fldiv@b+3,f
 11967  0115  0B89               	decfsz	9,f
 11968  0116  2911               	goto	u4485
 11969  0117  1BAA               	btfsc	___fldiv@grs+3,7
 11970  0118  1474               	bsf	___fldiv@b,0
 11971  0119  3001               	movlw	1
 11972  011A                     u4505:
 11973  011A  35A7               	lslf	___fldiv@grs,f
 11974  011B  0DA8               	rlf	___fldiv@grs+1,f
 11975  011C  0DA9               	rlf	___fldiv@grs+2,f
 11976  011D  0DAA               	rlf	___fldiv@grs+3,f
 11977  011E  0B89               	decfsz	9,f
 11978  011F  291A               	goto	u4505
 11979  0120  30FF               	movlw	255
 11980  0121  07A5               	addwf	___fldiv@new_exp,f
 11981  0122  30FF               	movlw	255
 11982  0123  3DA6               	addwfc	___fldiv@new_exp+1,f
 11983  0124  290E               	goto	l3289
 11984  0125                     l3291:
 11985  0125  01AC               	clrf	___fldiv@aexp
 11986  0126  1FAA               	btfss	___fldiv@grs+3,7
 11987  0127  293E               	goto	l3301
 11988  0128  30FF               	movlw	255
 11989  0129  0527               	andwf	___fldiv@grs,w
 11990  012A  00F8               	movwf	??___fldiv
 11991  012B  30FF               	movlw	255
 11992  012C  0528               	andwf	___fldiv@grs+1,w
 11993  012D  00F9               	movwf	??___fldiv+1
 11994  012E  30FF               	movlw	255
 11995  012F  0529               	andwf	___fldiv@grs+2,w
 11996  0130  00FA               	movwf	??___fldiv+2
 11997  0131  307F               	movlw	127
 11998  0132  052A               	andwf	___fldiv@grs+3,w
 11999  0133  00FB               	movwf	??___fldiv+3
 12000  0134  087B               	movf	??___fldiv+3,w
 12001  0135  047A               	iorwf	??___fldiv+2,w
 12002  0136  0479               	iorwf	??___fldiv+1,w
 12003  0137  0478               	iorwf	??___fldiv,w
 12004  0138  1903               	skipnz
 12005  0139  1874               	btfsc	___fldiv@b,0
 12006  013A  293C               	goto	l3297
 12007  013B  293E               	goto	l3301
 12008  013C                     l3297:
 12009  013C  01AC               	clrf	___fldiv@aexp
 12010  013D  0AAC               	incf	___fldiv@aexp,f
 12011  013E                     l3301:
 12012  013E  082C               	movf	___fldiv@aexp,w
 12013  013F  1903               	btfsc	3,2
 12014  0140  2967               	goto	l3311
 12015  0141  3001               	movlw	1
 12016  0142  07F4               	addwf	___fldiv@b,f
 12017  0143  3000               	movlw	0
 12018  0144  3DF5               	addwfc	___fldiv@b+1,f
 12019  0145  3000               	movlw	0
 12020  0146  3DF6               	addwfc	___fldiv@b+2,f
 12021  0147  3000               	movlw	0
 12022  0148  3DF7               	addwfc	___fldiv@b+3,f
 12023  0149  1C77               	btfss	___fldiv@b+3,0
 12024  014A  2967               	goto	l3311
 12025  014B  0874               	movf	___fldiv@b,w
 12026  014C  00F8               	movwf	??___fldiv
 12027  014D  0875               	movf	___fldiv@b+1,w
 12028  014E  00F9               	movwf	??___fldiv+1
 12029  014F  0876               	movf	___fldiv@b+2,w
 12030  0150  00FA               	movwf	??___fldiv+2
 12031  0151  0877               	movf	___fldiv@b+3,w
 12032  0152  00FB               	movwf	??___fldiv+3
 12033  0153  3001               	movlw	1
 12034  0154  00FC               	movwf	??___fldiv+4
 12035  0155                     u4575:
 12036  0155  37FB               	asrf	??___fldiv+3,f
 12037  0156  0CFA               	rrf	??___fldiv+2,f
 12038  0157  0CF9               	rrf	??___fldiv+1,f
 12039  0158  0CF8               	rrf	??___fldiv,f
 12040  0159  0BFC               	decfsz	??___fldiv+4,f
 12041  015A  2955               	goto	u4575
 12042  015B  087B               	movf	??___fldiv+3,w
 12043  015C  00F7               	movwf	___fldiv@b+3
 12044  015D  087A               	movf	??___fldiv+2,w
 12045  015E  00F6               	movwf	___fldiv@b+2
 12046  015F  0879               	movf	??___fldiv+1,w
 12047  0160  00F5               	movwf	___fldiv@b+1
 12048  0161  0878               	movf	??___fldiv,w
 12049  0162  00F4               	movwf	___fldiv@b
 12050  0163  3001               	movlw	1
 12051  0164  07A5               	addwf	___fldiv@new_exp,f
 12052  0165  3000               	movlw	0
 12053  0166  3DA6               	addwfc	___fldiv@new_exp+1,f
 12054  0167                     l3311:
 12055  0167  0826               	movf	___fldiv@new_exp+1,w
 12056  0168  3A80               	xorlw	128
 12057  0169  00F8               	movwf	??___fldiv
 12058  016A  3080               	movlw	128
 12059  016B  0278               	subwf	??___fldiv,w
 12060  016C  1D03               	skipz
 12061  016D  2970               	goto	u4585
 12062  016E  30FF               	movlw	255
 12063  016F  0225               	subwf	___fldiv@new_exp,w
 12064  0170                     u4585:
 12065  0170  1C03               	skipc
 12066  0171  297F               	goto	l831
 12067  0172  30FF               	movlw	255
 12068  0173  0020               	movlb	0	; select bank0
 12069  0174  00A5               	movwf	___fldiv@new_exp
 12070  0175  3000               	movlw	0
 12071  0176  00A6               	movwf	___fldiv@new_exp+1
 12072  0177  3000               	movlw	0
 12073  0178  00F7               	movwf	___fldiv@b+3
 12074  0179  3000               	movlw	0
 12075  017A  00F6               	movwf	___fldiv@b+2
 12076  017B  3000               	movlw	0
 12077  017C  00F5               	movwf	___fldiv@b+1
 12078  017D  3000               	movlw	0
 12079  017E  00F4               	movwf	___fldiv@b
 12080  017F                     l831:
 12081  017F  0020               	movlb	0	; select bank0
 12082  0180  0826               	movf	___fldiv@new_exp+1,w
 12083  0181  3A80               	xorlw	128
 12084  0182  00F8               	movwf	??___fldiv
 12085  0183  3080               	movlw	128
 12086  0184  0278               	subwf	??___fldiv,w
 12087  0185  1D03               	skipz
 12088  0186  2989               	goto	u4595
 12089  0187  3001               	movlw	1
 12090  0188  0225               	subwf	___fldiv@new_exp,w
 12091  0189                     u4595:
 12092  0189  1803               	skipnc
 12093  018A  2997               	goto	l832
 12094  018B  0020               	movlb	0	; select bank0
 12095  018C  01A5               	clrf	___fldiv@new_exp
 12096  018D  01A6               	clrf	___fldiv@new_exp+1
 12097  018E  3000               	movlw	0
 12098  018F  00F7               	movwf	___fldiv@b+3
 12099  0190  3000               	movlw	0
 12100  0191  00F6               	movwf	___fldiv@b+2
 12101  0192  3000               	movlw	0
 12102  0193  00F5               	movwf	___fldiv@b+1
 12103  0194  3000               	movlw	0
 12104  0195  00F4               	movwf	___fldiv@b
 12105  0196  01A4               	clrf	___fldiv@sign
 12106  0197                     l832:
 12107  0197  0020               	movlb	0	; select bank0
 12108  0198  0825               	movf	___fldiv@new_exp,w
 12109  0199  00F8               	movwf	??___fldiv
 12110  019A  0878               	movf	??___fldiv,w
 12111  019B  00AB               	movwf	___fldiv@bexp
 12112  019C  1C2B               	btfss	___fldiv@bexp,0
 12113  019D  29A0               	goto	l3325
 12114  019E  17F6               	bsf	___fldiv@b+2,7
 12115  019F  29A4               	goto	l834
 12116  01A0                     l3325:
 12117  01A0  307F               	movlw	127
 12118  01A1  00F8               	movwf	??___fldiv
 12119  01A2  0878               	movf	??___fldiv,w
 12120  01A3  05F6               	andwf	___fldiv@b+2,f
 12121  01A4                     l834:
 12122  01A4  362B               	lsrf	___fldiv@bexp,w
 12123  01A5  00F8               	movwf	??___fldiv
 12124  01A6  0878               	movf	??___fldiv,w
 12125  01A7  00F7               	movwf	___fldiv@b+3
 12126  01A8  288A               	goto	L5
 12127  01A9                     __end_of___fldiv:
 12128  007E                     btemp	set	126	;btemp
 12129  007E                     wtemp0	set	126
 12130                           
 12131                           	psect	idloc
 12132                           
 12133                           ;Config register IDLOC0 @ 0x8000
 12134                           ;	unspecified, using default values
 12135  8000                     	org	32768
 12136  8000  3FFF               	dw	16383
 12137                           
 12138                           ;Config register IDLOC1 @ 0x8001
 12139                           ;	unspecified, using default values
 12140  8001                     	org	32769
 12141  8001  3FFF               	dw	16383
 12142                           
 12143                           ;Config register IDLOC2 @ 0x8002
 12144                           ;	unspecified, using default values
 12145  8002                     	org	32770
 12146  8002  3FFF               	dw	16383
 12147                           
 12148                           ;Config register IDLOC3 @ 0x8003
 12149                           ;	unspecified, using default values
 12150  8003                     	org	32771
 12151  8003  3FFF               	dw	16383
 12152                           
 12153                           	psect	config
 12154                           
 12155                           ;Config register CONFIG1 @ 0x8007
 12156                           ;	External Oscillator mode selection bits
 12157                           ;	FEXTOSC = OFF, Oscillator not enabled
 12158                           ;	Power-up default value for COSC bits
 12159                           ;	RSTOSC = HFINT32, HFINTOSC with OSCFRQ= 32 MHz and CDIV = 1:1
 12160                           ;	Clock Out Enable bit
 12161                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 12162                           ;	Clock Switch Enable bit
 12163                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 12164                           ;	Fail-Safe Clock Monitor Enable bit
 12165                           ;	FCMEN = ON, FSCM timer enabled
 12166  8007                     	org	32775
 12167  8007  3F8C               	dw	16268
 12168                           
 12169                           ;Config register CONFIG2 @ 0x8008
 12170                           ;	Master Clear Enable bit
 12171                           ;	MCLRE = ON, MCLR pin is Master Clear function
 12172                           ;	Power-up Timer Enable bit
 12173                           ;	PWRTE = OFF, PWRT disabled
 12174                           ;	Low-Power BOR enable bit
 12175                           ;	LPBOREN = OFF, ULPBOR disabled
 12176                           ;	Brown-out reset enable bits
 12177                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 12178                           ;	Brown-out Reset Voltage Selection
 12179                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 12180                           ;	Zero-cross detect disable
 12181                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 12182                           ;	Peripheral Pin Select one-way control
 12183                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 12184                           ;	Stack Overflow/Underflow Reset Enable bit
 12185                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 12186                           ;	Background Debugger
 12187                           ;	DEBUG = 0x1, unprogrammed default
 12188  8008                     	org	32776
 12189  8008  3FFF               	dw	16383
 12190                           
 12191                           ;Config register CONFIG3 @ 0x8009
 12192                           ;	WDT Period Select bits
 12193                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 12194                           ;	WDT operating mode
 12195                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 12196                           ;	WDT Window Select bits
 12197                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 12198                           ;	WDT input clock selector
 12199                           ;	WDTCCS = SC, Software Control
 12200  8009                     	org	32777
 12201  8009  3F9F               	dw	16287
 12202                           
 12203                           ;Config register CONFIG4 @ 0x800A
 12204                           ;	UserNVM self-write protection bits
 12205                           ;	WRT = OFF, Write protection off
 12206                           ;	Scanner Enable bit
 12207                           ;	SCANE = available, Scanner module is available for use
 12208                           ;	Low Voltage Programming Enable bit
 12209                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 12210  800A                     	org	32778
 12211  800A  3FFF               	dw	16383
 12212                           
 12213                           ;Config register CONFIG5 @ 0x800B
 12214                           ;	UserNVM Program memory code protection bit
 12215                           ;	CP = OFF, Program Memory code protection disabled
 12216                           ;	DataNVM code protection bit
 12217                           ;	CPD = OFF, Data EEPROM code protection disabled
 12218  800B                     	org	32779
 12219  800B  3FFF               	dw	16383

Data Sizes:
    Strings     51
    Constant    0
    Data        7
    BSS         42
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     31      80
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> stoa@nuls(BANK0[7]), dbuf(BANK1[32]), ?_printf(BANK1[2]), MLX90614_writeEmissivity@emissivity(COMMON[4]), 
		 -> main@buffer(BANK1[8]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> stoa@nuls(BANK0[7]), dbuf(BANK1[32]), ?_printf(BANK1[2]), MLX90614_writeEmissivity@emissivity(COMMON[4]), 
		 -> main@buffer(BANK1[8]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S847_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_5(CODE[6]), STR_4(CODE[6]), STR_3(CODE[8]), STR_2(CODE[15]), 
		 -> STR_1(CODE[22]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 22
		 -> STR_5(CODE[6]), STR_4(CODE[6]), STR_3(CODE[8]), STR_2(CODE[15]), 
		 -> STR_1(CODE[22]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 8
		 -> ?_printf(BANK1[2]), MLX90614_writeEmissivity@emissivity(COMMON[4]), main@buffer(BANK1[8]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    xtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(1) Largest target is 8
		 -> ?_printf(BANK1[2]), MLX90614_writeEmissivity@emissivity(COMMON[4]), main@buffer(BANK1[8]), 

    stoa@cp	PTR unsigned char  size(1) Largest target is 8
		 -> stoa@nuls(BANK0[7]), ?_printf(BANK1[2]), MLX90614_writeEmissivity@emissivity(COMMON[4]), main@buffer(BANK1[8]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_5(CODE[6]), STR_4(CODE[6]), STR_3(CODE[8]), STR_2(CODE[15]), 
		 -> STR_1(CODE[22]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    FLOAT_to_string@text	PTR unsigned char  size(1) Largest target is 8
		 -> main@buffer(BANK1[8]), 


Critical Paths under _main in COMMON

    _main->_FLOAT_to_string
    _serial_init->___lldiv
    _xtoa->_toupper
    _toupper->_islower
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_uart_tx
    _abs->___aomod
    _MLX90614_readObjectTempC->___xxtofl
    _MLX90614_readAmbientTempC->___xxtofl
    _MLX90614_ReadReg->_i2c_read
    _MLX90614_ReadReg->_i2c_write
    _FLOAT_to_string->___fldiv
    _FLOAT_to_string->___xxtofl
    ___xxtofl->_MLX90614_ReadReg
    ___flsub->___xxtofl
    ___fladd->___fldiv
    ___fladd->___xxtofl
    ___flmul->___xxtofl

Critical Paths under _main in BANK0

    _main->_printf
    _sensorPlaca->_printf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod
    _MLX90614_readObjectTempC->___fladd
    _MLX90614_readAmbientTempC->___fladd
    _FLOAT_to_string->___flsub
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl

Critical Paths under _main in BANK1

    _main->_sensorPlaca
    _sensorPlaca->_printf
    _printf->_vfprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0   57827
                                             17 BANK1     14    14      0
                    _FLOAT_to_string
          _MLX90614_readAmbientTempC
           _MLX90614_readObjectTempC
                           _adc_init
                           _i2c_init
                          _port_init
                             _printf
                        _sensorPlaca
                        _serial_init
 ---------------------------------------------------------------------------------
 (1) _serial_init                                         10     6      4     458
                                              0 BANK0     10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _sensorPlaca                                          2     2      0   15596
                                             15 BANK1      2     2      0
                             ___wmul
                           _i2c_read
                        _i2c_restart
                          _i2c_start
                           _i2c_stop
                          _i2c_write
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              10     4      6   15308
                                             79 BANK0      1     1      0
                                              8 BANK1      7     1      6
                             ___wmul (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3   14896
                                              0 BANK1      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           39    37      2   14560
                                             53 BANK0     26    24      2
                               _dtoa
                              _fputc
                               _stoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                38    29      9    5185
                                             15 BANK0     38    29      9
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              6 COMMON     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     161
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              8     6      2     161
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    20      2    2005
                                             11 COMMON     2     0      2
                                              0 BANK0     20    20      0
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                30    22      8    5280
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    3657
                                             12 COMMON     1     1      0
                                              7 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               5     3      2     156
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    1583
                                             11 COMMON     1     0      1
                                              0 BANK0      7     7      0
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                8     5      3    1268
                                              3 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      44
                                              2 COMMON     1     1      0
                            _uart_tx
 ---------------------------------------------------------------------------------
 (10) _uart_tx                                             2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _port_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MLX90614_readObjectTempC                             8     4      4    6394
                                             56 BANK0      8     4      4
                   _MLX90614_ReadReg
                            ___fladd
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _MLX90614_readAmbientTempC                            8     4      4    6394
                                             56 BANK0      8     4      4
                   _MLX90614_ReadReg
                            ___fladd
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _MLX90614_ReadReg                                     9     7      2     113
                                              1 COMMON     8     6      2
                           _i2c_read
                        _i2c_restart
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_restart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                             1     1      0      22
                                              0 COMMON     1     1      0
                            _i2c_ack
                           _i2c_nack
 ---------------------------------------------------------------------------------
 (3) _i2c_nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _FLOAT_to_string                                     19    13      6   13526
                                             13 COMMON     1     1      0
                                             64 BANK0      6     0      6
                                              0 BANK1     12    12      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     689
                                              9 COMMON     4     0      4
                                              0 BANK0     10    10      0
                   _MLX90614_ReadReg (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     368
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2789
                                             56 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             20    12      8    2592
                                             36 BANK0     20    12      8
                   _MLX90614_ReadReg (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    3000
                                             10 BANK0     26    18      8
                   _MLX90614_ReadReg (ARG)
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     942
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1703
                                              0 COMMON    13     5      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FLOAT_to_string
     ___fladd
       _MLX90614_ReadReg (ARG)
         _i2c_read
           _i2c_ack
           _i2c_nack
         _i2c_restart
         _i2c_start
         _i2c_stop
         _i2c_write
       ___fldiv (ARG)
       ___flmul (ARG)
         _MLX90614_ReadReg (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _MLX90614_ReadReg (ARG)
       ___xxtofl (ARG)
     ___fldiv
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
     ___xxtofl
   _MLX90614_readAmbientTempC
     _MLX90614_ReadReg
     ___fladd
     ___flmul
     ___xxtofl
   _MLX90614_readObjectTempC
     _MLX90614_ReadReg
     ___fladd
     ___flmul
     ___xxtofl
   _adc_init
   _i2c_init
   _port_init
   _printf
     ___wmul (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _uart_tx
             _fputs
               _fputc
             _strlen
         _fputc
         _stoa
           _fputc
           _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
           _toupper
             _islower
   _sensorPlaca
     ___wmul
     _i2c_read
     _i2c_restart
     _i2c_start
     _i2c_stop
     _i2c_write
     _printf
   _serial_init
     ___lldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1F      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      AE      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      AE      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Aug 03 13:58:01 2022

                      ___fldiv@aexp 002C                        ___fldiv@bexp 002B  
                      ___fldiv@sign 0024                 ___wmul@multiplicand 0072  
               __Umul8_16@word_mpld 0076                                 l220 1340  
                               l214 1336                                 l240 1367  
                               l208 133B                                 l234 135F  
                               l226 138E                                 l246 137F  
                               l453 145F                                 l631 179F  
                               l553 0BF1                                 l810 0078  
                               l634 17ED                                 l900 0896  
                               l654 1769                                 l566 0AFE  
                               l831 017F                                 l832 0197  
                               l760 026B                                 l834 01A4  
                               l754 01F5                                 l907 08AA  
                               l908 08B4                                 l862 0595  
                               l758 0288                                 l775 030B  
                               l952 1654                                 l953 1660  
                               l962 0C6A                                 l963 0C7E  
                               l796 0382                                 l788 036A  
                               l869 14BC                                 l949 1634  
                               l957 0C48                                 l894 0860  
                               l966 0D11                                 l958 0C4F  
                               l989 09B2                                 l998 0A0C  
                               _abs 13C7                                 _pad 161D  
                               wreg 0009                        ___flmul@aexp 0038  
                      ___flmul@bexp 003D                        ___flmul@sign 0037  
                      ___flmul@temp 0042                        ___flmul@prod 003E  
          __size_of_FLOAT_to_string 0248           _MLX90614_readAmbientTempC 1545  
                      ___fltol@exp1 007A                                l1010 0D71  
                              l1006 0D56                                l1031 0E72  
                              ?_abs 0073                                l3001 033C  
                              l3005 033E                  serial_init@baudios 0020  
                              l3023 037A                                l3103 167B  
                              l3113 16A9                                l3105 1689  
                              l3211 0054                                l3131 17D3  
                              l3027 037E                                l2411 136C  
                              l3301 013E                                l3205 0049  
                              l3037 14B6                                l2501 0A85  
                              l3053 000B                                l3117 16B4  
                              l3311 0167                                l3127 17B9  
                              l3151 1729                                l2511 0AA1  
                              l2423 1519                                l3055 002A  
                              l3225 006D                                l3209 004C  
                              l3171 1757                                l3155 1732  
                              l2515 0AD1                                l2427 153C  
                              l2443 13E3                                l2603 0D1D  
                              l3325 01A0                                l3245 00A3  
                              l3229 0070                                l3181 1776  
                              l3173 1765                                l3085 1459  
                              l2509 0A92                                l2517 0ADD  
                              l2437 14EF                                l2445 13EE  
                              l2525 162A                                l2613 0D30  
                              l3271 0103                                l3239 0097  
                              l3511 08CF                                l2463 0B61  
                              l2535 1636                                l2607 0D25  
                              l3265 00EA                                l3273 00CC  
                              l3345 03A3                                l3601 0703  
                              l2465 0B65                                l2529 1632  
                              l2617 0D3C                                l3291 0125  
                              l3275 0108                                l3435 052B  
                              l3427 04FD                                l3363 03C6  
                              l3347 03A5                                l2475 0B7C  
                              l2459 0B3A                                l2643 09C3  
                              l2731 0E8E                                l2707 0E00  
                              l2715 0E41                                l3453 056B  
                              l3429 0514                                l3365 03C8  
                              l3349 03AD                                l3621 072A  
                              l3613 0726                                l2485 0BC4  
                              l2477 0B8B                                l2581 0C79  
                              l2661 0A10                                l2629 098F  
                              l3439 052D                                l3375 03DE  
                              l3367 03D0                                l3623 0748  
                              l2831 1398                                l2487 0BD0  
                              l2575 0C62                                l2647 09D4  
                              l2751 0EE1                                l3297 013C  
                              l3289 010E                                l3449 0556  
                              l2833 139A                                l2497 0A5E  
                              l2585 0CAB                                l2665 0A21  
                              l2657 09E4                                l2649 09E1  
                              l3459 0582                                l3483 086F  
                              l3643 074B                                l3571 05E0  
                              l2819 1387                                l2595 0C86  
                              l2667 0A2E                                l2691 0DB3  
                              l2683 0D81                                l2925 0273  
                              l2917 023B                                l2853 01C2  
                              l3477 0858                                l3645 07E4  
                              l3637 078A                                l3581 062D  
                              l2677 0D69                                l2773 0F66  
                              ?_pad 0027                                l2951 02A8  
                              l2943 0296                                l2927 0275  
                              l2935 0283                                l3487 0873  
                              l3575 05F6                                l2687 0D99  
                              l2783 0FAB                                l2759 0F1A  
                              l2953 02AA                                l2961 02B9  
                              l2881 01ED                                l2857 01C5  
                              l3497 08A8                                l3489 0883  
                              l3585 064D                                l2793 0FD2  
                              l2769 0F48                                l2971 0303  
                              l2859 01CD                                l3499 089B  
                              l3595 0684                                l3579 0616  
                              l3683 08ED                                l2877 01EA  
                              l3597 06B2                                l2789 0FCC  
                              l2887 01FF                                l2799 0FDD  
                              l2993 0331                                l2987 032A  
                              l2979 031D                                l2995 0333  
                              STR_1 1800                                STR_2 1816  
                              STR_3 1825                                STR_4 182D  
                              u3000 0C1E                                u3010 0C1F  
                              _LATA 0016                                _LATB 0017  
                              u3105 0C9A                                u3115 0CA6  
                              u3300 0DCB                                u3055 0C5A  
                              u3215 09DF                                u3160 0980  
                              u3320 0DEA                                u4025 14BD  
                              u3225 09EE                                u4105 167E  
                              u3330 0DEB                                u3085 0D1B  
                              u3245 0A2C                                u4125 168A  
                              u5005 15F5                                u2710 0B6C  
                              u4135 169E                                u5105 077C  
                              u4065 1460                                u2625 153A  
                              u3265 0D61                                u4145 16AA  
                              u2650 141B                                u3290 0DCA  
                              u4235 173B                                u5115 0755  
                              u4075 1465                                u3195 09AB  
                              u3355 0E25                                u2660 141C  
                              u3365 0E4B                                u3285 0DAD  
                              u5125 16FB                                u4415 00D4  
                              u5055 068E                                u2575 1370  
                              u4505 011A                                u4425 00DB  
                              u4265 1758                                u2745 0BB1  
                              u2905 1640                                u3385 0E61  
                              u5137 096E                                u2930 1404  
                              u3803 02CB                                u3395 0E6D  
                              u2940 1405                                u4445 00E4  
                              u3725 0279                                u2845 0ABF  
                              u2925 13D0                                u2950 14A4  
                              u4455 00F8                                u4295 176D  
                              u5095 0734                                u3680 025A  
                              u2960 14A5                                u4705 047E  
                              u3690 025B                                u2970 14DA  
                              u4715 04D0                                u3675 024F  
                              u2980 14DB                                u4485 0111  
                              u4725 04EC                                u3845 031E  
                              u4575 0155                                u4735 0500  
                              u4585 0170                                u4825 0544  
                              u3945 0355                                u4595 0189  
                              u4835 055F                                u4755 0509  
                              u3795 02AE                                u4915 0890  
                              _PIR3 070F                                u4845 0575  
                              u4695 0451                                u4935 08A2  
                              u4975 08BC                                u4895 087C  
                              abs@a 0073                                _dbuf 00AA  
                              _main 08D8                                _dtoa 0C03  
                              _prec 00A4                                _nout 00A0  
                              pad@i 002A                                pad@p 0028  
                              fsr0h 0005                                fsr1h 0007  
                              indf0 0000                                fsr0l 0004  
                              indf1 0001                                fsr1l 0006  
                              pad@w 002C                                _stoa 0975  
                              btemp 007E                                _xtoa 0D4E  
                              start 0002                   ?_MLX90614_ReadReg 0071  
                   ___fldiv@new_exp 0025                       ??_i2c_restart 0070  
                ??_MLX90614_ReadReg 0073                     __end_of_i2c_ack 1363  
                             ??_abs 0075                               ??_pad 007C  
                     ___fltol@sign1 0079                     __end_of___aodiv 0C03  
                             _ADCAP 009B                     __end_of___fladd 038A  
                             ?_main 0070                               ?_dtoa 0030  
                             _ADCLK 0098                     __end_of___aomod 0B10  
                             _ADPCH 009E                     __end_of___fldiv 01A9  
                             _ADREF 009A                     __end_of___flneg 080B  
                   __end_of___flmul 05A2                     __end_of___flsub 148F  
                   __end_of___fltol 1785                               ?_stoa 007B  
                   __end_of___lldiv 16BD                         i2c_read@ack 0070  
                             ?_xtoa 002F                        vfpfcnvrt@fmt 0055  
                      vfpfcnvrt@llu 0064                               _PORTA 000C  
                             _PORTB 000D                               _TRISA 0011  
                             _TRISB 0012                               _TRISC 0013  
                             _RXPPS 0ECB          FLOAT_to_string@tempo_float 00CC  
            FLOAT_to_string@decimal 0065                               _flags 00A6  
                             _fputc 1510                     __end_of_isalpha 14AC  
                             _fputs 14EC                               pad@fp 002E  
                             _width 00A2              FLOAT_to_string@largo_n 00D0  
                             _putch 1343                               dtoa@d 0030  
                             dtoa@i 004C                               dtoa@n 0044  
                             dtoa@p 003D                               dtoa@s 0042  
                             dtoa@w 0040                     __end_of_islower 1423  
                   __end_of_isupper 140C                     __end_of_uart_tx 1379  
                             stoa@i 002A                               stoa@l 0032  
                             stoa@p 0030                               stoa@s 007B  
                             stoa@w 002C                               status 0003  
                             wtemp0 007E                               xtoa@c 0053  
                             xtoa@d 002F                               xtoa@i 0051  
                             xtoa@n 0049                               xtoa@p 0044  
                             xtoa@w 0047                               xtoa@x 0037  
                   __end_of_toupper 14EC                        _toupper$1027 007C  
                   __initialization 07EA          ??_MLX90614_readObjectTempC 005C  
                      __end_of_main 0975                        __end_of_dtoa 0D4E  
                      __end_of_stoa 0A34                 FLOAT_to_string@text 0064  
                      __end_of_xtoa 0EA0                    __end_of_i2c_nack 136B  
                  __end_of_i2c_init 1457                    __end_of_i2c_read 139D  
                  __end_of_i2c_stop 1343                 __end_of_i2c_restart 1339  
                            ??_main 00DB                              ??_dtoa 0038  
                            ??_stoa 0020                              ??_xtoa 0038  
                            _ADCON0 0093                              _ADCON1 0094  
                            _ADCON2 0095                              ?_fputc 0073  
                            ?_fputs 007B                 MLX90614_ReadReg@reg 0076  
                            _ANSELA 0F38                              ?_putch 0070  
                            _ANSELB 0F43                              _ANSELC 0F4E  
                            _RC0PPS 0F20                    __end_of_adc_init 143D  
                            _RC1STA 011D                              _RC3PPS 0F23  
                            _RC4PPS 0F24                              _TX1REG 011A  
                            _TX1STA 011E                              u268lld 0B38  
                            u279lld 0A5C                  __size_of_i2c_start 0005  
                  __end_of___xxtofl 08D8                  __size_of_i2c_write 0010  
                 ??_FLOAT_to_string 007D                           ??_i2c_ack 0070  
                      ?_serial_init 0020                        vfprintf@cfmt 00D0  
                            ___flge 1785                           ??___aodiv 0070  
                         ??___fladd 004C                           ??___aomod 0070  
                            ___wmul 1457                           ??___fldiv 0078  
                         ??___flneg 0074                           ??___flmul 0032  
                         ??___flsub 007D                           ??___fltol 0074  
                         ??___lldiv 0078             FLOAT_to_string@cont_for 00D2  
                            _printf 139D                              pad@buf 0027  
                      ?_sensorPlaca 0070                              dtoa@fp 003F  
                            _strlen 13DE                              fputc@c 0073  
                            fputs@c 0023                              fputs@i 0024  
                            fputs@s 0026                           ??_isalpha 0072  
                __size_of__Umul8_16 001F                           ??_islower 0072  
                         ??_isupper 0072                           ??_uart_tx 0070  
                            stoa@cp 002F                              stoa@fp 002E  
                  __end_of_vfprintf 002F                              xtoa@fp 0046  
                         ??_toupper 0078                          ___flge@ff1 0070  
                        ___flge@ff2 0074                        ___xxtofl@arg 0026  
                      ___xxtofl@exp 0025                        ___xxtofl@val 0079  
           __end_of__initialization 07FD                          ___flneg@f1 0070  
                        ___fltol@f1 0070                      __pcstackCOMMON 0070  
                       _i2c_restart 1335                        __pidataBANK1 1354  
                     __end_of_fputc 1545                       __end_of_fputs 1510  
                     __end_of_putch 1348                   __end_of_i2c_start 133E  
                 __end_of_i2c_write 1389                             ??_fputc 0076  
                           ??_fputs 0020                             ??_putch 0072  
                        __pbssBANK1 00A0                           ?_i2c_nack 0070  
                         ?_i2c_init 0070                           ?_i2c_read 0070  
                         ?_i2c_stop 0070                   __end_of__Umul8_16 14CB  
                        __pmaintext 08D8                             ?___flge 0070  
                           ?___wmul 0070                             ?_printf 00D2  
                         ?_adc_init 0070                             ?_strlen 0070  
         __size_of_MLX90614_ReadReg 0037                           ?___xxtofl 0079  
                           _SP1BRGH 011C                             _SP1BRGL 011B  
                __size_of_vfpfcnvrt 0160                  __size_of_port_init 0016  
                           _SSP1ADD 018D                             _SSP1BUF 018C  
                        ??_i2c_nack 0070                          ??_i2c_init 0070  
                        ??_i2c_read 0070                          ??_i2c_stop 0070  
                           _i2c_ack 135B              MLX90614_ReadReg@valReg 0077  
                   __size_of___flge 007B                             ___aodiv 0B10  
                           ___fladd 01A9                             ___aomod 0A34  
                           ___fldiv 002F                             ___flneg 0802  
                           ___flmul 038A                             ___flsub 1472  
                           ___fltol 1720                             ___lldiv 166B  
                   __size_of___wmul 001B                           ?_vfprintf 00CA  
              __size_of_serial_init 004C                          ??_adc_init 0070  
                           __ptext1 15D1                             __ptext2 166B  
                           __ptext3 16BD                             __ptext4 139D  
                           __ptext5 0004                             __ptext6 0EA0  
                           __ptext7 0D4E                             __ptext8 14CB  
                           __ptext9 140C                     __size_of_printf 0014  
                   __size_of_strlen 0017                        __size_of_abs 0017  
                      __size_of_pad 004E                             _isalpha 148F  
                        ??___xxtofl 0020                __size_of_sensorPlaca 0063  
                           _islower 140C                             _isupper 13F5  
                   _FLOAT_to_string 05A2                             _uart_tx 136B  
                           clrloop0 1349                             _toupper 14CB  
              end_of_initialization 07FD                             fputc@fp 0075  
                           init_ram 134E                             fputs@fp 007B  
                           initloop 134F                     ___lldiv@divisor 0070  
                   ___lldiv@counter 007D                   __end_of_vfpfcnvrt 1000  
                 __end_of_port_init 13C7                          ??_vfprintf 00CD  
          FLOAT_to_string@tempo_int 00CA                             strlen@a 0073  
                           strlen@s 0074                         uart_tx@dato 0071  
                       ___fladd@grs 0057                       ___xxtofl@sign 0024  
                         _TRISCbits 0013   __size_of_MLX90614_readObjectTempC 0046  
         ?_MLX90614_readObjectTempC 0058                         ___fldiv@grs 0027  
                       ___fldiv@rem 0020                         ___flmul@grs 0039  
                        main@buffer 00DD                        ?_i2c_restart 0070  
                    __end_of___flge 1800                         vfpfcnvrt@ap 0056  
                       vfpfcnvrt@cp 006D                         vfpfcnvrt@fp 006E  
                       vfpfcnvrt@ll 005C                      __end_of___wmul 1472  
           __end_of_FLOAT_to_string 07EA                    _MLX90614_ReadReg 080B  
                    __end_of_printf 13B1               FLOAT_to_string@number 0060  
                    __end_of_strlen 13F5                 start_initialization 07EA  
                       __end_of_abs 13DE                           _i2c_start 1339  
                       __end_of_pad 166B                           _i2c_write 1379  
                 __size_of_i2c_nack 0008                   __size_of_i2c_init 001A  
                 __size_of_i2c_read 0014                   __size_of_i2c_stop 0005  
                       vfprintf@fmt 00CA                            ??___flge 0078  
                          ??___wmul 0074                           __Umul8_16 14AC  
                       __pdataBANK1 00E9                            ??_printf 006F  
                          ??_strlen 0072                           ___fladd@a 0048  
                         ___fladd@b 0044                           ___fldiv@a 0070  
                         ___fldiv@b 0074                   __size_of_adc_init 001A  
                         ___flmul@a 002E                           ___flmul@b 002A  
                         ___flsub@a 0058                           ___flsub@b 005C  
                         ___latbits 0002                       __pcstackBANK0 0020  
                     __pcstackBANK1 00CA                    ___aodiv@dividend 0028  
                        ?_i2c_start 0070                          ?_i2c_write 0070  
                 __size_of___xxtofl 0096                            ?_i2c_ack 0070  
                          ?___aodiv 0020  __size_of_MLX90614_readAmbientTempC 0046  
                          ?___fladd 0044                            ?___aomod 0020  
                          ?___fldiv 0070                    ___aodiv@quotient 0073  
                          ?___flneg 0070                            ?___flmul 002A  
                          ?___flsub 0058                            ?___fltol 0070  
                          ?___lldiv 0070          ?_MLX90614_readAmbientTempC 0058  
                        ?__Umul8_16 0070                           _high_byte 00A9  
                  ?_FLOAT_to_string 0060                   __size_of_vfprintf 002B  
                          _BAUD1CON 011F                            ?_isalpha 0070  
                          ?_islower 0070                            ?_isupper 0070  
                          ?_uart_tx 0070                      __size_of_fputc 0035  
                    __size_of_fputs 0024                            ?_toupper 0076  
                    __size_of_putch 0005                      ___wmul@product 0074  
                         clear_ram0 1348                       ??_serial_init 0024  
                          _PIR3bits 070F                            _SSP1CON1 0190  
                          _SSP1CON3 0192    __end_of_MLX90614_readObjectTempC 15D1  
                          _SSP1STAT 018F                __size_of_i2c_restart 0004  
 __end_of_MLX90614_readAmbientTempC 158B                           _vfpfcnvrt 0EA0  
                         _port_init 13B1                       ??_sensorPlaca 00D9  
                     serial_init@sx 0028                   ___wmul@multiplier 0070  
                       ??_i2c_start 0070                         ??_i2c_write 0070  
                        vfpfcnvrt@c 006C                            _i2c_nack 1363  
                          _i2c_init 143D                            _i2c_read 1389  
                          _i2c_stop 133E            __end_of_MLX90614_ReadReg 0842  
                  __size_of_i2c_ack 0008                          vfprintf@ap 00CC  
                        vfprintf@fp 00CF                   i2c_write@I2C_data 0070  
                       ??__Umul8_16 0072                    __size_of___aodiv 00F3  
                  __size_of___fladd 01E1                    __size_of___aomod 00DC  
                  __size_of___fldiv 017A                    __size_of___flneg 0009  
                  __size_of___flmul 0218                    __size_of___flsub 001D  
                  __size_of___fltol 0065                    __size_of___lldiv 0052  
                        ?_vfpfcnvrt 0055                          ?_port_init 0070  
               __end_of_serial_init 161D                     ___aodiv@divisor 0020  
                          _adc_init 1423                     ___aodiv@counter 0071  
                        _ANSELCbits 0F4E                            ___xxtofl 0842  
                  __size_of_isalpha 001D                            _dtoa$926 003B  
               __end_of_sensorPlaca 1720                    __size_of_islower 0017  
                          __ptext10 13F5                            __ptext11 148F  
                          __ptext20 13C7                            __ptext12 0975  
                          __ptext21 0A34                            __ptext13 0C03  
                          __ptext30 1379                            __ptext22 0B10  
                          __ptext14 161D                            __ptext31 133E  
                          __ptext23 1457                            __ptext15 13DE  
                          __ptext40 1472                            __ptext32 1339  
                          __ptext24 13B1                            __ptext16 14EC  
                          __ptext41 01A9                            __ptext33 1335  
                          __ptext25 143D                            __ptext17 1510  
                          __ptext42 0802                            __ptext34 1389  
                          __ptext26 1423                            __ptext18 1343  
                          __ptext43 038A                            __ptext35 1363  
                          __ptext27 158B                            __ptext19 136B  
                          __ptext44 14AC                            __ptext36 135B  
                          __ptext28 1545                            __ptext45 1785  
                          __ptext37 05A2                            __ptext29 080B  
                          __ptext46 002F                            __ptext38 0842  
                          __ptext39 1720                    __size_of_isupper 0017  
                      _SSP1CON2bits 0191                    __size_of_uart_tx 000E  
                  __size_of_toupper 0021                       __size_of_main 009D  
                     __size_of_dtoa 014B                       __size_of_stoa 00BF  
                     __size_of_xtoa 0152                            _low_byte 00A8  
       FLOAT_to_string@largo_entera 00D4                           stoa@F1141 00E9  
                          _xtoa$947 0040                            _xtoa$948 0042  
                          _vfprintf 0004                           printf@fmt 00D2  
                          main@temp 00E5                    ___aomod@dividend 0028  
          _MLX90614_readObjectTempC 158B                           putch@dato 0072  
                          isalpha@c 0070                            islower@c 0070  
                  ___lldiv@dividend 0074                            isupper@c 0070  
                       _serial_init 15D1                            printf@ap 00D8  
       ??_MLX90614_readAmbientTempC 005C                     ___aomod@divisor 0020  
                       ??_vfpfcnvrt 0057                            stoa@nuls 0023  
                   ___aomod@counter 0071                         ??_port_init 0070  
                     __pstringtext1 1800                       __pstringtext2 1816  
                     __pstringtext3 1825                       __pstringtext4 182D  
                     __pstringtext5 0000                         _sensorPlaca 16BD  
            __Umul8_16@multiplicand 0070                          _SSP1DATPPS 0EC6  
                        _SSP1CLKPPS 0EC5                    ___lldiv@quotient 0079  
                          toupper@c 0076                       ___fladd@signs 0054  
                      ___aodiv@sign 0072                        ___fladd@aexp 0055  
                      ___fladd@bexp 0056                __Umul8_16@multiplier 0078  
                      ___aomod@sign 0072                   __Umul8_16@product 0074  
