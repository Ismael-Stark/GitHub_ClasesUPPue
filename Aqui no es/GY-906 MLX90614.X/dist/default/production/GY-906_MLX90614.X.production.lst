

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jul 25 01:43:56 2022

Microchip MPLAB XC8 C Compiler v2.32 (Pro license) build 20210201212658 Og9s 
     1                           	processor	16F18855
     2                           	pagewidth 120
     3                           	opt	plic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	psect	pa_nodes0,global,class=CODE,delta=2
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.40
    29                           ; Generated 02/12/2021 GMT
    30                           ; 
    31                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F18855 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  001C                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  008C                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  010C                     	;# 
   113  010D                     	;# 
   114  010E                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  0110                     	;# 
   118  0110                     	;# 
   119  0111                     	;# 
   120  0112                     	;# 
   121  0112                     	;# 
   122  0113                     	;# 
   123  0114                     	;# 
   124  0114                     	;# 
   125  0115                     	;# 
   126  0116                     	;# 
   127  0116                     	;# 
   128  0117                     	;# 
   129  0119                     	;# 
   130  0119                     	;# 
   131  0119                     	;# 
   132  011A                     	;# 
   133  011A                     	;# 
   134  011A                     	;# 
   135  011B                     	;# 
   136  011B                     	;# 
   137  011B                     	;# 
   138  011B                     	;# 
   139  011B                     	;# 
   140  011C                     	;# 
   141  011C                     	;# 
   142  011C                     	;# 
   143  011D                     	;# 
   144  011D                     	;# 
   145  011D                     	;# 
   146  011E                     	;# 
   147  011E                     	;# 
   148  011E                     	;# 
   149  011F                     	;# 
   150  011F                     	;# 
   151  011F                     	;# 
   152  011F                     	;# 
   153  011F                     	;# 
   154  018C                     	;# 
   155  018D                     	;# 
   156  018E                     	;# 
   157  018F                     	;# 
   158  0190                     	;# 
   159  0191                     	;# 
   160  0192                     	;# 
   161  0196                     	;# 
   162  0197                     	;# 
   163  0198                     	;# 
   164  0199                     	;# 
   165  019A                     	;# 
   166  019B                     	;# 
   167  019C                     	;# 
   168  020C                     	;# 
   169  020C                     	;# 
   170  020D                     	;# 
   171  020E                     	;# 
   172  020F                     	;# 
   173  020F                     	;# 
   174  0210                     	;# 
   175  0210                     	;# 
   176  0211                     	;# 
   177  0211                     	;# 
   178  0212                     	;# 
   179  0212                     	;# 
   180  0213                     	;# 
   181  0214                     	;# 
   182  0215                     	;# 
   183  0215                     	;# 
   184  0216                     	;# 
   185  0216                     	;# 
   186  0217                     	;# 
   187  0217                     	;# 
   188  0218                     	;# 
   189  0218                     	;# 
   190  0219                     	;# 
   191  021A                     	;# 
   192  021B                     	;# 
   193  021B                     	;# 
   194  021C                     	;# 
   195  021C                     	;# 
   196  021D                     	;# 
   197  021D                     	;# 
   198  021E                     	;# 
   199  021F                     	;# 
   200  028C                     	;# 
   201  028C                     	;# 
   202  028D                     	;# 
   203  028D                     	;# 
   204  028E                     	;# 
   205  028F                     	;# 
   206  0290                     	;# 
   207  0290                     	;# 
   208  0291                     	;# 
   209  0292                     	;# 
   210  0292                     	;# 
   211  0293                     	;# 
   212  0293                     	;# 
   213  0294                     	;# 
   214  0295                     	;# 
   215  0296                     	;# 
   216  0296                     	;# 
   217  0297                     	;# 
   218  0298                     	;# 
   219  0298                     	;# 
   220  0299                     	;# 
   221  0299                     	;# 
   222  029A                     	;# 
   223  029B                     	;# 
   224  029C                     	;# 
   225  029C                     	;# 
   226  029D                     	;# 
   227  030C                     	;# 
   228  030C                     	;# 
   229  030D                     	;# 
   230  030E                     	;# 
   231  030F                     	;# 
   232  0310                     	;# 
   233  0310                     	;# 
   234  0311                     	;# 
   235  0312                     	;# 
   236  0313                     	;# 
   237  0314                     	;# 
   238  0314                     	;# 
   239  0315                     	;# 
   240  0316                     	;# 
   241  0317                     	;# 
   242  0318                     	;# 
   243  0318                     	;# 
   244  0319                     	;# 
   245  031A                     	;# 
   246  031B                     	;# 
   247  031C                     	;# 
   248  031C                     	;# 
   249  031D                     	;# 
   250  031E                     	;# 
   251  031F                     	;# 
   252  038C                     	;# 
   253  038C                     	;# 
   254  038D                     	;# 
   255  038E                     	;# 
   256  0390                     	;# 
   257  0390                     	;# 
   258  0391                     	;# 
   259  0392                     	;# 
   260  040C                     	;# 
   261  040D                     	;# 
   262  040E                     	;# 
   263  040F                     	;# 
   264  0410                     	;# 
   265  0411                     	;# 
   266  0416                     	;# 
   267  0416                     	;# 
   268  0417                     	;# 
   269  0418                     	;# 
   270  0418                     	;# 
   271  0419                     	;# 
   272  041A                     	;# 
   273  041A                     	;# 
   274  041B                     	;# 
   275  041C                     	;# 
   276  041C                     	;# 
   277  041D                     	;# 
   278  041E                     	;# 
   279  041F                     	;# 
   280  048C                     	;# 
   281  048C                     	;# 
   282  048D                     	;# 
   283  048E                     	;# 
   284  048F                     	;# 
   285  048F                     	;# 
   286  0490                     	;# 
   287  0491                     	;# 
   288  0492                     	;# 
   289  0492                     	;# 
   290  0493                     	;# 
   291  0494                     	;# 
   292  0495                     	;# 
   293  0495                     	;# 
   294  0496                     	;# 
   295  0497                     	;# 
   296  0498                     	;# 
   297  0499                     	;# 
   298  049A                     	;# 
   299  049B                     	;# 
   300  049C                     	;# 
   301  049D                     	;# 
   302  050C                     	;# 
   303  050C                     	;# 
   304  050D                     	;# 
   305  050E                     	;# 
   306  050F                     	;# 
   307  050F                     	;# 
   308  0510                     	;# 
   309  0511                     	;# 
   310  0512                     	;# 
   311  0512                     	;# 
   312  0513                     	;# 
   313  0514                     	;# 
   314  0515                     	;# 
   315  0515                     	;# 
   316  0516                     	;# 
   317  0517                     	;# 
   318  0518                     	;# 
   319  0519                     	;# 
   320  051A                     	;# 
   321  051B                     	;# 
   322  051C                     	;# 
   323  051D                     	;# 
   324  058C                     	;# 
   325  058C                     	;# 
   326  058D                     	;# 
   327  058E                     	;# 
   328  058F                     	;# 
   329  058F                     	;# 
   330  0590                     	;# 
   331  0591                     	;# 
   332  0592                     	;# 
   333  0593                     	;# 
   334  060C                     	;# 
   335  060D                     	;# 
   336  060E                     	;# 
   337  060F                     	;# 
   338  0610                     	;# 
   339  0611                     	;# 
   340  0612                     	;# 
   341  0613                     	;# 
   342  0614                     	;# 
   343  0616                     	;# 
   344  0617                     	;# 
   345  0618                     	;# 
   346  0619                     	;# 
   347  061A                     	;# 
   348  061B                     	;# 
   349  061C                     	;# 
   350  061D                     	;# 
   351  061E                     	;# 
   352  068C                     	;# 
   353  068D                     	;# 
   354  068E                     	;# 
   355  068F                     	;# 
   356  0690                     	;# 
   357  0691                     	;# 
   358  0692                     	;# 
   359  0693                     	;# 
   360  0694                     	;# 
   361  070C                     	;# 
   362  070D                     	;# 
   363  070E                     	;# 
   364  070F                     	;# 
   365  0710                     	;# 
   366  0711                     	;# 
   367  0712                     	;# 
   368  0713                     	;# 
   369  0714                     	;# 
   370  0716                     	;# 
   371  0717                     	;# 
   372  0718                     	;# 
   373  0719                     	;# 
   374  071A                     	;# 
   375  071B                     	;# 
   376  071C                     	;# 
   377  071D                     	;# 
   378  071E                     	;# 
   379  0796                     	;# 
   380  0797                     	;# 
   381  0798                     	;# 
   382  0799                     	;# 
   383  079A                     	;# 
   384  079B                     	;# 
   385  080C                     	;# 
   386  080D                     	;# 
   387  080E                     	;# 
   388  080F                     	;# 
   389  0810                     	;# 
   390  0811                     	;# 
   391  0812                     	;# 
   392  0813                     	;# 
   393  0814                     	;# 
   394  081A                     	;# 
   395  081B                     	;# 
   396  081C                     	;# 
   397  081D                     	;# 
   398  081E                     	;# 
   399  081F                     	;# 
   400  088C                     	;# 
   401  088D                     	;# 
   402  088E                     	;# 
   403  088F                     	;# 
   404  0890                     	;# 
   405  0891                     	;# 
   406  0892                     	;# 
   407  0893                     	;# 
   408  0895                     	;# 
   409  0896                     	;# 
   410  0897                     	;# 
   411  0898                     	;# 
   412  0899                     	;# 
   413  089A                     	;# 
   414  089B                     	;# 
   415  090C                     	;# 
   416  090E                     	;# 
   417  090F                     	;# 
   418  091F                     	;# 
   419  091F                     	;# 
   420  098F                     	;# 
   421  098F                     	;# 
   422  0990                     	;# 
   423  0991                     	;# 
   424  0992                     	;# 
   425  0993                     	;# 
   426  0994                     	;# 
   427  0995                     	;# 
   428  0996                     	;# 
   429  0997                     	;# 
   430  0E0F                     	;# 
   431  0E10                     	;# 
   432  0E11                     	;# 
   433  0E12                     	;# 
   434  0E13                     	;# 
   435  0E14                     	;# 
   436  0E15                     	;# 
   437  0E16                     	;# 
   438  0E17                     	;# 
   439  0E18                     	;# 
   440  0E19                     	;# 
   441  0E1A                     	;# 
   442  0E1B                     	;# 
   443  0E1C                     	;# 
   444  0E1D                     	;# 
   445  0E1E                     	;# 
   446  0E1F                     	;# 
   447  0E20                     	;# 
   448  0E21                     	;# 
   449  0E22                     	;# 
   450  0E23                     	;# 
   451  0E24                     	;# 
   452  0E25                     	;# 
   453  0E26                     	;# 
   454  0E27                     	;# 
   455  0E28                     	;# 
   456  0E29                     	;# 
   457  0E2A                     	;# 
   458  0E2B                     	;# 
   459  0E2C                     	;# 
   460  0E2D                     	;# 
   461  0E2E                     	;# 
   462  0E2F                     	;# 
   463  0E30                     	;# 
   464  0E31                     	;# 
   465  0E32                     	;# 
   466  0E33                     	;# 
   467  0E34                     	;# 
   468  0E35                     	;# 
   469  0E36                     	;# 
   470  0E37                     	;# 
   471  0E8F                     	;# 
   472  0E90                     	;# 
   473  0E91                     	;# 
   474  0E92                     	;# 
   475  0E93                     	;# 
   476  0E94                     	;# 
   477  0E95                     	;# 
   478  0E96                     	;# 
   479  0E97                     	;# 
   480  0E9C                     	;# 
   481  0E9D                     	;# 
   482  0E9E                     	;# 
   483  0EA1                     	;# 
   484  0EA2                     	;# 
   485  0EA3                     	;# 
   486  0EA4                     	;# 
   487  0EA5                     	;# 
   488  0EA9                     	;# 
   489  0EAA                     	;# 
   490  0EAB                     	;# 
   491  0EAC                     	;# 
   492  0EB1                     	;# 
   493  0EB2                     	;# 
   494  0EB3                     	;# 
   495  0EB8                     	;# 
   496  0EB9                     	;# 
   497  0EBA                     	;# 
   498  0EBB                     	;# 
   499  0EBC                     	;# 
   500  0EBD                     	;# 
   501  0EBE                     	;# 
   502  0EC3                     	;# 
   503  0EC5                     	;# 
   504  0EC6                     	;# 
   505  0EC7                     	;# 
   506  0EC8                     	;# 
   507  0EC9                     	;# 
   508  0ECA                     	;# 
   509  0ECB                     	;# 
   510  0ECC                     	;# 
   511  0F10                     	;# 
   512  0F11                     	;# 
   513  0F12                     	;# 
   514  0F13                     	;# 
   515  0F14                     	;# 
   516  0F15                     	;# 
   517  0F16                     	;# 
   518  0F17                     	;# 
   519  0F18                     	;# 
   520  0F19                     	;# 
   521  0F1A                     	;# 
   522  0F1B                     	;# 
   523  0F1C                     	;# 
   524  0F1D                     	;# 
   525  0F1E                     	;# 
   526  0F1F                     	;# 
   527  0F20                     	;# 
   528  0F21                     	;# 
   529  0F22                     	;# 
   530  0F23                     	;# 
   531  0F24                     	;# 
   532  0F25                     	;# 
   533  0F26                     	;# 
   534  0F27                     	;# 
   535  0F38                     	;# 
   536  0F39                     	;# 
   537  0F3A                     	;# 
   538  0F3B                     	;# 
   539  0F3C                     	;# 
   540  0F3D                     	;# 
   541  0F3E                     	;# 
   542  0F3F                     	;# 
   543  0F40                     	;# 
   544  0F41                     	;# 
   545  0F43                     	;# 
   546  0F44                     	;# 
   547  0F45                     	;# 
   548  0F46                     	;# 
   549  0F47                     	;# 
   550  0F48                     	;# 
   551  0F49                     	;# 
   552  0F4A                     	;# 
   553  0F4B                     	;# 
   554  0F4C                     	;# 
   555  0F4E                     	;# 
   556  0F4F                     	;# 
   557  0F50                     	;# 
   558  0F51                     	;# 
   559  0F52                     	;# 
   560  0F53                     	;# 
   561  0F54                     	;# 
   562  0F55                     	;# 
   563  0F56                     	;# 
   564  0F57                     	;# 
   565  0F65                     	;# 
   566  0F68                     	;# 
   567  0F69                     	;# 
   568  0F6A                     	;# 
   569  0F6B                     	;# 
   570  0FE4                     	;# 
   571  0FE5                     	;# 
   572  0FE6                     	;# 
   573  0FE7                     	;# 
   574  0FE8                     	;# 
   575  0FE9                     	;# 
   576  0FEA                     	;# 
   577  0FEB                     	;# 
   578  0FED                     	;# 
   579  0FEE                     	;# 
   580  0FEF                     	;# 
   581  0000                     	;# 
   582  0001                     	;# 
   583  0002                     	;# 
   584  0003                     	;# 
   585  0004                     	;# 
   586  0005                     	;# 
   587  0006                     	;# 
   588  0007                     	;# 
   589  0008                     	;# 
   590  0009                     	;# 
   591  000A                     	;# 
   592  000B                     	;# 
   593  000C                     	;# 
   594  000D                     	;# 
   595  000E                     	;# 
   596  0010                     	;# 
   597  0011                     	;# 
   598  0012                     	;# 
   599  0013                     	;# 
   600  0016                     	;# 
   601  0017                     	;# 
   602  0018                     	;# 
   603  001C                     	;# 
   604  001C                     	;# 
   605  001D                     	;# 
   606  001D                     	;# 
   607  001E                     	;# 
   608  001F                     	;# 
   609  008C                     	;# 
   610  008C                     	;# 
   611  008D                     	;# 
   612  008E                     	;# 
   613  008E                     	;# 
   614  008F                     	;# 
   615  0090                     	;# 
   616  0090                     	;# 
   617  0091                     	;# 
   618  0093                     	;# 
   619  0094                     	;# 
   620  0095                     	;# 
   621  0096                     	;# 
   622  0097                     	;# 
   623  0098                     	;# 
   624  0099                     	;# 
   625  009A                     	;# 
   626  009B                     	;# 
   627  009C                     	;# 
   628  009D                     	;# 
   629  009E                     	;# 
   630  010C                     	;# 
   631  010D                     	;# 
   632  010E                     	;# 
   633  010E                     	;# 
   634  010F                     	;# 
   635  0110                     	;# 
   636  0110                     	;# 
   637  0111                     	;# 
   638  0112                     	;# 
   639  0112                     	;# 
   640  0113                     	;# 
   641  0114                     	;# 
   642  0114                     	;# 
   643  0115                     	;# 
   644  0116                     	;# 
   645  0116                     	;# 
   646  0117                     	;# 
   647  0119                     	;# 
   648  0119                     	;# 
   649  0119                     	;# 
   650  011A                     	;# 
   651  011A                     	;# 
   652  011A                     	;# 
   653  011B                     	;# 
   654  011B                     	;# 
   655  011B                     	;# 
   656  011B                     	;# 
   657  011B                     	;# 
   658  011C                     	;# 
   659  011C                     	;# 
   660  011C                     	;# 
   661  011D                     	;# 
   662  011D                     	;# 
   663  011D                     	;# 
   664  011E                     	;# 
   665  011E                     	;# 
   666  011E                     	;# 
   667  011F                     	;# 
   668  011F                     	;# 
   669  011F                     	;# 
   670  011F                     	;# 
   671  011F                     	;# 
   672  018C                     	;# 
   673  018D                     	;# 
   674  018E                     	;# 
   675  018F                     	;# 
   676  0190                     	;# 
   677  0191                     	;# 
   678  0192                     	;# 
   679  0196                     	;# 
   680  0197                     	;# 
   681  0198                     	;# 
   682  0199                     	;# 
   683  019A                     	;# 
   684  019B                     	;# 
   685  019C                     	;# 
   686  020C                     	;# 
   687  020C                     	;# 
   688  020D                     	;# 
   689  020E                     	;# 
   690  020F                     	;# 
   691  020F                     	;# 
   692  0210                     	;# 
   693  0210                     	;# 
   694  0211                     	;# 
   695  0211                     	;# 
   696  0212                     	;# 
   697  0212                     	;# 
   698  0213                     	;# 
   699  0214                     	;# 
   700  0215                     	;# 
   701  0215                     	;# 
   702  0216                     	;# 
   703  0216                     	;# 
   704  0217                     	;# 
   705  0217                     	;# 
   706  0218                     	;# 
   707  0218                     	;# 
   708  0219                     	;# 
   709  021A                     	;# 
   710  021B                     	;# 
   711  021B                     	;# 
   712  021C                     	;# 
   713  021C                     	;# 
   714  021D                     	;# 
   715  021D                     	;# 
   716  021E                     	;# 
   717  021F                     	;# 
   718  028C                     	;# 
   719  028C                     	;# 
   720  028D                     	;# 
   721  028D                     	;# 
   722  028E                     	;# 
   723  028F                     	;# 
   724  0290                     	;# 
   725  0290                     	;# 
   726  0291                     	;# 
   727  0292                     	;# 
   728  0292                     	;# 
   729  0293                     	;# 
   730  0293                     	;# 
   731  0294                     	;# 
   732  0295                     	;# 
   733  0296                     	;# 
   734  0296                     	;# 
   735  0297                     	;# 
   736  0298                     	;# 
   737  0298                     	;# 
   738  0299                     	;# 
   739  0299                     	;# 
   740  029A                     	;# 
   741  029B                     	;# 
   742  029C                     	;# 
   743  029C                     	;# 
   744  029D                     	;# 
   745  030C                     	;# 
   746  030C                     	;# 
   747  030D                     	;# 
   748  030E                     	;# 
   749  030F                     	;# 
   750  0310                     	;# 
   751  0310                     	;# 
   752  0311                     	;# 
   753  0312                     	;# 
   754  0313                     	;# 
   755  0314                     	;# 
   756  0314                     	;# 
   757  0315                     	;# 
   758  0316                     	;# 
   759  0317                     	;# 
   760  0318                     	;# 
   761  0318                     	;# 
   762  0319                     	;# 
   763  031A                     	;# 
   764  031B                     	;# 
   765  031C                     	;# 
   766  031C                     	;# 
   767  031D                     	;# 
   768  031E                     	;# 
   769  031F                     	;# 
   770  038C                     	;# 
   771  038C                     	;# 
   772  038D                     	;# 
   773  038E                     	;# 
   774  0390                     	;# 
   775  0390                     	;# 
   776  0391                     	;# 
   777  0392                     	;# 
   778  040C                     	;# 
   779  040D                     	;# 
   780  040E                     	;# 
   781  040F                     	;# 
   782  0410                     	;# 
   783  0411                     	;# 
   784  0416                     	;# 
   785  0416                     	;# 
   786  0417                     	;# 
   787  0418                     	;# 
   788  0418                     	;# 
   789  0419                     	;# 
   790  041A                     	;# 
   791  041A                     	;# 
   792  041B                     	;# 
   793  041C                     	;# 
   794  041C                     	;# 
   795  041D                     	;# 
   796  041E                     	;# 
   797  041F                     	;# 
   798  048C                     	;# 
   799  048C                     	;# 
   800  048D                     	;# 
   801  048E                     	;# 
   802  048F                     	;# 
   803  048F                     	;# 
   804  0490                     	;# 
   805  0491                     	;# 
   806  0492                     	;# 
   807  0492                     	;# 
   808  0493                     	;# 
   809  0494                     	;# 
   810  0495                     	;# 
   811  0495                     	;# 
   812  0496                     	;# 
   813  0497                     	;# 
   814  0498                     	;# 
   815  0499                     	;# 
   816  049A                     	;# 
   817  049B                     	;# 
   818  049C                     	;# 
   819  049D                     	;# 
   820  050C                     	;# 
   821  050C                     	;# 
   822  050D                     	;# 
   823  050E                     	;# 
   824  050F                     	;# 
   825  050F                     	;# 
   826  0510                     	;# 
   827  0511                     	;# 
   828  0512                     	;# 
   829  0512                     	;# 
   830  0513                     	;# 
   831  0514                     	;# 
   832  0515                     	;# 
   833  0515                     	;# 
   834  0516                     	;# 
   835  0517                     	;# 
   836  0518                     	;# 
   837  0519                     	;# 
   838  051A                     	;# 
   839  051B                     	;# 
   840  051C                     	;# 
   841  051D                     	;# 
   842  058C                     	;# 
   843  058C                     	;# 
   844  058D                     	;# 
   845  058E                     	;# 
   846  058F                     	;# 
   847  058F                     	;# 
   848  0590                     	;# 
   849  0591                     	;# 
   850  0592                     	;# 
   851  0593                     	;# 
   852  060C                     	;# 
   853  060D                     	;# 
   854  060E                     	;# 
   855  060F                     	;# 
   856  0610                     	;# 
   857  0611                     	;# 
   858  0612                     	;# 
   859  0613                     	;# 
   860  0614                     	;# 
   861  0616                     	;# 
   862  0617                     	;# 
   863  0618                     	;# 
   864  0619                     	;# 
   865  061A                     	;# 
   866  061B                     	;# 
   867  061C                     	;# 
   868  061D                     	;# 
   869  061E                     	;# 
   870  068C                     	;# 
   871  068D                     	;# 
   872  068E                     	;# 
   873  068F                     	;# 
   874  0690                     	;# 
   875  0691                     	;# 
   876  0692                     	;# 
   877  0693                     	;# 
   878  0694                     	;# 
   879  070C                     	;# 
   880  070D                     	;# 
   881  070E                     	;# 
   882  070F                     	;# 
   883  0710                     	;# 
   884  0711                     	;# 
   885  0712                     	;# 
   886  0713                     	;# 
   887  0714                     	;# 
   888  0716                     	;# 
   889  0717                     	;# 
   890  0718                     	;# 
   891  0719                     	;# 
   892  071A                     	;# 
   893  071B                     	;# 
   894  071C                     	;# 
   895  071D                     	;# 
   896  071E                     	;# 
   897  0796                     	;# 
   898  0797                     	;# 
   899  0798                     	;# 
   900  0799                     	;# 
   901  079A                     	;# 
   902  079B                     	;# 
   903  080C                     	;# 
   904  080D                     	;# 
   905  080E                     	;# 
   906  080F                     	;# 
   907  0810                     	;# 
   908  0811                     	;# 
   909  0812                     	;# 
   910  0813                     	;# 
   911  0814                     	;# 
   912  081A                     	;# 
   913  081B                     	;# 
   914  081C                     	;# 
   915  081D                     	;# 
   916  081E                     	;# 
   917  081F                     	;# 
   918  088C                     	;# 
   919  088D                     	;# 
   920  088E                     	;# 
   921  088F                     	;# 
   922  0890                     	;# 
   923  0891                     	;# 
   924  0892                     	;# 
   925  0893                     	;# 
   926  0895                     	;# 
   927  0896                     	;# 
   928  0897                     	;# 
   929  0898                     	;# 
   930  0899                     	;# 
   931  089A                     	;# 
   932  089B                     	;# 
   933  090C                     	;# 
   934  090E                     	;# 
   935  090F                     	;# 
   936  091F                     	;# 
   937  091F                     	;# 
   938  098F                     	;# 
   939  098F                     	;# 
   940  0990                     	;# 
   941  0991                     	;# 
   942  0992                     	;# 
   943  0993                     	;# 
   944  0994                     	;# 
   945  0995                     	;# 
   946  0996                     	;# 
   947  0997                     	;# 
   948  0E0F                     	;# 
   949  0E10                     	;# 
   950  0E11                     	;# 
   951  0E12                     	;# 
   952  0E13                     	;# 
   953  0E14                     	;# 
   954  0E15                     	;# 
   955  0E16                     	;# 
   956  0E17                     	;# 
   957  0E18                     	;# 
   958  0E19                     	;# 
   959  0E1A                     	;# 
   960  0E1B                     	;# 
   961  0E1C                     	;# 
   962  0E1D                     	;# 
   963  0E1E                     	;# 
   964  0E1F                     	;# 
   965  0E20                     	;# 
   966  0E21                     	;# 
   967  0E22                     	;# 
   968  0E23                     	;# 
   969  0E24                     	;# 
   970  0E25                     	;# 
   971  0E26                     	;# 
   972  0E27                     	;# 
   973  0E28                     	;# 
   974  0E29                     	;# 
   975  0E2A                     	;# 
   976  0E2B                     	;# 
   977  0E2C                     	;# 
   978  0E2D                     	;# 
   979  0E2E                     	;# 
   980  0E2F                     	;# 
   981  0E30                     	;# 
   982  0E31                     	;# 
   983  0E32                     	;# 
   984  0E33                     	;# 
   985  0E34                     	;# 
   986  0E35                     	;# 
   987  0E36                     	;# 
   988  0E37                     	;# 
   989  0E8F                     	;# 
   990  0E90                     	;# 
   991  0E91                     	;# 
   992  0E92                     	;# 
   993  0E93                     	;# 
   994  0E94                     	;# 
   995  0E95                     	;# 
   996  0E96                     	;# 
   997  0E97                     	;# 
   998  0E9C                     	;# 
   999  0E9D                     	;# 
  1000  0E9E                     	;# 
  1001  0EA1                     	;# 
  1002  0EA2                     	;# 
  1003  0EA3                     	;# 
  1004  0EA4                     	;# 
  1005  0EA5                     	;# 
  1006  0EA9                     	;# 
  1007  0EAA                     	;# 
  1008  0EAB                     	;# 
  1009  0EAC                     	;# 
  1010  0EB1                     	;# 
  1011  0EB2                     	;# 
  1012  0EB3                     	;# 
  1013  0EB8                     	;# 
  1014  0EB9                     	;# 
  1015  0EBA                     	;# 
  1016  0EBB                     	;# 
  1017  0EBC                     	;# 
  1018  0EBD                     	;# 
  1019  0EBE                     	;# 
  1020  0EC3                     	;# 
  1021  0EC5                     	;# 
  1022  0EC6                     	;# 
  1023  0EC7                     	;# 
  1024  0EC8                     	;# 
  1025  0EC9                     	;# 
  1026  0ECA                     	;# 
  1027  0ECB                     	;# 
  1028  0ECC                     	;# 
  1029  0F10                     	;# 
  1030  0F11                     	;# 
  1031  0F12                     	;# 
  1032  0F13                     	;# 
  1033  0F14                     	;# 
  1034  0F15                     	;# 
  1035  0F16                     	;# 
  1036  0F17                     	;# 
  1037  0F18                     	;# 
  1038  0F19                     	;# 
  1039  0F1A                     	;# 
  1040  0F1B                     	;# 
  1041  0F1C                     	;# 
  1042  0F1D                     	;# 
  1043  0F1E                     	;# 
  1044  0F1F                     	;# 
  1045  0F20                     	;# 
  1046  0F21                     	;# 
  1047  0F22                     	;# 
  1048  0F23                     	;# 
  1049  0F24                     	;# 
  1050  0F25                     	;# 
  1051  0F26                     	;# 
  1052  0F27                     	;# 
  1053  0F38                     	;# 
  1054  0F39                     	;# 
  1055  0F3A                     	;# 
  1056  0F3B                     	;# 
  1057  0F3C                     	;# 
  1058  0F3D                     	;# 
  1059  0F3E                     	;# 
  1060  0F3F                     	;# 
  1061  0F40                     	;# 
  1062  0F41                     	;# 
  1063  0F43                     	;# 
  1064  0F44                     	;# 
  1065  0F45                     	;# 
  1066  0F46                     	;# 
  1067  0F47                     	;# 
  1068  0F48                     	;# 
  1069  0F49                     	;# 
  1070  0F4A                     	;# 
  1071  0F4B                     	;# 
  1072  0F4C                     	;# 
  1073  0F4E                     	;# 
  1074  0F4F                     	;# 
  1075  0F50                     	;# 
  1076  0F51                     	;# 
  1077  0F52                     	;# 
  1078  0F53                     	;# 
  1079  0F54                     	;# 
  1080  0F55                     	;# 
  1081  0F56                     	;# 
  1082  0F57                     	;# 
  1083  0F65                     	;# 
  1084  0F68                     	;# 
  1085  0F69                     	;# 
  1086  0F6A                     	;# 
  1087  0F6B                     	;# 
  1088  0FE4                     	;# 
  1089  0FE5                     	;# 
  1090  0FE6                     	;# 
  1091  0FE7                     	;# 
  1092  0FE8                     	;# 
  1093  0FE9                     	;# 
  1094  0FEA                     	;# 
  1095  0FEB                     	;# 
  1096  0FED                     	;# 
  1097  0FEE                     	;# 
  1098  0FEF                     	;# 
  1099  0000                     	;# 
  1100  0001                     	;# 
  1101  0002                     	;# 
  1102  0003                     	;# 
  1103  0004                     	;# 
  1104  0005                     	;# 
  1105  0006                     	;# 
  1106  0007                     	;# 
  1107  0008                     	;# 
  1108  0009                     	;# 
  1109  000A                     	;# 
  1110  000B                     	;# 
  1111  000C                     	;# 
  1112  000D                     	;# 
  1113  000E                     	;# 
  1114  0010                     	;# 
  1115  0011                     	;# 
  1116  0012                     	;# 
  1117  0013                     	;# 
  1118  0016                     	;# 
  1119  0017                     	;# 
  1120  0018                     	;# 
  1121  001C                     	;# 
  1122  001C                     	;# 
  1123  001D                     	;# 
  1124  001D                     	;# 
  1125  001E                     	;# 
  1126  001F                     	;# 
  1127  008C                     	;# 
  1128  008C                     	;# 
  1129  008D                     	;# 
  1130  008E                     	;# 
  1131  008E                     	;# 
  1132  008F                     	;# 
  1133  0090                     	;# 
  1134  0090                     	;# 
  1135  0091                     	;# 
  1136  0093                     	;# 
  1137  0094                     	;# 
  1138  0095                     	;# 
  1139  0096                     	;# 
  1140  0097                     	;# 
  1141  0098                     	;# 
  1142  0099                     	;# 
  1143  009A                     	;# 
  1144  009B                     	;# 
  1145  009C                     	;# 
  1146  009D                     	;# 
  1147  009E                     	;# 
  1148  010C                     	;# 
  1149  010D                     	;# 
  1150  010E                     	;# 
  1151  010E                     	;# 
  1152  010F                     	;# 
  1153  0110                     	;# 
  1154  0110                     	;# 
  1155  0111                     	;# 
  1156  0112                     	;# 
  1157  0112                     	;# 
  1158  0113                     	;# 
  1159  0114                     	;# 
  1160  0114                     	;# 
  1161  0115                     	;# 
  1162  0116                     	;# 
  1163  0116                     	;# 
  1164  0117                     	;# 
  1165  0119                     	;# 
  1166  0119                     	;# 
  1167  0119                     	;# 
  1168  011A                     	;# 
  1169  011A                     	;# 
  1170  011A                     	;# 
  1171  011B                     	;# 
  1172  011B                     	;# 
  1173  011B                     	;# 
  1174  011B                     	;# 
  1175  011B                     	;# 
  1176  011C                     	;# 
  1177  011C                     	;# 
  1178  011C                     	;# 
  1179  011D                     	;# 
  1180  011D                     	;# 
  1181  011D                     	;# 
  1182  011E                     	;# 
  1183  011E                     	;# 
  1184  011E                     	;# 
  1185  011F                     	;# 
  1186  011F                     	;# 
  1187  011F                     	;# 
  1188  011F                     	;# 
  1189  011F                     	;# 
  1190  018C                     	;# 
  1191  018D                     	;# 
  1192  018E                     	;# 
  1193  018F                     	;# 
  1194  0190                     	;# 
  1195  0191                     	;# 
  1196  0192                     	;# 
  1197  0196                     	;# 
  1198  0197                     	;# 
  1199  0198                     	;# 
  1200  0199                     	;# 
  1201  019A                     	;# 
  1202  019B                     	;# 
  1203  019C                     	;# 
  1204  020C                     	;# 
  1205  020C                     	;# 
  1206  020D                     	;# 
  1207  020E                     	;# 
  1208  020F                     	;# 
  1209  020F                     	;# 
  1210  0210                     	;# 
  1211  0210                     	;# 
  1212  0211                     	;# 
  1213  0211                     	;# 
  1214  0212                     	;# 
  1215  0212                     	;# 
  1216  0213                     	;# 
  1217  0214                     	;# 
  1218  0215                     	;# 
  1219  0215                     	;# 
  1220  0216                     	;# 
  1221  0216                     	;# 
  1222  0217                     	;# 
  1223  0217                     	;# 
  1224  0218                     	;# 
  1225  0218                     	;# 
  1226  0219                     	;# 
  1227  021A                     	;# 
  1228  021B                     	;# 
  1229  021B                     	;# 
  1230  021C                     	;# 
  1231  021C                     	;# 
  1232  021D                     	;# 
  1233  021D                     	;# 
  1234  021E                     	;# 
  1235  021F                     	;# 
  1236  028C                     	;# 
  1237  028C                     	;# 
  1238  028D                     	;# 
  1239  028D                     	;# 
  1240  028E                     	;# 
  1241  028F                     	;# 
  1242  0290                     	;# 
  1243  0290                     	;# 
  1244  0291                     	;# 
  1245  0292                     	;# 
  1246  0292                     	;# 
  1247  0293                     	;# 
  1248  0293                     	;# 
  1249  0294                     	;# 
  1250  0295                     	;# 
  1251  0296                     	;# 
  1252  0296                     	;# 
  1253  0297                     	;# 
  1254  0298                     	;# 
  1255  0298                     	;# 
  1256  0299                     	;# 
  1257  0299                     	;# 
  1258  029A                     	;# 
  1259  029B                     	;# 
  1260  029C                     	;# 
  1261  029C                     	;# 
  1262  029D                     	;# 
  1263  030C                     	;# 
  1264  030C                     	;# 
  1265  030D                     	;# 
  1266  030E                     	;# 
  1267  030F                     	;# 
  1268  0310                     	;# 
  1269  0310                     	;# 
  1270  0311                     	;# 
  1271  0312                     	;# 
  1272  0313                     	;# 
  1273  0314                     	;# 
  1274  0314                     	;# 
  1275  0315                     	;# 
  1276  0316                     	;# 
  1277  0317                     	;# 
  1278  0318                     	;# 
  1279  0318                     	;# 
  1280  0319                     	;# 
  1281  031A                     	;# 
  1282  031B                     	;# 
  1283  031C                     	;# 
  1284  031C                     	;# 
  1285  031D                     	;# 
  1286  031E                     	;# 
  1287  031F                     	;# 
  1288  038C                     	;# 
  1289  038C                     	;# 
  1290  038D                     	;# 
  1291  038E                     	;# 
  1292  0390                     	;# 
  1293  0390                     	;# 
  1294  0391                     	;# 
  1295  0392                     	;# 
  1296  040C                     	;# 
  1297  040D                     	;# 
  1298  040E                     	;# 
  1299  040F                     	;# 
  1300  0410                     	;# 
  1301  0411                     	;# 
  1302  0416                     	;# 
  1303  0416                     	;# 
  1304  0417                     	;# 
  1305  0418                     	;# 
  1306  0418                     	;# 
  1307  0419                     	;# 
  1308  041A                     	;# 
  1309  041A                     	;# 
  1310  041B                     	;# 
  1311  041C                     	;# 
  1312  041C                     	;# 
  1313  041D                     	;# 
  1314  041E                     	;# 
  1315  041F                     	;# 
  1316  048C                     	;# 
  1317  048C                     	;# 
  1318  048D                     	;# 
  1319  048E                     	;# 
  1320  048F                     	;# 
  1321  048F                     	;# 
  1322  0490                     	;# 
  1323  0491                     	;# 
  1324  0492                     	;# 
  1325  0492                     	;# 
  1326  0493                     	;# 
  1327  0494                     	;# 
  1328  0495                     	;# 
  1329  0495                     	;# 
  1330  0496                     	;# 
  1331  0497                     	;# 
  1332  0498                     	;# 
  1333  0499                     	;# 
  1334  049A                     	;# 
  1335  049B                     	;# 
  1336  049C                     	;# 
  1337  049D                     	;# 
  1338  050C                     	;# 
  1339  050C                     	;# 
  1340  050D                     	;# 
  1341  050E                     	;# 
  1342  050F                     	;# 
  1343  050F                     	;# 
  1344  0510                     	;# 
  1345  0511                     	;# 
  1346  0512                     	;# 
  1347  0512                     	;# 
  1348  0513                     	;# 
  1349  0514                     	;# 
  1350  0515                     	;# 
  1351  0515                     	;# 
  1352  0516                     	;# 
  1353  0517                     	;# 
  1354  0518                     	;# 
  1355  0519                     	;# 
  1356  051A                     	;# 
  1357  051B                     	;# 
  1358  051C                     	;# 
  1359  051D                     	;# 
  1360  058C                     	;# 
  1361  058C                     	;# 
  1362  058D                     	;# 
  1363  058E                     	;# 
  1364  058F                     	;# 
  1365  058F                     	;# 
  1366  0590                     	;# 
  1367  0591                     	;# 
  1368  0592                     	;# 
  1369  0593                     	;# 
  1370  060C                     	;# 
  1371  060D                     	;# 
  1372  060E                     	;# 
  1373  060F                     	;# 
  1374  0610                     	;# 
  1375  0611                     	;# 
  1376  0612                     	;# 
  1377  0613                     	;# 
  1378  0614                     	;# 
  1379  0616                     	;# 
  1380  0617                     	;# 
  1381  0618                     	;# 
  1382  0619                     	;# 
  1383  061A                     	;# 
  1384  061B                     	;# 
  1385  061C                     	;# 
  1386  061D                     	;# 
  1387  061E                     	;# 
  1388  068C                     	;# 
  1389  068D                     	;# 
  1390  068E                     	;# 
  1391  068F                     	;# 
  1392  0690                     	;# 
  1393  0691                     	;# 
  1394  0692                     	;# 
  1395  0693                     	;# 
  1396  0694                     	;# 
  1397  070C                     	;# 
  1398  070D                     	;# 
  1399  070E                     	;# 
  1400  070F                     	;# 
  1401  0710                     	;# 
  1402  0711                     	;# 
  1403  0712                     	;# 
  1404  0713                     	;# 
  1405  0714                     	;# 
  1406  0716                     	;# 
  1407  0717                     	;# 
  1408  0718                     	;# 
  1409  0719                     	;# 
  1410  071A                     	;# 
  1411  071B                     	;# 
  1412  071C                     	;# 
  1413  071D                     	;# 
  1414  071E                     	;# 
  1415  0796                     	;# 
  1416  0797                     	;# 
  1417  0798                     	;# 
  1418  0799                     	;# 
  1419  079A                     	;# 
  1420  079B                     	;# 
  1421  080C                     	;# 
  1422  080D                     	;# 
  1423  080E                     	;# 
  1424  080F                     	;# 
  1425  0810                     	;# 
  1426  0811                     	;# 
  1427  0812                     	;# 
  1428  0813                     	;# 
  1429  0814                     	;# 
  1430  081A                     	;# 
  1431  081B                     	;# 
  1432  081C                     	;# 
  1433  081D                     	;# 
  1434  081E                     	;# 
  1435  081F                     	;# 
  1436  088C                     	;# 
  1437  088D                     	;# 
  1438  088E                     	;# 
  1439  088F                     	;# 
  1440  0890                     	;# 
  1441  0891                     	;# 
  1442  0892                     	;# 
  1443  0893                     	;# 
  1444  0895                     	;# 
  1445  0896                     	;# 
  1446  0897                     	;# 
  1447  0898                     	;# 
  1448  0899                     	;# 
  1449  089A                     	;# 
  1450  089B                     	;# 
  1451  090C                     	;# 
  1452  090E                     	;# 
  1453  090F                     	;# 
  1454  091F                     	;# 
  1455  091F                     	;# 
  1456  098F                     	;# 
  1457  098F                     	;# 
  1458  0990                     	;# 
  1459  0991                     	;# 
  1460  0992                     	;# 
  1461  0993                     	;# 
  1462  0994                     	;# 
  1463  0995                     	;# 
  1464  0996                     	;# 
  1465  0997                     	;# 
  1466  0E0F                     	;# 
  1467  0E10                     	;# 
  1468  0E11                     	;# 
  1469  0E12                     	;# 
  1470  0E13                     	;# 
  1471  0E14                     	;# 
  1472  0E15                     	;# 
  1473  0E16                     	;# 
  1474  0E17                     	;# 
  1475  0E18                     	;# 
  1476  0E19                     	;# 
  1477  0E1A                     	;# 
  1478  0E1B                     	;# 
  1479  0E1C                     	;# 
  1480  0E1D                     	;# 
  1481  0E1E                     	;# 
  1482  0E1F                     	;# 
  1483  0E20                     	;# 
  1484  0E21                     	;# 
  1485  0E22                     	;# 
  1486  0E23                     	;# 
  1487  0E24                     	;# 
  1488  0E25                     	;# 
  1489  0E26                     	;# 
  1490  0E27                     	;# 
  1491  0E28                     	;# 
  1492  0E29                     	;# 
  1493  0E2A                     	;# 
  1494  0E2B                     	;# 
  1495  0E2C                     	;# 
  1496  0E2D                     	;# 
  1497  0E2E                     	;# 
  1498  0E2F                     	;# 
  1499  0E30                     	;# 
  1500  0E31                     	;# 
  1501  0E32                     	;# 
  1502  0E33                     	;# 
  1503  0E34                     	;# 
  1504  0E35                     	;# 
  1505  0E36                     	;# 
  1506  0E37                     	;# 
  1507  0E8F                     	;# 
  1508  0E90                     	;# 
  1509  0E91                     	;# 
  1510  0E92                     	;# 
  1511  0E93                     	;# 
  1512  0E94                     	;# 
  1513  0E95                     	;# 
  1514  0E96                     	;# 
  1515  0E97                     	;# 
  1516  0E9C                     	;# 
  1517  0E9D                     	;# 
  1518  0E9E                     	;# 
  1519  0EA1                     	;# 
  1520  0EA2                     	;# 
  1521  0EA3                     	;# 
  1522  0EA4                     	;# 
  1523  0EA5                     	;# 
  1524  0EA9                     	;# 
  1525  0EAA                     	;# 
  1526  0EAB                     	;# 
  1527  0EAC                     	;# 
  1528  0EB1                     	;# 
  1529  0EB2                     	;# 
  1530  0EB3                     	;# 
  1531  0EB8                     	;# 
  1532  0EB9                     	;# 
  1533  0EBA                     	;# 
  1534  0EBB                     	;# 
  1535  0EBC                     	;# 
  1536  0EBD                     	;# 
  1537  0EBE                     	;# 
  1538  0EC3                     	;# 
  1539  0EC5                     	;# 
  1540  0EC6                     	;# 
  1541  0EC7                     	;# 
  1542  0EC8                     	;# 
  1543  0EC9                     	;# 
  1544  0ECA                     	;# 
  1545  0ECB                     	;# 
  1546  0ECC                     	;# 
  1547  0F10                     	;# 
  1548  0F11                     	;# 
  1549  0F12                     	;# 
  1550  0F13                     	;# 
  1551  0F14                     	;# 
  1552  0F15                     	;# 
  1553  0F16                     	;# 
  1554  0F17                     	;# 
  1555  0F18                     	;# 
  1556  0F19                     	;# 
  1557  0F1A                     	;# 
  1558  0F1B                     	;# 
  1559  0F1C                     	;# 
  1560  0F1D                     	;# 
  1561  0F1E                     	;# 
  1562  0F1F                     	;# 
  1563  0F20                     	;# 
  1564  0F21                     	;# 
  1565  0F22                     	;# 
  1566  0F23                     	;# 
  1567  0F24                     	;# 
  1568  0F25                     	;# 
  1569  0F26                     	;# 
  1570  0F27                     	;# 
  1571  0F38                     	;# 
  1572  0F39                     	;# 
  1573  0F3A                     	;# 
  1574  0F3B                     	;# 
  1575  0F3C                     	;# 
  1576  0F3D                     	;# 
  1577  0F3E                     	;# 
  1578  0F3F                     	;# 
  1579  0F40                     	;# 
  1580  0F41                     	;# 
  1581  0F43                     	;# 
  1582  0F44                     	;# 
  1583  0F45                     	;# 
  1584  0F46                     	;# 
  1585  0F47                     	;# 
  1586  0F48                     	;# 
  1587  0F49                     	;# 
  1588  0F4A                     	;# 
  1589  0F4B                     	;# 
  1590  0F4C                     	;# 
  1591  0F4E                     	;# 
  1592  0F4F                     	;# 
  1593  0F50                     	;# 
  1594  0F51                     	;# 
  1595  0F52                     	;# 
  1596  0F53                     	;# 
  1597  0F54                     	;# 
  1598  0F55                     	;# 
  1599  0F56                     	;# 
  1600  0F57                     	;# 
  1601  0F65                     	;# 
  1602  0F68                     	;# 
  1603  0F69                     	;# 
  1604  0F6A                     	;# 
  1605  0F6B                     	;# 
  1606  0FE4                     	;# 
  1607  0FE5                     	;# 
  1608  0FE6                     	;# 
  1609  0FE7                     	;# 
  1610  0FE8                     	;# 
  1611  0FE9                     	;# 
  1612  0FEA                     	;# 
  1613  0FEB                     	;# 
  1614  0FED                     	;# 
  1615  0FEE                     	;# 
  1616  0FEF                     	;# 
  1617  0000                     	;# 
  1618  0001                     	;# 
  1619  0002                     	;# 
  1620  0003                     	;# 
  1621  0004                     	;# 
  1622  0005                     	;# 
  1623  0006                     	;# 
  1624  0007                     	;# 
  1625  0008                     	;# 
  1626  0009                     	;# 
  1627  000A                     	;# 
  1628  000B                     	;# 
  1629  000C                     	;# 
  1630  000D                     	;# 
  1631  000E                     	;# 
  1632  0010                     	;# 
  1633  0011                     	;# 
  1634  0012                     	;# 
  1635  0013                     	;# 
  1636  0016                     	;# 
  1637  0017                     	;# 
  1638  0018                     	;# 
  1639  001C                     	;# 
  1640  001C                     	;# 
  1641  001D                     	;# 
  1642  001D                     	;# 
  1643  001E                     	;# 
  1644  001F                     	;# 
  1645  008C                     	;# 
  1646  008C                     	;# 
  1647  008D                     	;# 
  1648  008E                     	;# 
  1649  008E                     	;# 
  1650  008F                     	;# 
  1651  0090                     	;# 
  1652  0090                     	;# 
  1653  0091                     	;# 
  1654  0093                     	;# 
  1655  0094                     	;# 
  1656  0095                     	;# 
  1657  0096                     	;# 
  1658  0097                     	;# 
  1659  0098                     	;# 
  1660  0099                     	;# 
  1661  009A                     	;# 
  1662  009B                     	;# 
  1663  009C                     	;# 
  1664  009D                     	;# 
  1665  009E                     	;# 
  1666  010C                     	;# 
  1667  010D                     	;# 
  1668  010E                     	;# 
  1669  010E                     	;# 
  1670  010F                     	;# 
  1671  0110                     	;# 
  1672  0110                     	;# 
  1673  0111                     	;# 
  1674  0112                     	;# 
  1675  0112                     	;# 
  1676  0113                     	;# 
  1677  0114                     	;# 
  1678  0114                     	;# 
  1679  0115                     	;# 
  1680  0116                     	;# 
  1681  0116                     	;# 
  1682  0117                     	;# 
  1683  0119                     	;# 
  1684  0119                     	;# 
  1685  0119                     	;# 
  1686  011A                     	;# 
  1687  011A                     	;# 
  1688  011A                     	;# 
  1689  011B                     	;# 
  1690  011B                     	;# 
  1691  011B                     	;# 
  1692  011B                     	;# 
  1693  011B                     	;# 
  1694  011C                     	;# 
  1695  011C                     	;# 
  1696  011C                     	;# 
  1697  011D                     	;# 
  1698  011D                     	;# 
  1699  011D                     	;# 
  1700  011E                     	;# 
  1701  011E                     	;# 
  1702  011E                     	;# 
  1703  011F                     	;# 
  1704  011F                     	;# 
  1705  011F                     	;# 
  1706  011F                     	;# 
  1707  011F                     	;# 
  1708  018C                     	;# 
  1709  018D                     	;# 
  1710  018E                     	;# 
  1711  018F                     	;# 
  1712  0190                     	;# 
  1713  0191                     	;# 
  1714  0192                     	;# 
  1715  0196                     	;# 
  1716  0197                     	;# 
  1717  0198                     	;# 
  1718  0199                     	;# 
  1719  019A                     	;# 
  1720  019B                     	;# 
  1721  019C                     	;# 
  1722  020C                     	;# 
  1723  020C                     	;# 
  1724  020D                     	;# 
  1725  020E                     	;# 
  1726  020F                     	;# 
  1727  020F                     	;# 
  1728  0210                     	;# 
  1729  0210                     	;# 
  1730  0211                     	;# 
  1731  0211                     	;# 
  1732  0212                     	;# 
  1733  0212                     	;# 
  1734  0213                     	;# 
  1735  0214                     	;# 
  1736  0215                     	;# 
  1737  0215                     	;# 
  1738  0216                     	;# 
  1739  0216                     	;# 
  1740  0217                     	;# 
  1741  0217                     	;# 
  1742  0218                     	;# 
  1743  0218                     	;# 
  1744  0219                     	;# 
  1745  021A                     	;# 
  1746  021B                     	;# 
  1747  021B                     	;# 
  1748  021C                     	;# 
  1749  021C                     	;# 
  1750  021D                     	;# 
  1751  021D                     	;# 
  1752  021E                     	;# 
  1753  021F                     	;# 
  1754  028C                     	;# 
  1755  028C                     	;# 
  1756  028D                     	;# 
  1757  028D                     	;# 
  1758  028E                     	;# 
  1759  028F                     	;# 
  1760  0290                     	;# 
  1761  0290                     	;# 
  1762  0291                     	;# 
  1763  0292                     	;# 
  1764  0292                     	;# 
  1765  0293                     	;# 
  1766  0293                     	;# 
  1767  0294                     	;# 
  1768  0295                     	;# 
  1769  0296                     	;# 
  1770  0296                     	;# 
  1771  0297                     	;# 
  1772  0298                     	;# 
  1773  0298                     	;# 
  1774  0299                     	;# 
  1775  0299                     	;# 
  1776  029A                     	;# 
  1777  029B                     	;# 
  1778  029C                     	;# 
  1779  029C                     	;# 
  1780  029D                     	;# 
  1781  030C                     	;# 
  1782  030C                     	;# 
  1783  030D                     	;# 
  1784  030E                     	;# 
  1785  030F                     	;# 
  1786  0310                     	;# 
  1787  0310                     	;# 
  1788  0311                     	;# 
  1789  0312                     	;# 
  1790  0313                     	;# 
  1791  0314                     	;# 
  1792  0314                     	;# 
  1793  0315                     	;# 
  1794  0316                     	;# 
  1795  0317                     	;# 
  1796  0318                     	;# 
  1797  0318                     	;# 
  1798  0319                     	;# 
  1799  031A                     	;# 
  1800  031B                     	;# 
  1801  031C                     	;# 
  1802  031C                     	;# 
  1803  031D                     	;# 
  1804  031E                     	;# 
  1805  031F                     	;# 
  1806  038C                     	;# 
  1807  038C                     	;# 
  1808  038D                     	;# 
  1809  038E                     	;# 
  1810  0390                     	;# 
  1811  0390                     	;# 
  1812  0391                     	;# 
  1813  0392                     	;# 
  1814  040C                     	;# 
  1815  040D                     	;# 
  1816  040E                     	;# 
  1817  040F                     	;# 
  1818  0410                     	;# 
  1819  0411                     	;# 
  1820  0416                     	;# 
  1821  0416                     	;# 
  1822  0417                     	;# 
  1823  0418                     	;# 
  1824  0418                     	;# 
  1825  0419                     	;# 
  1826  041A                     	;# 
  1827  041A                     	;# 
  1828  041B                     	;# 
  1829  041C                     	;# 
  1830  041C                     	;# 
  1831  041D                     	;# 
  1832  041E                     	;# 
  1833  041F                     	;# 
  1834  048C                     	;# 
  1835  048C                     	;# 
  1836  048D                     	;# 
  1837  048E                     	;# 
  1838  048F                     	;# 
  1839  048F                     	;# 
  1840  0490                     	;# 
  1841  0491                     	;# 
  1842  0492                     	;# 
  1843  0492                     	;# 
  1844  0493                     	;# 
  1845  0494                     	;# 
  1846  0495                     	;# 
  1847  0495                     	;# 
  1848  0496                     	;# 
  1849  0497                     	;# 
  1850  0498                     	;# 
  1851  0499                     	;# 
  1852  049A                     	;# 
  1853  049B                     	;# 
  1854  049C                     	;# 
  1855  049D                     	;# 
  1856  050C                     	;# 
  1857  050C                     	;# 
  1858  050D                     	;# 
  1859  050E                     	;# 
  1860  050F                     	;# 
  1861  050F                     	;# 
  1862  0510                     	;# 
  1863  0511                     	;# 
  1864  0512                     	;# 
  1865  0512                     	;# 
  1866  0513                     	;# 
  1867  0514                     	;# 
  1868  0515                     	;# 
  1869  0515                     	;# 
  1870  0516                     	;# 
  1871  0517                     	;# 
  1872  0518                     	;# 
  1873  0519                     	;# 
  1874  051A                     	;# 
  1875  051B                     	;# 
  1876  051C                     	;# 
  1877  051D                     	;# 
  1878  058C                     	;# 
  1879  058C                     	;# 
  1880  058D                     	;# 
  1881  058E                     	;# 
  1882  058F                     	;# 
  1883  058F                     	;# 
  1884  0590                     	;# 
  1885  0591                     	;# 
  1886  0592                     	;# 
  1887  0593                     	;# 
  1888  060C                     	;# 
  1889  060D                     	;# 
  1890  060E                     	;# 
  1891  060F                     	;# 
  1892  0610                     	;# 
  1893  0611                     	;# 
  1894  0612                     	;# 
  1895  0613                     	;# 
  1896  0614                     	;# 
  1897  0616                     	;# 
  1898  0617                     	;# 
  1899  0618                     	;# 
  1900  0619                     	;# 
  1901  061A                     	;# 
  1902  061B                     	;# 
  1903  061C                     	;# 
  1904  061D                     	;# 
  1905  061E                     	;# 
  1906  068C                     	;# 
  1907  068D                     	;# 
  1908  068E                     	;# 
  1909  068F                     	;# 
  1910  0690                     	;# 
  1911  0691                     	;# 
  1912  0692                     	;# 
  1913  0693                     	;# 
  1914  0694                     	;# 
  1915  070C                     	;# 
  1916  070D                     	;# 
  1917  070E                     	;# 
  1918  070F                     	;# 
  1919  0710                     	;# 
  1920  0711                     	;# 
  1921  0712                     	;# 
  1922  0713                     	;# 
  1923  0714                     	;# 
  1924  0716                     	;# 
  1925  0717                     	;# 
  1926  0718                     	;# 
  1927  0719                     	;# 
  1928  071A                     	;# 
  1929  071B                     	;# 
  1930  071C                     	;# 
  1931  071D                     	;# 
  1932  071E                     	;# 
  1933  0796                     	;# 
  1934  0797                     	;# 
  1935  0798                     	;# 
  1936  0799                     	;# 
  1937  079A                     	;# 
  1938  079B                     	;# 
  1939  080C                     	;# 
  1940  080D                     	;# 
  1941  080E                     	;# 
  1942  080F                     	;# 
  1943  0810                     	;# 
  1944  0811                     	;# 
  1945  0812                     	;# 
  1946  0813                     	;# 
  1947  0814                     	;# 
  1948  081A                     	;# 
  1949  081B                     	;# 
  1950  081C                     	;# 
  1951  081D                     	;# 
  1952  081E                     	;# 
  1953  081F                     	;# 
  1954  088C                     	;# 
  1955  088D                     	;# 
  1956  088E                     	;# 
  1957  088F                     	;# 
  1958  0890                     	;# 
  1959  0891                     	;# 
  1960  0892                     	;# 
  1961  0893                     	;# 
  1962  0895                     	;# 
  1963  0896                     	;# 
  1964  0897                     	;# 
  1965  0898                     	;# 
  1966  0899                     	;# 
  1967  089A                     	;# 
  1968  089B                     	;# 
  1969  090C                     	;# 
  1970  090E                     	;# 
  1971  090F                     	;# 
  1972  091F                     	;# 
  1973  091F                     	;# 
  1974  098F                     	;# 
  1975  098F                     	;# 
  1976  0990                     	;# 
  1977  0991                     	;# 
  1978  0992                     	;# 
  1979  0993                     	;# 
  1980  0994                     	;# 
  1981  0995                     	;# 
  1982  0996                     	;# 
  1983  0997                     	;# 
  1984  0E0F                     	;# 
  1985  0E10                     	;# 
  1986  0E11                     	;# 
  1987  0E12                     	;# 
  1988  0E13                     	;# 
  1989  0E14                     	;# 
  1990  0E15                     	;# 
  1991  0E16                     	;# 
  1992  0E17                     	;# 
  1993  0E18                     	;# 
  1994  0E19                     	;# 
  1995  0E1A                     	;# 
  1996  0E1B                     	;# 
  1997  0E1C                     	;# 
  1998  0E1D                     	;# 
  1999  0E1E                     	;# 
  2000  0E1F                     	;# 
  2001  0E20                     	;# 
  2002  0E21                     	;# 
  2003  0E22                     	;# 
  2004  0E23                     	;# 
  2005  0E24                     	;# 
  2006  0E25                     	;# 
  2007  0E26                     	;# 
  2008  0E27                     	;# 
  2009  0E28                     	;# 
  2010  0E29                     	;# 
  2011  0E2A                     	;# 
  2012  0E2B                     	;# 
  2013  0E2C                     	;# 
  2014  0E2D                     	;# 
  2015  0E2E                     	;# 
  2016  0E2F                     	;# 
  2017  0E30                     	;# 
  2018  0E31                     	;# 
  2019  0E32                     	;# 
  2020  0E33                     	;# 
  2021  0E34                     	;# 
  2022  0E35                     	;# 
  2023  0E36                     	;# 
  2024  0E37                     	;# 
  2025  0E8F                     	;# 
  2026  0E90                     	;# 
  2027  0E91                     	;# 
  2028  0E92                     	;# 
  2029  0E93                     	;# 
  2030  0E94                     	;# 
  2031  0E95                     	;# 
  2032  0E96                     	;# 
  2033  0E97                     	;# 
  2034  0E9C                     	;# 
  2035  0E9D                     	;# 
  2036  0E9E                     	;# 
  2037  0EA1                     	;# 
  2038  0EA2                     	;# 
  2039  0EA3                     	;# 
  2040  0EA4                     	;# 
  2041  0EA5                     	;# 
  2042  0EA9                     	;# 
  2043  0EAA                     	;# 
  2044  0EAB                     	;# 
  2045  0EAC                     	;# 
  2046  0EB1                     	;# 
  2047  0EB2                     	;# 
  2048  0EB3                     	;# 
  2049  0EB8                     	;# 
  2050  0EB9                     	;# 
  2051  0EBA                     	;# 
  2052  0EBB                     	;# 
  2053  0EBC                     	;# 
  2054  0EBD                     	;# 
  2055  0EBE                     	;# 
  2056  0EC3                     	;# 
  2057  0EC5                     	;# 
  2058  0EC6                     	;# 
  2059  0EC7                     	;# 
  2060  0EC8                     	;# 
  2061  0EC9                     	;# 
  2062  0ECA                     	;# 
  2063  0ECB                     	;# 
  2064  0ECC                     	;# 
  2065  0F10                     	;# 
  2066  0F11                     	;# 
  2067  0F12                     	;# 
  2068  0F13                     	;# 
  2069  0F14                     	;# 
  2070  0F15                     	;# 
  2071  0F16                     	;# 
  2072  0F17                     	;# 
  2073  0F18                     	;# 
  2074  0F19                     	;# 
  2075  0F1A                     	;# 
  2076  0F1B                     	;# 
  2077  0F1C                     	;# 
  2078  0F1D                     	;# 
  2079  0F1E                     	;# 
  2080  0F1F                     	;# 
  2081  0F20                     	;# 
  2082  0F21                     	;# 
  2083  0F22                     	;# 
  2084  0F23                     	;# 
  2085  0F24                     	;# 
  2086  0F25                     	;# 
  2087  0F26                     	;# 
  2088  0F27                     	;# 
  2089  0F38                     	;# 
  2090  0F39                     	;# 
  2091  0F3A                     	;# 
  2092  0F3B                     	;# 
  2093  0F3C                     	;# 
  2094  0F3D                     	;# 
  2095  0F3E                     	;# 
  2096  0F3F                     	;# 
  2097  0F40                     	;# 
  2098  0F41                     	;# 
  2099  0F43                     	;# 
  2100  0F44                     	;# 
  2101  0F45                     	;# 
  2102  0F46                     	;# 
  2103  0F47                     	;# 
  2104  0F48                     	;# 
  2105  0F49                     	;# 
  2106  0F4A                     	;# 
  2107  0F4B                     	;# 
  2108  0F4C                     	;# 
  2109  0F4E                     	;# 
  2110  0F4F                     	;# 
  2111  0F50                     	;# 
  2112  0F51                     	;# 
  2113  0F52                     	;# 
  2114  0F53                     	;# 
  2115  0F54                     	;# 
  2116  0F55                     	;# 
  2117  0F56                     	;# 
  2118  0F57                     	;# 
  2119  0F65                     	;# 
  2120  0F68                     	;# 
  2121  0F69                     	;# 
  2122  0F6A                     	;# 
  2123  0F6B                     	;# 
  2124  0FE4                     	;# 
  2125  0FE5                     	;# 
  2126  0FE6                     	;# 
  2127  0FE7                     	;# 
  2128  0FE8                     	;# 
  2129  0FE9                     	;# 
  2130  0FEA                     	;# 
  2131  0FEB                     	;# 
  2132  0FED                     	;# 
  2133  0FEE                     	;# 
  2134  0FEF                     	;# 
  2135  0000                     	;# 
  2136  0001                     	;# 
  2137  0002                     	;# 
  2138  0003                     	;# 
  2139  0004                     	;# 
  2140  0005                     	;# 
  2141  0006                     	;# 
  2142  0007                     	;# 
  2143  0008                     	;# 
  2144  0009                     	;# 
  2145  000A                     	;# 
  2146  000B                     	;# 
  2147  000C                     	;# 
  2148  000D                     	;# 
  2149  000E                     	;# 
  2150  0010                     	;# 
  2151  0011                     	;# 
  2152  0012                     	;# 
  2153  0013                     	;# 
  2154  0016                     	;# 
  2155  0017                     	;# 
  2156  0018                     	;# 
  2157  001C                     	;# 
  2158  001C                     	;# 
  2159  001D                     	;# 
  2160  001D                     	;# 
  2161  001E                     	;# 
  2162  001F                     	;# 
  2163  008C                     	;# 
  2164  008C                     	;# 
  2165  008D                     	;# 
  2166  008E                     	;# 
  2167  008E                     	;# 
  2168  008F                     	;# 
  2169  0090                     	;# 
  2170  0090                     	;# 
  2171  0091                     	;# 
  2172  0093                     	;# 
  2173  0094                     	;# 
  2174  0095                     	;# 
  2175  0096                     	;# 
  2176  0097                     	;# 
  2177  0098                     	;# 
  2178  0099                     	;# 
  2179  009A                     	;# 
  2180  009B                     	;# 
  2181  009C                     	;# 
  2182  009D                     	;# 
  2183  009E                     	;# 
  2184  010C                     	;# 
  2185  010D                     	;# 
  2186  010E                     	;# 
  2187  010E                     	;# 
  2188  010F                     	;# 
  2189  0110                     	;# 
  2190  0110                     	;# 
  2191  0111                     	;# 
  2192  0112                     	;# 
  2193  0112                     	;# 
  2194  0113                     	;# 
  2195  0114                     	;# 
  2196  0114                     	;# 
  2197  0115                     	;# 
  2198  0116                     	;# 
  2199  0116                     	;# 
  2200  0117                     	;# 
  2201  0119                     	;# 
  2202  0119                     	;# 
  2203  0119                     	;# 
  2204  011A                     	;# 
  2205  011A                     	;# 
  2206  011A                     	;# 
  2207  011B                     	;# 
  2208  011B                     	;# 
  2209  011B                     	;# 
  2210  011B                     	;# 
  2211  011B                     	;# 
  2212  011C                     	;# 
  2213  011C                     	;# 
  2214  011C                     	;# 
  2215  011D                     	;# 
  2216  011D                     	;# 
  2217  011D                     	;# 
  2218  011E                     	;# 
  2219  011E                     	;# 
  2220  011E                     	;# 
  2221  011F                     	;# 
  2222  011F                     	;# 
  2223  011F                     	;# 
  2224  011F                     	;# 
  2225  011F                     	;# 
  2226  018C                     	;# 
  2227  018D                     	;# 
  2228  018E                     	;# 
  2229  018F                     	;# 
  2230  0190                     	;# 
  2231  0191                     	;# 
  2232  0192                     	;# 
  2233  0196                     	;# 
  2234  0197                     	;# 
  2235  0198                     	;# 
  2236  0199                     	;# 
  2237  019A                     	;# 
  2238  019B                     	;# 
  2239  019C                     	;# 
  2240  020C                     	;# 
  2241  020C                     	;# 
  2242  020D                     	;# 
  2243  020E                     	;# 
  2244  020F                     	;# 
  2245  020F                     	;# 
  2246  0210                     	;# 
  2247  0210                     	;# 
  2248  0211                     	;# 
  2249  0211                     	;# 
  2250  0212                     	;# 
  2251  0212                     	;# 
  2252  0213                     	;# 
  2253  0214                     	;# 
  2254  0215                     	;# 
  2255  0215                     	;# 
  2256  0216                     	;# 
  2257  0216                     	;# 
  2258  0217                     	;# 
  2259  0217                     	;# 
  2260  0218                     	;# 
  2261  0218                     	;# 
  2262  0219                     	;# 
  2263  021A                     	;# 
  2264  021B                     	;# 
  2265  021B                     	;# 
  2266  021C                     	;# 
  2267  021C                     	;# 
  2268  021D                     	;# 
  2269  021D                     	;# 
  2270  021E                     	;# 
  2271  021F                     	;# 
  2272  028C                     	;# 
  2273  028C                     	;# 
  2274  028D                     	;# 
  2275  028D                     	;# 
  2276  028E                     	;# 
  2277  028F                     	;# 
  2278  0290                     	;# 
  2279  0290                     	;# 
  2280  0291                     	;# 
  2281  0292                     	;# 
  2282  0292                     	;# 
  2283  0293                     	;# 
  2284  0293                     	;# 
  2285  0294                     	;# 
  2286  0295                     	;# 
  2287  0296                     	;# 
  2288  0296                     	;# 
  2289  0297                     	;# 
  2290  0298                     	;# 
  2291  0298                     	;# 
  2292  0299                     	;# 
  2293  0299                     	;# 
  2294  029A                     	;# 
  2295  029B                     	;# 
  2296  029C                     	;# 
  2297  029C                     	;# 
  2298  029D                     	;# 
  2299  030C                     	;# 
  2300  030C                     	;# 
  2301  030D                     	;# 
  2302  030E                     	;# 
  2303  030F                     	;# 
  2304  0310                     	;# 
  2305  0310                     	;# 
  2306  0311                     	;# 
  2307  0312                     	;# 
  2308  0313                     	;# 
  2309  0314                     	;# 
  2310  0314                     	;# 
  2311  0315                     	;# 
  2312  0316                     	;# 
  2313  0317                     	;# 
  2314  0318                     	;# 
  2315  0318                     	;# 
  2316  0319                     	;# 
  2317  031A                     	;# 
  2318  031B                     	;# 
  2319  031C                     	;# 
  2320  031C                     	;# 
  2321  031D                     	;# 
  2322  031E                     	;# 
  2323  031F                     	;# 
  2324  038C                     	;# 
  2325  038C                     	;# 
  2326  038D                     	;# 
  2327  038E                     	;# 
  2328  0390                     	;# 
  2329  0390                     	;# 
  2330  0391                     	;# 
  2331  0392                     	;# 
  2332  040C                     	;# 
  2333  040D                     	;# 
  2334  040E                     	;# 
  2335  040F                     	;# 
  2336  0410                     	;# 
  2337  0411                     	;# 
  2338  0416                     	;# 
  2339  0416                     	;# 
  2340  0417                     	;# 
  2341  0418                     	;# 
  2342  0418                     	;# 
  2343  0419                     	;# 
  2344  041A                     	;# 
  2345  041A                     	;# 
  2346  041B                     	;# 
  2347  041C                     	;# 
  2348  041C                     	;# 
  2349  041D                     	;# 
  2350  041E                     	;# 
  2351  041F                     	;# 
  2352  048C                     	;# 
  2353  048C                     	;# 
  2354  048D                     	;# 
  2355  048E                     	;# 
  2356  048F                     	;# 
  2357  048F                     	;# 
  2358  0490                     	;# 
  2359  0491                     	;# 
  2360  0492                     	;# 
  2361  0492                     	;# 
  2362  0493                     	;# 
  2363  0494                     	;# 
  2364  0495                     	;# 
  2365  0495                     	;# 
  2366  0496                     	;# 
  2367  0497                     	;# 
  2368  0498                     	;# 
  2369  0499                     	;# 
  2370  049A                     	;# 
  2371  049B                     	;# 
  2372  049C                     	;# 
  2373  049D                     	;# 
  2374  050C                     	;# 
  2375  050C                     	;# 
  2376  050D                     	;# 
  2377  050E                     	;# 
  2378  050F                     	;# 
  2379  050F                     	;# 
  2380  0510                     	;# 
  2381  0511                     	;# 
  2382  0512                     	;# 
  2383  0512                     	;# 
  2384  0513                     	;# 
  2385  0514                     	;# 
  2386  0515                     	;# 
  2387  0515                     	;# 
  2388  0516                     	;# 
  2389  0517                     	;# 
  2390  0518                     	;# 
  2391  0519                     	;# 
  2392  051A                     	;# 
  2393  051B                     	;# 
  2394  051C                     	;# 
  2395  051D                     	;# 
  2396  058C                     	;# 
  2397  058C                     	;# 
  2398  058D                     	;# 
  2399  058E                     	;# 
  2400  058F                     	;# 
  2401  058F                     	;# 
  2402  0590                     	;# 
  2403  0591                     	;# 
  2404  0592                     	;# 
  2405  0593                     	;# 
  2406  060C                     	;# 
  2407  060D                     	;# 
  2408  060E                     	;# 
  2409  060F                     	;# 
  2410  0610                     	;# 
  2411  0611                     	;# 
  2412  0612                     	;# 
  2413  0613                     	;# 
  2414  0614                     	;# 
  2415  0616                     	;# 
  2416  0617                     	;# 
  2417  0618                     	;# 
  2418  0619                     	;# 
  2419  061A                     	;# 
  2420  061B                     	;# 
  2421  061C                     	;# 
  2422  061D                     	;# 
  2423  061E                     	;# 
  2424  068C                     	;# 
  2425  068D                     	;# 
  2426  068E                     	;# 
  2427  068F                     	;# 
  2428  0690                     	;# 
  2429  0691                     	;# 
  2430  0692                     	;# 
  2431  0693                     	;# 
  2432  0694                     	;# 
  2433  070C                     	;# 
  2434  070D                     	;# 
  2435  070E                     	;# 
  2436  070F                     	;# 
  2437  0710                     	;# 
  2438  0711                     	;# 
  2439  0712                     	;# 
  2440  0713                     	;# 
  2441  0714                     	;# 
  2442  0716                     	;# 
  2443  0717                     	;# 
  2444  0718                     	;# 
  2445  0719                     	;# 
  2446  071A                     	;# 
  2447  071B                     	;# 
  2448  071C                     	;# 
  2449  071D                     	;# 
  2450  071E                     	;# 
  2451  0796                     	;# 
  2452  0797                     	;# 
  2453  0798                     	;# 
  2454  0799                     	;# 
  2455  079A                     	;# 
  2456  079B                     	;# 
  2457  080C                     	;# 
  2458  080D                     	;# 
  2459  080E                     	;# 
  2460  080F                     	;# 
  2461  0810                     	;# 
  2462  0811                     	;# 
  2463  0812                     	;# 
  2464  0813                     	;# 
  2465  0814                     	;# 
  2466  081A                     	;# 
  2467  081B                     	;# 
  2468  081C                     	;# 
  2469  081D                     	;# 
  2470  081E                     	;# 
  2471  081F                     	;# 
  2472  088C                     	;# 
  2473  088D                     	;# 
  2474  088E                     	;# 
  2475  088F                     	;# 
  2476  0890                     	;# 
  2477  0891                     	;# 
  2478  0892                     	;# 
  2479  0893                     	;# 
  2480  0895                     	;# 
  2481  0896                     	;# 
  2482  0897                     	;# 
  2483  0898                     	;# 
  2484  0899                     	;# 
  2485  089A                     	;# 
  2486  089B                     	;# 
  2487  090C                     	;# 
  2488  090E                     	;# 
  2489  090F                     	;# 
  2490  091F                     	;# 
  2491  091F                     	;# 
  2492  098F                     	;# 
  2493  098F                     	;# 
  2494  0990                     	;# 
  2495  0991                     	;# 
  2496  0992                     	;# 
  2497  0993                     	;# 
  2498  0994                     	;# 
  2499  0995                     	;# 
  2500  0996                     	;# 
  2501  0997                     	;# 
  2502  0E0F                     	;# 
  2503  0E10                     	;# 
  2504  0E11                     	;# 
  2505  0E12                     	;# 
  2506  0E13                     	;# 
  2507  0E14                     	;# 
  2508  0E15                     	;# 
  2509  0E16                     	;# 
  2510  0E17                     	;# 
  2511  0E18                     	;# 
  2512  0E19                     	;# 
  2513  0E1A                     	;# 
  2514  0E1B                     	;# 
  2515  0E1C                     	;# 
  2516  0E1D                     	;# 
  2517  0E1E                     	;# 
  2518  0E1F                     	;# 
  2519  0E20                     	;# 
  2520  0E21                     	;# 
  2521  0E22                     	;# 
  2522  0E23                     	;# 
  2523  0E24                     	;# 
  2524  0E25                     	;# 
  2525  0E26                     	;# 
  2526  0E27                     	;# 
  2527  0E28                     	;# 
  2528  0E29                     	;# 
  2529  0E2A                     	;# 
  2530  0E2B                     	;# 
  2531  0E2C                     	;# 
  2532  0E2D                     	;# 
  2533  0E2E                     	;# 
  2534  0E2F                     	;# 
  2535  0E30                     	;# 
  2536  0E31                     	;# 
  2537  0E32                     	;# 
  2538  0E33                     	;# 
  2539  0E34                     	;# 
  2540  0E35                     	;# 
  2541  0E36                     	;# 
  2542  0E37                     	;# 
  2543  0E8F                     	;# 
  2544  0E90                     	;# 
  2545  0E91                     	;# 
  2546  0E92                     	;# 
  2547  0E93                     	;# 
  2548  0E94                     	;# 
  2549  0E95                     	;# 
  2550  0E96                     	;# 
  2551  0E97                     	;# 
  2552  0E9C                     	;# 
  2553  0E9D                     	;# 
  2554  0E9E                     	;# 
  2555  0EA1                     	;# 
  2556  0EA2                     	;# 
  2557  0EA3                     	;# 
  2558  0EA4                     	;# 
  2559  0EA5                     	;# 
  2560  0EA9                     	;# 
  2561  0EAA                     	;# 
  2562  0EAB                     	;# 
  2563  0EAC                     	;# 
  2564  0EB1                     	;# 
  2565  0EB2                     	;# 
  2566  0EB3                     	;# 
  2567  0EB8                     	;# 
  2568  0EB9                     	;# 
  2569  0EBA                     	;# 
  2570  0EBB                     	;# 
  2571  0EBC                     	;# 
  2572  0EBD                     	;# 
  2573  0EBE                     	;# 
  2574  0EC3                     	;# 
  2575  0EC5                     	;# 
  2576  0EC6                     	;# 
  2577  0EC7                     	;# 
  2578  0EC8                     	;# 
  2579  0EC9                     	;# 
  2580  0ECA                     	;# 
  2581  0ECB                     	;# 
  2582  0ECC                     	;# 
  2583  0F10                     	;# 
  2584  0F11                     	;# 
  2585  0F12                     	;# 
  2586  0F13                     	;# 
  2587  0F14                     	;# 
  2588  0F15                     	;# 
  2589  0F16                     	;# 
  2590  0F17                     	;# 
  2591  0F18                     	;# 
  2592  0F19                     	;# 
  2593  0F1A                     	;# 
  2594  0F1B                     	;# 
  2595  0F1C                     	;# 
  2596  0F1D                     	;# 
  2597  0F1E                     	;# 
  2598  0F1F                     	;# 
  2599  0F20                     	;# 
  2600  0F21                     	;# 
  2601  0F22                     	;# 
  2602  0F23                     	;# 
  2603  0F24                     	;# 
  2604  0F25                     	;# 
  2605  0F26                     	;# 
  2606  0F27                     	;# 
  2607  0F38                     	;# 
  2608  0F39                     	;# 
  2609  0F3A                     	;# 
  2610  0F3B                     	;# 
  2611  0F3C                     	;# 
  2612  0F3D                     	;# 
  2613  0F3E                     	;# 
  2614  0F3F                     	;# 
  2615  0F40                     	;# 
  2616  0F41                     	;# 
  2617  0F43                     	;# 
  2618  0F44                     	;# 
  2619  0F45                     	;# 
  2620  0F46                     	;# 
  2621  0F47                     	;# 
  2622  0F48                     	;# 
  2623  0F49                     	;# 
  2624  0F4A                     	;# 
  2625  0F4B                     	;# 
  2626  0F4C                     	;# 
  2627  0F4E                     	;# 
  2628  0F4F                     	;# 
  2629  0F50                     	;# 
  2630  0F51                     	;# 
  2631  0F52                     	;# 
  2632  0F53                     	;# 
  2633  0F54                     	;# 
  2634  0F55                     	;# 
  2635  0F56                     	;# 
  2636  0F57                     	;# 
  2637  0F65                     	;# 
  2638  0F68                     	;# 
  2639  0F69                     	;# 
  2640  0F6A                     	;# 
  2641  0F6B                     	;# 
  2642  0FE4                     	;# 
  2643  0FE5                     	;# 
  2644  0FE6                     	;# 
  2645  0FE7                     	;# 
  2646  0FE8                     	;# 
  2647  0FE9                     	;# 
  2648  0FEA                     	;# 
  2649  0FEB                     	;# 
  2650  0FED                     	;# 
  2651  0FEE                     	;# 
  2652  0FEF                     	;# 
  2653  0000                     	;# 
  2654  0001                     	;# 
  2655  0002                     	;# 
  2656  0003                     	;# 
  2657  0004                     	;# 
  2658  0005                     	;# 
  2659  0006                     	;# 
  2660  0007                     	;# 
  2661  0008                     	;# 
  2662  0009                     	;# 
  2663  000A                     	;# 
  2664  000B                     	;# 
  2665  000C                     	;# 
  2666  000D                     	;# 
  2667  000E                     	;# 
  2668  0010                     	;# 
  2669  0011                     	;# 
  2670  0012                     	;# 
  2671  0013                     	;# 
  2672  0016                     	;# 
  2673  0017                     	;# 
  2674  0018                     	;# 
  2675  001C                     	;# 
  2676  001C                     	;# 
  2677  001D                     	;# 
  2678  001D                     	;# 
  2679  001E                     	;# 
  2680  001F                     	;# 
  2681  008C                     	;# 
  2682  008C                     	;# 
  2683  008D                     	;# 
  2684  008E                     	;# 
  2685  008E                     	;# 
  2686  008F                     	;# 
  2687  0090                     	;# 
  2688  0090                     	;# 
  2689  0091                     	;# 
  2690  0093                     	;# 
  2691  0094                     	;# 
  2692  0095                     	;# 
  2693  0096                     	;# 
  2694  0097                     	;# 
  2695  0098                     	;# 
  2696  0099                     	;# 
  2697  009A                     	;# 
  2698  009B                     	;# 
  2699  009C                     	;# 
  2700  009D                     	;# 
  2701  009E                     	;# 
  2702  010C                     	;# 
  2703  010D                     	;# 
  2704  010E                     	;# 
  2705  010E                     	;# 
  2706  010F                     	;# 
  2707  0110                     	;# 
  2708  0110                     	;# 
  2709  0111                     	;# 
  2710  0112                     	;# 
  2711  0112                     	;# 
  2712  0113                     	;# 
  2713  0114                     	;# 
  2714  0114                     	;# 
  2715  0115                     	;# 
  2716  0116                     	;# 
  2717  0116                     	;# 
  2718  0117                     	;# 
  2719  0119                     	;# 
  2720  0119                     	;# 
  2721  0119                     	;# 
  2722  011A                     	;# 
  2723  011A                     	;# 
  2724  011A                     	;# 
  2725  011B                     	;# 
  2726  011B                     	;# 
  2727  011B                     	;# 
  2728  011B                     	;# 
  2729  011B                     	;# 
  2730  011C                     	;# 
  2731  011C                     	;# 
  2732  011C                     	;# 
  2733  011D                     	;# 
  2734  011D                     	;# 
  2735  011D                     	;# 
  2736  011E                     	;# 
  2737  011E                     	;# 
  2738  011E                     	;# 
  2739  011F                     	;# 
  2740  011F                     	;# 
  2741  011F                     	;# 
  2742  011F                     	;# 
  2743  011F                     	;# 
  2744  018C                     	;# 
  2745  018D                     	;# 
  2746  018E                     	;# 
  2747  018F                     	;# 
  2748  0190                     	;# 
  2749  0191                     	;# 
  2750  0192                     	;# 
  2751  0196                     	;# 
  2752  0197                     	;# 
  2753  0198                     	;# 
  2754  0199                     	;# 
  2755  019A                     	;# 
  2756  019B                     	;# 
  2757  019C                     	;# 
  2758  020C                     	;# 
  2759  020C                     	;# 
  2760  020D                     	;# 
  2761  020E                     	;# 
  2762  020F                     	;# 
  2763  020F                     	;# 
  2764  0210                     	;# 
  2765  0210                     	;# 
  2766  0211                     	;# 
  2767  0211                     	;# 
  2768  0212                     	;# 
  2769  0212                     	;# 
  2770  0213                     	;# 
  2771  0214                     	;# 
  2772  0215                     	;# 
  2773  0215                     	;# 
  2774  0216                     	;# 
  2775  0216                     	;# 
  2776  0217                     	;# 
  2777  0217                     	;# 
  2778  0218                     	;# 
  2779  0218                     	;# 
  2780  0219                     	;# 
  2781  021A                     	;# 
  2782  021B                     	;# 
  2783  021B                     	;# 
  2784  021C                     	;# 
  2785  021C                     	;# 
  2786  021D                     	;# 
  2787  021D                     	;# 
  2788  021E                     	;# 
  2789  021F                     	;# 
  2790  028C                     	;# 
  2791  028C                     	;# 
  2792  028D                     	;# 
  2793  028D                     	;# 
  2794  028E                     	;# 
  2795  028F                     	;# 
  2796  0290                     	;# 
  2797  0290                     	;# 
  2798  0291                     	;# 
  2799  0292                     	;# 
  2800  0292                     	;# 
  2801  0293                     	;# 
  2802  0293                     	;# 
  2803  0294                     	;# 
  2804  0295                     	;# 
  2805  0296                     	;# 
  2806  0296                     	;# 
  2807  0297                     	;# 
  2808  0298                     	;# 
  2809  0298                     	;# 
  2810  0299                     	;# 
  2811  0299                     	;# 
  2812  029A                     	;# 
  2813  029B                     	;# 
  2814  029C                     	;# 
  2815  029C                     	;# 
  2816  029D                     	;# 
  2817  030C                     	;# 
  2818  030C                     	;# 
  2819  030D                     	;# 
  2820  030E                     	;# 
  2821  030F                     	;# 
  2822  0310                     	;# 
  2823  0310                     	;# 
  2824  0311                     	;# 
  2825  0312                     	;# 
  2826  0313                     	;# 
  2827  0314                     	;# 
  2828  0314                     	;# 
  2829  0315                     	;# 
  2830  0316                     	;# 
  2831  0317                     	;# 
  2832  0318                     	;# 
  2833  0318                     	;# 
  2834  0319                     	;# 
  2835  031A                     	;# 
  2836  031B                     	;# 
  2837  031C                     	;# 
  2838  031C                     	;# 
  2839  031D                     	;# 
  2840  031E                     	;# 
  2841  031F                     	;# 
  2842  038C                     	;# 
  2843  038C                     	;# 
  2844  038D                     	;# 
  2845  038E                     	;# 
  2846  0390                     	;# 
  2847  0390                     	;# 
  2848  0391                     	;# 
  2849  0392                     	;# 
  2850  040C                     	;# 
  2851  040D                     	;# 
  2852  040E                     	;# 
  2853  040F                     	;# 
  2854  0410                     	;# 
  2855  0411                     	;# 
  2856  0416                     	;# 
  2857  0416                     	;# 
  2858  0417                     	;# 
  2859  0418                     	;# 
  2860  0418                     	;# 
  2861  0419                     	;# 
  2862  041A                     	;# 
  2863  041A                     	;# 
  2864  041B                     	;# 
  2865  041C                     	;# 
  2866  041C                     	;# 
  2867  041D                     	;# 
  2868  041E                     	;# 
  2869  041F                     	;# 
  2870  048C                     	;# 
  2871  048C                     	;# 
  2872  048D                     	;# 
  2873  048E                     	;# 
  2874  048F                     	;# 
  2875  048F                     	;# 
  2876  0490                     	;# 
  2877  0491                     	;# 
  2878  0492                     	;# 
  2879  0492                     	;# 
  2880  0493                     	;# 
  2881  0494                     	;# 
  2882  0495                     	;# 
  2883  0495                     	;# 
  2884  0496                     	;# 
  2885  0497                     	;# 
  2886  0498                     	;# 
  2887  0499                     	;# 
  2888  049A                     	;# 
  2889  049B                     	;# 
  2890  049C                     	;# 
  2891  049D                     	;# 
  2892  050C                     	;# 
  2893  050C                     	;# 
  2894  050D                     	;# 
  2895  050E                     	;# 
  2896  050F                     	;# 
  2897  050F                     	;# 
  2898  0510                     	;# 
  2899  0511                     	;# 
  2900  0512                     	;# 
  2901  0512                     	;# 
  2902  0513                     	;# 
  2903  0514                     	;# 
  2904  0515                     	;# 
  2905  0515                     	;# 
  2906  0516                     	;# 
  2907  0517                     	;# 
  2908  0518                     	;# 
  2909  0519                     	;# 
  2910  051A                     	;# 
  2911  051B                     	;# 
  2912  051C                     	;# 
  2913  051D                     	;# 
  2914  058C                     	;# 
  2915  058C                     	;# 
  2916  058D                     	;# 
  2917  058E                     	;# 
  2918  058F                     	;# 
  2919  058F                     	;# 
  2920  0590                     	;# 
  2921  0591                     	;# 
  2922  0592                     	;# 
  2923  0593                     	;# 
  2924  060C                     	;# 
  2925  060D                     	;# 
  2926  060E                     	;# 
  2927  060F                     	;# 
  2928  0610                     	;# 
  2929  0611                     	;# 
  2930  0612                     	;# 
  2931  0613                     	;# 
  2932  0614                     	;# 
  2933  0616                     	;# 
  2934  0617                     	;# 
  2935  0618                     	;# 
  2936  0619                     	;# 
  2937  061A                     	;# 
  2938  061B                     	;# 
  2939  061C                     	;# 
  2940  061D                     	;# 
  2941  061E                     	;# 
  2942  068C                     	;# 
  2943  068D                     	;# 
  2944  068E                     	;# 
  2945  068F                     	;# 
  2946  0690                     	;# 
  2947  0691                     	;# 
  2948  0692                     	;# 
  2949  0693                     	;# 
  2950  0694                     	;# 
  2951  070C                     	;# 
  2952  070D                     	;# 
  2953  070E                     	;# 
  2954  070F                     	;# 
  2955  0710                     	;# 
  2956  0711                     	;# 
  2957  0712                     	;# 
  2958  0713                     	;# 
  2959  0714                     	;# 
  2960  0716                     	;# 
  2961  0717                     	;# 
  2962  0718                     	;# 
  2963  0719                     	;# 
  2964  071A                     	;# 
  2965  071B                     	;# 
  2966  071C                     	;# 
  2967  071D                     	;# 
  2968  071E                     	;# 
  2969  0796                     	;# 
  2970  0797                     	;# 
  2971  0798                     	;# 
  2972  0799                     	;# 
  2973  079A                     	;# 
  2974  079B                     	;# 
  2975  080C                     	;# 
  2976  080D                     	;# 
  2977  080E                     	;# 
  2978  080F                     	;# 
  2979  0810                     	;# 
  2980  0811                     	;# 
  2981  0812                     	;# 
  2982  0813                     	;# 
  2983  0814                     	;# 
  2984  081A                     	;# 
  2985  081B                     	;# 
  2986  081C                     	;# 
  2987  081D                     	;# 
  2988  081E                     	;# 
  2989  081F                     	;# 
  2990  088C                     	;# 
  2991  088D                     	;# 
  2992  088E                     	;# 
  2993  088F                     	;# 
  2994  0890                     	;# 
  2995  0891                     	;# 
  2996  0892                     	;# 
  2997  0893                     	;# 
  2998  0895                     	;# 
  2999  0896                     	;# 
  3000  0897                     	;# 
  3001  0898                     	;# 
  3002  0899                     	;# 
  3003  089A                     	;# 
  3004  089B                     	;# 
  3005  090C                     	;# 
  3006  090E                     	;# 
  3007  090F                     	;# 
  3008  091F                     	;# 
  3009  091F                     	;# 
  3010  098F                     	;# 
  3011  098F                     	;# 
  3012  0990                     	;# 
  3013  0991                     	;# 
  3014  0992                     	;# 
  3015  0993                     	;# 
  3016  0994                     	;# 
  3017  0995                     	;# 
  3018  0996                     	;# 
  3019  0997                     	;# 
  3020  0E0F                     	;# 
  3021  0E10                     	;# 
  3022  0E11                     	;# 
  3023  0E12                     	;# 
  3024  0E13                     	;# 
  3025  0E14                     	;# 
  3026  0E15                     	;# 
  3027  0E16                     	;# 
  3028  0E17                     	;# 
  3029  0E18                     	;# 
  3030  0E19                     	;# 
  3031  0E1A                     	;# 
  3032  0E1B                     	;# 
  3033  0E1C                     	;# 
  3034  0E1D                     	;# 
  3035  0E1E                     	;# 
  3036  0E1F                     	;# 
  3037  0E20                     	;# 
  3038  0E21                     	;# 
  3039  0E22                     	;# 
  3040  0E23                     	;# 
  3041  0E24                     	;# 
  3042  0E25                     	;# 
  3043  0E26                     	;# 
  3044  0E27                     	;# 
  3045  0E28                     	;# 
  3046  0E29                     	;# 
  3047  0E2A                     	;# 
  3048  0E2B                     	;# 
  3049  0E2C                     	;# 
  3050  0E2D                     	;# 
  3051  0E2E                     	;# 
  3052  0E2F                     	;# 
  3053  0E30                     	;# 
  3054  0E31                     	;# 
  3055  0E32                     	;# 
  3056  0E33                     	;# 
  3057  0E34                     	;# 
  3058  0E35                     	;# 
  3059  0E36                     	;# 
  3060  0E37                     	;# 
  3061  0E8F                     	;# 
  3062  0E90                     	;# 
  3063  0E91                     	;# 
  3064  0E92                     	;# 
  3065  0E93                     	;# 
  3066  0E94                     	;# 
  3067  0E95                     	;# 
  3068  0E96                     	;# 
  3069  0E97                     	;# 
  3070  0E9C                     	;# 
  3071  0E9D                     	;# 
  3072  0E9E                     	;# 
  3073  0EA1                     	;# 
  3074  0EA2                     	;# 
  3075  0EA3                     	;# 
  3076  0EA4                     	;# 
  3077  0EA5                     	;# 
  3078  0EA9                     	;# 
  3079  0EAA                     	;# 
  3080  0EAB                     	;# 
  3081  0EAC                     	;# 
  3082  0EB1                     	;# 
  3083  0EB2                     	;# 
  3084  0EB3                     	;# 
  3085  0EB8                     	;# 
  3086  0EB9                     	;# 
  3087  0EBA                     	;# 
  3088  0EBB                     	;# 
  3089  0EBC                     	;# 
  3090  0EBD                     	;# 
  3091  0EBE                     	;# 
  3092  0EC3                     	;# 
  3093  0EC5                     	;# 
  3094  0EC6                     	;# 
  3095  0EC7                     	;# 
  3096  0EC8                     	;# 
  3097  0EC9                     	;# 
  3098  0ECA                     	;# 
  3099  0ECB                     	;# 
  3100  0ECC                     	;# 
  3101  0F10                     	;# 
  3102  0F11                     	;# 
  3103  0F12                     	;# 
  3104  0F13                     	;# 
  3105  0F14                     	;# 
  3106  0F15                     	;# 
  3107  0F16                     	;# 
  3108  0F17                     	;# 
  3109  0F18                     	;# 
  3110  0F19                     	;# 
  3111  0F1A                     	;# 
  3112  0F1B                     	;# 
  3113  0F1C                     	;# 
  3114  0F1D                     	;# 
  3115  0F1E                     	;# 
  3116  0F1F                     	;# 
  3117  0F20                     	;# 
  3118  0F21                     	;# 
  3119  0F22                     	;# 
  3120  0F23                     	;# 
  3121  0F24                     	;# 
  3122  0F25                     	;# 
  3123  0F26                     	;# 
  3124  0F27                     	;# 
  3125  0F38                     	;# 
  3126  0F39                     	;# 
  3127  0F3A                     	;# 
  3128  0F3B                     	;# 
  3129  0F3C                     	;# 
  3130  0F3D                     	;# 
  3131  0F3E                     	;# 
  3132  0F3F                     	;# 
  3133  0F40                     	;# 
  3134  0F41                     	;# 
  3135  0F43                     	;# 
  3136  0F44                     	;# 
  3137  0F45                     	;# 
  3138  0F46                     	;# 
  3139  0F47                     	;# 
  3140  0F48                     	;# 
  3141  0F49                     	;# 
  3142  0F4A                     	;# 
  3143  0F4B                     	;# 
  3144  0F4C                     	;# 
  3145  0F4E                     	;# 
  3146  0F4F                     	;# 
  3147  0F50                     	;# 
  3148  0F51                     	;# 
  3149  0F52                     	;# 
  3150  0F53                     	;# 
  3151  0F54                     	;# 
  3152  0F55                     	;# 
  3153  0F56                     	;# 
  3154  0F57                     	;# 
  3155  0F65                     	;# 
  3156  0F68                     	;# 
  3157  0F69                     	;# 
  3158  0F6A                     	;# 
  3159  0F6B                     	;# 
  3160  0FE4                     	;# 
  3161  0FE5                     	;# 
  3162  0FE6                     	;# 
  3163  0FE7                     	;# 
  3164  0FE8                     	;# 
  3165  0FE9                     	;# 
  3166  0FEA                     	;# 
  3167  0FEB                     	;# 
  3168  0FED                     	;# 
  3169  0FEE                     	;# 
  3170  0FEF                     	;# 
  3171                           
  3172                           	psect	idataBANK1
  3173  0000                     __pidataBANK1:
  3174  0013                     _TRISCbits	set	19
  3175  0013                     _TRISC	set	19
  3176  0012                     _TRISB	set	18
  3177  000D                     _PORTB	set	13
  3178  0017                     _LATB	set	23
  3179  0011                     _TRISA	set	17
  3180  000C                     _PORTA	set	12
  3181  0016                     _LATA	set	22
  3182  009B                     _ADCAP	set	155
  3183  009E                     _ADPCH	set	158
  3184  009A                     _ADREF	set	154
  3185  0098                     _ADCLK	set	152
  3186  0095                     _ADCON2	set	149
  3187  0094                     _ADCON1	set	148
  3188  0093                     _ADCON0	set	147
  3189  011A                     _TX1REG	set	282
  3190  011C                     _SP1BRGH	set	284
  3191  011B                     _SP1BRGL	set	283
  3192  011E                     _TX1STA	set	286
  3193  011D                     _RC1STA	set	285
  3194  011F                     _BAUD1CON	set	287
  3195  018C                     _SSP1BUF	set	396
  3196  0191                     _SSP1CON2bits	set	401
  3197  018D                     _SSP1ADD	set	397
  3198  0192                     _SSP1CON3	set	402
  3199  0190                     _SSP1CON1	set	400
  3200  018F                     _SSP1STAT	set	399
  3201  070F                     _PIR3bits	set	1807
  3202  070F                     _PIR3	set	1807
  3203  0EC6                     _SSP1DATPPS	set	3782
  3204  0EC5                     _SSP1CLKPPS	set	3781
  3205  0ECB                     _RXPPS	set	3787
  3206  0F24                     _RC4PPS	set	3876
  3207  0F23                     _RC3PPS	set	3875
  3208  0F4E                     _ANSELCbits	set	3918
  3209  0F20                     _RC0PPS	set	3872
  3210  0F4E                     _ANSELC	set	3918
  3211  0F43                     _ANSELB	set	3907
  3212  0F38                     _ANSELA	set	3896
  3213                           
  3214                           	psect	stringtext1
  3215  1800                     __pstringtext1:
  3216  1800                     STR_3:
  3217  1800  344C               	retlw	76	;'L'
  3218  1801  3461               	retlw	97	;'a'
  3219  1802  3420               	retlw	32	;' '
  3220  1803  3474               	retlw	116	;'t'
  3221  1804  3465               	retlw	101	;'e'
  3222  1805  346D               	retlw	109	;'m'
  3223  1806  3470               	retlw	112	;'p'
  3224  1807  3465               	retlw	101	;'e'
  3225  1808  3472               	retlw	114	;'r'
  3226  1809  3461               	retlw	97	;'a'
  3227  180A  3474               	retlw	116	;'t'
  3228  180B  3475               	retlw	117	;'u'
  3229  180C  3472               	retlw	114	;'r'
  3230  180D  3461               	retlw	97	;'a'
  3231  180E  3420               	retlw	32	;' '
  3232  180F  3465               	retlw	101	;'e'
  3233  1810  3473               	retlw	115	;'s'
  3234  1811  343A               	retlw	58	;':'
  3235  1812  3420               	retlw	32	;' '
  3236  1813  3425               	retlw	37	;'%'
  3237  1814  3464               	retlw	100	;'d'
  3238  1815  342E               	retlw	46	;'.'
  3239  1816  3425               	retlw	37	;'%'
  3240  1817  3464               	retlw	100	;'d'
  3241  1818  342A               	retlw	42	;'*'
  3242  1819  3443               	retlw	67	;'C'
  3243  181A  340A               	retlw	10
  3244  181B  340A               	retlw	10
  3245  181C  3400               	retlw	0
  3246                           
  3247                           	psect	stringtext2
  3248  181D                     __pstringtext2:
  3249  181D                     STR_1:
  3250  181D  3474               	retlw	116	;'t'
  3251  181E  3465               	retlw	101	;'e'
  3252  181F  346D               	retlw	109	;'m'
  3253  1820  3470               	retlw	112	;'p'
  3254  1821  3441               	retlw	65	;'A'
  3255  1822  346D               	retlw	109	;'m'
  3256  1823  3462               	retlw	98	;'b'
  3257  1824  343A               	retlw	58	;':'
  3258  1825  3420               	retlw	32	;' '
  3259  1826  3425               	retlw	37	;'%'
  3260  1827  3473               	retlw	115	;'s'
  3261  1828  340A               	retlw	10
  3262  1829  3400               	retlw	0
  3263                           
  3264                           	psect	stringtext3
  3265  182A                     __pstringtext3:
  3266  182A                     STR_2:
  3267  182A  3454               	retlw	84	;'T'
  3268  182B  346F               	retlw	111	;'o'
  3269  182C  3462               	retlw	98	;'b'
  3270  182D  346A               	retlw	106	;'j'
  3271  182E  343A               	retlw	58	;':'
  3272  182F  3420               	retlw	32	;' '
  3273  1830  3425               	retlw	37	;'%'
  3274  1831  3473               	retlw	115	;'s'
  3275  1832  340A               	retlw	10
  3276  1833  3400               	retlw	0
  3277                           
  3278                           	psect	stringtext4
  3279  1834                     __pstringtext4:
  3280  1834                     STR_4:
  3281  1834  3430               	retlw	48	;'0'
  3282  1835  3478               	retlw	120	;'x'
  3283  1836  3425               	retlw	37	;'%'
  3284  1837  3478               	retlw	120	;'x'
  3285  1838  340A               	retlw	10
  3286  1839  3400               	retlw	0
  3287                           
  3288                           	psect	stringtext5
  3289  0000                     __pstringtext5:
  3290  1834                     
  3291                           	psect	cinit
  3292  0068                     start_initialization:	
  3293                           ; #config settings
  3294                           
  3295  0068                     __initialization:
  3296                           
  3297                           ; Initialize objects allocated to BANK1
  3298  0068  0021               	movlb	1	; select bank1
  3299                           
  3300                           ;initializer for stoa@F1141
  3301  0069  3028               	movlw	40
  3302  006A  00E2               	movwf	__pdataBANK1& (0+127)
  3303  006B  306E               	movlw	110
  3304  006C  00E3               	movwf	(__pdataBANK1+1)& (0+127)
  3305  006D  3075               	movlw	117
  3306  006E  00E4               	movwf	(__pdataBANK1+2)& (0+127)
  3307  006F  306C               	movlw	108
  3308  0070  00E5               	movwf	(__pdataBANK1+3)& (0+127)
  3309  0071  00E6               	movwf	(__pdataBANK1+4)& (0+127)
  3310  0072  3029               	movlw	41
  3311  0073  00E7               	movwf	(__pdataBANK1+5)& (0+127)
  3312  0074  3000               	movlw	0
  3313  0075  00E8               	movwf	(__pdataBANK1+6)& (0+127)
  3314                           
  3315                           ; Clear objects allocated to BANK1
  3316  0076  30A0               	movlw	low __pbssBANK1
  3317  0077  0084               	movwf	4
  3318  0078  3000               	movlw	high __pbssBANK1
  3319  0079  0085               	movwf	5
  3320  007A  302A               	movlw	42
  3321  007B  3180  2024  3180   	fcall	clear_ram0
  3322  007E                     end_of_initialization:	
  3323                           ;End of C runtime variable initialization code
  3324                           
  3325  007E                     __end_of__initialization:
  3326  007E  0020               	movlb	0
  3327  007F  28A8               	ljmp	l3647	;jump to C main() function
  3328  0080                     __ptext27:	
  3329 ;; *************** function _MLX90614_readObjectTempC *****************
  3330 ;; Defined at:
  3331 ;;		line 51 in file "MLX90614.c"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;		None
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;		None
  3336 ;; Return value:  Size  Location     Type
  3337 ;;                  4   55[BANK0 ] float 
  3338 ;; Registers used:
  3339 ;;		wreg, status,2, status,0, pclath, cstack
  3340 ;; Tracked objects:
  3341 ;;		On entry : 1F/0
  3342 ;;		On exit  : 1F/0
  3343 ;;		Unchanged: 0/0
  3344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3345 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3347 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3348 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3349 ;;Total ram usage:        8 bytes
  3350 ;; Hardware stack levels used: 1
  3351 ;; Hardware stack levels required when called: 3
  3352 ;; This function calls:
  3353 ;;		_MLX90614_ReadReg
  3354 ;;		___fladd
  3355 ;;		___flmul
  3356 ;;		___xxtofl
  3357 ;; This function is called by:
  3358 ;;		_main
  3359 ;; This function uses a non-reentrant model
  3360 ;;
  3361                           
  3362                           
  3363                           ;psect for function _MLX90614_readObjectTempC
  3364  0080                     _MLX90614_readObjectTempC:
  3365                           
  3366                           ;MLX90614.c: 52:     return ((MLX90614_ReadReg(0x07)* 0.02) - 273.15);
  3367                           
  3368                           ;incstack = 0
  3369                           ; Regs used in _MLX90614_readObjectTempC: [wreg+status,2+status,0+pclath+cstack]
  3370  0080  30C3               	movlw	195
  3371  0081  2720  3180         	fcall	PL14	;call to abstracted procedure
  3372  0083  3007               	movlw	7
  3373  0084  2110  3180         	fcall	_MLX90614_ReadReg
  3374  0086  0871               	movf	?_MLX90614_ReadReg,w
  3375  0087  0020               	movlb	0	; select bank0
  3376  0088  00DB               	movwf	??_MLX90614_readObjectTempC
  3377  0089  0872               	movf	?_MLX90614_ReadReg+1,w
  3378  008A  00DC               	movwf	??_MLX90614_readObjectTempC+1
  3379  008B  01DD               	clrf	??_MLX90614_readObjectTempC+2
  3380  008C  01DE               	clrf	??_MLX90614_readObjectTempC+3
  3381  008D  085E               	movf	??_MLX90614_readObjectTempC+3,w
  3382  008E  00FC               	movwf	___xxtofl@val+3
  3383  008F  085D               	movf	??_MLX90614_readObjectTempC+2,w
  3384  0090  00FB               	movwf	___xxtofl@val+2
  3385  0091  085C               	movf	??_MLX90614_readObjectTempC+1,w
  3386  0092  00FA               	movwf	___xxtofl@val+1
  3387  0093  085B               	movf	??_MLX90614_readObjectTempC,w
  3388  0094  00F9               	movwf	___xxtofl@val
  3389  0095  3000               	movlw	0
  3390  0096  25CE  3180         	fcall	___xxtofl
  3391  0098  2788  3180         	fcall	PL34	;call to abstracted procedure
  3392  009A  21DB  3180         	fcall	___flmul
  3393  009C  2791               	fcall	PL36	;call to abstracted procedure
  3394  009D  3188  202C         	fcall	___fladd
  3395  009F  0846               	movf	?___fladd+3,w
  3396  00A0  00DA               	movwf	?_MLX90614_readObjectTempC+3
  3397  00A1  0845               	movf	?___fladd+2,w
  3398  00A2  00D9               	movwf	?_MLX90614_readObjectTempC+2
  3399  00A3  0844               	movf	?___fladd+1,w
  3400  00A4  00D8               	movwf	?_MLX90614_readObjectTempC+1
  3401  00A5  0843               	movf	?___fladd,w
  3402  00A6  00D7               	movwf	?_MLX90614_readObjectTempC
  3403  00A7  0008               	return
  3404  00A8                     __end_of_MLX90614_readObjectTempC:
  3405  00A8                     __pmaintext:	
  3406 ;;
  3407 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3408 ;;
  3409 ;; *************** function _main *****************
  3410 ;; Defined at:
  3411 ;;		line 26 in file "Main.c"
  3412 ;; Parameters:    Size  Location     Type
  3413 ;;		None
  3414 ;; Auto vars:     Size  Location     Type
  3415 ;;  buffer          8   12[BANK1 ] unsigned char [8]
  3416 ;;  temp            4   20[BANK1 ] float 
  3417 ;;  leerReg         2    0        unsigned short 
  3418 ;;  flag            1    0        _Bool 
  3419 ;; Return value:  Size  Location     Type
  3420 ;;                  1    wreg      void 
  3421 ;; Registers used:
  3422 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3423 ;; Tracked objects:
  3424 ;;		On entry : B1F/0
  3425 ;;		On exit  : 0/0
  3426 ;;		Unchanged: 0/0
  3427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3429 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  3430 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3431 ;;      Totals:         0       2      12       0       0       0       0       0       0       0       0       0       
      +0       0
  3432 ;;Total ram usage:       14 bytes
  3433 ;; Hardware stack levels required when called: 10
  3434 ;; This function calls:
  3435 ;;		_FLOAT_to_string
  3436 ;;		_MLX90614_readAmbientTempC
  3437 ;;		_MLX90614_readObjectTempC
  3438 ;;		_adc_init
  3439 ;;		_i2c_init
  3440 ;;		_port_init
  3441 ;;		_printf
  3442 ;;		_sensorPlaca
  3443 ;;		_serial_init
  3444 ;; This function is called by:
  3445 ;;		Startup code after reset
  3446 ;; This function uses a non-reentrant model
  3447 ;;
  3448                           
  3449                           
  3450                           ;psect for function _main
  3451  00A8                     _main:
  3452  00A8                     l3647:	
  3453                           ;incstack = 0
  3454                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3455                           
  3456                           
  3457                           ;Main.c: 29:     uint16_t leerReg;;Main.c: 30:     uint8_t buffer[8];;Main.c: 31:     po
      +                          rt_init();
  3458  00A8  26D8               	fcall	_port_init
  3459                           
  3460                           ;Main.c: 32:     serial_init(9600);
  3461  00A9  3000               	movlw	0
  3462  00AA  0020               	movlb	0	; select bank0
  3463  00AB  00A3               	movwf	serial_init@baudios+3
  3464  00AC  00A2               	movwf	serial_init@baudios+2
  3465  00AD  3025               	movlw	37
  3466  00AE  00A1               	movwf	serial_init@baudios+1
  3467  00AF  3080               	movlw	128
  3468  00B0  00A0               	movwf	serial_init@baudios
  3469  00B1  3197  277C  3180   	fcall	_serial_init
  3470                           
  3471                           ;Main.c: 33:     adc_init();
  3472  00B4  26A9  3180         	fcall	_adc_init
  3473                           
  3474                           ;Main.c: 34:     i2c_init();
  3475  00B6  26BE  3180         	fcall	_i2c_init
  3476  00B8                     l55:	
  3477                           ;Main.c: 50:     while(1){
  3478                           
  3479                           
  3480                           ;Main.c: 53:         temp = MLX90614_readAmbientTempC();
  3481  00B8  21B2  3180         	fcall	_MLX90614_readAmbientTempC
  3482  00BA  085A               	movf	?_MLX90614_readAmbientTempC+3,w
  3483  00BB  0021               	movlb	1	; select bank1
  3484  00BC  00E1               	movwf	(main@temp+3)^(0+128)
  3485  00BD  0020               	movlb	0	; select bank0
  3486  00BE  0859               	movf	?_MLX90614_readAmbientTempC+2,w
  3487  00BF  0021               	movlb	1	; select bank1
  3488  00C0  00E0               	movwf	(main@temp+2)^(0+128)
  3489  00C1  0020               	movlb	0	; select bank0
  3490  00C2  0858               	movf	?_MLX90614_readAmbientTempC+1,w
  3491  00C3  0021               	movlb	1	; select bank1
  3492  00C4  00DF               	movwf	(main@temp+1)^(0+128)
  3493  00C5  0020               	movlb	0	; select bank0
  3494  00C6  0857               	movf	?_MLX90614_readAmbientTempC,w
  3495                           
  3496                           ;Main.c: 54:         FLOAT_to_string(temp,buffer,2);
  3497  00C7  26F6  3180         	fcall	PL6	;call to abstracted procedure
  3498  00C9  230C  3180         	fcall	_FLOAT_to_string
  3499                           
  3500                           ;Main.c: 55:         printf("tempAmb: %s\n",buffer);
  3501  00CB  301D               	movlw	low (STR_1| (0+32768))
  3502  00CC  0021               	movlb	1	; select bank1
  3503  00CD  00CA               	movwf	printf@fmt^(0+128)
  3504  00CE  3098               	movlw	high (STR_1| (0+32768))
  3505  00CF  00CB               	movwf	(printf@fmt^(0+128)+1)
  3506  00D0  30D6               	movlw	(low (main@buffer| 0))& (0+255)
  3507  00D1  00CC               	movwf	(low ((?_printf| 0+2)))^(0+128)
  3508  00D2  2100  3180         	fcall	_printf
  3509                           
  3510                           ;Main.c: 59:         temp = MLX90614_readObjectTempC();
  3511  00D4  2080  3180         	fcall	_MLX90614_readObjectTempC
  3512  00D6  085A               	movf	?_MLX90614_readObjectTempC+3,w
  3513  00D7  0021               	movlb	1	; select bank1
  3514  00D8  00E1               	movwf	(main@temp+3)^(0+128)
  3515  00D9  0020               	movlb	0	; select bank0
  3516  00DA  0859               	movf	?_MLX90614_readObjectTempC+2,w
  3517  00DB  0021               	movlb	1	; select bank1
  3518  00DC  00E0               	movwf	(main@temp+2)^(0+128)
  3519  00DD  0020               	movlb	0	; select bank0
  3520  00DE  0858               	movf	?_MLX90614_readObjectTempC+1,w
  3521  00DF  0021               	movlb	1	; select bank1
  3522  00E0  00DF               	movwf	(main@temp+1)^(0+128)
  3523  00E1  0020               	movlb	0	; select bank0
  3524  00E2  0857               	movf	?_MLX90614_readObjectTempC,w
  3525                           
  3526                           ;Main.c: 67:         FLOAT_to_string(temp,buffer,2);
  3527  00E3  26F6  3180         	fcall	PL6	;call to abstracted procedure
  3528  00E5  230C  3180         	fcall	_FLOAT_to_string
  3529                           
  3530                           ;Main.c: 68:         printf("Tobj: %s\n",buffer);
  3531  00E7  302A               	movlw	low (STR_2| (0+32768))
  3532  00E8  0021               	movlb	1	; select bank1
  3533  00E9  00CA               	movwf	printf@fmt^(0+128)
  3534  00EA  3098               	movlw	high (STR_2| (0+32768))
  3535  00EB  00CB               	movwf	(printf@fmt^(0+128)+1)
  3536  00EC  30D6               	movlw	(low (main@buffer| 0))& (0+255)
  3537  00ED  00CC               	movwf	(low ((?_printf| 0+2)))^(0+128)
  3538  00EE  2100  3180         	fcall	_printf
  3539                           
  3540                           ;Main.c: 69:         sensorPlaca();
  3541  00F0  214B  3180         	fcall	_sensorPlaca
  3542                           
  3543                           ;Main.c: 71:         _delay((unsigned long)((500)*(32000000UL/4000.0)));
  3544  00F2  3015               	movlw	21
  3545  00F3  0020               	movlb	0	; select bank0
  3546  00F4  00EF               	movwf	??_main+1
  3547  00F5  304B               	movlw	75
  3548  00F6  00EE               	movwf	??_main
  3549  00F7  30BE               	movlw	190
  3550  00F8                     u4537:
  3551  00F8  0B89               	decfsz	9,f
  3552  00F9  28F8               	goto	u4537
  3553  00FA  0BEE               	decfsz	??_main,f
  3554  00FB  28F8               	goto	u4537
  3555  00FC  0BEF               	decfsz	??_main+1,f
  3556  00FD  28F8               	goto	u4537
  3557  00FE  0000               	nop
  3558  00FF  28B8               	goto	l55
  3559  0100                     __end_of_main:
  3560  0100                     __ptext4:	
  3561 ;; *************** function _printf *****************
  3562 ;; Defined at:
  3563 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  3564 ;; Parameters:    Size  Location     Type
  3565 ;;  fmt             2    0[BANK1 ] PTR const unsigned char 
  3566 ;;		 -> STR_5(6), STR_4(6), STR_3(29), STR_2(10), 
  3567 ;;		 -> STR_1(13), 
  3568 ;; Auto vars:     Size  Location     Type
  3569 ;;  ret             2    0        int 
  3570 ;;  ap              1   77[BANK0 ] PTR void [1]
  3571 ;;		 -> ?_printf(2), 
  3572 ;; Return value:  Size  Location     Type
  3573 ;;                  2    0[BANK1 ] int 
  3574 ;; Registers used:
  3575 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3576 ;; Tracked objects:
  3577 ;;		On entry : 1F/1
  3578 ;;		On exit  : 1F/0
  3579 ;;		Unchanged: 0/0
  3580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3581 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3582 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3584 ;;      Totals:         0       1       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3585 ;;Total ram usage:        7 bytes
  3586 ;; Hardware stack levels used: 1
  3587 ;; Hardware stack levels required when called: 8
  3588 ;; This function calls:
  3589 ;;		_vfprintf
  3590 ;; This function is called by:
  3591 ;;		_main
  3592 ;;		_sensorPlaca
  3593 ;; This function uses a non-reentrant model
  3594 ;;
  3595                           
  3596                           
  3597                           ;psect for function _printf
  3598  0100                     _printf:
  3599  0100                     l3037:	
  3600                           ;incstack = 0
  3601                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3602                           
  3603  0100  30CC               	movlw	(low ((?_printf| 0+2)))& (0+255)
  3604  0101  0020               	movlb	0	; select bank0
  3605  0102  00ED               	movwf	printf@ap
  3606  0103  0021               	movlb	1	; select bank1
  3607  0104  084B               	movf	(printf@fmt+1)^(0+128),w
  3608  0105  0020               	movlb	0	; select bank0
  3609  0106  00E7               	movwf	vfprintf@fmt+1
  3610  0107  0021               	movlb	1	; select bank1
  3611  0108  084A               	movf	printf@fmt^(0+128),w
  3612  0109  0020               	movlb	0	; select bank0
  3613  010A  00E6               	movwf	vfprintf@fmt
  3614  010B  306D               	movlw	(low (printf@ap| 0))& (0+255)
  3615  010C  00E8               	movwf	vfprintf@ap
  3616  010D  3000               	movlw	0
  3617  010E  3189  2976         	ljmp	_vfprintf
  3618  0110                     __end_of_printf:
  3619  0110                     __ptext29:	
  3620 ;; *************** function _MLX90614_ReadReg *****************
  3621 ;; Defined at:
  3622 ;;		line 32 in file "MLX90614.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;  reg             1    wreg     unsigned char 
  3625 ;; Auto vars:     Size  Location     Type
  3626 ;;  reg             1    6[COMMON] unsigned char 
  3627 ;;  valReg          2    7[COMMON] unsigned short 
  3628 ;;  pec             1    0        unsigned char 
  3629 ;; Return value:  Size  Location     Type
  3630 ;;                  2    1[COMMON] unsigned short 
  3631 ;; Registers used:
  3632 ;;		wreg, status,2, status,0, pclath, cstack
  3633 ;; Tracked objects:
  3634 ;;		On entry : 1F/0
  3635 ;;		On exit  : 1F/3
  3636 ;;		Unchanged: 0/0
  3637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3638 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3639 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3640 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3641 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3642 ;;Total ram usage:        8 bytes
  3643 ;; Hardware stack levels used: 1
  3644 ;; Hardware stack levels required when called: 2
  3645 ;; This function calls:
  3646 ;;		_i2c_read
  3647 ;;		_i2c_restart
  3648 ;;		_i2c_start
  3649 ;;		_i2c_stop
  3650 ;;		_i2c_write
  3651 ;; This function is called by:
  3652 ;;		_MLX90614_readObjectTempC
  3653 ;;		_MLX90614_readAmbientTempC
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656                           
  3657                           
  3658                           ;psect for function _MLX90614_ReadReg
  3659  0110                     _MLX90614_ReadReg:
  3660                           
  3661                           ;incstack = 0
  3662                           ; Regs used in _MLX90614_ReadReg: [wreg+status,2+status,0+pclath+cstack]
  3663                           ;MLX90614_ReadReg@reg stored from wreg
  3664  0110  00F6               	movwf	MLX90614_ReadReg@reg
  3665                           
  3666                           ;MLX90614.c: 33:     uint16_t valReg;;MLX90614.c: 34:     uint8_t pec;;MLX90614.c: 35:  
      +                             i2c_start();
  3667  0111  21A0  3180         	fcall	_i2c_start
  3668                           
  3669                           ;MLX90614.c: 36:     i2c_write(0x5A << 1);
  3670  0113  30B4               	movlw	180
  3671  0114  218F  3180         	fcall	_i2c_write
  3672                           
  3673                           ;MLX90614.c: 37:     i2c_write(reg);
  3674  0116  0876               	movf	MLX90614_ReadReg@reg,w
  3675  0117  218F  3180         	fcall	_i2c_write
  3676                           
  3677                           ;MLX90614.c: 38:     i2c_restart();
  3678  0119  219C  3180         	fcall	_i2c_restart
  3679                           
  3680                           ;MLX90614.c: 39:     i2c_write((0x5A << 1)|0x01);
  3681  011B  30B5               	movlw	181
  3682  011C  218F  3180         	fcall	_i2c_write
  3683                           
  3684                           ;MLX90614.c: 40:     valReg = i2c_read(1);
  3685  011E  3001               	movlw	1
  3686  011F  2139  3180         	fcall	_i2c_read
  3687  0121  00F7               	movwf	MLX90614_ReadReg@valReg
  3688  0122  3001               	movlw	1
  3689  0123  01F8               	clrf	MLX90614_ReadReg@valReg+1
  3690                           
  3691                           ;MLX90614.c: 41:     valReg = (i2c_read(1) << 8) + valReg;
  3692  0124  2139  3180         	fcall	_i2c_read
  3693  0126  00F3               	movwf	??_MLX90614_ReadReg
  3694  0127  01F4               	clrf	??_MLX90614_ReadReg+1
  3695  0128  00F4               	movwf	??_MLX90614_ReadReg+1
  3696  0129  01F3               	clrf	??_MLX90614_ReadReg
  3697  012A  0877               	movf	MLX90614_ReadReg@valReg,w
  3698  012B  0773               	addwf	??_MLX90614_ReadReg,w
  3699  012C  00F7               	movwf	MLX90614_ReadReg@valReg
  3700  012D  0878               	movf	MLX90614_ReadReg@valReg+1,w
  3701  012E  3D74               	addwfc	??_MLX90614_ReadReg+1,w
  3702  012F  00F8               	movwf	MLX90614_ReadReg@valReg+1
  3703                           
  3704                           ;MLX90614.c: 42:     pec = i2c_read(1);
  3705  0130  3001               	movlw	1
  3706  0131  2139  3180         	fcall	_i2c_read
  3707                           
  3708                           ;MLX90614.c: 43:     i2c_stop();
  3709  0133  21A5               	fcall	_i2c_stop
  3710                           
  3711                           ;MLX90614.c: 44:     return valReg;
  3712  0134  0878               	movf	MLX90614_ReadReg@valReg+1,w
  3713  0135  00F2               	movwf	?_MLX90614_ReadReg+1
  3714  0136  0877               	movf	MLX90614_ReadReg@valReg,w
  3715  0137  00F1               	movwf	?_MLX90614_ReadReg
  3716  0138  0008               	return
  3717  0139                     __end_of_MLX90614_ReadReg:
  3718  0139                     __ptext34:	
  3719 ;; *************** function _i2c_read *****************
  3720 ;; Defined at:
  3721 ;;		line 46 in file "I2C.c"
  3722 ;; Parameters:    Size  Location     Type
  3723 ;;  ack             1    wreg     _Bool 
  3724 ;; Auto vars:     Size  Location     Type
  3725 ;;  ack             1    0[COMMON] _Bool 
  3726 ;; Return value:  Size  Location     Type
  3727 ;;                  1    wreg      unsigned char 
  3728 ;; Registers used:
  3729 ;;		wreg, status,2, status,0, pclath, cstack
  3730 ;; Tracked objects:
  3731 ;;		On entry : 1F/3
  3732 ;;		On exit  : 1F/3
  3733 ;;		Unchanged: 0/0
  3734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3736 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3738 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3739 ;;Total ram usage:        1 bytes
  3740 ;; Hardware stack levels used: 1
  3741 ;; Hardware stack levels required when called: 1
  3742 ;; This function calls:
  3743 ;;		_i2c_ack
  3744 ;;		_i2c_nack
  3745 ;; This function is called by:
  3746 ;;		_sensorPlaca
  3747 ;;		_MLX90614_ReadReg
  3748 ;; This function uses a non-reentrant model
  3749 ;;
  3750                           
  3751                           
  3752                           ;psect for function _i2c_read
  3753  0139                     _i2c_read:
  3754                           
  3755                           ;incstack = 0
  3756                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  3757                           ;i2c_read@ack stored from wreg
  3758  0139  00F0               	movwf	i2c_read@ack
  3759                           
  3760                           ;I2C.c: 46: uint8_t i2c_read(_Bool ack);I2C.c: 47: {;I2C.c: 48:     PIR3bits.SSP1IF = 0;
  3761  013A  002E               	movlb	14	; select bank14
  3762  013B  100F               	bcf	15,0	;volatile
  3763                           
  3764                           ;I2C.c: 49:     SSP1CON2bits.RCEN = 1;
  3765  013C  0023               	movlb	3	; select bank3
  3766  013D  1591               	bsf	17,3	;volatile
  3767  013E                     l226:	
  3768                           ;I2C.c: 50:     while(PIR3bits.SSP1IF == 0);
  3769                           
  3770  013E  002E               	movlb	14	; select bank14
  3771  013F  1C0F               	btfss	15,0	;volatile
  3772  0140  293E               	goto	l226
  3773                           
  3774                           ;I2C.c: 51:     if(ack){
  3775  0141  0870               	movf	i2c_read@ack,w
  3776  0142  1903               	btfsc	3,2
  3777  0143  2947               	goto	l2823
  3778                           
  3779                           ;I2C.c: 52:         i2c_ack();
  3780  0144  21AA  3180         	fcall	_i2c_ack
  3781                           
  3782                           ;I2C.c: 53:     }else{
  3783  0146  2948               	goto	l2825
  3784  0147                     l2823:
  3785                           
  3786                           ;I2C.c: 54:         i2c_nack();
  3787  0147  26EE               	fcall	_i2c_nack
  3788  0148                     l2825:
  3789                           
  3790                           ;I2C.c: 56:     return SSP1BUF;
  3791  0148  0023               	movlb	3	; select bank3
  3792  0149  080C               	movf	12,w	;volatile
  3793  014A  0008               	return
  3794  014B                     __end_of_i2c_read:
  3795  014B                     __ptext3:	
  3796 ;; *************** function _sensorPlaca *****************
  3797 ;; Defined at:
  3798 ;;		line 83 in file "Main.c"
  3799 ;; Parameters:    Size  Location     Type
  3800 ;;		None
  3801 ;; Auto vars:     Size  Location     Type
  3802 ;;		None
  3803 ;; Return value:  Size  Location     Type
  3804 ;;                  1    wreg      void 
  3805 ;; Registers used:
  3806 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3807 ;; Tracked objects:
  3808 ;;		On entry : 1F/0
  3809 ;;		On exit  : 1F/0
  3810 ;;		Unchanged: 0/0
  3811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3816 ;;Total ram usage:        0 bytes
  3817 ;; Hardware stack levels used: 1
  3818 ;; Hardware stack levels required when called: 9
  3819 ;; This function calls:
  3820 ;;		___wmul
  3821 ;;		_i2c_read
  3822 ;;		_i2c_restart
  3823 ;;		_i2c_start
  3824 ;;		_i2c_stop
  3825 ;;		_i2c_write
  3826 ;;		_printf
  3827 ;; This function is called by:
  3828 ;;		_main
  3829 ;; This function uses a non-reentrant model
  3830 ;;
  3831                           
  3832                           
  3833                           ;psect for function _sensorPlaca
  3834  014B                     _sensorPlaca:
  3835                           
  3836                           ;Main.c: 84:     i2c_start();
  3837                           
  3838                           ;incstack = 0
  3839                           ; Regs used in _sensorPlaca: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3840  014B  21A0  3180         	fcall	_i2c_start
  3841                           
  3842                           ;Main.c: 85:         i2c_write(0b01110000);
  3843  014D  3070               	movlw	112
  3844  014E  218F  3180         	fcall	_i2c_write
  3845                           
  3846                           ;Main.c: 86:         i2c_write(0);
  3847  0150  3000               	movlw	0
  3848  0151  218F  3180         	fcall	_i2c_write
  3849                           
  3850                           ;Main.c: 87:         i2c_restart();
  3851  0153  219C  3180         	fcall	_i2c_restart
  3852                           
  3853                           ;Main.c: 88:         i2c_write(0b01110001);
  3854  0155  3071               	movlw	113
  3855  0156  218F  3180         	fcall	_i2c_write
  3856                           
  3857                           ;Main.c: 89:         high_byte = (int8_t)i2c_read(0);
  3858  0158  3000               	movlw	0
  3859  0159  2139  3180         	fcall	_i2c_read
  3860  015B  0021               	movlb	1	; select bank1
  3861  015C  00A9               	movwf	_high_byte^(0+128)
  3862                           
  3863                           ;Main.c: 90:         i2c_stop();
  3864  015D  21A5  3180         	fcall	_i2c_stop
  3865                           
  3866                           ;Main.c: 92:         i2c_start();
  3867  015F  21A0  3180         	fcall	_i2c_start
  3868                           
  3869                           ;Main.c: 93:         i2c_write(0b01110000);
  3870  0161  3070               	movlw	112
  3871  0162  218F  3180         	fcall	_i2c_write
  3872                           
  3873                           ;Main.c: 94:         i2c_write(2);
  3874  0164  3002               	movlw	2
  3875  0165  218F  3180         	fcall	_i2c_write
  3876                           
  3877                           ;Main.c: 95:         i2c_restart();
  3878  0167  219C  3180         	fcall	_i2c_restart
  3879                           
  3880                           ;Main.c: 96:         i2c_write(0b01110001);
  3881  0169  3071               	movlw	113
  3882  016A  218F  3180         	fcall	_i2c_write
  3883                           
  3884                           ;Main.c: 97:         low_byte = i2c_read(0);
  3885  016C  3000               	movlw	0
  3886  016D  2139  3180         	fcall	_i2c_read
  3887  016F  0021               	movlb	1	; select bank1
  3888  0170  00A8               	movwf	_low_byte^(0+128)
  3889                           
  3890                           ;Main.c: 98:         i2c_stop();
  3891  0171  21A5  3180         	fcall	_i2c_stop
  3892                           
  3893                           ;Main.c: 100:         low_byte = low_byte >> 6;
  3894  0173  0021               	movlb	1	; select bank1
  3895  0174  3003               	movlw	3
  3896  0175  0EA8               	swapf	_low_byte^(0+128),f
  3897  0176  0CA8               	rrf	_low_byte^(0+128),f
  3898  0177  0CA8               	rrf	_low_byte^(0+128),f
  3899  0178  05A8               	andwf	_low_byte^(0+128),f
  3900                           
  3901                           ;Main.c: 101:         printf("La temperatura es: %d.%d*C\n\n", high_byte, low_byte *25 )
      +                          ;
  3902  0179  3000               	movlw	low (STR_3| (0+32768))
  3903  017A  00CA               	movwf	printf@fmt^(0+128)
  3904  017B  3098               	movlw	high (STR_3| (0+32768))
  3905  017C  00CB               	movwf	(printf@fmt^(0+128)+1)
  3906  017D  0829               	movf	_high_byte^(0+128),w
  3907  017E  00CC               	movwf	(?_printf^(0+128)+2)
  3908  017F  01CD               	clrf	((?_printf+1)^(0+128)+2)
  3909  0180  1BCC               	btfsc	(?_printf^(0+128)+2),7
  3910  0181  03CD               	decf	((?_printf+1)^(0+128)+2),f
  3911  0182  0828               	movf	_low_byte^(0+128),w
  3912  0183  00F0               	movwf	___wmul@multiplier
  3913  0184  3019               	movlw	25
  3914  0185  01F1               	clrf	___wmul@multiplier+1
  3915  0186  00F2               	movwf	___wmul@multiplicand
  3916  0187  01F3               	clrf	___wmul@multiplicand+1
  3917  0188  27EB  3180         	fcall	___wmul
  3918  018A  0871               	movf	?___wmul+1,w
  3919  018B  00CF               	movwf	((?_printf+1)^(0+128)+4)
  3920  018C  0870               	movf	?___wmul,w
  3921  018D  00CE               	movwf	(?_printf^(0+128)+4)
  3922  018E  2900               	ljmp	l3037
  3923  018F                     __end_of_sensorPlaca:
  3924  018F                     __ptext30:	
  3925 ;; *************** function _i2c_write *****************
  3926 ;; Defined at:
  3927 ;;		line 75 in file "I2C.c"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;  I2C_data        1    wreg     unsigned char 
  3930 ;; Auto vars:     Size  Location     Type
  3931 ;;  I2C_data        1    0[COMMON] unsigned char 
  3932 ;; Return value:  Size  Location     Type
  3933 ;;                  1    wreg      _Bool 
  3934 ;; Registers used:
  3935 ;;		wreg
  3936 ;; Tracked objects:
  3937 ;;		On entry : 1F/3
  3938 ;;		On exit  : 1F/3
  3939 ;;		Unchanged: 0/0
  3940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3942 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3944 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3945 ;;Total ram usage:        1 bytes
  3946 ;; Hardware stack levels used: 1
  3947 ;; This function calls:
  3948 ;;		Nothing
  3949 ;; This function is called by:
  3950 ;;		_sensorPlaca
  3951 ;;		_MLX90614_ReadReg
  3952 ;; This function uses a non-reentrant model
  3953 ;;
  3954                           
  3955                           
  3956                           ;psect for function _i2c_write
  3957  018F                     _i2c_write:
  3958                           
  3959                           ;incstack = 0
  3960                           ; Regs used in _i2c_write: [wreg]
  3961                           ;i2c_write@I2C_data stored from wreg
  3962  018F  00F0               	movwf	i2c_write@I2C_data
  3963                           
  3964                           ;I2C.c: 75: _Bool i2c_write(uint8_t I2C_data);I2C.c: 76: {;I2C.c: 77:     PIR3bits.SSP1I
      +                          F = 0;
  3965  0190  002E               	movlb	14	; select bank14
  3966  0191  100F               	bcf	15,0	;volatile
  3967                           
  3968                           ;I2C.c: 78:     SSP1BUF = I2C_data;
  3969  0192  0870               	movf	i2c_write@I2C_data,w
  3970  0193  0023               	movlb	3	; select bank3
  3971  0194  008C               	movwf	12	;volatile
  3972  0195                     l246:	
  3973                           ;I2C.c: 79:     while(PIR3bits.SSP1IF == 0);
  3974                           
  3975  0195  002E               	movlb	14	; select bank14
  3976  0196  1C0F               	btfss	15,0	;volatile
  3977  0197  2995               	goto	l246
  3978                           
  3979                           ;I2C.c: 80:     if(SSP1CON2bits.ACKSTAT==0)
  3980  0198  0023               	movlb	3	; select bank3
  3981  0199  1F11               	btfss	17,6	;volatile
  3982                           
  3983                           ;I2C.c: 81:         return 1;
  3984  019A  3401               	retlw	1
  3985                           
  3986                           ;I2C.c: 83:         return 0;
  3987  019B  3400               	retlw	0
  3988  019C                     __end_of_i2c_write:
  3989  019C                     __ptext33:	
  3990 ;; *************** function _i2c_restart *****************
  3991 ;; Defined at:
  3992 ;;		line 27 in file "I2C.c"
  3993 ;; Parameters:    Size  Location     Type
  3994 ;;		None
  3995 ;; Auto vars:     Size  Location     Type
  3996 ;;		None
  3997 ;; Return value:  Size  Location     Type
  3998 ;;                  1    wreg      void 
  3999 ;; Registers used:
  4000 ;;		None
  4001 ;; Tracked objects:
  4002 ;;		On entry : 1F/3
  4003 ;;		On exit  : 1F/3
  4004 ;;		Unchanged: 0/0
  4005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4010 ;;Total ram usage:        0 bytes
  4011 ;; Hardware stack levels used: 1
  4012 ;; This function calls:
  4013 ;;		Nothing
  4014 ;; This function is called by:
  4015 ;;		_sensorPlaca
  4016 ;;		_MLX90614_ReadReg
  4017 ;; This function uses a non-reentrant model
  4018 ;;
  4019                           
  4020                           
  4021                           ;psect for function _i2c_restart
  4022  019C                     _i2c_restart:
  4023                           
  4024                           ;I2C.c: 29:     SSP1CON2bits.RSEN = 1;
  4025                           
  4026                           ;incstack = 0
  4027                           ; Regs used in _i2c_restart: []
  4028  019C  1491               	bsf	17,1	;volatile
  4029  019D                     l214:	
  4030                           ;I2C.c: 30:     while(SSP1CON2bits.RSEN == 1);
  4031                           
  4032  019D  1C91               	btfss	17,1	;volatile
  4033  019E  0008               	return
  4034  019F  299D               	goto	l214
  4035  01A0                     __end_of_i2c_restart:
  4036  01A0                     __ptext32:	
  4037 ;; *************** function _i2c_start *****************
  4038 ;; Defined at:
  4039 ;;		line 21 in file "I2C.c"
  4040 ;; Parameters:    Size  Location     Type
  4041 ;;		None
  4042 ;; Auto vars:     Size  Location     Type
  4043 ;;		None
  4044 ;; Return value:  Size  Location     Type
  4045 ;;                  1    wreg      void 
  4046 ;; Registers used:
  4047 ;;		None
  4048 ;; Tracked objects:
  4049 ;;		On entry : 1C/0
  4050 ;;		On exit  : 1F/3
  4051 ;;		Unchanged: 0/0
  4052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4057 ;;Total ram usage:        0 bytes
  4058 ;; Hardware stack levels used: 1
  4059 ;; This function calls:
  4060 ;;		Nothing
  4061 ;; This function is called by:
  4062 ;;		_sensorPlaca
  4063 ;;		_MLX90614_ReadReg
  4064 ;; This function uses a non-reentrant model
  4065 ;;
  4066                           
  4067                           
  4068                           ;psect for function _i2c_start
  4069  01A0                     _i2c_start:
  4070                           
  4071                           ;I2C.c: 23:     SSP1CON2bits.SEN = 1;
  4072                           
  4073                           ;incstack = 0
  4074                           ; Regs used in _i2c_start: []
  4075  01A0  0023               	movlb	3	; select bank3
  4076  01A1  1411               	bsf	17,0	;volatile
  4077  01A2                     l208:	
  4078                           ;I2C.c: 24:     while(SSP1CON2bits.SEN == 1);
  4079                           
  4080  01A2  1C11               	btfss	17,0	;volatile
  4081  01A3  0008               	return
  4082  01A4  29A2               	goto	l208
  4083  01A5                     __end_of_i2c_start:
  4084  01A5                     __ptext31:	
  4085 ;; *************** function _i2c_stop *****************
  4086 ;; Defined at:
  4087 ;;		line 33 in file "I2C.c"
  4088 ;; Parameters:    Size  Location     Type
  4089 ;;		None
  4090 ;; Auto vars:     Size  Location     Type
  4091 ;;		None
  4092 ;; Return value:  Size  Location     Type
  4093 ;;                  1    wreg      void 
  4094 ;; Registers used:
  4095 ;;		None
  4096 ;; Tracked objects:
  4097 ;;		On entry : 1D/1
  4098 ;;		On exit  : 1F/3
  4099 ;;		Unchanged: 0/0
  4100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4105 ;;Total ram usage:        0 bytes
  4106 ;; Hardware stack levels used: 1
  4107 ;; This function calls:
  4108 ;;		Nothing
  4109 ;; This function is called by:
  4110 ;;		_sensorPlaca
  4111 ;;		_MLX90614_ReadReg
  4112 ;; This function uses a non-reentrant model
  4113 ;;
  4114                           
  4115                           
  4116                           ;psect for function _i2c_stop
  4117  01A5                     _i2c_stop:
  4118                           
  4119                           ;I2C.c: 35:     SSP1CON2bits.PEN = 1;
  4120                           
  4121                           ;incstack = 0
  4122                           ; Regs used in _i2c_stop: []
  4123  01A5  0023               	movlb	3	; select bank3
  4124  01A6  1511               	bsf	17,2	;volatile
  4125  01A7                     l220:	
  4126                           ;I2C.c: 36:     while(SSP1CON2bits.PEN == 1);
  4127                           
  4128  01A7  1D11               	btfss	17,2	;volatile
  4129  01A8  0008               	return
  4130  01A9  29A7               	goto	l220
  4131  01AA                     __end_of_i2c_stop:
  4132  01AA                     __ptext36:	
  4133 ;; *************** function _i2c_ack *****************
  4134 ;; Defined at:
  4135 ;;		line 59 in file "I2C.c"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;		None
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;		None
  4140 ;; Return value:  Size  Location     Type
  4141 ;;                  1    wreg      void 
  4142 ;; Registers used:
  4143 ;;		None
  4144 ;; Tracked objects:
  4145 ;;		On entry : 1F/E
  4146 ;;		On exit  : 1F/E
  4147 ;;		Unchanged: 0/0
  4148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4153 ;;Total ram usage:        0 bytes
  4154 ;; Hardware stack levels used: 1
  4155 ;; This function calls:
  4156 ;;		Nothing
  4157 ;; This function is called by:
  4158 ;;		_i2c_read
  4159 ;; This function uses a non-reentrant model
  4160 ;;
  4161                           
  4162                           
  4163                           ;psect for function _i2c_ack
  4164  01AA                     _i2c_ack:
  4165                           
  4166                           ;I2C.c: 61:     PIR3bits.SSP1IF = 0;
  4167                           
  4168                           ;incstack = 0
  4169                           ; Regs used in _i2c_ack: []
  4170  01AA  100F               	bcf	15,0	;volatile
  4171                           
  4172                           ;I2C.c: 62:     SSP1CON2bits.ACKDT = 0;
  4173  01AB  0023               	movlb	3	; select bank3
  4174  01AC  1291               	bcf	17,5	;volatile
  4175                           
  4176                           ;I2C.c: 63:     SSP1CON2bits.ACKEN = 1;
  4177  01AD  1611               	bsf	17,4	;volatile
  4178  01AE                     l234:	
  4179                           ;I2C.c: 64:     while(PIR3bits.SSP1IF == 0);
  4180                           
  4181  01AE  002E               	movlb	14	; select bank14
  4182  01AF  180F               	btfsc	15,0	;volatile
  4183  01B0  0008               	return
  4184  01B1  29AE               	goto	l234
  4185  01B2                     __end_of_i2c_ack:
  4186  01B2                     __ptext28:	
  4187 ;; *************** function _MLX90614_readAmbientTempC *****************
  4188 ;; Defined at:
  4189 ;;		line 54 in file "MLX90614.c"
  4190 ;; Parameters:    Size  Location     Type
  4191 ;;		None
  4192 ;; Auto vars:     Size  Location     Type
  4193 ;;		None
  4194 ;; Return value:  Size  Location     Type
  4195 ;;                  4   55[BANK0 ] float 
  4196 ;; Registers used:
  4197 ;;		wreg, status,2, status,0, pclath, cstack
  4198 ;; Tracked objects:
  4199 ;;		On entry : 0/3
  4200 ;;		On exit  : 1F/0
  4201 ;;		Unchanged: 0/0
  4202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4203 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4205 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4206 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4207 ;;Total ram usage:        8 bytes
  4208 ;; Hardware stack levels used: 1
  4209 ;; Hardware stack levels required when called: 3
  4210 ;; This function calls:
  4211 ;;		_MLX90614_ReadReg
  4212 ;;		___fladd
  4213 ;;		___flmul
  4214 ;;		___xxtofl
  4215 ;; This function is called by:
  4216 ;;		_main
  4217 ;; This function uses a non-reentrant model
  4218 ;;
  4219                           
  4220                           
  4221                           ;psect for function _MLX90614_readAmbientTempC
  4222  01B2                     _MLX90614_readAmbientTempC:
  4223                           
  4224                           ;MLX90614.c: 55:     return ((MLX90614_ReadReg(0x06)* 0.02) - 273.15);
  4225                           
  4226                           ;incstack = 0
  4227                           ; Regs used in _MLX90614_readAmbientTempC: [wreg+status,2+status,0+pclath+cstack]
  4228  01B2  30C3               	movlw	195
  4229  01B3  0020               	movlb	0	; select bank0
  4230  01B4  2720  3180         	fcall	PL14	;call to abstracted procedure
  4231  01B6  3006               	movlw	6
  4232  01B7  2110  3180         	fcall	_MLX90614_ReadReg
  4233  01B9  0871               	movf	?_MLX90614_ReadReg,w
  4234  01BA  0020               	movlb	0	; select bank0
  4235  01BB  00DB               	movwf	??_MLX90614_readAmbientTempC
  4236  01BC  0872               	movf	?_MLX90614_ReadReg+1,w
  4237  01BD  00DC               	movwf	??_MLX90614_readAmbientTempC+1
  4238  01BE  01DD               	clrf	??_MLX90614_readAmbientTempC+2
  4239  01BF  01DE               	clrf	??_MLX90614_readAmbientTempC+3
  4240  01C0  085E               	movf	??_MLX90614_readAmbientTempC+3,w
  4241  01C1  00FC               	movwf	___xxtofl@val+3
  4242  01C2  085D               	movf	??_MLX90614_readAmbientTempC+2,w
  4243  01C3  00FB               	movwf	___xxtofl@val+2
  4244  01C4  085C               	movf	??_MLX90614_readAmbientTempC+1,w
  4245  01C5  00FA               	movwf	___xxtofl@val+1
  4246  01C6  085B               	movf	??_MLX90614_readAmbientTempC,w
  4247  01C7  00F9               	movwf	___xxtofl@val
  4248  01C8  3000               	movlw	0
  4249  01C9  25CE  3180         	fcall	___xxtofl
  4250  01CB  2788  3180         	fcall	PL34	;call to abstracted procedure
  4251  01CD  21DB  3180         	fcall	___flmul
  4252  01CF  2791               	fcall	PL36	;call to abstracted procedure
  4253  01D0  3188  202C         	fcall	___fladd
  4254  01D2  0846               	movf	?___fladd+3,w
  4255  01D3  00DA               	movwf	?_MLX90614_readAmbientTempC+3
  4256  01D4  0845               	movf	?___fladd+2,w
  4257  01D5  00D9               	movwf	?_MLX90614_readAmbientTempC+2
  4258  01D6  0844               	movf	?___fladd+1,w
  4259  01D7  00D8               	movwf	?_MLX90614_readAmbientTempC+1
  4260  01D8  0843               	movf	?___fladd,w
  4261  01D9  00D7               	movwf	?_MLX90614_readAmbientTempC
  4262  01DA  0008               	return
  4263  01DB                     __end_of_MLX90614_readAmbientTempC:
  4264  01DB                     __ptext43:	
  4265 ;; *************** function ___flmul *****************
  4266 ;; Defined at:
  4267 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  4268 ;; Parameters:    Size  Location     Type
  4269 ;;  b               4   10[BANK0 ] unsigned char 
  4270 ;;  a               4   14[BANK0 ] unsigned char 
  4271 ;; Auto vars:     Size  Location     Type
  4272 ;;  prod            4   29[BANK0 ] struct .
  4273 ;;  grs             4   24[BANK0 ] unsigned long 
  4274 ;;  temp            2   33[BANK0 ] struct .
  4275 ;;  bexp            1   28[BANK0 ] unsigned char 
  4276 ;;  aexp            1   23[BANK0 ] unsigned char 
  4277 ;;  sign            1   22[BANK0 ] unsigned char 
  4278 ;; Return value:  Size  Location     Type
  4279 ;;                  4   10[BANK0 ] unsigned char 
  4280 ;; Registers used:
  4281 ;;		wreg, status,2, status,0, pclath, cstack
  4282 ;; Tracked objects:
  4283 ;;		On entry : 1F/0
  4284 ;;		On exit  : 1F/0
  4285 ;;		Unchanged: 0/0
  4286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4287 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4288 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4289 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4290 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4291 ;;Total ram usage:       25 bytes
  4292 ;; Hardware stack levels used: 1
  4293 ;; Hardware stack levels required when called: 1
  4294 ;; This function calls:
  4295 ;;		__Umul8_16
  4296 ;; This function is called by:
  4297 ;;		_FLOAT_to_string
  4298 ;;		_MLX90614_readObjectTempC
  4299 ;;		_MLX90614_readAmbientTempC
  4300 ;; This function uses a non-reentrant model
  4301 ;;
  4302                           
  4303                           
  4304                           ;psect for function ___flmul
  4305  01DB                     ___flmul:
  4306                           
  4307                           ;incstack = 0
  4308                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  4309  01DB  082D               	movf	___flmul@b+3,w
  4310  01DC  00B6               	movwf	___flmul@sign
  4311  01DD  3080               	movlw	128
  4312  01DE  05B6               	andwf	___flmul@sign,f
  4313  01DF  352D               	lslf	___flmul@b+3,w
  4314  01E0  00BC               	movwf	___flmul@bexp
  4315  01E1  1BAC               	btfsc	___flmul@b+2,7
  4316  01E2  143C               	bsf	___flmul@bexp,0
  4317  01E3  083C               	movf	___flmul@bexp,w
  4318  01E4  1903               	btfsc	3,2
  4319  01E5  29EC               	goto	l840
  4320  01E6  0F3C               	incfsz	___flmul@bexp,w
  4321  01E7  29EA               	goto	l841
  4322  01E8  27DC  3180         	fcall	PL74	;call to abstracted procedure
  4323  01EA                     l841:
  4324  01EA  17AC               	bsf	___flmul@b+2,7
  4325  01EB  29EE               	goto	l3325
  4326  01EC                     l840:
  4327  01EC  27DC  3180         	fcall	PL74	;call to abstracted procedure
  4328  01EE                     l3325:
  4329  01EE  0831               	movf	___flmul@a+3,w
  4330  01EF  3980               	andlw	128
  4331  01F0  06B6               	xorwf	___flmul@sign,f
  4332  01F1  3531               	lslf	___flmul@a+3,w
  4333  01F2  00B7               	movwf	___flmul@aexp
  4334  01F3  1BB0               	btfsc	___flmul@a+2,7
  4335  01F4  1437               	bsf	___flmul@aexp,0
  4336  01F5  0837               	movf	___flmul@aexp,w
  4337  01F6  1903               	btfsc	3,2
  4338  01F7  29FE               	goto	l844
  4339  01F8  0F37               	incfsz	___flmul@aexp,w
  4340  01F9  29FC               	goto	l845
  4341  01FA  27D7  3180         	fcall	PL72	;call to abstracted procedure
  4342  01FC                     l845:
  4343  01FC  17B0               	bsf	___flmul@a+2,7
  4344  01FD  2A00               	goto	l3337
  4345  01FE                     l844:
  4346  01FE  27D7  3180         	fcall	PL72	;call to abstracted procedure
  4347  0200                     l3337:
  4348  0200  0837               	movf	___flmul@aexp,w
  4349  0201  1D03               	btfss	3,2
  4350  0202  083C               	movf	___flmul@bexp,w
  4351  0203  1D03               	btfss	3,2
  4352  0204  2A0A               	goto	l3341
  4353  0205  01AA               	clrf	?___flmul
  4354  0206  01AB               	clrf	?___flmul+1
  4355  0207  01AC               	clrf	?___flmul+2
  4356  0208  01AD               	clrf	?___flmul+3
  4357  0209  0008               	return
  4358  020A                     l3341:
  4359  020A  082A               	movf	___flmul@b,w
  4360  020B  00F0               	movwf	__Umul8_16@multiplicand
  4361  020C  0830               	movf	___flmul@a+2,w
  4362  020D  22F5  3180         	fcall	__Umul8_16
  4363  020F  0871               	movf	?__Umul8_16+1,w
  4364  0210  00C2               	movwf	___flmul@temp+1
  4365  0211  0870               	movf	?__Umul8_16,w
  4366  0212  00C1               	movwf	___flmul@temp
  4367  0213  00B8               	movwf	___flmul@grs
  4368  0214  01B9               	clrf	___flmul@grs+1
  4369  0215  01BA               	clrf	___flmul@grs+2
  4370  0216  01BB               	clrf	___flmul@grs+3
  4371  0217  0842               	movf	___flmul@temp+1,w
  4372  0218  00BD               	movwf	___flmul@prod
  4373  0219  01BE               	clrf	___flmul@prod+1
  4374  021A  01BF               	clrf	___flmul@prod+2
  4375  021B  01C0               	clrf	___flmul@prod+3
  4376  021C  082B               	movf	___flmul@b+1,w
  4377  021D  00F0               	movwf	__Umul8_16@multiplicand
  4378  021E  082F               	movf	___flmul@a+1,w
  4379  021F  22F5  3180         	fcall	__Umul8_16
  4380  0221  0871               	movf	?__Umul8_16+1,w
  4381  0222  2740  3180         	fcall	PL18	;call to abstracted procedure
  4382  0224  07BD               	addwf	___flmul@prod,f
  4383  0225  3001               	movlw	1
  4384  0226  1803               	skipnc
  4385  0227  07BE               	addwf	___flmul@prod+1,f
  4386  0228  1803               	skipnc
  4387  0229  07BF               	addwf	___flmul@prod+2,f
  4388  022A  1803               	skipnc
  4389  022B  07C0               	addwf	___flmul@prod+3,f
  4390  022C  082C               	movf	___flmul@b+2,w
  4391  022D  00F0               	movwf	__Umul8_16@multiplicand
  4392  022E  082E               	movf	___flmul@a,w
  4393  022F  22F5  3180         	fcall	__Umul8_16
  4394  0231  0871               	movf	?__Umul8_16+1,w
  4395  0232  2740  3180         	fcall	PL18	;call to abstracted procedure
  4396  0234  2730  3180         	fcall	PL16	;call to abstracted procedure
  4397  0236  082B               	movf	___flmul@b+1,w
  4398  0237  00F0               	movwf	__Umul8_16@multiplicand
  4399  0238  082E               	movf	___flmul@a,w
  4400  0239  22F5  3180         	fcall	__Umul8_16
  4401  023B  2715  3180         	fcall	PL10	;call to abstracted procedure
  4402  023D  082A               	movf	___flmul@b,w
  4403  023E  00F0               	movwf	__Umul8_16@multiplicand
  4404  023F  082F               	movf	___flmul@a+1,w
  4405  0240  22F5  3180         	fcall	__Umul8_16
  4406  0242  2715  3180         	fcall	PL10	;call to abstracted procedure
  4407  0244  083A               	movf	___flmul@grs+2,w
  4408  0245  00BB               	movwf	___flmul@grs+3
  4409  0246  0839               	movf	___flmul@grs+1,w
  4410  0247  00BA               	movwf	___flmul@grs+2
  4411  0248  0838               	movf	___flmul@grs,w
  4412  0249  00B9               	movwf	___flmul@grs+1
  4413  024A  01B8               	clrf	___flmul@grs
  4414  024B  082A               	movf	___flmul@b,w
  4415  024C  00F0               	movwf	__Umul8_16@multiplicand
  4416  024D  082E               	movf	___flmul@a,w
  4417  024E  22F5  3180         	fcall	__Umul8_16
  4418  0250  2715  3180         	fcall	PL10	;call to abstracted procedure
  4419  0252  082B               	movf	___flmul@b+1,w
  4420  0253  00F0               	movwf	__Umul8_16@multiplicand
  4421  0254  0830               	movf	___flmul@a+2,w
  4422  0255  22F5  3180         	fcall	__Umul8_16
  4423  0257  275C  3180         	fcall	PL22	;call to abstracted procedure
  4424  0259  082F               	movf	___flmul@a+1,w
  4425  025A  22F5  3180         	fcall	__Umul8_16
  4426  025C  275C  3180         	fcall	PL22	;call to abstracted procedure
  4427  025E  0830               	movf	___flmul@a+2,w
  4428  025F  22F5  3180         	fcall	__Umul8_16
  4429  0261  0871               	movf	?__Umul8_16+1,w
  4430  0262  00C2               	movwf	___flmul@temp+1
  4431  0263  0870               	movf	?__Umul8_16,w
  4432  0264  00C1               	movwf	___flmul@temp
  4433  0265  00B2               	movwf	??___flmul
  4434  0266  0842               	movf	___flmul@temp+1,w
  4435  0267  00B3               	movwf	??___flmul+1
  4436  0268  01B4               	clrf	??___flmul+2
  4437  0269  01B5               	clrf	??___flmul+3
  4438  026A  0834               	movf	??___flmul+2,w
  4439  026B  00B5               	movwf	??___flmul+3
  4440  026C  0833               	movf	??___flmul+1,w
  4441  026D  00B4               	movwf	??___flmul+2
  4442  026E  0832               	movf	??___flmul,w
  4443  026F  00B3               	movwf	??___flmul+1
  4444  0270  01B2               	clrf	??___flmul
  4445  0271  0832               	movf	??___flmul,w
  4446  0272  07BD               	addwf	___flmul@prod,f
  4447  0273  0833               	movf	??___flmul+1,w
  4448  0274  3DBE               	addwfc	___flmul@prod+1,f
  4449  0275  0834               	movf	??___flmul+2,w
  4450  0276  3DBF               	addwfc	___flmul@prod+2,f
  4451  0277  0835               	movf	??___flmul+3,w
  4452  0278  3DC0               	addwfc	___flmul@prod+3,f
  4453  0279  083B               	movf	___flmul@grs+3,w
  4454  027A  2730  3180         	fcall	PL16	;call to abstracted procedure
  4455  027C  083C               	movf	___flmul@bexp,w
  4456  027D  00C1               	movwf	___flmul@temp
  4457  027E  01C2               	clrf	___flmul@temp+1
  4458  027F  0837               	movf	___flmul@aexp,w
  4459  0280  07C1               	addwf	___flmul@temp,f
  4460  0281  1803               	skipnc
  4461  0282  0AC2               	incf	___flmul@temp+1,f
  4462  0283  3082               	movlw	-126
  4463  0284                     L8:
  4464  0284  07C1               	addwf	___flmul@temp,f
  4465  0285  1C03               	skipc
  4466  0286  03C2               	decf	___flmul@temp+1,f
  4467  0287  1BBF               	btfsc	___flmul@prod+2,7
  4468  0288  2A95               	goto	l3389
  4469  0289  35BD               	lslf	___flmul@prod,f
  4470  028A  0DBE               	rlf	___flmul@prod+1,f
  4471  028B  0DBF               	rlf	___flmul@prod+2,f
  4472  028C  0DC0               	rlf	___flmul@prod+3,f
  4473  028D  1BBB               	btfsc	___flmul@grs+3,7
  4474  028E  143D               	bsf	___flmul@prod,0
  4475  028F  30FF               	movlw	-1
  4476  0290  35B8               	lslf	___flmul@grs,f
  4477  0291  0DB9               	rlf	___flmul@grs+1,f
  4478  0292  0DBA               	rlf	___flmul@grs+2,f
  4479  0293  0DBB               	rlf	___flmul@grs+3,f
  4480  0294  2A84               	goto	L8
  4481  0295                     l3389:
  4482  0295  01B7               	clrf	___flmul@aexp
  4483  0296  1FBB               	btfss	___flmul@grs+3,7
  4484  0297  2AAA               	goto	l3399
  4485  0298  0838               	movf	___flmul@grs,w
  4486  0299  00B2               	movwf	??___flmul
  4487  029A  0839               	movf	___flmul@grs+1,w
  4488  029B  00B3               	movwf	??___flmul+1
  4489  029C  083A               	movf	___flmul@grs+2,w
  4490  029D  00B4               	movwf	??___flmul+2
  4491  029E  307F               	movlw	127
  4492  029F  053B               	andwf	___flmul@grs+3,w
  4493  02A0  00B5               	movwf	??___flmul+3
  4494  02A1  0434               	iorwf	??___flmul+2,w
  4495  02A2  0433               	iorwf	??___flmul+1,w
  4496  02A3  0432               	iorwf	??___flmul,w
  4497  02A4  1903               	skipnz
  4498  02A5  183D               	btfsc	___flmul@prod,0
  4499  02A6  2AA8               	goto	l3395
  4500  02A7  2AAA               	goto	l3399
  4501  02A8                     l3395:
  4502  02A8  01B7               	clrf	___flmul@aexp
  4503  02A9  0AB7               	incf	___flmul@aexp,f
  4504  02AA                     l3399:
  4505  02AA  0837               	movf	___flmul@aexp,w
  4506  02AB  1903               	btfsc	3,2
  4507  02AC  2ABC               	goto	l3409
  4508  02AD  3001               	movlw	1
  4509  02AE  07BD               	addwf	___flmul@prod,f
  4510  02AF  3000               	movlw	0
  4511  02B0  3DBE               	addwfc	___flmul@prod+1,f
  4512  02B1  3DBF               	addwfc	___flmul@prod+2,f
  4513  02B2  3DC0               	addwfc	___flmul@prod+3,f
  4514  02B3  1C40               	btfss	___flmul@prod+3,0
  4515  02B4  2ABC               	goto	l3409
  4516  02B5  37C0               	asrf	___flmul@prod+3,f
  4517  02B6  0CBF               	rrf	___flmul@prod+2,f
  4518  02B7  0CBE               	rrf	___flmul@prod+1,f
  4519  02B8  0CBD               	rrf	___flmul@prod,f
  4520  02B9  0AC1               	incf	___flmul@temp,f
  4521  02BA  1903               	skipnz
  4522  02BB  0AC2               	incf	___flmul@temp+1,f
  4523  02BC                     l3409:
  4524  02BC  27C5  3180         	fcall	PL62	;call to abstracted procedure
  4525  02BE  1D03               	skipz
  4526  02BF  2AC2               	goto	u4285
  4527  02C0  30FF               	movlw	255
  4528  02C1  0241               	subwf	___flmul@temp,w
  4529  02C2                     u4285:
  4530  02C2  1C03               	skipc
  4531  02C3  2ACC               	goto	l3413
  4532  02C4  307F               	movlw	127
  4533  02C5  0020               	movlb	0	; select bank0
  4534  02C6  00C0               	movwf	___flmul@prod+3
  4535  02C7  3080               	movlw	128
  4536  02C8  00BF               	movwf	___flmul@prod+2
  4537  02C9  01BE               	clrf	___flmul@prod+1
  4538  02CA  01BD               	clrf	___flmul@prod
  4539  02CB  2AEA               	goto	l862
  4540  02CC                     l3413:
  4541  02CC  0020               	movlb	0	; select bank0
  4542  02CD  27C5  3180         	fcall	PL62	;call to abstracted procedure
  4543  02CF  1D03               	skipz
  4544  02D0  2AD3               	goto	u4295
  4545  02D1  3001               	movlw	1
  4546  02D2  0241               	subwf	___flmul@temp,w
  4547  02D3                     u4295:
  4548  02D3  1803               	skipnc
  4549  02D4  2ADC               	goto	l3419
  4550  02D5  0020               	movlb	0	; select bank0
  4551  02D6  01BD               	clrf	___flmul@prod
  4552  02D7  01BE               	clrf	___flmul@prod+1
  4553  02D8  01BF               	clrf	___flmul@prod+2
  4554  02D9  01C0               	clrf	___flmul@prod+3
  4555  02DA  01B6               	clrf	___flmul@sign
  4556  02DB  2AEA               	goto	l862
  4557  02DC                     l3419:
  4558  02DC  0020               	movlb	0	; select bank0
  4559  02DD  0841               	movf	___flmul@temp,w
  4560  02DE  00BC               	movwf	___flmul@bexp
  4561  02DF  30FF               	movlw	255
  4562  02E0  05BD               	andwf	___flmul@prod,f
  4563  02E1  05BE               	andwf	___flmul@prod+1,f
  4564  02E2  307F               	movlw	127
  4565  02E3  05BF               	andwf	___flmul@prod+2,f
  4566  02E4  3000               	movlw	0
  4567  02E5  01C0               	clrf	___flmul@prod+3
  4568  02E6  183C               	btfsc	___flmul@bexp,0
  4569  02E7  17BF               	bsf	___flmul@prod+2,7
  4570  02E8  363C               	lsrf	___flmul@bexp,w
  4571  02E9  00C0               	movwf	___flmul@prod+3
  4572  02EA                     l862:
  4573  02EA  0836               	movf	___flmul@sign,w
  4574  02EB  04C0               	iorwf	___flmul@prod+3,f
  4575  02EC  0840               	movf	___flmul@prod+3,w
  4576  02ED  00AD               	movwf	?___flmul+3
  4577  02EE  083F               	movf	___flmul@prod+2,w
  4578  02EF  00AC               	movwf	?___flmul+2
  4579  02F0  083E               	movf	___flmul@prod+1,w
  4580  02F1  00AB               	movwf	?___flmul+1
  4581  02F2  083D               	movf	___flmul@prod,w
  4582  02F3  00AA               	movwf	?___flmul
  4583  02F4  0008               	return
  4584  02F5                     __end_of___flmul:
  4585  02F5                     __ptext44:	
  4586 ;; *************** function __Umul8_16 *****************
  4587 ;; Defined at:
  4588 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul8_16.c"
  4589 ;; Parameters:    Size  Location     Type
  4590 ;;  multiplier      1    wreg     unsigned char 
  4591 ;;  multiplicand    1    0[COMMON] unsigned char 
  4592 ;; Auto vars:     Size  Location     Type
  4593 ;;  multiplier      1    6[COMMON] unsigned char 
  4594 ;;  word_mpld       2    4[COMMON] unsigned int 
  4595 ;;  product         2    2[COMMON] unsigned int 
  4596 ;; Return value:  Size  Location     Type
  4597 ;;                  2    0[COMMON] unsigned int 
  4598 ;; Registers used:
  4599 ;;		wreg, status,2, status,0
  4600 ;; Tracked objects:
  4601 ;;		On entry : 1F/0
  4602 ;;		On exit  : 1F/0
  4603 ;;		Unchanged: 1F/0
  4604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4605 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4606 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4608 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4609 ;;Total ram usage:        7 bytes
  4610 ;; Hardware stack levels used: 1
  4611 ;; This function calls:
  4612 ;;		Nothing
  4613 ;; This function is called by:
  4614 ;;		___flmul
  4615 ;; This function uses a non-reentrant model
  4616 ;;
  4617                           
  4618                           
  4619                           ;psect for function __Umul8_16
  4620  02F5                     __Umul8_16:
  4621                           
  4622                           ;incstack = 0
  4623                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  4624                           ;__Umul8_16@multiplier stored from wreg
  4625  02F5  00F6               	movwf	__Umul8_16@multiplier
  4626  02F6  01F2               	clrf	__Umul8_16@product
  4627  02F7  01F3               	clrf	__Umul8_16@product+1
  4628  02F8  0870               	movf	__Umul8_16@multiplicand,w
  4629  02F9  00F4               	movwf	__Umul8_16@word_mpld
  4630  02FA  01F5               	clrf	__Umul8_16@word_mpld+1
  4631  02FB                     l3013:
  4632  02FB  1C76               	btfss	__Umul8_16@multiplier,0
  4633  02FC  2B01               	goto	l3017
  4634  02FD  0874               	movf	__Umul8_16@word_mpld,w
  4635  02FE  07F2               	addwf	__Umul8_16@product,f
  4636  02FF  0875               	movf	__Umul8_16@word_mpld+1,w
  4637  0300  3DF3               	addwfc	__Umul8_16@product+1,f
  4638  0301                     l3017:
  4639  0301  35F4               	lslf	__Umul8_16@word_mpld,f
  4640  0302  0DF5               	rlf	__Umul8_16@word_mpld+1,f
  4641  0303  36F6               	lsrf	__Umul8_16@multiplier,f
  4642  0304  0876               	movf	__Umul8_16@multiplier,w
  4643  0305  1D03               	btfss	3,2
  4644  0306  2AFB               	goto	l3013
  4645  0307  0873               	movf	__Umul8_16@product+1,w
  4646  0308  00F1               	movwf	?__Umul8_16+1
  4647  0309  0872               	movf	__Umul8_16@product,w
  4648  030A  00F0               	movwf	?__Umul8_16
  4649  030B  0008               	return
  4650  030C                     __end_of__Umul8_16:
  4651  030C                     __ptext37:	
  4652 ;; *************** function _FLOAT_to_string *****************
  4653 ;; Defined at:
  4654 ;;		line 126 in file "Main.c"
  4655 ;; Parameters:    Size  Location     Type
  4656 ;;  number          4   63[BANK0 ] void 
  4657 ;;  text            1   67[BANK0 ] PTR unsigned char 
  4658 ;;		 -> main@buffer(8), 
  4659 ;;  decimal         1   68[BANK0 ] unsigned char 
  4660 ;; Auto vars:     Size  Location     Type
  4661 ;;  tempo_float     4    2[BANK1 ] unsigned char 
  4662 ;;  cont_for        2   10[BANK1 ] int 
  4663 ;;  largo_entera    2    8[BANK1 ] int 
  4664 ;;  largo_n         2    6[BANK1 ] int 
  4665 ;;  tempo_int       2    0[BANK1 ] int 
  4666 ;; Return value:  Size  Location     Type
  4667 ;;                  1    wreg      void 
  4668 ;; Registers used:
  4669 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4670 ;; Tracked objects:
  4671 ;;		On entry : 1F/0
  4672 ;;		On exit  : 1F/0
  4673 ;;		Unchanged: 0/0
  4674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4675 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4676 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  4677 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4678 ;;      Totals:         1       6      12       0       0       0       0       0       0       0       0       0       
      +0       0
  4679 ;;Total ram usage:       19 bytes
  4680 ;; Hardware stack levels used: 1
  4681 ;; Hardware stack levels required when called: 2
  4682 ;; This function calls:
  4683 ;;		___fladd
  4684 ;;		___fldiv
  4685 ;;		___flge
  4686 ;;		___flmul
  4687 ;;		___flneg
  4688 ;;		___flsub
  4689 ;;		___fltol
  4690 ;;		___xxtofl
  4691 ;; This function is called by:
  4692 ;;		_main
  4693 ;; This function uses a non-reentrant model
  4694 ;;
  4695                           
  4696                           
  4697                           ;psect for function _FLOAT_to_string
  4698  030C                     _FLOAT_to_string:
  4699                           
  4700                           ;Main.c: 126: void FLOAT_to_string(double number, char *text, char decimal);Main.c: 127:
      +                           {;Main.c: 128:     int largo_entera, largo_n, cont_for, tempo_int;;Main.c: 129:     dou
      +                          ble tempo_float;;Main.c: 131:     largo_n = decimal + 1;
  4701                           
  4702                           ;incstack = 0
  4703                           ; Regs used in _FLOAT_to_string: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4704  030C  0864               	movf	FLOAT_to_string@decimal,w
  4705  030D  0021               	movlb	1	; select bank1
  4706  030E  00D0               	movwf	FLOAT_to_string@largo_n^(0+128)
  4707  030F  01D1               	clrf	(FLOAT_to_string@largo_n+1)^(0+128)
  4708  0310  0AD0               	incf	FLOAT_to_string@largo_n^(0+128),f
  4709  0311  1903               	skipnz
  4710  0312  0AD1               	incf	(FLOAT_to_string@largo_n+1)^(0+128),f
  4711                           
  4712                           ;Main.c: 132:     largo_entera = 0;
  4713  0313  01D2               	clrf	FLOAT_to_string@largo_entera^(0+128)
  4714  0314  01D3               	clrf	(FLOAT_to_string@largo_entera+1)^(0+128)
  4715                           
  4716                           ;Main.c: 134:     if (number < 0)
  4717  0315  0020               	movlb	0	; select bank0
  4718  0316  270C  3180         	fcall	PL8	;call to abstracted procedure
  4719  0318  27E6  3180         	fcall	PL78	;call to abstracted procedure
  4720  031A  2475  3180         	fcall	___flge
  4721  031C  1803               	btfsc	3,0
  4722  031D  2B36               	goto	l3545
  4723                           
  4724                           ;Main.c: 135:     {;Main.c: 136:         *text++ = '-';
  4725  031E  0863               	movf	FLOAT_to_string@text,w
  4726  031F  0086               	movwf	6
  4727  0320  302D               	movlw	45
  4728  0321  0187               	clrf	7
  4729  0322  0081               	movwf	1
  4730  0323  0AE3               	incf	FLOAT_to_string@text,f
  4731                           
  4732                           ;Main.c: 137:         number = -number;
  4733  0324  0862               	movf	FLOAT_to_string@number+3,w
  4734  0325  00F3               	movwf	___flneg@f1+3
  4735  0326  0861               	movf	FLOAT_to_string@number+2,w
  4736  0327  00F2               	movwf	___flneg@f1+2
  4737  0328  0860               	movf	FLOAT_to_string@number+1,w
  4738  0329  00F1               	movwf	___flneg@f1+1
  4739  032A  085F               	movf	FLOAT_to_string@number,w
  4740  032B  00F0               	movwf	___flneg@f1
  4741  032C  2638  3180         	fcall	___flneg
  4742  032E  0873               	movf	?___flneg+3,w
  4743  032F  00E2               	movwf	FLOAT_to_string@number+3
  4744  0330  0872               	movf	?___flneg+2,w
  4745  0331  00E1               	movwf	FLOAT_to_string@number+2
  4746  0332  0871               	movf	?___flneg+1,w
  4747  0333  00E0               	movwf	FLOAT_to_string@number+1
  4748  0334  0870               	movf	?___flneg,w
  4749  0335  00DF               	movwf	FLOAT_to_string@number
  4750  0336                     l3545:
  4751                           
  4752                           ;Main.c: 140:     if (number > 0.0) while (number < 1.0)
  4753  0336  01F0               	clrf	___flge@ff1
  4754  0337  01F1               	clrf	___flge@ff1+1
  4755  0338  01F2               	clrf	___flge@ff1+2
  4756  0339  01F3               	clrf	___flge@ff1+3
  4757  033A  0862               	movf	FLOAT_to_string@number+3,w
  4758  033B  00F7               	movwf	___flge@ff2+3
  4759  033C  0861               	movf	FLOAT_to_string@number+2,w
  4760  033D  00F6               	movwf	___flge@ff2+2
  4761  033E  0860               	movf	FLOAT_to_string@number+1,w
  4762  033F  00F5               	movwf	___flge@ff2+1
  4763  0340  085F               	movf	FLOAT_to_string@number,w
  4764  0341  00F4               	movwf	___flge@ff2
  4765  0342  2475  3180         	fcall	___flge
  4766  0344  1C03               	btfss	3,0
  4767  0345  2B52               	goto	l3553
  4768  0346  2B78               	goto	l3559
  4769  0347                     l3549:
  4770                           
  4771                           ;Main.c: 141:     {;Main.c: 142:         number =number* 10.00;
  4772  0347  274D  3180         	fcall	PL20	;call to abstracted procedure
  4773  0349  21DB  3180         	fcall	___flmul
  4774  034B  279A  3180         	fcall	PL38	;call to abstracted procedure
  4775                           
  4776                           ;Main.c: 143:         largo_entera--;
  4777  034D  30FF               	movlw	-1
  4778  034E  0021               	movlb	1	; select bank1
  4779  034F  07D2               	addwf	FLOAT_to_string@largo_entera^(0+128),f
  4780  0350  1C03               	skipc
  4781  0351  03D3               	decf	(FLOAT_to_string@largo_entera+1)^(0+128),f
  4782  0352                     l3553:
  4783                           
  4784                           ;Main.c: 140:     if (number > 0.0) while (number < 1.0)
  4785  0352  0020               	movlb	0	; select bank0
  4786  0353  270C  3180         	fcall	PL8	;call to abstracted procedure
  4787  0355  303F               	movlw	63
  4788  0356  00F7               	movwf	___flge@ff2+3
  4789  0357  3080               	movlw	128
  4790  0358  00F6               	movwf	___flge@ff2+2
  4791  0359  01F5               	clrf	___flge@ff2+1
  4792  035A  01F4               	clrf	___flge@ff2
  4793  035B  2475  3180         	fcall	___flge
  4794  035D  1803               	btfsc	3,0
  4795  035E  2B78               	goto	l3559
  4796  035F  2B47               	goto	l3549
  4797  0360                     l3555:
  4798                           
  4799                           ;Main.c: 148:     {;Main.c: 149:         number = number/10.0;
  4800  0360  27AA  3180         	fcall	PL48	;call to abstracted procedure
  4801  0362  0862               	movf	FLOAT_to_string@number+3,w
  4802  0363  00F7               	movwf	___fldiv@b+3
  4803  0364  0861               	movf	FLOAT_to_string@number+2,w
  4804  0365  00F6               	movwf	___fldiv@b+2
  4805  0366  0860               	movf	FLOAT_to_string@number+1,w
  4806  0367  00F5               	movwf	___fldiv@b+1
  4807  0368  085F               	movf	FLOAT_to_string@number,w
  4808  0369  00F4               	movwf	___fldiv@b
  4809  036A  24CF  3180         	fcall	___fldiv
  4810  036C  0873               	movf	?___fldiv+3,w
  4811  036D  00E2               	movwf	FLOAT_to_string@number+3
  4812  036E  0872               	movf	?___fldiv+2,w
  4813  036F  00E1               	movwf	FLOAT_to_string@number+2
  4814  0370  0871               	movf	?___fldiv+1,w
  4815  0371  00E0               	movwf	FLOAT_to_string@number+1
  4816  0372  0870               	movf	?___fldiv,w
  4817  0373  00DF               	movwf	FLOAT_to_string@number
  4818                           
  4819                           ;Main.c: 150:         largo_entera++;
  4820  0374  0021               	movlb	1	; select bank1
  4821  0375  0AD2               	incf	FLOAT_to_string@largo_entera^(0+128),f
  4822  0376  1903               	skipnz
  4823  0377  0AD3               	incf	(FLOAT_to_string@largo_entera+1)^(0+128),f
  4824  0378                     l3559:
  4825                           
  4826                           ;Main.c: 147:     while (number >= 10.0)
  4827  0378  0020               	movlb	0	; select bank0
  4828  0379  270C  3180         	fcall	PL8	;call to abstracted procedure
  4829  037B  27B8  3180         	fcall	PL58	;call to abstracted procedure
  4830  037D  2475  3180         	fcall	___flge
  4831  037F  1803               	btfsc	3,0
  4832  0380  2B60               	goto	l3555
  4833                           
  4834                           ;Main.c: 152:     largo_n = largo_n+largo_entera;
  4835  0381  0021               	movlb	1	; select bank1
  4836  0382  0852               	movf	FLOAT_to_string@largo_entera^(0+128),w
  4837  0383  07D0               	addwf	FLOAT_to_string@largo_n^(0+128),f
  4838  0384  0853               	movf	(FLOAT_to_string@largo_entera+1)^(0+128),w
  4839  0385  3DD1               	addwfc	(FLOAT_to_string@largo_n+1)^(0+128),f
  4840                           
  4841                           ;Main.c: 157:     for (tempo_float = cont_for = 1; cont_for < largo_n; cont_for++)
  4842  0386  01D4               	clrf	FLOAT_to_string@cont_for^(0+128)
  4843  0387  0AD4               	incf	FLOAT_to_string@cont_for^(0+128),f
  4844  0388  01D5               	clrf	(FLOAT_to_string@cont_for+1)^(0+128)
  4845  0389  0854               	movf	FLOAT_to_string@cont_for^(0+128),w
  4846  038A  00F9               	movwf	___xxtofl@val
  4847  038B  0855               	movf	(FLOAT_to_string@cont_for+1)^(0+128),w
  4848  038C  27A3  3180         	fcall	PL42	;call to abstracted procedure
  4849  038E  25CE  3180         	fcall	___xxtofl
  4850  0390  277E  3180         	fcall	PL32	;call to abstracted procedure
  4851  0392                     l3569:
  4852  0392  2769  3180         	fcall	PL26	;call to abstracted procedure
  4853  0394  1803               	btfsc	3,0
  4854  0395  2BA9               	goto	l3571
  4855                           
  4856                           ;Main.c: 158:         tempo_float = tempo_float/10.0;
  4857  0396  27AA  3180         	fcall	PL48	;call to abstracted procedure
  4858  0398  2774  3180         	fcall	PL30	;call to abstracted procedure
  4859  039A  24CF  3180         	fcall	___fldiv
  4860  039C  0873               	movf	?___fldiv+3,w
  4861  039D  0021               	movlb	1	; select bank1
  4862  039E  00CF               	movwf	(FLOAT_to_string@tempo_float+3)^(0+128)
  4863  039F  0872               	movf	?___fldiv+2,w
  4864  03A0  00CE               	movwf	(FLOAT_to_string@tempo_float+2)^(0+128)
  4865  03A1  0871               	movf	?___fldiv+1,w
  4866  03A2  00CD               	movwf	(FLOAT_to_string@tempo_float+1)^(0+128)
  4867  03A3  0870               	movf	?___fldiv,w
  4868  03A4  00CC               	movwf	FLOAT_to_string@tempo_float^(0+128)
  4869  03A5  0AD4               	incf	FLOAT_to_string@cont_for^(0+128),f
  4870  03A6  1903               	skipnz
  4871  03A7  0AD5               	incf	(FLOAT_to_string@cont_for+1)^(0+128),f
  4872  03A8  2B92               	goto	l3569
  4873  03A9                     l3571:
  4874                           
  4875                           ;Main.c: 160:     number += tempo_float/2.0;
  4876  03A9  2774  3180         	fcall	PL30	;call to abstracted procedure
  4877  03AB  3040               	movlw	64
  4878  03AC  00F3               	movwf	___fldiv@a+3
  4879  03AD  01F2               	clrf	___fldiv@a+2
  4880  03AE  01F1               	clrf	___fldiv@a+1
  4881  03AF  01F0               	clrf	___fldiv@a
  4882  03B0  24CF               	fcall	___fldiv
  4883  03B1  0873               	movf	?___fldiv+3,w
  4884  03B2  00C6               	movwf	___fladd@b+3
  4885  03B3  0872               	movf	?___fldiv+2,w
  4886  03B4  00C5               	movwf	___fladd@b+2
  4887  03B5  0871               	movf	?___fldiv+1,w
  4888  03B6  00C4               	movwf	___fladd@b+1
  4889  03B7  0870               	movf	?___fldiv,w
  4890  03B8  00C3               	movwf	___fladd@b
  4891  03B9  0862               	movf	FLOAT_to_string@number+3,w
  4892  03BA  00CA               	movwf	___fladd@a+3
  4893  03BB  0861               	movf	FLOAT_to_string@number+2,w
  4894  03BC  00C9               	movwf	___fladd@a+2
  4895  03BD  0860               	movf	FLOAT_to_string@number+1,w
  4896  03BE  00C8               	movwf	___fladd@a+1
  4897  03BF  085F               	movf	FLOAT_to_string@number,w
  4898  03C0  00C7               	movwf	___fladd@a
  4899  03C1  3188  202C  3180   	fcall	___fladd
  4900  03C4  0846               	movf	?___fladd+3,w
  4901  03C5  00E2               	movwf	FLOAT_to_string@number+3
  4902  03C6  0845               	movf	?___fladd+2,w
  4903  03C7  00E1               	movwf	FLOAT_to_string@number+2
  4904  03C8  0844               	movf	?___fladd+1,w
  4905  03C9  00E0               	movwf	FLOAT_to_string@number+1
  4906  03CA  0843               	movf	?___fladd,w
  4907  03CB  00DF               	movwf	FLOAT_to_string@number
  4908                           
  4909                           ;Main.c: 161:     if (number >= 10.0)
  4910  03CC  270C  3180         	fcall	PL8	;call to abstracted procedure
  4911  03CE  27B8  3180         	fcall	PL58	;call to abstracted procedure
  4912  03D0  2475  3180         	fcall	___flge
  4913  03D2  1C03               	btfss	3,0
  4914  03D3  2BDE               	goto	l3577
  4915                           
  4916                           ;Main.c: 162:     {;Main.c: 163:         number = 1.0;
  4917  03D4  303F               	movlw	63
  4918  03D5  00E2               	movwf	FLOAT_to_string@number+3
  4919  03D6  3080               	movlw	128
  4920  03D7  00E1               	movwf	FLOAT_to_string@number+2
  4921  03D8  01E0               	clrf	FLOAT_to_string@number+1
  4922  03D9  01DF               	clrf	FLOAT_to_string@number
  4923                           
  4924                           ;Main.c: 164:         largo_entera++;
  4925  03DA  0021               	movlb	1	; select bank1
  4926  03DB  0AD2               	incf	FLOAT_to_string@largo_entera^(0+128),f
  4927  03DC  1903               	skipnz
  4928  03DD  0AD3               	incf	(FLOAT_to_string@largo_entera+1)^(0+128),f
  4929  03DE                     l3577:
  4930                           
  4931                           ;Main.c: 166:     if (largo_entera<0)
  4932  03DE  0021               	movlb	1	; select bank1
  4933  03DF  1FD3               	btfss	(FLOAT_to_string@largo_entera+1)^(0+128),7
  4934  03E0  2C08               	goto	l3597
  4935                           
  4936                           ;Main.c: 167:     {;Main.c: 168:         *text++ = '0'; *text++ = '.';
  4937  03E1  27B1  3180         	fcall	PL52	;call to abstracted procedure
  4938  03E3  0AE3               	incf	FLOAT_to_string@text,f
  4939  03E4  0863               	movf	FLOAT_to_string@text,w
  4940  03E5  0086               	movwf	6
  4941  03E6  302E               	movlw	46
  4942  03E7  0081               	movwf	1
  4943  03E8  0AE3               	incf	FLOAT_to_string@text,f
  4944                           
  4945                           ;Main.c: 169:         if (largo_n < 0)
  4946  03E9  0021               	movlb	1	; select bank1
  4947  03EA  1FD1               	btfss	(FLOAT_to_string@largo_n+1)^(0+128),7
  4948  03EB  2BF0               	goto	l83
  4949                           
  4950                           ;Main.c: 170:             largo_entera = largo_entera-largo_n;
  4951  03EC  0850               	movf	FLOAT_to_string@largo_n^(0+128),w
  4952  03ED  02D2               	subwf	FLOAT_to_string@largo_entera^(0+128),f
  4953  03EE  0851               	movf	(FLOAT_to_string@largo_n+1)^(0+128),w
  4954  03EF  3BD3               	subwfb	(FLOAT_to_string@largo_entera+1)^(0+128),f
  4955  03F0                     l83:
  4956                           
  4957                           ;Main.c: 171:         for (cont_for = -1; cont_for > largo_entera; cont_for--)
  4958  03F0  30FF               	movlw	255
  4959  03F1  00D4               	movwf	FLOAT_to_string@cont_for^(0+128)
  4960  03F2  00D5               	movwf	(FLOAT_to_string@cont_for^(0+128)+1)
  4961  03F3                     l3595:
  4962  03F3  0853               	movf	(FLOAT_to_string@largo_entera+1)^(0+128),w
  4963  03F4  3A80               	xorlw	128
  4964  03F5  00FD               	movwf	??_FLOAT_to_string
  4965  03F6  0855               	movf	(FLOAT_to_string@cont_for+1)^(0+128),w
  4966  03F7  3A80               	xorlw	128
  4967  03F8  027D               	subwf	??_FLOAT_to_string,w
  4968  03F9  1D03               	skipz
  4969  03FA  2BFD               	goto	u4505
  4970  03FB  0854               	movf	FLOAT_to_string@cont_for^(0+128),w
  4971  03FC  0252               	subwf	FLOAT_to_string@largo_entera^(0+128),w
  4972  03FD                     u4505:
  4973  03FD  1803               	btfsc	3,0
  4974  03FE  2C08               	goto	l3597
  4975                           
  4976                           ;Main.c: 172:             *text++ = '0';
  4977  03FF  27B1  3180         	fcall	PL52	;call to abstracted procedure
  4978  0401  30FF               	movlw	-1
  4979  0402  0AE3               	incf	FLOAT_to_string@text,f
  4980  0403  0021               	movlb	1	; select bank1
  4981  0404  07D4               	addwf	FLOAT_to_string@cont_for^(0+128),f
  4982  0405  1C03               	skipc
  4983  0406  03D5               	decf	(FLOAT_to_string@cont_for+1)^(0+128),f
  4984  0407  2BF3               	goto	l3595
  4985  0408                     l3597:
  4986                           
  4987                           ;Main.c: 174:     for (cont_for=0; cont_for < largo_n; cont_for++)
  4988  0408  0021               	movlb	1	; select bank1
  4989  0409  01D4               	clrf	FLOAT_to_string@cont_for^(0+128)
  4990  040A  01D5               	clrf	(FLOAT_to_string@cont_for+1)^(0+128)
  4991  040B                     l3617:
  4992  040B  2769  3180         	fcall	PL26	;call to abstracted procedure
  4993  040D  1803               	btfsc	3,0
  4994  040E  2C6F               	goto	l3619
  4995                           
  4996                           ;Main.c: 175:     {;Main.c: 176:         tempo_int = (int)number;
  4997  040F  0020               	movlb	0	; select bank0
  4998  0410  0862               	movf	FLOAT_to_string@number+3,w
  4999  0411  00F3               	movwf	___fltol@f1+3
  5000  0412  0861               	movf	FLOAT_to_string@number+2,w
  5001  0413  00F2               	movwf	___fltol@f1+2
  5002  0414  0860               	movf	FLOAT_to_string@number+1,w
  5003  0415  00F1               	movwf	___fltol@f1+1
  5004  0416  085F               	movf	FLOAT_to_string@number,w
  5005  0417  00F0               	movwf	___fltol@f1
  5006  0418  265E  3180         	fcall	___fltol
  5007  041A  0871               	movf	?___fltol+1,w
  5008  041B  0021               	movlb	1	; select bank1
  5009  041C  00CB               	movwf	(FLOAT_to_string@tempo_int+1)^(0+128)
  5010  041D  0870               	movf	?___fltol,w
  5011  041E  00CA               	movwf	FLOAT_to_string@tempo_int^(0+128)
  5012                           
  5013                           ;Main.c: 177:         *text++ = (char)tempo_int + 48;
  5014  041F  0020               	movlb	0	; select bank0
  5015  0420  0863               	movf	FLOAT_to_string@text,w
  5016  0421  0086               	movwf	6
  5017  0422  0187               	clrf	7
  5018  0423  0021               	movlb	1	; select bank1
  5019  0424  084A               	movf	FLOAT_to_string@tempo_int^(0+128),w
  5020  0425  3E30               	addlw	48
  5021  0426  0081               	movwf	1
  5022  0427  0020               	movlb	0	; select bank0
  5023  0428  0AE3               	incf	FLOAT_to_string@text,f
  5024                           
  5025                           ;Main.c: 178:         if (cont_for == largo_entera )
  5026  0429  0021               	movlb	1	; select bank1
  5027  042A  0853               	movf	(FLOAT_to_string@largo_entera+1)^(0+128),w
  5028  042B  0655               	xorwf	(FLOAT_to_string@cont_for+1)^(0+128),w
  5029  042C  1D03               	skipz
  5030  042D  2C30               	goto	u4515
  5031  042E  0852               	movf	FLOAT_to_string@largo_entera^(0+128),w
  5032  042F  0654               	xorwf	FLOAT_to_string@cont_for^(0+128),w
  5033  0430                     u4515:
  5034  0430  1D03               	skipz
  5035  0431  2C39               	goto	l3611
  5036                           
  5037                           ;Main.c: 179:             *text++ = '.';
  5038  0432  0020               	movlb	0	; select bank0
  5039  0433  0863               	movf	FLOAT_to_string@text,w
  5040  0434  0086               	movwf	6
  5041  0435  302E               	movlw	46
  5042  0436  0187               	clrf	7
  5043  0437  0081               	movwf	1
  5044  0438  0AE3               	incf	FLOAT_to_string@text,f
  5045  0439                     l3611:
  5046                           
  5047                           ;Main.c: 180:         number -= (tempo_float=tempo_int);
  5048  0439  0021               	movlb	1	; select bank1
  5049  043A  084A               	movf	FLOAT_to_string@tempo_int^(0+128),w
  5050  043B  00F9               	movwf	___xxtofl@val
  5051  043C  084B               	movf	(FLOAT_to_string@tempo_int+1)^(0+128),w
  5052  043D  27A3  3180         	fcall	PL42	;call to abstracted procedure
  5053  043F  25CE  3180         	fcall	___xxtofl
  5054  0441  277E  3180         	fcall	PL32	;call to abstracted procedure
  5055  0443  084F               	movf	(FLOAT_to_string@tempo_float+3)^(0+128),w
  5056  0444  0020               	movlb	0	; select bank0
  5057  0445  00DA               	movwf	___flsub@a+3
  5058  0446  0021               	movlb	1	; select bank1
  5059  0447  084E               	movf	(FLOAT_to_string@tempo_float+2)^(0+128),w
  5060  0448  0020               	movlb	0	; select bank0
  5061  0449  00D9               	movwf	___flsub@a+2
  5062  044A  0021               	movlb	1	; select bank1
  5063  044B  084D               	movf	(FLOAT_to_string@tempo_float+1)^(0+128),w
  5064  044C  0020               	movlb	0	; select bank0
  5065  044D  00D8               	movwf	___flsub@a+1
  5066  044E  0021               	movlb	1	; select bank1
  5067  044F  084C               	movf	FLOAT_to_string@tempo_float^(0+128),w
  5068  0450  0020               	movlb	0	; select bank0
  5069  0451  00D7               	movwf	___flsub@a
  5070  0452  0862               	movf	FLOAT_to_string@number+3,w
  5071  0453  00DE               	movwf	___flsub@b+3
  5072  0454  0861               	movf	FLOAT_to_string@number+2,w
  5073  0455  00DD               	movwf	___flsub@b+2
  5074  0456  0860               	movf	FLOAT_to_string@number+1,w
  5075  0457  00DC               	movwf	___flsub@b+1
  5076  0458  085F               	movf	FLOAT_to_string@number,w
  5077  0459  00DB               	movwf	___flsub@b
  5078  045A  2641  3180         	fcall	___flsub
  5079  045C  085A               	movf	?___flsub+3,w
  5080  045D  00E2               	movwf	FLOAT_to_string@number+3
  5081  045E  0859               	movf	?___flsub+2,w
  5082  045F  00E1               	movwf	FLOAT_to_string@number+2
  5083  0460  0858               	movf	?___flsub+1,w
  5084  0461  00E0               	movwf	FLOAT_to_string@number+1
  5085  0462  0857               	movf	?___flsub,w
  5086  0463  00DF               	movwf	FLOAT_to_string@number
  5087                           
  5088                           ;Main.c: 181:         number = number *10.0;
  5089  0464  274D  3180         	fcall	PL20	;call to abstracted procedure
  5090  0466  21DB  3180         	fcall	___flmul
  5091  0468  279A  3180         	fcall	PL38	;call to abstracted procedure
  5092                           
  5093                           ;Main.c: 182:     }
  5094  046A  0021               	movlb	1	; select bank1
  5095  046B  0AD4               	incf	FLOAT_to_string@cont_for^(0+128),f
  5096  046C  1903               	skipnz
  5097  046D  0AD5               	incf	(FLOAT_to_string@cont_for+1)^(0+128),f
  5098  046E  2C0B               	goto	l3617
  5099  046F                     l3619:
  5100                           
  5101                           ;Main.c: 183:     *text =0;
  5102  046F  0020               	movlb	0	; select bank0
  5103  0470  0863               	movf	FLOAT_to_string@text,w
  5104  0471  0086               	movwf	6
  5105  0472  0187               	clrf	7
  5106  0473  0181               	clrf	1
  5107  0474  0008               	return
  5108  0475                     __end_of_FLOAT_to_string:
  5109  0475                     __ptext45:	
  5110 ;; *************** function ___flge *****************
  5111 ;; Defined at:
  5112 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  5113 ;; Parameters:    Size  Location     Type
  5114 ;;  ff1             4    0[COMMON] unsigned int 
  5115 ;;  ff2             4    4[COMMON] unsigned int 
  5116 ;; Auto vars:     Size  Location     Type
  5117 ;;		None
  5118 ;; Return value:  Size  Location     Type
  5119 ;;		None               void
  5120 ;; Registers used:
  5121 ;;		wreg, status,2, status,0
  5122 ;; Tracked objects:
  5123 ;;		On entry : 1F/0
  5124 ;;		On exit  : 1F/0
  5125 ;;		Unchanged: 1F/0
  5126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5127 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5129 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5130 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5131 ;;Total ram usage:       12 bytes
  5132 ;; Hardware stack levels used: 1
  5133 ;; This function calls:
  5134 ;;		Nothing
  5135 ;; This function is called by:
  5136 ;;		_FLOAT_to_string
  5137 ;; This function uses a non-reentrant model
  5138 ;;
  5139                           
  5140                           
  5141                           ;psect for function ___flge
  5142  0475                     ___flge:
  5143                           
  5144                           ;incstack = 0
  5145                           ; Regs used in ___flge: [wreg+status,2+status,0]
  5146  0475  3080               	movlw	128
  5147  0476  01F8               	clrf	??___flge
  5148  0477  01F9               	clrf	??___flge+1
  5149  0478  0572               	andwf	___flge@ff1+2,w
  5150  0479  00FA               	movwf	??___flge+2
  5151  047A  307F               	movlw	127
  5152  047B  0573               	andwf	___flge@ff1+3,w
  5153  047C  00FB               	movwf	??___flge+3
  5154  047D  047A               	iorwf	??___flge+2,w
  5155  047E  0479               	iorwf	??___flge+1,w
  5156  047F  0478               	iorwf	??___flge,w
  5157  0480  1D03               	skipz
  5158  0481  2C86               	goto	l3107
  5159  0482  01F0               	clrf	___flge@ff1
  5160  0483  01F1               	clrf	___flge@ff1+1
  5161  0484  01F2               	clrf	___flge@ff1+2
  5162  0485  01F3               	clrf	___flge@ff1+3
  5163  0486                     l3107:
  5164  0486  3080               	movlw	128
  5165  0487  01F8               	clrf	??___flge
  5166  0488  01F9               	clrf	??___flge+1
  5167  0489  0576               	andwf	___flge@ff2+2,w
  5168  048A  00FA               	movwf	??___flge+2
  5169  048B  307F               	movlw	127
  5170  048C  0577               	andwf	___flge@ff2+3,w
  5171  048D  00FB               	movwf	??___flge+3
  5172  048E  047A               	iorwf	??___flge+2,w
  5173  048F  0479               	iorwf	??___flge+1,w
  5174  0490  0478               	iorwf	??___flge,w
  5175  0491  1D03               	skipz
  5176  0492  2C95               	goto	l632
  5177  0493  27E6  3180         	fcall	PL78	;call to abstracted procedure
  5178  0495                     l632:
  5179  0495  1FF3               	btfss	___flge@ff1+3,7
  5180  0496  2CA9               	goto	l3113
  5181  0497  27BF  3180         	fcall	PL60	;call to abstracted procedure
  5182  0499  0870               	movf	___flge@ff1,w
  5183  049A  02F8               	subwf	??___flge,f
  5184  049B  0871               	movf	___flge@ff1+1,w
  5185  049C  3BF9               	subwfb	??___flge+1,f
  5186  049D  0872               	movf	___flge@ff1+2,w
  5187  049E  3BFA               	subwfb	??___flge+2,f
  5188  049F  0873               	movf	___flge@ff1+3,w
  5189  04A0  3BFB               	subwfb	??___flge+3,f
  5190  04A1  087B               	movf	??___flge+3,w
  5191  04A2  00F3               	movwf	___flge@ff1+3
  5192  04A3  087A               	movf	??___flge+2,w
  5193  04A4  00F2               	movwf	___flge@ff1+2
  5194  04A5  0879               	movf	??___flge+1,w
  5195  04A6  00F1               	movwf	___flge@ff1+1
  5196  04A7  0878               	movf	??___flge,w
  5197  04A8  00F0               	movwf	___flge@ff1
  5198  04A9                     l3113:
  5199  04A9  1FF7               	btfss	___flge@ff2+3,7
  5200  04AA  2CBD               	goto	l634
  5201  04AB  27BF  3180         	fcall	PL60	;call to abstracted procedure
  5202  04AD  0874               	movf	___flge@ff2,w
  5203  04AE  02F8               	subwf	??___flge,f
  5204  04AF  0875               	movf	___flge@ff2+1,w
  5205  04B0  3BF9               	subwfb	??___flge+1,f
  5206  04B1  0876               	movf	___flge@ff2+2,w
  5207  04B2  3BFA               	subwfb	??___flge+2,f
  5208  04B3  0877               	movf	___flge@ff2+3,w
  5209  04B4  3BFB               	subwfb	??___flge+3,f
  5210  04B5  087B               	movf	??___flge+3,w
  5211  04B6  00F7               	movwf	___flge@ff2+3
  5212  04B7  087A               	movf	??___flge+2,w
  5213  04B8  00F6               	movwf	___flge@ff2+2
  5214  04B9  0879               	movf	??___flge+1,w
  5215  04BA  00F5               	movwf	___flge@ff2+1
  5216  04BB  0878               	movf	??___flge,w
  5217  04BC  00F4               	movwf	___flge@ff2
  5218  04BD                     l634:
  5219  04BD  3080               	movlw	128
  5220  04BE  06F3               	xorwf	___flge@ff1+3,f
  5221  04BF  06F7               	xorwf	___flge@ff2+3,f
  5222  04C0  0877               	movf	___flge@ff2+3,w
  5223  04C1  0273               	subwf	___flge@ff1+3,w
  5224  04C2  1D03               	skipz
  5225  04C3  0008               	return
  5226  04C4  0876               	movf	___flge@ff2+2,w
  5227  04C5  0272               	subwf	___flge@ff1+2,w
  5228  04C6  1D03               	skipz
  5229  04C7  0008               	return
  5230  04C8  0875               	movf	___flge@ff2+1,w
  5231  04C9  0271               	subwf	___flge@ff1+1,w
  5232  04CA  1D03               	skipz
  5233  04CB  0008               	return
  5234  04CC  0874               	movf	___flge@ff2,w
  5235  04CD  0270               	subwf	___flge@ff1,w
  5236  04CE  0008               	return
  5237  04CF                     __end_of___flge:
  5238  04CF                     __ptext46:	
  5239 ;; *************** function ___fldiv *****************
  5240 ;; Defined at:
  5241 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  5242 ;; Parameters:    Size  Location     Type
  5243 ;;  a               4    0[COMMON] unsigned int 
  5244 ;;  b               4    4[COMMON] unsigned int 
  5245 ;; Auto vars:     Size  Location     Type
  5246 ;;  grs             4    7[BANK0 ] unsigned long 
  5247 ;;  rem             4    0[BANK0 ] unsigned long 
  5248 ;;  new_exp         2    5[BANK0 ] int 
  5249 ;;  aexp            1   12[BANK0 ] unsigned char 
  5250 ;;  bexp            1   11[BANK0 ] unsigned char 
  5251 ;;  sign            1    4[BANK0 ] unsigned char 
  5252 ;; Return value:  Size  Location     Type
  5253 ;;                  4    0[COMMON] unsigned char 
  5254 ;; Registers used:
  5255 ;;		wreg, status,2, status,0
  5256 ;; Tracked objects:
  5257 ;;		On entry : 1E/0
  5258 ;;		On exit  : 1F/0
  5259 ;;		Unchanged: 0/0
  5260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5261 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5262 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5263 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5264 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5265 ;;Total ram usage:       25 bytes
  5266 ;; Hardware stack levels used: 1
  5267 ;; This function calls:
  5268 ;;		Nothing
  5269 ;; This function is called by:
  5270 ;;		_FLOAT_to_string
  5271 ;; This function uses a non-reentrant model
  5272 ;;
  5273                           
  5274                           
  5275                           ;psect for function ___fldiv
  5276  04CF                     ___fldiv:
  5277                           
  5278                           ;incstack = 0
  5279                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  5280  04CF  0877               	movf	___fldiv@b+3,w
  5281  04D0  0020               	movlb	0	; select bank0
  5282  04D1  00A4               	movwf	___fldiv@sign
  5283  04D2  3080               	movlw	128
  5284  04D3  05A4               	andwf	___fldiv@sign,f
  5285  04D4  3577               	lslf	___fldiv@b+3,w
  5286  04D5  00AB               	movwf	___fldiv@bexp
  5287  04D6  1BF6               	btfsc	___fldiv@b+2,7
  5288  04D7  142B               	bsf	___fldiv@bexp,0
  5289  04D8  082B               	movf	___fldiv@bexp,w
  5290  04D9  1903               	btfsc	3,2
  5291  04DA  2CE3               	goto	l804
  5292  04DB  0F2B               	incfsz	___fldiv@bexp,w
  5293  04DC  2CE1               	goto	l805
  5294  04DD  01F4               	clrf	___fldiv@b
  5295  04DE  01F5               	clrf	___fldiv@b+1
  5296  04DF  01F6               	clrf	___fldiv@b+2
  5297  04E0  01F7               	clrf	___fldiv@b+3
  5298  04E1                     l805:
  5299  04E1  17F6               	bsf	___fldiv@b+2,7
  5300  04E2  2CE6               	goto	L10
  5301  04E3                     l804:
  5302  04E3  01F4               	clrf	___fldiv@b
  5303  04E4  01F5               	clrf	___fldiv@b+1
  5304  04E5  01F6               	clrf	___fldiv@b+2
  5305  04E6                     L10:
  5306  04E6  01F7               	clrf	___fldiv@b+3
  5307  04E7  0873               	movf	___fldiv@a+3,w
  5308  04E8  3980               	andlw	128
  5309  04E9  06A4               	xorwf	___fldiv@sign,f
  5310  04EA  3573               	lslf	___fldiv@a+3,w
  5311  04EB  00AC               	movwf	___fldiv@aexp
  5312  04EC  1BF2               	btfsc	___fldiv@a+2,7
  5313  04ED  142C               	bsf	___fldiv@aexp,0
  5314  04EE  082C               	movf	___fldiv@aexp,w
  5315  04EF  1903               	btfsc	3,2
  5316  04F0  2CF9               	goto	l808
  5317  04F1  0F2C               	incfsz	___fldiv@aexp,w
  5318  04F2  2CF7               	goto	l809
  5319  04F3  01F0               	clrf	___fldiv@a
  5320  04F4  01F1               	clrf	___fldiv@a+1
  5321  04F5  01F2               	clrf	___fldiv@a+2
  5322  04F6  01F3               	clrf	___fldiv@a+3
  5323  04F7                     l809:
  5324  04F7  17F2               	bsf	___fldiv@a+2,7
  5325  04F8  2CFC               	goto	L11
  5326  04F9                     l808:
  5327  04F9  01F0               	clrf	___fldiv@a
  5328  04FA  01F1               	clrf	___fldiv@a+1
  5329  04FB  01F2               	clrf	___fldiv@a+2
  5330  04FC                     L11:
  5331  04FC  01F3               	clrf	___fldiv@a+3
  5332  04FD  0873               	movf	___fldiv@a+3,w
  5333  04FE  0472               	iorwf	___fldiv@a+2,w
  5334  04FF  0471               	iorwf	___fldiv@a+1,w
  5335  0500  0470               	iorwf	___fldiv@a,w
  5336  0501  1D03               	skipz
  5337  0502  2D16               	goto	l3215
  5338  0503  3080               	movlw	128
  5339  0504  01F4               	clrf	___fldiv@b
  5340  0505  01F5               	clrf	___fldiv@b+1
  5341  0506  01F6               	clrf	___fldiv@b+2
  5342  0507  01F7               	clrf	___fldiv@b+3
  5343  0508  04F6               	iorwf	___fldiv@b+2,f
  5344  0509  307F               	movlw	127
  5345  050A  04F7               	iorwf	___fldiv@b+3,f
  5346  050B                     L12:
  5347  050B  0824               	movf	___fldiv@sign,w
  5348  050C  04F7               	iorwf	___fldiv@b+3,f
  5349  050D  0877               	movf	___fldiv@b+3,w
  5350  050E  00F3               	movwf	?___fldiv+3
  5351  050F  0876               	movf	___fldiv@b+2,w
  5352  0510  00F2               	movwf	?___fldiv+2
  5353  0511  0875               	movf	___fldiv@b+1,w
  5354  0512  00F1               	movwf	?___fldiv+1
  5355  0513  0874               	movf	___fldiv@b,w
  5356  0514  00F0               	movwf	?___fldiv
  5357  0515  0008               	return
  5358  0516                     l3215:
  5359  0516  082B               	movf	___fldiv@bexp,w
  5360  0517  1D03               	btfss	3,2
  5361  0518  2D1E               	goto	l3223
  5362  0519  01F0               	clrf	?___fldiv
  5363  051A  01F1               	clrf	?___fldiv+1
  5364  051B  01F2               	clrf	?___fldiv+2
  5365  051C  01F3               	clrf	?___fldiv+3
  5366  051D  0008               	return
  5367  051E                     l3223:
  5368  051E  082B               	movf	___fldiv@bexp,w
  5369  051F  00A5               	movwf	___fldiv@new_exp
  5370  0520  01A6               	clrf	___fldiv@new_exp+1
  5371  0521  082C               	movf	___fldiv@aexp,w
  5372  0522  02A5               	subwf	___fldiv@new_exp,f
  5373  0523  1C03               	skipc
  5374  0524  03A6               	decf	___fldiv@new_exp+1,f
  5375  0525  307F               	movlw	127
  5376  0526  07A5               	addwf	___fldiv@new_exp,f
  5377  0527  1803               	skipnc
  5378  0528  0AA6               	incf	___fldiv@new_exp+1,f
  5379  0529  0877               	movf	___fldiv@b+3,w
  5380  052A  00A3               	movwf	___fldiv@rem+3
  5381  052B  0876               	movf	___fldiv@b+2,w
  5382  052C  00A2               	movwf	___fldiv@rem+2
  5383  052D  0875               	movf	___fldiv@b+1,w
  5384  052E  00A1               	movwf	___fldiv@rem+1
  5385  052F  0874               	movf	___fldiv@b,w
  5386  0530  00A0               	movwf	___fldiv@rem
  5387  0531  01F4               	clrf	___fldiv@b
  5388  0532  01F5               	clrf	___fldiv@b+1
  5389  0533  01F6               	clrf	___fldiv@b+2
  5390  0534  01F7               	clrf	___fldiv@b+3
  5391  0535  01A7               	clrf	___fldiv@grs
  5392  0536  01A8               	clrf	___fldiv@grs+1
  5393  0537  01A9               	clrf	___fldiv@grs+2
  5394  0538  01AA               	clrf	___fldiv@grs+3
  5395  0539  01AC               	clrf	___fldiv@aexp
  5396  053A                     l3249:
  5397  053A  301A               	movlw	26
  5398  053B  022C               	subwf	___fldiv@aexp,w
  5399  053C  1803               	btfsc	3,0
  5400  053D  2D6A               	goto	l3251
  5401  053E  082C               	movf	___fldiv@aexp,w
  5402  053F  1903               	btfsc	3,2
  5403  0540  2D4F               	goto	l3241
  5404  0541  35A0               	lslf	___fldiv@rem,f
  5405  0542  0DA1               	rlf	___fldiv@rem+1,f
  5406  0543  0DA2               	rlf	___fldiv@rem+2,f
  5407  0544  0DA3               	rlf	___fldiv@rem+3,f
  5408  0545  35F4               	lslf	___fldiv@b,f
  5409  0546  0DF5               	rlf	___fldiv@b+1,f
  5410  0547  0DF6               	rlf	___fldiv@b+2,f
  5411  0548  0DF7               	rlf	___fldiv@b+3,f
  5412  0549  1BAA               	btfsc	___fldiv@grs+3,7
  5413  054A  1474               	bsf	___fldiv@b,0
  5414  054B  35A7               	lslf	___fldiv@grs,f
  5415  054C  0DA8               	rlf	___fldiv@grs+1,f
  5416  054D  0DA9               	rlf	___fldiv@grs+2,f
  5417  054E  0DAA               	rlf	___fldiv@grs+3,f
  5418  054F                     l3241:
  5419  054F  0873               	movf	___fldiv@a+3,w
  5420  0550  0223               	subwf	___fldiv@rem+3,w
  5421  0551  1D03               	skipz
  5422  0552  2D5D               	goto	u4005
  5423  0553  0872               	movf	___fldiv@a+2,w
  5424  0554  0222               	subwf	___fldiv@rem+2,w
  5425  0555  1D03               	skipz
  5426  0556  2D5D               	goto	u4005
  5427  0557  0871               	movf	___fldiv@a+1,w
  5428  0558  0221               	subwf	___fldiv@rem+1,w
  5429  0559  1D03               	skipz
  5430  055A  2D5D               	goto	u4005
  5431  055B  0870               	movf	___fldiv@a,w
  5432  055C  0220               	subwf	___fldiv@rem,w
  5433  055D                     u4005:
  5434  055D  1C03               	skipc
  5435  055E  2D68               	goto	l3247
  5436  055F  172A               	bsf	___fldiv@grs+3,6
  5437  0560  0870               	movf	___fldiv@a,w
  5438  0561  02A0               	subwf	___fldiv@rem,f
  5439  0562  0871               	movf	___fldiv@a+1,w
  5440  0563  3BA1               	subwfb	___fldiv@rem+1,f
  5441  0564  0872               	movf	___fldiv@a+2,w
  5442  0565  3BA2               	subwfb	___fldiv@rem+2,f
  5443  0566  0873               	movf	___fldiv@a+3,w
  5444  0567  3BA3               	subwfb	___fldiv@rem+3,f
  5445  0568                     l3247:
  5446  0568  0AAC               	incf	___fldiv@aexp,f
  5447  0569  2D3A               	goto	l3249
  5448  056A                     l3251:
  5449  056A  0823               	movf	___fldiv@rem+3,w
  5450  056B  0422               	iorwf	___fldiv@rem+2,w
  5451  056C  0421               	iorwf	___fldiv@rem+1,w
  5452  056D  0420               	iorwf	___fldiv@rem,w
  5453  056E  1D03               	btfss	3,2
  5454  056F  1427               	bsf	___fldiv@grs,0
  5455  0570                     l3265:
  5456  0570  1BF6               	btfsc	___fldiv@b+2,7
  5457  0571  2D81               	goto	l3267
  5458  0572  35F4               	lslf	___fldiv@b,f
  5459  0573  0DF5               	rlf	___fldiv@b+1,f
  5460  0574  0DF6               	rlf	___fldiv@b+2,f
  5461  0575  0DF7               	rlf	___fldiv@b+3,f
  5462  0576  1BAA               	btfsc	___fldiv@grs+3,7
  5463  0577  1474               	bsf	___fldiv@b,0
  5464  0578  30FF               	movlw	-1
  5465  0579  35A7               	lslf	___fldiv@grs,f
  5466  057A  0DA8               	rlf	___fldiv@grs+1,f
  5467  057B  0DA9               	rlf	___fldiv@grs+2,f
  5468  057C  0DAA               	rlf	___fldiv@grs+3,f
  5469  057D  07A5               	addwf	___fldiv@new_exp,f
  5470  057E  1C03               	skipc
  5471  057F  03A6               	decf	___fldiv@new_exp+1,f
  5472  0580  2D70               	goto	l3265
  5473  0581                     l3267:
  5474  0581  01AC               	clrf	___fldiv@aexp
  5475  0582  1FAA               	btfss	___fldiv@grs+3,7
  5476  0583  2D96               	goto	l3277
  5477  0584  0827               	movf	___fldiv@grs,w
  5478  0585  00F8               	movwf	??___fldiv
  5479  0586  0828               	movf	___fldiv@grs+1,w
  5480  0587  00F9               	movwf	??___fldiv+1
  5481  0588  0829               	movf	___fldiv@grs+2,w
  5482  0589  00FA               	movwf	??___fldiv+2
  5483  058A  307F               	movlw	127
  5484  058B  052A               	andwf	___fldiv@grs+3,w
  5485  058C  00FB               	movwf	??___fldiv+3
  5486  058D  047A               	iorwf	??___fldiv+2,w
  5487  058E  0479               	iorwf	??___fldiv+1,w
  5488  058F  0478               	iorwf	??___fldiv,w
  5489  0590  1903               	skipnz
  5490  0591  1874               	btfsc	___fldiv@b,0
  5491  0592  2D94               	goto	l3273
  5492  0593  2D96               	goto	l3277
  5493  0594                     l3273:
  5494  0594  01AC               	clrf	___fldiv@aexp
  5495  0595  0AAC               	incf	___fldiv@aexp,f
  5496  0596                     l3277:
  5497  0596  082C               	movf	___fldiv@aexp,w
  5498  0597  1903               	btfsc	3,2
  5499  0598  2DA8               	goto	l3287
  5500  0599  3001               	movlw	1
  5501  059A  07F4               	addwf	___fldiv@b,f
  5502  059B  3000               	movlw	0
  5503  059C  3DF5               	addwfc	___fldiv@b+1,f
  5504  059D  3DF6               	addwfc	___fldiv@b+2,f
  5505  059E  3DF7               	addwfc	___fldiv@b+3,f
  5506  059F  1C77               	btfss	___fldiv@b+3,0
  5507  05A0  2DA8               	goto	l3287
  5508  05A1  37F7               	asrf	___fldiv@b+3,f
  5509  05A2  0CF6               	rrf	___fldiv@b+2,f
  5510  05A3  0CF5               	rrf	___fldiv@b+1,f
  5511  05A4  0CF4               	rrf	___fldiv@b,f
  5512  05A5  0AA5               	incf	___fldiv@new_exp,f
  5513  05A6  1903               	skipnz
  5514  05A7  0AA6               	incf	___fldiv@new_exp+1,f
  5515  05A8                     l3287:
  5516  05A8  27D1  3180         	fcall	PL66	;call to abstracted procedure
  5517  05AA  1D03               	skipz
  5518  05AB  2DAE               	goto	u4105
  5519  05AC  30FF               	movlw	255
  5520  05AD  0225               	subwf	___fldiv@new_exp,w
  5521  05AE                     u4105:
  5522  05AE  1C03               	skipc
  5523  05AF  2DB5               	goto	l831
  5524  05B0  30FF               	movlw	255
  5525  05B1  0020               	movlb	0	; select bank0
  5526  05B2  00A5               	movwf	___fldiv@new_exp
  5527  05B3  27CB  3180         	fcall	PL64	;call to abstracted procedure
  5528  05B5                     l831:
  5529  05B5  0020               	movlb	0	; select bank0
  5530  05B6  27D1  3180         	fcall	PL66	;call to abstracted procedure
  5531  05B8  1D03               	skipz
  5532  05B9  2DBC               	goto	u4115
  5533  05BA  3001               	movlw	1
  5534  05BB  0225               	subwf	___fldiv@new_exp,w
  5535  05BC                     u4115:
  5536  05BC  1803               	skipnc
  5537  05BD  2DC3               	goto	l3297
  5538  05BE  0020               	movlb	0	; select bank0
  5539  05BF  01A5               	clrf	___fldiv@new_exp
  5540  05C0  27CB  3180         	fcall	PL64	;call to abstracted procedure
  5541  05C2  01A4               	clrf	___fldiv@sign
  5542  05C3                     l3297:
  5543  05C3  0020               	movlb	0	; select bank0
  5544  05C4  0825               	movf	___fldiv@new_exp,w
  5545  05C5  00AB               	movwf	___fldiv@bexp
  5546  05C6  1C2B               	btfss	___fldiv@bexp,0
  5547  05C7  2DCA               	goto	l833
  5548  05C8  17F6               	bsf	___fldiv@b+2,7
  5549  05C9  2DCB               	goto	l3303
  5550  05CA                     l833:
  5551  05CA  13F6               	bcf	___fldiv@b+2,7
  5552  05CB                     l3303:
  5553  05CB  362B               	lsrf	___fldiv@bexp,w
  5554  05CC  00F7               	movwf	___fldiv@b+3
  5555  05CD  2D0B               	goto	L12
  5556  05CE                     __end_of___fldiv:
  5557  007E                     btemp	set	126	;btemp
  5558  007E                     wtemp0	set	126
  5559  05CE                     __ptext38:	
  5560 ;; *************** function ___xxtofl *****************
  5561 ;; Defined at:
  5562 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  5563 ;; Parameters:    Size  Location     Type
  5564 ;;  sign            1    wreg     unsigned char 
  5565 ;;  val             4    9[COMMON] long 
  5566 ;; Auto vars:     Size  Location     Type
  5567 ;;  sign            1    4[BANK0 ] unsigned char 
  5568 ;;  arg             4    6[BANK0 ] unsigned long 
  5569 ;;  exp             1    5[BANK0 ] unsigned char 
  5570 ;; Return value:  Size  Location     Type
  5571 ;;                  4    9[COMMON] unsigned char 
  5572 ;; Registers used:
  5573 ;;		wreg, status,2, status,0
  5574 ;; Tracked objects:
  5575 ;;		On entry : 1E/0
  5576 ;;		On exit  : 1F/0
  5577 ;;		Unchanged: 0/0
  5578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5579 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5580 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5581 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5582 ;;      Totals:         4      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5583 ;;Total ram usage:       14 bytes
  5584 ;; Hardware stack levels used: 1
  5585 ;; This function calls:
  5586 ;;		Nothing
  5587 ;; This function is called by:
  5588 ;;		_FLOAT_to_string
  5589 ;;		_MLX90614_readObjectTempC
  5590 ;;		_MLX90614_readAmbientTempC
  5591 ;; This function uses a non-reentrant model
  5592 ;;
  5593                           
  5594                           
  5595                           ;psect for function ___xxtofl
  5596  05CE                     ___xxtofl:
  5597                           
  5598                           ;incstack = 0
  5599                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5600                           ;___xxtofl@sign stored from wreg
  5601  05CE  0020               	movlb	0	; select bank0
  5602  05CF  00A4               	movwf	___xxtofl@sign
  5603  05D0  0824               	movf	___xxtofl@sign,w
  5604  05D1  1D03               	btfss	3,2
  5605  05D2  1FFC               	btfss	___xxtofl@val+3,7
  5606  05D3  2DE4               	goto	l3437
  5607  05D4  0979               	comf	___xxtofl@val,w
  5608  05D5  00A6               	movwf	___xxtofl@arg
  5609  05D6  097A               	comf	___xxtofl@val+1,w
  5610  05D7  00A7               	movwf	___xxtofl@arg+1
  5611  05D8  097B               	comf	___xxtofl@val+2,w
  5612  05D9  00A8               	movwf	___xxtofl@arg+2
  5613  05DA  097C               	comf	___xxtofl@val+3,w
  5614  05DB  00A9               	movwf	___xxtofl@arg+3
  5615  05DC  0AA6               	incf	___xxtofl@arg,f
  5616  05DD  1903               	skipnz
  5617  05DE  0AA7               	incf	___xxtofl@arg+1,f
  5618  05DF  1903               	skipnz
  5619  05E0  0AA8               	incf	___xxtofl@arg+2,f
  5620  05E1  1903               	skipnz
  5621  05E2  0AA9               	incf	___xxtofl@arg+3,f
  5622  05E3  2DEC               	goto	l894
  5623  05E4                     l3437:
  5624  05E4  087C               	movf	___xxtofl@val+3,w
  5625  05E5  00A9               	movwf	___xxtofl@arg+3
  5626  05E6  087B               	movf	___xxtofl@val+2,w
  5627  05E7  00A8               	movwf	___xxtofl@arg+2
  5628  05E8  087A               	movf	___xxtofl@val+1,w
  5629  05E9  00A7               	movwf	___xxtofl@arg+1
  5630  05EA  0879               	movf	___xxtofl@val,w
  5631  05EB  00A6               	movwf	___xxtofl@arg
  5632  05EC                     l894:
  5633  05EC  087C               	movf	___xxtofl@val+3,w
  5634  05ED  047B               	iorwf	___xxtofl@val+2,w
  5635  05EE  047A               	iorwf	___xxtofl@val+1,w
  5636  05EF  0479               	iorwf	___xxtofl@val,w
  5637  05F0  1D03               	skipz
  5638  05F1  2DF7               	goto	l3441
  5639  05F2  01F9               	clrf	?___xxtofl
  5640  05F3  01FA               	clrf	?___xxtofl+1
  5641  05F4  01FB               	clrf	?___xxtofl+2
  5642  05F5  01FC               	clrf	?___xxtofl+3
  5643  05F6  0008               	return
  5644  05F7                     l3441:
  5645  05F7  3096               	movlw	150
  5646  05F8  00A5               	movwf	___xxtofl@exp
  5647  05F9                     l3445:
  5648  05F9  30FE               	movlw	254
  5649  05FA  0529               	andwf	___xxtofl@arg+3,w
  5650  05FB  1903               	btfsc	3,2
  5651  05FC  2E0A               	goto	l3453
  5652  05FD  0AA5               	incf	___xxtofl@exp,f
  5653  05FE  27E1  3180         	fcall	PL76	;call to abstracted procedure
  5654  0600  2DF9               	goto	l3445
  5655  0601                     l3447:
  5656  0601  3001               	movlw	1
  5657  0602  0AA5               	incf	___xxtofl@exp,f
  5658  0603  07A6               	addwf	___xxtofl@arg,f
  5659  0604  3000               	movlw	0
  5660  0605  3DA7               	addwfc	___xxtofl@arg+1,f
  5661  0606  3DA8               	addwfc	___xxtofl@arg+2,f
  5662  0607  3DA9               	addwfc	___xxtofl@arg+3,f
  5663  0608  27E1  3180         	fcall	PL76	;call to abstracted procedure
  5664  060A                     l3453:
  5665  060A  30FF               	movlw	255
  5666  060B  0529               	andwf	___xxtofl@arg+3,w
  5667  060C  1903               	btfsc	3,2
  5668  060D  2E18               	goto	l3457
  5669  060E  2E01               	goto	l3447
  5670  060F                     l3459:
  5671  060F  3002               	movlw	2
  5672  0610  0225               	subwf	___xxtofl@exp,w
  5673  0611  1C03               	btfss	3,0
  5674  0612  2E1A               	goto	l907
  5675  0613  03A5               	decf	___xxtofl@exp,f
  5676  0614  35A6               	lslf	___xxtofl@arg,f
  5677  0615  0DA7               	rlf	___xxtofl@arg+1,f
  5678  0616  0DA8               	rlf	___xxtofl@arg+2,f
  5679  0617  0DA9               	rlf	___xxtofl@arg+3,f
  5680  0618                     l3457:
  5681  0618  1FA8               	btfss	___xxtofl@arg+2,7
  5682  0619  2E0F               	goto	l3459
  5683  061A                     l907:
  5684  061A  1C25               	btfss	___xxtofl@exp,0
  5685  061B  13A8               	bcf	___xxtofl@arg+2,7
  5686  061C  36A5               	lsrf	___xxtofl@exp,f
  5687  061D  0825               	movf	___xxtofl@exp,w
  5688  061E  00A3               	movwf	??___xxtofl+3
  5689  061F  01A2               	clrf	??___xxtofl+2
  5690  0620  01A1               	clrf	??___xxtofl+1
  5691  0621  01A0               	clrf	??___xxtofl
  5692  0622  0820               	movf	??___xxtofl,w
  5693  0623  04A6               	iorwf	___xxtofl@arg,f
  5694  0624  0821               	movf	??___xxtofl+1,w
  5695  0625  04A7               	iorwf	___xxtofl@arg+1,f
  5696  0626  0822               	movf	??___xxtofl+2,w
  5697  0627  04A8               	iorwf	___xxtofl@arg+2,f
  5698  0628  0823               	movf	??___xxtofl+3,w
  5699  0629  04A9               	iorwf	___xxtofl@arg+3,f
  5700  062A  0824               	movf	___xxtofl@sign,w
  5701  062B  1D03               	btfss	3,2
  5702  062C  1FFC               	btfss	___xxtofl@val+3,7
  5703  062D  2E2F               	goto	l3471
  5704  062E  17A9               	bsf	___xxtofl@arg+3,7
  5705  062F                     l3471:
  5706  062F  0829               	movf	___xxtofl@arg+3,w
  5707  0630  00FC               	movwf	?___xxtofl+3
  5708  0631  0828               	movf	___xxtofl@arg+2,w
  5709  0632  00FB               	movwf	?___xxtofl+2
  5710  0633  0827               	movf	___xxtofl@arg+1,w
  5711  0634  00FA               	movwf	?___xxtofl+1
  5712  0635  0826               	movf	___xxtofl@arg,w
  5713  0636  00F9               	movwf	?___xxtofl
  5714  0637  0008               	return
  5715  0638                     __end_of___xxtofl:
  5716  0638                     __ptext42:	
  5717 ;; *************** function ___flneg *****************
  5718 ;; Defined at:
  5719 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  5720 ;; Parameters:    Size  Location     Type
  5721 ;;  f1              4    0[COMMON] unsigned char 
  5722 ;; Auto vars:     Size  Location     Type
  5723 ;;		None
  5724 ;; Return value:  Size  Location     Type
  5725 ;;                  4    0[COMMON] unsigned char 
  5726 ;; Registers used:
  5727 ;;		wreg
  5728 ;; Tracked objects:
  5729 ;;		On entry : 1F/0
  5730 ;;		On exit  : 1F/0
  5731 ;;		Unchanged: 1F/0
  5732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5733 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5736 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5737 ;;Total ram usage:        4 bytes
  5738 ;; Hardware stack levels used: 1
  5739 ;; This function calls:
  5740 ;;		Nothing
  5741 ;; This function is called by:
  5742 ;;		_FLOAT_to_string
  5743 ;; This function uses a non-reentrant model
  5744 ;;
  5745                           
  5746                           
  5747                           ;psect for function ___flneg
  5748  0638                     ___flneg:
  5749                           
  5750                           ;incstack = 0
  5751                           ; Regs used in ___flneg: [wreg]
  5752  0638  0873               	movf	___flneg@f1+3,w
  5753  0639  0472               	iorwf	___flneg@f1+2,w
  5754  063A  0471               	iorwf	___flneg@f1+1,w
  5755  063B  0470               	iorwf	___flneg@f1,w
  5756  063C  1903               	skipnz
  5757  063D  0008               	return
  5758  063E  3080               	movlw	128
  5759  063F  06F3               	xorwf	___flneg@f1+3,f
  5760  0640  0008               	return
  5761  0641                     __end_of___flneg:
  5762  0641                     __ptext40:	
  5763 ;; *************** function ___flsub *****************
  5764 ;; Defined at:
  5765 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5766 ;; Parameters:    Size  Location     Type
  5767 ;;  a               4   55[BANK0 ] long 
  5768 ;;  b               4   59[BANK0 ] long 
  5769 ;; Auto vars:     Size  Location     Type
  5770 ;;		None
  5771 ;; Return value:  Size  Location     Type
  5772 ;;                  4   55[BANK0 ] long 
  5773 ;; Registers used:
  5774 ;;		wreg, status,2, status,0, pclath, cstack
  5775 ;; Tracked objects:
  5776 ;;		On entry : 1F/0
  5777 ;;		On exit  : 1F/0
  5778 ;;		Unchanged: 0/0
  5779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5780 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5783 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5784 ;;Total ram usage:        8 bytes
  5785 ;; Hardware stack levels used: 1
  5786 ;; Hardware stack levels required when called: 1
  5787 ;; This function calls:
  5788 ;;		___fladd
  5789 ;; This function is called by:
  5790 ;;		_FLOAT_to_string
  5791 ;; This function uses a non-reentrant model
  5792 ;;
  5793                           
  5794                           
  5795                           ;psect for function ___flsub
  5796  0641                     ___flsub:
  5797                           
  5798                           ;incstack = 0
  5799                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  5800  0641  3080               	movlw	128
  5801  0642  06DA               	xorwf	___flsub@a+3,f
  5802  0643  085E               	movf	___flsub@b+3,w
  5803  0644  00C6               	movwf	___fladd@b+3
  5804  0645  085D               	movf	___flsub@b+2,w
  5805  0646  00C5               	movwf	___fladd@b+2
  5806  0647  085C               	movf	___flsub@b+1,w
  5807  0648  00C4               	movwf	___fladd@b+1
  5808  0649  085B               	movf	___flsub@b,w
  5809  064A  00C3               	movwf	___fladd@b
  5810  064B  085A               	movf	___flsub@a+3,w
  5811  064C  00CA               	movwf	___fladd@a+3
  5812  064D  0859               	movf	___flsub@a+2,w
  5813  064E  00C9               	movwf	___fladd@a+2
  5814  064F  0858               	movf	___flsub@a+1,w
  5815  0650  00C8               	movwf	___fladd@a+1
  5816  0651  0857               	movf	___flsub@a,w
  5817  0652  00C7               	movwf	___fladd@a
  5818  0653  3188  202C         	fcall	___fladd
  5819  0655  0846               	movf	?___fladd+3,w
  5820  0656  00DA               	movwf	?___flsub+3
  5821  0657  0845               	movf	?___fladd+2,w
  5822  0658  00D9               	movwf	?___flsub+2
  5823  0659  0844               	movf	?___fladd+1,w
  5824  065A  00D8               	movwf	?___flsub+1
  5825  065B  0843               	movf	?___fladd,w
  5826  065C  00D7               	movwf	?___flsub
  5827  065D  0008               	return
  5828  065E                     __end_of___flsub:
  5829  065E                     __ptext39:	
  5830 ;; *************** function ___fltol *****************
  5831 ;; Defined at:
  5832 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  5833 ;; Parameters:    Size  Location     Type
  5834 ;;  f1              4    0[COMMON] unsigned char 
  5835 ;; Auto vars:     Size  Location     Type
  5836 ;;  exp1            1    9[COMMON] unsigned char 
  5837 ;;  sign1           1    8[COMMON] unsigned char 
  5838 ;; Return value:  Size  Location     Type
  5839 ;;                  4    0[COMMON] long 
  5840 ;; Registers used:
  5841 ;;		wreg, status,2, status,0
  5842 ;; Tracked objects:
  5843 ;;		On entry : 1F/0
  5844 ;;		On exit  : 1F/0
  5845 ;;		Unchanged: 1F/0
  5846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5847 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5848 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5849 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5850 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5851 ;;Total ram usage:       10 bytes
  5852 ;; Hardware stack levels used: 1
  5853 ;; This function calls:
  5854 ;;		Nothing
  5855 ;; This function is called by:
  5856 ;;		_FLOAT_to_string
  5857 ;; This function uses a non-reentrant model
  5858 ;;
  5859                           
  5860                           
  5861                           ;psect for function ___fltol
  5862  065E                     ___fltol:
  5863                           
  5864                           ;incstack = 0
  5865                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5866  065E  1003               	clrc
  5867  065F  0D72               	rlf	___fltol@f1+2,w
  5868  0660  0D73               	rlf	___fltol@f1+3,w
  5869  0661  00F9               	movwf	___fltol@exp1
  5870  0662  0879               	movf	___fltol@exp1,w
  5871  0663  1D03               	btfss	3,2
  5872  0664  2E6A               	goto	l3135
  5873  0665                     l3133:
  5874  0665  01F0               	clrf	?___fltol
  5875  0666  01F1               	clrf	?___fltol+1
  5876  0667  01F2               	clrf	?___fltol+2
  5877  0668  01F3               	clrf	?___fltol+3
  5878  0669  0008               	return
  5879  066A                     l3135:
  5880  066A  0870               	movf	___fltol@f1,w
  5881  066B  00F4               	movwf	??___fltol
  5882  066C  0871               	movf	___fltol@f1+1,w
  5883  066D  00F5               	movwf	??___fltol+1
  5884  066E  0872               	movf	___fltol@f1+2,w
  5885  066F  00F6               	movwf	??___fltol+2
  5886  0670  0873               	movf	___fltol@f1+3,w
  5887  0671  00F7               	movwf	??___fltol+3
  5888  0672  301F               	movlw	31
  5889  0673                     u3835:
  5890  0673  36F7               	lsrf	??___fltol+3,f
  5891  0674  0CF6               	rrf	??___fltol+2,f
  5892  0675  0CF5               	rrf	??___fltol+1,f
  5893  0676  0CF4               	rrf	??___fltol,f
  5894  0677  0B89               	decfsz	9,f
  5895  0678  2E73               	goto	u3835
  5896  0679  0874               	movf	??___fltol,w
  5897  067A  00F8               	movwf	___fltol@sign1
  5898  067B  3096               	movlw	150
  5899  067C  17F2               	bsf	___fltol@f1+2,7
  5900  067D  01F3               	clrf	___fltol@f1+3
  5901  067E  02F9               	subwf	___fltol@exp1,f
  5902  067F  1FF9               	btfss	___fltol@exp1,7
  5903  0680  2E8D               	goto	l3153
  5904  0681  0879               	movf	___fltol@exp1,w
  5905  0682  3A80               	xorlw	128
  5906  0683  3E97               	addlw	151
  5907  0684  1C03               	btfss	3,0
  5908  0685  2E65               	goto	l3133
  5909  0686                     l3149:
  5910  0686  36F3               	lsrf	___fltol@f1+3,f
  5911  0687  0CF2               	rrf	___fltol@f1+2,f
  5912  0688  0CF1               	rrf	___fltol@f1+1,f
  5913  0689  0CF0               	rrf	___fltol@f1,f
  5914  068A  0FF9               	incfsz	___fltol@exp1,f
  5915  068B  2E86               	goto	l3149
  5916  068C  2E9A               	goto	l3161
  5917  068D                     l3153:
  5918  068D  3020               	movlw	32
  5919  068E  0279               	subwf	___fltol@exp1,w
  5920  068F  1803               	btfsc	3,0
  5921  0690  2E65               	goto	l3133
  5922  0691                     l3159:
  5923  0691  0879               	movf	___fltol@exp1,w
  5924  0692  1903               	btfsc	3,2
  5925  0693  2E9A               	goto	l3161
  5926  0694  35F0               	lslf	___fltol@f1,f
  5927  0695  0DF1               	rlf	___fltol@f1+1,f
  5928  0696  0DF2               	rlf	___fltol@f1+2,f
  5929  0697  0DF3               	rlf	___fltol@f1+3,f
  5930  0698  03F9               	decf	___fltol@exp1,f
  5931  0699  2E91               	goto	l3159
  5932  069A                     l3161:
  5933  069A  0878               	movf	___fltol@sign1,w
  5934  069B  1903               	btfsc	3,2
  5935  069C  0008               	return
  5936  069D  09F0               	comf	___fltol@f1,f
  5937  069E  09F1               	comf	___fltol@f1+1,f
  5938  069F  09F2               	comf	___fltol@f1+2,f
  5939  06A0  09F3               	comf	___fltol@f1+3,f
  5940  06A1  0AF0               	incf	___fltol@f1,f
  5941  06A2  1903               	skipnz
  5942  06A3  0AF1               	incf	___fltol@f1+1,f
  5943  06A4  1903               	skipnz
  5944  06A5  0AF2               	incf	___fltol@f1+2,f
  5945  06A6  1903               	skipnz
  5946  06A7  0AF3               	incf	___fltol@f1+3,f
  5947  06A8  0008               	return
  5948  06A9                     __end_of___fltol:
  5949  06A9                     __ptext26:	
  5950 ;; *************** function _adc_init *****************
  5951 ;; Defined at:
  5952 ;;		line 3 in file "adc.c"
  5953 ;; Parameters:    Size  Location     Type
  5954 ;;		None
  5955 ;; Auto vars:     Size  Location     Type
  5956 ;;		None
  5957 ;; Return value:  Size  Location     Type
  5958 ;;                  1    wreg      void 
  5959 ;; Registers used:
  5960 ;;		wreg, status,2, status,0
  5961 ;; Tracked objects:
  5962 ;;		On entry : B1F/1E
  5963 ;;		On exit  : B1F/1
  5964 ;;		Unchanged: B00/0
  5965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5970 ;;Total ram usage:        0 bytes
  5971 ;; Hardware stack levels used: 1
  5972 ;; This function calls:
  5973 ;;		Nothing
  5974 ;; This function is called by:
  5975 ;;		_main
  5976 ;; This function uses a non-reentrant model
  5977 ;;
  5978                           
  5979                           
  5980                           ;psect for function _adc_init
  5981  06A9                     _adc_init:
  5982                           
  5983                           ;adc.c: 4:     ADCON0 = ADCON0 & ~(1<<7 | 1<<4 );
  5984                           
  5985                           ;incstack = 0
  5986                           ; Regs used in _adc_init: [wreg+status,2+status,0]
  5987  06A9  306F               	movlw	111
  5988  06AA  0021               	movlb	1	; select bank1
  5989  06AB  0593               	andwf	19,f	;volatile
  5990                           
  5991                           ;adc.c: 5:     ADCON0 = ADCON0 |(1<<2);
  5992  06AC  0813               	movf	19,w	;volatile
  5993  06AD  3804               	iorlw	4
  5994  06AE  0093               	movwf	19	;volatile
  5995                           
  5996                           ;adc.c: 6:     ADCON1 = ADCON1 |(1<<7);
  5997  06AF  0814               	movf	20,w	;volatile
  5998  06B0  3880               	iorlw	128
  5999  06B1  0094               	movwf	20	;volatile
  6000                           
  6001                           ;adc.c: 7:     ADCON2 = ADCON2 & ~(7<<0 );
  6002  06B2  30F8               	movlw	248
  6003  06B3  0595               	andwf	21,f	;volatile
  6004                           
  6005                           ;adc.c: 17:     ADCLK = ADCLK |(16<<0);
  6006  06B4  0818               	movf	24,w	;volatile
  6007  06B5  3810               	iorlw	16
  6008  06B6  0098               	movwf	24	;volatile
  6009                           
  6010                           ;adc.c: 19:     ADREF = ADREF & ~(1<<4 );
  6011  06B7  121A               	bcf	26,4	;volatile
  6012                           
  6013                           ;adc.c: 20:     ADREF = ADREF & ~(3<<0 );
  6014  06B8  30FC               	movlw	252
  6015  06B9  059A               	andwf	26,f	;volatile
  6016                           
  6017                           ;adc.c: 23:     ADPCH = 4;
  6018  06BA  3004               	movlw	4
  6019  06BB  009E               	movwf	30	;volatile
  6020                           
  6021                           ;adc.c: 24:     ADCAP = 0;
  6022  06BC  019B               	clrf	27	;volatile
  6023  06BD  0008               	return
  6024  06BE                     __end_of_adc_init:
  6025  06BE                     __ptext25:	
  6026 ;; *************** function _i2c_init *****************
  6027 ;; Defined at:
  6028 ;;		line 4 in file "I2C.c"
  6029 ;; Parameters:    Size  Location     Type
  6030 ;;		None
  6031 ;; Auto vars:     Size  Location     Type
  6032 ;;		None
  6033 ;; Return value:  Size  Location     Type
  6034 ;;                  1    wreg      void 
  6035 ;; Registers used:
  6036 ;;		wreg, status,2
  6037 ;; Tracked objects:
  6038 ;;		On entry : B1F/1
  6039 ;;		On exit  : B1F/3
  6040 ;;		Unchanged: B00/0
  6041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6046 ;;Total ram usage:        0 bytes
  6047 ;; Hardware stack levels used: 1
  6048 ;; This function calls:
  6049 ;;		Nothing
  6050 ;; This function is called by:
  6051 ;;		_main
  6052 ;; This function uses a non-reentrant model
  6053 ;;
  6054                           
  6055                           
  6056                           ;psect for function _i2c_init
  6057  06BE                     _i2c_init:
  6058                           
  6059                           ;I2C.c: 6:     TRISCbits.TRISC3 = 1;
  6060                           
  6061                           ;incstack = 0
  6062                           ; Regs used in _i2c_init: [wreg+status,2]
  6063  06BE  0020               	movlb	0	; select bank0
  6064  06BF  1593               	bsf	19,3	;volatile
  6065                           
  6066                           ;I2C.c: 7:     TRISCbits.TRISC4 = 1;
  6067  06C0  1613               	bsf	19,4	;volatile
  6068                           
  6069                           ;I2C.c: 8:     ANSELCbits.ANSC3 = 0;
  6070  06C1  003E               	movlb	30	; select bank30
  6071  06C2  11CE               	bcf	78,3	;volatile
  6072                           
  6073                           ;I2C.c: 9:     ANSELCbits.ANSC4 = 0;
  6074  06C3  124E               	bcf	78,4	;volatile
  6075                           
  6076                           ;I2C.c: 10:     SSP1CLKPPS = 0x14;
  6077  06C4  3014               	movlw	20
  6078  06C5  003D               	movlb	29	; select bank29
  6079  06C6  00C5               	movwf	69	;volatile
  6080                           
  6081                           ;I2C.c: 11:     RC3PPS = 0x15;
  6082  06C7  3015               	movlw	21
  6083  06C8  003E               	movlb	30	; select bank30
  6084  06C9  00A3               	movwf	35	;volatile
  6085                           
  6086                           ;I2C.c: 12:     RC4PPS = 0x14;
  6087  06CA  3014               	movlw	20
  6088  06CB  00A4               	movwf	36	;volatile
  6089                           
  6090                           ;I2C.c: 13:     SSP1DATPPS = 0x13;
  6091  06CC  3013               	movlw	19
  6092  06CD  003D               	movlb	29	; select bank29
  6093  06CE  00C6               	movwf	70	;volatile
  6094                           
  6095                           ;I2C.c: 15:     SSP1STAT = 0b10000000;
  6096  06CF  3080               	movlw	128
  6097  06D0  0023               	movlb	3	; select bank3
  6098  06D1  008F               	movwf	15	;volatile
  6099                           
  6100                           ;I2C.c: 16:  SSP1CON1 = 0b00101000;
  6101  06D2  3028               	movlw	40
  6102  06D3  0090               	movwf	16	;volatile
  6103                           
  6104                           ;I2C.c: 17:  SSP1CON3 = 0x00;
  6105  06D4  0192               	clrf	18	;volatile
  6106                           
  6107                           ;I2C.c: 18:  SSP1ADD = ((32000000UL/(4UL*100000UL))-1);
  6108  06D5  304F               	movlw	79
  6109  06D6  008D               	movwf	13	;volatile
  6110  06D7  0008               	return
  6111  06D8                     __end_of_i2c_init:
  6112  06D8                     __ptext24:	
  6113 ;; *************** function _port_init *****************
  6114 ;; Defined at:
  6115 ;;		line 105 in file "Main.c"
  6116 ;; Parameters:    Size  Location     Type
  6117 ;;		None
  6118 ;; Auto vars:     Size  Location     Type
  6119 ;;		None
  6120 ;; Return value:  Size  Location     Type
  6121 ;;                  1    wreg      void 
  6122 ;; Registers used:
  6123 ;;		wreg, status,2
  6124 ;; Tracked objects:
  6125 ;;		On entry : B1F/0
  6126 ;;		On exit  : B1F/1E
  6127 ;;		Unchanged: B00/0
  6128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6133 ;;Total ram usage:        0 bytes
  6134 ;; Hardware stack levels used: 1
  6135 ;; This function calls:
  6136 ;;		Nothing
  6137 ;; This function is called by:
  6138 ;;		_main
  6139 ;; This function uses a non-reentrant model
  6140 ;;
  6141                           
  6142                           
  6143                           ;psect for function _port_init
  6144  06D8                     _port_init:
  6145                           
  6146                           ;Main.c: 107:     ANSELA = 0;
  6147                           
  6148                           ;incstack = 0
  6149                           ; Regs used in _port_init: [wreg+status,2]
  6150  06D8  003E               	movlb	30	; select bank30
  6151  06D9  01B8               	clrf	56	;volatile
  6152                           
  6153                           ;Main.c: 108:     LATA=0;
  6154  06DA  0020               	movlb	0	; select bank0
  6155  06DB  0196               	clrf	22	;volatile
  6156                           
  6157                           ;Main.c: 109:     PORTA =0;
  6158  06DC  018C               	clrf	12	;volatile
  6159                           
  6160                           ;Main.c: 110:     TRISA = 0b11110000;
  6161  06DD  30F0               	movlw	240
  6162  06DE  0091               	movwf	17	;volatile
  6163                           
  6164                           ;Main.c: 113:     ANSELA = ANSELA | (1<<4);
  6165  06DF  003E               	movlb	30	; select bank30
  6166  06E0  0838               	movf	56,w	;volatile
  6167  06E1  3810               	iorlw	16
  6168  06E2  00B8               	movwf	56	;volatile
  6169                           
  6170                           ;Main.c: 115:     LATB=0;
  6171  06E3  0020               	movlb	0	; select bank0
  6172  06E4  0197               	clrf	23	;volatile
  6173                           
  6174                           ;Main.c: 116:     PORTB =0;
  6175  06E5  018D               	clrf	13	;volatile
  6176                           
  6177                           ;Main.c: 117:     TRISB = TRISA | (1<<0);
  6178  06E6  0811               	movf	17,w	;volatile
  6179  06E7  3801               	iorlw	1
  6180  06E8  0092               	movwf	18	;volatile
  6181                           
  6182                           ;Main.c: 118:     ANSELB = ANSELB | (1<<0);
  6183  06E9  003E               	movlb	30	; select bank30
  6184  06EA  0843               	movf	67,w	;volatile
  6185  06EB  3801               	iorlw	1
  6186  06EC  00C3               	movwf	67	;volatile
  6187  06ED  0008               	return
  6188  06EE                     __end_of_port_init:
  6189  06EE                     __ptext35:	
  6190 ;; *************** function _i2c_nack *****************
  6191 ;; Defined at:
  6192 ;;		line 67 in file "I2C.c"
  6193 ;; Parameters:    Size  Location     Type
  6194 ;;		None
  6195 ;; Auto vars:     Size  Location     Type
  6196 ;;		None
  6197 ;; Return value:  Size  Location     Type
  6198 ;;                  1    wreg      void 
  6199 ;; Registers used:
  6200 ;;		None
  6201 ;; Tracked objects:
  6202 ;;		On entry : 1F/E
  6203 ;;		On exit  : 1F/E
  6204 ;;		Unchanged: 0/0
  6205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6210 ;;Total ram usage:        0 bytes
  6211 ;; Hardware stack levels used: 1
  6212 ;; This function calls:
  6213 ;;		Nothing
  6214 ;; This function is called by:
  6215 ;;		_i2c_read
  6216 ;; This function uses a non-reentrant model
  6217 ;;
  6218                           
  6219                           
  6220                           ;psect for function _i2c_nack
  6221  06EE                     _i2c_nack:
  6222                           
  6223                           ;I2C.c: 69:     PIR3bits.SSP1IF = 0;
  6224                           
  6225                           ;incstack = 0
  6226                           ; Regs used in _i2c_nack: []
  6227  06EE  100F               	bcf	15,0	;volatile
  6228                           
  6229                           ;I2C.c: 70:     SSP1CON2bits.ACKDT = 1;
  6230  06EF  0023               	movlb	3	; select bank3
  6231  06F0  1691               	bsf	17,5	;volatile
  6232                           
  6233                           ;I2C.c: 71:     SSP1CON2bits.ACKEN = 1;
  6234  06F1  1611               	bsf	17,4	;volatile
  6235  06F2                     l240:	
  6236                           ;I2C.c: 72:     while(PIR3bits.SSP1IF == 0);
  6237                           
  6238  06F2  002E               	movlb	14	; select bank14
  6239  06F3  180F               	btfsc	15,0	;volatile
  6240  06F4  0008               	return
  6241  06F5  2EF2               	goto	l240
  6242  06F6                     __end_of_i2c_nack:
  6243  06F6                     PL6:
  6244  06F6  0021               	movlb	1	; select bank1
  6245  06F7  00DE               	movwf	main@temp^(0+128)
  6246  06F8  0861               	movf	(main@temp+3)^(0+128),w
  6247  06F9  0020               	movlb	0	; select bank0
  6248  06FA  00E2               	movwf	FLOAT_to_string@number+3
  6249  06FB  0021               	movlb	1	; select bank1
  6250  06FC  0860               	movf	(main@temp+2)^(0+128),w
  6251  06FD  0020               	movlb	0	; select bank0
  6252  06FE  00E1               	movwf	FLOAT_to_string@number+2
  6253  06FF  0021               	movlb	1	; select bank1
  6254  0700  085F               	movf	(main@temp+1)^(0+128),w
  6255  0701  0020               	movlb	0	; select bank0
  6256  0702  00E0               	movwf	FLOAT_to_string@number+1
  6257  0703  0021               	movlb	1	; select bank1
  6258  0704  085E               	movf	main@temp^(0+128),w
  6259  0705  0020               	movlb	0	; select bank0
  6260  0706  00DF               	movwf	FLOAT_to_string@number
  6261  0707  30D6               	movlw	(low (main@buffer| 0))& (0+255)
  6262  0708  00E3               	movwf	FLOAT_to_string@text
  6263  0709  3002               	movlw	2
  6264  070A  00E4               	movwf	FLOAT_to_string@decimal
  6265  070B  0008               	return
  6266  070C                     __end_ofPL6:
  6267  070C                     PL8:
  6268  070C  0862               	movf	FLOAT_to_string@number+3,w
  6269  070D  00F3               	movwf	___flge@ff1+3
  6270  070E  0861               	movf	FLOAT_to_string@number+2,w
  6271  070F  00F2               	movwf	___flge@ff1+2
  6272  0710  0860               	movf	FLOAT_to_string@number+1,w
  6273  0711  00F1               	movwf	___flge@ff1+1
  6274  0712  085F               	movf	FLOAT_to_string@number,w
  6275  0713  00F0               	movwf	___flge@ff1
  6276  0714  0008               	return
  6277  0715                     __end_ofPL8:
  6278  0715                     PL10:
  6279  0715  0871               	movf	?__Umul8_16+1,w
  6280  0716  00C2               	movwf	___flmul@temp+1
  6281  0717  0870               	movf	?__Umul8_16,w
  6282  0718  00C1               	movwf	___flmul@temp
  6283  0719  07B8               	addwf	___flmul@grs,f
  6284  071A  0842               	movf	___flmul@temp+1,w
  6285  071B  3DB9               	addwfc	___flmul@grs+1,f
  6286  071C  3000               	movlw	0
  6287  071D  3DBA               	addwfc	___flmul@grs+2,f
  6288  071E  3DBB               	addwfc	___flmul@grs+3,f
  6289  071F  0008               	return
  6290  0720                     __end_ofPL10:
  6291  0720                     PL14:
  6292  0720  00C6               	movwf	___fladd@b+3
  6293  0721  3088               	movlw	136
  6294  0722  00C5               	movwf	___fladd@b+2
  6295  0723  3093               	movlw	147
  6296  0724  00C4               	movwf	___fladd@b+1
  6297  0725  3033               	movlw	51
  6298  0726  00C3               	movwf	___fladd@b
  6299  0727  303C               	movlw	60
  6300  0728  00AD               	movwf	___flmul@b+3
  6301  0729  30A3               	movlw	163
  6302  072A  00AC               	movwf	___flmul@b+2
  6303  072B  30D7               	movlw	215
  6304  072C  00AB               	movwf	___flmul@b+1
  6305  072D  300A               	movlw	10
  6306  072E  00AA               	movwf	___flmul@b
  6307  072F  0008               	return
  6308  0730                     __end_ofPL14:
  6309  0730                     PL16:
  6310  0730  07BD               	addwf	___flmul@prod,f
  6311  0731  3001               	movlw	1
  6312  0732  1803               	skipnc
  6313  0733  07BE               	addwf	___flmul@prod+1,f
  6314  0734  1803               	skipnc
  6315  0735  07BF               	addwf	___flmul@prod+2,f
  6316  0736  1803               	skipnc
  6317  0737  07C0               	addwf	___flmul@prod+3,f
  6318  0738  083A               	movf	___flmul@grs+2,w
  6319  0739  00BB               	movwf	___flmul@grs+3
  6320  073A  0839               	movf	___flmul@grs+1,w
  6321  073B  00BA               	movwf	___flmul@grs+2
  6322  073C  0838               	movf	___flmul@grs,w
  6323  073D  00B9               	movwf	___flmul@grs+1
  6324  073E  01B8               	clrf	___flmul@grs
  6325  073F  0008               	return
  6326  0740                     __end_ofPL16:
  6327  0740                     PL18:
  6328  0740  00C2               	movwf	___flmul@temp+1
  6329  0741  0870               	movf	?__Umul8_16,w
  6330  0742  00C1               	movwf	___flmul@temp
  6331  0743  07B8               	addwf	___flmul@grs,f
  6332  0744  3001               	movlw	1
  6333  0745  1803               	skipnc
  6334  0746  07B9               	addwf	___flmul@grs+1,f
  6335  0747  1803               	skipnc
  6336  0748  07BA               	addwf	___flmul@grs+2,f
  6337  0749  1803               	skipnc
  6338  074A  07BB               	addwf	___flmul@grs+3,f
  6339  074B  0842               	movf	___flmul@temp+1,w
  6340  074C  0008               	return
  6341  074D                     __end_ofPL18:
  6342  074D                     PL20:
  6343  074D  3041               	movlw	65
  6344  074E  00AD               	movwf	___flmul@b+3
  6345  074F  3020               	movlw	32
  6346  0750  00AC               	movwf	___flmul@b+2
  6347  0751  01AB               	clrf	___flmul@b+1
  6348  0752  01AA               	clrf	___flmul@b
  6349  0753  0862               	movf	FLOAT_to_string@number+3,w
  6350  0754  00B1               	movwf	___flmul@a+3
  6351  0755  0861               	movf	FLOAT_to_string@number+2,w
  6352  0756  00B0               	movwf	___flmul@a+2
  6353  0757  0860               	movf	FLOAT_to_string@number+1,w
  6354  0758  00AF               	movwf	___flmul@a+1
  6355  0759  085F               	movf	FLOAT_to_string@number,w
  6356  075A  00AE               	movwf	___flmul@a
  6357  075B  0008               	return
  6358  075C                     __end_ofPL20:
  6359  075C                     PL22:
  6360  075C  0871               	movf	?__Umul8_16+1,w
  6361  075D  00C2               	movwf	___flmul@temp+1
  6362  075E  0870               	movf	?__Umul8_16,w
  6363  075F  00C1               	movwf	___flmul@temp
  6364  0760  07BD               	addwf	___flmul@prod,f
  6365  0761  0842               	movf	___flmul@temp+1,w
  6366  0762  3DBE               	addwfc	___flmul@prod+1,f
  6367  0763  3000               	movlw	0
  6368  0764  3DBF               	addwfc	___flmul@prod+2,f
  6369  0765  3DC0               	addwfc	___flmul@prod+3,f
  6370  0766  082C               	movf	___flmul@b+2,w
  6371  0767  00F0               	movwf	__Umul8_16@multiplicand
  6372  0768  0008               	return
  6373  0769                     __end_ofPL22:
  6374  0769                     PL26:
  6375  0769  0855               	movf	(FLOAT_to_string@cont_for+1)^(0+128),w
  6376  076A  3A80               	xorlw	128
  6377  076B  00FD               	movwf	??_FLOAT_to_string
  6378  076C  0851               	movf	(FLOAT_to_string@largo_n+1)^(0+128),w
  6379  076D  3A80               	xorlw	128
  6380  076E  027D               	subwf	??_FLOAT_to_string,w
  6381  076F  1D03               	skipz
  6382  0770  0008               	return
  6383  0771  0850               	movf	FLOAT_to_string@largo_n^(0+128),w
  6384  0772  0254               	subwf	FLOAT_to_string@cont_for^(0+128),w
  6385  0773  0008               	return
  6386  0774                     __end_ofPL26:
  6387  0774                     PL30:
  6388  0774  0021               	movlb	1	; select bank1
  6389  0775  084F               	movf	(FLOAT_to_string@tempo_float+3)^(0+128),w
  6390  0776  00F7               	movwf	___fldiv@b+3
  6391  0777  084E               	movf	(FLOAT_to_string@tempo_float+2)^(0+128),w
  6392  0778  00F6               	movwf	___fldiv@b+2
  6393  0779  084D               	movf	(FLOAT_to_string@tempo_float+1)^(0+128),w
  6394  077A  00F5               	movwf	___fldiv@b+1
  6395  077B  084C               	movf	FLOAT_to_string@tempo_float^(0+128),w
  6396  077C  00F4               	movwf	___fldiv@b
  6397  077D  0008               	return
  6398  077E                     __end_ofPL30:
  6399  077E                     PL32:
  6400  077E  087C               	movf	?___xxtofl+3,w
  6401  077F  0021               	movlb	1	; select bank1
  6402  0780  00CF               	movwf	(FLOAT_to_string@tempo_float+3)^(0+128)
  6403  0781  087B               	movf	?___xxtofl+2,w
  6404  0782  00CE               	movwf	(FLOAT_to_string@tempo_float+2)^(0+128)
  6405  0783  087A               	movf	?___xxtofl+1,w
  6406  0784  00CD               	movwf	(FLOAT_to_string@tempo_float+1)^(0+128)
  6407  0785  0879               	movf	?___xxtofl,w
  6408  0786  00CC               	movwf	FLOAT_to_string@tempo_float^(0+128)
  6409  0787  0008               	return
  6410  0788                     __end_ofPL32:
  6411  0788                     PL34:
  6412  0788  087C               	movf	?___xxtofl+3,w
  6413  0789  00B1               	movwf	___flmul@a+3
  6414  078A  087B               	movf	?___xxtofl+2,w
  6415  078B  00B0               	movwf	___flmul@a+2
  6416  078C  087A               	movf	?___xxtofl+1,w
  6417  078D  00AF               	movwf	___flmul@a+1
  6418  078E  0879               	movf	?___xxtofl,w
  6419  078F  00AE               	movwf	___flmul@a
  6420  0790  0008               	return
  6421  0791                     __end_ofPL34:
  6422  0791                     PL36:
  6423  0791  082D               	movf	?___flmul+3,w
  6424  0792  00CA               	movwf	___fladd@a+3
  6425  0793  082C               	movf	?___flmul+2,w
  6426  0794  00C9               	movwf	___fladd@a+2
  6427  0795  082B               	movf	?___flmul+1,w
  6428  0796  00C8               	movwf	___fladd@a+1
  6429  0797  082A               	movf	?___flmul,w
  6430  0798  00C7               	movwf	___fladd@a
  6431  0799  0008               	return
  6432  079A                     __end_ofPL36:
  6433  079A                     PL38:
  6434  079A  082D               	movf	?___flmul+3,w
  6435  079B  00E2               	movwf	FLOAT_to_string@number+3
  6436  079C  082C               	movf	?___flmul+2,w
  6437  079D  00E1               	movwf	FLOAT_to_string@number+2
  6438  079E  082B               	movf	?___flmul+1,w
  6439  079F  00E0               	movwf	FLOAT_to_string@number+1
  6440  07A0  082A               	movf	?___flmul,w
  6441  07A1  00DF               	movwf	FLOAT_to_string@number
  6442  07A2  0008               	return
  6443  07A3                     __end_ofPL38:
  6444  07A3                     PL42:
  6445  07A3  00FA               	movwf	___xxtofl@val+1
  6446  07A4  0D89               	rlf	9,f
  6447  07A5  3B89               	subwfb	9,f
  6448  07A6  0989               	comf	9,f
  6449  07A7  00FB               	movwf	___xxtofl@val+2
  6450  07A8  00FC               	movwf	___xxtofl@val+3
  6451  07A9  3401               	retlw	1
  6452  07AA                     __end_ofPL42:
  6453  07AA                     PL48:
  6454  07AA  3041               	movlw	65
  6455  07AB  00F3               	movwf	___fldiv@a+3
  6456  07AC  3020               	movlw	32
  6457  07AD  00F2               	movwf	___fldiv@a+2
  6458  07AE  01F1               	clrf	___fldiv@a+1
  6459  07AF  01F0               	clrf	___fldiv@a
  6460  07B0  0008               	return
  6461  07B1                     __end_ofPL48:
  6462  07B1                     PL52:
  6463  07B1  0020               	movlb	0	; select bank0
  6464  07B2  0863               	movf	FLOAT_to_string@text,w
  6465  07B3  0086               	movwf	6
  6466  07B4  3030               	movlw	48
  6467  07B5  0187               	clrf	7
  6468  07B6  0081               	movwf	1
  6469  07B7  0008               	return
  6470  07B8                     __end_ofPL52:
  6471  07B8                     PL58:
  6472  07B8  3041               	movlw	65
  6473  07B9  00F7               	movwf	___flge@ff2+3
  6474  07BA  3020               	movlw	32
  6475  07BB  00F6               	movwf	___flge@ff2+2
  6476  07BC  01F5               	clrf	___flge@ff2+1
  6477  07BD  01F4               	clrf	___flge@ff2
  6478  07BE  0008               	return
  6479  07BF                     __end_ofPL58:
  6480  07BF                     PL60:
  6481  07BF  3080               	movlw	128
  6482  07C0  01F8               	clrf	??___flge
  6483  07C1  01F9               	clrf	??___flge+1
  6484  07C2  01FA               	clrf	??___flge+2
  6485  07C3  00FB               	movwf	??___flge+3
  6486  07C4  0008               	return
  6487  07C5                     __end_ofPL60:
  6488  07C5                     PL62:
  6489  07C5  0842               	movf	___flmul@temp+1,w
  6490  07C6  3A80               	xorlw	128
  6491  07C7  00B2               	movwf	??___flmul
  6492  07C8  3080               	movlw	128
  6493  07C9  0232               	subwf	??___flmul,w
  6494  07CA  0008               	return
  6495  07CB                     __end_ofPL62:
  6496  07CB                     PL64:
  6497  07CB  01A6               	clrf	___fldiv@new_exp+1
  6498  07CC  01F4               	clrf	___fldiv@b
  6499  07CD  01F5               	clrf	___fldiv@b+1
  6500  07CE  01F6               	clrf	___fldiv@b+2
  6501  07CF  01F7               	clrf	___fldiv@b+3
  6502  07D0  0008               	return
  6503  07D1                     __end_ofPL64:
  6504  07D1                     PL66:
  6505  07D1  0826               	movf	___fldiv@new_exp+1,w
  6506  07D2  3A80               	xorlw	128
  6507  07D3  00F8               	movwf	??___fldiv
  6508  07D4  3080               	movlw	128
  6509  07D5  0278               	subwf	??___fldiv,w
  6510  07D6  0008               	return
  6511  07D7                     __end_ofPL66:
  6512  07D7                     PL72:
  6513  07D7  01AE               	clrf	___flmul@a
  6514  07D8  01AF               	clrf	___flmul@a+1
  6515  07D9  01B0               	clrf	___flmul@a+2
  6516  07DA  01B1               	clrf	___flmul@a+3
  6517  07DB  0008               	return
  6518  07DC                     __end_ofPL72:
  6519  07DC                     PL74:
  6520  07DC  01AA               	clrf	___flmul@b
  6521  07DD  01AB               	clrf	___flmul@b+1
  6522  07DE  01AC               	clrf	___flmul@b+2
  6523  07DF  01AD               	clrf	___flmul@b+3
  6524  07E0  0008               	return
  6525  07E1                     __end_ofPL74:
  6526  07E1                     PL76:
  6527  07E1  36A9               	lsrf	___xxtofl@arg+3,f
  6528  07E2  0CA8               	rrf	___xxtofl@arg+2,f
  6529  07E3  0CA7               	rrf	___xxtofl@arg+1,f
  6530  07E4  0CA6               	rrf	___xxtofl@arg,f
  6531  07E5  0008               	return
  6532  07E6                     __end_ofPL76:
  6533  07E6                     PL78:
  6534  07E6  01F4               	clrf	___flge@ff2
  6535  07E7  01F5               	clrf	___flge@ff2+1
  6536  07E8  01F6               	clrf	___flge@ff2+2
  6537  07E9  01F7               	clrf	___flge@ff2+3
  6538  07EA  0008               	return
  6539  07EB                     __end_ofPL78:
  6540  07EB                     __ptext23:	
  6541 ;; *************** function ___wmul *****************
  6542 ;; Defined at:
  6543 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  6544 ;; Parameters:    Size  Location     Type
  6545 ;;  multiplier      2    0[COMMON] unsigned int 
  6546 ;;  multiplicand    2    2[COMMON] unsigned int 
  6547 ;; Auto vars:     Size  Location     Type
  6548 ;;  product         2    4[COMMON] unsigned int 
  6549 ;; Return value:  Size  Location     Type
  6550 ;;                  2    0[COMMON] unsigned int 
  6551 ;; Registers used:
  6552 ;;		wreg, status,2, status,0
  6553 ;; Tracked objects:
  6554 ;;		On entry : 1F/1
  6555 ;;		On exit  : 1F/1
  6556 ;;		Unchanged: 1F/0
  6557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6558 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6559 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6561 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6562 ;;Total ram usage:        6 bytes
  6563 ;; Hardware stack levels used: 1
  6564 ;; This function calls:
  6565 ;;		Nothing
  6566 ;; This function is called by:
  6567 ;;		_sensorPlaca
  6568 ;; This function uses a non-reentrant model
  6569 ;;
  6570                           
  6571                           
  6572                           ;psect for function ___wmul
  6573  07EB                     ___wmul:
  6574                           
  6575                           ;incstack = 0
  6576                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6577  07EB  01F4               	clrf	___wmul@product
  6578  07EC  01F5               	clrf	___wmul@product+1
  6579  07ED                     l3063:
  6580  07ED  1C70               	btfss	___wmul@multiplier,0
  6581  07EE  2FF3               	goto	l3067
  6582  07EF  0872               	movf	___wmul@multiplicand,w
  6583  07F0  07F4               	addwf	___wmul@product,f
  6584  07F1  0873               	movf	___wmul@multiplicand+1,w
  6585  07F2  3DF5               	addwfc	___wmul@product+1,f
  6586  07F3                     l3067:
  6587  07F3  35F2               	lslf	___wmul@multiplicand,f
  6588  07F4  0DF3               	rlf	___wmul@multiplicand+1,f
  6589  07F5  36F1               	lsrf	___wmul@multiplier+1,f
  6590  07F6  0CF0               	rrf	___wmul@multiplier,f
  6591  07F7  0870               	movf	___wmul@multiplier,w
  6592  07F8  0471               	iorwf	___wmul@multiplier+1,w
  6593  07F9  1D03               	btfss	3,2
  6594  07FA  2FED               	goto	l3063
  6595  07FB  0875               	movf	___wmul@product+1,w
  6596  07FC  00F1               	movwf	?___wmul+1
  6597  07FD  0874               	movf	___wmul@product,w
  6598  07FE  00F0               	movwf	?___wmul
  6599  07FF  0008               	return
  6600  0800                     __end_of___wmul:
  6601                           
  6602                           	psect	bssBANK1
  6603  00A0                     __pbssBANK1:
  6604  00A0                     _nout:
  6605  00A0                     	ds	2
  6606  00A2                     _width:
  6607  00A2                     	ds	2
  6608  00A4                     _prec:
  6609  00A4                     	ds	2
  6610  00A6                     _flags:
  6611  00A6                     	ds	2
  6612  00A8                     _low_byte:
  6613  00A8                     	ds	1
  6614  00A9                     _high_byte:
  6615  00A9                     	ds	1
  6616  00AA                     _dbuf:
  6617  00AA                     	ds	32
  6618                           
  6619                           	psect	dataBANK1
  6620  00E2                     __pdataBANK1:
  6621  00E2                     stoa@F1141:
  6622  00E2                     	ds	7
  6623                           
  6624                           	psect	clrtext
  6625  0024                     clear_ram0:	
  6626                           ;	Called with FSR0 containing the base address, and
  6627                           ;	WREG with the size to clear
  6628                           
  6629  0024  0064               	clrwdt	;clear the watchdog before getting into this loop
  6630  0025                     clrloop0:
  6631  0025  0180               	clrf	0	;clear RAM location pointed to by FSR
  6632  0026  3101               	addfsr 0,1
  6633  0027  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  6634  0028  2825               	goto	clrloop0	;have we reached the end yet?
  6635  0029  3400               	retlw	0	;all done for this memory range, return
  6636                           
  6637                           	psect	cstackBANK1
  6638  00CA                     __pcstackBANK1:
  6639  00CA                     ?_printf:
  6640  00CA                     FLOAT_to_string@tempo_int:	
  6641                           ; 2 bytes @ 0x0
  6642                           
  6643  00CA                     printf@fmt:	
  6644                           ; 2 bytes @ 0x0
  6645                           
  6646                           
  6647                           ; 2 bytes @ 0x0
  6648  00CA                     	ds	2
  6649  00CC                     FLOAT_to_string@tempo_float:
  6650                           
  6651                           ; 4 bytes @ 0x2
  6652  00CC                     	ds	4
  6653  00D0                     FLOAT_to_string@largo_n:
  6654                           
  6655                           ; 2 bytes @ 0x6
  6656  00D0                     	ds	2
  6657  00D2                     FLOAT_to_string@largo_entera:
  6658                           
  6659                           ; 2 bytes @ 0x8
  6660  00D2                     	ds	2
  6661  00D4                     FLOAT_to_string@cont_for:
  6662                           
  6663                           ; 2 bytes @ 0xA
  6664  00D4                     	ds	2
  6665  00D6                     main@buffer:
  6666                           
  6667                           ; 8 bytes @ 0xC
  6668  00D6                     	ds	8
  6669  00DE                     main@temp:
  6670                           
  6671                           ; 4 bytes @ 0x14
  6672  00DE                     	ds	4
  6673                           
  6674                           	psect	cstackCOMMON
  6675  0070                     __pcstackCOMMON:
  6676  0070                     ?___flge:
  6677  0070                     ?_port_init:	
  6678                           ; 1 bit 
  6679                           
  6680  0070                     ??_port_init:	
  6681                           ; 1 bytes @ 0x0
  6682                           
  6683  0070                     ?_adc_init:	
  6684                           ; 1 bytes @ 0x0
  6685                           
  6686  0070                     ??_adc_init:	
  6687                           ; 1 bytes @ 0x0
  6688                           
  6689  0070                     ?_i2c_init:	
  6690                           ; 1 bytes @ 0x0
  6691                           
  6692  0070                     ??_i2c_init:	
  6693                           ; 1 bytes @ 0x0
  6694                           
  6695  0070                     ?_sensorPlaca:	
  6696                           ; 1 bytes @ 0x0
  6697                           
  6698  0070                     ?_i2c_start:	
  6699                           ; 1 bytes @ 0x0
  6700                           
  6701  0070                     ??_i2c_start:	
  6702                           ; 1 bytes @ 0x0
  6703                           
  6704  0070                     ?_i2c_write:	
  6705                           ; 1 bytes @ 0x0
  6706                           
  6707  0070                     ??_i2c_write:	
  6708                           ; 1 bytes @ 0x0
  6709                           
  6710  0070                     ?_i2c_restart:	
  6711                           ; 1 bytes @ 0x0
  6712                           
  6713  0070                     ??_i2c_restart:	
  6714                           ; 1 bytes @ 0x0
  6715                           
  6716  0070                     ?_i2c_read:	
  6717                           ; 1 bytes @ 0x0
  6718                           
  6719  0070                     ??_i2c_read:	
  6720                           ; 1 bytes @ 0x0
  6721                           
  6722  0070                     ?_i2c_stop:	
  6723                           ; 1 bytes @ 0x0
  6724                           
  6725  0070                     ??_i2c_stop:	
  6726                           ; 1 bytes @ 0x0
  6727                           
  6728  0070                     ?_i2c_ack:	
  6729                           ; 1 bytes @ 0x0
  6730                           
  6731  0070                     ??_i2c_ack:	
  6732                           ; 1 bytes @ 0x0
  6733                           
  6734  0070                     ?_i2c_nack:	
  6735                           ; 1 bytes @ 0x0
  6736                           
  6737  0070                     ??_i2c_nack:	
  6738                           ; 1 bytes @ 0x0
  6739                           
  6740  0070                     ?_main:	
  6741                           ; 1 bytes @ 0x0
  6742                           
  6743  0070                     ?_uart_tx:	
  6744                           ; 1 bytes @ 0x0
  6745                           
  6746  0070                     ??_uart_tx:	
  6747                           ; 1 bytes @ 0x0
  6748                           
  6749  0070                     ?_putch:	
  6750                           ; 1 bytes @ 0x0
  6751                           
  6752  0070                     ??___aodiv:	
  6753                           ; 1 bytes @ 0x0
  6754                           
  6755  0070                     ??___aomod:	
  6756                           ; 1 bytes @ 0x0
  6757                           
  6758  0070                     ?__Umul8_16:	
  6759                           ; 1 bytes @ 0x0
  6760                           
  6761  0070                     ?_strlen:	
  6762                           ; 2 bytes @ 0x0
  6763                           
  6764  0070                     ?_isupper:	
  6765                           ; 2 bytes @ 0x0
  6766                           
  6767  0070                     ?_isalpha:	
  6768                           ; 2 bytes @ 0x0
  6769                           
  6770  0070                     ?_islower:	
  6771                           ; 2 bytes @ 0x0
  6772                           
  6773  0070                     ?___wmul:	
  6774                           ; 2 bytes @ 0x0
  6775                           
  6776  0070                     ?___lldiv:	
  6777                           ; 2 bytes @ 0x0
  6778                           
  6779  0070                     ?___flneg:	
  6780                           ; 4 bytes @ 0x0
  6781                           
  6782  0070                     ?___fltol:	
  6783                           ; 4 bytes @ 0x0
  6784                           
  6785  0070                     ?___fldiv:	
  6786                           ; 4 bytes @ 0x0
  6787                           
  6788  0070                     i2c_read@ack:	
  6789                           ; 4 bytes @ 0x0
  6790                           
  6791  0070                     i2c_write@I2C_data:	
  6792                           ; 1 bytes @ 0x0
  6793                           
  6794  0070                     __Umul8_16@multiplicand:	
  6795                           ; 1 bytes @ 0x0
  6796                           
  6797  0070                     ___wmul@multiplier:	
  6798                           ; 1 bytes @ 0x0
  6799                           
  6800  0070                     isalpha@c:	
  6801                           ; 2 bytes @ 0x0
  6802                           
  6803  0070                     isupper@c:	
  6804                           ; 2 bytes @ 0x0
  6805                           
  6806  0070                     islower@c:	
  6807                           ; 2 bytes @ 0x0
  6808                           
  6809  0070                     ___lldiv@divisor:	
  6810                           ; 2 bytes @ 0x0
  6811                           
  6812  0070                     ___flge@ff1:	
  6813                           ; 4 bytes @ 0x0
  6814                           
  6815  0070                     ___flneg@f1:	
  6816                           ; 4 bytes @ 0x0
  6817                           
  6818  0070                     ___fltol@f1:	
  6819                           ; 4 bytes @ 0x0
  6820                           
  6821  0070                     ___fldiv@a:	
  6822                           ; 4 bytes @ 0x0
  6823                           
  6824                           
  6825                           ; 4 bytes @ 0x0
  6826  0070                     	ds	1
  6827  0071                     ?_MLX90614_ReadReg:
  6828  0071                     uart_tx@dato:	
  6829                           ; 2 bytes @ 0x1
  6830                           
  6831  0071                     ___aodiv@counter:	
  6832                           ; 1 bytes @ 0x1
  6833                           
  6834  0071                     ___aomod@counter:	
  6835                           ; 1 bytes @ 0x1
  6836                           
  6837                           
  6838                           ; 1 bytes @ 0x1
  6839  0071                     	ds	1
  6840  0072                     ??__Umul8_16:
  6841  0072                     ??_strlen:	
  6842                           ; 1 bytes @ 0x2
  6843                           
  6844  0072                     ??_isupper:	
  6845                           ; 1 bytes @ 0x2
  6846                           
  6847  0072                     ??_isalpha:	
  6848                           ; 1 bytes @ 0x2
  6849                           
  6850  0072                     ??_islower:	
  6851                           ; 1 bytes @ 0x2
  6852                           
  6853  0072                     ??_putch:	
  6854                           ; 1 bytes @ 0x2
  6855                           
  6856  0072                     putch@dato:	
  6857                           ; 1 bytes @ 0x2
  6858                           
  6859  0072                     ___aodiv@sign:	
  6860                           ; 1 bytes @ 0x2
  6861                           
  6862  0072                     ___aomod@sign:	
  6863                           ; 1 bytes @ 0x2
  6864                           
  6865  0072                     strlen@a:	
  6866                           ; 1 bytes @ 0x2
  6867                           
  6868  0072                     ___wmul@multiplicand:	
  6869                           ; 1 bytes @ 0x2
  6870                           
  6871  0072                     __Umul8_16@product:	
  6872                           ; 2 bytes @ 0x2
  6873                           
  6874                           
  6875                           ; 2 bytes @ 0x2
  6876  0072                     	ds	1
  6877  0073                     ??_MLX90614_ReadReg:
  6878  0073                     ?_fputc:	
  6879                           ; 1 bytes @ 0x3
  6880                           
  6881  0073                     ?_abs:	
  6882                           ; 2 bytes @ 0x3
  6883                           
  6884  0073                     strlen@s:	
  6885                           ; 2 bytes @ 0x3
  6886                           
  6887  0073                     abs@a:	
  6888                           ; 1 bytes @ 0x3
  6889                           
  6890  0073                     fputc@c:	
  6891                           ; 2 bytes @ 0x3
  6892                           
  6893  0073                     ___aodiv@quotient:	
  6894                           ; 2 bytes @ 0x3
  6895                           
  6896                           
  6897                           ; 8 bytes @ 0x3
  6898  0073                     	ds	1
  6899  0074                     ??___wmul:
  6900  0074                     ??___flneg:	
  6901                           ; 1 bytes @ 0x4
  6902                           
  6903  0074                     ??___fltol:	
  6904                           ; 1 bytes @ 0x4
  6905                           
  6906  0074                     ?_toupper:	
  6907                           ; 1 bytes @ 0x4
  6908                           
  6909  0074                     ___wmul@product:	
  6910                           ; 2 bytes @ 0x4
  6911                           
  6912  0074                     __Umul8_16@word_mpld:	
  6913                           ; 2 bytes @ 0x4
  6914                           
  6915  0074                     toupper@c:	
  6916                           ; 2 bytes @ 0x4
  6917                           
  6918  0074                     ___lldiv@dividend:	
  6919                           ; 2 bytes @ 0x4
  6920                           
  6921  0074                     ___flge@ff2:	
  6922                           ; 4 bytes @ 0x4
  6923                           
  6924  0074                     ___fldiv@b:	
  6925                           ; 4 bytes @ 0x4
  6926                           
  6927                           
  6928                           ; 4 bytes @ 0x4
  6929  0074                     	ds	1
  6930  0075                     ??_abs:
  6931  0075                     fputc@fp:	
  6932                           ; 1 bytes @ 0x5
  6933                           
  6934                           
  6935                           ; 1 bytes @ 0x5
  6936  0075                     	ds	1
  6937  0076                     ??_fputc:
  6938  0076                     ??_toupper:	
  6939                           ; 1 bytes @ 0x6
  6940                           
  6941  0076                     MLX90614_ReadReg@reg:	
  6942                           ; 1 bytes @ 0x6
  6943                           
  6944  0076                     __Umul8_16@multiplier:	
  6945                           ; 1 bytes @ 0x6
  6946                           
  6947                           
  6948                           ; 1 bytes @ 0x6
  6949  0076                     	ds	1
  6950  0077                     MLX90614_ReadReg@valReg:
  6951                           
  6952                           ; 2 bytes @ 0x7
  6953  0077                     	ds	1
  6954  0078                     ??___lldiv:
  6955  0078                     ??___flge:	
  6956                           ; 1 bytes @ 0x8
  6957                           
  6958  0078                     ??___fldiv:	
  6959                           ; 1 bytes @ 0x8
  6960                           
  6961  0078                     ___fltol@sign1:	
  6962                           ; 1 bytes @ 0x8
  6963                           
  6964  0078                     _toupper$1027:	
  6965                           ; 1 bytes @ 0x8
  6966                           
  6967  0078                     ___lldiv@quotient:	
  6968                           ; 2 bytes @ 0x8
  6969                           
  6970                           
  6971                           ; 4 bytes @ 0x8
  6972  0078                     	ds	1
  6973  0079                     ?___xxtofl:
  6974  0079                     ___fltol@exp1:	
  6975                           ; 4 bytes @ 0x9
  6976                           
  6977  0079                     ___xxtofl@val:	
  6978                           ; 1 bytes @ 0x9
  6979                           
  6980                           
  6981                           ; 4 bytes @ 0x9
  6982  0079                     	ds	2
  6983  007B                     ?_fputs:
  6984  007B                     ?_stoa:	
  6985                           ; 2 bytes @ 0xB
  6986                           
  6987  007B                     stoa@s:	
  6988                           ; 2 bytes @ 0xB
  6989                           
  6990  007B                     fputs@fp:	
  6991                           ; 1 bytes @ 0xB
  6992                           
  6993                           
  6994                           ; 1 bytes @ 0xB
  6995  007B                     	ds	1
  6996  007C                     ??_fputs:
  6997  007C                     ___lldiv@counter:	
  6998                           ; 1 bytes @ 0xC
  6999                           
  7000                           
  7001                           ; 1 bytes @ 0xC
  7002  007C                     	ds	1
  7003  007D                     ??_FLOAT_to_string:
  7004  007D                     ??___flsub:	
  7005                           ; 1 bytes @ 0xD
  7006                           
  7007  007D                     ??_pad:	
  7008                           ; 1 bytes @ 0xD
  7009                           
  7010  007D                     ??_stoa:	
  7011                           ; 1 bytes @ 0xD
  7012                           
  7013                           
  7014                           ; 1 bytes @ 0xD
  7015  007D                     	ds	1
  7016  007E                     ??_printf:
  7017  007E                     ??_sensorPlaca:	
  7018                           ; 1 bytes @ 0xE
  7019                           
  7020                           
  7021                           	psect	cstackBANK0
  7022  0020                     __pcstackBANK0:	
  7023                           ; 1 bytes @ 0xE
  7024                           
  7025  0020                     ?_serial_init:
  7026  0020                     ??___xxtofl:	
  7027                           ; 1 bytes @ 0x0
  7028                           
  7029  0020                     ?___aodiv:	
  7030                           ; 1 bytes @ 0x0
  7031                           
  7032  0020                     ?___aomod:	
  7033                           ; 8 bytes @ 0x0
  7034                           
  7035  0020                     fputs@c:	
  7036                           ; 8 bytes @ 0x0
  7037                           
  7038  0020                     serial_init@baudios:	
  7039                           ; 1 bytes @ 0x0
  7040                           
  7041  0020                     ___fldiv@rem:	
  7042                           ; 4 bytes @ 0x0
  7043                           
  7044  0020                     stoa@nuls:	
  7045                           ; 4 bytes @ 0x0
  7046                           
  7047  0020                     ___aodiv@divisor:	
  7048                           ; 7 bytes @ 0x0
  7049                           
  7050  0020                     ___aomod@divisor:	
  7051                           ; 8 bytes @ 0x0
  7052                           
  7053                           
  7054                           ; 8 bytes @ 0x0
  7055  0020                     	ds	1
  7056  0021                     fputs@i:
  7057                           
  7058                           ; 2 bytes @ 0x1
  7059  0021                     	ds	2
  7060  0023                     fputs@s:
  7061                           
  7062                           ; 1 bytes @ 0x3
  7063  0023                     	ds	1
  7064  0024                     ??_serial_init:
  7065  0024                     ?_pad:	
  7066                           ; 1 bytes @ 0x4
  7067                           
  7068  0024                     ___fldiv@sign:	
  7069                           ; 2 bytes @ 0x4
  7070                           
  7071  0024                     ___xxtofl@sign:	
  7072                           ; 1 bytes @ 0x4
  7073                           
  7074  0024                     pad@buf:	
  7075                           ; 1 bytes @ 0x4
  7076                           
  7077                           
  7078                           ; 1 bytes @ 0x4
  7079  0024                     	ds	1
  7080  0025                     ___xxtofl@exp:
  7081  0025                     ___fldiv@new_exp:	
  7082                           ; 1 bytes @ 0x5
  7083                           
  7084  0025                     pad@p:	
  7085                           ; 2 bytes @ 0x5
  7086                           
  7087                           
  7088                           ; 2 bytes @ 0x5
  7089  0025                     	ds	1
  7090  0026                     ___xxtofl@arg:
  7091                           
  7092                           ; 4 bytes @ 0x6
  7093  0026                     	ds	1
  7094  0027                     pad@i:
  7095  0027                     stoa@i:	
  7096                           ; 2 bytes @ 0x7
  7097                           
  7098  0027                     ___fldiv@grs:	
  7099                           ; 2 bytes @ 0x7
  7100                           
  7101                           
  7102                           ; 4 bytes @ 0x7
  7103  0027                     	ds	1
  7104  0028                     serial_init@sx:
  7105  0028                     ___aodiv@dividend:	
  7106                           ; 2 bytes @ 0x8
  7107                           
  7108  0028                     ___aomod@dividend:	
  7109                           ; 8 bytes @ 0x8
  7110                           
  7111                           
  7112                           ; 8 bytes @ 0x8
  7113  0028                     	ds	1
  7114  0029                     pad@w:
  7115  0029                     stoa@w:	
  7116                           ; 2 bytes @ 0x9
  7117                           
  7118                           
  7119                           ; 2 bytes @ 0x9
  7120  0029                     	ds	1
  7121  002A                     ?___flmul:
  7122  002A                     ___flmul@b:	
  7123                           ; 4 bytes @ 0xA
  7124                           
  7125                           
  7126                           ; 4 bytes @ 0xA
  7127  002A                     	ds	1
  7128  002B                     ___fldiv@bexp:
  7129  002B                     pad@fp:	
  7130                           ; 1 bytes @ 0xB
  7131                           
  7132  002B                     stoa@fp:	
  7133                           ; 1 bytes @ 0xB
  7134                           
  7135                           
  7136                           ; 1 bytes @ 0xB
  7137  002B                     	ds	1
  7138  002C                     ?_xtoa:
  7139  002C                     ___fldiv@aexp:	
  7140                           ; 2 bytes @ 0xC
  7141                           
  7142  002C                     stoa@cp:	
  7143                           ; 1 bytes @ 0xC
  7144                           
  7145  002C                     xtoa@d:	
  7146                           ; 1 bytes @ 0xC
  7147                           
  7148                           
  7149                           ; 8 bytes @ 0xC
  7150  002C                     	ds	1
  7151  002D                     stoa@p:
  7152                           
  7153                           ; 2 bytes @ 0xD
  7154  002D                     	ds	1
  7155  002E                     ___flmul@a:
  7156                           
  7157                           ; 4 bytes @ 0xE
  7158  002E                     	ds	1
  7159  002F                     stoa@l:
  7160                           
  7161                           ; 2 bytes @ 0xF
  7162  002F                     	ds	1
  7163  0030                     ?_dtoa:
  7164  0030                     dtoa@d:	
  7165                           ; 2 bytes @ 0x10
  7166                           
  7167                           
  7168                           ; 8 bytes @ 0x10
  7169  0030                     	ds	2
  7170  0032                     ??___flmul:
  7171                           
  7172                           ; 1 bytes @ 0x12
  7173  0032                     	ds	2
  7174  0034                     xtoa@x:
  7175                           
  7176                           ; 1 bytes @ 0x14
  7177  0034                     	ds	1
  7178  0035                     ??_xtoa:
  7179                           
  7180                           ; 1 bytes @ 0x15
  7181  0035                     	ds	1
  7182  0036                     ___flmul@sign:
  7183                           
  7184                           ; 1 bytes @ 0x16
  7185  0036                     	ds	1
  7186  0037                     ___flmul@aexp:
  7187                           
  7188                           ; 1 bytes @ 0x17
  7189  0037                     	ds	1
  7190  0038                     ??_dtoa:
  7191  0038                     ___flmul@grs:	
  7192                           ; 1 bytes @ 0x18
  7193                           
  7194                           
  7195                           ; 4 bytes @ 0x18
  7196  0038                     	ds	1
  7197  0039                     _dtoa$926:
  7198  0039                     _xtoa$947:	
  7199                           ; 2 bytes @ 0x19
  7200                           
  7201                           
  7202                           ; 2 bytes @ 0x19
  7203  0039                     	ds	2
  7204  003B                     dtoa@p:
  7205  003B                     _xtoa$948:	
  7206                           ; 2 bytes @ 0x1B
  7207                           
  7208                           
  7209                           ; 2 bytes @ 0x1B
  7210  003B                     	ds	1
  7211  003C                     ___flmul@bexp:
  7212                           
  7213                           ; 1 bytes @ 0x1C
  7214  003C                     	ds	1
  7215  003D                     dtoa@fp:
  7216  003D                     xtoa@p:	
  7217                           ; 1 bytes @ 0x1D
  7218                           
  7219  003D                     ___flmul@prod:	
  7220                           ; 2 bytes @ 0x1D
  7221                           
  7222                           
  7223                           ; 4 bytes @ 0x1D
  7224  003D                     	ds	1
  7225  003E                     dtoa@w:
  7226                           
  7227                           ; 2 bytes @ 0x1E
  7228  003E                     	ds	1
  7229  003F                     xtoa@fp:
  7230                           
  7231                           ; 1 bytes @ 0x1F
  7232  003F                     	ds	1
  7233  0040                     dtoa@s:
  7234  0040                     xtoa@n:	
  7235                           ; 2 bytes @ 0x20
  7236                           
  7237                           
  7238                           ; 8 bytes @ 0x20
  7239  0040                     	ds	1
  7240  0041                     ___flmul@temp:
  7241                           
  7242                           ; 2 bytes @ 0x21
  7243  0041                     	ds	1
  7244  0042                     dtoa@n:
  7245                           
  7246                           ; 8 bytes @ 0x22
  7247  0042                     	ds	1
  7248  0043                     ?___fladd:
  7249  0043                     ___fladd@b:	
  7250                           ; 4 bytes @ 0x23
  7251                           
  7252                           
  7253                           ; 4 bytes @ 0x23
  7254  0043                     	ds	4
  7255  0047                     ___fladd@a:
  7256                           
  7257                           ; 4 bytes @ 0x27
  7258  0047                     	ds	1
  7259  0048                     xtoa@w:
  7260                           
  7261                           ; 2 bytes @ 0x28
  7262  0048                     	ds	2
  7263  004A                     dtoa@i:
  7264  004A                     xtoa@c:	
  7265                           ; 2 bytes @ 0x2A
  7266                           
  7267                           
  7268                           ; 2 bytes @ 0x2A
  7269  004A                     	ds	1
  7270  004B                     ??___fladd:
  7271                           
  7272                           ; 1 bytes @ 0x2B
  7273  004B                     	ds	1
  7274  004C                     xtoa@i:
  7275                           
  7276                           ; 2 bytes @ 0x2C
  7277  004C                     	ds	2
  7278  004E                     ?_vfpfcnvrt:
  7279  004E                     vfpfcnvrt@fmt:	
  7280                           ; 2 bytes @ 0x2E
  7281                           
  7282                           
  7283                           ; 1 bytes @ 0x2E
  7284  004E                     	ds	1
  7285  004F                     vfpfcnvrt@ap:
  7286                           
  7287                           ; 1 bytes @ 0x2F
  7288  004F                     	ds	1
  7289  0050                     ??_vfpfcnvrt:
  7290                           
  7291                           ; 1 bytes @ 0x30
  7292  0050                     	ds	3
  7293  0053                     ___fladd@signs:
  7294  0053                     vfpfcnvrt@ll:	
  7295                           ; 1 bytes @ 0x33
  7296                           
  7297                           
  7298                           ; 8 bytes @ 0x33
  7299  0053                     	ds	1
  7300  0054                     ___fladd@aexp:
  7301                           
  7302                           ; 1 bytes @ 0x34
  7303  0054                     	ds	1
  7304  0055                     ___fladd@bexp:
  7305                           
  7306                           ; 1 bytes @ 0x35
  7307  0055                     	ds	1
  7308  0056                     ___fladd@grs:
  7309                           
  7310                           ; 1 bytes @ 0x36
  7311  0056                     	ds	1
  7312  0057                     ?_MLX90614_readAmbientTempC:
  7313  0057                     ?_MLX90614_readObjectTempC:	
  7314                           ; 4 bytes @ 0x37
  7315                           
  7316  0057                     ?___flsub:	
  7317                           ; 4 bytes @ 0x37
  7318                           
  7319  0057                     ___flsub@a:	
  7320                           ; 4 bytes @ 0x37
  7321                           
  7322                           
  7323                           ; 4 bytes @ 0x37
  7324  0057                     	ds	4
  7325  005B                     ??_MLX90614_readAmbientTempC:
  7326  005B                     ??_MLX90614_readObjectTempC:	
  7327                           ; 1 bytes @ 0x3B
  7328                           
  7329  005B                     ___flsub@b:	
  7330                           ; 1 bytes @ 0x3B
  7331                           
  7332  005B                     vfpfcnvrt@llu:	
  7333                           ; 4 bytes @ 0x3B
  7334                           
  7335                           
  7336                           ; 8 bytes @ 0x3B
  7337  005B                     	ds	4
  7338  005F                     ?_FLOAT_to_string:
  7339  005F                     FLOAT_to_string@number:	
  7340                           ; 1 bytes @ 0x3F
  7341                           
  7342                           
  7343                           ; 4 bytes @ 0x3F
  7344  005F                     	ds	4
  7345  0063                     FLOAT_to_string@text:
  7346  0063                     vfpfcnvrt@c:	
  7347                           ; 1 bytes @ 0x43
  7348                           
  7349                           
  7350                           ; 1 bytes @ 0x43
  7351  0063                     	ds	1
  7352  0064                     FLOAT_to_string@decimal:
  7353  0064                     vfpfcnvrt@cp:	
  7354                           ; 1 bytes @ 0x44
  7355                           
  7356                           
  7357                           ; 1 bytes @ 0x44
  7358  0064                     	ds	1
  7359  0065                     vfpfcnvrt@fp:
  7360                           
  7361                           ; 1 bytes @ 0x45
  7362  0065                     	ds	1
  7363  0066                     ?_vfprintf:
  7364  0066                     vfprintf@fmt:	
  7365                           ; 2 bytes @ 0x46
  7366                           
  7367                           
  7368                           ; 2 bytes @ 0x46
  7369  0066                     	ds	2
  7370  0068                     vfprintf@ap:
  7371                           
  7372                           ; 1 bytes @ 0x48
  7373  0068                     	ds	1
  7374  0069                     ??_vfprintf:
  7375                           
  7376                           ; 1 bytes @ 0x49
  7377  0069                     	ds	1
  7378  006A                     vfprintf@fp:
  7379                           
  7380                           ; 1 bytes @ 0x4A
  7381  006A                     	ds	1
  7382  006B                     vfprintf@cfmt:
  7383                           
  7384                           ; 2 bytes @ 0x4B
  7385  006B                     	ds	2
  7386  006D                     printf@ap:
  7387                           
  7388                           ; 1 bytes @ 0x4D
  7389  006D                     	ds	1
  7390  006E                     ??_main:
  7391                           
  7392                           ; 1 bytes @ 0x4E
  7393  006E                     	ds	2
  7394                           
  7395                           	psect	text1
  7396  177C                     __ptext1:	
  7397 ;; *************** function _serial_init *****************
  7398 ;; Defined at:
  7399 ;;		line 4 in file "uart.c"
  7400 ;; Parameters:    Size  Location     Type
  7401 ;;  baudios         4    0[BANK0 ] unsigned long 
  7402 ;; Auto vars:     Size  Location     Type
  7403 ;;  sx              2    8[BANK0 ] unsigned short 
  7404 ;; Return value:  Size  Location     Type
  7405 ;;                  1    wreg      void 
  7406 ;; Registers used:
  7407 ;;		wreg, status,2, status,0, pclath, cstack
  7408 ;; Tracked objects:
  7409 ;;		On entry : B1F/0
  7410 ;;		On exit  : B1F/1E
  7411 ;;		Unchanged: B00/0
  7412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7413 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7414 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7415 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7416 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7417 ;;Total ram usage:       10 bytes
  7418 ;; Hardware stack levels used: 1
  7419 ;; Hardware stack levels required when called: 1
  7420 ;; This function calls:
  7421 ;;		___lldiv
  7422 ;; This function is called by:
  7423 ;;		_main
  7424 ;; This function uses a non-reentrant model
  7425 ;;
  7426                           
  7427                           
  7428                           ;psect for function _serial_init
  7429  177C                     _serial_init:
  7430                           
  7431                           ;uart.c: 5:     uint16_t sx;;uart.c: 8:     BAUD1CON = 0x08;
  7432                           
  7433                           ;incstack = 0
  7434                           ; Regs used in _serial_init: [wreg+status,2+status,0+pclath+cstack]
  7435  177C  3008               	movlw	8
  7436  177D  0022               	movlb	2	; select bank2
  7437  177E  009F               	movwf	31	;volatile
  7438                           
  7439                           ;uart.c: 10:     RC1STA = 0b10010000;
  7440  177F  3090               	movlw	144
  7441  1780  009D               	movwf	29	;volatile
  7442                           
  7443                           ;uart.c: 16:     TX1STA = 0b00100100;
  7444  1781  3024               	movlw	36
  7445  1782  009E               	movwf	30	;volatile
  7446                           
  7447                           ;uart.c: 21:     sx = (uint16_t) (((32000000UL/baudios)/4 ) - 1 );
  7448  1783  0020               	movlb	0	; select bank0
  7449  1784  0823               	movf	serial_init@baudios+3,w
  7450  1785  00F3               	movwf	___lldiv@divisor+3
  7451  1786  0822               	movf	serial_init@baudios+2,w
  7452  1787  00F2               	movwf	___lldiv@divisor+2
  7453  1788  0821               	movf	serial_init@baudios+1,w
  7454  1789  00F1               	movwf	___lldiv@divisor+1
  7455  178A  0820               	movf	serial_init@baudios,w
  7456  178B  00F0               	movwf	___lldiv@divisor
  7457  178C  3001               	movlw	1
  7458  178D  00F7               	movwf	___lldiv@dividend+3
  7459  178E  30E8               	movlw	232
  7460  178F  00F6               	movwf	___lldiv@dividend+2
  7461  1790  3048               	movlw	72
  7462  1791  00F5               	movwf	___lldiv@dividend+1
  7463  1792  01F4               	clrf	___lldiv@dividend
  7464  1793  27C1  3197         	fcall	___lldiv
  7465  1795  0870               	movf	?___lldiv,w
  7466  1796  00A4               	movwf	??_serial_init
  7467  1797  0871               	movf	?___lldiv+1,w
  7468  1798  00A5               	movwf	??_serial_init+1
  7469  1799  0872               	movf	?___lldiv+2,w
  7470  179A  00A6               	movwf	??_serial_init+2
  7471  179B  0873               	movf	?___lldiv+3,w
  7472  179C  00A7               	movwf	??_serial_init+3
  7473  179D  3002               	movlw	2
  7474  179E                     u4415:
  7475  179E  36A7               	lsrf	??_serial_init+3,f
  7476  179F  0CA6               	rrf	??_serial_init+2,f
  7477  17A0  0CA5               	rrf	??_serial_init+1,f
  7478  17A1  0CA4               	rrf	??_serial_init,f
  7479  17A2  0B89               	decfsz	9,f
  7480  17A3  2F9E               	goto	u4415
  7481  17A4  0825               	movf	??_serial_init+1,w
  7482  17A5  00A9               	movwf	serial_init@sx+1
  7483  17A6  0824               	movf	??_serial_init,w
  7484  17A7  00A8               	movwf	serial_init@sx
  7485  17A8  30FF               	movlw	255
  7486  17A9  07A8               	addwf	serial_init@sx,f
  7487  17AA  3DA9               	addwfc	serial_init@sx+1,f
  7488                           
  7489                           ;uart.c: 22:     SP1BRGL = (uint8_t)sx;
  7490  17AB  0828               	movf	serial_init@sx,w
  7491  17AC  0022               	movlb	2	; select bank2
  7492  17AD  009B               	movwf	27	;volatile
  7493                           
  7494                           ;uart.c: 23:     SP1BRGH = (uint8_t)(sx>>8);
  7495  17AE  0020               	movlb	0	; select bank0
  7496  17AF  0829               	movf	serial_init@sx+1,w
  7497  17B0  0022               	movlb	2	; select bank2
  7498  17B1  009C               	movwf	28	;volatile
  7499                           
  7500                           ;uart.c: 28:     TRISC = TRISC & ~(1<<0);
  7501  17B2  0020               	movlb	0	; select bank0
  7502  17B3  1013               	bcf	19,0	;volatile
  7503                           
  7504                           ;uart.c: 29:     TRISC = TRISC |(1<<1);
  7505  17B4  0813               	movf	19,w	;volatile
  7506  17B5  3802               	iorlw	2
  7507  17B6  0093               	movwf	19	;volatile
  7508                           
  7509                           ;uart.c: 30:     ANSELC = ANSELC & ~(1<<7);
  7510  17B7  003E               	movlb	30	; select bank30
  7511  17B8  13CE               	bcf	78,7	;volatile
  7512                           
  7513                           ;uart.c: 31:     ANSELC = ANSELC & ~(1<<2);
  7514  17B9  114E               	bcf	78,2	;volatile
  7515                           
  7516                           ;uart.c: 32:     RXPPS = 0x11;
  7517  17BA  3011               	movlw	17
  7518  17BB  003D               	movlb	29	; select bank29
  7519  17BC  00CB               	movwf	75	;volatile
  7520                           
  7521                           ;uart.c: 34:     RC0PPS = 0x10;
  7522  17BD  3010               	movlw	16
  7523  17BE  003E               	movlb	30	; select bank30
  7524  17BF  00A0               	movwf	32	;volatile
  7525  17C0  0008               	return
  7526  17C1                     __end_of_serial_init:
  7527  17C1                     __ptext2:	
  7528 ;; *************** function ___lldiv *****************
  7529 ;; Defined at:
  7530 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
  7531 ;; Parameters:    Size  Location     Type
  7532 ;;  divisor         4    0[COMMON] unsigned long 
  7533 ;;  dividend        4    4[COMMON] unsigned long 
  7534 ;; Auto vars:     Size  Location     Type
  7535 ;;  quotient        4    8[COMMON] unsigned long 
  7536 ;;  counter         1   12[COMMON] unsigned char 
  7537 ;; Return value:  Size  Location     Type
  7538 ;;                  4    0[COMMON] unsigned long 
  7539 ;; Registers used:
  7540 ;;		wreg, status,2, status,0
  7541 ;; Tracked objects:
  7542 ;;		On entry : B1F/0
  7543 ;;		On exit  : B1F/0
  7544 ;;		Unchanged: B1F/0
  7545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7546 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7547 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7549 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7550 ;;Total ram usage:       13 bytes
  7551 ;; Hardware stack levels used: 1
  7552 ;; This function calls:
  7553 ;;		Nothing
  7554 ;; This function is called by:
  7555 ;;		_serial_init
  7556 ;; This function uses a non-reentrant model
  7557 ;;
  7558                           
  7559                           
  7560                           ;psect for function ___lldiv
  7561  17C1                     ___lldiv:
  7562                           
  7563                           ;incstack = 0
  7564                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7565  17C1  01F8               	clrf	___lldiv@quotient
  7566  17C2  01F9               	clrf	___lldiv@quotient+1
  7567  17C3  01FA               	clrf	___lldiv@quotient+2
  7568  17C4  01FB               	clrf	___lldiv@quotient+3
  7569  17C5  0873               	movf	___lldiv@divisor+3,w
  7570  17C6  0472               	iorwf	___lldiv@divisor+2,w
  7571  17C7  0471               	iorwf	___lldiv@divisor+1,w
  7572  17C8  0470               	iorwf	___lldiv@divisor,w
  7573  17C9  1903               	skipnz
  7574  17CA  2FF7               	goto	l3099
  7575  17CB  01FC               	clrf	___lldiv@counter
  7576  17CC                     L1:
  7577  17CC  0AFC               	incf	___lldiv@counter,f
  7578  17CD  1BF3               	btfsc	___lldiv@divisor+3,7
  7579  17CE  2FD4               	goto	l3087
  7580  17CF  35F0               	lslf	___lldiv@divisor,f
  7581  17D0  0DF1               	rlf	___lldiv@divisor+1,f
  7582  17D1  0DF2               	rlf	___lldiv@divisor+2,f
  7583  17D2  0DF3               	rlf	___lldiv@divisor+3,f
  7584  17D3  2FCC               	goto	L1
  7585  17D4                     l3087:
  7586  17D4  35F8               	lslf	___lldiv@quotient,f
  7587  17D5  0DF9               	rlf	___lldiv@quotient+1,f
  7588  17D6  0DFA               	rlf	___lldiv@quotient+2,f
  7589  17D7  0DFB               	rlf	___lldiv@quotient+3,f
  7590  17D8  0873               	movf	___lldiv@divisor+3,w
  7591  17D9  0277               	subwf	___lldiv@dividend+3,w
  7592  17DA  1D03               	skipz
  7593  17DB  2FE6               	goto	u3745
  7594  17DC  0872               	movf	___lldiv@divisor+2,w
  7595  17DD  0276               	subwf	___lldiv@dividend+2,w
  7596  17DE  1D03               	skipz
  7597  17DF  2FE6               	goto	u3745
  7598  17E0  0871               	movf	___lldiv@divisor+1,w
  7599  17E1  0275               	subwf	___lldiv@dividend+1,w
  7600  17E2  1D03               	skipz
  7601  17E3  2FE6               	goto	u3745
  7602  17E4  0870               	movf	___lldiv@divisor,w
  7603  17E5  0274               	subwf	___lldiv@dividend,w
  7604  17E6                     u3745:
  7605  17E6  1C03               	skipc
  7606  17E7  2FF1               	goto	l3095
  7607  17E8  0870               	movf	___lldiv@divisor,w
  7608  17E9  02F4               	subwf	___lldiv@dividend,f
  7609  17EA  0871               	movf	___lldiv@divisor+1,w
  7610  17EB  3BF5               	subwfb	___lldiv@dividend+1,f
  7611  17EC  0872               	movf	___lldiv@divisor+2,w
  7612  17ED  3BF6               	subwfb	___lldiv@dividend+2,f
  7613  17EE  0873               	movf	___lldiv@divisor+3,w
  7614  17EF  3BF7               	subwfb	___lldiv@dividend+3,f
  7615  17F0  1478               	bsf	___lldiv@quotient,0
  7616  17F1                     l3095:
  7617  17F1  36F3               	lsrf	___lldiv@divisor+3,f
  7618  17F2  0CF2               	rrf	___lldiv@divisor+2,f
  7619  17F3  0CF1               	rrf	___lldiv@divisor+1,f
  7620  17F4  0CF0               	rrf	___lldiv@divisor,f
  7621  17F5  0BFC               	decfsz	___lldiv@counter,f
  7622  17F6  2FD4               	goto	l3087
  7623  17F7                     l3099:
  7624  17F7  087B               	movf	___lldiv@quotient+3,w
  7625  17F8  00F3               	movwf	?___lldiv+3
  7626  17F9  087A               	movf	___lldiv@quotient+2,w
  7627  17FA  00F2               	movwf	?___lldiv+2
  7628  17FB  0879               	movf	___lldiv@quotient+1,w
  7629  17FC  00F1               	movwf	?___lldiv+1
  7630  17FD  0878               	movf	___lldiv@quotient,w
  7631  17FE  00F0               	movwf	?___lldiv
  7632  17FF  0008               	return
  7633  1800                     __end_of___lldiv:
  7634                           
  7635                           	psect	text5
  7636  0976                     __ptext5:	
  7637 ;; *************** function _vfprintf *****************
  7638 ;; Defined at:
  7639 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7640 ;; Parameters:    Size  Location     Type
  7641 ;;  fp              1    wreg     PTR struct _IO_FILE
  7642 ;;		 -> NULL(0), 
  7643 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  7644 ;;		 -> STR_5(6), STR_4(6), STR_3(29), STR_2(10), 
  7645 ;;		 -> STR_1(13), 
  7646 ;;  ap              1   72[BANK0 ] PTR PTR void 
  7647 ;;		 -> printf@ap(1), 
  7648 ;; Auto vars:     Size  Location     Type
  7649 ;;  fp              1   74[BANK0 ] PTR struct _IO_FILE
  7650 ;;		 -> NULL(0), 
  7651 ;;  cfmt            2   75[BANK0 ] PTR unsigned char 
  7652 ;;		 -> STR_5(6), STR_4(6), STR_3(29), STR_2(10), 
  7653 ;;		 -> STR_1(13), 
  7654 ;; Return value:  Size  Location     Type
  7655 ;;                  2   70[BANK0 ] int 
  7656 ;; Registers used:
  7657 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7658 ;; Tracked objects:
  7659 ;;		On entry : 1F/0
  7660 ;;		On exit  : 1F/0
  7661 ;;		Unchanged: 0/0
  7662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7663 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7664 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7665 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7666 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7667 ;;Total ram usage:        7 bytes
  7668 ;; Hardware stack levels used: 1
  7669 ;; Hardware stack levels required when called: 7
  7670 ;; This function calls:
  7671 ;;		_vfpfcnvrt
  7672 ;; This function is called by:
  7673 ;;		_printf
  7674 ;; This function uses a non-reentrant model
  7675 ;;
  7676                           
  7677                           
  7678                           ;psect for function _vfprintf
  7679  0976                     _vfprintf:
  7680                           
  7681                           ;incstack = 0
  7682                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7683                           ;vfprintf@fp stored from wreg
  7684  0976  00EA               	movwf	vfprintf@fp
  7685                           
  7686                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  7687  0977  0867               	movf	vfprintf@fmt+1,w
  7688  0978  00EC               	movwf	vfprintf@cfmt+1
  7689  0979  0866               	movf	vfprintf@fmt,w
  7690  097A  00EB               	movwf	vfprintf@cfmt
  7691                           
  7692                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  7693  097B  0021               	movlb	1	; select bank1
  7694  097C  01A0               	clrf	_nout^(0+128)
  7695  097D  01A1               	clrf	(_nout+1)^(0+128)
  7696  097E                     l3031:	
  7697                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  7698                           
  7699                           
  7700                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  7701  097E  0020               	movlb	0	; select bank0
  7702  097F  086B               	movf	vfprintf@cfmt,w
  7703  0980  0084               	movwf	4
  7704  0981  086C               	movf	vfprintf@cfmt+1,w
  7705  0982  0085               	movwf	5
  7706  0983  0012               	moviw fsr0++
  7707  0984  1903               	btfsc	3,2
  7708  0985  2995               	goto	l3033
  7709                           
  7710                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  7711  0986  306B               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  7712  0987  00CE               	movwf	vfpfcnvrt@fmt
  7713  0988  0868               	movf	vfprintf@ap,w
  7714  0989  00CF               	movwf	vfpfcnvrt@ap
  7715  098A  086A               	movf	vfprintf@fp,w
  7716  098B  21F6  3189         	fcall	_vfpfcnvrt
  7717  098D  084E               	movf	?_vfpfcnvrt,w
  7718  098E  0021               	movlb	1	; select bank1
  7719  098F  07A0               	addwf	_nout^(0+128),f
  7720  0990  0020               	movlb	0	; select bank0
  7721  0991  084F               	movf	?_vfpfcnvrt+1,w
  7722  0992  0021               	movlb	1	; select bank1
  7723  0993  3DA1               	addwfc	(_nout+1)^(0+128),f
  7724  0994  297E               	goto	l3031
  7725  0995                     l3033:
  7726                           
  7727                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  7728  0995  0021               	movlb	1	; select bank1
  7729  0996  0821               	movf	(_nout+1)^(0+128),w
  7730  0997  0020               	movlb	0	; select bank0
  7731  0998  00E7               	movwf	?_vfprintf+1
  7732  0999  0021               	movlb	1	; select bank1
  7733  099A  0820               	movf	_nout^(0+128),w
  7734  099B  0020               	movlb	0	; select bank0
  7735  099C  00E6               	movwf	?_vfprintf
  7736  099D  0008               	return
  7737  099E                     __end_of_vfprintf:
  7738  099E                     __ptext14:	
  7739 ;; *************** function _pad *****************
  7740 ;; Defined at:
  7741 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7742 ;; Parameters:    Size  Location     Type
  7743 ;;  fp              1    wreg     PTR struct _IO_FILE
  7744 ;;		 -> NULL(0), 
  7745 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  7746 ;;		 -> dbuf(32), 
  7747 ;;  p               2    5[BANK0 ] int 
  7748 ;; Auto vars:     Size  Location     Type
  7749 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  7750 ;;		 -> NULL(0), 
  7751 ;;  w               2    9[BANK0 ] int 
  7752 ;;  i               2    7[BANK0 ] int 
  7753 ;; Return value:  Size  Location     Type
  7754 ;;                  2    4[BANK0 ] int 
  7755 ;; Registers used:
  7756 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7757 ;; Tracked objects:
  7758 ;;		On entry : 1F/0
  7759 ;;		On exit  : 1F/0
  7760 ;;		Unchanged: 0/0
  7761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7762 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7763 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7764 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7765 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7766 ;;Total ram usage:        9 bytes
  7767 ;; Hardware stack levels used: 1
  7768 ;; Hardware stack levels required when called: 4
  7769 ;; This function calls:
  7770 ;;		_fputc
  7771 ;;		_fputs
  7772 ;;		_strlen
  7773 ;; This function is called by:
  7774 ;;		_dtoa
  7775 ;;		_xtoa
  7776 ;; This function uses a non-reentrant model
  7777 ;;
  7778                           
  7779                           
  7780                           ;psect for function _pad
  7781  099E                     _pad:
  7782                           
  7783                           ;incstack = 0
  7784                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7785                           ;pad@fp stored from wreg
  7786  099E  00AB               	movwf	pad@fp
  7787                           
  7788                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7789  099F  0021               	movlb	1	; select bank1
  7790  09A0  1C26               	btfss	_flags^(0+128),0
  7791  09A1  29A6               	goto	l2505
  7792                           
  7793                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7794  09A2  27FB  3189         	fcall	PL80	;call to abstracted procedure
  7795  09A4  21DE  3189         	fcall	_fputs
  7796  09A6                     l2505:
  7797                           
  7798                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7799  09A6  0020               	movlb	0	; select bank0
  7800  09A7  1BA6               	btfsc	pad@p+1,7
  7801  09A8  29AE               	goto	l2509
  7802  09A9  0826               	movf	pad@p+1,w
  7803  09AA  00AA               	movwf	pad@w+1
  7804  09AB  0825               	movf	pad@p,w
  7805  09AC  00A9               	movwf	pad@w
  7806  09AD  29B0               	goto	l949
  7807  09AE                     l2509:
  7808  09AE  01A9               	clrf	pad@w
  7809  09AF  01AA               	clrf	pad@w+1
  7810  09B0                     l949:
  7811                           
  7812                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7813  09B0  01A7               	clrf	pad@i
  7814  09B1  01A8               	clrf	pad@i+1
  7815  09B2                     l2515:	
  7816                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7817                           
  7818                           
  7819                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7820  09B2  0828               	movf	pad@i+1,w
  7821  09B3  3A80               	xorlw	128
  7822  09B4  00FD               	movwf	??_pad
  7823  09B5  082A               	movf	pad@w+1,w
  7824  09B6  3A80               	xorlw	128
  7825  09B7  027D               	subwf	??_pad,w
  7826  09B8  1D03               	skipz
  7827  09B9  29BC               	goto	u2605
  7828  09BA  0829               	movf	pad@w,w
  7829  09BB  0227               	subwf	pad@i,w
  7830  09BC                     u2605:
  7831  09BC  1803               	btfsc	3,0
  7832  09BD  29CB               	goto	l952
  7833                           
  7834                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7835  09BE  3020               	movlw	32
  7836  09BF  00F3               	movwf	fputc@c
  7837  09C0  01F4               	clrf	fputc@c+1
  7838  09C1  0020               	movlb	0	; select bank0
  7839  09C2  082B               	movf	pad@fp,w
  7840  09C3  00F5               	movwf	fputc@fp
  7841  09C4  2343  3189         	fcall	_fputc
  7842                           
  7843                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7844  09C6  0020               	movlb	0	; select bank0
  7845  09C7  0AA7               	incf	pad@i,f
  7846  09C8  1903               	skipnz
  7847  09C9  0AA8               	incf	pad@i+1,f
  7848  09CA  29B2               	goto	l2515
  7849  09CB                     l952:
  7850                           
  7851                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7852  09CB  0021               	movlb	1	; select bank1
  7853  09CC  1826               	btfsc	_flags^(0+128),0
  7854  09CD  29D2               	goto	l953
  7855                           
  7856                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7857  09CE  27FB  3189         	fcall	PL80	;call to abstracted procedure
  7858  09D0  21DE  3189         	fcall	_fputs
  7859  09D2                     l953:	
  7860                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 92:     }
  7861                           
  7862                           
  7863                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  7864  09D2  0020               	movlb	0	; select bank0
  7865  09D3  0824               	movf	pad@buf,w
  7866  09D4  2374               	fcall	_strlen
  7867  09D5  0871               	movf	?_strlen+1,w
  7868  09D6  00A5               	movwf	?_pad+1
  7869  09D7  0870               	movf	?_strlen,w
  7870  09D8  00A4               	movwf	?_pad
  7871  09D9  0829               	movf	pad@w,w
  7872  09DA  07A4               	addwf	?_pad,f
  7873  09DB  082A               	movf	pad@w+1,w
  7874  09DC  3DA5               	addwfc	?_pad+1,f
  7875  09DD  0008               	return
  7876  09DE                     __end_of_pad:
  7877  09DE                     __ptext16:	
  7878 ;; *************** function _fputs *****************
  7879 ;; Defined at:
  7880 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  7881 ;; Parameters:    Size  Location     Type
  7882 ;;  s               1    wreg     PTR const unsigned char 
  7883 ;;		 -> dbuf(32), 
  7884 ;;  fp              1   11[COMMON] PTR struct _IO_FILE
  7885 ;;		 -> NULL(0), 
  7886 ;; Auto vars:     Size  Location     Type
  7887 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  7888 ;;		 -> dbuf(32), 
  7889 ;;  i               2    1[BANK0 ] int 
  7890 ;;  c               1    0[BANK0 ] unsigned char 
  7891 ;; Return value:  Size  Location     Type
  7892 ;;                  2   11[COMMON] int 
  7893 ;; Registers used:
  7894 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7895 ;; Tracked objects:
  7896 ;;		On entry : 1F/0
  7897 ;;		On exit  : 1F/0
  7898 ;;		Unchanged: 0/0
  7899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7900 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7901 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7902 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7903 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7904 ;;Total ram usage:        6 bytes
  7905 ;; Hardware stack levels used: 1
  7906 ;; Hardware stack levels required when called: 3
  7907 ;; This function calls:
  7908 ;;		_fputc
  7909 ;; This function is called by:
  7910 ;;		_pad
  7911 ;; This function uses a non-reentrant model
  7912 ;;
  7913                           
  7914                           
  7915                           ;psect for function _fputs
  7916  09DE                     _fputs:
  7917                           
  7918                           ;incstack = 0
  7919                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7920                           ;fputs@s stored from wreg
  7921  09DE  00A3               	movwf	fputs@s
  7922  09DF  01A1               	clrf	fputs@i
  7923  09E0  01A2               	clrf	fputs@i+1
  7924  09E1                     l2417:
  7925  09E1  0821               	movf	fputs@i,w
  7926  09E2  0723               	addwf	fputs@s,w
  7927  09E3  00FC               	movwf	??_fputs
  7928  09E4  0086               	movwf	6
  7929  09E5  0187               	clrf	7
  7930  09E6  0801               	movf	1,w
  7931  09E7  00A0               	movwf	fputs@c
  7932  09E8  0820               	movf	fputs@c,w
  7933  09E9  1903               	btfsc	3,2
  7934  09EA  0008               	return
  7935  09EB  00F3               	movwf	fputc@c
  7936  09EC  01F4               	clrf	fputc@c+1
  7937  09ED  087B               	movf	fputs@fp,w
  7938  09EE  00F5               	movwf	fputc@fp
  7939  09EF  2343  3189         	fcall	_fputc
  7940  09F1  0020               	movlb	0	; select bank0
  7941  09F2  0AA1               	incf	fputs@i,f
  7942  09F3  1903               	skipnz
  7943  09F4  0AA2               	incf	fputs@i+1,f
  7944  09F5  29E1               	goto	l2417
  7945  09F6                     __end_of_fputs:
  7946  09F6                     __ptext6:	
  7947 ;; *************** function _vfpfcnvrt *****************
  7948 ;; Defined at:
  7949 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7950 ;; Parameters:    Size  Location     Type
  7951 ;;  fp              1    wreg     PTR struct _IO_FILE
  7952 ;;		 -> NULL(0), 
  7953 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  7954 ;;		 -> vfprintf@cfmt(2), 
  7955 ;;  ap              1   47[BANK0 ] PTR PTR void 
  7956 ;;		 -> printf@ap(1), 
  7957 ;; Auto vars:     Size  Location     Type
  7958 ;;  fp              1   69[BANK0 ] PTR struct _IO_FILE
  7959 ;;		 -> NULL(0), 
  7960 ;;  llu             8   59[BANK0 ] unsigned long long 
  7961 ;;  ll              8   51[BANK0 ] long long 
  7962 ;;  f               4    0        long long 
  7963 ;;  ct              3    0        unsigned char [3]
  7964 ;;  vp              2    0        PTR void 
  7965 ;;  i               2    0        int 
  7966 ;;  done            2    0        int 
  7967 ;;  cp              1   68[BANK0 ] PTR unsigned char 
  7968 ;;		 -> ?_printf(2), MLX90614_writeEmissivity@emissivity(4), main@buffer(8), 
  7969 ;;  c               1   67[BANK0 ] unsigned char 
  7970 ;; Return value:  Size  Location     Type
  7971 ;;                  2   46[BANK0 ] int 
  7972 ;; Registers used:
  7973 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7974 ;; Tracked objects:
  7975 ;;		On entry : 1F/0
  7976 ;;		On exit  : 1F/0
  7977 ;;		Unchanged: 0/0
  7978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7979 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7980 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7981 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7982 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7983 ;;Total ram usage:       24 bytes
  7984 ;; Hardware stack levels used: 1
  7985 ;; Hardware stack levels required when called: 6
  7986 ;; This function calls:
  7987 ;;		_dtoa
  7988 ;;		_fputc
  7989 ;;		_stoa
  7990 ;;		_xtoa
  7991 ;; This function is called by:
  7992 ;;		_vfprintf
  7993 ;; This function uses a non-reentrant model
  7994 ;;
  7995                           
  7996                           
  7997                           ;psect for function _vfpfcnvrt
  7998  09F6                     _vfpfcnvrt:
  7999                           
  8000                           ;incstack = 0
  8001                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8002                           ;vfpfcnvrt@fp stored from wreg
  8003  09F6  00E5               	movwf	vfpfcnvrt@fp
  8004                           
  8005                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  8006  09F7  27A2  3189         	fcall	PL2	;call to abstracted procedure
  8007  09F9  3A25               	xorlw	37
  8008  09FA  1D03               	btfss	3,2
  8009  09FB  2AAB               	goto	l2791
  8010                           
  8011                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  8012  09FC  27BB  3189         	fcall	PL12	;call to abstracted procedure
  8013  09FE  1803               	skipnc
  8014  09FF  0A81               	incf	1,f
  8015                           
  8016                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  8017  0A00  0021               	movlb	1	; select bank1
  8018  0A01  30FF               	movlw	255
  8019  0A02  01A2               	clrf	_width^(0+128)
  8020  0A03  01A3               	clrf	(_width+1)^(0+128)
  8021  0A04  01A6               	clrf	_flags^(0+128)
  8022  0A05  01A7               	clrf	(_flags+1)^(0+128)
  8023                           
  8024                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  8025  0A06  00A4               	movwf	_prec^(0+128)
  8026  0A07  00A5               	movwf	(_prec^(0+128)+1)
  8027                           
  8028                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  8029  0A08  0020               	movlb	0	; select bank0
  8030  0A09  27A2  3189         	fcall	PL2	;call to abstracted procedure
  8031  0A0B  3A64               	xorlw	100
  8032  0A0C  1903               	btfsc	3,2
  8033  0A0D  2A13               	goto	l2743
  8034  0A0E  27A2  3189         	fcall	PL2	;call to abstracted procedure
  8035  0A10  3A69               	xorlw	105
  8036  0A11  1D03               	btfss	3,2
  8037  0A12  2A40               	goto	l2751
  8038  0A13                     l2743:
  8039                           
  8040                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  8041  0A13  27BB  3189         	fcall	PL12	;call to abstracted procedure
  8042  0A15  1803               	skipnc
  8043  0A16  0A81               	incf	1,f
  8044                           
  8045                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  8046  0A17  27CE  3189         	fcall	PL28	;call to abstracted procedure
  8047  0A19  00D0               	movwf	??_vfpfcnvrt
  8048  0A1A  3F01               	moviw [1]fsr0
  8049  0A1B  00D1               	movwf	??_vfpfcnvrt+1
  8050  0A1C  0850               	movf	??_vfpfcnvrt,w
  8051  0A1D  00D3               	movwf	vfpfcnvrt@ll
  8052  0A1E  0851               	movf	??_vfpfcnvrt+1,w
  8053  0A1F  00D4               	movwf	vfpfcnvrt@ll+1
  8054  0A20  0D89               	rlf	9,f
  8055  0A21  3B89               	subwfb	9,f
  8056  0A22  0989               	comf	9,f
  8057  0A23  00D5               	movwf	vfpfcnvrt@ll+2
  8058  0A24  00D6               	movwf	vfpfcnvrt@ll+3
  8059  0A25  00D7               	movwf	vfpfcnvrt@ll+4
  8060  0A26  00D8               	movwf	vfpfcnvrt@ll+5
  8061  0A27  00D9               	movwf	vfpfcnvrt@ll+6
  8062  0A28  00DA               	movwf	vfpfcnvrt@ll+7
  8063                           
  8064                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  8065  0A29  0853               	movf	vfpfcnvrt@ll,w
  8066  0A2A  00B0               	movwf	dtoa@d
  8067  0A2B  0854               	movf	vfpfcnvrt@ll+1,w
  8068  0A2C  00B1               	movwf	dtoa@d+1
  8069  0A2D  0855               	movf	vfpfcnvrt@ll+2,w
  8070  0A2E  00B2               	movwf	dtoa@d+2
  8071  0A2F  0856               	movf	vfpfcnvrt@ll+3,w
  8072  0A30  00B3               	movwf	dtoa@d+3
  8073  0A31  0857               	movf	vfpfcnvrt@ll+4,w
  8074  0A32  00B4               	movwf	dtoa@d+4
  8075  0A33  0858               	movf	vfpfcnvrt@ll+5,w
  8076  0A34  00B5               	movwf	dtoa@d+5
  8077  0A35  0859               	movf	vfpfcnvrt@ll+6,w
  8078  0A36  00B6               	movwf	dtoa@d+6
  8079  0A37  085A               	movf	vfpfcnvrt@ll+7,w
  8080  0A38  00B7               	movwf	dtoa@d+7
  8081  0A39  0865               	movf	vfpfcnvrt@fp,w
  8082  0A3A  24AD               	fcall	_dtoa
  8083  0A3B  0831               	movf	?_dtoa+1,w
  8084  0A3C  00CF               	movwf	?_vfpfcnvrt+1
  8085  0A3D  0830               	movf	?_dtoa,w
  8086  0A3E  00CE               	movwf	?_vfpfcnvrt
  8087  0A3F  0008               	return
  8088  0A40                     l2751:
  8089                           
  8090                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1171:         if 
      +                          (*fmt[0] == 's') {
  8091  0A40  27A2  3189         	fcall	PL2	;call to abstracted procedure
  8092  0A42  3A73               	xorlw	115
  8093  0A43  1D03               	btfss	3,2
  8094  0A44  2A5A               	goto	l2761
  8095                           
  8096                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1173:            
      +                           ++*fmt;
  8097  0A45  27BB  3189         	fcall	PL12	;call to abstracted procedure
  8098  0A47  1803               	skipnc
  8099  0A48  0A81               	incf	1,f
  8100                           
  8101                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1174:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  8102  0A49  084F               	movf	vfpfcnvrt@ap,w
  8103  0A4A  0086               	movwf	6
  8104  0A4B  0187               	clrf	7
  8105  0A4C  3F40               	moviw [0]fsr1
  8106  0A4D  0084               	movwf	4
  8107  0A4E  0185               	clrf	5
  8108  0A4F  0A81               	incf	1,f
  8109  0A50  0800               	movf	0,w
  8110  0A51  00E4               	movwf	vfpfcnvrt@cp
  8111                           
  8112                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1176:            
      +                           return stoa(fp, cp);
  8113  0A52  00FB               	movwf	stoa@s
  8114  0A53  0865               	movf	vfpfcnvrt@fp,w
  8115  0A54  22B8               	fcall	_stoa
  8116  0A55  087C               	movf	?_stoa+1,w
  8117  0A56  00CF               	movwf	?_vfpfcnvrt+1
  8118  0A57  087B               	movf	?_stoa,w
  8119  0A58  00CE               	movwf	?_vfpfcnvrt
  8120  0A59  0008               	return
  8121  0A5A                     l2761:
  8122                           
  8123                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  8124  0A5A  27A2  3189         	fcall	PL2	;call to abstracted procedure
  8125  0A5C  3A78               	xorlw	120
  8126  0A5D  1903               	btfsc	3,2
  8127  0A5E  2A64               	goto	l2765
  8128  0A5F  27A2  3189         	fcall	PL2	;call to abstracted procedure
  8129  0A61  3A58               	xorlw	88
  8130  0A62  1D03               	btfss	3,2
  8131  0A63  2A93               	goto	l2775
  8132  0A64                     l2765:
  8133                           
  8134                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  8135  0A64  084E               	movf	vfpfcnvrt@fmt,w
  8136  0A65  27AF  3189         	fcall	PL4	;call to abstracted procedure
  8137  0A67  00E3               	movwf	vfpfcnvrt@c
  8138                           
  8139                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  8140  0A68  084E               	movf	vfpfcnvrt@fmt,w
  8141  0A69  0086               	movwf	6
  8142  0A6A  3001               	movlw	1
  8143  0A6B  0781               	addwf	1,f
  8144  0A6C  3141               	addfsr 1,1
  8145  0A6D  1803               	skipnc
  8146  0A6E  0A81               	incf	1,f
  8147                           
  8148                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  8149  0A6F  27CE  3189         	fcall	PL28	;call to abstracted procedure
  8150  0A71  00DB               	movwf	vfpfcnvrt@llu
  8151  0A72  3F01               	moviw [1]fsr0
  8152  0A73  00DC               	movwf	vfpfcnvrt@llu+1
  8153  0A74  01DD               	clrf	vfpfcnvrt@llu+2
  8154  0A75  01DE               	clrf	vfpfcnvrt@llu+3
  8155  0A76  01DF               	clrf	vfpfcnvrt@llu+4
  8156  0A77  01E0               	clrf	vfpfcnvrt@llu+5
  8157  0A78  01E1               	clrf	vfpfcnvrt@llu+6
  8158  0A79  01E2               	clrf	vfpfcnvrt@llu+7
  8159                           
  8160                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  8161  0A7A  085B               	movf	vfpfcnvrt@llu,w
  8162  0A7B  00AC               	movwf	xtoa@d
  8163  0A7C  085C               	movf	vfpfcnvrt@llu+1,w
  8164  0A7D  00AD               	movwf	xtoa@d+1
  8165  0A7E  085D               	movf	vfpfcnvrt@llu+2,w
  8166  0A7F  00AE               	movwf	xtoa@d+2
  8167  0A80  085E               	movf	vfpfcnvrt@llu+3,w
  8168  0A81  00AF               	movwf	xtoa@d+3
  8169  0A82  085F               	movf	vfpfcnvrt@llu+4,w
  8170  0A83  00B0               	movwf	xtoa@d+4
  8171  0A84  0860               	movf	vfpfcnvrt@llu+5,w
  8172  0A85  00B1               	movwf	xtoa@d+5
  8173  0A86  0861               	movf	vfpfcnvrt@llu+6,w
  8174  0A87  00B2               	movwf	xtoa@d+6
  8175  0A88  0862               	movf	vfpfcnvrt@llu+7,w
  8176  0A89  00B3               	movwf	xtoa@d+7
  8177  0A8A  0863               	movf	vfpfcnvrt@c,w
  8178  0A8B  00B4               	movwf	xtoa@x
  8179  0A8C  0865               	movf	vfpfcnvrt@fp,w
  8180  0A8D  2395               	fcall	_xtoa
  8181  0A8E  082D               	movf	?_xtoa+1,w
  8182  0A8F  00CF               	movwf	?_vfpfcnvrt+1
  8183  0A90  082C               	movf	?_xtoa,w
  8184  0A91  00CE               	movwf	?_vfpfcnvrt
  8185  0A92  0008               	return
  8186  0A93                     l2775:
  8187                           
  8188                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  8189  0A93  27A2  3189         	fcall	PL2	;call to abstracted procedure
  8190  0A95  3A25               	xorlw	37
  8191  0A96  1D03               	btfss	3,2
  8192  0A97  2AA5               	goto	l2785
  8193                           
  8194                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  8195  0A98  27BB  3189         	fcall	PL12	;call to abstracted procedure
  8196  0A9A  1803               	skipnc
  8197  0A9B  0A81               	incf	1,f
  8198                           
  8199                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  8200  0A9C  3025               	movlw	37
  8201  0A9D  27F6  3189         	fcall	PL70	;call to abstracted procedure
  8202  0A9F  2343               	fcall	_fputc
  8203  0AA0                     l2781:
  8204                           
  8205                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  8206  0AA0  0020               	movlb	0	; select bank0
  8207  0AA1  01CE               	clrf	?_vfpfcnvrt
  8208  0AA2  0ACE               	incf	?_vfpfcnvrt,f
  8209  0AA3  01CF               	clrf	?_vfpfcnvrt+1
  8210  0AA4  0008               	return
  8211  0AA5                     l2785:
  8212                           
  8213                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  8214  0AA5  27BB               	fcall	PL12	;call to abstracted procedure
  8215  0AA6  1803               	skipnc
  8216  0AA7  0A81               	incf	1,f
  8217                           
  8218                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  8219  0AA8  01CE               	clrf	?_vfpfcnvrt
  8220  0AA9  01CF               	clrf	?_vfpfcnvrt+1
  8221  0AAA  0008               	return
  8222  0AAB                     l2791:
  8223                           
  8224                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  8225  0AAB  084E               	movf	vfpfcnvrt@fmt,w
  8226  0AAC  27AF  3189         	fcall	PL4	;call to abstracted procedure
  8227  0AAE  27F6  3189         	fcall	PL70	;call to abstracted procedure
  8228  0AB0  2343  3189         	fcall	_fputc
  8229                           
  8230                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  8231  0AB2  0020               	movlb	0	; select bank0
  8232  0AB3  27BB  3189         	fcall	PL12	;call to abstracted procedure
  8233  0AB5  1803               	skipnc
  8234  0AB6  0A81               	incf	1,f
  8235  0AB7  2AA0               	goto	l2781
  8236  0AB8                     __end_of_vfpfcnvrt:
  8237  0AB8                     __ptext12:	
  8238 ;; *************** function _stoa *****************
  8239 ;; Defined at:
  8240 ;;		line 568 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  8241 ;; Parameters:    Size  Location     Type
  8242 ;;  fp              1    wreg     PTR struct _IO_FILE
  8243 ;;		 -> NULL(0), 
  8244 ;;  s               1   11[COMMON] PTR unsigned char 
  8245 ;;		 -> ?_printf(2), MLX90614_writeEmissivity@emissivity(4), main@buffer(8), 
  8246 ;; Auto vars:     Size  Location     Type
  8247 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  8248 ;;		 -> NULL(0), 
  8249 ;;  nuls            7    0[BANK0 ] unsigned char [7]
  8250 ;;  l               2   15[BANK0 ] int 
  8251 ;;  p               2   13[BANK0 ] int 
  8252 ;;  w               2    9[BANK0 ] int 
  8253 ;;  i               2    7[BANK0 ] int 
  8254 ;;  cp              1   12[BANK0 ] PTR unsigned char 
  8255 ;;		 -> stoa@nuls(7), ?_printf(2), MLX90614_writeEmissivity@emissivity(4), main@buffer(8), 
  8256 ;; Return value:  Size  Location     Type
  8257 ;;                  2   11[COMMON] int 
  8258 ;; Registers used:
  8259 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8260 ;; Tracked objects:
  8261 ;;		On entry : 1F/0
  8262 ;;		On exit  : 1F/0
  8263 ;;		Unchanged: 0/0
  8264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8265 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8266 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8267 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8268 ;;      Totals:         3      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8269 ;;Total ram usage:       20 bytes
  8270 ;; Hardware stack levels used: 1
  8271 ;; Hardware stack levels required when called: 3
  8272 ;; This function calls:
  8273 ;;		_fputc
  8274 ;;		_strlen
  8275 ;; This function is called by:
  8276 ;;		_vfpfcnvrt
  8277 ;; This function uses a non-reentrant model
  8278 ;;
  8279                           
  8280                           
  8281                           ;psect for function _stoa
  8282  0AB8                     _stoa:
  8283                           
  8284                           ;incstack = 0
  8285                           ; Regs used in _stoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8286                           ;stoa@fp stored from wreg
  8287  0AB8  00AB               	movwf	stoa@fp
  8288                           
  8289                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 568: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 569: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 570:  
      +                             char *cp, nuls[] = "(null)";
  8290  0AB9  30E2               	movlw	low stoa@F1141
  8291  0ABA  0086               	movwf	6
  8292  0ABB  3000               	movlw	high stoa@F1141
  8293  0ABC  0087               	movwf	7
  8294  0ABD  3020               	movlw	low stoa@nuls
  8295  0ABE  0084               	movwf	4
  8296  0ABF  3000               	movlw	high stoa@nuls
  8297  0AC0  0085               	movwf	5
  8298  0AC1  3007               	movlw	7
  8299  0AC2  00FD               	movwf	??_stoa
  8300  0AC3                     u2860:
  8301  0AC3  0016               	moviw fsr1++
  8302  0AC4  001A               	movwi fsr0++
  8303  0AC5  0BFD               	decfsz	??_stoa,f
  8304  0AC6  2AC3               	goto	u2860
  8305                           
  8306                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 571:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 574:     c
      +                          p = s;
  8307  0AC7  087B               	movf	stoa@s,w
  8308  0AC8  00AC               	movwf	stoa@cp
  8309                           
  8310                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 575:     if (!cp)
      +                           {
  8311  0AC9  082C               	movf	stoa@cp,w
  8312  0ACA  1D03               	btfss	3,2
  8313  0ACB  2ACE               	goto	l2615
  8314                           
  8315                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 576:         cp =
      +                           nuls;
  8316  0ACC  3020               	movlw	(low (stoa@nuls| 0))& (0+255)
  8317  0ACD  00AC               	movwf	stoa@cp
  8318  0ACE                     l2615:
  8319                           
  8320                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 580:     l = (int
      +                          )strlen(cp);
  8321  0ACE  082C               	movf	stoa@cp,w
  8322  0ACF  2374  3189         	fcall	_strlen
  8323  0AD1  0871               	movf	?_strlen+1,w
  8324  0AD2  00B0               	movwf	stoa@l+1
  8325  0AD3  0870               	movf	?_strlen,w
  8326  0AD4  00AF               	movwf	stoa@l
  8327                           
  8328                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 581:     p = prec
      +                          ;
  8329  0AD5  0021               	movlb	1	; select bank1
  8330  0AD6  0825               	movf	(_prec+1)^(0+128),w
  8331  0AD7  0020               	movlb	0	; select bank0
  8332  0AD8  00AE               	movwf	stoa@p+1
  8333  0AD9  0021               	movlb	1	; select bank1
  8334  0ADA  0824               	movf	_prec^(0+128),w
  8335  0ADB  0020               	movlb	0	; select bank0
  8336  0ADC  00AD               	movwf	stoa@p
  8337                           
  8338                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 582:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  8339  0ADD  1BAE               	btfsc	stoa@p+1,7
  8340  0ADE  2AF0               	goto	l989
  8341  0ADF  082E               	movf	stoa@p+1,w
  8342  0AE0  3A80               	xorlw	128
  8343  0AE1  00FD               	movwf	??_stoa
  8344  0AE2  0830               	movf	stoa@l+1,w
  8345  0AE3  3A80               	xorlw	128
  8346  0AE4  027D               	subwf	??_stoa,w
  8347  0AE5  1D03               	skipz
  8348  0AE6  2AE9               	goto	u2895
  8349  0AE7  082F               	movf	stoa@l,w
  8350  0AE8  022D               	subwf	stoa@p,w
  8351  0AE9                     u2895:
  8352  0AE9  1803               	btfsc	3,0
  8353  0AEA  2AF0               	goto	l989
  8354  0AEB  0020               	movlb	0	; select bank0
  8355  0AEC  082E               	movf	stoa@p+1,w
  8356  0AED  00B0               	movwf	stoa@l+1
  8357  0AEE  082D               	movf	stoa@p,w
  8358  0AEF  00AF               	movwf	stoa@l
  8359  0AF0                     l989:
  8360                           
  8361                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 583:     p = l;
  8362  0AF0  0020               	movlb	0	; select bank0
  8363  0AF1  0830               	movf	stoa@l+1,w
  8364  0AF2  00AE               	movwf	stoa@p+1
  8365  0AF3  082F               	movf	stoa@l,w
  8366  0AF4  00AD               	movwf	stoa@p
  8367                           
  8368                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 584:     w = widt
      +                          h;
  8369  0AF5  0021               	movlb	1	; select bank1
  8370  0AF6  0823               	movf	(_width+1)^(0+128),w
  8371  0AF7  0020               	movlb	0	; select bank0
  8372  0AF8  00AA               	movwf	stoa@w+1
  8373  0AF9  0021               	movlb	1	; select bank1
  8374  0AFA  0822               	movf	_width^(0+128),w
  8375  0AFB  0020               	movlb	0	; select bank0
  8376  0AFC  00A9               	movwf	stoa@w
  8377                           
  8378                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 587:     if (!(fl
      +                          ags & (1 << 0))) {
  8379  0AFD  0021               	movlb	1	; select bank1
  8380  0AFE  1C26               	btfss	_flags^(0+128),0
  8381  0AFF  2B09               	goto	l2633
  8382  0B00  2B0D               	goto	l2635
  8383  0B01                     l2629:
  8384                           
  8385                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 589:             
      +                          fputc(' ', fp);
  8386  0B01  27E1  3189         	fcall	PL46	;call to abstracted procedure
  8387  0B03  2343  3189         	fcall	_fputc
  8388                           
  8389                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 590:             
      +                          ++l;
  8390  0B05  0020               	movlb	0	; select bank0
  8391  0B06  0AAF               	incf	stoa@l,f
  8392  0B07  1903               	skipnz
  8393  0B08  0AB0               	incf	stoa@l+1,f
  8394  0B09                     l2633:
  8395                           
  8396                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 588:         whil
      +                          e (l < w) {
  8397  0B09  27C2  3189         	fcall	PL24	;call to abstracted procedure
  8398  0B0B  1C03               	skipc
  8399  0B0C  2B01               	goto	l2629
  8400  0B0D                     l2635:
  8401                           
  8402                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 595:     i = 0;
  8403  0B0D  0020               	movlb	0	; select bank0
  8404  0B0E  01A7               	clrf	stoa@i
  8405  0B0F  01A8               	clrf	stoa@i+1
  8406  0B10                     l2643:	
  8407                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  8408                           
  8409                           
  8410                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  8411  0B10  0828               	movf	stoa@i+1,w
  8412  0B11  3A80               	xorlw	128
  8413  0B12  00FD               	movwf	??_stoa
  8414  0B13  082E               	movf	stoa@p+1,w
  8415  0B14  3A80               	xorlw	128
  8416  0B15  027D               	subwf	??_stoa,w
  8417  0B16  1D03               	skipz
  8418  0B17  2B1A               	goto	u2925
  8419  0B18  082D               	movf	stoa@p,w
  8420  0B19  0227               	subwf	stoa@i,w
  8421  0B1A                     u2925:
  8422  0B1A  1803               	btfsc	3,0
  8423  0B1B  2B2D               	goto	l998
  8424                           
  8425                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 597:         fput
      +                          c(*cp, fp);
  8426  0B1C  0020               	movlb	0	; select bank0
  8427  0B1D  082C               	movf	stoa@cp,w
  8428  0B1E  0086               	movwf	6
  8429  0B1F  0187               	clrf	7
  8430  0B20  0801               	movf	1,w
  8431  0B21  00F3               	movwf	fputc@c
  8432  0B22  01F4               	clrf	fputc@c+1
  8433  0B23  082B               	movf	stoa@fp,w
  8434  0B24  00F5               	movwf	fputc@fp
  8435  0B25  2343  3189         	fcall	_fputc
  8436                           
  8437                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 598:         ++cp
      +                          ;
  8438  0B27  0020               	movlb	0	; select bank0
  8439  0B28  0AAC               	incf	stoa@cp,f
  8440                           
  8441                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 599:         ++i;
  8442  0B29  0AA7               	incf	stoa@i,f
  8443  0B2A  1903               	skipnz
  8444  0B2B  0AA8               	incf	stoa@i+1,f
  8445  0B2C  2B10               	goto	l2643
  8446  0B2D                     l998:
  8447                           
  8448                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 603:     if (flag
      +                          s & (1 << 0)) {
  8449  0B2D  0021               	movlb	1	; select bank1
  8450  0B2E  1826               	btfsc	_flags^(0+128),0
  8451  0B2F  2B39               	goto	l2651
  8452  0B30  2B3D               	goto	l2653
  8453  0B31                     l2647:
  8454                           
  8455                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 605:             
      +                          fputc(' ', fp);
  8456  0B31  27E1  3189         	fcall	PL46	;call to abstracted procedure
  8457  0B33  2343  3189         	fcall	_fputc
  8458                           
  8459                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 606:             
      +                          ++l;
  8460  0B35  0020               	movlb	0	; select bank0
  8461  0B36  0AAF               	incf	stoa@l,f
  8462  0B37  1903               	skipnz
  8463  0B38  0AB0               	incf	stoa@l+1,f
  8464  0B39                     l2651:
  8465                           
  8466                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 604:         whil
      +                          e (l < w) {
  8467  0B39  27C2  3189         	fcall	PL24	;call to abstracted procedure
  8468  0B3B  1C03               	skipc
  8469  0B3C  2B31               	goto	l2647
  8470  0B3D                     l2653:
  8471                           
  8472                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 610:     return l
      +                          ;
  8473  0B3D  0020               	movlb	0	; select bank0
  8474  0B3E  0830               	movf	stoa@l+1,w
  8475  0B3F  00FC               	movwf	?_stoa+1
  8476  0B40  082F               	movf	stoa@l,w
  8477  0B41  00FB               	movwf	?_stoa
  8478  0B42  0008               	return
  8479  0B43                     __end_of_stoa:
  8480  0B43                     __ptext17:	
  8481 ;; *************** function _fputc *****************
  8482 ;; Defined at:
  8483 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  8484 ;; Parameters:    Size  Location     Type
  8485 ;;  c               2    3[COMMON] int 
  8486 ;;  fp              1    5[COMMON] PTR struct _IO_FILE
  8487 ;;		 -> NULL(0), 
  8488 ;; Auto vars:     Size  Location     Type
  8489 ;;		None
  8490 ;; Return value:  Size  Location     Type
  8491 ;;                  2    3[COMMON] int 
  8492 ;; Registers used:
  8493 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8494 ;; Tracked objects:
  8495 ;;		On entry : 1F/0
  8496 ;;		On exit  : 0/0
  8497 ;;		Unchanged: 0/0
  8498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8499 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8501 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8502 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8503 ;;Total ram usage:        8 bytes
  8504 ;; Hardware stack levels used: 1
  8505 ;; Hardware stack levels required when called: 2
  8506 ;; This function calls:
  8507 ;;		_putch
  8508 ;; This function is called by:
  8509 ;;		_pad
  8510 ;;		_stoa
  8511 ;;		_vfpfcnvrt
  8512 ;;		_fputs
  8513 ;; This function uses a non-reentrant model
  8514 ;;
  8515                           
  8516                           
  8517                           ;psect for function _fputc
  8518  0B43                     _fputc:
  8519                           
  8520                           ;incstack = 0
  8521                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8522  0B43  0875               	movf	fputc@fp,w
  8523  0B44  1D03               	btfss	3,2
  8524  0B45  0875               	movf	fputc@fp,w
  8525  0B46  1D03               	btfss	3,2
  8526  0B47  2B4A               	goto	l2403
  8527  0B48  0873               	movf	fputc@c,w
  8528  0B49  2B85               	ljmp	_putch
  8529  0B4A                     l2403:
  8530  0B4A  0875               	movf	fputc@fp,w
  8531  0B4B  3E03               	addlw	3
  8532  0B4C  0086               	movwf	6
  8533  0B4D  0187               	clrf	7
  8534  0B4E  0016               	moviw fsr1++
  8535  0B4F  0401               	iorwf	1,w
  8536  0B50  1903               	btfsc	3,2
  8537  0B51  2B6B               	goto	l2407
  8538  0B52  0875               	movf	fputc@fp,w
  8539  0B53  3E03               	addlw	3
  8540  0B54  0086               	movwf	6
  8541  0B55  0187               	clrf	7
  8542  0B56  3F40               	moviw [0]fsr1
  8543  0B57  00F6               	movwf	??_fputc
  8544  0B58  3F41               	moviw [1]fsr1
  8545  0B59  00F7               	movwf	??_fputc+1
  8546  0B5A  0A75               	incf	fputc@fp,w
  8547  0B5B  0086               	movwf	6
  8548  0B5C  3F40               	moviw [0]fsr1
  8549  0B5D  00F8               	movwf	??_fputc+2
  8550  0B5E  3F41               	moviw [1]fsr1
  8551  0B5F  00F9               	movwf	??_fputc+3
  8552  0B60  3A80               	xorlw	128
  8553  0B61  00FA               	movwf	??_fputc+4
  8554  0B62  0877               	movf	??_fputc+1,w
  8555  0B63  3A80               	xorlw	128
  8556  0B64  027A               	subwf	??_fputc+4,w
  8557  0B65  1D03               	skipz
  8558  0B66  2B69               	goto	u2325
  8559  0B67  0876               	movf	??_fputc,w
  8560  0B68  0278               	subwf	??_fputc+2,w
  8561  0B69                     u2325:
  8562  0B69  1803               	skipnc
  8563  0B6A  0008               	return
  8564  0B6B                     l2407:
  8565  0B6B  0A75               	incf	fputc@fp,w
  8566  0B6C  0086               	movwf	6
  8567  0B6D  3001               	movlw	1
  8568  0B6E  0187               	clrf	7
  8569  0B6F  0781               	addwf	1,f
  8570  0B70  3141               	addfsr 1,1
  8571  0B71  1803               	skipnc
  8572  0B72  0A81               	incf	1,f
  8573  0B73  0008               	return
  8574  0B74                     __end_of_fputc:
  8575  0B74                     __ptext15:	
  8576 ;; *************** function _strlen *****************
  8577 ;; Defined at:
  8578 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  8579 ;; Parameters:    Size  Location     Type
  8580 ;;  s               1    wreg     PTR const unsigned char 
  8581 ;;		 -> stoa@nuls(7), dbuf(32), ?_printf(2), MLX90614_writeEmissivity@emissivity(4), 
  8582 ;;		 -> main@buffer(8), 
  8583 ;; Auto vars:     Size  Location     Type
  8584 ;;  s               1    3[COMMON] PTR const unsigned char 
  8585 ;;		 -> stoa@nuls(7), dbuf(32), ?_printf(2), MLX90614_writeEmissivity@emissivity(4), 
  8586 ;;		 -> main@buffer(8), 
  8587 ;;  a               1    2[COMMON] PTR const unsigned char 
  8588 ;;		 -> stoa@nuls(7), dbuf(32), ?_printf(2), MLX90614_writeEmissivity@emissivity(4), 
  8589 ;;		 -> main@buffer(8), 
  8590 ;; Return value:  Size  Location     Type
  8591 ;;                  2    0[COMMON] unsigned int 
  8592 ;; Registers used:
  8593 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8594 ;; Tracked objects:
  8595 ;;		On entry : 1F/0
  8596 ;;		On exit  : 1F/0
  8597 ;;		Unchanged: 1F/0
  8598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8599 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8600 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8602 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8603 ;;Total ram usage:        4 bytes
  8604 ;; Hardware stack levels used: 1
  8605 ;; This function calls:
  8606 ;;		Nothing
  8607 ;; This function is called by:
  8608 ;;		_pad
  8609 ;;		_stoa
  8610 ;; This function uses a non-reentrant model
  8611 ;;
  8612                           
  8613                           
  8614                           ;psect for function _strlen
  8615  0B74                     _strlen:
  8616                           
  8617                           ;incstack = 0
  8618                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  8619                           ;strlen@s stored from wreg
  8620  0B74  00F3               	movwf	strlen@s
  8621  0B75  00F2               	movwf	strlen@a
  8622  0B76                     l2423:
  8623  0B76  0873               	movf	strlen@s,w
  8624  0B77  0086               	movwf	6
  8625  0B78  0187               	clrf	7
  8626  0B79  0801               	movf	1,w
  8627  0B7A  1903               	btfsc	3,2
  8628  0B7B  2B7E               	goto	l2425
  8629  0B7C  0AF3               	incf	strlen@s,f
  8630  0B7D  2B76               	goto	l2423
  8631  0B7E                     l2425:
  8632  0B7E  0872               	movf	strlen@a,w
  8633  0B7F  0273               	subwf	strlen@s,w
  8634  0B80  00F0               	movwf	?_strlen
  8635  0B81  01F1               	clrf	?_strlen+1
  8636  0B82  1BF0               	btfsc	?_strlen,7
  8637  0B83  03F1               	decf	?_strlen+1,f
  8638  0B84  0008               	return
  8639  0B85                     __end_of_strlen:
  8640  0B85                     __ptext18:	
  8641 ;; *************** function _putch *****************
  8642 ;; Defined at:
  8643 ;;		line 82 in file "uart.c"
  8644 ;; Parameters:    Size  Location     Type
  8645 ;;  dato            1    wreg     unsigned char 
  8646 ;; Auto vars:     Size  Location     Type
  8647 ;;  dato            1    2[COMMON] unsigned char 
  8648 ;; Return value:  Size  Location     Type
  8649 ;;                  1    wreg      void 
  8650 ;; Registers used:
  8651 ;;		wreg, status,2, status,0, pclath, cstack
  8652 ;; Tracked objects:
  8653 ;;		On entry : 1F/0
  8654 ;;		On exit  : 1F/2
  8655 ;;		Unchanged: 0/0
  8656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8658 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8660 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8661 ;;Total ram usage:        1 bytes
  8662 ;; Hardware stack levels used: 1
  8663 ;; Hardware stack levels required when called: 1
  8664 ;; This function calls:
  8665 ;;		_uart_tx
  8666 ;; This function is called by:
  8667 ;;		_fputc
  8668 ;; This function uses a non-reentrant model
  8669 ;;
  8670                           
  8671                           
  8672                           ;psect for function _putch
  8673  0B85                     _putch:
  8674                           
  8675                           ;incstack = 0
  8676                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  8677                           ;putch@dato stored from wreg
  8678  0B85  00F2               	movwf	putch@dato
  8679                           
  8680                           ;uart.c: 84:     uart_tx( dato);
  8681  0B86  2B87               	ljmp	_uart_tx
  8682  0B87                     __end_of_putch:
  8683  0B87                     __ptext19:	
  8684 ;; *************** function _uart_tx *****************
  8685 ;; Defined at:
  8686 ;;		line 63 in file "uart.c"
  8687 ;; Parameters:    Size  Location     Type
  8688 ;;  dato            1    wreg     unsigned char 
  8689 ;; Auto vars:     Size  Location     Type
  8690 ;;  dato            1    1[COMMON] unsigned char 
  8691 ;; Return value:  Size  Location     Type
  8692 ;;                  1    wreg      void 
  8693 ;; Registers used:
  8694 ;;		wreg, status,2, status,0
  8695 ;; Tracked objects:
  8696 ;;		On entry : 1F/0
  8697 ;;		On exit  : 1F/2
  8698 ;;		Unchanged: 0/0
  8699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8701 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8702 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8703 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8704 ;;Total ram usage:        2 bytes
  8705 ;; Hardware stack levels used: 1
  8706 ;; This function calls:
  8707 ;;		Nothing
  8708 ;; This function is called by:
  8709 ;;		_putch
  8710 ;; This function uses a non-reentrant model
  8711 ;;
  8712                           
  8713                           
  8714                           ;psect for function _uart_tx
  8715  0B87                     _uart_tx:
  8716                           
  8717                           ;incstack = 0
  8718                           ; Regs used in _uart_tx: [wreg+status,2+status,0]
  8719                           ;uart_tx@dato stored from wreg
  8720  0B87  00F1               	movwf	uart_tx@dato
  8721  0B88                     l2391:	
  8722                           ;uart.c: 65:     while( ( (PIR3>>4) & 0x01) == 0){}
  8723                           
  8724  0B88  002E               	movlb	14	; select bank14
  8725  0B89  080F               	movf	15,w	;volatile
  8726  0B8A  00F0               	movwf	??_uart_tx
  8727  0B8B  3004               	movlw	4
  8728  0B8C                     u2275:
  8729  0B8C  36F0               	lsrf	??_uart_tx,f
  8730  0B8D  0B89               	decfsz	9,f
  8731  0B8E  2B8C               	goto	u2275
  8732  0B8F  1C70               	btfss	??_uart_tx,0
  8733  0B90  2B88               	goto	l2391
  8734                           
  8735                           ;uart.c: 66:         TX1REG = dato;
  8736  0B91  0871               	movf	uart_tx@dato,w
  8737  0B92  0022               	movlb	2	; select bank2
  8738  0B93  009A               	movwf	26	;volatile
  8739  0B94  0008               	return
  8740  0B95                     __end_of_uart_tx:
  8741  0B95                     __ptext7:	
  8742 ;; *************** function _xtoa *****************
  8743 ;; Defined at:
  8744 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  8745 ;; Parameters:    Size  Location     Type
  8746 ;;  fp              1    wreg     PTR struct _IO_FILE
  8747 ;;		 -> NULL(0), 
  8748 ;;  d               8   12[BANK0 ] unsigned long long 
  8749 ;;  x               1   20[BANK0 ] unsigned char 
  8750 ;; Auto vars:     Size  Location     Type
  8751 ;;  fp              1   31[BANK0 ] PTR struct _IO_FILE
  8752 ;;		 -> NULL(0), 
  8753 ;;  n               8   32[BANK0 ] unsigned long long 
  8754 ;;  i               2   44[BANK0 ] int 
  8755 ;;  c               2   42[BANK0 ] int 
  8756 ;;  w               2   40[BANK0 ] int 
  8757 ;;  p               2   29[BANK0 ] int 
  8758 ;; Return value:  Size  Location     Type
  8759 ;;                  2   12[BANK0 ] int 
  8760 ;; Registers used:
  8761 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8762 ;; Tracked objects:
  8763 ;;		On entry : 1F/0
  8764 ;;		On exit  : 1F/0
  8765 ;;		Unchanged: 0/0
  8766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8767 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8768 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8769 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8770 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8771 ;;Total ram usage:       34 bytes
  8772 ;; Hardware stack levels used: 1
  8773 ;; Hardware stack levels required when called: 5
  8774 ;; This function calls:
  8775 ;;		_isalpha
  8776 ;;		_isupper
  8777 ;;		_pad
  8778 ;;		_toupper
  8779 ;; This function is called by:
  8780 ;;		_vfpfcnvrt
  8781 ;; This function uses a non-reentrant model
  8782 ;;
  8783                           
  8784                           
  8785                           ;psect for function _xtoa
  8786  0B95                     _xtoa:
  8787                           
  8788                           ;incstack = 0
  8789                           ; Regs used in _xtoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8790                           ;xtoa@fp stored from wreg
  8791  0B95  00BF               	movwf	xtoa@fp
  8792                           
  8793                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  8794                           
  8795                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  8796                           
  8797                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  8798  0B96  27E8  3189         	fcall	PL50	;call to abstracted procedure
  8799  0B98  00B5               	movwf	??_xtoa
  8800  0B99  3080               	movlw	128
  8801  0B9A  0235               	subwf	??_xtoa,w
  8802  0B9B  1D03               	skipz
  8803  0B9C  2BA0               	goto	u2965
  8804  0B9D  3001               	movlw	1
  8805  0B9E  0021               	movlb	1	; select bank1
  8806  0B9F  0224               	subwf	_prec^(0+128),w
  8807  0BA0                     u2965:
  8808  0BA0  1803               	skipnc
  8809  0BA1  2BA7               	goto	l2665
  8810  0BA2  0020               	movlb	0	; select bank0
  8811  0BA3  01BD               	clrf	xtoa@p
  8812  0BA4  0ABD               	incf	xtoa@p,f
  8813  0BA5  01BE               	clrf	xtoa@p+1
  8814  0BA6  2BAF               	goto	l1010
  8815  0BA7                     l2665:
  8816  0BA7  0021               	movlb	1	; select bank1
  8817  0BA8  0825               	movf	(_prec+1)^(0+128),w
  8818  0BA9  0020               	movlb	0	; select bank0
  8819  0BAA  00BE               	movwf	xtoa@p+1
  8820  0BAB  0021               	movlb	1	; select bank1
  8821  0BAC  0824               	movf	_prec^(0+128),w
  8822  0BAD  0020               	movlb	0	; select bank0
  8823  0BAE  00BD               	movwf	xtoa@p
  8824  0BAF                     l1010:
  8825                           
  8826                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  8827  0BAF  0021               	movlb	1	; select bank1
  8828  0BB0  0823               	movf	(_width+1)^(0+128),w
  8829  0BB1  0020               	movlb	0	; select bank0
  8830  0BB2  00C9               	movwf	xtoa@w+1
  8831  0BB3  0021               	movlb	1	; select bank1
  8832  0BB4  0822               	movf	_width^(0+128),w
  8833  0BB5  0020               	movlb	0	; select bank0
  8834  0BB6  00C8               	movwf	xtoa@w
  8835                           
  8836                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  8837  0BB7  0021               	movlb	1	; select bank1
  8838  0BB8  1E26               	btfss	_flags^(0+128),4
  8839  0BB9  2BBF               	goto	l2671
  8840                           
  8841                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  8842  0BBA  30FE               	movlw	-2
  8843  0BBB  0020               	movlb	0	; select bank0
  8844  0BBC  07C8               	addwf	xtoa@w,f
  8845  0BBD  1C03               	skipc
  8846  0BBE  03C9               	decf	xtoa@w+1,f
  8847  0BBF                     l2671:
  8848                           
  8849                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 661:     n = d;
  8850  0BBF  0020               	movlb	0	; select bank0
  8851  0BC0  082C               	movf	xtoa@d,w
  8852  0BC1  00C0               	movwf	xtoa@n
  8853  0BC2  082D               	movf	xtoa@d+1,w
  8854  0BC3  00C1               	movwf	xtoa@n+1
  8855  0BC4  082E               	movf	xtoa@d+2,w
  8856  0BC5  00C2               	movwf	xtoa@n+2
  8857  0BC6  082F               	movf	xtoa@d+3,w
  8858  0BC7  00C3               	movwf	xtoa@n+3
  8859  0BC8  0830               	movf	xtoa@d+4,w
  8860  0BC9  00C4               	movwf	xtoa@n+4
  8861  0BCA  0831               	movf	xtoa@d+5,w
  8862  0BCB  00C5               	movwf	xtoa@n+5
  8863  0BCC  0832               	movf	xtoa@d+6,w
  8864  0BCD  00C6               	movwf	xtoa@n+6
  8865  0BCE  0833               	movf	xtoa@d+7,w
  8866  0BCF  00C7               	movwf	xtoa@n+7
  8867                           
  8868                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  8869  0BD0  301F               	movlw	31
  8870  0BD1  00CC               	movwf	xtoa@i
  8871  0BD2  01CD               	clrf	xtoa@i+1
  8872                           
  8873                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  8874  0BD3  0021               	movlb	1	; select bank1
  8875  0BD4  01C9               	clrf	(_dbuf^(0+128)+31)
  8876                           
  8877                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8878  0BD5  2C43               	goto	l2707
  8879  0BD6                     l2677:
  8880                           
  8881                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 665:         --i;
  8882  0BD6  30FF               	movlw	-1
  8883  0BD7  0020               	movlb	0	; select bank0
  8884  0BD8  07CC               	addwf	xtoa@i,f
  8885  0BD9  1C03               	skipc
  8886  0BDA  03CD               	decf	xtoa@i+1,f
  8887                           
  8888                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  8889  0BDB  300F               	movlw	15
  8890  0BDC  0540               	andwf	xtoa@n,w
  8891  0BDD  00CA               	movwf	xtoa@c
  8892  0BDE  01CB               	clrf	xtoa@c+1
  8893                           
  8894                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  8895  0BDF  084B               	movf	xtoa@c+1,w
  8896  0BE0  3A80               	xorlw	128
  8897  0BE1  00B5               	movwf	??_xtoa
  8898  0BE2  3080               	movlw	128
  8899  0BE3  0235               	subwf	??_xtoa,w
  8900  0BE4  1D03               	skipz
  8901  0BE5  2BE8               	goto	u2985
  8902  0BE6  300A               	movlw	10
  8903  0BE7  024A               	subwf	xtoa@c,w
  8904  0BE8                     u2985:
  8905  0BE8  1C03               	skipc
  8906  0BE9  2BEC               	goto	l2685
  8907  0BEA  3057               	movlw	87
  8908  0BEB  2BED               	goto	L2
  8909  0BEC                     l2685:
  8910  0BEC  3030               	movlw	48
  8911  0BED                     L2:
  8912  0BED  0020               	movlb	0	; select bank0
  8913  0BEE  07CA               	addwf	xtoa@c,f
  8914  0BEF  1803               	skipnc
  8915  0BF0  0ACB               	incf	xtoa@c+1,f
  8916                           
  8917                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 668:         if (
      +                          (0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsigned)(
      +                          c)|32)-'a') < 26)) {
  8918  0BF1  0834               	movf	xtoa@x,w
  8919  0BF2  3EBF               	addlw	191
  8920  0BF3  00B5               	movwf	??_xtoa
  8921  0BF4  30FF               	movlw	255
  8922  0BF5  1803               	skipnc
  8923  0BF6  3000               	movlw	0
  8924  0BF7  00B6               	movwf	??_xtoa+1
  8925  0BF8  3000               	movlw	0
  8926  0BF9  0236               	subwf	??_xtoa+1,w
  8927  0BFA  301A               	movlw	26
  8928  0BFB  1903               	skipnz
  8929  0BFC  0235               	subwf	??_xtoa,w
  8930  0BFD  1803               	btfsc	3,0
  8931  0BFE  2C01               	goto	u2990
  8932  0BFF  3001               	movlw	1
  8933  0C00  2C02               	goto	u3000
  8934  0C01                     u2990:
  8935  0C01  3000               	movlw	0
  8936  0C02                     u3000:
  8937  0C02  00B9               	movwf	_xtoa$947
  8938  0C03  01BA               	clrf	_xtoa$947+1
  8939  0C04  043A               	iorwf	_xtoa$947+1,w
  8940  0C05  1903               	btfsc	3,2
  8941  0C06  2C2B               	goto	l2699
  8942  0C07  3020               	movlw	32
  8943  0C08  044A               	iorwf	xtoa@c,w
  8944  0C09  00B5               	movwf	??_xtoa
  8945  0C0A  084B               	movf	xtoa@c+1,w
  8946  0C0B  00B6               	movwf	??_xtoa+1
  8947  0C0C  0835               	movf	??_xtoa,w
  8948  0C0D  3E9F               	addlw	159
  8949  0C0E  00B7               	movwf	??_xtoa+2
  8950  0C0F  30FF               	movlw	255
  8951  0C10  3D36               	addwfc	??_xtoa+1,w
  8952  0C11  00B8               	movwf	??_xtoa+3
  8953  0C12  3000               	movlw	0
  8954  0C13  0238               	subwf	??_xtoa+3,w
  8955  0C14  301A               	movlw	26
  8956  0C15  1903               	skipnz
  8957  0C16  0237               	subwf	??_xtoa+2,w
  8958  0C17  1803               	btfsc	3,0
  8959  0C18  2C1B               	goto	u3020
  8960  0C19  3001               	movlw	1
  8961  0C1A  2C1C               	goto	u3030
  8962  0C1B                     u3020:
  8963  0C1B  3000               	movlw	0
  8964  0C1C                     u3030:
  8965  0C1C  00BB               	movwf	_xtoa$948
  8966  0C1D  01BC               	clrf	_xtoa$948+1
  8967  0C1E  043C               	iorwf	_xtoa$948+1,w
  8968  0C1F  1903               	btfsc	3,2
  8969  0C20  2C2B               	goto	l2699
  8970                           
  8971                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  8972  0C21  084B               	movf	xtoa@c+1,w
  8973  0C22  00F5               	movwf	toupper@c+1
  8974  0C23  084A               	movf	xtoa@c,w
  8975  0C24  00F4               	movwf	toupper@c
  8976  0C25  2492  3189         	fcall	_toupper
  8977  0C27  0875               	movf	?_toupper+1,w
  8978  0C28  00CB               	movwf	xtoa@c+1
  8979  0C29  0874               	movf	?_toupper,w
  8980  0C2A  00CA               	movwf	xtoa@c
  8981  0C2B                     l2699:
  8982                           
  8983                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  8984  0C2B  084C               	movf	xtoa@i,w
  8985  0C2C  3EAA               	addlw	(low (_dbuf| 0))& (0+255)
  8986  0C2D  0086               	movwf	6
  8987  0C2E  0187               	clrf	7
  8988  0C2F  084A               	movf	xtoa@c,w
  8989  0C30  0081               	movwf	1
  8990                           
  8991                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 672:         --p;
  8992  0C31  30FF               	movlw	-1
  8993  0C32  07BD               	addwf	xtoa@p,f
  8994  0C33  1C03               	skipc
  8995  0C34  03BE               	decf	xtoa@p+1,f
  8996                           
  8997                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 673:         --w;
  8998  0C35  07C8               	addwf	xtoa@w,f
  8999  0C36  1C03               	skipc
  9000  0C37  03C9               	decf	xtoa@w+1,f
  9001                           
  9002                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  9003  0C38  3004               	movlw	4
  9004  0C39                     u3055:
  9005  0C39  36C7               	lsrf	xtoa@n+7,f
  9006  0C3A  0CC6               	rrf	xtoa@n+6,f
  9007  0C3B  0CC5               	rrf	xtoa@n+5,f
  9008  0C3C  0CC4               	rrf	xtoa@n+4,f
  9009  0C3D  0CC3               	rrf	xtoa@n+3,f
  9010  0C3E  0CC2               	rrf	xtoa@n+2,f
  9011  0C3F  0CC1               	rrf	xtoa@n+1,f
  9012  0C40  0CC0               	rrf	xtoa@n,f
  9013  0C41  0B89               	decfsz	9,f
  9014  0C42  2C39               	goto	u3055
  9015  0C43                     l2707:
  9016                           
  9017                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9018  0C43  0020               	movlb	0	; select bank0
  9019  0C44  084D               	movf	xtoa@i+1,w
  9020  0C45  3A80               	xorlw	128
  9021  0C46  00B5               	movwf	??_xtoa
  9022  0C47  3080               	movlw	128
  9023  0C48  0235               	subwf	??_xtoa,w
  9024  0C49  1D03               	skipz
  9025  0C4A  2C4D               	goto	u3065
  9026  0C4B  3002               	movlw	2
  9027  0C4C  024C               	subwf	xtoa@i,w
  9028  0C4D                     u3065:
  9029  0C4D  1C03               	skipc
  9030  0C4E  2C74               	goto	l1031
  9031  0C4F  0020               	movlb	0	; select bank0
  9032  0C50  0840               	movf	xtoa@n,w
  9033  0C51  0441               	iorwf	xtoa@n+1,w
  9034  0C52  0442               	iorwf	xtoa@n+2,w
  9035  0C53  0443               	iorwf	xtoa@n+3,w
  9036  0C54  0444               	iorwf	xtoa@n+4,w
  9037  0C55  0445               	iorwf	xtoa@n+5,w
  9038  0C56  0446               	iorwf	xtoa@n+6,w
  9039  0C57  0447               	iorwf	xtoa@n+7,w
  9040  0C58  1D03               	skipz
  9041  0C59  2BD6               	goto	l2677
  9042  0C5A  083E               	movf	xtoa@p+1,w
  9043  0C5B  3A80               	xorlw	128
  9044  0C5C  00B5               	movwf	??_xtoa
  9045  0C5D  3080               	movlw	128
  9046  0C5E  0235               	subwf	??_xtoa,w
  9047  0C5F  1D03               	skipz
  9048  0C60  2C63               	goto	u3085
  9049  0C61  3001               	movlw	1
  9050  0C62  023D               	subwf	xtoa@p,w
  9051  0C63                     u3085:
  9052  0C63  1803               	skipnc
  9053  0C64  2BD6               	goto	l2677
  9054  0C65  0020               	movlb	0	; select bank0
  9055  0C66  0849               	movf	xtoa@w+1,w
  9056  0C67  3A80               	xorlw	128
  9057  0C68  00B5               	movwf	??_xtoa
  9058  0C69  3080               	movlw	128
  9059  0C6A  0235               	subwf	??_xtoa,w
  9060  0C6B  1D03               	skipz
  9061  0C6C  2C6F               	goto	u3095
  9062  0C6D  3001               	movlw	1
  9063  0C6E  0248               	subwf	xtoa@w,w
  9064  0C6F                     u3095:
  9065  0C6F  1C03               	skipc
  9066  0C70  2C74               	goto	l1031
  9067  0C71  0021               	movlb	1	; select bank1
  9068  0C72  18A6               	btfsc	_flags^(0+128),1
  9069  0C73  2BD6               	goto	l2677
  9070  0C74                     l1031:
  9071                           
  9072                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  9073  0C74  0021               	movlb	1	; select bank1
  9074  0C75  1E26               	btfss	_flags^(0+128),4
  9075  0C76  2C83               	goto	l2723
  9076                           
  9077                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 679:         --i;
  9078  0C77  30FF               	movlw	-1
  9079  0C78  0020               	movlb	0	; select bank0
  9080                           
  9081                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  9082  0C79  27EF  3189         	fcall	PL54	;call to abstracted procedure
  9083  0C7B  0187               	clrf	7
  9084  0C7C  0834               	movf	xtoa@x,w
  9085  0C7D  0081               	movwf	1
  9086                           
  9087                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 681:         --i;
  9088  0C7E  30FF               	movlw	-1
  9089                           
  9090                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  9091  0C7F  27EF  3189         	fcall	PL54	;call to abstracted procedure
  9092  0C81  3030               	movlw	48
  9093  0C82  0081               	movwf	1
  9094  0C83                     l2723:
  9095                           
  9096                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  9097  0C83  0020               	movlb	0	; select bank0
  9098  0C84  084C               	movf	xtoa@i,w
  9099  0C85  3EAA               	addlw	(low (_dbuf| 0))& (0+255)
  9100  0C86  00A4               	movwf	pad@buf
  9101  0C87  0849               	movf	xtoa@w+1,w
  9102  0C88  00A6               	movwf	pad@p+1
  9103  0C89  0848               	movf	xtoa@w,w
  9104  0C8A  00A5               	movwf	pad@p
  9105  0C8B  083F               	movf	xtoa@fp,w
  9106  0C8C  219E               	fcall	_pad
  9107  0C8D  0825               	movf	?_pad+1,w
  9108  0C8E  00AD               	movwf	?_xtoa+1
  9109  0C8F  0824               	movf	?_pad,w
  9110  0C90  00AC               	movwf	?_xtoa
  9111  0C91  0008               	return
  9112  0C92                     __end_of_xtoa:
  9113  0C92                     __ptext8:	
  9114 ;; *************** function _toupper *****************
  9115 ;; Defined at:
  9116 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\toupper.c"
  9117 ;; Parameters:    Size  Location     Type
  9118 ;;  c               2    4[COMMON] int 
  9119 ;; Auto vars:     Size  Location     Type
  9120 ;;		None
  9121 ;; Return value:  Size  Location     Type
  9122 ;;                  2    4[COMMON] int 
  9123 ;; Registers used:
  9124 ;;		wreg, status,2, status,0
  9125 ;; Tracked objects:
  9126 ;;		On entry : 1F/0
  9127 ;;		On exit  : 1F/0
  9128 ;;		Unchanged: 1F/0
  9129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9130 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9131 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9132 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9133 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9134 ;;Total ram usage:        6 bytes
  9135 ;; Hardware stack levels used: 1
  9136 ;; Hardware stack levels required when called: 1
  9137 ;; This function calls:
  9138 ;;		_islower
  9139 ;; This function is called by:
  9140 ;;		_xtoa
  9141 ;; This function uses a non-reentrant model
  9142 ;;
  9143                           
  9144                           
  9145                           ;psect for function _toupper
  9146  0C92                     _toupper:
  9147                           
  9148                           ;incstack = 0
  9149                           ; Regs used in _toupper: [wreg+status,2+status,0]
  9150  0C92  0874               	movf	toupper@c,w
  9151  0C93  3E9F               	addlw	159
  9152  0C94  00F6               	movwf	??_toupper
  9153  0C95  30FF               	movlw	255
  9154  0C96  3D75               	addwfc	toupper@c+1,w
  9155  0C97  00F7               	movwf	??_toupper+1
  9156  0C98  3000               	movlw	0
  9157  0C99  0277               	subwf	??_toupper+1,w
  9158  0C9A  301A               	movlw	26
  9159  0C9B  1903               	skipnz
  9160  0C9C  0276               	subwf	??_toupper,w
  9161  0C9D  1803               	btfsc	3,0
  9162  0C9E  2CA1               	goto	u2670
  9163  0C9F  3001               	movlw	1
  9164  0CA0  2CA2               	goto	u2680
  9165  0CA1                     u2670:
  9166  0CA1  3000               	movlw	0
  9167  0CA2                     u2680:
  9168  0CA2  00F8               	movwf	_toupper$1027
  9169  0CA3  01F9               	clrf	_toupper$1027+1
  9170  0CA4  0479               	iorwf	_toupper$1027+1,w
  9171  0CA5  1903               	btfsc	3,2
  9172  0CA6  0008               	return
  9173  0CA7  305F               	movlw	95
  9174  0CA8  0574               	andwf	toupper@c,w
  9175  0CA9  00F4               	movwf	?_toupper
  9176  0CAA  3000               	movlw	0
  9177  0CAB  01F5               	clrf	?_toupper+1
  9178  0CAC  0008               	return
  9179  0CAD                     __end_of_toupper:
  9180  0CAD                     __ptext13:	
  9181 ;; *************** function _dtoa *****************
  9182 ;; Defined at:
  9183 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  9184 ;; Parameters:    Size  Location     Type
  9185 ;;  fp              1    wreg     PTR struct _IO_FILE
  9186 ;;		 -> NULL(0), 
  9187 ;;  d               8   16[BANK0 ] long long 
  9188 ;; Auto vars:     Size  Location     Type
  9189 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  9190 ;;		 -> NULL(0), 
  9191 ;;  n               8   34[BANK0 ] long long 
  9192 ;;  i               2   42[BANK0 ] int 
  9193 ;;  s               2   32[BANK0 ] int 
  9194 ;;  w               2   30[BANK0 ] int 
  9195 ;;  p               2   27[BANK0 ] int 
  9196 ;; Return value:  Size  Location     Type
  9197 ;;                  2   16[BANK0 ] int 
  9198 ;; Registers used:
  9199 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9200 ;; Tracked objects:
  9201 ;;		On entry : 1F/0
  9202 ;;		On exit  : 1F/0
  9203 ;;		Unchanged: 0/0
  9204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9205 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9206 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9207 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9208 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9209 ;;Total ram usage:       28 bytes
  9210 ;; Hardware stack levels used: 1
  9211 ;; Hardware stack levels required when called: 5
  9212 ;; This function calls:
  9213 ;;		___aodiv
  9214 ;;		___aomod
  9215 ;;		_abs
  9216 ;;		_pad
  9217 ;; This function is called by:
  9218 ;;		_vfpfcnvrt
  9219 ;; This function uses a non-reentrant model
  9220 ;;
  9221                           
  9222                           
  9223                           ;psect for function _dtoa
  9224  0CAD                     _dtoa:
  9225                           
  9226                           ;incstack = 0
  9227                           ; Regs used in _dtoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9228                           ;dtoa@fp stored from wreg
  9229  0CAD  00BD               	movwf	dtoa@fp
  9230                           
  9231                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  9232  0CAE  0830               	movf	dtoa@d,w
  9233  0CAF  00C2               	movwf	dtoa@n
  9234  0CB0  0831               	movf	dtoa@d+1,w
  9235  0CB1  00C3               	movwf	dtoa@n+1
  9236  0CB2  0832               	movf	dtoa@d+2,w
  9237  0CB3  00C4               	movwf	dtoa@n+2
  9238  0CB4  0833               	movf	dtoa@d+3,w
  9239  0CB5  00C5               	movwf	dtoa@n+3
  9240  0CB6  0834               	movf	dtoa@d+4,w
  9241  0CB7  00C6               	movwf	dtoa@n+4
  9242  0CB8  0835               	movf	dtoa@d+5,w
  9243  0CB9  00C7               	movwf	dtoa@n+5
  9244  0CBA  0836               	movf	dtoa@d+6,w
  9245  0CBB  00C8               	movwf	dtoa@n+6
  9246  0CBC  0837               	movf	dtoa@d+7,w
  9247  0CBD  00C9               	movwf	dtoa@n+7
  9248                           
  9249                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  9250  0CBE  3042               	movlw	low dtoa@n
  9251  0CBF  0086               	movwf	6
  9252  0CC0  3000               	movlw	high dtoa@n
  9253  0CC1  0087               	movwf	7
  9254  0CC2  3F47               	moviw [7]fsr1
  9255  0CC3  00B8               	movwf	??_dtoa
  9256  0CC4  1FB8               	btfss	??_dtoa,7
  9257  0CC5  2CC8               	goto	u2700
  9258  0CC6  3001               	movlw	1
  9259  0CC7  2CC9               	goto	u2710
  9260  0CC8                     u2700:
  9261  0CC8  3000               	movlw	0
  9262  0CC9                     u2710:
  9263  0CC9  0020               	movlb	0	; select bank0
  9264  0CCA  00C0               	movwf	dtoa@s
  9265  0CCB  01C1               	clrf	dtoa@s+1
  9266                           
  9267                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  9268  0CCC  0441               	iorwf	dtoa@s+1,w
  9269  0CCD  1903               	btfsc	3,2
  9270  0CCE  2CEA               	goto	l957
  9271                           
  9272                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  9273  0CCF  09C2               	comf	dtoa@n,f
  9274  0CD0  09C3               	comf	dtoa@n+1,f
  9275  0CD1  09C4               	comf	dtoa@n+2,f
  9276  0CD2  09C5               	comf	dtoa@n+3,f
  9277  0CD3  09C6               	comf	dtoa@n+4,f
  9278  0CD4  09C7               	comf	dtoa@n+5,f
  9279  0CD5  09C8               	comf	dtoa@n+6,f
  9280  0CD6  09C9               	comf	dtoa@n+7,f
  9281  0CD7  0FC2               	incfsz	dtoa@n,f
  9282  0CD8  2CEA               	goto	l957
  9283  0CD9  0AC3               	incf	dtoa@n+1,f
  9284  0CDA  1D03               	skipz
  9285  0CDB  2CEA               	goto	l957
  9286  0CDC  0AC4               	incf	dtoa@n+2,f
  9287  0CDD  1D03               	skipz
  9288  0CDE  2CEA               	goto	l957
  9289  0CDF  0AC5               	incf	dtoa@n+3,f
  9290  0CE0  1D03               	skipz
  9291  0CE1  2CEA               	goto	l957
  9292  0CE2  0AC6               	incf	dtoa@n+4,f
  9293  0CE3  1D03               	skipz
  9294  0CE4  2CEA               	goto	l957
  9295  0CE5  0AC7               	incf	dtoa@n+5,f
  9296  0CE6  1903               	btfsc	3,2
  9297  0CE7  0AC8               	incf	dtoa@n+6,f
  9298  0CE8  1903               	btfsc	3,2
  9299  0CE9  0AC9               	incf	dtoa@n+7,f
  9300  0CEA                     l957:	
  9301                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 297:     }
  9302                           
  9303                           
  9304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  9305                           
  9306                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  9307                           
  9308                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  9309  0CEA  27E8  3189         	fcall	PL50	;call to abstracted procedure
  9310  0CEC  00B8               	movwf	??_dtoa
  9311  0CED  3080               	movlw	128
  9312  0CEE  0238               	subwf	??_dtoa,w
  9313  0CEF  1D03               	skipz
  9314  0CF0  2CF4               	goto	u2755
  9315  0CF1  3001               	movlw	1
  9316  0CF2  0021               	movlb	1	; select bank1
  9317  0CF3  0224               	subwf	_prec^(0+128),w
  9318  0CF4                     u2755:
  9319  0CF4  1803               	skipnc
  9320  0CF5  2CFB               	goto	l2559
  9321  0CF6  0020               	movlb	0	; select bank0
  9322  0CF7  01BB               	clrf	dtoa@p
  9323  0CF8  0ABB               	incf	dtoa@p,f
  9324  0CF9  01BC               	clrf	dtoa@p+1
  9325  0CFA  2D03               	goto	l962
  9326  0CFB                     l2559:
  9327  0CFB  0021               	movlb	1	; select bank1
  9328  0CFC  0825               	movf	(_prec+1)^(0+128),w
  9329  0CFD  0020               	movlb	0	; select bank0
  9330  0CFE  00BC               	movwf	dtoa@p+1
  9331  0CFF  0021               	movlb	1	; select bank1
  9332  0D00  0824               	movf	_prec^(0+128),w
  9333  0D01  0020               	movlb	0	; select bank0
  9334  0D02  00BB               	movwf	dtoa@p
  9335  0D03                     l962:
  9336                           
  9337                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  9338  0D03  0021               	movlb	1	; select bank1
  9339  0D04  0823               	movf	(_width+1)^(0+128),w
  9340  0D05  0020               	movlb	0	; select bank0
  9341  0D06  00BF               	movwf	dtoa@w+1
  9342  0D07  0021               	movlb	1	; select bank1
  9343  0D08  0822               	movf	_width^(0+128),w
  9344  0D09  0020               	movlb	0	; select bank0
  9345  0D0A  00BE               	movwf	dtoa@w
  9346                           
  9347                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  9348  0D0B  0840               	movf	dtoa@s,w
  9349  0D0C  0441               	iorwf	dtoa@s+1,w
  9350  0D0D  1D03               	btfss	3,2
  9351  0D0E  2D12               	goto	l2565
  9352  0D0F  0021               	movlb	1	; select bank1
  9353  0D10  1D26               	btfss	_flags^(0+128),2
  9354  0D11  2D17               	goto	l2567
  9355  0D12                     l2565:
  9356                           
  9357                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  9358  0D12  30FF               	movlw	-1
  9359  0D13  0020               	movlb	0	; select bank0
  9360  0D14  07BE               	addwf	dtoa@w,f
  9361  0D15  1C03               	skipc
  9362  0D16  03BF               	decf	dtoa@w+1,f
  9363  0D17                     l2567:
  9364                           
  9365                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  9366  0D17  301F               	movlw	31
  9367  0D18  0020               	movlb	0	; select bank0
  9368  0D19  00CA               	movwf	dtoa@i
  9369  0D1A  01CB               	clrf	dtoa@i+1
  9370                           
  9371                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  9372  0D1B  0021               	movlb	1	; select bank1
  9373  0D1C  01C9               	clrf	(_dbuf^(0+128)+31)
  9374                           
  9375                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9376  0D1D  2DA5               	goto	l2581
  9377  0D1E                     l2583:
  9378  0D1E  0020               	movlb	0	; select bank0
  9379  0D1F  0842               	movf	dtoa@n,w
  9380  0D20  0443               	iorwf	dtoa@n+1,w
  9381  0D21  0444               	iorwf	dtoa@n+2,w
  9382  0D22  0445               	iorwf	dtoa@n+3,w
  9383  0D23  0446               	iorwf	dtoa@n+4,w
  9384  0D24  0447               	iorwf	dtoa@n+5,w
  9385  0D25  0448               	iorwf	dtoa@n+6,w
  9386  0D26  0449               	iorwf	dtoa@n+7,w
  9387  0D27  1D03               	skipz
  9388  0D28  2D43               	goto	l2571
  9389  0D29  083C               	movf	dtoa@p+1,w
  9390  0D2A  3A80               	xorlw	128
  9391  0D2B  00B8               	movwf	??_dtoa
  9392  0D2C  3080               	movlw	128
  9393  0D2D  0238               	subwf	??_dtoa,w
  9394  0D2E  1D03               	skipz
  9395  0D2F  2D32               	goto	u2805
  9396  0D30  3001               	movlw	1
  9397  0D31  023B               	subwf	dtoa@p,w
  9398  0D32                     u2805:
  9399  0D32  1803               	skipnc
  9400  0D33  2D43               	goto	l2571
  9401  0D34  0020               	movlb	0	; select bank0
  9402  0D35  083F               	movf	dtoa@w+1,w
  9403  0D36  3A80               	xorlw	128
  9404  0D37  00B8               	movwf	??_dtoa
  9405  0D38  3080               	movlw	128
  9406  0D39  0238               	subwf	??_dtoa,w
  9407  0D3A  1D03               	skipz
  9408  0D3B  2D3E               	goto	u2815
  9409  0D3C  3001               	movlw	1
  9410  0D3D  023E               	subwf	dtoa@w,w
  9411  0D3E                     u2815:
  9412  0D3E  1C03               	skipc
  9413  0D3F  2DB1               	goto	l2591
  9414  0D40  0021               	movlb	1	; select bank1
  9415  0D41  1CA6               	btfss	_flags^(0+128),1
  9416  0D42  2DB1               	goto	l2591
  9417  0D43                     l2571:
  9418                           
  9419                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  9420  0D43  30FF               	movlw	-1
  9421  0D44  0020               	movlb	0	; select bank0
  9422  0D45  07CA               	addwf	dtoa@i,f
  9423  0D46  1C03               	skipc
  9424  0D47  03CB               	decf	dtoa@i+1,f
  9425                           
  9426                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  9427  0D48  300A               	movlw	10
  9428  0D49  00A0               	movwf	___aomod@divisor
  9429  0D4A  01A1               	clrf	___aomod@divisor+1
  9430  0D4B  01A2               	clrf	___aomod@divisor+2
  9431  0D4C  01A3               	clrf	___aomod@divisor+3
  9432  0D4D  01A4               	clrf	___aomod@divisor+4
  9433  0D4E  01A5               	clrf	___aomod@divisor+5
  9434  0D4F  01A6               	clrf	___aomod@divisor+6
  9435  0D50  01A7               	clrf	___aomod@divisor+7
  9436  0D51  0842               	movf	dtoa@n,w
  9437  0D52  00A8               	movwf	___aomod@dividend
  9438  0D53  0843               	movf	dtoa@n+1,w
  9439  0D54  00A9               	movwf	___aomod@dividend+1
  9440  0D55  0844               	movf	dtoa@n+2,w
  9441  0D56  00AA               	movwf	___aomod@dividend+2
  9442  0D57  0845               	movf	dtoa@n+3,w
  9443  0D58  00AB               	movwf	___aomod@dividend+3
  9444  0D59  0846               	movf	dtoa@n+4,w
  9445  0D5A  00AC               	movwf	___aomod@dividend+4
  9446  0D5B  0847               	movf	dtoa@n+5,w
  9447  0D5C  00AD               	movwf	___aomod@dividend+5
  9448  0D5D  0848               	movf	dtoa@n+6,w
  9449  0D5E  00AE               	movwf	___aomod@dividend+6
  9450  0D5F  0849               	movf	dtoa@n+7,w
  9451  0D60  00AF               	movwf	___aomod@dividend+7
  9452  0D61  26C4  3189         	fcall	___aomod
  9453  0D63  0821               	movf	?___aomod+1,w
  9454  0D64  00F4               	movwf	abs@a+1
  9455  0D65  0820               	movf	?___aomod,w
  9456  0D66  00F3               	movwf	abs@a
  9457  0D67  278B  3189         	fcall	_abs
  9458  0D69  0873               	movf	?_abs,w
  9459  0D6A  3E30               	addlw	48
  9460  0D6B  0020               	movlb	0	; select bank0
  9461  0D6C  00B8               	movwf	??_dtoa
  9462  0D6D  084A               	movf	dtoa@i,w
  9463  0D6E  3EAA               	addlw	(low (_dbuf| 0))& (0+255)
  9464  0D6F  0086               	movwf	6
  9465  0D70  0187               	clrf	7
  9466  0D71  0838               	movf	??_dtoa,w
  9467  0D72  0081               	movwf	1
  9468                           
  9469                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  9470  0D73  30FF               	movlw	-1
  9471  0D74  07BB               	addwf	dtoa@p,f
  9472  0D75  1C03               	skipc
  9473  0D76  03BC               	decf	dtoa@p+1,f
  9474                           
  9475                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  9476  0D77  07BE               	addwf	dtoa@w,f
  9477  0D78  1C03               	skipc
  9478  0D79  03BF               	decf	dtoa@w+1,f
  9479                           
  9480                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  9481  0D7A  300A               	movlw	10
  9482  0D7B  00A0               	movwf	___aodiv@divisor
  9483  0D7C  01A1               	clrf	___aodiv@divisor+1
  9484  0D7D  01A2               	clrf	___aodiv@divisor+2
  9485  0D7E  01A3               	clrf	___aodiv@divisor+3
  9486  0D7F  01A4               	clrf	___aodiv@divisor+4
  9487  0D80  01A5               	clrf	___aodiv@divisor+5
  9488  0D81  01A6               	clrf	___aodiv@divisor+6
  9489  0D82  01A7               	clrf	___aodiv@divisor+7
  9490  0D83  0842               	movf	dtoa@n,w
  9491  0D84  00A8               	movwf	___aodiv@dividend
  9492  0D85  0843               	movf	dtoa@n+1,w
  9493  0D86  00A9               	movwf	___aodiv@dividend+1
  9494  0D87  0844               	movf	dtoa@n+2,w
  9495  0D88  00AA               	movwf	___aodiv@dividend+2
  9496  0D89  0845               	movf	dtoa@n+3,w
  9497  0D8A  00AB               	movwf	___aodiv@dividend+3
  9498  0D8B  0846               	movf	dtoa@n+4,w
  9499  0D8C  00AC               	movwf	___aodiv@dividend+4
  9500  0D8D  0847               	movf	dtoa@n+5,w
  9501  0D8E  00AD               	movwf	___aodiv@dividend+5
  9502  0D8F  0848               	movf	dtoa@n+6,w
  9503  0D90  00AE               	movwf	___aodiv@dividend+6
  9504  0D91  0849               	movf	dtoa@n+7,w
  9505  0D92  00AF               	movwf	___aodiv@dividend+7
  9506  0D93  25DC  3189         	fcall	___aodiv
  9507  0D95  0820               	movf	?___aodiv,w
  9508  0D96  00C2               	movwf	dtoa@n
  9509  0D97  0821               	movf	?___aodiv+1,w
  9510  0D98  00C3               	movwf	dtoa@n+1
  9511  0D99  0822               	movf	?___aodiv+2,w
  9512  0D9A  00C4               	movwf	dtoa@n+2
  9513  0D9B  0823               	movf	?___aodiv+3,w
  9514  0D9C  00C5               	movwf	dtoa@n+3
  9515  0D9D  0824               	movf	?___aodiv+4,w
  9516  0D9E  00C6               	movwf	dtoa@n+4
  9517  0D9F  0825               	movf	?___aodiv+5,w
  9518  0DA0  00C7               	movwf	dtoa@n+5
  9519  0DA1  0826               	movf	?___aodiv+6,w
  9520  0DA2  00C8               	movwf	dtoa@n+6
  9521  0DA3  0827               	movf	?___aodiv+7,w
  9522  0DA4  00C9               	movwf	dtoa@n+7
  9523  0DA5                     l2581:
  9524                           
  9525                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9526  0DA5  0020               	movlb	0	; select bank0
  9527  0DA6  084B               	movf	dtoa@i+1,w
  9528  0DA7  3A80               	xorlw	128
  9529  0DA8  00B8               	movwf	??_dtoa
  9530  0DA9  3080               	movlw	128
  9531  0DAA  0238               	subwf	??_dtoa,w
  9532  0DAB  1D03               	skipz
  9533  0DAC  2DAF               	goto	u2785
  9534  0DAD  3001               	movlw	1
  9535  0DAE  024A               	subwf	dtoa@i,w
  9536  0DAF                     u2785:
  9537  0DAF  1803               	btfsc	3,0
  9538  0DB0  2D1E               	goto	l2583
  9539  0DB1                     l2591:
  9540                           
  9541                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  9542  0DB1  0020               	movlb	0	; select bank0
  9543  0DB2  0840               	movf	dtoa@s,w
  9544  0DB3  0441               	iorwf	dtoa@s+1,w
  9545  0DB4  1D03               	btfss	3,2
  9546  0DB5  2DB9               	goto	l2595
  9547  0DB6  0021               	movlb	1	; select bank1
  9548  0DB7  1D26               	btfss	_flags^(0+128),2
  9549  0DB8  2DCD               	goto	l2603
  9550  0DB9                     l2595:
  9551                           
  9552                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  9553  0DB9  30FF               	movlw	-1
  9554  0DBA  0020               	movlb	0	; select bank0
  9555  0DBB  07CA               	addwf	dtoa@i,f
  9556  0DBC  1C03               	skipc
  9557  0DBD  03CB               	decf	dtoa@i+1,f
  9558                           
  9559                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  9560  0DBE  0840               	movf	dtoa@s,w
  9561  0DBF  0441               	iorwf	dtoa@s+1,w
  9562  0DC0  1D03               	btfss	3,2
  9563  0DC1  2DC4               	goto	l2599
  9564  0DC2  302B               	movlw	43
  9565  0DC3  2DC5               	goto	L3
  9566  0DC4                     l2599:
  9567  0DC4  302D               	movlw	45
  9568  0DC5                     L3:
  9569  0DC5  00B9               	movwf	_dtoa$926
  9570  0DC6  01BA               	clrf	_dtoa$926+1
  9571  0DC7  084A               	movf	dtoa@i,w
  9572  0DC8  3EAA               	addlw	(low (_dbuf| 0))& (0+255)
  9573  0DC9  0086               	movwf	6
  9574  0DCA  0187               	clrf	7
  9575  0DCB  0839               	movf	_dtoa$926,w
  9576  0DCC  0081               	movwf	1
  9577  0DCD                     l2603:
  9578                           
  9579                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  9580  0DCD  0020               	movlb	0	; select bank0
  9581  0DCE  084A               	movf	dtoa@i,w
  9582  0DCF  3EAA               	addlw	(low (_dbuf| 0))& (0+255)
  9583  0DD0  00A4               	movwf	pad@buf
  9584  0DD1  083F               	movf	dtoa@w+1,w
  9585  0DD2  00A6               	movwf	pad@p+1
  9586  0DD3  083E               	movf	dtoa@w,w
  9587  0DD4  00A5               	movwf	pad@p
  9588  0DD5  083D               	movf	dtoa@fp,w
  9589  0DD6  219E               	fcall	_pad
  9590  0DD7  0825               	movf	?_pad+1,w
  9591  0DD8  00B1               	movwf	?_dtoa+1
  9592  0DD9  0824               	movf	?_pad,w
  9593  0DDA  00B0               	movwf	?_dtoa
  9594  0DDB  0008               	return
  9595  0DDC                     __end_of_dtoa:
  9596  0DDC                     __ptext22:	
  9597 ;; *************** function ___aodiv *****************
  9598 ;; Defined at:
  9599 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  9600 ;; Parameters:    Size  Location     Type
  9601 ;;  divisor         8    0[BANK0 ] long long 
  9602 ;;  dividend        8    8[BANK0 ] long long 
  9603 ;; Auto vars:     Size  Location     Type
  9604 ;;  quotient        8    3[COMMON] long long 
  9605 ;;  sign            1    2[COMMON] unsigned char 
  9606 ;;  counter         1    1[COMMON] unsigned char 
  9607 ;; Return value:  Size  Location     Type
  9608 ;;                  8    0[BANK0 ] long long 
  9609 ;; Registers used:
  9610 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9611 ;; Tracked objects:
  9612 ;;		On entry : 1F/0
  9613 ;;		On exit  : 1F/0
  9614 ;;		Unchanged: 0/0
  9615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9616 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9617 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9618 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9619 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9620 ;;Total ram usage:       27 bytes
  9621 ;; Hardware stack levels used: 1
  9622 ;; This function calls:
  9623 ;;		Nothing
  9624 ;; This function is called by:
  9625 ;;		_dtoa
  9626 ;; This function uses a non-reentrant model
  9627 ;;
  9628                           
  9629                           
  9630                           ;psect for function ___aodiv
  9631  0DDC                     ___aodiv:
  9632  0DDC  3020               	movlw	low ___aodiv@divisor
  9633                           
  9634                           ;incstack = 0
  9635                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  9636  0DDD  01F2               	clrf	___aodiv@sign
  9637  0DDE  0086               	movwf	6
  9638  0DDF  3000               	movlw	high ___aodiv@divisor
  9639  0DE0  0087               	movwf	7
  9640  0DE1  3F47               	moviw [7]fsr1
  9641  0DE2  00F0               	movwf	??___aodiv
  9642  0DE3  1FF0               	btfss	??___aodiv,7
  9643  0DE4  2E05               	goto	l2439
  9644  0DE5  0020               	movlb	0	; select bank0
  9645  0DE6  09A0               	comf	___aodiv@divisor,f
  9646  0DE7  09A1               	comf	___aodiv@divisor+1,f
  9647  0DE8  09A2               	comf	___aodiv@divisor+2,f
  9648  0DE9  09A3               	comf	___aodiv@divisor+3,f
  9649  0DEA  09A4               	comf	___aodiv@divisor+4,f
  9650  0DEB  09A5               	comf	___aodiv@divisor+5,f
  9651  0DEC  09A6               	comf	___aodiv@divisor+6,f
  9652  0DED  09A7               	comf	___aodiv@divisor+7,f
  9653  0DEE  0FA0               	incfsz	___aodiv@divisor,f
  9654  0DEF  2E03               	goto	u238lld
  9655  0DF0  0AA1               	incf	___aodiv@divisor+1,f
  9656  0DF1  1D03               	skipz
  9657  0DF2  2E03               	goto	u238lld
  9658  0DF3  0AA2               	incf	___aodiv@divisor+2,f
  9659  0DF4  1D03               	skipz
  9660  0DF5  2E03               	goto	u238lld
  9661  0DF6  0AA3               	incf	___aodiv@divisor+3,f
  9662  0DF7  1D03               	skipz
  9663  0DF8  2E03               	goto	u238lld
  9664  0DF9  0AA4               	incf	___aodiv@divisor+4,f
  9665  0DFA  1D03               	skipz
  9666  0DFB  2E03               	goto	u238lld
  9667  0DFC  0AA5               	incf	___aodiv@divisor+5,f
  9668  0DFD  1D03               	skipz
  9669  0DFE  2E03               	goto	u238lld
  9670  0DFF  0AA6               	incf	___aodiv@divisor+6,f
  9671  0E00  1D03               	skipz
  9672  0E01  2E03               	goto	u238lld
  9673  0E02  0AA7               	incf	___aodiv@divisor+7,f
  9674  0E03                     u238lld:
  9675  0E03  01F2               	clrf	___aodiv@sign
  9676  0E04  0AF2               	incf	___aodiv@sign,f
  9677  0E05                     l2439:
  9678  0E05  3028               	movlw	low ___aodiv@dividend
  9679  0E06  0086               	movwf	6
  9680  0E07  3000               	movlw	high ___aodiv@dividend
  9681  0E08  0087               	movwf	7
  9682  0E09  3F47               	moviw [7]fsr1
  9683  0E0A  00F0               	movwf	??___aodiv
  9684  0E0B  1FF0               	btfss	??___aodiv,7
  9685  0E0C  2E2D               	goto	l2445
  9686  0E0D  0020               	movlb	0	; select bank0
  9687  0E0E  09A8               	comf	___aodiv@dividend,f
  9688  0E0F  09A9               	comf	___aodiv@dividend+1,f
  9689  0E10  09AA               	comf	___aodiv@dividend+2,f
  9690  0E11  09AB               	comf	___aodiv@dividend+3,f
  9691  0E12  09AC               	comf	___aodiv@dividend+4,f
  9692  0E13  09AD               	comf	___aodiv@dividend+5,f
  9693  0E14  09AE               	comf	___aodiv@dividend+6,f
  9694  0E15  09AF               	comf	___aodiv@dividend+7,f
  9695  0E16  0FA8               	incfsz	___aodiv@dividend,f
  9696  0E17  2E2B               	goto	l2443
  9697  0E18  0AA9               	incf	___aodiv@dividend+1,f
  9698  0E19  1D03               	skipz
  9699  0E1A  2E2B               	goto	l2443
  9700  0E1B  0AAA               	incf	___aodiv@dividend+2,f
  9701  0E1C  1D03               	skipz
  9702  0E1D  2E2B               	goto	l2443
  9703  0E1E  0AAB               	incf	___aodiv@dividend+3,f
  9704  0E1F  1D03               	skipz
  9705  0E20  2E2B               	goto	l2443
  9706  0E21  0AAC               	incf	___aodiv@dividend+4,f
  9707  0E22  1D03               	skipz
  9708  0E23  2E2B               	goto	l2443
  9709  0E24  0AAD               	incf	___aodiv@dividend+5,f
  9710  0E25  1D03               	skipz
  9711  0E26  2E2B               	goto	l2443
  9712  0E27  0AAE               	incf	___aodiv@dividend+6,f
  9713  0E28  1D03               	skipz
  9714  0E29  2E2B               	goto	l2443
  9715  0E2A  0AAF               	incf	___aodiv@dividend+7,f
  9716  0E2B                     l2443:
  9717  0E2B  3001               	movlw	1
  9718  0E2C  06F2               	xorwf	___aodiv@sign,f
  9719  0E2D                     l2445:
  9720  0E2D  3073               	movlw	low ___aodiv@quotient
  9721  0E2E  0086               	movwf	6
  9722  0E2F  3000               	movlw	high ___aodiv@quotient
  9723  0E30  0087               	movwf	7
  9724  0E31  3008               	movlw	8
  9725  0E32  00F0               	movwf	??___aodiv
  9726  0E33  3000               	movlw	0
  9727  0E34                     u2410:
  9728  0E34  001E               	movwi fsr1++
  9729  0E35  0BF0               	decfsz	??___aodiv,f
  9730  0E36  2E34               	goto	u2410
  9731  0E37  0020               	movlb	0	; select bank0
  9732  0E38  0820               	movf	___aodiv@divisor,w
  9733  0E39  0421               	iorwf	___aodiv@divisor+1,w
  9734  0E3A  0422               	iorwf	___aodiv@divisor+2,w
  9735  0E3B  0423               	iorwf	___aodiv@divisor+3,w
  9736  0E3C  0424               	iorwf	___aodiv@divisor+4,w
  9737  0E3D  0425               	iorwf	___aodiv@divisor+5,w
  9738  0E3E  0426               	iorwf	___aodiv@divisor+6,w
  9739  0E3F  0427               	iorwf	___aodiv@divisor+7,w
  9740  0E40  1903               	skipnz
  9741  0E41  2E92               	goto	l2467
  9742  0E42  01F1               	clrf	___aodiv@counter
  9743  0E43                     L5:
  9744  0E43  0AF1               	incf	___aodiv@counter,f
  9745  0E44  1BA7               	btfsc	___aodiv@divisor+7,7
  9746  0E45  2E4F               	goto	l2455
  9747  0E46  35A0               	lslf	___aodiv@divisor,f
  9748  0E47  0DA1               	rlf	___aodiv@divisor+1,f
  9749  0E48  0DA2               	rlf	___aodiv@divisor+2,f
  9750  0E49  0DA3               	rlf	___aodiv@divisor+3,f
  9751  0E4A  0DA4               	rlf	___aodiv@divisor+4,f
  9752  0E4B  0DA5               	rlf	___aodiv@divisor+5,f
  9753  0E4C  0DA6               	rlf	___aodiv@divisor+6,f
  9754  0E4D  0DA7               	rlf	___aodiv@divisor+7,f
  9755  0E4E  2E43               	goto	L5
  9756  0E4F                     l2455:
  9757  0E4F  35F3               	lslf	___aodiv@quotient,f
  9758  0E50  0DF4               	rlf	___aodiv@quotient+1,f
  9759  0E51  0DF5               	rlf	___aodiv@quotient+2,f
  9760  0E52  0DF6               	rlf	___aodiv@quotient+3,f
  9761  0E53  0DF7               	rlf	___aodiv@quotient+4,f
  9762  0E54  0DF8               	rlf	___aodiv@quotient+5,f
  9763  0E55  0DF9               	rlf	___aodiv@quotient+6,f
  9764  0E56  0DFA               	rlf	___aodiv@quotient+7,f
  9765  0E57  0827               	movf	___aodiv@divisor+7,w
  9766  0E58  022F               	subwf	___aodiv@dividend+7,w
  9767  0E59  1D03               	skipz
  9768  0E5A  2E75               	goto	u2445
  9769  0E5B  0826               	movf	___aodiv@divisor+6,w
  9770  0E5C  022E               	subwf	___aodiv@dividend+6,w
  9771  0E5D  1D03               	skipz
  9772  0E5E  2E75               	goto	u2445
  9773  0E5F  0825               	movf	___aodiv@divisor+5,w
  9774  0E60  022D               	subwf	___aodiv@dividend+5,w
  9775  0E61  1D03               	skipz
  9776  0E62  2E75               	goto	u2445
  9777  0E63  0824               	movf	___aodiv@divisor+4,w
  9778  0E64  022C               	subwf	___aodiv@dividend+4,w
  9779  0E65  1D03               	skipz
  9780  0E66  2E75               	goto	u2445
  9781  0E67  0823               	movf	___aodiv@divisor+3,w
  9782  0E68  022B               	subwf	___aodiv@dividend+3,w
  9783  0E69  1D03               	skipz
  9784  0E6A  2E75               	goto	u2445
  9785  0E6B  0822               	movf	___aodiv@divisor+2,w
  9786  0E6C  022A               	subwf	___aodiv@dividend+2,w
  9787  0E6D  1D03               	skipz
  9788  0E6E  2E75               	goto	u2445
  9789  0E6F  0821               	movf	___aodiv@divisor+1,w
  9790  0E70  0229               	subwf	___aodiv@dividend+1,w
  9791  0E71  1D03               	skipz
  9792  0E72  2E75               	goto	u2445
  9793  0E73  0820               	movf	___aodiv@divisor,w
  9794  0E74  0228               	subwf	___aodiv@dividend,w
  9795  0E75                     u2445:
  9796  0E75  1C03               	skipc
  9797  0E76  2E88               	goto	l2463
  9798  0E77  0820               	movf	___aodiv@divisor,w
  9799  0E78  02A8               	subwf	___aodiv@dividend,f
  9800  0E79  0821               	movf	___aodiv@divisor+1,w
  9801  0E7A  3BA9               	subwfb	___aodiv@dividend+1,f
  9802  0E7B  0822               	movf	___aodiv@divisor+2,w
  9803  0E7C  3BAA               	subwfb	___aodiv@dividend+2,f
  9804  0E7D  0823               	movf	___aodiv@divisor+3,w
  9805  0E7E  3BAB               	subwfb	___aodiv@dividend+3,f
  9806  0E7F  0824               	movf	___aodiv@divisor+4,w
  9807  0E80  3BAC               	subwfb	___aodiv@dividend+4,f
  9808  0E81  0825               	movf	___aodiv@divisor+5,w
  9809  0E82  3BAD               	subwfb	___aodiv@dividend+5,f
  9810  0E83  0826               	movf	___aodiv@divisor+6,w
  9811  0E84  3BAE               	subwfb	___aodiv@dividend+6,f
  9812  0E85  0827               	movf	___aodiv@divisor+7,w
  9813  0E86  3BAF               	subwfb	___aodiv@dividend+7,f
  9814  0E87  1473               	bsf	___aodiv@quotient,0
  9815  0E88                     l2463:
  9816  0E88  36A7               	lsrf	___aodiv@divisor+7,f
  9817  0E89  0CA6               	rrf	___aodiv@divisor+6,f
  9818  0E8A  0CA5               	rrf	___aodiv@divisor+5,f
  9819  0E8B  0CA4               	rrf	___aodiv@divisor+4,f
  9820  0E8C  0CA3               	rrf	___aodiv@divisor+3,f
  9821  0E8D  0CA2               	rrf	___aodiv@divisor+2,f
  9822  0E8E  0CA1               	rrf	___aodiv@divisor+1,f
  9823  0E8F  0CA0               	rrf	___aodiv@divisor,f
  9824  0E90  0BF1               	decfsz	___aodiv@counter,f
  9825  0E91  2E4F               	goto	l2455
  9826  0E92                     l2467:
  9827  0E92  0872               	movf	___aodiv@sign,w
  9828  0E93  1903               	btfsc	3,2
  9829  0E94  2EB2               	goto	l553
  9830  0E95  09F3               	comf	___aodiv@quotient,f
  9831  0E96  09F4               	comf	___aodiv@quotient+1,f
  9832  0E97  09F5               	comf	___aodiv@quotient+2,f
  9833  0E98  09F6               	comf	___aodiv@quotient+3,f
  9834  0E99  09F7               	comf	___aodiv@quotient+4,f
  9835  0E9A  09F8               	comf	___aodiv@quotient+5,f
  9836  0E9B  09F9               	comf	___aodiv@quotient+6,f
  9837  0E9C  09FA               	comf	___aodiv@quotient+7,f
  9838  0E9D  0FF3               	incfsz	___aodiv@quotient,f
  9839  0E9E  2EB2               	goto	l553
  9840  0E9F  0AF4               	incf	___aodiv@quotient+1,f
  9841  0EA0  1D03               	skipz
  9842  0EA1  2EB2               	goto	l553
  9843  0EA2  0AF5               	incf	___aodiv@quotient+2,f
  9844  0EA3  1D03               	skipz
  9845  0EA4  2EB2               	goto	l553
  9846  0EA5  0AF6               	incf	___aodiv@quotient+3,f
  9847  0EA6  1D03               	skipz
  9848  0EA7  2EB2               	goto	l553
  9849  0EA8  0AF7               	incf	___aodiv@quotient+4,f
  9850  0EA9  1D03               	skipz
  9851  0EAA  2EB2               	goto	l553
  9852  0EAB  0AF8               	incf	___aodiv@quotient+5,f
  9853  0EAC  1D03               	skipz
  9854  0EAD  2EB2               	goto	l553
  9855  0EAE  0AF9               	incf	___aodiv@quotient+6,f
  9856  0EAF  1D03               	skipz
  9857  0EB0  2EB2               	goto	l553
  9858  0EB1  0AFA               	incf	___aodiv@quotient+7,f
  9859  0EB2                     l553:
  9860  0EB2  0873               	movf	___aodiv@quotient,w
  9861  0EB3  0020               	movlb	0	; select bank0
  9862  0EB4  00A0               	movwf	?___aodiv
  9863  0EB5  0874               	movf	___aodiv@quotient+1,w
  9864  0EB6  00A1               	movwf	?___aodiv+1
  9865  0EB7  0875               	movf	___aodiv@quotient+2,w
  9866  0EB8  00A2               	movwf	?___aodiv+2
  9867  0EB9  0876               	movf	___aodiv@quotient+3,w
  9868  0EBA  00A3               	movwf	?___aodiv+3
  9869  0EBB  0877               	movf	___aodiv@quotient+4,w
  9870  0EBC  00A4               	movwf	?___aodiv+4
  9871  0EBD  0878               	movf	___aodiv@quotient+5,w
  9872  0EBE  00A5               	movwf	?___aodiv+5
  9873  0EBF  0879               	movf	___aodiv@quotient+6,w
  9874  0EC0  00A6               	movwf	?___aodiv+6
  9875  0EC1  087A               	movf	___aodiv@quotient+7,w
  9876  0EC2  00A7               	movwf	?___aodiv+7
  9877  0EC3  0008               	return
  9878  0EC4                     __end_of___aodiv:
  9879  0EC4                     __ptext21:	
  9880 ;; *************** function ___aomod *****************
  9881 ;; Defined at:
  9882 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  9883 ;; Parameters:    Size  Location     Type
  9884 ;;  divisor         8    0[BANK0 ] long long 
  9885 ;;  dividend        8    8[BANK0 ] long long 
  9886 ;; Auto vars:     Size  Location     Type
  9887 ;;  sign            1    2[COMMON] unsigned char 
  9888 ;;  counter         1    1[COMMON] unsigned char 
  9889 ;; Return value:  Size  Location     Type
  9890 ;;                  8    0[BANK0 ] long long 
  9891 ;; Registers used:
  9892 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9893 ;; Tracked objects:
  9894 ;;		On entry : 1F/0
  9895 ;;		On exit  : 1F/0
  9896 ;;		Unchanged: 0/0
  9897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9898 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9899 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9900 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9901 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9902 ;;Total ram usage:       19 bytes
  9903 ;; Hardware stack levels used: 1
  9904 ;; This function calls:
  9905 ;;		Nothing
  9906 ;; This function is called by:
  9907 ;;		_dtoa
  9908 ;; This function uses a non-reentrant model
  9909 ;;
  9910                           
  9911                           
  9912                           ;psect for function ___aomod
  9913  0EC4                     ___aomod:
  9914  0EC4  3028               	movlw	low ___aomod@dividend
  9915                           
  9916                           ;incstack = 0
  9917                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  9918  0EC5  01F2               	clrf	___aomod@sign
  9919  0EC6  0086               	movwf	6
  9920  0EC7  3000               	movlw	high ___aomod@dividend
  9921  0EC8  0087               	movwf	7
  9922  0EC9  3F47               	moviw [7]fsr1
  9923  0ECA  00F0               	movwf	??___aomod
  9924  0ECB  1FF0               	btfss	??___aomod,7
  9925  0ECC  2EE7               	goto	l2477
  9926  0ECD  0020               	movlb	0	; select bank0
  9927  0ECE  27D8  3189         	fcall	PL40	;call to abstracted procedure
  9928  0ED0  0FA8               	incfsz	___aomod@dividend,f
  9929  0ED1  2EE5               	goto	u249lld
  9930  0ED2  0AA9               	incf	___aomod@dividend+1,f
  9931  0ED3  1D03               	skipz
  9932  0ED4  2EE5               	goto	u249lld
  9933  0ED5  0AAA               	incf	___aomod@dividend+2,f
  9934  0ED6  1D03               	skipz
  9935  0ED7  2EE5               	goto	u249lld
  9936  0ED8  0AAB               	incf	___aomod@dividend+3,f
  9937  0ED9  1D03               	skipz
  9938  0EDA  2EE5               	goto	u249lld
  9939  0EDB  0AAC               	incf	___aomod@dividend+4,f
  9940  0EDC  1D03               	skipz
  9941  0EDD  2EE5               	goto	u249lld
  9942  0EDE  0AAD               	incf	___aomod@dividend+5,f
  9943  0EDF  1D03               	skipz
  9944  0EE0  2EE5               	goto	u249lld
  9945  0EE1  0AAE               	incf	___aomod@dividend+6,f
  9946  0EE2  1D03               	skipz
  9947  0EE3  2EE5               	goto	u249lld
  9948  0EE4  0AAF               	incf	___aomod@dividend+7,f
  9949  0EE5                     u249lld:
  9950  0EE5  01F2               	clrf	___aomod@sign
  9951  0EE6  0AF2               	incf	___aomod@sign,f
  9952  0EE7                     l2477:
  9953  0EE7  3020               	movlw	low ___aomod@divisor
  9954  0EE8  0086               	movwf	6
  9955  0EE9  3000               	movlw	high ___aomod@divisor
  9956  0EEA  0087               	movwf	7
  9957  0EEB  3F47               	moviw [7]fsr1
  9958  0EEC  00F0               	movwf	??___aomod
  9959  0EED  1FF0               	btfss	??___aomod,7
  9960  0EEE  2F0D               	goto	l2481
  9961  0EEF  0020               	movlb	0	; select bank0
  9962  0EF0  09A0               	comf	___aomod@divisor,f
  9963  0EF1  09A1               	comf	___aomod@divisor+1,f
  9964  0EF2  09A2               	comf	___aomod@divisor+2,f
  9965  0EF3  09A3               	comf	___aomod@divisor+3,f
  9966  0EF4  09A4               	comf	___aomod@divisor+4,f
  9967  0EF5  09A5               	comf	___aomod@divisor+5,f
  9968  0EF6  09A6               	comf	___aomod@divisor+6,f
  9969  0EF7  09A7               	comf	___aomod@divisor+7,f
  9970  0EF8  0FA0               	incfsz	___aomod@divisor,f
  9971  0EF9  2F0D               	goto	l2481
  9972  0EFA  0AA1               	incf	___aomod@divisor+1,f
  9973  0EFB  1D03               	skipz
  9974  0EFC  2F0D               	goto	l2481
  9975  0EFD  0AA2               	incf	___aomod@divisor+2,f
  9976  0EFE  1D03               	skipz
  9977  0EFF  2F0D               	goto	l2481
  9978  0F00  0AA3               	incf	___aomod@divisor+3,f
  9979  0F01  1D03               	skipz
  9980  0F02  2F0D               	goto	l2481
  9981  0F03  0AA4               	incf	___aomod@divisor+4,f
  9982  0F04  1D03               	skipz
  9983  0F05  2F0D               	goto	l2481
  9984  0F06  0AA5               	incf	___aomod@divisor+5,f
  9985  0F07  1D03               	skipz
  9986  0F08  2F0D               	goto	l2481
  9987  0F09  0AA6               	incf	___aomod@divisor+6,f
  9988  0F0A  1D03               	skipz
  9989  0F0B  2F0D               	goto	l2481
  9990  0F0C  0AA7               	incf	___aomod@divisor+7,f
  9991  0F0D                     l2481:
  9992  0F0D  0020               	movlb	0	; select bank0
  9993  0F0E  0820               	movf	___aomod@divisor,w
  9994  0F0F  0421               	iorwf	___aomod@divisor+1,w
  9995  0F10  0422               	iorwf	___aomod@divisor+2,w
  9996  0F11  0423               	iorwf	___aomod@divisor+3,w
  9997  0F12  0424               	iorwf	___aomod@divisor+4,w
  9998  0F13  0425               	iorwf	___aomod@divisor+5,w
  9999  0F14  0426               	iorwf	___aomod@divisor+6,w
 10000  0F15  0427               	iorwf	___aomod@divisor+7,w
 10001  0F16  1903               	skipnz
 10002  0F17  2F5F               	goto	l2497
 10003  0F18  01F1               	clrf	___aomod@counter
 10004  0F19                     L4:
 10005  0F19  0AF1               	incf	___aomod@counter,f
 10006  0F1A  1BA7               	btfsc	___aomod@divisor+7,7
 10007  0F1B  2F25               	goto	l2489
 10008  0F1C  35A0               	lslf	___aomod@divisor,f
 10009  0F1D  0DA1               	rlf	___aomod@divisor+1,f
 10010  0F1E  0DA2               	rlf	___aomod@divisor+2,f
 10011  0F1F  0DA3               	rlf	___aomod@divisor+3,f
 10012  0F20  0DA4               	rlf	___aomod@divisor+4,f
 10013  0F21  0DA5               	rlf	___aomod@divisor+5,f
 10014  0F22  0DA6               	rlf	___aomod@divisor+6,f
 10015  0F23  0DA7               	rlf	___aomod@divisor+7,f
 10016  0F24  2F19               	goto	L4
 10017  0F25                     l2489:
 10018  0F25  0827               	movf	___aomod@divisor+7,w
 10019  0F26  022F               	subwf	___aomod@dividend+7,w
 10020  0F27  1D03               	skipz
 10021  0F28  2F43               	goto	u2545
 10022  0F29  0826               	movf	___aomod@divisor+6,w
 10023  0F2A  022E               	subwf	___aomod@dividend+6,w
 10024  0F2B  1D03               	skipz
 10025  0F2C  2F43               	goto	u2545
 10026  0F2D  0825               	movf	___aomod@divisor+5,w
 10027  0F2E  022D               	subwf	___aomod@dividend+5,w
 10028  0F2F  1D03               	skipz
 10029  0F30  2F43               	goto	u2545
 10030  0F31  0824               	movf	___aomod@divisor+4,w
 10031  0F32  022C               	subwf	___aomod@dividend+4,w
 10032  0F33  1D03               	skipz
 10033  0F34  2F43               	goto	u2545
 10034  0F35  0823               	movf	___aomod@divisor+3,w
 10035  0F36  022B               	subwf	___aomod@dividend+3,w
 10036  0F37  1D03               	skipz
 10037  0F38  2F43               	goto	u2545
 10038  0F39  0822               	movf	___aomod@divisor+2,w
 10039  0F3A  022A               	subwf	___aomod@dividend+2,w
 10040  0F3B  1D03               	skipz
 10041  0F3C  2F43               	goto	u2545
 10042  0F3D  0821               	movf	___aomod@divisor+1,w
 10043  0F3E  0229               	subwf	___aomod@dividend+1,w
 10044  0F3F  1D03               	skipz
 10045  0F40  2F43               	goto	u2545
 10046  0F41  0820               	movf	___aomod@divisor,w
 10047  0F42  0228               	subwf	___aomod@dividend,w
 10048  0F43                     u2545:
 10049  0F43  1C03               	skipc
 10050  0F44  2F55               	goto	l2493
 10051  0F45  0820               	movf	___aomod@divisor,w
 10052  0F46  02A8               	subwf	___aomod@dividend,f
 10053  0F47  0821               	movf	___aomod@divisor+1,w
 10054  0F48  3BA9               	subwfb	___aomod@dividend+1,f
 10055  0F49  0822               	movf	___aomod@divisor+2,w
 10056  0F4A  3BAA               	subwfb	___aomod@dividend+2,f
 10057  0F4B  0823               	movf	___aomod@divisor+3,w
 10058  0F4C  3BAB               	subwfb	___aomod@dividend+3,f
 10059  0F4D  0824               	movf	___aomod@divisor+4,w
 10060  0F4E  3BAC               	subwfb	___aomod@dividend+4,f
 10061  0F4F  0825               	movf	___aomod@divisor+5,w
 10062  0F50  3BAD               	subwfb	___aomod@dividend+5,f
 10063  0F51  0826               	movf	___aomod@divisor+6,w
 10064  0F52  3BAE               	subwfb	___aomod@dividend+6,f
 10065  0F53  0827               	movf	___aomod@divisor+7,w
 10066  0F54  3BAF               	subwfb	___aomod@dividend+7,f
 10067  0F55                     l2493:
 10068  0F55  36A7               	lsrf	___aomod@divisor+7,f
 10069  0F56  0CA6               	rrf	___aomod@divisor+6,f
 10070  0F57  0CA5               	rrf	___aomod@divisor+5,f
 10071  0F58  0CA4               	rrf	___aomod@divisor+4,f
 10072  0F59  0CA3               	rrf	___aomod@divisor+3,f
 10073  0F5A  0CA2               	rrf	___aomod@divisor+2,f
 10074  0F5B  0CA1               	rrf	___aomod@divisor+1,f
 10075  0F5C  0CA0               	rrf	___aomod@divisor,f
 10076  0F5D  0BF1               	decfsz	___aomod@counter,f
 10077  0F5E  2F25               	goto	l2489
 10078  0F5F                     l2497:
 10079  0F5F  0872               	movf	___aomod@sign,w
 10080  0F60  1903               	btfsc	3,2
 10081  0F61  2F79               	goto	l566
 10082  0F62  27D8  3189         	fcall	PL40	;call to abstracted procedure
 10083  0F64  0FA8               	incfsz	___aomod@dividend,f
 10084  0F65  2F79               	goto	l566
 10085  0F66  0AA9               	incf	___aomod@dividend+1,f
 10086  0F67  1D03               	skipz
 10087  0F68  2F79               	goto	l566
 10088  0F69  0AAA               	incf	___aomod@dividend+2,f
 10089  0F6A  1D03               	skipz
 10090  0F6B  2F79               	goto	l566
 10091  0F6C  0AAB               	incf	___aomod@dividend+3,f
 10092  0F6D  1D03               	skipz
 10093  0F6E  2F79               	goto	l566
 10094  0F6F  0AAC               	incf	___aomod@dividend+4,f
 10095  0F70  1D03               	skipz
 10096  0F71  2F79               	goto	l566
 10097  0F72  0AAD               	incf	___aomod@dividend+5,f
 10098  0F73  1D03               	skipz
 10099  0F74  2F79               	goto	l566
 10100  0F75  0AAE               	incf	___aomod@dividend+6,f
 10101  0F76  1D03               	skipz
 10102  0F77  2F79               	goto	l566
 10103  0F78  0AAF               	incf	___aomod@dividend+7,f
 10104  0F79                     l566:
 10105  0F79  0020               	movlb	0	; select bank0
 10106  0F7A  0828               	movf	___aomod@dividend,w
 10107  0F7B  00A0               	movwf	?___aomod
 10108  0F7C  0829               	movf	___aomod@dividend+1,w
 10109  0F7D  00A1               	movwf	?___aomod+1
 10110  0F7E  082A               	movf	___aomod@dividend+2,w
 10111  0F7F  00A2               	movwf	?___aomod+2
 10112  0F80  082B               	movf	___aomod@dividend+3,w
 10113  0F81  00A3               	movwf	?___aomod+3
 10114  0F82  082C               	movf	___aomod@dividend+4,w
 10115  0F83  00A4               	movwf	?___aomod+4
 10116  0F84  082D               	movf	___aomod@dividend+5,w
 10117  0F85  00A5               	movwf	?___aomod+5
 10118  0F86  082E               	movf	___aomod@dividend+6,w
 10119  0F87  00A6               	movwf	?___aomod+6
 10120  0F88  082F               	movf	___aomod@dividend+7,w
 10121  0F89  00A7               	movwf	?___aomod+7
 10122  0F8A  0008               	return
 10123  0F8B                     __end_of___aomod:
 10124  0F8B                     __ptext20:	
 10125 ;; *************** function _abs *****************
 10126 ;; Defined at:
 10127 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
 10128 ;; Parameters:    Size  Location     Type
 10129 ;;  a               2    3[COMMON] int 
 10130 ;; Auto vars:     Size  Location     Type
 10131 ;;		None
 10132 ;; Return value:  Size  Location     Type
 10133 ;;                  2    3[COMMON] int 
 10134 ;; Registers used:
 10135 ;;		wreg, status,2, status,0
 10136 ;; Tracked objects:
 10137 ;;		On entry : 1F/0
 10138 ;;		On exit  : 0/0
 10139 ;;		Unchanged: 0/0
 10140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10141 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10143 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10144 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10145 ;;Total ram usage:        4 bytes
 10146 ;; Hardware stack levels used: 1
 10147 ;; This function calls:
 10148 ;;		Nothing
 10149 ;; This function is called by:
 10150 ;;		_dtoa
 10151 ;; This function uses a non-reentrant model
 10152 ;;
 10153                           
 10154                           
 10155                           ;psect for function _abs
 10156  0F8B                     _abs:
 10157                           
 10158                           ;incstack = 0
 10159                           ; Regs used in _abs: [wreg+status,2+status,0]
 10160  0F8B  0874               	movf	abs@a+1,w
 10161  0F8C  3A80               	xorlw	128
 10162  0F8D  00F5               	movwf	??_abs
 10163  0F8E  3080               	movlw	128
 10164  0F8F  0275               	subwf	??_abs,w
 10165  0F90  1D03               	skipz
 10166  0F91  2F94               	goto	u2625
 10167  0F92  3001               	movlw	1
 10168  0F93  0273               	subwf	abs@a,w
 10169  0F94                     u2625:
 10170  0F94  1803               	skipnc
 10171  0F95  0008               	return
 10172  0F96  0973               	comf	abs@a,w
 10173  0F97  00F5               	movwf	??_abs
 10174  0F98  0974               	comf	abs@a+1,w
 10175  0F99  00F6               	movwf	??_abs+1
 10176  0F9A  0AF5               	incf	??_abs,f
 10177  0F9B  1903               	skipnz
 10178  0F9C  0AF6               	incf	??_abs+1,f
 10179  0F9D  0875               	movf	??_abs,w
 10180  0F9E  00F3               	movwf	?_abs
 10181  0F9F  0876               	movf	??_abs+1,w
 10182  0FA0  00F4               	movwf	?_abs+1
 10183  0FA1  0008               	return
 10184  0FA2                     __end_of_abs:
 10185  0FA2                     PL2:
 10186  0FA2  084E               	movf	vfpfcnvrt@fmt,w
 10187  0FA3  0086               	movwf	6
 10188  0FA4  0187               	clrf	7
 10189  0FA5  3F40               	moviw [0]fsr1
 10190  0FA6  00D0               	movwf	??_vfpfcnvrt
 10191  0FA7  3F41               	moviw [1]fsr1
 10192  0FA8  00D1               	movwf	??_vfpfcnvrt+1
 10193  0FA9  0850               	movf	??_vfpfcnvrt,w
 10194  0FAA  0084               	movwf	4
 10195  0FAB  0851               	movf	??_vfpfcnvrt+1,w
 10196  0FAC  0085               	movwf	5
 10197  0FAD  0012               	moviw fsr0++
 10198  0FAE  0008               	return
 10199  0FAF                     __end_ofPL2:
 10200  0FAF                     PL4:
 10201  0FAF  0086               	movwf	6
 10202  0FB0  0187               	clrf	7
 10203  0FB1  3F40               	moviw [0]fsr1
 10204  0FB2  00D0               	movwf	??_vfpfcnvrt
 10205  0FB3  3F41               	moviw [1]fsr1
 10206  0FB4  00D1               	movwf	??_vfpfcnvrt+1
 10207  0FB5  0850               	movf	??_vfpfcnvrt,w
 10208  0FB6  0084               	movwf	4
 10209  0FB7  0851               	movf	??_vfpfcnvrt+1,w
 10210  0FB8  0085               	movwf	5
 10211  0FB9  0800               	movf	0,w	;code access
 10212  0FBA  0008               	return
 10213  0FBB                     __end_ofPL4:
 10214  0FBB                     PL12:
 10215  0FBB  084E               	movf	vfpfcnvrt@fmt,w
 10216  0FBC  0086               	movwf	6
 10217  0FBD  3001               	movlw	1
 10218  0FBE  0187               	clrf	7
 10219  0FBF  0781               	addwf	1,f
 10220  0FC0  3141               	addfsr 1,1
 10221  0FC1  0008               	return
 10222  0FC2                     __end_ofPL12:
 10223  0FC2                     PL24:
 10224  0FC2  0020               	movlb	0	; select bank0
 10225  0FC3  0830               	movf	stoa@l+1,w
 10226  0FC4  3A80               	xorlw	128
 10227  0FC5  00FD               	movwf	??_stoa
 10228  0FC6  082A               	movf	stoa@w+1,w
 10229  0FC7  3A80               	xorlw	128
 10230  0FC8  027D               	subwf	??_stoa,w
 10231  0FC9  1D03               	skipz
 10232  0FCA  0008               	return
 10233  0FCB  0829               	movf	stoa@w,w
 10234  0FCC  022F               	subwf	stoa@l,w
 10235  0FCD  0008               	return
 10236  0FCE                     __end_ofPL24:
 10237  0FCE                     PL28:
 10238  0FCE  084F               	movf	vfpfcnvrt@ap,w
 10239  0FCF  0086               	movwf	6
 10240  0FD0  0187               	clrf	7
 10241  0FD1  0801               	movf	1,w
 10242  0FD2  0084               	movwf	4
 10243  0FD3  3002               	movlw	2
 10244  0FD4  0185               	clrf	5
 10245  0FD5  0781               	addwf	1,f
 10246  0FD6  3F00               	moviw [0]fsr0
 10247  0FD7  0008               	return
 10248  0FD8                     __end_ofPL28:
 10249  0FD8                     PL40:
 10250  0FD8  09A8               	comf	___aomod@dividend,f
 10251  0FD9  09A9               	comf	___aomod@dividend+1,f
 10252  0FDA  09AA               	comf	___aomod@dividend+2,f
 10253  0FDB  09AB               	comf	___aomod@dividend+3,f
 10254  0FDC  09AC               	comf	___aomod@dividend+4,f
 10255  0FDD  09AD               	comf	___aomod@dividend+5,f
 10256  0FDE  09AE               	comf	___aomod@dividend+6,f
 10257  0FDF  09AF               	comf	___aomod@dividend+7,f
 10258  0FE0  0008               	return
 10259  0FE1                     __end_ofPL40:
 10260  0FE1                     PL46:
 10261  0FE1  3020               	movlw	32
 10262  0FE2  00F3               	movwf	fputc@c
 10263  0FE3  01F4               	clrf	fputc@c+1
 10264  0FE4  0020               	movlb	0	; select bank0
 10265  0FE5  082B               	movf	stoa@fp,w
 10266  0FE6  00F5               	movwf	fputc@fp
 10267  0FE7  0008               	return
 10268  0FE8                     __end_ofPL46:
 10269  0FE8                     PL50:
 10270  0FE8  0021               	movlb	1	; select bank1
 10271  0FE9  1FA5               	btfss	(_prec+1)^(0+128),7
 10272  0FEA  10A6               	bcf	_flags^(0+128),1
 10273  0FEB  0825               	movf	(_prec+1)^(0+128),w
 10274  0FEC  3A80               	xorlw	128
 10275  0FED  0020               	movlb	0	; select bank0
 10276  0FEE  0008               	return
 10277  0FEF                     __end_ofPL50:
 10278  0FEF                     PL54:
 10279  0FEF  07CC               	addwf	xtoa@i,f
 10280  0FF0  1C03               	skipc
 10281  0FF1  03CD               	decf	xtoa@i+1,f
 10282  0FF2  084C               	movf	xtoa@i,w
 10283  0FF3  3EAA               	addlw	(low (_dbuf| 0))& (0+255)
 10284  0FF4  0086               	movwf	6
 10285  0FF5  0008               	return
 10286  0FF6                     __end_ofPL54:
 10287  0FF6                     PL70:
 10288  0FF6  00F3               	movwf	fputc@c
 10289  0FF7  01F4               	clrf	fputc@c+1
 10290  0FF8  0865               	movf	vfpfcnvrt@fp,w
 10291  0FF9  00F5               	movwf	fputc@fp
 10292  0FFA  0008               	return
 10293  0FFB                     __end_ofPL70:
 10294  0FFB                     PL80:
 10295  0FFB  0020               	movlb	0	; select bank0
 10296  0FFC  082B               	movf	pad@fp,w
 10297  0FFD  00FB               	movwf	fputs@fp
 10298  0FFE  0824               	movf	pad@buf,w
 10299  0FFF  0008               	return
 10300  1000                     __end_ofPL80:
 10301                           
 10302                           	psect	text9
 10303  003D                     __ptext9:	
 10304 ;; *************** function _islower *****************
 10305 ;; Defined at:
 10306 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\islower.c"
 10307 ;; Parameters:    Size  Location     Type
 10308 ;;  c               2    0[COMMON] int 
 10309 ;; Auto vars:     Size  Location     Type
 10310 ;;		None
 10311 ;; Return value:  Size  Location     Type
 10312 ;;                  2    0[COMMON] int 
 10313 ;; Registers used:
 10314 ;;		wreg, status,2, status,0
 10315 ;; Tracked objects:
 10316 ;;		On entry : 0/0
 10317 ;;		On exit  : 0/0
 10318 ;;		Unchanged: 0/0
 10319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10320 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10322 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10323 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10324 ;;Total ram usage:        4 bytes
 10325 ;; Hardware stack levels used: 1
 10326 ;; This function calls:
 10327 ;;		Nothing
 10328 ;; This function is called by:
 10329 ;;		_toupper
 10330 ;; This function uses a non-reentrant model
 10331 ;;
 10332                           
 10333                           
 10334                           ;psect for function _islower
 10335  003D                     _islower:
 10336                           
 10337                           ;incstack = 0
 10338                           ; Regs used in _islower: [wreg+status,2+status,0]
 10339  003D  0870               	movf	islower@c,w
 10340  003E  3E9F               	addlw	159
 10341  003F  00F2               	movwf	??_islower
 10342  0040  30FF               	movlw	255
 10343  0041  3D71               	addwfc	islower@c+1,w
 10344  0042  00F3               	movwf	??_islower+1
 10345  0043  3000               	movlw	0
 10346  0044  0273               	subwf	??_islower+1,w
 10347  0045  301A               	movlw	26
 10348  0046  1903               	skipnz
 10349  0047  0272               	subwf	??_islower,w
 10350  0048  1803               	btfsc	3,0
 10351  0049  284C               	goto	u2350
 10352  004A  3001               	movlw	1
 10353  004B  284D               	goto	u2360
 10354  004C                     u2350:
 10355  004C  3000               	movlw	0
 10356  004D                     u2360:
 10357  004D  00F0               	movwf	?_islower
 10358  004E  01F1               	clrf	?_islower+1
 10359  004F  0008               	return
 10360  0050                     __end_of_islower:
 10361                           
 10362                           	psect	text10
 10363  002A                     __ptext10:	
 10364 ;; *************** function _isupper *****************
 10365 ;; Defined at:
 10366 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
 10367 ;; Parameters:    Size  Location     Type
 10368 ;;  c               2    0[COMMON] int 
 10369 ;; Auto vars:     Size  Location     Type
 10370 ;;		None
 10371 ;; Return value:  Size  Location     Type
 10372 ;;                  2    0[COMMON] int 
 10373 ;; Registers used:
 10374 ;;		wreg, status,2, status,0
 10375 ;; Tracked objects:
 10376 ;;		On entry : 0/0
 10377 ;;		On exit  : 0/0
 10378 ;;		Unchanged: 0/0
 10379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10380 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10382 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10383 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10384 ;;Total ram usage:        4 bytes
 10385 ;; Hardware stack levels used: 1
 10386 ;; This function calls:
 10387 ;;		Nothing
 10388 ;; This function is called by:
 10389 ;;		_xtoa
 10390 ;; This function uses a non-reentrant model
 10391 ;;
 10392                           
 10393                           
 10394                           ;psect for function _isupper
 10395  002A                     _isupper:
 10396                           
 10397                           ;incstack = 0
 10398                           ; Regs used in _isupper: [wreg+status,2+status,0]
 10399  002A  0870               	movf	isupper@c,w
 10400  002B  3EBF               	addlw	191
 10401  002C  00F2               	movwf	??_isupper
 10402  002D  30FF               	movlw	255
 10403  002E  3D71               	addwfc	isupper@c+1,w
 10404  002F  00F3               	movwf	??_isupper+1
 10405  0030  3000               	movlw	0
 10406  0031  0273               	subwf	??_isupper+1,w
 10407  0032  301A               	movlw	26
 10408  0033  1903               	skipnz
 10409  0034  0272               	subwf	??_isupper,w
 10410  0035  1803               	btfsc	3,0
 10411  0036  2839               	goto	u2630
 10412  0037  3001               	movlw	1
 10413  0038  283A               	goto	u2640
 10414  0039                     u2630:
 10415  0039  3000               	movlw	0
 10416  003A                     u2640:
 10417  003A  00F0               	movwf	?_isupper
 10418  003B  01F1               	clrf	?_isupper+1
 10419  003C  0008               	return
 10420  003D                     __end_of_isupper:
 10421                           
 10422                           	psect	text11
 10423  0050                     __ptext11:	
 10424 ;; *************** function _isalpha *****************
 10425 ;; Defined at:
 10426 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isalpha.c"
 10427 ;; Parameters:    Size  Location     Type
 10428 ;;  c               2    0[COMMON] int 
 10429 ;; Auto vars:     Size  Location     Type
 10430 ;;		None
 10431 ;; Return value:  Size  Location     Type
 10432 ;;                  2    0[COMMON] int 
 10433 ;; Registers used:
 10434 ;;		wreg, status,2, status,0
 10435 ;; Tracked objects:
 10436 ;;		On entry : 0/0
 10437 ;;		On exit  : 0/0
 10438 ;;		Unchanged: 0/0
 10439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10440 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10442 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10443 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10444 ;;Total ram usage:        6 bytes
 10445 ;; Hardware stack levels used: 1
 10446 ;; This function calls:
 10447 ;;		Nothing
 10448 ;; This function is called by:
 10449 ;;		_xtoa
 10450 ;; This function uses a non-reentrant model
 10451 ;;
 10452                           
 10453                           
 10454                           ;psect for function _isalpha
 10455  0050                     _isalpha:
 10456                           
 10457                           ;incstack = 0
 10458                           ; Regs used in _isalpha: [wreg+status,2+status,0]
 10459  0050  3020               	movlw	32
 10460  0051  0470               	iorwf	isalpha@c,w
 10461  0052  00F2               	movwf	??_isalpha
 10462  0053  0871               	movf	isalpha@c+1,w
 10463  0054  00F3               	movwf	??_isalpha+1
 10464  0055  0872               	movf	??_isalpha,w
 10465  0056  3E9F               	addlw	159
 10466  0057  00F4               	movwf	??_isalpha+2
 10467  0058  30FF               	movlw	255
 10468  0059  3D73               	addwfc	??_isalpha+1,w
 10469  005A  00F5               	movwf	??_isalpha+3
 10470  005B  3000               	movlw	0
 10471  005C  0275               	subwf	??_isalpha+3,w
 10472  005D  301A               	movlw	26
 10473  005E  1903               	skipnz
 10474  005F  0274               	subwf	??_isalpha+2,w
 10475  0060  1803               	btfsc	3,0
 10476  0061  2864               	goto	u2650
 10477  0062  3001               	movlw	1
 10478  0063  2865               	goto	u2660
 10479  0064                     u2650:
 10480  0064  3000               	movlw	0
 10481  0065                     u2660:
 10482  0065  00F0               	movwf	?_isalpha
 10483  0066  01F1               	clrf	?_isalpha+1
 10484  0067  0008               	return
 10485  0068                     __end_of_isalpha:
 10486                           
 10487                           	psect	text41
 10488  082C                     __ptext41:	
 10489 ;; *************** function ___fladd *****************
 10490 ;; Defined at:
 10491 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
 10492 ;; Parameters:    Size  Location     Type
 10493 ;;  b               4   35[BANK0 ] long 
 10494 ;;  a               4   39[BANK0 ] long 
 10495 ;; Auto vars:     Size  Location     Type
 10496 ;;  grs             1   54[BANK0 ] unsigned char 
 10497 ;;  bexp            1   53[BANK0 ] unsigned char 
 10498 ;;  aexp            1   52[BANK0 ] unsigned char 
 10499 ;;  signs           1   51[BANK0 ] unsigned char 
 10500 ;; Return value:  Size  Location     Type
 10501 ;;                  4   35[BANK0 ] unsigned char 
 10502 ;; Registers used:
 10503 ;;		wreg, status,2, status,0
 10504 ;; Tracked objects:
 10505 ;;		On entry : 1F/0
 10506 ;;		On exit  : 1F/0
 10507 ;;		Unchanged: 0/0
 10508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10509 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10510 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10511 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10512 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10513 ;;Total ram usage:       20 bytes
 10514 ;; Hardware stack levels used: 1
 10515 ;; This function calls:
 10516 ;;		Nothing
 10517 ;; This function is called by:
 10518 ;;		_FLOAT_to_string
 10519 ;;		_MLX90614_readObjectTempC
 10520 ;;		_MLX90614_readAmbientTempC
 10521 ;;		___flsub
 10522 ;; This function uses a non-reentrant model
 10523 ;;
 10524                           
 10525                           
 10526                           ;psect for function ___fladd
 10527  082C                     ___fladd:
 10528                           
 10529                           ;incstack = 0
 10530                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 10531  082C  0846               	movf	___fladd@b+3,w
 10532  082D  00D3               	movwf	___fladd@signs
 10533  082E  3080               	movlw	128
 10534  082F  05D3               	andwf	___fladd@signs,f
 10535  0830  3546               	lslf	___fladd@b+3,w
 10536  0831  00D5               	movwf	___fladd@bexp
 10537  0832  1BC5               	btfsc	___fladd@b+2,7
 10538  0833  1455               	bsf	___fladd@bexp,0
 10539  0834  0855               	movf	___fladd@bexp,w
 10540  0835  1903               	btfsc	3,2
 10541  0836  283F               	goto	l747
 10542  0837  0F55               	incfsz	___fladd@bexp,w
 10543  0838  283D               	goto	l748
 10544  0839  01C3               	clrf	___fladd@b
 10545  083A  01C4               	clrf	___fladd@b+1
 10546  083B  01C5               	clrf	___fladd@b+2
 10547  083C  01C6               	clrf	___fladd@b+3
 10548  083D                     l748:
 10549  083D  17C5               	bsf	___fladd@b+2,7
 10550  083E  2842               	goto	L6
 10551  083F                     l747:
 10552  083F  01C3               	clrf	___fladd@b
 10553  0840  01C4               	clrf	___fladd@b+1
 10554  0841  01C5               	clrf	___fladd@b+2
 10555  0842                     L6:
 10556  0842  01C6               	clrf	___fladd@b+3
 10557  0843  084A               	movf	___fladd@a+3,w
 10558  0844  00D4               	movwf	___fladd@aexp
 10559  0845  3080               	movlw	128
 10560  0846  05D4               	andwf	___fladd@aexp,f
 10561  0847  0854               	movf	___fladd@aexp,w
 10562  0848  0653               	xorwf	___fladd@signs,w
 10563  0849  1D03               	btfss	3,2
 10564  084A  1753               	bsf	___fladd@signs,6
 10565  084B  354A               	lslf	___fladd@a+3,w
 10566  084C  00D4               	movwf	___fladd@aexp
 10567  084D  1BC9               	btfsc	___fladd@a+2,7
 10568  084E  1454               	bsf	___fladd@aexp,0
 10569  084F  0854               	movf	___fladd@aexp,w
 10570  0850  1903               	btfsc	3,2
 10571  0851  285A               	goto	l752
 10572  0852  0F54               	incfsz	___fladd@aexp,w
 10573  0853  2858               	goto	l753
 10574  0854  01C7               	clrf	___fladd@a
 10575  0855  01C8               	clrf	___fladd@a+1
 10576  0856  01C9               	clrf	___fladd@a+2
 10577  0857  01CA               	clrf	___fladd@a+3
 10578  0858                     l753:
 10579  0858  17C9               	bsf	___fladd@a+2,7
 10580  0859  285D               	goto	L7
 10581  085A                     l752:
 10582  085A  01C7               	clrf	___fladd@a
 10583  085B  01C8               	clrf	___fladd@a+1
 10584  085C  01C9               	clrf	___fladd@a+2
 10585  085D                     L7:
 10586  085D  01CA               	clrf	___fladd@a+3
 10587  085E  0855               	movf	___fladd@bexp,w
 10588  085F  0254               	subwf	___fladd@aexp,w
 10589  0860  1803               	skipnc
 10590  0861  2884               	goto	l2907
 10591  0862  1F53               	btfss	___fladd@signs,6
 10592  0863  2866               	goto	l2877
 10593  0864  3080               	movlw	128
 10594  0865  06D3               	xorwf	___fladd@signs,f
 10595  0866                     l2877:
 10596  0866  0855               	movf	___fladd@bexp,w
 10597  0867  00D6               	movwf	___fladd@grs
 10598  0868  0854               	movf	___fladd@aexp,w
 10599  0869  00D5               	movwf	___fladd@bexp
 10600  086A  0856               	movf	___fladd@grs,w
 10601  086B  00D4               	movwf	___fladd@aexp
 10602  086C  0843               	movf	___fladd@b,w
 10603  086D  00D6               	movwf	___fladd@grs
 10604  086E  0847               	movf	___fladd@a,w
 10605  086F  00C3               	movwf	___fladd@b
 10606  0870  0856               	movf	___fladd@grs,w
 10607  0871  00C7               	movwf	___fladd@a
 10608  0872  0844               	movf	___fladd@b+1,w
 10609  0873  00D6               	movwf	___fladd@grs
 10610  0874  0848               	movf	___fladd@a+1,w
 10611  0875  00C4               	movwf	___fladd@b+1
 10612  0876  0856               	movf	___fladd@grs,w
 10613  0877  00C8               	movwf	___fladd@a+1
 10614  0878  0845               	movf	___fladd@b+2,w
 10615  0879  00D6               	movwf	___fladd@grs
 10616  087A  0849               	movf	___fladd@a+2,w
 10617  087B  00C5               	movwf	___fladd@b+2
 10618  087C  0856               	movf	___fladd@grs,w
 10619  087D  00C9               	movwf	___fladd@a+2
 10620  087E  0846               	movf	___fladd@b+3,w
 10621  087F  00D6               	movwf	___fladd@grs
 10622  0880  084A               	movf	___fladd@a+3,w
 10623  0881  00C6               	movwf	___fladd@b+3
 10624  0882  0856               	movf	___fladd@grs,w
 10625  0883  00CA               	movwf	___fladd@a+3
 10626  0884                     l2907:
 10627  0884  01D6               	clrf	___fladd@grs
 10628  0885  0854               	movf	___fladd@aexp,w
 10629  0886  00CB               	movwf	??___fladd
 10630  0887  01CC               	clrf	??___fladd+1
 10631  0888  084C               	movf	??___fladd+1,w
 10632  0889  00CE               	movwf	??___fladd+3
 10633  088A  0855               	movf	___fladd@bexp,w
 10634  088B  024B               	subwf	??___fladd,w
 10635  088C  00CD               	movwf	??___fladd+2
 10636  088D  1C03               	skipc
 10637  088E  03CE               	decf	??___fladd+3,f
 10638  088F  084E               	movf	??___fladd+3,w
 10639  0890  3A80               	xorlw	128
 10640  0891  00CF               	movwf	??___fladd+4
 10641  0892  3080               	movlw	128
 10642  0893  024F               	subwf	??___fladd+4,w
 10643  0894  1D03               	skipz
 10644  0895  2898               	goto	u3375
 10645  0896  301A               	movlw	26
 10646  0897  024D               	subwf	??___fladd+2,w
 10647  0898                     u3375:
 10648  0898  1C03               	skipc
 10649  0899  28B5               	goto	l2921
 10650  089A  0020               	movlb	0	; select bank0
 10651  089B  0846               	movf	___fladd@b+3,w
 10652  089C  0445               	iorwf	___fladd@b+2,w
 10653  089D  0444               	iorwf	___fladd@b+1,w
 10654  089E  0443               	iorwf	___fladd@b,w
 10655  089F  1903               	btfsc	3,2
 10656  08A0  28A3               	goto	u3380
 10657  08A1  3001               	movlw	1
 10658  08A2  28A4               	goto	u3390
 10659  08A3                     u3380:
 10660  08A3  3000               	movlw	0
 10661  08A4                     u3390:
 10662  08A4  00D6               	movwf	___fladd@grs
 10663  08A5  01C3               	clrf	___fladd@b
 10664  08A6  01C4               	clrf	___fladd@b+1
 10665  08A7  01C5               	clrf	___fladd@b+2
 10666  08A8  01C6               	clrf	___fladd@b+3
 10667  08A9  0854               	movf	___fladd@aexp,w
 10668  08AA  00D5               	movwf	___fladd@bexp
 10669  08AB  28BA               	goto	l758
 10670  08AC                     l760:
 10671  08AC  1C56               	btfss	___fladd@grs,0
 10672  08AD  28B2               	goto	l761
 10673  08AE  3656               	lsrf	___fladd@grs,w
 10674  08AF  3801               	iorlw	1
 10675  08B0  00D6               	movwf	___fladd@grs
 10676  08B1  28B3               	goto	l762
 10677  08B2                     l761:
 10678  08B2  36D6               	lsrf	___fladd@grs,f
 10679  08B3                     l762:
 10680  08B3  2162  3188         	fcall	PL44	;call to abstracted procedure
 10681  08B5                     l2921:
 10682  08B5  0020               	movlb	0	; select bank0
 10683  08B6  0854               	movf	___fladd@aexp,w
 10684  08B7  0255               	subwf	___fladd@bexp,w
 10685  08B8  1C03               	skipc
 10686  08B9  28AC               	goto	l760
 10687  08BA                     l758:
 10688  08BA  1B53               	btfsc	___fladd@signs,6
 10689  08BB  28D4               	goto	l2939
 10690  08BC  0855               	movf	___fladd@bexp,w
 10691  08BD  1D03               	btfss	3,2
 10692  08BE  28C0               	goto	l2927
 10693  08BF  2971               	ljmp	PL68	;call to abstracted procedure
 10694  08C0                     l2927:
 10695  08C0  0847               	movf	___fladd@a,w
 10696  08C1  07C3               	addwf	___fladd@b,f
 10697  08C2  0848               	movf	___fladd@a+1,w
 10698  08C3  3DC4               	addwfc	___fladd@b+1,f
 10699  08C4  0849               	movf	___fladd@a+2,w
 10700  08C5  3DC5               	addwfc	___fladd@b+2,f
 10701  08C6  084A               	movf	___fladd@a+3,w
 10702  08C7  3DC6               	addwfc	___fladd@b+3,f
 10703  08C8  1C46               	btfss	___fladd@b+3,0
 10704  08C9  2934               	goto	l2969
 10705  08CA  1C56               	btfss	___fladd@grs,0
 10706  08CB  28D0               	goto	l769
 10707  08CC  3656               	lsrf	___fladd@grs,w
 10708  08CD  3801               	iorlw	1
 10709  08CE  00D6               	movwf	___fladd@grs
 10710  08CF  28D1               	goto	l770
 10711  08D0                     l769:
 10712  08D0  36D6               	lsrf	___fladd@grs,f
 10713  08D1                     l770:
 10714  08D1  2162  3188         	fcall	PL44	;call to abstracted procedure
 10715  08D3  2934               	goto	l2969
 10716  08D4                     l2939:
 10717  08D4  0846               	movf	___fladd@b+3,w
 10718  08D5  3A80               	xorlw	128
 10719  08D6  00CB               	movwf	??___fladd
 10720  08D7  084A               	movf	___fladd@a+3,w
 10721  08D8  3A80               	xorlw	128
 10722  08D9  024B               	subwf	??___fladd,w
 10723  08DA  1D03               	skipz
 10724  08DB  28E6               	goto	u3483
 10725  08DC  0849               	movf	___fladd@a+2,w
 10726  08DD  0245               	subwf	___fladd@b+2,w
 10727  08DE  1D03               	skipz
 10728  08DF  28E6               	goto	u3483
 10729  08E0  0848               	movf	___fladd@a+1,w
 10730  08E1  0244               	subwf	___fladd@b+1,w
 10731  08E2  1D03               	skipz
 10732  08E3  28E6               	goto	u3483
 10733  08E4  0847               	movf	___fladd@a,w
 10734  08E5  0243               	subwf	___fladd@b,w
 10735  08E6                     u3483:
 10736  08E6  1803               	skipnc
 10737  08E7  2911               	goto	l2949
 10738  08E8  30FF               	movlw	255
 10739  08E9  00CB               	movwf	??___fladd
 10740  08EA  00CC               	movwf	??___fladd+1
 10741  08EB  00CD               	movwf	??___fladd+2
 10742  08EC  00CE               	movwf	??___fladd+3
 10743  08ED  0843               	movf	___fladd@b,w
 10744  08EE  0247               	subwf	___fladd@a,w
 10745  08EF  00CF               	movwf	??___fladd+4
 10746  08F0  0844               	movf	___fladd@b+1,w
 10747  08F1  3B48               	subwfb	___fladd@a+1,w
 10748  08F2  00D0               	movwf	??___fladd+5
 10749  08F3  0845               	movf	___fladd@b+2,w
 10750  08F4  3B49               	subwfb	___fladd@a+2,w
 10751  08F5  00D1               	movwf	??___fladd+6
 10752  08F6  0846               	movf	___fladd@b+3,w
 10753  08F7  3B4A               	subwfb	___fladd@a+3,w
 10754  08F8  00D2               	movwf	??___fladd+7
 10755  08F9  084F               	movf	??___fladd+4,w
 10756  08FA  07CB               	addwf	??___fladd,f
 10757  08FB  0850               	movf	??___fladd+5,w
 10758  08FC  3DCC               	addwfc	??___fladd+1,f
 10759  08FD  0851               	movf	??___fladd+6,w
 10760  08FE  3DCD               	addwfc	??___fladd+2,f
 10761  08FF  0852               	movf	??___fladd+7,w
 10762  0900  3DCE               	addwfc	??___fladd+3,f
 10763  0901  084E               	movf	??___fladd+3,w
 10764  0902  00C6               	movwf	___fladd@b+3
 10765  0903  084D               	movf	??___fladd+2,w
 10766  0904  00C5               	movwf	___fladd@b+2
 10767  0905  084C               	movf	??___fladd+1,w
 10768  0906  00C4               	movwf	___fladd@b+1
 10769  0907  084B               	movf	??___fladd,w
 10770  0908  00C3               	movwf	___fladd@b
 10771  0909  3080               	movlw	128
 10772  090A  06D3               	xorwf	___fladd@signs,f
 10773  090B  09D6               	comf	___fladd@grs,f
 10774  090C  0FD6               	incfsz	___fladd@grs,f
 10775  090D  2919               	goto	l775
 10776  090E  216A  3188         	fcall	PL56	;call to abstracted procedure
 10777  0910  2919               	goto	l775
 10778  0911                     l2949:
 10779  0911  0847               	movf	___fladd@a,w
 10780  0912  02C3               	subwf	___fladd@b,f
 10781  0913  0848               	movf	___fladd@a+1,w
 10782  0914  3BC4               	subwfb	___fladd@b+1,f
 10783  0915  0849               	movf	___fladd@a+2,w
 10784  0916  3BC5               	subwfb	___fladd@b+2,f
 10785  0917  084A               	movf	___fladd@a+3,w
 10786  0918  3BC6               	subwfb	___fladd@b+3,f
 10787  0919                     l775:
 10788  0919  0846               	movf	___fladd@b+3,w
 10789  091A  0445               	iorwf	___fladd@b+2,w
 10790  091B  0444               	iorwf	___fladd@b+1,w
 10791  091C  0443               	iorwf	___fladd@b,w
 10792  091D  1D03               	skipz
 10793  091E  2932               	goto	l2967
 10794  091F  0856               	movf	___fladd@grs,w
 10795  0920  1D03               	btfss	3,2
 10796  0921  2932               	goto	l2967
 10797  0922  2971               	ljmp	PL68	;call to abstracted procedure
 10798  0923                     l2955:
 10799  0923  35C3               	lslf	___fladd@b,f
 10800  0924  0DC4               	rlf	___fladd@b+1,f
 10801  0925  0DC5               	rlf	___fladd@b+2,f
 10802  0926  0DC6               	rlf	___fladd@b+3,f
 10803  0927  1BD6               	btfsc	___fladd@grs,7
 10804  0928  1443               	bsf	___fladd@b,0
 10805  0929  1C56               	btfss	___fladd@grs,0
 10806  092A  292E               	goto	l780
 10807  092B  1403               	setc
 10808  092C  0DD6               	rlf	___fladd@grs,f
 10809  092D  292F               	goto	l2963
 10810  092E                     l780:
 10811  092E  35D6               	lslf	___fladd@grs,f
 10812  092F                     l2963:
 10813  092F  0855               	movf	___fladd@bexp,w
 10814  0930  1D03               	btfss	3,2
 10815  0931  03D5               	decf	___fladd@bexp,f
 10816  0932                     l2967:
 10817  0932  1FC5               	btfss	___fladd@b+2,7
 10818  0933  2923               	goto	l2955
 10819  0934                     l2969:
 10820  0934  01D4               	clrf	___fladd@aexp
 10821  0935  1FD6               	btfss	___fladd@grs,7
 10822  0936  293F               	goto	l2979
 10823  0937  0856               	movf	___fladd@grs,w
 10824  0938  397F               	andlw	127
 10825  0939  1903               	btfsc	3,2
 10826  093A  1843               	btfsc	___fladd@b,0
 10827  093B  293D               	goto	l2975
 10828  093C  293F               	goto	l2979
 10829  093D                     l2975:
 10830  093D  01D4               	clrf	___fladd@aexp
 10831  093E  0AD4               	incf	___fladd@aexp,f
 10832  093F                     l2979:
 10833  093F  0854               	movf	___fladd@aexp,w
 10834  0940  1903               	btfsc	3,2
 10835  0941  294C               	goto	l2991
 10836  0942  216A  3188         	fcall	PL56	;call to abstracted procedure
 10837  0944  1C46               	btfss	___fladd@b+3,0
 10838  0945  294C               	goto	l2991
 10839  0946  37C6               	asrf	___fladd@b+3,f
 10840  0947  0CC5               	rrf	___fladd@b+2,f
 10841  0948  0CC4               	rrf	___fladd@b+1,f
 10842  0949  0CC3               	rrf	___fladd@b,f
 10843  094A  0F55               	incfsz	___fladd@bexp,w
 10844  094B  0AD5               	incf	___fladd@bexp,f
 10845  094C                     l2991:
 10846  094C  0A55               	incf	___fladd@bexp,w
 10847  094D  1D03               	btfss	3,2
 10848  094E  0855               	movf	___fladd@bexp,w
 10849  094F  1D03               	btfss	3,2
 10850  0950  2958               	goto	l2999
 10851  0951  01C3               	clrf	___fladd@b
 10852  0952  01C4               	clrf	___fladd@b+1
 10853  0953  01C5               	clrf	___fladd@b+2
 10854  0954  01C6               	clrf	___fladd@b+3
 10855  0955  0855               	movf	___fladd@bexp,w
 10856  0956  1903               	btfsc	3,2
 10857  0957  01D3               	clrf	___fladd@signs
 10858  0958                     l2999:
 10859  0958  1C55               	btfss	___fladd@bexp,0
 10860  0959  295C               	goto	l795
 10861  095A  17C5               	bsf	___fladd@b+2,7
 10862  095B  295D               	goto	l3003
 10863  095C                     l795:
 10864  095C  13C5               	bcf	___fladd@b+2,7
 10865  095D                     l3003:
 10866  095D  3655               	lsrf	___fladd@bexp,w
 10867  095E  00C6               	movwf	___fladd@b+3
 10868  095F  1BD3               	btfsc	___fladd@signs,7
 10869  0960  17C6               	bsf	___fladd@b+3,7
 10870  0961  0008               	return
 10871  0962                     __end_of___fladd:
 10872  0962                     PL44:
 10873  0962  1843               	btfsc	___fladd@b,0
 10874  0963  17D6               	bsf	___fladd@grs,7
 10875  0964  37C6               	asrf	___fladd@b+3,f
 10876  0965  0CC5               	rrf	___fladd@b+2,f
 10877  0966  0CC4               	rrf	___fladd@b+1,f
 10878  0967  0CC3               	rrf	___fladd@b,f
 10879  0968  0AD5               	incf	___fladd@bexp,f
 10880  0969  0008               	return
 10881  096A                     __end_ofPL44:
 10882  096A                     PL56:
 10883  096A  3001               	movlw	1
 10884  096B  07C3               	addwf	___fladd@b,f
 10885  096C  3000               	movlw	0
 10886  096D  3DC4               	addwfc	___fladd@b+1,f
 10887  096E  3DC5               	addwfc	___fladd@b+2,f
 10888  096F  3DC6               	addwfc	___fladd@b+3,f
 10889  0970  0008               	return
 10890  0971                     __end_ofPL56:
 10891  0971                     PL68:
 10892  0971  01C3               	clrf	?___fladd
 10893  0972  01C4               	clrf	?___fladd+1
 10894  0973  01C5               	clrf	?___fladd+2
 10895  0974  01C6               	clrf	?___fladd+3
 10896  0975  0008               	return
 10897  0976                     __end_ofPL68:
 10898                           
 10899                           	psect	idloc
 10900                           
 10901                           ;Config register IDLOC0 @ 0x8000
 10902                           ;	unspecified, using default values
 10903  8000                     	org	32768
 10904  8000  3FFF               	dw	16383
 10905                           
 10906                           ;Config register IDLOC1 @ 0x8001
 10907                           ;	unspecified, using default values
 10908  8001                     	org	32769
 10909  8001  3FFF               	dw	16383
 10910                           
 10911                           ;Config register IDLOC2 @ 0x8002
 10912                           ;	unspecified, using default values
 10913  8002                     	org	32770
 10914  8002  3FFF               	dw	16383
 10915                           
 10916                           ;Config register IDLOC3 @ 0x8003
 10917                           ;	unspecified, using default values
 10918  8003                     	org	32771
 10919  8003  3FFF               	dw	16383
 10920                           
 10921                           	psect	config
 10922                           
 10923                           ;Config register CONFIG1 @ 0x8007
 10924                           ;	External Oscillator mode selection bits
 10925                           ;	FEXTOSC = OFF, Oscillator not enabled
 10926                           ;	Power-up default value for COSC bits
 10927                           ;	RSTOSC = HFINT32, HFINTOSC with OSCFRQ= 32 MHz and CDIV = 1:1
 10928                           ;	Clock Out Enable bit
 10929                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 10930                           ;	Clock Switch Enable bit
 10931                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 10932                           ;	Fail-Safe Clock Monitor Enable bit
 10933                           ;	FCMEN = ON, FSCM timer enabled
 10934  8007                     	org	32775
 10935  8007  3F8C               	dw	16268
 10936                           
 10937                           ;Config register CONFIG2 @ 0x8008
 10938                           ;	Master Clear Enable bit
 10939                           ;	MCLRE = ON, MCLR pin is Master Clear function
 10940                           ;	Power-up Timer Enable bit
 10941                           ;	PWRTE = OFF, PWRT disabled
 10942                           ;	Low-Power BOR enable bit
 10943                           ;	LPBOREN = OFF, ULPBOR disabled
 10944                           ;	Brown-out reset enable bits
 10945                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 10946                           ;	Brown-out Reset Voltage Selection
 10947                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 10948                           ;	Zero-cross detect disable
 10949                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 10950                           ;	Peripheral Pin Select one-way control
 10951                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 10952                           ;	Stack Overflow/Underflow Reset Enable bit
 10953                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 10954                           ;	Background Debugger
 10955                           ;	DEBUG = 0x1, unprogrammed default
 10956  8008                     	org	32776
 10957  8008  3FFF               	dw	16383
 10958                           
 10959                           ;Config register CONFIG3 @ 0x8009
 10960                           ;	WDT Period Select bits
 10961                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 10962                           ;	WDT operating mode
 10963                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 10964                           ;	WDT Window Select bits
 10965                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 10966                           ;	WDT input clock selector
 10967                           ;	WDTCCS = SC, Software Control
 10968  8009                     	org	32777
 10969  8009  3F9F               	dw	16287
 10970                           
 10971                           ;Config register CONFIG4 @ 0x800A
 10972                           ;	UserNVM self-write protection bits
 10973                           ;	WRT = OFF, Write protection off
 10974                           ;	Scanner Enable bit
 10975                           ;	SCANE = available, Scanner module is available for use
 10976                           ;	Low Voltage Programming Enable bit
 10977                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 10978  800A                     	org	32778
 10979  800A  3FFF               	dw	16383
 10980                           
 10981                           ;Config register CONFIG5 @ 0x800B
 10982                           ;	UserNVM Program memory code protection bit
 10983                           ;	CP = OFF, Program Memory code protection disabled
 10984                           ;	DataNVM code protection bit
 10985                           ;	CPD = OFF, Data EEPROM code protection disabled
 10986  800B                     	org	32779
 10987  800B  3FFF               	dw	16383

Data Sizes:
    Strings     58
    Constant    0
    Data        7
    BSS         42
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     24      73
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> stoa@nuls(BANK0[7]), dbuf(BANK1[32]), ?_printf(BANK1[2]), MLX90614_writeEmissivity@emissivity(COMMON[4]), 
		 -> main@buffer(BANK1[8]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> stoa@nuls(BANK0[7]), dbuf(BANK1[32]), ?_printf(BANK1[2]), MLX90614_writeEmissivity@emissivity(COMMON[4]), 
		 -> main@buffer(BANK1[8]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S847_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_5(CODE[6]), STR_4(CODE[6]), STR_3(CODE[29]), STR_2(CODE[10]), 
		 -> STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 29
		 -> STR_5(CODE[6]), STR_4(CODE[6]), STR_3(CODE[29]), STR_2(CODE[10]), 
		 -> STR_1(CODE[13]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 8
		 -> ?_printf(BANK1[2]), MLX90614_writeEmissivity@emissivity(COMMON[4]), main@buffer(BANK1[8]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(1) Largest target is 8
		 -> ?_printf(BANK1[2]), MLX90614_writeEmissivity@emissivity(COMMON[4]), main@buffer(BANK1[8]), 

    stoa@cp	PTR unsigned char  size(1) Largest target is 8
		 -> stoa@nuls(BANK0[7]), ?_printf(BANK1[2]), MLX90614_writeEmissivity@emissivity(COMMON[4]), main@buffer(BANK1[8]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_5(CODE[6]), STR_4(CODE[6]), STR_3(CODE[29]), STR_2(CODE[10]), 
		 -> STR_1(CODE[13]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    FLOAT_to_string@text	PTR unsigned char  size(1) Largest target is 8
		 -> main@buffer(BANK1[8]), 


Critical Paths under _main in COMMON

    _main->_FLOAT_to_string
    _serial_init->___lldiv
    _vfpfcnvrt->_stoa
    _xtoa->_pad
    _toupper->_islower
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_uart_tx
    _abs->___aomod
    _MLX90614_readObjectTempC->___xxtofl
    _MLX90614_readAmbientTempC->___xxtofl
    _MLX90614_ReadReg->_i2c_read
    _MLX90614_ReadReg->_i2c_write
    _FLOAT_to_string->___xxtofl
    ___xxtofl->_MLX90614_ReadReg
    ___flsub->___xxtofl
    ___fladd->___xxtofl
    ___flmul->___xxtofl

Critical Paths under _main in BANK0

    _main->_printf
    _sensorPlaca->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod
    _MLX90614_readObjectTempC->___fladd
    _MLX90614_readAmbientTempC->___fladd
    _FLOAT_to_string->___flsub
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl

Critical Paths under _main in BANK1

    _main->_FLOAT_to_string
    _sensorPlaca->_printf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0   57494
                                             78 BANK0      2     2      0
                                             12 BANK1     12    12      0
                    _FLOAT_to_string
          _MLX90614_readAmbientTempC
           _MLX90614_readObjectTempC
                           _adc_init
                           _i2c_init
                          _port_init
                             _printf
                        _sensorPlaca
                        _serial_init
 ---------------------------------------------------------------------------------
 (1) _serial_init                                         10     6      4     459
                                              0 BANK0     10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (1) _sensorPlaca                                          0     0      0   15530
                             ___wmul
                           _i2c_read
                        _i2c_restart
                          _i2c_start
                           _i2c_stop
                          _i2c_write
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               9     3      6   15242
                                             77 BANK0      1     1      0
                                              0 BANK1      6     0      6
                             ___wmul (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             7     4      3   14830
                                             70 BANK0      7     4      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           37    35      2   14494
                                             46 BANK0     24    22      2
                               _dtoa
                              _fputc
                               _stoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                34    25      9    5119
                                             12 BANK0     34    25      9
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              6     4      2     412
                                              4 COMMON     6     4      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              4     2      2     161
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              4     2      2     161
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) _stoa                                                20    18      2    2005
                                             11 COMMON     3     1      2
                                              0 BANK0     17    17      0
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                28    20      8    5280
                                             16 BANK0     28    20      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    3657
                                             13 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     156
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                6     5      1    1583
                                             11 COMMON     2     1      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                8     5      3    1268
                                              3 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      44
                                              2 COMMON     1     1      0
                            _uart_tx
 ---------------------------------------------------------------------------------
 (10) _uart_tx                                             2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _port_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MLX90614_readObjectTempC                             8     4      4    6354
                                             55 BANK0      8     4      4
                   _MLX90614_ReadReg
                            ___fladd
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _MLX90614_readAmbientTempC                            8     4      4    6354
                                             55 BANK0      8     4      4
                   _MLX90614_ReadReg
                            ___fladd
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _MLX90614_ReadReg                                     9     7      2     112
                                              1 COMMON     8     6      2
                           _i2c_read
                        _i2c_restart
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_restart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                             1     1      0      22
                                              0 COMMON     1     1      0
                            _i2c_ack
                           _i2c_nack
 ---------------------------------------------------------------------------------
 (3) _i2c_nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _FLOAT_to_string                                     19    13      6   13405
                                             13 COMMON     1     1      0
                                             63 BANK0      6     0      6
                                              0 BANK1     12    12      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     689
                                              9 COMMON     4     0      4
                                              0 BANK0     10    10      0
                   _MLX90614_ReadReg (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     368
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2769
                                             55 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             20    12      8    2572
                                             35 BANK0     20    12      8
                   _MLX90614_ReadReg (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2981
                                             10 BANK0     25    17      8
                   _MLX90614_ReadReg (ARG)
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            7     5      2     799
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     942
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1684
                                              0 COMMON    12     4      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FLOAT_to_string
     ___fladd
       _MLX90614_ReadReg (ARG)
         _i2c_read
           _i2c_ack
           _i2c_nack
         _i2c_restart
         _i2c_start
         _i2c_stop
         _i2c_write
       ___fldiv (ARG)
       ___flmul (ARG)
         _MLX90614_ReadReg (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _MLX90614_ReadReg (ARG)
       ___xxtofl (ARG)
     ___fldiv
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
     ___xxtofl
   _MLX90614_readAmbientTempC
     _MLX90614_ReadReg
     ___fladd
     ___flmul
     ___xxtofl
   _MLX90614_readObjectTempC
     _MLX90614_ReadReg
     ___fladd
     ___flmul
     ___xxtofl
   _adc_init
   _i2c_init
   _port_init
   _printf
     ___wmul (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _uart_tx
             _fputs
               _fputc
             _strlen
         _fputc
         _stoa
           _fputc
           _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
           _toupper
             _islower
   _sensorPlaca
     ___wmul
     _i2c_read
     _i2c_restart
     _i2c_start
     _i2c_stop
     _i2c_write
     _printf
   _serial_init
     ___lldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     18      49       7       91.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      A7      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      A7      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jul 25 01:43:56 2022

                      ___fldiv@aexp 002C                        ___fldiv@bexp 002B  
                      ___fldiv@sign 0024                                  PL2 0FA2  
                                PL4 0FAF                                  PL6 06F6  
                                PL8 070C                                  l55 00B8  
                                l83 03F0                 ___wmul@multiplicand 0072  
               __Umul8_16@word_mpld 0074                                 PL10 0715  
                               PL20 074D                                 PL12 0FBB  
                               PL30 0774                                 PL22 075C  
                               PL14 0720                                 PL40 0FD8  
                               PL32 077E                                 PL24 0FC2  
                               PL16 0730                                 PL50 0FE8  
                               PL42 07A3                                 PL34 0788  
                               PL26 0769                                 PL18 0740  
                               PL60 07BF                                 PL52 07B1  
                               PL44 0962                                 PL36 0791  
                               PL28 0FCE                                 PL70 0FF6  
                               PL62 07C5                                 PL54 0FEF  
                               PL46 0FE1                                 PL38 079A  
                               PL80 0FFB                                 PL72 07D7  
                               PL64 07CB                                 PL56 096A  
                               PL48 07AA                                 PL74 07DC  
                               PL66 07D1                                 PL58 07B8  
                               PL76 07E1                                 PL68 0971  
                               PL78 07E6                                 l220 01A7  
                               l214 019D                                 l240 06F2  
                               l208 01A2                                 l234 01AE  
                               l226 013E                                 l246 0195  
                               l632 0495                                 l553 0EB2  
                               l634 04BD                                 l804 04E3  
                               l805 04E1                                 l566 0F79  
                               l831 05B5                                 l808 04F9  
                               l840 01EC                                 l760 08AC  
                               l752 085A                                 l833 05CA  
                               l809 04F7                                 l841 01EA  
                               l761 08B2                                 l753 0858  
                               l770 08D1                                 l762 08B3  
                               l747 083F                                 l907 061A  
                               l844 01FE                                 l780 092E  
                               l748 083D                                 l845 01FC  
                               l862 02EA                                 l758 08BA  
                               l775 0919                                 l952 09CB  
                               l769 08D0                                 l953 09D2  
                               l962 0D03                                 l795 095C  
                               l949 09B0                                 l957 0CEA  
                               l894 05EC                                 l989 0AF0  
                               l998 0B2D                                 _abs 0F8B  
                               _pad 099E                                 wreg 0009  
                      ___flmul@aexp 0037                        ___flmul@bexp 003C  
                      ___flmul@sign 0036                        ___flmul@temp 0041  
                      ___flmul@prod 003D            __size_of_FLOAT_to_string 0169  
         _MLX90614_readAmbientTempC 01B2                        ___fltol@exp1 0079  
                              l1010 0BAF                                l1031 0C74  
                              ?_abs 0073                                l3003 095D  
                              l3013 02FB                  serial_init@baudios 0020  
                              l3031 097E                                l3113 04A9  
                              l3017 0301                                l3033 0995  
                              l3107 0486                                l2403 0B4A  
                              l3133 0665                                l3037 0100  
                              l3303 05CB                                l3223 051E  
                              l3215 0516                                l3135 066A  
                              l3063 07ED                                l2407 0B6B  
                              l2423 0B76                                l3241 054F  
                              l3161 069A                                l3153 068D  
                              l2417 09E1                                l2425 0B7E  
                              l2505 09A6                                l3251 056A  
                              l3067 07F3                                l2443 0E2B  
                              l2515 09B2                                l2603 0DCD  
                              l3413 02CC                                l3341 020A  
                              l3325 01EE                                l3149 0686  
                              l2445 0E2D                                l2509 09AE  
                              l3247 0568                                l3159 0691  
                              l2463 0E88                                l2455 0E4F  
                              l2439 0E05                                l2391 0B88  
                              l2615 0ACE                                l3095 17F1  
                              l3087 17D4                                l3273 0594  
                              l3265 0570                                l3249 053A  
                              l3409 02BC                                l3337 0200  
                              l3441 05F7                                l2481 0F0D  
                              l2633 0B09                                l3267 0581  
                              l3419 02DC                                l3611 0439  
                              l2467 0E92                                l2571 0D43  
                              l2651 0B39                                l2643 0B10  
                              l2635 0B0D                                l2723 0C83  
                              l2707 0C43                                l3099 17F7  
                              l3277 0596                                l3453 060A  
                              l3445 05F9                                l3437 05E4  
                              l2493 0F55                                l2477 0EE7  
                              l2581 0DA5                                l2565 0D12  
                              l2653 0B3D                                l2629 0B01  
                              l3287 05A8                                l3471 062F  
                              l3447 0601                                l2823 0147  
                              l2583 0D1E                                l2591 0DB1  
                              l2567 0D17                                l2559 0CFB  
                              l2647 0B31                                l2671 0BBF  
                              l2751 0A40                                l2743 0A13  
                              l3297 05C3                                l2921 08B5  
                              l3457 0618                                l3617 040B  
                              l3553 0352                                l3545 0336  
                              l2825 0148                                l2489 0F25  
                              l2497 0F5F                                l2665 0BA7  
                              l2761 0A5A                                l3395 02A8  
                              l2907 0884                                l3459 060F  
                              l3619 046F                                l3571 03A9  
                              l3555 0360                                l2595 0DB9  
                              l3389 0295                                l3549 0347  
                              l2685 0BEC                                l2677 0BD6  
                              l2781 0AA0                                l2765 0A64  
                              ?_pad 0024                                l3399 02AA  
                              l2927 08C0                                l3559 0378  
                              l2599 0DC4                                l2775 0A93  
                              l2791 0AAB                                l3647 00A8  
                              l3577 03DE                                l3569 0392  
                              l2785 0AA5                                l2963 092F  
                              l2955 0923                                l2939 08D4  
                              l3595 03F3                                l2699 0C2B  
                              l2949 0911                                l2877 0866  
                              l3597 0408                                l2991 094C  
                              l2975 093D                                l2967 0932  
                              l2969 0934                                l2979 093F  
                              l2999 0958                                STR_1 181D  
                              STR_2 182A                                STR_3 1800  
                              STR_4 1834                                u3000 0C02  
                              u3020 0C1B                                _LATA 0016  
                              u3030 0C1C                                _LATB 0017  
                              u2410 0E34                                u4005 055D  
                              u2325 0B69                                u2350 004C  
                              u3055 0C39                                u2360 004D  
                              u4105 05AE                                u3065 0C4D  
                              u4115 05BC                                u2275 0B8C  
                              u2700 0CC8                                u2445 0E75  
                              u2605 09BC                                u3085 0C63  
                              u2710 0CC9                                u2630 0039  
                              u3095 0C6F                                u2640 003A  
                              u2545 0F43                                u2625 0F94  
                              u2650 0064                                u3380 08A3  
                              u2660 0065                                u2805 0D32  
                              u3390 08A4                                u2670 0CA1  
                              u3375 0898                                u2815 0D3E  
                              u4415 179E                                u2680 0CA2  
                              u4505 03FD                                u3483 08E6  
                              u4515 0430                                u2755 0CF4  
                              u2860 0AC3                                u4285 02C2  
                              u2925 0B1A                                u4295 02D3  
                              u2785 0DAF                                u3745 17E6  
                              u4537 00F8                                u3835 0673  
                              u2965 0BA0                                u2990 0C01  
                              u2895 0AE9                                u2985 0BE8  
                              _PIR3 070F                                abs@a 0073  
                              _dbuf 00AA                                _main 00A8  
                              _dtoa 0CAD                                _prec 00A4  
                              _nout 00A0                                pad@i 0027  
                              pad@p 0025                                fsr0h 0005  
                              fsr1h 0007                                indf0 0000  
                              fsr0l 0004                                indf1 0001  
                              fsr1l 0006                                pad@w 0029  
                              _stoa 0AB8                                btemp 007E  
                              _xtoa 0B95                                start 0002  
                 ?_MLX90614_ReadReg 0071                     ___fldiv@new_exp 0025  
                     ??_i2c_restart 0070                  ??_MLX90614_ReadReg 0073  
                   __end_of_i2c_ack 01B2                               ??_abs 0075  
                             ??_pad 007D                       ___fltol@sign1 0078  
                   __end_of___aodiv 0EC4                               _ADCAP 009B  
                   __end_of___fladd 0962                               ?_main 0070  
                             ?_dtoa 0030                               _ADCLK 0098  
                   __end_of___aomod 0F8B                               _ADPCH 009E  
                   __end_of___fldiv 05CE                               _ADREF 009A  
                   __end_of___flneg 0641                     __end_of___flmul 02F5  
                   __end_of___flsub 065E                     __end_of___fltol 06A9  
                             ?_stoa 007B                     __end_of___lldiv 1800  
                       i2c_read@ack 0070                               ?_xtoa 002C  
                      vfpfcnvrt@fmt 004E                        vfpfcnvrt@llu 005B  
                             _PORTA 000C                               _PORTB 000D  
                             _TRISA 0011                               _TRISB 0012  
                             _TRISC 0013                               _RXPPS 0ECB  
        FLOAT_to_string@tempo_float 00CC              FLOAT_to_string@decimal 0064  
                             _flags 00A6                               _fputc 0B43  
                   __end_of_isalpha 0068                               _fputs 09DE  
                             pad@fp 002B                               _width 00A2  
            FLOAT_to_string@largo_n 00D0                               _putch 0B85  
                             dtoa@d 0030                               dtoa@i 004A  
                             dtoa@n 0042                               dtoa@p 003B  
                             dtoa@s 0040                               dtoa@w 003E  
                   __end_of_islower 0050                     __end_of_isupper 003D  
                   __end_of_uart_tx 0B95                               stoa@i 0027  
                             stoa@l 002F                               stoa@p 002D  
                             stoa@s 007B                               stoa@w 0029  
                             status 0003                               wtemp0 007E  
                             xtoa@c 004A                               xtoa@d 002C  
                             xtoa@i 004C                               xtoa@n 0040  
                             xtoa@p 003D                               xtoa@w 0048  
                             xtoa@x 0034                     __end_of_toupper 0CAD  
                      _toupper$1027 0078                     __initialization 0068  
        ??_MLX90614_readObjectTempC 005B                        __end_of_main 0100  
                      __end_of_dtoa 0DDC                        __end_of_stoa 0B43  
               FLOAT_to_string@text 0063                        __end_of_xtoa 0C92  
                  __end_of_i2c_nack 06F6                    __end_of_i2c_init 06D8  
                  __end_of_i2c_read 014B                    __end_of_i2c_stop 01AA  
               __end_of_i2c_restart 01A0                              ??_main 006E  
                            ??_dtoa 0038                              ??_stoa 007D  
                            ??_xtoa 0035                              _ADCON0 0093  
                            _ADCON1 0094                              _ADCON2 0095  
                            ?_fputc 0073                              ?_fputs 007B  
               MLX90614_ReadReg@reg 0076                              _ANSELA 0F38  
                            ?_putch 0070                              _ANSELB 0F43  
                            _ANSELC 0F4E                              _RC0PPS 0F20  
                  __end_of_adc_init 06BE                              _RC1STA 011D  
                            _RC3PPS 0F23                              _RC4PPS 0F24  
                            u238lld 0E03                              _TX1REG 011A  
                            u249lld 0EE5                              _TX1STA 011E  
                __size_of_i2c_start 0005                    __end_of___xxtofl 0638  
                __size_of_i2c_write 000D                   ??_FLOAT_to_string 007D  
                         ??_i2c_ack 0070                        ?_serial_init 0020  
                      vfprintf@cfmt 006B                              ___flge 0475  
                         ??___aodiv 0070                           ??___fladd 004B  
                         ??___aomod 0070                              ___wmul 07EB  
                         ??___fldiv 0078                           ??___flneg 0074  
                         ??___flmul 0032                           ??___flsub 007D  
                         ??___fltol 0074                           ??___lldiv 0078  
           FLOAT_to_string@cont_for 00D4                              _printf 0100  
                            pad@buf 0024                        ?_sensorPlaca 0070  
                            dtoa@fp 003D                              _strlen 0B74  
                            fputc@c 0073                              fputs@c 0020  
                            fputs@i 0021                              fputs@s 0023  
                         ??_isalpha 0072                  __size_of__Umul8_16 0017  
                         ??_islower 0072                           ??_isupper 0072  
                         ??_uart_tx 0070                              stoa@cp 002C  
                            stoa@fp 002B                    __end_of_vfprintf 099E  
                            xtoa@fp 003F                           ??_toupper 0076  
                        ___flge@ff1 0070                          ___flge@ff2 0074  
                      ___xxtofl@arg 0026                        ___xxtofl@exp 0025  
                      ___xxtofl@val 0079             __end_of__initialization 007E  
                        ___flneg@f1 0070                          ___fltol@f1 0070  
                    __pcstackCOMMON 0070                         _i2c_restart 019C  
                      __pidataBANK1 0000                       __end_of_fputc 0B74  
                     __end_of_fputs 09F6                       __end_of_putch 0B87  
                        __end_ofPL2 0FAF                          __end_ofPL4 0FBB  
                        __end_ofPL6 070C                          __end_ofPL8 0715  
                 __end_of_i2c_start 01A5                   __end_of_i2c_write 019C  
                           ??_fputc 0076                             ??_fputs 007C  
                           ??_putch 0072                          __pbssBANK1 00A0  
                         ?_i2c_nack 0070                           ?_i2c_init 0070  
                         ?_i2c_read 0070                           ?_i2c_stop 0070  
                 __end_of__Umul8_16 030C                          __pmaintext 00A8  
                           ?___flge 0070                             ?___wmul 0070  
                           ?_printf 00CA                           ?_adc_init 0070  
                           ?_strlen 0070           __size_of_MLX90614_ReadReg 0029  
                         ?___xxtofl 0079                             _SP1BRGH 011C  
                           _SP1BRGL 011B                  __size_of_vfpfcnvrt 00C2  
                __size_of_port_init 0016                             _SSP1ADD 018D  
                           _SSP1BUF 018C                          ??_i2c_nack 0070  
                        ??_i2c_init 0070                          ??_i2c_read 0070  
                        ??_i2c_stop 0070                             _i2c_ack 01AA  
            MLX90614_ReadReg@valReg 0077                     __size_of___flge 005A  
                           ___aodiv 0DDC                             ___fladd 082C  
                           ___aomod 0EC4                             ___fldiv 04CF  
                           ___flneg 0638                             ___flmul 01DB  
                           ___flsub 0641                             ___fltol 065E  
                           ___lldiv 17C1                     __size_of___wmul 0015  
                         ?_vfprintf 0066                __size_of_serial_init 0045  
                        ??_adc_init 0070                             __ptext1 177C  
                           __ptext2 17C1                             __ptext3 014B  
                           __ptext4 0100                             __ptext5 0976  
                           __ptext6 09F6                             __ptext7 0B95  
                           __ptext8 0C92                             __ptext9 003D  
                   __size_of_printf 0010                     __size_of_strlen 0011  
                      __size_of_abs 0017                        __size_of_pad 0040  
                           _isalpha 0050                          ??___xxtofl 0020  
              __size_of_sensorPlaca 0044                             _islower 003D  
                           _isupper 002A                     _FLOAT_to_string 030C  
                           _uart_tx 0B87                             clrloop0 0025  
                           _toupper 0C92                end_of_initialization 007E  
                           fputc@fp 0075                             fputs@fp 007B  
                   ___lldiv@divisor 0070                     ___lldiv@counter 007C  
                 __end_of_vfpfcnvrt 0AB8                   __end_of_port_init 06EE  
                        ??_vfprintf 0069            FLOAT_to_string@tempo_int 00CA  
                           strlen@a 0072                             strlen@s 0073  
                       uart_tx@dato 0071                         ___fladd@grs 0056  
                     ___xxtofl@sign 0024                           _TRISCbits 0013  
 __size_of_MLX90614_readObjectTempC 0028           ?_MLX90614_readObjectTempC 0057  
                       ___fldiv@grs 0027                         ___fldiv@rem 0020  
                       ___flmul@grs 0038                          main@buffer 00D6  
                      ?_i2c_restart 0070                      __end_of___flge 04CF  
                       vfpfcnvrt@ap 004F                         vfpfcnvrt@cp 0064  
                       vfpfcnvrt@fp 0065                         vfpfcnvrt@ll 0053  
                    __end_of___wmul 0800             __end_of_FLOAT_to_string 0475  
                  _MLX90614_ReadReg 0110                      __end_of_printf 0110  
             FLOAT_to_string@number 005F                      __end_of_strlen 0B85  
                       __end_ofPL10 0720                         __end_ofPL20 075C  
                       __end_ofPL12 0FC2                         __end_ofPL30 077E  
                       __end_ofPL22 0769                         __end_ofPL14 0730  
                       __end_ofPL40 0FE1                         __end_ofPL32 0788  
                       __end_ofPL24 0FCE                         __end_ofPL16 0740  
                       __end_ofPL50 0FEF                         __end_ofPL42 07AA  
                       __end_ofPL34 0791                         __end_ofPL26 0774  
                       __end_ofPL18 074D                         __end_ofPL60 07C5  
                       __end_ofPL52 07B8                         __end_ofPL44 096A  
                       __end_ofPL36 079A                         __end_ofPL28 0FD8  
                       __end_ofPL70 0FFB                         __end_ofPL62 07CB  
                       __end_ofPL54 0FF6                         __end_ofPL46 0FE8  
                       __end_ofPL38 07A3                         __end_ofPL80 1000  
                       __end_ofPL72 07DC                         __end_ofPL64 07D1  
                       __end_ofPL56 0971                         __end_ofPL48 07B1  
                       __end_ofPL74 07E1                         __end_ofPL66 07D7  
                       __end_ofPL58 07BF                         __end_ofPL76 07E6  
                       __end_ofPL68 0976                         __end_ofPL78 07EB  
               start_initialization 0068                         __end_of_abs 0FA2  
                         _i2c_start 01A0                         __end_of_pad 09DE  
                         _i2c_write 018F                   __size_of_i2c_nack 0008  
                 __size_of_i2c_init 001A                   __size_of_i2c_read 0012  
                 __size_of_i2c_stop 0005                         vfprintf@fmt 0066  
                          ??___flge 0078                            ??___wmul 0074  
                         __Umul8_16 02F5                         __pdataBANK1 00E2  
                          ??_printf 007E                            ??_strlen 0072  
                         ___fladd@a 0047                           ___fladd@b 0043  
                         ___fldiv@a 0070                           ___fldiv@b 0074  
                 __size_of_adc_init 0015                           ___flmul@a 002E  
                         ___flmul@b 002A                           ___flsub@a 0057  
                         ___flsub@b 005B                           ___latbits 0002  
                     __pcstackBANK0 0020                       __pcstackBANK1 00CA  
                  ___aodiv@dividend 0028                          ?_i2c_start 0070  
                        ?_i2c_write 0070                   __size_of___xxtofl 006A  
                          ?_i2c_ack 0070                            ?___aodiv 0020  
__size_of_MLX90614_readAmbientTempC 0029                            ?___fladd 0043  
                          ?___aomod 0020                            ?___fldiv 0070  
                  ___aodiv@quotient 0073                            ?___flneg 0070  
                          ?___flmul 002A                            ?___flsub 0057  
                          ?___fltol 0070                            ?___lldiv 0070  
        ?_MLX90614_readAmbientTempC 0057                          ?__Umul8_16 0070  
                         _high_byte 00A9                    ?_FLOAT_to_string 005F  
                 __size_of_vfprintf 0028                            _BAUD1CON 011F  
                          ?_isalpha 0070                            ?_islower 0070  
                          ?_isupper 0070                            ?_uart_tx 0070  
                    __size_of_fputc 0031                      __size_of_fputs 0018  
                          ?_toupper 0074                      __size_of_putch 0002  
                    ___wmul@product 0074                           clear_ram0 0024  
                     ??_serial_init 0024                            _PIR3bits 070F  
                          _SSP1CON1 0190                            _SSP1CON3 0192  
  __end_of_MLX90614_readObjectTempC 00A8                            _SSP1STAT 018F  
              __size_of_i2c_restart 0004   __end_of_MLX90614_readAmbientTempC 01DB  
                         _vfpfcnvrt 09F6                           _port_init 06D8  
                     ??_sensorPlaca 007E                       serial_init@sx 0028  
                 ___wmul@multiplier 0070                         ??_i2c_start 0070  
                       ??_i2c_write 0070                          vfpfcnvrt@c 0063  
                          _i2c_nack 06EE                            _i2c_init 06BE  
                          _i2c_read 0139                            _i2c_stop 01A5  
          __end_of_MLX90614_ReadReg 0139                    __size_of_i2c_ack 0008  
                        vfprintf@ap 0068                          vfprintf@fp 006A  
                 i2c_write@I2C_data 0070                         ??__Umul8_16 0072  
                  __size_of___aodiv 00E8                    __size_of___fladd 0136  
                  __size_of___aomod 00C7                    __size_of___fldiv 00FF  
                  __size_of___flneg 0009                    __size_of___flmul 011A  
                  __size_of___flsub 001D                    __size_of___fltol 004B  
                  __size_of___lldiv 003F                          ?_vfpfcnvrt 004E  
                        ?_port_init 0070                 __end_of_serial_init 17C1  
                   ___aodiv@divisor 0020                            _adc_init 06A9  
                   ___aodiv@counter 0071                          _ANSELCbits 0F4E  
                          ___xxtofl 05CE                    __size_of_isalpha 0018  
                          _dtoa$926 0039                 __end_of_sensorPlaca 018F  
                  __size_of_islower 0013                            __ptext10 002A  
                          __ptext11 0050                            __ptext20 0F8B  
                          __ptext12 0AB8                            __ptext21 0EC4  
                          __ptext13 0CAD                            __ptext30 018F  
                          __ptext22 0DDC                            __ptext14 099E  
                          __ptext31 01A5                            __ptext23 07EB  
                          __ptext15 0B74                            __ptext40 0641  
                          __ptext32 01A0                            __ptext24 06D8  
                          __ptext16 09DE                            __ptext41 082C  
                          __ptext33 019C                            __ptext25 06BE  
                          __ptext17 0B43                            __ptext42 0638  
                          __ptext34 0139                            __ptext26 06A9  
                          __ptext18 0B85                            __ptext43 01DB  
                          __ptext35 06EE                            __ptext27 0080  
                          __ptext19 0B87                            __ptext44 02F5  
                          __ptext36 01AA                            __ptext28 01B2  
                          __ptext45 0475                            __ptext37 030C  
                          __ptext29 0110                            __ptext46 04CF  
                          __ptext38 05CE                            __ptext39 065E  
                  __size_of_isupper 0013                        _SSP1CON2bits 0191  
                  __size_of_uart_tx 000E                    __size_of_toupper 001B  
                     __size_of_main 0058                       __size_of_dtoa 012F  
                     __size_of_stoa 008B                       __size_of_xtoa 00FD  
                          _low_byte 00A8         FLOAT_to_string@largo_entera 00D2  
                         stoa@F1141 00E2                            _xtoa$947 0039  
                          _xtoa$948 003B                            _vfprintf 0976  
                         printf@fmt 00CA                            main@temp 00DE  
                  ___aomod@dividend 0028            _MLX90614_readObjectTempC 0080  
                         putch@dato 0072                            isalpha@c 0070  
                          islower@c 0070                    ___lldiv@dividend 0074  
                          isupper@c 0070                         _serial_init 177C  
                          printf@ap 006D         ??_MLX90614_readAmbientTempC 005B  
                   ___aomod@divisor 0020                         ??_vfpfcnvrt 0050  
                          stoa@nuls 0020                     ___aomod@counter 0071  
                       ??_port_init 0070                       __pstringtext1 1800  
                     __pstringtext2 181D                       __pstringtext3 182A  
                     __pstringtext4 1834                       __pstringtext5 0000  
                       _sensorPlaca 014B              __Umul8_16@multiplicand 0070  
                        _SSP1DATPPS 0EC6                          _SSP1CLKPPS 0EC5  
                  ___lldiv@quotient 0078                            toupper@c 0074  
                     ___fladd@signs 0053                        ___aodiv@sign 0072  
                      ___fladd@aexp 0054                        ___fladd@bexp 0055  
              __Umul8_16@multiplier 0076                        ___aomod@sign 0072  
                 __Umul8_16@product 0072  
