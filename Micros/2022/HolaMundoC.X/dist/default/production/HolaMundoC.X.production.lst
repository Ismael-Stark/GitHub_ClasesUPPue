

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jul 12 13:34:58 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	16F18855
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    32                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    33                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    34                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text17,local,class=CODE,merge=1,delta=2,group=3
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2
    56                           	psect	text36,local,class=CODE,merge=1,delta=2
    57                           	psect	intentry,global,class=CODE,delta=2
    58                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    59                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    60                           	dabs	1,0x7E,2
    61  0000                     
    62                           ; Version 2.40
    63                           ; Generated 02/12/2021 GMT
    64                           ; 
    65                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution. Publication is not required when
    79                           ;        this file is used in an embedded application.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC16F18855 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97  0000                     	;# 
    98  0001                     	;# 
    99  0002                     	;# 
   100  0003                     	;# 
   101  0004                     	;# 
   102  0005                     	;# 
   103  0006                     	;# 
   104  0007                     	;# 
   105  0008                     	;# 
   106  0009                     	;# 
   107  000A                     	;# 
   108  000B                     	;# 
   109  000C                     	;# 
   110  000D                     	;# 
   111  000E                     	;# 
   112  0010                     	;# 
   113  0011                     	;# 
   114  0012                     	;# 
   115  0013                     	;# 
   116  0016                     	;# 
   117  0017                     	;# 
   118  0018                     	;# 
   119  001C                     	;# 
   120  001C                     	;# 
   121  001D                     	;# 
   122  001D                     	;# 
   123  001E                     	;# 
   124  001F                     	;# 
   125  008C                     	;# 
   126  008C                     	;# 
   127  008D                     	;# 
   128  008E                     	;# 
   129  008E                     	;# 
   130  008F                     	;# 
   131  0090                     	;# 
   132  0090                     	;# 
   133  0091                     	;# 
   134  0093                     	;# 
   135  0094                     	;# 
   136  0095                     	;# 
   137  0096                     	;# 
   138  0097                     	;# 
   139  0098                     	;# 
   140  0099                     	;# 
   141  009A                     	;# 
   142  009B                     	;# 
   143  009C                     	;# 
   144  009D                     	;# 
   145  009E                     	;# 
   146  010C                     	;# 
   147  010D                     	;# 
   148  010E                     	;# 
   149  010E                     	;# 
   150  010F                     	;# 
   151  0110                     	;# 
   152  0110                     	;# 
   153  0111                     	;# 
   154  0112                     	;# 
   155  0112                     	;# 
   156  0113                     	;# 
   157  0114                     	;# 
   158  0114                     	;# 
   159  0115                     	;# 
   160  0116                     	;# 
   161  0116                     	;# 
   162  0117                     	;# 
   163  0119                     	;# 
   164  0119                     	;# 
   165  0119                     	;# 
   166  011A                     	;# 
   167  011A                     	;# 
   168  011A                     	;# 
   169  011B                     	;# 
   170  011B                     	;# 
   171  011B                     	;# 
   172  011B                     	;# 
   173  011B                     	;# 
   174  011C                     	;# 
   175  011C                     	;# 
   176  011C                     	;# 
   177  011D                     	;# 
   178  011D                     	;# 
   179  011D                     	;# 
   180  011E                     	;# 
   181  011E                     	;# 
   182  011E                     	;# 
   183  011F                     	;# 
   184  011F                     	;# 
   185  011F                     	;# 
   186  011F                     	;# 
   187  011F                     	;# 
   188  018C                     	;# 
   189  018D                     	;# 
   190  018E                     	;# 
   191  018F                     	;# 
   192  0190                     	;# 
   193  0191                     	;# 
   194  0192                     	;# 
   195  0196                     	;# 
   196  0197                     	;# 
   197  0198                     	;# 
   198  0199                     	;# 
   199  019A                     	;# 
   200  019B                     	;# 
   201  019C                     	;# 
   202  020C                     	;# 
   203  020C                     	;# 
   204  020D                     	;# 
   205  020E                     	;# 
   206  020F                     	;# 
   207  020F                     	;# 
   208  0210                     	;# 
   209  0210                     	;# 
   210  0211                     	;# 
   211  0211                     	;# 
   212  0212                     	;# 
   213  0212                     	;# 
   214  0213                     	;# 
   215  0214                     	;# 
   216  0215                     	;# 
   217  0215                     	;# 
   218  0216                     	;# 
   219  0216                     	;# 
   220  0217                     	;# 
   221  0217                     	;# 
   222  0218                     	;# 
   223  0218                     	;# 
   224  0219                     	;# 
   225  021A                     	;# 
   226  021B                     	;# 
   227  021B                     	;# 
   228  021C                     	;# 
   229  021C                     	;# 
   230  021D                     	;# 
   231  021D                     	;# 
   232  021E                     	;# 
   233  021F                     	;# 
   234  028C                     	;# 
   235  028C                     	;# 
   236  028D                     	;# 
   237  028D                     	;# 
   238  028E                     	;# 
   239  028F                     	;# 
   240  0290                     	;# 
   241  0290                     	;# 
   242  0291                     	;# 
   243  0292                     	;# 
   244  0292                     	;# 
   245  0293                     	;# 
   246  0293                     	;# 
   247  0294                     	;# 
   248  0295                     	;# 
   249  0296                     	;# 
   250  0296                     	;# 
   251  0297                     	;# 
   252  0298                     	;# 
   253  0298                     	;# 
   254  0299                     	;# 
   255  0299                     	;# 
   256  029A                     	;# 
   257  029B                     	;# 
   258  029C                     	;# 
   259  029C                     	;# 
   260  029D                     	;# 
   261  030C                     	;# 
   262  030C                     	;# 
   263  030D                     	;# 
   264  030E                     	;# 
   265  030F                     	;# 
   266  0310                     	;# 
   267  0310                     	;# 
   268  0311                     	;# 
   269  0312                     	;# 
   270  0313                     	;# 
   271  0314                     	;# 
   272  0314                     	;# 
   273  0315                     	;# 
   274  0316                     	;# 
   275  0317                     	;# 
   276  0318                     	;# 
   277  0318                     	;# 
   278  0319                     	;# 
   279  031A                     	;# 
   280  031B                     	;# 
   281  031C                     	;# 
   282  031C                     	;# 
   283  031D                     	;# 
   284  031E                     	;# 
   285  031F                     	;# 
   286  038C                     	;# 
   287  038C                     	;# 
   288  038D                     	;# 
   289  038E                     	;# 
   290  0390                     	;# 
   291  0390                     	;# 
   292  0391                     	;# 
   293  0392                     	;# 
   294  040C                     	;# 
   295  040D                     	;# 
   296  040E                     	;# 
   297  040F                     	;# 
   298  0410                     	;# 
   299  0411                     	;# 
   300  0416                     	;# 
   301  0416                     	;# 
   302  0417                     	;# 
   303  0418                     	;# 
   304  0418                     	;# 
   305  0419                     	;# 
   306  041A                     	;# 
   307  041A                     	;# 
   308  041B                     	;# 
   309  041C                     	;# 
   310  041C                     	;# 
   311  041D                     	;# 
   312  041E                     	;# 
   313  041F                     	;# 
   314  048C                     	;# 
   315  048C                     	;# 
   316  048D                     	;# 
   317  048E                     	;# 
   318  048F                     	;# 
   319  048F                     	;# 
   320  0490                     	;# 
   321  0491                     	;# 
   322  0492                     	;# 
   323  0492                     	;# 
   324  0493                     	;# 
   325  0494                     	;# 
   326  0495                     	;# 
   327  0495                     	;# 
   328  0496                     	;# 
   329  0497                     	;# 
   330  0498                     	;# 
   331  0499                     	;# 
   332  049A                     	;# 
   333  049B                     	;# 
   334  049C                     	;# 
   335  049D                     	;# 
   336  050C                     	;# 
   337  050C                     	;# 
   338  050D                     	;# 
   339  050E                     	;# 
   340  050F                     	;# 
   341  050F                     	;# 
   342  0510                     	;# 
   343  0511                     	;# 
   344  0512                     	;# 
   345  0512                     	;# 
   346  0513                     	;# 
   347  0514                     	;# 
   348  0515                     	;# 
   349  0515                     	;# 
   350  0516                     	;# 
   351  0517                     	;# 
   352  0518                     	;# 
   353  0519                     	;# 
   354  051A                     	;# 
   355  051B                     	;# 
   356  051C                     	;# 
   357  051D                     	;# 
   358  058C                     	;# 
   359  058C                     	;# 
   360  058D                     	;# 
   361  058E                     	;# 
   362  058F                     	;# 
   363  058F                     	;# 
   364  0590                     	;# 
   365  0591                     	;# 
   366  0592                     	;# 
   367  0593                     	;# 
   368  060C                     	;# 
   369  060D                     	;# 
   370  060E                     	;# 
   371  060F                     	;# 
   372  0610                     	;# 
   373  0611                     	;# 
   374  0612                     	;# 
   375  0613                     	;# 
   376  0614                     	;# 
   377  0616                     	;# 
   378  0617                     	;# 
   379  0618                     	;# 
   380  0619                     	;# 
   381  061A                     	;# 
   382  061B                     	;# 
   383  061C                     	;# 
   384  061D                     	;# 
   385  061E                     	;# 
   386  068C                     	;# 
   387  068D                     	;# 
   388  068E                     	;# 
   389  068F                     	;# 
   390  0690                     	;# 
   391  0691                     	;# 
   392  0692                     	;# 
   393  0693                     	;# 
   394  0694                     	;# 
   395  070C                     	;# 
   396  070D                     	;# 
   397  070E                     	;# 
   398  070F                     	;# 
   399  0710                     	;# 
   400  0711                     	;# 
   401  0712                     	;# 
   402  0713                     	;# 
   403  0714                     	;# 
   404  0716                     	;# 
   405  0717                     	;# 
   406  0718                     	;# 
   407  0719                     	;# 
   408  071A                     	;# 
   409  071B                     	;# 
   410  071C                     	;# 
   411  071D                     	;# 
   412  071E                     	;# 
   413  0796                     	;# 
   414  0797                     	;# 
   415  0798                     	;# 
   416  0799                     	;# 
   417  079A                     	;# 
   418  079B                     	;# 
   419  080C                     	;# 
   420  080D                     	;# 
   421  080E                     	;# 
   422  080F                     	;# 
   423  0810                     	;# 
   424  0811                     	;# 
   425  0812                     	;# 
   426  0813                     	;# 
   427  0814                     	;# 
   428  081A                     	;# 
   429  081B                     	;# 
   430  081C                     	;# 
   431  081D                     	;# 
   432  081E                     	;# 
   433  081F                     	;# 
   434  088C                     	;# 
   435  088D                     	;# 
   436  088E                     	;# 
   437  088F                     	;# 
   438  0890                     	;# 
   439  0891                     	;# 
   440  0892                     	;# 
   441  0893                     	;# 
   442  0895                     	;# 
   443  0896                     	;# 
   444  0897                     	;# 
   445  0898                     	;# 
   446  0899                     	;# 
   447  089A                     	;# 
   448  089B                     	;# 
   449  090C                     	;# 
   450  090E                     	;# 
   451  090F                     	;# 
   452  091F                     	;# 
   453  091F                     	;# 
   454  098F                     	;# 
   455  098F                     	;# 
   456  0990                     	;# 
   457  0991                     	;# 
   458  0992                     	;# 
   459  0993                     	;# 
   460  0994                     	;# 
   461  0995                     	;# 
   462  0996                     	;# 
   463  0997                     	;# 
   464  0E0F                     	;# 
   465  0E10                     	;# 
   466  0E11                     	;# 
   467  0E12                     	;# 
   468  0E13                     	;# 
   469  0E14                     	;# 
   470  0E15                     	;# 
   471  0E16                     	;# 
   472  0E17                     	;# 
   473  0E18                     	;# 
   474  0E19                     	;# 
   475  0E1A                     	;# 
   476  0E1B                     	;# 
   477  0E1C                     	;# 
   478  0E1D                     	;# 
   479  0E1E                     	;# 
   480  0E1F                     	;# 
   481  0E20                     	;# 
   482  0E21                     	;# 
   483  0E22                     	;# 
   484  0E23                     	;# 
   485  0E24                     	;# 
   486  0E25                     	;# 
   487  0E26                     	;# 
   488  0E27                     	;# 
   489  0E28                     	;# 
   490  0E29                     	;# 
   491  0E2A                     	;# 
   492  0E2B                     	;# 
   493  0E2C                     	;# 
   494  0E2D                     	;# 
   495  0E2E                     	;# 
   496  0E2F                     	;# 
   497  0E30                     	;# 
   498  0E31                     	;# 
   499  0E32                     	;# 
   500  0E33                     	;# 
   501  0E34                     	;# 
   502  0E35                     	;# 
   503  0E36                     	;# 
   504  0E37                     	;# 
   505  0E8F                     	;# 
   506  0E90                     	;# 
   507  0E91                     	;# 
   508  0E92                     	;# 
   509  0E93                     	;# 
   510  0E94                     	;# 
   511  0E95                     	;# 
   512  0E96                     	;# 
   513  0E97                     	;# 
   514  0E9C                     	;# 
   515  0E9D                     	;# 
   516  0E9E                     	;# 
   517  0EA1                     	;# 
   518  0EA2                     	;# 
   519  0EA3                     	;# 
   520  0EA4                     	;# 
   521  0EA5                     	;# 
   522  0EA9                     	;# 
   523  0EAA                     	;# 
   524  0EAB                     	;# 
   525  0EAC                     	;# 
   526  0EB1                     	;# 
   527  0EB2                     	;# 
   528  0EB3                     	;# 
   529  0EB8                     	;# 
   530  0EB9                     	;# 
   531  0EBA                     	;# 
   532  0EBB                     	;# 
   533  0EBC                     	;# 
   534  0EBD                     	;# 
   535  0EBE                     	;# 
   536  0EC3                     	;# 
   537  0EC5                     	;# 
   538  0EC6                     	;# 
   539  0EC7                     	;# 
   540  0EC8                     	;# 
   541  0EC9                     	;# 
   542  0ECA                     	;# 
   543  0ECB                     	;# 
   544  0ECC                     	;# 
   545  0F10                     	;# 
   546  0F11                     	;# 
   547  0F12                     	;# 
   548  0F13                     	;# 
   549  0F14                     	;# 
   550  0F15                     	;# 
   551  0F16                     	;# 
   552  0F17                     	;# 
   553  0F18                     	;# 
   554  0F19                     	;# 
   555  0F1A                     	;# 
   556  0F1B                     	;# 
   557  0F1C                     	;# 
   558  0F1D                     	;# 
   559  0F1E                     	;# 
   560  0F1F                     	;# 
   561  0F20                     	;# 
   562  0F21                     	;# 
   563  0F22                     	;# 
   564  0F23                     	;# 
   565  0F24                     	;# 
   566  0F25                     	;# 
   567  0F26                     	;# 
   568  0F27                     	;# 
   569  0F38                     	;# 
   570  0F39                     	;# 
   571  0F3A                     	;# 
   572  0F3B                     	;# 
   573  0F3C                     	;# 
   574  0F3D                     	;# 
   575  0F3E                     	;# 
   576  0F3F                     	;# 
   577  0F40                     	;# 
   578  0F41                     	;# 
   579  0F43                     	;# 
   580  0F44                     	;# 
   581  0F45                     	;# 
   582  0F46                     	;# 
   583  0F47                     	;# 
   584  0F48                     	;# 
   585  0F49                     	;# 
   586  0F4A                     	;# 
   587  0F4B                     	;# 
   588  0F4C                     	;# 
   589  0F4E                     	;# 
   590  0F4F                     	;# 
   591  0F50                     	;# 
   592  0F51                     	;# 
   593  0F52                     	;# 
   594  0F53                     	;# 
   595  0F54                     	;# 
   596  0F55                     	;# 
   597  0F56                     	;# 
   598  0F57                     	;# 
   599  0F65                     	;# 
   600  0F68                     	;# 
   601  0F69                     	;# 
   602  0F6A                     	;# 
   603  0F6B                     	;# 
   604  0FE4                     	;# 
   605  0FE5                     	;# 
   606  0FE6                     	;# 
   607  0FE7                     	;# 
   608  0FE8                     	;# 
   609  0FE9                     	;# 
   610  0FEA                     	;# 
   611  0FEB                     	;# 
   612  0FED                     	;# 
   613  0FEE                     	;# 
   614  0FEF                     	;# 
   615  0000                     	;# 
   616  0001                     	;# 
   617  0002                     	;# 
   618  0003                     	;# 
   619  0004                     	;# 
   620  0005                     	;# 
   621  0006                     	;# 
   622  0007                     	;# 
   623  0008                     	;# 
   624  0009                     	;# 
   625  000A                     	;# 
   626  000B                     	;# 
   627  000C                     	;# 
   628  000D                     	;# 
   629  000E                     	;# 
   630  0010                     	;# 
   631  0011                     	;# 
   632  0012                     	;# 
   633  0013                     	;# 
   634  0016                     	;# 
   635  0017                     	;# 
   636  0018                     	;# 
   637  001C                     	;# 
   638  001C                     	;# 
   639  001D                     	;# 
   640  001D                     	;# 
   641  001E                     	;# 
   642  001F                     	;# 
   643  008C                     	;# 
   644  008C                     	;# 
   645  008D                     	;# 
   646  008E                     	;# 
   647  008E                     	;# 
   648  008F                     	;# 
   649  0090                     	;# 
   650  0090                     	;# 
   651  0091                     	;# 
   652  0093                     	;# 
   653  0094                     	;# 
   654  0095                     	;# 
   655  0096                     	;# 
   656  0097                     	;# 
   657  0098                     	;# 
   658  0099                     	;# 
   659  009A                     	;# 
   660  009B                     	;# 
   661  009C                     	;# 
   662  009D                     	;# 
   663  009E                     	;# 
   664  010C                     	;# 
   665  010D                     	;# 
   666  010E                     	;# 
   667  010E                     	;# 
   668  010F                     	;# 
   669  0110                     	;# 
   670  0110                     	;# 
   671  0111                     	;# 
   672  0112                     	;# 
   673  0112                     	;# 
   674  0113                     	;# 
   675  0114                     	;# 
   676  0114                     	;# 
   677  0115                     	;# 
   678  0116                     	;# 
   679  0116                     	;# 
   680  0117                     	;# 
   681  0119                     	;# 
   682  0119                     	;# 
   683  0119                     	;# 
   684  011A                     	;# 
   685  011A                     	;# 
   686  011A                     	;# 
   687  011B                     	;# 
   688  011B                     	;# 
   689  011B                     	;# 
   690  011B                     	;# 
   691  011B                     	;# 
   692  011C                     	;# 
   693  011C                     	;# 
   694  011C                     	;# 
   695  011D                     	;# 
   696  011D                     	;# 
   697  011D                     	;# 
   698  011E                     	;# 
   699  011E                     	;# 
   700  011E                     	;# 
   701  011F                     	;# 
   702  011F                     	;# 
   703  011F                     	;# 
   704  011F                     	;# 
   705  011F                     	;# 
   706  018C                     	;# 
   707  018D                     	;# 
   708  018E                     	;# 
   709  018F                     	;# 
   710  0190                     	;# 
   711  0191                     	;# 
   712  0192                     	;# 
   713  0196                     	;# 
   714  0197                     	;# 
   715  0198                     	;# 
   716  0199                     	;# 
   717  019A                     	;# 
   718  019B                     	;# 
   719  019C                     	;# 
   720  020C                     	;# 
   721  020C                     	;# 
   722  020D                     	;# 
   723  020E                     	;# 
   724  020F                     	;# 
   725  020F                     	;# 
   726  0210                     	;# 
   727  0210                     	;# 
   728  0211                     	;# 
   729  0211                     	;# 
   730  0212                     	;# 
   731  0212                     	;# 
   732  0213                     	;# 
   733  0214                     	;# 
   734  0215                     	;# 
   735  0215                     	;# 
   736  0216                     	;# 
   737  0216                     	;# 
   738  0217                     	;# 
   739  0217                     	;# 
   740  0218                     	;# 
   741  0218                     	;# 
   742  0219                     	;# 
   743  021A                     	;# 
   744  021B                     	;# 
   745  021B                     	;# 
   746  021C                     	;# 
   747  021C                     	;# 
   748  021D                     	;# 
   749  021D                     	;# 
   750  021E                     	;# 
   751  021F                     	;# 
   752  028C                     	;# 
   753  028C                     	;# 
   754  028D                     	;# 
   755  028D                     	;# 
   756  028E                     	;# 
   757  028F                     	;# 
   758  0290                     	;# 
   759  0290                     	;# 
   760  0291                     	;# 
   761  0292                     	;# 
   762  0292                     	;# 
   763  0293                     	;# 
   764  0293                     	;# 
   765  0294                     	;# 
   766  0295                     	;# 
   767  0296                     	;# 
   768  0296                     	;# 
   769  0297                     	;# 
   770  0298                     	;# 
   771  0298                     	;# 
   772  0299                     	;# 
   773  0299                     	;# 
   774  029A                     	;# 
   775  029B                     	;# 
   776  029C                     	;# 
   777  029C                     	;# 
   778  029D                     	;# 
   779  030C                     	;# 
   780  030C                     	;# 
   781  030D                     	;# 
   782  030E                     	;# 
   783  030F                     	;# 
   784  0310                     	;# 
   785  0310                     	;# 
   786  0311                     	;# 
   787  0312                     	;# 
   788  0313                     	;# 
   789  0314                     	;# 
   790  0314                     	;# 
   791  0315                     	;# 
   792  0316                     	;# 
   793  0317                     	;# 
   794  0318                     	;# 
   795  0318                     	;# 
   796  0319                     	;# 
   797  031A                     	;# 
   798  031B                     	;# 
   799  031C                     	;# 
   800  031C                     	;# 
   801  031D                     	;# 
   802  031E                     	;# 
   803  031F                     	;# 
   804  038C                     	;# 
   805  038C                     	;# 
   806  038D                     	;# 
   807  038E                     	;# 
   808  0390                     	;# 
   809  0390                     	;# 
   810  0391                     	;# 
   811  0392                     	;# 
   812  040C                     	;# 
   813  040D                     	;# 
   814  040E                     	;# 
   815  040F                     	;# 
   816  0410                     	;# 
   817  0411                     	;# 
   818  0416                     	;# 
   819  0416                     	;# 
   820  0417                     	;# 
   821  0418                     	;# 
   822  0418                     	;# 
   823  0419                     	;# 
   824  041A                     	;# 
   825  041A                     	;# 
   826  041B                     	;# 
   827  041C                     	;# 
   828  041C                     	;# 
   829  041D                     	;# 
   830  041E                     	;# 
   831  041F                     	;# 
   832  048C                     	;# 
   833  048C                     	;# 
   834  048D                     	;# 
   835  048E                     	;# 
   836  048F                     	;# 
   837  048F                     	;# 
   838  0490                     	;# 
   839  0491                     	;# 
   840  0492                     	;# 
   841  0492                     	;# 
   842  0493                     	;# 
   843  0494                     	;# 
   844  0495                     	;# 
   845  0495                     	;# 
   846  0496                     	;# 
   847  0497                     	;# 
   848  0498                     	;# 
   849  0499                     	;# 
   850  049A                     	;# 
   851  049B                     	;# 
   852  049C                     	;# 
   853  049D                     	;# 
   854  050C                     	;# 
   855  050C                     	;# 
   856  050D                     	;# 
   857  050E                     	;# 
   858  050F                     	;# 
   859  050F                     	;# 
   860  0510                     	;# 
   861  0511                     	;# 
   862  0512                     	;# 
   863  0512                     	;# 
   864  0513                     	;# 
   865  0514                     	;# 
   866  0515                     	;# 
   867  0515                     	;# 
   868  0516                     	;# 
   869  0517                     	;# 
   870  0518                     	;# 
   871  0519                     	;# 
   872  051A                     	;# 
   873  051B                     	;# 
   874  051C                     	;# 
   875  051D                     	;# 
   876  058C                     	;# 
   877  058C                     	;# 
   878  058D                     	;# 
   879  058E                     	;# 
   880  058F                     	;# 
   881  058F                     	;# 
   882  0590                     	;# 
   883  0591                     	;# 
   884  0592                     	;# 
   885  0593                     	;# 
   886  060C                     	;# 
   887  060D                     	;# 
   888  060E                     	;# 
   889  060F                     	;# 
   890  0610                     	;# 
   891  0611                     	;# 
   892  0612                     	;# 
   893  0613                     	;# 
   894  0614                     	;# 
   895  0616                     	;# 
   896  0617                     	;# 
   897  0618                     	;# 
   898  0619                     	;# 
   899  061A                     	;# 
   900  061B                     	;# 
   901  061C                     	;# 
   902  061D                     	;# 
   903  061E                     	;# 
   904  068C                     	;# 
   905  068D                     	;# 
   906  068E                     	;# 
   907  068F                     	;# 
   908  0690                     	;# 
   909  0691                     	;# 
   910  0692                     	;# 
   911  0693                     	;# 
   912  0694                     	;# 
   913  070C                     	;# 
   914  070D                     	;# 
   915  070E                     	;# 
   916  070F                     	;# 
   917  0710                     	;# 
   918  0711                     	;# 
   919  0712                     	;# 
   920  0713                     	;# 
   921  0714                     	;# 
   922  0716                     	;# 
   923  0717                     	;# 
   924  0718                     	;# 
   925  0719                     	;# 
   926  071A                     	;# 
   927  071B                     	;# 
   928  071C                     	;# 
   929  071D                     	;# 
   930  071E                     	;# 
   931  0796                     	;# 
   932  0797                     	;# 
   933  0798                     	;# 
   934  0799                     	;# 
   935  079A                     	;# 
   936  079B                     	;# 
   937  080C                     	;# 
   938  080D                     	;# 
   939  080E                     	;# 
   940  080F                     	;# 
   941  0810                     	;# 
   942  0811                     	;# 
   943  0812                     	;# 
   944  0813                     	;# 
   945  0814                     	;# 
   946  081A                     	;# 
   947  081B                     	;# 
   948  081C                     	;# 
   949  081D                     	;# 
   950  081E                     	;# 
   951  081F                     	;# 
   952  088C                     	;# 
   953  088D                     	;# 
   954  088E                     	;# 
   955  088F                     	;# 
   956  0890                     	;# 
   957  0891                     	;# 
   958  0892                     	;# 
   959  0893                     	;# 
   960  0895                     	;# 
   961  0896                     	;# 
   962  0897                     	;# 
   963  0898                     	;# 
   964  0899                     	;# 
   965  089A                     	;# 
   966  089B                     	;# 
   967  090C                     	;# 
   968  090E                     	;# 
   969  090F                     	;# 
   970  091F                     	;# 
   971  091F                     	;# 
   972  098F                     	;# 
   973  098F                     	;# 
   974  0990                     	;# 
   975  0991                     	;# 
   976  0992                     	;# 
   977  0993                     	;# 
   978  0994                     	;# 
   979  0995                     	;# 
   980  0996                     	;# 
   981  0997                     	;# 
   982  0E0F                     	;# 
   983  0E10                     	;# 
   984  0E11                     	;# 
   985  0E12                     	;# 
   986  0E13                     	;# 
   987  0E14                     	;# 
   988  0E15                     	;# 
   989  0E16                     	;# 
   990  0E17                     	;# 
   991  0E18                     	;# 
   992  0E19                     	;# 
   993  0E1A                     	;# 
   994  0E1B                     	;# 
   995  0E1C                     	;# 
   996  0E1D                     	;# 
   997  0E1E                     	;# 
   998  0E1F                     	;# 
   999  0E20                     	;# 
  1000  0E21                     	;# 
  1001  0E22                     	;# 
  1002  0E23                     	;# 
  1003  0E24                     	;# 
  1004  0E25                     	;# 
  1005  0E26                     	;# 
  1006  0E27                     	;# 
  1007  0E28                     	;# 
  1008  0E29                     	;# 
  1009  0E2A                     	;# 
  1010  0E2B                     	;# 
  1011  0E2C                     	;# 
  1012  0E2D                     	;# 
  1013  0E2E                     	;# 
  1014  0E2F                     	;# 
  1015  0E30                     	;# 
  1016  0E31                     	;# 
  1017  0E32                     	;# 
  1018  0E33                     	;# 
  1019  0E34                     	;# 
  1020  0E35                     	;# 
  1021  0E36                     	;# 
  1022  0E37                     	;# 
  1023  0E8F                     	;# 
  1024  0E90                     	;# 
  1025  0E91                     	;# 
  1026  0E92                     	;# 
  1027  0E93                     	;# 
  1028  0E94                     	;# 
  1029  0E95                     	;# 
  1030  0E96                     	;# 
  1031  0E97                     	;# 
  1032  0E9C                     	;# 
  1033  0E9D                     	;# 
  1034  0E9E                     	;# 
  1035  0EA1                     	;# 
  1036  0EA2                     	;# 
  1037  0EA3                     	;# 
  1038  0EA4                     	;# 
  1039  0EA5                     	;# 
  1040  0EA9                     	;# 
  1041  0EAA                     	;# 
  1042  0EAB                     	;# 
  1043  0EAC                     	;# 
  1044  0EB1                     	;# 
  1045  0EB2                     	;# 
  1046  0EB3                     	;# 
  1047  0EB8                     	;# 
  1048  0EB9                     	;# 
  1049  0EBA                     	;# 
  1050  0EBB                     	;# 
  1051  0EBC                     	;# 
  1052  0EBD                     	;# 
  1053  0EBE                     	;# 
  1054  0EC3                     	;# 
  1055  0EC5                     	;# 
  1056  0EC6                     	;# 
  1057  0EC7                     	;# 
  1058  0EC8                     	;# 
  1059  0EC9                     	;# 
  1060  0ECA                     	;# 
  1061  0ECB                     	;# 
  1062  0ECC                     	;# 
  1063  0F10                     	;# 
  1064  0F11                     	;# 
  1065  0F12                     	;# 
  1066  0F13                     	;# 
  1067  0F14                     	;# 
  1068  0F15                     	;# 
  1069  0F16                     	;# 
  1070  0F17                     	;# 
  1071  0F18                     	;# 
  1072  0F19                     	;# 
  1073  0F1A                     	;# 
  1074  0F1B                     	;# 
  1075  0F1C                     	;# 
  1076  0F1D                     	;# 
  1077  0F1E                     	;# 
  1078  0F1F                     	;# 
  1079  0F20                     	;# 
  1080  0F21                     	;# 
  1081  0F22                     	;# 
  1082  0F23                     	;# 
  1083  0F24                     	;# 
  1084  0F25                     	;# 
  1085  0F26                     	;# 
  1086  0F27                     	;# 
  1087  0F38                     	;# 
  1088  0F39                     	;# 
  1089  0F3A                     	;# 
  1090  0F3B                     	;# 
  1091  0F3C                     	;# 
  1092  0F3D                     	;# 
  1093  0F3E                     	;# 
  1094  0F3F                     	;# 
  1095  0F40                     	;# 
  1096  0F41                     	;# 
  1097  0F43                     	;# 
  1098  0F44                     	;# 
  1099  0F45                     	;# 
  1100  0F46                     	;# 
  1101  0F47                     	;# 
  1102  0F48                     	;# 
  1103  0F49                     	;# 
  1104  0F4A                     	;# 
  1105  0F4B                     	;# 
  1106  0F4C                     	;# 
  1107  0F4E                     	;# 
  1108  0F4F                     	;# 
  1109  0F50                     	;# 
  1110  0F51                     	;# 
  1111  0F52                     	;# 
  1112  0F53                     	;# 
  1113  0F54                     	;# 
  1114  0F55                     	;# 
  1115  0F56                     	;# 
  1116  0F57                     	;# 
  1117  0F65                     	;# 
  1118  0F68                     	;# 
  1119  0F69                     	;# 
  1120  0F6A                     	;# 
  1121  0F6B                     	;# 
  1122  0FE4                     	;# 
  1123  0FE5                     	;# 
  1124  0FE6                     	;# 
  1125  0FE7                     	;# 
  1126  0FE8                     	;# 
  1127  0FE9                     	;# 
  1128  0FEA                     	;# 
  1129  0FEB                     	;# 
  1130  0FED                     	;# 
  1131  0FEE                     	;# 
  1132  0FEF                     	;# 
  1133  0000                     	;# 
  1134  0001                     	;# 
  1135  0002                     	;# 
  1136  0003                     	;# 
  1137  0004                     	;# 
  1138  0005                     	;# 
  1139  0006                     	;# 
  1140  0007                     	;# 
  1141  0008                     	;# 
  1142  0009                     	;# 
  1143  000A                     	;# 
  1144  000B                     	;# 
  1145  000C                     	;# 
  1146  000D                     	;# 
  1147  000E                     	;# 
  1148  0010                     	;# 
  1149  0011                     	;# 
  1150  0012                     	;# 
  1151  0013                     	;# 
  1152  0016                     	;# 
  1153  0017                     	;# 
  1154  0018                     	;# 
  1155  001C                     	;# 
  1156  001C                     	;# 
  1157  001D                     	;# 
  1158  001D                     	;# 
  1159  001E                     	;# 
  1160  001F                     	;# 
  1161  008C                     	;# 
  1162  008C                     	;# 
  1163  008D                     	;# 
  1164  008E                     	;# 
  1165  008E                     	;# 
  1166  008F                     	;# 
  1167  0090                     	;# 
  1168  0090                     	;# 
  1169  0091                     	;# 
  1170  0093                     	;# 
  1171  0094                     	;# 
  1172  0095                     	;# 
  1173  0096                     	;# 
  1174  0097                     	;# 
  1175  0098                     	;# 
  1176  0099                     	;# 
  1177  009A                     	;# 
  1178  009B                     	;# 
  1179  009C                     	;# 
  1180  009D                     	;# 
  1181  009E                     	;# 
  1182  010C                     	;# 
  1183  010D                     	;# 
  1184  010E                     	;# 
  1185  010E                     	;# 
  1186  010F                     	;# 
  1187  0110                     	;# 
  1188  0110                     	;# 
  1189  0111                     	;# 
  1190  0112                     	;# 
  1191  0112                     	;# 
  1192  0113                     	;# 
  1193  0114                     	;# 
  1194  0114                     	;# 
  1195  0115                     	;# 
  1196  0116                     	;# 
  1197  0116                     	;# 
  1198  0117                     	;# 
  1199  0119                     	;# 
  1200  0119                     	;# 
  1201  0119                     	;# 
  1202  011A                     	;# 
  1203  011A                     	;# 
  1204  011A                     	;# 
  1205  011B                     	;# 
  1206  011B                     	;# 
  1207  011B                     	;# 
  1208  011B                     	;# 
  1209  011B                     	;# 
  1210  011C                     	;# 
  1211  011C                     	;# 
  1212  011C                     	;# 
  1213  011D                     	;# 
  1214  011D                     	;# 
  1215  011D                     	;# 
  1216  011E                     	;# 
  1217  011E                     	;# 
  1218  011E                     	;# 
  1219  011F                     	;# 
  1220  011F                     	;# 
  1221  011F                     	;# 
  1222  011F                     	;# 
  1223  011F                     	;# 
  1224  018C                     	;# 
  1225  018D                     	;# 
  1226  018E                     	;# 
  1227  018F                     	;# 
  1228  0190                     	;# 
  1229  0191                     	;# 
  1230  0192                     	;# 
  1231  0196                     	;# 
  1232  0197                     	;# 
  1233  0198                     	;# 
  1234  0199                     	;# 
  1235  019A                     	;# 
  1236  019B                     	;# 
  1237  019C                     	;# 
  1238  020C                     	;# 
  1239  020C                     	;# 
  1240  020D                     	;# 
  1241  020E                     	;# 
  1242  020F                     	;# 
  1243  020F                     	;# 
  1244  0210                     	;# 
  1245  0210                     	;# 
  1246  0211                     	;# 
  1247  0211                     	;# 
  1248  0212                     	;# 
  1249  0212                     	;# 
  1250  0213                     	;# 
  1251  0214                     	;# 
  1252  0215                     	;# 
  1253  0215                     	;# 
  1254  0216                     	;# 
  1255  0216                     	;# 
  1256  0217                     	;# 
  1257  0217                     	;# 
  1258  0218                     	;# 
  1259  0218                     	;# 
  1260  0219                     	;# 
  1261  021A                     	;# 
  1262  021B                     	;# 
  1263  021B                     	;# 
  1264  021C                     	;# 
  1265  021C                     	;# 
  1266  021D                     	;# 
  1267  021D                     	;# 
  1268  021E                     	;# 
  1269  021F                     	;# 
  1270  028C                     	;# 
  1271  028C                     	;# 
  1272  028D                     	;# 
  1273  028D                     	;# 
  1274  028E                     	;# 
  1275  028F                     	;# 
  1276  0290                     	;# 
  1277  0290                     	;# 
  1278  0291                     	;# 
  1279  0292                     	;# 
  1280  0292                     	;# 
  1281  0293                     	;# 
  1282  0293                     	;# 
  1283  0294                     	;# 
  1284  0295                     	;# 
  1285  0296                     	;# 
  1286  0296                     	;# 
  1287  0297                     	;# 
  1288  0298                     	;# 
  1289  0298                     	;# 
  1290  0299                     	;# 
  1291  0299                     	;# 
  1292  029A                     	;# 
  1293  029B                     	;# 
  1294  029C                     	;# 
  1295  029C                     	;# 
  1296  029D                     	;# 
  1297  030C                     	;# 
  1298  030C                     	;# 
  1299  030D                     	;# 
  1300  030E                     	;# 
  1301  030F                     	;# 
  1302  0310                     	;# 
  1303  0310                     	;# 
  1304  0311                     	;# 
  1305  0312                     	;# 
  1306  0313                     	;# 
  1307  0314                     	;# 
  1308  0314                     	;# 
  1309  0315                     	;# 
  1310  0316                     	;# 
  1311  0317                     	;# 
  1312  0318                     	;# 
  1313  0318                     	;# 
  1314  0319                     	;# 
  1315  031A                     	;# 
  1316  031B                     	;# 
  1317  031C                     	;# 
  1318  031C                     	;# 
  1319  031D                     	;# 
  1320  031E                     	;# 
  1321  031F                     	;# 
  1322  038C                     	;# 
  1323  038C                     	;# 
  1324  038D                     	;# 
  1325  038E                     	;# 
  1326  0390                     	;# 
  1327  0390                     	;# 
  1328  0391                     	;# 
  1329  0392                     	;# 
  1330  040C                     	;# 
  1331  040D                     	;# 
  1332  040E                     	;# 
  1333  040F                     	;# 
  1334  0410                     	;# 
  1335  0411                     	;# 
  1336  0416                     	;# 
  1337  0416                     	;# 
  1338  0417                     	;# 
  1339  0418                     	;# 
  1340  0418                     	;# 
  1341  0419                     	;# 
  1342  041A                     	;# 
  1343  041A                     	;# 
  1344  041B                     	;# 
  1345  041C                     	;# 
  1346  041C                     	;# 
  1347  041D                     	;# 
  1348  041E                     	;# 
  1349  041F                     	;# 
  1350  048C                     	;# 
  1351  048C                     	;# 
  1352  048D                     	;# 
  1353  048E                     	;# 
  1354  048F                     	;# 
  1355  048F                     	;# 
  1356  0490                     	;# 
  1357  0491                     	;# 
  1358  0492                     	;# 
  1359  0492                     	;# 
  1360  0493                     	;# 
  1361  0494                     	;# 
  1362  0495                     	;# 
  1363  0495                     	;# 
  1364  0496                     	;# 
  1365  0497                     	;# 
  1366  0498                     	;# 
  1367  0499                     	;# 
  1368  049A                     	;# 
  1369  049B                     	;# 
  1370  049C                     	;# 
  1371  049D                     	;# 
  1372  050C                     	;# 
  1373  050C                     	;# 
  1374  050D                     	;# 
  1375  050E                     	;# 
  1376  050F                     	;# 
  1377  050F                     	;# 
  1378  0510                     	;# 
  1379  0511                     	;# 
  1380  0512                     	;# 
  1381  0512                     	;# 
  1382  0513                     	;# 
  1383  0514                     	;# 
  1384  0515                     	;# 
  1385  0515                     	;# 
  1386  0516                     	;# 
  1387  0517                     	;# 
  1388  0518                     	;# 
  1389  0519                     	;# 
  1390  051A                     	;# 
  1391  051B                     	;# 
  1392  051C                     	;# 
  1393  051D                     	;# 
  1394  058C                     	;# 
  1395  058C                     	;# 
  1396  058D                     	;# 
  1397  058E                     	;# 
  1398  058F                     	;# 
  1399  058F                     	;# 
  1400  0590                     	;# 
  1401  0591                     	;# 
  1402  0592                     	;# 
  1403  0593                     	;# 
  1404  060C                     	;# 
  1405  060D                     	;# 
  1406  060E                     	;# 
  1407  060F                     	;# 
  1408  0610                     	;# 
  1409  0611                     	;# 
  1410  0612                     	;# 
  1411  0613                     	;# 
  1412  0614                     	;# 
  1413  0616                     	;# 
  1414  0617                     	;# 
  1415  0618                     	;# 
  1416  0619                     	;# 
  1417  061A                     	;# 
  1418  061B                     	;# 
  1419  061C                     	;# 
  1420  061D                     	;# 
  1421  061E                     	;# 
  1422  068C                     	;# 
  1423  068D                     	;# 
  1424  068E                     	;# 
  1425  068F                     	;# 
  1426  0690                     	;# 
  1427  0691                     	;# 
  1428  0692                     	;# 
  1429  0693                     	;# 
  1430  0694                     	;# 
  1431  070C                     	;# 
  1432  070D                     	;# 
  1433  070E                     	;# 
  1434  070F                     	;# 
  1435  0710                     	;# 
  1436  0711                     	;# 
  1437  0712                     	;# 
  1438  0713                     	;# 
  1439  0714                     	;# 
  1440  0716                     	;# 
  1441  0717                     	;# 
  1442  0718                     	;# 
  1443  0719                     	;# 
  1444  071A                     	;# 
  1445  071B                     	;# 
  1446  071C                     	;# 
  1447  071D                     	;# 
  1448  071E                     	;# 
  1449  0796                     	;# 
  1450  0797                     	;# 
  1451  0798                     	;# 
  1452  0799                     	;# 
  1453  079A                     	;# 
  1454  079B                     	;# 
  1455  080C                     	;# 
  1456  080D                     	;# 
  1457  080E                     	;# 
  1458  080F                     	;# 
  1459  0810                     	;# 
  1460  0811                     	;# 
  1461  0812                     	;# 
  1462  0813                     	;# 
  1463  0814                     	;# 
  1464  081A                     	;# 
  1465  081B                     	;# 
  1466  081C                     	;# 
  1467  081D                     	;# 
  1468  081E                     	;# 
  1469  081F                     	;# 
  1470  088C                     	;# 
  1471  088D                     	;# 
  1472  088E                     	;# 
  1473  088F                     	;# 
  1474  0890                     	;# 
  1475  0891                     	;# 
  1476  0892                     	;# 
  1477  0893                     	;# 
  1478  0895                     	;# 
  1479  0896                     	;# 
  1480  0897                     	;# 
  1481  0898                     	;# 
  1482  0899                     	;# 
  1483  089A                     	;# 
  1484  089B                     	;# 
  1485  090C                     	;# 
  1486  090E                     	;# 
  1487  090F                     	;# 
  1488  091F                     	;# 
  1489  091F                     	;# 
  1490  098F                     	;# 
  1491  098F                     	;# 
  1492  0990                     	;# 
  1493  0991                     	;# 
  1494  0992                     	;# 
  1495  0993                     	;# 
  1496  0994                     	;# 
  1497  0995                     	;# 
  1498  0996                     	;# 
  1499  0997                     	;# 
  1500  0E0F                     	;# 
  1501  0E10                     	;# 
  1502  0E11                     	;# 
  1503  0E12                     	;# 
  1504  0E13                     	;# 
  1505  0E14                     	;# 
  1506  0E15                     	;# 
  1507  0E16                     	;# 
  1508  0E17                     	;# 
  1509  0E18                     	;# 
  1510  0E19                     	;# 
  1511  0E1A                     	;# 
  1512  0E1B                     	;# 
  1513  0E1C                     	;# 
  1514  0E1D                     	;# 
  1515  0E1E                     	;# 
  1516  0E1F                     	;# 
  1517  0E20                     	;# 
  1518  0E21                     	;# 
  1519  0E22                     	;# 
  1520  0E23                     	;# 
  1521  0E24                     	;# 
  1522  0E25                     	;# 
  1523  0E26                     	;# 
  1524  0E27                     	;# 
  1525  0E28                     	;# 
  1526  0E29                     	;# 
  1527  0E2A                     	;# 
  1528  0E2B                     	;# 
  1529  0E2C                     	;# 
  1530  0E2D                     	;# 
  1531  0E2E                     	;# 
  1532  0E2F                     	;# 
  1533  0E30                     	;# 
  1534  0E31                     	;# 
  1535  0E32                     	;# 
  1536  0E33                     	;# 
  1537  0E34                     	;# 
  1538  0E35                     	;# 
  1539  0E36                     	;# 
  1540  0E37                     	;# 
  1541  0E8F                     	;# 
  1542  0E90                     	;# 
  1543  0E91                     	;# 
  1544  0E92                     	;# 
  1545  0E93                     	;# 
  1546  0E94                     	;# 
  1547  0E95                     	;# 
  1548  0E96                     	;# 
  1549  0E97                     	;# 
  1550  0E9C                     	;# 
  1551  0E9D                     	;# 
  1552  0E9E                     	;# 
  1553  0EA1                     	;# 
  1554  0EA2                     	;# 
  1555  0EA3                     	;# 
  1556  0EA4                     	;# 
  1557  0EA5                     	;# 
  1558  0EA9                     	;# 
  1559  0EAA                     	;# 
  1560  0EAB                     	;# 
  1561  0EAC                     	;# 
  1562  0EB1                     	;# 
  1563  0EB2                     	;# 
  1564  0EB3                     	;# 
  1565  0EB8                     	;# 
  1566  0EB9                     	;# 
  1567  0EBA                     	;# 
  1568  0EBB                     	;# 
  1569  0EBC                     	;# 
  1570  0EBD                     	;# 
  1571  0EBE                     	;# 
  1572  0EC3                     	;# 
  1573  0EC5                     	;# 
  1574  0EC6                     	;# 
  1575  0EC7                     	;# 
  1576  0EC8                     	;# 
  1577  0EC9                     	;# 
  1578  0ECA                     	;# 
  1579  0ECB                     	;# 
  1580  0ECC                     	;# 
  1581  0F10                     	;# 
  1582  0F11                     	;# 
  1583  0F12                     	;# 
  1584  0F13                     	;# 
  1585  0F14                     	;# 
  1586  0F15                     	;# 
  1587  0F16                     	;# 
  1588  0F17                     	;# 
  1589  0F18                     	;# 
  1590  0F19                     	;# 
  1591  0F1A                     	;# 
  1592  0F1B                     	;# 
  1593  0F1C                     	;# 
  1594  0F1D                     	;# 
  1595  0F1E                     	;# 
  1596  0F1F                     	;# 
  1597  0F20                     	;# 
  1598  0F21                     	;# 
  1599  0F22                     	;# 
  1600  0F23                     	;# 
  1601  0F24                     	;# 
  1602  0F25                     	;# 
  1603  0F26                     	;# 
  1604  0F27                     	;# 
  1605  0F38                     	;# 
  1606  0F39                     	;# 
  1607  0F3A                     	;# 
  1608  0F3B                     	;# 
  1609  0F3C                     	;# 
  1610  0F3D                     	;# 
  1611  0F3E                     	;# 
  1612  0F3F                     	;# 
  1613  0F40                     	;# 
  1614  0F41                     	;# 
  1615  0F43                     	;# 
  1616  0F44                     	;# 
  1617  0F45                     	;# 
  1618  0F46                     	;# 
  1619  0F47                     	;# 
  1620  0F48                     	;# 
  1621  0F49                     	;# 
  1622  0F4A                     	;# 
  1623  0F4B                     	;# 
  1624  0F4C                     	;# 
  1625  0F4E                     	;# 
  1626  0F4F                     	;# 
  1627  0F50                     	;# 
  1628  0F51                     	;# 
  1629  0F52                     	;# 
  1630  0F53                     	;# 
  1631  0F54                     	;# 
  1632  0F55                     	;# 
  1633  0F56                     	;# 
  1634  0F57                     	;# 
  1635  0F65                     	;# 
  1636  0F68                     	;# 
  1637  0F69                     	;# 
  1638  0F6A                     	;# 
  1639  0F6B                     	;# 
  1640  0FE4                     	;# 
  1641  0FE5                     	;# 
  1642  0FE6                     	;# 
  1643  0FE7                     	;# 
  1644  0FE8                     	;# 
  1645  0FE9                     	;# 
  1646  0FEA                     	;# 
  1647  0FEB                     	;# 
  1648  0FED                     	;# 
  1649  0FEE                     	;# 
  1650  0FEF                     	;# 
  1651  0000                     	;# 
  1652  0001                     	;# 
  1653  0002                     	;# 
  1654  0003                     	;# 
  1655  0004                     	;# 
  1656  0005                     	;# 
  1657  0006                     	;# 
  1658  0007                     	;# 
  1659  0008                     	;# 
  1660  0009                     	;# 
  1661  000A                     	;# 
  1662  000B                     	;# 
  1663  000C                     	;# 
  1664  000D                     	;# 
  1665  000E                     	;# 
  1666  0010                     	;# 
  1667  0011                     	;# 
  1668  0012                     	;# 
  1669  0013                     	;# 
  1670  0016                     	;# 
  1671  0017                     	;# 
  1672  0018                     	;# 
  1673  001C                     	;# 
  1674  001C                     	;# 
  1675  001D                     	;# 
  1676  001D                     	;# 
  1677  001E                     	;# 
  1678  001F                     	;# 
  1679  008C                     	;# 
  1680  008C                     	;# 
  1681  008D                     	;# 
  1682  008E                     	;# 
  1683  008E                     	;# 
  1684  008F                     	;# 
  1685  0090                     	;# 
  1686  0090                     	;# 
  1687  0091                     	;# 
  1688  0093                     	;# 
  1689  0094                     	;# 
  1690  0095                     	;# 
  1691  0096                     	;# 
  1692  0097                     	;# 
  1693  0098                     	;# 
  1694  0099                     	;# 
  1695  009A                     	;# 
  1696  009B                     	;# 
  1697  009C                     	;# 
  1698  009D                     	;# 
  1699  009E                     	;# 
  1700  010C                     	;# 
  1701  010D                     	;# 
  1702  010E                     	;# 
  1703  010E                     	;# 
  1704  010F                     	;# 
  1705  0110                     	;# 
  1706  0110                     	;# 
  1707  0111                     	;# 
  1708  0112                     	;# 
  1709  0112                     	;# 
  1710  0113                     	;# 
  1711  0114                     	;# 
  1712  0114                     	;# 
  1713  0115                     	;# 
  1714  0116                     	;# 
  1715  0116                     	;# 
  1716  0117                     	;# 
  1717  0119                     	;# 
  1718  0119                     	;# 
  1719  0119                     	;# 
  1720  011A                     	;# 
  1721  011A                     	;# 
  1722  011A                     	;# 
  1723  011B                     	;# 
  1724  011B                     	;# 
  1725  011B                     	;# 
  1726  011B                     	;# 
  1727  011B                     	;# 
  1728  011C                     	;# 
  1729  011C                     	;# 
  1730  011C                     	;# 
  1731  011D                     	;# 
  1732  011D                     	;# 
  1733  011D                     	;# 
  1734  011E                     	;# 
  1735  011E                     	;# 
  1736  011E                     	;# 
  1737  011F                     	;# 
  1738  011F                     	;# 
  1739  011F                     	;# 
  1740  011F                     	;# 
  1741  011F                     	;# 
  1742  018C                     	;# 
  1743  018D                     	;# 
  1744  018E                     	;# 
  1745  018F                     	;# 
  1746  0190                     	;# 
  1747  0191                     	;# 
  1748  0192                     	;# 
  1749  0196                     	;# 
  1750  0197                     	;# 
  1751  0198                     	;# 
  1752  0199                     	;# 
  1753  019A                     	;# 
  1754  019B                     	;# 
  1755  019C                     	;# 
  1756  020C                     	;# 
  1757  020C                     	;# 
  1758  020D                     	;# 
  1759  020E                     	;# 
  1760  020F                     	;# 
  1761  020F                     	;# 
  1762  0210                     	;# 
  1763  0210                     	;# 
  1764  0211                     	;# 
  1765  0211                     	;# 
  1766  0212                     	;# 
  1767  0212                     	;# 
  1768  0213                     	;# 
  1769  0214                     	;# 
  1770  0215                     	;# 
  1771  0215                     	;# 
  1772  0216                     	;# 
  1773  0216                     	;# 
  1774  0217                     	;# 
  1775  0217                     	;# 
  1776  0218                     	;# 
  1777  0218                     	;# 
  1778  0219                     	;# 
  1779  021A                     	;# 
  1780  021B                     	;# 
  1781  021B                     	;# 
  1782  021C                     	;# 
  1783  021C                     	;# 
  1784  021D                     	;# 
  1785  021D                     	;# 
  1786  021E                     	;# 
  1787  021F                     	;# 
  1788  028C                     	;# 
  1789  028C                     	;# 
  1790  028D                     	;# 
  1791  028D                     	;# 
  1792  028E                     	;# 
  1793  028F                     	;# 
  1794  0290                     	;# 
  1795  0290                     	;# 
  1796  0291                     	;# 
  1797  0292                     	;# 
  1798  0292                     	;# 
  1799  0293                     	;# 
  1800  0293                     	;# 
  1801  0294                     	;# 
  1802  0295                     	;# 
  1803  0296                     	;# 
  1804  0296                     	;# 
  1805  0297                     	;# 
  1806  0298                     	;# 
  1807  0298                     	;# 
  1808  0299                     	;# 
  1809  0299                     	;# 
  1810  029A                     	;# 
  1811  029B                     	;# 
  1812  029C                     	;# 
  1813  029C                     	;# 
  1814  029D                     	;# 
  1815  030C                     	;# 
  1816  030C                     	;# 
  1817  030D                     	;# 
  1818  030E                     	;# 
  1819  030F                     	;# 
  1820  0310                     	;# 
  1821  0310                     	;# 
  1822  0311                     	;# 
  1823  0312                     	;# 
  1824  0313                     	;# 
  1825  0314                     	;# 
  1826  0314                     	;# 
  1827  0315                     	;# 
  1828  0316                     	;# 
  1829  0317                     	;# 
  1830  0318                     	;# 
  1831  0318                     	;# 
  1832  0319                     	;# 
  1833  031A                     	;# 
  1834  031B                     	;# 
  1835  031C                     	;# 
  1836  031C                     	;# 
  1837  031D                     	;# 
  1838  031E                     	;# 
  1839  031F                     	;# 
  1840  038C                     	;# 
  1841  038C                     	;# 
  1842  038D                     	;# 
  1843  038E                     	;# 
  1844  0390                     	;# 
  1845  0390                     	;# 
  1846  0391                     	;# 
  1847  0392                     	;# 
  1848  040C                     	;# 
  1849  040D                     	;# 
  1850  040E                     	;# 
  1851  040F                     	;# 
  1852  0410                     	;# 
  1853  0411                     	;# 
  1854  0416                     	;# 
  1855  0416                     	;# 
  1856  0417                     	;# 
  1857  0418                     	;# 
  1858  0418                     	;# 
  1859  0419                     	;# 
  1860  041A                     	;# 
  1861  041A                     	;# 
  1862  041B                     	;# 
  1863  041C                     	;# 
  1864  041C                     	;# 
  1865  041D                     	;# 
  1866  041E                     	;# 
  1867  041F                     	;# 
  1868  048C                     	;# 
  1869  048C                     	;# 
  1870  048D                     	;# 
  1871  048E                     	;# 
  1872  048F                     	;# 
  1873  048F                     	;# 
  1874  0490                     	;# 
  1875  0491                     	;# 
  1876  0492                     	;# 
  1877  0492                     	;# 
  1878  0493                     	;# 
  1879  0494                     	;# 
  1880  0495                     	;# 
  1881  0495                     	;# 
  1882  0496                     	;# 
  1883  0497                     	;# 
  1884  0498                     	;# 
  1885  0499                     	;# 
  1886  049A                     	;# 
  1887  049B                     	;# 
  1888  049C                     	;# 
  1889  049D                     	;# 
  1890  050C                     	;# 
  1891  050C                     	;# 
  1892  050D                     	;# 
  1893  050E                     	;# 
  1894  050F                     	;# 
  1895  050F                     	;# 
  1896  0510                     	;# 
  1897  0511                     	;# 
  1898  0512                     	;# 
  1899  0512                     	;# 
  1900  0513                     	;# 
  1901  0514                     	;# 
  1902  0515                     	;# 
  1903  0515                     	;# 
  1904  0516                     	;# 
  1905  0517                     	;# 
  1906  0518                     	;# 
  1907  0519                     	;# 
  1908  051A                     	;# 
  1909  051B                     	;# 
  1910  051C                     	;# 
  1911  051D                     	;# 
  1912  058C                     	;# 
  1913  058C                     	;# 
  1914  058D                     	;# 
  1915  058E                     	;# 
  1916  058F                     	;# 
  1917  058F                     	;# 
  1918  0590                     	;# 
  1919  0591                     	;# 
  1920  0592                     	;# 
  1921  0593                     	;# 
  1922  060C                     	;# 
  1923  060D                     	;# 
  1924  060E                     	;# 
  1925  060F                     	;# 
  1926  0610                     	;# 
  1927  0611                     	;# 
  1928  0612                     	;# 
  1929  0613                     	;# 
  1930  0614                     	;# 
  1931  0616                     	;# 
  1932  0617                     	;# 
  1933  0618                     	;# 
  1934  0619                     	;# 
  1935  061A                     	;# 
  1936  061B                     	;# 
  1937  061C                     	;# 
  1938  061D                     	;# 
  1939  061E                     	;# 
  1940  068C                     	;# 
  1941  068D                     	;# 
  1942  068E                     	;# 
  1943  068F                     	;# 
  1944  0690                     	;# 
  1945  0691                     	;# 
  1946  0692                     	;# 
  1947  0693                     	;# 
  1948  0694                     	;# 
  1949  070C                     	;# 
  1950  070D                     	;# 
  1951  070E                     	;# 
  1952  070F                     	;# 
  1953  0710                     	;# 
  1954  0711                     	;# 
  1955  0712                     	;# 
  1956  0713                     	;# 
  1957  0714                     	;# 
  1958  0716                     	;# 
  1959  0717                     	;# 
  1960  0718                     	;# 
  1961  0719                     	;# 
  1962  071A                     	;# 
  1963  071B                     	;# 
  1964  071C                     	;# 
  1965  071D                     	;# 
  1966  071E                     	;# 
  1967  0796                     	;# 
  1968  0797                     	;# 
  1969  0798                     	;# 
  1970  0799                     	;# 
  1971  079A                     	;# 
  1972  079B                     	;# 
  1973  080C                     	;# 
  1974  080D                     	;# 
  1975  080E                     	;# 
  1976  080F                     	;# 
  1977  0810                     	;# 
  1978  0811                     	;# 
  1979  0812                     	;# 
  1980  0813                     	;# 
  1981  0814                     	;# 
  1982  081A                     	;# 
  1983  081B                     	;# 
  1984  081C                     	;# 
  1985  081D                     	;# 
  1986  081E                     	;# 
  1987  081F                     	;# 
  1988  088C                     	;# 
  1989  088D                     	;# 
  1990  088E                     	;# 
  1991  088F                     	;# 
  1992  0890                     	;# 
  1993  0891                     	;# 
  1994  0892                     	;# 
  1995  0893                     	;# 
  1996  0895                     	;# 
  1997  0896                     	;# 
  1998  0897                     	;# 
  1999  0898                     	;# 
  2000  0899                     	;# 
  2001  089A                     	;# 
  2002  089B                     	;# 
  2003  090C                     	;# 
  2004  090E                     	;# 
  2005  090F                     	;# 
  2006  091F                     	;# 
  2007  091F                     	;# 
  2008  098F                     	;# 
  2009  098F                     	;# 
  2010  0990                     	;# 
  2011  0991                     	;# 
  2012  0992                     	;# 
  2013  0993                     	;# 
  2014  0994                     	;# 
  2015  0995                     	;# 
  2016  0996                     	;# 
  2017  0997                     	;# 
  2018  0E0F                     	;# 
  2019  0E10                     	;# 
  2020  0E11                     	;# 
  2021  0E12                     	;# 
  2022  0E13                     	;# 
  2023  0E14                     	;# 
  2024  0E15                     	;# 
  2025  0E16                     	;# 
  2026  0E17                     	;# 
  2027  0E18                     	;# 
  2028  0E19                     	;# 
  2029  0E1A                     	;# 
  2030  0E1B                     	;# 
  2031  0E1C                     	;# 
  2032  0E1D                     	;# 
  2033  0E1E                     	;# 
  2034  0E1F                     	;# 
  2035  0E20                     	;# 
  2036  0E21                     	;# 
  2037  0E22                     	;# 
  2038  0E23                     	;# 
  2039  0E24                     	;# 
  2040  0E25                     	;# 
  2041  0E26                     	;# 
  2042  0E27                     	;# 
  2043  0E28                     	;# 
  2044  0E29                     	;# 
  2045  0E2A                     	;# 
  2046  0E2B                     	;# 
  2047  0E2C                     	;# 
  2048  0E2D                     	;# 
  2049  0E2E                     	;# 
  2050  0E2F                     	;# 
  2051  0E30                     	;# 
  2052  0E31                     	;# 
  2053  0E32                     	;# 
  2054  0E33                     	;# 
  2055  0E34                     	;# 
  2056  0E35                     	;# 
  2057  0E36                     	;# 
  2058  0E37                     	;# 
  2059  0E8F                     	;# 
  2060  0E90                     	;# 
  2061  0E91                     	;# 
  2062  0E92                     	;# 
  2063  0E93                     	;# 
  2064  0E94                     	;# 
  2065  0E95                     	;# 
  2066  0E96                     	;# 
  2067  0E97                     	;# 
  2068  0E9C                     	;# 
  2069  0E9D                     	;# 
  2070  0E9E                     	;# 
  2071  0EA1                     	;# 
  2072  0EA2                     	;# 
  2073  0EA3                     	;# 
  2074  0EA4                     	;# 
  2075  0EA5                     	;# 
  2076  0EA9                     	;# 
  2077  0EAA                     	;# 
  2078  0EAB                     	;# 
  2079  0EAC                     	;# 
  2080  0EB1                     	;# 
  2081  0EB2                     	;# 
  2082  0EB3                     	;# 
  2083  0EB8                     	;# 
  2084  0EB9                     	;# 
  2085  0EBA                     	;# 
  2086  0EBB                     	;# 
  2087  0EBC                     	;# 
  2088  0EBD                     	;# 
  2089  0EBE                     	;# 
  2090  0EC3                     	;# 
  2091  0EC5                     	;# 
  2092  0EC6                     	;# 
  2093  0EC7                     	;# 
  2094  0EC8                     	;# 
  2095  0EC9                     	;# 
  2096  0ECA                     	;# 
  2097  0ECB                     	;# 
  2098  0ECC                     	;# 
  2099  0F10                     	;# 
  2100  0F11                     	;# 
  2101  0F12                     	;# 
  2102  0F13                     	;# 
  2103  0F14                     	;# 
  2104  0F15                     	;# 
  2105  0F16                     	;# 
  2106  0F17                     	;# 
  2107  0F18                     	;# 
  2108  0F19                     	;# 
  2109  0F1A                     	;# 
  2110  0F1B                     	;# 
  2111  0F1C                     	;# 
  2112  0F1D                     	;# 
  2113  0F1E                     	;# 
  2114  0F1F                     	;# 
  2115  0F20                     	;# 
  2116  0F21                     	;# 
  2117  0F22                     	;# 
  2118  0F23                     	;# 
  2119  0F24                     	;# 
  2120  0F25                     	;# 
  2121  0F26                     	;# 
  2122  0F27                     	;# 
  2123  0F38                     	;# 
  2124  0F39                     	;# 
  2125  0F3A                     	;# 
  2126  0F3B                     	;# 
  2127  0F3C                     	;# 
  2128  0F3D                     	;# 
  2129  0F3E                     	;# 
  2130  0F3F                     	;# 
  2131  0F40                     	;# 
  2132  0F41                     	;# 
  2133  0F43                     	;# 
  2134  0F44                     	;# 
  2135  0F45                     	;# 
  2136  0F46                     	;# 
  2137  0F47                     	;# 
  2138  0F48                     	;# 
  2139  0F49                     	;# 
  2140  0F4A                     	;# 
  2141  0F4B                     	;# 
  2142  0F4C                     	;# 
  2143  0F4E                     	;# 
  2144  0F4F                     	;# 
  2145  0F50                     	;# 
  2146  0F51                     	;# 
  2147  0F52                     	;# 
  2148  0F53                     	;# 
  2149  0F54                     	;# 
  2150  0F55                     	;# 
  2151  0F56                     	;# 
  2152  0F57                     	;# 
  2153  0F65                     	;# 
  2154  0F68                     	;# 
  2155  0F69                     	;# 
  2156  0F6A                     	;# 
  2157  0F6B                     	;# 
  2158  0FE4                     	;# 
  2159  0FE5                     	;# 
  2160  0FE6                     	;# 
  2161  0FE7                     	;# 
  2162  0FE8                     	;# 
  2163  0FE9                     	;# 
  2164  0FEA                     	;# 
  2165  0FEB                     	;# 
  2166  0FED                     	;# 
  2167  0FEE                     	;# 
  2168  0FEF                     	;# 
  2169  0000                     	;# 
  2170  0001                     	;# 
  2171  0002                     	;# 
  2172  0003                     	;# 
  2173  0004                     	;# 
  2174  0005                     	;# 
  2175  0006                     	;# 
  2176  0007                     	;# 
  2177  0008                     	;# 
  2178  0009                     	;# 
  2179  000A                     	;# 
  2180  000B                     	;# 
  2181  000C                     	;# 
  2182  000D                     	;# 
  2183  000E                     	;# 
  2184  0010                     	;# 
  2185  0011                     	;# 
  2186  0012                     	;# 
  2187  0013                     	;# 
  2188  0016                     	;# 
  2189  0017                     	;# 
  2190  0018                     	;# 
  2191  001C                     	;# 
  2192  001C                     	;# 
  2193  001D                     	;# 
  2194  001D                     	;# 
  2195  001E                     	;# 
  2196  001F                     	;# 
  2197  008C                     	;# 
  2198  008C                     	;# 
  2199  008D                     	;# 
  2200  008E                     	;# 
  2201  008E                     	;# 
  2202  008F                     	;# 
  2203  0090                     	;# 
  2204  0090                     	;# 
  2205  0091                     	;# 
  2206  0093                     	;# 
  2207  0094                     	;# 
  2208  0095                     	;# 
  2209  0096                     	;# 
  2210  0097                     	;# 
  2211  0098                     	;# 
  2212  0099                     	;# 
  2213  009A                     	;# 
  2214  009B                     	;# 
  2215  009C                     	;# 
  2216  009D                     	;# 
  2217  009E                     	;# 
  2218  010C                     	;# 
  2219  010D                     	;# 
  2220  010E                     	;# 
  2221  010E                     	;# 
  2222  010F                     	;# 
  2223  0110                     	;# 
  2224  0110                     	;# 
  2225  0111                     	;# 
  2226  0112                     	;# 
  2227  0112                     	;# 
  2228  0113                     	;# 
  2229  0114                     	;# 
  2230  0114                     	;# 
  2231  0115                     	;# 
  2232  0116                     	;# 
  2233  0116                     	;# 
  2234  0117                     	;# 
  2235  0119                     	;# 
  2236  0119                     	;# 
  2237  0119                     	;# 
  2238  011A                     	;# 
  2239  011A                     	;# 
  2240  011A                     	;# 
  2241  011B                     	;# 
  2242  011B                     	;# 
  2243  011B                     	;# 
  2244  011B                     	;# 
  2245  011B                     	;# 
  2246  011C                     	;# 
  2247  011C                     	;# 
  2248  011C                     	;# 
  2249  011D                     	;# 
  2250  011D                     	;# 
  2251  011D                     	;# 
  2252  011E                     	;# 
  2253  011E                     	;# 
  2254  011E                     	;# 
  2255  011F                     	;# 
  2256  011F                     	;# 
  2257  011F                     	;# 
  2258  011F                     	;# 
  2259  011F                     	;# 
  2260  018C                     	;# 
  2261  018D                     	;# 
  2262  018E                     	;# 
  2263  018F                     	;# 
  2264  0190                     	;# 
  2265  0191                     	;# 
  2266  0192                     	;# 
  2267  0196                     	;# 
  2268  0197                     	;# 
  2269  0198                     	;# 
  2270  0199                     	;# 
  2271  019A                     	;# 
  2272  019B                     	;# 
  2273  019C                     	;# 
  2274  020C                     	;# 
  2275  020C                     	;# 
  2276  020D                     	;# 
  2277  020E                     	;# 
  2278  020F                     	;# 
  2279  020F                     	;# 
  2280  0210                     	;# 
  2281  0210                     	;# 
  2282  0211                     	;# 
  2283  0211                     	;# 
  2284  0212                     	;# 
  2285  0212                     	;# 
  2286  0213                     	;# 
  2287  0214                     	;# 
  2288  0215                     	;# 
  2289  0215                     	;# 
  2290  0216                     	;# 
  2291  0216                     	;# 
  2292  0217                     	;# 
  2293  0217                     	;# 
  2294  0218                     	;# 
  2295  0218                     	;# 
  2296  0219                     	;# 
  2297  021A                     	;# 
  2298  021B                     	;# 
  2299  021B                     	;# 
  2300  021C                     	;# 
  2301  021C                     	;# 
  2302  021D                     	;# 
  2303  021D                     	;# 
  2304  021E                     	;# 
  2305  021F                     	;# 
  2306  028C                     	;# 
  2307  028C                     	;# 
  2308  028D                     	;# 
  2309  028D                     	;# 
  2310  028E                     	;# 
  2311  028F                     	;# 
  2312  0290                     	;# 
  2313  0290                     	;# 
  2314  0291                     	;# 
  2315  0292                     	;# 
  2316  0292                     	;# 
  2317  0293                     	;# 
  2318  0293                     	;# 
  2319  0294                     	;# 
  2320  0295                     	;# 
  2321  0296                     	;# 
  2322  0296                     	;# 
  2323  0297                     	;# 
  2324  0298                     	;# 
  2325  0298                     	;# 
  2326  0299                     	;# 
  2327  0299                     	;# 
  2328  029A                     	;# 
  2329  029B                     	;# 
  2330  029C                     	;# 
  2331  029C                     	;# 
  2332  029D                     	;# 
  2333  030C                     	;# 
  2334  030C                     	;# 
  2335  030D                     	;# 
  2336  030E                     	;# 
  2337  030F                     	;# 
  2338  0310                     	;# 
  2339  0310                     	;# 
  2340  0311                     	;# 
  2341  0312                     	;# 
  2342  0313                     	;# 
  2343  0314                     	;# 
  2344  0314                     	;# 
  2345  0315                     	;# 
  2346  0316                     	;# 
  2347  0317                     	;# 
  2348  0318                     	;# 
  2349  0318                     	;# 
  2350  0319                     	;# 
  2351  031A                     	;# 
  2352  031B                     	;# 
  2353  031C                     	;# 
  2354  031C                     	;# 
  2355  031D                     	;# 
  2356  031E                     	;# 
  2357  031F                     	;# 
  2358  038C                     	;# 
  2359  038C                     	;# 
  2360  038D                     	;# 
  2361  038E                     	;# 
  2362  0390                     	;# 
  2363  0390                     	;# 
  2364  0391                     	;# 
  2365  0392                     	;# 
  2366  040C                     	;# 
  2367  040D                     	;# 
  2368  040E                     	;# 
  2369  040F                     	;# 
  2370  0410                     	;# 
  2371  0411                     	;# 
  2372  0416                     	;# 
  2373  0416                     	;# 
  2374  0417                     	;# 
  2375  0418                     	;# 
  2376  0418                     	;# 
  2377  0419                     	;# 
  2378  041A                     	;# 
  2379  041A                     	;# 
  2380  041B                     	;# 
  2381  041C                     	;# 
  2382  041C                     	;# 
  2383  041D                     	;# 
  2384  041E                     	;# 
  2385  041F                     	;# 
  2386  048C                     	;# 
  2387  048C                     	;# 
  2388  048D                     	;# 
  2389  048E                     	;# 
  2390  048F                     	;# 
  2391  048F                     	;# 
  2392  0490                     	;# 
  2393  0491                     	;# 
  2394  0492                     	;# 
  2395  0492                     	;# 
  2396  0493                     	;# 
  2397  0494                     	;# 
  2398  0495                     	;# 
  2399  0495                     	;# 
  2400  0496                     	;# 
  2401  0497                     	;# 
  2402  0498                     	;# 
  2403  0499                     	;# 
  2404  049A                     	;# 
  2405  049B                     	;# 
  2406  049C                     	;# 
  2407  049D                     	;# 
  2408  050C                     	;# 
  2409  050C                     	;# 
  2410  050D                     	;# 
  2411  050E                     	;# 
  2412  050F                     	;# 
  2413  050F                     	;# 
  2414  0510                     	;# 
  2415  0511                     	;# 
  2416  0512                     	;# 
  2417  0512                     	;# 
  2418  0513                     	;# 
  2419  0514                     	;# 
  2420  0515                     	;# 
  2421  0515                     	;# 
  2422  0516                     	;# 
  2423  0517                     	;# 
  2424  0518                     	;# 
  2425  0519                     	;# 
  2426  051A                     	;# 
  2427  051B                     	;# 
  2428  051C                     	;# 
  2429  051D                     	;# 
  2430  058C                     	;# 
  2431  058C                     	;# 
  2432  058D                     	;# 
  2433  058E                     	;# 
  2434  058F                     	;# 
  2435  058F                     	;# 
  2436  0590                     	;# 
  2437  0591                     	;# 
  2438  0592                     	;# 
  2439  0593                     	;# 
  2440  060C                     	;# 
  2441  060D                     	;# 
  2442  060E                     	;# 
  2443  060F                     	;# 
  2444  0610                     	;# 
  2445  0611                     	;# 
  2446  0612                     	;# 
  2447  0613                     	;# 
  2448  0614                     	;# 
  2449  0616                     	;# 
  2450  0617                     	;# 
  2451  0618                     	;# 
  2452  0619                     	;# 
  2453  061A                     	;# 
  2454  061B                     	;# 
  2455  061C                     	;# 
  2456  061D                     	;# 
  2457  061E                     	;# 
  2458  068C                     	;# 
  2459  068D                     	;# 
  2460  068E                     	;# 
  2461  068F                     	;# 
  2462  0690                     	;# 
  2463  0691                     	;# 
  2464  0692                     	;# 
  2465  0693                     	;# 
  2466  0694                     	;# 
  2467  070C                     	;# 
  2468  070D                     	;# 
  2469  070E                     	;# 
  2470  070F                     	;# 
  2471  0710                     	;# 
  2472  0711                     	;# 
  2473  0712                     	;# 
  2474  0713                     	;# 
  2475  0714                     	;# 
  2476  0716                     	;# 
  2477  0717                     	;# 
  2478  0718                     	;# 
  2479  0719                     	;# 
  2480  071A                     	;# 
  2481  071B                     	;# 
  2482  071C                     	;# 
  2483  071D                     	;# 
  2484  071E                     	;# 
  2485  0796                     	;# 
  2486  0797                     	;# 
  2487  0798                     	;# 
  2488  0799                     	;# 
  2489  079A                     	;# 
  2490  079B                     	;# 
  2491  080C                     	;# 
  2492  080D                     	;# 
  2493  080E                     	;# 
  2494  080F                     	;# 
  2495  0810                     	;# 
  2496  0811                     	;# 
  2497  0812                     	;# 
  2498  0813                     	;# 
  2499  0814                     	;# 
  2500  081A                     	;# 
  2501  081B                     	;# 
  2502  081C                     	;# 
  2503  081D                     	;# 
  2504  081E                     	;# 
  2505  081F                     	;# 
  2506  088C                     	;# 
  2507  088D                     	;# 
  2508  088E                     	;# 
  2509  088F                     	;# 
  2510  0890                     	;# 
  2511  0891                     	;# 
  2512  0892                     	;# 
  2513  0893                     	;# 
  2514  0895                     	;# 
  2515  0896                     	;# 
  2516  0897                     	;# 
  2517  0898                     	;# 
  2518  0899                     	;# 
  2519  089A                     	;# 
  2520  089B                     	;# 
  2521  090C                     	;# 
  2522  090E                     	;# 
  2523  090F                     	;# 
  2524  091F                     	;# 
  2525  091F                     	;# 
  2526  098F                     	;# 
  2527  098F                     	;# 
  2528  0990                     	;# 
  2529  0991                     	;# 
  2530  0992                     	;# 
  2531  0993                     	;# 
  2532  0994                     	;# 
  2533  0995                     	;# 
  2534  0996                     	;# 
  2535  0997                     	;# 
  2536  0E0F                     	;# 
  2537  0E10                     	;# 
  2538  0E11                     	;# 
  2539  0E12                     	;# 
  2540  0E13                     	;# 
  2541  0E14                     	;# 
  2542  0E15                     	;# 
  2543  0E16                     	;# 
  2544  0E17                     	;# 
  2545  0E18                     	;# 
  2546  0E19                     	;# 
  2547  0E1A                     	;# 
  2548  0E1B                     	;# 
  2549  0E1C                     	;# 
  2550  0E1D                     	;# 
  2551  0E1E                     	;# 
  2552  0E1F                     	;# 
  2553  0E20                     	;# 
  2554  0E21                     	;# 
  2555  0E22                     	;# 
  2556  0E23                     	;# 
  2557  0E24                     	;# 
  2558  0E25                     	;# 
  2559  0E26                     	;# 
  2560  0E27                     	;# 
  2561  0E28                     	;# 
  2562  0E29                     	;# 
  2563  0E2A                     	;# 
  2564  0E2B                     	;# 
  2565  0E2C                     	;# 
  2566  0E2D                     	;# 
  2567  0E2E                     	;# 
  2568  0E2F                     	;# 
  2569  0E30                     	;# 
  2570  0E31                     	;# 
  2571  0E32                     	;# 
  2572  0E33                     	;# 
  2573  0E34                     	;# 
  2574  0E35                     	;# 
  2575  0E36                     	;# 
  2576  0E37                     	;# 
  2577  0E8F                     	;# 
  2578  0E90                     	;# 
  2579  0E91                     	;# 
  2580  0E92                     	;# 
  2581  0E93                     	;# 
  2582  0E94                     	;# 
  2583  0E95                     	;# 
  2584  0E96                     	;# 
  2585  0E97                     	;# 
  2586  0E9C                     	;# 
  2587  0E9D                     	;# 
  2588  0E9E                     	;# 
  2589  0EA1                     	;# 
  2590  0EA2                     	;# 
  2591  0EA3                     	;# 
  2592  0EA4                     	;# 
  2593  0EA5                     	;# 
  2594  0EA9                     	;# 
  2595  0EAA                     	;# 
  2596  0EAB                     	;# 
  2597  0EAC                     	;# 
  2598  0EB1                     	;# 
  2599  0EB2                     	;# 
  2600  0EB3                     	;# 
  2601  0EB8                     	;# 
  2602  0EB9                     	;# 
  2603  0EBA                     	;# 
  2604  0EBB                     	;# 
  2605  0EBC                     	;# 
  2606  0EBD                     	;# 
  2607  0EBE                     	;# 
  2608  0EC3                     	;# 
  2609  0EC5                     	;# 
  2610  0EC6                     	;# 
  2611  0EC7                     	;# 
  2612  0EC8                     	;# 
  2613  0EC9                     	;# 
  2614  0ECA                     	;# 
  2615  0ECB                     	;# 
  2616  0ECC                     	;# 
  2617  0F10                     	;# 
  2618  0F11                     	;# 
  2619  0F12                     	;# 
  2620  0F13                     	;# 
  2621  0F14                     	;# 
  2622  0F15                     	;# 
  2623  0F16                     	;# 
  2624  0F17                     	;# 
  2625  0F18                     	;# 
  2626  0F19                     	;# 
  2627  0F1A                     	;# 
  2628  0F1B                     	;# 
  2629  0F1C                     	;# 
  2630  0F1D                     	;# 
  2631  0F1E                     	;# 
  2632  0F1F                     	;# 
  2633  0F20                     	;# 
  2634  0F21                     	;# 
  2635  0F22                     	;# 
  2636  0F23                     	;# 
  2637  0F24                     	;# 
  2638  0F25                     	;# 
  2639  0F26                     	;# 
  2640  0F27                     	;# 
  2641  0F38                     	;# 
  2642  0F39                     	;# 
  2643  0F3A                     	;# 
  2644  0F3B                     	;# 
  2645  0F3C                     	;# 
  2646  0F3D                     	;# 
  2647  0F3E                     	;# 
  2648  0F3F                     	;# 
  2649  0F40                     	;# 
  2650  0F41                     	;# 
  2651  0F43                     	;# 
  2652  0F44                     	;# 
  2653  0F45                     	;# 
  2654  0F46                     	;# 
  2655  0F47                     	;# 
  2656  0F48                     	;# 
  2657  0F49                     	;# 
  2658  0F4A                     	;# 
  2659  0F4B                     	;# 
  2660  0F4C                     	;# 
  2661  0F4E                     	;# 
  2662  0F4F                     	;# 
  2663  0F50                     	;# 
  2664  0F51                     	;# 
  2665  0F52                     	;# 
  2666  0F53                     	;# 
  2667  0F54                     	;# 
  2668  0F55                     	;# 
  2669  0F56                     	;# 
  2670  0F57                     	;# 
  2671  0F65                     	;# 
  2672  0F68                     	;# 
  2673  0F69                     	;# 
  2674  0F6A                     	;# 
  2675  0F6B                     	;# 
  2676  0FE4                     	;# 
  2677  0FE5                     	;# 
  2678  0FE6                     	;# 
  2679  0FE7                     	;# 
  2680  0FE8                     	;# 
  2681  0FE9                     	;# 
  2682  0FEA                     	;# 
  2683  0FEB                     	;# 
  2684  0FED                     	;# 
  2685  0FEE                     	;# 
  2686  0FEF                     	;# 
  2687  0000                     	;# 
  2688  0001                     	;# 
  2689  0002                     	;# 
  2690  0003                     	;# 
  2691  0004                     	;# 
  2692  0005                     	;# 
  2693  0006                     	;# 
  2694  0007                     	;# 
  2695  0008                     	;# 
  2696  0009                     	;# 
  2697  000A                     	;# 
  2698  000B                     	;# 
  2699  000C                     	;# 
  2700  000D                     	;# 
  2701  000E                     	;# 
  2702  0010                     	;# 
  2703  0011                     	;# 
  2704  0012                     	;# 
  2705  0013                     	;# 
  2706  0016                     	;# 
  2707  0017                     	;# 
  2708  0018                     	;# 
  2709  001C                     	;# 
  2710  001C                     	;# 
  2711  001D                     	;# 
  2712  001D                     	;# 
  2713  001E                     	;# 
  2714  001F                     	;# 
  2715  008C                     	;# 
  2716  008C                     	;# 
  2717  008D                     	;# 
  2718  008E                     	;# 
  2719  008E                     	;# 
  2720  008F                     	;# 
  2721  0090                     	;# 
  2722  0090                     	;# 
  2723  0091                     	;# 
  2724  0093                     	;# 
  2725  0094                     	;# 
  2726  0095                     	;# 
  2727  0096                     	;# 
  2728  0097                     	;# 
  2729  0098                     	;# 
  2730  0099                     	;# 
  2731  009A                     	;# 
  2732  009B                     	;# 
  2733  009C                     	;# 
  2734  009D                     	;# 
  2735  009E                     	;# 
  2736  010C                     	;# 
  2737  010D                     	;# 
  2738  010E                     	;# 
  2739  010E                     	;# 
  2740  010F                     	;# 
  2741  0110                     	;# 
  2742  0110                     	;# 
  2743  0111                     	;# 
  2744  0112                     	;# 
  2745  0112                     	;# 
  2746  0113                     	;# 
  2747  0114                     	;# 
  2748  0114                     	;# 
  2749  0115                     	;# 
  2750  0116                     	;# 
  2751  0116                     	;# 
  2752  0117                     	;# 
  2753  0119                     	;# 
  2754  0119                     	;# 
  2755  0119                     	;# 
  2756  011A                     	;# 
  2757  011A                     	;# 
  2758  011A                     	;# 
  2759  011B                     	;# 
  2760  011B                     	;# 
  2761  011B                     	;# 
  2762  011B                     	;# 
  2763  011B                     	;# 
  2764  011C                     	;# 
  2765  011C                     	;# 
  2766  011C                     	;# 
  2767  011D                     	;# 
  2768  011D                     	;# 
  2769  011D                     	;# 
  2770  011E                     	;# 
  2771  011E                     	;# 
  2772  011E                     	;# 
  2773  011F                     	;# 
  2774  011F                     	;# 
  2775  011F                     	;# 
  2776  011F                     	;# 
  2777  011F                     	;# 
  2778  018C                     	;# 
  2779  018D                     	;# 
  2780  018E                     	;# 
  2781  018F                     	;# 
  2782  0190                     	;# 
  2783  0191                     	;# 
  2784  0192                     	;# 
  2785  0196                     	;# 
  2786  0197                     	;# 
  2787  0198                     	;# 
  2788  0199                     	;# 
  2789  019A                     	;# 
  2790  019B                     	;# 
  2791  019C                     	;# 
  2792  020C                     	;# 
  2793  020C                     	;# 
  2794  020D                     	;# 
  2795  020E                     	;# 
  2796  020F                     	;# 
  2797  020F                     	;# 
  2798  0210                     	;# 
  2799  0210                     	;# 
  2800  0211                     	;# 
  2801  0211                     	;# 
  2802  0212                     	;# 
  2803  0212                     	;# 
  2804  0213                     	;# 
  2805  0214                     	;# 
  2806  0215                     	;# 
  2807  0215                     	;# 
  2808  0216                     	;# 
  2809  0216                     	;# 
  2810  0217                     	;# 
  2811  0217                     	;# 
  2812  0218                     	;# 
  2813  0218                     	;# 
  2814  0219                     	;# 
  2815  021A                     	;# 
  2816  021B                     	;# 
  2817  021B                     	;# 
  2818  021C                     	;# 
  2819  021C                     	;# 
  2820  021D                     	;# 
  2821  021D                     	;# 
  2822  021E                     	;# 
  2823  021F                     	;# 
  2824  028C                     	;# 
  2825  028C                     	;# 
  2826  028D                     	;# 
  2827  028D                     	;# 
  2828  028E                     	;# 
  2829  028F                     	;# 
  2830  0290                     	;# 
  2831  0290                     	;# 
  2832  0291                     	;# 
  2833  0292                     	;# 
  2834  0292                     	;# 
  2835  0293                     	;# 
  2836  0293                     	;# 
  2837  0294                     	;# 
  2838  0295                     	;# 
  2839  0296                     	;# 
  2840  0296                     	;# 
  2841  0297                     	;# 
  2842  0298                     	;# 
  2843  0298                     	;# 
  2844  0299                     	;# 
  2845  0299                     	;# 
  2846  029A                     	;# 
  2847  029B                     	;# 
  2848  029C                     	;# 
  2849  029C                     	;# 
  2850  029D                     	;# 
  2851  030C                     	;# 
  2852  030C                     	;# 
  2853  030D                     	;# 
  2854  030E                     	;# 
  2855  030F                     	;# 
  2856  0310                     	;# 
  2857  0310                     	;# 
  2858  0311                     	;# 
  2859  0312                     	;# 
  2860  0313                     	;# 
  2861  0314                     	;# 
  2862  0314                     	;# 
  2863  0315                     	;# 
  2864  0316                     	;# 
  2865  0317                     	;# 
  2866  0318                     	;# 
  2867  0318                     	;# 
  2868  0319                     	;# 
  2869  031A                     	;# 
  2870  031B                     	;# 
  2871  031C                     	;# 
  2872  031C                     	;# 
  2873  031D                     	;# 
  2874  031E                     	;# 
  2875  031F                     	;# 
  2876  038C                     	;# 
  2877  038C                     	;# 
  2878  038D                     	;# 
  2879  038E                     	;# 
  2880  0390                     	;# 
  2881  0390                     	;# 
  2882  0391                     	;# 
  2883  0392                     	;# 
  2884  040C                     	;# 
  2885  040D                     	;# 
  2886  040E                     	;# 
  2887  040F                     	;# 
  2888  0410                     	;# 
  2889  0411                     	;# 
  2890  0416                     	;# 
  2891  0416                     	;# 
  2892  0417                     	;# 
  2893  0418                     	;# 
  2894  0418                     	;# 
  2895  0419                     	;# 
  2896  041A                     	;# 
  2897  041A                     	;# 
  2898  041B                     	;# 
  2899  041C                     	;# 
  2900  041C                     	;# 
  2901  041D                     	;# 
  2902  041E                     	;# 
  2903  041F                     	;# 
  2904  048C                     	;# 
  2905  048C                     	;# 
  2906  048D                     	;# 
  2907  048E                     	;# 
  2908  048F                     	;# 
  2909  048F                     	;# 
  2910  0490                     	;# 
  2911  0491                     	;# 
  2912  0492                     	;# 
  2913  0492                     	;# 
  2914  0493                     	;# 
  2915  0494                     	;# 
  2916  0495                     	;# 
  2917  0495                     	;# 
  2918  0496                     	;# 
  2919  0497                     	;# 
  2920  0498                     	;# 
  2921  0499                     	;# 
  2922  049A                     	;# 
  2923  049B                     	;# 
  2924  049C                     	;# 
  2925  049D                     	;# 
  2926  050C                     	;# 
  2927  050C                     	;# 
  2928  050D                     	;# 
  2929  050E                     	;# 
  2930  050F                     	;# 
  2931  050F                     	;# 
  2932  0510                     	;# 
  2933  0511                     	;# 
  2934  0512                     	;# 
  2935  0512                     	;# 
  2936  0513                     	;# 
  2937  0514                     	;# 
  2938  0515                     	;# 
  2939  0515                     	;# 
  2940  0516                     	;# 
  2941  0517                     	;# 
  2942  0518                     	;# 
  2943  0519                     	;# 
  2944  051A                     	;# 
  2945  051B                     	;# 
  2946  051C                     	;# 
  2947  051D                     	;# 
  2948  058C                     	;# 
  2949  058C                     	;# 
  2950  058D                     	;# 
  2951  058E                     	;# 
  2952  058F                     	;# 
  2953  058F                     	;# 
  2954  0590                     	;# 
  2955  0591                     	;# 
  2956  0592                     	;# 
  2957  0593                     	;# 
  2958  060C                     	;# 
  2959  060D                     	;# 
  2960  060E                     	;# 
  2961  060F                     	;# 
  2962  0610                     	;# 
  2963  0611                     	;# 
  2964  0612                     	;# 
  2965  0613                     	;# 
  2966  0614                     	;# 
  2967  0616                     	;# 
  2968  0617                     	;# 
  2969  0618                     	;# 
  2970  0619                     	;# 
  2971  061A                     	;# 
  2972  061B                     	;# 
  2973  061C                     	;# 
  2974  061D                     	;# 
  2975  061E                     	;# 
  2976  068C                     	;# 
  2977  068D                     	;# 
  2978  068E                     	;# 
  2979  068F                     	;# 
  2980  0690                     	;# 
  2981  0691                     	;# 
  2982  0692                     	;# 
  2983  0693                     	;# 
  2984  0694                     	;# 
  2985  070C                     	;# 
  2986  070D                     	;# 
  2987  070E                     	;# 
  2988  070F                     	;# 
  2989  0710                     	;# 
  2990  0711                     	;# 
  2991  0712                     	;# 
  2992  0713                     	;# 
  2993  0714                     	;# 
  2994  0716                     	;# 
  2995  0717                     	;# 
  2996  0718                     	;# 
  2997  0719                     	;# 
  2998  071A                     	;# 
  2999  071B                     	;# 
  3000  071C                     	;# 
  3001  071D                     	;# 
  3002  071E                     	;# 
  3003  0796                     	;# 
  3004  0797                     	;# 
  3005  0798                     	;# 
  3006  0799                     	;# 
  3007  079A                     	;# 
  3008  079B                     	;# 
  3009  080C                     	;# 
  3010  080D                     	;# 
  3011  080E                     	;# 
  3012  080F                     	;# 
  3013  0810                     	;# 
  3014  0811                     	;# 
  3015  0812                     	;# 
  3016  0813                     	;# 
  3017  0814                     	;# 
  3018  081A                     	;# 
  3019  081B                     	;# 
  3020  081C                     	;# 
  3021  081D                     	;# 
  3022  081E                     	;# 
  3023  081F                     	;# 
  3024  088C                     	;# 
  3025  088D                     	;# 
  3026  088E                     	;# 
  3027  088F                     	;# 
  3028  0890                     	;# 
  3029  0891                     	;# 
  3030  0892                     	;# 
  3031  0893                     	;# 
  3032  0895                     	;# 
  3033  0896                     	;# 
  3034  0897                     	;# 
  3035  0898                     	;# 
  3036  0899                     	;# 
  3037  089A                     	;# 
  3038  089B                     	;# 
  3039  090C                     	;# 
  3040  090E                     	;# 
  3041  090F                     	;# 
  3042  091F                     	;# 
  3043  091F                     	;# 
  3044  098F                     	;# 
  3045  098F                     	;# 
  3046  0990                     	;# 
  3047  0991                     	;# 
  3048  0992                     	;# 
  3049  0993                     	;# 
  3050  0994                     	;# 
  3051  0995                     	;# 
  3052  0996                     	;# 
  3053  0997                     	;# 
  3054  0E0F                     	;# 
  3055  0E10                     	;# 
  3056  0E11                     	;# 
  3057  0E12                     	;# 
  3058  0E13                     	;# 
  3059  0E14                     	;# 
  3060  0E15                     	;# 
  3061  0E16                     	;# 
  3062  0E17                     	;# 
  3063  0E18                     	;# 
  3064  0E19                     	;# 
  3065  0E1A                     	;# 
  3066  0E1B                     	;# 
  3067  0E1C                     	;# 
  3068  0E1D                     	;# 
  3069  0E1E                     	;# 
  3070  0E1F                     	;# 
  3071  0E20                     	;# 
  3072  0E21                     	;# 
  3073  0E22                     	;# 
  3074  0E23                     	;# 
  3075  0E24                     	;# 
  3076  0E25                     	;# 
  3077  0E26                     	;# 
  3078  0E27                     	;# 
  3079  0E28                     	;# 
  3080  0E29                     	;# 
  3081  0E2A                     	;# 
  3082  0E2B                     	;# 
  3083  0E2C                     	;# 
  3084  0E2D                     	;# 
  3085  0E2E                     	;# 
  3086  0E2F                     	;# 
  3087  0E30                     	;# 
  3088  0E31                     	;# 
  3089  0E32                     	;# 
  3090  0E33                     	;# 
  3091  0E34                     	;# 
  3092  0E35                     	;# 
  3093  0E36                     	;# 
  3094  0E37                     	;# 
  3095  0E8F                     	;# 
  3096  0E90                     	;# 
  3097  0E91                     	;# 
  3098  0E92                     	;# 
  3099  0E93                     	;# 
  3100  0E94                     	;# 
  3101  0E95                     	;# 
  3102  0E96                     	;# 
  3103  0E97                     	;# 
  3104  0E9C                     	;# 
  3105  0E9D                     	;# 
  3106  0E9E                     	;# 
  3107  0EA1                     	;# 
  3108  0EA2                     	;# 
  3109  0EA3                     	;# 
  3110  0EA4                     	;# 
  3111  0EA5                     	;# 
  3112  0EA9                     	;# 
  3113  0EAA                     	;# 
  3114  0EAB                     	;# 
  3115  0EAC                     	;# 
  3116  0EB1                     	;# 
  3117  0EB2                     	;# 
  3118  0EB3                     	;# 
  3119  0EB8                     	;# 
  3120  0EB9                     	;# 
  3121  0EBA                     	;# 
  3122  0EBB                     	;# 
  3123  0EBC                     	;# 
  3124  0EBD                     	;# 
  3125  0EBE                     	;# 
  3126  0EC3                     	;# 
  3127  0EC5                     	;# 
  3128  0EC6                     	;# 
  3129  0EC7                     	;# 
  3130  0EC8                     	;# 
  3131  0EC9                     	;# 
  3132  0ECA                     	;# 
  3133  0ECB                     	;# 
  3134  0ECC                     	;# 
  3135  0F10                     	;# 
  3136  0F11                     	;# 
  3137  0F12                     	;# 
  3138  0F13                     	;# 
  3139  0F14                     	;# 
  3140  0F15                     	;# 
  3141  0F16                     	;# 
  3142  0F17                     	;# 
  3143  0F18                     	;# 
  3144  0F19                     	;# 
  3145  0F1A                     	;# 
  3146  0F1B                     	;# 
  3147  0F1C                     	;# 
  3148  0F1D                     	;# 
  3149  0F1E                     	;# 
  3150  0F1F                     	;# 
  3151  0F20                     	;# 
  3152  0F21                     	;# 
  3153  0F22                     	;# 
  3154  0F23                     	;# 
  3155  0F24                     	;# 
  3156  0F25                     	;# 
  3157  0F26                     	;# 
  3158  0F27                     	;# 
  3159  0F38                     	;# 
  3160  0F39                     	;# 
  3161  0F3A                     	;# 
  3162  0F3B                     	;# 
  3163  0F3C                     	;# 
  3164  0F3D                     	;# 
  3165  0F3E                     	;# 
  3166  0F3F                     	;# 
  3167  0F40                     	;# 
  3168  0F41                     	;# 
  3169  0F43                     	;# 
  3170  0F44                     	;# 
  3171  0F45                     	;# 
  3172  0F46                     	;# 
  3173  0F47                     	;# 
  3174  0F48                     	;# 
  3175  0F49                     	;# 
  3176  0F4A                     	;# 
  3177  0F4B                     	;# 
  3178  0F4C                     	;# 
  3179  0F4E                     	;# 
  3180  0F4F                     	;# 
  3181  0F50                     	;# 
  3182  0F51                     	;# 
  3183  0F52                     	;# 
  3184  0F53                     	;# 
  3185  0F54                     	;# 
  3186  0F55                     	;# 
  3187  0F56                     	;# 
  3188  0F57                     	;# 
  3189  0F65                     	;# 
  3190  0F68                     	;# 
  3191  0F69                     	;# 
  3192  0F6A                     	;# 
  3193  0F6B                     	;# 
  3194  0FE4                     	;# 
  3195  0FE5                     	;# 
  3196  0FE6                     	;# 
  3197  0FE7                     	;# 
  3198  0FE8                     	;# 
  3199  0FE9                     	;# 
  3200  0FEA                     	;# 
  3201  0FEB                     	;# 
  3202  0FED                     	;# 
  3203  0FEE                     	;# 
  3204  0FEF                     	;# 
  3205  0000                     	;# 
  3206  0001                     	;# 
  3207  0002                     	;# 
  3208  0003                     	;# 
  3209  0004                     	;# 
  3210  0005                     	;# 
  3211  0006                     	;# 
  3212  0007                     	;# 
  3213  0008                     	;# 
  3214  0009                     	;# 
  3215  000A                     	;# 
  3216  000B                     	;# 
  3217  000C                     	;# 
  3218  000D                     	;# 
  3219  000E                     	;# 
  3220  0010                     	;# 
  3221  0011                     	;# 
  3222  0012                     	;# 
  3223  0013                     	;# 
  3224  0016                     	;# 
  3225  0017                     	;# 
  3226  0018                     	;# 
  3227  001C                     	;# 
  3228  001C                     	;# 
  3229  001D                     	;# 
  3230  001D                     	;# 
  3231  001E                     	;# 
  3232  001F                     	;# 
  3233  008C                     	;# 
  3234  008C                     	;# 
  3235  008D                     	;# 
  3236  008E                     	;# 
  3237  008E                     	;# 
  3238  008F                     	;# 
  3239  0090                     	;# 
  3240  0090                     	;# 
  3241  0091                     	;# 
  3242  0093                     	;# 
  3243  0094                     	;# 
  3244  0095                     	;# 
  3245  0096                     	;# 
  3246  0097                     	;# 
  3247  0098                     	;# 
  3248  0099                     	;# 
  3249  009A                     	;# 
  3250  009B                     	;# 
  3251  009C                     	;# 
  3252  009D                     	;# 
  3253  009E                     	;# 
  3254  010C                     	;# 
  3255  010D                     	;# 
  3256  010E                     	;# 
  3257  010E                     	;# 
  3258  010F                     	;# 
  3259  0110                     	;# 
  3260  0110                     	;# 
  3261  0111                     	;# 
  3262  0112                     	;# 
  3263  0112                     	;# 
  3264  0113                     	;# 
  3265  0114                     	;# 
  3266  0114                     	;# 
  3267  0115                     	;# 
  3268  0116                     	;# 
  3269  0116                     	;# 
  3270  0117                     	;# 
  3271  0119                     	;# 
  3272  0119                     	;# 
  3273  0119                     	;# 
  3274  011A                     	;# 
  3275  011A                     	;# 
  3276  011A                     	;# 
  3277  011B                     	;# 
  3278  011B                     	;# 
  3279  011B                     	;# 
  3280  011B                     	;# 
  3281  011B                     	;# 
  3282  011C                     	;# 
  3283  011C                     	;# 
  3284  011C                     	;# 
  3285  011D                     	;# 
  3286  011D                     	;# 
  3287  011D                     	;# 
  3288  011E                     	;# 
  3289  011E                     	;# 
  3290  011E                     	;# 
  3291  011F                     	;# 
  3292  011F                     	;# 
  3293  011F                     	;# 
  3294  011F                     	;# 
  3295  011F                     	;# 
  3296  018C                     	;# 
  3297  018D                     	;# 
  3298  018E                     	;# 
  3299  018F                     	;# 
  3300  0190                     	;# 
  3301  0191                     	;# 
  3302  0192                     	;# 
  3303  0196                     	;# 
  3304  0197                     	;# 
  3305  0198                     	;# 
  3306  0199                     	;# 
  3307  019A                     	;# 
  3308  019B                     	;# 
  3309  019C                     	;# 
  3310  020C                     	;# 
  3311  020C                     	;# 
  3312  020D                     	;# 
  3313  020E                     	;# 
  3314  020F                     	;# 
  3315  020F                     	;# 
  3316  0210                     	;# 
  3317  0210                     	;# 
  3318  0211                     	;# 
  3319  0211                     	;# 
  3320  0212                     	;# 
  3321  0212                     	;# 
  3322  0213                     	;# 
  3323  0214                     	;# 
  3324  0215                     	;# 
  3325  0215                     	;# 
  3326  0216                     	;# 
  3327  0216                     	;# 
  3328  0217                     	;# 
  3329  0217                     	;# 
  3330  0218                     	;# 
  3331  0218                     	;# 
  3332  0219                     	;# 
  3333  021A                     	;# 
  3334  021B                     	;# 
  3335  021B                     	;# 
  3336  021C                     	;# 
  3337  021C                     	;# 
  3338  021D                     	;# 
  3339  021D                     	;# 
  3340  021E                     	;# 
  3341  021F                     	;# 
  3342  028C                     	;# 
  3343  028C                     	;# 
  3344  028D                     	;# 
  3345  028D                     	;# 
  3346  028E                     	;# 
  3347  028F                     	;# 
  3348  0290                     	;# 
  3349  0290                     	;# 
  3350  0291                     	;# 
  3351  0292                     	;# 
  3352  0292                     	;# 
  3353  0293                     	;# 
  3354  0293                     	;# 
  3355  0294                     	;# 
  3356  0295                     	;# 
  3357  0296                     	;# 
  3358  0296                     	;# 
  3359  0297                     	;# 
  3360  0298                     	;# 
  3361  0298                     	;# 
  3362  0299                     	;# 
  3363  0299                     	;# 
  3364  029A                     	;# 
  3365  029B                     	;# 
  3366  029C                     	;# 
  3367  029C                     	;# 
  3368  029D                     	;# 
  3369  030C                     	;# 
  3370  030C                     	;# 
  3371  030D                     	;# 
  3372  030E                     	;# 
  3373  030F                     	;# 
  3374  0310                     	;# 
  3375  0310                     	;# 
  3376  0311                     	;# 
  3377  0312                     	;# 
  3378  0313                     	;# 
  3379  0314                     	;# 
  3380  0314                     	;# 
  3381  0315                     	;# 
  3382  0316                     	;# 
  3383  0317                     	;# 
  3384  0318                     	;# 
  3385  0318                     	;# 
  3386  0319                     	;# 
  3387  031A                     	;# 
  3388  031B                     	;# 
  3389  031C                     	;# 
  3390  031C                     	;# 
  3391  031D                     	;# 
  3392  031E                     	;# 
  3393  031F                     	;# 
  3394  038C                     	;# 
  3395  038C                     	;# 
  3396  038D                     	;# 
  3397  038E                     	;# 
  3398  0390                     	;# 
  3399  0390                     	;# 
  3400  0391                     	;# 
  3401  0392                     	;# 
  3402  040C                     	;# 
  3403  040D                     	;# 
  3404  040E                     	;# 
  3405  040F                     	;# 
  3406  0410                     	;# 
  3407  0411                     	;# 
  3408  0416                     	;# 
  3409  0416                     	;# 
  3410  0417                     	;# 
  3411  0418                     	;# 
  3412  0418                     	;# 
  3413  0419                     	;# 
  3414  041A                     	;# 
  3415  041A                     	;# 
  3416  041B                     	;# 
  3417  041C                     	;# 
  3418  041C                     	;# 
  3419  041D                     	;# 
  3420  041E                     	;# 
  3421  041F                     	;# 
  3422  048C                     	;# 
  3423  048C                     	;# 
  3424  048D                     	;# 
  3425  048E                     	;# 
  3426  048F                     	;# 
  3427  048F                     	;# 
  3428  0490                     	;# 
  3429  0491                     	;# 
  3430  0492                     	;# 
  3431  0492                     	;# 
  3432  0493                     	;# 
  3433  0494                     	;# 
  3434  0495                     	;# 
  3435  0495                     	;# 
  3436  0496                     	;# 
  3437  0497                     	;# 
  3438  0498                     	;# 
  3439  0499                     	;# 
  3440  049A                     	;# 
  3441  049B                     	;# 
  3442  049C                     	;# 
  3443  049D                     	;# 
  3444  050C                     	;# 
  3445  050C                     	;# 
  3446  050D                     	;# 
  3447  050E                     	;# 
  3448  050F                     	;# 
  3449  050F                     	;# 
  3450  0510                     	;# 
  3451  0511                     	;# 
  3452  0512                     	;# 
  3453  0512                     	;# 
  3454  0513                     	;# 
  3455  0514                     	;# 
  3456  0515                     	;# 
  3457  0515                     	;# 
  3458  0516                     	;# 
  3459  0517                     	;# 
  3460  0518                     	;# 
  3461  0519                     	;# 
  3462  051A                     	;# 
  3463  051B                     	;# 
  3464  051C                     	;# 
  3465  051D                     	;# 
  3466  058C                     	;# 
  3467  058C                     	;# 
  3468  058D                     	;# 
  3469  058E                     	;# 
  3470  058F                     	;# 
  3471  058F                     	;# 
  3472  0590                     	;# 
  3473  0591                     	;# 
  3474  0592                     	;# 
  3475  0593                     	;# 
  3476  060C                     	;# 
  3477  060D                     	;# 
  3478  060E                     	;# 
  3479  060F                     	;# 
  3480  0610                     	;# 
  3481  0611                     	;# 
  3482  0612                     	;# 
  3483  0613                     	;# 
  3484  0614                     	;# 
  3485  0616                     	;# 
  3486  0617                     	;# 
  3487  0618                     	;# 
  3488  0619                     	;# 
  3489  061A                     	;# 
  3490  061B                     	;# 
  3491  061C                     	;# 
  3492  061D                     	;# 
  3493  061E                     	;# 
  3494  068C                     	;# 
  3495  068D                     	;# 
  3496  068E                     	;# 
  3497  068F                     	;# 
  3498  0690                     	;# 
  3499  0691                     	;# 
  3500  0692                     	;# 
  3501  0693                     	;# 
  3502  0694                     	;# 
  3503  070C                     	;# 
  3504  070D                     	;# 
  3505  070E                     	;# 
  3506  070F                     	;# 
  3507  0710                     	;# 
  3508  0711                     	;# 
  3509  0712                     	;# 
  3510  0713                     	;# 
  3511  0714                     	;# 
  3512  0716                     	;# 
  3513  0717                     	;# 
  3514  0718                     	;# 
  3515  0719                     	;# 
  3516  071A                     	;# 
  3517  071B                     	;# 
  3518  071C                     	;# 
  3519  071D                     	;# 
  3520  071E                     	;# 
  3521  0796                     	;# 
  3522  0797                     	;# 
  3523  0798                     	;# 
  3524  0799                     	;# 
  3525  079A                     	;# 
  3526  079B                     	;# 
  3527  080C                     	;# 
  3528  080D                     	;# 
  3529  080E                     	;# 
  3530  080F                     	;# 
  3531  0810                     	;# 
  3532  0811                     	;# 
  3533  0812                     	;# 
  3534  0813                     	;# 
  3535  0814                     	;# 
  3536  081A                     	;# 
  3537  081B                     	;# 
  3538  081C                     	;# 
  3539  081D                     	;# 
  3540  081E                     	;# 
  3541  081F                     	;# 
  3542  088C                     	;# 
  3543  088D                     	;# 
  3544  088E                     	;# 
  3545  088F                     	;# 
  3546  0890                     	;# 
  3547  0891                     	;# 
  3548  0892                     	;# 
  3549  0893                     	;# 
  3550  0895                     	;# 
  3551  0896                     	;# 
  3552  0897                     	;# 
  3553  0898                     	;# 
  3554  0899                     	;# 
  3555  089A                     	;# 
  3556  089B                     	;# 
  3557  090C                     	;# 
  3558  090E                     	;# 
  3559  090F                     	;# 
  3560  091F                     	;# 
  3561  091F                     	;# 
  3562  098F                     	;# 
  3563  098F                     	;# 
  3564  0990                     	;# 
  3565  0991                     	;# 
  3566  0992                     	;# 
  3567  0993                     	;# 
  3568  0994                     	;# 
  3569  0995                     	;# 
  3570  0996                     	;# 
  3571  0997                     	;# 
  3572  0E0F                     	;# 
  3573  0E10                     	;# 
  3574  0E11                     	;# 
  3575  0E12                     	;# 
  3576  0E13                     	;# 
  3577  0E14                     	;# 
  3578  0E15                     	;# 
  3579  0E16                     	;# 
  3580  0E17                     	;# 
  3581  0E18                     	;# 
  3582  0E19                     	;# 
  3583  0E1A                     	;# 
  3584  0E1B                     	;# 
  3585  0E1C                     	;# 
  3586  0E1D                     	;# 
  3587  0E1E                     	;# 
  3588  0E1F                     	;# 
  3589  0E20                     	;# 
  3590  0E21                     	;# 
  3591  0E22                     	;# 
  3592  0E23                     	;# 
  3593  0E24                     	;# 
  3594  0E25                     	;# 
  3595  0E26                     	;# 
  3596  0E27                     	;# 
  3597  0E28                     	;# 
  3598  0E29                     	;# 
  3599  0E2A                     	;# 
  3600  0E2B                     	;# 
  3601  0E2C                     	;# 
  3602  0E2D                     	;# 
  3603  0E2E                     	;# 
  3604  0E2F                     	;# 
  3605  0E30                     	;# 
  3606  0E31                     	;# 
  3607  0E32                     	;# 
  3608  0E33                     	;# 
  3609  0E34                     	;# 
  3610  0E35                     	;# 
  3611  0E36                     	;# 
  3612  0E37                     	;# 
  3613  0E8F                     	;# 
  3614  0E90                     	;# 
  3615  0E91                     	;# 
  3616  0E92                     	;# 
  3617  0E93                     	;# 
  3618  0E94                     	;# 
  3619  0E95                     	;# 
  3620  0E96                     	;# 
  3621  0E97                     	;# 
  3622  0E9C                     	;# 
  3623  0E9D                     	;# 
  3624  0E9E                     	;# 
  3625  0EA1                     	;# 
  3626  0EA2                     	;# 
  3627  0EA3                     	;# 
  3628  0EA4                     	;# 
  3629  0EA5                     	;# 
  3630  0EA9                     	;# 
  3631  0EAA                     	;# 
  3632  0EAB                     	;# 
  3633  0EAC                     	;# 
  3634  0EB1                     	;# 
  3635  0EB2                     	;# 
  3636  0EB3                     	;# 
  3637  0EB8                     	;# 
  3638  0EB9                     	;# 
  3639  0EBA                     	;# 
  3640  0EBB                     	;# 
  3641  0EBC                     	;# 
  3642  0EBD                     	;# 
  3643  0EBE                     	;# 
  3644  0EC3                     	;# 
  3645  0EC5                     	;# 
  3646  0EC6                     	;# 
  3647  0EC7                     	;# 
  3648  0EC8                     	;# 
  3649  0EC9                     	;# 
  3650  0ECA                     	;# 
  3651  0ECB                     	;# 
  3652  0ECC                     	;# 
  3653  0F10                     	;# 
  3654  0F11                     	;# 
  3655  0F12                     	;# 
  3656  0F13                     	;# 
  3657  0F14                     	;# 
  3658  0F15                     	;# 
  3659  0F16                     	;# 
  3660  0F17                     	;# 
  3661  0F18                     	;# 
  3662  0F19                     	;# 
  3663  0F1A                     	;# 
  3664  0F1B                     	;# 
  3665  0F1C                     	;# 
  3666  0F1D                     	;# 
  3667  0F1E                     	;# 
  3668  0F1F                     	;# 
  3669  0F20                     	;# 
  3670  0F21                     	;# 
  3671  0F22                     	;# 
  3672  0F23                     	;# 
  3673  0F24                     	;# 
  3674  0F25                     	;# 
  3675  0F26                     	;# 
  3676  0F27                     	;# 
  3677  0F38                     	;# 
  3678  0F39                     	;# 
  3679  0F3A                     	;# 
  3680  0F3B                     	;# 
  3681  0F3C                     	;# 
  3682  0F3D                     	;# 
  3683  0F3E                     	;# 
  3684  0F3F                     	;# 
  3685  0F40                     	;# 
  3686  0F41                     	;# 
  3687  0F43                     	;# 
  3688  0F44                     	;# 
  3689  0F45                     	;# 
  3690  0F46                     	;# 
  3691  0F47                     	;# 
  3692  0F48                     	;# 
  3693  0F49                     	;# 
  3694  0F4A                     	;# 
  3695  0F4B                     	;# 
  3696  0F4C                     	;# 
  3697  0F4E                     	;# 
  3698  0F4F                     	;# 
  3699  0F50                     	;# 
  3700  0F51                     	;# 
  3701  0F52                     	;# 
  3702  0F53                     	;# 
  3703  0F54                     	;# 
  3704  0F55                     	;# 
  3705  0F56                     	;# 
  3706  0F57                     	;# 
  3707  0F65                     	;# 
  3708  0F68                     	;# 
  3709  0F69                     	;# 
  3710  0F6A                     	;# 
  3711  0F6B                     	;# 
  3712  0FE4                     	;# 
  3713  0FE5                     	;# 
  3714  0FE6                     	;# 
  3715  0FE7                     	;# 
  3716  0FE8                     	;# 
  3717  0FE9                     	;# 
  3718  0FEA                     	;# 
  3719  0FEB                     	;# 
  3720  0FED                     	;# 
  3721  0FEE                     	;# 
  3722  0FEF                     	;# 
  3723  0000                     	;# 
  3724  0001                     	;# 
  3725  0002                     	;# 
  3726  0003                     	;# 
  3727  0004                     	;# 
  3728  0005                     	;# 
  3729  0006                     	;# 
  3730  0007                     	;# 
  3731  0008                     	;# 
  3732  0009                     	;# 
  3733  000A                     	;# 
  3734  000B                     	;# 
  3735  000C                     	;# 
  3736  000D                     	;# 
  3737  000E                     	;# 
  3738  0010                     	;# 
  3739  0011                     	;# 
  3740  0012                     	;# 
  3741  0013                     	;# 
  3742  0016                     	;# 
  3743  0017                     	;# 
  3744  0018                     	;# 
  3745  001C                     	;# 
  3746  001C                     	;# 
  3747  001D                     	;# 
  3748  001D                     	;# 
  3749  001E                     	;# 
  3750  001F                     	;# 
  3751  008C                     	;# 
  3752  008C                     	;# 
  3753  008D                     	;# 
  3754  008E                     	;# 
  3755  008E                     	;# 
  3756  008F                     	;# 
  3757  0090                     	;# 
  3758  0090                     	;# 
  3759  0091                     	;# 
  3760  0093                     	;# 
  3761  0094                     	;# 
  3762  0095                     	;# 
  3763  0096                     	;# 
  3764  0097                     	;# 
  3765  0098                     	;# 
  3766  0099                     	;# 
  3767  009A                     	;# 
  3768  009B                     	;# 
  3769  009C                     	;# 
  3770  009D                     	;# 
  3771  009E                     	;# 
  3772  010C                     	;# 
  3773  010D                     	;# 
  3774  010E                     	;# 
  3775  010E                     	;# 
  3776  010F                     	;# 
  3777  0110                     	;# 
  3778  0110                     	;# 
  3779  0111                     	;# 
  3780  0112                     	;# 
  3781  0112                     	;# 
  3782  0113                     	;# 
  3783  0114                     	;# 
  3784  0114                     	;# 
  3785  0115                     	;# 
  3786  0116                     	;# 
  3787  0116                     	;# 
  3788  0117                     	;# 
  3789  0119                     	;# 
  3790  0119                     	;# 
  3791  0119                     	;# 
  3792  011A                     	;# 
  3793  011A                     	;# 
  3794  011A                     	;# 
  3795  011B                     	;# 
  3796  011B                     	;# 
  3797  011B                     	;# 
  3798  011B                     	;# 
  3799  011B                     	;# 
  3800  011C                     	;# 
  3801  011C                     	;# 
  3802  011C                     	;# 
  3803  011D                     	;# 
  3804  011D                     	;# 
  3805  011D                     	;# 
  3806  011E                     	;# 
  3807  011E                     	;# 
  3808  011E                     	;# 
  3809  011F                     	;# 
  3810  011F                     	;# 
  3811  011F                     	;# 
  3812  011F                     	;# 
  3813  011F                     	;# 
  3814  018C                     	;# 
  3815  018D                     	;# 
  3816  018E                     	;# 
  3817  018F                     	;# 
  3818  0190                     	;# 
  3819  0191                     	;# 
  3820  0192                     	;# 
  3821  0196                     	;# 
  3822  0197                     	;# 
  3823  0198                     	;# 
  3824  0199                     	;# 
  3825  019A                     	;# 
  3826  019B                     	;# 
  3827  019C                     	;# 
  3828  020C                     	;# 
  3829  020C                     	;# 
  3830  020D                     	;# 
  3831  020E                     	;# 
  3832  020F                     	;# 
  3833  020F                     	;# 
  3834  0210                     	;# 
  3835  0210                     	;# 
  3836  0211                     	;# 
  3837  0211                     	;# 
  3838  0212                     	;# 
  3839  0212                     	;# 
  3840  0213                     	;# 
  3841  0214                     	;# 
  3842  0215                     	;# 
  3843  0215                     	;# 
  3844  0216                     	;# 
  3845  0216                     	;# 
  3846  0217                     	;# 
  3847  0217                     	;# 
  3848  0218                     	;# 
  3849  0218                     	;# 
  3850  0219                     	;# 
  3851  021A                     	;# 
  3852  021B                     	;# 
  3853  021B                     	;# 
  3854  021C                     	;# 
  3855  021C                     	;# 
  3856  021D                     	;# 
  3857  021D                     	;# 
  3858  021E                     	;# 
  3859  021F                     	;# 
  3860  028C                     	;# 
  3861  028C                     	;# 
  3862  028D                     	;# 
  3863  028D                     	;# 
  3864  028E                     	;# 
  3865  028F                     	;# 
  3866  0290                     	;# 
  3867  0290                     	;# 
  3868  0291                     	;# 
  3869  0292                     	;# 
  3870  0292                     	;# 
  3871  0293                     	;# 
  3872  0293                     	;# 
  3873  0294                     	;# 
  3874  0295                     	;# 
  3875  0296                     	;# 
  3876  0296                     	;# 
  3877  0297                     	;# 
  3878  0298                     	;# 
  3879  0298                     	;# 
  3880  0299                     	;# 
  3881  0299                     	;# 
  3882  029A                     	;# 
  3883  029B                     	;# 
  3884  029C                     	;# 
  3885  029C                     	;# 
  3886  029D                     	;# 
  3887  030C                     	;# 
  3888  030C                     	;# 
  3889  030D                     	;# 
  3890  030E                     	;# 
  3891  030F                     	;# 
  3892  0310                     	;# 
  3893  0310                     	;# 
  3894  0311                     	;# 
  3895  0312                     	;# 
  3896  0313                     	;# 
  3897  0314                     	;# 
  3898  0314                     	;# 
  3899  0315                     	;# 
  3900  0316                     	;# 
  3901  0317                     	;# 
  3902  0318                     	;# 
  3903  0318                     	;# 
  3904  0319                     	;# 
  3905  031A                     	;# 
  3906  031B                     	;# 
  3907  031C                     	;# 
  3908  031C                     	;# 
  3909  031D                     	;# 
  3910  031E                     	;# 
  3911  031F                     	;# 
  3912  038C                     	;# 
  3913  038C                     	;# 
  3914  038D                     	;# 
  3915  038E                     	;# 
  3916  0390                     	;# 
  3917  0390                     	;# 
  3918  0391                     	;# 
  3919  0392                     	;# 
  3920  040C                     	;# 
  3921  040D                     	;# 
  3922  040E                     	;# 
  3923  040F                     	;# 
  3924  0410                     	;# 
  3925  0411                     	;# 
  3926  0416                     	;# 
  3927  0416                     	;# 
  3928  0417                     	;# 
  3929  0418                     	;# 
  3930  0418                     	;# 
  3931  0419                     	;# 
  3932  041A                     	;# 
  3933  041A                     	;# 
  3934  041B                     	;# 
  3935  041C                     	;# 
  3936  041C                     	;# 
  3937  041D                     	;# 
  3938  041E                     	;# 
  3939  041F                     	;# 
  3940  048C                     	;# 
  3941  048C                     	;# 
  3942  048D                     	;# 
  3943  048E                     	;# 
  3944  048F                     	;# 
  3945  048F                     	;# 
  3946  0490                     	;# 
  3947  0491                     	;# 
  3948  0492                     	;# 
  3949  0492                     	;# 
  3950  0493                     	;# 
  3951  0494                     	;# 
  3952  0495                     	;# 
  3953  0495                     	;# 
  3954  0496                     	;# 
  3955  0497                     	;# 
  3956  0498                     	;# 
  3957  0499                     	;# 
  3958  049A                     	;# 
  3959  049B                     	;# 
  3960  049C                     	;# 
  3961  049D                     	;# 
  3962  050C                     	;# 
  3963  050C                     	;# 
  3964  050D                     	;# 
  3965  050E                     	;# 
  3966  050F                     	;# 
  3967  050F                     	;# 
  3968  0510                     	;# 
  3969  0511                     	;# 
  3970  0512                     	;# 
  3971  0512                     	;# 
  3972  0513                     	;# 
  3973  0514                     	;# 
  3974  0515                     	;# 
  3975  0515                     	;# 
  3976  0516                     	;# 
  3977  0517                     	;# 
  3978  0518                     	;# 
  3979  0519                     	;# 
  3980  051A                     	;# 
  3981  051B                     	;# 
  3982  051C                     	;# 
  3983  051D                     	;# 
  3984  058C                     	;# 
  3985  058C                     	;# 
  3986  058D                     	;# 
  3987  058E                     	;# 
  3988  058F                     	;# 
  3989  058F                     	;# 
  3990  0590                     	;# 
  3991  0591                     	;# 
  3992  0592                     	;# 
  3993  0593                     	;# 
  3994  060C                     	;# 
  3995  060D                     	;# 
  3996  060E                     	;# 
  3997  060F                     	;# 
  3998  0610                     	;# 
  3999  0611                     	;# 
  4000  0612                     	;# 
  4001  0613                     	;# 
  4002  0614                     	;# 
  4003  0616                     	;# 
  4004  0617                     	;# 
  4005  0618                     	;# 
  4006  0619                     	;# 
  4007  061A                     	;# 
  4008  061B                     	;# 
  4009  061C                     	;# 
  4010  061D                     	;# 
  4011  061E                     	;# 
  4012  068C                     	;# 
  4013  068D                     	;# 
  4014  068E                     	;# 
  4015  068F                     	;# 
  4016  0690                     	;# 
  4017  0691                     	;# 
  4018  0692                     	;# 
  4019  0693                     	;# 
  4020  0694                     	;# 
  4021  070C                     	;# 
  4022  070D                     	;# 
  4023  070E                     	;# 
  4024  070F                     	;# 
  4025  0710                     	;# 
  4026  0711                     	;# 
  4027  0712                     	;# 
  4028  0713                     	;# 
  4029  0714                     	;# 
  4030  0716                     	;# 
  4031  0717                     	;# 
  4032  0718                     	;# 
  4033  0719                     	;# 
  4034  071A                     	;# 
  4035  071B                     	;# 
  4036  071C                     	;# 
  4037  071D                     	;# 
  4038  071E                     	;# 
  4039  0796                     	;# 
  4040  0797                     	;# 
  4041  0798                     	;# 
  4042  0799                     	;# 
  4043  079A                     	;# 
  4044  079B                     	;# 
  4045  080C                     	;# 
  4046  080D                     	;# 
  4047  080E                     	;# 
  4048  080F                     	;# 
  4049  0810                     	;# 
  4050  0811                     	;# 
  4051  0812                     	;# 
  4052  0813                     	;# 
  4053  0814                     	;# 
  4054  081A                     	;# 
  4055  081B                     	;# 
  4056  081C                     	;# 
  4057  081D                     	;# 
  4058  081E                     	;# 
  4059  081F                     	;# 
  4060  088C                     	;# 
  4061  088D                     	;# 
  4062  088E                     	;# 
  4063  088F                     	;# 
  4064  0890                     	;# 
  4065  0891                     	;# 
  4066  0892                     	;# 
  4067  0893                     	;# 
  4068  0895                     	;# 
  4069  0896                     	;# 
  4070  0897                     	;# 
  4071  0898                     	;# 
  4072  0899                     	;# 
  4073  089A                     	;# 
  4074  089B                     	;# 
  4075  090C                     	;# 
  4076  090E                     	;# 
  4077  090F                     	;# 
  4078  091F                     	;# 
  4079  091F                     	;# 
  4080  098F                     	;# 
  4081  098F                     	;# 
  4082  0990                     	;# 
  4083  0991                     	;# 
  4084  0992                     	;# 
  4085  0993                     	;# 
  4086  0994                     	;# 
  4087  0995                     	;# 
  4088  0996                     	;# 
  4089  0997                     	;# 
  4090  0E0F                     	;# 
  4091  0E10                     	;# 
  4092  0E11                     	;# 
  4093  0E12                     	;# 
  4094  0E13                     	;# 
  4095  0E14                     	;# 
  4096  0E15                     	;# 
  4097  0E16                     	;# 
  4098  0E17                     	;# 
  4099  0E18                     	;# 
  4100  0E19                     	;# 
  4101  0E1A                     	;# 
  4102  0E1B                     	;# 
  4103  0E1C                     	;# 
  4104  0E1D                     	;# 
  4105  0E1E                     	;# 
  4106  0E1F                     	;# 
  4107  0E20                     	;# 
  4108  0E21                     	;# 
  4109  0E22                     	;# 
  4110  0E23                     	;# 
  4111  0E24                     	;# 
  4112  0E25                     	;# 
  4113  0E26                     	;# 
  4114  0E27                     	;# 
  4115  0E28                     	;# 
  4116  0E29                     	;# 
  4117  0E2A                     	;# 
  4118  0E2B                     	;# 
  4119  0E2C                     	;# 
  4120  0E2D                     	;# 
  4121  0E2E                     	;# 
  4122  0E2F                     	;# 
  4123  0E30                     	;# 
  4124  0E31                     	;# 
  4125  0E32                     	;# 
  4126  0E33                     	;# 
  4127  0E34                     	;# 
  4128  0E35                     	;# 
  4129  0E36                     	;# 
  4130  0E37                     	;# 
  4131  0E8F                     	;# 
  4132  0E90                     	;# 
  4133  0E91                     	;# 
  4134  0E92                     	;# 
  4135  0E93                     	;# 
  4136  0E94                     	;# 
  4137  0E95                     	;# 
  4138  0E96                     	;# 
  4139  0E97                     	;# 
  4140  0E9C                     	;# 
  4141  0E9D                     	;# 
  4142  0E9E                     	;# 
  4143  0EA1                     	;# 
  4144  0EA2                     	;# 
  4145  0EA3                     	;# 
  4146  0EA4                     	;# 
  4147  0EA5                     	;# 
  4148  0EA9                     	;# 
  4149  0EAA                     	;# 
  4150  0EAB                     	;# 
  4151  0EAC                     	;# 
  4152  0EB1                     	;# 
  4153  0EB2                     	;# 
  4154  0EB3                     	;# 
  4155  0EB8                     	;# 
  4156  0EB9                     	;# 
  4157  0EBA                     	;# 
  4158  0EBB                     	;# 
  4159  0EBC                     	;# 
  4160  0EBD                     	;# 
  4161  0EBE                     	;# 
  4162  0EC3                     	;# 
  4163  0EC5                     	;# 
  4164  0EC6                     	;# 
  4165  0EC7                     	;# 
  4166  0EC8                     	;# 
  4167  0EC9                     	;# 
  4168  0ECA                     	;# 
  4169  0ECB                     	;# 
  4170  0ECC                     	;# 
  4171  0F10                     	;# 
  4172  0F11                     	;# 
  4173  0F12                     	;# 
  4174  0F13                     	;# 
  4175  0F14                     	;# 
  4176  0F15                     	;# 
  4177  0F16                     	;# 
  4178  0F17                     	;# 
  4179  0F18                     	;# 
  4180  0F19                     	;# 
  4181  0F1A                     	;# 
  4182  0F1B                     	;# 
  4183  0F1C                     	;# 
  4184  0F1D                     	;# 
  4185  0F1E                     	;# 
  4186  0F1F                     	;# 
  4187  0F20                     	;# 
  4188  0F21                     	;# 
  4189  0F22                     	;# 
  4190  0F23                     	;# 
  4191  0F24                     	;# 
  4192  0F25                     	;# 
  4193  0F26                     	;# 
  4194  0F27                     	;# 
  4195  0F38                     	;# 
  4196  0F39                     	;# 
  4197  0F3A                     	;# 
  4198  0F3B                     	;# 
  4199  0F3C                     	;# 
  4200  0F3D                     	;# 
  4201  0F3E                     	;# 
  4202  0F3F                     	;# 
  4203  0F40                     	;# 
  4204  0F41                     	;# 
  4205  0F43                     	;# 
  4206  0F44                     	;# 
  4207  0F45                     	;# 
  4208  0F46                     	;# 
  4209  0F47                     	;# 
  4210  0F48                     	;# 
  4211  0F49                     	;# 
  4212  0F4A                     	;# 
  4213  0F4B                     	;# 
  4214  0F4C                     	;# 
  4215  0F4E                     	;# 
  4216  0F4F                     	;# 
  4217  0F50                     	;# 
  4218  0F51                     	;# 
  4219  0F52                     	;# 
  4220  0F53                     	;# 
  4221  0F54                     	;# 
  4222  0F55                     	;# 
  4223  0F56                     	;# 
  4224  0F57                     	;# 
  4225  0F65                     	;# 
  4226  0F68                     	;# 
  4227  0F69                     	;# 
  4228  0F6A                     	;# 
  4229  0F6B                     	;# 
  4230  0FE4                     	;# 
  4231  0FE5                     	;# 
  4232  0FE6                     	;# 
  4233  0FE7                     	;# 
  4234  0FE8                     	;# 
  4235  0FE9                     	;# 
  4236  0FEA                     	;# 
  4237  0FEB                     	;# 
  4238  0FED                     	;# 
  4239  0FEE                     	;# 
  4240  0FEF                     	;# 
  4241  0000                     	;# 
  4242  0001                     	;# 
  4243  0002                     	;# 
  4244  0003                     	;# 
  4245  0004                     	;# 
  4246  0005                     	;# 
  4247  0006                     	;# 
  4248  0007                     	;# 
  4249  0008                     	;# 
  4250  0009                     	;# 
  4251  000A                     	;# 
  4252  000B                     	;# 
  4253  000C                     	;# 
  4254  000D                     	;# 
  4255  000E                     	;# 
  4256  0010                     	;# 
  4257  0011                     	;# 
  4258  0012                     	;# 
  4259  0013                     	;# 
  4260  0016                     	;# 
  4261  0017                     	;# 
  4262  0018                     	;# 
  4263  001C                     	;# 
  4264  001C                     	;# 
  4265  001D                     	;# 
  4266  001D                     	;# 
  4267  001E                     	;# 
  4268  001F                     	;# 
  4269  008C                     	;# 
  4270  008C                     	;# 
  4271  008D                     	;# 
  4272  008E                     	;# 
  4273  008E                     	;# 
  4274  008F                     	;# 
  4275  0090                     	;# 
  4276  0090                     	;# 
  4277  0091                     	;# 
  4278  0093                     	;# 
  4279  0094                     	;# 
  4280  0095                     	;# 
  4281  0096                     	;# 
  4282  0097                     	;# 
  4283  0098                     	;# 
  4284  0099                     	;# 
  4285  009A                     	;# 
  4286  009B                     	;# 
  4287  009C                     	;# 
  4288  009D                     	;# 
  4289  009E                     	;# 
  4290  010C                     	;# 
  4291  010D                     	;# 
  4292  010E                     	;# 
  4293  010E                     	;# 
  4294  010F                     	;# 
  4295  0110                     	;# 
  4296  0110                     	;# 
  4297  0111                     	;# 
  4298  0112                     	;# 
  4299  0112                     	;# 
  4300  0113                     	;# 
  4301  0114                     	;# 
  4302  0114                     	;# 
  4303  0115                     	;# 
  4304  0116                     	;# 
  4305  0116                     	;# 
  4306  0117                     	;# 
  4307  0119                     	;# 
  4308  0119                     	;# 
  4309  0119                     	;# 
  4310  011A                     	;# 
  4311  011A                     	;# 
  4312  011A                     	;# 
  4313  011B                     	;# 
  4314  011B                     	;# 
  4315  011B                     	;# 
  4316  011B                     	;# 
  4317  011B                     	;# 
  4318  011C                     	;# 
  4319  011C                     	;# 
  4320  011C                     	;# 
  4321  011D                     	;# 
  4322  011D                     	;# 
  4323  011D                     	;# 
  4324  011E                     	;# 
  4325  011E                     	;# 
  4326  011E                     	;# 
  4327  011F                     	;# 
  4328  011F                     	;# 
  4329  011F                     	;# 
  4330  011F                     	;# 
  4331  011F                     	;# 
  4332  018C                     	;# 
  4333  018D                     	;# 
  4334  018E                     	;# 
  4335  018F                     	;# 
  4336  0190                     	;# 
  4337  0191                     	;# 
  4338  0192                     	;# 
  4339  0196                     	;# 
  4340  0197                     	;# 
  4341  0198                     	;# 
  4342  0199                     	;# 
  4343  019A                     	;# 
  4344  019B                     	;# 
  4345  019C                     	;# 
  4346  020C                     	;# 
  4347  020C                     	;# 
  4348  020D                     	;# 
  4349  020E                     	;# 
  4350  020F                     	;# 
  4351  020F                     	;# 
  4352  0210                     	;# 
  4353  0210                     	;# 
  4354  0211                     	;# 
  4355  0211                     	;# 
  4356  0212                     	;# 
  4357  0212                     	;# 
  4358  0213                     	;# 
  4359  0214                     	;# 
  4360  0215                     	;# 
  4361  0215                     	;# 
  4362  0216                     	;# 
  4363  0216                     	;# 
  4364  0217                     	;# 
  4365  0217                     	;# 
  4366  0218                     	;# 
  4367  0218                     	;# 
  4368  0219                     	;# 
  4369  021A                     	;# 
  4370  021B                     	;# 
  4371  021B                     	;# 
  4372  021C                     	;# 
  4373  021C                     	;# 
  4374  021D                     	;# 
  4375  021D                     	;# 
  4376  021E                     	;# 
  4377  021F                     	;# 
  4378  028C                     	;# 
  4379  028C                     	;# 
  4380  028D                     	;# 
  4381  028D                     	;# 
  4382  028E                     	;# 
  4383  028F                     	;# 
  4384  0290                     	;# 
  4385  0290                     	;# 
  4386  0291                     	;# 
  4387  0292                     	;# 
  4388  0292                     	;# 
  4389  0293                     	;# 
  4390  0293                     	;# 
  4391  0294                     	;# 
  4392  0295                     	;# 
  4393  0296                     	;# 
  4394  0296                     	;# 
  4395  0297                     	;# 
  4396  0298                     	;# 
  4397  0298                     	;# 
  4398  0299                     	;# 
  4399  0299                     	;# 
  4400  029A                     	;# 
  4401  029B                     	;# 
  4402  029C                     	;# 
  4403  029C                     	;# 
  4404  029D                     	;# 
  4405  030C                     	;# 
  4406  030C                     	;# 
  4407  030D                     	;# 
  4408  030E                     	;# 
  4409  030F                     	;# 
  4410  0310                     	;# 
  4411  0310                     	;# 
  4412  0311                     	;# 
  4413  0312                     	;# 
  4414  0313                     	;# 
  4415  0314                     	;# 
  4416  0314                     	;# 
  4417  0315                     	;# 
  4418  0316                     	;# 
  4419  0317                     	;# 
  4420  0318                     	;# 
  4421  0318                     	;# 
  4422  0319                     	;# 
  4423  031A                     	;# 
  4424  031B                     	;# 
  4425  031C                     	;# 
  4426  031C                     	;# 
  4427  031D                     	;# 
  4428  031E                     	;# 
  4429  031F                     	;# 
  4430  038C                     	;# 
  4431  038C                     	;# 
  4432  038D                     	;# 
  4433  038E                     	;# 
  4434  0390                     	;# 
  4435  0390                     	;# 
  4436  0391                     	;# 
  4437  0392                     	;# 
  4438  040C                     	;# 
  4439  040D                     	;# 
  4440  040E                     	;# 
  4441  040F                     	;# 
  4442  0410                     	;# 
  4443  0411                     	;# 
  4444  0416                     	;# 
  4445  0416                     	;# 
  4446  0417                     	;# 
  4447  0418                     	;# 
  4448  0418                     	;# 
  4449  0419                     	;# 
  4450  041A                     	;# 
  4451  041A                     	;# 
  4452  041B                     	;# 
  4453  041C                     	;# 
  4454  041C                     	;# 
  4455  041D                     	;# 
  4456  041E                     	;# 
  4457  041F                     	;# 
  4458  048C                     	;# 
  4459  048C                     	;# 
  4460  048D                     	;# 
  4461  048E                     	;# 
  4462  048F                     	;# 
  4463  048F                     	;# 
  4464  0490                     	;# 
  4465  0491                     	;# 
  4466  0492                     	;# 
  4467  0492                     	;# 
  4468  0493                     	;# 
  4469  0494                     	;# 
  4470  0495                     	;# 
  4471  0495                     	;# 
  4472  0496                     	;# 
  4473  0497                     	;# 
  4474  0498                     	;# 
  4475  0499                     	;# 
  4476  049A                     	;# 
  4477  049B                     	;# 
  4478  049C                     	;# 
  4479  049D                     	;# 
  4480  050C                     	;# 
  4481  050C                     	;# 
  4482  050D                     	;# 
  4483  050E                     	;# 
  4484  050F                     	;# 
  4485  050F                     	;# 
  4486  0510                     	;# 
  4487  0511                     	;# 
  4488  0512                     	;# 
  4489  0512                     	;# 
  4490  0513                     	;# 
  4491  0514                     	;# 
  4492  0515                     	;# 
  4493  0515                     	;# 
  4494  0516                     	;# 
  4495  0517                     	;# 
  4496  0518                     	;# 
  4497  0519                     	;# 
  4498  051A                     	;# 
  4499  051B                     	;# 
  4500  051C                     	;# 
  4501  051D                     	;# 
  4502  058C                     	;# 
  4503  058C                     	;# 
  4504  058D                     	;# 
  4505  058E                     	;# 
  4506  058F                     	;# 
  4507  058F                     	;# 
  4508  0590                     	;# 
  4509  0591                     	;# 
  4510  0592                     	;# 
  4511  0593                     	;# 
  4512  060C                     	;# 
  4513  060D                     	;# 
  4514  060E                     	;# 
  4515  060F                     	;# 
  4516  0610                     	;# 
  4517  0611                     	;# 
  4518  0612                     	;# 
  4519  0613                     	;# 
  4520  0614                     	;# 
  4521  0616                     	;# 
  4522  0617                     	;# 
  4523  0618                     	;# 
  4524  0619                     	;# 
  4525  061A                     	;# 
  4526  061B                     	;# 
  4527  061C                     	;# 
  4528  061D                     	;# 
  4529  061E                     	;# 
  4530  068C                     	;# 
  4531  068D                     	;# 
  4532  068E                     	;# 
  4533  068F                     	;# 
  4534  0690                     	;# 
  4535  0691                     	;# 
  4536  0692                     	;# 
  4537  0693                     	;# 
  4538  0694                     	;# 
  4539  070C                     	;# 
  4540  070D                     	;# 
  4541  070E                     	;# 
  4542  070F                     	;# 
  4543  0710                     	;# 
  4544  0711                     	;# 
  4545  0712                     	;# 
  4546  0713                     	;# 
  4547  0714                     	;# 
  4548  0716                     	;# 
  4549  0717                     	;# 
  4550  0718                     	;# 
  4551  0719                     	;# 
  4552  071A                     	;# 
  4553  071B                     	;# 
  4554  071C                     	;# 
  4555  071D                     	;# 
  4556  071E                     	;# 
  4557  0796                     	;# 
  4558  0797                     	;# 
  4559  0798                     	;# 
  4560  0799                     	;# 
  4561  079A                     	;# 
  4562  079B                     	;# 
  4563  080C                     	;# 
  4564  080D                     	;# 
  4565  080E                     	;# 
  4566  080F                     	;# 
  4567  0810                     	;# 
  4568  0811                     	;# 
  4569  0812                     	;# 
  4570  0813                     	;# 
  4571  0814                     	;# 
  4572  081A                     	;# 
  4573  081B                     	;# 
  4574  081C                     	;# 
  4575  081D                     	;# 
  4576  081E                     	;# 
  4577  081F                     	;# 
  4578  088C                     	;# 
  4579  088D                     	;# 
  4580  088E                     	;# 
  4581  088F                     	;# 
  4582  0890                     	;# 
  4583  0891                     	;# 
  4584  0892                     	;# 
  4585  0893                     	;# 
  4586  0895                     	;# 
  4587  0896                     	;# 
  4588  0897                     	;# 
  4589  0898                     	;# 
  4590  0899                     	;# 
  4591  089A                     	;# 
  4592  089B                     	;# 
  4593  090C                     	;# 
  4594  090E                     	;# 
  4595  090F                     	;# 
  4596  091F                     	;# 
  4597  091F                     	;# 
  4598  098F                     	;# 
  4599  098F                     	;# 
  4600  0990                     	;# 
  4601  0991                     	;# 
  4602  0992                     	;# 
  4603  0993                     	;# 
  4604  0994                     	;# 
  4605  0995                     	;# 
  4606  0996                     	;# 
  4607  0997                     	;# 
  4608  0E0F                     	;# 
  4609  0E10                     	;# 
  4610  0E11                     	;# 
  4611  0E12                     	;# 
  4612  0E13                     	;# 
  4613  0E14                     	;# 
  4614  0E15                     	;# 
  4615  0E16                     	;# 
  4616  0E17                     	;# 
  4617  0E18                     	;# 
  4618  0E19                     	;# 
  4619  0E1A                     	;# 
  4620  0E1B                     	;# 
  4621  0E1C                     	;# 
  4622  0E1D                     	;# 
  4623  0E1E                     	;# 
  4624  0E1F                     	;# 
  4625  0E20                     	;# 
  4626  0E21                     	;# 
  4627  0E22                     	;# 
  4628  0E23                     	;# 
  4629  0E24                     	;# 
  4630  0E25                     	;# 
  4631  0E26                     	;# 
  4632  0E27                     	;# 
  4633  0E28                     	;# 
  4634  0E29                     	;# 
  4635  0E2A                     	;# 
  4636  0E2B                     	;# 
  4637  0E2C                     	;# 
  4638  0E2D                     	;# 
  4639  0E2E                     	;# 
  4640  0E2F                     	;# 
  4641  0E30                     	;# 
  4642  0E31                     	;# 
  4643  0E32                     	;# 
  4644  0E33                     	;# 
  4645  0E34                     	;# 
  4646  0E35                     	;# 
  4647  0E36                     	;# 
  4648  0E37                     	;# 
  4649  0E8F                     	;# 
  4650  0E90                     	;# 
  4651  0E91                     	;# 
  4652  0E92                     	;# 
  4653  0E93                     	;# 
  4654  0E94                     	;# 
  4655  0E95                     	;# 
  4656  0E96                     	;# 
  4657  0E97                     	;# 
  4658  0E9C                     	;# 
  4659  0E9D                     	;# 
  4660  0E9E                     	;# 
  4661  0EA1                     	;# 
  4662  0EA2                     	;# 
  4663  0EA3                     	;# 
  4664  0EA4                     	;# 
  4665  0EA5                     	;# 
  4666  0EA9                     	;# 
  4667  0EAA                     	;# 
  4668  0EAB                     	;# 
  4669  0EAC                     	;# 
  4670  0EB1                     	;# 
  4671  0EB2                     	;# 
  4672  0EB3                     	;# 
  4673  0EB8                     	;# 
  4674  0EB9                     	;# 
  4675  0EBA                     	;# 
  4676  0EBB                     	;# 
  4677  0EBC                     	;# 
  4678  0EBD                     	;# 
  4679  0EBE                     	;# 
  4680  0EC3                     	;# 
  4681  0EC5                     	;# 
  4682  0EC6                     	;# 
  4683  0EC7                     	;# 
  4684  0EC8                     	;# 
  4685  0EC9                     	;# 
  4686  0ECA                     	;# 
  4687  0ECB                     	;# 
  4688  0ECC                     	;# 
  4689  0F10                     	;# 
  4690  0F11                     	;# 
  4691  0F12                     	;# 
  4692  0F13                     	;# 
  4693  0F14                     	;# 
  4694  0F15                     	;# 
  4695  0F16                     	;# 
  4696  0F17                     	;# 
  4697  0F18                     	;# 
  4698  0F19                     	;# 
  4699  0F1A                     	;# 
  4700  0F1B                     	;# 
  4701  0F1C                     	;# 
  4702  0F1D                     	;# 
  4703  0F1E                     	;# 
  4704  0F1F                     	;# 
  4705  0F20                     	;# 
  4706  0F21                     	;# 
  4707  0F22                     	;# 
  4708  0F23                     	;# 
  4709  0F24                     	;# 
  4710  0F25                     	;# 
  4711  0F26                     	;# 
  4712  0F27                     	;# 
  4713  0F38                     	;# 
  4714  0F39                     	;# 
  4715  0F3A                     	;# 
  4716  0F3B                     	;# 
  4717  0F3C                     	;# 
  4718  0F3D                     	;# 
  4719  0F3E                     	;# 
  4720  0F3F                     	;# 
  4721  0F40                     	;# 
  4722  0F41                     	;# 
  4723  0F43                     	;# 
  4724  0F44                     	;# 
  4725  0F45                     	;# 
  4726  0F46                     	;# 
  4727  0F47                     	;# 
  4728  0F48                     	;# 
  4729  0F49                     	;# 
  4730  0F4A                     	;# 
  4731  0F4B                     	;# 
  4732  0F4C                     	;# 
  4733  0F4E                     	;# 
  4734  0F4F                     	;# 
  4735  0F50                     	;# 
  4736  0F51                     	;# 
  4737  0F52                     	;# 
  4738  0F53                     	;# 
  4739  0F54                     	;# 
  4740  0F55                     	;# 
  4741  0F56                     	;# 
  4742  0F57                     	;# 
  4743  0F65                     	;# 
  4744  0F68                     	;# 
  4745  0F69                     	;# 
  4746  0F6A                     	;# 
  4747  0F6B                     	;# 
  4748  0FE4                     	;# 
  4749  0FE5                     	;# 
  4750  0FE6                     	;# 
  4751  0FE7                     	;# 
  4752  0FE8                     	;# 
  4753  0FE9                     	;# 
  4754  0FEA                     	;# 
  4755  0FEB                     	;# 
  4756  0FED                     	;# 
  4757  0FEE                     	;# 
  4758  0FEF                     	;# 
  4759                           
  4760                           	psect	stringtext1
  4761  101A                     __pstringtext1:
  4762  101A                     _KEYS:
  4763  101A  3431               	retlw	49
  4764  101B  3432               	retlw	50
  4765  101C  3433               	retlw	51
  4766  101D  3441               	retlw	65
  4767  101E  3434               	retlw	52
  4768  101F  3435               	retlw	53
  4769  1020  3436               	retlw	54
  4770  1021  3442               	retlw	66
  4771  1022  3437               	retlw	55
  4772  1023  3438               	retlw	56
  4773  1024  3439               	retlw	57
  4774  1025  3443               	retlw	67
  4775  1026  342A               	retlw	42
  4776  1027  3430               	retlw	48
  4777  1028  3423               	retlw	35
  4778  1029  3464               	retlw	100
  4779  102A                     __end_of_KEYS:
  4780                           
  4781                           	psect	stringtext2
  4782  104A                     __pstringtext2:
  4783  104A                     _mv:
  4784  104A  340D               	retlw	13
  4785  104B  3468               	retlw	104
  4786  104C  3453               	retlw	83
  4787  104D  343B               	retlw	59
  4788  104E                     __end_of_mv:
  4789                           
  4790                           	psect	stringtext3
  4791  1000                     __pstringtext3:
  4792  1000                     _LCD_INIT_STRING:
  4793  1000  3428               	retlw	40
  4794  1001  340C               	retlw	12
  4795  1002  3401               	retlw	1
  4796  1003  3406               	retlw	6
  4797  1004                     __end_of_LCD_INIT_STRING:
  4798  000B                     _INTCON	set	11
  4799  000D                     _PORTBbits	set	13
  4800  0016                     _LATAbits	set	22
  4801  0013                     _TRISCbits	set	19
  4802  0013                     _TRISC	set	19
  4803  0012                     _TRISB	set	18
  4804  000D                     _PORTB	set	13
  4805  0017                     _LATB	set	23
  4806  0011                     _TRISA	set	17
  4807  000C                     _PORTA	set	12
  4808  0016                     _LATA	set	22
  4809  011A                     _TXREG	set	282
  4810  011C                     _SP1BRGH	set	284
  4811  011B                     _SP1BRGL	set	283
  4812  011E                     _TX1STA	set	286
  4813  011D                     _RC1STA	set	285
  4814  011F                     _BAUD1CON	set	287
  4815  018C                     _SSP1BUF	set	396
  4816  0191                     _SSP1CON2bits	set	401
  4817  018D                     _SSP1ADD	set	397
  4818  0192                     _SSP1CON3	set	402
  4819  0190                     _SSP1CON1	set	400
  4820  018F                     _SSP1STAT	set	399
  4821  070C                     _PIR0bits	set	1804
  4822  0716                     _PIE0	set	1814
  4823  070F                     _PIR3bits	set	1807
  4824  070F                     _PIR3	set	1807
  4825  0E90                     _INTPPS	set	3728
  4826  0EC6                     _SSP1DATPPS	set	3782
  4827  0EC5                     _SSP1CLKPPS	set	3781
  4828  0ECB                     _RXPPS	set	3787
  4829  0F44                     _WPUB	set	3908
  4830  0F24                     _RC4PPS	set	3876
  4831  0F23                     _RC3PPS	set	3875
  4832  0F4E                     _ANSELCbits	set	3918
  4833  0F20                     _RC0PPS	set	3872
  4834  0F4E                     _ANSELC	set	3918
  4835  0F43                     _ANSELB	set	3907
  4836  0F38                     _ANSELA	set	3896
  4837  1004                     STR_6:
  4838  1004  3474               	retlw	116	;'t'
  4839  1005  3465               	retlw	101	;'e'
  4840  1006  3463               	retlw	99	;'c'
  4841  1007  346C               	retlw	108	;'l'
  4842  1008  3461               	retlw	97	;'a'
  4843  1009  3420               	retlw	32	;' '
  4844  100A  3470               	retlw	112	;'p'
  4845  100B  3472               	retlw	114	;'r'
  4846  100C  3465               	retlw	101	;'e'
  4847  100D  3473               	retlw	115	;'s'
  4848  100E  3469               	retlw	105	;'i'
  4849  100F  346F               	retlw	111	;'o'
  4850  1010  346E               	retlw	110	;'n'
  4851  1011  3461               	retlw	97	;'a'
  4852  1012  3464               	retlw	100	;'d'
  4853  1013  3461               	retlw	97	;'a'
  4854  1014  3420               	retlw	32	;' '
  4855  1015  3425               	retlw	37	;'%'
  4856  1016  3463               	retlw	99	;'c'
  4857  1017  340A               	retlw	10
  4858  1018  340A               	retlw	10
  4859  1019  3400               	retlw	0
  4860                           
  4861                           	psect	stringtext4
  4862  102A                     __pstringtext4:
  4863  102A                     STR_1:
  4864  102A  340C               	retlw	12
  4865  102B  3468               	retlw	104	;'h'
  4866  102C  346F               	retlw	111	;'o'
  4867  102D  346C               	retlw	108	;'l'
  4868  102E  3461               	retlw	97	;'a'
  4869  102F  3420               	retlw	32	;' '
  4870  1030  346D               	retlw	109	;'m'
  4871  1031  3475               	retlw	117	;'u'
  4872  1032  346E               	retlw	110	;'n'
  4873  1033  3464               	retlw	100	;'d'
  4874  1034  346F               	retlw	111	;'o'
  4875  1035  340A               	retlw	10
  4876  1036  3425               	retlw	37	;'%'
  4877  1037  3469               	retlw	105	;'i'
  4878  1038  3400               	retlw	0
  4879                           
  4880                           	psect	stringtext5
  4881  1039                     __pstringtext5:
  4882  1039                     STR_2:
  4883  1039  3448               	retlw	72	;'H'
  4884  103A  346F               	retlw	111	;'o'
  4885  103B  346C               	retlw	108	;'l'
  4886  103C  3461               	retlw	97	;'a'
  4887  103D  3461               	retlw	97	;'a'
  4888  103E  3461               	retlw	97	;'a'
  4889  103F  340A               	retlw	10
  4890  1040  340A               	retlw	10
  4891  1041  3400               	retlw	0
  4892                           
  4893                           	psect	stringtext6
  4894  1042                     __pstringtext6:
  4895  1042                     STR_5:
  4896  1042  340C               	retlw	12
  4897  1043  3425               	retlw	37	;'%'
  4898  1044  3464               	retlw	100	;'d'
  4899  1045  342E               	retlw	46	;'.'
  4900  1046  3425               	retlw	37	;'%'
  4901  1047  3464               	retlw	100	;'d'
  4902  1048  340A               	retlw	10
  4903  1049  3400               	retlw	0
  4904                           
  4905                           	psect	stringtext7
  4906  0000                     __pstringtext7:
  4907  1046                     
  4908                           	psect	cinit
  4909  0013                     start_initialization:	
  4910                           ; #config settings
  4911                           
  4912  0013                     __initialization:
  4913                           
  4914                           ; Clear objects allocated to COMMON
  4915  0013  01FC               	clrf	__pbssCOMMON& (0+127)
  4916                           
  4917                           ; Clear objects allocated to BANK0
  4918  0014  0020               	movlb	0	; select bank0
  4919  0015  01EF               	clrf	__pbssBANK0& (0+127)
  4920                           
  4921                           ; Clear objects allocated to BANK1
  4922  0016  30A0               	movlw	low __pbssBANK1
  4923  0017  0084               	movwf	4
  4924  0018  3000               	movlw	high __pbssBANK1
  4925  0019  0085               	movwf	5
  4926  001A  303C               	movlw	60
  4927  001B  318D  2530  3180   	fcall	clear_ram0
  4928                           
  4929                           ; Clear objects allocated to BANK2
  4930  001E  3020               	movlw	low __pbssBANK2
  4931  001F  0084               	movwf	4
  4932  0020  3001               	movlw	high __pbssBANK2
  4933  0021  0085               	movwf	5
  4934  0022  3032               	movlw	50
  4935  0023  318D  2530         	fcall	clear_ram0
  4936  0025                     end_of_initialization:	
  4937                           ;End of C runtime variable initialization code
  4938                           
  4939  0025                     __end_of__initialization:
  4940  0025  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4941  0026  0020               	movlb	0
  4942  0027  3185  2DB9         	ljmp	_main	;jump to C main() function
  4943                           
  4944                           	psect	bssCOMMON
  4945  007C                     __pbssCOMMON:
  4946  007C                     _g_LcdY:
  4947  007C                     	ds	1
  4948                           
  4949                           	psect	bssBANK0
  4950  006F                     __pbssBANK0:
  4951  006F                     _counts:
  4952  006F                     	ds	1
  4953                           
  4954                           	psect	bssBANK1
  4955  00A0                     __pbssBANK1:
  4956  00A0                     _temperatura:
  4957  00A0                     	ds	4
  4958  00A4                     _volt:
  4959  00A4                     	ds	4
  4960  00A8                     _nout:
  4961  00A8                     	ds	2
  4962  00AA                     _width:
  4963  00AA                     	ds	2
  4964  00AC                     _prec:
  4965  00AC                     	ds	2
  4966  00AE                     _flags:
  4967  00AE                     	ds	2
  4968  00B0                     _adc:
  4969  00B0                     	ds	2
  4970  00B2                     _miVar:
  4971  00B2                     	ds	2
  4972  00B4                     _contador:
  4973  00B4                     	ds	1
  4974  00B5                     _encontrado:
  4975  00B5                     	ds	1
  4976  00B6                     _tecla:
  4977  00B6                     	ds	1
  4978  00B7                     _rx:
  4979  00B7                     	ds	1
  4980  00B8                     _g_LcdX:
  4981  00B8                     	ds	1
  4982  00B9                     _countsAnterior:
  4983  00B9                     	ds	1
  4984  00BA                     _dbuf:
  4985  00BA                     	ds	32
  4986  00DA                     _low_byte:
  4987  00DA                     	ds	1
  4988  00DB                     _high_byte:
  4989  00DB                     	ds	1
  4990                           
  4991                           	psect	bssBANK2
  4992  0120                     __pbssBANK2:
  4993  0120                     _buffer:
  4994  0120                     	ds	50
  4995                           
  4996                           	psect	clrtext
  4997  0D30                     clear_ram0:	
  4998                           ;	Called with FSR0 containing the base address, and
  4999                           ;	WREG with the size to clear
  5000                           
  5001  0D30  0064               	clrwdt	;clear the watchdog before getting into this loop
  5002  0D31                     clrloop0:
  5003  0D31  0180               	clrf	0	;clear RAM location pointed to by FSR
  5004  0D32  3101               	addfsr 0,1
  5005  0D33  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5006  0D34  2D31               	goto	clrloop0	;have we reached the end yet?
  5007  0D35  3400               	retlw	0	;all done for this memory range, return
  5008                           
  5009                           	psect	cstackBANK1
  5010  00DC                     __pcstackBANK1:
  5011  00DC                     ??_sprintf:
  5012                           
  5013                           ; 1 bytes @ 0x0
  5014  00DC                     	ds	1
  5015  00DD                     sprintf@s:
  5016                           
  5017                           ; 1 bytes @ 0x1
  5018  00DD                     	ds	1
  5019  00DE                     sprintf@ap:
  5020                           
  5021                           ; 1 bytes @ 0x2
  5022  00DE                     	ds	1
  5023  00DF                     sprintf@f:
  5024                           
  5025                           ; 5 bytes @ 0x3
  5026  00DF                     	ds	5
  5027  00E4                     ??_main:
  5028                           
  5029                           ; 1 bytes @ 0x8
  5030  00E4                     	ds	2
  5031                           
  5032                           	psect	cstackCOMMON
  5033  0070                     __pcstackCOMMON:
  5034  0070                     ?_port_init:
  5035  0070                     ?_I2C_init:	
  5036                           ; 1 bytes @ 0x0
  5037                           
  5038  0070                     ?_teclado_init:	
  5039                           ; 1 bytes @ 0x0
  5040                           
  5041  0070                     ?_enable_interrupt:	
  5042                           ; 1 bytes @ 0x0
  5043                           
  5044  0070                     ?_lcd_init:	
  5045                           ; 1 bytes @ 0x0
  5046                           
  5047  0070                     ?_lcd_puts:	
  5048                           ; 1 bytes @ 0x0
  5049                           
  5050  0070                     ?_teclado_get:	
  5051                           ; 1 bytes @ 0x0
  5052                           
  5053  0070                     ?_main:	
  5054                           ; 1 bytes @ 0x0
  5055                           
  5056  0070                     ?_uart_tx:	
  5057                           ; 1 bytes @ 0x0
  5058                           
  5059  0070                     ?_putch:	
  5060                           ; 1 bytes @ 0x0
  5061                           
  5062  0070                     ?_I2C_start:	
  5063                           ; 1 bytes @ 0x0
  5064                           
  5065  0070                     ?_I2C_restart:	
  5066                           ; 1 bytes @ 0x0
  5067                           
  5068  0070                     ?_I2C_stop:	
  5069                           ; 1 bytes @ 0x0
  5070                           
  5071  0070                     ?_I2C_read:	
  5072                           ; 1 bytes @ 0x0
  5073                           
  5074  0070                     ?_I2C_ack:	
  5075                           ; 1 bytes @ 0x0
  5076                           
  5077  0070                     ?_I2C_write:	
  5078                           ; 1 bytes @ 0x0
  5079                           
  5080  0070                     ?_Write_PCF:	
  5081                           ; 1 bytes @ 0x0
  5082                           
  5083  0070                     ?_INTERRUPT_InterruptManager:	
  5084                           ; 1 bytes @ 0x0
  5085                           
  5086  0070                     ??_INTERRUPT_InterruptManager:	
  5087                           ; 1 bytes @ 0x0
  5088                           
  5089                           
  5090                           ; 1 bytes @ 0x0
  5091  0070                     	ds	1
  5092  0071                     ??_port_init:
  5093  0071                     ??_I2C_init:	
  5094                           ; 1 bytes @ 0x1
  5095                           
  5096  0071                     ??_teclado_init:	
  5097                           ; 1 bytes @ 0x1
  5098                           
  5099  0071                     ??_enable_interrupt:	
  5100                           ; 1 bytes @ 0x1
  5101                           
  5102  0071                     ??_teclado_get:	
  5103                           ; 1 bytes @ 0x1
  5104                           
  5105  0071                     ??_uart_tx:	
  5106                           ; 1 bytes @ 0x1
  5107                           
  5108  0071                     ??_I2C_start:	
  5109                           ; 1 bytes @ 0x1
  5110                           
  5111  0071                     ??_I2C_restart:	
  5112                           ; 1 bytes @ 0x1
  5113                           
  5114  0071                     ??_I2C_stop:	
  5115                           ; 1 bytes @ 0x1
  5116                           
  5117  0071                     ??_I2C_read:	
  5118                           ; 1 bytes @ 0x1
  5119                           
  5120  0071                     ??_I2C_ack:	
  5121                           ; 1 bytes @ 0x1
  5122                           
  5123  0071                     ??_I2C_write:	
  5124                           ; 1 bytes @ 0x1
  5125                           
  5126  0071                     ?___bmul:	
  5127                           ; 1 bytes @ 0x1
  5128                           
  5129  0071                     ??___aodiv:	
  5130                           ; 1 bytes @ 0x1
  5131                           
  5132  0071                     ??___aomod:	
  5133                           ; 1 bytes @ 0x1
  5134                           
  5135  0071                     ?_strlen:	
  5136                           ; 1 bytes @ 0x1
  5137                           
  5138  0071                     ?___lldiv:	
  5139                           ; 2 bytes @ 0x1
  5140                           
  5141  0071                     I2C_write@I2C_data:	
  5142                           ; 4 bytes @ 0x1
  5143                           
  5144  0071                     ___bmul@multiplicand:	
  5145                           ; 1 bytes @ 0x1
  5146                           
  5147  0071                     ___lldiv@divisor:	
  5148                           ; 1 bytes @ 0x1
  5149                           
  5150                           
  5151                           ; 4 bytes @ 0x1
  5152  0071                     	ds	1
  5153  0072                     ??_Write_PCF:
  5154  0072                     ??___bmul:	
  5155                           ; 1 bytes @ 0x2
  5156                           
  5157  0072                     uart_tx@dato:	
  5158                           ; 1 bytes @ 0x2
  5159                           
  5160  0072                     Write_PCF@dato:	
  5161                           ; 1 bytes @ 0x2
  5162                           
  5163  0072                     ___aodiv@counter:	
  5164                           ; 1 bytes @ 0x2
  5165                           
  5166  0072                     ___aomod@counter:	
  5167                           ; 1 bytes @ 0x2
  5168                           
  5169                           
  5170                           ; 1 bytes @ 0x2
  5171  0072                     	ds	1
  5172  0073                     ??_strlen:
  5173  0073                     ??_putch:	
  5174                           ; 1 bytes @ 0x3
  5175                           
  5176  0073                     ?_Send_D7_D4:	
  5177                           ; 1 bytes @ 0x3
  5178                           
  5179  0073                     putch@dato:	
  5180                           ; 1 bytes @ 0x3
  5181                           
  5182  0073                     Send_D7_D4@nibble:	
  5183                           ; 1 bytes @ 0x3
  5184                           
  5185  0073                     ___bmul@product:	
  5186                           ; 1 bytes @ 0x3
  5187                           
  5188  0073                     ___aodiv@sign:	
  5189                           ; 1 bytes @ 0x3
  5190                           
  5191  0073                     ___aomod@sign:	
  5192                           ; 1 bytes @ 0x3
  5193                           
  5194                           
  5195                           ; 1 bytes @ 0x3
  5196  0073                     	ds	1
  5197  0074                     ??_Send_D7_D4:
  5198  0074                     ?_fputc:	
  5199                           ; 1 bytes @ 0x4
  5200                           
  5201  0074                     ?_abs:	
  5202                           ; 2 bytes @ 0x4
  5203                           
  5204  0074                     ___bmul@multiplier:	
  5205                           ; 2 bytes @ 0x4
  5206                           
  5207  0074                     strlen@a:	
  5208                           ; 1 bytes @ 0x4
  5209                           
  5210  0074                     abs@a:	
  5211                           ; 1 bytes @ 0x4
  5212                           
  5213  0074                     fputc@c:	
  5214                           ; 2 bytes @ 0x4
  5215                           
  5216  0074                     ___aodiv@quotient:	
  5217                           ; 2 bytes @ 0x4
  5218                           
  5219                           
  5220                           ; 8 bytes @ 0x4
  5221  0074                     	ds	1
  5222  0075                     ?_EMC1001_read:
  5223  0075                     Send_D7_D4@address:	
  5224                           ; 1 bytes @ 0x5
  5225                           
  5226  0075                     EMC1001_read@TL:	
  5227                           ; 1 bytes @ 0x5
  5228                           
  5229  0075                     strlen@s:	
  5230                           ; 1 bytes @ 0x5
  5231                           
  5232  0075                     ___lldiv@dividend:	
  5233                           ; 1 bytes @ 0x5
  5234                           
  5235                           
  5236                           ; 4 bytes @ 0x5
  5237  0075                     	ds	1
  5238  0076                     ??_EMC1001_read:
  5239  0076                     ??_abs:	
  5240                           ; 1 bytes @ 0x6
  5241                           
  5242  0076                     Send_D7_D4@datos:	
  5243                           ; 1 bytes @ 0x6
  5244                           
  5245  0076                     fputc@fp:	
  5246                           ; 1 bytes @ 0x6
  5247                           
  5248                           
  5249                           ; 1 bytes @ 0x6
  5250  0076                     	ds	1
  5251  0077                     ??_fputc:
  5252  0077                     ?_lcd_send_byte:	
  5253                           ; 1 bytes @ 0x7
  5254                           
  5255  0077                     lcd_send_byte@n:	
  5256                           ; 1 bytes @ 0x7
  5257                           
  5258                           
  5259                           ; 1 bytes @ 0x7
  5260  0077                     	ds	1
  5261  0078                     ??_lcd_send_byte:
  5262  0078                     EMC1001_read@TH:	
  5263                           ; 1 bytes @ 0x8
  5264                           
  5265                           
  5266                           ; 1 bytes @ 0x8
  5267  0078                     	ds	1
  5268  0079                     ??___lldiv:
  5269                           
  5270                           ; 1 bytes @ 0x9
  5271  0079                     	ds	1
  5272  007A                     lcd_send_byte@address:
  5273  007A                     serial_init@sx:	
  5274                           ; 1 bytes @ 0xA
  5275                           
  5276                           
  5277                           ; 2 bytes @ 0xA
  5278  007A                     	ds	1
  5279  007B                     ?_lcd_gotoxy:
  5280  007B                     lcd_init@i:	
  5281                           ; 1 bytes @ 0xB
  5282                           
  5283  007B                     lcd_gotoxy@y:	
  5284                           ; 1 bytes @ 0xB
  5285                           
  5286                           
  5287                           ; 1 bytes @ 0xB
  5288  007B                     	ds	1
  5289                           
  5290                           	psect	cstackBANK0
  5291  0020                     __pcstackBANK0:
  5292  0020                     ??_lcd_init:
  5293  0020                     ??_lcd_gotoxy:	
  5294                           ; 1 bytes @ 0x0
  5295                           
  5296  0020                     ?_fputs:	
  5297                           ; 1 bytes @ 0x0
  5298                           
  5299  0020                     ?_ctoa:	
  5300                           ; 2 bytes @ 0x0
  5301                           
  5302  0020                     ?___aodiv:	
  5303                           ; 2 bytes @ 0x0
  5304                           
  5305  0020                     ?___aomod:	
  5306                           ; 8 bytes @ 0x0
  5307                           
  5308  0020                     ctoa@c:	
  5309                           ; 8 bytes @ 0x0
  5310                           
  5311  0020                     fputs@fp:	
  5312                           ; 1 bytes @ 0x0
  5313                           
  5314  0020                     ___lldiv@quotient:	
  5315                           ; 1 bytes @ 0x0
  5316                           
  5317  0020                     ___aodiv@divisor:	
  5318                           ; 4 bytes @ 0x0
  5319                           
  5320  0020                     ___aomod@divisor:	
  5321                           ; 8 bytes @ 0x0
  5322                           
  5323                           
  5324                           ; 8 bytes @ 0x0
  5325  0020                     	ds	1
  5326  0021                     ??_fputs:
  5327                           
  5328                           ; 1 bytes @ 0x1
  5329  0021                     	ds	1
  5330  0022                     ??_ctoa:
  5331  0022                     lcd_gotoxy@x:	
  5332                           ; 1 bytes @ 0x2
  5333                           
  5334                           
  5335                           ; 1 bytes @ 0x2
  5336  0022                     	ds	1
  5337  0023                     lcd_gotoxy@address:
  5338                           
  5339                           ; 1 bytes @ 0x3
  5340  0023                     	ds	1
  5341  0024                     ??_lcd_puts:
  5342  0024                     ___lldiv@counter:	
  5343                           ; 1 bytes @ 0x4
  5344                           
  5345  0024                     fputs@c:	
  5346                           ; 1 bytes @ 0x4
  5347                           
  5348                           
  5349                           ; 1 bytes @ 0x4
  5350  0024                     	ds	1
  5351  0025                     ?_serial_init:
  5352  0025                     ctoa@l:	
  5353                           ; 1 bytes @ 0x5
  5354                           
  5355  0025                     fputs@i:	
  5356                           ; 2 bytes @ 0x5
  5357                           
  5358  0025                     serial_init@baudios:	
  5359                           ; 2 bytes @ 0x5
  5360                           
  5361                           
  5362                           ; 4 bytes @ 0x5
  5363  0025                     	ds	1
  5364  0026                     lcd_puts@dato:
  5365                           
  5366                           ; 1 bytes @ 0x6
  5367  0026                     	ds	1
  5368  0027                     fputs@s:
  5369  0027                     ctoa@w:	
  5370                           ; 1 bytes @ 0x7
  5371                           
  5372                           
  5373                           ; 2 bytes @ 0x7
  5374  0027                     	ds	1
  5375  0028                     ?_pad:
  5376  0028                     pad@buf:	
  5377                           ; 2 bytes @ 0x8
  5378                           
  5379  0028                     ___aodiv@dividend:	
  5380                           ; 1 bytes @ 0x8
  5381                           
  5382  0028                     ___aomod@dividend:	
  5383                           ; 8 bytes @ 0x8
  5384                           
  5385                           
  5386                           ; 8 bytes @ 0x8
  5387  0028                     	ds	1
  5388  0029                     ??_serial_init:
  5389  0029                     ctoa@fp:	
  5390                           ; 1 bytes @ 0x9
  5391                           
  5392  0029                     pad@p:	
  5393                           ; 1 bytes @ 0x9
  5394                           
  5395                           
  5396                           ; 2 bytes @ 0x9
  5397  0029                     	ds	2
  5398  002B                     ??_pad:
  5399                           
  5400                           ; 1 bytes @ 0xB
  5401  002B                     	ds	1
  5402  002C                     pad@i:
  5403                           
  5404                           ; 2 bytes @ 0xC
  5405  002C                     	ds	2
  5406  002E                     pad@w:
  5407                           
  5408                           ; 2 bytes @ 0xE
  5409  002E                     	ds	2
  5410  0030                     pad@fp:
  5411                           
  5412                           ; 1 bytes @ 0x10
  5413  0030                     	ds	1
  5414  0031                     ?_dtoa:
  5415  0031                     dtoa@d:	
  5416                           ; 2 bytes @ 0x11
  5417                           
  5418                           
  5419                           ; 8 bytes @ 0x11
  5420  0031                     	ds	8
  5421  0039                     ??_dtoa:
  5422                           
  5423                           ; 1 bytes @ 0x19
  5424  0039                     	ds	3
  5425  003C                     dtoa@fp:
  5426                           
  5427                           ; 1 bytes @ 0x1C
  5428  003C                     	ds	1
  5429  003D                     _dtoa$1013:
  5430                           
  5431                           ; 2 bytes @ 0x1D
  5432  003D                     	ds	2
  5433  003F                     dtoa@p:
  5434                           
  5435                           ; 2 bytes @ 0x1F
  5436  003F                     	ds	2
  5437  0041                     dtoa@w:
  5438                           
  5439                           ; 2 bytes @ 0x21
  5440  0041                     	ds	2
  5441  0043                     dtoa@s:
  5442                           
  5443                           ; 2 bytes @ 0x23
  5444  0043                     	ds	2
  5445  0045                     dtoa@n:
  5446                           
  5447                           ; 8 bytes @ 0x25
  5448  0045                     	ds	8
  5449  004D                     dtoa@i:
  5450                           
  5451                           ; 2 bytes @ 0x2D
  5452  004D                     	ds	2
  5453  004F                     ?_vfpfcnvrt:
  5454  004F                     vfpfcnvrt@fmt:	
  5455                           ; 2 bytes @ 0x2F
  5456                           
  5457                           
  5458                           ; 1 bytes @ 0x2F
  5459  004F                     	ds	1
  5460  0050                     vfpfcnvrt@ap:
  5461                           
  5462                           ; 1 bytes @ 0x30
  5463  0050                     	ds	1
  5464  0051                     ??_vfpfcnvrt:
  5465                           
  5466                           ; 1 bytes @ 0x31
  5467  0051                     	ds	5
  5468  0056                     vfpfcnvrt@ll:
  5469                           
  5470                           ; 8 bytes @ 0x36
  5471  0056                     	ds	8
  5472  005E                     vfpfcnvrt@c:
  5473                           
  5474                           ; 1 bytes @ 0x3E
  5475  005E                     	ds	1
  5476  005F                     vfpfcnvrt@vp:
  5477                           
  5478                           ; 1 bytes @ 0x3F
  5479  005F                     	ds	1
  5480  0060                     vfpfcnvrt@fp:
  5481                           
  5482                           ; 1 bytes @ 0x40
  5483  0060                     	ds	1
  5484  0061                     ?_vfprintf:
  5485  0061                     vfprintf@fmt:	
  5486                           ; 2 bytes @ 0x41
  5487                           
  5488                           
  5489                           ; 2 bytes @ 0x41
  5490  0061                     	ds	2
  5491  0063                     vfprintf@ap:
  5492                           
  5493                           ; 1 bytes @ 0x43
  5494  0063                     	ds	1
  5495  0064                     ??_vfprintf:
  5496                           
  5497                           ; 1 bytes @ 0x44
  5498  0064                     	ds	2
  5499  0066                     vfprintf@fp:
  5500                           
  5501                           ; 1 bytes @ 0x46
  5502  0066                     	ds	1
  5503  0067                     vfprintf@cfmt:
  5504                           
  5505                           ; 2 bytes @ 0x47
  5506  0067                     	ds	2
  5507  0069                     ?_sprintf:
  5508  0069                     ?_printf:	
  5509                           ; 2 bytes @ 0x49
  5510                           
  5511  0069                     sprintf@fmt:	
  5512                           ; 2 bytes @ 0x49
  5513                           
  5514  0069                     printf@fmt:	
  5515                           ; 2 bytes @ 0x49
  5516                           
  5517                           
  5518                           ; 2 bytes @ 0x49
  5519  0069                     	ds	4
  5520  006D                     ??_printf:
  5521                           
  5522                           ; 1 bytes @ 0x4D
  5523  006D                     	ds	1
  5524  006E                     printf@ap:
  5525                           
  5526                           ; 1 bytes @ 0x4E
  5527  006E                     	ds	1
  5528                           
  5529                           	psect	maintext
  5530  05B9                     __pmaintext:	
  5531 ;;
  5532 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  5533 ;;
  5534 ;; *************** function _main *****************
  5535 ;; Defined at:
  5536 ;;		line 40 in file "Main.c"
  5537 ;; Parameters:    Size  Location     Type
  5538 ;;		None
  5539 ;; Auto vars:     Size  Location     Type
  5540 ;;		None
  5541 ;; Return value:  Size  Location     Type
  5542 ;;                  1    wreg      void 
  5543 ;; Registers used:
  5544 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5545 ;; Tracked objects:
  5546 ;;		On entry : B1F/0
  5547 ;;		On exit  : 0/0
  5548 ;;		Unchanged: 0/0
  5549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5552 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5553 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5554 ;;Total ram usage:        2 bytes
  5555 ;; Hardware stack levels required when called: 10
  5556 ;; This function calls:
  5557 ;;		_EMC1001_read
  5558 ;;		_I2C_init
  5559 ;;		_enable_interrupt
  5560 ;;		_lcd_init
  5561 ;;		_lcd_puts
  5562 ;;		_port_init
  5563 ;;		_printf
  5564 ;;		_serial_init
  5565 ;;		_sprintf
  5566 ;;		_teclado_get
  5567 ;;		_teclado_init
  5568 ;; This function is called by:
  5569 ;;		Startup code after reset
  5570 ;; This function uses a non-reentrant model
  5571 ;;
  5572                           
  5573                           
  5574                           ;psect for function _main
  5575  05B9                     _main:
  5576                           
  5577                           ;Main.c: 43:     port_init();
  5578                           
  5579                           ;incstack = 0
  5580                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5581  05B9  318E  2608  3185   	fcall	_port_init
  5582                           
  5583                           ;Main.c: 44:     serial_init(9600);
  5584  05BC  3000               	movlw	0
  5585  05BD  00A8               	movwf	serial_init@baudios+3
  5586  05BE  3000               	movlw	0
  5587  05BF  00A7               	movwf	serial_init@baudios+2
  5588  05C0  3025               	movlw	37
  5589  05C1  00A6               	movwf	serial_init@baudios+1
  5590  05C2  3080               	movlw	128
  5591  05C3  00A5               	movwf	serial_init@baudios
  5592  05C4  318E  26A0  3185   	fcall	_serial_init
  5593                           
  5594                           ;Main.c: 46:     I2C_init();
  5595  05C7  318D  25EE  3185   	fcall	_I2C_init
  5596                           
  5597                           ;Main.c: 47:     teclado_init();
  5598  05CA  318D  2552  3185   	fcall	_teclado_init
  5599                           
  5600                           ;Main.c: 49:     enable_interrupt();
  5601  05CD  318D  253F  3185   	fcall	_enable_interrupt
  5602                           
  5603                           ;Main.c: 52:     lcd_init();
  5604  05D0  3186  269A  3185   	fcall	_lcd_init
  5605                           
  5606                           ;Main.c: 53:     sprintf(buffer,"\fhola mundo\n%i",contador);
  5607  05D3  302A               	movlw	low (STR_1| (0+32768))
  5608  05D4  0020               	movlb	0	; select bank0
  5609  05D5  00E9               	movwf	sprintf@fmt
  5610  05D6  3090               	movlw	high (STR_1| (0+32768))
  5611  05D7  00EA               	movwf	sprintf@fmt+1
  5612  05D8  3000               	movlw	0
  5613  05D9  00EB               	movwf	?_sprintf+2
  5614  05DA  00EC               	movwf	?_sprintf+3
  5615  05DB  3020               	movlw	(low (_buffer| (0+256)))& (0+255)
  5616  05DC  318E  264D  3185   	fcall	_sprintf
  5617                           
  5618                           ;Main.c: 54:     lcd_puts(buffer);
  5619  05DF  3020               	movlw	(low (_buffer| (0+256)))& (0+255)
  5620  05E0  3187  2760  3185   	fcall	_lcd_puts
  5621                           
  5622                           ;Main.c: 57:     printf("Holaaa\n\n");
  5623  05E3  3039               	movlw	low (STR_2| (0+32768))
  5624  05E4  00E9               	movwf	printf@fmt
  5625  05E5  3090               	movlw	high (STR_2| (0+32768))
  5626  05E6  00EA               	movwf	printf@fmt+1
  5627  05E7  318D  2587  3185   	fcall	_printf
  5628                           
  5629                           ;Main.c: 58:     _delay((unsigned long)((10)*(32000000UL/4000.0)));
  5630  05EA  3068               	movlw	104
  5631  05EB  0021               	movlb	1	; select bank1
  5632  05EC  00E4               	movwf	??_main^(0+128)
  5633  05ED  30E4               	movlw	228
  5634  05EE                     u2847:
  5635  05EE  0B89               	decfsz	9,f
  5636  05EF  2DEE               	goto	u2847
  5637  05F0  0BE4               	decfsz	??_main^(0+128),f
  5638  05F1  2DEE               	goto	u2847
  5639  05F2  0000               	nop
  5640  05F3                     l3216:
  5641                           
  5642                           ;Main.c: 61:     {;Main.c: 72:         if(counts != countsAnterior){
  5643  05F3  0020               	movlb	0	; select bank0
  5644  05F4  086F               	movf	_counts,w
  5645  05F5  0021               	movlb	1	; select bank1
  5646  05F6  0639               	xorwf	_countsAnterior^(0+128),w
  5647  05F7  1903               	skipnz
  5648  05F8  2E12               	goto	l3222
  5649                           
  5650                           ;Main.c: 73:             countsAnterior = counts;
  5651  05F9  0020               	movlb	0	; select bank0
  5652  05FA  086F               	movf	_counts,w
  5653  05FB  0021               	movlb	1	; select bank1
  5654  05FC  00E4               	movwf	??_main^(0+128)
  5655  05FD  0864               	movf	??_main^(0+128),w
  5656  05FE  00B9               	movwf	_countsAnterior^(0+128)
  5657                           
  5658                           ;Main.c: 74:             printf("%d\n",counts);
  5659  05FF  3046               	movlw	low ((STR_5+4)| (0+32768))
  5660  0600  0020               	movlb	0	; select bank0
  5661  0601  00E9               	movwf	printf@fmt
  5662  0602  3090               	movlw	high ((STR_5+4)| (0+32768))
  5663  0603  00EA               	movwf	printf@fmt+1
  5664  0604  086F               	movf	_counts,w
  5665  0605  0021               	movlb	1	; select bank1
  5666  0606  00E4               	movwf	??_main^(0+128)
  5667  0607  01E5               	clrf	(??_main^(0+128)+1)
  5668  0608  0864               	movf	??_main^(0+128),w
  5669  0609  0020               	movlb	0	; select bank0
  5670  060A  00EB               	movwf	?_printf+2
  5671  060B  0021               	movlb	1	; select bank1
  5672  060C  0865               	movf	(??_main+1)^(0+128),w
  5673  060D  0020               	movlb	0	; select bank0
  5674  060E  00EC               	movwf	?_printf+3
  5675  060F  318D  2587  3185   	fcall	_printf
  5676  0612                     l3222:
  5677                           
  5678                           ;Main.c: 77:         LATA = LATA & ~(1<<3);
  5679  0612  0020               	movlb	0	; select bank0
  5680  0613  0816               	movf	22,w	;volatile
  5681  0614  39F7               	andlw	247
  5682  0615  0096               	movwf	22	;volatile
  5683                           
  5684                           ;Main.c: 78:         _delay((unsigned long)((50)*(32000000UL/4000.0)));
  5685  0616  3003               	movlw	3
  5686  0617  0021               	movlb	1	; select bank1
  5687  0618  00E5               	movwf	(??_main^(0+128)+1)
  5688  0619  3008               	movlw	8
  5689  061A  00E4               	movwf	??_main^(0+128)
  5690  061B  3077               	movlw	119
  5691  061C                     u2857:
  5692  061C  0B89               	decfsz	9,f
  5693  061D  2E1C               	goto	u2857
  5694  061E  0BE4               	decfsz	??_main^(0+128),f
  5695  061F  2E1C               	goto	u2857
  5696  0620  0BE5               	decfsz	(??_main^(0+128)+1),f
  5697  0621  2E1C               	goto	u2857
  5698                           
  5699                           ;Main.c: 79:         LATA = LATA | (1<<3);
  5700  0622  0020               	movlb	0	; select bank0
  5701  0623  0816               	movf	22,w	;volatile
  5702  0624  3808               	iorlw	8
  5703  0625  0096               	movwf	22	;volatile
  5704                           
  5705                           ;Main.c: 80:         _delay((unsigned long)((50)*(32000000UL/4000.0)));
  5706  0626  3003               	movlw	3
  5707  0627  0021               	movlb	1	; select bank1
  5708  0628  00E5               	movwf	(??_main^(0+128)+1)
  5709  0629  3008               	movlw	8
  5710  062A  00E4               	movwf	??_main^(0+128)
  5711  062B  3077               	movlw	119
  5712  062C                     u2867:
  5713  062C  0B89               	decfsz	9,f
  5714  062D  2E2C               	goto	u2867
  5715  062E  0BE4               	decfsz	??_main^(0+128),f
  5716  062F  2E2C               	goto	u2867
  5717  0630  0BE5               	decfsz	(??_main^(0+128)+1),f
  5718  0631  2E2C               	goto	u2867
  5719  0632  2DF3               	goto	l3216
  5720  0633                     __end_of_main:
  5721                           
  5722                           	psect	text1
  5723  0D52                     __ptext1:	
  5724 ;; *************** function _teclado_init *****************
  5725 ;; Defined at:
  5726 ;;		line 5 in file "teclado.c"
  5727 ;; Parameters:    Size  Location     Type
  5728 ;;		None
  5729 ;; Auto vars:     Size  Location     Type
  5730 ;;		None
  5731 ;; Return value:  Size  Location     Type
  5732 ;;                  1    wreg      void 
  5733 ;; Registers used:
  5734 ;;		wreg, status,2
  5735 ;; Tracked objects:
  5736 ;;		On entry : B1F/3
  5737 ;;		On exit  : B1F/1E
  5738 ;;		Unchanged: B00/0
  5739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5744 ;;Total ram usage:        0 bytes
  5745 ;; Hardware stack levels used: 1
  5746 ;; Hardware stack levels required when called: 1
  5747 ;; This function calls:
  5748 ;;		Nothing
  5749 ;; This function is called by:
  5750 ;;		_main
  5751 ;; This function uses a non-reentrant model
  5752 ;;
  5753                           
  5754                           
  5755                           ;psect for function _teclado_init
  5756  0D52                     _teclado_init:
  5757                           
  5758                           ;teclado.c: 6:     PORTB = 0x00;
  5759                           
  5760                           ;incstack = 0
  5761                           ; Regs used in _teclado_init: [wreg+status,2]
  5762  0D52  0020               	movlb	0	; select bank0
  5763  0D53  018D               	clrf	13	;volatile
  5764                           
  5765                           ;teclado.c: 7:     LATA = 0;
  5766  0D54  0196               	clrf	22	;volatile
  5767                           
  5768                           ;teclado.c: 8:     TRISB = 0b01111111;
  5769  0D55  307F               	movlw	127
  5770  0D56  0092               	movwf	18	;volatile
  5771                           
  5772                           ;teclado.c: 10:     TRISA = 0b11110000;
  5773  0D57  30F0               	movlw	240
  5774  0D58  0091               	movwf	17	;volatile
  5775                           
  5776                           ;teclado.c: 13:     WPUB = 0b00011110;
  5777  0D59  301E               	movlw	30
  5778  0D5A  003E               	movlb	30	; select bank30
  5779  0D5B  00C4               	movwf	68	;volatile
  5780  0D5C  0008               	return
  5781  0D5D                     __end_of_teclado_init:
  5782                           
  5783                           	psect	text2
  5784  0029                     __ptext2:	
  5785 ;; *************** function _teclado_get *****************
  5786 ;; Defined at:
  5787 ;;		line 17 in file "teclado.c"
  5788 ;; Parameters:    Size  Location     Type
  5789 ;;		None
  5790 ;; Auto vars:     Size  Location     Type
  5791 ;;		None
  5792 ;; Return value:  Size  Location     Type
  5793 ;;                  1    wreg      unsigned char 
  5794 ;; Registers used:
  5795 ;;		wreg
  5796 ;; Tracked objects:
  5797 ;;		On entry : 0/0
  5798 ;;		On exit  : 1F/0
  5799 ;;		Unchanged: 0/0
  5800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5803 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5804 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5805 ;;Total ram usage:        2 bytes
  5806 ;; Hardware stack levels used: 1
  5807 ;; Hardware stack levels required when called: 1
  5808 ;; This function calls:
  5809 ;;		Nothing
  5810 ;; This function is called by:
  5811 ;;		_main
  5812 ;; This function uses a non-reentrant model
  5813 ;;
  5814                           
  5815                           
  5816                           ;psect for function _teclado_get
  5817  0029                     _teclado_get:
  5818                           
  5819                           ;teclado.c: 18:     LATAbits.LATA0 = 0; LATAbits.LATA1 = 1; LATAbits.LATA2 = 1; LATAbits
      +                          .LATA3 = 1;
  5820                           
  5821                           ;incstack = 0
  5822                           ; Regs used in _teclado_get: [wreg]
  5823  0029  0020               	movlb	0	; select bank0
  5824  002A  1016               	bcf	22,0	;volatile
  5825  002B  1496               	bsf	22,1	;volatile
  5826  002C  1516               	bsf	22,2	;volatile
  5827  002D  1596               	bsf	22,3	;volatile
  5828                           
  5829                           ;teclado.c: 19:             _delay((unsigned long)((10)*(32000000UL/4000000.0)));
  5830  002E  301A               	movlw	26
  5831  002F                     u2877:
  5832  002F  0B89               	decfsz	9,f
  5833  0030  282F               	goto	u2877
  5834  0031  3200               	nop2
  5835                           
  5836                           ;teclado.c: 20:             if (PORTBbits.RB1 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB1==0); return '1'; }
  5837  0032  0020               	movlb	0	; select bank0
  5838  0033  188D               	btfsc	13,1	;volatile
  5839  0034  2846               	goto	l368
  5840  0035  3005               	movlw	5
  5841  0036  00F2               	movwf	??_teclado_get+1
  5842  0037  300F               	movlw	15
  5843  0038  00F1               	movwf	??_teclado_get
  5844  0039  30F1               	movlw	241
  5845  003A                     u2887:
  5846  003A  0B89               	decfsz	9,f
  5847  003B  283A               	goto	u2887
  5848  003C  0BF1               	decfsz	??_teclado_get,f
  5849  003D  283A               	goto	u2887
  5850  003E  0BF2               	decfsz	??_teclado_get+1,f
  5851  003F  283A               	goto	u2887
  5852  0040  0000               	nop
  5853  0041                     l369:
  5854  0041  0020               	movlb	0	; select bank0
  5855  0042  1C8D               	btfss	13,1	;volatile
  5856  0043  2841               	goto	l369
  5857  0044  3031               	movlw	49
  5858  0045  0008               	return
  5859  0046                     l368:
  5860                           
  5861                           ;teclado.c: 21:             if (PORTBbits.RB2 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB2==0); return '2'; }
  5862  0046  190D               	btfsc	13,2	;volatile
  5863  0047  2859               	goto	l373
  5864  0048  3005               	movlw	5
  5865  0049  00F2               	movwf	??_teclado_get+1
  5866  004A  300F               	movlw	15
  5867  004B  00F1               	movwf	??_teclado_get
  5868  004C  30F1               	movlw	241
  5869  004D                     u2897:
  5870  004D  0B89               	decfsz	9,f
  5871  004E  284D               	goto	u2897
  5872  004F  0BF1               	decfsz	??_teclado_get,f
  5873  0050  284D               	goto	u2897
  5874  0051  0BF2               	decfsz	??_teclado_get+1,f
  5875  0052  284D               	goto	u2897
  5876  0053  0000               	nop
  5877  0054                     l374:
  5878  0054  0020               	movlb	0	; select bank0
  5879  0055  1D0D               	btfss	13,2	;volatile
  5880  0056  2854               	goto	l374
  5881  0057  3032               	movlw	50
  5882  0058  0008               	return
  5883  0059                     l373:
  5884                           
  5885                           ;teclado.c: 22:             if (PORTBbits.RB3 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB3==0); return '3'; }
  5886  0059  198D               	btfsc	13,3	;volatile
  5887  005A  286C               	goto	l377
  5888  005B  3005               	movlw	5
  5889  005C  00F2               	movwf	??_teclado_get+1
  5890  005D  300F               	movlw	15
  5891  005E  00F1               	movwf	??_teclado_get
  5892  005F  30F1               	movlw	241
  5893  0060                     u2907:
  5894  0060  0B89               	decfsz	9,f
  5895  0061  2860               	goto	u2907
  5896  0062  0BF1               	decfsz	??_teclado_get,f
  5897  0063  2860               	goto	u2907
  5898  0064  0BF2               	decfsz	??_teclado_get+1,f
  5899  0065  2860               	goto	u2907
  5900  0066  0000               	nop
  5901  0067                     l378:
  5902  0067  0020               	movlb	0	; select bank0
  5903  0068  1D8D               	btfss	13,3	;volatile
  5904  0069  2867               	goto	l378
  5905  006A  3033               	movlw	51
  5906  006B  0008               	return
  5907  006C                     l377:
  5908                           
  5909                           ;teclado.c: 23:             if (PORTBbits.RB4 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB4==0); return 'A'; }
  5910  006C  1A0D               	btfsc	13,4	;volatile
  5911  006D  287F               	goto	l381
  5912  006E  3005               	movlw	5
  5913  006F  00F2               	movwf	??_teclado_get+1
  5914  0070  300F               	movlw	15
  5915  0071  00F1               	movwf	??_teclado_get
  5916  0072  30F1               	movlw	241
  5917  0073                     u2917:
  5918  0073  0B89               	decfsz	9,f
  5919  0074  2873               	goto	u2917
  5920  0075  0BF1               	decfsz	??_teclado_get,f
  5921  0076  2873               	goto	u2917
  5922  0077  0BF2               	decfsz	??_teclado_get+1,f
  5923  0078  2873               	goto	u2917
  5924  0079  0000               	nop
  5925  007A                     l382:
  5926  007A  0020               	movlb	0	; select bank0
  5927  007B  1E0D               	btfss	13,4	;volatile
  5928  007C  287A               	goto	l382
  5929  007D  3041               	movlw	65
  5930  007E  0008               	return
  5931  007F                     l381:
  5932                           
  5933                           ;teclado.c: 25:             LATAbits.LATA0 = 1; LATAbits.LATA1 = 0; LATAbits.LATA2 = 1; 
      +                          LATAbits.LATA3 = 1;
  5934  007F  1416               	bsf	22,0	;volatile
  5935  0080  1096               	bcf	22,1	;volatile
  5936  0081  1516               	bsf	22,2	;volatile
  5937  0082  1596               	bsf	22,3	;volatile
  5938                           
  5939                           ;teclado.c: 27:             if (PORTBbits.RB1 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB1==0); return '4'; }
  5940  0083  188D               	btfsc	13,1	;volatile
  5941  0084  2896               	goto	l385
  5942  0085  3005               	movlw	5
  5943  0086  00F2               	movwf	??_teclado_get+1
  5944  0087  300F               	movlw	15
  5945  0088  00F1               	movwf	??_teclado_get
  5946  0089  30F1               	movlw	241
  5947  008A                     u2927:
  5948  008A  0B89               	decfsz	9,f
  5949  008B  288A               	goto	u2927
  5950  008C  0BF1               	decfsz	??_teclado_get,f
  5951  008D  288A               	goto	u2927
  5952  008E  0BF2               	decfsz	??_teclado_get+1,f
  5953  008F  288A               	goto	u2927
  5954  0090  0000               	nop
  5955  0091                     l386:
  5956  0091  0020               	movlb	0	; select bank0
  5957  0092  1C8D               	btfss	13,1	;volatile
  5958  0093  2891               	goto	l386
  5959  0094  3034               	movlw	52
  5960  0095  0008               	return
  5961  0096                     l385:
  5962                           
  5963                           ;teclado.c: 28:             if (PORTBbits.RB2 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB2==0); return '5'; }
  5964  0096  190D               	btfsc	13,2	;volatile
  5965  0097  28A9               	goto	l389
  5966  0098  3005               	movlw	5
  5967  0099  00F2               	movwf	??_teclado_get+1
  5968  009A  300F               	movlw	15
  5969  009B  00F1               	movwf	??_teclado_get
  5970  009C  30F1               	movlw	241
  5971  009D                     u2937:
  5972  009D  0B89               	decfsz	9,f
  5973  009E  289D               	goto	u2937
  5974  009F  0BF1               	decfsz	??_teclado_get,f
  5975  00A0  289D               	goto	u2937
  5976  00A1  0BF2               	decfsz	??_teclado_get+1,f
  5977  00A2  289D               	goto	u2937
  5978  00A3  0000               	nop
  5979  00A4                     l390:
  5980  00A4  0020               	movlb	0	; select bank0
  5981  00A5  1D0D               	btfss	13,2	;volatile
  5982  00A6  28A4               	goto	l390
  5983  00A7  3035               	movlw	53
  5984  00A8  0008               	return
  5985  00A9                     l389:
  5986                           
  5987                           ;teclado.c: 29:             if (PORTBbits.RB3 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB3==0); return '6'; }
  5988  00A9  198D               	btfsc	13,3	;volatile
  5989  00AA  28BC               	goto	l393
  5990  00AB  3005               	movlw	5
  5991  00AC  00F2               	movwf	??_teclado_get+1
  5992  00AD  300F               	movlw	15
  5993  00AE  00F1               	movwf	??_teclado_get
  5994  00AF  30F1               	movlw	241
  5995  00B0                     u2947:
  5996  00B0  0B89               	decfsz	9,f
  5997  00B1  28B0               	goto	u2947
  5998  00B2  0BF1               	decfsz	??_teclado_get,f
  5999  00B3  28B0               	goto	u2947
  6000  00B4  0BF2               	decfsz	??_teclado_get+1,f
  6001  00B5  28B0               	goto	u2947
  6002  00B6  0000               	nop
  6003  00B7                     l394:
  6004  00B7  0020               	movlb	0	; select bank0
  6005  00B8  1D8D               	btfss	13,3	;volatile
  6006  00B9  28B7               	goto	l394
  6007  00BA  3036               	movlw	54
  6008  00BB  0008               	return
  6009  00BC                     l393:
  6010                           
  6011                           ;teclado.c: 30:             if (PORTBbits.RB4 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB4==0); return 'B'; }
  6012  00BC  1A0D               	btfsc	13,4	;volatile
  6013  00BD  28CF               	goto	l397
  6014  00BE  3005               	movlw	5
  6015  00BF  00F2               	movwf	??_teclado_get+1
  6016  00C0  300F               	movlw	15
  6017  00C1  00F1               	movwf	??_teclado_get
  6018  00C2  30F1               	movlw	241
  6019  00C3                     u2957:
  6020  00C3  0B89               	decfsz	9,f
  6021  00C4  28C3               	goto	u2957
  6022  00C5  0BF1               	decfsz	??_teclado_get,f
  6023  00C6  28C3               	goto	u2957
  6024  00C7  0BF2               	decfsz	??_teclado_get+1,f
  6025  00C8  28C3               	goto	u2957
  6026  00C9  0000               	nop
  6027  00CA                     l398:
  6028  00CA  0020               	movlb	0	; select bank0
  6029  00CB  1E0D               	btfss	13,4	;volatile
  6030  00CC  28CA               	goto	l398
  6031  00CD  3042               	movlw	66
  6032  00CE  0008               	return
  6033  00CF                     l397:
  6034                           
  6035                           ;teclado.c: 32:             LATAbits.LATA0 = 1; LATAbits.LATA1 = 1; LATAbits.LATA2 = 0; 
      +                          LATAbits.LATA3 = 1;
  6036  00CF  1416               	bsf	22,0	;volatile
  6037  00D0  1496               	bsf	22,1	;volatile
  6038  00D1  1116               	bcf	22,2	;volatile
  6039  00D2  1596               	bsf	22,3	;volatile
  6040                           
  6041                           ;teclado.c: 34:             if (PORTBbits.RB1 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB1==0); return '7'; }
  6042  00D3  188D               	btfsc	13,1	;volatile
  6043  00D4  28E6               	goto	l401
  6044  00D5  3005               	movlw	5
  6045  00D6  00F2               	movwf	??_teclado_get+1
  6046  00D7  300F               	movlw	15
  6047  00D8  00F1               	movwf	??_teclado_get
  6048  00D9  30F1               	movlw	241
  6049  00DA                     u2967:
  6050  00DA  0B89               	decfsz	9,f
  6051  00DB  28DA               	goto	u2967
  6052  00DC  0BF1               	decfsz	??_teclado_get,f
  6053  00DD  28DA               	goto	u2967
  6054  00DE  0BF2               	decfsz	??_teclado_get+1,f
  6055  00DF  28DA               	goto	u2967
  6056  00E0  0000               	nop
  6057  00E1                     l402:
  6058  00E1  0020               	movlb	0	; select bank0
  6059  00E2  1C8D               	btfss	13,1	;volatile
  6060  00E3  28E1               	goto	l402
  6061  00E4  3037               	movlw	55
  6062  00E5  0008               	return
  6063  00E6                     l401:
  6064                           
  6065                           ;teclado.c: 35:             if (PORTBbits.RB2 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB2==0); return '8'; }
  6066  00E6  190D               	btfsc	13,2	;volatile
  6067  00E7  28F9               	goto	l405
  6068  00E8  3005               	movlw	5
  6069  00E9  00F2               	movwf	??_teclado_get+1
  6070  00EA  300F               	movlw	15
  6071  00EB  00F1               	movwf	??_teclado_get
  6072  00EC  30F1               	movlw	241
  6073  00ED                     u2977:
  6074  00ED  0B89               	decfsz	9,f
  6075  00EE  28ED               	goto	u2977
  6076  00EF  0BF1               	decfsz	??_teclado_get,f
  6077  00F0  28ED               	goto	u2977
  6078  00F1  0BF2               	decfsz	??_teclado_get+1,f
  6079  00F2  28ED               	goto	u2977
  6080  00F3  0000               	nop
  6081  00F4                     l406:
  6082  00F4  0020               	movlb	0	; select bank0
  6083  00F5  1D0D               	btfss	13,2	;volatile
  6084  00F6  28F4               	goto	l406
  6085  00F7  3038               	movlw	56
  6086  00F8  0008               	return
  6087  00F9                     l405:
  6088                           
  6089                           ;teclado.c: 36:             if (PORTBbits.RB3 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB3==0); return '9'; }
  6090  00F9  198D               	btfsc	13,3	;volatile
  6091  00FA  290C               	goto	l409
  6092  00FB  3005               	movlw	5
  6093  00FC  00F2               	movwf	??_teclado_get+1
  6094  00FD  300F               	movlw	15
  6095  00FE  00F1               	movwf	??_teclado_get
  6096  00FF  30F1               	movlw	241
  6097  0100                     u2987:
  6098  0100  0B89               	decfsz	9,f
  6099  0101  2900               	goto	u2987
  6100  0102  0BF1               	decfsz	??_teclado_get,f
  6101  0103  2900               	goto	u2987
  6102  0104  0BF2               	decfsz	??_teclado_get+1,f
  6103  0105  2900               	goto	u2987
  6104  0106  0000               	nop
  6105  0107                     l410:
  6106  0107  0020               	movlb	0	; select bank0
  6107  0108  1D8D               	btfss	13,3	;volatile
  6108  0109  2907               	goto	l410
  6109  010A  3039               	movlw	57
  6110  010B  0008               	return
  6111  010C                     l409:
  6112                           
  6113                           ;teclado.c: 37:             if (PORTBbits.RB4 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB4==0); return 'C'; }
  6114  010C  1A0D               	btfsc	13,4	;volatile
  6115  010D  291F               	goto	l413
  6116  010E  3005               	movlw	5
  6117  010F  00F2               	movwf	??_teclado_get+1
  6118  0110  300F               	movlw	15
  6119  0111  00F1               	movwf	??_teclado_get
  6120  0112  30F1               	movlw	241
  6121  0113                     u2997:
  6122  0113  0B89               	decfsz	9,f
  6123  0114  2913               	goto	u2997
  6124  0115  0BF1               	decfsz	??_teclado_get,f
  6125  0116  2913               	goto	u2997
  6126  0117  0BF2               	decfsz	??_teclado_get+1,f
  6127  0118  2913               	goto	u2997
  6128  0119  0000               	nop
  6129  011A                     l414:
  6130  011A  0020               	movlb	0	; select bank0
  6131  011B  1E0D               	btfss	13,4	;volatile
  6132  011C  291A               	goto	l414
  6133  011D  3043               	movlw	67
  6134  011E  0008               	return
  6135  011F                     l413:
  6136                           
  6137                           ;teclado.c: 39:             LATAbits.LATA0 = 1; LATAbits.LATA1 = 1; LATAbits.LATA2 = 1; 
      +                          LATAbits.LATA3 = 0;
  6138  011F  1416               	bsf	22,0	;volatile
  6139  0120  1496               	bsf	22,1	;volatile
  6140  0121  1516               	bsf	22,2	;volatile
  6141  0122  1196               	bcf	22,3	;volatile
  6142                           
  6143                           ;teclado.c: 40:             _delay((unsigned long)((10)*(32000000UL/4000000.0)));
  6144  0123  301A               	movlw	26
  6145  0124                     u3007:
  6146  0124  0B89               	decfsz	9,f
  6147  0125  2924               	goto	u3007
  6148  0126  3200               	nop2
  6149                           
  6150                           ;teclado.c: 41:             if (PORTBbits.RB1 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB1==0); return '*'; }
  6151  0127  0020               	movlb	0	; select bank0
  6152  0128  188D               	btfsc	13,1	;volatile
  6153  0129  293B               	goto	l417
  6154  012A  3005               	movlw	5
  6155  012B  00F2               	movwf	??_teclado_get+1
  6156  012C  300F               	movlw	15
  6157  012D  00F1               	movwf	??_teclado_get
  6158  012E  30F1               	movlw	241
  6159  012F                     u3017:
  6160  012F  0B89               	decfsz	9,f
  6161  0130  292F               	goto	u3017
  6162  0131  0BF1               	decfsz	??_teclado_get,f
  6163  0132  292F               	goto	u3017
  6164  0133  0BF2               	decfsz	??_teclado_get+1,f
  6165  0134  292F               	goto	u3017
  6166  0135  0000               	nop
  6167  0136                     l418:
  6168  0136  0020               	movlb	0	; select bank0
  6169  0137  1C8D               	btfss	13,1	;volatile
  6170  0138  2936               	goto	l418
  6171  0139  302A               	movlw	42
  6172  013A  0008               	return
  6173  013B                     l417:
  6174                           
  6175                           ;teclado.c: 42:             if (PORTBbits.RB2 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB2==0); return '0'; }
  6176  013B  190D               	btfsc	13,2	;volatile
  6177  013C  294E               	goto	l421
  6178  013D  3005               	movlw	5
  6179  013E  00F2               	movwf	??_teclado_get+1
  6180  013F  300F               	movlw	15
  6181  0140  00F1               	movwf	??_teclado_get
  6182  0141  30F1               	movlw	241
  6183  0142                     u3027:
  6184  0142  0B89               	decfsz	9,f
  6185  0143  2942               	goto	u3027
  6186  0144  0BF1               	decfsz	??_teclado_get,f
  6187  0145  2942               	goto	u3027
  6188  0146  0BF2               	decfsz	??_teclado_get+1,f
  6189  0147  2942               	goto	u3027
  6190  0148  0000               	nop
  6191  0149                     l422:
  6192  0149  0020               	movlb	0	; select bank0
  6193  014A  1D0D               	btfss	13,2	;volatile
  6194  014B  2949               	goto	l422
  6195  014C  3030               	movlw	48
  6196  014D  0008               	return
  6197  014E                     l421:
  6198                           
  6199                           ;teclado.c: 43:             if (PORTBbits.RB3 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB3==0); return '#'; }
  6200  014E  198D               	btfsc	13,3	;volatile
  6201  014F  2961               	goto	l425
  6202  0150  3005               	movlw	5
  6203  0151  00F2               	movwf	??_teclado_get+1
  6204  0152  300F               	movlw	15
  6205  0153  00F1               	movwf	??_teclado_get
  6206  0154  30F1               	movlw	241
  6207  0155                     u3037:
  6208  0155  0B89               	decfsz	9,f
  6209  0156  2955               	goto	u3037
  6210  0157  0BF1               	decfsz	??_teclado_get,f
  6211  0158  2955               	goto	u3037
  6212  0159  0BF2               	decfsz	??_teclado_get+1,f
  6213  015A  2955               	goto	u3037
  6214  015B  0000               	nop
  6215  015C                     l426:
  6216  015C  0020               	movlb	0	; select bank0
  6217  015D  1D8D               	btfss	13,3	;volatile
  6218  015E  295C               	goto	l426
  6219  015F  3023               	movlw	35
  6220  0160  0008               	return
  6221  0161                     l425:
  6222                           
  6223                           ;teclado.c: 44:             if (PORTBbits.RB4 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB4==0); return 'D'; }
  6224  0161  1A0D               	btfsc	13,4	;volatile
  6225  0162  2974               	goto	l2732
  6226  0163  3005               	movlw	5
  6227  0164  00F2               	movwf	??_teclado_get+1
  6228  0165  300F               	movlw	15
  6229  0166  00F1               	movwf	??_teclado_get
  6230  0167  30F1               	movlw	241
  6231  0168                     u3047:
  6232  0168  0B89               	decfsz	9,f
  6233  0169  2968               	goto	u3047
  6234  016A  0BF1               	decfsz	??_teclado_get,f
  6235  016B  2968               	goto	u3047
  6236  016C  0BF2               	decfsz	??_teclado_get+1,f
  6237  016D  2968               	goto	u3047
  6238  016E  0000               	nop
  6239  016F                     l430:
  6240  016F  0020               	movlb	0	; select bank0
  6241  0170  1E0D               	btfss	13,4	;volatile
  6242  0171  296F               	goto	l430
  6243  0172  3044               	movlw	68
  6244  0173  0008               	return
  6245  0174                     l2732:
  6246                           
  6247                           ;teclado.c: 46:     return 0;
  6248  0174  3000               	movlw	0
  6249  0175  0008               	return
  6250  0176                     __end_of_teclado_get:
  6251                           
  6252                           	psect	text3
  6253  0E4D                     __ptext3:	
  6254 ;; *************** function _sprintf *****************
  6255 ;; Defined at:
  6256 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  6257 ;; Parameters:    Size  Location     Type
  6258 ;;  s               1    wreg     PTR unsigned char 
  6259 ;;		 -> buffer(50), 
  6260 ;;  fmt             2   73[BANK0 ] PTR const unsigned char 
  6261 ;;		 -> STR_5(8), STR_4(7), STR_1(15), 
  6262 ;; Auto vars:     Size  Location     Type
  6263 ;;  s               1    1[BANK1 ] PTR unsigned char 
  6264 ;;		 -> buffer(50), 
  6265 ;;  f               5    3[BANK1 ] struct _IO_FILE
  6266 ;;  ret             2    0        int 
  6267 ;;  ap              1    2[BANK1 ] PTR void [1]
  6268 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6269 ;; Return value:  Size  Location     Type
  6270 ;;                  2   73[BANK0 ] int 
  6271 ;; Registers used:
  6272 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6273 ;; Tracked objects:
  6274 ;;		On entry : 1F/0
  6275 ;;		On exit  : 1F/1
  6276 ;;		Unchanged: 0/0
  6277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6278 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6279 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  6280 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6281 ;;      Totals:         0       6       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6282 ;;Total ram usage:       14 bytes
  6283 ;; Hardware stack levels used: 1
  6284 ;; Hardware stack levels required when called: 9
  6285 ;; This function calls:
  6286 ;;		_vfprintf
  6287 ;; This function is called by:
  6288 ;;		_main
  6289 ;; This function uses a non-reentrant model
  6290 ;;
  6291                           
  6292                           
  6293                           ;psect for function _sprintf
  6294  0E4D                     _sprintf:
  6295                           
  6296                           ;incstack = 0
  6297                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6298                           ;sprintf@s stored from wreg
  6299  0E4D  0021               	movlb	1	; select bank1
  6300  0E4E  00DD               	movwf	sprintf@s^(0+128)
  6301  0E4F  306B               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  6302  0E50  00DC               	movwf	??_sprintf^(0+128)
  6303  0E51  085C               	movf	??_sprintf^(0+128),w
  6304  0E52  00DE               	movwf	sprintf@ap^(0+128)
  6305  0E53  085D               	movf	sprintf@s^(0+128),w
  6306  0E54  00DC               	movwf	??_sprintf^(0+128)
  6307  0E55  085C               	movf	??_sprintf^(0+128),w
  6308  0E56  00DF               	movwf	sprintf@f^(0+128)
  6309  0E57  01E0               	clrf	(sprintf@f^(0+128)+1)
  6310  0E58  01E1               	clrf	((sprintf@f+1)^(0+128)+1)
  6311  0E59  01E2               	clrf	(sprintf@f^(0+128)+3)
  6312  0E5A  01E3               	clrf	((sprintf@f+1)^(0+128)+3)
  6313  0E5B  0020               	movlb	0	; select bank0
  6314  0E5C  086A               	movf	sprintf@fmt+1,w
  6315  0E5D  00E2               	movwf	vfprintf@fmt+1
  6316  0E5E  0869               	movf	sprintf@fmt,w
  6317  0E5F  00E1               	movwf	vfprintf@fmt
  6318  0E60  30DE               	movlw	(low (sprintf@ap| 0))& (0+255)
  6319  0E61  0021               	movlb	1	; select bank1
  6320  0E62  00DC               	movwf	??_sprintf^(0+128)
  6321  0E63  085C               	movf	??_sprintf^(0+128),w
  6322  0E64  0020               	movlb	0	; select bank0
  6323  0E65  00E3               	movwf	vfprintf@ap
  6324  0E66  30DF               	movlw	(low (sprintf@f| 0))& (0+255)
  6325  0E67  318E  2673         	fcall	_vfprintf
  6326  0E69  0021               	movlb	1	; select bank1
  6327  0E6A  0860               	movf	(sprintf@f^(0+128)+1),w
  6328  0E6B  075D               	addwf	sprintf@s^(0+128),w
  6329  0E6C  00DC               	movwf	??_sprintf^(0+128)
  6330  0E6D  085C               	movf	??_sprintf^(0+128),w
  6331  0E6E  0086               	movwf	6
  6332  0E6F  3001               	movlw	1	; select bank2/3
  6333  0E70  0087               	movwf	7
  6334  0E71  0181               	clrf	1
  6335  0E72  0008               	return
  6336  0E73                     __end_of_sprintf:
  6337                           
  6338                           	psect	text4
  6339  0EA0                     __ptext4:	
  6340 ;; *************** function _serial_init *****************
  6341 ;; Defined at:
  6342 ;;		line 3 in file "uart.c"
  6343 ;; Parameters:    Size  Location     Type
  6344 ;;  baudios         4    5[BANK0 ] unsigned long 
  6345 ;; Auto vars:     Size  Location     Type
  6346 ;;  sx              2   10[COMMON] unsigned short 
  6347 ;; Return value:  Size  Location     Type
  6348 ;;                  1    wreg      void 
  6349 ;; Registers used:
  6350 ;;		wreg, status,2, status,0, pclath, cstack
  6351 ;; Tracked objects:
  6352 ;;		On entry : B1F/0
  6353 ;;		On exit  : B1F/1D
  6354 ;;		Unchanged: B00/0
  6355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6356 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6357 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6358 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6359 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6360 ;;Total ram usage:       10 bytes
  6361 ;; Hardware stack levels used: 1
  6362 ;; Hardware stack levels required when called: 2
  6363 ;; This function calls:
  6364 ;;		___lldiv
  6365 ;; This function is called by:
  6366 ;;		_main
  6367 ;; This function uses a non-reentrant model
  6368 ;;
  6369                           
  6370                           
  6371                           ;psect for function _serial_init
  6372  0EA0                     _serial_init:
  6373                           
  6374                           ;uart.c: 4:     uint16_t sx;;uart.c: 7:     BAUD1CON = 0x08;
  6375                           
  6376                           ;incstack = 0
  6377                           ; Regs used in _serial_init: [wreg+status,2+status,0+pclath+cstack]
  6378  0EA0  3008               	movlw	8
  6379  0EA1  0022               	movlb	2	; select bank2
  6380  0EA2  009F               	movwf	31	;volatile
  6381                           
  6382                           ;uart.c: 9:     RC1STA = 0b10010000;
  6383  0EA3  3090               	movlw	144
  6384  0EA4  009D               	movwf	29	;volatile
  6385                           
  6386                           ;uart.c: 15:     TX1STA = 0b00100100;
  6387  0EA5  3024               	movlw	36
  6388  0EA6  009E               	movwf	30	;volatile
  6389                           
  6390                           ;uart.c: 20:     sx = ((32000000UL/baudios)/4 ) - 1;
  6391  0EA7  0020               	movlb	0	; select bank0
  6392  0EA8  0828               	movf	serial_init@baudios+3,w
  6393  0EA9  00F4               	movwf	___lldiv@divisor+3
  6394  0EAA  0827               	movf	serial_init@baudios+2,w
  6395  0EAB  00F3               	movwf	___lldiv@divisor+2
  6396  0EAC  0826               	movf	serial_init@baudios+1,w
  6397  0EAD  00F2               	movwf	___lldiv@divisor+1
  6398  0EAE  0825               	movf	serial_init@baudios,w
  6399  0EAF  00F1               	movwf	___lldiv@divisor
  6400  0EB0  3001               	movlw	1
  6401  0EB1  00F8               	movwf	___lldiv@dividend+3
  6402  0EB2  30E8               	movlw	232
  6403  0EB3  00F7               	movwf	___lldiv@dividend+2
  6404  0EB4  3048               	movlw	72
  6405  0EB5  00F6               	movwf	___lldiv@dividend+1
  6406  0EB6  3000               	movlw	0
  6407  0EB7  00F5               	movwf	___lldiv@dividend
  6408  0EB8  318F  27AE  318E   	fcall	___lldiv
  6409  0EBB  0871               	movf	?___lldiv,w
  6410  0EBC  00A9               	movwf	??_serial_init
  6411  0EBD  0872               	movf	?___lldiv+1,w
  6412  0EBE  00AA               	movwf	??_serial_init+1
  6413  0EBF  0873               	movf	?___lldiv+2,w
  6414  0EC0  00AB               	movwf	??_serial_init+2
  6415  0EC1  0874               	movf	?___lldiv+3,w
  6416  0EC2  00AC               	movwf	??_serial_init+3
  6417  0EC3  3002               	movlw	2
  6418  0EC4                     u2055:
  6419  0EC4  36AC               	lsrf	??_serial_init+3,f
  6420  0EC5  0CAB               	rrf	??_serial_init+2,f
  6421  0EC6  0CAA               	rrf	??_serial_init+1,f
  6422  0EC7  0CA9               	rrf	??_serial_init,f
  6423  0EC8  0B89               	decfsz	9,f
  6424  0EC9  2EC4               	goto	u2055
  6425  0ECA  0829               	movf	??_serial_init,w
  6426  0ECB  3EFF               	addlw	255
  6427  0ECC  00FA               	movwf	serial_init@sx
  6428  0ECD  30FF               	movlw	255
  6429  0ECE  3D2A               	addwfc	??_serial_init+1,w
  6430  0ECF  00FB               	movwf	serial_init@sx+1
  6431                           
  6432                           ;uart.c: 21:     SP1BRGL = (uint8_t)sx;
  6433  0ED0  087A               	movf	serial_init@sx,w
  6434  0ED1  0022               	movlb	2	; select bank2
  6435  0ED2  009B               	movwf	27	;volatile
  6436                           
  6437                           ;uart.c: 22:     SP1BRGH = (uint8_t)(sx>>8);
  6438  0ED3  087B               	movf	serial_init@sx+1,w
  6439  0ED4  009C               	movwf	28	;volatile
  6440                           
  6441                           ;uart.c: 26:     RC0PPS = 0x10;
  6442  0ED5  3010               	movlw	16
  6443  0ED6  003E               	movlb	30	; select bank30
  6444  0ED7  00A0               	movwf	32	;volatile
  6445                           
  6446                           ;uart.c: 28:     RXPPS = 0x11;
  6447  0ED8  3011               	movlw	17
  6448  0ED9  003D               	movlb	29	; select bank29
  6449  0EDA  00CB               	movwf	75	;volatile
  6450  0EDB  0008               	return
  6451  0EDC                     __end_of_serial_init:
  6452                           
  6453                           	psect	text5
  6454  0FAE                     __ptext5:	
  6455 ;; *************** function ___lldiv *****************
  6456 ;; Defined at:
  6457 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
  6458 ;; Parameters:    Size  Location     Type
  6459 ;;  divisor         4    1[COMMON] unsigned long 
  6460 ;;  dividend        4    5[COMMON] unsigned long 
  6461 ;; Auto vars:     Size  Location     Type
  6462 ;;  quotient        4    0[BANK0 ] unsigned long 
  6463 ;;  counter         1    4[BANK0 ] unsigned char 
  6464 ;; Return value:  Size  Location     Type
  6465 ;;                  4    1[COMMON] unsigned long 
  6466 ;; Registers used:
  6467 ;;		wreg, status,2, status,0
  6468 ;; Tracked objects:
  6469 ;;		On entry : B1F/0
  6470 ;;		On exit  : B1F/0
  6471 ;;		Unchanged: B00/0
  6472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6473 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6474 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6475 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6476 ;;      Totals:         9       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6477 ;;Total ram usage:       14 bytes
  6478 ;; Hardware stack levels used: 1
  6479 ;; Hardware stack levels required when called: 1
  6480 ;; This function calls:
  6481 ;;		Nothing
  6482 ;; This function is called by:
  6483 ;;		_serial_init
  6484 ;; This function uses a non-reentrant model
  6485 ;;
  6486                           
  6487                           
  6488                           ;psect for function ___lldiv
  6489  0FAE                     ___lldiv:
  6490                           
  6491                           ;incstack = 0
  6492                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6493  0FAE  3000               	movlw	0
  6494  0FAF  00A3               	movwf	___lldiv@quotient+3
  6495  0FB0  3000               	movlw	0
  6496  0FB1  00A2               	movwf	___lldiv@quotient+2
  6497  0FB2  3000               	movlw	0
  6498  0FB3  00A1               	movwf	___lldiv@quotient+1
  6499  0FB4  3000               	movlw	0
  6500  0FB5  00A0               	movwf	___lldiv@quotient
  6501  0FB6  0874               	movf	___lldiv@divisor+3,w
  6502  0FB7  0473               	iorwf	___lldiv@divisor+2,w
  6503  0FB8  0472               	iorwf	___lldiv@divisor+1,w
  6504  0FB9  0471               	iorwf	___lldiv@divisor,w
  6505  0FBA  1903               	skipnz
  6506  0FBB  2FF7               	goto	l2442
  6507  0FBC  01A4               	clrf	___lldiv@counter
  6508  0FBD  0AA4               	incf	___lldiv@counter,f
  6509  0FBE                     l2428:
  6510  0FBE  1BF4               	btfsc	___lldiv@divisor+3,7
  6511  0FBF  2FCC               	goto	l2430
  6512  0FC0  3001               	movlw	1
  6513  0FC1                     u1985:
  6514  0FC1  35F1               	lslf	___lldiv@divisor,f
  6515  0FC2  0DF2               	rlf	___lldiv@divisor+1,f
  6516  0FC3  0DF3               	rlf	___lldiv@divisor+2,f
  6517  0FC4  0DF4               	rlf	___lldiv@divisor+3,f
  6518  0FC5  0B89               	decfsz	9,f
  6519  0FC6  2FC1               	goto	u1985
  6520  0FC7  3001               	movlw	1
  6521  0FC8  00F9               	movwf	??___lldiv
  6522  0FC9  0879               	movf	??___lldiv,w
  6523  0FCA  07A4               	addwf	___lldiv@counter,f
  6524  0FCB  2FBE               	goto	l2428
  6525  0FCC                     l2430:
  6526  0FCC  3001               	movlw	1
  6527  0FCD                     u2005:
  6528  0FCD  35A0               	lslf	___lldiv@quotient,f
  6529  0FCE  0DA1               	rlf	___lldiv@quotient+1,f
  6530  0FCF  0DA2               	rlf	___lldiv@quotient+2,f
  6531  0FD0  0DA3               	rlf	___lldiv@quotient+3,f
  6532  0FD1  0B89               	decfsz	9,f
  6533  0FD2  2FCD               	goto	u2005
  6534  0FD3  0874               	movf	___lldiv@divisor+3,w
  6535  0FD4  0278               	subwf	___lldiv@dividend+3,w
  6536  0FD5  1D03               	skipz
  6537  0FD6  2FE1               	goto	u2015
  6538  0FD7  0873               	movf	___lldiv@divisor+2,w
  6539  0FD8  0277               	subwf	___lldiv@dividend+2,w
  6540  0FD9  1D03               	skipz
  6541  0FDA  2FE1               	goto	u2015
  6542  0FDB  0872               	movf	___lldiv@divisor+1,w
  6543  0FDC  0276               	subwf	___lldiv@dividend+1,w
  6544  0FDD  1D03               	skipz
  6545  0FDE  2FE1               	goto	u2015
  6546  0FDF  0871               	movf	___lldiv@divisor,w
  6547  0FE0  0275               	subwf	___lldiv@dividend,w
  6548  0FE1                     u2015:
  6549  0FE1  1C03               	skipc
  6550  0FE2  2FEC               	goto	l2438
  6551  0FE3  0871               	movf	___lldiv@divisor,w
  6552  0FE4  02F5               	subwf	___lldiv@dividend,f
  6553  0FE5  0872               	movf	___lldiv@divisor+1,w
  6554  0FE6  3BF6               	subwfb	___lldiv@dividend+1,f
  6555  0FE7  0873               	movf	___lldiv@divisor+2,w
  6556  0FE8  3BF7               	subwfb	___lldiv@dividend+2,f
  6557  0FE9  0874               	movf	___lldiv@divisor+3,w
  6558  0FEA  3BF8               	subwfb	___lldiv@dividend+3,f
  6559  0FEB  1420               	bsf	___lldiv@quotient,0
  6560  0FEC                     l2438:
  6561  0FEC  3001               	movlw	1
  6562  0FED                     u2025:
  6563  0FED  36F4               	lsrf	___lldiv@divisor+3,f
  6564  0FEE  0CF3               	rrf	___lldiv@divisor+2,f
  6565  0FEF  0CF2               	rrf	___lldiv@divisor+1,f
  6566  0FF0  0CF1               	rrf	___lldiv@divisor,f
  6567  0FF1  0B89               	decfsz	9,f
  6568  0FF2  2FED               	goto	u2025
  6569  0FF3  3001               	movlw	1
  6570  0FF4  02A4               	subwf	___lldiv@counter,f
  6571  0FF5  1D03               	btfss	3,2
  6572  0FF6  2FCC               	goto	l2430
  6573  0FF7                     l2442:
  6574  0FF7  0823               	movf	___lldiv@quotient+3,w
  6575  0FF8  00F4               	movwf	?___lldiv+3
  6576  0FF9  0822               	movf	___lldiv@quotient+2,w
  6577  0FFA  00F3               	movwf	?___lldiv+2
  6578  0FFB  0821               	movf	___lldiv@quotient+1,w
  6579  0FFC  00F2               	movwf	?___lldiv+1
  6580  0FFD  0820               	movf	___lldiv@quotient,w
  6581  0FFE  00F1               	movwf	?___lldiv
  6582  0FFF  0008               	return
  6583  1000                     __end_of___lldiv:
  6584                           
  6585                           	psect	text6
  6586  0D87                     __ptext6:	
  6587 ;; *************** function _printf *****************
  6588 ;; Defined at:
  6589 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  6590 ;; Parameters:    Size  Location     Type
  6591 ;;  fmt             2   73[BANK0 ] PTR const unsigned char 
  6592 ;;		 -> STR_6(22), STR_3(4), STR_2(9), buffer(50), 
  6593 ;; Auto vars:     Size  Location     Type
  6594 ;;  ret             2    0        int 
  6595 ;;  ap              1   78[BANK0 ] PTR void [1]
  6596 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6597 ;; Return value:  Size  Location     Type
  6598 ;;                  2   73[BANK0 ] int 
  6599 ;; Registers used:
  6600 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6601 ;; Tracked objects:
  6602 ;;		On entry : 1F/0
  6603 ;;		On exit  : 1F/0
  6604 ;;		Unchanged: 0/0
  6605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6606 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6607 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6608 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6609 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6610 ;;Total ram usage:        6 bytes
  6611 ;; Hardware stack levels used: 1
  6612 ;; Hardware stack levels required when called: 9
  6613 ;; This function calls:
  6614 ;;		_vfprintf
  6615 ;; This function is called by:
  6616 ;;		_main
  6617 ;; This function uses a non-reentrant model
  6618 ;;
  6619                           
  6620                           
  6621                           ;psect for function _printf
  6622  0D87                     _printf:
  6623                           
  6624                           ;incstack = 0
  6625                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6626  0D87  306B               	movlw	(low ((?_printf| 0+2)))& (0+255)
  6627  0D88  00ED               	movwf	??_printf
  6628  0D89  086D               	movf	??_printf,w
  6629  0D8A  00EE               	movwf	printf@ap
  6630  0D8B  086A               	movf	printf@fmt+1,w
  6631  0D8C  00E2               	movwf	vfprintf@fmt+1
  6632  0D8D  0869               	movf	printf@fmt,w
  6633  0D8E  00E1               	movwf	vfprintf@fmt
  6634  0D8F  306E               	movlw	(low (printf@ap| 0))& (0+255)
  6635  0D90  00ED               	movwf	??_printf
  6636  0D91  086D               	movf	??_printf,w
  6637  0D92  00E3               	movwf	vfprintf@ap
  6638  0D93  3000               	movlw	0
  6639  0D94  318E  2673         	fcall	_vfprintf
  6640  0D96  0008               	return
  6641  0D97                     __end_of_printf:
  6642                           
  6643                           	psect	text7
  6644  0E73                     __ptext7:	
  6645 ;; *************** function _vfprintf *****************
  6646 ;; Defined at:
  6647 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6648 ;; Parameters:    Size  Location     Type
  6649 ;;  fp              1    wreg     PTR struct _IO_FILE
  6650 ;;		 -> NULL(0), sprintf@f(5), 
  6651 ;;  fmt             2   65[BANK0 ] PTR const unsigned char 
  6652 ;;		 -> STR_6(22), STR_5(8), STR_4(7), STR_3(4), 
  6653 ;;		 -> STR_2(9), STR_1(15), buffer(50), 
  6654 ;;  ap              1   67[BANK0 ] PTR PTR void 
  6655 ;;		 -> printf@ap(1), sprintf@ap(1), 
  6656 ;; Auto vars:     Size  Location     Type
  6657 ;;  fp              1   70[BANK0 ] PTR struct _IO_FILE
  6658 ;;		 -> NULL(0), sprintf@f(5), 
  6659 ;;  cfmt            2   71[BANK0 ] PTR unsigned char 
  6660 ;;		 -> STR_6(22), STR_5(8), STR_4(7), STR_3(4), 
  6661 ;;		 -> STR_2(9), STR_1(15), buffer(50), 
  6662 ;; Return value:  Size  Location     Type
  6663 ;;                  2   65[BANK0 ] int 
  6664 ;; Registers used:
  6665 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6666 ;; Tracked objects:
  6667 ;;		On entry : 1F/0
  6668 ;;		On exit  : 1F/0
  6669 ;;		Unchanged: 0/0
  6670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6671 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6672 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6673 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6674 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6675 ;;Total ram usage:        8 bytes
  6676 ;; Hardware stack levels used: 1
  6677 ;; Hardware stack levels required when called: 8
  6678 ;; This function calls:
  6679 ;;		_vfpfcnvrt
  6680 ;; This function is called by:
  6681 ;;		_sprintf
  6682 ;;		_printf
  6683 ;; This function uses a non-reentrant model
  6684 ;;
  6685                           
  6686                           
  6687                           ;psect for function _vfprintf
  6688  0E73                     _vfprintf:
  6689                           
  6690                           ;incstack = 0
  6691                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6692                           ;vfprintf@fp stored from wreg
  6693  0E73  00E6               	movwf	vfprintf@fp
  6694                           
  6695                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  6696  0E74  0862               	movf	vfprintf@fmt+1,w
  6697  0E75  00E8               	movwf	vfprintf@cfmt+1
  6698  0E76  0861               	movf	vfprintf@fmt,w
  6699  0E77  00E7               	movwf	vfprintf@cfmt
  6700                           
  6701                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  6702  0E78  0021               	movlb	1	; select bank1
  6703  0E79  01A8               	clrf	_nout^(0+128)
  6704  0E7A  01A9               	clrf	(_nout+1)^(0+128)
  6705  0E7B                     l3076:	
  6706                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6707                           
  6708                           
  6709                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6710  0E7B  0020               	movlb	0	; select bank0
  6711  0E7C  0867               	movf	vfprintf@cfmt,w
  6712  0E7D  0084               	movwf	4
  6713  0E7E  0868               	movf	vfprintf@cfmt+1,w
  6714  0E7F  0085               	movwf	5
  6715  0E80  0012               	moviw fsr0++
  6716  0E81  1903               	btfsc	3,2
  6717  0E82  2E97               	goto	l3078
  6718                           
  6719                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  6720  0E83  3067               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  6721  0E84  00E4               	movwf	??_vfprintf
  6722  0E85  0864               	movf	??_vfprintf,w
  6723  0E86  00CF               	movwf	vfpfcnvrt@fmt
  6724  0E87  0863               	movf	vfprintf@ap,w
  6725  0E88  00E5               	movwf	??_vfprintf+1
  6726  0E89  0865               	movf	??_vfprintf+1,w
  6727  0E8A  00D0               	movwf	vfpfcnvrt@ap
  6728  0E8B  0866               	movf	vfprintf@fp,w
  6729  0E8C  3182  22C1  318E   	fcall	_vfpfcnvrt
  6730  0E8F  084F               	movf	?_vfpfcnvrt,w
  6731  0E90  0021               	movlb	1	; select bank1
  6732  0E91  07A8               	addwf	_nout^(0+128),f
  6733  0E92  0020               	movlb	0	; select bank0
  6734  0E93  0850               	movf	?_vfpfcnvrt+1,w
  6735  0E94  0021               	movlb	1	; select bank1
  6736  0E95  3DA9               	addwfc	(_nout+1)^(0+128),f
  6737  0E96  2E7B               	goto	l3076
  6738  0E97                     l3078:
  6739                           
  6740                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  6741  0E97  0021               	movlb	1	; select bank1
  6742  0E98  0829               	movf	(_nout+1)^(0+128),w
  6743  0E99  0020               	movlb	0	; select bank0
  6744  0E9A  00E2               	movwf	?_vfprintf+1
  6745  0E9B  0021               	movlb	1	; select bank1
  6746  0E9C  0828               	movf	_nout^(0+128),w
  6747  0E9D  0020               	movlb	0	; select bank0
  6748  0E9E  00E1               	movwf	?_vfprintf
  6749  0E9F  0008               	return
  6750  0EA0                     __end_of_vfprintf:
  6751                           
  6752                           	psect	text8
  6753  02C1                     __ptext8:	
  6754 ;; *************** function _vfpfcnvrt *****************
  6755 ;; Defined at:
  6756 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6757 ;; Parameters:    Size  Location     Type
  6758 ;;  fp              1    wreg     PTR struct _IO_FILE
  6759 ;;		 -> NULL(0), sprintf@f(5), 
  6760 ;;  fmt             1   47[BANK0 ] PTR PTR unsigned char 
  6761 ;;		 -> vfprintf@cfmt(2), 
  6762 ;;  ap              1   48[BANK0 ] PTR PTR void 
  6763 ;;		 -> printf@ap(1), sprintf@ap(1), 
  6764 ;; Auto vars:     Size  Location     Type
  6765 ;;  fp              1   64[BANK0 ] PTR struct _IO_FILE
  6766 ;;		 -> NULL(0), sprintf@f(5), 
  6767 ;;  ll              8   54[BANK0 ] long long 
  6768 ;;  llu             8    0        unsigned long long 
  6769 ;;  f               4    0        unsigned long long 
  6770 ;;  ct              3    0        unsigned char [3]
  6771 ;;  i               2    0        int 
  6772 ;;  done            2    0        int 
  6773 ;;  cp              2    0        PTR unsigned char 
  6774 ;;  vp              1   63[BANK0 ] PTR void 
  6775 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6776 ;;  c               1   62[BANK0 ] unsigned char 
  6777 ;; Return value:  Size  Location     Type
  6778 ;;                  2   47[BANK0 ] int 
  6779 ;; Registers used:
  6780 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6781 ;; Tracked objects:
  6782 ;;		On entry : 1F/0
  6783 ;;		On exit  : 1F/0
  6784 ;;		Unchanged: 0/0
  6785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6786 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6787 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6788 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6789 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6790 ;;Total ram usage:       18 bytes
  6791 ;; Hardware stack levels used: 1
  6792 ;; Hardware stack levels required when called: 7
  6793 ;; This function calls:
  6794 ;;		_ctoa
  6795 ;;		_dtoa
  6796 ;;		_fputc
  6797 ;; This function is called by:
  6798 ;;		_vfprintf
  6799 ;; This function uses a non-reentrant model
  6800 ;;
  6801                           
  6802                           
  6803                           ;psect for function _vfpfcnvrt
  6804  02C1                     _vfpfcnvrt:
  6805                           
  6806                           ;incstack = 0
  6807                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6808                           ;vfpfcnvrt@fp stored from wreg
  6809  02C1  00E0               	movwf	vfpfcnvrt@fp
  6810                           
  6811                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  6812  02C2  084F               	movf	vfpfcnvrt@fmt,w
  6813  02C3  0086               	movwf	6
  6814  02C4  0187               	clrf	7
  6815  02C5  3F40               	moviw [0]fsr1
  6816  02C6  00D1               	movwf	??_vfpfcnvrt
  6817  02C7  3F41               	moviw [1]fsr1
  6818  02C8  00D2               	movwf	??_vfpfcnvrt+1
  6819  02C9  0851               	movf	??_vfpfcnvrt,w
  6820  02CA  0084               	movwf	4
  6821  02CB  0852               	movf	??_vfpfcnvrt+1,w
  6822  02CC  0085               	movwf	5
  6823  02CD  0012               	moviw fsr0++
  6824  02CE  3A25               	xorlw	37
  6825  02CF  1D03               	btfss	3,2
  6826  02D0  2BC7               	goto	l3034
  6827                           
  6828                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  6829  02D1  084F               	movf	vfpfcnvrt@fmt,w
  6830  02D2  0086               	movwf	6
  6831  02D3  0187               	clrf	7
  6832  02D4  3001               	movlw	1
  6833  02D5  0781               	addwf	1,f
  6834  02D6  3141               	addfsr 1,1
  6835  02D7  1803               	skipnc
  6836  02D8  0A81               	incf	1,f
  6837                           
  6838                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  6839  02D9  0021               	movlb	1	; select bank1
  6840  02DA  01AA               	clrf	_width^(0+128)
  6841  02DB  01AB               	clrf	(_width+1)^(0+128)
  6842  02DC  01AE               	clrf	_flags^(0+128)
  6843  02DD  01AF               	clrf	(_flags+1)^(0+128)
  6844                           
  6845                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  6846  02DE  30FF               	movlw	255
  6847  02DF  00AC               	movwf	_prec^(0+128)
  6848  02E0  30FF               	movlw	255
  6849  02E1  00AD               	movwf	(_prec^(0+128)+1)
  6850                           
  6851                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  6852  02E2  0020               	movlb	0	; select bank0
  6853  02E3  084F               	movf	vfpfcnvrt@fmt,w
  6854  02E4  0086               	movwf	6
  6855  02E5  0187               	clrf	7
  6856  02E6  3F40               	moviw [0]fsr1
  6857  02E7  00D1               	movwf	??_vfpfcnvrt
  6858  02E8  3F41               	moviw [1]fsr1
  6859  02E9  00D2               	movwf	??_vfpfcnvrt+1
  6860  02EA  0851               	movf	??_vfpfcnvrt,w
  6861  02EB  0084               	movwf	4
  6862  02EC  0852               	movf	??_vfpfcnvrt+1,w
  6863  02ED  0085               	movwf	5
  6864  02EE  0012               	moviw fsr0++
  6865  02EF  3A63               	xorlw	99
  6866  02F0  1D03               	btfss	3,2
  6867  02F1  2B12               	goto	l2994
  6868                           
  6869                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  6870  02F2  084F               	movf	vfpfcnvrt@fmt,w
  6871  02F3  0086               	movwf	6
  6872  02F4  0187               	clrf	7
  6873  02F5  3001               	movlw	1
  6874  02F6  0781               	addwf	1,f
  6875  02F7  3141               	addfsr 1,1
  6876  02F8  1803               	skipnc
  6877  02F9  0A81               	incf	1,f
  6878                           
  6879                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6880  02FA  0850               	movf	vfpfcnvrt@ap,w
  6881  02FB  0086               	movwf	6
  6882  02FC  0187               	clrf	7
  6883  02FD  0801               	movf	1,w
  6884  02FE  0084               	movwf	4
  6885  02FF  0185               	clrf	5
  6886  0300  3002               	movlw	2
  6887  0301  0781               	addwf	1,f
  6888  0302  0800               	movf	0,w
  6889  0303  00D1               	movwf	??_vfpfcnvrt
  6890  0304  0851               	movf	??_vfpfcnvrt,w
  6891  0305  00DE               	movwf	vfpfcnvrt@c
  6892                           
  6893                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  6894  0306  085E               	movf	vfpfcnvrt@c,w
  6895  0307  00D1               	movwf	??_vfpfcnvrt
  6896  0308  0851               	movf	??_vfpfcnvrt,w
  6897  0309  00A0               	movwf	ctoa@c
  6898  030A  0860               	movf	vfpfcnvrt@fp,w
  6899  030B  3186  2633         	fcall	_ctoa
  6900  030D  0821               	movf	?_ctoa+1,w
  6901  030E  00D0               	movwf	?_vfpfcnvrt+1
  6902  030F  0820               	movf	?_ctoa,w
  6903  0310  00CF               	movwf	?_vfpfcnvrt
  6904  0311  0008               	return
  6905  0312                     l2994:
  6906                           
  6907                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6908  0312  084F               	movf	vfpfcnvrt@fmt,w
  6909  0313  0086               	movwf	6
  6910  0314  0187               	clrf	7
  6911  0315  3F40               	moviw [0]fsr1
  6912  0316  00D1               	movwf	??_vfpfcnvrt
  6913  0317  3F41               	moviw [1]fsr1
  6914  0318  00D2               	movwf	??_vfpfcnvrt+1
  6915  0319  0851               	movf	??_vfpfcnvrt,w
  6916  031A  0084               	movwf	4
  6917  031B  0852               	movf	??_vfpfcnvrt+1,w
  6918  031C  0085               	movwf	5
  6919  031D  0012               	moviw fsr0++
  6920  031E  3A64               	xorlw	100
  6921  031F  1903               	btfsc	3,2
  6922  0320  2B30               	goto	l2998
  6923  0321  084F               	movf	vfpfcnvrt@fmt,w
  6924  0322  0086               	movwf	6
  6925  0323  0187               	clrf	7
  6926  0324  3F40               	moviw [0]fsr1
  6927  0325  00D1               	movwf	??_vfpfcnvrt
  6928  0326  3F41               	moviw [1]fsr1
  6929  0327  00D2               	movwf	??_vfpfcnvrt+1
  6930  0328  0851               	movf	??_vfpfcnvrt,w
  6931  0329  0084               	movwf	4
  6932  032A  0852               	movf	??_vfpfcnvrt+1,w
  6933  032B  0085               	movwf	5
  6934  032C  0012               	moviw fsr0++
  6935  032D  3A69               	xorlw	105
  6936  032E  1D03               	btfss	3,2
  6937  032F  2B69               	goto	l3006
  6938  0330                     l2998:
  6939                           
  6940                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  6941  0330  084F               	movf	vfpfcnvrt@fmt,w
  6942  0331  0086               	movwf	6
  6943  0332  0187               	clrf	7
  6944  0333  3001               	movlw	1
  6945  0334  0781               	addwf	1,f
  6946  0335  3141               	addfsr 1,1
  6947  0336  1803               	skipnc
  6948  0337  0A81               	incf	1,f
  6949                           
  6950                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6951  0338  0850               	movf	vfpfcnvrt@ap,w
  6952  0339  0086               	movwf	6
  6953  033A  0187               	clrf	7
  6954  033B  0801               	movf	1,w
  6955  033C  0084               	movwf	4
  6956  033D  0185               	clrf	5
  6957  033E  3002               	movlw	2
  6958  033F  0781               	addwf	1,f
  6959  0340  3F00               	moviw [0]fsr0
  6960  0341  00D1               	movwf	??_vfpfcnvrt
  6961  0342  3F01               	moviw [1]fsr0
  6962  0343  00D2               	movwf	??_vfpfcnvrt+1
  6963  0344  0851               	movf	??_vfpfcnvrt,w
  6964  0345  00D6               	movwf	vfpfcnvrt@ll
  6965  0346  0852               	movf	??_vfpfcnvrt+1,w
  6966  0347  00D7               	movwf	vfpfcnvrt@ll+1
  6967  0348  0D89               	rlf	9,f
  6968  0349  3B89               	subwfb	9,f
  6969  034A  0989               	comf	9,f
  6970  034B  00D8               	movwf	vfpfcnvrt@ll+2
  6971  034C  00D9               	movwf	vfpfcnvrt@ll+3
  6972  034D  00DA               	movwf	vfpfcnvrt@ll+4
  6973  034E  00DB               	movwf	vfpfcnvrt@ll+5
  6974  034F  00DC               	movwf	vfpfcnvrt@ll+6
  6975  0350  00DD               	movwf	vfpfcnvrt@ll+7
  6976                           
  6977                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  6978  0351  0856               	movf	vfpfcnvrt@ll,w
  6979  0352  00B1               	movwf	dtoa@d
  6980  0353  0857               	movf	vfpfcnvrt@ll+1,w
  6981  0354  00B2               	movwf	dtoa@d+1
  6982  0355  0858               	movf	vfpfcnvrt@ll+2,w
  6983  0356  00B3               	movwf	dtoa@d+2
  6984  0357  0859               	movf	vfpfcnvrt@ll+3,w
  6985  0358  00B4               	movwf	dtoa@d+3
  6986  0359  085A               	movf	vfpfcnvrt@ll+4,w
  6987  035A  00B5               	movwf	dtoa@d+4
  6988  035B  085B               	movf	vfpfcnvrt@ll+5,w
  6989  035C  00B6               	movwf	dtoa@d+5
  6990  035D  085C               	movf	vfpfcnvrt@ll+6,w
  6991  035E  00B7               	movwf	dtoa@d+6
  6992  035F  085D               	movf	vfpfcnvrt@ll+7,w
  6993  0360  00B8               	movwf	dtoa@d+7
  6994  0361  0860               	movf	vfpfcnvrt@fp,w
  6995  0362  3181  2176         	fcall	_dtoa
  6996  0364  0832               	movf	?_dtoa+1,w
  6997  0365  00D0               	movwf	?_vfpfcnvrt+1
  6998  0366  0831               	movf	?_dtoa,w
  6999  0367  00CF               	movwf	?_vfpfcnvrt
  7000  0368  0008               	return
  7001  0369                     l3006:
  7002                           
  7003                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1099:         if 
      +                          (*fmt[0] == 'n') {
  7004  0369  084F               	movf	vfpfcnvrt@fmt,w
  7005  036A  0086               	movwf	6
  7006  036B  0187               	clrf	7
  7007  036C  3F40               	moviw [0]fsr1
  7008  036D  00D1               	movwf	??_vfpfcnvrt
  7009  036E  3F41               	moviw [1]fsr1
  7010  036F  00D2               	movwf	??_vfpfcnvrt+1
  7011  0370  0851               	movf	??_vfpfcnvrt,w
  7012  0371  0084               	movwf	4
  7013  0372  0852               	movf	??_vfpfcnvrt+1,w
  7014  0373  0085               	movwf	5
  7015  0374  0012               	moviw fsr0++
  7016  0375  3A6E               	xorlw	110
  7017  0376  1D03               	btfss	3,2
  7018  0377  2B97               	goto	l3018
  7019                           
  7020                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1100:            
      +                           ++*fmt;
  7021  0378  084F               	movf	vfpfcnvrt@fmt,w
  7022  0379  0086               	movwf	6
  7023  037A  0187               	clrf	7
  7024  037B  3001               	movlw	1
  7025  037C  0781               	addwf	1,f
  7026  037D  3141               	addfsr 1,1
  7027  037E  1803               	skipnc
  7028  037F  0A81               	incf	1,f
  7029                           
  7030                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1101:            
      +                           vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  7031  0380  0850               	movf	vfpfcnvrt@ap,w
  7032  0381  0086               	movwf	6
  7033  0382  0187               	clrf	7
  7034  0383  3F40               	moviw [0]fsr1
  7035  0384  0084               	movwf	4
  7036  0385  0185               	clrf	5
  7037  0386  0A81               	incf	1,f
  7038  0387  0800               	movf	0,w
  7039  0388  00D1               	movwf	??_vfpfcnvrt
  7040  0389  0851               	movf	??_vfpfcnvrt,w
  7041  038A  00DF               	movwf	vfpfcnvrt@vp
  7042                           
  7043                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1102:            
      +                           *(int *)vp = nout;
  7044  038B  085F               	movf	vfpfcnvrt@vp,w
  7045  038C  0086               	movwf	6
  7046  038D  0187               	clrf	7
  7047  038E  0021               	movlb	1	; select bank1
  7048  038F  0828               	movf	_nout^(0+128),w
  7049  0390  3FC0               	movwi [0]fsr1
  7050  0391  0829               	movf	(_nout+1)^(0+128),w
  7051  0392  3FC1               	movwi [1]fsr1
  7052  0393                     l3014:
  7053                           
  7054                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1103:            
      +                           return 0;
  7055  0393  0020               	movlb	0	; select bank0
  7056  0394  01CF               	clrf	?_vfpfcnvrt
  7057  0395  01D0               	clrf	?_vfpfcnvrt+1
  7058  0396  0008               	return
  7059  0397                     l3018:
  7060                           
  7061                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  7062  0397  084F               	movf	vfpfcnvrt@fmt,w
  7063  0398  0086               	movwf	6
  7064  0399  0187               	clrf	7
  7065  039A  3F40               	moviw [0]fsr1
  7066  039B  00D1               	movwf	??_vfpfcnvrt
  7067  039C  3F41               	moviw [1]fsr1
  7068  039D  00D2               	movwf	??_vfpfcnvrt+1
  7069  039E  0851               	movf	??_vfpfcnvrt,w
  7070  039F  0084               	movwf	4
  7071  03A0  0852               	movf	??_vfpfcnvrt+1,w
  7072  03A1  0085               	movwf	5
  7073  03A2  0012               	moviw fsr0++
  7074  03A3  3A25               	xorlw	37
  7075  03A4  1D03               	btfss	3,2
  7076  03A5  2BBE               	goto	l3028
  7077                           
  7078                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  7079  03A6  084F               	movf	vfpfcnvrt@fmt,w
  7080  03A7  0086               	movwf	6
  7081  03A8  0187               	clrf	7
  7082  03A9  3001               	movlw	1
  7083  03AA  0781               	addwf	1,f
  7084  03AB  3141               	addfsr 1,1
  7085  03AC  1803               	skipnc
  7086  03AD  0A81               	incf	1,f
  7087                           
  7088                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  7089  03AE  3025               	movlw	37
  7090  03AF  00F4               	movwf	fputc@c
  7091  03B0  3000               	movlw	0
  7092  03B1  00F5               	movwf	fputc@c+1
  7093  03B2  0860               	movf	vfpfcnvrt@fp,w
  7094  03B3  00D1               	movwf	??_vfpfcnvrt
  7095  03B4  0851               	movf	??_vfpfcnvrt,w
  7096  03B5  00F6               	movwf	fputc@fp
  7097  03B6  3187  27B6         	fcall	_fputc
  7098  03B8                     l3024:
  7099                           
  7100                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  7101  03B8  3001               	movlw	1
  7102  03B9  0020               	movlb	0	; select bank0
  7103  03BA  00CF               	movwf	?_vfpfcnvrt
  7104  03BB  3000               	movlw	0
  7105  03BC  00D0               	movwf	?_vfpfcnvrt+1
  7106  03BD  0008               	return
  7107  03BE                     l3028:
  7108                           
  7109                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  7110  03BE  084F               	movf	vfpfcnvrt@fmt,w
  7111  03BF  0086               	movwf	6
  7112  03C0  0187               	clrf	7
  7113  03C1  3001               	movlw	1
  7114  03C2  0781               	addwf	1,f
  7115  03C3  3141               	addfsr 1,1
  7116  03C4  1803               	skipnc
  7117  03C5  0A81               	incf	1,f
  7118  03C6  2B93               	goto	l3014
  7119  03C7                     l3034:
  7120                           
  7121                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  7122  03C7  084F               	movf	vfpfcnvrt@fmt,w
  7123  03C8  0086               	movwf	6
  7124  03C9  0187               	clrf	7
  7125  03CA  3F40               	moviw [0]fsr1
  7126  03CB  00D1               	movwf	??_vfpfcnvrt
  7127  03CC  3F41               	moviw [1]fsr1
  7128  03CD  00D2               	movwf	??_vfpfcnvrt+1
  7129  03CE  0851               	movf	??_vfpfcnvrt,w
  7130  03CF  0084               	movwf	4
  7131  03D0  0852               	movf	??_vfpfcnvrt+1,w
  7132  03D1  0085               	movwf	5
  7133  03D2  0800               	movf	0,w	;code access
  7134  03D3  00D3               	movwf	??_vfpfcnvrt+2
  7135  03D4  01D4               	clrf	??_vfpfcnvrt+3
  7136  03D5  0853               	movf	??_vfpfcnvrt+2,w
  7137  03D6  00F4               	movwf	fputc@c
  7138  03D7  0854               	movf	??_vfpfcnvrt+3,w
  7139  03D8  00F5               	movwf	fputc@c+1
  7140  03D9  0860               	movf	vfpfcnvrt@fp,w
  7141  03DA  00D5               	movwf	??_vfpfcnvrt+4
  7142  03DB  0855               	movf	??_vfpfcnvrt+4,w
  7143  03DC  00F6               	movwf	fputc@fp
  7144  03DD  3187  27B6  3182   	fcall	_fputc
  7145                           
  7146                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  7147  03E0  0020               	movlb	0	; select bank0
  7148  03E1  084F               	movf	vfpfcnvrt@fmt,w
  7149  03E2  0086               	movwf	6
  7150  03E3  0187               	clrf	7
  7151  03E4  3001               	movlw	1
  7152  03E5  0781               	addwf	1,f
  7153  03E6  3141               	addfsr 1,1
  7154  03E7  1803               	skipnc
  7155  03E8  0A81               	incf	1,f
  7156  03E9  2BB8               	goto	l3024
  7157  03EA                     __end_of_vfpfcnvrt:
  7158                           
  7159                           	psect	text9
  7160  0176                     __ptext9:	
  7161 ;; *************** function _dtoa *****************
  7162 ;; Defined at:
  7163 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7164 ;; Parameters:    Size  Location     Type
  7165 ;;  fp              1    wreg     PTR struct _IO_FILE
  7166 ;;		 -> NULL(0), sprintf@f(5), 
  7167 ;;  d               8   17[BANK0 ] long long 
  7168 ;; Auto vars:     Size  Location     Type
  7169 ;;  fp              1   28[BANK0 ] PTR struct _IO_FILE
  7170 ;;		 -> NULL(0), sprintf@f(5), 
  7171 ;;  n               8   37[BANK0 ] long long 
  7172 ;;  i               2   45[BANK0 ] int 
  7173 ;;  s               2   35[BANK0 ] int 
  7174 ;;  w               2   33[BANK0 ] int 
  7175 ;;  p               2   31[BANK0 ] int 
  7176 ;; Return value:  Size  Location     Type
  7177 ;;                  2   17[BANK0 ] int 
  7178 ;; Registers used:
  7179 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7180 ;; Tracked objects:
  7181 ;;		On entry : 1F/0
  7182 ;;		On exit  : 1F/0
  7183 ;;		Unchanged: 0/0
  7184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7185 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7186 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7187 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7188 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7189 ;;Total ram usage:       30 bytes
  7190 ;; Hardware stack levels used: 1
  7191 ;; Hardware stack levels required when called: 6
  7192 ;; This function calls:
  7193 ;;		___aodiv
  7194 ;;		___aomod
  7195 ;;		_abs
  7196 ;;		_pad
  7197 ;; This function is called by:
  7198 ;;		_vfpfcnvrt
  7199 ;; This function uses a non-reentrant model
  7200 ;;
  7201                           
  7202                           
  7203                           ;psect for function _dtoa
  7204  0176                     _dtoa:
  7205                           
  7206                           ;incstack = 0
  7207                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7208                           ;dtoa@fp stored from wreg
  7209  0176  00BC               	movwf	dtoa@fp
  7210                           
  7211                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7212  0177  0831               	movf	dtoa@d,w
  7213  0178  00C5               	movwf	dtoa@n
  7214  0179  0832               	movf	dtoa@d+1,w
  7215  017A  00C6               	movwf	dtoa@n+1
  7216  017B  0833               	movf	dtoa@d+2,w
  7217  017C  00C7               	movwf	dtoa@n+2
  7218  017D  0834               	movf	dtoa@d+3,w
  7219  017E  00C8               	movwf	dtoa@n+3
  7220  017F  0835               	movf	dtoa@d+4,w
  7221  0180  00C9               	movwf	dtoa@n+4
  7222  0181  0836               	movf	dtoa@d+5,w
  7223  0182  00CA               	movwf	dtoa@n+5
  7224  0183  0837               	movf	dtoa@d+6,w
  7225  0184  00CB               	movwf	dtoa@n+6
  7226  0185  0838               	movf	dtoa@d+7,w
  7227  0186  00CC               	movwf	dtoa@n+7
  7228                           
  7229                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7230  0187  3045               	movlw	low dtoa@n
  7231  0188  0086               	movwf	6
  7232  0189  3000               	movlw	high dtoa@n
  7233  018A  0087               	movwf	7
  7234  018B  3F47               	moviw [7]fsr1
  7235  018C  00B9               	movwf	??_dtoa
  7236  018D  1FB9               	btfss	??_dtoa,7
  7237  018E  2991               	goto	u2560
  7238  018F  3001               	movlw	1
  7239  0190  2992               	goto	u2570
  7240  0191                     u2560:
  7241  0191  3000               	movlw	0
  7242  0192                     u2570:
  7243  0192  0020               	movlb	0	; select bank0
  7244  0193  00BA               	movwf	??_dtoa+1
  7245  0194  01BB               	clrf	??_dtoa+2
  7246  0195  083A               	movf	??_dtoa+1,w
  7247  0196  00C3               	movwf	dtoa@s
  7248  0197  083B               	movf	??_dtoa+2,w
  7249  0198  00C4               	movwf	dtoa@s+1
  7250                           
  7251                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7252  0199  0843               	movf	dtoa@s,w
  7253  019A  0444               	iorwf	dtoa@s+1,w
  7254  019B  1903               	btfsc	3,2
  7255  019C  29BB               	goto	l1123
  7256                           
  7257                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7258  019D  09C5               	comf	dtoa@n,f
  7259  019E  09C6               	comf	dtoa@n+1,f
  7260  019F  09C7               	comf	dtoa@n+2,f
  7261  01A0  09C8               	comf	dtoa@n+3,f
  7262  01A1  09C9               	comf	dtoa@n+4,f
  7263  01A2  09CA               	comf	dtoa@n+5,f
  7264  01A3  09CB               	comf	dtoa@n+6,f
  7265  01A4  09CC               	comf	dtoa@n+7,f
  7266  01A5  0AC5               	incf	dtoa@n,f
  7267  01A6  1D03               	skipz
  7268  01A7  29BB               	goto	l1123
  7269  01A8  0AC6               	incf	dtoa@n+1,f
  7270  01A9  1D03               	skipz
  7271  01AA  29BB               	goto	l1123
  7272  01AB  0AC7               	incf	dtoa@n+2,f
  7273  01AC  1D03               	skipz
  7274  01AD  29BB               	goto	l1123
  7275  01AE  0AC8               	incf	dtoa@n+3,f
  7276  01AF  1D03               	skipz
  7277  01B0  29BB               	goto	l1123
  7278  01B1  0AC9               	incf	dtoa@n+4,f
  7279  01B2  1D03               	skipz
  7280  01B3  29BB               	goto	l1123
  7281  01B4  0ACA               	incf	dtoa@n+5,f
  7282  01B5  1D03               	skipz
  7283  01B6  29BB               	goto	l1123
  7284  01B7  0ACB               	incf	dtoa@n+6,f
  7285  01B8  1D03               	skipz
  7286  01B9  29BB               	goto	l1123
  7287  01BA  0ACC               	incf	dtoa@n+7,f
  7288  01BB                     l1123:	
  7289                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 297:     }
  7290                           
  7291                           
  7292                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  7293  01BB  0021               	movlb	1	; select bank1
  7294  01BC  1BAD               	btfsc	(_prec+1)^(0+128),7
  7295  01BD  29C2               	goto	l1124
  7296                           
  7297                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7298  01BE  30FD               	movlw	253
  7299  01BF  05AE               	andwf	_flags^(0+128),f
  7300  01C0  30FF               	movlw	255
  7301  01C1  05AF               	andwf	(_flags+1)^(0+128),f
  7302  01C2                     l1124:	
  7303                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 302:     }
  7304                           
  7305                           
  7306                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7307  01C2  082D               	movf	(_prec+1)^(0+128),w
  7308  01C3  3A80               	xorlw	128
  7309  01C4  0020               	movlb	0	; select bank0
  7310  01C5  00B9               	movwf	??_dtoa
  7311  01C6  3080               	movlw	128
  7312  01C7  0239               	subwf	??_dtoa,w
  7313  01C8  1D03               	skipz
  7314  01C9  29CD               	goto	u2615
  7315  01CA  3001               	movlw	1
  7316  01CB  0021               	movlb	1	; select bank1
  7317  01CC  022C               	subwf	_prec^(0+128),w
  7318  01CD                     u2615:
  7319  01CD  1803               	skipnc
  7320  01CE  29D5               	goto	l2928
  7321  01CF  3001               	movlw	1
  7322  01D0  0020               	movlb	0	; select bank0
  7323  01D1  00BF               	movwf	dtoa@p
  7324  01D2  3000               	movlw	0
  7325  01D3  00C0               	movwf	dtoa@p+1
  7326  01D4  29DD               	goto	l1128
  7327  01D5                     l2928:
  7328  01D5  0021               	movlb	1	; select bank1
  7329  01D6  082D               	movf	(_prec+1)^(0+128),w
  7330  01D7  0020               	movlb	0	; select bank0
  7331  01D8  00C0               	movwf	dtoa@p+1
  7332  01D9  0021               	movlb	1	; select bank1
  7333  01DA  082C               	movf	_prec^(0+128),w
  7334  01DB  0020               	movlb	0	; select bank0
  7335  01DC  00BF               	movwf	dtoa@p
  7336  01DD                     l1128:
  7337                           
  7338                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  7339  01DD  0021               	movlb	1	; select bank1
  7340  01DE  082B               	movf	(_width+1)^(0+128),w
  7341  01DF  0020               	movlb	0	; select bank0
  7342  01E0  00C2               	movwf	dtoa@w+1
  7343  01E1  0021               	movlb	1	; select bank1
  7344  01E2  082A               	movf	_width^(0+128),w
  7345  01E3  0020               	movlb	0	; select bank0
  7346  01E4  00C1               	movwf	dtoa@w
  7347                           
  7348                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  7349  01E5  0843               	movf	dtoa@s,w
  7350  01E6  0444               	iorwf	dtoa@s+1,w
  7351  01E7  1D03               	btfss	3,2
  7352  01E8  29EC               	goto	l2934
  7353  01E9  0021               	movlb	1	; select bank1
  7354  01EA  1D2E               	btfss	_flags^(0+128),2
  7355  01EB  29F1               	goto	l1129
  7356  01EC                     l2934:
  7357                           
  7358                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  7359  01EC  30FF               	movlw	255
  7360  01ED  0020               	movlb	0	; select bank0
  7361  01EE  07C1               	addwf	dtoa@w,f
  7362  01EF  30FF               	movlw	255
  7363  01F0  3DC2               	addwfc	dtoa@w+1,f
  7364  01F1                     l1129:	
  7365                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 307:     }
  7366                           
  7367                           
  7368                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7369  01F1  301F               	movlw	31
  7370  01F2  0020               	movlb	0	; select bank0
  7371  01F3  00CD               	movwf	dtoa@i
  7372  01F4  3000               	movlw	0
  7373  01F5  00CE               	movwf	dtoa@i+1
  7374                           
  7375                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7376  01F6  0021               	movlb	1	; select bank1
  7377  01F7  01D9               	clrf	(_dbuf^(0+128)+31)
  7378                           
  7379                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7380  01F8  2A84               	goto	l1132
  7381  01F9                     l2948:
  7382  01F9  0020               	movlb	0	; select bank0
  7383  01FA  0845               	movf	dtoa@n,w
  7384  01FB  0446               	iorwf	dtoa@n+1,w
  7385  01FC  0447               	iorwf	dtoa@n+2,w
  7386  01FD  0448               	iorwf	dtoa@n+3,w
  7387  01FE  0449               	iorwf	dtoa@n+4,w
  7388  01FF  044A               	iorwf	dtoa@n+5,w
  7389  0200  044B               	iorwf	dtoa@n+6,w
  7390  0201  044C               	iorwf	dtoa@n+7,w
  7391  0202  1D03               	skipz
  7392  0203  2A1E               	goto	l2938
  7393  0204  0840               	movf	dtoa@p+1,w
  7394  0205  3A80               	xorlw	128
  7395  0206  00B9               	movwf	??_dtoa
  7396  0207  3080               	movlw	128
  7397  0208  0239               	subwf	??_dtoa,w
  7398  0209  1D03               	skipz
  7399  020A  2A0D               	goto	u2665
  7400  020B  3001               	movlw	1
  7401  020C  023F               	subwf	dtoa@p,w
  7402  020D                     u2665:
  7403  020D  1803               	skipnc
  7404  020E  2A1E               	goto	l2938
  7405  020F  0020               	movlb	0	; select bank0
  7406  0210  0842               	movf	dtoa@w+1,w
  7407  0211  3A80               	xorlw	128
  7408  0212  00B9               	movwf	??_dtoa
  7409  0213  3080               	movlw	128
  7410  0214  0239               	subwf	??_dtoa,w
  7411  0215  1D03               	skipz
  7412  0216  2A19               	goto	u2675
  7413  0217  3001               	movlw	1
  7414  0218  0241               	subwf	dtoa@w,w
  7415  0219                     u2675:
  7416  0219  1C03               	skipc
  7417  021A  2A90               	goto	l2956
  7418  021B  0021               	movlb	1	; select bank1
  7419  021C  1CAE               	btfss	_flags^(0+128),1
  7420  021D  2A90               	goto	l2956
  7421  021E                     l2938:
  7422                           
  7423                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  7424  021E  30FF               	movlw	255
  7425  021F  0020               	movlb	0	; select bank0
  7426  0220  07CD               	addwf	dtoa@i,f
  7427  0221  30FF               	movlw	255
  7428  0222  3DCE               	addwfc	dtoa@i+1,f
  7429                           
  7430                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7431  0223  300A               	movlw	10
  7432  0224  00A0               	movwf	___aomod@divisor
  7433  0225  01A1               	clrf	___aomod@divisor+1
  7434  0226  01A2               	clrf	___aomod@divisor+2
  7435  0227  01A3               	clrf	___aomod@divisor+3
  7436  0228  01A4               	clrf	___aomod@divisor+4
  7437  0229  01A5               	clrf	___aomod@divisor+5
  7438  022A  01A6               	clrf	___aomod@divisor+6
  7439  022B  01A7               	clrf	___aomod@divisor+7
  7440  022C  0845               	movf	dtoa@n,w
  7441  022D  00A8               	movwf	___aomod@dividend
  7442  022E  0846               	movf	dtoa@n+1,w
  7443  022F  00A9               	movwf	___aomod@dividend+1
  7444  0230  0847               	movf	dtoa@n+2,w
  7445  0231  00AA               	movwf	___aomod@dividend+2
  7446  0232  0848               	movf	dtoa@n+3,w
  7447  0233  00AB               	movwf	___aomod@dividend+3
  7448  0234  0849               	movf	dtoa@n+4,w
  7449  0235  00AC               	movwf	___aomod@dividend+4
  7450  0236  084A               	movf	dtoa@n+5,w
  7451  0237  00AD               	movwf	___aomod@dividend+5
  7452  0238  084B               	movf	dtoa@n+6,w
  7453  0239  00AE               	movwf	___aomod@dividend+6
  7454  023A  084C               	movf	dtoa@n+7,w
  7455  023B  00AF               	movwf	___aomod@dividend+7
  7456  023C  3184  24DD  3181   	fcall	___aomod
  7457  023F  0821               	movf	?___aomod+1,w
  7458  0240  00F5               	movwf	abs@a+1
  7459  0241  0820               	movf	?___aomod,w
  7460  0242  00F4               	movwf	abs@a
  7461  0243  318D  25A8  3181   	fcall	_abs
  7462  0246  0874               	movf	?_abs,w
  7463  0247  3E30               	addlw	48
  7464  0248  0020               	movlb	0	; select bank0
  7465  0249  00B9               	movwf	??_dtoa
  7466  024A  084D               	movf	dtoa@i,w
  7467  024B  3EBA               	addlw	(low (_dbuf| 0))& (0+255)
  7468  024C  0086               	movwf	6
  7469  024D  0187               	clrf	7
  7470  024E  0839               	movf	??_dtoa,w
  7471  024F  0081               	movwf	1
  7472                           
  7473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  7474  0250  30FF               	movlw	255
  7475  0251  07BF               	addwf	dtoa@p,f
  7476  0252  30FF               	movlw	255
  7477  0253  3DC0               	addwfc	dtoa@p+1,f
  7478                           
  7479                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  7480  0254  30FF               	movlw	255
  7481  0255  07C1               	addwf	dtoa@w,f
  7482  0256  30FF               	movlw	255
  7483  0257  3DC2               	addwfc	dtoa@w+1,f
  7484                           
  7485                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  7486  0258  300A               	movlw	10
  7487  0259  00A0               	movwf	___aodiv@divisor
  7488  025A  01A1               	clrf	___aodiv@divisor+1
  7489  025B  01A2               	clrf	___aodiv@divisor+2
  7490  025C  01A3               	clrf	___aodiv@divisor+3
  7491  025D  01A4               	clrf	___aodiv@divisor+4
  7492  025E  01A5               	clrf	___aodiv@divisor+5
  7493  025F  01A6               	clrf	___aodiv@divisor+6
  7494  0260  01A7               	clrf	___aodiv@divisor+7
  7495  0261  0845               	movf	dtoa@n,w
  7496  0262  00A8               	movwf	___aodiv@dividend
  7497  0263  0846               	movf	dtoa@n+1,w
  7498  0264  00A9               	movwf	___aodiv@dividend+1
  7499  0265  0847               	movf	dtoa@n+2,w
  7500  0266  00AA               	movwf	___aodiv@dividend+2
  7501  0267  0848               	movf	dtoa@n+3,w
  7502  0268  00AB               	movwf	___aodiv@dividend+3
  7503  0269  0849               	movf	dtoa@n+4,w
  7504  026A  00AC               	movwf	___aodiv@dividend+4
  7505  026B  084A               	movf	dtoa@n+5,w
  7506  026C  00AD               	movwf	___aodiv@dividend+5
  7507  026D  084B               	movf	dtoa@n+6,w
  7508  026E  00AE               	movwf	___aodiv@dividend+6
  7509  026F  084C               	movf	dtoa@n+7,w
  7510  0270  00AF               	movwf	___aodiv@dividend+7
  7511  0271  3183  23EA  3181   	fcall	___aodiv
  7512  0274  0820               	movf	?___aodiv,w
  7513  0275  00C5               	movwf	dtoa@n
  7514  0276  0821               	movf	?___aodiv+1,w
  7515  0277  00C6               	movwf	dtoa@n+1
  7516  0278  0822               	movf	?___aodiv+2,w
  7517  0279  00C7               	movwf	dtoa@n+2
  7518  027A  0823               	movf	?___aodiv+3,w
  7519  027B  00C8               	movwf	dtoa@n+3
  7520  027C  0824               	movf	?___aodiv+4,w
  7521  027D  00C9               	movwf	dtoa@n+4
  7522  027E  0825               	movf	?___aodiv+5,w
  7523  027F  00CA               	movwf	dtoa@n+5
  7524  0280  0826               	movf	?___aodiv+6,w
  7525  0281  00CB               	movwf	dtoa@n+6
  7526  0282  0827               	movf	?___aodiv+7,w
  7527  0283  00CC               	movwf	dtoa@n+7
  7528  0284                     l1132:	
  7529                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 318:     }
  7530                           
  7531                           
  7532                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7533  0284  0020               	movlb	0	; select bank0
  7534  0285  084E               	movf	dtoa@i+1,w
  7535  0286  3A80               	xorlw	128
  7536  0287  00B9               	movwf	??_dtoa
  7537  0288  3080               	movlw	128
  7538  0289  0239               	subwf	??_dtoa,w
  7539  028A  1D03               	skipz
  7540  028B  2A8E               	goto	u2645
  7541  028C  3001               	movlw	1
  7542  028D  024D               	subwf	dtoa@i,w
  7543  028E                     u2645:
  7544  028E  1803               	btfsc	3,0
  7545  028F  29F9               	goto	l2948
  7546  0290                     l2956:
  7547                           
  7548                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  7549  0290  0020               	movlb	0	; select bank0
  7550  0291  0843               	movf	dtoa@s,w
  7551  0292  0444               	iorwf	dtoa@s+1,w
  7552  0293  1D03               	btfss	3,2
  7553  0294  2A98               	goto	l2960
  7554  0295  0021               	movlb	1	; select bank1
  7555  0296  1D2E               	btfss	_flags^(0+128),2
  7556  0297  2AAF               	goto	l2970
  7557  0298                     l2960:
  7558                           
  7559                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  7560  0298  30FF               	movlw	255
  7561  0299  0020               	movlb	0	; select bank0
  7562  029A  07CD               	addwf	dtoa@i,f
  7563  029B  30FF               	movlw	255
  7564  029C  3DCE               	addwfc	dtoa@i+1,f
  7565                           
  7566                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  7567  029D  0843               	movf	dtoa@s,w
  7568  029E  0444               	iorwf	dtoa@s+1,w
  7569  029F  1D03               	btfss	3,2
  7570  02A0  2AA3               	goto	l2966
  7571  02A1  302B               	movlw	43
  7572  02A2  2AA4               	goto	L1
  7573  02A3                     l2966:
  7574  02A3  302D               	movlw	45
  7575  02A4                     L1:
  7576  02A4  00BD               	movwf	_dtoa$1013
  7577  02A5  3000               	movlw	0
  7578  02A6  00BE               	movwf	_dtoa$1013+1
  7579  02A7  083D               	movf	_dtoa$1013,w
  7580  02A8  00B9               	movwf	??_dtoa
  7581  02A9  084D               	movf	dtoa@i,w
  7582  02AA  3EBA               	addlw	(low (_dbuf| 0))& (0+255)
  7583  02AB  0086               	movwf	6
  7584  02AC  0187               	clrf	7
  7585  02AD  0839               	movf	??_dtoa,w
  7586  02AE  0081               	movwf	1
  7587  02AF                     l2970:
  7588                           
  7589                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  7590  02AF  0020               	movlb	0	; select bank0
  7591  02B0  084D               	movf	dtoa@i,w
  7592  02B1  3EBA               	addlw	(low (_dbuf| 0))& (0+255)
  7593  02B2  00B9               	movwf	??_dtoa
  7594  02B3  0839               	movf	??_dtoa,w
  7595  02B4  00A8               	movwf	pad@buf
  7596  02B5  0842               	movf	dtoa@w+1,w
  7597  02B6  00AA               	movwf	pad@p+1
  7598  02B7  0841               	movf	dtoa@w,w
  7599  02B8  00A9               	movwf	pad@p
  7600  02B9  083C               	movf	dtoa@fp,w
  7601  02BA  318F  2760         	fcall	_pad
  7602  02BC  0829               	movf	?_pad+1,w
  7603  02BD  00B2               	movwf	?_dtoa+1
  7604  02BE  0828               	movf	?_pad,w
  7605  02BF  00B1               	movwf	?_dtoa
  7606  02C0  0008               	return
  7607  02C1                     __end_of_dtoa:
  7608                           
  7609                           	psect	text10
  7610  0F60                     __ptext10:	
  7611 ;; *************** function _pad *****************
  7612 ;; Defined at:
  7613 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7614 ;; Parameters:    Size  Location     Type
  7615 ;;  fp              1    wreg     PTR struct _IO_FILE
  7616 ;;		 -> NULL(0), sprintf@f(5), 
  7617 ;;  buf             1    8[BANK0 ] PTR unsigned char 
  7618 ;;		 -> dbuf(32), 
  7619 ;;  p               2    9[BANK0 ] int 
  7620 ;; Auto vars:     Size  Location     Type
  7621 ;;  fp              1   16[BANK0 ] PTR struct _IO_FILE
  7622 ;;		 -> NULL(0), sprintf@f(5), 
  7623 ;;  w               2   14[BANK0 ] int 
  7624 ;;  i               2   12[BANK0 ] int 
  7625 ;; Return value:  Size  Location     Type
  7626 ;;                  2    8[BANK0 ] int 
  7627 ;; Registers used:
  7628 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7629 ;; Tracked objects:
  7630 ;;		On entry : 1F/0
  7631 ;;		On exit  : 1F/0
  7632 ;;		Unchanged: 0/0
  7633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7634 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7635 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7636 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7637 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7638 ;;Total ram usage:        9 bytes
  7639 ;; Hardware stack levels used: 1
  7640 ;; Hardware stack levels required when called: 5
  7641 ;; This function calls:
  7642 ;;		_fputc
  7643 ;;		_fputs
  7644 ;;		_strlen
  7645 ;; This function is called by:
  7646 ;;		_dtoa
  7647 ;; This function uses a non-reentrant model
  7648 ;;
  7649                           
  7650                           
  7651                           ;psect for function _pad
  7652  0F60                     _pad:
  7653                           
  7654                           ;incstack = 0
  7655                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7656                           ;pad@fp stored from wreg
  7657  0F60  00B0               	movwf	pad@fp
  7658                           
  7659                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7660  0F61  0021               	movlb	1	; select bank1
  7661  0F62  1C2E               	btfss	_flags^(0+128),0
  7662  0F63  2F6D               	goto	l2858
  7663                           
  7664                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7665  0F64  0020               	movlb	0	; select bank0
  7666  0F65  0830               	movf	pad@fp,w
  7667  0F66  00AB               	movwf	??_pad
  7668  0F67  082B               	movf	??_pad,w
  7669  0F68  00A0               	movwf	fputs@fp
  7670  0F69  0828               	movf	pad@buf,w
  7671  0F6A  318E  2629  318F   	fcall	_fputs
  7672  0F6D                     l2858:
  7673                           
  7674                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7675  0F6D  0020               	movlb	0	; select bank0
  7676  0F6E  1BAA               	btfsc	pad@p+1,7
  7677  0F6F  2F75               	goto	l2862
  7678  0F70  082A               	movf	pad@p+1,w
  7679  0F71  00AF               	movwf	pad@w+1
  7680  0F72  0829               	movf	pad@p,w
  7681  0F73  00AE               	movwf	pad@w
  7682  0F74  2F77               	goto	l1099
  7683  0F75                     l2862:
  7684  0F75  01AE               	clrf	pad@w
  7685  0F76  01AF               	clrf	pad@w+1
  7686  0F77                     l1099:
  7687                           
  7688                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7689  0F77  01AC               	clrf	pad@i
  7690  0F78  01AD               	clrf	pad@i+1
  7691  0F79                     l2868:	
  7692                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7693                           
  7694                           
  7695                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7696  0F79  082D               	movf	pad@i+1,w
  7697  0F7A  3A80               	xorlw	128
  7698  0F7B  00AB               	movwf	??_pad
  7699  0F7C  082F               	movf	pad@w+1,w
  7700  0F7D  3A80               	xorlw	128
  7701  0F7E  022B               	subwf	??_pad,w
  7702  0F7F  1D03               	skipz
  7703  0F80  2F83               	goto	u2495
  7704  0F81  082E               	movf	pad@w,w
  7705  0F82  022C               	subwf	pad@i,w
  7706  0F83                     u2495:
  7707  0F83  1803               	btfsc	3,0
  7708  0F84  2F97               	goto	l1102
  7709                           
  7710                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7711  0F85  3020               	movlw	32
  7712  0F86  00F4               	movwf	fputc@c
  7713  0F87  3000               	movlw	0
  7714  0F88  00F5               	movwf	fputc@c+1
  7715  0F89  0020               	movlb	0	; select bank0
  7716  0F8A  0830               	movf	pad@fp,w
  7717  0F8B  00AB               	movwf	??_pad
  7718  0F8C  082B               	movf	??_pad,w
  7719  0F8D  00F6               	movwf	fputc@fp
  7720  0F8E  3187  27B6  318F   	fcall	_fputc
  7721                           
  7722                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7723  0F91  3001               	movlw	1
  7724  0F92  0020               	movlb	0	; select bank0
  7725  0F93  07AC               	addwf	pad@i,f
  7726  0F94  3000               	movlw	0
  7727  0F95  3DAD               	addwfc	pad@i+1,f
  7728  0F96  2F79               	goto	l2868
  7729  0F97                     l1102:
  7730                           
  7731                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7732  0F97  0021               	movlb	1	; select bank1
  7733  0F98  182E               	btfsc	_flags^(0+128),0
  7734  0F99  2FA3               	goto	l2872
  7735                           
  7736                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7737  0F9A  0020               	movlb	0	; select bank0
  7738  0F9B  0830               	movf	pad@fp,w
  7739  0F9C  00AB               	movwf	??_pad
  7740  0F9D  082B               	movf	??_pad,w
  7741  0F9E  00A0               	movwf	fputs@fp
  7742  0F9F  0828               	movf	pad@buf,w
  7743  0FA0  318E  2629  318F   	fcall	_fputs
  7744  0FA3                     l2872:
  7745                           
  7746                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  7747  0FA3  0020               	movlb	0	; select bank0
  7748  0FA4  0828               	movf	pad@buf,w
  7749  0FA5  318D  25BF         	fcall	_strlen
  7750  0FA7  082E               	movf	pad@w,w
  7751  0FA8  0771               	addwf	?_strlen,w
  7752  0FA9  00A8               	movwf	?_pad
  7753  0FAA  082F               	movf	pad@w+1,w
  7754  0FAB  3D72               	addwfc	?_strlen+1,w
  7755  0FAC  00A9               	movwf	?_pad+1
  7756  0FAD  0008               	return
  7757  0FAE                     __end_of_pad:
  7758                           
  7759                           	psect	text11
  7760  0DBF                     __ptext11:	
  7761 ;; *************** function _strlen *****************
  7762 ;; Defined at:
  7763 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  7764 ;; Parameters:    Size  Location     Type
  7765 ;;  s               1    wreg     PTR const unsigned char 
  7766 ;;		 -> dbuf(32), 
  7767 ;; Auto vars:     Size  Location     Type
  7768 ;;  s               1    5[COMMON] PTR const unsigned char 
  7769 ;;		 -> dbuf(32), 
  7770 ;;  a               1    4[COMMON] PTR const unsigned char 
  7771 ;;		 -> dbuf(32), 
  7772 ;; Return value:  Size  Location     Type
  7773 ;;                  2    1[COMMON] unsigned int 
  7774 ;; Registers used:
  7775 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7776 ;; Tracked objects:
  7777 ;;		On entry : 1F/0
  7778 ;;		On exit  : 1F/0
  7779 ;;		Unchanged: 1F/0
  7780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7781 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7782 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7783 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7784 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7785 ;;Total ram usage:        5 bytes
  7786 ;; Hardware stack levels used: 1
  7787 ;; Hardware stack levels required when called: 1
  7788 ;; This function calls:
  7789 ;;		Nothing
  7790 ;; This function is called by:
  7791 ;;		_pad
  7792 ;; This function uses a non-reentrant model
  7793 ;;
  7794                           
  7795                           
  7796                           ;psect for function _strlen
  7797  0DBF                     _strlen:
  7798                           
  7799                           ;incstack = 0
  7800                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  7801                           ;strlen@s stored from wreg
  7802  0DBF  00F5               	movwf	strlen@s
  7803  0DC0  0875               	movf	strlen@s,w
  7804  0DC1  00F3               	movwf	??_strlen
  7805  0DC2  0873               	movf	??_strlen,w
  7806  0DC3  00F4               	movwf	strlen@a
  7807  0DC4                     l2068:
  7808  0DC4  0875               	movf	strlen@s,w
  7809  0DC5  0086               	movwf	6
  7810  0DC6  0187               	clrf	7
  7811  0DC7  0801               	movf	1,w
  7812  0DC8  1903               	btfsc	3,2
  7813  0DC9  2DCF               	goto	l2070
  7814  0DCA  3001               	movlw	1
  7815  0DCB  00F3               	movwf	??_strlen
  7816  0DCC  0873               	movf	??_strlen,w
  7817  0DCD  07F5               	addwf	strlen@s,f
  7818  0DCE  2DC4               	goto	l2068
  7819  0DCF                     l2070:
  7820  0DCF  0874               	movf	strlen@a,w
  7821  0DD0  0275               	subwf	strlen@s,w
  7822  0DD1  00F1               	movwf	?_strlen
  7823  0DD2  01F2               	clrf	?_strlen+1
  7824  0DD3  1BF1               	btfsc	?_strlen,7
  7825  0DD4  03F2               	decf	?_strlen+1,f
  7826  0DD5  0008               	return
  7827  0DD6                     __end_of_strlen:
  7828                           
  7829                           	psect	text12
  7830  0E29                     __ptext12:	
  7831 ;; *************** function _fputs *****************
  7832 ;; Defined at:
  7833 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  7834 ;; Parameters:    Size  Location     Type
  7835 ;;  s               1    wreg     PTR const unsigned char 
  7836 ;;		 -> dbuf(32), 
  7837 ;;  fp              1    0[BANK0 ] PTR struct _IO_FILE
  7838 ;;		 -> NULL(0), sprintf@f(5), 
  7839 ;; Auto vars:     Size  Location     Type
  7840 ;;  s               1    7[BANK0 ] PTR const unsigned char 
  7841 ;;		 -> dbuf(32), 
  7842 ;;  i               2    5[BANK0 ] int 
  7843 ;;  c               1    4[BANK0 ] unsigned char 
  7844 ;; Return value:  Size  Location     Type
  7845 ;;                  2    0[BANK0 ] int 
  7846 ;; Registers used:
  7847 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7848 ;; Tracked objects:
  7849 ;;		On entry : 1F/0
  7850 ;;		On exit  : 1F/0
  7851 ;;		Unchanged: 0/0
  7852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7853 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7854 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7855 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7856 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7857 ;;Total ram usage:        8 bytes
  7858 ;; Hardware stack levels used: 1
  7859 ;; Hardware stack levels required when called: 4
  7860 ;; This function calls:
  7861 ;;		_fputc
  7862 ;; This function is called by:
  7863 ;;		_pad
  7864 ;; This function uses a non-reentrant model
  7865 ;;
  7866                           
  7867                           
  7868                           ;psect for function _fputs
  7869  0E29                     _fputs:
  7870                           
  7871                           ;incstack = 0
  7872                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7873                           ;fputs@s stored from wreg
  7874  0E29  00A7               	movwf	fputs@s
  7875  0E2A  01A5               	clrf	fputs@i
  7876  0E2B  01A6               	clrf	fputs@i+1
  7877  0E2C                     l2846:
  7878  0E2C  0825               	movf	fputs@i,w
  7879  0E2D  0727               	addwf	fputs@s,w
  7880  0E2E  00A1               	movwf	??_fputs
  7881  0E2F  0821               	movf	??_fputs,w
  7882  0E30  0086               	movwf	6
  7883  0E31  0187               	clrf	7
  7884  0E32  0801               	movf	1,w
  7885  0E33  00A2               	movwf	??_fputs+1
  7886  0E34  0822               	movf	??_fputs+1,w
  7887  0E35  00A4               	movwf	fputs@c
  7888  0E36  0824               	movf	fputs@c,w
  7889  0E37  1903               	btfsc	3,2
  7890  0E38  0008               	return
  7891  0E39  0824               	movf	fputs@c,w
  7892  0E3A  00A1               	movwf	??_fputs
  7893  0E3B  01A2               	clrf	??_fputs+1
  7894  0E3C  0821               	movf	??_fputs,w
  7895  0E3D  00F4               	movwf	fputc@c
  7896  0E3E  0822               	movf	??_fputs+1,w
  7897  0E3F  00F5               	movwf	fputc@c+1
  7898  0E40  0820               	movf	fputs@fp,w
  7899  0E41  00A3               	movwf	??_fputs+2
  7900  0E42  0823               	movf	??_fputs+2,w
  7901  0E43  00F6               	movwf	fputc@fp
  7902  0E44  3187  27B6  318E   	fcall	_fputc
  7903  0E47  3001               	movlw	1
  7904  0E48  0020               	movlb	0	; select bank0
  7905  0E49  07A5               	addwf	fputs@i,f
  7906  0E4A  3000               	movlw	0
  7907  0E4B  3DA6               	addwfc	fputs@i+1,f
  7908  0E4C  2E2C               	goto	l2846
  7909  0E4D                     __end_of_fputs:
  7910                           
  7911                           	psect	text13
  7912  0DA8                     __ptext13:	
  7913 ;; *************** function _abs *****************
  7914 ;; Defined at:
  7915 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  7916 ;; Parameters:    Size  Location     Type
  7917 ;;  a               2    4[COMMON] int 
  7918 ;; Auto vars:     Size  Location     Type
  7919 ;;		None
  7920 ;; Return value:  Size  Location     Type
  7921 ;;                  2    4[COMMON] int 
  7922 ;; Registers used:
  7923 ;;		wreg, status,2, status,0
  7924 ;; Tracked objects:
  7925 ;;		On entry : 1F/0
  7926 ;;		On exit  : 0/0
  7927 ;;		Unchanged: 0/0
  7928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7929 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7931 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7932 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7933 ;;Total ram usage:        4 bytes
  7934 ;; Hardware stack levels used: 1
  7935 ;; Hardware stack levels required when called: 1
  7936 ;; This function calls:
  7937 ;;		Nothing
  7938 ;; This function is called by:
  7939 ;;		_dtoa
  7940 ;; This function uses a non-reentrant model
  7941 ;;
  7942                           
  7943                           
  7944                           ;psect for function _abs
  7945  0DA8                     _abs:
  7946                           
  7947                           ;incstack = 0
  7948                           ; Regs used in _abs: [wreg+status,2+status,0]
  7949  0DA8  0875               	movf	abs@a+1,w
  7950  0DA9  3A80               	xorlw	128
  7951  0DAA  00F6               	movwf	??_abs
  7952  0DAB  3080               	movlw	128
  7953  0DAC  0276               	subwf	??_abs,w
  7954  0DAD  1D03               	skipz
  7955  0DAE  2DB1               	goto	u1585
  7956  0DAF  3001               	movlw	1
  7957  0DB0  0274               	subwf	abs@a,w
  7958  0DB1                     u1585:
  7959  0DB1  1803               	skipnc
  7960  0DB2  0008               	return
  7961  0DB3  0974               	comf	abs@a,w
  7962  0DB4  00F6               	movwf	??_abs
  7963  0DB5  0975               	comf	abs@a+1,w
  7964  0DB6  00F7               	movwf	??_abs+1
  7965  0DB7  0AF6               	incf	??_abs,f
  7966  0DB8  1903               	skipnz
  7967  0DB9  0AF7               	incf	??_abs+1,f
  7968  0DBA  0876               	movf	??_abs,w
  7969  0DBB  00F4               	movwf	?_abs
  7970  0DBC  0877               	movf	??_abs+1,w
  7971  0DBD  00F5               	movwf	?_abs+1
  7972  0DBE  0008               	return
  7973  0DBF                     __end_of_abs:
  7974                           
  7975                           	psect	text14
  7976  04DD                     __ptext14:	
  7977 ;; *************** function ___aomod *****************
  7978 ;; Defined at:
  7979 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  7980 ;; Parameters:    Size  Location     Type
  7981 ;;  divisor         8    0[BANK0 ] long long 
  7982 ;;  dividend        8    8[BANK0 ] long long 
  7983 ;; Auto vars:     Size  Location     Type
  7984 ;;  sign            1    3[COMMON] unsigned char 
  7985 ;;  counter         1    2[COMMON] unsigned char 
  7986 ;; Return value:  Size  Location     Type
  7987 ;;                  8    0[BANK0 ] long long 
  7988 ;; Registers used:
  7989 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7990 ;; Tracked objects:
  7991 ;;		On entry : 1F/0
  7992 ;;		On exit  : 1F/0
  7993 ;;		Unchanged: 0/0
  7994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7995 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7996 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7997 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7998 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7999 ;;Total ram usage:       19 bytes
  8000 ;; Hardware stack levels used: 1
  8001 ;; Hardware stack levels required when called: 1
  8002 ;; This function calls:
  8003 ;;		Nothing
  8004 ;; This function is called by:
  8005 ;;		_dtoa
  8006 ;; This function uses a non-reentrant model
  8007 ;;
  8008                           
  8009                           
  8010                           ;psect for function ___aomod
  8011  04DD                     ___aomod:
  8012                           
  8013                           ;incstack = 0
  8014                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  8015  04DD  01F3               	clrf	___aomod@sign
  8016  04DE  3028               	movlw	low ___aomod@dividend
  8017  04DF  0086               	movwf	6
  8018  04E0  3000               	movlw	high ___aomod@dividend
  8019  04E1  0087               	movwf	7
  8020  04E2  3F47               	moviw [7]fsr1
  8021  04E3  00F1               	movwf	??___aomod
  8022  04E4  1FF1               	btfss	??___aomod,7
  8023  04E5  2D07               	goto	l2124
  8024  04E6  0020               	movlb	0	; select bank0
  8025  04E7  09A8               	comf	___aomod@dividend,f
  8026  04E8  09A9               	comf	___aomod@dividend+1,f
  8027  04E9  09AA               	comf	___aomod@dividend+2,f
  8028  04EA  09AB               	comf	___aomod@dividend+3,f
  8029  04EB  09AC               	comf	___aomod@dividend+4,f
  8030  04EC  09AD               	comf	___aomod@dividend+5,f
  8031  04ED  09AE               	comf	___aomod@dividend+6,f
  8032  04EE  09AF               	comf	___aomod@dividend+7,f
  8033  04EF  0AA8               	incf	___aomod@dividend,f
  8034  04F0  1D03               	skipz
  8035  04F1  2D05               	goto	u145lld
  8036  04F2  0AA9               	incf	___aomod@dividend+1,f
  8037  04F3  1D03               	skipz
  8038  04F4  2D05               	goto	u145lld
  8039  04F5  0AAA               	incf	___aomod@dividend+2,f
  8040  04F6  1D03               	skipz
  8041  04F7  2D05               	goto	u145lld
  8042  04F8  0AAB               	incf	___aomod@dividend+3,f
  8043  04F9  1D03               	skipz
  8044  04FA  2D05               	goto	u145lld
  8045  04FB  0AAC               	incf	___aomod@dividend+4,f
  8046  04FC  1D03               	skipz
  8047  04FD  2D05               	goto	u145lld
  8048  04FE  0AAD               	incf	___aomod@dividend+5,f
  8049  04FF  1D03               	skipz
  8050  0500  2D05               	goto	u145lld
  8051  0501  0AAE               	incf	___aomod@dividend+6,f
  8052  0502  1D03               	skipz
  8053  0503  2D05               	goto	u145lld
  8054  0504  0AAF               	incf	___aomod@dividend+7,f
  8055  0505                     u145lld:
  8056  0505  01F3               	clrf	___aomod@sign
  8057  0506  0AF3               	incf	___aomod@sign,f
  8058  0507                     l2124:
  8059  0507  3020               	movlw	low ___aomod@divisor
  8060  0508  0086               	movwf	6
  8061  0509  3000               	movlw	high ___aomod@divisor
  8062  050A  0087               	movwf	7
  8063  050B  3F47               	moviw [7]fsr1
  8064  050C  00F1               	movwf	??___aomod
  8065  050D  1FF1               	btfss	??___aomod,7
  8066  050E  2D2E               	goto	l2128
  8067  050F  0020               	movlb	0	; select bank0
  8068  0510  09A0               	comf	___aomod@divisor,f
  8069  0511  09A1               	comf	___aomod@divisor+1,f
  8070  0512  09A2               	comf	___aomod@divisor+2,f
  8071  0513  09A3               	comf	___aomod@divisor+3,f
  8072  0514  09A4               	comf	___aomod@divisor+4,f
  8073  0515  09A5               	comf	___aomod@divisor+5,f
  8074  0516  09A6               	comf	___aomod@divisor+6,f
  8075  0517  09A7               	comf	___aomod@divisor+7,f
  8076  0518  0AA0               	incf	___aomod@divisor,f
  8077  0519  1D03               	skipz
  8078  051A  2D2E               	goto	l2128
  8079  051B  0AA1               	incf	___aomod@divisor+1,f
  8080  051C  1D03               	skipz
  8081  051D  2D2E               	goto	l2128
  8082  051E  0AA2               	incf	___aomod@divisor+2,f
  8083  051F  1D03               	skipz
  8084  0520  2D2E               	goto	l2128
  8085  0521  0AA3               	incf	___aomod@divisor+3,f
  8086  0522  1D03               	skipz
  8087  0523  2D2E               	goto	l2128
  8088  0524  0AA4               	incf	___aomod@divisor+4,f
  8089  0525  1D03               	skipz
  8090  0526  2D2E               	goto	l2128
  8091  0527  0AA5               	incf	___aomod@divisor+5,f
  8092  0528  1D03               	skipz
  8093  0529  2D2E               	goto	l2128
  8094  052A  0AA6               	incf	___aomod@divisor+6,f
  8095  052B  1D03               	skipz
  8096  052C  2D2E               	goto	l2128
  8097  052D  0AA7               	incf	___aomod@divisor+7,f
  8098  052E                     l2128:
  8099  052E  0020               	movlb	0	; select bank0
  8100  052F  0820               	movf	___aomod@divisor,w
  8101  0530  0421               	iorwf	___aomod@divisor+1,w
  8102  0531  0422               	iorwf	___aomod@divisor+2,w
  8103  0532  0423               	iorwf	___aomod@divisor+3,w
  8104  0533  0424               	iorwf	___aomod@divisor+4,w
  8105  0534  0425               	iorwf	___aomod@divisor+5,w
  8106  0535  0426               	iorwf	___aomod@divisor+6,w
  8107  0536  0427               	iorwf	___aomod@divisor+7,w
  8108  0537  1903               	skipnz
  8109  0538  2D86               	goto	l2144
  8110  0539  01F2               	clrf	___aomod@counter
  8111  053A  0AF2               	incf	___aomod@counter,f
  8112  053B                     l2136:
  8113  053B  1BA7               	btfsc	___aomod@divisor+7,7
  8114  053C  2D4A               	goto	l2138
  8115  053D  35A0               	lslf	___aomod@divisor,f
  8116  053E  0DA1               	rlf	___aomod@divisor+1,f
  8117  053F  0DA2               	rlf	___aomod@divisor+2,f
  8118  0540  0DA3               	rlf	___aomod@divisor+3,f
  8119  0541  0DA4               	rlf	___aomod@divisor+4,f
  8120  0542  0DA5               	rlf	___aomod@divisor+5,f
  8121  0543  0DA6               	rlf	___aomod@divisor+6,f
  8122  0544  0DA7               	rlf	___aomod@divisor+7,f
  8123  0545  3001               	movlw	1
  8124  0546  00F1               	movwf	??___aomod
  8125  0547  0871               	movf	??___aomod,w
  8126  0548  07F2               	addwf	___aomod@counter,f
  8127  0549  2D3B               	goto	l2136
  8128  054A                     l2138:
  8129  054A  0827               	movf	___aomod@divisor+7,w
  8130  054B  022F               	subwf	___aomod@dividend+7,w
  8131  054C  1D03               	skipz
  8132  054D  2D68               	goto	u1505
  8133  054E  0826               	movf	___aomod@divisor+6,w
  8134  054F  022E               	subwf	___aomod@dividend+6,w
  8135  0550  1D03               	skipz
  8136  0551  2D68               	goto	u1505
  8137  0552  0825               	movf	___aomod@divisor+5,w
  8138  0553  022D               	subwf	___aomod@dividend+5,w
  8139  0554  1D03               	skipz
  8140  0555  2D68               	goto	u1505
  8141  0556  0824               	movf	___aomod@divisor+4,w
  8142  0557  022C               	subwf	___aomod@dividend+4,w
  8143  0558  1D03               	skipz
  8144  0559  2D68               	goto	u1505
  8145  055A  0823               	movf	___aomod@divisor+3,w
  8146  055B  022B               	subwf	___aomod@dividend+3,w
  8147  055C  1D03               	skipz
  8148  055D  2D68               	goto	u1505
  8149  055E  0822               	movf	___aomod@divisor+2,w
  8150  055F  022A               	subwf	___aomod@dividend+2,w
  8151  0560  1D03               	skipz
  8152  0561  2D68               	goto	u1505
  8153  0562  0821               	movf	___aomod@divisor+1,w
  8154  0563  0229               	subwf	___aomod@dividend+1,w
  8155  0564  1D03               	skipz
  8156  0565  2D68               	goto	u1505
  8157  0566  0820               	movf	___aomod@divisor,w
  8158  0567  0228               	subwf	___aomod@dividend,w
  8159  0568                     u1505:
  8160  0568  1C03               	skipc
  8161  0569  2D7A               	goto	l2142
  8162  056A  0820               	movf	___aomod@divisor,w
  8163  056B  02A8               	subwf	___aomod@dividend,f
  8164  056C  0821               	movf	___aomod@divisor+1,w
  8165  056D  3BA9               	subwfb	___aomod@dividend+1,f
  8166  056E  0822               	movf	___aomod@divisor+2,w
  8167  056F  3BAA               	subwfb	___aomod@dividend+2,f
  8168  0570  0823               	movf	___aomod@divisor+3,w
  8169  0571  3BAB               	subwfb	___aomod@dividend+3,f
  8170  0572  0824               	movf	___aomod@divisor+4,w
  8171  0573  3BAC               	subwfb	___aomod@dividend+4,f
  8172  0574  0825               	movf	___aomod@divisor+5,w
  8173  0575  3BAD               	subwfb	___aomod@dividend+5,f
  8174  0576  0826               	movf	___aomod@divisor+6,w
  8175  0577  3BAE               	subwfb	___aomod@dividend+6,f
  8176  0578  0827               	movf	___aomod@divisor+7,w
  8177  0579  3BAF               	subwfb	___aomod@dividend+7,f
  8178  057A                     l2142:
  8179  057A  36A7               	lsrf	___aomod@divisor+7,f
  8180  057B  0CA6               	rrf	___aomod@divisor+6,f
  8181  057C  0CA5               	rrf	___aomod@divisor+5,f
  8182  057D  0CA4               	rrf	___aomod@divisor+4,f
  8183  057E  0CA3               	rrf	___aomod@divisor+3,f
  8184  057F  0CA2               	rrf	___aomod@divisor+2,f
  8185  0580  0CA1               	rrf	___aomod@divisor+1,f
  8186  0581  0CA0               	rrf	___aomod@divisor,f
  8187  0582  3001               	movlw	1
  8188  0583  02F2               	subwf	___aomod@counter,f
  8189  0584  1D03               	btfss	3,2
  8190  0585  2D4A               	goto	l2138
  8191  0586                     l2144:
  8192  0586  0873               	movf	___aomod@sign,w
  8193  0587  1903               	btfsc	3,2
  8194  0588  2DA7               	goto	l722
  8195  0589  09A8               	comf	___aomod@dividend,f
  8196  058A  09A9               	comf	___aomod@dividend+1,f
  8197  058B  09AA               	comf	___aomod@dividend+2,f
  8198  058C  09AB               	comf	___aomod@dividend+3,f
  8199  058D  09AC               	comf	___aomod@dividend+4,f
  8200  058E  09AD               	comf	___aomod@dividend+5,f
  8201  058F  09AE               	comf	___aomod@dividend+6,f
  8202  0590  09AF               	comf	___aomod@dividend+7,f
  8203  0591  0AA8               	incf	___aomod@dividend,f
  8204  0592  1D03               	skipz
  8205  0593  2DA7               	goto	l722
  8206  0594  0AA9               	incf	___aomod@dividend+1,f
  8207  0595  1D03               	skipz
  8208  0596  2DA7               	goto	l722
  8209  0597  0AAA               	incf	___aomod@dividend+2,f
  8210  0598  1D03               	skipz
  8211  0599  2DA7               	goto	l722
  8212  059A  0AAB               	incf	___aomod@dividend+3,f
  8213  059B  1D03               	skipz
  8214  059C  2DA7               	goto	l722
  8215  059D  0AAC               	incf	___aomod@dividend+4,f
  8216  059E  1D03               	skipz
  8217  059F  2DA7               	goto	l722
  8218  05A0  0AAD               	incf	___aomod@dividend+5,f
  8219  05A1  1D03               	skipz
  8220  05A2  2DA7               	goto	l722
  8221  05A3  0AAE               	incf	___aomod@dividend+6,f
  8222  05A4  1D03               	skipz
  8223  05A5  2DA7               	goto	l722
  8224  05A6  0AAF               	incf	___aomod@dividend+7,f
  8225  05A7                     l722:
  8226  05A7  0020               	movlb	0	; select bank0
  8227  05A8  0828               	movf	___aomod@dividend,w
  8228  05A9  00A0               	movwf	?___aomod
  8229  05AA  0829               	movf	___aomod@dividend+1,w
  8230  05AB  00A1               	movwf	?___aomod+1
  8231  05AC  082A               	movf	___aomod@dividend+2,w
  8232  05AD  00A2               	movwf	?___aomod+2
  8233  05AE  082B               	movf	___aomod@dividend+3,w
  8234  05AF  00A3               	movwf	?___aomod+3
  8235  05B0  082C               	movf	___aomod@dividend+4,w
  8236  05B1  00A4               	movwf	?___aomod+4
  8237  05B2  082D               	movf	___aomod@dividend+5,w
  8238  05B3  00A5               	movwf	?___aomod+5
  8239  05B4  082E               	movf	___aomod@dividend+6,w
  8240  05B5  00A6               	movwf	?___aomod+6
  8241  05B6  082F               	movf	___aomod@dividend+7,w
  8242  05B7  00A7               	movwf	?___aomod+7
  8243  05B8  0008               	return
  8244  05B9                     __end_of___aomod:
  8245                           
  8246                           	psect	text15
  8247  03EA                     __ptext15:	
  8248 ;; *************** function ___aodiv *****************
  8249 ;; Defined at:
  8250 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  8251 ;; Parameters:    Size  Location     Type
  8252 ;;  divisor         8    0[BANK0 ] long long 
  8253 ;;  dividend        8    8[BANK0 ] long long 
  8254 ;; Auto vars:     Size  Location     Type
  8255 ;;  quotient        8    4[COMMON] long long 
  8256 ;;  sign            1    3[COMMON] unsigned char 
  8257 ;;  counter         1    2[COMMON] unsigned char 
  8258 ;; Return value:  Size  Location     Type
  8259 ;;                  8    0[BANK0 ] long long 
  8260 ;; Registers used:
  8261 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8262 ;; Tracked objects:
  8263 ;;		On entry : 1F/0
  8264 ;;		On exit  : 1F/0
  8265 ;;		Unchanged: 0/0
  8266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8267 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8268 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8269 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8270 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8271 ;;Total ram usage:       27 bytes
  8272 ;; Hardware stack levels used: 1
  8273 ;; Hardware stack levels required when called: 1
  8274 ;; This function calls:
  8275 ;;		Nothing
  8276 ;; This function is called by:
  8277 ;;		_dtoa
  8278 ;; This function uses a non-reentrant model
  8279 ;;
  8280                           
  8281                           
  8282                           ;psect for function ___aodiv
  8283  03EA                     ___aodiv:
  8284                           
  8285                           ;incstack = 0
  8286                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  8287  03EA  01F3               	clrf	___aodiv@sign
  8288  03EB  3020               	movlw	low ___aodiv@divisor
  8289  03EC  0086               	movwf	6
  8290  03ED  3000               	movlw	high ___aodiv@divisor
  8291  03EE  0087               	movwf	7
  8292  03EF  3F47               	moviw [7]fsr1
  8293  03F0  00F1               	movwf	??___aodiv
  8294  03F1  1FF1               	btfss	??___aodiv,7
  8295  03F2  2C14               	goto	l2086
  8296  03F3  0020               	movlb	0	; select bank0
  8297  03F4  09A0               	comf	___aodiv@divisor,f
  8298  03F5  09A1               	comf	___aodiv@divisor+1,f
  8299  03F6  09A2               	comf	___aodiv@divisor+2,f
  8300  03F7  09A3               	comf	___aodiv@divisor+3,f
  8301  03F8  09A4               	comf	___aodiv@divisor+4,f
  8302  03F9  09A5               	comf	___aodiv@divisor+5,f
  8303  03FA  09A6               	comf	___aodiv@divisor+6,f
  8304  03FB  09A7               	comf	___aodiv@divisor+7,f
  8305  03FC  0AA0               	incf	___aodiv@divisor,f
  8306  03FD  1D03               	skipz
  8307  03FE  2C12               	goto	u134lld
  8308  03FF  0AA1               	incf	___aodiv@divisor+1,f
  8309  0400  1D03               	skipz
  8310  0401  2C12               	goto	u134lld
  8311  0402  0AA2               	incf	___aodiv@divisor+2,f
  8312  0403  1D03               	skipz
  8313  0404  2C12               	goto	u134lld
  8314  0405  0AA3               	incf	___aodiv@divisor+3,f
  8315  0406  1D03               	skipz
  8316  0407  2C12               	goto	u134lld
  8317  0408  0AA4               	incf	___aodiv@divisor+4,f
  8318  0409  1D03               	skipz
  8319  040A  2C12               	goto	u134lld
  8320  040B  0AA5               	incf	___aodiv@divisor+5,f
  8321  040C  1D03               	skipz
  8322  040D  2C12               	goto	u134lld
  8323  040E  0AA6               	incf	___aodiv@divisor+6,f
  8324  040F  1D03               	skipz
  8325  0410  2C12               	goto	u134lld
  8326  0411  0AA7               	incf	___aodiv@divisor+7,f
  8327  0412                     u134lld:
  8328  0412  01F3               	clrf	___aodiv@sign
  8329  0413  0AF3               	incf	___aodiv@sign,f
  8330  0414                     l2086:
  8331  0414  3028               	movlw	low ___aodiv@dividend
  8332  0415  0086               	movwf	6
  8333  0416  3000               	movlw	high ___aodiv@dividend
  8334  0417  0087               	movwf	7
  8335  0418  3F47               	moviw [7]fsr1
  8336  0419  00F1               	movwf	??___aodiv
  8337  041A  1FF1               	btfss	??___aodiv,7
  8338  041B  2C3F               	goto	l2092
  8339  041C  0020               	movlb	0	; select bank0
  8340  041D  09A8               	comf	___aodiv@dividend,f
  8341  041E  09A9               	comf	___aodiv@dividend+1,f
  8342  041F  09AA               	comf	___aodiv@dividend+2,f
  8343  0420  09AB               	comf	___aodiv@dividend+3,f
  8344  0421  09AC               	comf	___aodiv@dividend+4,f
  8345  0422  09AD               	comf	___aodiv@dividend+5,f
  8346  0423  09AE               	comf	___aodiv@dividend+6,f
  8347  0424  09AF               	comf	___aodiv@dividend+7,f
  8348  0425  0AA8               	incf	___aodiv@dividend,f
  8349  0426  1D03               	skipz
  8350  0427  2C3B               	goto	l2090
  8351  0428  0AA9               	incf	___aodiv@dividend+1,f
  8352  0429  1D03               	skipz
  8353  042A  2C3B               	goto	l2090
  8354  042B  0AAA               	incf	___aodiv@dividend+2,f
  8355  042C  1D03               	skipz
  8356  042D  2C3B               	goto	l2090
  8357  042E  0AAB               	incf	___aodiv@dividend+3,f
  8358  042F  1D03               	skipz
  8359  0430  2C3B               	goto	l2090
  8360  0431  0AAC               	incf	___aodiv@dividend+4,f
  8361  0432  1D03               	skipz
  8362  0433  2C3B               	goto	l2090
  8363  0434  0AAD               	incf	___aodiv@dividend+5,f
  8364  0435  1D03               	skipz
  8365  0436  2C3B               	goto	l2090
  8366  0437  0AAE               	incf	___aodiv@dividend+6,f
  8367  0438  1D03               	skipz
  8368  0439  2C3B               	goto	l2090
  8369  043A  0AAF               	incf	___aodiv@dividend+7,f
  8370  043B                     l2090:
  8371  043B  3001               	movlw	1
  8372  043C  00F1               	movwf	??___aodiv
  8373  043D  0871               	movf	??___aodiv,w
  8374  043E  06F3               	xorwf	___aodiv@sign,f
  8375  043F                     l2092:
  8376  043F  3074               	movlw	low ___aodiv@quotient
  8377  0440  0086               	movwf	6
  8378  0441  3000               	movlw	high ___aodiv@quotient
  8379  0442  0087               	movwf	7
  8380  0443  3008               	movlw	8
  8381  0444  00F1               	movwf	??___aodiv
  8382  0445  3000               	movlw	0
  8383  0446                     u1370:
  8384  0446  001E               	movwi fsr1++
  8385  0447  0BF1               	decfsz	??___aodiv,f
  8386  0448  2C46               	goto	u1370
  8387  0449  0020               	movlb	0	; select bank0
  8388  044A  0820               	movf	___aodiv@divisor,w
  8389  044B  0421               	iorwf	___aodiv@divisor+1,w
  8390  044C  0422               	iorwf	___aodiv@divisor+2,w
  8391  044D  0423               	iorwf	___aodiv@divisor+3,w
  8392  044E  0424               	iorwf	___aodiv@divisor+4,w
  8393  044F  0425               	iorwf	___aodiv@divisor+5,w
  8394  0450  0426               	iorwf	___aodiv@divisor+6,w
  8395  0451  0427               	iorwf	___aodiv@divisor+7,w
  8396  0452  1903               	skipnz
  8397  0453  2CAA               	goto	l2114
  8398  0454  01F2               	clrf	___aodiv@counter
  8399  0455  0AF2               	incf	___aodiv@counter,f
  8400  0456                     l2102:
  8401  0456  1BA7               	btfsc	___aodiv@divisor+7,7
  8402  0457  2C65               	goto	l2104
  8403  0458  35A0               	lslf	___aodiv@divisor,f
  8404  0459  0DA1               	rlf	___aodiv@divisor+1,f
  8405  045A  0DA2               	rlf	___aodiv@divisor+2,f
  8406  045B  0DA3               	rlf	___aodiv@divisor+3,f
  8407  045C  0DA4               	rlf	___aodiv@divisor+4,f
  8408  045D  0DA5               	rlf	___aodiv@divisor+5,f
  8409  045E  0DA6               	rlf	___aodiv@divisor+6,f
  8410  045F  0DA7               	rlf	___aodiv@divisor+7,f
  8411  0460  3001               	movlw	1
  8412  0461  00F1               	movwf	??___aodiv
  8413  0462  0871               	movf	??___aodiv,w
  8414  0463  07F2               	addwf	___aodiv@counter,f
  8415  0464  2C56               	goto	l2102
  8416  0465                     l2104:
  8417  0465  35F4               	lslf	___aodiv@quotient,f
  8418  0466  0DF5               	rlf	___aodiv@quotient+1,f
  8419  0467  0DF6               	rlf	___aodiv@quotient+2,f
  8420  0468  0DF7               	rlf	___aodiv@quotient+3,f
  8421  0469  0DF8               	rlf	___aodiv@quotient+4,f
  8422  046A  0DF9               	rlf	___aodiv@quotient+5,f
  8423  046B  0DFA               	rlf	___aodiv@quotient+6,f
  8424  046C  0DFB               	rlf	___aodiv@quotient+7,f
  8425  046D  0827               	movf	___aodiv@divisor+7,w
  8426  046E  022F               	subwf	___aodiv@dividend+7,w
  8427  046F  1D03               	skipz
  8428  0470  2C8B               	goto	u1405
  8429  0471  0826               	movf	___aodiv@divisor+6,w
  8430  0472  022E               	subwf	___aodiv@dividend+6,w
  8431  0473  1D03               	skipz
  8432  0474  2C8B               	goto	u1405
  8433  0475  0825               	movf	___aodiv@divisor+5,w
  8434  0476  022D               	subwf	___aodiv@dividend+5,w
  8435  0477  1D03               	skipz
  8436  0478  2C8B               	goto	u1405
  8437  0479  0824               	movf	___aodiv@divisor+4,w
  8438  047A  022C               	subwf	___aodiv@dividend+4,w
  8439  047B  1D03               	skipz
  8440  047C  2C8B               	goto	u1405
  8441  047D  0823               	movf	___aodiv@divisor+3,w
  8442  047E  022B               	subwf	___aodiv@dividend+3,w
  8443  047F  1D03               	skipz
  8444  0480  2C8B               	goto	u1405
  8445  0481  0822               	movf	___aodiv@divisor+2,w
  8446  0482  022A               	subwf	___aodiv@dividend+2,w
  8447  0483  1D03               	skipz
  8448  0484  2C8B               	goto	u1405
  8449  0485  0821               	movf	___aodiv@divisor+1,w
  8450  0486  0229               	subwf	___aodiv@dividend+1,w
  8451  0487  1D03               	skipz
  8452  0488  2C8B               	goto	u1405
  8453  0489  0820               	movf	___aodiv@divisor,w
  8454  048A  0228               	subwf	___aodiv@dividend,w
  8455  048B                     u1405:
  8456  048B  1C03               	skipc
  8457  048C  2C9E               	goto	l2112
  8458  048D  0820               	movf	___aodiv@divisor,w
  8459  048E  02A8               	subwf	___aodiv@dividend,f
  8460  048F  0821               	movf	___aodiv@divisor+1,w
  8461  0490  3BA9               	subwfb	___aodiv@dividend+1,f
  8462  0491  0822               	movf	___aodiv@divisor+2,w
  8463  0492  3BAA               	subwfb	___aodiv@dividend+2,f
  8464  0493  0823               	movf	___aodiv@divisor+3,w
  8465  0494  3BAB               	subwfb	___aodiv@dividend+3,f
  8466  0495  0824               	movf	___aodiv@divisor+4,w
  8467  0496  3BAC               	subwfb	___aodiv@dividend+4,f
  8468  0497  0825               	movf	___aodiv@divisor+5,w
  8469  0498  3BAD               	subwfb	___aodiv@dividend+5,f
  8470  0499  0826               	movf	___aodiv@divisor+6,w
  8471  049A  3BAE               	subwfb	___aodiv@dividend+6,f
  8472  049B  0827               	movf	___aodiv@divisor+7,w
  8473  049C  3BAF               	subwfb	___aodiv@dividend+7,f
  8474  049D  1474               	bsf	___aodiv@quotient,0
  8475  049E                     l2112:
  8476  049E  36A7               	lsrf	___aodiv@divisor+7,f
  8477  049F  0CA6               	rrf	___aodiv@divisor+6,f
  8478  04A0  0CA5               	rrf	___aodiv@divisor+5,f
  8479  04A1  0CA4               	rrf	___aodiv@divisor+4,f
  8480  04A2  0CA3               	rrf	___aodiv@divisor+3,f
  8481  04A3  0CA2               	rrf	___aodiv@divisor+2,f
  8482  04A4  0CA1               	rrf	___aodiv@divisor+1,f
  8483  04A5  0CA0               	rrf	___aodiv@divisor,f
  8484  04A6  3001               	movlw	1
  8485  04A7  02F2               	subwf	___aodiv@counter,f
  8486  04A8  1D03               	btfss	3,2
  8487  04A9  2C65               	goto	l2104
  8488  04AA                     l2114:
  8489  04AA  0873               	movf	___aodiv@sign,w
  8490  04AB  1903               	btfsc	3,2
  8491  04AC  2CCB               	goto	l709
  8492  04AD  09F4               	comf	___aodiv@quotient,f
  8493  04AE  09F5               	comf	___aodiv@quotient+1,f
  8494  04AF  09F6               	comf	___aodiv@quotient+2,f
  8495  04B0  09F7               	comf	___aodiv@quotient+3,f
  8496  04B1  09F8               	comf	___aodiv@quotient+4,f
  8497  04B2  09F9               	comf	___aodiv@quotient+5,f
  8498  04B3  09FA               	comf	___aodiv@quotient+6,f
  8499  04B4  09FB               	comf	___aodiv@quotient+7,f
  8500  04B5  0AF4               	incf	___aodiv@quotient,f
  8501  04B6  1D03               	skipz
  8502  04B7  2CCB               	goto	l709
  8503  04B8  0AF5               	incf	___aodiv@quotient+1,f
  8504  04B9  1D03               	skipz
  8505  04BA  2CCB               	goto	l709
  8506  04BB  0AF6               	incf	___aodiv@quotient+2,f
  8507  04BC  1D03               	skipz
  8508  04BD  2CCB               	goto	l709
  8509  04BE  0AF7               	incf	___aodiv@quotient+3,f
  8510  04BF  1D03               	skipz
  8511  04C0  2CCB               	goto	l709
  8512  04C1  0AF8               	incf	___aodiv@quotient+4,f
  8513  04C2  1D03               	skipz
  8514  04C3  2CCB               	goto	l709
  8515  04C4  0AF9               	incf	___aodiv@quotient+5,f
  8516  04C5  1D03               	skipz
  8517  04C6  2CCB               	goto	l709
  8518  04C7  0AFA               	incf	___aodiv@quotient+6,f
  8519  04C8  1D03               	skipz
  8520  04C9  2CCB               	goto	l709
  8521  04CA  0AFB               	incf	___aodiv@quotient+7,f
  8522  04CB                     l709:
  8523  04CB  0874               	movf	___aodiv@quotient,w
  8524  04CC  0020               	movlb	0	; select bank0
  8525  04CD  00A0               	movwf	?___aodiv
  8526  04CE  0875               	movf	___aodiv@quotient+1,w
  8527  04CF  00A1               	movwf	?___aodiv+1
  8528  04D0  0876               	movf	___aodiv@quotient+2,w
  8529  04D1  00A2               	movwf	?___aodiv+2
  8530  04D2  0877               	movf	___aodiv@quotient+3,w
  8531  04D3  00A3               	movwf	?___aodiv+3
  8532  04D4  0878               	movf	___aodiv@quotient+4,w
  8533  04D5  00A4               	movwf	?___aodiv+4
  8534  04D6  0879               	movf	___aodiv@quotient+5,w
  8535  04D7  00A5               	movwf	?___aodiv+5
  8536  04D8  087A               	movf	___aodiv@quotient+6,w
  8537  04D9  00A6               	movwf	?___aodiv+6
  8538  04DA  087B               	movf	___aodiv@quotient+7,w
  8539  04DB  00A7               	movwf	?___aodiv+7
  8540  04DC  0008               	return
  8541  04DD                     __end_of___aodiv:
  8542                           
  8543                           	psect	text16
  8544  0633                     __ptext16:	
  8545 ;; *************** function _ctoa *****************
  8546 ;; Defined at:
  8547 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  8548 ;; Parameters:    Size  Location     Type
  8549 ;;  fp              1    wreg     PTR struct _IO_FILE
  8550 ;;		 -> NULL(0), sprintf@f(5), 
  8551 ;;  c               1    0[BANK0 ] unsigned char 
  8552 ;; Auto vars:     Size  Location     Type
  8553 ;;  fp              1    9[BANK0 ] PTR struct _IO_FILE
  8554 ;;		 -> NULL(0), sprintf@f(5), 
  8555 ;;  w               2    7[BANK0 ] int 
  8556 ;;  l               2    5[BANK0 ] int 
  8557 ;; Return value:  Size  Location     Type
  8558 ;;                  2    0[BANK0 ] int 
  8559 ;; Registers used:
  8560 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8561 ;; Tracked objects:
  8562 ;;		On entry : 1F/0
  8563 ;;		On exit  : 1F/0
  8564 ;;		Unchanged: 0/0
  8565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8566 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8567 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8568 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8569 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8570 ;;Total ram usage:       10 bytes
  8571 ;; Hardware stack levels used: 1
  8572 ;; Hardware stack levels required when called: 4
  8573 ;; This function calls:
  8574 ;;		_fputc
  8575 ;; This function is called by:
  8576 ;;		_vfpfcnvrt
  8577 ;; This function uses a non-reentrant model
  8578 ;;
  8579                           
  8580                           
  8581                           ;psect for function _ctoa
  8582  0633                     _ctoa:
  8583                           
  8584                           ;incstack = 0
  8585                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8586                           ;ctoa@fp stored from wreg
  8587  0633  00A9               	movwf	ctoa@fp
  8588                           
  8589                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  8590  0634  0021               	movlb	1	; select bank1
  8591  0635  082A               	movf	_width^(0+128),w
  8592  0636  042B               	iorwf	(_width+1)^(0+128),w
  8593  0637  1D03               	btfss	3,2
  8594  0638  2E41               	goto	l2218
  8595  0639  082B               	movf	(_width+1)^(0+128),w
  8596  063A  0020               	movlb	0	; select bank0
  8597  063B  00A8               	movwf	ctoa@w+1
  8598  063C  0021               	movlb	1	; select bank1
  8599  063D  082A               	movf	_width^(0+128),w
  8600  063E  0020               	movlb	0	; select bank0
  8601  063F  00A7               	movwf	ctoa@w
  8602  0640  2E4A               	goto	l2220
  8603  0641                     l2218:
  8604  0641  082A               	movf	_width^(0+128),w
  8605  0642  3EFF               	addlw	255
  8606  0643  0020               	movlb	0	; select bank0
  8607  0644  00A7               	movwf	ctoa@w
  8608  0645  30FF               	movlw	255
  8609  0646  0021               	movlb	1	; select bank1
  8610  0647  3D2B               	addwfc	(_width+1)^(0+128),w
  8611  0648  0020               	movlb	0	; select bank0
  8612  0649  00A8               	movwf	ctoa@w+1
  8613  064A                     l2220:
  8614                           
  8615                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  8616  064A  0021               	movlb	1	; select bank1
  8617  064B  1C2E               	btfss	_flags^(0+128),0
  8618  064C  2E5C               	goto	l2224
  8619                           
  8620                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  8621  064D  0020               	movlb	0	; select bank0
  8622  064E  0820               	movf	ctoa@c,w
  8623  064F  00A2               	movwf	??_ctoa
  8624  0650  01A3               	clrf	??_ctoa+1
  8625  0651  0822               	movf	??_ctoa,w
  8626  0652  00F4               	movwf	fputc@c
  8627  0653  0823               	movf	??_ctoa+1,w
  8628  0654  00F5               	movwf	fputc@c+1
  8629  0655  0829               	movf	ctoa@fp,w
  8630  0656  00A4               	movwf	??_ctoa+2
  8631  0657  0824               	movf	??_ctoa+2,w
  8632  0658  00F6               	movwf	fputc@fp
  8633  0659  3187  27B6  3186   	fcall	_fputc
  8634  065C                     l2224:
  8635                           
  8636                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  8637  065C  0020               	movlb	0	; select bank0
  8638  065D  1FA8               	btfss	ctoa@w+1,7
  8639  065E  2E61               	goto	l1115
  8640  065F  01A7               	clrf	ctoa@w
  8641  0660  01A8               	clrf	ctoa@w+1
  8642  0661                     l1115:
  8643                           
  8644                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  8645  0661  01A5               	clrf	ctoa@l
  8646  0662  01A6               	clrf	ctoa@l+1
  8647  0663                     l2234:	
  8648                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  8649                           
  8650                           
  8651                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  8652  0663  0826               	movf	ctoa@l+1,w
  8653  0664  3A80               	xorlw	128
  8654  0665  00A2               	movwf	??_ctoa
  8655  0666  0828               	movf	ctoa@w+1,w
  8656  0667  3A80               	xorlw	128
  8657  0668  0222               	subwf	??_ctoa,w
  8658  0669  1D03               	skipz
  8659  066A  2E6D               	goto	u1675
  8660  066B  0827               	movf	ctoa@w,w
  8661  066C  0225               	subwf	ctoa@l,w
  8662  066D                     u1675:
  8663  066D  1803               	btfsc	3,0
  8664  066E  2E81               	goto	l1118
  8665                           
  8666                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  8667  066F  3020               	movlw	32
  8668  0670  00F4               	movwf	fputc@c
  8669  0671  3000               	movlw	0
  8670  0672  00F5               	movwf	fputc@c+1
  8671  0673  0020               	movlb	0	; select bank0
  8672  0674  0829               	movf	ctoa@fp,w
  8673  0675  00A2               	movwf	??_ctoa
  8674  0676  0822               	movf	??_ctoa,w
  8675  0677  00F6               	movwf	fputc@fp
  8676  0678  3187  27B6  3186   	fcall	_fputc
  8677                           
  8678                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 275:         ++l;
  8679  067B  3001               	movlw	1
  8680  067C  0020               	movlb	0	; select bank0
  8681  067D  07A5               	addwf	ctoa@l,f
  8682  067E  3000               	movlw	0
  8683  067F  3DA6               	addwfc	ctoa@l+1,f
  8684  0680  2E63               	goto	l2234
  8685  0681                     l1118:
  8686                           
  8687                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  8688  0681  0021               	movlb	1	; select bank1
  8689  0682  182E               	btfsc	_flags^(0+128),0
  8690  0683  2E92               	goto	l2238
  8691                           
  8692                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  8693  0684  0020               	movlb	0	; select bank0
  8694  0685  0820               	movf	ctoa@c,w
  8695  0686  00A2               	movwf	??_ctoa
  8696  0687  01A3               	clrf	??_ctoa+1
  8697  0688  0822               	movf	??_ctoa,w
  8698  0689  00F4               	movwf	fputc@c
  8699  068A  0823               	movf	??_ctoa+1,w
  8700  068B  00F5               	movwf	fputc@c+1
  8701  068C  0829               	movf	ctoa@fp,w
  8702  068D  00A4               	movwf	??_ctoa+2
  8703  068E  0824               	movf	??_ctoa+2,w
  8704  068F  00F6               	movwf	fputc@fp
  8705  0690  3187  27B6         	fcall	_fputc
  8706  0692                     l2238:
  8707                           
  8708                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  8709  0692  0020               	movlb	0	; select bank0
  8710  0693  0825               	movf	ctoa@l,w
  8711  0694  3E01               	addlw	1
  8712  0695  00A0               	movwf	?_ctoa
  8713  0696  3000               	movlw	0
  8714  0697  3D26               	addwfc	ctoa@l+1,w
  8715  0698  00A1               	movwf	?_ctoa+1
  8716  0699  0008               	return
  8717  069A                     __end_of_ctoa:
  8718                           
  8719                           	psect	text17
  8720  07B6                     __ptext17:	
  8721 ;; *************** function _fputc *****************
  8722 ;; Defined at:
  8723 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  8724 ;; Parameters:    Size  Location     Type
  8725 ;;  c               2    4[COMMON] int 
  8726 ;;  fp              1    6[COMMON] PTR struct _IO_FILE
  8727 ;;		 -> NULL(0), sprintf@f(5), 
  8728 ;; Auto vars:     Size  Location     Type
  8729 ;;		None
  8730 ;; Return value:  Size  Location     Type
  8731 ;;                  2    4[COMMON] int 
  8732 ;; Registers used:
  8733 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8734 ;; Tracked objects:
  8735 ;;		On entry : 1F/0
  8736 ;;		On exit  : 0/0
  8737 ;;		Unchanged: 0/0
  8738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8739 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8741 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8742 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8743 ;;Total ram usage:        8 bytes
  8744 ;; Hardware stack levels used: 1
  8745 ;; Hardware stack levels required when called: 3
  8746 ;; This function calls:
  8747 ;;		_putch
  8748 ;; This function is called by:
  8749 ;;		_pad
  8750 ;;		_ctoa
  8751 ;;		_vfpfcnvrt
  8752 ;;		_fputs
  8753 ;; This function uses a non-reentrant model
  8754 ;;
  8755                           
  8756                           
  8757                           ;psect for function _fputc
  8758  07B6                     _fputc:
  8759                           
  8760                           ;incstack = 0
  8761                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8762  07B6  0876               	movf	fputc@fp,w
  8763  07B7  1D03               	btfss	3,2
  8764  07B8  0876               	movf	fputc@fp,w
  8765  07B9  1D03               	btfss	3,2
  8766  07BA  2FBF               	goto	l2034
  8767  07BB  0874               	movf	fputc@c,w
  8768  07BC  318D  252B         	fcall	_putch
  8769  07BE  0008               	return
  8770  07BF                     l2034:
  8771  07BF  0876               	movf	fputc@fp,w
  8772  07C0  3E03               	addlw	3
  8773  07C1  0086               	movwf	6
  8774  07C2  0187               	clrf	7
  8775  07C3  0016               	moviw fsr1++
  8776  07C4  0401               	iorwf	1,w
  8777  07C5  1903               	btfsc	3,2
  8778  07C6  2FE2               	goto	l2038
  8779  07C7  0876               	movf	fputc@fp,w
  8780  07C8  3E03               	addlw	3
  8781  07C9  0086               	movwf	6
  8782  07CA  0187               	clrf	7
  8783  07CB  3F40               	moviw [0]fsr1
  8784  07CC  00F7               	movwf	??_fputc
  8785  07CD  3F41               	moviw [1]fsr1
  8786  07CE  00F8               	movwf	??_fputc+1
  8787  07CF  0A76               	incf	fputc@fp,w
  8788  07D0  0086               	movwf	6
  8789  07D1  0187               	clrf	7
  8790  07D2  3F40               	moviw [0]fsr1
  8791  07D3  00F9               	movwf	??_fputc+2
  8792  07D4  3F41               	moviw [1]fsr1
  8793  07D5  00FA               	movwf	??_fputc+3
  8794  07D6  087A               	movf	??_fputc+3,w
  8795  07D7  3A80               	xorlw	128
  8796  07D8  00FB               	movwf	??_fputc+4
  8797  07D9  0878               	movf	??_fputc+1,w
  8798  07DA  3A80               	xorlw	128
  8799  07DB  027B               	subwf	??_fputc+4,w
  8800  07DC  1D03               	skipz
  8801  07DD  2FE0               	goto	u1275
  8802  07DE  0877               	movf	??_fputc,w
  8803  07DF  0279               	subwf	??_fputc+2,w
  8804  07E0                     u1275:
  8805  07E0  1803               	skipnc
  8806  07E1  0008               	return
  8807  07E2                     l2038:
  8808  07E2  0874               	movf	fputc@c,w
  8809  07E3  00F7               	movwf	??_fputc
  8810  07E4  0876               	movf	fputc@fp,w
  8811  07E5  0086               	movwf	6
  8812  07E6  0187               	clrf	7
  8813  07E7  0A76               	incf	fputc@fp,w
  8814  07E8  0084               	movwf	4
  8815  07E9  0185               	clrf	5
  8816  07EA  0800               	movf	0,w
  8817  07EB  0701               	addwf	1,w
  8818  07EC  00F8               	movwf	??_fputc+1
  8819  07ED  0878               	movf	??_fputc+1,w
  8820  07EE  0086               	movwf	6
  8821  07EF  3001               	movlw	1	; select bank2/3
  8822  07F0  0087               	movwf	7
  8823  07F1  0877               	movf	??_fputc,w
  8824  07F2  0081               	movwf	1
  8825  07F3  0A76               	incf	fputc@fp,w
  8826  07F4  0086               	movwf	6
  8827  07F5  0187               	clrf	7
  8828  07F6  3001               	movlw	1
  8829  07F7  0781               	addwf	1,f
  8830  07F8  3141               	addfsr 1,1
  8831  07F9  1803               	skipnc
  8832  07FA  0A81               	incf	1,f
  8833  07FB  0008               	return
  8834  07FC                     __end_of_fputc:
  8835                           
  8836                           	psect	text18
  8837  0D2B                     __ptext18:	
  8838 ;; *************** function _putch *****************
  8839 ;; Defined at:
  8840 ;;		line 65 in file "uart.c"
  8841 ;; Parameters:    Size  Location     Type
  8842 ;;  dato            1    wreg     unsigned char 
  8843 ;; Auto vars:     Size  Location     Type
  8844 ;;  dato            1    3[COMMON] unsigned char 
  8845 ;; Return value:  Size  Location     Type
  8846 ;;                  1    wreg      void 
  8847 ;; Registers used:
  8848 ;;		wreg, status,2, status,0, pclath, cstack
  8849 ;; Tracked objects:
  8850 ;;		On entry : 1F/0
  8851 ;;		On exit  : 1F/2
  8852 ;;		Unchanged: 0/0
  8853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8855 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8857 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8858 ;;Total ram usage:        1 bytes
  8859 ;; Hardware stack levels used: 1
  8860 ;; Hardware stack levels required when called: 2
  8861 ;; This function calls:
  8862 ;;		_uart_tx
  8863 ;; This function is called by:
  8864 ;;		_fputc
  8865 ;; This function uses a non-reentrant model
  8866 ;;
  8867                           
  8868                           
  8869                           ;psect for function _putch
  8870  0D2B                     _putch:
  8871                           
  8872                           ;incstack = 0
  8873                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  8874                           ;putch@dato stored from wreg
  8875  0D2B  00F3               	movwf	putch@dato
  8876                           
  8877                           ;uart.c: 67:     uart_tx( dato);
  8878  0D2C  0873               	movf	putch@dato,w
  8879  0D2D  318D  2569         	fcall	_uart_tx
  8880  0D2F  0008               	return
  8881  0D30                     __end_of_putch:
  8882                           
  8883                           	psect	text19
  8884  0D69                     __ptext19:	
  8885 ;; *************** function _uart_tx *****************
  8886 ;; Defined at:
  8887 ;;		line 32 in file "uart.c"
  8888 ;; Parameters:    Size  Location     Type
  8889 ;;  dato            1    wreg     unsigned char 
  8890 ;; Auto vars:     Size  Location     Type
  8891 ;;  dato            1    2[COMMON] unsigned char 
  8892 ;; Return value:  Size  Location     Type
  8893 ;;                  1    wreg      void 
  8894 ;; Registers used:
  8895 ;;		wreg, status,2, status,0
  8896 ;; Tracked objects:
  8897 ;;		On entry : 1F/0
  8898 ;;		On exit  : 1F/2
  8899 ;;		Unchanged: 0/0
  8900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8902 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8903 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8904 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8905 ;;Total ram usage:        2 bytes
  8906 ;; Hardware stack levels used: 1
  8907 ;; Hardware stack levels required when called: 1
  8908 ;; This function calls:
  8909 ;;		Nothing
  8910 ;; This function is called by:
  8911 ;;		_putch
  8912 ;; This function uses a non-reentrant model
  8913 ;;
  8914                           
  8915                           
  8916                           ;psect for function _uart_tx
  8917  0D69                     _uart_tx:
  8918                           
  8919                           ;incstack = 0
  8920                           ; Regs used in _uart_tx: [wreg+status,2+status,0]
  8921                           ;uart_tx@dato stored from wreg
  8922  0D69  00F2               	movwf	uart_tx@dato
  8923  0D6A                     l2022:	
  8924                           ;uart.c: 34:     while( ( (PIR3>>4) & 0x01) == 0){}
  8925                           
  8926  0D6A  002E               	movlb	14	; select bank14
  8927  0D6B  080F               	movf	15,w	;volatile
  8928  0D6C  00F1               	movwf	??_uart_tx
  8929  0D6D  3004               	movlw	4
  8930  0D6E                     u1225:
  8931  0D6E  36F1               	lsrf	??_uart_tx,f
  8932  0D6F  0B89               	decfsz	9,f
  8933  0D70  2D6E               	goto	u1225
  8934  0D71  1C71               	btfss	??_uart_tx,0
  8935  0D72  2D6A               	goto	l2022
  8936                           
  8937                           ;uart.c: 36:         TXREG = dato;
  8938  0D73  0872               	movf	uart_tx@dato,w
  8939  0D74  0022               	movlb	2	; select bank2
  8940  0D75  009A               	movwf	26	;volatile
  8941  0D76  0008               	return
  8942  0D77                     __end_of_uart_tx:
  8943                           
  8944                           	psect	text20
  8945  0E08                     __ptext20:	
  8946 ;; *************** function _port_init *****************
  8947 ;; Defined at:
  8948 ;;		line 154 in file "Main.c"
  8949 ;; Parameters:    Size  Location     Type
  8950 ;;		None
  8951 ;; Auto vars:     Size  Location     Type
  8952 ;;		None
  8953 ;; Return value:  Size  Location     Type
  8954 ;;                  1    wreg      void 
  8955 ;; Registers used:
  8956 ;;		wreg, status,2
  8957 ;; Tracked objects:
  8958 ;;		On entry : B1F/0
  8959 ;;		On exit  : B1F/0
  8960 ;;		Unchanged: B00/0
  8961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8966 ;;Total ram usage:        0 bytes
  8967 ;; Hardware stack levels used: 1
  8968 ;; Hardware stack levels required when called: 1
  8969 ;; This function calls:
  8970 ;;		Nothing
  8971 ;; This function is called by:
  8972 ;;		_main
  8973 ;; This function uses a non-reentrant model
  8974 ;;
  8975                           
  8976                           
  8977                           ;psect for function _port_init
  8978  0E08                     _port_init:
  8979                           
  8980                           ;Main.c: 156:     ANSELA = 0;
  8981                           
  8982                           ;incstack = 0
  8983                           ; Regs used in _port_init: [wreg+status,2]
  8984  0E08  003E               	movlb	30	; select bank30
  8985  0E09  01B8               	clrf	56	;volatile
  8986                           
  8987                           ;Main.c: 157:     LATA=0;
  8988  0E0A  0020               	movlb	0	; select bank0
  8989  0E0B  0196               	clrf	22	;volatile
  8990                           
  8991                           ;Main.c: 158:     PORTA =0;
  8992  0E0C  018C               	clrf	12	;volatile
  8993                           
  8994                           ;Main.c: 159:     TRISA = 0b11110000;
  8995  0E0D  30F0               	movlw	240
  8996  0E0E  0091               	movwf	17	;volatile
  8997                           
  8998                           ;Main.c: 162:     ANSELA = 0;
  8999  0E0F  003E               	movlb	30	; select bank30
  9000  0E10  01B8               	clrf	56	;volatile
  9001                           
  9002                           ;Main.c: 163:     ANSELA = ANSELA | (1<<4);
  9003  0E11  0838               	movf	56,w	;volatile
  9004  0E12  3810               	iorlw	16
  9005  0E13  00B8               	movwf	56	;volatile
  9006                           
  9007                           ;Main.c: 165:     LATB=0;
  9008  0E14  0020               	movlb	0	; select bank0
  9009  0E15  0197               	clrf	23	;volatile
  9010                           
  9011                           ;Main.c: 166:     PORTB =0;
  9012  0E16  018D               	clrf	13	;volatile
  9013                           
  9014                           ;Main.c: 167:     TRISB = TRISA | (1<<0);
  9015  0E17  0811               	movf	17,w	;volatile
  9016  0E18  3801               	iorlw	1
  9017  0E19  0092               	movwf	18	;volatile
  9018                           
  9019                           ;Main.c: 168:     ANSELB = 0;
  9020  0E1A  003E               	movlb	30	; select bank30
  9021  0E1B  01C3               	clrf	67	;volatile
  9022                           
  9023                           ;Main.c: 169:     ANSELB = ANSELB | (1<<0);
  9024  0E1C  0843               	movf	67,w	;volatile
  9025  0E1D  3801               	iorlw	1
  9026  0E1E  00C3               	movwf	67	;volatile
  9027                           
  9028                           ;Main.c: 171:     TRISC = 0b10;
  9029  0E1F  3002               	movlw	2
  9030  0E20  0020               	movlb	0	; select bank0
  9031  0E21  0093               	movwf	19	;volatile
  9032                           
  9033                           ;Main.c: 172:     ANSELC = 0;
  9034  0E22  003E               	movlb	30	; select bank30
  9035  0E23  01CE               	clrf	78	;volatile
  9036                           
  9037                           ;Main.c: 173:     TRISC = TRISC | (1<<4 |1<<3 );
  9038  0E24  0020               	movlb	0	; select bank0
  9039  0E25  0813               	movf	19,w	;volatile
  9040  0E26  3818               	iorlw	24
  9041  0E27  0093               	movwf	19	;volatile
  9042  0E28  0008               	return
  9043  0E29                     __end_of_port_init:
  9044                           
  9045                           	psect	text21
  9046  0760                     __ptext21:	
  9047 ;; *************** function _lcd_puts *****************
  9048 ;; Defined at:
  9049 ;;		line 124 in file "LCD_i2c.c"
  9050 ;; Parameters:    Size  Location     Type
  9051 ;;  dato            1    wreg     PTR unsigned char 
  9052 ;;		 -> buffer(50), 
  9053 ;; Auto vars:     Size  Location     Type
  9054 ;;  dato            1    6[BANK0 ] PTR unsigned char 
  9055 ;;		 -> buffer(50), 
  9056 ;; Return value:  Size  Location     Type
  9057 ;;                  1    wreg      void 
  9058 ;; Registers used:
  9059 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9060 ;; Tracked objects:
  9061 ;;		On entry : 1F/1
  9062 ;;		On exit  : 1F/0
  9063 ;;		Unchanged: 0/0
  9064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9066 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9067 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9068 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9069 ;;Total ram usage:        3 bytes
  9070 ;; Hardware stack levels used: 1
  9071 ;; Hardware stack levels required when called: 6
  9072 ;; This function calls:
  9073 ;;		_lcd_gotoxy
  9074 ;;		_lcd_send_byte
  9075 ;; This function is called by:
  9076 ;;		_main
  9077 ;; This function uses a non-reentrant model
  9078 ;;
  9079                           
  9080                           
  9081                           ;psect for function _lcd_puts
  9082  0760                     _lcd_puts:
  9083                           
  9084                           ;incstack = 0
  9085                           ; Regs used in _lcd_puts: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9086                           ;lcd_puts@dato stored from wreg
  9087  0760  0020               	movlb	0	; select bank0
  9088  0761  00A6               	movwf	lcd_puts@dato
  9089                           
  9090                           ;LCD_i2c.c: 125:     while (*dato){
  9091  0762  2F9A               	goto	l3156
  9092  0763                     l3136:
  9093                           
  9094                           ;LCD_i2c.c: 128:                 lcd_send_byte(0,1);
  9095  0763  01F7               	clrf	lcd_send_byte@n
  9096  0764  0AF7               	incf	lcd_send_byte@n,f
  9097  0765  3000               	movlw	0
  9098  0766  318D  25D6  3187   	fcall	_lcd_send_byte
  9099                           
  9100                           ;LCD_i2c.c: 129:                 _delay((unsigned long)((2)*(32000000UL/4000.0)));
  9101  0769  3015               	movlw	21
  9102  076A  0020               	movlb	0	; select bank0
  9103  076B  00A4               	movwf	??_lcd_puts
  9104  076C  30C6               	movlw	198
  9105  076D                     u3057:
  9106  076D  0B89               	decfsz	9,f
  9107  076E  2F6D               	goto	u3057
  9108  076F  0BA4               	decfsz	??_lcd_puts,f
  9109  0770  2F6D               	goto	u3057
  9110  0771  0000               	nop
  9111                           
  9112                           ;LCD_i2c.c: 130:                 g_LcdX = 0;
  9113  0772  0021               	movlb	1	; select bank1
  9114  0773  01B8               	clrf	_g_LcdX^(0+128)
  9115                           
  9116                           ;LCD_i2c.c: 131:                 g_LcdY = 0;
  9117  0774  01FC               	clrf	_g_LcdY
  9118                           
  9119                           ;LCD_i2c.c: 132:                 _delay((unsigned long)((2)*(32000000UL/4000.0)));
  9120  0775  3015               	movlw	21
  9121  0776  0020               	movlb	0	; select bank0
  9122  0777  00A4               	movwf	??_lcd_puts
  9123  0778  30C6               	movlw	198
  9124  0779                     u3067:
  9125  0779  0B89               	decfsz	9,f
  9126  077A  2F79               	goto	u3067
  9127  077B  0BA4               	decfsz	??_lcd_puts,f
  9128  077C  2F79               	goto	u3067
  9129  077D  0000               	nop
  9130                           
  9131                           ;LCD_i2c.c: 133:                 break;
  9132  077E  2F95               	goto	l3154
  9133  077F                     l3146:
  9134                           
  9135                           ;LCD_i2c.c: 135:                 lcd_gotoxy(1, g_LcdY+2);
  9136  077F  087C               	movf	_g_LcdY,w
  9137  0780  3E02               	addlw	2
  9138  0781  00A4               	movwf	??_lcd_puts
  9139  0782  0824               	movf	??_lcd_puts,w
  9140  0783  00FB               	movwf	lcd_gotoxy@y
  9141  0784  3001               	movlw	1
  9142  0785  318E  26DC  3187   	fcall	_lcd_gotoxy
  9143                           
  9144                           ;LCD_i2c.c: 136:                 break;
  9145  0788  2F95               	goto	l3154
  9146  0789                     l3148:
  9147                           
  9148                           ;LCD_i2c.c: 138:                 lcd_send_byte(1,*dato);
  9149  0789  0826               	movf	lcd_puts@dato,w
  9150  078A  0086               	movwf	6
  9151  078B  3001               	movlw	1	; select bank2/3
  9152  078C  0087               	movwf	7
  9153  078D  0801               	movf	1,w
  9154  078E  00A4               	movwf	??_lcd_puts
  9155  078F  0824               	movf	??_lcd_puts,w
  9156  0790  00F7               	movwf	lcd_send_byte@n
  9157  0791  3001               	movlw	1
  9158  0792  318D  25D6  3187   	fcall	_lcd_send_byte
  9159  0795                     l3154:	
  9160                           ;LCD_i2c.c: 139:                 break;
  9161                           
  9162                           
  9163                           ;LCD_i2c.c: 143:         dato++;
  9164  0795  3001               	movlw	1
  9165  0796  0020               	movlb	0	; select bank0
  9166  0797  00A4               	movwf	??_lcd_puts
  9167  0798  0824               	movf	??_lcd_puts,w
  9168  0799  07A6               	addwf	lcd_puts@dato,f
  9169  079A                     l3156:
  9170                           
  9171                           ;LCD_i2c.c: 125:     while (*dato){
  9172  079A  0826               	movf	lcd_puts@dato,w
  9173  079B  0086               	movwf	6
  9174  079C  3001               	movlw	1	; select bank2/3
  9175  079D  0087               	movwf	7
  9176  079E  0801               	movf	1,w
  9177  079F  1903               	btfsc	3,2
  9178  07A0  0008               	return
  9179  07A1  0826               	movf	lcd_puts@dato,w
  9180  07A2  0086               	movwf	6
  9181  07A3  3001               	movlw	1	; select bank2/3
  9182  07A4  0087               	movwf	7
  9183  07A5  0801               	movf	1,w
  9184  07A6  00A4               	movwf	??_lcd_puts
  9185  07A7  01A5               	clrf	??_lcd_puts+1
  9186                           
  9187                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9188                           ; Switch size 1, requested type "simple"
  9189                           ; Number of cases is 1, Range of values is 0 to 0
  9190                           ; switch strategies available:
  9191                           ; Name         Instructions Cycles
  9192                           ; simple_byte            4     3 (average)
  9193                           ; direct_byte            8     6 (fixed)
  9194                           ; jumptable            260     6 (fixed)
  9195                           ;	Chosen strategy is simple_byte
  9196  07A8  0825               	movf	??_lcd_puts+1,w
  9197  07A9  3A00               	xorlw	0	; case 0
  9198  07AA  1903               	skipnz
  9199  07AB  2FAD               	goto	l3300
  9200  07AC  2F89               	goto	l3148
  9201  07AD                     l3300:
  9202                           
  9203                           ; Switch size 1, requested type "simple"
  9204                           ; Number of cases is 2, Range of values is 10 to 12
  9205                           ; switch strategies available:
  9206                           ; Name         Instructions Cycles
  9207                           ; simple_byte            7     4 (average)
  9208                           ; direct_byte           15     9 (fixed)
  9209                           ; jumptable            263     9 (fixed)
  9210                           ;	Chosen strategy is simple_byte
  9211  07AD  0824               	movf	??_lcd_puts,w
  9212  07AE  3A0A               	xorlw	10	; case 10
  9213  07AF  1903               	skipnz
  9214  07B0  2F7F               	goto	l3146
  9215  07B1  3A06               	xorlw	6	; case 12
  9216  07B2  1903               	skipnz
  9217  07B3  2F63               	goto	l3136
  9218  07B4  2F89               	goto	l3148
  9219  07B5  2F95               	goto	l3154
  9220  07B6                     __end_of_lcd_puts:
  9221                           
  9222                           	psect	text22
  9223  0EDC                     __ptext22:	
  9224 ;; *************** function _lcd_gotoxy *****************
  9225 ;; Defined at:
  9226 ;;		line 79 in file "LCD_i2c.c"
  9227 ;; Parameters:    Size  Location     Type
  9228 ;;  x               1    wreg     unsigned char 
  9229 ;;  y               1   11[COMMON] unsigned char 
  9230 ;; Auto vars:     Size  Location     Type
  9231 ;;  x               1    2[BANK0 ] unsigned char 
  9232 ;;  address         1    3[BANK0 ] unsigned char 
  9233 ;; Return value:  Size  Location     Type
  9234 ;;                  1    wreg      void 
  9235 ;; Registers used:
  9236 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9237 ;; Tracked objects:
  9238 ;;		On entry : 1F/0
  9239 ;;		On exit  : 1F/0
  9240 ;;		Unchanged: 0/0
  9241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9242 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9243 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9244 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9245 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9246 ;;Total ram usage:        5 bytes
  9247 ;; Hardware stack levels used: 1
  9248 ;; Hardware stack levels required when called: 5
  9249 ;; This function calls:
  9250 ;;		_lcd_send_byte
  9251 ;; This function is called by:
  9252 ;;		_lcd_puts
  9253 ;; This function uses a non-reentrant model
  9254 ;;
  9255                           
  9256                           
  9257                           ;psect for function _lcd_gotoxy
  9258  0EDC                     _lcd_gotoxy:
  9259                           
  9260                           ;incstack = 0
  9261                           ; Regs used in _lcd_gotoxy: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9262                           ;lcd_gotoxy@x stored from wreg
  9263  0EDC  00A2               	movwf	lcd_gotoxy@x
  9264                           
  9265                           ;LCD_i2c.c: 80:    int8 address;;LCD_i2c.c: 81:    switch(y)
  9266  0EDD  2EE9               	goto	l3056
  9267  0EDE                     l3044:
  9268                           
  9269                           ;LCD_i2c.c: 84:          address = 0x00;
  9270  0EDE  01A3               	clrf	lcd_gotoxy@address
  9271                           
  9272                           ;LCD_i2c.c: 85:          break;
  9273  0EDF  2EFF               	goto	l3058
  9274  0EE0                     l3046:
  9275                           
  9276                           ;LCD_i2c.c: 87:          address = 0x40;
  9277  0EE0  3040               	movlw	64
  9278  0EE1  2EE5               	goto	L3
  9279  0EE2                     l3048:	
  9280                           ;LCD_i2c.c: 88:          break;
  9281                           
  9282                           
  9283                           ;LCD_i2c.c: 90:          address = 0x14;
  9284  0EE2  3014               	movlw	20
  9285  0EE3  2EE5               	goto	L3
  9286  0EE4                     l3050:	
  9287                           ;LCD_i2c.c: 91:          break;
  9288                           
  9289                           
  9290                           ;LCD_i2c.c: 93:          address = 0x54;
  9291  0EE4  3054               	movlw	84
  9292  0EE5                     L3:
  9293  0EE5  00A0               	movwf	??_lcd_gotoxy
  9294  0EE6  0820               	movf	??_lcd_gotoxy,w
  9295  0EE7  00A3               	movwf	lcd_gotoxy@address
  9296                           
  9297                           ;LCD_i2c.c: 94:          break;
  9298  0EE8  2EFF               	goto	l3058
  9299  0EE9                     l3056:
  9300  0EE9  087B               	movf	lcd_gotoxy@y,w
  9301  0EEA  00A0               	movwf	??_lcd_gotoxy
  9302  0EEB  01A1               	clrf	??_lcd_gotoxy+1
  9303                           
  9304                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9305                           ; Switch size 1, requested type "simple"
  9306                           ; Number of cases is 1, Range of values is 0 to 0
  9307                           ; switch strategies available:
  9308                           ; Name         Instructions Cycles
  9309                           ; simple_byte            4     3 (average)
  9310                           ; direct_byte            8     6 (fixed)
  9311                           ; jumptable            260     6 (fixed)
  9312                           ;	Chosen strategy is simple_byte
  9313  0EEC  0821               	movf	??_lcd_gotoxy+1,w
  9314  0EED  3A00               	xorlw	0	; case 0
  9315  0EEE  1903               	skipnz
  9316  0EEF  2EF1               	goto	l3302
  9317  0EF0  2EDE               	goto	l3044
  9318  0EF1                     l3302:
  9319                           
  9320                           ; Switch size 1, requested type "simple"
  9321                           ; Number of cases is 4, Range of values is 1 to 4
  9322                           ; switch strategies available:
  9323                           ; Name         Instructions Cycles
  9324                           ; simple_byte           13     7 (average)
  9325                           ; direct_byte           17     9 (fixed)
  9326                           ; jumptable            263     9 (fixed)
  9327                           ;	Chosen strategy is simple_byte
  9328  0EF1  0820               	movf	??_lcd_gotoxy,w
  9329  0EF2  3A01               	xorlw	1	; case 1
  9330  0EF3  1903               	skipnz
  9331  0EF4  2EDE               	goto	l3044
  9332  0EF5  3A03               	xorlw	3	; case 2
  9333  0EF6  1903               	skipnz
  9334  0EF7  2EE0               	goto	l3046
  9335  0EF8  3A01               	xorlw	1	; case 3
  9336  0EF9  1903               	skipnz
  9337  0EFA  2EE2               	goto	l3048
  9338  0EFB  3A07               	xorlw	7	; case 4
  9339  0EFC  1903               	skipnz
  9340  0EFD  2EE4               	goto	l3050
  9341  0EFE  2EDE               	goto	l3044
  9342  0EFF                     l3058:
  9343                           
  9344                           ;LCD_i2c.c: 99:    address += x-1;
  9345  0EFF  0822               	movf	lcd_gotoxy@x,w
  9346  0F00  3EFF               	addlw	255
  9347  0F01  00A0               	movwf	??_lcd_gotoxy
  9348  0F02  0820               	movf	??_lcd_gotoxy,w
  9349  0F03  07A3               	addwf	lcd_gotoxy@address,f
  9350                           
  9351                           ;LCD_i2c.c: 100:    lcd_send_byte(0, 0x80 | address);
  9352  0F04  0823               	movf	lcd_gotoxy@address,w
  9353  0F05  3880               	iorlw	128
  9354  0F06  00A0               	movwf	??_lcd_gotoxy
  9355  0F07  0820               	movf	??_lcd_gotoxy,w
  9356  0F08  00F7               	movwf	lcd_send_byte@n
  9357  0F09  3000               	movlw	0
  9358  0F0A  318D  25D6         	fcall	_lcd_send_byte
  9359                           
  9360                           ;LCD_i2c.c: 102:    g_LcdX = x - 1;
  9361  0F0C  0020               	movlb	0	; select bank0
  9362  0F0D  0822               	movf	lcd_gotoxy@x,w
  9363  0F0E  3EFF               	addlw	255
  9364  0F0F  00A0               	movwf	??_lcd_gotoxy
  9365  0F10  0820               	movf	??_lcd_gotoxy,w
  9366  0F11  0021               	movlb	1	; select bank1
  9367  0F12  00B8               	movwf	_g_LcdX^(0+128)
  9368                           
  9369                           ;LCD_i2c.c: 103:    g_LcdY = y - 1;
  9370  0F13  087B               	movf	lcd_gotoxy@y,w
  9371  0F14  3EFF               	addlw	255
  9372  0F15  0020               	movlb	0	; select bank0
  9373  0F16  00A0               	movwf	??_lcd_gotoxy
  9374  0F17  0820               	movf	??_lcd_gotoxy,w
  9375  0F18  00FC               	movwf	_g_LcdY
  9376  0F19  0008               	return
  9377  0F1A                     __end_of_lcd_gotoxy:
  9378                           
  9379                           	psect	text23
  9380  069A                     __ptext23:	
  9381 ;; *************** function _lcd_init *****************
  9382 ;; Defined at:
  9383 ;;		line 39 in file "LCD_i2c.c"
  9384 ;; Parameters:    Size  Location     Type
  9385 ;;		None
  9386 ;; Auto vars:     Size  Location     Type
  9387 ;;  i               1   11[COMMON] unsigned char 
  9388 ;; Return value:  Size  Location     Type
  9389 ;;                  1    wreg      void 
  9390 ;; Registers used:
  9391 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9392 ;; Tracked objects:
  9393 ;;		On entry : B1F/1D
  9394 ;;		On exit  : 1F/1
  9395 ;;		Unchanged: 0/0
  9396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9398 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9399 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9400 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9401 ;;Total ram usage:        3 bytes
  9402 ;; Hardware stack levels used: 1
  9403 ;; Hardware stack levels required when called: 5
  9404 ;; This function calls:
  9405 ;;		_I2C_start
  9406 ;;		_I2C_stop
  9407 ;;		_I2C_write
  9408 ;;		_Send_D7_D4
  9409 ;;		_lcd_send_byte
  9410 ;; This function is called by:
  9411 ;;		_main
  9412 ;; This function uses a non-reentrant model
  9413 ;;
  9414                           
  9415                           
  9416                           ;psect for function _lcd_init
  9417  069A                     _lcd_init:
  9418                           
  9419                           ;LCD_i2c.c: 40:    int8 i;;LCD_i2c.c: 45:         I2C_start();
  9420                           
  9421                           ;incstack = 0
  9422                           ; Regs used in _lcd_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9423  069A  318D  2521  3186   	fcall	_I2C_start
  9424                           
  9425                           ;LCD_i2c.c: 46:         I2C_write(64|(7<<1));
  9426  069D  304E               	movlw	78
  9427  069E  318D  255D  3186   	fcall	_I2C_write
  9428                           
  9429                           ;LCD_i2c.c: 47:         I2C_write(0x00);
  9430  06A1  3000               	movlw	0
  9431  06A2  318D  255D  3186   	fcall	_I2C_write
  9432                           
  9433                           ;LCD_i2c.c: 48:         I2C_stop();
  9434  06A5  318D  2526  3186   	fcall	_I2C_stop
  9435                           
  9436                           ;LCD_i2c.c: 51:    _delay((unsigned long)((35)*(32000000UL/4000.0)));
  9437  06A8  3002               	movlw	2
  9438  06A9  0020               	movlb	0	; select bank0
  9439  06AA  00A1               	movwf	??_lcd_init+1
  9440  06AB  306C               	movlw	108
  9441  06AC  00A0               	movwf	??_lcd_init
  9442  06AD  309F               	movlw	159
  9443  06AE                     u3077:
  9444  06AE  0B89               	decfsz	9,f
  9445  06AF  2EAE               	goto	u3077
  9446  06B0  0BA0               	decfsz	??_lcd_init,f
  9447  06B1  2EAE               	goto	u3077
  9448  06B2  0BA1               	decfsz	??_lcd_init+1,f
  9449  06B3  2EAE               	goto	u3077
  9450  06B4  3200               	nop2
  9451                           
  9452                           ;LCD_i2c.c: 53:    for(i=0 ;i < 3; i++){
  9453  06B5  01FB               	clrf	lcd_init@i
  9454  06B6                     l3096:
  9455                           
  9456                           ;LCD_i2c.c: 54:       Send_D7_D4(0,0x03);
  9457  06B6  3003               	movlw	3
  9458  06B7  0020               	movlb	0	; select bank0
  9459  06B8  00A0               	movwf	??_lcd_init
  9460  06B9  0820               	movf	??_lcd_init,w
  9461  06BA  00F3               	movwf	Send_D7_D4@nibble
  9462  06BB  3000               	movlw	0
  9463  06BC  318F  271A  3186   	fcall	_Send_D7_D4
  9464                           
  9465                           ;LCD_i2c.c: 55:       _delay((unsigned long)((5)*(32000000UL/4000.0)));
  9466  06BF  3034               	movlw	52
  9467  06C0  0020               	movlb	0	; select bank0
  9468  06C1  00A0               	movwf	??_lcd_init
  9469  06C2  30F1               	movlw	241
  9470  06C3                     u3087:
  9471  06C3  0B89               	decfsz	9,f
  9472  06C4  2EC3               	goto	u3087
  9473  06C5  0BA0               	decfsz	??_lcd_init,f
  9474  06C6  2EC3               	goto	u3087
  9475  06C7  3200               	nop2
  9476                           
  9477                           ;LCD_i2c.c: 56:    }
  9478  06C8  3001               	movlw	1
  9479  06C9  0020               	movlb	0	; select bank0
  9480  06CA  00A0               	movwf	??_lcd_init
  9481  06CB  0820               	movf	??_lcd_init,w
  9482  06CC  07FB               	addwf	lcd_init@i,f
  9483  06CD  3003               	movlw	3
  9484  06CE  027B               	subwf	lcd_init@i,w
  9485  06CF  1C03               	skipc
  9486  06D0  2EB6               	goto	l3096
  9487                           
  9488                           ;LCD_i2c.c: 57:     Send_D7_D4(0,0x02);
  9489  06D1  3002               	movlw	2
  9490  06D2  00A0               	movwf	??_lcd_init
  9491  06D3  0820               	movf	??_lcd_init,w
  9492  06D4  00F3               	movwf	Send_D7_D4@nibble
  9493  06D5  3000               	movlw	0
  9494  06D6  318F  271A  3186   	fcall	_Send_D7_D4
  9495                           
  9496                           ;LCD_i2c.c: 70:    for(i=0; i < sizeof(LCD_INIT_STRING); i++)
  9497  06D9  01FB               	clrf	lcd_init@i
  9498  06DA                     l3112:
  9499                           
  9500                           ;LCD_i2c.c: 71:    {;LCD_i2c.c: 72:       lcd_send_byte(0, LCD_INIT_STRING[i]);
  9501  06DA  087B               	movf	lcd_init@i,w
  9502  06DB  3E00               	addlw	low (_LCD_INIT_STRING| (0+32768))
  9503  06DC  0084               	movwf	4
  9504  06DD  3090               	movlw	high (_LCD_INIT_STRING| (0+32768))
  9505  06DE  1803               	skipnc
  9506  06DF  3E01               	addlw	1
  9507  06E0  0085               	movwf	5
  9508  06E1  0800               	movf	0,w	;code access
  9509  06E2  0020               	movlb	0	; select bank0
  9510  06E3  00A0               	movwf	??_lcd_init
  9511  06E4  0820               	movf	??_lcd_init,w
  9512  06E5  00F7               	movwf	lcd_send_byte@n
  9513  06E6  3000               	movlw	0
  9514  06E7  318D  25D6  3186   	fcall	_lcd_send_byte
  9515                           
  9516                           ;LCD_i2c.c: 73:       _delay((unsigned long)((5)*(32000000UL/4000.0)));
  9517  06EA  3034               	movlw	52
  9518  06EB  0020               	movlb	0	; select bank0
  9519  06EC  00A0               	movwf	??_lcd_init
  9520  06ED  30F1               	movlw	241
  9521  06EE                     u3097:
  9522  06EE  0B89               	decfsz	9,f
  9523  06EF  2EEE               	goto	u3097
  9524  06F0  0BA0               	decfsz	??_lcd_init,f
  9525  06F1  2EEE               	goto	u3097
  9526  06F2  3200               	nop2
  9527                           
  9528                           ;LCD_i2c.c: 74:    }
  9529  06F3  3001               	movlw	1
  9530  06F4  0020               	movlb	0	; select bank0
  9531  06F5  00A0               	movwf	??_lcd_init
  9532  06F6  0820               	movf	??_lcd_init,w
  9533  06F7  07FB               	addwf	lcd_init@i,f
  9534  06F8  3004               	movlw	4
  9535  06F9  027B               	subwf	lcd_init@i,w
  9536  06FA  1C03               	skipc
  9537  06FB  2EDA               	goto	l3112
  9538                           
  9539                           ;LCD_i2c.c: 75:    g_LcdX = 0;
  9540  06FC  0021               	movlb	1	; select bank1
  9541  06FD  01B8               	clrf	_g_LcdX^(0+128)
  9542                           
  9543                           ;LCD_i2c.c: 76:    g_LcdY = 0;
  9544  06FE  01FC               	clrf	_g_LcdY
  9545  06FF  0008               	return
  9546  0700                     __end_of_lcd_init:
  9547                           
  9548                           	psect	text24
  9549  0DD6                     __ptext24:	
  9550 ;; *************** function _lcd_send_byte *****************
  9551 ;; Defined at:
  9552 ;;		line 34 in file "LCD_i2c.c"
  9553 ;; Parameters:    Size  Location     Type
  9554 ;;  address         1    wreg     unsigned char 
  9555 ;;  n               1    7[COMMON] unsigned char 
  9556 ;; Auto vars:     Size  Location     Type
  9557 ;;  address         1   10[COMMON] unsigned char 
  9558 ;; Return value:  Size  Location     Type
  9559 ;;                  1    wreg      void 
  9560 ;; Registers used:
  9561 ;;		wreg, status,2, status,0, pclath, cstack
  9562 ;; Tracked objects:
  9563 ;;		On entry : 1F/0
  9564 ;;		On exit  : 1F/3
  9565 ;;		Unchanged: 0/0
  9566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9567 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9568 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9569 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9570 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9571 ;;Total ram usage:        4 bytes
  9572 ;; Hardware stack levels used: 1
  9573 ;; Hardware stack levels required when called: 4
  9574 ;; This function calls:
  9575 ;;		_Send_D7_D4
  9576 ;; This function is called by:
  9577 ;;		_lcd_init
  9578 ;;		_lcd_gotoxy
  9579 ;;		_lcd_puts
  9580 ;; This function uses a non-reentrant model
  9581 ;;
  9582                           
  9583                           
  9584                           ;psect for function _lcd_send_byte
  9585  0DD6                     _lcd_send_byte:
  9586                           
  9587                           ;incstack = 0
  9588                           ; Regs used in _lcd_send_byte: [wreg+status,2+status,0+pclath+cstack]
  9589                           ;lcd_send_byte@address stored from wreg
  9590  0DD6  00FA               	movwf	lcd_send_byte@address
  9591                           
  9592                           ;LCD_i2c.c: 35:    Send_D7_D4(address,n >> 4);
  9593  0DD7  0877               	movf	lcd_send_byte@n,w
  9594  0DD8  00F8               	movwf	??_lcd_send_byte
  9595  0DD9  3004               	movlw	4
  9596  0DDA                     u2725:
  9597  0DDA  36F8               	lsrf	??_lcd_send_byte,f
  9598  0DDB  0B89               	decfsz	9,f
  9599  0DDC  2DDA               	goto	u2725
  9600  0DDD  0878               	movf	??_lcd_send_byte,w
  9601  0DDE  00F9               	movwf	??_lcd_send_byte+1
  9602  0DDF  0879               	movf	??_lcd_send_byte+1,w
  9603  0DE0  00F3               	movwf	Send_D7_D4@nibble
  9604  0DE1  087A               	movf	lcd_send_byte@address,w
  9605  0DE2  318F  271A  318D   	fcall	_Send_D7_D4
  9606                           
  9607                           ;LCD_i2c.c: 36:    Send_D7_D4(address,n & 0xf);
  9608  0DE5  0877               	movf	lcd_send_byte@n,w
  9609  0DE6  390F               	andlw	15
  9610  0DE7  00F8               	movwf	??_lcd_send_byte
  9611  0DE8  0878               	movf	??_lcd_send_byte,w
  9612  0DE9  00F3               	movwf	Send_D7_D4@nibble
  9613  0DEA  087A               	movf	lcd_send_byte@address,w
  9614  0DEB  318F  271A         	fcall	_Send_D7_D4
  9615  0DED  0008               	return
  9616  0DEE                     __end_of_lcd_send_byte:
  9617                           
  9618                           	psect	text25
  9619  0F1A                     __ptext25:	
  9620 ;; *************** function _Send_D7_D4 *****************
  9621 ;; Defined at:
  9622 ;;		line 15 in file "LCD_i2c.c"
  9623 ;; Parameters:    Size  Location     Type
  9624 ;;  address         1    wreg     unsigned char 
  9625 ;;  nibble          1    3[COMMON] unsigned char 
  9626 ;; Auto vars:     Size  Location     Type
  9627 ;;  address         1    5[COMMON] unsigned char 
  9628 ;;  datos           1    6[COMMON] unsigned char 
  9629 ;; Return value:  Size  Location     Type
  9630 ;;                  1    wreg      void 
  9631 ;; Registers used:
  9632 ;;		wreg, status,2, status,0, pclath, cstack
  9633 ;; Tracked objects:
  9634 ;;		On entry : 1C/0
  9635 ;;		On exit  : 1F/3
  9636 ;;		Unchanged: 0/0
  9637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9638 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9639 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9640 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9641 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9642 ;;Total ram usage:        4 bytes
  9643 ;; Hardware stack levels used: 1
  9644 ;; Hardware stack levels required when called: 3
  9645 ;; This function calls:
  9646 ;;		_Write_PCF
  9647 ;; This function is called by:
  9648 ;;		_lcd_send_byte
  9649 ;;		_lcd_init
  9650 ;; This function uses a non-reentrant model
  9651 ;;
  9652                           
  9653                           
  9654                           ;psect for function _Send_D7_D4
  9655  0F1A                     _Send_D7_D4:
  9656                           
  9657                           ;incstack = 0
  9658                           ; Regs used in _Send_D7_D4: [wreg+status,2+status,0+pclath+cstack]
  9659                           ;Send_D7_D4@address stored from wreg
  9660  0F1A  00F5               	movwf	Send_D7_D4@address
  9661                           
  9662                           ;LCD_i2c.c: 16:    char datos=0;
  9663  0F1B  01F6               	clrf	Send_D7_D4@datos
  9664                           
  9665                           ;LCD_i2c.c: 18:    if((nibble & 1)==1) datos= datos|16; else datos = datos&~16;
  9666  0F1C  1C73               	btfss	Send_D7_D4@nibble,0
  9667  0F1D  2F21               	goto	l2882
  9668  0F1E  0876               	movf	Send_D7_D4@datos,w
  9669  0F1F  3810               	iorlw	16
  9670  0F20  2F23               	goto	L4
  9671  0F21                     l2882:
  9672  0F21  0876               	movf	Send_D7_D4@datos,w
  9673  0F22  39EF               	andlw	239
  9674  0F23                     L4:
  9675  0F23  00F4               	movwf	??_Send_D7_D4
  9676  0F24  0874               	movf	??_Send_D7_D4,w
  9677  0F25  00F6               	movwf	Send_D7_D4@datos
  9678                           
  9679                           ;LCD_i2c.c: 19:    if((nibble & 2)==2) datos= datos|32; else datos = datos&~32;
  9680  0F26  1CF3               	btfss	Send_D7_D4@nibble,1
  9681  0F27  2F2B               	goto	l2888
  9682  0F28  0876               	movf	Send_D7_D4@datos,w
  9683  0F29  3820               	iorlw	32
  9684  0F2A  2F2D               	goto	L5
  9685  0F2B                     l2888:
  9686  0F2B  0876               	movf	Send_D7_D4@datos,w
  9687  0F2C  39DF               	andlw	223
  9688  0F2D                     L5:
  9689  0F2D  00F4               	movwf	??_Send_D7_D4
  9690  0F2E  0874               	movf	??_Send_D7_D4,w
  9691  0F2F  00F6               	movwf	Send_D7_D4@datos
  9692                           
  9693                           ;LCD_i2c.c: 20:    if((nibble & 4)==4) datos= datos|64; else datos = datos&~64;
  9694  0F30  1D73               	btfss	Send_D7_D4@nibble,2
  9695  0F31  2F35               	goto	l2894
  9696  0F32  0876               	movf	Send_D7_D4@datos,w
  9697  0F33  3840               	iorlw	64
  9698  0F34  2F37               	goto	L6
  9699  0F35                     l2894:
  9700  0F35  0876               	movf	Send_D7_D4@datos,w
  9701  0F36  39BF               	andlw	191
  9702  0F37                     L6:
  9703  0F37  00F4               	movwf	??_Send_D7_D4
  9704  0F38  0874               	movf	??_Send_D7_D4,w
  9705  0F39  00F6               	movwf	Send_D7_D4@datos
  9706                           
  9707                           ;LCD_i2c.c: 21:    if((nibble & 8)==8) datos= datos|128; else datos = datos&~128;
  9708  0F3A  1DF3               	btfss	Send_D7_D4@nibble,3
  9709  0F3B  2F3F               	goto	l2900
  9710  0F3C  0876               	movf	Send_D7_D4@datos,w
  9711  0F3D  3880               	iorlw	128
  9712  0F3E  2F41               	goto	L7
  9713  0F3F                     l2900:
  9714  0F3F  0876               	movf	Send_D7_D4@datos,w
  9715  0F40  397F               	andlw	127
  9716  0F41                     L7:
  9717  0F41  00F4               	movwf	??_Send_D7_D4
  9718  0F42  0874               	movf	??_Send_D7_D4,w
  9719  0F43  00F6               	movwf	Send_D7_D4@datos
  9720                           
  9721                           ;LCD_i2c.c: 22:       _delay((unsigned long)((60)*(32000000UL/4000000.0)));
  9722  0F44  30A0               	movlw	160
  9723  0F45                     u3107:
  9724  0F45  0B89               	decfsz	9,f
  9725  0F46  2F45               	goto	u3107
  9726                           
  9727                           ;LCD_i2c.c: 23:    if(address)
  9728  0F47  0875               	movf	Send_D7_D4@address,w
  9729  0F48  1903               	btfsc	3,2
  9730  0F49  2F4D               	goto	l2908
  9731                           
  9732                           ;LCD_i2c.c: 24:       datos= datos |1;
  9733  0F4A  0876               	movf	Send_D7_D4@datos,w
  9734  0F4B  3801               	iorlw	1
  9735  0F4C  2F4F               	goto	L8
  9736  0F4D                     l2908:
  9737                           
  9738                           ;LCD_i2c.c: 26:      datos = datos &~1;
  9739  0F4D  0876               	movf	Send_D7_D4@datos,w
  9740  0F4E  39FE               	andlw	254
  9741  0F4F                     L8:
  9742  0F4F  00F4               	movwf	??_Send_D7_D4
  9743  0F50  0874               	movf	??_Send_D7_D4,w
  9744  0F51  00F6               	movwf	Send_D7_D4@datos
  9745                           
  9746                           ;LCD_i2c.c: 29:    Write_PCF( datos | 4);
  9747  0F52  0876               	movf	Send_D7_D4@datos,w
  9748  0F53  3804               	iorlw	4
  9749  0F54  318D  2577  318F   	fcall	_Write_PCF
  9750                           
  9751                           ;LCD_i2c.c: 30:    _delay((unsigned long)((2)*(32000000UL/4000000.0)));
  9752  0F57  3005               	movlw	5
  9753  0F58                     u3117:
  9754  0F58  0B89               	decfsz	9,f
  9755  0F59  2F58               	goto	u3117
  9756  0F5A  0000               	nop
  9757                           
  9758                           ;LCD_i2c.c: 31:    Write_PCF( datos & ~4);
  9759  0F5B  0876               	movf	Send_D7_D4@datos,w
  9760  0F5C  39FB               	andlw	251
  9761  0F5D  318D  2577         	fcall	_Write_PCF
  9762  0F5F  0008               	return
  9763  0F60                     __end_of_Send_D7_D4:
  9764                           
  9765                           	psect	text26
  9766  0D77                     __ptext26:	
  9767 ;; *************** function _Write_PCF *****************
  9768 ;; Defined at:
  9769 ;;		line 3 in file "LCD_i2c.c"
  9770 ;; Parameters:    Size  Location     Type
  9771 ;;  dato            1    wreg     unsigned char 
  9772 ;; Auto vars:     Size  Location     Type
  9773 ;;  dato            1    2[COMMON] unsigned char 
  9774 ;; Return value:  Size  Location     Type
  9775 ;;                  1    wreg      void 
  9776 ;; Registers used:
  9777 ;;		wreg, status,2, status,0, pclath, cstack
  9778 ;; Tracked objects:
  9779 ;;		On entry : 0/0
  9780 ;;		On exit  : 1F/3
  9781 ;;		Unchanged: 0/0
  9782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9784 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9786 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9787 ;;Total ram usage:        1 bytes
  9788 ;; Hardware stack levels used: 1
  9789 ;; Hardware stack levels required when called: 2
  9790 ;; This function calls:
  9791 ;;		_I2C_start
  9792 ;;		_I2C_stop
  9793 ;;		_I2C_write
  9794 ;; This function is called by:
  9795 ;;		_Send_D7_D4
  9796 ;; This function uses a non-reentrant model
  9797 ;;
  9798                           
  9799                           
  9800                           ;psect for function _Write_PCF
  9801  0D77                     _Write_PCF:
  9802                           
  9803                           ;incstack = 0
  9804                           ; Regs used in _Write_PCF: [wreg+status,2+status,0+pclath+cstack]
  9805                           ;Write_PCF@dato stored from wreg
  9806  0D77  00F2               	movwf	Write_PCF@dato
  9807                           
  9808                           ;LCD_i2c.c: 7:        I2C_start();
  9809  0D78  318D  2521  318D   	fcall	_I2C_start
  9810                           
  9811                           ;LCD_i2c.c: 8:        I2C_write(64|(7<<1));
  9812  0D7B  304E               	movlw	78
  9813  0D7C  318D  255D  318D   	fcall	_I2C_write
  9814                           
  9815                           ;LCD_i2c.c: 9:        I2C_write(dato|8 );
  9816  0D7F  0872               	movf	Write_PCF@dato,w
  9817  0D80  3808               	iorlw	8
  9818  0D81  318D  255D  318D   	fcall	_I2C_write
  9819                           
  9820                           ;LCD_i2c.c: 10:        I2C_stop();
  9821  0D84  318D  2526         	fcall	_I2C_stop
  9822  0D86  0008               	return
  9823  0D87                     __end_of_Write_PCF:
  9824                           
  9825                           	psect	text27
  9826  0D3F                     __ptext27:	
  9827 ;; *************** function _enable_interrupt *****************
  9828 ;; Defined at:
  9829 ;;		line 3 in file "interrupt.c"
  9830 ;; Parameters:    Size  Location     Type
  9831 ;;		None
  9832 ;; Auto vars:     Size  Location     Type
  9833 ;;		None
  9834 ;; Return value:  Size  Location     Type
  9835 ;;                  1    wreg      void 
  9836 ;; Registers used:
  9837 ;;		wreg
  9838 ;; Tracked objects:
  9839 ;;		On entry : B1F/1E
  9840 ;;		On exit  : B1F/1D
  9841 ;;		Unchanged: B00/0
  9842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9847 ;;Total ram usage:        0 bytes
  9848 ;; Hardware stack levels used: 1
  9849 ;; Hardware stack levels required when called: 1
  9850 ;; This function calls:
  9851 ;;		Nothing
  9852 ;; This function is called by:
  9853 ;;		_main
  9854 ;; This function uses a non-reentrant model
  9855 ;;
  9856                           
  9857                           
  9858                           ;psect for function _enable_interrupt
  9859  0D3F                     _enable_interrupt:
  9860                           
  9861                           ;interrupt.c: 4:     INTCON = 0b10000000;
  9862                           
  9863                           ;incstack = 0
  9864                           ; Regs used in _enable_interrupt: [wreg]
  9865  0D3F  3080               	movlw	128
  9866  0D40  008B               	movwf	11	;volatile
  9867                           
  9868                           ;interrupt.c: 5:     PIE0 = 0b00000001;
  9869  0D41  3001               	movlw	1
  9870  0D42  002E               	movlb	14	; select bank14
  9871  0D43  0096               	movwf	22	;volatile
  9872                           
  9873                           ;interrupt.c: 7:     INTPPS = 0x05;
  9874  0D44  3005               	movlw	5
  9875  0D45  003D               	movlb	29	; select bank29
  9876  0D46  0090               	movwf	16	;volatile
  9877  0D47  0008               	return
  9878  0D48                     __end_of_enable_interrupt:
  9879                           
  9880                           	psect	text28
  9881  0DEE                     __ptext28:	
  9882 ;; *************** function _I2C_init *****************
  9883 ;; Defined at:
  9884 ;;		line 4 in file "I2C.c"
  9885 ;; Parameters:    Size  Location     Type
  9886 ;;		None
  9887 ;; Auto vars:     Size  Location     Type
  9888 ;;		None
  9889 ;; Return value:  Size  Location     Type
  9890 ;;                  1    wreg      void 
  9891 ;; Registers used:
  9892 ;;		wreg, status,2
  9893 ;; Tracked objects:
  9894 ;;		On entry : B1F/1D
  9895 ;;		On exit  : B1F/3
  9896 ;;		Unchanged: B00/0
  9897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9902 ;;Total ram usage:        0 bytes
  9903 ;; Hardware stack levels used: 1
  9904 ;; Hardware stack levels required when called: 1
  9905 ;; This function calls:
  9906 ;;		Nothing
  9907 ;; This function is called by:
  9908 ;;		_main
  9909 ;; This function uses a non-reentrant model
  9910 ;;
  9911                           
  9912                           
  9913                           ;psect for function _I2C_init
  9914  0DEE                     _I2C_init:
  9915                           
  9916                           ;I2C.c: 6:     TRISCbits.TRISC3 = 1;
  9917                           
  9918                           ;incstack = 0
  9919                           ; Regs used in _I2C_init: [wreg+status,2]
  9920  0DEE  0020               	movlb	0	; select bank0
  9921  0DEF  1593               	bsf	19,3	;volatile
  9922                           
  9923                           ;I2C.c: 7:     TRISCbits.TRISC4 = 1;
  9924  0DF0  1613               	bsf	19,4	;volatile
  9925                           
  9926                           ;I2C.c: 8:     ANSELCbits.ANSC3 = 0;
  9927  0DF1  003E               	movlb	30	; select bank30
  9928  0DF2  11CE               	bcf	78,3	;volatile
  9929                           
  9930                           ;I2C.c: 9:     ANSELCbits.ANSC4 = 0;
  9931  0DF3  124E               	bcf	78,4	;volatile
  9932                           
  9933                           ;I2C.c: 10:     SSP1CLKPPS = 0x14;
  9934  0DF4  3014               	movlw	20
  9935  0DF5  003D               	movlb	29	; select bank29
  9936  0DF6  00C5               	movwf	69	;volatile
  9937                           
  9938                           ;I2C.c: 11:     RC3PPS = 0x15;
  9939  0DF7  3015               	movlw	21
  9940  0DF8  003E               	movlb	30	; select bank30
  9941  0DF9  00A3               	movwf	35	;volatile
  9942                           
  9943                           ;I2C.c: 12:     RC4PPS = 0x14;
  9944  0DFA  3014               	movlw	20
  9945  0DFB  00A4               	movwf	36	;volatile
  9946                           
  9947                           ;I2C.c: 13:     SSP1DATPPS = 0x13;
  9948  0DFC  3013               	movlw	19
  9949  0DFD  003D               	movlb	29	; select bank29
  9950  0DFE  00C6               	movwf	70	;volatile
  9951                           
  9952                           ;I2C.c: 15:     SSP1STAT = 0b10000000;
  9953  0DFF  3080               	movlw	128
  9954  0E00  0023               	movlb	3	; select bank3
  9955  0E01  008F               	movwf	15	;volatile
  9956                           
  9957                           ;I2C.c: 16:  SSP1CON1 = 0b00101000;
  9958  0E02  3028               	movlw	40
  9959  0E03  0090               	movwf	16	;volatile
  9960                           
  9961                           ;I2C.c: 17:  SSP1CON3 = 0x00;
  9962  0E04  0192               	clrf	18	;volatile
  9963                           
  9964                           ;I2C.c: 18:  SSP1ADD = ((32000000UL/(4UL*100000UL))-1);
  9965  0E05  304F               	movlw	79
  9966  0E06  008D               	movwf	13	;volatile
  9967  0E07  0008               	return
  9968  0E08                     __end_of_I2C_init:
  9969                           
  9970                           	psect	text29
  9971  0700                     __ptext29:	
  9972 ;; *************** function _EMC1001_read *****************
  9973 ;; Defined at:
  9974 ;;		line 12 in file "EMC1001.c"
  9975 ;; Parameters:    Size  Location     Type
  9976 ;;  TH              1    wreg     PTR char 
  9977 ;;		 -> high_byte(1), 
  9978 ;;  TL              1    5[COMMON] PTR unsigned char 
  9979 ;;		 -> low_byte(1), 
  9980 ;; Auto vars:     Size  Location     Type
  9981 ;;  TH              1    8[COMMON] PTR char 
  9982 ;;		 -> high_byte(1), 
  9983 ;; Return value:  Size  Location     Type
  9984 ;;                  1    wreg      void 
  9985 ;; Registers used:
  9986 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9987 ;; Tracked objects:
  9988 ;;		On entry : 0/0
  9989 ;;		On exit  : 1F/3
  9990 ;;		Unchanged: 0/0
  9991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9992 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9993 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9994 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9995 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9996 ;;Total ram usage:        4 bytes
  9997 ;; Hardware stack levels used: 1
  9998 ;; Hardware stack levels required when called: 2
  9999 ;; This function calls:
 10000 ;;		_I2C_ack
 10001 ;;		_I2C_read
 10002 ;;		_I2C_restart
 10003 ;;		_I2C_start
 10004 ;;		_I2C_stop
 10005 ;;		_I2C_write
 10006 ;;		___bmul
 10007 ;; This function is called by:
 10008 ;;		_main
 10009 ;; This function uses a non-reentrant model
 10010 ;;
 10011                           
 10012                           
 10013                           ;psect for function _EMC1001_read
 10014  0700                     _EMC1001_read:
 10015                           
 10016                           ;incstack = 0
 10017                           ; Regs used in _EMC1001_read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10018                           ;EMC1001_read@TH stored from wreg
 10019  0700  00F8               	movwf	EMC1001_read@TH
 10020                           
 10021                           ;EMC1001.c: 13:     I2C_start();
 10022  0701  318D  2521  3187   	fcall	_I2C_start
 10023                           
 10024                           ;EMC1001.c: 14:     I2C_write(0b01110000);
 10025  0704  3070               	movlw	112
 10026  0705  318D  255D  3187   	fcall	_I2C_write
 10027                           
 10028                           ;EMC1001.c: 15:     I2C_write(0);
 10029  0708  3000               	movlw	0
 10030  0709  318D  255D  3187   	fcall	_I2C_write
 10031                           
 10032                           ;EMC1001.c: 16:     I2C_restart();
 10033  070C  3187  27FC  3187   	fcall	_I2C_restart
 10034                           
 10035                           ;EMC1001.c: 17:     I2C_write(0b01110000|0x01);
 10036  070F  3071               	movlw	113
 10037  0710  318D  255D  3187   	fcall	_I2C_write
 10038                           
 10039                           ;EMC1001.c: 18:     *TH = I2C_read();
 10040  0713  318D  2548  3187   	fcall	_I2C_read
 10041  0716  00F6               	movwf	??_EMC1001_read
 10042  0717  0878               	movf	EMC1001_read@TH,w
 10043  0718  0086               	movwf	6
 10044  0719  0187               	clrf	7
 10045  071A  0876               	movf	??_EMC1001_read,w
 10046  071B  0081               	movwf	1
 10047                           
 10048                           ;EMC1001.c: 19:     I2C_ack();
 10049  071C  318D  2536  3187   	fcall	_I2C_ack
 10050                           
 10051                           ;EMC1001.c: 20:     I2C_stop();
 10052  071F  318D  2526  3187   	fcall	_I2C_stop
 10053                           
 10054                           ;EMC1001.c: 22:     _delay((unsigned long)((10)*(32000000UL/4000000.0)));
 10055  0722  301A               	movlw	26
 10056  0723                     u3127:
 10057  0723  0B89               	decfsz	9,f
 10058  0724  2F23               	goto	u3127
 10059  0725  3200               	nop2
 10060                           
 10061                           ;EMC1001.c: 24:     I2C_start();
 10062  0726  318D  2521  3187   	fcall	_I2C_start
 10063                           
 10064                           ;EMC1001.c: 25:     I2C_write(0b01110000);
 10065  0729  3070               	movlw	112
 10066  072A  318D  255D  3187   	fcall	_I2C_write
 10067                           
 10068                           ;EMC1001.c: 26:     I2C_write(2);
 10069  072D  3002               	movlw	2
 10070  072E  318D  255D  3187   	fcall	_I2C_write
 10071                           
 10072                           ;EMC1001.c: 27:     I2C_restart();
 10073  0731  3187  27FC  3187   	fcall	_I2C_restart
 10074                           
 10075                           ;EMC1001.c: 28:     I2C_write(0b01110000|0x01);
 10076  0734  3071               	movlw	113
 10077  0735  318D  255D  3187   	fcall	_I2C_write
 10078                           
 10079                           ;EMC1001.c: 29:     *TL = I2C_read();
 10080  0738  318D  2548  3187   	fcall	_I2C_read
 10081  073B  00F6               	movwf	??_EMC1001_read
 10082  073C  0875               	movf	EMC1001_read@TL,w
 10083  073D  0086               	movwf	6
 10084  073E  0187               	clrf	7
 10085  073F  0876               	movf	??_EMC1001_read,w
 10086  0740  0081               	movwf	1
 10087                           
 10088                           ;EMC1001.c: 30:     I2C_ack();
 10089  0741  318D  2536  3187   	fcall	_I2C_ack
 10090                           
 10091                           ;EMC1001.c: 31:     I2C_stop();
 10092  0744  318D  2526  3187   	fcall	_I2C_stop
 10093                           
 10094                           ;EMC1001.c: 32:     *TL>>=6;
 10095  0747  0875               	movf	EMC1001_read@TL,w
 10096  0748  0086               	movwf	6
 10097  0749  0187               	clrf	7
 10098  074A  0E81               	swapf	1,f
 10099  074B  0C81               	rrf	1,f
 10100  074C  0C81               	rrf	1,f
 10101  074D  3003               	movlw	3
 10102  074E  0581               	andwf	1,f
 10103                           
 10104                           ;EMC1001.c: 33:     *TL*=25;
 10105  074F  0875               	movf	EMC1001_read@TL,w
 10106  0750  0086               	movwf	6
 10107  0751  0187               	clrf	7
 10108  0752  0801               	movf	1,w
 10109  0753  00F6               	movwf	??_EMC1001_read
 10110  0754  0876               	movf	??_EMC1001_read,w
 10111  0755  00F1               	movwf	___bmul@multiplicand
 10112  0756  3019               	movlw	25
 10113  0757  318D  2597         	fcall	___bmul
 10114  0759  00F7               	movwf	??_EMC1001_read+1
 10115  075A  0875               	movf	EMC1001_read@TL,w
 10116  075B  0086               	movwf	6
 10117  075C  0187               	clrf	7
 10118  075D  0877               	movf	??_EMC1001_read+1,w
 10119  075E  0081               	movwf	1
 10120  075F  0008               	return
 10121  0760                     __end_of_EMC1001_read:
 10122                           
 10123                           	psect	text30
 10124  0D97                     __ptext30:	
 10125 ;; *************** function ___bmul *****************
 10126 ;; Defined at:
 10127 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul8.c"
 10128 ;; Parameters:    Size  Location     Type
 10129 ;;  multiplier      1    wreg     unsigned char 
 10130 ;;  multiplicand    1    1[COMMON] unsigned char 
 10131 ;; Auto vars:     Size  Location     Type
 10132 ;;  multiplier      1    4[COMMON] unsigned char 
 10133 ;;  product         1    3[COMMON] unsigned char 
 10134 ;; Return value:  Size  Location     Type
 10135 ;;                  1    wreg      unsigned char 
 10136 ;; Registers used:
 10137 ;;		wreg, status,2, status,0
 10138 ;; Tracked objects:
 10139 ;;		On entry : 1F/3
 10140 ;;		On exit  : 1F/3
 10141 ;;		Unchanged: 1E/0
 10142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10143 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10144 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10145 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10146 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10147 ;;Total ram usage:        4 bytes
 10148 ;; Hardware stack levels used: 1
 10149 ;; Hardware stack levels required when called: 1
 10150 ;; This function calls:
 10151 ;;		Nothing
 10152 ;; This function is called by:
 10153 ;;		_EMC1001_read
 10154 ;; This function uses a non-reentrant model
 10155 ;;
 10156                           
 10157                           
 10158                           ;psect for function ___bmul
 10159  0D97                     ___bmul:
 10160                           
 10161                           ;incstack = 0
 10162                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 10163                           ;___bmul@multiplier stored from wreg
 10164  0D97  00F4               	movwf	___bmul@multiplier
 10165  0D98  01F3               	clrf	___bmul@product
 10166  0D99                     l2410:
 10167  0D99  1C74               	btfss	___bmul@multiplier,0
 10168  0D9A  2D9F               	goto	l2414
 10169  0D9B  0871               	movf	___bmul@multiplicand,w
 10170  0D9C  00F2               	movwf	??___bmul
 10171  0D9D  0872               	movf	??___bmul,w
 10172  0D9E  07F3               	addwf	___bmul@product,f
 10173  0D9F                     l2414:
 10174  0D9F  1003               	clrc
 10175  0DA0  0DF1               	rlf	___bmul@multiplicand,f
 10176  0DA1  1003               	clrc
 10177  0DA2  0CF4               	rrf	___bmul@multiplier,f
 10178  0DA3  0874               	movf	___bmul@multiplier,w
 10179  0DA4  1D03               	btfss	3,2
 10180  0DA5  2D99               	goto	l2410
 10181  0DA6  0873               	movf	___bmul@product,w
 10182  0DA7  0008               	return
 10183  0DA8                     __end_of___bmul:
 10184                           
 10185                           	psect	text31
 10186  0D5D                     __ptext31:	
 10187 ;; *************** function _I2C_write *****************
 10188 ;; Defined at:
 10189 ;;		line 63 in file "I2C.c"
 10190 ;; Parameters:    Size  Location     Type
 10191 ;;  I2C_data        1    wreg     unsigned char 
 10192 ;; Auto vars:     Size  Location     Type
 10193 ;;  I2C_data        1    1[COMMON] unsigned char 
 10194 ;; Return value:  Size  Location     Type
 10195 ;;                  1    wreg      _Bool 
 10196 ;; Registers used:
 10197 ;;		wreg
 10198 ;; Tracked objects:
 10199 ;;		On entry : 1F/3
 10200 ;;		On exit  : 1F/3
 10201 ;;		Unchanged: 0/0
 10202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10204 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10206 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10207 ;;Total ram usage:        1 bytes
 10208 ;; Hardware stack levels used: 1
 10209 ;; Hardware stack levels required when called: 1
 10210 ;; This function calls:
 10211 ;;		Nothing
 10212 ;; This function is called by:
 10213 ;;		_Write_PCF
 10214 ;;		_lcd_init
 10215 ;;		_EMC1001_read
 10216 ;; This function uses a non-reentrant model
 10217 ;;
 10218                           
 10219                           
 10220                           ;psect for function _I2C_write
 10221  0D5D                     _I2C_write:
 10222                           
 10223                           ;incstack = 0
 10224                           ; Regs used in _I2C_write: [wreg]
 10225                           ;I2C_write@I2C_data stored from wreg
 10226  0D5D  00F1               	movwf	I2C_write@I2C_data
 10227                           
 10228                           ;I2C.c: 63: _Bool I2C_write(uint8_t I2C_data);I2C.c: 64: {;I2C.c: 65:     PIR3bits.SSP1I
      +                          F = 0;
 10229  0D5E  002E               	movlb	14	; select bank14
 10230  0D5F  100F               	bcf	15,0	;volatile
 10231                           
 10232                           ;I2C.c: 66:     SSP1BUF = I2C_data;
 10233  0D60  0871               	movf	I2C_write@I2C_data,w
 10234  0D61  0023               	movlb	3	; select bank3
 10235  0D62  008C               	movwf	12	;volatile
 10236  0D63                     l244:	
 10237                           ;I2C.c: 67:     while(PIR3bits.SSP1IF == 0);
 10238                           
 10239  0D63  002E               	movlb	14	; select bank14
 10240  0D64  1C0F               	btfss	15,0	;volatile
 10241  0D65  2D63               	goto	l244
 10242                           
 10243                           ;I2C.c: 68:     if(SSP1CON2bits.ACKSTAT==0)
 10244  0D66  0023               	movlb	3	; select bank3
 10245  0D67  0811               	movf	17,w	;volatile
 10246  0D68  0008               	return
 10247  0D69                     __end_of_I2C_write:
 10248                           
 10249                           	psect	text32
 10250  0D26                     __ptext32:	
 10251 ;; *************** function _I2C_stop *****************
 10252 ;; Defined at:
 10253 ;;		line 33 in file "I2C.c"
 10254 ;; Parameters:    Size  Location     Type
 10255 ;;		None
 10256 ;; Auto vars:     Size  Location     Type
 10257 ;;		None
 10258 ;; Return value:  Size  Location     Type
 10259 ;;                  1    wreg      void 
 10260 ;; Registers used:
 10261 ;;		None
 10262 ;; Tracked objects:
 10263 ;;		On entry : 12/3
 10264 ;;		On exit  : 1F/3
 10265 ;;		Unchanged: 0/0
 10266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10271 ;;Total ram usage:        0 bytes
 10272 ;; Hardware stack levels used: 1
 10273 ;; Hardware stack levels required when called: 1
 10274 ;; This function calls:
 10275 ;;		Nothing
 10276 ;; This function is called by:
 10277 ;;		_Write_PCF
 10278 ;;		_lcd_init
 10279 ;;		_EMC1001_read
 10280 ;; This function uses a non-reentrant model
 10281 ;;
 10282                           
 10283                           
 10284                           ;psect for function _I2C_stop
 10285  0D26                     _I2C_stop:
 10286                           
 10287                           ;I2C.c: 35:     SSP1CON2bits.PEN = 1;
 10288                           
 10289                           ;incstack = 0
 10290                           ; Regs used in _I2C_stop: []
 10291  0D26  0023               	movlb	3	; select bank3
 10292  0D27  1511               	bsf	17,2	;volatile
 10293  0D28                     l220:	
 10294                           ;I2C.c: 36:     while(SSP1CON2bits.PEN == 1);
 10295                           
 10296  0D28  1D11               	btfss	17,2	;volatile
 10297  0D29  0008               	return
 10298  0D2A  2D28               	goto	l220
 10299  0D2B                     __end_of_I2C_stop:
 10300                           
 10301                           	psect	text33
 10302  0D21                     __ptext33:	
 10303 ;; *************** function _I2C_start *****************
 10304 ;; Defined at:
 10305 ;;		line 21 in file "I2C.c"
 10306 ;; Parameters:    Size  Location     Type
 10307 ;;		None
 10308 ;; Auto vars:     Size  Location     Type
 10309 ;;		None
 10310 ;; Return value:  Size  Location     Type
 10311 ;;                  1    wreg      void 
 10312 ;; Registers used:
 10313 ;;		None
 10314 ;; Tracked objects:
 10315 ;;		On entry : 0/1D
 10316 ;;		On exit  : 1F/3
 10317 ;;		Unchanged: 0/0
 10318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10323 ;;Total ram usage:        0 bytes
 10324 ;; Hardware stack levels used: 1
 10325 ;; Hardware stack levels required when called: 1
 10326 ;; This function calls:
 10327 ;;		Nothing
 10328 ;; This function is called by:
 10329 ;;		_Write_PCF
 10330 ;;		_lcd_init
 10331 ;;		_EMC1001_read
 10332 ;; This function uses a non-reentrant model
 10333 ;;
 10334                           
 10335                           
 10336                           ;psect for function _I2C_start
 10337  0D21                     _I2C_start:
 10338                           
 10339                           ;I2C.c: 23:     SSP1CON2bits.SEN = 1;
 10340                           
 10341                           ;incstack = 0
 10342                           ; Regs used in _I2C_start: []
 10343  0D21  0023               	movlb	3	; select bank3
 10344  0D22  1411               	bsf	17,0	;volatile
 10345  0D23                     l208:	
 10346                           ;I2C.c: 24:     while(SSP1CON2bits.SEN == 1);
 10347                           
 10348  0D23  1C11               	btfss	17,0	;volatile
 10349  0D24  0008               	return
 10350  0D25  2D23               	goto	l208
 10351  0D26                     __end_of_I2C_start:
 10352                           
 10353                           	psect	text34
 10354  07FC                     __ptext34:	
 10355 ;; *************** function _I2C_restart *****************
 10356 ;; Defined at:
 10357 ;;		line 27 in file "I2C.c"
 10358 ;; Parameters:    Size  Location     Type
 10359 ;;		None
 10360 ;; Auto vars:     Size  Location     Type
 10361 ;;		None
 10362 ;; Return value:  Size  Location     Type
 10363 ;;                  1    wreg      void 
 10364 ;; Registers used:
 10365 ;;		None
 10366 ;; Tracked objects:
 10367 ;;		On entry : 1F/3
 10368 ;;		On exit  : 1F/3
 10369 ;;		Unchanged: 0/0
 10370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10375 ;;Total ram usage:        0 bytes
 10376 ;; Hardware stack levels used: 1
 10377 ;; Hardware stack levels required when called: 1
 10378 ;; This function calls:
 10379 ;;		Nothing
 10380 ;; This function is called by:
 10381 ;;		_EMC1001_read
 10382 ;; This function uses a non-reentrant model
 10383 ;;
 10384                           
 10385                           
 10386                           ;psect for function _I2C_restart
 10387  07FC                     _I2C_restart:
 10388                           
 10389                           ;I2C.c: 29:     SSP1CON2bits.RSEN = 1;
 10390                           
 10391                           ;incstack = 0
 10392                           ; Regs used in _I2C_restart: []
 10393  07FC  1491               	bsf	17,1	;volatile
 10394  07FD                     l214:	
 10395                           ;I2C.c: 30:     while(SSP1CON2bits.RSEN == 1);
 10396                           
 10397  07FD  1C91               	btfss	17,1	;volatile
 10398  07FE  0008               	return
 10399  07FF  2FFD               	goto	l214
 10400  0800                     __end_of_I2C_restart:
 10401                           
 10402                           	psect	text35
 10403  0D48                     __ptext35:	
 10404 ;; *************** function _I2C_read *****************
 10405 ;; Defined at:
 10406 ;;		line 39 in file "I2C.c"
 10407 ;; Parameters:    Size  Location     Type
 10408 ;;		None
 10409 ;; Auto vars:     Size  Location     Type
 10410 ;;		None
 10411 ;; Return value:  Size  Location     Type
 10412 ;;                  1    wreg      unsigned char 
 10413 ;; Registers used:
 10414 ;;		wreg
 10415 ;; Tracked objects:
 10416 ;;		On entry : 1F/3
 10417 ;;		On exit  : 1F/3
 10418 ;;		Unchanged: 0/0
 10419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10424 ;;Total ram usage:        0 bytes
 10425 ;; Hardware stack levels used: 1
 10426 ;; Hardware stack levels required when called: 1
 10427 ;; This function calls:
 10428 ;;		Nothing
 10429 ;; This function is called by:
 10430 ;;		_EMC1001_read
 10431 ;; This function uses a non-reentrant model
 10432 ;;
 10433                           
 10434                           
 10435                           ;psect for function _I2C_read
 10436  0D48                     _I2C_read:
 10437                           
 10438                           ;I2C.c: 41:     PIR3bits.SSP1IF = 0;
 10439                           
 10440                           ;incstack = 0
 10441                           ; Regs used in _I2C_read: [wreg]
 10442  0D48  002E               	movlb	14	; select bank14
 10443  0D49  100F               	bcf	15,0	;volatile
 10444                           
 10445                           ;I2C.c: 42:     SSP1CON2bits.RCEN = 1;
 10446  0D4A  0023               	movlb	3	; select bank3
 10447  0D4B  1591               	bsf	17,3	;volatile
 10448  0D4C                     l226:	
 10449                           ;I2C.c: 43:     while(PIR3bits.SSP1IF == 0);
 10450                           
 10451  0D4C  002E               	movlb	14	; select bank14
 10452  0D4D  1C0F               	btfss	15,0	;volatile
 10453  0D4E  2D4C               	goto	l226
 10454                           
 10455                           ;I2C.c: 44:     return SSP1BUF;
 10456  0D4F  0023               	movlb	3	; select bank3
 10457  0D50  080C               	movf	12,w	;volatile
 10458  0D51  0008               	return
 10459  0D52                     __end_of_I2C_read:
 10460                           
 10461                           	psect	text36
 10462  0D36                     __ptext36:	
 10463 ;; *************** function _I2C_ack *****************
 10464 ;; Defined at:
 10465 ;;		line 47 in file "I2C.c"
 10466 ;; Parameters:    Size  Location     Type
 10467 ;;		None
 10468 ;; Auto vars:     Size  Location     Type
 10469 ;;		None
 10470 ;; Return value:  Size  Location     Type
 10471 ;;                  1    wreg      void 
 10472 ;; Registers used:
 10473 ;;		None
 10474 ;; Tracked objects:
 10475 ;;		On entry : 1F/3
 10476 ;;		On exit  : 1F/E
 10477 ;;		Unchanged: 0/0
 10478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10483 ;;Total ram usage:        0 bytes
 10484 ;; Hardware stack levels used: 1
 10485 ;; Hardware stack levels required when called: 1
 10486 ;; This function calls:
 10487 ;;		Nothing
 10488 ;; This function is called by:
 10489 ;;		_EMC1001_read
 10490 ;; This function uses a non-reentrant model
 10491 ;;
 10492                           
 10493                           
 10494                           ;psect for function _I2C_ack
 10495  0D36                     _I2C_ack:
 10496                           
 10497                           ;I2C.c: 49:     PIR3bits.SSP1IF = 0;
 10498                           
 10499                           ;incstack = 0
 10500                           ; Regs used in _I2C_ack: []
 10501  0D36  002E               	movlb	14	; select bank14
 10502  0D37  100F               	bcf	15,0	;volatile
 10503                           
 10504                           ;I2C.c: 50:     SSP1CON2bits.ACKDT = 0;
 10505  0D38  0023               	movlb	3	; select bank3
 10506  0D39  1291               	bcf	17,5	;volatile
 10507                           
 10508                           ;I2C.c: 51:     SSP1CON2bits.ACKEN = 1;
 10509  0D3A  1611               	bsf	17,4	;volatile
 10510  0D3B                     l232:	
 10511                           ;I2C.c: 52:     while(PIR3bits.SSP1IF == 0);
 10512                           
 10513  0D3B  002E               	movlb	14	; select bank14
 10514  0D3C  180F               	btfsc	15,0	;volatile
 10515  0D3D  0008               	return
 10516  0D3E  2D3B               	goto	l232
 10517  0D3F                     __end_of_I2C_ack:
 10518                           
 10519                           	psect	intentry
 10520  0004                     __pintentry:	
 10521 ;; *************** function _INTERRUPT_InterruptManager *****************
 10522 ;; Defined at:
 10523 ;;		line 16 in file "interrupt.c"
 10524 ;; Parameters:    Size  Location     Type
 10525 ;;		None
 10526 ;; Auto vars:     Size  Location     Type
 10527 ;;		None
 10528 ;; Return value:  Size  Location     Type
 10529 ;;                  1    wreg      void 
 10530 ;; Registers used:
 10531 ;;		wreg, status,2, status,0
 10532 ;; Tracked objects:
 10533 ;;		On entry : 0/0
 10534 ;;		On exit  : 11/0
 10535 ;;		Unchanged: 0/0
 10536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10539 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10540 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10541 ;;Total ram usage:        1 bytes
 10542 ;; Hardware stack levels used: 1
 10543 ;; This function calls:
 10544 ;;		Nothing
 10545 ;; This function is called by:
 10546 ;;		Interrupt level 1
 10547 ;; This function uses a non-reentrant model
 10548 ;;
 10549                           
 10550  0004                     _INTERRUPT_InterruptManager:
 10551                           
 10552                           ;incstack = 0
 10553  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 10554                           
 10555                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0]
 10556  0005  3180               	pagesel	$
 10557                           
 10558                           ;interrupt.c: 18:     if (PIR0bits.INTF == 1){
 10559  0006  002E               	movlb	14	; select bank14
 10560  0007  1C0C               	btfss	12,0	;volatile
 10561  0008  280F               	goto	i1l457
 10562                           
 10563                           ;interrupt.c: 19:         PIR0bits.INTF = 0;
 10564  0009  100C               	bcf	12,0	;volatile
 10565                           
 10566                           ;interrupt.c: 20:         counts++;
 10567  000A  3001               	movlw	1
 10568  000B  00F0               	movwf	??_INTERRUPT_InterruptManager
 10569  000C  0870               	movf	??_INTERRUPT_InterruptManager,w
 10570  000D  0020               	movlb	0	; select bank0
 10571  000E  07EF               	addwf	_counts,f
 10572  000F                     i1l457:	
 10573                           ;interrupt.c: 24:     }else{
 10574                           
 10575  000F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 10576  0010  0009               	retfie
 10577  0011                     __end_of_INTERRUPT_InterruptManager:
 10578  007E                     btemp	set	126	;btemp
 10579  007E                     int$flags	set	126
 10580  007E                     wtemp0	set	126
 10581                           
 10582                           	psect	idloc
 10583                           
 10584                           ;Config register IDLOC0 @ 0x8000
 10585                           ;	unspecified, using default values
 10586  8000                     	org	32768
 10587  8000  3FFF               	dw	16383
 10588                           
 10589                           ;Config register IDLOC1 @ 0x8001
 10590                           ;	unspecified, using default values
 10591  8001                     	org	32769
 10592  8001  3FFF               	dw	16383
 10593                           
 10594                           ;Config register IDLOC2 @ 0x8002
 10595                           ;	unspecified, using default values
 10596  8002                     	org	32770
 10597  8002  3FFF               	dw	16383
 10598                           
 10599                           ;Config register IDLOC3 @ 0x8003
 10600                           ;	unspecified, using default values
 10601  8003                     	org	32771
 10602  8003  3FFF               	dw	16383
 10603                           
 10604                           	psect	config
 10605                           
 10606                           ;Config register CONFIG1 @ 0x8007
 10607                           ;	External Oscillator mode selection bits
 10608                           ;	FEXTOSC = OFF, Oscillator not enabled
 10609                           ;	Power-up default value for COSC bits
 10610                           ;	RSTOSC = HFINT32, HFINTOSC with OSCFRQ= 32 MHz and CDIV = 1:1
 10611                           ;	Clock Out Enable bit
 10612                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 10613                           ;	Clock Switch Enable bit
 10614                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 10615                           ;	Fail-Safe Clock Monitor Enable bit
 10616                           ;	FCMEN = ON, FSCM timer enabled
 10617  8007                     	org	32775
 10618  8007  3F8C               	dw	16268
 10619                           
 10620                           ;Config register CONFIG2 @ 0x8008
 10621                           ;	Master Clear Enable bit
 10622                           ;	MCLRE = ON, MCLR pin is Master Clear function
 10623                           ;	Power-up Timer Enable bit
 10624                           ;	PWRTE = OFF, PWRT disabled
 10625                           ;	Low-Power BOR enable bit
 10626                           ;	LPBOREN = OFF, ULPBOR disabled
 10627                           ;	Brown-out reset enable bits
 10628                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 10629                           ;	Brown-out Reset Voltage Selection
 10630                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 10631                           ;	Zero-cross detect disable
 10632                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 10633                           ;	Peripheral Pin Select one-way control
 10634                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 10635                           ;	Stack Overflow/Underflow Reset Enable bit
 10636                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 10637                           ;	Background Debugger
 10638                           ;	DEBUG = 0x1, unprogrammed default
 10639  8008                     	org	32776
 10640  8008  3FFF               	dw	16383
 10641                           
 10642                           ;Config register CONFIG3 @ 0x8009
 10643                           ;	WDT Period Select bits
 10644                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 10645                           ;	WDT operating mode
 10646                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 10647                           ;	WDT Window Select bits
 10648                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 10649                           ;	WDT input clock selector
 10650                           ;	WDTCCS = SC, Software Control
 10651  8009                     	org	32777
 10652  8009  3F9F               	dw	16287
 10653                           
 10654                           ;Config register CONFIG4 @ 0x800A
 10655                           ;	UserNVM self-write protection bits
 10656                           ;	WRT = OFF, Write protection off
 10657                           ;	Scanner Enable bit
 10658                           ;	SCANE = available, Scanner module is available for use
 10659                           ;	Low Voltage Programming Enable bit
 10660                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 10661  800A                     	org	32778
 10662  800A  3FFF               	dw	16383
 10663                           
 10664                           ;Config register CONFIG5 @ 0x800B
 10665                           ;	UserNVM Program memory code protection bit
 10666                           ;	CP = OFF, Program Memory code protection disabled
 10667                           ;	DataNVM code protection bit
 10668                           ;	CPD = OFF, Data EEPROM code protection disabled
 10669  800B                     	org	32779
 10670  800B  3FFF               	dw	16383

Data Sizes:
    Strings     54
    Constant    24
    Data        0
    BSS         112
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     79      80
    BANK1            80     10      70
    BANK2            80      0      50
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_6(CODE[22]), STR_3(CODE[4]), STR_2(CODE[9]), buffer(BANK2[50]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 50
		 -> buffer(BANK2[50]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_6(CODE[22]), STR_5(CODE[8]), STR_4(CODE[7]), STR_3(CODE[4]), 
		 -> STR_2(CODE[9]), STR_1(CODE[15]), buffer(BANK2[50]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 50
		 -> STR_6(CODE[22]), STR_5(CODE[8]), STR_4(CODE[7]), STR_3(CODE[4]), 
		 -> STR_2(CODE[9]), STR_1(CODE[15]), buffer(BANK2[50]), 

    vfpfcnvrt@vp	PTR void  size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    ctoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_5(CODE[8]), STR_4(CODE[7]), STR_1(CODE[15]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 50
		 -> buffer(BANK2[50]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    S935_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 50
		 -> buffer(BANK2[50]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 50
		 -> buffer(BANK2[50]), 

    EMC1001_read@TL	PTR unsigned char  size(1) Largest target is 1
		 -> low_byte(BANK1[1]), 

    EMC1001_read@TH	PTR char  size(1) Largest target is 1
		 -> high_byte(BANK1[1]), 

    lcd_puts@dato	PTR unsigned char  size(1) Largest target is 50
		 -> buffer(BANK2[50]), 


Critical Paths under _main in COMMON

    _main->_lcd_init
    _main->_serial_init
    _serial_init->___lldiv
    _vfpfcnvrt->_fputc
    _dtoa->___aodiv
    _pad->_fputc
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _putch->_uart_tx
    _lcd_puts->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_init->_lcd_send_byte
    _lcd_send_byte->_Send_D7_D4
    _Send_D7_D4->_Write_PCF
    _Write_PCF->_I2C_write
    _EMC1001_read->___bmul

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_printf
    _main->_sprintf
    _sprintf->_vfprintf
    _serial_init->___lldiv
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _abs->___aomod
    _lcd_puts->_lcd_gotoxy

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   29590
                                              8 BANK1      2     2      0
                       _EMC1001_read
                           _I2C_init
                   _enable_interrupt
                           _lcd_init
                           _lcd_puts
                          _port_init
                             _printf
                        _serial_init
                            _sprintf
                        _teclado_get
                       _teclado_init
 ---------------------------------------------------------------------------------
 (1) _teclado_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _teclado_get                                          2     2      0       0
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6   10883
                                             73 BANK0      6     0      6
                                              0 BANK1      8     8      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _serial_init                                         10     6      4     458
                                             10 COMMON     2     2      0
                                              5 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              1 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4   10640
                                             73 BANK0      6     2      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3   10187
                                             65 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           39    37      2    9534
                                             47 BANK0     18    16      2
                               _ctoa
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    5585
                                             17 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3752
                                              8 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1726
                                              0 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              4 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              1 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              1 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                10     8      2    1646
                                              0 BANK0     10     8      2
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3    1334
                                              4 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      44
                                              3 COMMON     1     1      0
                            _uart_tx
 ---------------------------------------------------------------------------------
 (6) _uart_tx                                              2     2      0      22
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _port_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             3     3      0    4133
                                              4 BANK0      3     3      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoxy                                           5     4      1    2149
                                             11 COMMON     1     0      1
                                              0 BANK0      4     4      0
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0    2996
                                             11 COMMON     1     1      0
                                              0 BANK0      2     2      0
                          _I2C_start
                           _I2C_stop
                          _I2C_write
                         _Send_D7_D4
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_send_byte                                        4     3      1    1816
                                              7 COMMON     4     3      1
                         _Send_D7_D4
 ---------------------------------------------------------------------------------
 (3) _Send_D7_D4                                           4     3      1     982
                                              3 COMMON     4     3      1
                          _Write_PCF
 ---------------------------------------------------------------------------------
 (4) _Write_PCF                                            1     1      0      62
                                              2 COMMON     1     1      0
                          _I2C_start
                           _I2C_stop
                          _I2C_write
 ---------------------------------------------------------------------------------
 (1) _enable_interrupt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EMC1001_read                                         4     3      1     480
                                              5 COMMON     4     3      1
                            _I2C_ack
                           _I2C_read
                        _I2C_restart
                          _I2C_start
                           _I2C_stop
                          _I2C_write
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              1 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (5) _I2C_write                                            1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_restart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EMC1001_read
     _I2C_ack
     _I2C_read
     _I2C_restart
     _I2C_start
     _I2C_stop
     _I2C_write
     ___bmul
   _I2C_init
   _enable_interrupt
   _lcd_init
     _I2C_start
     _I2C_stop
     _I2C_write
     _Send_D7_D4
       _Write_PCF
         _I2C_start
         _I2C_stop
         _I2C_write
     _lcd_send_byte
       _Send_D7_D4
   _lcd_puts
     _lcd_gotoxy
       _lcd_send_byte
     _lcd_send_byte
   _port_init
   _printf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _fputc
             _putch
               _uart_tx
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
             _fputs
               _fputc
             _strlen
         _fputc
   _serial_init
     ___lldiv
   _sprintf
     _vfprintf
   _teclado_get
   _teclado_init

 _INTERRUPT_InterruptManager (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      A      46       7       87.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      32       9       62.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      D5      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      D5      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jul 12 13:34:58 2022

                     ___bmul@product 0073                    Send_D7_D4@address 0075  
                   Send_D7_D4@nibble 0073                       ?_lcd_send_byte 0077  
                                 _mv 104A                                   _rx 00B7  
                 __size_of_I2C_start 0005                   __size_of_I2C_write 000C  
                                l220 0D28                                  l214 07FD  
                                l232 0D3B                                  l208 0D23  
                                l401 00E6                                  l226 0D4C  
                                l410 0107                                  l402 00E1  
                                l244 0D63                                  l421 014E  
                                l413 011F                                  l405 00F9  
                                l430 016F                                  l422 0149  
                                l414 011A                                  l406 00F4  
                                l425 0161                                  l417 013B  
                                l409 010C                                  l426 015C  
                                l418 0136                                  l381 007F  
                                l373 0059                                  l390 00A4  
                                l382 007A                                  l374 0054  
                                l368 0046                                  l393 00BC  
                                l385 0096                                  l377 006C  
                                l369 0041                                  l722 05A7  
                                l394 00B7                                  l386 0091  
                                l378 0067                                  l709 04CB  
                                l397 00CF                                  l389 00A9  
                                l398 00CA                                  _adc 00B0  
                                _abs 0DA8                                  _pad 0F60  
                    __end_of_I2C_ack 0D3F                __size_of_EMC1001_read 0060  
                                wreg 0009                          lcd_gotoxy@x 0022  
                        lcd_gotoxy@y 007B                                 l1102 0F97  
                               l1115 0661                                 l1123 01BB  
                               ?_abs 0074                                 l1132 0284  
                               l1124 01C2                                 l2022 0D6A  
                               l1118 0681                                 l2102 0456  
                               l2112 049E                                 l2104 0465  
                               l1128 01DD                                 l1129 01F1  
                               l2034 07BF                                 l2114 04AA  
                               l2220 064A                                 l2124 0507  
                 serial_init@baudios 0025                                 l2038 07E2  
                               l2142 057A                                 l2070 0DCF  
                               l3014 0393                                 l3006 0369  
                               l3112 06DA                                 l2224 065C  
                               l2136 053B                                 l2144 0586  
                               l2128 052E                                 l3024 03B8  
                               l2410 0D99                                 l3050 0EE4  
                               l2234 0663                                 l2218 0641  
                               l2090 043B                                 l2138 054A  
                               l3018 0397                                 l3034 03C7  
                               l1099 0F77                                 l3044 0EDE  
                               l3300 07AD                                 l2092 043F  
                               l2068 0DC4                                 l3028 03BE  
                               l2414 0D9F                                 l3302 0EF1  
                               l3046 0EE0                                 l2238 0692  
                               l2086 0414                                 l2430 0FCC  
                               l3222 0612                                 l3048 0EE2  
                               l3056 0EE9                                 l3136 0763  
                               l3216 05F3                                 l3058 0EFF  
                               l3146 077F                                 l3154 0795  
                               l2442 0FF7                                 l3148 0789  
                               l3156 079A                                 l3076 0E7B  
                               l2428 0FBE                                 l3078 0E97  
                               l2438 0FEC                                 l3096 06B6  
                               l2900 0F3F                                 l2732 0174  
                               l2908 0F4D                                 l2846 0E2C  
                               l2862 0F75                                 l2934 01EC  
                               ?_pad 0028                                 l2872 0FA3  
                               l2960 0298                                 l2928 01D5  
                               l2882 0F21                                 l2858 0F6D  
                               l2970 02AF                                 l2938 021E  
                               l2868 0F79                                 l2948 01F9  
                               l2956 0290                                 l2894 0F35  
                               l2966 02A3                                 l2888 0F2B  
                               l2994 0312                                 l2998 0330  
                               STR_1 102A                                 STR_2 1039  
                               STR_3 1046                                 STR_5 1042  
                               STR_6 1004                                 u2005 0FCD  
                               u2015 0FE1                                 u1225 0D6E  
                               u2025 0FED                                 u1405 048B  
                               _LATA 0016                                 _LATB 0017  
                               u2055 0EC4                                 u3007 0124  
                               u1505 0568                                 u3017 012F  
                               u1370 0446                                 u3107 0F45  
                               u1275 07E0                                 u3027 0142  
                               u3117 0F58                                 u3037 0155  
                               u3127 0723                                 u3047 0168  
                               u3057 076D                                 u3067 0779  
                               u3077 06AE                                 _PIE0 0716  
                               u3087 06C3                                 u2615 01CD  
                               u2560 0191                                 u3097 06EE  
                               u1585 0DB1                                 u2570 0192  
                               u1675 066D                                 u2725 0DDA  
                               u2645 028E                                 u2495 0F83  
                               u2665 020D                                 u2675 0219  
                               u2907 0060                                 u2917 0073  
                               u2927 008A                                 u2847 05EE  
                               u1985 0FC1                                 u2937 009D  
                               u2857 061C                                 _KEYS 101A  
                               u2947 00B0                                 u2867 062C  
                               u2957 00C3                                 u2877 002F  
                               u2967 00DA                                 u2887 003A  
                               u2977 00ED                                 u2897 004D  
                               u2987 0100                                 _PIR3 070F  
                               u2997 0113                                 _WPUB 0F44  
                               abs@a 0074                                 _dbuf 00BA  
                               _ctoa 0633                                 _main 05B9  
                               _dtoa 0176                                 _prec 00AC  
                               _nout 00A8                                 pad@i 002C  
                               pad@p 0029                                 fsr0h 0005  
                               fsr1h 0007                                 indf0 0000  
                               fsr0l 0004                                 indf1 0001  
                               fsr1l 0006                                 pad@w 002E  
                               btemp 007E                                 _volt 00A4  
                   __end_of_I2C_init 0E08                     __end_of_I2C_read 0D52  
                               start 0011                     __end_of_I2C_stop 0D2B  
                  ___bmul@multiplier 0074                 __size_of_I2C_restart 0004  
                              ??_abs 0076                                ??_pad 002B  
          __size_of_enable_interrupt 0009                         _EMC1001_read 0700  
                    __end_of___aodiv 04DD                                ?_ctoa 0020  
                              ?_main 0070                                ?_dtoa 0031  
                    __end_of___aomod 05B9                      __end_of___lldiv 1000  
                              i1l457 000F                         vfpfcnvrt@fmt 004F  
                              _PORTA 000C                                _PORTB 000D  
                              _TRISA 0011                                _TRISB 0012  
                              _TRISC 0013                                _RXPPS 0ECB  
                              _TXREG 011A                                _flags 00AE  
                              _miVar 00B2                                _fputc 07B6  
                              _fputs 0E29                                _tecla 00B6  
                              pad@fp 0030                                _width 00AA  
                              ctoa@c 0020                                _putch 0D2B  
                              ctoa@l 0025                                ctoa@w 0027  
                              dtoa@d 0031                                dtoa@i 004D  
                       lcd_puts@dato 0026                                dtoa@n 0045  
                              dtoa@p 003F                                dtoa@s 0043  
                              dtoa@w 0041                      __end_of_uart_tx 0D77  
                              status 0003                    __end_of_I2C_start 0D26  
                              wtemp0 007E                      __end_of_sprintf 0E73  
                  __end_of_I2C_write 0D69                         __end_of_KEYS 102A  
                    __initialization 0013                    I2C_write@I2C_data 0071  
                       __end_of_ctoa 069A                         __end_of_main 0633  
                       __end_of_dtoa 02C1                      ??_lcd_send_byte 0078  
        ?_INTERRUPT_InterruptManager 0070                            ??_I2C_ack 0071  
                             ??_ctoa 0022                               ??_main 00E4  
                             ??_dtoa 0039                         ?_teclado_get 0070  
                     EMC1001_read@TH 0078                       EMC1001_read@TL 0075  
                         _Send_D7_D4 0F1A                               ?_fputc 0074  
                             ?_fputs 0020                               _ANSELA 0F38  
                             ?_putch 0070                               _ANSELB 0F43  
                             _ANSELC 0F4E                               _RC0PPS 0F20  
                             _RC1STA 011D                               _RC3PPS 0F23  
                             _RC4PPS 0F24                               _INTCON 000B  
                             _INTPPS 0E90                               u134lld 0412  
                             u145lld 0505                               _TX1STA 011E  
                       ?_serial_init 0025                         vfprintf@cfmt 0067  
                   __end_of_lcd_init 0700                               _g_LcdX 00B8  
                             _g_LcdY 007C                               ___bmul 0D97  
                   __end_of_lcd_puts 07B6                            ??___aodiv 0071  
                          ??___aomod 0071                            ??___lldiv 0079  
                             _buffer 0120                               _counts 006F  
                             _printf 0D87                               pad@buf 0028  
                             ctoa@fp 0029                               dtoa@fp 003C  
                             _strlen 0DBF                               fputc@c 0074  
                             fputs@c 0024                               fputs@i 0025  
                             fputs@s 0027                            ?_I2C_init 0070  
                          ?_I2C_read 0070                            ?_I2C_stop 0070  
                          ??_uart_tx 0071                     __end_of_vfprintf 0EA0  
                          ??_sprintf 00DC              __end_of__initialization 0025  
                 __size_of_Write_PCF 0010                  ___bmul@multiplicand 0071  
                     __pcstackCOMMON 0070                        __end_of_fputc 07FC  
                   _enable_interrupt 0D3F                        __end_of_fputs 0E4D  
                      __end_of_putch 0D30                           __end_of_mv 104E  
                        ?_Send_D7_D4 0073                           ??_I2C_init 0071  
                         ??_I2C_read 0071                           ??_I2C_stop 0071  
                  lcd_gotoxy@address 0023                              ??_fputc 0077  
                            ??_fputs 0021                              ??_putch 0073  
                         __pbssBANK0 006F                           __pbssBANK1 00A0  
                         __pbssBANK2 0120                       _countsAnterior 00B9  
                      ?_teclado_init 0070                           __pmaintext 05B9  
                     lcd_send_byte@n 0077                              ?___bmul 0071  
                         __pintentry 0004                              _I2C_ack 0D36  
                            ?_printf 0069                              ?_strlen 0071  
                  __end_of_Write_PCF 0D87                              _SP1BRGH 011C  
                            _SP1BRGL 011B                   __size_of_vfpfcnvrt 0129  
                 __size_of_port_init 0021                           _lcd_gotoxy 0EDC  
               __size_of_teclado_get 014D                              _SSP1ADD 018D  
                            _SSP1BUF 018C                           _encontrado 00B5  
                          ?_lcd_init 0070                            ?_lcd_puts 0070  
                     ??_teclado_init 0071                        ??_I2C_restart 0071  
                          _I2C_start 0D21                            _I2C_write 0D5D  
                __size_of_Send_D7_D4 0046                      __size_of___bmul 0011  
                            ___aodiv 03EA                              ___aomod 04DD  
                            ___lldiv 0FAE                            ?_vfprintf 0061  
               __size_of_serial_init 003C                              __ptext1 0D52  
                            __ptext2 0029                              __ptext3 0E4D  
                            __ptext4 0EA0                              __ptext5 0FAE  
                            __ptext6 0D87                              __ptext7 0E73  
                            __ptext8 02C1                              __ptext9 0176  
                    __size_of_printf 0010                      __size_of_strlen 0017  
                       __size_of_abs 0017                         __size_of_pad 004E  
                            _uart_tx 0D69                              _sprintf 0E4D  
                            clrloop0 0D31                           ??_lcd_init 0020  
                         ??_lcd_puts 0024                 end_of_initialization 0025  
               lcd_send_byte@address 007A                              fputc@fp 0076  
                            fputs@fp 0020                      ___lldiv@divisor 0071  
                    ___lldiv@counter 0024                           ?_I2C_start 0070  
                         ?_I2C_write 0070                    __end_of_vfpfcnvrt 03EA  
                  __end_of_port_init 0E29                  __end_of_I2C_restart 0800  
                         ??_vfprintf 0064                __end_of_lcd_send_byte 0DEE  
                            strlen@a 0074                              strlen@s 0075  
                          _PORTBbits 000D                          uart_tx@dato 0072  
                          _TRISCbits 0013                          ?_lcd_gotoxy 007B  
                    Send_D7_D4@datos 0076                    __size_of_I2C_init 001A  
                  __size_of_I2C_read 000A                      _LCD_INIT_STRING 1000  
                  __size_of_I2C_stop 0005             __end_of_enable_interrupt 0D48  
                     __end_of___bmul 0DA8                          vfpfcnvrt@ap 0050  
                        vfpfcnvrt@fp 0060                          vfpfcnvrt@ll 0056  
                        vfpfcnvrt@vp 005F                 __end_of_teclado_init 0D5D  
                     __end_of_printf 0D97                       __end_of_strlen 0DD6  
                       ??_Send_D7_D4 0074                  start_initialization 0013  
                        __end_of_abs 0DBF                          __end_of_pad 0FAE  
                        _I2C_restart 07FC                        Write_PCF@dato 0072  
                        ??_I2C_start 0071                          ??_I2C_write 0071  
                        vfprintf@fmt 0061                             ??___bmul 0072  
                 __end_of_Send_D7_D4 0F60                  __size_of_lcd_gotoxy 003E  
                      ?_EMC1001_read 0075                             ?_I2C_ack 0070  
                           ??_printf 006D                             ??_strlen 0073  
            __end_of_LCD_INIT_STRING 1004                          __pbssCOMMON 007C  
                          ___latbits 0002                        __pcstackBANK0 0020  
                      __pcstackBANK1 00DC                     ___aodiv@dividend 0028  
                          _Write_PCF 0D77                    __size_of_lcd_init 0066  
                  __size_of_lcd_puts 0056                            _dtoa$1013 003D  
                           ?___aodiv 0020                       ??_EMC1001_read 0076  
                           ?___aomod 0020                     ___aodiv@quotient 0074  
                           ?___lldiv 0071                            _high_byte 00DB  
       ??_INTERRUPT_InterruptManager 0070                    __size_of_vfprintf 002D  
                           _BAUD1CON 011F                        ??_teclado_get 0071  
                           _I2C_init 0DEE                             _I2C_read 0D48  
                           _I2C_stop 0D26                           ?_Write_PCF 0070  
                           ?_uart_tx 0070                             ?_sprintf 0069  
                     __size_of_fputc 0046                       __size_of_fputs 0024  
                     __size_of_putch 0005                             _LATAbits 0016  
                          clear_ram0 0D30  __size_of_INTERRUPT_InterruptManager 000D  
                           _PIR0bits 070C                        ??_serial_init 0029  
                           _PIR3bits 070F                __size_of_teclado_init 000B  
                           _SSP1CON1 0190                             _SSP1CON3 0192  
                           _SSP1STAT 018F                            _vfpfcnvrt 02C1  
                          _port_init 0E08                        serial_init@sx 007A  
                   __size_of_I2C_ack 0009                            lcd_init@i 007B  
                       ??_lcd_gotoxy 0020                           vfpfcnvrt@c 005E  
                __end_of_teclado_get 0176                    ?_enable_interrupt 0070  
                       _teclado_init 0D52                   ??_enable_interrupt 0071  
                         vfprintf@ap 0063                           vfprintf@fp 0066  
                 __end_of_lcd_gotoxy 0F1A                     __size_of___aodiv 00F3  
                   __size_of___aomod 00DC                     __size_of___lldiv 0052  
                         ?_vfpfcnvrt 004F                           ?_port_init 0070  
                __end_of_serial_init 0EDC                      ___aodiv@divisor 0020  
                    ___aodiv@counter 0072                           _ANSELCbits 0F4E  
                         sprintf@fmt 0069                          ??_Write_PCF 0072  
                           __ptext10 0F60                             __ptext11 0DBF  
                           __ptext20 0E08                             __ptext12 0E29  
                           __ptext21 0760                             __ptext13 0DA8  
                           __ptext30 0D97                             __ptext22 0EDC  
                           __ptext14 04DD                             __ptext31 0D5D  
                           __ptext23 069A                             __ptext15 03EA  
                           __ptext32 0D26                             __ptext24 0DD6  
                           __ptext16 0633                             __ptext33 0D21  
                           __ptext25 0F1A                             __ptext17 07B6  
                           __ptext34 07FC                             __ptext26 0D77  
                           __ptext18 0D2B                             __ptext35 0D48  
                           __ptext27 0D3F                             __ptext19 0D69  
                           __ptext36 0D36                             __ptext28 0DEE  
                           __ptext29 0700                         _SSP1CON2bits 0191  
                   __size_of_uart_tx 000E                             _lcd_init 069A  
               __end_of_EMC1001_read 0760                             _lcd_puts 0760  
                           _contador 00B4                     __size_of_sprintf 0026  
             __size_of_lcd_send_byte 0018                        __size_of_ctoa 0067  
                      __size_of_main 007A                        __size_of_dtoa 014B  
                       ?_I2C_restart 0070                             _low_byte 00DA  
                           int$flags 007E                             _vfprintf 0E73  
 __end_of_INTERRUPT_InterruptManager 0011           _INTERRUPT_InterruptManager 0004  
                          printf@fmt 0069                     ___aomod@dividend 0028  
                          putch@dato 0073                          _teclado_get 0029  
                           intlevel1 0000                            sprintf@ap 00DE  
                   ___lldiv@dividend 0075                          _serial_init 0EA0  
                           printf@ap 006E                      ___aomod@divisor 0020  
                        ??_vfpfcnvrt 0051                      ___aomod@counter 0072  
                        ??_port_init 0071                        _lcd_send_byte 0DD6  
                      __pstringtext1 101A                        __pstringtext2 104A  
                      __pstringtext3 1000                        __pstringtext4 102A  
                      __pstringtext5 1039                        __pstringtext6 1042  
                      __pstringtext7 0000                          _temperatura 00A0  
                           sprintf@f 00DF                             sprintf@s 00DD  
                         _SSP1DATPPS 0EC6                           _SSP1CLKPPS 0EC5  
                   ___lldiv@quotient 0020                         ___aodiv@sign 0073  
                       ___aomod@sign 0073  
