

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jul 19 21:57:45 2022

Microchip MPLAB XC8 C Compiler v2.32 (Pro license) build 20210201212658 Og9s 
     1                           	processor	16F18855
     2                           	pagewidth 120
     3                           	opt	plic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	psect	pa_nodes0,global,class=CODE,delta=2
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.40
    27                           ; Generated 02/12/2021 GMT
    28                           ; 
    29                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F18855 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  001C                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  008C                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  010C                     	;# 
   111  010D                     	;# 
   112  010E                     	;# 
   113  010E                     	;# 
   114  010F                     	;# 
   115  0110                     	;# 
   116  0110                     	;# 
   117  0111                     	;# 
   118  0112                     	;# 
   119  0112                     	;# 
   120  0113                     	;# 
   121  0114                     	;# 
   122  0114                     	;# 
   123  0115                     	;# 
   124  0116                     	;# 
   125  0116                     	;# 
   126  0117                     	;# 
   127  0119                     	;# 
   128  0119                     	;# 
   129  0119                     	;# 
   130  011A                     	;# 
   131  011A                     	;# 
   132  011A                     	;# 
   133  011B                     	;# 
   134  011B                     	;# 
   135  011B                     	;# 
   136  011B                     	;# 
   137  011B                     	;# 
   138  011C                     	;# 
   139  011C                     	;# 
   140  011C                     	;# 
   141  011D                     	;# 
   142  011D                     	;# 
   143  011D                     	;# 
   144  011E                     	;# 
   145  011E                     	;# 
   146  011E                     	;# 
   147  011F                     	;# 
   148  011F                     	;# 
   149  011F                     	;# 
   150  011F                     	;# 
   151  011F                     	;# 
   152  018C                     	;# 
   153  018D                     	;# 
   154  018E                     	;# 
   155  018F                     	;# 
   156  0190                     	;# 
   157  0191                     	;# 
   158  0192                     	;# 
   159  0196                     	;# 
   160  0197                     	;# 
   161  0198                     	;# 
   162  0199                     	;# 
   163  019A                     	;# 
   164  019B                     	;# 
   165  019C                     	;# 
   166  020C                     	;# 
   167  020C                     	;# 
   168  020D                     	;# 
   169  020E                     	;# 
   170  020F                     	;# 
   171  020F                     	;# 
   172  0210                     	;# 
   173  0210                     	;# 
   174  0211                     	;# 
   175  0211                     	;# 
   176  0212                     	;# 
   177  0212                     	;# 
   178  0213                     	;# 
   179  0214                     	;# 
   180  0215                     	;# 
   181  0215                     	;# 
   182  0216                     	;# 
   183  0216                     	;# 
   184  0217                     	;# 
   185  0217                     	;# 
   186  0218                     	;# 
   187  0218                     	;# 
   188  0219                     	;# 
   189  021A                     	;# 
   190  021B                     	;# 
   191  021B                     	;# 
   192  021C                     	;# 
   193  021C                     	;# 
   194  021D                     	;# 
   195  021D                     	;# 
   196  021E                     	;# 
   197  021F                     	;# 
   198  028C                     	;# 
   199  028C                     	;# 
   200  028D                     	;# 
   201  028D                     	;# 
   202  028E                     	;# 
   203  028F                     	;# 
   204  0290                     	;# 
   205  0290                     	;# 
   206  0291                     	;# 
   207  0292                     	;# 
   208  0292                     	;# 
   209  0293                     	;# 
   210  0293                     	;# 
   211  0294                     	;# 
   212  0295                     	;# 
   213  0296                     	;# 
   214  0296                     	;# 
   215  0297                     	;# 
   216  0298                     	;# 
   217  0298                     	;# 
   218  0299                     	;# 
   219  0299                     	;# 
   220  029A                     	;# 
   221  029B                     	;# 
   222  029C                     	;# 
   223  029C                     	;# 
   224  029D                     	;# 
   225  030C                     	;# 
   226  030C                     	;# 
   227  030D                     	;# 
   228  030E                     	;# 
   229  030F                     	;# 
   230  0310                     	;# 
   231  0310                     	;# 
   232  0311                     	;# 
   233  0312                     	;# 
   234  0313                     	;# 
   235  0314                     	;# 
   236  0314                     	;# 
   237  0315                     	;# 
   238  0316                     	;# 
   239  0317                     	;# 
   240  0318                     	;# 
   241  0318                     	;# 
   242  0319                     	;# 
   243  031A                     	;# 
   244  031B                     	;# 
   245  031C                     	;# 
   246  031C                     	;# 
   247  031D                     	;# 
   248  031E                     	;# 
   249  031F                     	;# 
   250  038C                     	;# 
   251  038C                     	;# 
   252  038D                     	;# 
   253  038E                     	;# 
   254  0390                     	;# 
   255  0390                     	;# 
   256  0391                     	;# 
   257  0392                     	;# 
   258  040C                     	;# 
   259  040D                     	;# 
   260  040E                     	;# 
   261  040F                     	;# 
   262  0410                     	;# 
   263  0411                     	;# 
   264  0416                     	;# 
   265  0416                     	;# 
   266  0417                     	;# 
   267  0418                     	;# 
   268  0418                     	;# 
   269  0419                     	;# 
   270  041A                     	;# 
   271  041A                     	;# 
   272  041B                     	;# 
   273  041C                     	;# 
   274  041C                     	;# 
   275  041D                     	;# 
   276  041E                     	;# 
   277  041F                     	;# 
   278  048C                     	;# 
   279  048C                     	;# 
   280  048D                     	;# 
   281  048E                     	;# 
   282  048F                     	;# 
   283  048F                     	;# 
   284  0490                     	;# 
   285  0491                     	;# 
   286  0492                     	;# 
   287  0492                     	;# 
   288  0493                     	;# 
   289  0494                     	;# 
   290  0495                     	;# 
   291  0495                     	;# 
   292  0496                     	;# 
   293  0497                     	;# 
   294  0498                     	;# 
   295  0499                     	;# 
   296  049A                     	;# 
   297  049B                     	;# 
   298  049C                     	;# 
   299  049D                     	;# 
   300  050C                     	;# 
   301  050C                     	;# 
   302  050D                     	;# 
   303  050E                     	;# 
   304  050F                     	;# 
   305  050F                     	;# 
   306  0510                     	;# 
   307  0511                     	;# 
   308  0512                     	;# 
   309  0512                     	;# 
   310  0513                     	;# 
   311  0514                     	;# 
   312  0515                     	;# 
   313  0515                     	;# 
   314  0516                     	;# 
   315  0517                     	;# 
   316  0518                     	;# 
   317  0519                     	;# 
   318  051A                     	;# 
   319  051B                     	;# 
   320  051C                     	;# 
   321  051D                     	;# 
   322  058C                     	;# 
   323  058C                     	;# 
   324  058D                     	;# 
   325  058E                     	;# 
   326  058F                     	;# 
   327  058F                     	;# 
   328  0590                     	;# 
   329  0591                     	;# 
   330  0592                     	;# 
   331  0593                     	;# 
   332  060C                     	;# 
   333  060D                     	;# 
   334  060E                     	;# 
   335  060F                     	;# 
   336  0610                     	;# 
   337  0611                     	;# 
   338  0612                     	;# 
   339  0613                     	;# 
   340  0614                     	;# 
   341  0616                     	;# 
   342  0617                     	;# 
   343  0618                     	;# 
   344  0619                     	;# 
   345  061A                     	;# 
   346  061B                     	;# 
   347  061C                     	;# 
   348  061D                     	;# 
   349  061E                     	;# 
   350  068C                     	;# 
   351  068D                     	;# 
   352  068E                     	;# 
   353  068F                     	;# 
   354  0690                     	;# 
   355  0691                     	;# 
   356  0692                     	;# 
   357  0693                     	;# 
   358  0694                     	;# 
   359  070C                     	;# 
   360  070D                     	;# 
   361  070E                     	;# 
   362  070F                     	;# 
   363  0710                     	;# 
   364  0711                     	;# 
   365  0712                     	;# 
   366  0713                     	;# 
   367  0714                     	;# 
   368  0716                     	;# 
   369  0717                     	;# 
   370  0718                     	;# 
   371  0719                     	;# 
   372  071A                     	;# 
   373  071B                     	;# 
   374  071C                     	;# 
   375  071D                     	;# 
   376  071E                     	;# 
   377  0796                     	;# 
   378  0797                     	;# 
   379  0798                     	;# 
   380  0799                     	;# 
   381  079A                     	;# 
   382  079B                     	;# 
   383  080C                     	;# 
   384  080D                     	;# 
   385  080E                     	;# 
   386  080F                     	;# 
   387  0810                     	;# 
   388  0811                     	;# 
   389  0812                     	;# 
   390  0813                     	;# 
   391  0814                     	;# 
   392  081A                     	;# 
   393  081B                     	;# 
   394  081C                     	;# 
   395  081D                     	;# 
   396  081E                     	;# 
   397  081F                     	;# 
   398  088C                     	;# 
   399  088D                     	;# 
   400  088E                     	;# 
   401  088F                     	;# 
   402  0890                     	;# 
   403  0891                     	;# 
   404  0892                     	;# 
   405  0893                     	;# 
   406  0895                     	;# 
   407  0896                     	;# 
   408  0897                     	;# 
   409  0898                     	;# 
   410  0899                     	;# 
   411  089A                     	;# 
   412  089B                     	;# 
   413  090C                     	;# 
   414  090E                     	;# 
   415  090F                     	;# 
   416  091F                     	;# 
   417  091F                     	;# 
   418  098F                     	;# 
   419  098F                     	;# 
   420  0990                     	;# 
   421  0991                     	;# 
   422  0992                     	;# 
   423  0993                     	;# 
   424  0994                     	;# 
   425  0995                     	;# 
   426  0996                     	;# 
   427  0997                     	;# 
   428  0E0F                     	;# 
   429  0E10                     	;# 
   430  0E11                     	;# 
   431  0E12                     	;# 
   432  0E13                     	;# 
   433  0E14                     	;# 
   434  0E15                     	;# 
   435  0E16                     	;# 
   436  0E17                     	;# 
   437  0E18                     	;# 
   438  0E19                     	;# 
   439  0E1A                     	;# 
   440  0E1B                     	;# 
   441  0E1C                     	;# 
   442  0E1D                     	;# 
   443  0E1E                     	;# 
   444  0E1F                     	;# 
   445  0E20                     	;# 
   446  0E21                     	;# 
   447  0E22                     	;# 
   448  0E23                     	;# 
   449  0E24                     	;# 
   450  0E25                     	;# 
   451  0E26                     	;# 
   452  0E27                     	;# 
   453  0E28                     	;# 
   454  0E29                     	;# 
   455  0E2A                     	;# 
   456  0E2B                     	;# 
   457  0E2C                     	;# 
   458  0E2D                     	;# 
   459  0E2E                     	;# 
   460  0E2F                     	;# 
   461  0E30                     	;# 
   462  0E31                     	;# 
   463  0E32                     	;# 
   464  0E33                     	;# 
   465  0E34                     	;# 
   466  0E35                     	;# 
   467  0E36                     	;# 
   468  0E37                     	;# 
   469  0E8F                     	;# 
   470  0E90                     	;# 
   471  0E91                     	;# 
   472  0E92                     	;# 
   473  0E93                     	;# 
   474  0E94                     	;# 
   475  0E95                     	;# 
   476  0E96                     	;# 
   477  0E97                     	;# 
   478  0E9C                     	;# 
   479  0E9D                     	;# 
   480  0E9E                     	;# 
   481  0EA1                     	;# 
   482  0EA2                     	;# 
   483  0EA3                     	;# 
   484  0EA4                     	;# 
   485  0EA5                     	;# 
   486  0EA9                     	;# 
   487  0EAA                     	;# 
   488  0EAB                     	;# 
   489  0EAC                     	;# 
   490  0EB1                     	;# 
   491  0EB2                     	;# 
   492  0EB3                     	;# 
   493  0EB8                     	;# 
   494  0EB9                     	;# 
   495  0EBA                     	;# 
   496  0EBB                     	;# 
   497  0EBC                     	;# 
   498  0EBD                     	;# 
   499  0EBE                     	;# 
   500  0EC3                     	;# 
   501  0EC5                     	;# 
   502  0EC6                     	;# 
   503  0EC7                     	;# 
   504  0EC8                     	;# 
   505  0EC9                     	;# 
   506  0ECA                     	;# 
   507  0ECB                     	;# 
   508  0ECC                     	;# 
   509  0F10                     	;# 
   510  0F11                     	;# 
   511  0F12                     	;# 
   512  0F13                     	;# 
   513  0F14                     	;# 
   514  0F15                     	;# 
   515  0F16                     	;# 
   516  0F17                     	;# 
   517  0F18                     	;# 
   518  0F19                     	;# 
   519  0F1A                     	;# 
   520  0F1B                     	;# 
   521  0F1C                     	;# 
   522  0F1D                     	;# 
   523  0F1E                     	;# 
   524  0F1F                     	;# 
   525  0F20                     	;# 
   526  0F21                     	;# 
   527  0F22                     	;# 
   528  0F23                     	;# 
   529  0F24                     	;# 
   530  0F25                     	;# 
   531  0F26                     	;# 
   532  0F27                     	;# 
   533  0F38                     	;# 
   534  0F39                     	;# 
   535  0F3A                     	;# 
   536  0F3B                     	;# 
   537  0F3C                     	;# 
   538  0F3D                     	;# 
   539  0F3E                     	;# 
   540  0F3F                     	;# 
   541  0F40                     	;# 
   542  0F41                     	;# 
   543  0F43                     	;# 
   544  0F44                     	;# 
   545  0F45                     	;# 
   546  0F46                     	;# 
   547  0F47                     	;# 
   548  0F48                     	;# 
   549  0F49                     	;# 
   550  0F4A                     	;# 
   551  0F4B                     	;# 
   552  0F4C                     	;# 
   553  0F4E                     	;# 
   554  0F4F                     	;# 
   555  0F50                     	;# 
   556  0F51                     	;# 
   557  0F52                     	;# 
   558  0F53                     	;# 
   559  0F54                     	;# 
   560  0F55                     	;# 
   561  0F56                     	;# 
   562  0F57                     	;# 
   563  0F65                     	;# 
   564  0F68                     	;# 
   565  0F69                     	;# 
   566  0F6A                     	;# 
   567  0F6B                     	;# 
   568  0FE4                     	;# 
   569  0FE5                     	;# 
   570  0FE6                     	;# 
   571  0FE7                     	;# 
   572  0FE8                     	;# 
   573  0FE9                     	;# 
   574  0FEA                     	;# 
   575  0FEB                     	;# 
   576  0FED                     	;# 
   577  0FEE                     	;# 
   578  0FEF                     	;# 
   579  0000                     	;# 
   580  0001                     	;# 
   581  0002                     	;# 
   582  0003                     	;# 
   583  0004                     	;# 
   584  0005                     	;# 
   585  0006                     	;# 
   586  0007                     	;# 
   587  0008                     	;# 
   588  0009                     	;# 
   589  000A                     	;# 
   590  000B                     	;# 
   591  000C                     	;# 
   592  000D                     	;# 
   593  000E                     	;# 
   594  0010                     	;# 
   595  0011                     	;# 
   596  0012                     	;# 
   597  0013                     	;# 
   598  0016                     	;# 
   599  0017                     	;# 
   600  0018                     	;# 
   601  001C                     	;# 
   602  001C                     	;# 
   603  001D                     	;# 
   604  001D                     	;# 
   605  001E                     	;# 
   606  001F                     	;# 
   607  008C                     	;# 
   608  008C                     	;# 
   609  008D                     	;# 
   610  008E                     	;# 
   611  008E                     	;# 
   612  008F                     	;# 
   613  0090                     	;# 
   614  0090                     	;# 
   615  0091                     	;# 
   616  0093                     	;# 
   617  0094                     	;# 
   618  0095                     	;# 
   619  0096                     	;# 
   620  0097                     	;# 
   621  0098                     	;# 
   622  0099                     	;# 
   623  009A                     	;# 
   624  009B                     	;# 
   625  009C                     	;# 
   626  009D                     	;# 
   627  009E                     	;# 
   628  010C                     	;# 
   629  010D                     	;# 
   630  010E                     	;# 
   631  010E                     	;# 
   632  010F                     	;# 
   633  0110                     	;# 
   634  0110                     	;# 
   635  0111                     	;# 
   636  0112                     	;# 
   637  0112                     	;# 
   638  0113                     	;# 
   639  0114                     	;# 
   640  0114                     	;# 
   641  0115                     	;# 
   642  0116                     	;# 
   643  0116                     	;# 
   644  0117                     	;# 
   645  0119                     	;# 
   646  0119                     	;# 
   647  0119                     	;# 
   648  011A                     	;# 
   649  011A                     	;# 
   650  011A                     	;# 
   651  011B                     	;# 
   652  011B                     	;# 
   653  011B                     	;# 
   654  011B                     	;# 
   655  011B                     	;# 
   656  011C                     	;# 
   657  011C                     	;# 
   658  011C                     	;# 
   659  011D                     	;# 
   660  011D                     	;# 
   661  011D                     	;# 
   662  011E                     	;# 
   663  011E                     	;# 
   664  011E                     	;# 
   665  011F                     	;# 
   666  011F                     	;# 
   667  011F                     	;# 
   668  011F                     	;# 
   669  011F                     	;# 
   670  018C                     	;# 
   671  018D                     	;# 
   672  018E                     	;# 
   673  018F                     	;# 
   674  0190                     	;# 
   675  0191                     	;# 
   676  0192                     	;# 
   677  0196                     	;# 
   678  0197                     	;# 
   679  0198                     	;# 
   680  0199                     	;# 
   681  019A                     	;# 
   682  019B                     	;# 
   683  019C                     	;# 
   684  020C                     	;# 
   685  020C                     	;# 
   686  020D                     	;# 
   687  020E                     	;# 
   688  020F                     	;# 
   689  020F                     	;# 
   690  0210                     	;# 
   691  0210                     	;# 
   692  0211                     	;# 
   693  0211                     	;# 
   694  0212                     	;# 
   695  0212                     	;# 
   696  0213                     	;# 
   697  0214                     	;# 
   698  0215                     	;# 
   699  0215                     	;# 
   700  0216                     	;# 
   701  0216                     	;# 
   702  0217                     	;# 
   703  0217                     	;# 
   704  0218                     	;# 
   705  0218                     	;# 
   706  0219                     	;# 
   707  021A                     	;# 
   708  021B                     	;# 
   709  021B                     	;# 
   710  021C                     	;# 
   711  021C                     	;# 
   712  021D                     	;# 
   713  021D                     	;# 
   714  021E                     	;# 
   715  021F                     	;# 
   716  028C                     	;# 
   717  028C                     	;# 
   718  028D                     	;# 
   719  028D                     	;# 
   720  028E                     	;# 
   721  028F                     	;# 
   722  0290                     	;# 
   723  0290                     	;# 
   724  0291                     	;# 
   725  0292                     	;# 
   726  0292                     	;# 
   727  0293                     	;# 
   728  0293                     	;# 
   729  0294                     	;# 
   730  0295                     	;# 
   731  0296                     	;# 
   732  0296                     	;# 
   733  0297                     	;# 
   734  0298                     	;# 
   735  0298                     	;# 
   736  0299                     	;# 
   737  0299                     	;# 
   738  029A                     	;# 
   739  029B                     	;# 
   740  029C                     	;# 
   741  029C                     	;# 
   742  029D                     	;# 
   743  030C                     	;# 
   744  030C                     	;# 
   745  030D                     	;# 
   746  030E                     	;# 
   747  030F                     	;# 
   748  0310                     	;# 
   749  0310                     	;# 
   750  0311                     	;# 
   751  0312                     	;# 
   752  0313                     	;# 
   753  0314                     	;# 
   754  0314                     	;# 
   755  0315                     	;# 
   756  0316                     	;# 
   757  0317                     	;# 
   758  0318                     	;# 
   759  0318                     	;# 
   760  0319                     	;# 
   761  031A                     	;# 
   762  031B                     	;# 
   763  031C                     	;# 
   764  031C                     	;# 
   765  031D                     	;# 
   766  031E                     	;# 
   767  031F                     	;# 
   768  038C                     	;# 
   769  038C                     	;# 
   770  038D                     	;# 
   771  038E                     	;# 
   772  0390                     	;# 
   773  0390                     	;# 
   774  0391                     	;# 
   775  0392                     	;# 
   776  040C                     	;# 
   777  040D                     	;# 
   778  040E                     	;# 
   779  040F                     	;# 
   780  0410                     	;# 
   781  0411                     	;# 
   782  0416                     	;# 
   783  0416                     	;# 
   784  0417                     	;# 
   785  0418                     	;# 
   786  0418                     	;# 
   787  0419                     	;# 
   788  041A                     	;# 
   789  041A                     	;# 
   790  041B                     	;# 
   791  041C                     	;# 
   792  041C                     	;# 
   793  041D                     	;# 
   794  041E                     	;# 
   795  041F                     	;# 
   796  048C                     	;# 
   797  048C                     	;# 
   798  048D                     	;# 
   799  048E                     	;# 
   800  048F                     	;# 
   801  048F                     	;# 
   802  0490                     	;# 
   803  0491                     	;# 
   804  0492                     	;# 
   805  0492                     	;# 
   806  0493                     	;# 
   807  0494                     	;# 
   808  0495                     	;# 
   809  0495                     	;# 
   810  0496                     	;# 
   811  0497                     	;# 
   812  0498                     	;# 
   813  0499                     	;# 
   814  049A                     	;# 
   815  049B                     	;# 
   816  049C                     	;# 
   817  049D                     	;# 
   818  050C                     	;# 
   819  050C                     	;# 
   820  050D                     	;# 
   821  050E                     	;# 
   822  050F                     	;# 
   823  050F                     	;# 
   824  0510                     	;# 
   825  0511                     	;# 
   826  0512                     	;# 
   827  0512                     	;# 
   828  0513                     	;# 
   829  0514                     	;# 
   830  0515                     	;# 
   831  0515                     	;# 
   832  0516                     	;# 
   833  0517                     	;# 
   834  0518                     	;# 
   835  0519                     	;# 
   836  051A                     	;# 
   837  051B                     	;# 
   838  051C                     	;# 
   839  051D                     	;# 
   840  058C                     	;# 
   841  058C                     	;# 
   842  058D                     	;# 
   843  058E                     	;# 
   844  058F                     	;# 
   845  058F                     	;# 
   846  0590                     	;# 
   847  0591                     	;# 
   848  0592                     	;# 
   849  0593                     	;# 
   850  060C                     	;# 
   851  060D                     	;# 
   852  060E                     	;# 
   853  060F                     	;# 
   854  0610                     	;# 
   855  0611                     	;# 
   856  0612                     	;# 
   857  0613                     	;# 
   858  0614                     	;# 
   859  0616                     	;# 
   860  0617                     	;# 
   861  0618                     	;# 
   862  0619                     	;# 
   863  061A                     	;# 
   864  061B                     	;# 
   865  061C                     	;# 
   866  061D                     	;# 
   867  061E                     	;# 
   868  068C                     	;# 
   869  068D                     	;# 
   870  068E                     	;# 
   871  068F                     	;# 
   872  0690                     	;# 
   873  0691                     	;# 
   874  0692                     	;# 
   875  0693                     	;# 
   876  0694                     	;# 
   877  070C                     	;# 
   878  070D                     	;# 
   879  070E                     	;# 
   880  070F                     	;# 
   881  0710                     	;# 
   882  0711                     	;# 
   883  0712                     	;# 
   884  0713                     	;# 
   885  0714                     	;# 
   886  0716                     	;# 
   887  0717                     	;# 
   888  0718                     	;# 
   889  0719                     	;# 
   890  071A                     	;# 
   891  071B                     	;# 
   892  071C                     	;# 
   893  071D                     	;# 
   894  071E                     	;# 
   895  0796                     	;# 
   896  0797                     	;# 
   897  0798                     	;# 
   898  0799                     	;# 
   899  079A                     	;# 
   900  079B                     	;# 
   901  080C                     	;# 
   902  080D                     	;# 
   903  080E                     	;# 
   904  080F                     	;# 
   905  0810                     	;# 
   906  0811                     	;# 
   907  0812                     	;# 
   908  0813                     	;# 
   909  0814                     	;# 
   910  081A                     	;# 
   911  081B                     	;# 
   912  081C                     	;# 
   913  081D                     	;# 
   914  081E                     	;# 
   915  081F                     	;# 
   916  088C                     	;# 
   917  088D                     	;# 
   918  088E                     	;# 
   919  088F                     	;# 
   920  0890                     	;# 
   921  0891                     	;# 
   922  0892                     	;# 
   923  0893                     	;# 
   924  0895                     	;# 
   925  0896                     	;# 
   926  0897                     	;# 
   927  0898                     	;# 
   928  0899                     	;# 
   929  089A                     	;# 
   930  089B                     	;# 
   931  090C                     	;# 
   932  090E                     	;# 
   933  090F                     	;# 
   934  091F                     	;# 
   935  091F                     	;# 
   936  098F                     	;# 
   937  098F                     	;# 
   938  0990                     	;# 
   939  0991                     	;# 
   940  0992                     	;# 
   941  0993                     	;# 
   942  0994                     	;# 
   943  0995                     	;# 
   944  0996                     	;# 
   945  0997                     	;# 
   946  0E0F                     	;# 
   947  0E10                     	;# 
   948  0E11                     	;# 
   949  0E12                     	;# 
   950  0E13                     	;# 
   951  0E14                     	;# 
   952  0E15                     	;# 
   953  0E16                     	;# 
   954  0E17                     	;# 
   955  0E18                     	;# 
   956  0E19                     	;# 
   957  0E1A                     	;# 
   958  0E1B                     	;# 
   959  0E1C                     	;# 
   960  0E1D                     	;# 
   961  0E1E                     	;# 
   962  0E1F                     	;# 
   963  0E20                     	;# 
   964  0E21                     	;# 
   965  0E22                     	;# 
   966  0E23                     	;# 
   967  0E24                     	;# 
   968  0E25                     	;# 
   969  0E26                     	;# 
   970  0E27                     	;# 
   971  0E28                     	;# 
   972  0E29                     	;# 
   973  0E2A                     	;# 
   974  0E2B                     	;# 
   975  0E2C                     	;# 
   976  0E2D                     	;# 
   977  0E2E                     	;# 
   978  0E2F                     	;# 
   979  0E30                     	;# 
   980  0E31                     	;# 
   981  0E32                     	;# 
   982  0E33                     	;# 
   983  0E34                     	;# 
   984  0E35                     	;# 
   985  0E36                     	;# 
   986  0E37                     	;# 
   987  0E8F                     	;# 
   988  0E90                     	;# 
   989  0E91                     	;# 
   990  0E92                     	;# 
   991  0E93                     	;# 
   992  0E94                     	;# 
   993  0E95                     	;# 
   994  0E96                     	;# 
   995  0E97                     	;# 
   996  0E9C                     	;# 
   997  0E9D                     	;# 
   998  0E9E                     	;# 
   999  0EA1                     	;# 
  1000  0EA2                     	;# 
  1001  0EA3                     	;# 
  1002  0EA4                     	;# 
  1003  0EA5                     	;# 
  1004  0EA9                     	;# 
  1005  0EAA                     	;# 
  1006  0EAB                     	;# 
  1007  0EAC                     	;# 
  1008  0EB1                     	;# 
  1009  0EB2                     	;# 
  1010  0EB3                     	;# 
  1011  0EB8                     	;# 
  1012  0EB9                     	;# 
  1013  0EBA                     	;# 
  1014  0EBB                     	;# 
  1015  0EBC                     	;# 
  1016  0EBD                     	;# 
  1017  0EBE                     	;# 
  1018  0EC3                     	;# 
  1019  0EC5                     	;# 
  1020  0EC6                     	;# 
  1021  0EC7                     	;# 
  1022  0EC8                     	;# 
  1023  0EC9                     	;# 
  1024  0ECA                     	;# 
  1025  0ECB                     	;# 
  1026  0ECC                     	;# 
  1027  0F10                     	;# 
  1028  0F11                     	;# 
  1029  0F12                     	;# 
  1030  0F13                     	;# 
  1031  0F14                     	;# 
  1032  0F15                     	;# 
  1033  0F16                     	;# 
  1034  0F17                     	;# 
  1035  0F18                     	;# 
  1036  0F19                     	;# 
  1037  0F1A                     	;# 
  1038  0F1B                     	;# 
  1039  0F1C                     	;# 
  1040  0F1D                     	;# 
  1041  0F1E                     	;# 
  1042  0F1F                     	;# 
  1043  0F20                     	;# 
  1044  0F21                     	;# 
  1045  0F22                     	;# 
  1046  0F23                     	;# 
  1047  0F24                     	;# 
  1048  0F25                     	;# 
  1049  0F26                     	;# 
  1050  0F27                     	;# 
  1051  0F38                     	;# 
  1052  0F39                     	;# 
  1053  0F3A                     	;# 
  1054  0F3B                     	;# 
  1055  0F3C                     	;# 
  1056  0F3D                     	;# 
  1057  0F3E                     	;# 
  1058  0F3F                     	;# 
  1059  0F40                     	;# 
  1060  0F41                     	;# 
  1061  0F43                     	;# 
  1062  0F44                     	;# 
  1063  0F45                     	;# 
  1064  0F46                     	;# 
  1065  0F47                     	;# 
  1066  0F48                     	;# 
  1067  0F49                     	;# 
  1068  0F4A                     	;# 
  1069  0F4B                     	;# 
  1070  0F4C                     	;# 
  1071  0F4E                     	;# 
  1072  0F4F                     	;# 
  1073  0F50                     	;# 
  1074  0F51                     	;# 
  1075  0F52                     	;# 
  1076  0F53                     	;# 
  1077  0F54                     	;# 
  1078  0F55                     	;# 
  1079  0F56                     	;# 
  1080  0F57                     	;# 
  1081  0F65                     	;# 
  1082  0F68                     	;# 
  1083  0F69                     	;# 
  1084  0F6A                     	;# 
  1085  0F6B                     	;# 
  1086  0FE4                     	;# 
  1087  0FE5                     	;# 
  1088  0FE6                     	;# 
  1089  0FE7                     	;# 
  1090  0FE8                     	;# 
  1091  0FE9                     	;# 
  1092  0FEA                     	;# 
  1093  0FEB                     	;# 
  1094  0FED                     	;# 
  1095  0FEE                     	;# 
  1096  0FEF                     	;# 
  1097  0000                     	;# 
  1098  0001                     	;# 
  1099  0002                     	;# 
  1100  0003                     	;# 
  1101  0004                     	;# 
  1102  0005                     	;# 
  1103  0006                     	;# 
  1104  0007                     	;# 
  1105  0008                     	;# 
  1106  0009                     	;# 
  1107  000A                     	;# 
  1108  000B                     	;# 
  1109  000C                     	;# 
  1110  000D                     	;# 
  1111  000E                     	;# 
  1112  0010                     	;# 
  1113  0011                     	;# 
  1114  0012                     	;# 
  1115  0013                     	;# 
  1116  0016                     	;# 
  1117  0017                     	;# 
  1118  0018                     	;# 
  1119  001C                     	;# 
  1120  001C                     	;# 
  1121  001D                     	;# 
  1122  001D                     	;# 
  1123  001E                     	;# 
  1124  001F                     	;# 
  1125  008C                     	;# 
  1126  008C                     	;# 
  1127  008D                     	;# 
  1128  008E                     	;# 
  1129  008E                     	;# 
  1130  008F                     	;# 
  1131  0090                     	;# 
  1132  0090                     	;# 
  1133  0091                     	;# 
  1134  0093                     	;# 
  1135  0094                     	;# 
  1136  0095                     	;# 
  1137  0096                     	;# 
  1138  0097                     	;# 
  1139  0098                     	;# 
  1140  0099                     	;# 
  1141  009A                     	;# 
  1142  009B                     	;# 
  1143  009C                     	;# 
  1144  009D                     	;# 
  1145  009E                     	;# 
  1146  010C                     	;# 
  1147  010D                     	;# 
  1148  010E                     	;# 
  1149  010E                     	;# 
  1150  010F                     	;# 
  1151  0110                     	;# 
  1152  0110                     	;# 
  1153  0111                     	;# 
  1154  0112                     	;# 
  1155  0112                     	;# 
  1156  0113                     	;# 
  1157  0114                     	;# 
  1158  0114                     	;# 
  1159  0115                     	;# 
  1160  0116                     	;# 
  1161  0116                     	;# 
  1162  0117                     	;# 
  1163  0119                     	;# 
  1164  0119                     	;# 
  1165  0119                     	;# 
  1166  011A                     	;# 
  1167  011A                     	;# 
  1168  011A                     	;# 
  1169  011B                     	;# 
  1170  011B                     	;# 
  1171  011B                     	;# 
  1172  011B                     	;# 
  1173  011B                     	;# 
  1174  011C                     	;# 
  1175  011C                     	;# 
  1176  011C                     	;# 
  1177  011D                     	;# 
  1178  011D                     	;# 
  1179  011D                     	;# 
  1180  011E                     	;# 
  1181  011E                     	;# 
  1182  011E                     	;# 
  1183  011F                     	;# 
  1184  011F                     	;# 
  1185  011F                     	;# 
  1186  011F                     	;# 
  1187  011F                     	;# 
  1188  018C                     	;# 
  1189  018D                     	;# 
  1190  018E                     	;# 
  1191  018F                     	;# 
  1192  0190                     	;# 
  1193  0191                     	;# 
  1194  0192                     	;# 
  1195  0196                     	;# 
  1196  0197                     	;# 
  1197  0198                     	;# 
  1198  0199                     	;# 
  1199  019A                     	;# 
  1200  019B                     	;# 
  1201  019C                     	;# 
  1202  020C                     	;# 
  1203  020C                     	;# 
  1204  020D                     	;# 
  1205  020E                     	;# 
  1206  020F                     	;# 
  1207  020F                     	;# 
  1208  0210                     	;# 
  1209  0210                     	;# 
  1210  0211                     	;# 
  1211  0211                     	;# 
  1212  0212                     	;# 
  1213  0212                     	;# 
  1214  0213                     	;# 
  1215  0214                     	;# 
  1216  0215                     	;# 
  1217  0215                     	;# 
  1218  0216                     	;# 
  1219  0216                     	;# 
  1220  0217                     	;# 
  1221  0217                     	;# 
  1222  0218                     	;# 
  1223  0218                     	;# 
  1224  0219                     	;# 
  1225  021A                     	;# 
  1226  021B                     	;# 
  1227  021B                     	;# 
  1228  021C                     	;# 
  1229  021C                     	;# 
  1230  021D                     	;# 
  1231  021D                     	;# 
  1232  021E                     	;# 
  1233  021F                     	;# 
  1234  028C                     	;# 
  1235  028C                     	;# 
  1236  028D                     	;# 
  1237  028D                     	;# 
  1238  028E                     	;# 
  1239  028F                     	;# 
  1240  0290                     	;# 
  1241  0290                     	;# 
  1242  0291                     	;# 
  1243  0292                     	;# 
  1244  0292                     	;# 
  1245  0293                     	;# 
  1246  0293                     	;# 
  1247  0294                     	;# 
  1248  0295                     	;# 
  1249  0296                     	;# 
  1250  0296                     	;# 
  1251  0297                     	;# 
  1252  0298                     	;# 
  1253  0298                     	;# 
  1254  0299                     	;# 
  1255  0299                     	;# 
  1256  029A                     	;# 
  1257  029B                     	;# 
  1258  029C                     	;# 
  1259  029C                     	;# 
  1260  029D                     	;# 
  1261  030C                     	;# 
  1262  030C                     	;# 
  1263  030D                     	;# 
  1264  030E                     	;# 
  1265  030F                     	;# 
  1266  0310                     	;# 
  1267  0310                     	;# 
  1268  0311                     	;# 
  1269  0312                     	;# 
  1270  0313                     	;# 
  1271  0314                     	;# 
  1272  0314                     	;# 
  1273  0315                     	;# 
  1274  0316                     	;# 
  1275  0317                     	;# 
  1276  0318                     	;# 
  1277  0318                     	;# 
  1278  0319                     	;# 
  1279  031A                     	;# 
  1280  031B                     	;# 
  1281  031C                     	;# 
  1282  031C                     	;# 
  1283  031D                     	;# 
  1284  031E                     	;# 
  1285  031F                     	;# 
  1286  038C                     	;# 
  1287  038C                     	;# 
  1288  038D                     	;# 
  1289  038E                     	;# 
  1290  0390                     	;# 
  1291  0390                     	;# 
  1292  0391                     	;# 
  1293  0392                     	;# 
  1294  040C                     	;# 
  1295  040D                     	;# 
  1296  040E                     	;# 
  1297  040F                     	;# 
  1298  0410                     	;# 
  1299  0411                     	;# 
  1300  0416                     	;# 
  1301  0416                     	;# 
  1302  0417                     	;# 
  1303  0418                     	;# 
  1304  0418                     	;# 
  1305  0419                     	;# 
  1306  041A                     	;# 
  1307  041A                     	;# 
  1308  041B                     	;# 
  1309  041C                     	;# 
  1310  041C                     	;# 
  1311  041D                     	;# 
  1312  041E                     	;# 
  1313  041F                     	;# 
  1314  048C                     	;# 
  1315  048C                     	;# 
  1316  048D                     	;# 
  1317  048E                     	;# 
  1318  048F                     	;# 
  1319  048F                     	;# 
  1320  0490                     	;# 
  1321  0491                     	;# 
  1322  0492                     	;# 
  1323  0492                     	;# 
  1324  0493                     	;# 
  1325  0494                     	;# 
  1326  0495                     	;# 
  1327  0495                     	;# 
  1328  0496                     	;# 
  1329  0497                     	;# 
  1330  0498                     	;# 
  1331  0499                     	;# 
  1332  049A                     	;# 
  1333  049B                     	;# 
  1334  049C                     	;# 
  1335  049D                     	;# 
  1336  050C                     	;# 
  1337  050C                     	;# 
  1338  050D                     	;# 
  1339  050E                     	;# 
  1340  050F                     	;# 
  1341  050F                     	;# 
  1342  0510                     	;# 
  1343  0511                     	;# 
  1344  0512                     	;# 
  1345  0512                     	;# 
  1346  0513                     	;# 
  1347  0514                     	;# 
  1348  0515                     	;# 
  1349  0515                     	;# 
  1350  0516                     	;# 
  1351  0517                     	;# 
  1352  0518                     	;# 
  1353  0519                     	;# 
  1354  051A                     	;# 
  1355  051B                     	;# 
  1356  051C                     	;# 
  1357  051D                     	;# 
  1358  058C                     	;# 
  1359  058C                     	;# 
  1360  058D                     	;# 
  1361  058E                     	;# 
  1362  058F                     	;# 
  1363  058F                     	;# 
  1364  0590                     	;# 
  1365  0591                     	;# 
  1366  0592                     	;# 
  1367  0593                     	;# 
  1368  060C                     	;# 
  1369  060D                     	;# 
  1370  060E                     	;# 
  1371  060F                     	;# 
  1372  0610                     	;# 
  1373  0611                     	;# 
  1374  0612                     	;# 
  1375  0613                     	;# 
  1376  0614                     	;# 
  1377  0616                     	;# 
  1378  0617                     	;# 
  1379  0618                     	;# 
  1380  0619                     	;# 
  1381  061A                     	;# 
  1382  061B                     	;# 
  1383  061C                     	;# 
  1384  061D                     	;# 
  1385  061E                     	;# 
  1386  068C                     	;# 
  1387  068D                     	;# 
  1388  068E                     	;# 
  1389  068F                     	;# 
  1390  0690                     	;# 
  1391  0691                     	;# 
  1392  0692                     	;# 
  1393  0693                     	;# 
  1394  0694                     	;# 
  1395  070C                     	;# 
  1396  070D                     	;# 
  1397  070E                     	;# 
  1398  070F                     	;# 
  1399  0710                     	;# 
  1400  0711                     	;# 
  1401  0712                     	;# 
  1402  0713                     	;# 
  1403  0714                     	;# 
  1404  0716                     	;# 
  1405  0717                     	;# 
  1406  0718                     	;# 
  1407  0719                     	;# 
  1408  071A                     	;# 
  1409  071B                     	;# 
  1410  071C                     	;# 
  1411  071D                     	;# 
  1412  071E                     	;# 
  1413  0796                     	;# 
  1414  0797                     	;# 
  1415  0798                     	;# 
  1416  0799                     	;# 
  1417  079A                     	;# 
  1418  079B                     	;# 
  1419  080C                     	;# 
  1420  080D                     	;# 
  1421  080E                     	;# 
  1422  080F                     	;# 
  1423  0810                     	;# 
  1424  0811                     	;# 
  1425  0812                     	;# 
  1426  0813                     	;# 
  1427  0814                     	;# 
  1428  081A                     	;# 
  1429  081B                     	;# 
  1430  081C                     	;# 
  1431  081D                     	;# 
  1432  081E                     	;# 
  1433  081F                     	;# 
  1434  088C                     	;# 
  1435  088D                     	;# 
  1436  088E                     	;# 
  1437  088F                     	;# 
  1438  0890                     	;# 
  1439  0891                     	;# 
  1440  0892                     	;# 
  1441  0893                     	;# 
  1442  0895                     	;# 
  1443  0896                     	;# 
  1444  0897                     	;# 
  1445  0898                     	;# 
  1446  0899                     	;# 
  1447  089A                     	;# 
  1448  089B                     	;# 
  1449  090C                     	;# 
  1450  090E                     	;# 
  1451  090F                     	;# 
  1452  091F                     	;# 
  1453  091F                     	;# 
  1454  098F                     	;# 
  1455  098F                     	;# 
  1456  0990                     	;# 
  1457  0991                     	;# 
  1458  0992                     	;# 
  1459  0993                     	;# 
  1460  0994                     	;# 
  1461  0995                     	;# 
  1462  0996                     	;# 
  1463  0997                     	;# 
  1464  0E0F                     	;# 
  1465  0E10                     	;# 
  1466  0E11                     	;# 
  1467  0E12                     	;# 
  1468  0E13                     	;# 
  1469  0E14                     	;# 
  1470  0E15                     	;# 
  1471  0E16                     	;# 
  1472  0E17                     	;# 
  1473  0E18                     	;# 
  1474  0E19                     	;# 
  1475  0E1A                     	;# 
  1476  0E1B                     	;# 
  1477  0E1C                     	;# 
  1478  0E1D                     	;# 
  1479  0E1E                     	;# 
  1480  0E1F                     	;# 
  1481  0E20                     	;# 
  1482  0E21                     	;# 
  1483  0E22                     	;# 
  1484  0E23                     	;# 
  1485  0E24                     	;# 
  1486  0E25                     	;# 
  1487  0E26                     	;# 
  1488  0E27                     	;# 
  1489  0E28                     	;# 
  1490  0E29                     	;# 
  1491  0E2A                     	;# 
  1492  0E2B                     	;# 
  1493  0E2C                     	;# 
  1494  0E2D                     	;# 
  1495  0E2E                     	;# 
  1496  0E2F                     	;# 
  1497  0E30                     	;# 
  1498  0E31                     	;# 
  1499  0E32                     	;# 
  1500  0E33                     	;# 
  1501  0E34                     	;# 
  1502  0E35                     	;# 
  1503  0E36                     	;# 
  1504  0E37                     	;# 
  1505  0E8F                     	;# 
  1506  0E90                     	;# 
  1507  0E91                     	;# 
  1508  0E92                     	;# 
  1509  0E93                     	;# 
  1510  0E94                     	;# 
  1511  0E95                     	;# 
  1512  0E96                     	;# 
  1513  0E97                     	;# 
  1514  0E9C                     	;# 
  1515  0E9D                     	;# 
  1516  0E9E                     	;# 
  1517  0EA1                     	;# 
  1518  0EA2                     	;# 
  1519  0EA3                     	;# 
  1520  0EA4                     	;# 
  1521  0EA5                     	;# 
  1522  0EA9                     	;# 
  1523  0EAA                     	;# 
  1524  0EAB                     	;# 
  1525  0EAC                     	;# 
  1526  0EB1                     	;# 
  1527  0EB2                     	;# 
  1528  0EB3                     	;# 
  1529  0EB8                     	;# 
  1530  0EB9                     	;# 
  1531  0EBA                     	;# 
  1532  0EBB                     	;# 
  1533  0EBC                     	;# 
  1534  0EBD                     	;# 
  1535  0EBE                     	;# 
  1536  0EC3                     	;# 
  1537  0EC5                     	;# 
  1538  0EC6                     	;# 
  1539  0EC7                     	;# 
  1540  0EC8                     	;# 
  1541  0EC9                     	;# 
  1542  0ECA                     	;# 
  1543  0ECB                     	;# 
  1544  0ECC                     	;# 
  1545  0F10                     	;# 
  1546  0F11                     	;# 
  1547  0F12                     	;# 
  1548  0F13                     	;# 
  1549  0F14                     	;# 
  1550  0F15                     	;# 
  1551  0F16                     	;# 
  1552  0F17                     	;# 
  1553  0F18                     	;# 
  1554  0F19                     	;# 
  1555  0F1A                     	;# 
  1556  0F1B                     	;# 
  1557  0F1C                     	;# 
  1558  0F1D                     	;# 
  1559  0F1E                     	;# 
  1560  0F1F                     	;# 
  1561  0F20                     	;# 
  1562  0F21                     	;# 
  1563  0F22                     	;# 
  1564  0F23                     	;# 
  1565  0F24                     	;# 
  1566  0F25                     	;# 
  1567  0F26                     	;# 
  1568  0F27                     	;# 
  1569  0F38                     	;# 
  1570  0F39                     	;# 
  1571  0F3A                     	;# 
  1572  0F3B                     	;# 
  1573  0F3C                     	;# 
  1574  0F3D                     	;# 
  1575  0F3E                     	;# 
  1576  0F3F                     	;# 
  1577  0F40                     	;# 
  1578  0F41                     	;# 
  1579  0F43                     	;# 
  1580  0F44                     	;# 
  1581  0F45                     	;# 
  1582  0F46                     	;# 
  1583  0F47                     	;# 
  1584  0F48                     	;# 
  1585  0F49                     	;# 
  1586  0F4A                     	;# 
  1587  0F4B                     	;# 
  1588  0F4C                     	;# 
  1589  0F4E                     	;# 
  1590  0F4F                     	;# 
  1591  0F50                     	;# 
  1592  0F51                     	;# 
  1593  0F52                     	;# 
  1594  0F53                     	;# 
  1595  0F54                     	;# 
  1596  0F55                     	;# 
  1597  0F56                     	;# 
  1598  0F57                     	;# 
  1599  0F65                     	;# 
  1600  0F68                     	;# 
  1601  0F69                     	;# 
  1602  0F6A                     	;# 
  1603  0F6B                     	;# 
  1604  0FE4                     	;# 
  1605  0FE5                     	;# 
  1606  0FE6                     	;# 
  1607  0FE7                     	;# 
  1608  0FE8                     	;# 
  1609  0FE9                     	;# 
  1610  0FEA                     	;# 
  1611  0FEB                     	;# 
  1612  0FED                     	;# 
  1613  0FEE                     	;# 
  1614  0FEF                     	;# 
  1615  0000                     	;# 
  1616  0001                     	;# 
  1617  0002                     	;# 
  1618  0003                     	;# 
  1619  0004                     	;# 
  1620  0005                     	;# 
  1621  0006                     	;# 
  1622  0007                     	;# 
  1623  0008                     	;# 
  1624  0009                     	;# 
  1625  000A                     	;# 
  1626  000B                     	;# 
  1627  000C                     	;# 
  1628  000D                     	;# 
  1629  000E                     	;# 
  1630  0010                     	;# 
  1631  0011                     	;# 
  1632  0012                     	;# 
  1633  0013                     	;# 
  1634  0016                     	;# 
  1635  0017                     	;# 
  1636  0018                     	;# 
  1637  001C                     	;# 
  1638  001C                     	;# 
  1639  001D                     	;# 
  1640  001D                     	;# 
  1641  001E                     	;# 
  1642  001F                     	;# 
  1643  008C                     	;# 
  1644  008C                     	;# 
  1645  008D                     	;# 
  1646  008E                     	;# 
  1647  008E                     	;# 
  1648  008F                     	;# 
  1649  0090                     	;# 
  1650  0090                     	;# 
  1651  0091                     	;# 
  1652  0093                     	;# 
  1653  0094                     	;# 
  1654  0095                     	;# 
  1655  0096                     	;# 
  1656  0097                     	;# 
  1657  0098                     	;# 
  1658  0099                     	;# 
  1659  009A                     	;# 
  1660  009B                     	;# 
  1661  009C                     	;# 
  1662  009D                     	;# 
  1663  009E                     	;# 
  1664  010C                     	;# 
  1665  010D                     	;# 
  1666  010E                     	;# 
  1667  010E                     	;# 
  1668  010F                     	;# 
  1669  0110                     	;# 
  1670  0110                     	;# 
  1671  0111                     	;# 
  1672  0112                     	;# 
  1673  0112                     	;# 
  1674  0113                     	;# 
  1675  0114                     	;# 
  1676  0114                     	;# 
  1677  0115                     	;# 
  1678  0116                     	;# 
  1679  0116                     	;# 
  1680  0117                     	;# 
  1681  0119                     	;# 
  1682  0119                     	;# 
  1683  0119                     	;# 
  1684  011A                     	;# 
  1685  011A                     	;# 
  1686  011A                     	;# 
  1687  011B                     	;# 
  1688  011B                     	;# 
  1689  011B                     	;# 
  1690  011B                     	;# 
  1691  011B                     	;# 
  1692  011C                     	;# 
  1693  011C                     	;# 
  1694  011C                     	;# 
  1695  011D                     	;# 
  1696  011D                     	;# 
  1697  011D                     	;# 
  1698  011E                     	;# 
  1699  011E                     	;# 
  1700  011E                     	;# 
  1701  011F                     	;# 
  1702  011F                     	;# 
  1703  011F                     	;# 
  1704  011F                     	;# 
  1705  011F                     	;# 
  1706  018C                     	;# 
  1707  018D                     	;# 
  1708  018E                     	;# 
  1709  018F                     	;# 
  1710  0190                     	;# 
  1711  0191                     	;# 
  1712  0192                     	;# 
  1713  0196                     	;# 
  1714  0197                     	;# 
  1715  0198                     	;# 
  1716  0199                     	;# 
  1717  019A                     	;# 
  1718  019B                     	;# 
  1719  019C                     	;# 
  1720  020C                     	;# 
  1721  020C                     	;# 
  1722  020D                     	;# 
  1723  020E                     	;# 
  1724  020F                     	;# 
  1725  020F                     	;# 
  1726  0210                     	;# 
  1727  0210                     	;# 
  1728  0211                     	;# 
  1729  0211                     	;# 
  1730  0212                     	;# 
  1731  0212                     	;# 
  1732  0213                     	;# 
  1733  0214                     	;# 
  1734  0215                     	;# 
  1735  0215                     	;# 
  1736  0216                     	;# 
  1737  0216                     	;# 
  1738  0217                     	;# 
  1739  0217                     	;# 
  1740  0218                     	;# 
  1741  0218                     	;# 
  1742  0219                     	;# 
  1743  021A                     	;# 
  1744  021B                     	;# 
  1745  021B                     	;# 
  1746  021C                     	;# 
  1747  021C                     	;# 
  1748  021D                     	;# 
  1749  021D                     	;# 
  1750  021E                     	;# 
  1751  021F                     	;# 
  1752  028C                     	;# 
  1753  028C                     	;# 
  1754  028D                     	;# 
  1755  028D                     	;# 
  1756  028E                     	;# 
  1757  028F                     	;# 
  1758  0290                     	;# 
  1759  0290                     	;# 
  1760  0291                     	;# 
  1761  0292                     	;# 
  1762  0292                     	;# 
  1763  0293                     	;# 
  1764  0293                     	;# 
  1765  0294                     	;# 
  1766  0295                     	;# 
  1767  0296                     	;# 
  1768  0296                     	;# 
  1769  0297                     	;# 
  1770  0298                     	;# 
  1771  0298                     	;# 
  1772  0299                     	;# 
  1773  0299                     	;# 
  1774  029A                     	;# 
  1775  029B                     	;# 
  1776  029C                     	;# 
  1777  029C                     	;# 
  1778  029D                     	;# 
  1779  030C                     	;# 
  1780  030C                     	;# 
  1781  030D                     	;# 
  1782  030E                     	;# 
  1783  030F                     	;# 
  1784  0310                     	;# 
  1785  0310                     	;# 
  1786  0311                     	;# 
  1787  0312                     	;# 
  1788  0313                     	;# 
  1789  0314                     	;# 
  1790  0314                     	;# 
  1791  0315                     	;# 
  1792  0316                     	;# 
  1793  0317                     	;# 
  1794  0318                     	;# 
  1795  0318                     	;# 
  1796  0319                     	;# 
  1797  031A                     	;# 
  1798  031B                     	;# 
  1799  031C                     	;# 
  1800  031C                     	;# 
  1801  031D                     	;# 
  1802  031E                     	;# 
  1803  031F                     	;# 
  1804  038C                     	;# 
  1805  038C                     	;# 
  1806  038D                     	;# 
  1807  038E                     	;# 
  1808  0390                     	;# 
  1809  0390                     	;# 
  1810  0391                     	;# 
  1811  0392                     	;# 
  1812  040C                     	;# 
  1813  040D                     	;# 
  1814  040E                     	;# 
  1815  040F                     	;# 
  1816  0410                     	;# 
  1817  0411                     	;# 
  1818  0416                     	;# 
  1819  0416                     	;# 
  1820  0417                     	;# 
  1821  0418                     	;# 
  1822  0418                     	;# 
  1823  0419                     	;# 
  1824  041A                     	;# 
  1825  041A                     	;# 
  1826  041B                     	;# 
  1827  041C                     	;# 
  1828  041C                     	;# 
  1829  041D                     	;# 
  1830  041E                     	;# 
  1831  041F                     	;# 
  1832  048C                     	;# 
  1833  048C                     	;# 
  1834  048D                     	;# 
  1835  048E                     	;# 
  1836  048F                     	;# 
  1837  048F                     	;# 
  1838  0490                     	;# 
  1839  0491                     	;# 
  1840  0492                     	;# 
  1841  0492                     	;# 
  1842  0493                     	;# 
  1843  0494                     	;# 
  1844  0495                     	;# 
  1845  0495                     	;# 
  1846  0496                     	;# 
  1847  0497                     	;# 
  1848  0498                     	;# 
  1849  0499                     	;# 
  1850  049A                     	;# 
  1851  049B                     	;# 
  1852  049C                     	;# 
  1853  049D                     	;# 
  1854  050C                     	;# 
  1855  050C                     	;# 
  1856  050D                     	;# 
  1857  050E                     	;# 
  1858  050F                     	;# 
  1859  050F                     	;# 
  1860  0510                     	;# 
  1861  0511                     	;# 
  1862  0512                     	;# 
  1863  0512                     	;# 
  1864  0513                     	;# 
  1865  0514                     	;# 
  1866  0515                     	;# 
  1867  0515                     	;# 
  1868  0516                     	;# 
  1869  0517                     	;# 
  1870  0518                     	;# 
  1871  0519                     	;# 
  1872  051A                     	;# 
  1873  051B                     	;# 
  1874  051C                     	;# 
  1875  051D                     	;# 
  1876  058C                     	;# 
  1877  058C                     	;# 
  1878  058D                     	;# 
  1879  058E                     	;# 
  1880  058F                     	;# 
  1881  058F                     	;# 
  1882  0590                     	;# 
  1883  0591                     	;# 
  1884  0592                     	;# 
  1885  0593                     	;# 
  1886  060C                     	;# 
  1887  060D                     	;# 
  1888  060E                     	;# 
  1889  060F                     	;# 
  1890  0610                     	;# 
  1891  0611                     	;# 
  1892  0612                     	;# 
  1893  0613                     	;# 
  1894  0614                     	;# 
  1895  0616                     	;# 
  1896  0617                     	;# 
  1897  0618                     	;# 
  1898  0619                     	;# 
  1899  061A                     	;# 
  1900  061B                     	;# 
  1901  061C                     	;# 
  1902  061D                     	;# 
  1903  061E                     	;# 
  1904  068C                     	;# 
  1905  068D                     	;# 
  1906  068E                     	;# 
  1907  068F                     	;# 
  1908  0690                     	;# 
  1909  0691                     	;# 
  1910  0692                     	;# 
  1911  0693                     	;# 
  1912  0694                     	;# 
  1913  070C                     	;# 
  1914  070D                     	;# 
  1915  070E                     	;# 
  1916  070F                     	;# 
  1917  0710                     	;# 
  1918  0711                     	;# 
  1919  0712                     	;# 
  1920  0713                     	;# 
  1921  0714                     	;# 
  1922  0716                     	;# 
  1923  0717                     	;# 
  1924  0718                     	;# 
  1925  0719                     	;# 
  1926  071A                     	;# 
  1927  071B                     	;# 
  1928  071C                     	;# 
  1929  071D                     	;# 
  1930  071E                     	;# 
  1931  0796                     	;# 
  1932  0797                     	;# 
  1933  0798                     	;# 
  1934  0799                     	;# 
  1935  079A                     	;# 
  1936  079B                     	;# 
  1937  080C                     	;# 
  1938  080D                     	;# 
  1939  080E                     	;# 
  1940  080F                     	;# 
  1941  0810                     	;# 
  1942  0811                     	;# 
  1943  0812                     	;# 
  1944  0813                     	;# 
  1945  0814                     	;# 
  1946  081A                     	;# 
  1947  081B                     	;# 
  1948  081C                     	;# 
  1949  081D                     	;# 
  1950  081E                     	;# 
  1951  081F                     	;# 
  1952  088C                     	;# 
  1953  088D                     	;# 
  1954  088E                     	;# 
  1955  088F                     	;# 
  1956  0890                     	;# 
  1957  0891                     	;# 
  1958  0892                     	;# 
  1959  0893                     	;# 
  1960  0895                     	;# 
  1961  0896                     	;# 
  1962  0897                     	;# 
  1963  0898                     	;# 
  1964  0899                     	;# 
  1965  089A                     	;# 
  1966  089B                     	;# 
  1967  090C                     	;# 
  1968  090E                     	;# 
  1969  090F                     	;# 
  1970  091F                     	;# 
  1971  091F                     	;# 
  1972  098F                     	;# 
  1973  098F                     	;# 
  1974  0990                     	;# 
  1975  0991                     	;# 
  1976  0992                     	;# 
  1977  0993                     	;# 
  1978  0994                     	;# 
  1979  0995                     	;# 
  1980  0996                     	;# 
  1981  0997                     	;# 
  1982  0E0F                     	;# 
  1983  0E10                     	;# 
  1984  0E11                     	;# 
  1985  0E12                     	;# 
  1986  0E13                     	;# 
  1987  0E14                     	;# 
  1988  0E15                     	;# 
  1989  0E16                     	;# 
  1990  0E17                     	;# 
  1991  0E18                     	;# 
  1992  0E19                     	;# 
  1993  0E1A                     	;# 
  1994  0E1B                     	;# 
  1995  0E1C                     	;# 
  1996  0E1D                     	;# 
  1997  0E1E                     	;# 
  1998  0E1F                     	;# 
  1999  0E20                     	;# 
  2000  0E21                     	;# 
  2001  0E22                     	;# 
  2002  0E23                     	;# 
  2003  0E24                     	;# 
  2004  0E25                     	;# 
  2005  0E26                     	;# 
  2006  0E27                     	;# 
  2007  0E28                     	;# 
  2008  0E29                     	;# 
  2009  0E2A                     	;# 
  2010  0E2B                     	;# 
  2011  0E2C                     	;# 
  2012  0E2D                     	;# 
  2013  0E2E                     	;# 
  2014  0E2F                     	;# 
  2015  0E30                     	;# 
  2016  0E31                     	;# 
  2017  0E32                     	;# 
  2018  0E33                     	;# 
  2019  0E34                     	;# 
  2020  0E35                     	;# 
  2021  0E36                     	;# 
  2022  0E37                     	;# 
  2023  0E8F                     	;# 
  2024  0E90                     	;# 
  2025  0E91                     	;# 
  2026  0E92                     	;# 
  2027  0E93                     	;# 
  2028  0E94                     	;# 
  2029  0E95                     	;# 
  2030  0E96                     	;# 
  2031  0E97                     	;# 
  2032  0E9C                     	;# 
  2033  0E9D                     	;# 
  2034  0E9E                     	;# 
  2035  0EA1                     	;# 
  2036  0EA2                     	;# 
  2037  0EA3                     	;# 
  2038  0EA4                     	;# 
  2039  0EA5                     	;# 
  2040  0EA9                     	;# 
  2041  0EAA                     	;# 
  2042  0EAB                     	;# 
  2043  0EAC                     	;# 
  2044  0EB1                     	;# 
  2045  0EB2                     	;# 
  2046  0EB3                     	;# 
  2047  0EB8                     	;# 
  2048  0EB9                     	;# 
  2049  0EBA                     	;# 
  2050  0EBB                     	;# 
  2051  0EBC                     	;# 
  2052  0EBD                     	;# 
  2053  0EBE                     	;# 
  2054  0EC3                     	;# 
  2055  0EC5                     	;# 
  2056  0EC6                     	;# 
  2057  0EC7                     	;# 
  2058  0EC8                     	;# 
  2059  0EC9                     	;# 
  2060  0ECA                     	;# 
  2061  0ECB                     	;# 
  2062  0ECC                     	;# 
  2063  0F10                     	;# 
  2064  0F11                     	;# 
  2065  0F12                     	;# 
  2066  0F13                     	;# 
  2067  0F14                     	;# 
  2068  0F15                     	;# 
  2069  0F16                     	;# 
  2070  0F17                     	;# 
  2071  0F18                     	;# 
  2072  0F19                     	;# 
  2073  0F1A                     	;# 
  2074  0F1B                     	;# 
  2075  0F1C                     	;# 
  2076  0F1D                     	;# 
  2077  0F1E                     	;# 
  2078  0F1F                     	;# 
  2079  0F20                     	;# 
  2080  0F21                     	;# 
  2081  0F22                     	;# 
  2082  0F23                     	;# 
  2083  0F24                     	;# 
  2084  0F25                     	;# 
  2085  0F26                     	;# 
  2086  0F27                     	;# 
  2087  0F38                     	;# 
  2088  0F39                     	;# 
  2089  0F3A                     	;# 
  2090  0F3B                     	;# 
  2091  0F3C                     	;# 
  2092  0F3D                     	;# 
  2093  0F3E                     	;# 
  2094  0F3F                     	;# 
  2095  0F40                     	;# 
  2096  0F41                     	;# 
  2097  0F43                     	;# 
  2098  0F44                     	;# 
  2099  0F45                     	;# 
  2100  0F46                     	;# 
  2101  0F47                     	;# 
  2102  0F48                     	;# 
  2103  0F49                     	;# 
  2104  0F4A                     	;# 
  2105  0F4B                     	;# 
  2106  0F4C                     	;# 
  2107  0F4E                     	;# 
  2108  0F4F                     	;# 
  2109  0F50                     	;# 
  2110  0F51                     	;# 
  2111  0F52                     	;# 
  2112  0F53                     	;# 
  2113  0F54                     	;# 
  2114  0F55                     	;# 
  2115  0F56                     	;# 
  2116  0F57                     	;# 
  2117  0F65                     	;# 
  2118  0F68                     	;# 
  2119  0F69                     	;# 
  2120  0F6A                     	;# 
  2121  0F6B                     	;# 
  2122  0FE4                     	;# 
  2123  0FE5                     	;# 
  2124  0FE6                     	;# 
  2125  0FE7                     	;# 
  2126  0FE8                     	;# 
  2127  0FE9                     	;# 
  2128  0FEA                     	;# 
  2129  0FEB                     	;# 
  2130  0FED                     	;# 
  2131  0FEE                     	;# 
  2132  0FEF                     	;# 
  2133  0000                     	;# 
  2134  0001                     	;# 
  2135  0002                     	;# 
  2136  0003                     	;# 
  2137  0004                     	;# 
  2138  0005                     	;# 
  2139  0006                     	;# 
  2140  0007                     	;# 
  2141  0008                     	;# 
  2142  0009                     	;# 
  2143  000A                     	;# 
  2144  000B                     	;# 
  2145  000C                     	;# 
  2146  000D                     	;# 
  2147  000E                     	;# 
  2148  0010                     	;# 
  2149  0011                     	;# 
  2150  0012                     	;# 
  2151  0013                     	;# 
  2152  0016                     	;# 
  2153  0017                     	;# 
  2154  0018                     	;# 
  2155  001C                     	;# 
  2156  001C                     	;# 
  2157  001D                     	;# 
  2158  001D                     	;# 
  2159  001E                     	;# 
  2160  001F                     	;# 
  2161  008C                     	;# 
  2162  008C                     	;# 
  2163  008D                     	;# 
  2164  008E                     	;# 
  2165  008E                     	;# 
  2166  008F                     	;# 
  2167  0090                     	;# 
  2168  0090                     	;# 
  2169  0091                     	;# 
  2170  0093                     	;# 
  2171  0094                     	;# 
  2172  0095                     	;# 
  2173  0096                     	;# 
  2174  0097                     	;# 
  2175  0098                     	;# 
  2176  0099                     	;# 
  2177  009A                     	;# 
  2178  009B                     	;# 
  2179  009C                     	;# 
  2180  009D                     	;# 
  2181  009E                     	;# 
  2182  010C                     	;# 
  2183  010D                     	;# 
  2184  010E                     	;# 
  2185  010E                     	;# 
  2186  010F                     	;# 
  2187  0110                     	;# 
  2188  0110                     	;# 
  2189  0111                     	;# 
  2190  0112                     	;# 
  2191  0112                     	;# 
  2192  0113                     	;# 
  2193  0114                     	;# 
  2194  0114                     	;# 
  2195  0115                     	;# 
  2196  0116                     	;# 
  2197  0116                     	;# 
  2198  0117                     	;# 
  2199  0119                     	;# 
  2200  0119                     	;# 
  2201  0119                     	;# 
  2202  011A                     	;# 
  2203  011A                     	;# 
  2204  011A                     	;# 
  2205  011B                     	;# 
  2206  011B                     	;# 
  2207  011B                     	;# 
  2208  011B                     	;# 
  2209  011B                     	;# 
  2210  011C                     	;# 
  2211  011C                     	;# 
  2212  011C                     	;# 
  2213  011D                     	;# 
  2214  011D                     	;# 
  2215  011D                     	;# 
  2216  011E                     	;# 
  2217  011E                     	;# 
  2218  011E                     	;# 
  2219  011F                     	;# 
  2220  011F                     	;# 
  2221  011F                     	;# 
  2222  011F                     	;# 
  2223  011F                     	;# 
  2224  018C                     	;# 
  2225  018D                     	;# 
  2226  018E                     	;# 
  2227  018F                     	;# 
  2228  0190                     	;# 
  2229  0191                     	;# 
  2230  0192                     	;# 
  2231  0196                     	;# 
  2232  0197                     	;# 
  2233  0198                     	;# 
  2234  0199                     	;# 
  2235  019A                     	;# 
  2236  019B                     	;# 
  2237  019C                     	;# 
  2238  020C                     	;# 
  2239  020C                     	;# 
  2240  020D                     	;# 
  2241  020E                     	;# 
  2242  020F                     	;# 
  2243  020F                     	;# 
  2244  0210                     	;# 
  2245  0210                     	;# 
  2246  0211                     	;# 
  2247  0211                     	;# 
  2248  0212                     	;# 
  2249  0212                     	;# 
  2250  0213                     	;# 
  2251  0214                     	;# 
  2252  0215                     	;# 
  2253  0215                     	;# 
  2254  0216                     	;# 
  2255  0216                     	;# 
  2256  0217                     	;# 
  2257  0217                     	;# 
  2258  0218                     	;# 
  2259  0218                     	;# 
  2260  0219                     	;# 
  2261  021A                     	;# 
  2262  021B                     	;# 
  2263  021B                     	;# 
  2264  021C                     	;# 
  2265  021C                     	;# 
  2266  021D                     	;# 
  2267  021D                     	;# 
  2268  021E                     	;# 
  2269  021F                     	;# 
  2270  028C                     	;# 
  2271  028C                     	;# 
  2272  028D                     	;# 
  2273  028D                     	;# 
  2274  028E                     	;# 
  2275  028F                     	;# 
  2276  0290                     	;# 
  2277  0290                     	;# 
  2278  0291                     	;# 
  2279  0292                     	;# 
  2280  0292                     	;# 
  2281  0293                     	;# 
  2282  0293                     	;# 
  2283  0294                     	;# 
  2284  0295                     	;# 
  2285  0296                     	;# 
  2286  0296                     	;# 
  2287  0297                     	;# 
  2288  0298                     	;# 
  2289  0298                     	;# 
  2290  0299                     	;# 
  2291  0299                     	;# 
  2292  029A                     	;# 
  2293  029B                     	;# 
  2294  029C                     	;# 
  2295  029C                     	;# 
  2296  029D                     	;# 
  2297  030C                     	;# 
  2298  030C                     	;# 
  2299  030D                     	;# 
  2300  030E                     	;# 
  2301  030F                     	;# 
  2302  0310                     	;# 
  2303  0310                     	;# 
  2304  0311                     	;# 
  2305  0312                     	;# 
  2306  0313                     	;# 
  2307  0314                     	;# 
  2308  0314                     	;# 
  2309  0315                     	;# 
  2310  0316                     	;# 
  2311  0317                     	;# 
  2312  0318                     	;# 
  2313  0318                     	;# 
  2314  0319                     	;# 
  2315  031A                     	;# 
  2316  031B                     	;# 
  2317  031C                     	;# 
  2318  031C                     	;# 
  2319  031D                     	;# 
  2320  031E                     	;# 
  2321  031F                     	;# 
  2322  038C                     	;# 
  2323  038C                     	;# 
  2324  038D                     	;# 
  2325  038E                     	;# 
  2326  0390                     	;# 
  2327  0390                     	;# 
  2328  0391                     	;# 
  2329  0392                     	;# 
  2330  040C                     	;# 
  2331  040D                     	;# 
  2332  040E                     	;# 
  2333  040F                     	;# 
  2334  0410                     	;# 
  2335  0411                     	;# 
  2336  0416                     	;# 
  2337  0416                     	;# 
  2338  0417                     	;# 
  2339  0418                     	;# 
  2340  0418                     	;# 
  2341  0419                     	;# 
  2342  041A                     	;# 
  2343  041A                     	;# 
  2344  041B                     	;# 
  2345  041C                     	;# 
  2346  041C                     	;# 
  2347  041D                     	;# 
  2348  041E                     	;# 
  2349  041F                     	;# 
  2350  048C                     	;# 
  2351  048C                     	;# 
  2352  048D                     	;# 
  2353  048E                     	;# 
  2354  048F                     	;# 
  2355  048F                     	;# 
  2356  0490                     	;# 
  2357  0491                     	;# 
  2358  0492                     	;# 
  2359  0492                     	;# 
  2360  0493                     	;# 
  2361  0494                     	;# 
  2362  0495                     	;# 
  2363  0495                     	;# 
  2364  0496                     	;# 
  2365  0497                     	;# 
  2366  0498                     	;# 
  2367  0499                     	;# 
  2368  049A                     	;# 
  2369  049B                     	;# 
  2370  049C                     	;# 
  2371  049D                     	;# 
  2372  050C                     	;# 
  2373  050C                     	;# 
  2374  050D                     	;# 
  2375  050E                     	;# 
  2376  050F                     	;# 
  2377  050F                     	;# 
  2378  0510                     	;# 
  2379  0511                     	;# 
  2380  0512                     	;# 
  2381  0512                     	;# 
  2382  0513                     	;# 
  2383  0514                     	;# 
  2384  0515                     	;# 
  2385  0515                     	;# 
  2386  0516                     	;# 
  2387  0517                     	;# 
  2388  0518                     	;# 
  2389  0519                     	;# 
  2390  051A                     	;# 
  2391  051B                     	;# 
  2392  051C                     	;# 
  2393  051D                     	;# 
  2394  058C                     	;# 
  2395  058C                     	;# 
  2396  058D                     	;# 
  2397  058E                     	;# 
  2398  058F                     	;# 
  2399  058F                     	;# 
  2400  0590                     	;# 
  2401  0591                     	;# 
  2402  0592                     	;# 
  2403  0593                     	;# 
  2404  060C                     	;# 
  2405  060D                     	;# 
  2406  060E                     	;# 
  2407  060F                     	;# 
  2408  0610                     	;# 
  2409  0611                     	;# 
  2410  0612                     	;# 
  2411  0613                     	;# 
  2412  0614                     	;# 
  2413  0616                     	;# 
  2414  0617                     	;# 
  2415  0618                     	;# 
  2416  0619                     	;# 
  2417  061A                     	;# 
  2418  061B                     	;# 
  2419  061C                     	;# 
  2420  061D                     	;# 
  2421  061E                     	;# 
  2422  068C                     	;# 
  2423  068D                     	;# 
  2424  068E                     	;# 
  2425  068F                     	;# 
  2426  0690                     	;# 
  2427  0691                     	;# 
  2428  0692                     	;# 
  2429  0693                     	;# 
  2430  0694                     	;# 
  2431  070C                     	;# 
  2432  070D                     	;# 
  2433  070E                     	;# 
  2434  070F                     	;# 
  2435  0710                     	;# 
  2436  0711                     	;# 
  2437  0712                     	;# 
  2438  0713                     	;# 
  2439  0714                     	;# 
  2440  0716                     	;# 
  2441  0717                     	;# 
  2442  0718                     	;# 
  2443  0719                     	;# 
  2444  071A                     	;# 
  2445  071B                     	;# 
  2446  071C                     	;# 
  2447  071D                     	;# 
  2448  071E                     	;# 
  2449  0796                     	;# 
  2450  0797                     	;# 
  2451  0798                     	;# 
  2452  0799                     	;# 
  2453  079A                     	;# 
  2454  079B                     	;# 
  2455  080C                     	;# 
  2456  080D                     	;# 
  2457  080E                     	;# 
  2458  080F                     	;# 
  2459  0810                     	;# 
  2460  0811                     	;# 
  2461  0812                     	;# 
  2462  0813                     	;# 
  2463  0814                     	;# 
  2464  081A                     	;# 
  2465  081B                     	;# 
  2466  081C                     	;# 
  2467  081D                     	;# 
  2468  081E                     	;# 
  2469  081F                     	;# 
  2470  088C                     	;# 
  2471  088D                     	;# 
  2472  088E                     	;# 
  2473  088F                     	;# 
  2474  0890                     	;# 
  2475  0891                     	;# 
  2476  0892                     	;# 
  2477  0893                     	;# 
  2478  0895                     	;# 
  2479  0896                     	;# 
  2480  0897                     	;# 
  2481  0898                     	;# 
  2482  0899                     	;# 
  2483  089A                     	;# 
  2484  089B                     	;# 
  2485  090C                     	;# 
  2486  090E                     	;# 
  2487  090F                     	;# 
  2488  091F                     	;# 
  2489  091F                     	;# 
  2490  098F                     	;# 
  2491  098F                     	;# 
  2492  0990                     	;# 
  2493  0991                     	;# 
  2494  0992                     	;# 
  2495  0993                     	;# 
  2496  0994                     	;# 
  2497  0995                     	;# 
  2498  0996                     	;# 
  2499  0997                     	;# 
  2500  0E0F                     	;# 
  2501  0E10                     	;# 
  2502  0E11                     	;# 
  2503  0E12                     	;# 
  2504  0E13                     	;# 
  2505  0E14                     	;# 
  2506  0E15                     	;# 
  2507  0E16                     	;# 
  2508  0E17                     	;# 
  2509  0E18                     	;# 
  2510  0E19                     	;# 
  2511  0E1A                     	;# 
  2512  0E1B                     	;# 
  2513  0E1C                     	;# 
  2514  0E1D                     	;# 
  2515  0E1E                     	;# 
  2516  0E1F                     	;# 
  2517  0E20                     	;# 
  2518  0E21                     	;# 
  2519  0E22                     	;# 
  2520  0E23                     	;# 
  2521  0E24                     	;# 
  2522  0E25                     	;# 
  2523  0E26                     	;# 
  2524  0E27                     	;# 
  2525  0E28                     	;# 
  2526  0E29                     	;# 
  2527  0E2A                     	;# 
  2528  0E2B                     	;# 
  2529  0E2C                     	;# 
  2530  0E2D                     	;# 
  2531  0E2E                     	;# 
  2532  0E2F                     	;# 
  2533  0E30                     	;# 
  2534  0E31                     	;# 
  2535  0E32                     	;# 
  2536  0E33                     	;# 
  2537  0E34                     	;# 
  2538  0E35                     	;# 
  2539  0E36                     	;# 
  2540  0E37                     	;# 
  2541  0E8F                     	;# 
  2542  0E90                     	;# 
  2543  0E91                     	;# 
  2544  0E92                     	;# 
  2545  0E93                     	;# 
  2546  0E94                     	;# 
  2547  0E95                     	;# 
  2548  0E96                     	;# 
  2549  0E97                     	;# 
  2550  0E9C                     	;# 
  2551  0E9D                     	;# 
  2552  0E9E                     	;# 
  2553  0EA1                     	;# 
  2554  0EA2                     	;# 
  2555  0EA3                     	;# 
  2556  0EA4                     	;# 
  2557  0EA5                     	;# 
  2558  0EA9                     	;# 
  2559  0EAA                     	;# 
  2560  0EAB                     	;# 
  2561  0EAC                     	;# 
  2562  0EB1                     	;# 
  2563  0EB2                     	;# 
  2564  0EB3                     	;# 
  2565  0EB8                     	;# 
  2566  0EB9                     	;# 
  2567  0EBA                     	;# 
  2568  0EBB                     	;# 
  2569  0EBC                     	;# 
  2570  0EBD                     	;# 
  2571  0EBE                     	;# 
  2572  0EC3                     	;# 
  2573  0EC5                     	;# 
  2574  0EC6                     	;# 
  2575  0EC7                     	;# 
  2576  0EC8                     	;# 
  2577  0EC9                     	;# 
  2578  0ECA                     	;# 
  2579  0ECB                     	;# 
  2580  0ECC                     	;# 
  2581  0F10                     	;# 
  2582  0F11                     	;# 
  2583  0F12                     	;# 
  2584  0F13                     	;# 
  2585  0F14                     	;# 
  2586  0F15                     	;# 
  2587  0F16                     	;# 
  2588  0F17                     	;# 
  2589  0F18                     	;# 
  2590  0F19                     	;# 
  2591  0F1A                     	;# 
  2592  0F1B                     	;# 
  2593  0F1C                     	;# 
  2594  0F1D                     	;# 
  2595  0F1E                     	;# 
  2596  0F1F                     	;# 
  2597  0F20                     	;# 
  2598  0F21                     	;# 
  2599  0F22                     	;# 
  2600  0F23                     	;# 
  2601  0F24                     	;# 
  2602  0F25                     	;# 
  2603  0F26                     	;# 
  2604  0F27                     	;# 
  2605  0F38                     	;# 
  2606  0F39                     	;# 
  2607  0F3A                     	;# 
  2608  0F3B                     	;# 
  2609  0F3C                     	;# 
  2610  0F3D                     	;# 
  2611  0F3E                     	;# 
  2612  0F3F                     	;# 
  2613  0F40                     	;# 
  2614  0F41                     	;# 
  2615  0F43                     	;# 
  2616  0F44                     	;# 
  2617  0F45                     	;# 
  2618  0F46                     	;# 
  2619  0F47                     	;# 
  2620  0F48                     	;# 
  2621  0F49                     	;# 
  2622  0F4A                     	;# 
  2623  0F4B                     	;# 
  2624  0F4C                     	;# 
  2625  0F4E                     	;# 
  2626  0F4F                     	;# 
  2627  0F50                     	;# 
  2628  0F51                     	;# 
  2629  0F52                     	;# 
  2630  0F53                     	;# 
  2631  0F54                     	;# 
  2632  0F55                     	;# 
  2633  0F56                     	;# 
  2634  0F57                     	;# 
  2635  0F65                     	;# 
  2636  0F68                     	;# 
  2637  0F69                     	;# 
  2638  0F6A                     	;# 
  2639  0F6B                     	;# 
  2640  0FE4                     	;# 
  2641  0FE5                     	;# 
  2642  0FE6                     	;# 
  2643  0FE7                     	;# 
  2644  0FE8                     	;# 
  2645  0FE9                     	;# 
  2646  0FEA                     	;# 
  2647  0FEB                     	;# 
  2648  0FED                     	;# 
  2649  0FEE                     	;# 
  2650  0FEF                     	;# 
  2651  0000                     	;# 
  2652  0001                     	;# 
  2653  0002                     	;# 
  2654  0003                     	;# 
  2655  0004                     	;# 
  2656  0005                     	;# 
  2657  0006                     	;# 
  2658  0007                     	;# 
  2659  0008                     	;# 
  2660  0009                     	;# 
  2661  000A                     	;# 
  2662  000B                     	;# 
  2663  000C                     	;# 
  2664  000D                     	;# 
  2665  000E                     	;# 
  2666  0010                     	;# 
  2667  0011                     	;# 
  2668  0012                     	;# 
  2669  0013                     	;# 
  2670  0016                     	;# 
  2671  0017                     	;# 
  2672  0018                     	;# 
  2673  001C                     	;# 
  2674  001C                     	;# 
  2675  001D                     	;# 
  2676  001D                     	;# 
  2677  001E                     	;# 
  2678  001F                     	;# 
  2679  008C                     	;# 
  2680  008C                     	;# 
  2681  008D                     	;# 
  2682  008E                     	;# 
  2683  008E                     	;# 
  2684  008F                     	;# 
  2685  0090                     	;# 
  2686  0090                     	;# 
  2687  0091                     	;# 
  2688  0093                     	;# 
  2689  0094                     	;# 
  2690  0095                     	;# 
  2691  0096                     	;# 
  2692  0097                     	;# 
  2693  0098                     	;# 
  2694  0099                     	;# 
  2695  009A                     	;# 
  2696  009B                     	;# 
  2697  009C                     	;# 
  2698  009D                     	;# 
  2699  009E                     	;# 
  2700  010C                     	;# 
  2701  010D                     	;# 
  2702  010E                     	;# 
  2703  010E                     	;# 
  2704  010F                     	;# 
  2705  0110                     	;# 
  2706  0110                     	;# 
  2707  0111                     	;# 
  2708  0112                     	;# 
  2709  0112                     	;# 
  2710  0113                     	;# 
  2711  0114                     	;# 
  2712  0114                     	;# 
  2713  0115                     	;# 
  2714  0116                     	;# 
  2715  0116                     	;# 
  2716  0117                     	;# 
  2717  0119                     	;# 
  2718  0119                     	;# 
  2719  0119                     	;# 
  2720  011A                     	;# 
  2721  011A                     	;# 
  2722  011A                     	;# 
  2723  011B                     	;# 
  2724  011B                     	;# 
  2725  011B                     	;# 
  2726  011B                     	;# 
  2727  011B                     	;# 
  2728  011C                     	;# 
  2729  011C                     	;# 
  2730  011C                     	;# 
  2731  011D                     	;# 
  2732  011D                     	;# 
  2733  011D                     	;# 
  2734  011E                     	;# 
  2735  011E                     	;# 
  2736  011E                     	;# 
  2737  011F                     	;# 
  2738  011F                     	;# 
  2739  011F                     	;# 
  2740  011F                     	;# 
  2741  011F                     	;# 
  2742  018C                     	;# 
  2743  018D                     	;# 
  2744  018E                     	;# 
  2745  018F                     	;# 
  2746  0190                     	;# 
  2747  0191                     	;# 
  2748  0192                     	;# 
  2749  0196                     	;# 
  2750  0197                     	;# 
  2751  0198                     	;# 
  2752  0199                     	;# 
  2753  019A                     	;# 
  2754  019B                     	;# 
  2755  019C                     	;# 
  2756  020C                     	;# 
  2757  020C                     	;# 
  2758  020D                     	;# 
  2759  020E                     	;# 
  2760  020F                     	;# 
  2761  020F                     	;# 
  2762  0210                     	;# 
  2763  0210                     	;# 
  2764  0211                     	;# 
  2765  0211                     	;# 
  2766  0212                     	;# 
  2767  0212                     	;# 
  2768  0213                     	;# 
  2769  0214                     	;# 
  2770  0215                     	;# 
  2771  0215                     	;# 
  2772  0216                     	;# 
  2773  0216                     	;# 
  2774  0217                     	;# 
  2775  0217                     	;# 
  2776  0218                     	;# 
  2777  0218                     	;# 
  2778  0219                     	;# 
  2779  021A                     	;# 
  2780  021B                     	;# 
  2781  021B                     	;# 
  2782  021C                     	;# 
  2783  021C                     	;# 
  2784  021D                     	;# 
  2785  021D                     	;# 
  2786  021E                     	;# 
  2787  021F                     	;# 
  2788  028C                     	;# 
  2789  028C                     	;# 
  2790  028D                     	;# 
  2791  028D                     	;# 
  2792  028E                     	;# 
  2793  028F                     	;# 
  2794  0290                     	;# 
  2795  0290                     	;# 
  2796  0291                     	;# 
  2797  0292                     	;# 
  2798  0292                     	;# 
  2799  0293                     	;# 
  2800  0293                     	;# 
  2801  0294                     	;# 
  2802  0295                     	;# 
  2803  0296                     	;# 
  2804  0296                     	;# 
  2805  0297                     	;# 
  2806  0298                     	;# 
  2807  0298                     	;# 
  2808  0299                     	;# 
  2809  0299                     	;# 
  2810  029A                     	;# 
  2811  029B                     	;# 
  2812  029C                     	;# 
  2813  029C                     	;# 
  2814  029D                     	;# 
  2815  030C                     	;# 
  2816  030C                     	;# 
  2817  030D                     	;# 
  2818  030E                     	;# 
  2819  030F                     	;# 
  2820  0310                     	;# 
  2821  0310                     	;# 
  2822  0311                     	;# 
  2823  0312                     	;# 
  2824  0313                     	;# 
  2825  0314                     	;# 
  2826  0314                     	;# 
  2827  0315                     	;# 
  2828  0316                     	;# 
  2829  0317                     	;# 
  2830  0318                     	;# 
  2831  0318                     	;# 
  2832  0319                     	;# 
  2833  031A                     	;# 
  2834  031B                     	;# 
  2835  031C                     	;# 
  2836  031C                     	;# 
  2837  031D                     	;# 
  2838  031E                     	;# 
  2839  031F                     	;# 
  2840  038C                     	;# 
  2841  038C                     	;# 
  2842  038D                     	;# 
  2843  038E                     	;# 
  2844  0390                     	;# 
  2845  0390                     	;# 
  2846  0391                     	;# 
  2847  0392                     	;# 
  2848  040C                     	;# 
  2849  040D                     	;# 
  2850  040E                     	;# 
  2851  040F                     	;# 
  2852  0410                     	;# 
  2853  0411                     	;# 
  2854  0416                     	;# 
  2855  0416                     	;# 
  2856  0417                     	;# 
  2857  0418                     	;# 
  2858  0418                     	;# 
  2859  0419                     	;# 
  2860  041A                     	;# 
  2861  041A                     	;# 
  2862  041B                     	;# 
  2863  041C                     	;# 
  2864  041C                     	;# 
  2865  041D                     	;# 
  2866  041E                     	;# 
  2867  041F                     	;# 
  2868  048C                     	;# 
  2869  048C                     	;# 
  2870  048D                     	;# 
  2871  048E                     	;# 
  2872  048F                     	;# 
  2873  048F                     	;# 
  2874  0490                     	;# 
  2875  0491                     	;# 
  2876  0492                     	;# 
  2877  0492                     	;# 
  2878  0493                     	;# 
  2879  0494                     	;# 
  2880  0495                     	;# 
  2881  0495                     	;# 
  2882  0496                     	;# 
  2883  0497                     	;# 
  2884  0498                     	;# 
  2885  0499                     	;# 
  2886  049A                     	;# 
  2887  049B                     	;# 
  2888  049C                     	;# 
  2889  049D                     	;# 
  2890  050C                     	;# 
  2891  050C                     	;# 
  2892  050D                     	;# 
  2893  050E                     	;# 
  2894  050F                     	;# 
  2895  050F                     	;# 
  2896  0510                     	;# 
  2897  0511                     	;# 
  2898  0512                     	;# 
  2899  0512                     	;# 
  2900  0513                     	;# 
  2901  0514                     	;# 
  2902  0515                     	;# 
  2903  0515                     	;# 
  2904  0516                     	;# 
  2905  0517                     	;# 
  2906  0518                     	;# 
  2907  0519                     	;# 
  2908  051A                     	;# 
  2909  051B                     	;# 
  2910  051C                     	;# 
  2911  051D                     	;# 
  2912  058C                     	;# 
  2913  058C                     	;# 
  2914  058D                     	;# 
  2915  058E                     	;# 
  2916  058F                     	;# 
  2917  058F                     	;# 
  2918  0590                     	;# 
  2919  0591                     	;# 
  2920  0592                     	;# 
  2921  0593                     	;# 
  2922  060C                     	;# 
  2923  060D                     	;# 
  2924  060E                     	;# 
  2925  060F                     	;# 
  2926  0610                     	;# 
  2927  0611                     	;# 
  2928  0612                     	;# 
  2929  0613                     	;# 
  2930  0614                     	;# 
  2931  0616                     	;# 
  2932  0617                     	;# 
  2933  0618                     	;# 
  2934  0619                     	;# 
  2935  061A                     	;# 
  2936  061B                     	;# 
  2937  061C                     	;# 
  2938  061D                     	;# 
  2939  061E                     	;# 
  2940  068C                     	;# 
  2941  068D                     	;# 
  2942  068E                     	;# 
  2943  068F                     	;# 
  2944  0690                     	;# 
  2945  0691                     	;# 
  2946  0692                     	;# 
  2947  0693                     	;# 
  2948  0694                     	;# 
  2949  070C                     	;# 
  2950  070D                     	;# 
  2951  070E                     	;# 
  2952  070F                     	;# 
  2953  0710                     	;# 
  2954  0711                     	;# 
  2955  0712                     	;# 
  2956  0713                     	;# 
  2957  0714                     	;# 
  2958  0716                     	;# 
  2959  0717                     	;# 
  2960  0718                     	;# 
  2961  0719                     	;# 
  2962  071A                     	;# 
  2963  071B                     	;# 
  2964  071C                     	;# 
  2965  071D                     	;# 
  2966  071E                     	;# 
  2967  0796                     	;# 
  2968  0797                     	;# 
  2969  0798                     	;# 
  2970  0799                     	;# 
  2971  079A                     	;# 
  2972  079B                     	;# 
  2973  080C                     	;# 
  2974  080D                     	;# 
  2975  080E                     	;# 
  2976  080F                     	;# 
  2977  0810                     	;# 
  2978  0811                     	;# 
  2979  0812                     	;# 
  2980  0813                     	;# 
  2981  0814                     	;# 
  2982  081A                     	;# 
  2983  081B                     	;# 
  2984  081C                     	;# 
  2985  081D                     	;# 
  2986  081E                     	;# 
  2987  081F                     	;# 
  2988  088C                     	;# 
  2989  088D                     	;# 
  2990  088E                     	;# 
  2991  088F                     	;# 
  2992  0890                     	;# 
  2993  0891                     	;# 
  2994  0892                     	;# 
  2995  0893                     	;# 
  2996  0895                     	;# 
  2997  0896                     	;# 
  2998  0897                     	;# 
  2999  0898                     	;# 
  3000  0899                     	;# 
  3001  089A                     	;# 
  3002  089B                     	;# 
  3003  090C                     	;# 
  3004  090E                     	;# 
  3005  090F                     	;# 
  3006  091F                     	;# 
  3007  091F                     	;# 
  3008  098F                     	;# 
  3009  098F                     	;# 
  3010  0990                     	;# 
  3011  0991                     	;# 
  3012  0992                     	;# 
  3013  0993                     	;# 
  3014  0994                     	;# 
  3015  0995                     	;# 
  3016  0996                     	;# 
  3017  0997                     	;# 
  3018  0E0F                     	;# 
  3019  0E10                     	;# 
  3020  0E11                     	;# 
  3021  0E12                     	;# 
  3022  0E13                     	;# 
  3023  0E14                     	;# 
  3024  0E15                     	;# 
  3025  0E16                     	;# 
  3026  0E17                     	;# 
  3027  0E18                     	;# 
  3028  0E19                     	;# 
  3029  0E1A                     	;# 
  3030  0E1B                     	;# 
  3031  0E1C                     	;# 
  3032  0E1D                     	;# 
  3033  0E1E                     	;# 
  3034  0E1F                     	;# 
  3035  0E20                     	;# 
  3036  0E21                     	;# 
  3037  0E22                     	;# 
  3038  0E23                     	;# 
  3039  0E24                     	;# 
  3040  0E25                     	;# 
  3041  0E26                     	;# 
  3042  0E27                     	;# 
  3043  0E28                     	;# 
  3044  0E29                     	;# 
  3045  0E2A                     	;# 
  3046  0E2B                     	;# 
  3047  0E2C                     	;# 
  3048  0E2D                     	;# 
  3049  0E2E                     	;# 
  3050  0E2F                     	;# 
  3051  0E30                     	;# 
  3052  0E31                     	;# 
  3053  0E32                     	;# 
  3054  0E33                     	;# 
  3055  0E34                     	;# 
  3056  0E35                     	;# 
  3057  0E36                     	;# 
  3058  0E37                     	;# 
  3059  0E8F                     	;# 
  3060  0E90                     	;# 
  3061  0E91                     	;# 
  3062  0E92                     	;# 
  3063  0E93                     	;# 
  3064  0E94                     	;# 
  3065  0E95                     	;# 
  3066  0E96                     	;# 
  3067  0E97                     	;# 
  3068  0E9C                     	;# 
  3069  0E9D                     	;# 
  3070  0E9E                     	;# 
  3071  0EA1                     	;# 
  3072  0EA2                     	;# 
  3073  0EA3                     	;# 
  3074  0EA4                     	;# 
  3075  0EA5                     	;# 
  3076  0EA9                     	;# 
  3077  0EAA                     	;# 
  3078  0EAB                     	;# 
  3079  0EAC                     	;# 
  3080  0EB1                     	;# 
  3081  0EB2                     	;# 
  3082  0EB3                     	;# 
  3083  0EB8                     	;# 
  3084  0EB9                     	;# 
  3085  0EBA                     	;# 
  3086  0EBB                     	;# 
  3087  0EBC                     	;# 
  3088  0EBD                     	;# 
  3089  0EBE                     	;# 
  3090  0EC3                     	;# 
  3091  0EC5                     	;# 
  3092  0EC6                     	;# 
  3093  0EC7                     	;# 
  3094  0EC8                     	;# 
  3095  0EC9                     	;# 
  3096  0ECA                     	;# 
  3097  0ECB                     	;# 
  3098  0ECC                     	;# 
  3099  0F10                     	;# 
  3100  0F11                     	;# 
  3101  0F12                     	;# 
  3102  0F13                     	;# 
  3103  0F14                     	;# 
  3104  0F15                     	;# 
  3105  0F16                     	;# 
  3106  0F17                     	;# 
  3107  0F18                     	;# 
  3108  0F19                     	;# 
  3109  0F1A                     	;# 
  3110  0F1B                     	;# 
  3111  0F1C                     	;# 
  3112  0F1D                     	;# 
  3113  0F1E                     	;# 
  3114  0F1F                     	;# 
  3115  0F20                     	;# 
  3116  0F21                     	;# 
  3117  0F22                     	;# 
  3118  0F23                     	;# 
  3119  0F24                     	;# 
  3120  0F25                     	;# 
  3121  0F26                     	;# 
  3122  0F27                     	;# 
  3123  0F38                     	;# 
  3124  0F39                     	;# 
  3125  0F3A                     	;# 
  3126  0F3B                     	;# 
  3127  0F3C                     	;# 
  3128  0F3D                     	;# 
  3129  0F3E                     	;# 
  3130  0F3F                     	;# 
  3131  0F40                     	;# 
  3132  0F41                     	;# 
  3133  0F43                     	;# 
  3134  0F44                     	;# 
  3135  0F45                     	;# 
  3136  0F46                     	;# 
  3137  0F47                     	;# 
  3138  0F48                     	;# 
  3139  0F49                     	;# 
  3140  0F4A                     	;# 
  3141  0F4B                     	;# 
  3142  0F4C                     	;# 
  3143  0F4E                     	;# 
  3144  0F4F                     	;# 
  3145  0F50                     	;# 
  3146  0F51                     	;# 
  3147  0F52                     	;# 
  3148  0F53                     	;# 
  3149  0F54                     	;# 
  3150  0F55                     	;# 
  3151  0F56                     	;# 
  3152  0F57                     	;# 
  3153  0F65                     	;# 
  3154  0F68                     	;# 
  3155  0F69                     	;# 
  3156  0F6A                     	;# 
  3157  0F6B                     	;# 
  3158  0FE4                     	;# 
  3159  0FE5                     	;# 
  3160  0FE6                     	;# 
  3161  0FE7                     	;# 
  3162  0FE8                     	;# 
  3163  0FE9                     	;# 
  3164  0FEA                     	;# 
  3165  0FEB                     	;# 
  3166  0FED                     	;# 
  3167  0FEE                     	;# 
  3168  0FEF                     	;# 
  3169  0000                     	;# 
  3170  0001                     	;# 
  3171  0002                     	;# 
  3172  0003                     	;# 
  3173  0004                     	;# 
  3174  0005                     	;# 
  3175  0006                     	;# 
  3176  0007                     	;# 
  3177  0008                     	;# 
  3178  0009                     	;# 
  3179  000A                     	;# 
  3180  000B                     	;# 
  3181  000C                     	;# 
  3182  000D                     	;# 
  3183  000E                     	;# 
  3184  0010                     	;# 
  3185  0011                     	;# 
  3186  0012                     	;# 
  3187  0013                     	;# 
  3188  0016                     	;# 
  3189  0017                     	;# 
  3190  0018                     	;# 
  3191  001C                     	;# 
  3192  001C                     	;# 
  3193  001D                     	;# 
  3194  001D                     	;# 
  3195  001E                     	;# 
  3196  001F                     	;# 
  3197  008C                     	;# 
  3198  008C                     	;# 
  3199  008D                     	;# 
  3200  008E                     	;# 
  3201  008E                     	;# 
  3202  008F                     	;# 
  3203  0090                     	;# 
  3204  0090                     	;# 
  3205  0091                     	;# 
  3206  0093                     	;# 
  3207  0094                     	;# 
  3208  0095                     	;# 
  3209  0096                     	;# 
  3210  0097                     	;# 
  3211  0098                     	;# 
  3212  0099                     	;# 
  3213  009A                     	;# 
  3214  009B                     	;# 
  3215  009C                     	;# 
  3216  009D                     	;# 
  3217  009E                     	;# 
  3218  010C                     	;# 
  3219  010D                     	;# 
  3220  010E                     	;# 
  3221  010E                     	;# 
  3222  010F                     	;# 
  3223  0110                     	;# 
  3224  0110                     	;# 
  3225  0111                     	;# 
  3226  0112                     	;# 
  3227  0112                     	;# 
  3228  0113                     	;# 
  3229  0114                     	;# 
  3230  0114                     	;# 
  3231  0115                     	;# 
  3232  0116                     	;# 
  3233  0116                     	;# 
  3234  0117                     	;# 
  3235  0119                     	;# 
  3236  0119                     	;# 
  3237  0119                     	;# 
  3238  011A                     	;# 
  3239  011A                     	;# 
  3240  011A                     	;# 
  3241  011B                     	;# 
  3242  011B                     	;# 
  3243  011B                     	;# 
  3244  011B                     	;# 
  3245  011B                     	;# 
  3246  011C                     	;# 
  3247  011C                     	;# 
  3248  011C                     	;# 
  3249  011D                     	;# 
  3250  011D                     	;# 
  3251  011D                     	;# 
  3252  011E                     	;# 
  3253  011E                     	;# 
  3254  011E                     	;# 
  3255  011F                     	;# 
  3256  011F                     	;# 
  3257  011F                     	;# 
  3258  011F                     	;# 
  3259  011F                     	;# 
  3260  018C                     	;# 
  3261  018D                     	;# 
  3262  018E                     	;# 
  3263  018F                     	;# 
  3264  0190                     	;# 
  3265  0191                     	;# 
  3266  0192                     	;# 
  3267  0196                     	;# 
  3268  0197                     	;# 
  3269  0198                     	;# 
  3270  0199                     	;# 
  3271  019A                     	;# 
  3272  019B                     	;# 
  3273  019C                     	;# 
  3274  020C                     	;# 
  3275  020C                     	;# 
  3276  020D                     	;# 
  3277  020E                     	;# 
  3278  020F                     	;# 
  3279  020F                     	;# 
  3280  0210                     	;# 
  3281  0210                     	;# 
  3282  0211                     	;# 
  3283  0211                     	;# 
  3284  0212                     	;# 
  3285  0212                     	;# 
  3286  0213                     	;# 
  3287  0214                     	;# 
  3288  0215                     	;# 
  3289  0215                     	;# 
  3290  0216                     	;# 
  3291  0216                     	;# 
  3292  0217                     	;# 
  3293  0217                     	;# 
  3294  0218                     	;# 
  3295  0218                     	;# 
  3296  0219                     	;# 
  3297  021A                     	;# 
  3298  021B                     	;# 
  3299  021B                     	;# 
  3300  021C                     	;# 
  3301  021C                     	;# 
  3302  021D                     	;# 
  3303  021D                     	;# 
  3304  021E                     	;# 
  3305  021F                     	;# 
  3306  028C                     	;# 
  3307  028C                     	;# 
  3308  028D                     	;# 
  3309  028D                     	;# 
  3310  028E                     	;# 
  3311  028F                     	;# 
  3312  0290                     	;# 
  3313  0290                     	;# 
  3314  0291                     	;# 
  3315  0292                     	;# 
  3316  0292                     	;# 
  3317  0293                     	;# 
  3318  0293                     	;# 
  3319  0294                     	;# 
  3320  0295                     	;# 
  3321  0296                     	;# 
  3322  0296                     	;# 
  3323  0297                     	;# 
  3324  0298                     	;# 
  3325  0298                     	;# 
  3326  0299                     	;# 
  3327  0299                     	;# 
  3328  029A                     	;# 
  3329  029B                     	;# 
  3330  029C                     	;# 
  3331  029C                     	;# 
  3332  029D                     	;# 
  3333  030C                     	;# 
  3334  030C                     	;# 
  3335  030D                     	;# 
  3336  030E                     	;# 
  3337  030F                     	;# 
  3338  0310                     	;# 
  3339  0310                     	;# 
  3340  0311                     	;# 
  3341  0312                     	;# 
  3342  0313                     	;# 
  3343  0314                     	;# 
  3344  0314                     	;# 
  3345  0315                     	;# 
  3346  0316                     	;# 
  3347  0317                     	;# 
  3348  0318                     	;# 
  3349  0318                     	;# 
  3350  0319                     	;# 
  3351  031A                     	;# 
  3352  031B                     	;# 
  3353  031C                     	;# 
  3354  031C                     	;# 
  3355  031D                     	;# 
  3356  031E                     	;# 
  3357  031F                     	;# 
  3358  038C                     	;# 
  3359  038C                     	;# 
  3360  038D                     	;# 
  3361  038E                     	;# 
  3362  0390                     	;# 
  3363  0390                     	;# 
  3364  0391                     	;# 
  3365  0392                     	;# 
  3366  040C                     	;# 
  3367  040D                     	;# 
  3368  040E                     	;# 
  3369  040F                     	;# 
  3370  0410                     	;# 
  3371  0411                     	;# 
  3372  0416                     	;# 
  3373  0416                     	;# 
  3374  0417                     	;# 
  3375  0418                     	;# 
  3376  0418                     	;# 
  3377  0419                     	;# 
  3378  041A                     	;# 
  3379  041A                     	;# 
  3380  041B                     	;# 
  3381  041C                     	;# 
  3382  041C                     	;# 
  3383  041D                     	;# 
  3384  041E                     	;# 
  3385  041F                     	;# 
  3386  048C                     	;# 
  3387  048C                     	;# 
  3388  048D                     	;# 
  3389  048E                     	;# 
  3390  048F                     	;# 
  3391  048F                     	;# 
  3392  0490                     	;# 
  3393  0491                     	;# 
  3394  0492                     	;# 
  3395  0492                     	;# 
  3396  0493                     	;# 
  3397  0494                     	;# 
  3398  0495                     	;# 
  3399  0495                     	;# 
  3400  0496                     	;# 
  3401  0497                     	;# 
  3402  0498                     	;# 
  3403  0499                     	;# 
  3404  049A                     	;# 
  3405  049B                     	;# 
  3406  049C                     	;# 
  3407  049D                     	;# 
  3408  050C                     	;# 
  3409  050C                     	;# 
  3410  050D                     	;# 
  3411  050E                     	;# 
  3412  050F                     	;# 
  3413  050F                     	;# 
  3414  0510                     	;# 
  3415  0511                     	;# 
  3416  0512                     	;# 
  3417  0512                     	;# 
  3418  0513                     	;# 
  3419  0514                     	;# 
  3420  0515                     	;# 
  3421  0515                     	;# 
  3422  0516                     	;# 
  3423  0517                     	;# 
  3424  0518                     	;# 
  3425  0519                     	;# 
  3426  051A                     	;# 
  3427  051B                     	;# 
  3428  051C                     	;# 
  3429  051D                     	;# 
  3430  058C                     	;# 
  3431  058C                     	;# 
  3432  058D                     	;# 
  3433  058E                     	;# 
  3434  058F                     	;# 
  3435  058F                     	;# 
  3436  0590                     	;# 
  3437  0591                     	;# 
  3438  0592                     	;# 
  3439  0593                     	;# 
  3440  060C                     	;# 
  3441  060D                     	;# 
  3442  060E                     	;# 
  3443  060F                     	;# 
  3444  0610                     	;# 
  3445  0611                     	;# 
  3446  0612                     	;# 
  3447  0613                     	;# 
  3448  0614                     	;# 
  3449  0616                     	;# 
  3450  0617                     	;# 
  3451  0618                     	;# 
  3452  0619                     	;# 
  3453  061A                     	;# 
  3454  061B                     	;# 
  3455  061C                     	;# 
  3456  061D                     	;# 
  3457  061E                     	;# 
  3458  068C                     	;# 
  3459  068D                     	;# 
  3460  068E                     	;# 
  3461  068F                     	;# 
  3462  0690                     	;# 
  3463  0691                     	;# 
  3464  0692                     	;# 
  3465  0693                     	;# 
  3466  0694                     	;# 
  3467  070C                     	;# 
  3468  070D                     	;# 
  3469  070E                     	;# 
  3470  070F                     	;# 
  3471  0710                     	;# 
  3472  0711                     	;# 
  3473  0712                     	;# 
  3474  0713                     	;# 
  3475  0714                     	;# 
  3476  0716                     	;# 
  3477  0717                     	;# 
  3478  0718                     	;# 
  3479  0719                     	;# 
  3480  071A                     	;# 
  3481  071B                     	;# 
  3482  071C                     	;# 
  3483  071D                     	;# 
  3484  071E                     	;# 
  3485  0796                     	;# 
  3486  0797                     	;# 
  3487  0798                     	;# 
  3488  0799                     	;# 
  3489  079A                     	;# 
  3490  079B                     	;# 
  3491  080C                     	;# 
  3492  080D                     	;# 
  3493  080E                     	;# 
  3494  080F                     	;# 
  3495  0810                     	;# 
  3496  0811                     	;# 
  3497  0812                     	;# 
  3498  0813                     	;# 
  3499  0814                     	;# 
  3500  081A                     	;# 
  3501  081B                     	;# 
  3502  081C                     	;# 
  3503  081D                     	;# 
  3504  081E                     	;# 
  3505  081F                     	;# 
  3506  088C                     	;# 
  3507  088D                     	;# 
  3508  088E                     	;# 
  3509  088F                     	;# 
  3510  0890                     	;# 
  3511  0891                     	;# 
  3512  0892                     	;# 
  3513  0893                     	;# 
  3514  0895                     	;# 
  3515  0896                     	;# 
  3516  0897                     	;# 
  3517  0898                     	;# 
  3518  0899                     	;# 
  3519  089A                     	;# 
  3520  089B                     	;# 
  3521  090C                     	;# 
  3522  090E                     	;# 
  3523  090F                     	;# 
  3524  091F                     	;# 
  3525  091F                     	;# 
  3526  098F                     	;# 
  3527  098F                     	;# 
  3528  0990                     	;# 
  3529  0991                     	;# 
  3530  0992                     	;# 
  3531  0993                     	;# 
  3532  0994                     	;# 
  3533  0995                     	;# 
  3534  0996                     	;# 
  3535  0997                     	;# 
  3536  0E0F                     	;# 
  3537  0E10                     	;# 
  3538  0E11                     	;# 
  3539  0E12                     	;# 
  3540  0E13                     	;# 
  3541  0E14                     	;# 
  3542  0E15                     	;# 
  3543  0E16                     	;# 
  3544  0E17                     	;# 
  3545  0E18                     	;# 
  3546  0E19                     	;# 
  3547  0E1A                     	;# 
  3548  0E1B                     	;# 
  3549  0E1C                     	;# 
  3550  0E1D                     	;# 
  3551  0E1E                     	;# 
  3552  0E1F                     	;# 
  3553  0E20                     	;# 
  3554  0E21                     	;# 
  3555  0E22                     	;# 
  3556  0E23                     	;# 
  3557  0E24                     	;# 
  3558  0E25                     	;# 
  3559  0E26                     	;# 
  3560  0E27                     	;# 
  3561  0E28                     	;# 
  3562  0E29                     	;# 
  3563  0E2A                     	;# 
  3564  0E2B                     	;# 
  3565  0E2C                     	;# 
  3566  0E2D                     	;# 
  3567  0E2E                     	;# 
  3568  0E2F                     	;# 
  3569  0E30                     	;# 
  3570  0E31                     	;# 
  3571  0E32                     	;# 
  3572  0E33                     	;# 
  3573  0E34                     	;# 
  3574  0E35                     	;# 
  3575  0E36                     	;# 
  3576  0E37                     	;# 
  3577  0E8F                     	;# 
  3578  0E90                     	;# 
  3579  0E91                     	;# 
  3580  0E92                     	;# 
  3581  0E93                     	;# 
  3582  0E94                     	;# 
  3583  0E95                     	;# 
  3584  0E96                     	;# 
  3585  0E97                     	;# 
  3586  0E9C                     	;# 
  3587  0E9D                     	;# 
  3588  0E9E                     	;# 
  3589  0EA1                     	;# 
  3590  0EA2                     	;# 
  3591  0EA3                     	;# 
  3592  0EA4                     	;# 
  3593  0EA5                     	;# 
  3594  0EA9                     	;# 
  3595  0EAA                     	;# 
  3596  0EAB                     	;# 
  3597  0EAC                     	;# 
  3598  0EB1                     	;# 
  3599  0EB2                     	;# 
  3600  0EB3                     	;# 
  3601  0EB8                     	;# 
  3602  0EB9                     	;# 
  3603  0EBA                     	;# 
  3604  0EBB                     	;# 
  3605  0EBC                     	;# 
  3606  0EBD                     	;# 
  3607  0EBE                     	;# 
  3608  0EC3                     	;# 
  3609  0EC5                     	;# 
  3610  0EC6                     	;# 
  3611  0EC7                     	;# 
  3612  0EC8                     	;# 
  3613  0EC9                     	;# 
  3614  0ECA                     	;# 
  3615  0ECB                     	;# 
  3616  0ECC                     	;# 
  3617  0F10                     	;# 
  3618  0F11                     	;# 
  3619  0F12                     	;# 
  3620  0F13                     	;# 
  3621  0F14                     	;# 
  3622  0F15                     	;# 
  3623  0F16                     	;# 
  3624  0F17                     	;# 
  3625  0F18                     	;# 
  3626  0F19                     	;# 
  3627  0F1A                     	;# 
  3628  0F1B                     	;# 
  3629  0F1C                     	;# 
  3630  0F1D                     	;# 
  3631  0F1E                     	;# 
  3632  0F1F                     	;# 
  3633  0F20                     	;# 
  3634  0F21                     	;# 
  3635  0F22                     	;# 
  3636  0F23                     	;# 
  3637  0F24                     	;# 
  3638  0F25                     	;# 
  3639  0F26                     	;# 
  3640  0F27                     	;# 
  3641  0F38                     	;# 
  3642  0F39                     	;# 
  3643  0F3A                     	;# 
  3644  0F3B                     	;# 
  3645  0F3C                     	;# 
  3646  0F3D                     	;# 
  3647  0F3E                     	;# 
  3648  0F3F                     	;# 
  3649  0F40                     	;# 
  3650  0F41                     	;# 
  3651  0F43                     	;# 
  3652  0F44                     	;# 
  3653  0F45                     	;# 
  3654  0F46                     	;# 
  3655  0F47                     	;# 
  3656  0F48                     	;# 
  3657  0F49                     	;# 
  3658  0F4A                     	;# 
  3659  0F4B                     	;# 
  3660  0F4C                     	;# 
  3661  0F4E                     	;# 
  3662  0F4F                     	;# 
  3663  0F50                     	;# 
  3664  0F51                     	;# 
  3665  0F52                     	;# 
  3666  0F53                     	;# 
  3667  0F54                     	;# 
  3668  0F55                     	;# 
  3669  0F56                     	;# 
  3670  0F57                     	;# 
  3671  0F65                     	;# 
  3672  0F68                     	;# 
  3673  0F69                     	;# 
  3674  0F6A                     	;# 
  3675  0F6B                     	;# 
  3676  0FE4                     	;# 
  3677  0FE5                     	;# 
  3678  0FE6                     	;# 
  3679  0FE7                     	;# 
  3680  0FE8                     	;# 
  3681  0FE9                     	;# 
  3682  0FEA                     	;# 
  3683  0FEB                     	;# 
  3684  0FED                     	;# 
  3685  0FEE                     	;# 
  3686  0FEF                     	;# 
  3687  0000                     	;# 
  3688  0001                     	;# 
  3689  0002                     	;# 
  3690  0003                     	;# 
  3691  0004                     	;# 
  3692  0005                     	;# 
  3693  0006                     	;# 
  3694  0007                     	;# 
  3695  0008                     	;# 
  3696  0009                     	;# 
  3697  000A                     	;# 
  3698  000B                     	;# 
  3699  000C                     	;# 
  3700  000D                     	;# 
  3701  000E                     	;# 
  3702  0010                     	;# 
  3703  0011                     	;# 
  3704  0012                     	;# 
  3705  0013                     	;# 
  3706  0016                     	;# 
  3707  0017                     	;# 
  3708  0018                     	;# 
  3709  001C                     	;# 
  3710  001C                     	;# 
  3711  001D                     	;# 
  3712  001D                     	;# 
  3713  001E                     	;# 
  3714  001F                     	;# 
  3715  008C                     	;# 
  3716  008C                     	;# 
  3717  008D                     	;# 
  3718  008E                     	;# 
  3719  008E                     	;# 
  3720  008F                     	;# 
  3721  0090                     	;# 
  3722  0090                     	;# 
  3723  0091                     	;# 
  3724  0093                     	;# 
  3725  0094                     	;# 
  3726  0095                     	;# 
  3727  0096                     	;# 
  3728  0097                     	;# 
  3729  0098                     	;# 
  3730  0099                     	;# 
  3731  009A                     	;# 
  3732  009B                     	;# 
  3733  009C                     	;# 
  3734  009D                     	;# 
  3735  009E                     	;# 
  3736  010C                     	;# 
  3737  010D                     	;# 
  3738  010E                     	;# 
  3739  010E                     	;# 
  3740  010F                     	;# 
  3741  0110                     	;# 
  3742  0110                     	;# 
  3743  0111                     	;# 
  3744  0112                     	;# 
  3745  0112                     	;# 
  3746  0113                     	;# 
  3747  0114                     	;# 
  3748  0114                     	;# 
  3749  0115                     	;# 
  3750  0116                     	;# 
  3751  0116                     	;# 
  3752  0117                     	;# 
  3753  0119                     	;# 
  3754  0119                     	;# 
  3755  0119                     	;# 
  3756  011A                     	;# 
  3757  011A                     	;# 
  3758  011A                     	;# 
  3759  011B                     	;# 
  3760  011B                     	;# 
  3761  011B                     	;# 
  3762  011B                     	;# 
  3763  011B                     	;# 
  3764  011C                     	;# 
  3765  011C                     	;# 
  3766  011C                     	;# 
  3767  011D                     	;# 
  3768  011D                     	;# 
  3769  011D                     	;# 
  3770  011E                     	;# 
  3771  011E                     	;# 
  3772  011E                     	;# 
  3773  011F                     	;# 
  3774  011F                     	;# 
  3775  011F                     	;# 
  3776  011F                     	;# 
  3777  011F                     	;# 
  3778  018C                     	;# 
  3779  018D                     	;# 
  3780  018E                     	;# 
  3781  018F                     	;# 
  3782  0190                     	;# 
  3783  0191                     	;# 
  3784  0192                     	;# 
  3785  0196                     	;# 
  3786  0197                     	;# 
  3787  0198                     	;# 
  3788  0199                     	;# 
  3789  019A                     	;# 
  3790  019B                     	;# 
  3791  019C                     	;# 
  3792  020C                     	;# 
  3793  020C                     	;# 
  3794  020D                     	;# 
  3795  020E                     	;# 
  3796  020F                     	;# 
  3797  020F                     	;# 
  3798  0210                     	;# 
  3799  0210                     	;# 
  3800  0211                     	;# 
  3801  0211                     	;# 
  3802  0212                     	;# 
  3803  0212                     	;# 
  3804  0213                     	;# 
  3805  0214                     	;# 
  3806  0215                     	;# 
  3807  0215                     	;# 
  3808  0216                     	;# 
  3809  0216                     	;# 
  3810  0217                     	;# 
  3811  0217                     	;# 
  3812  0218                     	;# 
  3813  0218                     	;# 
  3814  0219                     	;# 
  3815  021A                     	;# 
  3816  021B                     	;# 
  3817  021B                     	;# 
  3818  021C                     	;# 
  3819  021C                     	;# 
  3820  021D                     	;# 
  3821  021D                     	;# 
  3822  021E                     	;# 
  3823  021F                     	;# 
  3824  028C                     	;# 
  3825  028C                     	;# 
  3826  028D                     	;# 
  3827  028D                     	;# 
  3828  028E                     	;# 
  3829  028F                     	;# 
  3830  0290                     	;# 
  3831  0290                     	;# 
  3832  0291                     	;# 
  3833  0292                     	;# 
  3834  0292                     	;# 
  3835  0293                     	;# 
  3836  0293                     	;# 
  3837  0294                     	;# 
  3838  0295                     	;# 
  3839  0296                     	;# 
  3840  0296                     	;# 
  3841  0297                     	;# 
  3842  0298                     	;# 
  3843  0298                     	;# 
  3844  0299                     	;# 
  3845  0299                     	;# 
  3846  029A                     	;# 
  3847  029B                     	;# 
  3848  029C                     	;# 
  3849  029C                     	;# 
  3850  029D                     	;# 
  3851  030C                     	;# 
  3852  030C                     	;# 
  3853  030D                     	;# 
  3854  030E                     	;# 
  3855  030F                     	;# 
  3856  0310                     	;# 
  3857  0310                     	;# 
  3858  0311                     	;# 
  3859  0312                     	;# 
  3860  0313                     	;# 
  3861  0314                     	;# 
  3862  0314                     	;# 
  3863  0315                     	;# 
  3864  0316                     	;# 
  3865  0317                     	;# 
  3866  0318                     	;# 
  3867  0318                     	;# 
  3868  0319                     	;# 
  3869  031A                     	;# 
  3870  031B                     	;# 
  3871  031C                     	;# 
  3872  031C                     	;# 
  3873  031D                     	;# 
  3874  031E                     	;# 
  3875  031F                     	;# 
  3876  038C                     	;# 
  3877  038C                     	;# 
  3878  038D                     	;# 
  3879  038E                     	;# 
  3880  0390                     	;# 
  3881  0390                     	;# 
  3882  0391                     	;# 
  3883  0392                     	;# 
  3884  040C                     	;# 
  3885  040D                     	;# 
  3886  040E                     	;# 
  3887  040F                     	;# 
  3888  0410                     	;# 
  3889  0411                     	;# 
  3890  0416                     	;# 
  3891  0416                     	;# 
  3892  0417                     	;# 
  3893  0418                     	;# 
  3894  0418                     	;# 
  3895  0419                     	;# 
  3896  041A                     	;# 
  3897  041A                     	;# 
  3898  041B                     	;# 
  3899  041C                     	;# 
  3900  041C                     	;# 
  3901  041D                     	;# 
  3902  041E                     	;# 
  3903  041F                     	;# 
  3904  048C                     	;# 
  3905  048C                     	;# 
  3906  048D                     	;# 
  3907  048E                     	;# 
  3908  048F                     	;# 
  3909  048F                     	;# 
  3910  0490                     	;# 
  3911  0491                     	;# 
  3912  0492                     	;# 
  3913  0492                     	;# 
  3914  0493                     	;# 
  3915  0494                     	;# 
  3916  0495                     	;# 
  3917  0495                     	;# 
  3918  0496                     	;# 
  3919  0497                     	;# 
  3920  0498                     	;# 
  3921  0499                     	;# 
  3922  049A                     	;# 
  3923  049B                     	;# 
  3924  049C                     	;# 
  3925  049D                     	;# 
  3926  050C                     	;# 
  3927  050C                     	;# 
  3928  050D                     	;# 
  3929  050E                     	;# 
  3930  050F                     	;# 
  3931  050F                     	;# 
  3932  0510                     	;# 
  3933  0511                     	;# 
  3934  0512                     	;# 
  3935  0512                     	;# 
  3936  0513                     	;# 
  3937  0514                     	;# 
  3938  0515                     	;# 
  3939  0515                     	;# 
  3940  0516                     	;# 
  3941  0517                     	;# 
  3942  0518                     	;# 
  3943  0519                     	;# 
  3944  051A                     	;# 
  3945  051B                     	;# 
  3946  051C                     	;# 
  3947  051D                     	;# 
  3948  058C                     	;# 
  3949  058C                     	;# 
  3950  058D                     	;# 
  3951  058E                     	;# 
  3952  058F                     	;# 
  3953  058F                     	;# 
  3954  0590                     	;# 
  3955  0591                     	;# 
  3956  0592                     	;# 
  3957  0593                     	;# 
  3958  060C                     	;# 
  3959  060D                     	;# 
  3960  060E                     	;# 
  3961  060F                     	;# 
  3962  0610                     	;# 
  3963  0611                     	;# 
  3964  0612                     	;# 
  3965  0613                     	;# 
  3966  0614                     	;# 
  3967  0616                     	;# 
  3968  0617                     	;# 
  3969  0618                     	;# 
  3970  0619                     	;# 
  3971  061A                     	;# 
  3972  061B                     	;# 
  3973  061C                     	;# 
  3974  061D                     	;# 
  3975  061E                     	;# 
  3976  068C                     	;# 
  3977  068D                     	;# 
  3978  068E                     	;# 
  3979  068F                     	;# 
  3980  0690                     	;# 
  3981  0691                     	;# 
  3982  0692                     	;# 
  3983  0693                     	;# 
  3984  0694                     	;# 
  3985  070C                     	;# 
  3986  070D                     	;# 
  3987  070E                     	;# 
  3988  070F                     	;# 
  3989  0710                     	;# 
  3990  0711                     	;# 
  3991  0712                     	;# 
  3992  0713                     	;# 
  3993  0714                     	;# 
  3994  0716                     	;# 
  3995  0717                     	;# 
  3996  0718                     	;# 
  3997  0719                     	;# 
  3998  071A                     	;# 
  3999  071B                     	;# 
  4000  071C                     	;# 
  4001  071D                     	;# 
  4002  071E                     	;# 
  4003  0796                     	;# 
  4004  0797                     	;# 
  4005  0798                     	;# 
  4006  0799                     	;# 
  4007  079A                     	;# 
  4008  079B                     	;# 
  4009  080C                     	;# 
  4010  080D                     	;# 
  4011  080E                     	;# 
  4012  080F                     	;# 
  4013  0810                     	;# 
  4014  0811                     	;# 
  4015  0812                     	;# 
  4016  0813                     	;# 
  4017  0814                     	;# 
  4018  081A                     	;# 
  4019  081B                     	;# 
  4020  081C                     	;# 
  4021  081D                     	;# 
  4022  081E                     	;# 
  4023  081F                     	;# 
  4024  088C                     	;# 
  4025  088D                     	;# 
  4026  088E                     	;# 
  4027  088F                     	;# 
  4028  0890                     	;# 
  4029  0891                     	;# 
  4030  0892                     	;# 
  4031  0893                     	;# 
  4032  0895                     	;# 
  4033  0896                     	;# 
  4034  0897                     	;# 
  4035  0898                     	;# 
  4036  0899                     	;# 
  4037  089A                     	;# 
  4038  089B                     	;# 
  4039  090C                     	;# 
  4040  090E                     	;# 
  4041  090F                     	;# 
  4042  091F                     	;# 
  4043  091F                     	;# 
  4044  098F                     	;# 
  4045  098F                     	;# 
  4046  0990                     	;# 
  4047  0991                     	;# 
  4048  0992                     	;# 
  4049  0993                     	;# 
  4050  0994                     	;# 
  4051  0995                     	;# 
  4052  0996                     	;# 
  4053  0997                     	;# 
  4054  0E0F                     	;# 
  4055  0E10                     	;# 
  4056  0E11                     	;# 
  4057  0E12                     	;# 
  4058  0E13                     	;# 
  4059  0E14                     	;# 
  4060  0E15                     	;# 
  4061  0E16                     	;# 
  4062  0E17                     	;# 
  4063  0E18                     	;# 
  4064  0E19                     	;# 
  4065  0E1A                     	;# 
  4066  0E1B                     	;# 
  4067  0E1C                     	;# 
  4068  0E1D                     	;# 
  4069  0E1E                     	;# 
  4070  0E1F                     	;# 
  4071  0E20                     	;# 
  4072  0E21                     	;# 
  4073  0E22                     	;# 
  4074  0E23                     	;# 
  4075  0E24                     	;# 
  4076  0E25                     	;# 
  4077  0E26                     	;# 
  4078  0E27                     	;# 
  4079  0E28                     	;# 
  4080  0E29                     	;# 
  4081  0E2A                     	;# 
  4082  0E2B                     	;# 
  4083  0E2C                     	;# 
  4084  0E2D                     	;# 
  4085  0E2E                     	;# 
  4086  0E2F                     	;# 
  4087  0E30                     	;# 
  4088  0E31                     	;# 
  4089  0E32                     	;# 
  4090  0E33                     	;# 
  4091  0E34                     	;# 
  4092  0E35                     	;# 
  4093  0E36                     	;# 
  4094  0E37                     	;# 
  4095  0E8F                     	;# 
  4096  0E90                     	;# 
  4097  0E91                     	;# 
  4098  0E92                     	;# 
  4099  0E93                     	;# 
  4100  0E94                     	;# 
  4101  0E95                     	;# 
  4102  0E96                     	;# 
  4103  0E97                     	;# 
  4104  0E9C                     	;# 
  4105  0E9D                     	;# 
  4106  0E9E                     	;# 
  4107  0EA1                     	;# 
  4108  0EA2                     	;# 
  4109  0EA3                     	;# 
  4110  0EA4                     	;# 
  4111  0EA5                     	;# 
  4112  0EA9                     	;# 
  4113  0EAA                     	;# 
  4114  0EAB                     	;# 
  4115  0EAC                     	;# 
  4116  0EB1                     	;# 
  4117  0EB2                     	;# 
  4118  0EB3                     	;# 
  4119  0EB8                     	;# 
  4120  0EB9                     	;# 
  4121  0EBA                     	;# 
  4122  0EBB                     	;# 
  4123  0EBC                     	;# 
  4124  0EBD                     	;# 
  4125  0EBE                     	;# 
  4126  0EC3                     	;# 
  4127  0EC5                     	;# 
  4128  0EC6                     	;# 
  4129  0EC7                     	;# 
  4130  0EC8                     	;# 
  4131  0EC9                     	;# 
  4132  0ECA                     	;# 
  4133  0ECB                     	;# 
  4134  0ECC                     	;# 
  4135  0F10                     	;# 
  4136  0F11                     	;# 
  4137  0F12                     	;# 
  4138  0F13                     	;# 
  4139  0F14                     	;# 
  4140  0F15                     	;# 
  4141  0F16                     	;# 
  4142  0F17                     	;# 
  4143  0F18                     	;# 
  4144  0F19                     	;# 
  4145  0F1A                     	;# 
  4146  0F1B                     	;# 
  4147  0F1C                     	;# 
  4148  0F1D                     	;# 
  4149  0F1E                     	;# 
  4150  0F1F                     	;# 
  4151  0F20                     	;# 
  4152  0F21                     	;# 
  4153  0F22                     	;# 
  4154  0F23                     	;# 
  4155  0F24                     	;# 
  4156  0F25                     	;# 
  4157  0F26                     	;# 
  4158  0F27                     	;# 
  4159  0F38                     	;# 
  4160  0F39                     	;# 
  4161  0F3A                     	;# 
  4162  0F3B                     	;# 
  4163  0F3C                     	;# 
  4164  0F3D                     	;# 
  4165  0F3E                     	;# 
  4166  0F3F                     	;# 
  4167  0F40                     	;# 
  4168  0F41                     	;# 
  4169  0F43                     	;# 
  4170  0F44                     	;# 
  4171  0F45                     	;# 
  4172  0F46                     	;# 
  4173  0F47                     	;# 
  4174  0F48                     	;# 
  4175  0F49                     	;# 
  4176  0F4A                     	;# 
  4177  0F4B                     	;# 
  4178  0F4C                     	;# 
  4179  0F4E                     	;# 
  4180  0F4F                     	;# 
  4181  0F50                     	;# 
  4182  0F51                     	;# 
  4183  0F52                     	;# 
  4184  0F53                     	;# 
  4185  0F54                     	;# 
  4186  0F55                     	;# 
  4187  0F56                     	;# 
  4188  0F57                     	;# 
  4189  0F65                     	;# 
  4190  0F68                     	;# 
  4191  0F69                     	;# 
  4192  0F6A                     	;# 
  4193  0F6B                     	;# 
  4194  0FE4                     	;# 
  4195  0FE5                     	;# 
  4196  0FE6                     	;# 
  4197  0FE7                     	;# 
  4198  0FE8                     	;# 
  4199  0FE9                     	;# 
  4200  0FEA                     	;# 
  4201  0FEB                     	;# 
  4202  0FED                     	;# 
  4203  0FEE                     	;# 
  4204  0FEF                     	;# 
  4205  0000                     	;# 
  4206  0001                     	;# 
  4207  0002                     	;# 
  4208  0003                     	;# 
  4209  0004                     	;# 
  4210  0005                     	;# 
  4211  0006                     	;# 
  4212  0007                     	;# 
  4213  0008                     	;# 
  4214  0009                     	;# 
  4215  000A                     	;# 
  4216  000B                     	;# 
  4217  000C                     	;# 
  4218  000D                     	;# 
  4219  000E                     	;# 
  4220  0010                     	;# 
  4221  0011                     	;# 
  4222  0012                     	;# 
  4223  0013                     	;# 
  4224  0016                     	;# 
  4225  0017                     	;# 
  4226  0018                     	;# 
  4227  001C                     	;# 
  4228  001C                     	;# 
  4229  001D                     	;# 
  4230  001D                     	;# 
  4231  001E                     	;# 
  4232  001F                     	;# 
  4233  008C                     	;# 
  4234  008C                     	;# 
  4235  008D                     	;# 
  4236  008E                     	;# 
  4237  008E                     	;# 
  4238  008F                     	;# 
  4239  0090                     	;# 
  4240  0090                     	;# 
  4241  0091                     	;# 
  4242  0093                     	;# 
  4243  0094                     	;# 
  4244  0095                     	;# 
  4245  0096                     	;# 
  4246  0097                     	;# 
  4247  0098                     	;# 
  4248  0099                     	;# 
  4249  009A                     	;# 
  4250  009B                     	;# 
  4251  009C                     	;# 
  4252  009D                     	;# 
  4253  009E                     	;# 
  4254  010C                     	;# 
  4255  010D                     	;# 
  4256  010E                     	;# 
  4257  010E                     	;# 
  4258  010F                     	;# 
  4259  0110                     	;# 
  4260  0110                     	;# 
  4261  0111                     	;# 
  4262  0112                     	;# 
  4263  0112                     	;# 
  4264  0113                     	;# 
  4265  0114                     	;# 
  4266  0114                     	;# 
  4267  0115                     	;# 
  4268  0116                     	;# 
  4269  0116                     	;# 
  4270  0117                     	;# 
  4271  0119                     	;# 
  4272  0119                     	;# 
  4273  0119                     	;# 
  4274  011A                     	;# 
  4275  011A                     	;# 
  4276  011A                     	;# 
  4277  011B                     	;# 
  4278  011B                     	;# 
  4279  011B                     	;# 
  4280  011B                     	;# 
  4281  011B                     	;# 
  4282  011C                     	;# 
  4283  011C                     	;# 
  4284  011C                     	;# 
  4285  011D                     	;# 
  4286  011D                     	;# 
  4287  011D                     	;# 
  4288  011E                     	;# 
  4289  011E                     	;# 
  4290  011E                     	;# 
  4291  011F                     	;# 
  4292  011F                     	;# 
  4293  011F                     	;# 
  4294  011F                     	;# 
  4295  011F                     	;# 
  4296  018C                     	;# 
  4297  018D                     	;# 
  4298  018E                     	;# 
  4299  018F                     	;# 
  4300  0190                     	;# 
  4301  0191                     	;# 
  4302  0192                     	;# 
  4303  0196                     	;# 
  4304  0197                     	;# 
  4305  0198                     	;# 
  4306  0199                     	;# 
  4307  019A                     	;# 
  4308  019B                     	;# 
  4309  019C                     	;# 
  4310  020C                     	;# 
  4311  020C                     	;# 
  4312  020D                     	;# 
  4313  020E                     	;# 
  4314  020F                     	;# 
  4315  020F                     	;# 
  4316  0210                     	;# 
  4317  0210                     	;# 
  4318  0211                     	;# 
  4319  0211                     	;# 
  4320  0212                     	;# 
  4321  0212                     	;# 
  4322  0213                     	;# 
  4323  0214                     	;# 
  4324  0215                     	;# 
  4325  0215                     	;# 
  4326  0216                     	;# 
  4327  0216                     	;# 
  4328  0217                     	;# 
  4329  0217                     	;# 
  4330  0218                     	;# 
  4331  0218                     	;# 
  4332  0219                     	;# 
  4333  021A                     	;# 
  4334  021B                     	;# 
  4335  021B                     	;# 
  4336  021C                     	;# 
  4337  021C                     	;# 
  4338  021D                     	;# 
  4339  021D                     	;# 
  4340  021E                     	;# 
  4341  021F                     	;# 
  4342  028C                     	;# 
  4343  028C                     	;# 
  4344  028D                     	;# 
  4345  028D                     	;# 
  4346  028E                     	;# 
  4347  028F                     	;# 
  4348  0290                     	;# 
  4349  0290                     	;# 
  4350  0291                     	;# 
  4351  0292                     	;# 
  4352  0292                     	;# 
  4353  0293                     	;# 
  4354  0293                     	;# 
  4355  0294                     	;# 
  4356  0295                     	;# 
  4357  0296                     	;# 
  4358  0296                     	;# 
  4359  0297                     	;# 
  4360  0298                     	;# 
  4361  0298                     	;# 
  4362  0299                     	;# 
  4363  0299                     	;# 
  4364  029A                     	;# 
  4365  029B                     	;# 
  4366  029C                     	;# 
  4367  029C                     	;# 
  4368  029D                     	;# 
  4369  030C                     	;# 
  4370  030C                     	;# 
  4371  030D                     	;# 
  4372  030E                     	;# 
  4373  030F                     	;# 
  4374  0310                     	;# 
  4375  0310                     	;# 
  4376  0311                     	;# 
  4377  0312                     	;# 
  4378  0313                     	;# 
  4379  0314                     	;# 
  4380  0314                     	;# 
  4381  0315                     	;# 
  4382  0316                     	;# 
  4383  0317                     	;# 
  4384  0318                     	;# 
  4385  0318                     	;# 
  4386  0319                     	;# 
  4387  031A                     	;# 
  4388  031B                     	;# 
  4389  031C                     	;# 
  4390  031C                     	;# 
  4391  031D                     	;# 
  4392  031E                     	;# 
  4393  031F                     	;# 
  4394  038C                     	;# 
  4395  038C                     	;# 
  4396  038D                     	;# 
  4397  038E                     	;# 
  4398  0390                     	;# 
  4399  0390                     	;# 
  4400  0391                     	;# 
  4401  0392                     	;# 
  4402  040C                     	;# 
  4403  040D                     	;# 
  4404  040E                     	;# 
  4405  040F                     	;# 
  4406  0410                     	;# 
  4407  0411                     	;# 
  4408  0416                     	;# 
  4409  0416                     	;# 
  4410  0417                     	;# 
  4411  0418                     	;# 
  4412  0418                     	;# 
  4413  0419                     	;# 
  4414  041A                     	;# 
  4415  041A                     	;# 
  4416  041B                     	;# 
  4417  041C                     	;# 
  4418  041C                     	;# 
  4419  041D                     	;# 
  4420  041E                     	;# 
  4421  041F                     	;# 
  4422  048C                     	;# 
  4423  048C                     	;# 
  4424  048D                     	;# 
  4425  048E                     	;# 
  4426  048F                     	;# 
  4427  048F                     	;# 
  4428  0490                     	;# 
  4429  0491                     	;# 
  4430  0492                     	;# 
  4431  0492                     	;# 
  4432  0493                     	;# 
  4433  0494                     	;# 
  4434  0495                     	;# 
  4435  0495                     	;# 
  4436  0496                     	;# 
  4437  0497                     	;# 
  4438  0498                     	;# 
  4439  0499                     	;# 
  4440  049A                     	;# 
  4441  049B                     	;# 
  4442  049C                     	;# 
  4443  049D                     	;# 
  4444  050C                     	;# 
  4445  050C                     	;# 
  4446  050D                     	;# 
  4447  050E                     	;# 
  4448  050F                     	;# 
  4449  050F                     	;# 
  4450  0510                     	;# 
  4451  0511                     	;# 
  4452  0512                     	;# 
  4453  0512                     	;# 
  4454  0513                     	;# 
  4455  0514                     	;# 
  4456  0515                     	;# 
  4457  0515                     	;# 
  4458  0516                     	;# 
  4459  0517                     	;# 
  4460  0518                     	;# 
  4461  0519                     	;# 
  4462  051A                     	;# 
  4463  051B                     	;# 
  4464  051C                     	;# 
  4465  051D                     	;# 
  4466  058C                     	;# 
  4467  058C                     	;# 
  4468  058D                     	;# 
  4469  058E                     	;# 
  4470  058F                     	;# 
  4471  058F                     	;# 
  4472  0590                     	;# 
  4473  0591                     	;# 
  4474  0592                     	;# 
  4475  0593                     	;# 
  4476  060C                     	;# 
  4477  060D                     	;# 
  4478  060E                     	;# 
  4479  060F                     	;# 
  4480  0610                     	;# 
  4481  0611                     	;# 
  4482  0612                     	;# 
  4483  0613                     	;# 
  4484  0614                     	;# 
  4485  0616                     	;# 
  4486  0617                     	;# 
  4487  0618                     	;# 
  4488  0619                     	;# 
  4489  061A                     	;# 
  4490  061B                     	;# 
  4491  061C                     	;# 
  4492  061D                     	;# 
  4493  061E                     	;# 
  4494  068C                     	;# 
  4495  068D                     	;# 
  4496  068E                     	;# 
  4497  068F                     	;# 
  4498  0690                     	;# 
  4499  0691                     	;# 
  4500  0692                     	;# 
  4501  0693                     	;# 
  4502  0694                     	;# 
  4503  070C                     	;# 
  4504  070D                     	;# 
  4505  070E                     	;# 
  4506  070F                     	;# 
  4507  0710                     	;# 
  4508  0711                     	;# 
  4509  0712                     	;# 
  4510  0713                     	;# 
  4511  0714                     	;# 
  4512  0716                     	;# 
  4513  0717                     	;# 
  4514  0718                     	;# 
  4515  0719                     	;# 
  4516  071A                     	;# 
  4517  071B                     	;# 
  4518  071C                     	;# 
  4519  071D                     	;# 
  4520  071E                     	;# 
  4521  0796                     	;# 
  4522  0797                     	;# 
  4523  0798                     	;# 
  4524  0799                     	;# 
  4525  079A                     	;# 
  4526  079B                     	;# 
  4527  080C                     	;# 
  4528  080D                     	;# 
  4529  080E                     	;# 
  4530  080F                     	;# 
  4531  0810                     	;# 
  4532  0811                     	;# 
  4533  0812                     	;# 
  4534  0813                     	;# 
  4535  0814                     	;# 
  4536  081A                     	;# 
  4537  081B                     	;# 
  4538  081C                     	;# 
  4539  081D                     	;# 
  4540  081E                     	;# 
  4541  081F                     	;# 
  4542  088C                     	;# 
  4543  088D                     	;# 
  4544  088E                     	;# 
  4545  088F                     	;# 
  4546  0890                     	;# 
  4547  0891                     	;# 
  4548  0892                     	;# 
  4549  0893                     	;# 
  4550  0895                     	;# 
  4551  0896                     	;# 
  4552  0897                     	;# 
  4553  0898                     	;# 
  4554  0899                     	;# 
  4555  089A                     	;# 
  4556  089B                     	;# 
  4557  090C                     	;# 
  4558  090E                     	;# 
  4559  090F                     	;# 
  4560  091F                     	;# 
  4561  091F                     	;# 
  4562  098F                     	;# 
  4563  098F                     	;# 
  4564  0990                     	;# 
  4565  0991                     	;# 
  4566  0992                     	;# 
  4567  0993                     	;# 
  4568  0994                     	;# 
  4569  0995                     	;# 
  4570  0996                     	;# 
  4571  0997                     	;# 
  4572  0E0F                     	;# 
  4573  0E10                     	;# 
  4574  0E11                     	;# 
  4575  0E12                     	;# 
  4576  0E13                     	;# 
  4577  0E14                     	;# 
  4578  0E15                     	;# 
  4579  0E16                     	;# 
  4580  0E17                     	;# 
  4581  0E18                     	;# 
  4582  0E19                     	;# 
  4583  0E1A                     	;# 
  4584  0E1B                     	;# 
  4585  0E1C                     	;# 
  4586  0E1D                     	;# 
  4587  0E1E                     	;# 
  4588  0E1F                     	;# 
  4589  0E20                     	;# 
  4590  0E21                     	;# 
  4591  0E22                     	;# 
  4592  0E23                     	;# 
  4593  0E24                     	;# 
  4594  0E25                     	;# 
  4595  0E26                     	;# 
  4596  0E27                     	;# 
  4597  0E28                     	;# 
  4598  0E29                     	;# 
  4599  0E2A                     	;# 
  4600  0E2B                     	;# 
  4601  0E2C                     	;# 
  4602  0E2D                     	;# 
  4603  0E2E                     	;# 
  4604  0E2F                     	;# 
  4605  0E30                     	;# 
  4606  0E31                     	;# 
  4607  0E32                     	;# 
  4608  0E33                     	;# 
  4609  0E34                     	;# 
  4610  0E35                     	;# 
  4611  0E36                     	;# 
  4612  0E37                     	;# 
  4613  0E8F                     	;# 
  4614  0E90                     	;# 
  4615  0E91                     	;# 
  4616  0E92                     	;# 
  4617  0E93                     	;# 
  4618  0E94                     	;# 
  4619  0E95                     	;# 
  4620  0E96                     	;# 
  4621  0E97                     	;# 
  4622  0E9C                     	;# 
  4623  0E9D                     	;# 
  4624  0E9E                     	;# 
  4625  0EA1                     	;# 
  4626  0EA2                     	;# 
  4627  0EA3                     	;# 
  4628  0EA4                     	;# 
  4629  0EA5                     	;# 
  4630  0EA9                     	;# 
  4631  0EAA                     	;# 
  4632  0EAB                     	;# 
  4633  0EAC                     	;# 
  4634  0EB1                     	;# 
  4635  0EB2                     	;# 
  4636  0EB3                     	;# 
  4637  0EB8                     	;# 
  4638  0EB9                     	;# 
  4639  0EBA                     	;# 
  4640  0EBB                     	;# 
  4641  0EBC                     	;# 
  4642  0EBD                     	;# 
  4643  0EBE                     	;# 
  4644  0EC3                     	;# 
  4645  0EC5                     	;# 
  4646  0EC6                     	;# 
  4647  0EC7                     	;# 
  4648  0EC8                     	;# 
  4649  0EC9                     	;# 
  4650  0ECA                     	;# 
  4651  0ECB                     	;# 
  4652  0ECC                     	;# 
  4653  0F10                     	;# 
  4654  0F11                     	;# 
  4655  0F12                     	;# 
  4656  0F13                     	;# 
  4657  0F14                     	;# 
  4658  0F15                     	;# 
  4659  0F16                     	;# 
  4660  0F17                     	;# 
  4661  0F18                     	;# 
  4662  0F19                     	;# 
  4663  0F1A                     	;# 
  4664  0F1B                     	;# 
  4665  0F1C                     	;# 
  4666  0F1D                     	;# 
  4667  0F1E                     	;# 
  4668  0F1F                     	;# 
  4669  0F20                     	;# 
  4670  0F21                     	;# 
  4671  0F22                     	;# 
  4672  0F23                     	;# 
  4673  0F24                     	;# 
  4674  0F25                     	;# 
  4675  0F26                     	;# 
  4676  0F27                     	;# 
  4677  0F38                     	;# 
  4678  0F39                     	;# 
  4679  0F3A                     	;# 
  4680  0F3B                     	;# 
  4681  0F3C                     	;# 
  4682  0F3D                     	;# 
  4683  0F3E                     	;# 
  4684  0F3F                     	;# 
  4685  0F40                     	;# 
  4686  0F41                     	;# 
  4687  0F43                     	;# 
  4688  0F44                     	;# 
  4689  0F45                     	;# 
  4690  0F46                     	;# 
  4691  0F47                     	;# 
  4692  0F48                     	;# 
  4693  0F49                     	;# 
  4694  0F4A                     	;# 
  4695  0F4B                     	;# 
  4696  0F4C                     	;# 
  4697  0F4E                     	;# 
  4698  0F4F                     	;# 
  4699  0F50                     	;# 
  4700  0F51                     	;# 
  4701  0F52                     	;# 
  4702  0F53                     	;# 
  4703  0F54                     	;# 
  4704  0F55                     	;# 
  4705  0F56                     	;# 
  4706  0F57                     	;# 
  4707  0F65                     	;# 
  4708  0F68                     	;# 
  4709  0F69                     	;# 
  4710  0F6A                     	;# 
  4711  0F6B                     	;# 
  4712  0FE4                     	;# 
  4713  0FE5                     	;# 
  4714  0FE6                     	;# 
  4715  0FE7                     	;# 
  4716  0FE8                     	;# 
  4717  0FE9                     	;# 
  4718  0FEA                     	;# 
  4719  0FEB                     	;# 
  4720  0FED                     	;# 
  4721  0FEE                     	;# 
  4722  0FEF                     	;# 
  4723                           
  4724                           	psect	stringtext1
  4725  1000                     __pstringtext1:
  4726  1000                     _LCD_INIT_STRING:
  4727  1000  3428               	retlw	40
  4728  1001  340C               	retlw	12
  4729  1002  3401               	retlw	1
  4730  1003  3406               	retlw	6
  4731  1004                     __end_of_LCD_INIT_STRING:
  4732  000B                     _INTCON	set	11
  4733  000D                     _PORTBbits	set	13
  4734  0016                     _LATAbits	set	22
  4735  0013                     _TRISCbits	set	19
  4736  0013                     _TRISC	set	19
  4737  0012                     _TRISB	set	18
  4738  000D                     _PORTB	set	13
  4739  0017                     _LATB	set	23
  4740  0011                     _TRISA	set	17
  4741  000C                     _PORTA	set	12
  4742  0016                     _LATA	set	22
  4743  009B                     _ADCAP	set	155
  4744  009E                     _ADPCH	set	158
  4745  009A                     _ADREF	set	154
  4746  0098                     _ADCLK	set	152
  4747  0095                     _ADCON2	set	149
  4748  0094                     _ADCON1	set	148
  4749  0093                     _ADCON0	set	147
  4750  011A                     _TXREG	set	282
  4751  011C                     _SP1BRGH	set	284
  4752  011B                     _SP1BRGL	set	283
  4753  011E                     _TX1STA	set	286
  4754  011D                     _RC1STA	set	285
  4755  011F                     _BAUD1CON	set	287
  4756  018C                     _SSP1BUF	set	396
  4757  0191                     _SSP1CON2bits	set	401
  4758  018D                     _SSP1ADD	set	397
  4759  0192                     _SSP1CON3	set	402
  4760  0190                     _SSP1CON1	set	400
  4761  018F                     _SSP1STAT	set	399
  4762  070C                     _PIR0bits	set	1804
  4763  0716                     _PIE0	set	1814
  4764  070F                     _PIR3bits	set	1807
  4765  070F                     _PIR3	set	1807
  4766  0E90                     _INTPPS	set	3728
  4767  0EC6                     _SSP1DATPPS	set	3782
  4768  0EC5                     _SSP1CLKPPS	set	3781
  4769  0ECB                     _RXPPS	set	3787
  4770  0F44                     _WPUB	set	3908
  4771  0F24                     _RC4PPS	set	3876
  4772  0F23                     _RC3PPS	set	3875
  4773  0F4E                     _ANSELCbits	set	3918
  4774  0F20                     _RC0PPS	set	3872
  4775  0F4E                     _ANSELC	set	3918
  4776  0F43                     _ANSELB	set	3907
  4777  0F38                     _ANSELA	set	3896
  4778  1004                     STR_6:
  4779  1004  3474               	retlw	116	;'t'
  4780  1005  3465               	retlw	101	;'e'
  4781  1006  3463               	retlw	99	;'c'
  4782  1007  346C               	retlw	108	;'l'
  4783  1008  3461               	retlw	97	;'a'
  4784  1009  3420               	retlw	32	;' '
  4785  100A  3470               	retlw	112	;'p'
  4786  100B  3472               	retlw	114	;'r'
  4787  100C  3465               	retlw	101	;'e'
  4788  100D  3473               	retlw	115	;'s'
  4789  100E  3469               	retlw	105	;'i'
  4790  100F  346F               	retlw	111	;'o'
  4791  1010  346E               	retlw	110	;'n'
  4792  1011  3461               	retlw	97	;'a'
  4793  1012  3464               	retlw	100	;'d'
  4794  1013  3461               	retlw	97	;'a'
  4795  1014  3420               	retlw	32	;' '
  4796  1015  3425               	retlw	37	;'%'
  4797  1016  3463               	retlw	99	;'c'
  4798  1017  340A               	retlw	10
  4799  1018  340A               	retlw	10
  4800  1019  3400               	retlw	0
  4801                           
  4802                           	psect	stringtext2
  4803  101A                     __pstringtext2:
  4804  101A                     STR_1:
  4805  101A  340C               	retlw	12
  4806  101B  3468               	retlw	104	;'h'
  4807  101C  346F               	retlw	111	;'o'
  4808  101D  346C               	retlw	108	;'l'
  4809  101E  3461               	retlw	97	;'a'
  4810  101F  3420               	retlw	32	;' '
  4811  1020  346D               	retlw	109	;'m'
  4812  1021  3475               	retlw	117	;'u'
  4813  1022  346E               	retlw	110	;'n'
  4814  1023  3464               	retlw	100	;'d'
  4815  1024  346F               	retlw	111	;'o'
  4816  1025  340A               	retlw	10
  4817  1026  3425               	retlw	37	;'%'
  4818  1027  3469               	retlw	105	;'i'
  4819  1028  3400               	retlw	0
  4820                           
  4821                           	psect	stringtext3
  4822  1029                     __pstringtext3:
  4823  1029                     STR_2:
  4824  1029  3448               	retlw	72	;'H'
  4825  102A  346F               	retlw	111	;'o'
  4826  102B  346C               	retlw	108	;'l'
  4827  102C  3461               	retlw	97	;'a'
  4828  102D  3461               	retlw	97	;'a'
  4829  102E  3461               	retlw	97	;'a'
  4830  102F  340A               	retlw	10
  4831  1030  340A               	retlw	10
  4832  1031  3400               	retlw	0
  4833                           
  4834                           	psect	stringtext4
  4835  1032                     __pstringtext4:
  4836  1032                     STR_5:
  4837  1032  340C               	retlw	12
  4838  1033  3425               	retlw	37	;'%'
  4839  1034  3464               	retlw	100	;'d'
  4840  1035  342E               	retlw	46	;'.'
  4841  1036  3425               	retlw	37	;'%'
  4842  1037  3464               	retlw	100	;'d'
  4843  1038  340A               	retlw	10
  4844  1039  3400               	retlw	0
  4845                           
  4846                           	psect	stringtext5
  4847  0000                     __pstringtext5:
  4848  1036                     
  4849                           	psect	cinit
  4850  0010                     start_initialization:	
  4851                           ; #config settings
  4852                           
  4853  0010                     __initialization:
  4854                           
  4855                           ; Clear objects allocated to BANK0
  4856  0010  0020               	movlb	0	; select bank0
  4857  0011  30A0               	movlw	low __pbssBANK1
  4858  0012  01EC               	clrf	__pbssBANK0& (0+127)
  4859  0013  01ED               	clrf	(__pbssBANK0+1)& (0+127)
  4860  0014  01EE               	clrf	(__pbssBANK0+2)& (0+127)
  4861  0015  01EF               	clrf	(__pbssBANK0+3)& (0+127)
  4862                           
  4863                           ; Clear objects allocated to BANK1
  4864  0016  0084               	movwf	4
  4865  0017  3000               	movlw	high __pbssBANK1
  4866  0018  0085               	movwf	5
  4867  0019  302A               	movlw	42
  4868  001A  3187  2777  3180   	fcall	clear_ram0
  4869                           
  4870                           ; Clear objects allocated to BANK2
  4871  001D  3020               	movlw	low __pbssBANK2
  4872  001E  0084               	movwf	4
  4873  001F  3001               	movlw	high __pbssBANK2
  4874  0020  0085               	movwf	5
  4875  0021  3032               	movlw	50
  4876  0022  3187  2777  3180   	fcall	clear_ram0
  4877  0025                     end_of_initialization:	
  4878                           ;End of C runtime variable initialization code
  4879                           
  4880  0025                     __end_of__initialization:
  4881  0025  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4882  0026  0020               	movlb	0
  4883  0027  2828               	ljmp	l2736	;jump to C main() function
  4884  0028                     __pmaintext:	
  4885 ;;
  4886 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4887 ;;
  4888 ;; *************** function _main *****************
  4889 ;; Defined at:
  4890 ;;		line 40 in file "Main.c"
  4891 ;; Parameters:    Size  Location     Type
  4892 ;;		None
  4893 ;; Auto vars:     Size  Location     Type
  4894 ;;		None
  4895 ;; Return value:  Size  Location     Type
  4896 ;;                  1    wreg      void 
  4897 ;; Registers used:
  4898 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4899 ;; Tracked objects:
  4900 ;;		On entry : B1F/0
  4901 ;;		On exit  : 0/0
  4902 ;;		Unchanged: 0/0
  4903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4906 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4907 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4908 ;;Total ram usage:        2 bytes
  4909 ;; Hardware stack levels required when called: 10
  4910 ;; This function calls:
  4911 ;;		_EMC1001_read
  4912 ;;		_I2C_init
  4913 ;;		_adc_init
  4914 ;;		_enable_interrupt
  4915 ;;		_lcd_init
  4916 ;;		_lcd_puts
  4917 ;;		_port_init
  4918 ;;		_printf
  4919 ;;		_serial_init
  4920 ;;		_sprintf
  4921 ;;		_teclado_get
  4922 ;;		_teclado_init
  4923 ;; This function is called by:
  4924 ;;		Startup code after reset
  4925 ;; This function uses a non-reentrant model
  4926 ;;
  4927                           
  4928                           
  4929                           ;psect for function _main
  4930  0028                     _main:
  4931  0028                     l2736:	
  4932                           ;incstack = 0
  4933                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4934                           
  4935                           
  4936                           ;Main.c: 43:     port_init();
  4937  0028  223A  3180         	fcall	_port_init
  4938                           
  4939                           ;Main.c: 44:     serial_init(9600);
  4940  002A  3000               	movlw	0
  4941  002B  00A3               	movwf	serial_init@baudios+3
  4942  002C  00A2               	movwf	serial_init@baudios+2
  4943  002D  3025               	movlw	37
  4944  002E  00A1               	movwf	serial_init@baudios+1
  4945  002F  3080               	movlw	128
  4946  0030  00A0               	movwf	serial_init@baudios
  4947  0031  225B  3180         	fcall	_serial_init
  4948                           
  4949                           ;Main.c: 45:     adc_init();
  4950  0033  20B0  3180         	fcall	_adc_init
  4951                           
  4952                           ;Main.c: 46:     I2C_init();
  4953  0035  2096  3180         	fcall	_I2C_init
  4954                           
  4955                           ;Main.c: 47:     teclado_init();
  4956  0037  231D  3180         	fcall	_teclado_init
  4957                           
  4958                           ;Main.c: 49:     enable_interrupt();
  4959  0039  20C5  3180         	fcall	_enable_interrupt
  4960                           
  4961                           ;Main.c: 52:     lcd_init();
  4962  003B  20D9  3180         	fcall	_lcd_init
  4963                           
  4964                           ;Main.c: 53:     sprintf(buffer,"\fhola mundo\n%i",contador);
  4965  003D  301A               	movlw	low (STR_1| (0+32768))
  4966  003E  0020               	movlb	0	; select bank0
  4967  003F  00E3               	movwf	sprintf@fmt
  4968  0040  3090               	movlw	high (STR_1| (0+32768))
  4969  0041  00E4               	movwf	sprintf@fmt+1
  4970  0042  3020               	movlw	(low (_buffer| (0+256)))& (0+255)
  4971  0043  01E5               	clrf	?_sprintf+2
  4972  0044  01E6               	clrf	?_sprintf+3
  4973  0045  22D7  3180         	fcall	_sprintf
  4974                           
  4975                           ;Main.c: 54:     lcd_puts(buffer);
  4976  0047  3020               	movlw	(low (_buffer| (0+256)))& (0+255)
  4977  0048  21BE  3180         	fcall	_lcd_puts
  4978                           
  4979                           ;Main.c: 57:     printf("Holaaa\n\n");
  4980  004A  3029               	movlw	low (STR_2| (0+32768))
  4981  004B  00E3               	movwf	printf@fmt
  4982  004C  3090               	movlw	high (STR_2| (0+32768))
  4983  004D  00E4               	movwf	printf@fmt+1
  4984  004E  208C  3180         	fcall	_printf
  4985                           
  4986                           ;Main.c: 58:     _delay((unsigned long)((10)*(32000000UL/4000.0)));
  4987  0050  3068               	movlw	104
  4988  0051  0020               	movlb	0	; select bank0
  4989  0052  00EA               	movwf	??_main
  4990  0053  30E4               	movlw	228
  4991  0054                     u2357:
  4992  0054  0B89               	decfsz	9,f
  4993  0055  2854               	goto	u2357
  4994  0056  0BEA               	decfsz	??_main,f
  4995  0057  2854               	goto	u2357
  4996  0058  0000               	nop
  4997  0059                     l2748:
  4998                           
  4999                           ;Main.c: 61:     {;Main.c: 72:         if(counts != countsAnterior){
  5000  0059  0020               	movlb	0	; select bank0
  5001  005A  086E               	movf	_counts,w
  5002  005B  0021               	movlb	1	; select bank1
  5003  005C  0628               	xorwf	_countsAnterior^(0+128),w
  5004  005D  1903               	skipnz
  5005  005E  286D               	goto	l2754
  5006                           
  5007                           ;Main.c: 73:             countsAnterior = counts;
  5008  005F  0020               	movlb	0	; select bank0
  5009  0060  086E               	movf	_counts,w
  5010  0061  0021               	movlb	1	; select bank1
  5011  0062  00A8               	movwf	_countsAnterior^(0+128)
  5012                           
  5013                           ;Main.c: 74:             printf("%d\n",counts);
  5014  0063  3036               	movlw	low ((STR_5+4)| (0+32768))
  5015  0064  0020               	movlb	0	; select bank0
  5016  0065  00E3               	movwf	printf@fmt
  5017  0066  3090               	movlw	high ((STR_5+4)| (0+32768))
  5018  0067  00E4               	movwf	printf@fmt+1
  5019  0068  086E               	movf	_counts,w
  5020  0069  00E5               	movwf	?_printf+2
  5021  006A  01E6               	clrf	?_printf+3
  5022  006B  208C  3180         	fcall	_printf
  5023  006D                     l2754:
  5024                           
  5025                           ;Main.c: 77:         LATA = LATA & ~(1<<3);
  5026  006D  0020               	movlb	0	; select bank0
  5027  006E  1196               	bcf	22,3	;volatile
  5028                           
  5029                           ;Main.c: 78:         _delay((unsigned long)((50)*(32000000UL/4000.0)));
  5030  006F  3003               	movlw	3
  5031  0070  0020               	movlb	0	; select bank0
  5032  0071  00EB               	movwf	??_main+1
  5033  0072  3008               	movlw	8
  5034  0073  00EA               	movwf	??_main
  5035  0074  3077               	movlw	119
  5036  0075                     u2367:
  5037  0075  0B89               	decfsz	9,f
  5038  0076  2875               	goto	u2367
  5039  0077  0BEA               	decfsz	??_main,f
  5040  0078  2875               	goto	u2367
  5041  0079  0BEB               	decfsz	??_main+1,f
  5042  007A  2875               	goto	u2367
  5043                           
  5044                           ;Main.c: 79:         LATA = LATA | (1<<3);
  5045  007B  0020               	movlb	0	; select bank0
  5046  007C  0816               	movf	22,w	;volatile
  5047  007D  3808               	iorlw	8
  5048  007E  0096               	movwf	22	;volatile
  5049                           
  5050                           ;Main.c: 80:         _delay((unsigned long)((50)*(32000000UL/4000.0)));
  5051  007F  3003               	movlw	3
  5052  0080  0020               	movlb	0	; select bank0
  5053  0081  00EB               	movwf	??_main+1
  5054  0082  3008               	movlw	8
  5055  0083  00EA               	movwf	??_main
  5056  0084  3077               	movlw	119
  5057  0085                     u2377:
  5058  0085  0B89               	decfsz	9,f
  5059  0086  2885               	goto	u2377
  5060  0087  0BEA               	decfsz	??_main,f
  5061  0088  2885               	goto	u2377
  5062  0089  0BEB               	decfsz	??_main+1,f
  5063  008A  2885               	goto	u2377
  5064  008B  2859               	goto	l2748
  5065  008C                     __end_of_main:
  5066  008C                     __ptext6:	
  5067 ;; *************** function _printf *****************
  5068 ;; Defined at:
  5069 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  5070 ;; Parameters:    Size  Location     Type
  5071 ;;  fmt             2   67[BANK0 ] PTR const unsigned char 
  5072 ;;		 -> STR_6(22), STR_3(4), STR_2(9), buffer(50), 
  5073 ;; Auto vars:     Size  Location     Type
  5074 ;;  ret             2    0        int 
  5075 ;;  ap              1   71[BANK0 ] PTR void [1]
  5076 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5077 ;; Return value:  Size  Location     Type
  5078 ;;                  2   67[BANK0 ] int 
  5079 ;; Registers used:
  5080 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5081 ;; Tracked objects:
  5082 ;;		On entry : 1F/0
  5083 ;;		On exit  : 1F/0
  5084 ;;		Unchanged: 0/0
  5085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5086 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5087 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5089 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5090 ;;Total ram usage:        5 bytes
  5091 ;; Hardware stack levels used: 1
  5092 ;; Hardware stack levels required when called: 9
  5093 ;; This function calls:
  5094 ;;		_vfprintf
  5095 ;; This function is called by:
  5096 ;;		_main
  5097 ;; This function uses a non-reentrant model
  5098 ;;
  5099                           
  5100                           
  5101                           ;psect for function _printf
  5102  008C                     _printf:
  5103                           
  5104                           ;incstack = 0
  5105                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5106  008C  3065               	movlw	(low ((?_printf| 0+2)))& (0+255)
  5107  008D  00E7               	movwf	printf@ap
  5108  008E  0864               	movf	printf@fmt+1,w
  5109  008F  00DD               	movwf	vfprintf@fmt+1
  5110  0090  0863               	movf	printf@fmt,w
  5111  0091  00DC               	movwf	vfprintf@fmt
  5112  0092  3067               	movlw	(low (printf@ap| 0))& (0+255)
  5113  0093  00DE               	movwf	vfprintf@ap
  5114  0094  3000               	movlw	0
  5115  0095  2AF4               	ljmp	_vfprintf
  5116  0096                     __end_of_printf:
  5117  0096                     __ptext29:	
  5118 ;; *************** function _I2C_init *****************
  5119 ;; Defined at:
  5120 ;;		line 4 in file "I2C.c"
  5121 ;; Parameters:    Size  Location     Type
  5122 ;;		None
  5123 ;; Auto vars:     Size  Location     Type
  5124 ;;		None
  5125 ;; Return value:  Size  Location     Type
  5126 ;;                  1    wreg      void 
  5127 ;; Registers used:
  5128 ;;		wreg, status,2
  5129 ;; Tracked objects:
  5130 ;;		On entry : B1F/1
  5131 ;;		On exit  : B1F/3
  5132 ;;		Unchanged: B00/0
  5133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5138 ;;Total ram usage:        0 bytes
  5139 ;; Hardware stack levels used: 1
  5140 ;; Hardware stack levels required when called: 1
  5141 ;; This function calls:
  5142 ;;		Nothing
  5143 ;; This function is called by:
  5144 ;;		_main
  5145 ;; This function uses a non-reentrant model
  5146 ;;
  5147                           
  5148                           
  5149                           ;psect for function _I2C_init
  5150  0096                     _I2C_init:
  5151                           
  5152                           ;I2C.c: 6:     TRISCbits.TRISC3 = 1;
  5153                           
  5154                           ;incstack = 0
  5155                           ; Regs used in _I2C_init: [wreg+status,2]
  5156  0096  0020               	movlb	0	; select bank0
  5157  0097  1593               	bsf	19,3	;volatile
  5158                           
  5159                           ;I2C.c: 7:     TRISCbits.TRISC4 = 1;
  5160  0098  1613               	bsf	19,4	;volatile
  5161                           
  5162                           ;I2C.c: 8:     ANSELCbits.ANSC3 = 0;
  5163  0099  003E               	movlb	30	; select bank30
  5164  009A  11CE               	bcf	78,3	;volatile
  5165                           
  5166                           ;I2C.c: 9:     ANSELCbits.ANSC4 = 0;
  5167  009B  124E               	bcf	78,4	;volatile
  5168                           
  5169                           ;I2C.c: 10:     SSP1CLKPPS = 0x14;
  5170  009C  3014               	movlw	20
  5171  009D  003D               	movlb	29	; select bank29
  5172  009E  00C5               	movwf	69	;volatile
  5173                           
  5174                           ;I2C.c: 11:     RC3PPS = 0x15;
  5175  009F  3015               	movlw	21
  5176  00A0  003E               	movlb	30	; select bank30
  5177  00A1  00A3               	movwf	35	;volatile
  5178                           
  5179                           ;I2C.c: 12:     RC4PPS = 0x14;
  5180  00A2  3014               	movlw	20
  5181  00A3  00A4               	movwf	36	;volatile
  5182                           
  5183                           ;I2C.c: 13:     SSP1DATPPS = 0x13;
  5184  00A4  3013               	movlw	19
  5185  00A5  003D               	movlb	29	; select bank29
  5186  00A6  00C6               	movwf	70	;volatile
  5187                           
  5188                           ;I2C.c: 15:     SSP1STAT = 0b10000000;
  5189  00A7  3080               	movlw	128
  5190  00A8  0023               	movlb	3	; select bank3
  5191  00A9  008F               	movwf	15	;volatile
  5192                           
  5193                           ;I2C.c: 16:  SSP1CON1 = 0b00101000;
  5194  00AA  3028               	movlw	40
  5195  00AB  0090               	movwf	16	;volatile
  5196                           
  5197                           ;I2C.c: 17:  SSP1CON3 = 0x00;
  5198  00AC  0192               	clrf	18	;volatile
  5199                           
  5200                           ;I2C.c: 18:  SSP1ADD = ((32000000UL/(4UL*100000UL))-1);
  5201  00AD  304F               	movlw	79
  5202  00AE  008D               	movwf	13	;volatile
  5203  00AF  0008               	return
  5204  00B0                     __end_of_I2C_init:
  5205  00B0                     __ptext28:	
  5206 ;; *************** function _adc_init *****************
  5207 ;; Defined at:
  5208 ;;		line 3 in file "adc.c"
  5209 ;; Parameters:    Size  Location     Type
  5210 ;;		None
  5211 ;; Auto vars:     Size  Location     Type
  5212 ;;		None
  5213 ;; Return value:  Size  Location     Type
  5214 ;;                  1    wreg      void 
  5215 ;; Registers used:
  5216 ;;		wreg, status,2, status,0
  5217 ;; Tracked objects:
  5218 ;;		On entry : B1F/1D
  5219 ;;		On exit  : B1F/1
  5220 ;;		Unchanged: B00/0
  5221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5226 ;;Total ram usage:        0 bytes
  5227 ;; Hardware stack levels used: 1
  5228 ;; Hardware stack levels required when called: 1
  5229 ;; This function calls:
  5230 ;;		Nothing
  5231 ;; This function is called by:
  5232 ;;		_main
  5233 ;; This function uses a non-reentrant model
  5234 ;;
  5235                           
  5236                           
  5237                           ;psect for function _adc_init
  5238  00B0                     _adc_init:
  5239                           
  5240                           ;adc.c: 4:     ADCON0 = ADCON0 & ~(1<<7 | 1<<4 );
  5241                           
  5242                           ;incstack = 0
  5243                           ; Regs used in _adc_init: [wreg+status,2+status,0]
  5244  00B0  306F               	movlw	111
  5245  00B1  0021               	movlb	1	; select bank1
  5246  00B2  0593               	andwf	19,f	;volatile
  5247                           
  5248                           ;adc.c: 5:     ADCON0 = ADCON0 |(1<<2);
  5249  00B3  0813               	movf	19,w	;volatile
  5250  00B4  3804               	iorlw	4
  5251  00B5  0093               	movwf	19	;volatile
  5252                           
  5253                           ;adc.c: 6:     ADCON1 = ADCON1 |(1<<7);
  5254  00B6  0814               	movf	20,w	;volatile
  5255  00B7  3880               	iorlw	128
  5256  00B8  0094               	movwf	20	;volatile
  5257                           
  5258                           ;adc.c: 7:     ADCON2 = ADCON2 & ~(7<<0 );
  5259  00B9  30F8               	movlw	248
  5260  00BA  0595               	andwf	21,f	;volatile
  5261                           
  5262                           ;adc.c: 17:     ADCLK = ADCLK |(16<<0);
  5263  00BB  0818               	movf	24,w	;volatile
  5264  00BC  3810               	iorlw	16
  5265  00BD  0098               	movwf	24	;volatile
  5266                           
  5267                           ;adc.c: 19:     ADREF = ADREF & ~(1<<4 );
  5268  00BE  121A               	bcf	26,4	;volatile
  5269                           
  5270                           ;adc.c: 20:     ADREF = ADREF & ~(3<<0 );
  5271  00BF  30FC               	movlw	252
  5272  00C0  059A               	andwf	26,f	;volatile
  5273                           
  5274                           ;adc.c: 23:     ADPCH = 4;
  5275  00C1  3004               	movlw	4
  5276  00C2  009E               	movwf	30	;volatile
  5277                           
  5278                           ;adc.c: 24:     ADCAP = 0;
  5279  00C3  019B               	clrf	27	;volatile
  5280  00C4  0008               	return
  5281  00C5                     __end_of_adc_init:
  5282  00C5                     __ptext27:	
  5283 ;; *************** function _enable_interrupt *****************
  5284 ;; Defined at:
  5285 ;;		line 3 in file "interrupt.c"
  5286 ;; Parameters:    Size  Location     Type
  5287 ;;		None
  5288 ;; Auto vars:     Size  Location     Type
  5289 ;;		None
  5290 ;; Return value:  Size  Location     Type
  5291 ;;                  1    wreg      void 
  5292 ;; Registers used:
  5293 ;;		wreg
  5294 ;; Tracked objects:
  5295 ;;		On entry : B1F/1E
  5296 ;;		On exit  : B1F/1D
  5297 ;;		Unchanged: B00/0
  5298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5303 ;;Total ram usage:        0 bytes
  5304 ;; Hardware stack levels used: 1
  5305 ;; Hardware stack levels required when called: 1
  5306 ;; This function calls:
  5307 ;;		Nothing
  5308 ;; This function is called by:
  5309 ;;		_main
  5310 ;; This function uses a non-reentrant model
  5311 ;;
  5312                           
  5313                           
  5314                           ;psect for function _enable_interrupt
  5315  00C5                     _enable_interrupt:
  5316                           
  5317                           ;interrupt.c: 4:     INTCON = 0b10000000;
  5318                           
  5319                           ;incstack = 0
  5320                           ; Regs used in _enable_interrupt: [wreg]
  5321  00C5  3080               	movlw	128
  5322  00C6  008B               	movwf	11	;volatile
  5323                           
  5324                           ;interrupt.c: 5:     PIE0 = 0b00000001;
  5325  00C7  3001               	movlw	1
  5326  00C8  002E               	movlb	14	; select bank14
  5327  00C9  0096               	movwf	22	;volatile
  5328                           
  5329                           ;interrupt.c: 7:     INTPPS = 0x05;
  5330  00CA  3005               	movlw	5
  5331  00CB  003D               	movlb	29	; select bank29
  5332  00CC  0090               	movwf	16	;volatile
  5333  00CD  0008               	return
  5334  00CE                     __end_of_enable_interrupt:
  5335  00CE                     __ptext26:	
  5336 ;; *************** function _Write_PCF *****************
  5337 ;; Defined at:
  5338 ;;		line 3 in file "LCD_i2c.c"
  5339 ;; Parameters:    Size  Location     Type
  5340 ;;  dato            1    wreg     unsigned char 
  5341 ;; Auto vars:     Size  Location     Type
  5342 ;;  dato            1    1[COMMON] unsigned char 
  5343 ;; Return value:  Size  Location     Type
  5344 ;;                  1    wreg      void 
  5345 ;; Registers used:
  5346 ;;		wreg, status,2, status,0, pclath, cstack
  5347 ;; Tracked objects:
  5348 ;;		On entry : 0/3
  5349 ;;		On exit  : 1F/3
  5350 ;;		Unchanged: 0/0
  5351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5353 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5355 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5356 ;;Total ram usage:        1 bytes
  5357 ;; Hardware stack levels used: 1
  5358 ;; Hardware stack levels required when called: 2
  5359 ;; This function calls:
  5360 ;;		_I2C_start
  5361 ;;		_I2C_stop
  5362 ;;		_I2C_write
  5363 ;; This function is called by:
  5364 ;;		_Send_D7_D4
  5365 ;; This function uses a non-reentrant model
  5366 ;;
  5367                           
  5368                           
  5369                           ;psect for function _Write_PCF
  5370  00CE                     _Write_PCF:
  5371                           
  5372                           ;incstack = 0
  5373                           ; Regs used in _Write_PCF: [wreg+status,2+status,0+pclath+cstack]
  5374                           ;Write_PCF@dato stored from wreg
  5375  00CE  00F1               	movwf	Write_PCF@dato
  5376                           
  5377                           ;LCD_i2c.c: 7:        I2C_start();
  5378  00CF  218A  3180         	fcall	_I2C_start
  5379                           
  5380                           ;LCD_i2c.c: 8:        I2C_write(64|(7<<1));
  5381  00D1  304E               	movlw	78
  5382  00D2  2167  3180         	fcall	_I2C_write
  5383                           
  5384                           ;LCD_i2c.c: 9:        I2C_write(dato|8 );
  5385  00D4  0871               	movf	Write_PCF@dato,w
  5386  00D5  3808               	iorlw	8
  5387  00D6  2167  3180         	fcall	_I2C_write
  5388                           
  5389                           ;LCD_i2c.c: 10:        I2C_stop();
  5390  00D8  298F               	ljmp	l2044
  5391  00D9                     __end_of_Write_PCF:
  5392  00D9                     __ptext23:	
  5393 ;; *************** function _lcd_init *****************
  5394 ;; Defined at:
  5395 ;;		line 39 in file "LCD_i2c.c"
  5396 ;; Parameters:    Size  Location     Type
  5397 ;;		None
  5398 ;; Auto vars:     Size  Location     Type
  5399 ;;  i               1    9[COMMON] unsigned char 
  5400 ;; Return value:  Size  Location     Type
  5401 ;;                  1    wreg      void 
  5402 ;; Registers used:
  5403 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5404 ;; Tracked objects:
  5405 ;;		On entry : B1F/1D
  5406 ;;		On exit  : 1F/1
  5407 ;;		Unchanged: 0/0
  5408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5410 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5411 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5412 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5413 ;;Total ram usage:        3 bytes
  5414 ;; Hardware stack levels used: 1
  5415 ;; Hardware stack levels required when called: 5
  5416 ;; This function calls:
  5417 ;;		_I2C_start
  5418 ;;		_I2C_stop
  5419 ;;		_I2C_write
  5420 ;;		_Send_D7_D4
  5421 ;;		_lcd_send_byte
  5422 ;; This function is called by:
  5423 ;;		_main
  5424 ;; This function uses a non-reentrant model
  5425 ;;
  5426                           
  5427                           
  5428                           ;psect for function _lcd_init
  5429  00D9                     _lcd_init:
  5430                           
  5431                           ;LCD_i2c.c: 40:    int8 i;;LCD_i2c.c: 45:         I2C_start();
  5432                           
  5433                           ;incstack = 0
  5434                           ; Regs used in _lcd_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5435  00D9  218A  3180         	fcall	_I2C_start
  5436                           
  5437                           ;LCD_i2c.c: 46:         I2C_write(64|(7<<1));
  5438  00DB  304E               	movlw	78
  5439  00DC  2167  3180         	fcall	_I2C_write
  5440                           
  5441                           ;LCD_i2c.c: 47:         I2C_write(0x00);
  5442  00DE  3000               	movlw	0
  5443  00DF  2167  3180         	fcall	_I2C_write
  5444                           
  5445                           ;LCD_i2c.c: 48:         I2C_stop();
  5446  00E1  218F  3180         	fcall	_I2C_stop
  5447                           
  5448                           ;LCD_i2c.c: 51:    _delay((unsigned long)((35)*(32000000UL/4000.0)));
  5449  00E3  3002               	movlw	2
  5450  00E4  00F8               	movwf	??_lcd_init+1
  5451  00E5  306C               	movlw	108
  5452  00E6  00F7               	movwf	??_lcd_init
  5453  00E7  30A0               	movlw	160
  5454  00E8                     u2587:
  5455  00E8  0B89               	decfsz	9,f
  5456  00E9  28E8               	goto	u2587
  5457  00EA  0BF7               	decfsz	??_lcd_init,f
  5458  00EB  28E8               	goto	u2587
  5459  00EC  0BF8               	decfsz	??_lcd_init+1,f
  5460  00ED  28E8               	goto	u2587
  5461                           
  5462                           ;LCD_i2c.c: 53:    for(i=0 ;i < 3; i++){
  5463  00EE  01F9               	clrf	lcd_init@i
  5464  00EF                     l2520:
  5465                           
  5466                           ;LCD_i2c.c: 54:       Send_D7_D4(0,0x03);
  5467  00EF  3003               	movlw	3
  5468  00F0  00F2               	movwf	Send_D7_D4@nibble
  5469  00F1  3000               	movlw	0
  5470  00F2  2194  3180         	fcall	_Send_D7_D4
  5471                           
  5472                           ;LCD_i2c.c: 55:       _delay((unsigned long)((5)*(32000000UL/4000.0)));
  5473  00F4  3034               	movlw	52
  5474  00F5  00F7               	movwf	??_lcd_init
  5475  00F6  30F2               	movlw	242
  5476  00F7                     u2597:
  5477  00F7  0B89               	decfsz	9,f
  5478  00F8  28F7               	goto	u2597
  5479  00F9  0BF7               	decfsz	??_lcd_init,f
  5480  00FA  28F7               	goto	u2597
  5481  00FB  3003               	movlw	3
  5482                           
  5483                           ;LCD_i2c.c: 56:    }
  5484  00FC  0AF9               	incf	lcd_init@i,f
  5485  00FD  0279               	subwf	lcd_init@i,w
  5486  00FE  1C03               	skipc
  5487  00FF  28EF               	goto	l2520
  5488                           
  5489                           ;LCD_i2c.c: 57:     Send_D7_D4(0,0x02);
  5490  0100  3002               	movlw	2
  5491  0101  00F2               	movwf	Send_D7_D4@nibble
  5492  0102  3000               	movlw	0
  5493  0103  2194  3180         	fcall	_Send_D7_D4
  5494                           
  5495                           ;LCD_i2c.c: 70:    for(i=0; i < sizeof(LCD_INIT_STRING); i++)
  5496  0105  01F9               	clrf	lcd_init@i
  5497  0106                     l2536:
  5498                           
  5499                           ;LCD_i2c.c: 71:    {;LCD_i2c.c: 72:       lcd_send_byte(0, LCD_INIT_STRING[i]);
  5500  0106  0879               	movf	lcd_init@i,w
  5501  0107  3E00               	addlw	low (_LCD_INIT_STRING| (0+32768))
  5502  0108  0084               	movwf	4
  5503  0109  3090               	movlw	high (_LCD_INIT_STRING| (0+32768))
  5504  010A  1803               	skipnc
  5505  010B  3E01               	addlw	1
  5506  010C  0085               	movwf	5
  5507  010D  0800               	movf	0,w	;code access
  5508  010E  00F5               	movwf	lcd_send_byte@n
  5509  010F  3000               	movlw	0
  5510  0110  21FF  3180         	fcall	_lcd_send_byte
  5511                           
  5512                           ;LCD_i2c.c: 73:       _delay((unsigned long)((5)*(32000000UL/4000.0)));
  5513  0112  3034               	movlw	52
  5514  0113  00F7               	movwf	??_lcd_init
  5515  0114  30F2               	movlw	242
  5516  0115                     u2607:
  5517  0115  0B89               	decfsz	9,f
  5518  0116  2915               	goto	u2607
  5519  0117  0BF7               	decfsz	??_lcd_init,f
  5520  0118  2915               	goto	u2607
  5521  0119  3004               	movlw	4
  5522                           
  5523                           ;LCD_i2c.c: 74:    }
  5524  011A  0AF9               	incf	lcd_init@i,f
  5525  011B  0279               	subwf	lcd_init@i,w
  5526  011C  1C03               	skipc
  5527  011D  2906               	goto	l2536
  5528                           
  5529                           ;LCD_i2c.c: 76:    g_LcdY = 0;
  5530  011E  0021               	movlb	1	; select bank1
  5531  011F  01A7               	clrf	_g_LcdY^(0+128)
  5532  0120  0008               	return
  5533  0121                     __end_of_lcd_init:
  5534  0121                     __ptext30:	
  5535 ;; *************** function _EMC1001_read *****************
  5536 ;; Defined at:
  5537 ;;		line 12 in file "EMC1001.c"
  5538 ;; Parameters:    Size  Location     Type
  5539 ;;  TH              1    wreg     PTR char 
  5540 ;;		 -> high_byte(1), 
  5541 ;;  TL              1    3[COMMON] PTR unsigned char 
  5542 ;;		 -> low_byte(1), 
  5543 ;; Auto vars:     Size  Location     Type
  5544 ;;  TH              1    4[COMMON] PTR char 
  5545 ;;		 -> high_byte(1), 
  5546 ;; Return value:  Size  Location     Type
  5547 ;;                  1    wreg      void 
  5548 ;; Registers used:
  5549 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5550 ;; Tracked objects:
  5551 ;;		On entry : 0/0
  5552 ;;		On exit  : 1F/3
  5553 ;;		Unchanged: 0/0
  5554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5555 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5556 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5558 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5559 ;;Total ram usage:        2 bytes
  5560 ;; Hardware stack levels used: 1
  5561 ;; Hardware stack levels required when called: 2
  5562 ;; This function calls:
  5563 ;;		_I2C_ack
  5564 ;;		_I2C_read
  5565 ;;		_I2C_restart
  5566 ;;		_I2C_start
  5567 ;;		_I2C_stop
  5568 ;;		_I2C_write
  5569 ;;		___bmul
  5570 ;; This function is called by:
  5571 ;;		_main
  5572 ;; This function uses a non-reentrant model
  5573 ;;
  5574                           
  5575                           
  5576                           ;psect for function _EMC1001_read
  5577  0121                     _EMC1001_read:
  5578                           
  5579                           ;incstack = 0
  5580                           ; Regs used in _EMC1001_read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5581                           ;EMC1001_read@TH stored from wreg
  5582  0121  00F4               	movwf	EMC1001_read@TH
  5583                           
  5584                           ;EMC1001.c: 13:     I2C_start();
  5585  0122  218A  3180         	fcall	_I2C_start
  5586                           
  5587                           ;EMC1001.c: 14:     I2C_write(0b01110000);
  5588  0124  3070               	movlw	112
  5589  0125  2167  3180         	fcall	_I2C_write
  5590                           
  5591                           ;EMC1001.c: 15:     I2C_write(0);
  5592  0127  3000               	movlw	0
  5593  0128  2167  3180         	fcall	_I2C_write
  5594                           
  5595                           ;EMC1001.c: 16:     I2C_restart();
  5596  012A  2186  3180         	fcall	_I2C_restart
  5597                           
  5598                           ;EMC1001.c: 17:     I2C_write(0b01110000|0x01);
  5599  012C  3071               	movlw	113
  5600  012D  2167  3180         	fcall	_I2C_write
  5601                           
  5602                           ;EMC1001.c: 18:     *TH = I2C_read();
  5603  012F  0874               	movf	EMC1001_read@TH,w
  5604  0130  0086               	movwf	6
  5605  0131  0187               	clrf	7
  5606  0132  217C  3180         	fcall	_I2C_read
  5607  0134  0081               	movwf	1
  5608                           
  5609                           ;EMC1001.c: 19:     I2C_ack();
  5610  0135  2173  3180         	fcall	_I2C_ack
  5611                           
  5612                           ;EMC1001.c: 20:     I2C_stop();
  5613  0137  218F  3180         	fcall	_I2C_stop
  5614                           
  5615                           ;EMC1001.c: 22:     _delay((unsigned long)((10)*(32000000UL/4000000.0)));
  5616  0139  301A               	movlw	26
  5617  013A                     u2637:
  5618  013A  0B89               	decfsz	9,f
  5619  013B  293A               	goto	u2637
  5620  013C  3200               	nop2
  5621                           
  5622                           ;EMC1001.c: 24:     I2C_start();
  5623  013D  218A  3180         	fcall	_I2C_start
  5624                           
  5625                           ;EMC1001.c: 25:     I2C_write(0b01110000);
  5626  013F  3070               	movlw	112
  5627  0140  2167  3180         	fcall	_I2C_write
  5628                           
  5629                           ;EMC1001.c: 26:     I2C_write(2);
  5630  0142  3002               	movlw	2
  5631  0143  2167  3180         	fcall	_I2C_write
  5632                           
  5633                           ;EMC1001.c: 27:     I2C_restart();
  5634  0145  2186  3180         	fcall	_I2C_restart
  5635                           
  5636                           ;EMC1001.c: 28:     I2C_write(0b01110000|0x01);
  5637  0147  3071               	movlw	113
  5638  0148  2167  3180         	fcall	_I2C_write
  5639                           
  5640                           ;EMC1001.c: 29:     *TL = I2C_read();
  5641  014A  0873               	movf	EMC1001_read@TL,w
  5642  014B  0086               	movwf	6
  5643  014C  0187               	clrf	7
  5644  014D  217C  3180         	fcall	_I2C_read
  5645  014F  0081               	movwf	1
  5646                           
  5647                           ;EMC1001.c: 30:     I2C_ack();
  5648  0150  2173  3180         	fcall	_I2C_ack
  5649                           
  5650                           ;EMC1001.c: 31:     I2C_stop();
  5651  0152  218F  3180         	fcall	_I2C_stop
  5652                           
  5653                           ;EMC1001.c: 32:     *TL>>=6;
  5654  0154  0873               	movf	EMC1001_read@TL,w
  5655  0155  0086               	movwf	6
  5656  0156  3003               	movlw	3
  5657  0157  0187               	clrf	7
  5658  0158  0E81               	swapf	1,f
  5659  0159  0C81               	rrf	1,f
  5660  015A  0C81               	rrf	1,f
  5661  015B  0581               	andwf	1,f
  5662                           
  5663                           ;EMC1001.c: 33:     *TL*=25;
  5664  015C  0873               	movf	EMC1001_read@TL,w
  5665  015D  0086               	movwf	6
  5666  015E  0873               	movf	EMC1001_read@TL,w
  5667  015F  0084               	movwf	4
  5668  0160  0185               	clrf	5
  5669  0161  0800               	movf	0,w
  5670  0162  00F0               	movwf	___bmul@multiplicand
  5671  0163  3019               	movlw	25
  5672  0164  2328               	fcall	___bmul
  5673  0165  0081               	movwf	1
  5674  0166  0008               	return
  5675  0167                     __end_of_EMC1001_read:
  5676  0167                     __ptext32:	
  5677 ;; *************** function _I2C_write *****************
  5678 ;; Defined at:
  5679 ;;		line 63 in file "I2C.c"
  5680 ;; Parameters:    Size  Location     Type
  5681 ;;  I2C_data        1    wreg     unsigned char 
  5682 ;; Auto vars:     Size  Location     Type
  5683 ;;  I2C_data        1    0[COMMON] unsigned char 
  5684 ;; Return value:  Size  Location     Type
  5685 ;;                  1    wreg      _Bool 
  5686 ;; Registers used:
  5687 ;;		wreg
  5688 ;; Tracked objects:
  5689 ;;		On entry : 1F/3
  5690 ;;		On exit  : 1F/3
  5691 ;;		Unchanged: 0/0
  5692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5694 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5696 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5697 ;;Total ram usage:        1 bytes
  5698 ;; Hardware stack levels used: 1
  5699 ;; Hardware stack levels required when called: 1
  5700 ;; This function calls:
  5701 ;;		Nothing
  5702 ;; This function is called by:
  5703 ;;		_Write_PCF
  5704 ;;		_lcd_init
  5705 ;;		_EMC1001_read
  5706 ;; This function uses a non-reentrant model
  5707 ;;
  5708                           
  5709                           
  5710                           ;psect for function _I2C_write
  5711  0167                     _I2C_write:
  5712                           
  5713                           ;incstack = 0
  5714                           ; Regs used in _I2C_write: [wreg]
  5715                           ;I2C_write@I2C_data stored from wreg
  5716  0167  00F0               	movwf	I2C_write@I2C_data
  5717                           
  5718                           ;I2C.c: 63: _Bool I2C_write(uint8_t I2C_data);I2C.c: 64: {;I2C.c: 65:     PIR3bits.SSP1I
      +                          F = 0;
  5719  0168  002E               	movlb	14	; select bank14
  5720  0169  100F               	bcf	15,0	;volatile
  5721                           
  5722                           ;I2C.c: 66:     SSP1BUF = I2C_data;
  5723  016A  0870               	movf	I2C_write@I2C_data,w
  5724  016B  0023               	movlb	3	; select bank3
  5725  016C  008C               	movwf	12	;volatile
  5726  016D                     l246:	
  5727                           ;I2C.c: 67:     while(PIR3bits.SSP1IF == 0);
  5728                           
  5729  016D  002E               	movlb	14	; select bank14
  5730  016E  1C0F               	btfss	15,0	;volatile
  5731  016F  296D               	goto	l246
  5732                           
  5733                           ;I2C.c: 68:     if(SSP1CON2bits.ACKSTAT==0)
  5734  0170  0023               	movlb	3	; select bank3
  5735  0171  0811               	movf	17,w	;volatile
  5736  0172  0008               	return
  5737  0173                     __end_of_I2C_write:
  5738  0173                     __ptext37:	
  5739 ;; *************** function _I2C_ack *****************
  5740 ;; Defined at:
  5741 ;;		line 47 in file "I2C.c"
  5742 ;; Parameters:    Size  Location     Type
  5743 ;;		None
  5744 ;; Auto vars:     Size  Location     Type
  5745 ;;		None
  5746 ;; Return value:  Size  Location     Type
  5747 ;;                  1    wreg      void 
  5748 ;; Registers used:
  5749 ;;		None
  5750 ;; Tracked objects:
  5751 ;;		On entry : 1F/3
  5752 ;;		On exit  : 1F/E
  5753 ;;		Unchanged: 0/0
  5754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5759 ;;Total ram usage:        0 bytes
  5760 ;; Hardware stack levels used: 1
  5761 ;; Hardware stack levels required when called: 1
  5762 ;; This function calls:
  5763 ;;		Nothing
  5764 ;; This function is called by:
  5765 ;;		_EMC1001_read
  5766 ;; This function uses a non-reentrant model
  5767 ;;
  5768                           
  5769                           
  5770                           ;psect for function _I2C_ack
  5771  0173                     _I2C_ack:
  5772                           
  5773                           ;I2C.c: 49:     PIR3bits.SSP1IF = 0;
  5774                           
  5775                           ;incstack = 0
  5776                           ; Regs used in _I2C_ack: []
  5777  0173  002E               	movlb	14	; select bank14
  5778  0174  100F               	bcf	15,0	;volatile
  5779                           
  5780                           ;I2C.c: 50:     SSP1CON2bits.ACKDT = 0;
  5781  0175  0023               	movlb	3	; select bank3
  5782  0176  1291               	bcf	17,5	;volatile
  5783                           
  5784                           ;I2C.c: 51:     SSP1CON2bits.ACKEN = 1;
  5785  0177  1611               	bsf	17,4	;volatile
  5786  0178                     l234:	
  5787                           ;I2C.c: 52:     while(PIR3bits.SSP1IF == 0);
  5788                           
  5789  0178  002E               	movlb	14	; select bank14
  5790  0179  180F               	btfsc	15,0	;volatile
  5791  017A  0008               	return
  5792  017B  2978               	goto	l234
  5793  017C                     __end_of_I2C_ack:
  5794  017C                     __ptext36:	
  5795 ;; *************** function _I2C_read *****************
  5796 ;; Defined at:
  5797 ;;		line 39 in file "I2C.c"
  5798 ;; Parameters:    Size  Location     Type
  5799 ;;		None
  5800 ;; Auto vars:     Size  Location     Type
  5801 ;;		None
  5802 ;; Return value:  Size  Location     Type
  5803 ;;                  1    wreg      unsigned char 
  5804 ;; Registers used:
  5805 ;;		wreg
  5806 ;; Tracked objects:
  5807 ;;		On entry : 1F/3
  5808 ;;		On exit  : 1F/3
  5809 ;;		Unchanged: 0/0
  5810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5815 ;;Total ram usage:        0 bytes
  5816 ;; Hardware stack levels used: 1
  5817 ;; Hardware stack levels required when called: 1
  5818 ;; This function calls:
  5819 ;;		Nothing
  5820 ;; This function is called by:
  5821 ;;		_EMC1001_read
  5822 ;; This function uses a non-reentrant model
  5823 ;;
  5824                           
  5825                           
  5826                           ;psect for function _I2C_read
  5827  017C                     _I2C_read:
  5828                           
  5829                           ;I2C.c: 41:     PIR3bits.SSP1IF = 0;
  5830                           
  5831                           ;incstack = 0
  5832                           ; Regs used in _I2C_read: [wreg]
  5833  017C  002E               	movlb	14	; select bank14
  5834  017D  100F               	bcf	15,0	;volatile
  5835                           
  5836                           ;I2C.c: 42:     SSP1CON2bits.RCEN = 1;
  5837  017E  0023               	movlb	3	; select bank3
  5838  017F  1591               	bsf	17,3	;volatile
  5839  0180                     l228:	
  5840                           ;I2C.c: 43:     while(PIR3bits.SSP1IF == 0);
  5841                           
  5842  0180  002E               	movlb	14	; select bank14
  5843  0181  1C0F               	btfss	15,0	;volatile
  5844  0182  2980               	goto	l228
  5845                           
  5846                           ;I2C.c: 44:     return SSP1BUF;
  5847  0183  0023               	movlb	3	; select bank3
  5848  0184  080C               	movf	12,w	;volatile
  5849  0185  0008               	return
  5850  0186                     __end_of_I2C_read:
  5851  0186                     __ptext35:	
  5852 ;; *************** function _I2C_restart *****************
  5853 ;; Defined at:
  5854 ;;		line 27 in file "I2C.c"
  5855 ;; Parameters:    Size  Location     Type
  5856 ;;		None
  5857 ;; Auto vars:     Size  Location     Type
  5858 ;;		None
  5859 ;; Return value:  Size  Location     Type
  5860 ;;                  1    wreg      void 
  5861 ;; Registers used:
  5862 ;;		None
  5863 ;; Tracked objects:
  5864 ;;		On entry : 1F/3
  5865 ;;		On exit  : 1F/3
  5866 ;;		Unchanged: 0/0
  5867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5872 ;;Total ram usage:        0 bytes
  5873 ;; Hardware stack levels used: 1
  5874 ;; Hardware stack levels required when called: 1
  5875 ;; This function calls:
  5876 ;;		Nothing
  5877 ;; This function is called by:
  5878 ;;		_EMC1001_read
  5879 ;; This function uses a non-reentrant model
  5880 ;;
  5881                           
  5882                           
  5883                           ;psect for function _I2C_restart
  5884  0186                     _I2C_restart:
  5885                           
  5886                           ;I2C.c: 29:     SSP1CON2bits.RSEN = 1;
  5887                           
  5888                           ;incstack = 0
  5889                           ; Regs used in _I2C_restart: []
  5890  0186  1491               	bsf	17,1	;volatile
  5891  0187                     l216:	
  5892                           ;I2C.c: 30:     while(SSP1CON2bits.RSEN == 1);
  5893                           
  5894  0187  1C91               	btfss	17,1	;volatile
  5895  0188  0008               	return
  5896  0189  2987               	goto	l216
  5897  018A                     __end_of_I2C_restart:
  5898  018A                     __ptext34:	
  5899 ;; *************** function _I2C_start *****************
  5900 ;; Defined at:
  5901 ;;		line 21 in file "I2C.c"
  5902 ;; Parameters:    Size  Location     Type
  5903 ;;		None
  5904 ;; Auto vars:     Size  Location     Type
  5905 ;;		None
  5906 ;; Return value:  Size  Location     Type
  5907 ;;                  1    wreg      void 
  5908 ;; Registers used:
  5909 ;;		None
  5910 ;; Tracked objects:
  5911 ;;		On entry : 0/1D
  5912 ;;		On exit  : 1F/3
  5913 ;;		Unchanged: 0/0
  5914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5919 ;;Total ram usage:        0 bytes
  5920 ;; Hardware stack levels used: 1
  5921 ;; Hardware stack levels required when called: 1
  5922 ;; This function calls:
  5923 ;;		Nothing
  5924 ;; This function is called by:
  5925 ;;		_Write_PCF
  5926 ;;		_lcd_init
  5927 ;;		_EMC1001_read
  5928 ;; This function uses a non-reentrant model
  5929 ;;
  5930                           
  5931                           
  5932                           ;psect for function _I2C_start
  5933  018A                     _I2C_start:
  5934                           
  5935                           ;I2C.c: 23:     SSP1CON2bits.SEN = 1;
  5936                           
  5937                           ;incstack = 0
  5938                           ; Regs used in _I2C_start: []
  5939  018A  0023               	movlb	3	; select bank3
  5940  018B  1411               	bsf	17,0	;volatile
  5941  018C                     l210:	
  5942                           ;I2C.c: 24:     while(SSP1CON2bits.SEN == 1);
  5943                           
  5944  018C  1C11               	btfss	17,0	;volatile
  5945  018D  0008               	return
  5946  018E  298C               	goto	l210
  5947  018F                     __end_of_I2C_start:
  5948  018F                     __ptext33:	
  5949 ;; *************** function _I2C_stop *****************
  5950 ;; Defined at:
  5951 ;;		line 33 in file "I2C.c"
  5952 ;; Parameters:    Size  Location     Type
  5953 ;;		None
  5954 ;; Auto vars:     Size  Location     Type
  5955 ;;		None
  5956 ;; Return value:  Size  Location     Type
  5957 ;;                  1    wreg      void 
  5958 ;; Registers used:
  5959 ;;		None
  5960 ;; Tracked objects:
  5961 ;;		On entry : 12/3
  5962 ;;		On exit  : 1F/3
  5963 ;;		Unchanged: 0/0
  5964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5969 ;;Total ram usage:        0 bytes
  5970 ;; Hardware stack levels used: 1
  5971 ;; Hardware stack levels required when called: 1
  5972 ;; This function calls:
  5973 ;;		Nothing
  5974 ;; This function is called by:
  5975 ;;		_Write_PCF
  5976 ;;		_lcd_init
  5977 ;;		_EMC1001_read
  5978 ;; This function uses a non-reentrant model
  5979 ;;
  5980                           
  5981                           
  5982                           ;psect for function _I2C_stop
  5983  018F                     _I2C_stop:
  5984  018F                     l2044:	
  5985                           ;incstack = 0
  5986                           ; Regs used in _I2C_stop: []
  5987                           
  5988                           
  5989                           ;I2C.c: 35:     SSP1CON2bits.PEN = 1;
  5990  018F  0023               	movlb	3	; select bank3
  5991  0190  1511               	bsf	17,2	;volatile
  5992  0191                     l222:	
  5993                           ;I2C.c: 36:     while(SSP1CON2bits.PEN == 1);
  5994                           
  5995  0191  1D11               	btfss	17,2	;volatile
  5996  0192  0008               	return
  5997  0193  2991               	goto	l222
  5998  0194                     __end_of_I2C_stop:
  5999  0194                     __ptext25:	
  6000 ;; *************** function _Send_D7_D4 *****************
  6001 ;; Defined at:
  6002 ;;		line 15 in file "LCD_i2c.c"
  6003 ;; Parameters:    Size  Location     Type
  6004 ;;  address         1    wreg     unsigned char 
  6005 ;;  nibble          1    2[COMMON] unsigned char 
  6006 ;; Auto vars:     Size  Location     Type
  6007 ;;  address         1    3[COMMON] unsigned char 
  6008 ;;  datos           1    4[COMMON] unsigned char 
  6009 ;; Return value:  Size  Location     Type
  6010 ;;                  1    wreg      void 
  6011 ;; Registers used:
  6012 ;;		wreg, status,2, status,0, pclath, cstack
  6013 ;; Tracked objects:
  6014 ;;		On entry : 0/3
  6015 ;;		On exit  : 1F/3
  6016 ;;		Unchanged: 0/0
  6017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6018 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6019 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6021 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6022 ;;Total ram usage:        3 bytes
  6023 ;; Hardware stack levels used: 1
  6024 ;; Hardware stack levels required when called: 3
  6025 ;; This function calls:
  6026 ;;		_Write_PCF
  6027 ;; This function is called by:
  6028 ;;		_lcd_send_byte
  6029 ;;		_lcd_init
  6030 ;; This function uses a non-reentrant model
  6031 ;;
  6032                           
  6033                           
  6034                           ;psect for function _Send_D7_D4
  6035  0194                     _Send_D7_D4:
  6036                           
  6037                           ;incstack = 0
  6038                           ; Regs used in _Send_D7_D4: [wreg+status,2+status,0+pclath+cstack]
  6039                           ;Send_D7_D4@address stored from wreg
  6040  0194  00F3               	movwf	Send_D7_D4@address
  6041                           
  6042                           ;LCD_i2c.c: 16:    char datos=0;
  6043  0195  01F4               	clrf	Send_D7_D4@datos
  6044                           
  6045                           ;LCD_i2c.c: 18:    if((nibble & 1)==1) datos= datos|16; else datos = datos&~16;
  6046  0196  1C72               	btfss	Send_D7_D4@nibble,0
  6047  0197  299A               	goto	l271
  6048  0198  1674               	bsf	Send_D7_D4@datos,4
  6049  0199  299B               	goto	l272
  6050  019A                     l271:
  6051  019A  1274               	bcf	Send_D7_D4@datos,4
  6052  019B                     l272:
  6053                           
  6054                           ;LCD_i2c.c: 19:    if((nibble & 2)==2) datos= datos|32; else datos = datos&~32;
  6055  019B  1CF2               	btfss	Send_D7_D4@nibble,1
  6056  019C  299F               	goto	l273
  6057  019D  16F4               	bsf	Send_D7_D4@datos,5
  6058  019E  29A0               	goto	l274
  6059  019F                     l273:
  6060  019F  12F4               	bcf	Send_D7_D4@datos,5
  6061  01A0                     l274:
  6062                           
  6063                           ;LCD_i2c.c: 20:    if((nibble & 4)==4) datos= datos|64; else datos = datos&~64;
  6064  01A0  1D72               	btfss	Send_D7_D4@nibble,2
  6065  01A1  29A4               	goto	l275
  6066  01A2  1774               	bsf	Send_D7_D4@datos,6
  6067  01A3  29A5               	goto	l276
  6068  01A4                     l275:
  6069  01A4  1374               	bcf	Send_D7_D4@datos,6
  6070  01A5                     l276:
  6071                           
  6072                           ;LCD_i2c.c: 21:    if((nibble & 8)==8) datos= datos|128; else datos = datos&~128;
  6073  01A5  1DF2               	btfss	Send_D7_D4@nibble,3
  6074  01A6  29A9               	goto	l277
  6075  01A7  17F4               	bsf	Send_D7_D4@datos,7
  6076  01A8  29AA               	goto	l2186
  6077  01A9                     l277:
  6078  01A9  13F4               	bcf	Send_D7_D4@datos,7
  6079  01AA                     l2186:
  6080                           
  6081                           ;LCD_i2c.c: 22:       _delay((unsigned long)((60)*(32000000UL/4000000.0)));
  6082  01AA  30A0               	movlw	160
  6083  01AB                     u2617:
  6084  01AB  0B89               	decfsz	9,f
  6085  01AC  29AB               	goto	u2617
  6086                           
  6087                           ;LCD_i2c.c: 23:    if(address)
  6088  01AD  0873               	movf	Send_D7_D4@address,w
  6089  01AE  1903               	btfsc	3,2
  6090  01AF  29B2               	goto	l279
  6091                           
  6092                           ;LCD_i2c.c: 24:       datos= datos |1;
  6093  01B0  1474               	bsf	Send_D7_D4@datos,0
  6094  01B1  29B3               	goto	l2192
  6095  01B2                     l279:	
  6096                           ;LCD_i2c.c: 25:    else
  6097                           
  6098                           
  6099                           ;LCD_i2c.c: 26:      datos = datos &~1;
  6100  01B2  1074               	bcf	Send_D7_D4@datos,0
  6101  01B3                     l2192:
  6102                           
  6103                           ;LCD_i2c.c: 29:    Write_PCF( datos | 4);
  6104  01B3  0874               	movf	Send_D7_D4@datos,w
  6105  01B4  3804               	iorlw	4
  6106  01B5  20CE  3180         	fcall	_Write_PCF
  6107                           
  6108                           ;LCD_i2c.c: 30:    _delay((unsigned long)((2)*(32000000UL/4000000.0)));
  6109  01B7  3005               	movlw	5
  6110  01B8                     u2627:
  6111  01B8  0B89               	decfsz	9,f
  6112  01B9  29B8               	goto	u2627
  6113  01BA  0000               	nop
  6114                           
  6115                           ;LCD_i2c.c: 31:    Write_PCF( datos & ~4);
  6116  01BB  0874               	movf	Send_D7_D4@datos,w
  6117  01BC  39FB               	andlw	251
  6118  01BD  28CE               	ljmp	_Write_PCF
  6119  01BE                     __end_of_Send_D7_D4:
  6120  01BE                     __ptext21:	
  6121 ;; *************** function _lcd_puts *****************
  6122 ;; Defined at:
  6123 ;;		line 124 in file "LCD_i2c.c"
  6124 ;; Parameters:    Size  Location     Type
  6125 ;;  dato            1    wreg     PTR unsigned char 
  6126 ;;		 -> buffer(50), 
  6127 ;; Auto vars:     Size  Location     Type
  6128 ;;  dato            1    0[BANK0 ] PTR unsigned char 
  6129 ;;		 -> buffer(50), 
  6130 ;; Return value:  Size  Location     Type
  6131 ;;                  1    wreg      void 
  6132 ;; Registers used:
  6133 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6134 ;; Tracked objects:
  6135 ;;		On entry : 1F/0
  6136 ;;		On exit  : 1F/0
  6137 ;;		Unchanged: 0/0
  6138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6140 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6141 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6142 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6143 ;;Total ram usage:        3 bytes
  6144 ;; Hardware stack levels used: 1
  6145 ;; Hardware stack levels required when called: 6
  6146 ;; This function calls:
  6147 ;;		_lcd_gotoxy
  6148 ;;		_lcd_send_byte
  6149 ;; This function is called by:
  6150 ;;		_main
  6151 ;; This function uses a non-reentrant model
  6152 ;;
  6153                           
  6154                           
  6155                           ;psect for function _lcd_puts
  6156  01BE                     _lcd_puts:
  6157                           
  6158                           ;incstack = 0
  6159                           ; Regs used in _lcd_puts: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6160                           ;lcd_puts@dato stored from wreg
  6161  01BE  00A0               	movwf	lcd_puts@dato
  6162                           
  6163                           ;LCD_i2c.c: 125:     while (*dato){
  6164  01BF  29E8               	goto	l2578
  6165  01C0                     l2560:
  6166  01C0  3000               	movlw	0
  6167                           
  6168                           ;LCD_i2c.c: 128:                 lcd_send_byte(0,1);
  6169  01C1  01F5               	clrf	lcd_send_byte@n
  6170  01C2  0AF5               	incf	lcd_send_byte@n,f
  6171  01C3  21FF  3180         	fcall	_lcd_send_byte
  6172                           
  6173                           ;LCD_i2c.c: 130:                 g_LcdX = 0;
  6174  01C5  3015               	movlw	21
  6175  01C6  00FC               	movwf	??_lcd_puts
  6176  01C7  30C6               	movlw	198
  6177  01C8                     u2567:
  6178  01C8  0B89               	decfsz	9,f
  6179  01C9  29C8               	goto	u2567
  6180  01CA  0BFC               	decfsz	??_lcd_puts,f
  6181  01CB  29C8               	goto	u2567
  6182  01CC  3200               	nop2
  6183                           
  6184                           ;LCD_i2c.c: 131:                 g_LcdY = 0;
  6185  01CD  0021               	movlb	1	; select bank1
  6186  01CE  3015               	movlw	21
  6187  01CF  01A7               	clrf	_g_LcdY^(0+128)
  6188                           
  6189                           ;LCD_i2c.c: 132:                 _delay((unsigned long)((2)*(32000000UL/4000.0)));
  6190  01D0  00FC               	movwf	??_lcd_puts
  6191  01D1  30C6               	movlw	198
  6192  01D2                     u2577:
  6193  01D2  0B89               	decfsz	9,f
  6194  01D3  29D2               	goto	u2577
  6195  01D4  0BFC               	decfsz	??_lcd_puts,f
  6196  01D5  29D2               	goto	u2577
  6197  01D6  3200               	nop2
  6198                           
  6199                           ;LCD_i2c.c: 133:                 break;
  6200  01D7  29E6               	goto	l2576
  6201  01D8                     l2568:
  6202                           
  6203                           ;LCD_i2c.c: 135:                 lcd_gotoxy(1, g_LcdY+2);
  6204  01D8  0021               	movlb	1	; select bank1
  6205  01D9  0827               	movf	_g_LcdY^(0+128),w
  6206  01DA  3E02               	addlw	2
  6207  01DB  00F7               	movwf	lcd_gotoxy@y
  6208  01DC  3001               	movlw	1
  6209  01DD  220C  3180         	fcall	_lcd_gotoxy
  6210                           
  6211                           ;LCD_i2c.c: 136:                 break;
  6212  01DF  29E6               	goto	l2576
  6213  01E0                     l2570:
  6214                           
  6215                           ;LCD_i2c.c: 138:                 lcd_send_byte(1,*dato);
  6216  01E0  2334  3180         	fcall	PL12	;call to abstracted procedure
  6217  01E2  00F5               	movwf	lcd_send_byte@n
  6218  01E3  3001               	movlw	1
  6219  01E4  21FF  3180         	fcall	_lcd_send_byte
  6220  01E6                     l2576:	
  6221                           ;LCD_i2c.c: 139:                 break;
  6222                           
  6223                           
  6224                           ;LCD_i2c.c: 143:         dato++;
  6225  01E6  0020               	movlb	0	; select bank0
  6226  01E7  0AA0               	incf	lcd_puts@dato,f
  6227  01E8                     l2578:
  6228                           
  6229                           ;LCD_i2c.c: 125:     while (*dato){
  6230  01E8  2334  3180         	fcall	PL12	;call to abstracted procedure
  6231  01EA  1903               	btfsc	3,2
  6232  01EB  0008               	return
  6233  01EC  0820               	movf	lcd_puts@dato,w
  6234  01ED  0086               	movwf	6
  6235  01EE  0801               	movf	1,w
  6236  01EF  00FC               	movwf	??_lcd_puts
  6237  01F0  01FD               	clrf	??_lcd_puts+1
  6238                           
  6239                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6240                           ; Switch size 1, requested type "space"
  6241                           ; Number of cases is 1, Range of values is 0 to 0
  6242                           ; switch strategies available:
  6243                           ; Name         Instructions Cycles
  6244                           ; simple_byte            4     3 (average)
  6245                           ; direct_byte            8     6 (fixed)
  6246                           ; jumptable            260     6 (fixed)
  6247                           ;	Chosen strategy is simple_byte
  6248  01F1  087D               	movf	??_lcd_puts+1,w
  6249  01F2  3A00               	xorlw	0	; case 0
  6250  01F3  1903               	skipnz
  6251  01F4  29F6               	goto	l2820
  6252  01F5  29E0               	goto	l2570
  6253  01F6                     l2820:
  6254                           
  6255                           ; Switch size 1, requested type "space"
  6256                           ; Number of cases is 2, Range of values is 10 to 12
  6257                           ; switch strategies available:
  6258                           ; Name         Instructions Cycles
  6259                           ; simple_byte            7     4 (average)
  6260                           ; direct_byte           15     9 (fixed)
  6261                           ; jumptable            263     9 (fixed)
  6262                           ;	Chosen strategy is simple_byte
  6263  01F6  087C               	movf	??_lcd_puts,w
  6264  01F7  3A0A               	xorlw	10	; case 10
  6265  01F8  1903               	skipnz
  6266  01F9  29D8               	goto	l2568
  6267  01FA  3A06               	xorlw	6	; case 12
  6268  01FB  1903               	skipnz
  6269  01FC  29C0               	goto	l2560
  6270  01FD  29E0               	goto	l2570
  6271  01FE  29E6               	goto	l2576
  6272  01FF                     __end_of_lcd_puts:
  6273  01FF                     __ptext24:	
  6274 ;; *************** function _lcd_send_byte *****************
  6275 ;; Defined at:
  6276 ;;		line 34 in file "LCD_i2c.c"
  6277 ;; Parameters:    Size  Location     Type
  6278 ;;  address         1    wreg     unsigned char 
  6279 ;;  n               1    5[COMMON] unsigned char 
  6280 ;; Auto vars:     Size  Location     Type
  6281 ;;  address         1    6[COMMON] unsigned char 
  6282 ;; Return value:  Size  Location     Type
  6283 ;;                  1    wreg      void 
  6284 ;; Registers used:
  6285 ;;		wreg, status,2, status,0, pclath, cstack
  6286 ;; Tracked objects:
  6287 ;;		On entry : 0/0
  6288 ;;		On exit  : 1F/3
  6289 ;;		Unchanged: 0/0
  6290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6291 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6292 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6294 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6295 ;;Total ram usage:        2 bytes
  6296 ;; Hardware stack levels used: 1
  6297 ;; Hardware stack levels required when called: 4
  6298 ;; This function calls:
  6299 ;;		_Send_D7_D4
  6300 ;; This function is called by:
  6301 ;;		_lcd_init
  6302 ;;		_lcd_gotoxy
  6303 ;;		_lcd_puts
  6304 ;; This function uses a non-reentrant model
  6305 ;;
  6306                           
  6307                           
  6308                           ;psect for function _lcd_send_byte
  6309  01FF                     _lcd_send_byte:
  6310                           
  6311                           ;incstack = 0
  6312                           ; Regs used in _lcd_send_byte: [wreg+status,2+status,0+pclath+cstack]
  6313                           ;lcd_send_byte@address stored from wreg
  6314  01FF  00F6               	movwf	lcd_send_byte@address
  6315                           
  6316                           ;LCD_i2c.c: 35:    Send_D7_D4(address,n >> 4);
  6317  0200  0E75               	swapf	lcd_send_byte@n,w
  6318  0201  390F               	andlw	15
  6319  0202  00F2               	movwf	Send_D7_D4@nibble
  6320  0203  0876               	movf	lcd_send_byte@address,w
  6321  0204  2194  3180         	fcall	_Send_D7_D4
  6322                           
  6323                           ;LCD_i2c.c: 36:    Send_D7_D4(address,n & 0xf);
  6324  0206  0875               	movf	lcd_send_byte@n,w
  6325  0207  00F2               	movwf	Send_D7_D4@nibble
  6326  0208  300F               	movlw	15
  6327  0209  05F2               	andwf	Send_D7_D4@nibble,f
  6328  020A  0876               	movf	lcd_send_byte@address,w
  6329  020B  2994               	ljmp	_Send_D7_D4
  6330  020C                     __end_of_lcd_send_byte:
  6331  020C                     __ptext22:	
  6332 ;; *************** function _lcd_gotoxy *****************
  6333 ;; Defined at:
  6334 ;;		line 79 in file "LCD_i2c.c"
  6335 ;; Parameters:    Size  Location     Type
  6336 ;;  x               1    wreg     unsigned char 
  6337 ;;  y               1    7[COMMON] unsigned char 
  6338 ;; Auto vars:     Size  Location     Type
  6339 ;;  x               1   10[COMMON] unsigned char 
  6340 ;;  address         1   11[COMMON] unsigned char 
  6341 ;; Return value:  Size  Location     Type
  6342 ;;                  1    wreg      void 
  6343 ;; Registers used:
  6344 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6345 ;; Tracked objects:
  6346 ;;		On entry : 1F/1
  6347 ;;		On exit  : 1F/1
  6348 ;;		Unchanged: 0/0
  6349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6350 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6351 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6352 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6353 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6354 ;;Total ram usage:        5 bytes
  6355 ;; Hardware stack levels used: 1
  6356 ;; Hardware stack levels required when called: 5
  6357 ;; This function calls:
  6358 ;;		_lcd_send_byte
  6359 ;; This function is called by:
  6360 ;;		_lcd_puts
  6361 ;; This function uses a non-reentrant model
  6362 ;;
  6363                           
  6364                           
  6365                           ;psect for function _lcd_gotoxy
  6366  020C                     _lcd_gotoxy:
  6367                           
  6368                           ;incstack = 0
  6369                           ; Regs used in _lcd_gotoxy: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6370                           ;lcd_gotoxy@x stored from wreg
  6371  020C  00FA               	movwf	lcd_gotoxy@x
  6372                           
  6373                           ;LCD_i2c.c: 80:    int8 address;;LCD_i2c.c: 81:    switch(y)
  6374  020D  2A17               	goto	l2380
  6375  020E                     l2368:
  6376                           
  6377                           ;LCD_i2c.c: 84:          address = 0x00;
  6378  020E  01FB               	clrf	lcd_gotoxy@address
  6379                           
  6380                           ;LCD_i2c.c: 85:          break;
  6381  020F  2A2D               	goto	l2382
  6382  0210                     l2370:
  6383                           
  6384                           ;LCD_i2c.c: 87:          address = 0x40;
  6385  0210  3040               	movlw	64
  6386  0211  2A15               	goto	L6
  6387  0212                     l2372:	
  6388                           ;LCD_i2c.c: 88:          break;
  6389                           
  6390                           
  6391                           ;LCD_i2c.c: 90:          address = 0x14;
  6392  0212  3014               	movlw	20
  6393  0213  2A15               	goto	L6
  6394  0214                     l2374:	
  6395                           ;LCD_i2c.c: 91:          break;
  6396                           
  6397                           
  6398                           ;LCD_i2c.c: 93:          address = 0x54;
  6399  0214  3054               	movlw	84
  6400  0215                     L6:
  6401  0215  00FB               	movwf	lcd_gotoxy@address
  6402                           
  6403                           ;LCD_i2c.c: 94:          break;
  6404  0216  2A2D               	goto	l2382
  6405  0217                     l2380:
  6406  0217  0877               	movf	lcd_gotoxy@y,w
  6407  0218  00F8               	movwf	??_lcd_gotoxy
  6408  0219  01F9               	clrf	??_lcd_gotoxy+1
  6409                           
  6410                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6411                           ; Switch size 1, requested type "space"
  6412                           ; Number of cases is 1, Range of values is 0 to 0
  6413                           ; switch strategies available:
  6414                           ; Name         Instructions Cycles
  6415                           ; simple_byte            4     3 (average)
  6416                           ; direct_byte            8     6 (fixed)
  6417                           ; jumptable            260     6 (fixed)
  6418                           ;	Chosen strategy is simple_byte
  6419  021A  0879               	movf	??_lcd_gotoxy+1,w
  6420  021B  3A00               	xorlw	0	; case 0
  6421  021C  1903               	skipnz
  6422  021D  2A1F               	goto	l2822
  6423  021E  2A0E               	goto	l2368
  6424  021F                     l2822:
  6425                           
  6426                           ; Switch size 1, requested type "space"
  6427                           ; Number of cases is 4, Range of values is 1 to 4
  6428                           ; switch strategies available:
  6429                           ; Name         Instructions Cycles
  6430                           ; simple_byte           13     7 (average)
  6431                           ; direct_byte           17     9 (fixed)
  6432                           ; jumptable            263     9 (fixed)
  6433                           ;	Chosen strategy is simple_byte
  6434  021F  0878               	movf	??_lcd_gotoxy,w
  6435  0220  3A01               	xorlw	1	; case 1
  6436  0221  1903               	skipnz
  6437  0222  2A0E               	goto	l2368
  6438  0223  3A03               	xorlw	3	; case 2
  6439  0224  1903               	skipnz
  6440  0225  2A10               	goto	l2370
  6441  0226  3A01               	xorlw	1	; case 3
  6442  0227  1903               	skipnz
  6443  0228  2A12               	goto	l2372
  6444  0229  3A07               	xorlw	7	; case 4
  6445  022A  1903               	skipnz
  6446  022B  2A14               	goto	l2374
  6447  022C  2A0E               	goto	l2368
  6448  022D                     l2382:
  6449                           
  6450                           ;LCD_i2c.c: 99:    address += x-1;
  6451  022D  087A               	movf	lcd_gotoxy@x,w
  6452  022E  3EFF               	addlw	255
  6453  022F  07FB               	addwf	lcd_gotoxy@address,f
  6454                           
  6455                           ;LCD_i2c.c: 102:    g_LcdX = x - 1;
  6456  0230  087B               	movf	lcd_gotoxy@address,w
  6457  0231  3880               	iorlw	128
  6458  0232  00F5               	movwf	lcd_send_byte@n
  6459  0233  3000               	movlw	0
  6460  0234  21FF               	fcall	_lcd_send_byte
  6461                           
  6462                           ;LCD_i2c.c: 103:    g_LcdY = y - 1;
  6463  0235  0877               	movf	lcd_gotoxy@y,w
  6464  0236  3EFF               	addlw	255
  6465  0237  0021               	movlb	1	; select bank1
  6466  0238  00A7               	movwf	_g_LcdY^(0+128)
  6467  0239  0008               	return
  6468  023A                     __end_of_lcd_gotoxy:
  6469  023A                     __ptext20:	
  6470 ;; *************** function _port_init *****************
  6471 ;; Defined at:
  6472 ;;		line 154 in file "Main.c"
  6473 ;; Parameters:    Size  Location     Type
  6474 ;;		None
  6475 ;; Auto vars:     Size  Location     Type
  6476 ;;		None
  6477 ;; Return value:  Size  Location     Type
  6478 ;;                  1    wreg      void 
  6479 ;; Registers used:
  6480 ;;		wreg, status,2
  6481 ;; Tracked objects:
  6482 ;;		On entry : B1F/0
  6483 ;;		On exit  : B1F/0
  6484 ;;		Unchanged: B00/0
  6485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6490 ;;Total ram usage:        0 bytes
  6491 ;; Hardware stack levels used: 1
  6492 ;; Hardware stack levels required when called: 1
  6493 ;; This function calls:
  6494 ;;		Nothing
  6495 ;; This function is called by:
  6496 ;;		_main
  6497 ;; This function uses a non-reentrant model
  6498 ;;
  6499                           
  6500                           
  6501                           ;psect for function _port_init
  6502  023A                     _port_init:
  6503                           
  6504                           ;Main.c: 156:     ANSELA = 0;
  6505                           
  6506                           ;incstack = 0
  6507                           ; Regs used in _port_init: [wreg+status,2]
  6508  023A  003E               	movlb	30	; select bank30
  6509  023B  01B8               	clrf	56	;volatile
  6510                           
  6511                           ;Main.c: 157:     LATA=0;
  6512  023C  0020               	movlb	0	; select bank0
  6513  023D  0196               	clrf	22	;volatile
  6514                           
  6515                           ;Main.c: 158:     PORTA =0;
  6516  023E  018C               	clrf	12	;volatile
  6517                           
  6518                           ;Main.c: 159:     TRISA = 0b11110000;
  6519  023F  30F0               	movlw	240
  6520  0240  0091               	movwf	17	;volatile
  6521                           
  6522                           ;Main.c: 162:     ANSELA = 0;
  6523  0241  003E               	movlb	30	; select bank30
  6524  0242  01B8               	clrf	56	;volatile
  6525                           
  6526                           ;Main.c: 163:     ANSELA = ANSELA | (1<<4);
  6527  0243  0838               	movf	56,w	;volatile
  6528  0244  3810               	iorlw	16
  6529  0245  00B8               	movwf	56	;volatile
  6530                           
  6531                           ;Main.c: 165:     LATB=0;
  6532  0246  0020               	movlb	0	; select bank0
  6533  0247  0197               	clrf	23	;volatile
  6534                           
  6535                           ;Main.c: 166:     PORTB =0;
  6536  0248  018D               	clrf	13	;volatile
  6537                           
  6538                           ;Main.c: 167:     TRISB = TRISA | (1<<0);
  6539  0249  0811               	movf	17,w	;volatile
  6540  024A  3801               	iorlw	1
  6541  024B  0092               	movwf	18	;volatile
  6542                           
  6543                           ;Main.c: 168:     ANSELB = 0;
  6544  024C  003E               	movlb	30	; select bank30
  6545  024D  01C3               	clrf	67	;volatile
  6546                           
  6547                           ;Main.c: 169:     ANSELB = ANSELB | (1<<0);
  6548  024E  0843               	movf	67,w	;volatile
  6549  024F  3801               	iorlw	1
  6550  0250  00C3               	movwf	67	;volatile
  6551                           
  6552                           ;Main.c: 171:     TRISC = 0b10;
  6553  0251  3002               	movlw	2
  6554  0252  0020               	movlb	0	; select bank0
  6555  0253  0093               	movwf	19	;volatile
  6556                           
  6557                           ;Main.c: 172:     ANSELC = 0;
  6558  0254  003E               	movlb	30	; select bank30
  6559  0255  01CE               	clrf	78	;volatile
  6560                           
  6561                           ;Main.c: 173:     TRISC = TRISC | (1<<4 |1<<3 );
  6562  0256  0020               	movlb	0	; select bank0
  6563  0257  0813               	movf	19,w	;volatile
  6564  0258  3818               	iorlw	24
  6565  0259  0093               	movwf	19	;volatile
  6566  025A  0008               	return
  6567  025B                     __end_of_port_init:
  6568  025B                     __ptext4:	
  6569 ;; *************** function _serial_init *****************
  6570 ;; Defined at:
  6571 ;;		line 3 in file "uart.c"
  6572 ;; Parameters:    Size  Location     Type
  6573 ;;  baudios         4    0[BANK0 ] unsigned long 
  6574 ;; Auto vars:     Size  Location     Type
  6575 ;;  sx              2    8[BANK0 ] unsigned short 
  6576 ;; Return value:  Size  Location     Type
  6577 ;;                  1    wreg      void 
  6578 ;; Registers used:
  6579 ;;		wreg, status,2, status,0, pclath, cstack
  6580 ;; Tracked objects:
  6581 ;;		On entry : B1F/0
  6582 ;;		On exit  : B1F/1D
  6583 ;;		Unchanged: B00/0
  6584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6585 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6586 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6587 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6588 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6589 ;;Total ram usage:       10 bytes
  6590 ;; Hardware stack levels used: 1
  6591 ;; Hardware stack levels required when called: 2
  6592 ;; This function calls:
  6593 ;;		___lldiv
  6594 ;; This function is called by:
  6595 ;;		_main
  6596 ;; This function uses a non-reentrant model
  6597 ;;
  6598                           
  6599                           
  6600                           ;psect for function _serial_init
  6601  025B                     _serial_init:
  6602                           
  6603                           ;uart.c: 4:     uint16_t sx;;uart.c: 7:     BAUD1CON = 0x08;
  6604                           
  6605                           ;incstack = 0
  6606                           ; Regs used in _serial_init: [wreg+status,2+status,0+pclath+cstack]
  6607  025B  3008               	movlw	8
  6608  025C  0022               	movlb	2	; select bank2
  6609  025D  009F               	movwf	31	;volatile
  6610                           
  6611                           ;uart.c: 9:     RC1STA = 0b10010000;
  6612  025E  3090               	movlw	144
  6613  025F  009D               	movwf	29	;volatile
  6614                           
  6615                           ;uart.c: 15:     TX1STA = 0b00100100;
  6616  0260  3024               	movlw	36
  6617  0261  009E               	movwf	30	;volatile
  6618                           
  6619                           ;uart.c: 20:     sx = ((32000000UL/baudios)/4 ) - 1;
  6620  0262  0020               	movlb	0	; select bank0
  6621  0263  0823               	movf	serial_init@baudios+3,w
  6622  0264  00F3               	movwf	___lldiv@divisor+3
  6623  0265  0822               	movf	serial_init@baudios+2,w
  6624  0266  00F2               	movwf	___lldiv@divisor+2
  6625  0267  0821               	movf	serial_init@baudios+1,w
  6626  0268  00F1               	movwf	___lldiv@divisor+1
  6627  0269  0820               	movf	serial_init@baudios,w
  6628  026A  00F0               	movwf	___lldiv@divisor
  6629  026B  3001               	movlw	1
  6630  026C  00F7               	movwf	___lldiv@dividend+3
  6631  026D  30E8               	movlw	232
  6632  026E  00F6               	movwf	___lldiv@dividend+2
  6633  026F  3048               	movlw	72
  6634  0270  00F5               	movwf	___lldiv@dividend+1
  6635  0271  01F4               	clrf	___lldiv@dividend
  6636  0272  2298  3180         	fcall	___lldiv
  6637  0274  0870               	movf	?___lldiv,w
  6638  0275  00A4               	movwf	??_serial_init
  6639  0276  0871               	movf	?___lldiv+1,w
  6640  0277  00A5               	movwf	??_serial_init+1
  6641  0278  0872               	movf	?___lldiv+2,w
  6642  0279  00A6               	movwf	??_serial_init+2
  6643  027A  0873               	movf	?___lldiv+3,w
  6644  027B  00A7               	movwf	??_serial_init+3
  6645  027C  3002               	movlw	2
  6646  027D                     u1975:
  6647  027D  36A7               	lsrf	??_serial_init+3,f
  6648  027E  0CA6               	rrf	??_serial_init+2,f
  6649  027F  0CA5               	rrf	??_serial_init+1,f
  6650  0280  0CA4               	rrf	??_serial_init,f
  6651  0281  0B89               	decfsz	9,f
  6652  0282  2A7D               	goto	u1975
  6653  0283  0825               	movf	??_serial_init+1,w
  6654  0284  00A9               	movwf	serial_init@sx+1
  6655  0285  0824               	movf	??_serial_init,w
  6656  0286  00A8               	movwf	serial_init@sx
  6657  0287  30FF               	movlw	255
  6658  0288  07A8               	addwf	serial_init@sx,f
  6659  0289  3DA9               	addwfc	serial_init@sx+1,f
  6660                           
  6661                           ;uart.c: 21:     SP1BRGL = (uint8_t)sx;
  6662  028A  0828               	movf	serial_init@sx,w
  6663  028B  0022               	movlb	2	; select bank2
  6664  028C  009B               	movwf	27	;volatile
  6665                           
  6666                           ;uart.c: 22:     SP1BRGH = (uint8_t)(sx>>8);
  6667  028D  0020               	movlb	0	; select bank0
  6668  028E  0829               	movf	serial_init@sx+1,w
  6669  028F  0022               	movlb	2	; select bank2
  6670  0290  009C               	movwf	28	;volatile
  6671                           
  6672                           ;uart.c: 26:     RC0PPS = 0x10;
  6673  0291  3010               	movlw	16
  6674  0292  003E               	movlb	30	; select bank30
  6675  0293  00A0               	movwf	32	;volatile
  6676                           
  6677                           ;uart.c: 28:     RXPPS = 0x11;
  6678  0294  3011               	movlw	17
  6679  0295  003D               	movlb	29	; select bank29
  6680  0296  00CB               	movwf	75	;volatile
  6681  0297  0008               	return
  6682  0298                     __end_of_serial_init:
  6683  0298                     __ptext5:	
  6684 ;; *************** function ___lldiv *****************
  6685 ;; Defined at:
  6686 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
  6687 ;; Parameters:    Size  Location     Type
  6688 ;;  divisor         4    0[COMMON] unsigned long 
  6689 ;;  dividend        4    4[COMMON] unsigned long 
  6690 ;; Auto vars:     Size  Location     Type
  6691 ;;  quotient        4    8[COMMON] unsigned long 
  6692 ;;  counter         1   12[COMMON] unsigned char 
  6693 ;; Return value:  Size  Location     Type
  6694 ;;                  4    0[COMMON] unsigned long 
  6695 ;; Registers used:
  6696 ;;		wreg, status,2, status,0
  6697 ;; Tracked objects:
  6698 ;;		On entry : B1F/0
  6699 ;;		On exit  : B1F/0
  6700 ;;		Unchanged: B1F/0
  6701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6702 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6703 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6705 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6706 ;;Total ram usage:       13 bytes
  6707 ;; Hardware stack levels used: 1
  6708 ;; Hardware stack levels required when called: 1
  6709 ;; This function calls:
  6710 ;;		Nothing
  6711 ;; This function is called by:
  6712 ;;		_serial_init
  6713 ;; This function uses a non-reentrant model
  6714 ;;
  6715                           
  6716                           
  6717                           ;psect for function ___lldiv
  6718  0298                     ___lldiv:
  6719                           
  6720                           ;incstack = 0
  6721                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6722  0298  01F8               	clrf	___lldiv@quotient
  6723  0299  01F9               	clrf	___lldiv@quotient+1
  6724  029A  01FA               	clrf	___lldiv@quotient+2
  6725  029B  01FB               	clrf	___lldiv@quotient+3
  6726  029C  0873               	movf	___lldiv@divisor+3,w
  6727  029D  0472               	iorwf	___lldiv@divisor+2,w
  6728  029E  0471               	iorwf	___lldiv@divisor+1,w
  6729  029F  0470               	iorwf	___lldiv@divisor,w
  6730  02A0  1903               	skipnz
  6731  02A1  2ACE               	goto	l2428
  6732  02A2  01FC               	clrf	___lldiv@counter
  6733  02A3                     L1:
  6734  02A3  0AFC               	incf	___lldiv@counter,f
  6735  02A4  1BF3               	btfsc	___lldiv@divisor+3,7
  6736  02A5  2AAB               	goto	l2416
  6737  02A6  35F0               	lslf	___lldiv@divisor,f
  6738  02A7  0DF1               	rlf	___lldiv@divisor+1,f
  6739  02A8  0DF2               	rlf	___lldiv@divisor+2,f
  6740  02A9  0DF3               	rlf	___lldiv@divisor+3,f
  6741  02AA  2AA3               	goto	L1
  6742  02AB                     l2416:
  6743  02AB  35F8               	lslf	___lldiv@quotient,f
  6744  02AC  0DF9               	rlf	___lldiv@quotient+1,f
  6745  02AD  0DFA               	rlf	___lldiv@quotient+2,f
  6746  02AE  0DFB               	rlf	___lldiv@quotient+3,f
  6747  02AF  0873               	movf	___lldiv@divisor+3,w
  6748  02B0  0277               	subwf	___lldiv@dividend+3,w
  6749  02B1  1D03               	skipz
  6750  02B2  2ABD               	goto	u1945
  6751  02B3  0872               	movf	___lldiv@divisor+2,w
  6752  02B4  0276               	subwf	___lldiv@dividend+2,w
  6753  02B5  1D03               	skipz
  6754  02B6  2ABD               	goto	u1945
  6755  02B7  0871               	movf	___lldiv@divisor+1,w
  6756  02B8  0275               	subwf	___lldiv@dividend+1,w
  6757  02B9  1D03               	skipz
  6758  02BA  2ABD               	goto	u1945
  6759  02BB  0870               	movf	___lldiv@divisor,w
  6760  02BC  0274               	subwf	___lldiv@dividend,w
  6761  02BD                     u1945:
  6762  02BD  1C03               	skipc
  6763  02BE  2AC8               	goto	l2424
  6764  02BF  0870               	movf	___lldiv@divisor,w
  6765  02C0  02F4               	subwf	___lldiv@dividend,f
  6766  02C1  0871               	movf	___lldiv@divisor+1,w
  6767  02C2  3BF5               	subwfb	___lldiv@dividend+1,f
  6768  02C3  0872               	movf	___lldiv@divisor+2,w
  6769  02C4  3BF6               	subwfb	___lldiv@dividend+2,f
  6770  02C5  0873               	movf	___lldiv@divisor+3,w
  6771  02C6  3BF7               	subwfb	___lldiv@dividend+3,f
  6772  02C7  1478               	bsf	___lldiv@quotient,0
  6773  02C8                     l2424:
  6774  02C8  36F3               	lsrf	___lldiv@divisor+3,f
  6775  02C9  0CF2               	rrf	___lldiv@divisor+2,f
  6776  02CA  0CF1               	rrf	___lldiv@divisor+1,f
  6777  02CB  0CF0               	rrf	___lldiv@divisor,f
  6778  02CC  0BFC               	decfsz	___lldiv@counter,f
  6779  02CD  2AAB               	goto	l2416
  6780  02CE                     l2428:
  6781  02CE  087B               	movf	___lldiv@quotient+3,w
  6782  02CF  00F3               	movwf	?___lldiv+3
  6783  02D0  087A               	movf	___lldiv@quotient+2,w
  6784  02D1  00F2               	movwf	?___lldiv+2
  6785  02D2  0879               	movf	___lldiv@quotient+1,w
  6786  02D3  00F1               	movwf	?___lldiv+1
  6787  02D4  0878               	movf	___lldiv@quotient,w
  6788  02D5  00F0               	movwf	?___lldiv
  6789  02D6  0008               	return
  6790  02D7                     __end_of___lldiv:
  6791  02D7                     __ptext3:	
  6792 ;; *************** function _sprintf *****************
  6793 ;; Defined at:
  6794 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  6795 ;; Parameters:    Size  Location     Type
  6796 ;;  s               1    wreg     PTR unsigned char 
  6797 ;;		 -> buffer(50), 
  6798 ;;  fmt             2   67[BANK0 ] PTR const unsigned char 
  6799 ;;		 -> STR_5(8), STR_4(7), STR_1(15), 
  6800 ;; Auto vars:     Size  Location     Type
  6801 ;;  s               1    1[BANK1 ] PTR unsigned char 
  6802 ;;		 -> buffer(50), 
  6803 ;;  f               5    2[BANK1 ] struct _IO_FILE
  6804 ;;  ret             2    0        int 
  6805 ;;  ap              1    0[BANK1 ] PTR void [1]
  6806 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6807 ;; Return value:  Size  Location     Type
  6808 ;;                  2   67[BANK0 ] int 
  6809 ;; Registers used:
  6810 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6811 ;; Tracked objects:
  6812 ;;		On entry : 1F/0
  6813 ;;		On exit  : 1F/0
  6814 ;;		Unchanged: 0/0
  6815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6816 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6817 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  6818 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6819 ;;      Totals:         0       7       7       0       0       0       0       0       0       0       0       0       
      +0       0
  6820 ;;Total ram usage:       14 bytes
  6821 ;; Hardware stack levels used: 1
  6822 ;; Hardware stack levels required when called: 9
  6823 ;; This function calls:
  6824 ;;		_vfprintf
  6825 ;; This function is called by:
  6826 ;;		_main
  6827 ;; This function uses a non-reentrant model
  6828 ;;
  6829                           
  6830                           
  6831                           ;psect for function _sprintf
  6832  02D7                     _sprintf:
  6833                           
  6834                           ;incstack = 0
  6835                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6836                           ;sprintf@s stored from wreg
  6837  02D7  0021               	movlb	1	; select bank1
  6838  02D8  00CB               	movwf	sprintf@s^(0+128)
  6839  02D9  3065               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  6840  02DA  00CA               	movwf	sprintf@ap^(0+128)
  6841  02DB  084B               	movf	sprintf@s^(0+128),w
  6842  02DC  00CC               	movwf	sprintf@f^(0+128)
  6843  02DD  01CD               	clrf	(sprintf@f^(0+128)+1)
  6844  02DE  01CE               	clrf	((sprintf@f+1)^(0+128)+1)
  6845  02DF  01CF               	clrf	(sprintf@f^(0+128)+3)
  6846  02E0  01D0               	clrf	((sprintf@f+1)^(0+128)+3)
  6847  02E1  0020               	movlb	0	; select bank0
  6848  02E2  0864               	movf	sprintf@fmt+1,w
  6849  02E3  00DD               	movwf	vfprintf@fmt+1
  6850  02E4  0863               	movf	sprintf@fmt,w
  6851  02E5  00DC               	movwf	vfprintf@fmt
  6852  02E6  30CA               	movlw	(low (sprintf@ap| 0))& (0+255)
  6853  02E7  00DE               	movwf	vfprintf@ap
  6854  02E8  30CC               	movlw	(low (sprintf@f| 0))& (0+255)
  6855  02E9  22F4               	fcall	_vfprintf
  6856  02EA  0021               	movlb	1	; select bank1
  6857  02EB  084D               	movf	(sprintf@f^(0+128)+1),w
  6858  02EC  074B               	addwf	sprintf@s^(0+128),w
  6859  02ED  0020               	movlb	0	; select bank0
  6860  02EE  00E9               	movwf	??_sprintf
  6861  02EF  0086               	movwf	6
  6862  02F0  3001               	movlw	1	; select bank2/3
  6863  02F1  0087               	movwf	7
  6864  02F2  0181               	clrf	1
  6865  02F3  0008               	return
  6866  02F4                     __end_of_sprintf:
  6867  02F4                     __ptext7:	
  6868 ;; *************** function _vfprintf *****************
  6869 ;; Defined at:
  6870 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6871 ;; Parameters:    Size  Location     Type
  6872 ;;  fp              1    wreg     PTR struct _IO_FILE
  6873 ;;		 -> NULL(0), sprintf@f(5), 
  6874 ;;  fmt             2   60[BANK0 ] PTR const unsigned char 
  6875 ;;		 -> STR_6(22), STR_5(8), STR_4(7), STR_3(4), 
  6876 ;;		 -> STR_2(9), STR_1(15), buffer(50), 
  6877 ;;  ap              1   62[BANK0 ] PTR PTR void 
  6878 ;;		 -> printf@ap(1), sprintf@ap(1), 
  6879 ;; Auto vars:     Size  Location     Type
  6880 ;;  fp              1   64[BANK0 ] PTR struct _IO_FILE
  6881 ;;		 -> NULL(0), sprintf@f(5), 
  6882 ;;  cfmt            2   65[BANK0 ] PTR unsigned char 
  6883 ;;		 -> STR_6(22), STR_5(8), STR_4(7), STR_3(4), 
  6884 ;;		 -> STR_2(9), STR_1(15), buffer(50), 
  6885 ;; Return value:  Size  Location     Type
  6886 ;;                  2   60[BANK0 ] int 
  6887 ;; Registers used:
  6888 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6889 ;; Tracked objects:
  6890 ;;		On entry : 1F/0
  6891 ;;		On exit  : 1F/0
  6892 ;;		Unchanged: 0/0
  6893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6894 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6895 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6896 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6897 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6898 ;;Total ram usage:        7 bytes
  6899 ;; Hardware stack levels used: 1
  6900 ;; Hardware stack levels required when called: 8
  6901 ;; This function calls:
  6902 ;;		_vfpfcnvrt
  6903 ;; This function is called by:
  6904 ;;		_sprintf
  6905 ;;		_printf
  6906 ;; This function uses a non-reentrant model
  6907 ;;
  6908                           
  6909                           
  6910                           ;psect for function _vfprintf
  6911  02F4                     _vfprintf:
  6912                           
  6913                           ;incstack = 0
  6914                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6915                           ;vfprintf@fp stored from wreg
  6916  02F4  00E0               	movwf	vfprintf@fp
  6917                           
  6918                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  6919  02F5  085D               	movf	vfprintf@fmt+1,w
  6920  02F6  00E2               	movwf	vfprintf@cfmt+1
  6921  02F7  085C               	movf	vfprintf@fmt,w
  6922  02F8  00E1               	movwf	vfprintf@cfmt
  6923                           
  6924                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  6925  02F9  0021               	movlb	1	; select bank1
  6926  02FA  01A0               	clrf	_nout^(0+128)
  6927  02FB  01A1               	clrf	(_nout+1)^(0+128)
  6928  02FC                     l2438:	
  6929                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6930                           
  6931                           
  6932                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6933  02FC  0020               	movlb	0	; select bank0
  6934  02FD  0861               	movf	vfprintf@cfmt,w
  6935  02FE  0084               	movwf	4
  6936  02FF  0862               	movf	vfprintf@cfmt+1,w
  6937  0300  0085               	movwf	5
  6938  0301  0012               	moviw fsr0++
  6939  0302  1903               	btfsc	3,2
  6940  0303  2B14               	goto	l2440
  6941                           
  6942                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  6943  0304  3061               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  6944  0305  00CC               	movwf	vfpfcnvrt@fmt
  6945  0306  085E               	movf	vfprintf@ap,w
  6946  0307  00CD               	movwf	vfpfcnvrt@ap
  6947  0308  0860               	movf	vfprintf@fp,w
  6948  0309  318E  2683  3180   	fcall	_vfpfcnvrt
  6949  030C  084C               	movf	?_vfpfcnvrt,w
  6950  030D  0021               	movlb	1	; select bank1
  6951  030E  07A0               	addwf	_nout^(0+128),f
  6952  030F  0020               	movlb	0	; select bank0
  6953  0310  084D               	movf	?_vfpfcnvrt+1,w
  6954  0311  0021               	movlb	1	; select bank1
  6955  0312  3DA1               	addwfc	(_nout+1)^(0+128),f
  6956  0313  2AFC               	goto	l2438
  6957  0314                     l2440:
  6958                           
  6959                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  6960  0314  0021               	movlb	1	; select bank1
  6961  0315  0821               	movf	(_nout+1)^(0+128),w
  6962  0316  0020               	movlb	0	; select bank0
  6963  0317  00DD               	movwf	?_vfprintf+1
  6964  0318  0021               	movlb	1	; select bank1
  6965  0319  0820               	movf	_nout^(0+128),w
  6966  031A  0020               	movlb	0	; select bank0
  6967  031B  00DC               	movwf	?_vfprintf
  6968  031C  0008               	return
  6969  031D                     __end_of_vfprintf:
  6970  031D                     __ptext1:	
  6971 ;; *************** function _teclado_init *****************
  6972 ;; Defined at:
  6973 ;;		line 5 in file "teclado.c"
  6974 ;; Parameters:    Size  Location     Type
  6975 ;;		None
  6976 ;; Auto vars:     Size  Location     Type
  6977 ;;		None
  6978 ;; Return value:  Size  Location     Type
  6979 ;;                  1    wreg      void 
  6980 ;; Registers used:
  6981 ;;		wreg, status,2
  6982 ;; Tracked objects:
  6983 ;;		On entry : B1F/3
  6984 ;;		On exit  : B1F/1E
  6985 ;;		Unchanged: B00/0
  6986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6991 ;;Total ram usage:        0 bytes
  6992 ;; Hardware stack levels used: 1
  6993 ;; Hardware stack levels required when called: 1
  6994 ;; This function calls:
  6995 ;;		Nothing
  6996 ;; This function is called by:
  6997 ;;		_main
  6998 ;; This function uses a non-reentrant model
  6999 ;;
  7000                           
  7001                           
  7002                           ;psect for function _teclado_init
  7003  031D                     _teclado_init:
  7004                           
  7005                           ;teclado.c: 6:     PORTB = 0x00;
  7006                           
  7007                           ;incstack = 0
  7008                           ; Regs used in _teclado_init: [wreg+status,2]
  7009  031D  0020               	movlb	0	; select bank0
  7010  031E  018D               	clrf	13	;volatile
  7011                           
  7012                           ;teclado.c: 7:     LATA = 0;
  7013  031F  0196               	clrf	22	;volatile
  7014                           
  7015                           ;teclado.c: 8:     TRISB = 0b01111111;
  7016  0320  307F               	movlw	127
  7017  0321  0092               	movwf	18	;volatile
  7018                           
  7019                           ;teclado.c: 10:     TRISA = 0b11110000;
  7020  0322  30F0               	movlw	240
  7021  0323  0091               	movwf	17	;volatile
  7022                           
  7023                           ;teclado.c: 13:     WPUB = 0b00011110;
  7024  0324  301E               	movlw	30
  7025  0325  003E               	movlb	30	; select bank30
  7026  0326  00C4               	movwf	68	;volatile
  7027  0327  0008               	return
  7028  0328                     __end_of_teclado_init:
  7029  0328                     __ptext31:	
  7030 ;; *************** function ___bmul *****************
  7031 ;; Defined at:
  7032 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul8.c"
  7033 ;; Parameters:    Size  Location     Type
  7034 ;;  multiplier      1    wreg     unsigned char 
  7035 ;;  multiplicand    1    0[COMMON] unsigned char 
  7036 ;; Auto vars:     Size  Location     Type
  7037 ;;  multiplier      1    2[COMMON] unsigned char 
  7038 ;;  product         1    1[COMMON] unsigned char 
  7039 ;; Return value:  Size  Location     Type
  7040 ;;                  1    wreg      unsigned char 
  7041 ;; Registers used:
  7042 ;;		wreg, status,2, status,0
  7043 ;; Tracked objects:
  7044 ;;		On entry : 1F/3
  7045 ;;		On exit  : 1F/3
  7046 ;;		Unchanged: 1E/0
  7047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7048 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7049 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7051 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7052 ;;Total ram usage:        3 bytes
  7053 ;; Hardware stack levels used: 1
  7054 ;; Hardware stack levels required when called: 1
  7055 ;; This function calls:
  7056 ;;		Nothing
  7057 ;; This function is called by:
  7058 ;;		_EMC1001_read
  7059 ;; This function uses a non-reentrant model
  7060 ;;
  7061                           
  7062                           
  7063                           ;psect for function ___bmul
  7064  0328                     ___bmul:
  7065                           
  7066                           ;incstack = 0
  7067                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  7068                           ;___bmul@multiplier stored from wreg
  7069  0328  00F2               	movwf	___bmul@multiplier
  7070  0329  01F1               	clrf	___bmul@product
  7071  032A                     l2394:
  7072  032A  0870               	movf	___bmul@multiplicand,w
  7073  032B  1872               	btfsc	___bmul@multiplier,0
  7074  032C  07F1               	addwf	___bmul@product,f
  7075  032D  35F0               	lslf	___bmul@multiplicand,f
  7076  032E  36F2               	lsrf	___bmul@multiplier,f
  7077  032F  0872               	movf	___bmul@multiplier,w
  7078  0330  1D03               	btfss	3,2
  7079  0331  2B2A               	goto	l2394
  7080  0332  0871               	movf	___bmul@product,w
  7081  0333  0008               	return
  7082  0334                     __end_of___bmul:
  7083  0334                     PL12:
  7084  0334  0820               	movf	lcd_puts@dato,w
  7085  0335  0086               	movwf	6
  7086  0336  3001               	movlw	1	; select bank2/3
  7087  0337  0087               	movwf	7
  7088  0338  0801               	movf	1,w
  7089  0339  0008               	return
  7090  033A                     __end_ofPL12:
  7091                           
  7092                           	psect	bssBANK0
  7093  006C                     __pbssBANK0:
  7094  006C                     _flags:
  7095  006C                     	ds	2
  7096  006E                     _counts:
  7097  006E                     	ds	1
  7098  006F                     _high_byte:
  7099  006F                     	ds	1
  7100                           
  7101                           	psect	bssBANK1
  7102  00A0                     __pbssBANK1:
  7103  00A0                     _nout:
  7104  00A0                     	ds	2
  7105  00A2                     _width:
  7106  00A2                     	ds	2
  7107  00A4                     _prec:
  7108  00A4                     	ds	2
  7109  00A6                     _tecla:
  7110  00A6                     	ds	1
  7111  00A7                     _g_LcdY:
  7112  00A7                     	ds	1
  7113  00A8                     _countsAnterior:
  7114  00A8                     	ds	1
  7115  00A9                     _dbuf:
  7116  00A9                     	ds	32
  7117  00C9                     _low_byte:
  7118  00C9                     	ds	1
  7119                           
  7120                           	psect	bssBANK2
  7121  0120                     __pbssBANK2:
  7122  0120                     _buffer:
  7123  0120                     	ds	50
  7124                           
  7125                           	psect	clrtext
  7126  0777                     clear_ram0:	
  7127                           ;	Called with FSR0 containing the base address, and
  7128                           ;	WREG with the size to clear
  7129                           
  7130  0777  0064               	clrwdt	;clear the watchdog before getting into this loop
  7131  0778                     clrloop0:
  7132  0778  0180               	clrf	0	;clear RAM location pointed to by FSR
  7133  0779  3101               	addfsr 0,1
  7134  077A  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  7135  077B  2F78               	goto	clrloop0	;have we reached the end yet?
  7136  077C  3400               	retlw	0	;all done for this memory range, return
  7137                           
  7138                           	psect	cstackBANK1
  7139  00CA                     __pcstackBANK1:
  7140  00CA                     sprintf@ap:
  7141                           
  7142                           ; 1 bytes @ 0x0
  7143  00CA                     	ds	1
  7144  00CB                     sprintf@s:
  7145                           
  7146                           ; 1 bytes @ 0x1
  7147  00CB                     	ds	1
  7148  00CC                     sprintf@f:
  7149                           
  7150                           ; 5 bytes @ 0x2
  7151  00CC                     	ds	5
  7152                           
  7153                           	psect	cstackCOMMON
  7154  0070                     __pcstackCOMMON:
  7155  0070                     ?_port_init:
  7156  0070                     ??_port_init:	
  7157                           ; 1 bytes @ 0x0
  7158                           
  7159  0070                     ?_adc_init:	
  7160                           ; 1 bytes @ 0x0
  7161                           
  7162  0070                     ??_adc_init:	
  7163                           ; 1 bytes @ 0x0
  7164                           
  7165  0070                     ?_I2C_init:	
  7166                           ; 1 bytes @ 0x0
  7167                           
  7168  0070                     ??_I2C_init:	
  7169                           ; 1 bytes @ 0x0
  7170                           
  7171  0070                     ?_teclado_init:	
  7172                           ; 1 bytes @ 0x0
  7173                           
  7174  0070                     ??_teclado_init:	
  7175                           ; 1 bytes @ 0x0
  7176                           
  7177  0070                     ?_enable_interrupt:	
  7178                           ; 1 bytes @ 0x0
  7179                           
  7180  0070                     ??_enable_interrupt:	
  7181                           ; 1 bytes @ 0x0
  7182                           
  7183  0070                     ?_lcd_init:	
  7184                           ; 1 bytes @ 0x0
  7185                           
  7186  0070                     ?_lcd_puts:	
  7187                           ; 1 bytes @ 0x0
  7188                           
  7189  0070                     ?_teclado_get:	
  7190                           ; 1 bytes @ 0x0
  7191                           
  7192  0070                     ??_teclado_get:	
  7193                           ; 1 bytes @ 0x0
  7194                           
  7195  0070                     ?_main:	
  7196                           ; 1 bytes @ 0x0
  7197                           
  7198  0070                     ?_uart_tx:	
  7199                           ; 1 bytes @ 0x0
  7200                           
  7201  0070                     ??_uart_tx:	
  7202                           ; 1 bytes @ 0x0
  7203                           
  7204  0070                     ?_putch:	
  7205                           ; 1 bytes @ 0x0
  7206                           
  7207  0070                     ?_I2C_start:	
  7208                           ; 1 bytes @ 0x0
  7209                           
  7210  0070                     ??_I2C_start:	
  7211                           ; 1 bytes @ 0x0
  7212                           
  7213  0070                     ?_I2C_restart:	
  7214                           ; 1 bytes @ 0x0
  7215                           
  7216  0070                     ??_I2C_restart:	
  7217                           ; 1 bytes @ 0x0
  7218                           
  7219  0070                     ?_I2C_stop:	
  7220                           ; 1 bytes @ 0x0
  7221                           
  7222  0070                     ??_I2C_stop:	
  7223                           ; 1 bytes @ 0x0
  7224                           
  7225  0070                     ?_I2C_read:	
  7226                           ; 1 bytes @ 0x0
  7227                           
  7228  0070                     ??_I2C_read:	
  7229                           ; 1 bytes @ 0x0
  7230                           
  7231  0070                     ?_I2C_ack:	
  7232                           ; 1 bytes @ 0x0
  7233                           
  7234  0070                     ??_I2C_ack:	
  7235                           ; 1 bytes @ 0x0
  7236                           
  7237  0070                     ?_I2C_write:	
  7238                           ; 1 bytes @ 0x0
  7239                           
  7240  0070                     ??_I2C_write:	
  7241                           ; 1 bytes @ 0x0
  7242                           
  7243  0070                     ?_Write_PCF:	
  7244                           ; 1 bytes @ 0x0
  7245                           
  7246  0070                     ?_INTERRUPT_InterruptManager:	
  7247                           ; 1 bytes @ 0x0
  7248                           
  7249  0070                     ??_INTERRUPT_InterruptManager:	
  7250                           ; 1 bytes @ 0x0
  7251                           
  7252  0070                     ?___bmul:	
  7253                           ; 1 bytes @ 0x0
  7254                           
  7255  0070                     ??___aodiv:	
  7256                           ; 1 bytes @ 0x0
  7257                           
  7258  0070                     ??___aomod:	
  7259                           ; 1 bytes @ 0x0
  7260                           
  7261  0070                     ?_strlen:	
  7262                           ; 1 bytes @ 0x0
  7263                           
  7264  0070                     ?___lldiv:	
  7265                           ; 2 bytes @ 0x0
  7266                           
  7267  0070                     I2C_write@I2C_data:	
  7268                           ; 4 bytes @ 0x0
  7269                           
  7270  0070                     ___bmul@multiplicand:	
  7271                           ; 1 bytes @ 0x0
  7272                           
  7273  0070                     ___lldiv@divisor:	
  7274                           ; 1 bytes @ 0x0
  7275                           
  7276                           
  7277                           ; 4 bytes @ 0x0
  7278  0070                     	ds	1
  7279  0071                     ??_Write_PCF:
  7280  0071                     ??___bmul:	
  7281                           ; 1 bytes @ 0x1
  7282                           
  7283  0071                     uart_tx@dato:	
  7284                           ; 1 bytes @ 0x1
  7285                           
  7286  0071                     Write_PCF@dato:	
  7287                           ; 1 bytes @ 0x1
  7288                           
  7289  0071                     ___bmul@product:	
  7290                           ; 1 bytes @ 0x1
  7291                           
  7292  0071                     ___aodiv@counter:	
  7293                           ; 1 bytes @ 0x1
  7294                           
  7295  0071                     ___aomod@counter:	
  7296                           ; 1 bytes @ 0x1
  7297                           
  7298                           
  7299                           ; 1 bytes @ 0x1
  7300  0071                     	ds	1
  7301  0072                     ??_strlen:
  7302  0072                     ??_putch:	
  7303                           ; 1 bytes @ 0x2
  7304                           
  7305  0072                     ?_Send_D7_D4:	
  7306                           ; 1 bytes @ 0x2
  7307                           
  7308  0072                     putch@dato:	
  7309                           ; 1 bytes @ 0x2
  7310                           
  7311  0072                     Send_D7_D4@nibble:	
  7312                           ; 1 bytes @ 0x2
  7313                           
  7314  0072                     ___bmul@multiplier:	
  7315                           ; 1 bytes @ 0x2
  7316                           
  7317  0072                     ___aodiv@sign:	
  7318                           ; 1 bytes @ 0x2
  7319                           
  7320  0072                     ___aomod@sign:	
  7321                           ; 1 bytes @ 0x2
  7322                           
  7323  0072                     strlen@a:	
  7324                           ; 1 bytes @ 0x2
  7325                           
  7326                           
  7327                           ; 1 bytes @ 0x2
  7328  0072                     	ds	1
  7329  0073                     ?_EMC1001_read:
  7330  0073                     ??_Send_D7_D4:	
  7331                           ; 1 bytes @ 0x3
  7332                           
  7333  0073                     ?_fputc:	
  7334                           ; 1 bytes @ 0x3
  7335                           
  7336  0073                     ?_abs:	
  7337                           ; 2 bytes @ 0x3
  7338                           
  7339  0073                     Send_D7_D4@address:	
  7340                           ; 2 bytes @ 0x3
  7341                           
  7342  0073                     EMC1001_read@TL:	
  7343                           ; 1 bytes @ 0x3
  7344                           
  7345  0073                     strlen@s:	
  7346                           ; 1 bytes @ 0x3
  7347                           
  7348  0073                     abs@a:	
  7349                           ; 1 bytes @ 0x3
  7350                           
  7351  0073                     fputc@c:	
  7352                           ; 2 bytes @ 0x3
  7353                           
  7354  0073                     ___aodiv@quotient:	
  7355                           ; 2 bytes @ 0x3
  7356                           
  7357                           
  7358                           ; 8 bytes @ 0x3
  7359  0073                     	ds	1
  7360  0074                     ??_EMC1001_read:
  7361  0074                     Send_D7_D4@datos:	
  7362                           ; 1 bytes @ 0x4
  7363                           
  7364  0074                     EMC1001_read@TH:	
  7365                           ; 1 bytes @ 0x4
  7366                           
  7367  0074                     ___lldiv@dividend:	
  7368                           ; 1 bytes @ 0x4
  7369                           
  7370                           
  7371                           ; 4 bytes @ 0x4
  7372  0074                     	ds	1
  7373  0075                     ??_abs:
  7374  0075                     ?_lcd_send_byte:	
  7375                           ; 1 bytes @ 0x5
  7376                           
  7377  0075                     lcd_send_byte@n:	
  7378                           ; 1 bytes @ 0x5
  7379                           
  7380  0075                     fputc@fp:	
  7381                           ; 1 bytes @ 0x5
  7382                           
  7383                           
  7384                           ; 1 bytes @ 0x5
  7385  0075                     	ds	1
  7386  0076                     ??_fputc:
  7387  0076                     ??_lcd_send_byte:	
  7388                           ; 1 bytes @ 0x6
  7389                           
  7390  0076                     lcd_send_byte@address:	
  7391                           ; 1 bytes @ 0x6
  7392                           
  7393                           
  7394                           ; 1 bytes @ 0x6
  7395  0076                     	ds	1
  7396  0077                     ??_lcd_init:
  7397  0077                     ?_lcd_gotoxy:	
  7398                           ; 1 bytes @ 0x7
  7399                           
  7400  0077                     lcd_gotoxy@y:	
  7401                           ; 1 bytes @ 0x7
  7402                           
  7403                           
  7404                           ; 1 bytes @ 0x7
  7405  0077                     	ds	1
  7406  0078                     ??_lcd_gotoxy:
  7407  0078                     ??___lldiv:	
  7408                           ; 1 bytes @ 0x8
  7409                           
  7410  0078                     ___lldiv@quotient:	
  7411                           ; 1 bytes @ 0x8
  7412                           
  7413                           
  7414                           ; 4 bytes @ 0x8
  7415  0078                     	ds	1
  7416  0079                     lcd_init@i:
  7417                           
  7418                           ; 1 bytes @ 0x9
  7419  0079                     	ds	1
  7420  007A                     lcd_gotoxy@x:
  7421                           
  7422                           ; 1 bytes @ 0xA
  7423  007A                     	ds	1
  7424  007B                     ?_fputs:
  7425  007B                     ?_ctoa:	
  7426                           ; 2 bytes @ 0xB
  7427                           
  7428  007B                     lcd_gotoxy@address:	
  7429                           ; 2 bytes @ 0xB
  7430                           
  7431  007B                     ctoa@c:	
  7432                           ; 1 bytes @ 0xB
  7433                           
  7434  007B                     fputs@fp:	
  7435                           ; 1 bytes @ 0xB
  7436                           
  7437                           
  7438                           ; 1 bytes @ 0xB
  7439  007B                     	ds	1
  7440  007C                     ??_lcd_puts:
  7441  007C                     ??_fputs:	
  7442                           ; 1 bytes @ 0xC
  7443                           
  7444  007C                     ___lldiv@counter:	
  7445                           ; 1 bytes @ 0xC
  7446                           
  7447                           
  7448                           ; 1 bytes @ 0xC
  7449  007C                     	ds	1
  7450  007D                     ??_pad:
  7451  007D                     ??_ctoa:	
  7452                           ; 1 bytes @ 0xD
  7453                           
  7454                           
  7455                           ; 1 bytes @ 0xD
  7456  007D                     	ds	1
  7457  007E                     ??_printf:
  7458                           
  7459                           	psect	cstackBANK0
  7460  0020                     __pcstackBANK0:	
  7461                           ; 1 bytes @ 0xE
  7462                           
  7463  0020                     ?_serial_init:
  7464  0020                     ?___aodiv:	
  7465                           ; 1 bytes @ 0x0
  7466                           
  7467  0020                     ?___aomod:	
  7468                           ; 8 bytes @ 0x0
  7469                           
  7470  0020                     lcd_puts@dato:	
  7471                           ; 8 bytes @ 0x0
  7472                           
  7473  0020                     fputs@c:	
  7474                           ; 1 bytes @ 0x0
  7475                           
  7476  0020                     ctoa@l:	
  7477                           ; 1 bytes @ 0x0
  7478                           
  7479  0020                     serial_init@baudios:	
  7480                           ; 2 bytes @ 0x0
  7481                           
  7482  0020                     ___aodiv@divisor:	
  7483                           ; 4 bytes @ 0x0
  7484                           
  7485  0020                     ___aomod@divisor:	
  7486                           ; 8 bytes @ 0x0
  7487                           
  7488                           
  7489                           ; 8 bytes @ 0x0
  7490  0020                     	ds	1
  7491  0021                     fputs@i:
  7492                           
  7493                           ; 2 bytes @ 0x1
  7494  0021                     	ds	1
  7495  0022                     ctoa@w:
  7496                           
  7497                           ; 2 bytes @ 0x2
  7498  0022                     	ds	1
  7499  0023                     fputs@s:
  7500                           
  7501                           ; 1 bytes @ 0x3
  7502  0023                     	ds	1
  7503  0024                     ??_serial_init:
  7504  0024                     ?_pad:	
  7505                           ; 1 bytes @ 0x4
  7506                           
  7507  0024                     pad@buf:	
  7508                           ; 2 bytes @ 0x4
  7509                           
  7510  0024                     ctoa@fp:	
  7511                           ; 1 bytes @ 0x4
  7512                           
  7513                           
  7514                           ; 1 bytes @ 0x4
  7515  0024                     	ds	1
  7516  0025                     pad@p:
  7517                           
  7518                           ; 2 bytes @ 0x5
  7519  0025                     	ds	2
  7520  0027                     pad@i:
  7521                           
  7522                           ; 2 bytes @ 0x7
  7523  0027                     	ds	1
  7524  0028                     serial_init@sx:
  7525  0028                     ___aodiv@dividend:	
  7526                           ; 2 bytes @ 0x8
  7527                           
  7528  0028                     ___aomod@dividend:	
  7529                           ; 8 bytes @ 0x8
  7530                           
  7531                           
  7532                           ; 8 bytes @ 0x8
  7533  0028                     	ds	1
  7534  0029                     pad@w:
  7535                           
  7536                           ; 2 bytes @ 0x9
  7537  0029                     	ds	2
  7538  002B                     pad@fp:
  7539                           
  7540                           ; 1 bytes @ 0xB
  7541  002B                     	ds	5
  7542  0030                     ?_dtoa:
  7543  0030                     dtoa@d:	
  7544                           ; 2 bytes @ 0x10
  7545                           
  7546                           
  7547                           ; 8 bytes @ 0x10
  7548  0030                     	ds	8
  7549  0038                     ??_dtoa:
  7550                           
  7551                           ; 1 bytes @ 0x18
  7552  0038                     	ds	1
  7553  0039                     _dtoa$1017:
  7554                           
  7555                           ; 2 bytes @ 0x19
  7556  0039                     	ds	2
  7557  003B                     dtoa@fp:
  7558                           
  7559                           ; 1 bytes @ 0x1B
  7560  003B                     	ds	1
  7561  003C                     dtoa@p:
  7562                           
  7563                           ; 2 bytes @ 0x1C
  7564  003C                     	ds	2
  7565  003E                     dtoa@w:
  7566                           
  7567                           ; 2 bytes @ 0x1E
  7568  003E                     	ds	2
  7569  0040                     dtoa@s:
  7570                           
  7571                           ; 2 bytes @ 0x20
  7572  0040                     	ds	2
  7573  0042                     dtoa@n:
  7574                           
  7575                           ; 8 bytes @ 0x22
  7576  0042                     	ds	8
  7577  004A                     dtoa@i:
  7578                           
  7579                           ; 2 bytes @ 0x2A
  7580  004A                     	ds	2
  7581  004C                     ?_vfpfcnvrt:
  7582  004C                     vfpfcnvrt@fmt:	
  7583                           ; 2 bytes @ 0x2C
  7584                           
  7585                           
  7586                           ; 1 bytes @ 0x2C
  7587  004C                     	ds	1
  7588  004D                     vfpfcnvrt@ap:
  7589                           
  7590                           ; 1 bytes @ 0x2D
  7591  004D                     	ds	1
  7592  004E                     ??_vfpfcnvrt:
  7593                           
  7594                           ; 1 bytes @ 0x2E
  7595  004E                     	ds	3
  7596  0051                     vfpfcnvrt@ll:
  7597                           
  7598                           ; 8 bytes @ 0x31
  7599  0051                     	ds	8
  7600  0059                     vfpfcnvrt@c:
  7601                           
  7602                           ; 1 bytes @ 0x39
  7603  0059                     	ds	1
  7604  005A                     vfpfcnvrt@vp:
  7605                           
  7606                           ; 1 bytes @ 0x3A
  7607  005A                     	ds	1
  7608  005B                     vfpfcnvrt@fp:
  7609                           
  7610                           ; 1 bytes @ 0x3B
  7611  005B                     	ds	1
  7612  005C                     ?_vfprintf:
  7613  005C                     vfprintf@fmt:	
  7614                           ; 2 bytes @ 0x3C
  7615                           
  7616                           
  7617                           ; 2 bytes @ 0x3C
  7618  005C                     	ds	2
  7619  005E                     vfprintf@ap:
  7620                           
  7621                           ; 1 bytes @ 0x3E
  7622  005E                     	ds	1
  7623  005F                     ??_vfprintf:
  7624                           
  7625                           ; 1 bytes @ 0x3F
  7626  005F                     	ds	1
  7627  0060                     vfprintf@fp:
  7628                           
  7629                           ; 1 bytes @ 0x40
  7630  0060                     	ds	1
  7631  0061                     vfprintf@cfmt:
  7632                           
  7633                           ; 2 bytes @ 0x41
  7634  0061                     	ds	2
  7635  0063                     ?_sprintf:
  7636  0063                     ?_printf:	
  7637                           ; 2 bytes @ 0x43
  7638                           
  7639  0063                     sprintf@fmt:	
  7640                           ; 2 bytes @ 0x43
  7641                           
  7642  0063                     printf@fmt:	
  7643                           ; 2 bytes @ 0x43
  7644                           
  7645                           
  7646                           ; 2 bytes @ 0x43
  7647  0063                     	ds	4
  7648  0067                     printf@ap:
  7649                           
  7650                           ; 1 bytes @ 0x47
  7651  0067                     	ds	2
  7652  0069                     ??_sprintf:
  7653                           
  7654                           ; 1 bytes @ 0x49
  7655  0069                     	ds	1
  7656  006A                     ??_main:
  7657                           
  7658                           ; 1 bytes @ 0x4A
  7659  006A                     	ds	2
  7660                           
  7661                           	psect	text2
  7662  063C                     __ptext2:	
  7663 ;; *************** function _teclado_get *****************
  7664 ;; Defined at:
  7665 ;;		line 17 in file "teclado.c"
  7666 ;; Parameters:    Size  Location     Type
  7667 ;;		None
  7668 ;; Auto vars:     Size  Location     Type
  7669 ;;		None
  7670 ;; Return value:  Size  Location     Type
  7671 ;;                  1    wreg      unsigned char 
  7672 ;; Registers used:
  7673 ;;		wreg
  7674 ;; Tracked objects:
  7675 ;;		On entry : 0/0
  7676 ;;		On exit  : 1F/0
  7677 ;;		Unchanged: 0/0
  7678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7681 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7682 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7683 ;;Total ram usage:        2 bytes
  7684 ;; Hardware stack levels used: 1
  7685 ;; Hardware stack levels required when called: 1
  7686 ;; This function calls:
  7687 ;;		Nothing
  7688 ;; This function is called by:
  7689 ;;		_main
  7690 ;; This function uses a non-reentrant model
  7691 ;;
  7692                           
  7693                           
  7694                           ;psect for function _teclado_get
  7695  063C                     _teclado_get:
  7696                           
  7697                           ;teclado.c: 18:     LATAbits.LATA0 = 0; LATAbits.LATA1 = 1; LATAbits.LATA2 = 1; LATAbits
      +                          .LATA3 = 1;
  7698                           
  7699                           ;incstack = 0
  7700                           ; Regs used in _teclado_get: [wreg]
  7701  063C  0020               	movlb	0	; select bank0
  7702  063D  1016               	bcf	22,0	;volatile
  7703  063E  1496               	bsf	22,1	;volatile
  7704  063F  1516               	bsf	22,2	;volatile
  7705  0640  1596               	bsf	22,3	;volatile
  7706                           
  7707                           ;teclado.c: 19:             _delay((unsigned long)((10)*(32000000UL/4000000.0)));
  7708  0641  301A               	movlw	26
  7709  0642                     u2387:
  7710  0642  0B89               	decfsz	9,f
  7711  0643  2E42               	goto	u2387
  7712  0644  3200               	nop2
  7713                           
  7714                           ;teclado.c: 20:             if (PORTBbits.RB1 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB1==0); return '1'; }
  7715  0645  0020               	movlb	0	; select bank0
  7716  0646  188D               	btfsc	13,1	;volatile
  7717  0647  2E58               	goto	l370
  7718  0648  3005               	movlw	5
  7719  0649  00F1               	movwf	??_teclado_get+1
  7720  064A  300F               	movlw	15
  7721  064B  00F0               	movwf	??_teclado_get
  7722  064C  30F1               	movlw	241
  7723  064D                     u2397:
  7724  064D  0B89               	decfsz	9,f
  7725  064E  2E4D               	goto	u2397
  7726  064F  0BF0               	decfsz	??_teclado_get,f
  7727  0650  2E4D               	goto	u2397
  7728  0651  0BF1               	decfsz	??_teclado_get+1,f
  7729  0652  2E4D               	goto	u2397
  7730  0653  0000               	nop
  7731  0654                     l371:
  7732  0654  0020               	movlb	0	; select bank0
  7733  0655  188D               	btfsc	13,1	;volatile
  7734  0656  3431               	retlw	49
  7735  0657  2E54               	goto	l371
  7736  0658                     l370:
  7737                           
  7738                           ;teclado.c: 21:             if (PORTBbits.RB2 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB2==0); return '2'; }
  7739  0658  190D               	btfsc	13,2	;volatile
  7740  0659  2E6A               	goto	l375
  7741  065A  3005               	movlw	5
  7742  065B  00F1               	movwf	??_teclado_get+1
  7743  065C  300F               	movlw	15
  7744  065D  00F0               	movwf	??_teclado_get
  7745  065E  30F1               	movlw	241
  7746  065F                     u2407:
  7747  065F  0B89               	decfsz	9,f
  7748  0660  2E5F               	goto	u2407
  7749  0661  0BF0               	decfsz	??_teclado_get,f
  7750  0662  2E5F               	goto	u2407
  7751  0663  0BF1               	decfsz	??_teclado_get+1,f
  7752  0664  2E5F               	goto	u2407
  7753  0665  0000               	nop
  7754  0666                     l376:
  7755  0666  0020               	movlb	0	; select bank0
  7756  0667  190D               	btfsc	13,2	;volatile
  7757  0668  3432               	retlw	50
  7758  0669  2E66               	goto	l376
  7759  066A                     l375:
  7760                           
  7761                           ;teclado.c: 22:             if (PORTBbits.RB3 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB3==0); return '3'; }
  7762  066A  198D               	btfsc	13,3	;volatile
  7763  066B  2E7C               	goto	l379
  7764  066C  3005               	movlw	5
  7765  066D  00F1               	movwf	??_teclado_get+1
  7766  066E  300F               	movlw	15
  7767  066F  00F0               	movwf	??_teclado_get
  7768  0670  30F1               	movlw	241
  7769  0671                     u2417:
  7770  0671  0B89               	decfsz	9,f
  7771  0672  2E71               	goto	u2417
  7772  0673  0BF0               	decfsz	??_teclado_get,f
  7773  0674  2E71               	goto	u2417
  7774  0675  0BF1               	decfsz	??_teclado_get+1,f
  7775  0676  2E71               	goto	u2417
  7776  0677  0000               	nop
  7777  0678                     l380:
  7778  0678  0020               	movlb	0	; select bank0
  7779  0679  198D               	btfsc	13,3	;volatile
  7780  067A  3433               	retlw	51
  7781  067B  2E78               	goto	l380
  7782  067C                     l379:
  7783                           
  7784                           ;teclado.c: 23:             if (PORTBbits.RB4 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB4==0); return 'A'; }
  7785  067C  1A0D               	btfsc	13,4	;volatile
  7786  067D  2E8E               	goto	l383
  7787  067E  3005               	movlw	5
  7788  067F  00F1               	movwf	??_teclado_get+1
  7789  0680  300F               	movlw	15
  7790  0681  00F0               	movwf	??_teclado_get
  7791  0682  30F1               	movlw	241
  7792  0683                     u2427:
  7793  0683  0B89               	decfsz	9,f
  7794  0684  2E83               	goto	u2427
  7795  0685  0BF0               	decfsz	??_teclado_get,f
  7796  0686  2E83               	goto	u2427
  7797  0687  0BF1               	decfsz	??_teclado_get+1,f
  7798  0688  2E83               	goto	u2427
  7799  0689  0000               	nop
  7800  068A                     l384:
  7801  068A  0020               	movlb	0	; select bank0
  7802  068B  1A0D               	btfsc	13,4	;volatile
  7803  068C  3441               	retlw	65
  7804  068D  2E8A               	goto	l384
  7805  068E                     l383:
  7806                           
  7807                           ;teclado.c: 25:             LATAbits.LATA0 = 1; LATAbits.LATA1 = 0; LATAbits.LATA2 = 1; 
      +                          LATAbits.LATA3 = 1;
  7808  068E  1416               	bsf	22,0	;volatile
  7809  068F  1096               	bcf	22,1	;volatile
  7810  0690  1516               	bsf	22,2	;volatile
  7811  0691  1596               	bsf	22,3	;volatile
  7812                           
  7813                           ;teclado.c: 27:             if (PORTBbits.RB1 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB1==0); return '4'; }
  7814  0692  188D               	btfsc	13,1	;volatile
  7815  0693  2EA4               	goto	l387
  7816  0694  3005               	movlw	5
  7817  0695  00F1               	movwf	??_teclado_get+1
  7818  0696  300F               	movlw	15
  7819  0697  00F0               	movwf	??_teclado_get
  7820  0698  30F1               	movlw	241
  7821  0699                     u2437:
  7822  0699  0B89               	decfsz	9,f
  7823  069A  2E99               	goto	u2437
  7824  069B  0BF0               	decfsz	??_teclado_get,f
  7825  069C  2E99               	goto	u2437
  7826  069D  0BF1               	decfsz	??_teclado_get+1,f
  7827  069E  2E99               	goto	u2437
  7828  069F  0000               	nop
  7829  06A0                     l388:
  7830  06A0  0020               	movlb	0	; select bank0
  7831  06A1  188D               	btfsc	13,1	;volatile
  7832  06A2  3434               	retlw	52
  7833  06A3  2EA0               	goto	l388
  7834  06A4                     l387:
  7835                           
  7836                           ;teclado.c: 28:             if (PORTBbits.RB2 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB2==0); return '5'; }
  7837  06A4  190D               	btfsc	13,2	;volatile
  7838  06A5  2EB6               	goto	l391
  7839  06A6  3005               	movlw	5
  7840  06A7  00F1               	movwf	??_teclado_get+1
  7841  06A8  300F               	movlw	15
  7842  06A9  00F0               	movwf	??_teclado_get
  7843  06AA  30F1               	movlw	241
  7844  06AB                     u2447:
  7845  06AB  0B89               	decfsz	9,f
  7846  06AC  2EAB               	goto	u2447
  7847  06AD  0BF0               	decfsz	??_teclado_get,f
  7848  06AE  2EAB               	goto	u2447
  7849  06AF  0BF1               	decfsz	??_teclado_get+1,f
  7850  06B0  2EAB               	goto	u2447
  7851  06B1  0000               	nop
  7852  06B2                     l392:
  7853  06B2  0020               	movlb	0	; select bank0
  7854  06B3  190D               	btfsc	13,2	;volatile
  7855  06B4  3435               	retlw	53
  7856  06B5  2EB2               	goto	l392
  7857  06B6                     l391:
  7858                           
  7859                           ;teclado.c: 29:             if (PORTBbits.RB3 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB3==0); return '6'; }
  7860  06B6  198D               	btfsc	13,3	;volatile
  7861  06B7  2EC8               	goto	l395
  7862  06B8  3005               	movlw	5
  7863  06B9  00F1               	movwf	??_teclado_get+1
  7864  06BA  300F               	movlw	15
  7865  06BB  00F0               	movwf	??_teclado_get
  7866  06BC  30F1               	movlw	241
  7867  06BD                     u2457:
  7868  06BD  0B89               	decfsz	9,f
  7869  06BE  2EBD               	goto	u2457
  7870  06BF  0BF0               	decfsz	??_teclado_get,f
  7871  06C0  2EBD               	goto	u2457
  7872  06C1  0BF1               	decfsz	??_teclado_get+1,f
  7873  06C2  2EBD               	goto	u2457
  7874  06C3  0000               	nop
  7875  06C4                     l396:
  7876  06C4  0020               	movlb	0	; select bank0
  7877  06C5  198D               	btfsc	13,3	;volatile
  7878  06C6  3436               	retlw	54
  7879  06C7  2EC4               	goto	l396
  7880  06C8                     l395:
  7881                           
  7882                           ;teclado.c: 30:             if (PORTBbits.RB4 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB4==0); return 'B'; }
  7883  06C8  1A0D               	btfsc	13,4	;volatile
  7884  06C9  2EDA               	goto	l399
  7885  06CA  3005               	movlw	5
  7886  06CB  00F1               	movwf	??_teclado_get+1
  7887  06CC  300F               	movlw	15
  7888  06CD  00F0               	movwf	??_teclado_get
  7889  06CE  30F1               	movlw	241
  7890  06CF                     u2467:
  7891  06CF  0B89               	decfsz	9,f
  7892  06D0  2ECF               	goto	u2467
  7893  06D1  0BF0               	decfsz	??_teclado_get,f
  7894  06D2  2ECF               	goto	u2467
  7895  06D3  0BF1               	decfsz	??_teclado_get+1,f
  7896  06D4  2ECF               	goto	u2467
  7897  06D5  0000               	nop
  7898  06D6                     l400:
  7899  06D6  0020               	movlb	0	; select bank0
  7900  06D7  1A0D               	btfsc	13,4	;volatile
  7901  06D8  3442               	retlw	66
  7902  06D9  2ED6               	goto	l400
  7903  06DA                     l399:
  7904                           
  7905                           ;teclado.c: 32:             LATAbits.LATA0 = 1; LATAbits.LATA1 = 1; LATAbits.LATA2 = 0; 
      +                          LATAbits.LATA3 = 1;
  7906  06DA  1416               	bsf	22,0	;volatile
  7907  06DB  1496               	bsf	22,1	;volatile
  7908  06DC  1116               	bcf	22,2	;volatile
  7909  06DD  1596               	bsf	22,3	;volatile
  7910                           
  7911                           ;teclado.c: 34:             if (PORTBbits.RB1 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB1==0); return '7'; }
  7912  06DE  188D               	btfsc	13,1	;volatile
  7913  06DF  2EF0               	goto	l403
  7914  06E0  3005               	movlw	5
  7915  06E1  00F1               	movwf	??_teclado_get+1
  7916  06E2  300F               	movlw	15
  7917  06E3  00F0               	movwf	??_teclado_get
  7918  06E4  30F1               	movlw	241
  7919  06E5                     u2477:
  7920  06E5  0B89               	decfsz	9,f
  7921  06E6  2EE5               	goto	u2477
  7922  06E7  0BF0               	decfsz	??_teclado_get,f
  7923  06E8  2EE5               	goto	u2477
  7924  06E9  0BF1               	decfsz	??_teclado_get+1,f
  7925  06EA  2EE5               	goto	u2477
  7926  06EB  0000               	nop
  7927  06EC                     l404:
  7928  06EC  0020               	movlb	0	; select bank0
  7929  06ED  188D               	btfsc	13,1	;volatile
  7930  06EE  3437               	retlw	55
  7931  06EF  2EEC               	goto	l404
  7932  06F0                     l403:
  7933                           
  7934                           ;teclado.c: 35:             if (PORTBbits.RB2 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB2==0); return '8'; }
  7935  06F0  190D               	btfsc	13,2	;volatile
  7936  06F1  2F02               	goto	l407
  7937  06F2  3005               	movlw	5
  7938  06F3  00F1               	movwf	??_teclado_get+1
  7939  06F4  300F               	movlw	15
  7940  06F5  00F0               	movwf	??_teclado_get
  7941  06F6  30F1               	movlw	241
  7942  06F7                     u2487:
  7943  06F7  0B89               	decfsz	9,f
  7944  06F8  2EF7               	goto	u2487
  7945  06F9  0BF0               	decfsz	??_teclado_get,f
  7946  06FA  2EF7               	goto	u2487
  7947  06FB  0BF1               	decfsz	??_teclado_get+1,f
  7948  06FC  2EF7               	goto	u2487
  7949  06FD  0000               	nop
  7950  06FE                     l408:
  7951  06FE  0020               	movlb	0	; select bank0
  7952  06FF  190D               	btfsc	13,2	;volatile
  7953  0700  3438               	retlw	56
  7954  0701  2EFE               	goto	l408
  7955  0702                     l407:
  7956                           
  7957                           ;teclado.c: 36:             if (PORTBbits.RB3 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB3==0); return '9'; }
  7958  0702  198D               	btfsc	13,3	;volatile
  7959  0703  2F14               	goto	l411
  7960  0704  3005               	movlw	5
  7961  0705  00F1               	movwf	??_teclado_get+1
  7962  0706  300F               	movlw	15
  7963  0707  00F0               	movwf	??_teclado_get
  7964  0708  30F1               	movlw	241
  7965  0709                     u2497:
  7966  0709  0B89               	decfsz	9,f
  7967  070A  2F09               	goto	u2497
  7968  070B  0BF0               	decfsz	??_teclado_get,f
  7969  070C  2F09               	goto	u2497
  7970  070D  0BF1               	decfsz	??_teclado_get+1,f
  7971  070E  2F09               	goto	u2497
  7972  070F  0000               	nop
  7973  0710                     l412:
  7974  0710  0020               	movlb	0	; select bank0
  7975  0711  198D               	btfsc	13,3	;volatile
  7976  0712  3439               	retlw	57
  7977  0713  2F10               	goto	l412
  7978  0714                     l411:
  7979                           
  7980                           ;teclado.c: 37:             if (PORTBbits.RB4 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB4==0); return 'C'; }
  7981  0714  1A0D               	btfsc	13,4	;volatile
  7982  0715  2F26               	goto	l415
  7983  0716  3005               	movlw	5
  7984  0717  00F1               	movwf	??_teclado_get+1
  7985  0718  300F               	movlw	15
  7986  0719  00F0               	movwf	??_teclado_get
  7987  071A  30F1               	movlw	241
  7988  071B                     u2507:
  7989  071B  0B89               	decfsz	9,f
  7990  071C  2F1B               	goto	u2507
  7991  071D  0BF0               	decfsz	??_teclado_get,f
  7992  071E  2F1B               	goto	u2507
  7993  071F  0BF1               	decfsz	??_teclado_get+1,f
  7994  0720  2F1B               	goto	u2507
  7995  0721  0000               	nop
  7996  0722                     l416:
  7997  0722  0020               	movlb	0	; select bank0
  7998  0723  1A0D               	btfsc	13,4	;volatile
  7999  0724  3443               	retlw	67
  8000  0725  2F22               	goto	l416
  8001  0726                     l415:
  8002                           
  8003                           ;teclado.c: 39:             LATAbits.LATA0 = 1; LATAbits.LATA1 = 1; LATAbits.LATA2 = 1; 
      +                          LATAbits.LATA3 = 0;
  8004  0726  1416               	bsf	22,0	;volatile
  8005  0727  1496               	bsf	22,1	;volatile
  8006  0728  1516               	bsf	22,2	;volatile
  8007  0729  1196               	bcf	22,3	;volatile
  8008                           
  8009                           ;teclado.c: 40:             _delay((unsigned long)((10)*(32000000UL/4000000.0)));
  8010  072A  301A               	movlw	26
  8011  072B                     u2517:
  8012  072B  0B89               	decfsz	9,f
  8013  072C  2F2B               	goto	u2517
  8014  072D  3200               	nop2
  8015                           
  8016                           ;teclado.c: 41:             if (PORTBbits.RB1 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB1==0); return '*'; }
  8017  072E  0020               	movlb	0	; select bank0
  8018  072F  188D               	btfsc	13,1	;volatile
  8019  0730  2F41               	goto	l419
  8020  0731  3005               	movlw	5
  8021  0732  00F1               	movwf	??_teclado_get+1
  8022  0733  300F               	movlw	15
  8023  0734  00F0               	movwf	??_teclado_get
  8024  0735  30F1               	movlw	241
  8025  0736                     u2527:
  8026  0736  0B89               	decfsz	9,f
  8027  0737  2F36               	goto	u2527
  8028  0738  0BF0               	decfsz	??_teclado_get,f
  8029  0739  2F36               	goto	u2527
  8030  073A  0BF1               	decfsz	??_teclado_get+1,f
  8031  073B  2F36               	goto	u2527
  8032  073C  0000               	nop
  8033  073D                     l420:
  8034  073D  0020               	movlb	0	; select bank0
  8035  073E  188D               	btfsc	13,1	;volatile
  8036  073F  342A               	retlw	42
  8037  0740  2F3D               	goto	l420
  8038  0741                     l419:
  8039                           
  8040                           ;teclado.c: 42:             if (PORTBbits.RB2 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB2==0); return '0'; }
  8041  0741  190D               	btfsc	13,2	;volatile
  8042  0742  2F53               	goto	l423
  8043  0743  3005               	movlw	5
  8044  0744  00F1               	movwf	??_teclado_get+1
  8045  0745  300F               	movlw	15
  8046  0746  00F0               	movwf	??_teclado_get
  8047  0747  30F1               	movlw	241
  8048  0748                     u2537:
  8049  0748  0B89               	decfsz	9,f
  8050  0749  2F48               	goto	u2537
  8051  074A  0BF0               	decfsz	??_teclado_get,f
  8052  074B  2F48               	goto	u2537
  8053  074C  0BF1               	decfsz	??_teclado_get+1,f
  8054  074D  2F48               	goto	u2537
  8055  074E  0000               	nop
  8056  074F                     l424:
  8057  074F  0020               	movlb	0	; select bank0
  8058  0750  190D               	btfsc	13,2	;volatile
  8059  0751  3430               	retlw	48
  8060  0752  2F4F               	goto	l424
  8061  0753                     l423:
  8062                           
  8063                           ;teclado.c: 43:             if (PORTBbits.RB3 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB3==0); return '#'; }
  8064  0753  198D               	btfsc	13,3	;volatile
  8065  0754  2F65               	goto	l427
  8066  0755  3005               	movlw	5
  8067  0756  00F1               	movwf	??_teclado_get+1
  8068  0757  300F               	movlw	15
  8069  0758  00F0               	movwf	??_teclado_get
  8070  0759  30F1               	movlw	241
  8071  075A                     u2547:
  8072  075A  0B89               	decfsz	9,f
  8073  075B  2F5A               	goto	u2547
  8074  075C  0BF0               	decfsz	??_teclado_get,f
  8075  075D  2F5A               	goto	u2547
  8076  075E  0BF1               	decfsz	??_teclado_get+1,f
  8077  075F  2F5A               	goto	u2547
  8078  0760  0000               	nop
  8079  0761                     l428:
  8080  0761  0020               	movlb	0	; select bank0
  8081  0762  198D               	btfsc	13,3	;volatile
  8082  0763  3423               	retlw	35
  8083  0764  2F61               	goto	l428
  8084  0765                     l427:
  8085                           
  8086                           ;teclado.c: 44:             if (PORTBbits.RB4 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB4==0); return 'D'; }
  8087  0765  1A0D               	btfsc	13,4	;volatile
  8088  0766  3400               	retlw	0
  8089  0767  3005               	movlw	5
  8090  0768  00F1               	movwf	??_teclado_get+1
  8091  0769  300F               	movlw	15
  8092  076A  00F0               	movwf	??_teclado_get
  8093  076B  30F1               	movlw	241
  8094  076C                     u2557:
  8095  076C  0B89               	decfsz	9,f
  8096  076D  2F6C               	goto	u2557
  8097  076E  0BF0               	decfsz	??_teclado_get,f
  8098  076F  2F6C               	goto	u2557
  8099  0770  0BF1               	decfsz	??_teclado_get+1,f
  8100  0771  2F6C               	goto	u2557
  8101  0772  0000               	nop
  8102  0773                     l432:
  8103  0773  0020               	movlb	0	; select bank0
  8104  0774  1A0D               	btfsc	13,4	;volatile
  8105  0775  3444               	retlw	68
  8106  0776  2F73               	goto	l432
  8107  0777                     __end_of_teclado_get:	
  8108                           ;teclado.c: 46:     return 0;
  8109                           
  8110                           
  8111                           	psect	text9
  8112  033A                     __ptext9:	
  8113 ;; *************** function _dtoa *****************
  8114 ;; Defined at:
  8115 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  8116 ;; Parameters:    Size  Location     Type
  8117 ;;  fp              1    wreg     PTR struct _IO_FILE
  8118 ;;		 -> NULL(0), sprintf@f(5), 
  8119 ;;  d               8   16[BANK0 ] long long 
  8120 ;; Auto vars:     Size  Location     Type
  8121 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
  8122 ;;		 -> NULL(0), sprintf@f(5), 
  8123 ;;  n               8   34[BANK0 ] long long 
  8124 ;;  i               2   42[BANK0 ] int 
  8125 ;;  s               2   32[BANK0 ] int 
  8126 ;;  w               2   30[BANK0 ] int 
  8127 ;;  p               2   28[BANK0 ] int 
  8128 ;; Return value:  Size  Location     Type
  8129 ;;                  2   16[BANK0 ] int 
  8130 ;; Registers used:
  8131 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8132 ;; Tracked objects:
  8133 ;;		On entry : 1F/0
  8134 ;;		On exit  : 1F/0
  8135 ;;		Unchanged: 0/0
  8136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8137 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8138 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8139 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8140 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8141 ;;Total ram usage:       28 bytes
  8142 ;; Hardware stack levels used: 1
  8143 ;; Hardware stack levels required when called: 6
  8144 ;; This function calls:
  8145 ;;		___aodiv
  8146 ;;		___aomod
  8147 ;;		_abs
  8148 ;;		_pad
  8149 ;; This function is called by:
  8150 ;;		_vfpfcnvrt
  8151 ;; This function uses a non-reentrant model
  8152 ;;
  8153                           
  8154                           
  8155                           ;psect for function _dtoa
  8156  033A                     _dtoa:
  8157                           
  8158                           ;incstack = 0
  8159                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8160                           ;dtoa@fp stored from wreg
  8161  033A  00BB               	movwf	dtoa@fp
  8162                           
  8163                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  8164  033B  0830               	movf	dtoa@d,w
  8165  033C  00C2               	movwf	dtoa@n
  8166  033D  0831               	movf	dtoa@d+1,w
  8167  033E  00C3               	movwf	dtoa@n+1
  8168  033F  0832               	movf	dtoa@d+2,w
  8169  0340  00C4               	movwf	dtoa@n+2
  8170  0341  0833               	movf	dtoa@d+3,w
  8171  0342  00C5               	movwf	dtoa@n+3
  8172  0343  0834               	movf	dtoa@d+4,w
  8173  0344  00C6               	movwf	dtoa@n+4
  8174  0345  0835               	movf	dtoa@d+5,w
  8175  0346  00C7               	movwf	dtoa@n+5
  8176  0347  0836               	movf	dtoa@d+6,w
  8177  0348  00C8               	movwf	dtoa@n+6
  8178  0349  0837               	movf	dtoa@d+7,w
  8179  034A  00C9               	movwf	dtoa@n+7
  8180                           
  8181                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  8182  034B  3042               	movlw	low dtoa@n
  8183  034C  0086               	movwf	6
  8184  034D  3000               	movlw	high dtoa@n
  8185  034E  0087               	movwf	7
  8186  034F  3F47               	moviw [7]fsr1
  8187  0350  00B8               	movwf	??_dtoa
  8188  0351  1FB8               	btfss	??_dtoa,7
  8189  0352  2B55               	goto	u1650
  8190  0353  3001               	movlw	1
  8191  0354  2B56               	goto	u1660
  8192  0355                     u1650:
  8193  0355  3000               	movlw	0
  8194  0356                     u1660:
  8195  0356  0020               	movlb	0	; select bank0
  8196  0357  00C0               	movwf	dtoa@s
  8197  0358  01C1               	clrf	dtoa@s+1
  8198                           
  8199                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  8200  0359  0441               	iorwf	dtoa@s+1,w
  8201  035A  1903               	btfsc	3,2
  8202  035B  2B79               	goto	l1125
  8203                           
  8204                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  8205  035C  09C2               	comf	dtoa@n,f
  8206  035D  09C3               	comf	dtoa@n+1,f
  8207  035E  09C4               	comf	dtoa@n+2,f
  8208  035F  09C5               	comf	dtoa@n+3,f
  8209  0360  09C6               	comf	dtoa@n+4,f
  8210  0361  09C7               	comf	dtoa@n+5,f
  8211  0362  09C8               	comf	dtoa@n+6,f
  8212  0363  09C9               	comf	dtoa@n+7,f
  8213  0364  0FC2               	incfsz	dtoa@n,f
  8214  0365  2B79               	goto	l1125
  8215  0366  0AC3               	incf	dtoa@n+1,f
  8216  0367  1D03               	skipz
  8217  0368  2B79               	goto	l1125
  8218  0369  0AC4               	incf	dtoa@n+2,f
  8219  036A  1D03               	skipz
  8220  036B  2B79               	goto	l1125
  8221  036C  0AC5               	incf	dtoa@n+3,f
  8222  036D  1D03               	skipz
  8223  036E  2B79               	goto	l1125
  8224  036F  0AC6               	incf	dtoa@n+4,f
  8225  0370  1D03               	skipz
  8226  0371  2B79               	goto	l1125
  8227  0372  0AC7               	incf	dtoa@n+5,f
  8228  0373  1D03               	skipz
  8229  0374  2B79               	goto	l1125
  8230  0375  0AC8               	incf	dtoa@n+6,f
  8231  0376  1D03               	skipz
  8232  0377  2B79               	goto	l1125
  8233  0378  0AC9               	incf	dtoa@n+7,f
  8234  0379                     l1125:	
  8235                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 297:     }
  8236                           
  8237                           
  8238                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  8239  0379  0021               	movlb	1	; select bank1
  8240  037A  1BA5               	btfsc	(_prec+1)^(0+128),7
  8241  037B  2B7E               	goto	l2236
  8242                           
  8243                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  8244  037C  0020               	movlb	0	; select bank0
  8245  037D  10EC               	bcf	_flags,1
  8246  037E                     l2236:
  8247                           
  8248                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  8249  037E  0021               	movlb	1	; select bank1
  8250  037F  0825               	movf	(_prec+1)^(0+128),w
  8251  0380  3A80               	xorlw	128
  8252  0381  0020               	movlb	0	; select bank0
  8253  0382  00B8               	movwf	??_dtoa
  8254  0383  3080               	movlw	128
  8255  0384  0238               	subwf	??_dtoa,w
  8256  0385  1D03               	skipz
  8257  0386  2B8A               	goto	u1705
  8258  0387  3001               	movlw	1
  8259  0388  0021               	movlb	1	; select bank1
  8260  0389  0224               	subwf	_prec^(0+128),w
  8261  038A                     u1705:
  8262  038A  1803               	skipnc
  8263  038B  2B91               	goto	l2240
  8264  038C  0020               	movlb	0	; select bank0
  8265  038D  01BC               	clrf	dtoa@p
  8266  038E  0ABC               	incf	dtoa@p,f
  8267  038F  01BD               	clrf	dtoa@p+1
  8268  0390  2B99               	goto	l1130
  8269  0391                     l2240:
  8270  0391  0021               	movlb	1	; select bank1
  8271  0392  0825               	movf	(_prec+1)^(0+128),w
  8272  0393  0020               	movlb	0	; select bank0
  8273  0394  00BD               	movwf	dtoa@p+1
  8274  0395  0021               	movlb	1	; select bank1
  8275  0396  0824               	movf	_prec^(0+128),w
  8276  0397  0020               	movlb	0	; select bank0
  8277  0398  00BC               	movwf	dtoa@p
  8278  0399                     l1130:
  8279                           
  8280                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  8281  0399  0021               	movlb	1	; select bank1
  8282  039A  0823               	movf	(_width+1)^(0+128),w
  8283  039B  0020               	movlb	0	; select bank0
  8284  039C  00BF               	movwf	dtoa@w+1
  8285  039D  0021               	movlb	1	; select bank1
  8286  039E  0822               	movf	_width^(0+128),w
  8287  039F  0020               	movlb	0	; select bank0
  8288  03A0  00BE               	movwf	dtoa@w
  8289                           
  8290                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  8291  03A1  0840               	movf	dtoa@s,w
  8292  03A2  0441               	iorwf	dtoa@s+1,w
  8293  03A3  1D03               	btfss	3,2
  8294  03A4  2BA7               	goto	l2246
  8295  03A5  1D6C               	btfss	_flags,2
  8296  03A6  2BAB               	goto	l2248
  8297  03A7                     l2246:
  8298                           
  8299                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  8300  03A7  30FF               	movlw	-1
  8301  03A8  07BE               	addwf	dtoa@w,f
  8302  03A9  1C03               	skipc
  8303  03AA  03BF               	decf	dtoa@w+1,f
  8304  03AB                     l2248:
  8305                           
  8306                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  8307  03AB  301F               	movlw	31
  8308  03AC  00CA               	movwf	dtoa@i
  8309  03AD  01CB               	clrf	dtoa@i+1
  8310                           
  8311                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  8312  03AE  0021               	movlb	1	; select bank1
  8313  03AF  01C8               	clrf	(_dbuf^(0+128)+31)
  8314                           
  8315                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8316  03B0  2C38               	goto	l2262
  8317  03B1                     l2264:
  8318  03B1  0020               	movlb	0	; select bank0
  8319  03B2  0842               	movf	dtoa@n,w
  8320  03B3  0443               	iorwf	dtoa@n+1,w
  8321  03B4  0444               	iorwf	dtoa@n+2,w
  8322  03B5  0445               	iorwf	dtoa@n+3,w
  8323  03B6  0446               	iorwf	dtoa@n+4,w
  8324  03B7  0447               	iorwf	dtoa@n+5,w
  8325  03B8  0448               	iorwf	dtoa@n+6,w
  8326  03B9  0449               	iorwf	dtoa@n+7,w
  8327  03BA  1D03               	skipz
  8328  03BB  2BD6               	goto	l2252
  8329  03BC  083D               	movf	dtoa@p+1,w
  8330  03BD  3A80               	xorlw	128
  8331  03BE  00B8               	movwf	??_dtoa
  8332  03BF  3080               	movlw	128
  8333  03C0  0238               	subwf	??_dtoa,w
  8334  03C1  1D03               	skipz
  8335  03C2  2BC5               	goto	u1755
  8336  03C3  3001               	movlw	1
  8337  03C4  023C               	subwf	dtoa@p,w
  8338  03C5                     u1755:
  8339  03C5  1803               	skipnc
  8340  03C6  2BD6               	goto	l2252
  8341  03C7  0020               	movlb	0	; select bank0
  8342  03C8  083F               	movf	dtoa@w+1,w
  8343  03C9  3A80               	xorlw	128
  8344  03CA  00B8               	movwf	??_dtoa
  8345  03CB  3080               	movlw	128
  8346  03CC  0238               	subwf	??_dtoa,w
  8347  03CD  1D03               	skipz
  8348  03CE  2BD1               	goto	u1765
  8349  03CF  3001               	movlw	1
  8350  03D0  023E               	subwf	dtoa@w,w
  8351  03D1                     u1765:
  8352  03D1  1C03               	skipc
  8353  03D2  2C44               	goto	l2272
  8354  03D3  0020               	movlb	0	; select bank0
  8355  03D4  1CEC               	btfss	_flags,1
  8356  03D5  2C44               	goto	l2272
  8357  03D6                     l2252:
  8358                           
  8359                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  8360  03D6  30FF               	movlw	-1
  8361  03D7  0020               	movlb	0	; select bank0
  8362  03D8  07CA               	addwf	dtoa@i,f
  8363  03D9  1C03               	skipc
  8364  03DA  03CB               	decf	dtoa@i+1,f
  8365                           
  8366                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  8367  03DB  300A               	movlw	10
  8368  03DC  00A0               	movwf	___aomod@divisor
  8369  03DD  01A1               	clrf	___aomod@divisor+1
  8370  03DE  01A2               	clrf	___aomod@divisor+2
  8371  03DF  01A3               	clrf	___aomod@divisor+3
  8372  03E0  01A4               	clrf	___aomod@divisor+4
  8373  03E1  01A5               	clrf	___aomod@divisor+5
  8374  03E2  01A6               	clrf	___aomod@divisor+6
  8375  03E3  01A7               	clrf	___aomod@divisor+7
  8376  03E4  0842               	movf	dtoa@n,w
  8377  03E5  00A8               	movwf	___aomod@dividend
  8378  03E6  0843               	movf	dtoa@n+1,w
  8379  03E7  00A9               	movwf	___aomod@dividend+1
  8380  03E8  0844               	movf	dtoa@n+2,w
  8381  03E9  00AA               	movwf	___aomod@dividend+2
  8382  03EA  0845               	movf	dtoa@n+3,w
  8383  03EB  00AB               	movwf	___aomod@dividend+3
  8384  03EC  0846               	movf	dtoa@n+4,w
  8385  03ED  00AC               	movwf	___aomod@dividend+4
  8386  03EE  0847               	movf	dtoa@n+5,w
  8387  03EF  00AD               	movwf	___aomod@dividend+5
  8388  03F0  0848               	movf	dtoa@n+6,w
  8389  03F1  00AE               	movwf	___aomod@dividend+6
  8390  03F2  0849               	movf	dtoa@n+7,w
  8391  03F3  00AF               	movwf	___aomod@dividend+7
  8392  03F4  2555  3183         	fcall	___aomod
  8393  03F6  0821               	movf	?___aomod+1,w
  8394  03F7  00F4               	movwf	abs@a+1
  8395  03F8  0820               	movf	?___aomod,w
  8396  03F9  00F3               	movwf	abs@a
  8397  03FA  261C  3183         	fcall	_abs
  8398  03FC  0873               	movf	?_abs,w
  8399  03FD  3E30               	addlw	48
  8400  03FE  0020               	movlb	0	; select bank0
  8401  03FF  00B8               	movwf	??_dtoa
  8402  0400  084A               	movf	dtoa@i,w
  8403  0401  3EA9               	addlw	(low (_dbuf| 0))& (0+255)
  8404  0402  0086               	movwf	6
  8405  0403  0187               	clrf	7
  8406  0404  0838               	movf	??_dtoa,w
  8407  0405  0081               	movwf	1
  8408                           
  8409                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  8410  0406  30FF               	movlw	-1
  8411  0407  07BC               	addwf	dtoa@p,f
  8412  0408  1C03               	skipc
  8413  0409  03BD               	decf	dtoa@p+1,f
  8414                           
  8415                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  8416  040A  07BE               	addwf	dtoa@w,f
  8417  040B  1C03               	skipc
  8418  040C  03BF               	decf	dtoa@w+1,f
  8419                           
  8420                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  8421  040D  300A               	movlw	10
  8422  040E  00A0               	movwf	___aodiv@divisor
  8423  040F  01A1               	clrf	___aodiv@divisor+1
  8424  0410  01A2               	clrf	___aodiv@divisor+2
  8425  0411  01A3               	clrf	___aodiv@divisor+3
  8426  0412  01A4               	clrf	___aodiv@divisor+4
  8427  0413  01A5               	clrf	___aodiv@divisor+5
  8428  0414  01A6               	clrf	___aodiv@divisor+6
  8429  0415  01A7               	clrf	___aodiv@divisor+7
  8430  0416  0842               	movf	dtoa@n,w
  8431  0417  00A8               	movwf	___aodiv@dividend
  8432  0418  0843               	movf	dtoa@n+1,w
  8433  0419  00A9               	movwf	___aodiv@dividend+1
  8434  041A  0844               	movf	dtoa@n+2,w
  8435  041B  00AA               	movwf	___aodiv@dividend+2
  8436  041C  0845               	movf	dtoa@n+3,w
  8437  041D  00AB               	movwf	___aodiv@dividend+3
  8438  041E  0846               	movf	dtoa@n+4,w
  8439  041F  00AC               	movwf	___aodiv@dividend+4
  8440  0420  0847               	movf	dtoa@n+5,w
  8441  0421  00AD               	movwf	___aodiv@dividend+5
  8442  0422  0848               	movf	dtoa@n+6,w
  8443  0423  00AE               	movwf	___aodiv@dividend+6
  8444  0424  0849               	movf	dtoa@n+7,w
  8445  0425  00AF               	movwf	___aodiv@dividend+7
  8446  0426  246D  3183         	fcall	___aodiv
  8447  0428  0820               	movf	?___aodiv,w
  8448  0429  00C2               	movwf	dtoa@n
  8449  042A  0821               	movf	?___aodiv+1,w
  8450  042B  00C3               	movwf	dtoa@n+1
  8451  042C  0822               	movf	?___aodiv+2,w
  8452  042D  00C4               	movwf	dtoa@n+2
  8453  042E  0823               	movf	?___aodiv+3,w
  8454  042F  00C5               	movwf	dtoa@n+3
  8455  0430  0824               	movf	?___aodiv+4,w
  8456  0431  00C6               	movwf	dtoa@n+4
  8457  0432  0825               	movf	?___aodiv+5,w
  8458  0433  00C7               	movwf	dtoa@n+5
  8459  0434  0826               	movf	?___aodiv+6,w
  8460  0435  00C8               	movwf	dtoa@n+6
  8461  0436  0827               	movf	?___aodiv+7,w
  8462  0437  00C9               	movwf	dtoa@n+7
  8463  0438                     l2262:
  8464                           
  8465                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8466  0438  0020               	movlb	0	; select bank0
  8467  0439  084B               	movf	dtoa@i+1,w
  8468  043A  3A80               	xorlw	128
  8469  043B  00B8               	movwf	??_dtoa
  8470  043C  3080               	movlw	128
  8471  043D  0238               	subwf	??_dtoa,w
  8472  043E  1D03               	skipz
  8473  043F  2C42               	goto	u1735
  8474  0440  3001               	movlw	1
  8475  0441  024A               	subwf	dtoa@i,w
  8476  0442                     u1735:
  8477  0442  1803               	btfsc	3,0
  8478  0443  2BB1               	goto	l2264
  8479  0444                     l2272:
  8480                           
  8481                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  8482  0444  0020               	movlb	0	; select bank0
  8483  0445  0840               	movf	dtoa@s,w
  8484  0446  0441               	iorwf	dtoa@s+1,w
  8485  0447  1D03               	btfss	3,2
  8486  0448  2C4B               	goto	l2276
  8487  0449  1D6C               	btfss	_flags,2
  8488  044A  2C5E               	goto	l2284
  8489  044B                     l2276:
  8490                           
  8491                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  8492  044B  30FF               	movlw	-1
  8493  044C  07CA               	addwf	dtoa@i,f
  8494  044D  1C03               	skipc
  8495  044E  03CB               	decf	dtoa@i+1,f
  8496                           
  8497                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  8498  044F  0840               	movf	dtoa@s,w
  8499  0450  0441               	iorwf	dtoa@s+1,w
  8500  0451  1D03               	btfss	3,2
  8501  0452  2C55               	goto	l2280
  8502  0453  302B               	movlw	43
  8503  0454  2C56               	goto	L2
  8504  0455                     l2280:
  8505  0455  302D               	movlw	45
  8506  0456                     L2:
  8507  0456  00B9               	movwf	_dtoa$1017
  8508  0457  01BA               	clrf	_dtoa$1017+1
  8509  0458  084A               	movf	dtoa@i,w
  8510  0459  3EA9               	addlw	(low (_dbuf| 0))& (0+255)
  8511  045A  0086               	movwf	6
  8512  045B  0187               	clrf	7
  8513  045C  0839               	movf	_dtoa$1017,w
  8514  045D  0081               	movwf	1
  8515  045E                     l2284:
  8516                           
  8517                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  8518  045E  084A               	movf	dtoa@i,w
  8519  045F  3EA9               	addlw	(low (_dbuf| 0))& (0+255)
  8520  0460  00A4               	movwf	pad@buf
  8521  0461  083F               	movf	dtoa@w+1,w
  8522  0462  00A6               	movwf	pad@p+1
  8523  0463  083E               	movf	dtoa@w,w
  8524  0464  00A5               	movwf	pad@p
  8525  0465  083B               	movf	dtoa@fp,w
  8526  0466  318E  262C         	fcall	_pad
  8527  0468  0825               	movf	?_pad+1,w
  8528  0469  00B1               	movwf	?_dtoa+1
  8529  046A  0824               	movf	?_pad,w
  8530  046B  00B0               	movwf	?_dtoa
  8531  046C  0008               	return
  8532  046D                     __end_of_dtoa:
  8533  046D                     __ptext15:	
  8534 ;; *************** function ___aodiv *****************
  8535 ;; Defined at:
  8536 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  8537 ;; Parameters:    Size  Location     Type
  8538 ;;  divisor         8    0[BANK0 ] long long 
  8539 ;;  dividend        8    8[BANK0 ] long long 
  8540 ;; Auto vars:     Size  Location     Type
  8541 ;;  quotient        8    3[COMMON] long long 
  8542 ;;  sign            1    2[COMMON] unsigned char 
  8543 ;;  counter         1    1[COMMON] unsigned char 
  8544 ;; Return value:  Size  Location     Type
  8545 ;;                  8    0[BANK0 ] long long 
  8546 ;; Registers used:
  8547 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8548 ;; Tracked objects:
  8549 ;;		On entry : 1F/0
  8550 ;;		On exit  : 1F/0
  8551 ;;		Unchanged: 0/0
  8552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8553 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8554 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8555 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8556 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8557 ;;Total ram usage:       27 bytes
  8558 ;; Hardware stack levels used: 1
  8559 ;; Hardware stack levels required when called: 1
  8560 ;; This function calls:
  8561 ;;		Nothing
  8562 ;; This function is called by:
  8563 ;;		_dtoa
  8564 ;; This function uses a non-reentrant model
  8565 ;;
  8566                           
  8567                           
  8568                           ;psect for function ___aodiv
  8569  046D                     ___aodiv:
  8570  046D  3020               	movlw	low ___aodiv@divisor
  8571                           
  8572                           ;incstack = 0
  8573                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  8574  046E  01F2               	clrf	___aodiv@sign
  8575  046F  0086               	movwf	6
  8576  0470  3000               	movlw	high ___aodiv@divisor
  8577  0471  0087               	movwf	7
  8578  0472  3F47               	moviw [7]fsr1
  8579  0473  00F0               	movwf	??___aodiv
  8580  0474  1FF0               	btfss	??___aodiv,7
  8581  0475  2C96               	goto	l2084
  8582  0476  0020               	movlb	0	; select bank0
  8583  0477  09A0               	comf	___aodiv@divisor,f
  8584  0478  09A1               	comf	___aodiv@divisor+1,f
  8585  0479  09A2               	comf	___aodiv@divisor+2,f
  8586  047A  09A3               	comf	___aodiv@divisor+3,f
  8587  047B  09A4               	comf	___aodiv@divisor+4,f
  8588  047C  09A5               	comf	___aodiv@divisor+5,f
  8589  047D  09A6               	comf	___aodiv@divisor+6,f
  8590  047E  09A7               	comf	___aodiv@divisor+7,f
  8591  047F  0FA0               	incfsz	___aodiv@divisor,f
  8592  0480  2C94               	goto	u130lld
  8593  0481  0AA1               	incf	___aodiv@divisor+1,f
  8594  0482  1D03               	skipz
  8595  0483  2C94               	goto	u130lld
  8596  0484  0AA2               	incf	___aodiv@divisor+2,f
  8597  0485  1D03               	skipz
  8598  0486  2C94               	goto	u130lld
  8599  0487  0AA3               	incf	___aodiv@divisor+3,f
  8600  0488  1D03               	skipz
  8601  0489  2C94               	goto	u130lld
  8602  048A  0AA4               	incf	___aodiv@divisor+4,f
  8603  048B  1D03               	skipz
  8604  048C  2C94               	goto	u130lld
  8605  048D  0AA5               	incf	___aodiv@divisor+5,f
  8606  048E  1D03               	skipz
  8607  048F  2C94               	goto	u130lld
  8608  0490  0AA6               	incf	___aodiv@divisor+6,f
  8609  0491  1D03               	skipz
  8610  0492  2C94               	goto	u130lld
  8611  0493  0AA7               	incf	___aodiv@divisor+7,f
  8612  0494                     u130lld:
  8613  0494  01F2               	clrf	___aodiv@sign
  8614  0495  0AF2               	incf	___aodiv@sign,f
  8615  0496                     l2084:
  8616  0496  3028               	movlw	low ___aodiv@dividend
  8617  0497  0086               	movwf	6
  8618  0498  3000               	movlw	high ___aodiv@dividend
  8619  0499  0087               	movwf	7
  8620  049A  3F47               	moviw [7]fsr1
  8621  049B  00F0               	movwf	??___aodiv
  8622  049C  1FF0               	btfss	??___aodiv,7
  8623  049D  2CBE               	goto	l2090
  8624  049E  0020               	movlb	0	; select bank0
  8625  049F  09A8               	comf	___aodiv@dividend,f
  8626  04A0  09A9               	comf	___aodiv@dividend+1,f
  8627  04A1  09AA               	comf	___aodiv@dividend+2,f
  8628  04A2  09AB               	comf	___aodiv@dividend+3,f
  8629  04A3  09AC               	comf	___aodiv@dividend+4,f
  8630  04A4  09AD               	comf	___aodiv@dividend+5,f
  8631  04A5  09AE               	comf	___aodiv@dividend+6,f
  8632  04A6  09AF               	comf	___aodiv@dividend+7,f
  8633  04A7  0FA8               	incfsz	___aodiv@dividend,f
  8634  04A8  2CBC               	goto	l2088
  8635  04A9  0AA9               	incf	___aodiv@dividend+1,f
  8636  04AA  1D03               	skipz
  8637  04AB  2CBC               	goto	l2088
  8638  04AC  0AAA               	incf	___aodiv@dividend+2,f
  8639  04AD  1D03               	skipz
  8640  04AE  2CBC               	goto	l2088
  8641  04AF  0AAB               	incf	___aodiv@dividend+3,f
  8642  04B0  1D03               	skipz
  8643  04B1  2CBC               	goto	l2088
  8644  04B2  0AAC               	incf	___aodiv@dividend+4,f
  8645  04B3  1D03               	skipz
  8646  04B4  2CBC               	goto	l2088
  8647  04B5  0AAD               	incf	___aodiv@dividend+5,f
  8648  04B6  1D03               	skipz
  8649  04B7  2CBC               	goto	l2088
  8650  04B8  0AAE               	incf	___aodiv@dividend+6,f
  8651  04B9  1D03               	skipz
  8652  04BA  2CBC               	goto	l2088
  8653  04BB  0AAF               	incf	___aodiv@dividend+7,f
  8654  04BC                     l2088:
  8655  04BC  3001               	movlw	1
  8656  04BD  06F2               	xorwf	___aodiv@sign,f
  8657  04BE                     l2090:
  8658  04BE  3073               	movlw	low ___aodiv@quotient
  8659  04BF  0086               	movwf	6
  8660  04C0  3000               	movlw	high ___aodiv@quotient
  8661  04C1  0087               	movwf	7
  8662  04C2  3008               	movlw	8
  8663  04C3  00F0               	movwf	??___aodiv
  8664  04C4  3000               	movlw	0
  8665  04C5                     u1330:
  8666  04C5  001E               	movwi fsr1++
  8667  04C6  0BF0               	decfsz	??___aodiv,f
  8668  04C7  2CC5               	goto	u1330
  8669  04C8  0020               	movlb	0	; select bank0
  8670  04C9  0820               	movf	___aodiv@divisor,w
  8671  04CA  0421               	iorwf	___aodiv@divisor+1,w
  8672  04CB  0422               	iorwf	___aodiv@divisor+2,w
  8673  04CC  0423               	iorwf	___aodiv@divisor+3,w
  8674  04CD  0424               	iorwf	___aodiv@divisor+4,w
  8675  04CE  0425               	iorwf	___aodiv@divisor+5,w
  8676  04CF  0426               	iorwf	___aodiv@divisor+6,w
  8677  04D0  0427               	iorwf	___aodiv@divisor+7,w
  8678  04D1  1903               	skipnz
  8679  04D2  2D23               	goto	l2112
  8680  04D3  01F1               	clrf	___aodiv@counter
  8681  04D4                     L4:
  8682  04D4  0AF1               	incf	___aodiv@counter,f
  8683  04D5  1BA7               	btfsc	___aodiv@divisor+7,7
  8684  04D6  2CE0               	goto	l2100
  8685  04D7  35A0               	lslf	___aodiv@divisor,f
  8686  04D8  0DA1               	rlf	___aodiv@divisor+1,f
  8687  04D9  0DA2               	rlf	___aodiv@divisor+2,f
  8688  04DA  0DA3               	rlf	___aodiv@divisor+3,f
  8689  04DB  0DA4               	rlf	___aodiv@divisor+4,f
  8690  04DC  0DA5               	rlf	___aodiv@divisor+5,f
  8691  04DD  0DA6               	rlf	___aodiv@divisor+6,f
  8692  04DE  0DA7               	rlf	___aodiv@divisor+7,f
  8693  04DF  2CD4               	goto	L4
  8694  04E0                     l2100:
  8695  04E0  35F3               	lslf	___aodiv@quotient,f
  8696  04E1  0DF4               	rlf	___aodiv@quotient+1,f
  8697  04E2  0DF5               	rlf	___aodiv@quotient+2,f
  8698  04E3  0DF6               	rlf	___aodiv@quotient+3,f
  8699  04E4  0DF7               	rlf	___aodiv@quotient+4,f
  8700  04E5  0DF8               	rlf	___aodiv@quotient+5,f
  8701  04E6  0DF9               	rlf	___aodiv@quotient+6,f
  8702  04E7  0DFA               	rlf	___aodiv@quotient+7,f
  8703  04E8  0827               	movf	___aodiv@divisor+7,w
  8704  04E9  022F               	subwf	___aodiv@dividend+7,w
  8705  04EA  1D03               	skipz
  8706  04EB  2D06               	goto	u1365
  8707  04EC  0826               	movf	___aodiv@divisor+6,w
  8708  04ED  022E               	subwf	___aodiv@dividend+6,w
  8709  04EE  1D03               	skipz
  8710  04EF  2D06               	goto	u1365
  8711  04F0  0825               	movf	___aodiv@divisor+5,w
  8712  04F1  022D               	subwf	___aodiv@dividend+5,w
  8713  04F2  1D03               	skipz
  8714  04F3  2D06               	goto	u1365
  8715  04F4  0824               	movf	___aodiv@divisor+4,w
  8716  04F5  022C               	subwf	___aodiv@dividend+4,w
  8717  04F6  1D03               	skipz
  8718  04F7  2D06               	goto	u1365
  8719  04F8  0823               	movf	___aodiv@divisor+3,w
  8720  04F9  022B               	subwf	___aodiv@dividend+3,w
  8721  04FA  1D03               	skipz
  8722  04FB  2D06               	goto	u1365
  8723  04FC  0822               	movf	___aodiv@divisor+2,w
  8724  04FD  022A               	subwf	___aodiv@dividend+2,w
  8725  04FE  1D03               	skipz
  8726  04FF  2D06               	goto	u1365
  8727  0500  0821               	movf	___aodiv@divisor+1,w
  8728  0501  0229               	subwf	___aodiv@dividend+1,w
  8729  0502  1D03               	skipz
  8730  0503  2D06               	goto	u1365
  8731  0504  0820               	movf	___aodiv@divisor,w
  8732  0505  0228               	subwf	___aodiv@dividend,w
  8733  0506                     u1365:
  8734  0506  1C03               	skipc
  8735  0507  2D19               	goto	l2108
  8736  0508  0820               	movf	___aodiv@divisor,w
  8737  0509  02A8               	subwf	___aodiv@dividend,f
  8738  050A  0821               	movf	___aodiv@divisor+1,w
  8739  050B  3BA9               	subwfb	___aodiv@dividend+1,f
  8740  050C  0822               	movf	___aodiv@divisor+2,w
  8741  050D  3BAA               	subwfb	___aodiv@dividend+2,f
  8742  050E  0823               	movf	___aodiv@divisor+3,w
  8743  050F  3BAB               	subwfb	___aodiv@dividend+3,f
  8744  0510  0824               	movf	___aodiv@divisor+4,w
  8745  0511  3BAC               	subwfb	___aodiv@dividend+4,f
  8746  0512  0825               	movf	___aodiv@divisor+5,w
  8747  0513  3BAD               	subwfb	___aodiv@dividend+5,f
  8748  0514  0826               	movf	___aodiv@divisor+6,w
  8749  0515  3BAE               	subwfb	___aodiv@dividend+6,f
  8750  0516  0827               	movf	___aodiv@divisor+7,w
  8751  0517  3BAF               	subwfb	___aodiv@dividend+7,f
  8752  0518  1473               	bsf	___aodiv@quotient,0
  8753  0519                     l2108:
  8754  0519  36A7               	lsrf	___aodiv@divisor+7,f
  8755  051A  0CA6               	rrf	___aodiv@divisor+6,f
  8756  051B  0CA5               	rrf	___aodiv@divisor+5,f
  8757  051C  0CA4               	rrf	___aodiv@divisor+4,f
  8758  051D  0CA3               	rrf	___aodiv@divisor+3,f
  8759  051E  0CA2               	rrf	___aodiv@divisor+2,f
  8760  051F  0CA1               	rrf	___aodiv@divisor+1,f
  8761  0520  0CA0               	rrf	___aodiv@divisor,f
  8762  0521  0BF1               	decfsz	___aodiv@counter,f
  8763  0522  2CE0               	goto	l2100
  8764  0523                     l2112:
  8765  0523  0872               	movf	___aodiv@sign,w
  8766  0524  1903               	btfsc	3,2
  8767  0525  2D43               	goto	l711
  8768  0526  09F3               	comf	___aodiv@quotient,f
  8769  0527  09F4               	comf	___aodiv@quotient+1,f
  8770  0528  09F5               	comf	___aodiv@quotient+2,f
  8771  0529  09F6               	comf	___aodiv@quotient+3,f
  8772  052A  09F7               	comf	___aodiv@quotient+4,f
  8773  052B  09F8               	comf	___aodiv@quotient+5,f
  8774  052C  09F9               	comf	___aodiv@quotient+6,f
  8775  052D  09FA               	comf	___aodiv@quotient+7,f
  8776  052E  0FF3               	incfsz	___aodiv@quotient,f
  8777  052F  2D43               	goto	l711
  8778  0530  0AF4               	incf	___aodiv@quotient+1,f
  8779  0531  1D03               	skipz
  8780  0532  2D43               	goto	l711
  8781  0533  0AF5               	incf	___aodiv@quotient+2,f
  8782  0534  1D03               	skipz
  8783  0535  2D43               	goto	l711
  8784  0536  0AF6               	incf	___aodiv@quotient+3,f
  8785  0537  1D03               	skipz
  8786  0538  2D43               	goto	l711
  8787  0539  0AF7               	incf	___aodiv@quotient+4,f
  8788  053A  1D03               	skipz
  8789  053B  2D43               	goto	l711
  8790  053C  0AF8               	incf	___aodiv@quotient+5,f
  8791  053D  1D03               	skipz
  8792  053E  2D43               	goto	l711
  8793  053F  0AF9               	incf	___aodiv@quotient+6,f
  8794  0540  1D03               	skipz
  8795  0541  2D43               	goto	l711
  8796  0542  0AFA               	incf	___aodiv@quotient+7,f
  8797  0543                     l711:
  8798  0543  0873               	movf	___aodiv@quotient,w
  8799  0544  0020               	movlb	0	; select bank0
  8800  0545  00A0               	movwf	?___aodiv
  8801  0546  0874               	movf	___aodiv@quotient+1,w
  8802  0547  00A1               	movwf	?___aodiv+1
  8803  0548  0875               	movf	___aodiv@quotient+2,w
  8804  0549  00A2               	movwf	?___aodiv+2
  8805  054A  0876               	movf	___aodiv@quotient+3,w
  8806  054B  00A3               	movwf	?___aodiv+3
  8807  054C  0877               	movf	___aodiv@quotient+4,w
  8808  054D  00A4               	movwf	?___aodiv+4
  8809  054E  0878               	movf	___aodiv@quotient+5,w
  8810  054F  00A5               	movwf	?___aodiv+5
  8811  0550  0879               	movf	___aodiv@quotient+6,w
  8812  0551  00A6               	movwf	?___aodiv+6
  8813  0552  087A               	movf	___aodiv@quotient+7,w
  8814  0553  00A7               	movwf	?___aodiv+7
  8815  0554  0008               	return
  8816  0555                     __end_of___aodiv:
  8817  0555                     __ptext14:	
  8818 ;; *************** function ___aomod *****************
  8819 ;; Defined at:
  8820 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  8821 ;; Parameters:    Size  Location     Type
  8822 ;;  divisor         8    0[BANK0 ] long long 
  8823 ;;  dividend        8    8[BANK0 ] long long 
  8824 ;; Auto vars:     Size  Location     Type
  8825 ;;  sign            1    2[COMMON] unsigned char 
  8826 ;;  counter         1    1[COMMON] unsigned char 
  8827 ;; Return value:  Size  Location     Type
  8828 ;;                  8    0[BANK0 ] long long 
  8829 ;; Registers used:
  8830 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8831 ;; Tracked objects:
  8832 ;;		On entry : 1F/0
  8833 ;;		On exit  : 1F/0
  8834 ;;		Unchanged: 0/0
  8835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8836 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8837 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8838 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8839 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8840 ;;Total ram usage:       19 bytes
  8841 ;; Hardware stack levels used: 1
  8842 ;; Hardware stack levels required when called: 1
  8843 ;; This function calls:
  8844 ;;		Nothing
  8845 ;; This function is called by:
  8846 ;;		_dtoa
  8847 ;; This function uses a non-reentrant model
  8848 ;;
  8849                           
  8850                           
  8851                           ;psect for function ___aomod
  8852  0555                     ___aomod:
  8853  0555  3028               	movlw	low ___aomod@dividend
  8854                           
  8855                           ;incstack = 0
  8856                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  8857  0556  01F2               	clrf	___aomod@sign
  8858  0557  0086               	movwf	6
  8859  0558  3000               	movlw	high ___aomod@dividend
  8860  0559  0087               	movwf	7
  8861  055A  3F47               	moviw [7]fsr1
  8862  055B  00F0               	movwf	??___aomod
  8863  055C  1FF0               	btfss	??___aomod,7
  8864  055D  2D78               	goto	l2122
  8865  055E  0020               	movlb	0	; select bank0
  8866  055F  2633  3183         	fcall	PL6	;call to abstracted procedure
  8867  0561  0FA8               	incfsz	___aomod@dividend,f
  8868  0562  2D76               	goto	u141lld
  8869  0563  0AA9               	incf	___aomod@dividend+1,f
  8870  0564  1D03               	skipz
  8871  0565  2D76               	goto	u141lld
  8872  0566  0AAA               	incf	___aomod@dividend+2,f
  8873  0567  1D03               	skipz
  8874  0568  2D76               	goto	u141lld
  8875  0569  0AAB               	incf	___aomod@dividend+3,f
  8876  056A  1D03               	skipz
  8877  056B  2D76               	goto	u141lld
  8878  056C  0AAC               	incf	___aomod@dividend+4,f
  8879  056D  1D03               	skipz
  8880  056E  2D76               	goto	u141lld
  8881  056F  0AAD               	incf	___aomod@dividend+5,f
  8882  0570  1D03               	skipz
  8883  0571  2D76               	goto	u141lld
  8884  0572  0AAE               	incf	___aomod@dividend+6,f
  8885  0573  1D03               	skipz
  8886  0574  2D76               	goto	u141lld
  8887  0575  0AAF               	incf	___aomod@dividend+7,f
  8888  0576                     u141lld:
  8889  0576  01F2               	clrf	___aomod@sign
  8890  0577  0AF2               	incf	___aomod@sign,f
  8891  0578                     l2122:
  8892  0578  3020               	movlw	low ___aomod@divisor
  8893  0579  0086               	movwf	6
  8894  057A  3000               	movlw	high ___aomod@divisor
  8895  057B  0087               	movwf	7
  8896  057C  3F47               	moviw [7]fsr1
  8897  057D  00F0               	movwf	??___aomod
  8898  057E  1FF0               	btfss	??___aomod,7
  8899  057F  2D9E               	goto	l2126
  8900  0580  0020               	movlb	0	; select bank0
  8901  0581  09A0               	comf	___aomod@divisor,f
  8902  0582  09A1               	comf	___aomod@divisor+1,f
  8903  0583  09A2               	comf	___aomod@divisor+2,f
  8904  0584  09A3               	comf	___aomod@divisor+3,f
  8905  0585  09A4               	comf	___aomod@divisor+4,f
  8906  0586  09A5               	comf	___aomod@divisor+5,f
  8907  0587  09A6               	comf	___aomod@divisor+6,f
  8908  0588  09A7               	comf	___aomod@divisor+7,f
  8909  0589  0FA0               	incfsz	___aomod@divisor,f
  8910  058A  2D9E               	goto	l2126
  8911  058B  0AA1               	incf	___aomod@divisor+1,f
  8912  058C  1D03               	skipz
  8913  058D  2D9E               	goto	l2126
  8914  058E  0AA2               	incf	___aomod@divisor+2,f
  8915  058F  1D03               	skipz
  8916  0590  2D9E               	goto	l2126
  8917  0591  0AA3               	incf	___aomod@divisor+3,f
  8918  0592  1D03               	skipz
  8919  0593  2D9E               	goto	l2126
  8920  0594  0AA4               	incf	___aomod@divisor+4,f
  8921  0595  1D03               	skipz
  8922  0596  2D9E               	goto	l2126
  8923  0597  0AA5               	incf	___aomod@divisor+5,f
  8924  0598  1D03               	skipz
  8925  0599  2D9E               	goto	l2126
  8926  059A  0AA6               	incf	___aomod@divisor+6,f
  8927  059B  1D03               	skipz
  8928  059C  2D9E               	goto	l2126
  8929  059D  0AA7               	incf	___aomod@divisor+7,f
  8930  059E                     l2126:
  8931  059E  0020               	movlb	0	; select bank0
  8932  059F  0820               	movf	___aomod@divisor,w
  8933  05A0  0421               	iorwf	___aomod@divisor+1,w
  8934  05A1  0422               	iorwf	___aomod@divisor+2,w
  8935  05A2  0423               	iorwf	___aomod@divisor+3,w
  8936  05A3  0424               	iorwf	___aomod@divisor+4,w
  8937  05A4  0425               	iorwf	___aomod@divisor+5,w
  8938  05A5  0426               	iorwf	___aomod@divisor+6,w
  8939  05A6  0427               	iorwf	___aomod@divisor+7,w
  8940  05A7  1903               	skipnz
  8941  05A8  2DF0               	goto	l2142
  8942  05A9  01F1               	clrf	___aomod@counter
  8943  05AA                     L3:
  8944  05AA  0AF1               	incf	___aomod@counter,f
  8945  05AB  1BA7               	btfsc	___aomod@divisor+7,7
  8946  05AC  2DB6               	goto	l2134
  8947  05AD  35A0               	lslf	___aomod@divisor,f
  8948  05AE  0DA1               	rlf	___aomod@divisor+1,f
  8949  05AF  0DA2               	rlf	___aomod@divisor+2,f
  8950  05B0  0DA3               	rlf	___aomod@divisor+3,f
  8951  05B1  0DA4               	rlf	___aomod@divisor+4,f
  8952  05B2  0DA5               	rlf	___aomod@divisor+5,f
  8953  05B3  0DA6               	rlf	___aomod@divisor+6,f
  8954  05B4  0DA7               	rlf	___aomod@divisor+7,f
  8955  05B5  2DAA               	goto	L3
  8956  05B6                     l2134:
  8957  05B6  0827               	movf	___aomod@divisor+7,w
  8958  05B7  022F               	subwf	___aomod@dividend+7,w
  8959  05B8  1D03               	skipz
  8960  05B9  2DD4               	goto	u1465
  8961  05BA  0826               	movf	___aomod@divisor+6,w
  8962  05BB  022E               	subwf	___aomod@dividend+6,w
  8963  05BC  1D03               	skipz
  8964  05BD  2DD4               	goto	u1465
  8965  05BE  0825               	movf	___aomod@divisor+5,w
  8966  05BF  022D               	subwf	___aomod@dividend+5,w
  8967  05C0  1D03               	skipz
  8968  05C1  2DD4               	goto	u1465
  8969  05C2  0824               	movf	___aomod@divisor+4,w
  8970  05C3  022C               	subwf	___aomod@dividend+4,w
  8971  05C4  1D03               	skipz
  8972  05C5  2DD4               	goto	u1465
  8973  05C6  0823               	movf	___aomod@divisor+3,w
  8974  05C7  022B               	subwf	___aomod@dividend+3,w
  8975  05C8  1D03               	skipz
  8976  05C9  2DD4               	goto	u1465
  8977  05CA  0822               	movf	___aomod@divisor+2,w
  8978  05CB  022A               	subwf	___aomod@dividend+2,w
  8979  05CC  1D03               	skipz
  8980  05CD  2DD4               	goto	u1465
  8981  05CE  0821               	movf	___aomod@divisor+1,w
  8982  05CF  0229               	subwf	___aomod@dividend+1,w
  8983  05D0  1D03               	skipz
  8984  05D1  2DD4               	goto	u1465
  8985  05D2  0820               	movf	___aomod@divisor,w
  8986  05D3  0228               	subwf	___aomod@dividend,w
  8987  05D4                     u1465:
  8988  05D4  1C03               	skipc
  8989  05D5  2DE6               	goto	l2138
  8990  05D6  0820               	movf	___aomod@divisor,w
  8991  05D7  02A8               	subwf	___aomod@dividend,f
  8992  05D8  0821               	movf	___aomod@divisor+1,w
  8993  05D9  3BA9               	subwfb	___aomod@dividend+1,f
  8994  05DA  0822               	movf	___aomod@divisor+2,w
  8995  05DB  3BAA               	subwfb	___aomod@dividend+2,f
  8996  05DC  0823               	movf	___aomod@divisor+3,w
  8997  05DD  3BAB               	subwfb	___aomod@dividend+3,f
  8998  05DE  0824               	movf	___aomod@divisor+4,w
  8999  05DF  3BAC               	subwfb	___aomod@dividend+4,f
  9000  05E0  0825               	movf	___aomod@divisor+5,w
  9001  05E1  3BAD               	subwfb	___aomod@dividend+5,f
  9002  05E2  0826               	movf	___aomod@divisor+6,w
  9003  05E3  3BAE               	subwfb	___aomod@dividend+6,f
  9004  05E4  0827               	movf	___aomod@divisor+7,w
  9005  05E5  3BAF               	subwfb	___aomod@dividend+7,f
  9006  05E6                     l2138:
  9007  05E6  36A7               	lsrf	___aomod@divisor+7,f
  9008  05E7  0CA6               	rrf	___aomod@divisor+6,f
  9009  05E8  0CA5               	rrf	___aomod@divisor+5,f
  9010  05E9  0CA4               	rrf	___aomod@divisor+4,f
  9011  05EA  0CA3               	rrf	___aomod@divisor+3,f
  9012  05EB  0CA2               	rrf	___aomod@divisor+2,f
  9013  05EC  0CA1               	rrf	___aomod@divisor+1,f
  9014  05ED  0CA0               	rrf	___aomod@divisor,f
  9015  05EE  0BF1               	decfsz	___aomod@counter,f
  9016  05EF  2DB6               	goto	l2134
  9017  05F0                     l2142:
  9018  05F0  0872               	movf	___aomod@sign,w
  9019  05F1  1903               	btfsc	3,2
  9020  05F2  2E0A               	goto	l724
  9021  05F3  2633  3183         	fcall	PL6	;call to abstracted procedure
  9022  05F5  0FA8               	incfsz	___aomod@dividend,f
  9023  05F6  2E0A               	goto	l724
  9024  05F7  0AA9               	incf	___aomod@dividend+1,f
  9025  05F8  1D03               	skipz
  9026  05F9  2E0A               	goto	l724
  9027  05FA  0AAA               	incf	___aomod@dividend+2,f
  9028  05FB  1D03               	skipz
  9029  05FC  2E0A               	goto	l724
  9030  05FD  0AAB               	incf	___aomod@dividend+3,f
  9031  05FE  1D03               	skipz
  9032  05FF  2E0A               	goto	l724
  9033  0600  0AAC               	incf	___aomod@dividend+4,f
  9034  0601  1D03               	skipz
  9035  0602  2E0A               	goto	l724
  9036  0603  0AAD               	incf	___aomod@dividend+5,f
  9037  0604  1D03               	skipz
  9038  0605  2E0A               	goto	l724
  9039  0606  0AAE               	incf	___aomod@dividend+6,f
  9040  0607  1D03               	skipz
  9041  0608  2E0A               	goto	l724
  9042  0609  0AAF               	incf	___aomod@dividend+7,f
  9043  060A                     l724:
  9044  060A  0020               	movlb	0	; select bank0
  9045  060B  0828               	movf	___aomod@dividend,w
  9046  060C  00A0               	movwf	?___aomod
  9047  060D  0829               	movf	___aomod@dividend+1,w
  9048  060E  00A1               	movwf	?___aomod+1
  9049  060F  082A               	movf	___aomod@dividend+2,w
  9050  0610  00A2               	movwf	?___aomod+2
  9051  0611  082B               	movf	___aomod@dividend+3,w
  9052  0612  00A3               	movwf	?___aomod+3
  9053  0613  082C               	movf	___aomod@dividend+4,w
  9054  0614  00A4               	movwf	?___aomod+4
  9055  0615  082D               	movf	___aomod@dividend+5,w
  9056  0616  00A5               	movwf	?___aomod+5
  9057  0617  082E               	movf	___aomod@dividend+6,w
  9058  0618  00A6               	movwf	?___aomod+6
  9059  0619  082F               	movf	___aomod@dividend+7,w
  9060  061A  00A7               	movwf	?___aomod+7
  9061  061B  0008               	return
  9062  061C                     __end_of___aomod:
  9063  061C                     __ptext13:	
  9064 ;; *************** function _abs *****************
  9065 ;; Defined at:
  9066 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  9067 ;; Parameters:    Size  Location     Type
  9068 ;;  a               2    3[COMMON] int 
  9069 ;; Auto vars:     Size  Location     Type
  9070 ;;		None
  9071 ;; Return value:  Size  Location     Type
  9072 ;;                  2    3[COMMON] int 
  9073 ;; Registers used:
  9074 ;;		wreg, status,2, status,0
  9075 ;; Tracked objects:
  9076 ;;		On entry : 1F/0
  9077 ;;		On exit  : 0/0
  9078 ;;		Unchanged: 0/0
  9079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9080 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9082 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9083 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9084 ;;Total ram usage:        4 bytes
  9085 ;; Hardware stack levels used: 1
  9086 ;; Hardware stack levels required when called: 1
  9087 ;; This function calls:
  9088 ;;		Nothing
  9089 ;; This function is called by:
  9090 ;;		_dtoa
  9091 ;; This function uses a non-reentrant model
  9092 ;;
  9093                           
  9094                           
  9095                           ;psect for function _abs
  9096  061C                     _abs:
  9097                           
  9098                           ;incstack = 0
  9099                           ; Regs used in _abs: [wreg+status,2+status,0]
  9100  061C  0874               	movf	abs@a+1,w
  9101  061D  3A80               	xorlw	128
  9102  061E  00F5               	movwf	??_abs
  9103  061F  3080               	movlw	128
  9104  0620  0275               	subwf	??_abs,w
  9105  0621  1D03               	skipz
  9106  0622  2E25               	goto	u1545
  9107  0623  3001               	movlw	1
  9108  0624  0273               	subwf	abs@a,w
  9109  0625                     u1545:
  9110  0625  1803               	skipnc
  9111  0626  0008               	return
  9112  0627  0973               	comf	abs@a,w
  9113  0628  00F5               	movwf	??_abs
  9114  0629  0974               	comf	abs@a+1,w
  9115  062A  00F6               	movwf	??_abs+1
  9116  062B  0AF5               	incf	??_abs,f
  9117  062C  1903               	skipnz
  9118  062D  0AF6               	incf	??_abs+1,f
  9119  062E  0875               	movf	??_abs,w
  9120  062F  00F3               	movwf	?_abs
  9121  0630  0876               	movf	??_abs+1,w
  9122  0631  00F4               	movwf	?_abs+1
  9123  0632  0008               	return
  9124  0633                     __end_of_abs:
  9125  0633                     PL6:
  9126  0633  09A8               	comf	___aomod@dividend,f
  9127  0634  09A9               	comf	___aomod@dividend+1,f
  9128  0635  09AA               	comf	___aomod@dividend+2,f
  9129  0636  09AB               	comf	___aomod@dividend+3,f
  9130  0637  09AC               	comf	___aomod@dividend+4,f
  9131  0638  09AD               	comf	___aomod@dividend+5,f
  9132  0639  09AE               	comf	___aomod@dividend+6,f
  9133  063A  09AF               	comf	___aomod@dividend+7,f
  9134  063B  0008               	return
  9135  063C                     __end_ofPL6:
  9136                           
  9137                           	psect	text10
  9138  0E2C                     __ptext10:	
  9139 ;; *************** function _pad *****************
  9140 ;; Defined at:
  9141 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  9142 ;; Parameters:    Size  Location     Type
  9143 ;;  fp              1    wreg     PTR struct _IO_FILE
  9144 ;;		 -> NULL(0), sprintf@f(5), 
  9145 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  9146 ;;		 -> dbuf(32), 
  9147 ;;  p               2    5[BANK0 ] int 
  9148 ;; Auto vars:     Size  Location     Type
  9149 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  9150 ;;		 -> NULL(0), sprintf@f(5), 
  9151 ;;  w               2    9[BANK0 ] int 
  9152 ;;  i               2    7[BANK0 ] int 
  9153 ;; Return value:  Size  Location     Type
  9154 ;;                  2    4[BANK0 ] int 
  9155 ;; Registers used:
  9156 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9157 ;; Tracked objects:
  9158 ;;		On entry : 1F/0
  9159 ;;		On exit  : 1F/0
  9160 ;;		Unchanged: 0/0
  9161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9162 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9163 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9164 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9165 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9166 ;;Total ram usage:        9 bytes
  9167 ;; Hardware stack levels used: 1
  9168 ;; Hardware stack levels required when called: 5
  9169 ;; This function calls:
  9170 ;;		_fputc
  9171 ;;		_fputs
  9172 ;;		_strlen
  9173 ;; This function is called by:
  9174 ;;		_dtoa
  9175 ;; This function uses a non-reentrant model
  9176 ;;
  9177                           
  9178                           
  9179                           ;psect for function _pad
  9180  0E2C                     _pad:
  9181                           
  9182                           ;incstack = 0
  9183                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9184                           ;pad@fp stored from wreg
  9185  0E2C  00AB               	movwf	pad@fp
  9186                           
  9187                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  9188  0E2D  1C6C               	btfss	_flags,0
  9189  0E2E  2E34               	goto	l2150
  9190                           
  9191                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  9192  0E2F  082B               	movf	pad@fp,w
  9193  0E30  00FB               	movwf	fputs@fp
  9194  0E31  0824               	movf	pad@buf,w
  9195  0E32  266B  318E         	fcall	_fputs
  9196  0E34                     l2150:
  9197                           
  9198                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  9199  0E34  1BA6               	btfsc	pad@p+1,7
  9200  0E35  2E3B               	goto	l2154
  9201  0E36  0826               	movf	pad@p+1,w
  9202  0E37  00AA               	movwf	pad@w+1
  9203  0E38  0825               	movf	pad@p,w
  9204  0E39  00A9               	movwf	pad@w
  9205  0E3A  2E3D               	goto	l1101
  9206  0E3B                     l2154:
  9207  0E3B  01A9               	clrf	pad@w
  9208  0E3C  01AA               	clrf	pad@w+1
  9209  0E3D                     l1101:
  9210                           
  9211                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  9212  0E3D  01A7               	clrf	pad@i
  9213  0E3E  01A8               	clrf	pad@i+1
  9214  0E3F                     l2160:	
  9215                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9216                           
  9217                           
  9218                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9219  0E3F  0828               	movf	pad@i+1,w
  9220  0E40  3A80               	xorlw	128
  9221  0E41  00FD               	movwf	??_pad
  9222  0E42  082A               	movf	pad@w+1,w
  9223  0E43  3A80               	xorlw	128
  9224  0E44  027D               	subwf	??_pad,w
  9225  0E45  1D03               	skipz
  9226  0E46  2E49               	goto	u1525
  9227  0E47  0829               	movf	pad@w,w
  9228  0E48  0227               	subwf	pad@i,w
  9229  0E49                     u1525:
  9230  0E49  1803               	btfsc	3,0
  9231  0E4A  2E58               	goto	l1104
  9232                           
  9233                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  9234  0E4B  3020               	movlw	32
  9235  0E4C  00F3               	movwf	fputc@c
  9236  0E4D  01F4               	clrf	fputc@c+1
  9237  0E4E  0020               	movlb	0	; select bank0
  9238  0E4F  082B               	movf	pad@fp,w
  9239  0E50  00F5               	movwf	fputc@fp
  9240  0E51  2778  318E         	fcall	_fputc
  9241                           
  9242                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  9243  0E53  0020               	movlb	0	; select bank0
  9244  0E54  0AA7               	incf	pad@i,f
  9245  0E55  1903               	skipnz
  9246  0E56  0AA8               	incf	pad@i+1,f
  9247  0E57  2E3F               	goto	l2160
  9248  0E58                     l1104:
  9249                           
  9250                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  9251  0E58  0020               	movlb	0	; select bank0
  9252  0E59  186C               	btfsc	_flags,0
  9253  0E5A  2E60               	goto	l2164
  9254                           
  9255                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  9256  0E5B  082B               	movf	pad@fp,w
  9257  0E5C  00FB               	movwf	fputs@fp
  9258  0E5D  0824               	movf	pad@buf,w
  9259  0E5E  266B  318E         	fcall	_fputs
  9260  0E60                     l2164:
  9261                           
  9262                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  9263  0E60  0824               	movf	pad@buf,w
  9264  0E61  27C7               	fcall	_strlen
  9265  0E62  0871               	movf	?_strlen+1,w
  9266  0E63  00A5               	movwf	?_pad+1
  9267  0E64  0870               	movf	?_strlen,w
  9268  0E65  00A4               	movwf	?_pad
  9269  0E66  0829               	movf	pad@w,w
  9270  0E67  07A4               	addwf	?_pad,f
  9271  0E68  082A               	movf	pad@w+1,w
  9272  0E69  3DA5               	addwfc	?_pad+1,f
  9273  0E6A  0008               	return
  9274  0E6B                     __end_of_pad:
  9275  0E6B                     __ptext12:	
  9276 ;; *************** function _fputs *****************
  9277 ;; Defined at:
  9278 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  9279 ;; Parameters:    Size  Location     Type
  9280 ;;  s               1    wreg     PTR const unsigned char 
  9281 ;;		 -> dbuf(32), 
  9282 ;;  fp              1   11[COMMON] PTR struct _IO_FILE
  9283 ;;		 -> NULL(0), sprintf@f(5), 
  9284 ;; Auto vars:     Size  Location     Type
  9285 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  9286 ;;		 -> dbuf(32), 
  9287 ;;  i               2    1[BANK0 ] int 
  9288 ;;  c               1    0[BANK0 ] unsigned char 
  9289 ;; Return value:  Size  Location     Type
  9290 ;;                  2   11[COMMON] int 
  9291 ;; Registers used:
  9292 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9293 ;; Tracked objects:
  9294 ;;		On entry : 1F/0
  9295 ;;		On exit  : 1F/0
  9296 ;;		Unchanged: 0/0
  9297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9298 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9299 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9300 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9301 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9302 ;;Total ram usage:        6 bytes
  9303 ;; Hardware stack levels used: 1
  9304 ;; Hardware stack levels required when called: 4
  9305 ;; This function calls:
  9306 ;;		_fputc
  9307 ;; This function is called by:
  9308 ;;		_pad
  9309 ;; This function uses a non-reentrant model
  9310 ;;
  9311                           
  9312                           
  9313                           ;psect for function _fputs
  9314  0E6B                     _fputs:
  9315                           
  9316                           ;incstack = 0
  9317                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9318                           ;fputs@s stored from wreg
  9319  0E6B  00A3               	movwf	fputs@s
  9320  0E6C  01A1               	clrf	fputs@i
  9321  0E6D  01A2               	clrf	fputs@i+1
  9322  0E6E                     l2060:
  9323  0E6E  0821               	movf	fputs@i,w
  9324  0E6F  0723               	addwf	fputs@s,w
  9325  0E70  00FC               	movwf	??_fputs
  9326  0E71  0086               	movwf	6
  9327  0E72  0187               	clrf	7
  9328  0E73  0801               	movf	1,w
  9329  0E74  00A0               	movwf	fputs@c
  9330  0E75  0820               	movf	fputs@c,w
  9331  0E76  1903               	btfsc	3,2
  9332  0E77  0008               	return
  9333  0E78  00F3               	movwf	fputc@c
  9334  0E79  01F4               	clrf	fputc@c+1
  9335  0E7A  087B               	movf	fputs@fp,w
  9336  0E7B  00F5               	movwf	fputc@fp
  9337  0E7C  2778  318E         	fcall	_fputc
  9338  0E7E  0020               	movlb	0	; select bank0
  9339  0E7F  0AA1               	incf	fputs@i,f
  9340  0E80  1903               	skipnz
  9341  0E81  0AA2               	incf	fputs@i+1,f
  9342  0E82  2E6E               	goto	l2060
  9343  0E83                     __end_of_fputs:
  9344  0E83                     __ptext8:	
  9345 ;; *************** function _vfpfcnvrt *****************
  9346 ;; Defined at:
  9347 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  9348 ;; Parameters:    Size  Location     Type
  9349 ;;  fp              1    wreg     PTR struct _IO_FILE
  9350 ;;		 -> NULL(0), sprintf@f(5), 
  9351 ;;  fmt             1   44[BANK0 ] PTR PTR unsigned char 
  9352 ;;		 -> vfprintf@cfmt(2), 
  9353 ;;  ap              1   45[BANK0 ] PTR PTR void 
  9354 ;;		 -> printf@ap(1), sprintf@ap(1), 
  9355 ;; Auto vars:     Size  Location     Type
  9356 ;;  fp              1   59[BANK0 ] PTR struct _IO_FILE
  9357 ;;		 -> NULL(0), sprintf@f(5), 
  9358 ;;  ll              8   49[BANK0 ] long long 
  9359 ;;  llu             8    0        unsigned long long 
  9360 ;;  f               4    0        unsigned long long 
  9361 ;;  ct              3    0        unsigned char [3]
  9362 ;;  i               2    0        int 
  9363 ;;  done            2    0        int 
  9364 ;;  cp              2    0        PTR unsigned char 
  9365 ;;  vp              1   58[BANK0 ] PTR void 
  9366 ;;		 -> ?_printf(2), ?_sprintf(2), 
  9367 ;;  c               1   57[BANK0 ] unsigned char 
  9368 ;; Return value:  Size  Location     Type
  9369 ;;                  2   44[BANK0 ] int 
  9370 ;; Registers used:
  9371 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9372 ;; Tracked objects:
  9373 ;;		On entry : 1F/0
  9374 ;;		On exit  : 1F/0
  9375 ;;		Unchanged: 0/0
  9376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9377 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9378 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9379 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9380 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9381 ;;Total ram usage:       16 bytes
  9382 ;; Hardware stack levels used: 1
  9383 ;; Hardware stack levels required when called: 7
  9384 ;; This function calls:
  9385 ;;		_ctoa
  9386 ;;		_dtoa
  9387 ;;		_fputc
  9388 ;; This function is called by:
  9389 ;;		_vfprintf
  9390 ;; This function uses a non-reentrant model
  9391 ;;
  9392                           
  9393                           
  9394                           ;psect for function _vfpfcnvrt
  9395  0E83                     _vfpfcnvrt:
  9396                           
  9397                           ;incstack = 0
  9398                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9399                           ;vfpfcnvrt@fp stored from wreg
  9400  0E83  00DB               	movwf	vfpfcnvrt@fp
  9401                           
  9402                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  9403  0E84  27D8  318E         	fcall	PL2	;call to abstracted procedure
  9404  0E86  3A25               	xorlw	37
  9405  0E87  1D03               	btfss	3,2
  9406  0E88  2F17               	goto	l2348
  9407                           
  9408                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  9409  0E89  27E5  318E         	fcall	PL4	;call to abstracted procedure
  9410  0E8B  1803               	skipnc
  9411  0E8C  0A81               	incf	1,f
  9412                           
  9413                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  9414  0E8D  0021               	movlb	1	; select bank1
  9415  0E8E  01A2               	clrf	_width^(0+128)
  9416  0E8F  01A3               	clrf	(_width+1)^(0+128)
  9417  0E90  0020               	movlb	0	; select bank0
  9418  0E91  30FF               	movlw	255
  9419  0E92  01EC               	clrf	_flags
  9420  0E93  01ED               	clrf	_flags+1
  9421                           
  9422                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  9423  0E94  0021               	movlb	1	; select bank1
  9424  0E95  00A4               	movwf	_prec^(0+128)
  9425  0E96  00A5               	movwf	(_prec^(0+128)+1)
  9426                           
  9427                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  9428  0E97  0020               	movlb	0	; select bank0
  9429  0E98  27D8  318E         	fcall	PL2	;call to abstracted procedure
  9430  0E9A  3A63               	xorlw	99
  9431  0E9B  1D03               	btfss	3,2
  9432  0E9C  2EAD               	goto	l2308
  9433                           
  9434                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  9435  0E9D  27E5  318E         	fcall	PL4	;call to abstracted procedure
  9436  0E9F  1803               	skipnc
  9437  0EA0  0A81               	incf	1,f
  9438                           
  9439                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  9440  0EA1  27EC  318E         	fcall	PL8	;call to abstracted procedure
  9441  0EA3  0800               	movf	0,w
  9442  0EA4  00D9               	movwf	vfpfcnvrt@c
  9443                           
  9444                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  9445  0EA5  00FB               	movwf	ctoa@c
  9446  0EA6  085B               	movf	vfpfcnvrt@fp,w
  9447  0EA7  272D               	fcall	_ctoa
  9448  0EA8  087C               	movf	?_ctoa+1,w
  9449  0EA9  00CD               	movwf	?_vfpfcnvrt+1
  9450  0EAA  087B               	movf	?_ctoa,w
  9451  0EAB  00CC               	movwf	?_vfpfcnvrt
  9452  0EAC  0008               	return
  9453  0EAD                     l2308:
  9454                           
  9455                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  9456  0EAD  27D8  318E         	fcall	PL2	;call to abstracted procedure
  9457  0EAF  3A64               	xorlw	100
  9458  0EB0  1903               	btfsc	3,2
  9459  0EB1  2EB7               	goto	l2312
  9460  0EB2  27D8  318E         	fcall	PL2	;call to abstracted procedure
  9461  0EB4  3A69               	xorlw	105
  9462  0EB5  1D03               	btfss	3,2
  9463  0EB6  2EE5               	goto	l2320
  9464  0EB7                     l2312:
  9465                           
  9466                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  9467  0EB7  27E5  318E         	fcall	PL4	;call to abstracted procedure
  9468  0EB9  1803               	skipnc
  9469  0EBA  0A81               	incf	1,f
  9470                           
  9471                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  9472  0EBB  27EC               	fcall	PL8	;call to abstracted procedure
  9473  0EBC  3F00               	moviw [0]fsr0
  9474  0EBD  00CE               	movwf	??_vfpfcnvrt
  9475  0EBE  3F01               	moviw [1]fsr0
  9476  0EBF  00CF               	movwf	??_vfpfcnvrt+1
  9477  0EC0  084E               	movf	??_vfpfcnvrt,w
  9478  0EC1  00D1               	movwf	vfpfcnvrt@ll
  9479  0EC2  084F               	movf	??_vfpfcnvrt+1,w
  9480  0EC3  00D2               	movwf	vfpfcnvrt@ll+1
  9481  0EC4  0D89               	rlf	9,f
  9482  0EC5  3B89               	subwfb	9,f
  9483  0EC6  0989               	comf	9,f
  9484  0EC7  00D3               	movwf	vfpfcnvrt@ll+2
  9485  0EC8  00D4               	movwf	vfpfcnvrt@ll+3
  9486  0EC9  00D5               	movwf	vfpfcnvrt@ll+4
  9487  0ECA  00D6               	movwf	vfpfcnvrt@ll+5
  9488  0ECB  00D7               	movwf	vfpfcnvrt@ll+6
  9489  0ECC  00D8               	movwf	vfpfcnvrt@ll+7
  9490                           
  9491                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  9492  0ECD  0851               	movf	vfpfcnvrt@ll,w
  9493  0ECE  00B0               	movwf	dtoa@d
  9494  0ECF  0852               	movf	vfpfcnvrt@ll+1,w
  9495  0ED0  00B1               	movwf	dtoa@d+1
  9496  0ED1  0853               	movf	vfpfcnvrt@ll+2,w
  9497  0ED2  00B2               	movwf	dtoa@d+2
  9498  0ED3  0854               	movf	vfpfcnvrt@ll+3,w
  9499  0ED4  00B3               	movwf	dtoa@d+3
  9500  0ED5  0855               	movf	vfpfcnvrt@ll+4,w
  9501  0ED6  00B4               	movwf	dtoa@d+4
  9502  0ED7  0856               	movf	vfpfcnvrt@ll+5,w
  9503  0ED8  00B5               	movwf	dtoa@d+5
  9504  0ED9  0857               	movf	vfpfcnvrt@ll+6,w
  9505  0EDA  00B6               	movwf	dtoa@d+6
  9506  0EDB  0858               	movf	vfpfcnvrt@ll+7,w
  9507  0EDC  00B7               	movwf	dtoa@d+7
  9508  0EDD  085B               	movf	vfpfcnvrt@fp,w
  9509  0EDE  3183  233A         	fcall	_dtoa
  9510  0EE0  0831               	movf	?_dtoa+1,w
  9511  0EE1  00CD               	movwf	?_vfpfcnvrt+1
  9512  0EE2  0830               	movf	?_dtoa,w
  9513  0EE3  00CC               	movwf	?_vfpfcnvrt
  9514  0EE4  0008               	return
  9515  0EE5                     l2320:
  9516                           
  9517                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1099:         if 
      +                          (*fmt[0] == 'n') {
  9518  0EE5  27D8  318E         	fcall	PL2	;call to abstracted procedure
  9519  0EE7  3A6E               	xorlw	110
  9520  0EE8  1D03               	btfss	3,2
  9521  0EE9  2F00               	goto	l2332
  9522                           
  9523                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1100:            
      +                           ++*fmt;
  9524  0EEA  27E5               	fcall	PL4	;call to abstracted procedure
  9525  0EEB  1803               	skipnc
  9526  0EEC  0A81               	incf	1,f
  9527                           
  9528                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1101:            
      +                           vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  9529  0EED  084D               	movf	vfpfcnvrt@ap,w
  9530  0EEE  0086               	movwf	6
  9531  0EEF  0187               	clrf	7
  9532  0EF0  3F40               	moviw [0]fsr1
  9533  0EF1  0084               	movwf	4
  9534  0EF2  0185               	clrf	5
  9535  0EF3  0A81               	incf	1,f
  9536  0EF4  0800               	movf	0,w
  9537  0EF5  00DA               	movwf	vfpfcnvrt@vp
  9538                           
  9539                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1102:            
      +                           *(int *)vp = nout;
  9540  0EF6  0086               	movwf	6
  9541  0EF7  0021               	movlb	1	; select bank1
  9542  0EF8  0820               	movf	_nout^(0+128),w
  9543  0EF9  3FC0               	movwi [0]fsr1
  9544  0EFA  0821               	movf	(_nout+1)^(0+128),w
  9545  0EFB  3FC1               	movwi [1]fsr1
  9546  0EFC                     l2328:
  9547                           
  9548                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1103:            
      +                           return 0;
  9549  0EFC  0020               	movlb	0	; select bank0
  9550  0EFD  01CC               	clrf	?_vfpfcnvrt
  9551  0EFE  01CD               	clrf	?_vfpfcnvrt+1
  9552  0EFF  0008               	return
  9553  0F00                     l2332:
  9554                           
  9555                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  9556  0F00  27D8  318E         	fcall	PL2	;call to abstracted procedure
  9557  0F02  3A25               	xorlw	37
  9558  0F03  1D03               	btfss	3,2
  9559  0F04  2F12               	goto	l2342
  9560                           
  9561                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  9562  0F05  27E5  318E         	fcall	PL4	;call to abstracted procedure
  9563  0F07  1803               	skipnc
  9564  0F08  0A81               	incf	1,f
  9565                           
  9566                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  9567  0F09  3025               	movlw	37
  9568  0F0A  27FB  318E         	fcall	PL14	;call to abstracted procedure
  9569  0F0C  2778               	fcall	_fputc
  9570  0F0D                     l2338:
  9571                           
  9572                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  9573  0F0D  0020               	movlb	0	; select bank0
  9574  0F0E  01CC               	clrf	?_vfpfcnvrt
  9575  0F0F  0ACC               	incf	?_vfpfcnvrt,f
  9576  0F10  01CD               	clrf	?_vfpfcnvrt+1
  9577  0F11  0008               	return
  9578  0F12                     l2342:
  9579                           
  9580                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  9581  0F12  27E5  318E         	fcall	PL4	;call to abstracted procedure
  9582  0F14  1803               	skipnc
  9583  0F15  0A81               	incf	1,f
  9584  0F16  2EFC               	goto	l2328
  9585  0F17                     l2348:
  9586                           
  9587                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  9588  0F17  084C               	movf	vfpfcnvrt@fmt,w
  9589  0F18  0086               	movwf	6
  9590  0F19  0187               	clrf	7
  9591  0F1A  3F40               	moviw [0]fsr1
  9592  0F1B  00CE               	movwf	??_vfpfcnvrt
  9593  0F1C  3F41               	moviw [1]fsr1
  9594  0F1D  00CF               	movwf	??_vfpfcnvrt+1
  9595  0F1E  084E               	movf	??_vfpfcnvrt,w
  9596  0F1F  0084               	movwf	4
  9597  0F20  084F               	movf	??_vfpfcnvrt+1,w
  9598  0F21  0085               	movwf	5
  9599  0F22  0800               	movf	0,w	;code access
  9600  0F23  27FB  318E         	fcall	PL14	;call to abstracted procedure
  9601  0F25  2778  318E         	fcall	_fputc
  9602                           
  9603                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  9604  0F27  0020               	movlb	0	; select bank0
  9605  0F28  27E5  318E         	fcall	PL4	;call to abstracted procedure
  9606  0F2A  1803               	skipnc
  9607  0F2B  0A81               	incf	1,f
  9608  0F2C  2F0D               	goto	l2338
  9609  0F2D                     __end_of_vfpfcnvrt:
  9610  0F2D                     __ptext16:	
  9611 ;; *************** function _ctoa *****************
  9612 ;; Defined at:
  9613 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  9614 ;; Parameters:    Size  Location     Type
  9615 ;;  fp              1    wreg     PTR struct _IO_FILE
  9616 ;;		 -> NULL(0), sprintf@f(5), 
  9617 ;;  c               1   11[COMMON] unsigned char 
  9618 ;; Auto vars:     Size  Location     Type
  9619 ;;  fp              1    4[BANK0 ] PTR struct _IO_FILE
  9620 ;;		 -> NULL(0), sprintf@f(5), 
  9621 ;;  w               2    2[BANK0 ] int 
  9622 ;;  l               2    0[BANK0 ] int 
  9623 ;; Return value:  Size  Location     Type
  9624 ;;                  2   11[COMMON] int 
  9625 ;; Registers used:
  9626 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9627 ;; Tracked objects:
  9628 ;;		On entry : 1F/0
  9629 ;;		On exit  : 1F/0
  9630 ;;		Unchanged: 0/0
  9631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9632 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9633 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9634 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9635 ;;      Totals:         3       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9636 ;;Total ram usage:        8 bytes
  9637 ;; Hardware stack levels used: 1
  9638 ;; Hardware stack levels required when called: 4
  9639 ;; This function calls:
  9640 ;;		_fputc
  9641 ;; This function is called by:
  9642 ;;		_vfpfcnvrt
  9643 ;; This function uses a non-reentrant model
  9644 ;;
  9645                           
  9646                           
  9647                           ;psect for function _ctoa
  9648  0F2D                     _ctoa:
  9649                           
  9650                           ;incstack = 0
  9651                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9652                           ;ctoa@fp stored from wreg
  9653  0F2D  00A4               	movwf	ctoa@fp
  9654                           
  9655                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  9656  0F2E  0021               	movlb	1	; select bank1
  9657  0F2F  0822               	movf	_width^(0+128),w
  9658  0F30  0423               	iorwf	(_width+1)^(0+128),w
  9659  0F31  1D03               	btfss	3,2
  9660  0F32  2F3B               	goto	l2202
  9661  0F33  0823               	movf	(_width+1)^(0+128),w
  9662  0F34  0020               	movlb	0	; select bank0
  9663  0F35  00A3               	movwf	ctoa@w+1
  9664  0F36  0021               	movlb	1	; select bank1
  9665  0F37  0822               	movf	_width^(0+128),w
  9666  0F38  0020               	movlb	0	; select bank0
  9667  0F39  00A2               	movwf	ctoa@w
  9668  0F3A  2F44               	goto	l2204
  9669  0F3B                     l2202:
  9670  0F3B  0822               	movf	_width^(0+128),w
  9671  0F3C  3EFF               	addlw	255
  9672  0F3D  0020               	movlb	0	; select bank0
  9673  0F3E  00A2               	movwf	ctoa@w
  9674  0F3F  30FF               	movlw	255
  9675  0F40  0021               	movlb	1	; select bank1
  9676  0F41  3D23               	addwfc	(_width+1)^(0+128),w
  9677  0F42  0020               	movlb	0	; select bank0
  9678  0F43  00A3               	movwf	ctoa@w+1
  9679  0F44                     l2204:
  9680                           
  9681                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  9682  0F44  1C6C               	btfss	_flags,0
  9683  0F45  2F4A               	goto	l2208
  9684                           
  9685                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  9686  0F46  27F5  318E         	fcall	PL10	;call to abstracted procedure
  9687  0F48  2778  318E         	fcall	_fputc
  9688  0F4A                     l2208:
  9689                           
  9690                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  9691  0F4A  0020               	movlb	0	; select bank0
  9692  0F4B  1FA3               	btfss	ctoa@w+1,7
  9693  0F4C  2F4F               	goto	l1117
  9694  0F4D  01A2               	clrf	ctoa@w
  9695  0F4E  01A3               	clrf	ctoa@w+1
  9696  0F4F                     l1117:
  9697                           
  9698                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  9699  0F4F  01A0               	clrf	ctoa@l
  9700  0F50  01A1               	clrf	ctoa@l+1
  9701  0F51                     l2218:	
  9702                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  9703                           
  9704                           
  9705                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  9706  0F51  0821               	movf	ctoa@l+1,w
  9707  0F52  3A80               	xorlw	128
  9708  0F53  00FD               	movwf	??_ctoa
  9709  0F54  0823               	movf	ctoa@w+1,w
  9710  0F55  3A80               	xorlw	128
  9711  0F56  027D               	subwf	??_ctoa,w
  9712  0F57  1D03               	skipz
  9713  0F58  2F5B               	goto	u1635
  9714  0F59  0822               	movf	ctoa@w,w
  9715  0F5A  0220               	subwf	ctoa@l,w
  9716  0F5B                     u1635:
  9717  0F5B  1803               	btfsc	3,0
  9718  0F5C  2F6A               	goto	l1120
  9719                           
  9720                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  9721  0F5D  3020               	movlw	32
  9722  0F5E  00F3               	movwf	fputc@c
  9723  0F5F  01F4               	clrf	fputc@c+1
  9724  0F60  0020               	movlb	0	; select bank0
  9725  0F61  0824               	movf	ctoa@fp,w
  9726  0F62  00F5               	movwf	fputc@fp
  9727  0F63  2778  318E         	fcall	_fputc
  9728                           
  9729                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 275:         ++l;
  9730  0F65  0020               	movlb	0	; select bank0
  9731  0F66  0AA0               	incf	ctoa@l,f
  9732  0F67  1903               	skipnz
  9733  0F68  0AA1               	incf	ctoa@l+1,f
  9734  0F69  2F51               	goto	l2218
  9735  0F6A                     l1120:
  9736                           
  9737                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  9738  0F6A  0020               	movlb	0	; select bank0
  9739  0F6B  186C               	btfsc	_flags,0
  9740  0F6C  2F70               	goto	l2222
  9741                           
  9742                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  9743  0F6D  27F5  318E         	fcall	PL10	;call to abstracted procedure
  9744  0F6F  2778               	fcall	_fputc
  9745  0F70                     l2222:
  9746                           
  9747                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  9748  0F70  0020               	movlb	0	; select bank0
  9749  0F71  0820               	movf	ctoa@l,w
  9750  0F72  3E01               	addlw	1
  9751  0F73  00FB               	movwf	?_ctoa
  9752  0F74  3000               	movlw	0
  9753  0F75  3D21               	addwfc	ctoa@l+1,w
  9754  0F76  00FC               	movwf	?_ctoa+1
  9755  0F77  0008               	return
  9756  0F78                     __end_of_ctoa:
  9757  0F78                     __ptext17:	
  9758 ;; *************** function _fputc *****************
  9759 ;; Defined at:
  9760 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  9761 ;; Parameters:    Size  Location     Type
  9762 ;;  c               2    3[COMMON] int 
  9763 ;;  fp              1    5[COMMON] PTR struct _IO_FILE
  9764 ;;		 -> NULL(0), sprintf@f(5), 
  9765 ;; Auto vars:     Size  Location     Type
  9766 ;;		None
  9767 ;; Return value:  Size  Location     Type
  9768 ;;                  2    3[COMMON] int 
  9769 ;; Registers used:
  9770 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9771 ;; Tracked objects:
  9772 ;;		On entry : 1F/0
  9773 ;;		On exit  : 0/0
  9774 ;;		Unchanged: 0/0
  9775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9776 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9778 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9779 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9780 ;;Total ram usage:        8 bytes
  9781 ;; Hardware stack levels used: 1
  9782 ;; Hardware stack levels required when called: 3
  9783 ;; This function calls:
  9784 ;;		_putch
  9785 ;; This function is called by:
  9786 ;;		_pad
  9787 ;;		_ctoa
  9788 ;;		_vfpfcnvrt
  9789 ;;		_fputs
  9790 ;; This function uses a non-reentrant model
  9791 ;;
  9792                           
  9793                           
  9794                           ;psect for function _fputc
  9795  0F78                     _fputc:
  9796                           
  9797                           ;incstack = 0
  9798                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9799  0F78  0875               	movf	fputc@fp,w
  9800  0F79  1D03               	btfss	3,2
  9801  0F7A  0875               	movf	fputc@fp,w
  9802  0F7B  1D03               	btfss	3,2
  9803  0F7C  2F7F               	goto	l2032
  9804  0F7D  0873               	movf	fputc@c,w
  9805  0F7E  2FB7               	ljmp	_putch
  9806  0F7F                     l2032:
  9807  0F7F  0875               	movf	fputc@fp,w
  9808  0F80  3E03               	addlw	3
  9809  0F81  0086               	movwf	6
  9810  0F82  0187               	clrf	7
  9811  0F83  0016               	moviw fsr1++
  9812  0F84  0401               	iorwf	1,w
  9813  0F85  1903               	btfsc	3,2
  9814  0F86  2FA0               	goto	l2036
  9815  0F87  0875               	movf	fputc@fp,w
  9816  0F88  3E03               	addlw	3
  9817  0F89  0086               	movwf	6
  9818  0F8A  0187               	clrf	7
  9819  0F8B  3F40               	moviw [0]fsr1
  9820  0F8C  00F6               	movwf	??_fputc
  9821  0F8D  3F41               	moviw [1]fsr1
  9822  0F8E  00F7               	movwf	??_fputc+1
  9823  0F8F  0A75               	incf	fputc@fp,w
  9824  0F90  0086               	movwf	6
  9825  0F91  3F40               	moviw [0]fsr1
  9826  0F92  00F8               	movwf	??_fputc+2
  9827  0F93  3F41               	moviw [1]fsr1
  9828  0F94  00F9               	movwf	??_fputc+3
  9829  0F95  3A80               	xorlw	128
  9830  0F96  00FA               	movwf	??_fputc+4
  9831  0F97  0877               	movf	??_fputc+1,w
  9832  0F98  3A80               	xorlw	128
  9833  0F99  027A               	subwf	??_fputc+4,w
  9834  0F9A  1D03               	skipz
  9835  0F9B  2F9E               	goto	u1235
  9836  0F9C  0876               	movf	??_fputc,w
  9837  0F9D  0278               	subwf	??_fputc+2,w
  9838  0F9E                     u1235:
  9839  0F9E  1803               	skipnc
  9840  0F9F  0008               	return
  9841  0FA0                     l2036:
  9842  0FA0  0875               	movf	fputc@fp,w
  9843  0FA1  0086               	movwf	6
  9844  0FA2  0187               	clrf	7
  9845  0FA3  0A75               	incf	fputc@fp,w
  9846  0FA4  0084               	movwf	4
  9847  0FA5  0185               	clrf	5
  9848  0FA6  0800               	movf	0,w
  9849  0FA7  0701               	addwf	1,w
  9850  0FA8  00F6               	movwf	??_fputc
  9851  0FA9  0086               	movwf	6
  9852  0FAA  3001               	movlw	1	; select bank2/3
  9853  0FAB  0087               	movwf	7
  9854  0FAC  0873               	movf	fputc@c,w
  9855  0FAD  0081               	movwf	1
  9856  0FAE  0A75               	incf	fputc@fp,w
  9857  0FAF  0086               	movwf	6
  9858  0FB0  3001               	movlw	1
  9859  0FB1  0187               	clrf	7
  9860  0FB2  0781               	addwf	1,f
  9861  0FB3  3141               	addfsr 1,1
  9862  0FB4  1803               	skipnc
  9863  0FB5  0A81               	incf	1,f
  9864  0FB6  0008               	return
  9865  0FB7                     __end_of_fputc:
  9866  0FB7                     __ptext18:	
  9867 ;; *************** function _putch *****************
  9868 ;; Defined at:
  9869 ;;		line 65 in file "uart.c"
  9870 ;; Parameters:    Size  Location     Type
  9871 ;;  dato            1    wreg     unsigned char 
  9872 ;; Auto vars:     Size  Location     Type
  9873 ;;  dato            1    2[COMMON] unsigned char 
  9874 ;; Return value:  Size  Location     Type
  9875 ;;                  1    wreg      void 
  9876 ;; Registers used:
  9877 ;;		wreg, status,2, status,0, pclath, cstack
  9878 ;; Tracked objects:
  9879 ;;		On entry : 1F/0
  9880 ;;		On exit  : 1F/2
  9881 ;;		Unchanged: 0/0
  9882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9884 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9886 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9887 ;;Total ram usage:        1 bytes
  9888 ;; Hardware stack levels used: 1
  9889 ;; Hardware stack levels required when called: 2
  9890 ;; This function calls:
  9891 ;;		_uart_tx
  9892 ;; This function is called by:
  9893 ;;		_fputc
  9894 ;; This function uses a non-reentrant model
  9895 ;;
  9896                           
  9897                           
  9898                           ;psect for function _putch
  9899  0FB7                     _putch:
  9900                           
  9901                           ;incstack = 0
  9902                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  9903                           ;putch@dato stored from wreg
  9904  0FB7  00F2               	movwf	putch@dato
  9905                           
  9906                           ;uart.c: 67:     uart_tx( dato);
  9907  0FB8  2FB9               	ljmp	_uart_tx
  9908  0FB9                     __end_of_putch:
  9909  0FB9                     __ptext19:	
  9910 ;; *************** function _uart_tx *****************
  9911 ;; Defined at:
  9912 ;;		line 32 in file "uart.c"
  9913 ;; Parameters:    Size  Location     Type
  9914 ;;  dato            1    wreg     unsigned char 
  9915 ;; Auto vars:     Size  Location     Type
  9916 ;;  dato            1    1[COMMON] unsigned char 
  9917 ;; Return value:  Size  Location     Type
  9918 ;;                  1    wreg      void 
  9919 ;; Registers used:
  9920 ;;		wreg, status,2, status,0
  9921 ;; Tracked objects:
  9922 ;;		On entry : 1F/0
  9923 ;;		On exit  : 1F/2
  9924 ;;		Unchanged: 0/0
  9925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9927 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9928 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9929 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9930 ;;Total ram usage:        2 bytes
  9931 ;; Hardware stack levels used: 1
  9932 ;; Hardware stack levels required when called: 1
  9933 ;; This function calls:
  9934 ;;		Nothing
  9935 ;; This function is called by:
  9936 ;;		_putch
  9937 ;; This function uses a non-reentrant model
  9938 ;;
  9939                           
  9940                           
  9941                           ;psect for function _uart_tx
  9942  0FB9                     _uart_tx:
  9943                           
  9944                           ;incstack = 0
  9945                           ; Regs used in _uart_tx: [wreg+status,2+status,0]
  9946                           ;uart_tx@dato stored from wreg
  9947  0FB9  00F1               	movwf	uart_tx@dato
  9948  0FBA                     l2020:	
  9949                           ;uart.c: 34:     while( ( (PIR3>>4) & 0x01) == 0){}
  9950                           
  9951  0FBA  002E               	movlb	14	; select bank14
  9952  0FBB  080F               	movf	15,w	;volatile
  9953  0FBC  00F0               	movwf	??_uart_tx
  9954  0FBD  3004               	movlw	4
  9955  0FBE                     u1185:
  9956  0FBE  36F0               	lsrf	??_uart_tx,f
  9957  0FBF  0B89               	decfsz	9,f
  9958  0FC0  2FBE               	goto	u1185
  9959  0FC1  1C70               	btfss	??_uart_tx,0
  9960  0FC2  2FBA               	goto	l2020
  9961                           
  9962                           ;uart.c: 36:         TXREG = dato;
  9963  0FC3  0871               	movf	uart_tx@dato,w
  9964  0FC4  0022               	movlb	2	; select bank2
  9965  0FC5  009A               	movwf	26	;volatile
  9966  0FC6  0008               	return
  9967  0FC7                     __end_of_uart_tx:
  9968  0FC7                     __ptext11:	
  9969 ;; *************** function _strlen *****************
  9970 ;; Defined at:
  9971 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  9972 ;; Parameters:    Size  Location     Type
  9973 ;;  s               1    wreg     PTR const unsigned char 
  9974 ;;		 -> dbuf(32), 
  9975 ;; Auto vars:     Size  Location     Type
  9976 ;;  s               1    3[COMMON] PTR const unsigned char 
  9977 ;;		 -> dbuf(32), 
  9978 ;;  a               1    2[COMMON] PTR const unsigned char 
  9979 ;;		 -> dbuf(32), 
  9980 ;; Return value:  Size  Location     Type
  9981 ;;                  2    0[COMMON] unsigned int 
  9982 ;; Registers used:
  9983 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9984 ;; Tracked objects:
  9985 ;;		On entry : 1F/0
  9986 ;;		On exit  : 1F/0
  9987 ;;		Unchanged: 1F/0
  9988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9989 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9990 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9992 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9993 ;;Total ram usage:        4 bytes
  9994 ;; Hardware stack levels used: 1
  9995 ;; Hardware stack levels required when called: 1
  9996 ;; This function calls:
  9997 ;;		Nothing
  9998 ;; This function is called by:
  9999 ;;		_pad
 10000 ;; This function uses a non-reentrant model
 10001 ;;
 10002                           
 10003                           
 10004                           ;psect for function _strlen
 10005  0FC7                     _strlen:
 10006                           
 10007                           ;incstack = 0
 10008                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 10009                           ;strlen@s stored from wreg
 10010  0FC7  00F3               	movwf	strlen@s
 10011  0FC8  00F2               	movwf	strlen@a
 10012  0FC9                     l2066:
 10013  0FC9  0873               	movf	strlen@s,w
 10014  0FCA  0086               	movwf	6
 10015  0FCB  0187               	clrf	7
 10016  0FCC  0801               	movf	1,w
 10017  0FCD  1903               	btfsc	3,2
 10018  0FCE  2FD1               	goto	l2068
 10019  0FCF  0AF3               	incf	strlen@s,f
 10020  0FD0  2FC9               	goto	l2066
 10021  0FD1                     l2068:
 10022  0FD1  0872               	movf	strlen@a,w
 10023  0FD2  0273               	subwf	strlen@s,w
 10024  0FD3  00F0               	movwf	?_strlen
 10025  0FD4  01F1               	clrf	?_strlen+1
 10026  0FD5  1BF0               	btfsc	?_strlen,7
 10027  0FD6  03F1               	decf	?_strlen+1,f
 10028  0FD7  0008               	return
 10029  0FD8                     __end_of_strlen:
 10030  0FD8                     PL2:
 10031  0FD8  084C               	movf	vfpfcnvrt@fmt,w
 10032  0FD9  0086               	movwf	6
 10033  0FDA  0187               	clrf	7
 10034  0FDB  3F40               	moviw [0]fsr1
 10035  0FDC  00CE               	movwf	??_vfpfcnvrt
 10036  0FDD  3F41               	moviw [1]fsr1
 10037  0FDE  00CF               	movwf	??_vfpfcnvrt+1
 10038  0FDF  084E               	movf	??_vfpfcnvrt,w
 10039  0FE0  0084               	movwf	4
 10040  0FE1  084F               	movf	??_vfpfcnvrt+1,w
 10041  0FE2  0085               	movwf	5
 10042  0FE3  0012               	moviw fsr0++
 10043  0FE4  0008               	return
 10044  0FE5                     __end_ofPL2:
 10045  0FE5                     PL4:
 10046  0FE5  084C               	movf	vfpfcnvrt@fmt,w
 10047  0FE6  0086               	movwf	6
 10048  0FE7  3001               	movlw	1
 10049  0FE8  0187               	clrf	7
 10050  0FE9  0781               	addwf	1,f
 10051  0FEA  3141               	addfsr 1,1
 10052  0FEB  0008               	return
 10053  0FEC                     __end_ofPL4:
 10054  0FEC                     PL8:
 10055  0FEC  084D               	movf	vfpfcnvrt@ap,w
 10056  0FED  0086               	movwf	6
 10057  0FEE  0187               	clrf	7
 10058  0FEF  0801               	movf	1,w
 10059  0FF0  0084               	movwf	4
 10060  0FF1  3002               	movlw	2
 10061  0FF2  0185               	clrf	5
 10062  0FF3  0781               	addwf	1,f
 10063  0FF4  0008               	return
 10064  0FF5                     __end_ofPL8:
 10065  0FF5                     PL10:
 10066  0FF5  087B               	movf	ctoa@c,w
 10067  0FF6  00F3               	movwf	fputc@c
 10068  0FF7  01F4               	clrf	fputc@c+1
 10069  0FF8  0824               	movf	ctoa@fp,w
 10070  0FF9  00F5               	movwf	fputc@fp
 10071  0FFA  0008               	return
 10072  0FFB                     __end_ofPL10:
 10073  0FFB                     PL14:
 10074  0FFB  00F3               	movwf	fputc@c
 10075  0FFC  01F4               	clrf	fputc@c+1
 10076  0FFD  085B               	movf	vfpfcnvrt@fp,w
 10077  0FFE  00F5               	movwf	fputc@fp
 10078  0FFF  0008               	return
 10079  1000                     __end_ofPL14:
 10080                           
 10081                           	psect	intentry
 10082  0004                     __pintentry:	
 10083 ;; *************** function _INTERRUPT_InterruptManager *****************
 10084 ;; Defined at:
 10085 ;;		line 16 in file "interrupt.c"
 10086 ;; Parameters:    Size  Location     Type
 10087 ;;		None
 10088 ;; Auto vars:     Size  Location     Type
 10089 ;;		None
 10090 ;; Return value:  Size  Location     Type
 10091 ;;                  1    wreg      void 
 10092 ;; Registers used:
 10093 ;;		status,2, status,0
 10094 ;; Tracked objects:
 10095 ;;		On entry : 0/0
 10096 ;;		On exit  : 11/0
 10097 ;;		Unchanged: 0/0
 10098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10103 ;;Total ram usage:        0 bytes
 10104 ;; Hardware stack levels used: 1
 10105 ;; This function calls:
 10106 ;;		Nothing
 10107 ;; This function is called by:
 10108 ;;		Interrupt level 1
 10109 ;; This function uses a non-reentrant model
 10110 ;;
 10111                           
 10112  0004                     _INTERRUPT_InterruptManager:
 10113                           
 10114                           ;incstack = 0
 10115  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 10116                           
 10117                           ; Regs used in _INTERRUPT_InterruptManager: [status]
 10118  0005  3180               	pagesel	$
 10119                           
 10120                           ;interrupt.c: 18:     if (PIR0bits.INTF == 1){
 10121  0006  002E               	movlb	14	; select bank14
 10122  0007  1C0C               	btfss	12,0	;volatile
 10123  0008  280C               	goto	i1l459
 10124                           
 10125                           ;interrupt.c: 19:         PIR0bits.INTF = 0;
 10126  0009  100C               	bcf	12,0	;volatile
 10127                           
 10128                           ;interrupt.c: 20:         counts++;
 10129  000A  0020               	movlb	0	; select bank0
 10130  000B  0AEE               	incf	_counts,f
 10131  000C                     i1l459:	
 10132                           ;interrupt.c: 24:     }else{
 10133                           
 10134  000C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 10135  000D  0009               	retfie
 10136  000E                     __end_of_INTERRUPT_InterruptManager:
 10137  007E                     btemp	set	126	;btemp
 10138  007E                     int$flags	set	126
 10139  007E                     wtemp0	set	126
 10140                           
 10141                           	psect	idloc
 10142                           
 10143                           ;Config register IDLOC0 @ 0x8000
 10144                           ;	unspecified, using default values
 10145  8000                     	org	32768
 10146  8000  3FFF               	dw	16383
 10147                           
 10148                           ;Config register IDLOC1 @ 0x8001
 10149                           ;	unspecified, using default values
 10150  8001                     	org	32769
 10151  8001  3FFF               	dw	16383
 10152                           
 10153                           ;Config register IDLOC2 @ 0x8002
 10154                           ;	unspecified, using default values
 10155  8002                     	org	32770
 10156  8002  3FFF               	dw	16383
 10157                           
 10158                           ;Config register IDLOC3 @ 0x8003
 10159                           ;	unspecified, using default values
 10160  8003                     	org	32771
 10161  8003  3FFF               	dw	16383
 10162                           
 10163                           	psect	config
 10164                           
 10165                           ;Config register CONFIG1 @ 0x8007
 10166                           ;	External Oscillator mode selection bits
 10167                           ;	FEXTOSC = OFF, Oscillator not enabled
 10168                           ;	Power-up default value for COSC bits
 10169                           ;	RSTOSC = HFINT32, HFINTOSC with OSCFRQ= 32 MHz and CDIV = 1:1
 10170                           ;	Clock Out Enable bit
 10171                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 10172                           ;	Clock Switch Enable bit
 10173                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 10174                           ;	Fail-Safe Clock Monitor Enable bit
 10175                           ;	FCMEN = ON, FSCM timer enabled
 10176  8007                     	org	32775
 10177  8007  3F8C               	dw	16268
 10178                           
 10179                           ;Config register CONFIG2 @ 0x8008
 10180                           ;	Master Clear Enable bit
 10181                           ;	MCLRE = ON, MCLR pin is Master Clear function
 10182                           ;	Power-up Timer Enable bit
 10183                           ;	PWRTE = OFF, PWRT disabled
 10184                           ;	Low-Power BOR enable bit
 10185                           ;	LPBOREN = OFF, ULPBOR disabled
 10186                           ;	Brown-out reset enable bits
 10187                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 10188                           ;	Brown-out Reset Voltage Selection
 10189                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 10190                           ;	Zero-cross detect disable
 10191                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 10192                           ;	Peripheral Pin Select one-way control
 10193                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 10194                           ;	Stack Overflow/Underflow Reset Enable bit
 10195                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 10196                           ;	Background Debugger
 10197                           ;	DEBUG = 0x1, unprogrammed default
 10198  8008                     	org	32776
 10199  8008  3FFF               	dw	16383
 10200                           
 10201                           ;Config register CONFIG3 @ 0x8009
 10202                           ;	WDT Period Select bits
 10203                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 10204                           ;	WDT operating mode
 10205                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 10206                           ;	WDT Window Select bits
 10207                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 10208                           ;	WDT input clock selector
 10209                           ;	WDTCCS = SC, Software Control
 10210  8009                     	org	32777
 10211  8009  3F9F               	dw	16287
 10212                           
 10213                           ;Config register CONFIG4 @ 0x800A
 10214                           ;	UserNVM self-write protection bits
 10215                           ;	WRT = OFF, Write protection off
 10216                           ;	Scanner Enable bit
 10217                           ;	SCANE = available, Scanner module is available for use
 10218                           ;	Low Voltage Programming Enable bit
 10219                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 10220  800A                     	org	32778
 10221  800A  3FFF               	dw	16383
 10222                           
 10223                           ;Config register CONFIG5 @ 0x800B
 10224                           ;	UserNVM Program memory code protection bit
 10225                           ;	CP = OFF, Program Memory code protection disabled
 10226                           ;	DataNVM code protection bit
 10227                           ;	CPD = OFF, Data EEPROM code protection disabled
 10228  800B                     	org	32779
 10229  800B  3FFF               	dw	16383

Data Sizes:
    Strings     54
    Constant    4
    Data        0
    BSS         96
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     76      80
    BANK1            80      7      49
    BANK2            80      0      50
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_6(CODE[22]), STR_3(CODE[4]), STR_2(CODE[9]), buffer(BANK2[50]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 50
		 -> buffer(BANK2[50]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_6(CODE[22]), STR_5(CODE[8]), STR_4(CODE[7]), STR_3(CODE[4]), 
		 -> STR_2(CODE[9]), STR_1(CODE[15]), buffer(BANK2[50]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 50
		 -> STR_6(CODE[22]), STR_5(CODE[8]), STR_4(CODE[7]), STR_3(CODE[4]), 
		 -> STR_2(CODE[9]), STR_1(CODE[15]), buffer(BANK2[50]), 

    vfpfcnvrt@vp	PTR void  size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    ctoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_5(CODE[8]), STR_4(CODE[7]), STR_1(CODE[15]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 50
		 -> buffer(BANK2[50]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    S939_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 50
		 -> buffer(BANK2[50]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 50
		 -> buffer(BANK2[50]), 

    EMC1001_read@TL	PTR unsigned char  size(1) Largest target is 1
		 -> low_byte(BANK1[1]), 

    EMC1001_read@TH	PTR char  size(1) Largest target is 1
		 -> high_byte(BANK0[1]), 

    lcd_puts@dato	PTR unsigned char  size(1) Largest target is 50
		 -> buffer(BANK2[50]), 


Critical Paths under _main in COMMON

    _main->_lcd_puts
    _serial_init->___lldiv
    _vfpfcnvrt->_ctoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _putch->_uart_tx
    _lcd_puts->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_init->_lcd_send_byte
    _lcd_send_byte->_Send_D7_D4
    _Send_D7_D4->_Write_PCF
    _Write_PCF->_I2C_write
    _EMC1001_read->___bmul

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   25216
                                             74 BANK0      2     2      0
                       _EMC1001_read
                           _I2C_init
                           _adc_init
                   _enable_interrupt
                           _lcd_init
                           _lcd_puts
                          _port_init
                             _printf
                        _serial_init
                            _sprintf
                        _teclado_get
                       _teclado_init
 ---------------------------------------------------------------------------------
 (1) _teclado_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _teclado_get                                          2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    9871
                                             67 BANK0      7     1      6
                                              0 BANK1      7     7      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _serial_init                                         10     6      4     459
                                              0 BANK0     10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (1) _printf                                               7     3      4    9703
                                             67 BANK0      5     1      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             7     4      3    9341
                                             60 BANK0      7     4      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           37    35      2    8839
                                             44 BANK0     16    14      2
                               _ctoa
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                28    20      8    5143
                                             16 BANK0     28    20      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3537
                                             13 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     123
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                6     5      1    1649
                                             11 COMMON     2     1      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     6      2    1646
                                             11 COMMON     3     1      2
                                              0 BANK0      5     5      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3    1334
                                              3 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      44
                                              2 COMMON     1     1      0
                            _uart_tx
 ---------------------------------------------------------------------------------
 (6) _uart_tx                                              2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _port_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             3     3      0    2861
                                             12 COMMON     2     2      0
                                              0 BANK0      1     1      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoxy                                           5     4      1    1486
                                              7 COMMON     5     4      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0    1913
                                              7 COMMON     3     3      0
                          _I2C_start
                           _I2C_stop
                          _I2C_write
                         _Send_D7_D4
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_send_byte                                        2     1      1    1242
                                              5 COMMON     2     1      1
                         _Send_D7_D4
 ---------------------------------------------------------------------------------
 (3) _Send_D7_D4                                           3     2      1     535
                                              2 COMMON     3     2      1
                          _Write_PCF
 ---------------------------------------------------------------------------------
 (4) _Write_PCF                                            1     1      0      44
                                              1 COMMON     1     1      0
                          _I2C_start
                           _I2C_stop
                          _I2C_write
 ---------------------------------------------------------------------------------
 (1) _enable_interrupt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EMC1001_read                                         2     1      1     409
                                              3 COMMON     2     1      1
                            _I2C_ack
                           _I2C_read
                        _I2C_restart
                          _I2C_start
                           _I2C_stop
                          _I2C_write
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     168
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (5) _I2C_write                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_restart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EMC1001_read
     _I2C_ack
     _I2C_read
     _I2C_restart
     _I2C_start
     _I2C_stop
     _I2C_write
     ___bmul
   _I2C_init
   _adc_init
   _enable_interrupt
   _lcd_init
     _I2C_start
     _I2C_stop
     _I2C_write
     _Send_D7_D4
       _Write_PCF
         _I2C_start
         _I2C_stop
         _I2C_write
     _lcd_send_byte
       _Send_D7_D4
   _lcd_puts
     _lcd_gotoxy
       _lcd_send_byte
     _lcd_send_byte
   _port_init
   _printf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _fputc
             _putch
               _uart_tx
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
             _fputs
               _fputc
             _strlen
         _fputc
   _serial_init
     ___lldiv
   _sprintf
     _vfprintf
   _teclado_get
   _teclado_init

 _INTERRUPT_InterruptManager (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      7      31       7       61.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      32       9       62.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      C1      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      C1      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jul 19 21:57:45 2022

                     ___bmul@product 0071                    Send_D7_D4@address 0073  
                                 PL2 0FD8                                   PL4 0FE5  
                                 PL6 0633                                   PL8 0FEC  
                   Send_D7_D4@nibble 0072                       ?_lcd_send_byte 0075  
                 __size_of_I2C_start 0005                   __size_of_I2C_write 000C  
                                PL10 0FF5                                  PL12 0334  
                                PL14 0FFB                                  l210 018C  
                                l222 0191                                  l216 0187  
                                l400 06D6                                  l234 0178  
                                l411 0714                                  l403 06F0  
                                l228 0180                                  l420 073D  
                                l412 0710                                  l404 06EC  
                                l246 016D                                  l271 019A  
                                l423 0753                                  l415 0726  
                                l407 0702                                  l272 019B  
                                l432 0773                                  l424 074F  
                                l416 0722                                  l408 06FE  
                                l273 019F                                  l274 01A0  
                                l370 0658                                  l275 01A4  
                                l427 0765                                  l419 0741  
                                l371 0654                                  l276 01A5  
                                l428 0761                                  l380 0678  
                                l277 01A9                                  l279 01B2  
                                l711 0543                                  l391 06B6  
                                l383 068E                                  l375 066A  
                                l392 06B2                                  l384 068A  
                                l376 0666                                  l395 06C8  
                                l387 06A4                                  l379 067C  
                                l724 060A                                  l396 06C4  
                                l388 06A0                                  l399 06DA  
                                _abs 061C                                  _pad 0E2C  
                    __end_of_I2C_ack 017C                __size_of_EMC1001_read 0046  
                                wreg 0009                          lcd_gotoxy@x 007A  
                        lcd_gotoxy@y 0077                                 l1101 0E3D  
                               l1120 0F6A                                 l1104 0E58  
                               l1130 0399                                 ?_abs 0073  
                               l2020 0FBA                                 l2100 04E0  
                               l1117 0F4F                                 l1125 0379  
                               l2032 0F7F                                 l2112 0523  
                               l2202 0F3B                                 l2122 0578  
                               l2044 018F                                 l2036 0FA0  
                               l2204 0F44                                 l2108 0519  
                               l2060 0E6E                   serial_init@baudios 0020  
                               l2222 0F70                                 l2134 05B6  
                               l2142 05F0                                 l2126 059E  
                               l2150 0E34                                 l2208 0F4A  
                               l2160 0E3F                                 l2240 0391  
                               l2320 0EE5                                 l2312 0EB7  
                               l2218 0F51                                 l2090 04BE  
                               l2138 05E6                                 l2066 0FC9  
                               l2154 0E3B                                 l2084 0496  
                               l2068 0FD1                                 l2164 0E60  
                               l2252 03D6                                 l2236 037E  
                               l2332 0F00                                 l2308 0EAD  
                               l2262 0438                                 l2246 03A7  
                               l2342 0F12                                 l2192 01B3  
                               l2520 00EF                                 l2088 04BC  
                               l2280 0455                                 l2264 03B1  
                               l2272 0444                                 l2248 03AB  
                               l2328 0EFC                                 l2440 0314  
                               l2424 02C8                                 l2416 02AB  
                               l2186 01AA                                 l2370 0210  
                               l2338 0F0D                                 l2372 0212  
                               l2380 0217                                 l2284 045E  
                               l2276 044B                                 l2348 0F17  
                               l2428 02CE                                 l2374 0214  
                               l2382 022D                                 l2438 02FC  
                               l2536 0106                                 l2368 020E  
                               l2560 01C0                                 l2394 032A  
                               l2570 01E0                                 l2820 01F6  
                               l2822 021F                                 l2568 01D8  
                               l2576 01E6                                 l2736 0028  
                               l2578 01E8                                 l2754 006D  
                               l2748 0059                                 ?_pad 0024  
                               STR_1 101A                                 STR_2 1029  
                               STR_3 1036                                 STR_5 1032  
                               STR_6 1004                                 u1330 04C5  
                               u1235 0F9E                                 _LATA 0016  
                               _LATB 0017                                 u1185 0FBE  
                               u1365 0506                                 u1525 0E49  
                               u2407 065F                                 u1465 05D4  
                               u1545 0625                                 u1705 038A  
                               u2417 0671                                 u1650 0355  
                               u1635 0F5B                                 u2507 071B  
                               u2427 0683                                 u1660 0356  
                               u2517 072B                                 u2437 0699  
                               u2357 0054                                 _PIE0 0716  
                               u2607 0115                                 u1735 0442  
                               u2527 0736                                 u2447 06AB  
                               u2367 0075                                 u2617 01AB  
                               u2537 0748                                 u2457 06BD  
                               u2377 0085                                 u2627 01B8  
                               u1755 03C5                                 u2547 075A  
                               u2467 06CF                                 u2387 0642  
                               u2637 013A                                 u1765 03D1  
                               u2557 076C                                 u2477 06E5  
                               u2397 064D                                 u2567 01C8  
                               u2487 06F7                                 u2577 01D2  
                               u1945 02BD                                 u2497 0709  
                               u2587 00E8                                 u2597 00F7  
                               u1975 027D                                 _PIR3 070F  
                               _WPUB 0F44                                 abs@a 0073  
                               _dbuf 00A9                                 _ctoa 0F2D  
                               _main 0028                                 _dtoa 033A  
                               _prec 00A4                                 _nout 00A0  
                               pad@i 0027                                 pad@p 0025  
                               fsr0h 0005                                 fsr1h 0007  
                               indf0 0000                                 fsr0l 0004  
                               indf1 0001                                 fsr1l 0006  
                               pad@w 0029                                 btemp 007E  
                   __end_of_I2C_init 00B0                     __end_of_I2C_read 0186  
                               start 000E                     __end_of_I2C_stop 0194  
                  ___bmul@multiplier 0072                 __size_of_I2C_restart 0004  
                              ??_abs 0075                                ??_pad 007D  
          __size_of_enable_interrupt 0009                         _EMC1001_read 0121  
                    __end_of___aodiv 0555                                _ADCAP 009B  
                              ?_ctoa 007B                                ?_main 0070  
                              ?_dtoa 0030                                _ADCLK 0098  
                    __end_of___aomod 061C                                _ADPCH 009E  
                              _ADREF 009A                      __end_of___lldiv 02D7  
                              i1l459 000C                         vfpfcnvrt@fmt 004C  
                              _PORTA 000C                                _PORTB 000D  
                              _TRISA 0011                                _TRISB 0012  
                              _TRISC 0013                                _RXPPS 0ECB  
                              _TXREG 011A                                _flags 006C  
                              _fputc 0F78                                _fputs 0E6B  
                              _tecla 00A6                                pad@fp 002B  
                              _width 00A2                                ctoa@c 007B  
                              _putch 0FB7                                ctoa@l 0020  
                              ctoa@w 0022                                dtoa@d 0030  
                              dtoa@i 004A                         lcd_puts@dato 0020  
                              dtoa@n 0042                                dtoa@p 003C  
                              dtoa@s 0040                                dtoa@w 003E  
                    __end_of_uart_tx 0FC7                                status 0003  
                  __end_of_I2C_start 018F                                wtemp0 007E  
                    __end_of_sprintf 02F4                    __end_of_I2C_write 0173  
                    __initialization 0010                    I2C_write@I2C_data 0070  
                       __end_of_ctoa 0F78                         __end_of_main 008C  
                       __end_of_dtoa 046D                      ??_lcd_send_byte 0076  
        ?_INTERRUPT_InterruptManager 0070                            ??_I2C_ack 0070  
                             ??_ctoa 007D                               ??_main 006A  
                             ??_dtoa 0038                         ?_teclado_get 0070  
                     EMC1001_read@TH 0074                       EMC1001_read@TL 0073  
                         _Send_D7_D4 0194                               _ADCON0 0093  
                             _ADCON1 0094                               _ADCON2 0095  
                             ?_fputc 0073                               ?_fputs 007B  
                             _ANSELA 0F38                               ?_putch 0070  
                             _ANSELB 0F43                               _ANSELC 0F4E  
                             _RC0PPS 0F20                     __end_of_adc_init 00C5  
                             _RC1STA 011D                               _RC3PPS 0F23  
                             _RC4PPS 0F24                               _INTCON 000B  
                             _INTPPS 0E90                               u130lld 0494  
                             u141lld 0576                               _TX1STA 011E  
                       ?_serial_init 0020                         vfprintf@cfmt 0061  
                   __end_of_lcd_init 0121                               _g_LcdY 00A7  
                             ___bmul 0328                     __end_of_lcd_puts 01FF  
                          ??___aodiv 0070                            ??___aomod 0070  
                          ??___lldiv 0078                               _buffer 0120  
                             _counts 006E                               _printf 008C  
                             pad@buf 0024                               ctoa@fp 0024  
                             dtoa@fp 003B                               _strlen 0FC7  
                             fputc@c 0073                               fputs@c 0020  
                             fputs@i 0021                               fputs@s 0023  
                          ?_I2C_init 0070                            ?_I2C_read 0070  
                          ?_I2C_stop 0070                            ??_uart_tx 0070  
                   __end_of_vfprintf 031D                            ??_sprintf 0069  
            __end_of__initialization 0025                   __size_of_Write_PCF 000B  
                ___bmul@multiplicand 0070                       __pcstackCOMMON 0070  
                      __end_of_fputc 0FB7                     _enable_interrupt 00C5  
                      __end_of_fputs 0E83                        __end_of_putch 0FB9  
                         __end_ofPL2 0FE5                           __end_ofPL4 0FEC  
                         __end_ofPL6 063C                           __end_ofPL8 0FF5  
                        ?_Send_D7_D4 0072                           ??_I2C_init 0070  
                         ??_I2C_read 0070                           ??_I2C_stop 0070  
                  lcd_gotoxy@address 007B                              ??_fputc 0076  
                            ??_fputs 007C                              ??_putch 0072  
                         __pbssBANK0 006C                           __pbssBANK1 00A0  
                         __pbssBANK2 0120                       _countsAnterior 00A8  
                      ?_teclado_init 0070                           __pmaintext 0028  
                     lcd_send_byte@n 0075                              ?___bmul 0070  
                         __pintentry 0004                              _I2C_ack 0173  
                            ?_printf 0063                            ?_adc_init 0070  
                            ?_strlen 0070                    __end_of_Write_PCF 00D9  
                            _SP1BRGH 011C                              _SP1BRGL 011B  
                 __size_of_vfpfcnvrt 00AA                   __size_of_port_init 0021  
                         _lcd_gotoxy 020C                 __size_of_teclado_get 013B  
                            _SSP1ADD 018D                              _SSP1BUF 018C  
                          ?_lcd_init 0070                            ?_lcd_puts 0070  
                     ??_teclado_init 0070                        ??_I2C_restart 0070  
                          _I2C_start 018A                            _I2C_write 0167  
                __size_of_Send_D7_D4 002A                      __size_of___bmul 000C  
                            ___aodiv 046D                              ___aomod 0555  
                            ___lldiv 0298                            ?_vfprintf 005C  
               __size_of_serial_init 003D                           ??_adc_init 0070  
                            __ptext1 031D                              __ptext2 063C  
                            __ptext3 02D7                              __ptext4 025B  
                            __ptext5 0298                              __ptext6 008C  
                            __ptext7 02F4                              __ptext8 0E83  
                            __ptext9 033A                      __size_of_printf 000A  
                    __size_of_strlen 0011                         __size_of_abs 0017  
                       __size_of_pad 003F                              _uart_tx 0FB9  
                            _sprintf 02D7                              clrloop0 0778  
                         ??_lcd_init 0077                           ??_lcd_puts 007C  
               end_of_initialization 0025                 lcd_send_byte@address 0076  
                            fputc@fp 0075                              fputs@fp 007B  
                    ___lldiv@divisor 0070                      ___lldiv@counter 007C  
                         ?_I2C_start 0070                           ?_I2C_write 0070  
                  __end_of_vfpfcnvrt 0F2D                    __end_of_port_init 025B  
                __end_of_I2C_restart 018A                           ??_vfprintf 005F  
              __end_of_lcd_send_byte 020C                              strlen@a 0072  
                            strlen@s 0073                            _PORTBbits 000D  
                        uart_tx@dato 0071                            _TRISCbits 0013  
                        ?_lcd_gotoxy 0077                      Send_D7_D4@datos 0074  
                  __size_of_I2C_init 001A                    __size_of_I2C_read 000A  
                    _LCD_INIT_STRING 1000                    __size_of_I2C_stop 0005  
           __end_of_enable_interrupt 00CE                       __end_of___bmul 0334  
                        vfpfcnvrt@ap 004D                          vfpfcnvrt@fp 005B  
                        vfpfcnvrt@ll 0051                          vfpfcnvrt@vp 005A  
               __end_of_teclado_init 0328                       __end_of_printf 0096  
                     __end_of_strlen 0FD8                         ??_Send_D7_D4 0073  
                        __end_ofPL10 0FFB                          __end_ofPL12 033A  
                        __end_ofPL14 1000                  start_initialization 0010  
                        __end_of_abs 0633                          __end_of_pad 0E6B  
                        _I2C_restart 0186                        Write_PCF@dato 0071  
                        ??_I2C_start 0070                          ??_I2C_write 0070  
                        vfprintf@fmt 005C                             ??___bmul 0071  
                 __end_of_Send_D7_D4 01BE                  __size_of_lcd_gotoxy 002E  
                      ?_EMC1001_read 0073                             ?_I2C_ack 0070  
                           ??_printf 007E                             ??_strlen 0072  
            __end_of_LCD_INIT_STRING 1004                    __size_of_adc_init 0015  
                          ___latbits 0002                        __pcstackBANK0 0020  
                      __pcstackBANK1 00CA                     ___aodiv@dividend 0028  
                          _Write_PCF 00CE                    __size_of_lcd_init 0048  
                  __size_of_lcd_puts 0041                            _dtoa$1017 0039  
                           ?___aodiv 0020                       ??_EMC1001_read 0074  
                           ?___aomod 0020                     ___aodiv@quotient 0073  
                           ?___lldiv 0070                            _high_byte 006F  
       ??_INTERRUPT_InterruptManager 0070                    __size_of_vfprintf 0029  
                           _BAUD1CON 011F                        ??_teclado_get 0070  
                           _I2C_init 0096                             _I2C_read 017C  
                           _I2C_stop 018F                           ?_Write_PCF 0070  
                           ?_uart_tx 0070                             ?_sprintf 0063  
                     __size_of_fputc 003F                       __size_of_fputs 0018  
                     __size_of_putch 0002                             _LATAbits 0016  
                          clear_ram0 0777  __size_of_INTERRUPT_InterruptManager 000A  
                           _PIR0bits 070C                        ??_serial_init 0024  
                           _PIR3bits 070F                __size_of_teclado_init 000B  
                           _SSP1CON1 0190                             _SSP1CON3 0192  
                           _SSP1STAT 018F                            _vfpfcnvrt 0E83  
                          _port_init 023A                        serial_init@sx 0028  
                   __size_of_I2C_ack 0009                            lcd_init@i 0079  
                       ??_lcd_gotoxy 0078                           vfpfcnvrt@c 0059  
                __end_of_teclado_get 0777                    ?_enable_interrupt 0070  
                       _teclado_init 031D                   ??_enable_interrupt 0070  
                         vfprintf@ap 005E                           vfprintf@fp 0060  
                 __end_of_lcd_gotoxy 023A                     __size_of___aodiv 00E8  
                   __size_of___aomod 00C7                     __size_of___lldiv 003F  
                         ?_vfpfcnvrt 004C                           ?_port_init 0070  
                __end_of_serial_init 0298                      ___aodiv@divisor 0020  
                           _adc_init 00B0                      ___aodiv@counter 0071  
                         _ANSELCbits 0F4E                           sprintf@fmt 0063  
                        ??_Write_PCF 0071                             __ptext10 0E2C  
                           __ptext11 0FC7                             __ptext20 023A  
                           __ptext12 0E6B                             __ptext21 01BE  
                           __ptext13 061C                             __ptext30 0121  
                           __ptext22 020C                             __ptext14 0555  
                           __ptext31 0328                             __ptext23 00D9  
                           __ptext15 046D                             __ptext32 0167  
                           __ptext24 01FF                             __ptext16 0F2D  
                           __ptext33 018F                             __ptext25 0194  
                           __ptext17 0F78                             __ptext34 018A  
                           __ptext26 00CE                             __ptext18 0FB7  
                           __ptext35 0186                             __ptext27 00C5  
                           __ptext19 0FB9                             __ptext36 017C  
                           __ptext28 00B0                             __ptext37 0173  
                           __ptext29 0096                         _SSP1CON2bits 0191  
                   __size_of_uart_tx 000E                             _lcd_init 00D9  
               __end_of_EMC1001_read 0167                             _lcd_puts 01BE  
                   __size_of_sprintf 001D               __size_of_lcd_send_byte 000D  
                      __size_of_ctoa 004B                        __size_of_main 0064  
                      __size_of_dtoa 0133                         ?_I2C_restart 0070  
                           _low_byte 00C9                             int$flags 007E  
                           _vfprintf 02F4   __end_of_INTERRUPT_InterruptManager 000E  
         _INTERRUPT_InterruptManager 0004                            printf@fmt 0063  
                   ___aomod@dividend 0028                            putch@dato 0072  
                        _teclado_get 063C                             intlevel1 0000  
                          sprintf@ap 00CA                     ___lldiv@dividend 0074  
                        _serial_init 025B                             printf@ap 0067  
                    ___aomod@divisor 0020                          ??_vfpfcnvrt 004E  
                    ___aomod@counter 0071                          ??_port_init 0070  
                      _lcd_send_byte 01FF                        __pstringtext1 1000  
                      __pstringtext2 101A                        __pstringtext3 1029  
                      __pstringtext4 1032                        __pstringtext5 0000  
                           sprintf@f 00CC                             sprintf@s 00CB  
                         _SSP1DATPPS 0EC6                           _SSP1CLKPPS 0EC5  
                   ___lldiv@quotient 0078                         ___aodiv@sign 0072  
                       ___aomod@sign 0072  
