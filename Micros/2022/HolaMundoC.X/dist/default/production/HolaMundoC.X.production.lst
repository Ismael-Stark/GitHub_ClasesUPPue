

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jun 21 12:20:18 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F18855
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    35                           	dabs	1,0x7E,2
    36  0000                     
    37                           ; Version 2.40
    38                           ; Generated 02/12/2021 GMT
    39                           ; 
    40                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F18855 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  0010                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  001C                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  008C                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008E                     	;# 
   105  008F                     	;# 
   106  0090                     	;# 
   107  0090                     	;# 
   108  0091                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0097                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0110                     	;# 
   127  0110                     	;# 
   128  0111                     	;# 
   129  0112                     	;# 
   130  0112                     	;# 
   131  0113                     	;# 
   132  0114                     	;# 
   133  0114                     	;# 
   134  0115                     	;# 
   135  0116                     	;# 
   136  0116                     	;# 
   137  0117                     	;# 
   138  0119                     	;# 
   139  0119                     	;# 
   140  0119                     	;# 
   141  011A                     	;# 
   142  011A                     	;# 
   143  011A                     	;# 
   144  011B                     	;# 
   145  011B                     	;# 
   146  011B                     	;# 
   147  011B                     	;# 
   148  011B                     	;# 
   149  011C                     	;# 
   150  011C                     	;# 
   151  011C                     	;# 
   152  011D                     	;# 
   153  011D                     	;# 
   154  011D                     	;# 
   155  011E                     	;# 
   156  011E                     	;# 
   157  011E                     	;# 
   158  011F                     	;# 
   159  011F                     	;# 
   160  011F                     	;# 
   161  011F                     	;# 
   162  011F                     	;# 
   163  018C                     	;# 
   164  018D                     	;# 
   165  018E                     	;# 
   166  018F                     	;# 
   167  0190                     	;# 
   168  0191                     	;# 
   169  0192                     	;# 
   170  0196                     	;# 
   171  0197                     	;# 
   172  0198                     	;# 
   173  0199                     	;# 
   174  019A                     	;# 
   175  019B                     	;# 
   176  019C                     	;# 
   177  020C                     	;# 
   178  020C                     	;# 
   179  020D                     	;# 
   180  020E                     	;# 
   181  020F                     	;# 
   182  020F                     	;# 
   183  0210                     	;# 
   184  0210                     	;# 
   185  0211                     	;# 
   186  0211                     	;# 
   187  0212                     	;# 
   188  0212                     	;# 
   189  0213                     	;# 
   190  0214                     	;# 
   191  0215                     	;# 
   192  0215                     	;# 
   193  0216                     	;# 
   194  0216                     	;# 
   195  0217                     	;# 
   196  0217                     	;# 
   197  0218                     	;# 
   198  0218                     	;# 
   199  0219                     	;# 
   200  021A                     	;# 
   201  021B                     	;# 
   202  021B                     	;# 
   203  021C                     	;# 
   204  021C                     	;# 
   205  021D                     	;# 
   206  021D                     	;# 
   207  021E                     	;# 
   208  021F                     	;# 
   209  028C                     	;# 
   210  028C                     	;# 
   211  028D                     	;# 
   212  028D                     	;# 
   213  028E                     	;# 
   214  028F                     	;# 
   215  0290                     	;# 
   216  0290                     	;# 
   217  0291                     	;# 
   218  0292                     	;# 
   219  0292                     	;# 
   220  0293                     	;# 
   221  0293                     	;# 
   222  0294                     	;# 
   223  0295                     	;# 
   224  0296                     	;# 
   225  0296                     	;# 
   226  0297                     	;# 
   227  0298                     	;# 
   228  0298                     	;# 
   229  0299                     	;# 
   230  0299                     	;# 
   231  029A                     	;# 
   232  029B                     	;# 
   233  029C                     	;# 
   234  029C                     	;# 
   235  029D                     	;# 
   236  030C                     	;# 
   237  030C                     	;# 
   238  030D                     	;# 
   239  030E                     	;# 
   240  030F                     	;# 
   241  0310                     	;# 
   242  0310                     	;# 
   243  0311                     	;# 
   244  0312                     	;# 
   245  0313                     	;# 
   246  0314                     	;# 
   247  0314                     	;# 
   248  0315                     	;# 
   249  0316                     	;# 
   250  0317                     	;# 
   251  0318                     	;# 
   252  0318                     	;# 
   253  0319                     	;# 
   254  031A                     	;# 
   255  031B                     	;# 
   256  031C                     	;# 
   257  031C                     	;# 
   258  031D                     	;# 
   259  031E                     	;# 
   260  031F                     	;# 
   261  038C                     	;# 
   262  038C                     	;# 
   263  038D                     	;# 
   264  038E                     	;# 
   265  0390                     	;# 
   266  0390                     	;# 
   267  0391                     	;# 
   268  0392                     	;# 
   269  040C                     	;# 
   270  040D                     	;# 
   271  040E                     	;# 
   272  040F                     	;# 
   273  0410                     	;# 
   274  0411                     	;# 
   275  0416                     	;# 
   276  0416                     	;# 
   277  0417                     	;# 
   278  0418                     	;# 
   279  0418                     	;# 
   280  0419                     	;# 
   281  041A                     	;# 
   282  041A                     	;# 
   283  041B                     	;# 
   284  041C                     	;# 
   285  041C                     	;# 
   286  041D                     	;# 
   287  041E                     	;# 
   288  041F                     	;# 
   289  048C                     	;# 
   290  048C                     	;# 
   291  048D                     	;# 
   292  048E                     	;# 
   293  048F                     	;# 
   294  048F                     	;# 
   295  0490                     	;# 
   296  0491                     	;# 
   297  0492                     	;# 
   298  0492                     	;# 
   299  0493                     	;# 
   300  0494                     	;# 
   301  0495                     	;# 
   302  0495                     	;# 
   303  0496                     	;# 
   304  0497                     	;# 
   305  0498                     	;# 
   306  0499                     	;# 
   307  049A                     	;# 
   308  049B                     	;# 
   309  049C                     	;# 
   310  049D                     	;# 
   311  050C                     	;# 
   312  050C                     	;# 
   313  050D                     	;# 
   314  050E                     	;# 
   315  050F                     	;# 
   316  050F                     	;# 
   317  0510                     	;# 
   318  0511                     	;# 
   319  0512                     	;# 
   320  0512                     	;# 
   321  0513                     	;# 
   322  0514                     	;# 
   323  0515                     	;# 
   324  0515                     	;# 
   325  0516                     	;# 
   326  0517                     	;# 
   327  0518                     	;# 
   328  0519                     	;# 
   329  051A                     	;# 
   330  051B                     	;# 
   331  051C                     	;# 
   332  051D                     	;# 
   333  058C                     	;# 
   334  058C                     	;# 
   335  058D                     	;# 
   336  058E                     	;# 
   337  058F                     	;# 
   338  058F                     	;# 
   339  0590                     	;# 
   340  0591                     	;# 
   341  0592                     	;# 
   342  0593                     	;# 
   343  060C                     	;# 
   344  060D                     	;# 
   345  060E                     	;# 
   346  060F                     	;# 
   347  0610                     	;# 
   348  0611                     	;# 
   349  0612                     	;# 
   350  0613                     	;# 
   351  0614                     	;# 
   352  0616                     	;# 
   353  0617                     	;# 
   354  0618                     	;# 
   355  0619                     	;# 
   356  061A                     	;# 
   357  061B                     	;# 
   358  061C                     	;# 
   359  061D                     	;# 
   360  061E                     	;# 
   361  068C                     	;# 
   362  068D                     	;# 
   363  068E                     	;# 
   364  068F                     	;# 
   365  0690                     	;# 
   366  0691                     	;# 
   367  0692                     	;# 
   368  0693                     	;# 
   369  0694                     	;# 
   370  070C                     	;# 
   371  070D                     	;# 
   372  070E                     	;# 
   373  070F                     	;# 
   374  0710                     	;# 
   375  0711                     	;# 
   376  0712                     	;# 
   377  0713                     	;# 
   378  0714                     	;# 
   379  0716                     	;# 
   380  0717                     	;# 
   381  0718                     	;# 
   382  0719                     	;# 
   383  071A                     	;# 
   384  071B                     	;# 
   385  071C                     	;# 
   386  071D                     	;# 
   387  071E                     	;# 
   388  0796                     	;# 
   389  0797                     	;# 
   390  0798                     	;# 
   391  0799                     	;# 
   392  079A                     	;# 
   393  079B                     	;# 
   394  080C                     	;# 
   395  080D                     	;# 
   396  080E                     	;# 
   397  080F                     	;# 
   398  0810                     	;# 
   399  0811                     	;# 
   400  0812                     	;# 
   401  0813                     	;# 
   402  0814                     	;# 
   403  081A                     	;# 
   404  081B                     	;# 
   405  081C                     	;# 
   406  081D                     	;# 
   407  081E                     	;# 
   408  081F                     	;# 
   409  088C                     	;# 
   410  088D                     	;# 
   411  088E                     	;# 
   412  088F                     	;# 
   413  0890                     	;# 
   414  0891                     	;# 
   415  0892                     	;# 
   416  0893                     	;# 
   417  0895                     	;# 
   418  0896                     	;# 
   419  0897                     	;# 
   420  0898                     	;# 
   421  0899                     	;# 
   422  089A                     	;# 
   423  089B                     	;# 
   424  090C                     	;# 
   425  090E                     	;# 
   426  090F                     	;# 
   427  091F                     	;# 
   428  091F                     	;# 
   429  098F                     	;# 
   430  098F                     	;# 
   431  0990                     	;# 
   432  0991                     	;# 
   433  0992                     	;# 
   434  0993                     	;# 
   435  0994                     	;# 
   436  0995                     	;# 
   437  0996                     	;# 
   438  0997                     	;# 
   439  0E0F                     	;# 
   440  0E10                     	;# 
   441  0E11                     	;# 
   442  0E12                     	;# 
   443  0E13                     	;# 
   444  0E14                     	;# 
   445  0E15                     	;# 
   446  0E16                     	;# 
   447  0E17                     	;# 
   448  0E18                     	;# 
   449  0E19                     	;# 
   450  0E1A                     	;# 
   451  0E1B                     	;# 
   452  0E1C                     	;# 
   453  0E1D                     	;# 
   454  0E1E                     	;# 
   455  0E1F                     	;# 
   456  0E20                     	;# 
   457  0E21                     	;# 
   458  0E22                     	;# 
   459  0E23                     	;# 
   460  0E24                     	;# 
   461  0E25                     	;# 
   462  0E26                     	;# 
   463  0E27                     	;# 
   464  0E28                     	;# 
   465  0E29                     	;# 
   466  0E2A                     	;# 
   467  0E2B                     	;# 
   468  0E2C                     	;# 
   469  0E2D                     	;# 
   470  0E2E                     	;# 
   471  0E2F                     	;# 
   472  0E30                     	;# 
   473  0E31                     	;# 
   474  0E32                     	;# 
   475  0E33                     	;# 
   476  0E34                     	;# 
   477  0E35                     	;# 
   478  0E36                     	;# 
   479  0E37                     	;# 
   480  0E8F                     	;# 
   481  0E90                     	;# 
   482  0E91                     	;# 
   483  0E92                     	;# 
   484  0E93                     	;# 
   485  0E94                     	;# 
   486  0E95                     	;# 
   487  0E96                     	;# 
   488  0E97                     	;# 
   489  0E9C                     	;# 
   490  0E9D                     	;# 
   491  0E9E                     	;# 
   492  0EA1                     	;# 
   493  0EA2                     	;# 
   494  0EA3                     	;# 
   495  0EA4                     	;# 
   496  0EA5                     	;# 
   497  0EA9                     	;# 
   498  0EAA                     	;# 
   499  0EAB                     	;# 
   500  0EAC                     	;# 
   501  0EB1                     	;# 
   502  0EB2                     	;# 
   503  0EB3                     	;# 
   504  0EB8                     	;# 
   505  0EB9                     	;# 
   506  0EBA                     	;# 
   507  0EBB                     	;# 
   508  0EBC                     	;# 
   509  0EBD                     	;# 
   510  0EBE                     	;# 
   511  0EC3                     	;# 
   512  0EC5                     	;# 
   513  0EC6                     	;# 
   514  0EC7                     	;# 
   515  0EC8                     	;# 
   516  0EC9                     	;# 
   517  0ECA                     	;# 
   518  0ECB                     	;# 
   519  0ECC                     	;# 
   520  0F10                     	;# 
   521  0F11                     	;# 
   522  0F12                     	;# 
   523  0F13                     	;# 
   524  0F14                     	;# 
   525  0F15                     	;# 
   526  0F16                     	;# 
   527  0F17                     	;# 
   528  0F18                     	;# 
   529  0F19                     	;# 
   530  0F1A                     	;# 
   531  0F1B                     	;# 
   532  0F1C                     	;# 
   533  0F1D                     	;# 
   534  0F1E                     	;# 
   535  0F1F                     	;# 
   536  0F20                     	;# 
   537  0F21                     	;# 
   538  0F22                     	;# 
   539  0F23                     	;# 
   540  0F24                     	;# 
   541  0F25                     	;# 
   542  0F26                     	;# 
   543  0F27                     	;# 
   544  0F38                     	;# 
   545  0F39                     	;# 
   546  0F3A                     	;# 
   547  0F3B                     	;# 
   548  0F3C                     	;# 
   549  0F3D                     	;# 
   550  0F3E                     	;# 
   551  0F3F                     	;# 
   552  0F40                     	;# 
   553  0F41                     	;# 
   554  0F43                     	;# 
   555  0F44                     	;# 
   556  0F45                     	;# 
   557  0F46                     	;# 
   558  0F47                     	;# 
   559  0F48                     	;# 
   560  0F49                     	;# 
   561  0F4A                     	;# 
   562  0F4B                     	;# 
   563  0F4C                     	;# 
   564  0F4E                     	;# 
   565  0F4F                     	;# 
   566  0F50                     	;# 
   567  0F51                     	;# 
   568  0F52                     	;# 
   569  0F53                     	;# 
   570  0F54                     	;# 
   571  0F55                     	;# 
   572  0F56                     	;# 
   573  0F57                     	;# 
   574  0F65                     	;# 
   575  0F68                     	;# 
   576  0F69                     	;# 
   577  0F6A                     	;# 
   578  0F6B                     	;# 
   579  0FE4                     	;# 
   580  0FE5                     	;# 
   581  0FE6                     	;# 
   582  0FE7                     	;# 
   583  0FE8                     	;# 
   584  0FE9                     	;# 
   585  0FEA                     	;# 
   586  0FEB                     	;# 
   587  0FED                     	;# 
   588  0FEE                     	;# 
   589  0FEF                     	;# 
   590  0000                     	;# 
   591  0001                     	;# 
   592  0002                     	;# 
   593  0003                     	;# 
   594  0004                     	;# 
   595  0005                     	;# 
   596  0006                     	;# 
   597  0007                     	;# 
   598  0008                     	;# 
   599  0009                     	;# 
   600  000A                     	;# 
   601  000B                     	;# 
   602  000C                     	;# 
   603  000D                     	;# 
   604  000E                     	;# 
   605  0010                     	;# 
   606  0011                     	;# 
   607  0012                     	;# 
   608  0013                     	;# 
   609  0016                     	;# 
   610  0017                     	;# 
   611  0018                     	;# 
   612  001C                     	;# 
   613  001C                     	;# 
   614  001D                     	;# 
   615  001D                     	;# 
   616  001E                     	;# 
   617  001F                     	;# 
   618  008C                     	;# 
   619  008C                     	;# 
   620  008D                     	;# 
   621  008E                     	;# 
   622  008E                     	;# 
   623  008F                     	;# 
   624  0090                     	;# 
   625  0090                     	;# 
   626  0091                     	;# 
   627  0093                     	;# 
   628  0094                     	;# 
   629  0095                     	;# 
   630  0096                     	;# 
   631  0097                     	;# 
   632  0098                     	;# 
   633  0099                     	;# 
   634  009A                     	;# 
   635  009B                     	;# 
   636  009C                     	;# 
   637  009D                     	;# 
   638  009E                     	;# 
   639  010C                     	;# 
   640  010D                     	;# 
   641  010E                     	;# 
   642  010E                     	;# 
   643  010F                     	;# 
   644  0110                     	;# 
   645  0110                     	;# 
   646  0111                     	;# 
   647  0112                     	;# 
   648  0112                     	;# 
   649  0113                     	;# 
   650  0114                     	;# 
   651  0114                     	;# 
   652  0115                     	;# 
   653  0116                     	;# 
   654  0116                     	;# 
   655  0117                     	;# 
   656  0119                     	;# 
   657  0119                     	;# 
   658  0119                     	;# 
   659  011A                     	;# 
   660  011A                     	;# 
   661  011A                     	;# 
   662  011B                     	;# 
   663  011B                     	;# 
   664  011B                     	;# 
   665  011B                     	;# 
   666  011B                     	;# 
   667  011C                     	;# 
   668  011C                     	;# 
   669  011C                     	;# 
   670  011D                     	;# 
   671  011D                     	;# 
   672  011D                     	;# 
   673  011E                     	;# 
   674  011E                     	;# 
   675  011E                     	;# 
   676  011F                     	;# 
   677  011F                     	;# 
   678  011F                     	;# 
   679  011F                     	;# 
   680  011F                     	;# 
   681  018C                     	;# 
   682  018D                     	;# 
   683  018E                     	;# 
   684  018F                     	;# 
   685  0190                     	;# 
   686  0191                     	;# 
   687  0192                     	;# 
   688  0196                     	;# 
   689  0197                     	;# 
   690  0198                     	;# 
   691  0199                     	;# 
   692  019A                     	;# 
   693  019B                     	;# 
   694  019C                     	;# 
   695  020C                     	;# 
   696  020C                     	;# 
   697  020D                     	;# 
   698  020E                     	;# 
   699  020F                     	;# 
   700  020F                     	;# 
   701  0210                     	;# 
   702  0210                     	;# 
   703  0211                     	;# 
   704  0211                     	;# 
   705  0212                     	;# 
   706  0212                     	;# 
   707  0213                     	;# 
   708  0214                     	;# 
   709  0215                     	;# 
   710  0215                     	;# 
   711  0216                     	;# 
   712  0216                     	;# 
   713  0217                     	;# 
   714  0217                     	;# 
   715  0218                     	;# 
   716  0218                     	;# 
   717  0219                     	;# 
   718  021A                     	;# 
   719  021B                     	;# 
   720  021B                     	;# 
   721  021C                     	;# 
   722  021C                     	;# 
   723  021D                     	;# 
   724  021D                     	;# 
   725  021E                     	;# 
   726  021F                     	;# 
   727  028C                     	;# 
   728  028C                     	;# 
   729  028D                     	;# 
   730  028D                     	;# 
   731  028E                     	;# 
   732  028F                     	;# 
   733  0290                     	;# 
   734  0290                     	;# 
   735  0291                     	;# 
   736  0292                     	;# 
   737  0292                     	;# 
   738  0293                     	;# 
   739  0293                     	;# 
   740  0294                     	;# 
   741  0295                     	;# 
   742  0296                     	;# 
   743  0296                     	;# 
   744  0297                     	;# 
   745  0298                     	;# 
   746  0298                     	;# 
   747  0299                     	;# 
   748  0299                     	;# 
   749  029A                     	;# 
   750  029B                     	;# 
   751  029C                     	;# 
   752  029C                     	;# 
   753  029D                     	;# 
   754  030C                     	;# 
   755  030C                     	;# 
   756  030D                     	;# 
   757  030E                     	;# 
   758  030F                     	;# 
   759  0310                     	;# 
   760  0310                     	;# 
   761  0311                     	;# 
   762  0312                     	;# 
   763  0313                     	;# 
   764  0314                     	;# 
   765  0314                     	;# 
   766  0315                     	;# 
   767  0316                     	;# 
   768  0317                     	;# 
   769  0318                     	;# 
   770  0318                     	;# 
   771  0319                     	;# 
   772  031A                     	;# 
   773  031B                     	;# 
   774  031C                     	;# 
   775  031C                     	;# 
   776  031D                     	;# 
   777  031E                     	;# 
   778  031F                     	;# 
   779  038C                     	;# 
   780  038C                     	;# 
   781  038D                     	;# 
   782  038E                     	;# 
   783  0390                     	;# 
   784  0390                     	;# 
   785  0391                     	;# 
   786  0392                     	;# 
   787  040C                     	;# 
   788  040D                     	;# 
   789  040E                     	;# 
   790  040F                     	;# 
   791  0410                     	;# 
   792  0411                     	;# 
   793  0416                     	;# 
   794  0416                     	;# 
   795  0417                     	;# 
   796  0418                     	;# 
   797  0418                     	;# 
   798  0419                     	;# 
   799  041A                     	;# 
   800  041A                     	;# 
   801  041B                     	;# 
   802  041C                     	;# 
   803  041C                     	;# 
   804  041D                     	;# 
   805  041E                     	;# 
   806  041F                     	;# 
   807  048C                     	;# 
   808  048C                     	;# 
   809  048D                     	;# 
   810  048E                     	;# 
   811  048F                     	;# 
   812  048F                     	;# 
   813  0490                     	;# 
   814  0491                     	;# 
   815  0492                     	;# 
   816  0492                     	;# 
   817  0493                     	;# 
   818  0494                     	;# 
   819  0495                     	;# 
   820  0495                     	;# 
   821  0496                     	;# 
   822  0497                     	;# 
   823  0498                     	;# 
   824  0499                     	;# 
   825  049A                     	;# 
   826  049B                     	;# 
   827  049C                     	;# 
   828  049D                     	;# 
   829  050C                     	;# 
   830  050C                     	;# 
   831  050D                     	;# 
   832  050E                     	;# 
   833  050F                     	;# 
   834  050F                     	;# 
   835  0510                     	;# 
   836  0511                     	;# 
   837  0512                     	;# 
   838  0512                     	;# 
   839  0513                     	;# 
   840  0514                     	;# 
   841  0515                     	;# 
   842  0515                     	;# 
   843  0516                     	;# 
   844  0517                     	;# 
   845  0518                     	;# 
   846  0519                     	;# 
   847  051A                     	;# 
   848  051B                     	;# 
   849  051C                     	;# 
   850  051D                     	;# 
   851  058C                     	;# 
   852  058C                     	;# 
   853  058D                     	;# 
   854  058E                     	;# 
   855  058F                     	;# 
   856  058F                     	;# 
   857  0590                     	;# 
   858  0591                     	;# 
   859  0592                     	;# 
   860  0593                     	;# 
   861  060C                     	;# 
   862  060D                     	;# 
   863  060E                     	;# 
   864  060F                     	;# 
   865  0610                     	;# 
   866  0611                     	;# 
   867  0612                     	;# 
   868  0613                     	;# 
   869  0614                     	;# 
   870  0616                     	;# 
   871  0617                     	;# 
   872  0618                     	;# 
   873  0619                     	;# 
   874  061A                     	;# 
   875  061B                     	;# 
   876  061C                     	;# 
   877  061D                     	;# 
   878  061E                     	;# 
   879  068C                     	;# 
   880  068D                     	;# 
   881  068E                     	;# 
   882  068F                     	;# 
   883  0690                     	;# 
   884  0691                     	;# 
   885  0692                     	;# 
   886  0693                     	;# 
   887  0694                     	;# 
   888  070C                     	;# 
   889  070D                     	;# 
   890  070E                     	;# 
   891  070F                     	;# 
   892  0710                     	;# 
   893  0711                     	;# 
   894  0712                     	;# 
   895  0713                     	;# 
   896  0714                     	;# 
   897  0716                     	;# 
   898  0717                     	;# 
   899  0718                     	;# 
   900  0719                     	;# 
   901  071A                     	;# 
   902  071B                     	;# 
   903  071C                     	;# 
   904  071D                     	;# 
   905  071E                     	;# 
   906  0796                     	;# 
   907  0797                     	;# 
   908  0798                     	;# 
   909  0799                     	;# 
   910  079A                     	;# 
   911  079B                     	;# 
   912  080C                     	;# 
   913  080D                     	;# 
   914  080E                     	;# 
   915  080F                     	;# 
   916  0810                     	;# 
   917  0811                     	;# 
   918  0812                     	;# 
   919  0813                     	;# 
   920  0814                     	;# 
   921  081A                     	;# 
   922  081B                     	;# 
   923  081C                     	;# 
   924  081D                     	;# 
   925  081E                     	;# 
   926  081F                     	;# 
   927  088C                     	;# 
   928  088D                     	;# 
   929  088E                     	;# 
   930  088F                     	;# 
   931  0890                     	;# 
   932  0891                     	;# 
   933  0892                     	;# 
   934  0893                     	;# 
   935  0895                     	;# 
   936  0896                     	;# 
   937  0897                     	;# 
   938  0898                     	;# 
   939  0899                     	;# 
   940  089A                     	;# 
   941  089B                     	;# 
   942  090C                     	;# 
   943  090E                     	;# 
   944  090F                     	;# 
   945  091F                     	;# 
   946  091F                     	;# 
   947  098F                     	;# 
   948  098F                     	;# 
   949  0990                     	;# 
   950  0991                     	;# 
   951  0992                     	;# 
   952  0993                     	;# 
   953  0994                     	;# 
   954  0995                     	;# 
   955  0996                     	;# 
   956  0997                     	;# 
   957  0E0F                     	;# 
   958  0E10                     	;# 
   959  0E11                     	;# 
   960  0E12                     	;# 
   961  0E13                     	;# 
   962  0E14                     	;# 
   963  0E15                     	;# 
   964  0E16                     	;# 
   965  0E17                     	;# 
   966  0E18                     	;# 
   967  0E19                     	;# 
   968  0E1A                     	;# 
   969  0E1B                     	;# 
   970  0E1C                     	;# 
   971  0E1D                     	;# 
   972  0E1E                     	;# 
   973  0E1F                     	;# 
   974  0E20                     	;# 
   975  0E21                     	;# 
   976  0E22                     	;# 
   977  0E23                     	;# 
   978  0E24                     	;# 
   979  0E25                     	;# 
   980  0E26                     	;# 
   981  0E27                     	;# 
   982  0E28                     	;# 
   983  0E29                     	;# 
   984  0E2A                     	;# 
   985  0E2B                     	;# 
   986  0E2C                     	;# 
   987  0E2D                     	;# 
   988  0E2E                     	;# 
   989  0E2F                     	;# 
   990  0E30                     	;# 
   991  0E31                     	;# 
   992  0E32                     	;# 
   993  0E33                     	;# 
   994  0E34                     	;# 
   995  0E35                     	;# 
   996  0E36                     	;# 
   997  0E37                     	;# 
   998  0E8F                     	;# 
   999  0E90                     	;# 
  1000  0E91                     	;# 
  1001  0E92                     	;# 
  1002  0E93                     	;# 
  1003  0E94                     	;# 
  1004  0E95                     	;# 
  1005  0E96                     	;# 
  1006  0E97                     	;# 
  1007  0E9C                     	;# 
  1008  0E9D                     	;# 
  1009  0E9E                     	;# 
  1010  0EA1                     	;# 
  1011  0EA2                     	;# 
  1012  0EA3                     	;# 
  1013  0EA4                     	;# 
  1014  0EA5                     	;# 
  1015  0EA9                     	;# 
  1016  0EAA                     	;# 
  1017  0EAB                     	;# 
  1018  0EAC                     	;# 
  1019  0EB1                     	;# 
  1020  0EB2                     	;# 
  1021  0EB3                     	;# 
  1022  0EB8                     	;# 
  1023  0EB9                     	;# 
  1024  0EBA                     	;# 
  1025  0EBB                     	;# 
  1026  0EBC                     	;# 
  1027  0EBD                     	;# 
  1028  0EBE                     	;# 
  1029  0EC3                     	;# 
  1030  0EC5                     	;# 
  1031  0EC6                     	;# 
  1032  0EC7                     	;# 
  1033  0EC8                     	;# 
  1034  0EC9                     	;# 
  1035  0ECA                     	;# 
  1036  0ECB                     	;# 
  1037  0ECC                     	;# 
  1038  0F10                     	;# 
  1039  0F11                     	;# 
  1040  0F12                     	;# 
  1041  0F13                     	;# 
  1042  0F14                     	;# 
  1043  0F15                     	;# 
  1044  0F16                     	;# 
  1045  0F17                     	;# 
  1046  0F18                     	;# 
  1047  0F19                     	;# 
  1048  0F1A                     	;# 
  1049  0F1B                     	;# 
  1050  0F1C                     	;# 
  1051  0F1D                     	;# 
  1052  0F1E                     	;# 
  1053  0F1F                     	;# 
  1054  0F20                     	;# 
  1055  0F21                     	;# 
  1056  0F22                     	;# 
  1057  0F23                     	;# 
  1058  0F24                     	;# 
  1059  0F25                     	;# 
  1060  0F26                     	;# 
  1061  0F27                     	;# 
  1062  0F38                     	;# 
  1063  0F39                     	;# 
  1064  0F3A                     	;# 
  1065  0F3B                     	;# 
  1066  0F3C                     	;# 
  1067  0F3D                     	;# 
  1068  0F3E                     	;# 
  1069  0F3F                     	;# 
  1070  0F40                     	;# 
  1071  0F41                     	;# 
  1072  0F43                     	;# 
  1073  0F44                     	;# 
  1074  0F45                     	;# 
  1075  0F46                     	;# 
  1076  0F47                     	;# 
  1077  0F48                     	;# 
  1078  0F49                     	;# 
  1079  0F4A                     	;# 
  1080  0F4B                     	;# 
  1081  0F4C                     	;# 
  1082  0F4E                     	;# 
  1083  0F4F                     	;# 
  1084  0F50                     	;# 
  1085  0F51                     	;# 
  1086  0F52                     	;# 
  1087  0F53                     	;# 
  1088  0F54                     	;# 
  1089  0F55                     	;# 
  1090  0F56                     	;# 
  1091  0F57                     	;# 
  1092  0F65                     	;# 
  1093  0F68                     	;# 
  1094  0F69                     	;# 
  1095  0F6A                     	;# 
  1096  0F6B                     	;# 
  1097  0FE4                     	;# 
  1098  0FE5                     	;# 
  1099  0FE6                     	;# 
  1100  0FE7                     	;# 
  1101  0FE8                     	;# 
  1102  0FE9                     	;# 
  1103  0FEA                     	;# 
  1104  0FEB                     	;# 
  1105  0FED                     	;# 
  1106  0FEE                     	;# 
  1107  0FEF                     	;# 
  1108  0000                     	;# 
  1109  0001                     	;# 
  1110  0002                     	;# 
  1111  0003                     	;# 
  1112  0004                     	;# 
  1113  0005                     	;# 
  1114  0006                     	;# 
  1115  0007                     	;# 
  1116  0008                     	;# 
  1117  0009                     	;# 
  1118  000A                     	;# 
  1119  000B                     	;# 
  1120  000C                     	;# 
  1121  000D                     	;# 
  1122  000E                     	;# 
  1123  0010                     	;# 
  1124  0011                     	;# 
  1125  0012                     	;# 
  1126  0013                     	;# 
  1127  0016                     	;# 
  1128  0017                     	;# 
  1129  0018                     	;# 
  1130  001C                     	;# 
  1131  001C                     	;# 
  1132  001D                     	;# 
  1133  001D                     	;# 
  1134  001E                     	;# 
  1135  001F                     	;# 
  1136  008C                     	;# 
  1137  008C                     	;# 
  1138  008D                     	;# 
  1139  008E                     	;# 
  1140  008E                     	;# 
  1141  008F                     	;# 
  1142  0090                     	;# 
  1143  0090                     	;# 
  1144  0091                     	;# 
  1145  0093                     	;# 
  1146  0094                     	;# 
  1147  0095                     	;# 
  1148  0096                     	;# 
  1149  0097                     	;# 
  1150  0098                     	;# 
  1151  0099                     	;# 
  1152  009A                     	;# 
  1153  009B                     	;# 
  1154  009C                     	;# 
  1155  009D                     	;# 
  1156  009E                     	;# 
  1157  010C                     	;# 
  1158  010D                     	;# 
  1159  010E                     	;# 
  1160  010E                     	;# 
  1161  010F                     	;# 
  1162  0110                     	;# 
  1163  0110                     	;# 
  1164  0111                     	;# 
  1165  0112                     	;# 
  1166  0112                     	;# 
  1167  0113                     	;# 
  1168  0114                     	;# 
  1169  0114                     	;# 
  1170  0115                     	;# 
  1171  0116                     	;# 
  1172  0116                     	;# 
  1173  0117                     	;# 
  1174  0119                     	;# 
  1175  0119                     	;# 
  1176  0119                     	;# 
  1177  011A                     	;# 
  1178  011A                     	;# 
  1179  011A                     	;# 
  1180  011B                     	;# 
  1181  011B                     	;# 
  1182  011B                     	;# 
  1183  011B                     	;# 
  1184  011B                     	;# 
  1185  011C                     	;# 
  1186  011C                     	;# 
  1187  011C                     	;# 
  1188  011D                     	;# 
  1189  011D                     	;# 
  1190  011D                     	;# 
  1191  011E                     	;# 
  1192  011E                     	;# 
  1193  011E                     	;# 
  1194  011F                     	;# 
  1195  011F                     	;# 
  1196  011F                     	;# 
  1197  011F                     	;# 
  1198  011F                     	;# 
  1199  018C                     	;# 
  1200  018D                     	;# 
  1201  018E                     	;# 
  1202  018F                     	;# 
  1203  0190                     	;# 
  1204  0191                     	;# 
  1205  0192                     	;# 
  1206  0196                     	;# 
  1207  0197                     	;# 
  1208  0198                     	;# 
  1209  0199                     	;# 
  1210  019A                     	;# 
  1211  019B                     	;# 
  1212  019C                     	;# 
  1213  020C                     	;# 
  1214  020C                     	;# 
  1215  020D                     	;# 
  1216  020E                     	;# 
  1217  020F                     	;# 
  1218  020F                     	;# 
  1219  0210                     	;# 
  1220  0210                     	;# 
  1221  0211                     	;# 
  1222  0211                     	;# 
  1223  0212                     	;# 
  1224  0212                     	;# 
  1225  0213                     	;# 
  1226  0214                     	;# 
  1227  0215                     	;# 
  1228  0215                     	;# 
  1229  0216                     	;# 
  1230  0216                     	;# 
  1231  0217                     	;# 
  1232  0217                     	;# 
  1233  0218                     	;# 
  1234  0218                     	;# 
  1235  0219                     	;# 
  1236  021A                     	;# 
  1237  021B                     	;# 
  1238  021B                     	;# 
  1239  021C                     	;# 
  1240  021C                     	;# 
  1241  021D                     	;# 
  1242  021D                     	;# 
  1243  021E                     	;# 
  1244  021F                     	;# 
  1245  028C                     	;# 
  1246  028C                     	;# 
  1247  028D                     	;# 
  1248  028D                     	;# 
  1249  028E                     	;# 
  1250  028F                     	;# 
  1251  0290                     	;# 
  1252  0290                     	;# 
  1253  0291                     	;# 
  1254  0292                     	;# 
  1255  0292                     	;# 
  1256  0293                     	;# 
  1257  0293                     	;# 
  1258  0294                     	;# 
  1259  0295                     	;# 
  1260  0296                     	;# 
  1261  0296                     	;# 
  1262  0297                     	;# 
  1263  0298                     	;# 
  1264  0298                     	;# 
  1265  0299                     	;# 
  1266  0299                     	;# 
  1267  029A                     	;# 
  1268  029B                     	;# 
  1269  029C                     	;# 
  1270  029C                     	;# 
  1271  029D                     	;# 
  1272  030C                     	;# 
  1273  030C                     	;# 
  1274  030D                     	;# 
  1275  030E                     	;# 
  1276  030F                     	;# 
  1277  0310                     	;# 
  1278  0310                     	;# 
  1279  0311                     	;# 
  1280  0312                     	;# 
  1281  0313                     	;# 
  1282  0314                     	;# 
  1283  0314                     	;# 
  1284  0315                     	;# 
  1285  0316                     	;# 
  1286  0317                     	;# 
  1287  0318                     	;# 
  1288  0318                     	;# 
  1289  0319                     	;# 
  1290  031A                     	;# 
  1291  031B                     	;# 
  1292  031C                     	;# 
  1293  031C                     	;# 
  1294  031D                     	;# 
  1295  031E                     	;# 
  1296  031F                     	;# 
  1297  038C                     	;# 
  1298  038C                     	;# 
  1299  038D                     	;# 
  1300  038E                     	;# 
  1301  0390                     	;# 
  1302  0390                     	;# 
  1303  0391                     	;# 
  1304  0392                     	;# 
  1305  040C                     	;# 
  1306  040D                     	;# 
  1307  040E                     	;# 
  1308  040F                     	;# 
  1309  0410                     	;# 
  1310  0411                     	;# 
  1311  0416                     	;# 
  1312  0416                     	;# 
  1313  0417                     	;# 
  1314  0418                     	;# 
  1315  0418                     	;# 
  1316  0419                     	;# 
  1317  041A                     	;# 
  1318  041A                     	;# 
  1319  041B                     	;# 
  1320  041C                     	;# 
  1321  041C                     	;# 
  1322  041D                     	;# 
  1323  041E                     	;# 
  1324  041F                     	;# 
  1325  048C                     	;# 
  1326  048C                     	;# 
  1327  048D                     	;# 
  1328  048E                     	;# 
  1329  048F                     	;# 
  1330  048F                     	;# 
  1331  0490                     	;# 
  1332  0491                     	;# 
  1333  0492                     	;# 
  1334  0492                     	;# 
  1335  0493                     	;# 
  1336  0494                     	;# 
  1337  0495                     	;# 
  1338  0495                     	;# 
  1339  0496                     	;# 
  1340  0497                     	;# 
  1341  0498                     	;# 
  1342  0499                     	;# 
  1343  049A                     	;# 
  1344  049B                     	;# 
  1345  049C                     	;# 
  1346  049D                     	;# 
  1347  050C                     	;# 
  1348  050C                     	;# 
  1349  050D                     	;# 
  1350  050E                     	;# 
  1351  050F                     	;# 
  1352  050F                     	;# 
  1353  0510                     	;# 
  1354  0511                     	;# 
  1355  0512                     	;# 
  1356  0512                     	;# 
  1357  0513                     	;# 
  1358  0514                     	;# 
  1359  0515                     	;# 
  1360  0515                     	;# 
  1361  0516                     	;# 
  1362  0517                     	;# 
  1363  0518                     	;# 
  1364  0519                     	;# 
  1365  051A                     	;# 
  1366  051B                     	;# 
  1367  051C                     	;# 
  1368  051D                     	;# 
  1369  058C                     	;# 
  1370  058C                     	;# 
  1371  058D                     	;# 
  1372  058E                     	;# 
  1373  058F                     	;# 
  1374  058F                     	;# 
  1375  0590                     	;# 
  1376  0591                     	;# 
  1377  0592                     	;# 
  1378  0593                     	;# 
  1379  060C                     	;# 
  1380  060D                     	;# 
  1381  060E                     	;# 
  1382  060F                     	;# 
  1383  0610                     	;# 
  1384  0611                     	;# 
  1385  0612                     	;# 
  1386  0613                     	;# 
  1387  0614                     	;# 
  1388  0616                     	;# 
  1389  0617                     	;# 
  1390  0618                     	;# 
  1391  0619                     	;# 
  1392  061A                     	;# 
  1393  061B                     	;# 
  1394  061C                     	;# 
  1395  061D                     	;# 
  1396  061E                     	;# 
  1397  068C                     	;# 
  1398  068D                     	;# 
  1399  068E                     	;# 
  1400  068F                     	;# 
  1401  0690                     	;# 
  1402  0691                     	;# 
  1403  0692                     	;# 
  1404  0693                     	;# 
  1405  0694                     	;# 
  1406  070C                     	;# 
  1407  070D                     	;# 
  1408  070E                     	;# 
  1409  070F                     	;# 
  1410  0710                     	;# 
  1411  0711                     	;# 
  1412  0712                     	;# 
  1413  0713                     	;# 
  1414  0714                     	;# 
  1415  0716                     	;# 
  1416  0717                     	;# 
  1417  0718                     	;# 
  1418  0719                     	;# 
  1419  071A                     	;# 
  1420  071B                     	;# 
  1421  071C                     	;# 
  1422  071D                     	;# 
  1423  071E                     	;# 
  1424  0796                     	;# 
  1425  0797                     	;# 
  1426  0798                     	;# 
  1427  0799                     	;# 
  1428  079A                     	;# 
  1429  079B                     	;# 
  1430  080C                     	;# 
  1431  080D                     	;# 
  1432  080E                     	;# 
  1433  080F                     	;# 
  1434  0810                     	;# 
  1435  0811                     	;# 
  1436  0812                     	;# 
  1437  0813                     	;# 
  1438  0814                     	;# 
  1439  081A                     	;# 
  1440  081B                     	;# 
  1441  081C                     	;# 
  1442  081D                     	;# 
  1443  081E                     	;# 
  1444  081F                     	;# 
  1445  088C                     	;# 
  1446  088D                     	;# 
  1447  088E                     	;# 
  1448  088F                     	;# 
  1449  0890                     	;# 
  1450  0891                     	;# 
  1451  0892                     	;# 
  1452  0893                     	;# 
  1453  0895                     	;# 
  1454  0896                     	;# 
  1455  0897                     	;# 
  1456  0898                     	;# 
  1457  0899                     	;# 
  1458  089A                     	;# 
  1459  089B                     	;# 
  1460  090C                     	;# 
  1461  090E                     	;# 
  1462  090F                     	;# 
  1463  091F                     	;# 
  1464  091F                     	;# 
  1465  098F                     	;# 
  1466  098F                     	;# 
  1467  0990                     	;# 
  1468  0991                     	;# 
  1469  0992                     	;# 
  1470  0993                     	;# 
  1471  0994                     	;# 
  1472  0995                     	;# 
  1473  0996                     	;# 
  1474  0997                     	;# 
  1475  0E0F                     	;# 
  1476  0E10                     	;# 
  1477  0E11                     	;# 
  1478  0E12                     	;# 
  1479  0E13                     	;# 
  1480  0E14                     	;# 
  1481  0E15                     	;# 
  1482  0E16                     	;# 
  1483  0E17                     	;# 
  1484  0E18                     	;# 
  1485  0E19                     	;# 
  1486  0E1A                     	;# 
  1487  0E1B                     	;# 
  1488  0E1C                     	;# 
  1489  0E1D                     	;# 
  1490  0E1E                     	;# 
  1491  0E1F                     	;# 
  1492  0E20                     	;# 
  1493  0E21                     	;# 
  1494  0E22                     	;# 
  1495  0E23                     	;# 
  1496  0E24                     	;# 
  1497  0E25                     	;# 
  1498  0E26                     	;# 
  1499  0E27                     	;# 
  1500  0E28                     	;# 
  1501  0E29                     	;# 
  1502  0E2A                     	;# 
  1503  0E2B                     	;# 
  1504  0E2C                     	;# 
  1505  0E2D                     	;# 
  1506  0E2E                     	;# 
  1507  0E2F                     	;# 
  1508  0E30                     	;# 
  1509  0E31                     	;# 
  1510  0E32                     	;# 
  1511  0E33                     	;# 
  1512  0E34                     	;# 
  1513  0E35                     	;# 
  1514  0E36                     	;# 
  1515  0E37                     	;# 
  1516  0E8F                     	;# 
  1517  0E90                     	;# 
  1518  0E91                     	;# 
  1519  0E92                     	;# 
  1520  0E93                     	;# 
  1521  0E94                     	;# 
  1522  0E95                     	;# 
  1523  0E96                     	;# 
  1524  0E97                     	;# 
  1525  0E9C                     	;# 
  1526  0E9D                     	;# 
  1527  0E9E                     	;# 
  1528  0EA1                     	;# 
  1529  0EA2                     	;# 
  1530  0EA3                     	;# 
  1531  0EA4                     	;# 
  1532  0EA5                     	;# 
  1533  0EA9                     	;# 
  1534  0EAA                     	;# 
  1535  0EAB                     	;# 
  1536  0EAC                     	;# 
  1537  0EB1                     	;# 
  1538  0EB2                     	;# 
  1539  0EB3                     	;# 
  1540  0EB8                     	;# 
  1541  0EB9                     	;# 
  1542  0EBA                     	;# 
  1543  0EBB                     	;# 
  1544  0EBC                     	;# 
  1545  0EBD                     	;# 
  1546  0EBE                     	;# 
  1547  0EC3                     	;# 
  1548  0EC5                     	;# 
  1549  0EC6                     	;# 
  1550  0EC7                     	;# 
  1551  0EC8                     	;# 
  1552  0EC9                     	;# 
  1553  0ECA                     	;# 
  1554  0ECB                     	;# 
  1555  0ECC                     	;# 
  1556  0F10                     	;# 
  1557  0F11                     	;# 
  1558  0F12                     	;# 
  1559  0F13                     	;# 
  1560  0F14                     	;# 
  1561  0F15                     	;# 
  1562  0F16                     	;# 
  1563  0F17                     	;# 
  1564  0F18                     	;# 
  1565  0F19                     	;# 
  1566  0F1A                     	;# 
  1567  0F1B                     	;# 
  1568  0F1C                     	;# 
  1569  0F1D                     	;# 
  1570  0F1E                     	;# 
  1571  0F1F                     	;# 
  1572  0F20                     	;# 
  1573  0F21                     	;# 
  1574  0F22                     	;# 
  1575  0F23                     	;# 
  1576  0F24                     	;# 
  1577  0F25                     	;# 
  1578  0F26                     	;# 
  1579  0F27                     	;# 
  1580  0F38                     	;# 
  1581  0F39                     	;# 
  1582  0F3A                     	;# 
  1583  0F3B                     	;# 
  1584  0F3C                     	;# 
  1585  0F3D                     	;# 
  1586  0F3E                     	;# 
  1587  0F3F                     	;# 
  1588  0F40                     	;# 
  1589  0F41                     	;# 
  1590  0F43                     	;# 
  1591  0F44                     	;# 
  1592  0F45                     	;# 
  1593  0F46                     	;# 
  1594  0F47                     	;# 
  1595  0F48                     	;# 
  1596  0F49                     	;# 
  1597  0F4A                     	;# 
  1598  0F4B                     	;# 
  1599  0F4C                     	;# 
  1600  0F4E                     	;# 
  1601  0F4F                     	;# 
  1602  0F50                     	;# 
  1603  0F51                     	;# 
  1604  0F52                     	;# 
  1605  0F53                     	;# 
  1606  0F54                     	;# 
  1607  0F55                     	;# 
  1608  0F56                     	;# 
  1609  0F57                     	;# 
  1610  0F65                     	;# 
  1611  0F68                     	;# 
  1612  0F69                     	;# 
  1613  0F6A                     	;# 
  1614  0F6B                     	;# 
  1615  0FE4                     	;# 
  1616  0FE5                     	;# 
  1617  0FE6                     	;# 
  1618  0FE7                     	;# 
  1619  0FE8                     	;# 
  1620  0FE9                     	;# 
  1621  0FEA                     	;# 
  1622  0FEB                     	;# 
  1623  0FED                     	;# 
  1624  0FEE                     	;# 
  1625  0FEF                     	;# 
  1626  0000                     	;# 
  1627  0001                     	;# 
  1628  0002                     	;# 
  1629  0003                     	;# 
  1630  0004                     	;# 
  1631  0005                     	;# 
  1632  0006                     	;# 
  1633  0007                     	;# 
  1634  0008                     	;# 
  1635  0009                     	;# 
  1636  000A                     	;# 
  1637  000B                     	;# 
  1638  000C                     	;# 
  1639  000D                     	;# 
  1640  000E                     	;# 
  1641  0010                     	;# 
  1642  0011                     	;# 
  1643  0012                     	;# 
  1644  0013                     	;# 
  1645  0016                     	;# 
  1646  0017                     	;# 
  1647  0018                     	;# 
  1648  001C                     	;# 
  1649  001C                     	;# 
  1650  001D                     	;# 
  1651  001D                     	;# 
  1652  001E                     	;# 
  1653  001F                     	;# 
  1654  008C                     	;# 
  1655  008C                     	;# 
  1656  008D                     	;# 
  1657  008E                     	;# 
  1658  008E                     	;# 
  1659  008F                     	;# 
  1660  0090                     	;# 
  1661  0090                     	;# 
  1662  0091                     	;# 
  1663  0093                     	;# 
  1664  0094                     	;# 
  1665  0095                     	;# 
  1666  0096                     	;# 
  1667  0097                     	;# 
  1668  0098                     	;# 
  1669  0099                     	;# 
  1670  009A                     	;# 
  1671  009B                     	;# 
  1672  009C                     	;# 
  1673  009D                     	;# 
  1674  009E                     	;# 
  1675  010C                     	;# 
  1676  010D                     	;# 
  1677  010E                     	;# 
  1678  010E                     	;# 
  1679  010F                     	;# 
  1680  0110                     	;# 
  1681  0110                     	;# 
  1682  0111                     	;# 
  1683  0112                     	;# 
  1684  0112                     	;# 
  1685  0113                     	;# 
  1686  0114                     	;# 
  1687  0114                     	;# 
  1688  0115                     	;# 
  1689  0116                     	;# 
  1690  0116                     	;# 
  1691  0117                     	;# 
  1692  0119                     	;# 
  1693  0119                     	;# 
  1694  0119                     	;# 
  1695  011A                     	;# 
  1696  011A                     	;# 
  1697  011A                     	;# 
  1698  011B                     	;# 
  1699  011B                     	;# 
  1700  011B                     	;# 
  1701  011B                     	;# 
  1702  011B                     	;# 
  1703  011C                     	;# 
  1704  011C                     	;# 
  1705  011C                     	;# 
  1706  011D                     	;# 
  1707  011D                     	;# 
  1708  011D                     	;# 
  1709  011E                     	;# 
  1710  011E                     	;# 
  1711  011E                     	;# 
  1712  011F                     	;# 
  1713  011F                     	;# 
  1714  011F                     	;# 
  1715  011F                     	;# 
  1716  011F                     	;# 
  1717  018C                     	;# 
  1718  018D                     	;# 
  1719  018E                     	;# 
  1720  018F                     	;# 
  1721  0190                     	;# 
  1722  0191                     	;# 
  1723  0192                     	;# 
  1724  0196                     	;# 
  1725  0197                     	;# 
  1726  0198                     	;# 
  1727  0199                     	;# 
  1728  019A                     	;# 
  1729  019B                     	;# 
  1730  019C                     	;# 
  1731  020C                     	;# 
  1732  020C                     	;# 
  1733  020D                     	;# 
  1734  020E                     	;# 
  1735  020F                     	;# 
  1736  020F                     	;# 
  1737  0210                     	;# 
  1738  0210                     	;# 
  1739  0211                     	;# 
  1740  0211                     	;# 
  1741  0212                     	;# 
  1742  0212                     	;# 
  1743  0213                     	;# 
  1744  0214                     	;# 
  1745  0215                     	;# 
  1746  0215                     	;# 
  1747  0216                     	;# 
  1748  0216                     	;# 
  1749  0217                     	;# 
  1750  0217                     	;# 
  1751  0218                     	;# 
  1752  0218                     	;# 
  1753  0219                     	;# 
  1754  021A                     	;# 
  1755  021B                     	;# 
  1756  021B                     	;# 
  1757  021C                     	;# 
  1758  021C                     	;# 
  1759  021D                     	;# 
  1760  021D                     	;# 
  1761  021E                     	;# 
  1762  021F                     	;# 
  1763  028C                     	;# 
  1764  028C                     	;# 
  1765  028D                     	;# 
  1766  028D                     	;# 
  1767  028E                     	;# 
  1768  028F                     	;# 
  1769  0290                     	;# 
  1770  0290                     	;# 
  1771  0291                     	;# 
  1772  0292                     	;# 
  1773  0292                     	;# 
  1774  0293                     	;# 
  1775  0293                     	;# 
  1776  0294                     	;# 
  1777  0295                     	;# 
  1778  0296                     	;# 
  1779  0296                     	;# 
  1780  0297                     	;# 
  1781  0298                     	;# 
  1782  0298                     	;# 
  1783  0299                     	;# 
  1784  0299                     	;# 
  1785  029A                     	;# 
  1786  029B                     	;# 
  1787  029C                     	;# 
  1788  029C                     	;# 
  1789  029D                     	;# 
  1790  030C                     	;# 
  1791  030C                     	;# 
  1792  030D                     	;# 
  1793  030E                     	;# 
  1794  030F                     	;# 
  1795  0310                     	;# 
  1796  0310                     	;# 
  1797  0311                     	;# 
  1798  0312                     	;# 
  1799  0313                     	;# 
  1800  0314                     	;# 
  1801  0314                     	;# 
  1802  0315                     	;# 
  1803  0316                     	;# 
  1804  0317                     	;# 
  1805  0318                     	;# 
  1806  0318                     	;# 
  1807  0319                     	;# 
  1808  031A                     	;# 
  1809  031B                     	;# 
  1810  031C                     	;# 
  1811  031C                     	;# 
  1812  031D                     	;# 
  1813  031E                     	;# 
  1814  031F                     	;# 
  1815  038C                     	;# 
  1816  038C                     	;# 
  1817  038D                     	;# 
  1818  038E                     	;# 
  1819  0390                     	;# 
  1820  0390                     	;# 
  1821  0391                     	;# 
  1822  0392                     	;# 
  1823  040C                     	;# 
  1824  040D                     	;# 
  1825  040E                     	;# 
  1826  040F                     	;# 
  1827  0410                     	;# 
  1828  0411                     	;# 
  1829  0416                     	;# 
  1830  0416                     	;# 
  1831  0417                     	;# 
  1832  0418                     	;# 
  1833  0418                     	;# 
  1834  0419                     	;# 
  1835  041A                     	;# 
  1836  041A                     	;# 
  1837  041B                     	;# 
  1838  041C                     	;# 
  1839  041C                     	;# 
  1840  041D                     	;# 
  1841  041E                     	;# 
  1842  041F                     	;# 
  1843  048C                     	;# 
  1844  048C                     	;# 
  1845  048D                     	;# 
  1846  048E                     	;# 
  1847  048F                     	;# 
  1848  048F                     	;# 
  1849  0490                     	;# 
  1850  0491                     	;# 
  1851  0492                     	;# 
  1852  0492                     	;# 
  1853  0493                     	;# 
  1854  0494                     	;# 
  1855  0495                     	;# 
  1856  0495                     	;# 
  1857  0496                     	;# 
  1858  0497                     	;# 
  1859  0498                     	;# 
  1860  0499                     	;# 
  1861  049A                     	;# 
  1862  049B                     	;# 
  1863  049C                     	;# 
  1864  049D                     	;# 
  1865  050C                     	;# 
  1866  050C                     	;# 
  1867  050D                     	;# 
  1868  050E                     	;# 
  1869  050F                     	;# 
  1870  050F                     	;# 
  1871  0510                     	;# 
  1872  0511                     	;# 
  1873  0512                     	;# 
  1874  0512                     	;# 
  1875  0513                     	;# 
  1876  0514                     	;# 
  1877  0515                     	;# 
  1878  0515                     	;# 
  1879  0516                     	;# 
  1880  0517                     	;# 
  1881  0518                     	;# 
  1882  0519                     	;# 
  1883  051A                     	;# 
  1884  051B                     	;# 
  1885  051C                     	;# 
  1886  051D                     	;# 
  1887  058C                     	;# 
  1888  058C                     	;# 
  1889  058D                     	;# 
  1890  058E                     	;# 
  1891  058F                     	;# 
  1892  058F                     	;# 
  1893  0590                     	;# 
  1894  0591                     	;# 
  1895  0592                     	;# 
  1896  0593                     	;# 
  1897  060C                     	;# 
  1898  060D                     	;# 
  1899  060E                     	;# 
  1900  060F                     	;# 
  1901  0610                     	;# 
  1902  0611                     	;# 
  1903  0612                     	;# 
  1904  0613                     	;# 
  1905  0614                     	;# 
  1906  0616                     	;# 
  1907  0617                     	;# 
  1908  0618                     	;# 
  1909  0619                     	;# 
  1910  061A                     	;# 
  1911  061B                     	;# 
  1912  061C                     	;# 
  1913  061D                     	;# 
  1914  061E                     	;# 
  1915  068C                     	;# 
  1916  068D                     	;# 
  1917  068E                     	;# 
  1918  068F                     	;# 
  1919  0690                     	;# 
  1920  0691                     	;# 
  1921  0692                     	;# 
  1922  0693                     	;# 
  1923  0694                     	;# 
  1924  070C                     	;# 
  1925  070D                     	;# 
  1926  070E                     	;# 
  1927  070F                     	;# 
  1928  0710                     	;# 
  1929  0711                     	;# 
  1930  0712                     	;# 
  1931  0713                     	;# 
  1932  0714                     	;# 
  1933  0716                     	;# 
  1934  0717                     	;# 
  1935  0718                     	;# 
  1936  0719                     	;# 
  1937  071A                     	;# 
  1938  071B                     	;# 
  1939  071C                     	;# 
  1940  071D                     	;# 
  1941  071E                     	;# 
  1942  0796                     	;# 
  1943  0797                     	;# 
  1944  0798                     	;# 
  1945  0799                     	;# 
  1946  079A                     	;# 
  1947  079B                     	;# 
  1948  080C                     	;# 
  1949  080D                     	;# 
  1950  080E                     	;# 
  1951  080F                     	;# 
  1952  0810                     	;# 
  1953  0811                     	;# 
  1954  0812                     	;# 
  1955  0813                     	;# 
  1956  0814                     	;# 
  1957  081A                     	;# 
  1958  081B                     	;# 
  1959  081C                     	;# 
  1960  081D                     	;# 
  1961  081E                     	;# 
  1962  081F                     	;# 
  1963  088C                     	;# 
  1964  088D                     	;# 
  1965  088E                     	;# 
  1966  088F                     	;# 
  1967  0890                     	;# 
  1968  0891                     	;# 
  1969  0892                     	;# 
  1970  0893                     	;# 
  1971  0895                     	;# 
  1972  0896                     	;# 
  1973  0897                     	;# 
  1974  0898                     	;# 
  1975  0899                     	;# 
  1976  089A                     	;# 
  1977  089B                     	;# 
  1978  090C                     	;# 
  1979  090E                     	;# 
  1980  090F                     	;# 
  1981  091F                     	;# 
  1982  091F                     	;# 
  1983  098F                     	;# 
  1984  098F                     	;# 
  1985  0990                     	;# 
  1986  0991                     	;# 
  1987  0992                     	;# 
  1988  0993                     	;# 
  1989  0994                     	;# 
  1990  0995                     	;# 
  1991  0996                     	;# 
  1992  0997                     	;# 
  1993  0E0F                     	;# 
  1994  0E10                     	;# 
  1995  0E11                     	;# 
  1996  0E12                     	;# 
  1997  0E13                     	;# 
  1998  0E14                     	;# 
  1999  0E15                     	;# 
  2000  0E16                     	;# 
  2001  0E17                     	;# 
  2002  0E18                     	;# 
  2003  0E19                     	;# 
  2004  0E1A                     	;# 
  2005  0E1B                     	;# 
  2006  0E1C                     	;# 
  2007  0E1D                     	;# 
  2008  0E1E                     	;# 
  2009  0E1F                     	;# 
  2010  0E20                     	;# 
  2011  0E21                     	;# 
  2012  0E22                     	;# 
  2013  0E23                     	;# 
  2014  0E24                     	;# 
  2015  0E25                     	;# 
  2016  0E26                     	;# 
  2017  0E27                     	;# 
  2018  0E28                     	;# 
  2019  0E29                     	;# 
  2020  0E2A                     	;# 
  2021  0E2B                     	;# 
  2022  0E2C                     	;# 
  2023  0E2D                     	;# 
  2024  0E2E                     	;# 
  2025  0E2F                     	;# 
  2026  0E30                     	;# 
  2027  0E31                     	;# 
  2028  0E32                     	;# 
  2029  0E33                     	;# 
  2030  0E34                     	;# 
  2031  0E35                     	;# 
  2032  0E36                     	;# 
  2033  0E37                     	;# 
  2034  0E8F                     	;# 
  2035  0E90                     	;# 
  2036  0E91                     	;# 
  2037  0E92                     	;# 
  2038  0E93                     	;# 
  2039  0E94                     	;# 
  2040  0E95                     	;# 
  2041  0E96                     	;# 
  2042  0E97                     	;# 
  2043  0E9C                     	;# 
  2044  0E9D                     	;# 
  2045  0E9E                     	;# 
  2046  0EA1                     	;# 
  2047  0EA2                     	;# 
  2048  0EA3                     	;# 
  2049  0EA4                     	;# 
  2050  0EA5                     	;# 
  2051  0EA9                     	;# 
  2052  0EAA                     	;# 
  2053  0EAB                     	;# 
  2054  0EAC                     	;# 
  2055  0EB1                     	;# 
  2056  0EB2                     	;# 
  2057  0EB3                     	;# 
  2058  0EB8                     	;# 
  2059  0EB9                     	;# 
  2060  0EBA                     	;# 
  2061  0EBB                     	;# 
  2062  0EBC                     	;# 
  2063  0EBD                     	;# 
  2064  0EBE                     	;# 
  2065  0EC3                     	;# 
  2066  0EC5                     	;# 
  2067  0EC6                     	;# 
  2068  0EC7                     	;# 
  2069  0EC8                     	;# 
  2070  0EC9                     	;# 
  2071  0ECA                     	;# 
  2072  0ECB                     	;# 
  2073  0ECC                     	;# 
  2074  0F10                     	;# 
  2075  0F11                     	;# 
  2076  0F12                     	;# 
  2077  0F13                     	;# 
  2078  0F14                     	;# 
  2079  0F15                     	;# 
  2080  0F16                     	;# 
  2081  0F17                     	;# 
  2082  0F18                     	;# 
  2083  0F19                     	;# 
  2084  0F1A                     	;# 
  2085  0F1B                     	;# 
  2086  0F1C                     	;# 
  2087  0F1D                     	;# 
  2088  0F1E                     	;# 
  2089  0F1F                     	;# 
  2090  0F20                     	;# 
  2091  0F21                     	;# 
  2092  0F22                     	;# 
  2093  0F23                     	;# 
  2094  0F24                     	;# 
  2095  0F25                     	;# 
  2096  0F26                     	;# 
  2097  0F27                     	;# 
  2098  0F38                     	;# 
  2099  0F39                     	;# 
  2100  0F3A                     	;# 
  2101  0F3B                     	;# 
  2102  0F3C                     	;# 
  2103  0F3D                     	;# 
  2104  0F3E                     	;# 
  2105  0F3F                     	;# 
  2106  0F40                     	;# 
  2107  0F41                     	;# 
  2108  0F43                     	;# 
  2109  0F44                     	;# 
  2110  0F45                     	;# 
  2111  0F46                     	;# 
  2112  0F47                     	;# 
  2113  0F48                     	;# 
  2114  0F49                     	;# 
  2115  0F4A                     	;# 
  2116  0F4B                     	;# 
  2117  0F4C                     	;# 
  2118  0F4E                     	;# 
  2119  0F4F                     	;# 
  2120  0F50                     	;# 
  2121  0F51                     	;# 
  2122  0F52                     	;# 
  2123  0F53                     	;# 
  2124  0F54                     	;# 
  2125  0F55                     	;# 
  2126  0F56                     	;# 
  2127  0F57                     	;# 
  2128  0F65                     	;# 
  2129  0F68                     	;# 
  2130  0F69                     	;# 
  2131  0F6A                     	;# 
  2132  0F6B                     	;# 
  2133  0FE4                     	;# 
  2134  0FE5                     	;# 
  2135  0FE6                     	;# 
  2136  0FE7                     	;# 
  2137  0FE8                     	;# 
  2138  0FE9                     	;# 
  2139  0FEA                     	;# 
  2140  0FEB                     	;# 
  2141  0FED                     	;# 
  2142  0FEE                     	;# 
  2143  0FEF                     	;# 
  2144  0013                     _TRISC	set	19
  2145  0011                     _TRISA	set	17
  2146  000C                     _PORTA	set	12
  2147  0016                     _LATA	set	22
  2148  0119                     _RCREG	set	281
  2149  011A                     _TXREG	set	282
  2150  011C                     _SP1BRGH	set	284
  2151  011B                     _SP1BRGL	set	283
  2152  011E                     _TX1STA	set	286
  2153  011D                     _RC1STA	set	285
  2154  011F                     _BAUD1CONbits	set	287
  2155  070F                     _PIR3	set	1807
  2156  0ECB                     _RXPPS	set	3787
  2157  0F20                     _RC0PPS	set	3872
  2158  0F4E                     _ANSELC	set	3918
  2159  0F38                     _ANSELA	set	3896
  2160                           
  2161                           	psect	stringtext1
  2162  0800                     __pstringtext1:
  2163  0800                     STR_1:
  2164  0800  3468               	retlw	104	;'h'
  2165  0801  346F               	retlw	111	;'o'
  2166  0802  346C               	retlw	108	;'l'
  2167  0803  3461               	retlw	97	;'a'
  2168  0804  3420               	retlw	32	;' '
  2169  0805  346D               	retlw	109	;'m'
  2170  0806  3475               	retlw	117	;'u'
  2171  0807  346E               	retlw	110	;'n'
  2172  0808  3464               	retlw	100	;'d'
  2173  0809  346F               	retlw	111	;'o'
  2174  080A  3420               	retlw	32	;' '
  2175  080B  3425               	retlw	37	;'%'
  2176  080C  3469               	retlw	105	;'i'
  2177  080D  340A               	retlw	10
  2178  080E  3400               	retlw	0
  2179                           
  2180                           	psect	stringtext2
  2181  0000                     __pstringtext2:
  2182                           
  2183                           	psect	cinit
  2184  07F2                     start_initialization:	
  2185                           ; #config settings
  2186                           
  2187  07F2                     __initialization:
  2188                           
  2189                           ; Clear objects allocated to BANK0
  2190  07F2  0020               	movlb	0	; select bank0
  2191  07F3  01ED               	clrf	__pbssBANK0& (0+127)
  2192  07F4  01EE               	clrf	(__pbssBANK0+1)& (0+127)
  2193                           
  2194                           ; Clear objects allocated to BANK1
  2195  07F5  30C9               	movlw	low __pbssBANK1
  2196  07F6  0084               	movwf	4
  2197  07F7  3000               	movlw	high __pbssBANK1
  2198  07F8  0085               	movwf	5
  2199  07F9  3026               	movlw	38
  2200  07FA  3180  20D9  3187   	fcall	clear_ram0
  2201  07FD                     end_of_initialization:	
  2202                           ;End of C runtime variable initialization code
  2203                           
  2204  07FD                     __end_of__initialization:
  2205  07FD  0020               	movlb	0
  2206  07FE  3183  2B19         	ljmp	_main	;jump to C main() function
  2207                           
  2208                           	psect	bssBANK0
  2209  006D                     __pbssBANK0:
  2210  006D                     _flags:
  2211  006D                     	ds	2
  2212                           
  2213                           	psect	bssBANK1
  2214  00C9                     __pbssBANK1:
  2215  00C9                     _nout:
  2216  00C9                     	ds	2
  2217  00CB                     _width:
  2218  00CB                     	ds	2
  2219  00CD                     _prec:
  2220  00CD                     	ds	2
  2221  00CF                     _dbuf:
  2222  00CF                     	ds	32
  2223                           
  2224                           	psect	clrtext
  2225  00D9                     clear_ram0:	
  2226                           ;	Called with FSR0 containing the base address, and
  2227                           ;	WREG with the size to clear
  2228                           
  2229  00D9  0064               	clrwdt	;clear the watchdog before getting into this loop
  2230  00DA                     clrloop0:
  2231  00DA  0180               	clrf	0	;clear RAM location pointed to by FSR
  2232  00DB  3101               	addfsr 0,1
  2233  00DC  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2234  00DD  28DA               	goto	clrloop0	;have we reached the end yet?
  2235  00DE  3400               	retlw	0	;all done for this memory range, return
  2236                           
  2237                           	psect	cstackBANK1
  2238  00A0                     __pcstackBANK1:
  2239  00A0                     sprintf@ap:
  2240                           
  2241                           ; 1 bytes @ 0x0
  2242  00A0                     	ds	1
  2243  00A1                     sprintf@s:
  2244                           
  2245                           ; 1 bytes @ 0x1
  2246  00A1                     	ds	1
  2247  00A2                     sprintf@f:
  2248                           
  2249                           ; 5 bytes @ 0x2
  2250  00A2                     	ds	5
  2251  00A7                     main@buffer:
  2252                           
  2253                           ; 32 bytes @ 0x7
  2254  00A7                     	ds	32
  2255  00C7                     main@rx:
  2256                           
  2257                           ; 1 bytes @ 0x27
  2258  00C7                     	ds	1
  2259  00C8                     main@contador:
  2260                           
  2261                           ; 1 bytes @ 0x28
  2262  00C8                     	ds	1
  2263                           
  2264                           	psect	cstackCOMMON
  2265  0070                     __pcstackCOMMON:
  2266  0070                     ?_port_init:
  2267  0070                     ??_port_init:	
  2268                           ; 1 bytes @ 0x0
  2269                           
  2270  0070                     ?_adc_init:	
  2271                           ; 1 bytes @ 0x0
  2272                           
  2273  0070                     ??_adc_init:	
  2274                           ; 1 bytes @ 0x0
  2275                           
  2276  0070                     ?_uart_rx:	
  2277                           ; 1 bytes @ 0x0
  2278                           
  2279  0070                     ??_uart_rx:	
  2280                           ; 1 bytes @ 0x0
  2281                           
  2282  0070                     ?_main:	
  2283                           ; 1 bytes @ 0x0
  2284                           
  2285  0070                     ?_uart_tx:	
  2286                           ; 1 bytes @ 0x0
  2287                           
  2288  0070                     ??_uart_tx:	
  2289                           ; 1 bytes @ 0x0
  2290                           
  2291  0070                     ?_putch:	
  2292                           ; 1 bytes @ 0x0
  2293                           
  2294  0070                     ??___aodiv:	
  2295                           ; 1 bytes @ 0x0
  2296                           
  2297  0070                     ??___aomod:	
  2298                           ; 1 bytes @ 0x0
  2299                           
  2300  0070                     ?_printf:	
  2301                           ; 1 bytes @ 0x0
  2302                           
  2303  0070                     ?_strlen:	
  2304                           ; 2 bytes @ 0x0
  2305                           
  2306  0070                     ?___lldiv:	
  2307                           ; 2 bytes @ 0x0
  2308                           
  2309  0070                     ___lldiv@divisor:	
  2310                           ; 4 bytes @ 0x0
  2311                           
  2312                           
  2313                           ; 4 bytes @ 0x0
  2314  0070                     	ds	1
  2315  0071                     uart_tx@dato:
  2316  0071                     ___aodiv@counter:	
  2317                           ; 1 bytes @ 0x1
  2318                           
  2319  0071                     ___aomod@counter:	
  2320                           ; 1 bytes @ 0x1
  2321                           
  2322                           
  2323                           ; 1 bytes @ 0x1
  2324  0071                     	ds	1
  2325  0072                     ??_strlen:
  2326  0072                     ??_putch:	
  2327                           ; 1 bytes @ 0x2
  2328                           
  2329  0072                     putch@dato:	
  2330                           ; 1 bytes @ 0x2
  2331                           
  2332  0072                     ___aodiv@sign:	
  2333                           ; 1 bytes @ 0x2
  2334                           
  2335  0072                     ___aomod@sign:	
  2336                           ; 1 bytes @ 0x2
  2337                           
  2338                           
  2339                           ; 1 bytes @ 0x2
  2340  0072                     	ds	1
  2341  0073                     ?_fputc:
  2342  0073                     ?_abs:	
  2343                           ; 2 bytes @ 0x3
  2344                           
  2345  0073                     strlen@a:	
  2346                           ; 2 bytes @ 0x3
  2347                           
  2348  0073                     abs@a:	
  2349                           ; 1 bytes @ 0x3
  2350                           
  2351  0073                     fputc@c:	
  2352                           ; 2 bytes @ 0x3
  2353                           
  2354  0073                     ___aodiv@quotient:	
  2355                           ; 2 bytes @ 0x3
  2356                           
  2357                           
  2358                           ; 8 bytes @ 0x3
  2359  0073                     	ds	1
  2360  0074                     strlen@s:
  2361  0074                     ___lldiv@dividend:	
  2362                           ; 1 bytes @ 0x4
  2363                           
  2364                           
  2365                           ; 4 bytes @ 0x4
  2366  0074                     	ds	1
  2367  0075                     ??_abs:
  2368  0075                     fputc@fp:	
  2369                           ; 1 bytes @ 0x5
  2370                           
  2371                           
  2372                           ; 1 bytes @ 0x5
  2373  0075                     	ds	1
  2374  0076                     ??_fputc:
  2375                           
  2376                           ; 1 bytes @ 0x6
  2377  0076                     	ds	2
  2378  0078                     ??___lldiv:
  2379                           
  2380                           ; 1 bytes @ 0x8
  2381  0078                     	ds	1
  2382  0079                     ___lldiv@quotient:
  2383                           
  2384                           ; 4 bytes @ 0x9
  2385  0079                     	ds	2
  2386  007B                     ?_fputs:
  2387  007B                     fputs@fp:	
  2388                           ; 2 bytes @ 0xB
  2389                           
  2390                           
  2391                           ; 1 bytes @ 0xB
  2392  007B                     	ds	1
  2393  007C                     ??_pad:
  2394                           
  2395                           ; 1 bytes @ 0xC
  2396  007C                     	ds	1
  2397  007D                     ??_sprintf:
  2398  007D                     ??_printf:	
  2399                           ; 1 bytes @ 0xD
  2400                           
  2401  007D                     ___lldiv@counter:	
  2402                           ; 1 bytes @ 0xD
  2403                           
  2404                           
  2405                           ; 1 bytes @ 0xD
  2406  007D                     	ds	1
  2407                           
  2408                           	psect	cstackBANK0
  2409  0020                     __pcstackBANK0:
  2410  0020                     ?_serial_init:
  2411  0020                     ??_fputs:	
  2412                           ; 1 bytes @ 0x0
  2413                           
  2414  0020                     ?___aodiv:	
  2415                           ; 1 bytes @ 0x0
  2416                           
  2417  0020                     ?___aomod:	
  2418                           ; 8 bytes @ 0x0
  2419                           
  2420  0020                     serial_init@baudios:	
  2421                           ; 8 bytes @ 0x0
  2422                           
  2423  0020                     ___aodiv@divisor:	
  2424                           ; 4 bytes @ 0x0
  2425                           
  2426  0020                     ___aomod@divisor:	
  2427                           ; 8 bytes @ 0x0
  2428                           
  2429                           
  2430                           ; 8 bytes @ 0x0
  2431  0020                     	ds	3
  2432  0023                     fputs@c:
  2433                           
  2434                           ; 1 bytes @ 0x3
  2435  0023                     	ds	1
  2436  0024                     ??_serial_init:
  2437  0024                     fputs@i:	
  2438                           ; 1 bytes @ 0x4
  2439                           
  2440                           
  2441                           ; 2 bytes @ 0x4
  2442  0024                     	ds	2
  2443  0026                     fputs@s:
  2444                           
  2445                           ; 1 bytes @ 0x6
  2446  0026                     	ds	1
  2447  0027                     ?_pad:
  2448  0027                     pad@buf:	
  2449                           ; 2 bytes @ 0x7
  2450                           
  2451                           
  2452                           ; 1 bytes @ 0x7
  2453  0027                     	ds	1
  2454  0028                     serial_init@sx:
  2455  0028                     pad@p:	
  2456                           ; 2 bytes @ 0x8
  2457                           
  2458  0028                     ___aodiv@dividend:	
  2459                           ; 2 bytes @ 0x8
  2460                           
  2461  0028                     ___aomod@dividend:	
  2462                           ; 8 bytes @ 0x8
  2463                           
  2464                           
  2465                           ; 8 bytes @ 0x8
  2466  0028                     	ds	2
  2467  002A                     pad@i:
  2468                           
  2469                           ; 2 bytes @ 0xA
  2470  002A                     	ds	2
  2471  002C                     pad@w:
  2472                           
  2473                           ; 2 bytes @ 0xC
  2474  002C                     	ds	2
  2475  002E                     pad@fp:
  2476                           
  2477                           ; 1 bytes @ 0xE
  2478  002E                     	ds	2
  2479  0030                     ?_dtoa:
  2480  0030                     dtoa@d:	
  2481                           ; 2 bytes @ 0x10
  2482                           
  2483                           
  2484                           ; 8 bytes @ 0x10
  2485  0030                     	ds	8
  2486  0038                     ??_dtoa:
  2487                           
  2488                           ; 1 bytes @ 0x18
  2489  0038                     	ds	3
  2490  003B                     _dtoa$640:
  2491                           
  2492                           ; 2 bytes @ 0x1B
  2493  003B                     	ds	2
  2494  003D                     dtoa@fp:
  2495                           
  2496                           ; 1 bytes @ 0x1D
  2497  003D                     	ds	1
  2498  003E                     dtoa@p:
  2499                           
  2500                           ; 2 bytes @ 0x1E
  2501  003E                     	ds	2
  2502  0040                     dtoa@w:
  2503                           
  2504                           ; 2 bytes @ 0x20
  2505  0040                     	ds	2
  2506  0042                     dtoa@s:
  2507                           
  2508                           ; 2 bytes @ 0x22
  2509  0042                     	ds	2
  2510  0044                     dtoa@n:
  2511                           
  2512                           ; 8 bytes @ 0x24
  2513  0044                     	ds	8
  2514  004C                     dtoa@i:
  2515                           
  2516                           ; 2 bytes @ 0x2C
  2517  004C                     	ds	2
  2518  004E                     ?_vfpfcnvrt:
  2519  004E                     vfpfcnvrt@fmt:	
  2520                           ; 2 bytes @ 0x2E
  2521                           
  2522                           
  2523                           ; 1 bytes @ 0x2E
  2524  004E                     	ds	1
  2525  004F                     vfpfcnvrt@ap:
  2526                           
  2527                           ; 1 bytes @ 0x2F
  2528  004F                     	ds	1
  2529  0050                     ??_vfpfcnvrt:
  2530                           
  2531                           ; 1 bytes @ 0x30
  2532  0050                     	ds	5
  2533  0055                     vfpfcnvrt@ll:
  2534                           
  2535                           ; 8 bytes @ 0x35
  2536  0055                     	ds	8
  2537  005D                     vfpfcnvrt@vp:
  2538                           
  2539                           ; 1 bytes @ 0x3D
  2540  005D                     	ds	1
  2541  005E                     vfpfcnvrt@fp:
  2542                           
  2543                           ; 1 bytes @ 0x3E
  2544  005E                     	ds	1
  2545  005F                     ?_vfprintf:
  2546  005F                     vfprintf@fmt:	
  2547                           ; 2 bytes @ 0x3F
  2548                           
  2549                           
  2550                           ; 2 bytes @ 0x3F
  2551  005F                     	ds	2
  2552  0061                     vfprintf@ap:
  2553                           
  2554                           ; 1 bytes @ 0x41
  2555  0061                     	ds	1
  2556  0062                     ??_vfprintf:
  2557                           
  2558                           ; 1 bytes @ 0x42
  2559  0062                     	ds	2
  2560  0064                     vfprintf@fp:
  2561                           
  2562                           ; 1 bytes @ 0x44
  2563  0064                     	ds	1
  2564  0065                     vfprintf@cfmt:
  2565                           
  2566                           ; 2 bytes @ 0x45
  2567  0065                     	ds	2
  2568  0067                     ?_sprintf:
  2569  0067                     printf@fmt:	
  2570                           ; 2 bytes @ 0x47
  2571                           
  2572  0067                     sprintf@fmt:	
  2573                           ; 1 bytes @ 0x47
  2574                           
  2575                           
  2576                           ; 2 bytes @ 0x47
  2577  0067                     	ds	1
  2578  0068                     printf@ap:
  2579                           
  2580                           ; 1 bytes @ 0x48
  2581  0068                     	ds	3
  2582  006B                     ??_main:
  2583                           
  2584                           ; 1 bytes @ 0x4B
  2585  006B                     	ds	2
  2586                           
  2587                           	psect	maintext
  2588  0319                     __pmaintext:	
  2589 ;;
  2590 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2591 ;;
  2592 ;; *************** function _main *****************
  2593 ;; Defined at:
  2594 ;;		line 13 in file "Main.c"
  2595 ;; Parameters:    Size  Location     Type
  2596 ;;		None
  2597 ;; Auto vars:     Size  Location     Type
  2598 ;;  buffer         32    7[BANK1 ] unsigned char [32]
  2599 ;;  contador        1   40[BANK1 ] unsigned char 
  2600 ;;  rx              1   39[BANK1 ] unsigned char 
  2601 ;; Return value:  Size  Location     Type
  2602 ;;                  1    wreg      void 
  2603 ;; Registers used:
  2604 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2605 ;; Tracked objects:
  2606 ;;		On entry : B1F/0
  2607 ;;		On exit  : 0/0
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2611 ;;      Locals:         0       0      34       0       0       0       0       0       0       0       0       0       
      +0       0
  2612 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2613 ;;      Totals:         0       2      34       0       0       0       0       0       0       0       0       0       
      +0       0
  2614 ;;Total ram usage:       36 bytes
  2615 ;; Hardware stack levels required when called: 9
  2616 ;; This function calls:
  2617 ;;		_adc_init
  2618 ;;		_port_init
  2619 ;;		_printf
  2620 ;;		_serial_init
  2621 ;;		_sprintf
  2622 ;;		_uart_rx
  2623 ;; This function is called by:
  2624 ;;		Startup code after reset
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           
  2628                           
  2629                           ;psect for function _main
  2630  0319                     _main:
  2631  0319                     l1542:	
  2632                           ;incstack = 0
  2633                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2634                           
  2635                           
  2636                           ;Main.c: 14:     uint8_t rx, buffer[32], contador = 0;
  2637  0319  0021               	movlb	1	; select bank1
  2638  031A  01C8               	clrf	main@contador^(0+128)
  2639  031B                     l1544:
  2640                           
  2641                           ;Main.c: 16:     port_init();
  2642  031B  3180  20DF  3183   	fcall	_port_init
  2643  031E                     l1546:
  2644                           
  2645                           ;Main.c: 17:     serial_init(9600);
  2646  031E  3000               	movlw	0
  2647  031F  0020               	movlb	0	; select bank0
  2648  0320  00A3               	movwf	serial_init@baudios+3
  2649  0321  3000               	movlw	0
  2650  0322  00A2               	movwf	serial_init@baudios+2
  2651  0323  3025               	movlw	37
  2652  0324  00A1               	movwf	serial_init@baudios+1
  2653  0325  3080               	movlw	128
  2654  0326  00A0               	movwf	serial_init@baudios
  2655  0327  3181  21DC  3183   	fcall	_serial_init
  2656  032A                     l1548:
  2657                           
  2658                           ;Main.c: 18:     adc_init();
  2659  032A  3180  20D2  3183   	fcall	_adc_init
  2660  032D                     l1550:
  2661                           
  2662                           ;Main.c: 22:         LATA = LATA | (1<<3);
  2663  032D  0020               	movlb	0	; select bank0
  2664  032E  0816               	movf	22,w	;volatile
  2665  032F  3808               	iorlw	8
  2666  0330  0096               	movwf	22	;volatile
  2667  0331                     l1552:
  2668                           
  2669                           ;Main.c: 23:         _delay((unsigned long)((500)*(32000000UL/4000.0)));
  2670  0331  3015               	movlw	21
  2671  0332  0020               	movlb	0	; select bank0
  2672  0333  00EC               	movwf	??_main+1
  2673  0334  304B               	movlw	75
  2674  0335  00EB               	movwf	??_main
  2675  0336  30BE               	movlw	190
  2676  0337                     u1457:
  2677  0337  0B89               	decfsz	9,f
  2678  0338  2B37               	goto	u1457
  2679  0339  0BEB               	decfsz	??_main,f
  2680  033A  2B37               	goto	u1457
  2681  033B  0BEC               	decfsz	??_main+1,f
  2682  033C  2B37               	goto	u1457
  2683  033D  0000               	nop
  2684  033E                     l1554:
  2685                           
  2686                           ;Main.c: 24:         LATA = LATA & ~(1<<3);
  2687  033E  0020               	movlb	0	; select bank0
  2688  033F  0816               	movf	22,w	;volatile
  2689  0340  39F7               	andlw	247
  2690  0341  0096               	movwf	22	;volatile
  2691  0342                     l1556:
  2692                           
  2693                           ;Main.c: 25:         _delay((unsigned long)((500)*(32000000UL/4000.0)));
  2694  0342  3015               	movlw	21
  2695  0343  0020               	movlb	0	; select bank0
  2696  0344  00EC               	movwf	??_main+1
  2697  0345  304B               	movlw	75
  2698  0346  00EB               	movwf	??_main
  2699  0347  30BE               	movlw	190
  2700  0348                     u1467:
  2701  0348  0B89               	decfsz	9,f
  2702  0349  2B48               	goto	u1467
  2703  034A  0BEB               	decfsz	??_main,f
  2704  034B  2B48               	goto	u1467
  2705  034C  0BEC               	decfsz	??_main+1,f
  2706  034D  2B48               	goto	u1467
  2707  034E  0000               	nop
  2708  034F                     l1558:
  2709                           
  2710                           ;Main.c: 26:         sprintf(buffer,"hola mundo %i\n",contador++);
  2711  034F  3000               	movlw	low (STR_1| (0+32768))
  2712  0350  0020               	movlb	0	; select bank0
  2713  0351  00E7               	movwf	sprintf@fmt
  2714  0352  3088               	movlw	high (STR_1| (0+32768))
  2715  0353  00E8               	movwf	sprintf@fmt+1
  2716  0354  0021               	movlb	1	; select bank1
  2717  0355  0848               	movf	main@contador^(0+128),w
  2718  0356  0020               	movlb	0	; select bank0
  2719  0357  00EB               	movwf	??_main
  2720  0358  01EC               	clrf	??_main+1
  2721  0359  086B               	movf	??_main,w
  2722  035A  00E9               	movwf	?_sprintf+2
  2723  035B  086C               	movf	??_main+1,w
  2724  035C  00EA               	movwf	?_sprintf+3
  2725  035D  30A7               	movlw	(low (main@buffer| 0))& (0+255)
  2726  035E  3181  215F  3183   	fcall	_sprintf
  2727  0361                     l1560:
  2728  0361  3001               	movlw	1
  2729  0362  0020               	movlb	0	; select bank0
  2730  0363  00EB               	movwf	??_main
  2731  0364  086B               	movf	??_main,w
  2732  0365  0021               	movlb	1	; select bank1
  2733  0366  07C8               	addwf	main@contador^(0+128),f
  2734  0367                     l1562:
  2735                           
  2736                           ;Main.c: 28:         printf(buffer);
  2737  0367  30A7               	movlw	(low (main@buffer| 0))& (0+255)
  2738  0368  3180  20FB  3183   	fcall	_printf
  2739  036B                     l1564:
  2740                           
  2741                           ;Main.c: 32:         if (((PIR3>>5) & 0x01) ==1){
  2742  036B  002E               	movlb	14	; select bank14
  2743  036C  080F               	movf	15,w	;volatile
  2744  036D  0020               	movlb	0	; select bank0
  2745  036E  00EB               	movwf	??_main
  2746  036F  3005               	movlw	5
  2747  0370                     u1415:
  2748  0370  36EB               	lsrf	??_main,f
  2749  0371  0B89               	decfsz	9,f
  2750  0372  2B70               	goto	u1415
  2751  0373  1C6B               	btfss	??_main,0
  2752  0374  2B76               	goto	u1421
  2753  0375  2B77               	goto	u1420
  2754  0376                     u1421:
  2755  0376  2B7F               	goto	l1568
  2756  0377                     u1420:
  2757  0377                     l1566:
  2758                           
  2759                           ;Main.c: 33:             rx = uart_rx();
  2760  0377  3181  2141  3183   	fcall	_uart_rx
  2761  037A  0020               	movlb	0	; select bank0
  2762  037B  00EB               	movwf	??_main
  2763  037C  086B               	movf	??_main,w
  2764  037D  0021               	movlb	1	; select bank1
  2765  037E  00C7               	movwf	main@rx^(0+128)
  2766  037F                     l1568:
  2767                           
  2768                           ;Main.c: 36:         if (rx == 'b'){
  2769  037F  3062               	movlw	98
  2770  0380  0021               	movlb	1	; select bank1
  2771  0381  0647               	xorwf	main@rx^(0+128),w
  2772  0382  1D03               	btfss	3,2
  2773  0383  2B85               	goto	u1431
  2774  0384  2B86               	goto	u1430
  2775  0385                     u1431:
  2776  0385  2B8B               	goto	l1572
  2777  0386                     u1430:
  2778  0386                     l1570:
  2779                           
  2780                           ;Main.c: 37:             LATA = LATA | (1<<0);
  2781  0386  0020               	movlb	0	; select bank0
  2782  0387  0816               	movf	22,w	;volatile
  2783  0388  3801               	iorlw	1
  2784  0389  0096               	movwf	22	;volatile
  2785                           
  2786                           ;Main.c: 38:         }else{
  2787  038A  2B2D               	goto	l1550
  2788  038B                     l1572:
  2789                           
  2790                           ;Main.c: 39:             LATA = LATA & ~(1<<0);
  2791  038B  0020               	movlb	0	; select bank0
  2792  038C  0816               	movf	22,w	;volatile
  2793  038D  39FE               	andlw	254
  2794  038E  0096               	movwf	22	;volatile
  2795  038F  2B2D               	goto	l1550
  2796  0390  3180  2802         	ljmp	start
  2797  0392                     __end_of_main:
  2798                           
  2799                           	psect	text1
  2800  0141                     __ptext1:	
  2801 ;; *************** function _uart_rx *****************
  2802 ;; Defined at:
  2803 ;;		line 39 in file "uart.c"
  2804 ;; Parameters:    Size  Location     Type
  2805 ;;		None
  2806 ;; Auto vars:     Size  Location     Type
  2807 ;;		None
  2808 ;; Return value:  Size  Location     Type
  2809 ;;                  1    wreg      unsigned char 
  2810 ;; Registers used:
  2811 ;;		wreg, status,2, status,0
  2812 ;; Tracked objects:
  2813 ;;		On entry : 0/0
  2814 ;;		On exit  : 0/0
  2815 ;;		Unchanged: 0/0
  2816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2819 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2820 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2821 ;;Total ram usage:        1 bytes
  2822 ;; Hardware stack levels used: 1
  2823 ;; This function calls:
  2824 ;;		Nothing
  2825 ;; This function is called by:
  2826 ;;		_main
  2827 ;;		_getch
  2828 ;; This function uses a non-reentrant model
  2829 ;;
  2830                           
  2831                           
  2832                           ;psect for function _uart_rx
  2833  0141                     _uart_rx:
  2834  0141                     l1530:	
  2835                           ;incstack = 0
  2836                           ; Regs used in _uart_rx: [wreg+status,2+status,0]
  2837                           
  2838  0141                     l1532:	
  2839                           ;uart.c: 43:     while (((PIR3>>5) & 0x01) == 0){}
  2840                           
  2841  0141  002E               	movlb	14	; select bank14
  2842  0142  080F               	movf	15,w	;volatile
  2843  0143  00F0               	movwf	??_uart_rx
  2844  0144  3005               	movlw	5
  2845  0145                     u1375:
  2846  0145  36F0               	lsrf	??_uart_rx,f
  2847  0146  0B89               	decfsz	9,f
  2848  0147  2945               	goto	u1375
  2849  0148  1C70               	btfss	??_uart_rx,0
  2850  0149  294B               	goto	u1381
  2851  014A  294C               	goto	u1380
  2852  014B                     u1381:
  2853  014B  2941               	goto	l1532
  2854  014C                     u1380:
  2855  014C                     l1534:
  2856                           
  2857                           ;uart.c: 45:     if( ((RC1STA >> 1)& 0x01) == 1){
  2858  014C  0022               	movlb	2	; select bank2
  2859  014D  081D               	movf	29,w	;volatile
  2860  014E  00F0               	movwf	??_uart_rx
  2861  014F  3001               	movlw	1
  2862  0150                     u1395:
  2863  0150  36F0               	lsrf	??_uart_rx,f
  2864  0151  0B89               	decfsz	9,f
  2865  0152  2950               	goto	u1395
  2866  0153  1C70               	btfss	??_uart_rx,0
  2867  0154  2956               	goto	u1401
  2868  0155  2957               	goto	u1400
  2869  0156                     u1401:
  2870  0156  295D               	goto	l1538
  2871  0157                     u1400:
  2872  0157                     l1536:
  2873                           
  2874                           ;uart.c: 46:         RC1STA = RC1STA & ~(1<<4);
  2875  0157  081D               	movf	29,w	;volatile
  2876  0158  39EF               	andlw	239
  2877  0159  009D               	movwf	29	;volatile
  2878                           
  2879                           ;uart.c: 47:         RC1STA = RC1STA | (1<<4);
  2880  015A  081D               	movf	29,w	;volatile
  2881  015B  3810               	iorlw	16
  2882  015C  009D               	movwf	29	;volatile
  2883  015D                     l1538:
  2884                           
  2885                           ;uart.c: 53:       return RCREG;
  2886  015D  0819               	movf	25,w	;volatile
  2887  015E                     l78:
  2888  015E  0008               	return
  2889  015F                     __end_of_uart_rx:
  2890                           
  2891                           	psect	text2
  2892  015F                     __ptext2:	
  2893 ;; *************** function _sprintf *****************
  2894 ;; Defined at:
  2895 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  2896 ;; Parameters:    Size  Location     Type
  2897 ;;  s               1    wreg     PTR unsigned char 
  2898 ;;		 -> main@buffer(32), 
  2899 ;;  fmt             2   71[BANK0 ] PTR const unsigned char 
  2900 ;;		 -> STR_1(15), 
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;  s               1    1[BANK1 ] PTR unsigned char 
  2903 ;;		 -> main@buffer(32), 
  2904 ;;  f               5    2[BANK1 ] struct _IO_FILE
  2905 ;;  ret             2    0        int 
  2906 ;;  ap              1    0[BANK1 ] PTR void [1]
  2907 ;;		 -> ?_printf(2), ?_sprintf(2), 
  2908 ;; Return value:  Size  Location     Type
  2909 ;;                  2   71[BANK0 ] int 
  2910 ;; Registers used:
  2911 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2912 ;; Tracked objects:
  2913 ;;		On entry : 0/0
  2914 ;;		On exit  : 0/0
  2915 ;;		Unchanged: 0/0
  2916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2917 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2918 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  2919 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2920 ;;      Totals:         1       4       7       0       0       0       0       0       0       0       0       0       
      +0       0
  2921 ;;Total ram usage:       12 bytes
  2922 ;; Hardware stack levels used: 1
  2923 ;; Hardware stack levels required when called: 8
  2924 ;; This function calls:
  2925 ;;		_vfprintf
  2926 ;; This function is called by:
  2927 ;;		_main
  2928 ;; This function uses a non-reentrant model
  2929 ;;
  2930                           
  2931                           
  2932                           ;psect for function _sprintf
  2933  015F                     _sprintf:
  2934                           
  2935                           ;incstack = 0
  2936                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2937                           ;sprintf@s stored from wreg
  2938  015F  0021               	movlb	1	; select bank1
  2939  0160  00A1               	movwf	sprintf@s^(0+128)
  2940  0161                     l1512:
  2941  0161  3069               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  2942  0162  00FD               	movwf	??_sprintf
  2943  0163  087D               	movf	??_sprintf,w
  2944  0164  00A0               	movwf	sprintf@ap^(0+128)
  2945  0165  0821               	movf	sprintf@s^(0+128),w
  2946  0166  00FD               	movwf	??_sprintf
  2947  0167  087D               	movf	??_sprintf,w
  2948  0168  00A2               	movwf	sprintf@f^(0+128)
  2949  0169                     l1514:
  2950  0169  01A3               	clrf	(sprintf@f^(0+128)+1)
  2951  016A  01A4               	clrf	((sprintf@f+1)^(0+128)+1)
  2952  016B                     l1516:
  2953  016B  01A5               	clrf	(sprintf@f^(0+128)+3)
  2954  016C  01A6               	clrf	((sprintf@f+1)^(0+128)+3)
  2955  016D                     l1518:
  2956  016D  0020               	movlb	0	; select bank0
  2957  016E  0868               	movf	sprintf@fmt+1,w
  2958  016F  00E0               	movwf	vfprintf@fmt+1
  2959  0170  0867               	movf	sprintf@fmt,w
  2960  0171  00DF               	movwf	vfprintf@fmt
  2961  0172  30A0               	movlw	(low (sprintf@ap| 0))& (0+255)
  2962  0173  00FD               	movwf	??_sprintf
  2963  0174  087D               	movf	??_sprintf,w
  2964  0175  00E1               	movwf	vfprintf@ap
  2965  0176  30A2               	movlw	(low (sprintf@f| 0))& (0+255)
  2966  0177  3181  21AB  3181   	fcall	_vfprintf
  2967  017A                     l1520:
  2968  017A  0021               	movlb	1	; select bank1
  2969  017B  0823               	movf	(sprintf@f^(0+128)+1),w
  2970  017C  0721               	addwf	sprintf@s^(0+128),w
  2971  017D  00FD               	movwf	??_sprintf
  2972  017E  087D               	movf	??_sprintf,w
  2973  017F  0086               	movwf	6
  2974  0180  0187               	clrf	7
  2975  0181  0181               	clrf	1
  2976  0182                     l711:
  2977  0182  0008               	return
  2978  0183                     __end_of_sprintf:
  2979                           
  2980                           	psect	text3
  2981  01DC                     __ptext3:	
  2982 ;; *************** function _serial_init *****************
  2983 ;; Defined at:
  2984 ;;		line 3 in file "uart.c"
  2985 ;; Parameters:    Size  Location     Type
  2986 ;;  baudios         4    0[BANK0 ] unsigned long 
  2987 ;; Auto vars:     Size  Location     Type
  2988 ;;  sx              2    8[BANK0 ] unsigned short 
  2989 ;; Return value:  Size  Location     Type
  2990 ;;                  1    wreg      void 
  2991 ;; Registers used:
  2992 ;;		wreg, status,2, status,0, pclath, cstack
  2993 ;; Tracked objects:
  2994 ;;		On entry : 0/0
  2995 ;;		On exit  : 0/0
  2996 ;;		Unchanged: 0/0
  2997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2998 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2999 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3000 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3001 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3002 ;;Total ram usage:       10 bytes
  3003 ;; Hardware stack levels used: 1
  3004 ;; Hardware stack levels required when called: 1
  3005 ;; This function calls:
  3006 ;;		___lldiv
  3007 ;; This function is called by:
  3008 ;;		_main
  3009 ;; This function uses a non-reentrant model
  3010 ;;
  3011                           
  3012                           
  3013                           ;psect for function _serial_init
  3014  01DC                     _serial_init:
  3015  01DC                     l1498:	
  3016                           ;incstack = 0
  3017                           ; Regs used in _serial_init: [wreg+status,2+status,0+pclath+cstack]
  3018                           
  3019                           
  3020                           ;uart.c: 4:     uint16_t sx;;uart.c: 6:     BAUD1CONbits.BRG16 = 0;
  3021  01DC  0022               	movlb	2	; select bank2
  3022  01DD  119F               	bcf	31,3	;volatile
  3023  01DE                     l1500:
  3024                           
  3025                           ;uart.c: 9:     RC1STA = 0b10010000;
  3026  01DE  3090               	movlw	144
  3027  01DF  009D               	movwf	29	;volatile
  3028                           
  3029                           ;uart.c: 15:     TX1STA = 0b00100000;
  3030  01E0  3020               	movlw	32
  3031  01E1  009E               	movwf	30	;volatile
  3032  01E2                     l1502:
  3033                           
  3034                           ;uart.c: 19:     sx = ((32000000UL/baudios)/64 ) - 1;
  3035  01E2  0020               	movlb	0	; select bank0
  3036  01E3  0823               	movf	serial_init@baudios+3,w
  3037  01E4  00F3               	movwf	___lldiv@divisor+3
  3038  01E5  0822               	movf	serial_init@baudios+2,w
  3039  01E6  00F2               	movwf	___lldiv@divisor+2
  3040  01E7  0821               	movf	serial_init@baudios+1,w
  3041  01E8  00F1               	movwf	___lldiv@divisor+1
  3042  01E9  0820               	movf	serial_init@baudios,w
  3043  01EA  00F0               	movwf	___lldiv@divisor
  3044  01EB  3001               	movlw	1
  3045  01EC  00F7               	movwf	___lldiv@dividend+3
  3046  01ED  30E8               	movlw	232
  3047  01EE  00F6               	movwf	___lldiv@dividend+2
  3048  01EF  3048               	movlw	72
  3049  01F0  00F5               	movwf	___lldiv@dividend+1
  3050  01F1  3000               	movlw	0
  3051  01F2  00F4               	movwf	___lldiv@dividend
  3052  01F3  3182  22BF  3181   	fcall	___lldiv
  3053  01F6  0870               	movf	?___lldiv,w
  3054  01F7  0020               	movlb	0	; select bank0
  3055  01F8  00A4               	movwf	??_serial_init
  3056  01F9  0871               	movf	?___lldiv+1,w
  3057  01FA  00A5               	movwf	??_serial_init+1
  3058  01FB  0872               	movf	?___lldiv+2,w
  3059  01FC  00A6               	movwf	??_serial_init+2
  3060  01FD  0873               	movf	?___lldiv+3,w
  3061  01FE  00A7               	movwf	??_serial_init+3
  3062  01FF  3006               	movlw	6
  3063  0200                     u1365:
  3064  0200  36A7               	lsrf	??_serial_init+3,f
  3065  0201  0CA6               	rrf	??_serial_init+2,f
  3066  0202  0CA5               	rrf	??_serial_init+1,f
  3067  0203  0CA4               	rrf	??_serial_init,f
  3068  0204                     u1360:
  3069  0204  0B89               	decfsz	9,f
  3070  0205  2A00               	goto	u1365
  3071  0206  0824               	movf	??_serial_init,w
  3072  0207  3EFF               	addlw	255
  3073  0208  00A8               	movwf	serial_init@sx
  3074  0209  30FF               	movlw	255
  3075  020A  3D25               	addwfc	??_serial_init+1,w
  3076  020B  00A9               	movwf	serial_init@sx+1
  3077  020C                     l1504:
  3078                           
  3079                           ;uart.c: 20:     SP1BRGL = (uint8_t)sx;
  3080  020C  0828               	movf	serial_init@sx,w
  3081  020D  0022               	movlb	2	; select bank2
  3082  020E  009B               	movwf	27	;volatile
  3083  020F                     l1506:
  3084                           
  3085                           ;uart.c: 21:     SP1BRGH = (uint8_t)(sx>>8);
  3086  020F  0020               	movlb	0	; select bank0
  3087  0210  0829               	movf	serial_init@sx+1,w
  3088  0211  0022               	movlb	2	; select bank2
  3089  0212  009C               	movwf	28	;volatile
  3090  0213                     l1508:
  3091                           
  3092                           ;uart.c: 25:     RC0PPS = 0x10;
  3093  0213  3010               	movlw	16
  3094  0214  003E               	movlb	30	; select bank30
  3095  0215  00A0               	movwf	32	;volatile
  3096  0216                     l1510:
  3097                           
  3098                           ;uart.c: 27:     RXPPS = 0x11;
  3099  0216  3011               	movlw	17
  3100  0217  003D               	movlb	29	; select bank29
  3101  0218  00CB               	movwf	75	;volatile
  3102  0219                     l65:
  3103  0219  0008               	return
  3104  021A                     __end_of_serial_init:
  3105                           
  3106                           	psect	text4
  3107  02BF                     __ptext4:	
  3108 ;; *************** function ___lldiv *****************
  3109 ;; Defined at:
  3110 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
  3111 ;; Parameters:    Size  Location     Type
  3112 ;;  divisor         4    0[COMMON] unsigned long 
  3113 ;;  dividend        4    4[COMMON] unsigned long 
  3114 ;; Auto vars:     Size  Location     Type
  3115 ;;  quotient        4    9[COMMON] unsigned long 
  3116 ;;  counter         1   13[COMMON] unsigned char 
  3117 ;; Return value:  Size  Location     Type
  3118 ;;                  4    0[COMMON] unsigned long 
  3119 ;; Registers used:
  3120 ;;		wreg, status,2, status,0
  3121 ;; Tracked objects:
  3122 ;;		On entry : 0/0
  3123 ;;		On exit  : 0/0
  3124 ;;		Unchanged: 0/0
  3125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3126 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3127 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3128 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3129 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3130 ;;Total ram usage:       14 bytes
  3131 ;; Hardware stack levels used: 1
  3132 ;; This function calls:
  3133 ;;		Nothing
  3134 ;; This function is called by:
  3135 ;;		_serial_init
  3136 ;; This function uses a non-reentrant model
  3137 ;;
  3138                           
  3139                           
  3140                           ;psect for function ___lldiv
  3141  02BF                     ___lldiv:
  3142  02BF                     l1456:	
  3143                           ;incstack = 0
  3144                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3145                           
  3146  02BF  3000               	movlw	0
  3147  02C0  00FC               	movwf	___lldiv@quotient+3
  3148  02C1  3000               	movlw	0
  3149  02C2  00FB               	movwf	___lldiv@quotient+2
  3150  02C3  3000               	movlw	0
  3151  02C4  00FA               	movwf	___lldiv@quotient+1
  3152  02C5  3000               	movlw	0
  3153  02C6  00F9               	movwf	___lldiv@quotient
  3154  02C7  0873               	movf	___lldiv@divisor+3,w
  3155  02C8  0472               	iorwf	___lldiv@divisor+2,w
  3156  02C9  0471               	iorwf	___lldiv@divisor+1,w
  3157  02CA  0470               	iorwf	___lldiv@divisor,w
  3158  02CB  1903               	skipnz
  3159  02CC  2ACE               	goto	u1281
  3160  02CD  2ACF               	goto	u1280
  3161  02CE                     u1281:
  3162  02CE  2B10               	goto	l1476
  3163  02CF                     u1280:
  3164  02CF                     l1458:
  3165  02CF  01FD               	clrf	___lldiv@counter
  3166  02D0  0AFD               	incf	___lldiv@counter,f
  3167  02D1  2ADD               	goto	l1462
  3168  02D2                     l1460:
  3169  02D2  3001               	movlw	1
  3170  02D3                     u1295:
  3171  02D3  35F0               	lslf	___lldiv@divisor,f
  3172  02D4  0DF1               	rlf	___lldiv@divisor+1,f
  3173  02D5  0DF2               	rlf	___lldiv@divisor+2,f
  3174  02D6  0DF3               	rlf	___lldiv@divisor+3,f
  3175  02D7  0B89               	decfsz	9,f
  3176  02D8  2AD3               	goto	u1295
  3177  02D9  3001               	movlw	1
  3178  02DA  00F8               	movwf	??___lldiv
  3179  02DB  0878               	movf	??___lldiv,w
  3180  02DC  07FD               	addwf	___lldiv@counter,f
  3181  02DD                     l1462:
  3182  02DD  1FF3               	btfss	___lldiv@divisor+3,7
  3183  02DE  2AE0               	goto	u1301
  3184  02DF  2AE1               	goto	u1300
  3185  02E0                     u1301:
  3186  02E0  2AD2               	goto	l1460
  3187  02E1                     u1300:
  3188  02E1                     l1464:
  3189  02E1  3001               	movlw	1
  3190  02E2                     u1315:
  3191  02E2  35F9               	lslf	___lldiv@quotient,f
  3192  02E3  0DFA               	rlf	___lldiv@quotient+1,f
  3193  02E4  0DFB               	rlf	___lldiv@quotient+2,f
  3194  02E5  0DFC               	rlf	___lldiv@quotient+3,f
  3195  02E6  0B89               	decfsz	9,f
  3196  02E7  2AE2               	goto	u1315
  3197  02E8                     l1466:
  3198  02E8  0873               	movf	___lldiv@divisor+3,w
  3199  02E9  0277               	subwf	___lldiv@dividend+3,w
  3200  02EA  1D03               	skipz
  3201  02EB  2AF6               	goto	u1325
  3202  02EC  0872               	movf	___lldiv@divisor+2,w
  3203  02ED  0276               	subwf	___lldiv@dividend+2,w
  3204  02EE  1D03               	skipz
  3205  02EF  2AF6               	goto	u1325
  3206  02F0  0871               	movf	___lldiv@divisor+1,w
  3207  02F1  0275               	subwf	___lldiv@dividend+1,w
  3208  02F2  1D03               	skipz
  3209  02F3  2AF6               	goto	u1325
  3210  02F4  0870               	movf	___lldiv@divisor,w
  3211  02F5  0274               	subwf	___lldiv@dividend,w
  3212  02F6                     u1325:
  3213  02F6  1C03               	skipc
  3214  02F7  2AF9               	goto	u1321
  3215  02F8  2AFA               	goto	u1320
  3216  02F9                     u1321:
  3217  02F9  2B03               	goto	l1472
  3218  02FA                     u1320:
  3219  02FA                     l1468:
  3220  02FA  0870               	movf	___lldiv@divisor,w
  3221  02FB  02F4               	subwf	___lldiv@dividend,f
  3222  02FC  0871               	movf	___lldiv@divisor+1,w
  3223  02FD  3BF5               	subwfb	___lldiv@dividend+1,f
  3224  02FE  0872               	movf	___lldiv@divisor+2,w
  3225  02FF  3BF6               	subwfb	___lldiv@dividend+2,f
  3226  0300  0873               	movf	___lldiv@divisor+3,w
  3227  0301  3BF7               	subwfb	___lldiv@dividend+3,f
  3228  0302                     l1470:
  3229  0302  1479               	bsf	___lldiv@quotient,0
  3230  0303                     l1472:
  3231  0303  3001               	movlw	1
  3232  0304                     u1335:
  3233  0304  36F3               	lsrf	___lldiv@divisor+3,f
  3234  0305  0CF2               	rrf	___lldiv@divisor+2,f
  3235  0306  0CF1               	rrf	___lldiv@divisor+1,f
  3236  0307  0CF0               	rrf	___lldiv@divisor,f
  3237  0308  0B89               	decfsz	9,f
  3238  0309  2B04               	goto	u1335
  3239  030A                     l1474:
  3240  030A  3001               	movlw	1
  3241  030B  02FD               	subwf	___lldiv@counter,f
  3242  030C  1D03               	btfss	3,2
  3243  030D  2B0F               	goto	u1341
  3244  030E  2B10               	goto	u1340
  3245  030F                     u1341:
  3246  030F  2AE1               	goto	l1464
  3247  0310                     u1340:
  3248  0310                     l1476:
  3249  0310  087C               	movf	___lldiv@quotient+3,w
  3250  0311  00F3               	movwf	?___lldiv+3
  3251  0312  087B               	movf	___lldiv@quotient+2,w
  3252  0313  00F2               	movwf	?___lldiv+2
  3253  0314  087A               	movf	___lldiv@quotient+1,w
  3254  0315  00F1               	movwf	?___lldiv+1
  3255  0316  0879               	movf	___lldiv@quotient,w
  3256  0317  00F0               	movwf	?___lldiv
  3257  0318                     l284:
  3258  0318  0008               	return
  3259  0319                     __end_of___lldiv:
  3260                           
  3261                           	psect	text5
  3262  00FB                     __ptext5:	
  3263 ;; *************** function _printf *****************
  3264 ;; Defined at:
  3265 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  3266 ;; Parameters:    Size  Location     Type
  3267 ;;  fmt             1    wreg     PTR const unsigned char 
  3268 ;;		 -> main@buffer(32), 
  3269 ;; Auto vars:     Size  Location     Type
  3270 ;;  fmt             1   71[BANK0 ] PTR const unsigned char 
  3271 ;;		 -> main@buffer(32), 
  3272 ;;  ret             2    0        int 
  3273 ;;  ap              1   72[BANK0 ] PTR void [1]
  3274 ;;		 -> ?_printf(2), ?_sprintf(2), 
  3275 ;; Return value:  Size  Location     Type
  3276 ;;                  2   14[None  ] int 
  3277 ;; Registers used:
  3278 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3279 ;; Tracked objects:
  3280 ;;		On entry : 0/0
  3281 ;;		On exit  : 0/0
  3282 ;;		Unchanged: 0/0
  3283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3285 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3286 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3287 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3288 ;;Total ram usage:        3 bytes
  3289 ;; Hardware stack levels used: 1
  3290 ;; Hardware stack levels required when called: 8
  3291 ;; This function calls:
  3292 ;;		_vfprintf
  3293 ;; This function is called by:
  3294 ;;		_main
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           
  3298                           
  3299                           ;psect for function _printf
  3300  00FB                     _printf:
  3301                           
  3302                           ;incstack = 0
  3303                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3304                           ;printf@fmt stored from wreg
  3305  00FB  0020               	movlb	0	; select bank0
  3306  00FC  00E7               	movwf	printf@fmt
  3307  00FD                     l1524:
  3308  00FD  3070               	movlw	(low (?_printf| 0))& (0+255)
  3309  00FE  00FD               	movwf	??_printf
  3310  00FF  087D               	movf	??_printf,w
  3311  0100  00E8               	movwf	printf@ap
  3312  0101                     l1526:
  3313  0101  0867               	movf	printf@fmt,w
  3314  0102  00DF               	movwf	vfprintf@fmt
  3315  0103  3000               	movlw	0
  3316  0104  00E0               	movwf	vfprintf@fmt+1
  3317  0105  3068               	movlw	(low (printf@ap| 0))& (0+255)
  3318  0106  00FD               	movwf	??_printf
  3319  0107  087D               	movf	??_printf,w
  3320  0108  00E1               	movwf	vfprintf@ap
  3321  0109  3000               	movlw	0
  3322  010A  3181  21AB  3180   	fcall	_vfprintf
  3323  010D                     l818:
  3324  010D  0008               	return
  3325  010E                     __end_of_printf:
  3326                           
  3327                           	psect	text6
  3328  01AB                     __ptext6:	
  3329 ;; *************** function _vfprintf *****************
  3330 ;; Defined at:
  3331 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;  fp              1    wreg     PTR struct _IO_FILE
  3334 ;;		 -> NULL(0), sprintf@f(5), 
  3335 ;;  fmt             2   63[BANK0 ] PTR const unsigned char 
  3336 ;;		 -> STR_1(15), main@buffer(32), 
  3337 ;;  ap              1   65[BANK0 ] PTR PTR void 
  3338 ;;		 -> printf@ap(1), sprintf@ap(1), 
  3339 ;; Auto vars:     Size  Location     Type
  3340 ;;  fp              1   68[BANK0 ] PTR struct _IO_FILE
  3341 ;;		 -> NULL(0), sprintf@f(5), 
  3342 ;;  cfmt            2   69[BANK0 ] PTR unsigned char 
  3343 ;;		 -> STR_1(15), main@buffer(32), 
  3344 ;; Return value:  Size  Location     Type
  3345 ;;                  2   63[BANK0 ] int 
  3346 ;; Registers used:
  3347 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3348 ;; Tracked objects:
  3349 ;;		On entry : 0/0
  3350 ;;		On exit  : 0/0
  3351 ;;		Unchanged: 0/0
  3352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3353 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3354 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3355 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3356 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3357 ;;Total ram usage:        8 bytes
  3358 ;; Hardware stack levels used: 1
  3359 ;; Hardware stack levels required when called: 7
  3360 ;; This function calls:
  3361 ;;		_vfpfcnvrt
  3362 ;; This function is called by:
  3363 ;;		_sprintf
  3364 ;;		_printf
  3365 ;; This function uses a non-reentrant model
  3366 ;;
  3367                           
  3368                           
  3369                           ;psect for function _vfprintf
  3370  01AB                     _vfprintf:
  3371                           
  3372                           ;incstack = 0
  3373                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3374                           ;vfprintf@fp stored from wreg
  3375  01AB  0020               	movlb	0	; select bank0
  3376  01AC  00E4               	movwf	vfprintf@fp
  3377  01AD                     l1480:
  3378                           
  3379                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3380  01AD  0860               	movf	vfprintf@fmt+1,w
  3381  01AE  00E6               	movwf	vfprintf@cfmt+1
  3382  01AF  085F               	movf	vfprintf@fmt,w
  3383  01B0  00E5               	movwf	vfprintf@cfmt
  3384  01B1                     l1482:
  3385                           
  3386                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3387  01B1  0021               	movlb	1	; select bank1
  3388  01B2  01C9               	clrf	_nout^(0+128)
  3389  01B3  01CA               	clrf	(_nout+1)^(0+128)
  3390                           
  3391                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3392  01B4  29C9               	goto	l1486
  3393  01B5                     l1484:
  3394                           
  3395                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3396  01B5  3065               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  3397  01B6  00E2               	movwf	??_vfprintf
  3398  01B7  0862               	movf	??_vfprintf,w
  3399  01B8  00CE               	movwf	vfpfcnvrt@fmt
  3400  01B9  0861               	movf	vfprintf@ap,w
  3401  01BA  00E3               	movwf	??_vfprintf+1
  3402  01BB  0863               	movf	??_vfprintf+1,w
  3403  01BC  00CF               	movwf	vfpfcnvrt@ap
  3404  01BD  0864               	movf	vfprintf@fp,w
  3405  01BE  3185  257D  3181   	fcall	_vfpfcnvrt
  3406  01C1  0020               	movlb	0	; select bank0
  3407  01C2  084E               	movf	?_vfpfcnvrt,w
  3408  01C3  0021               	movlb	1	; select bank1
  3409  01C4  07C9               	addwf	_nout^(0+128),f
  3410  01C5  0020               	movlb	0	; select bank0
  3411  01C6  084F               	movf	?_vfpfcnvrt+1,w
  3412  01C7  0021               	movlb	1	; select bank1
  3413  01C8  3DCA               	addwfc	(_nout+1)^(0+128),f
  3414  01C9                     l1486:
  3415                           
  3416                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3417  01C9  0020               	movlb	0	; select bank0
  3418  01CA  0865               	movf	vfprintf@cfmt,w
  3419  01CB  0084               	movwf	4
  3420  01CC  0866               	movf	vfprintf@cfmt+1,w
  3421  01CD  0085               	movwf	5
  3422  01CE  0012               	moviw fsr0++
  3423  01CF  1D03               	btfss	3,2
  3424  01D0  29D2               	goto	u1351
  3425  01D1  29D3               	goto	u1350
  3426  01D2                     u1351:
  3427  01D2  29B5               	goto	l1484
  3428  01D3                     u1350:
  3429  01D3                     l1488:
  3430                           
  3431                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3432  01D3  0021               	movlb	1	; select bank1
  3433  01D4  084A               	movf	(_nout+1)^(0+128),w
  3434  01D5  0020               	movlb	0	; select bank0
  3435  01D6  00E0               	movwf	?_vfprintf+1
  3436  01D7  0021               	movlb	1	; select bank1
  3437  01D8  0849               	movf	_nout^(0+128),w
  3438  01D9  0020               	movlb	0	; select bank0
  3439  01DA  00DF               	movwf	?_vfprintf
  3440  01DB                     l784:
  3441  01DB  0008               	return
  3442  01DC                     __end_of_vfprintf:
  3443                           
  3444                           	psect	text7
  3445  057D                     __ptext7:	
  3446 ;; *************** function _vfpfcnvrt *****************
  3447 ;; Defined at:
  3448 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3449 ;; Parameters:    Size  Location     Type
  3450 ;;  fp              1    wreg     PTR struct _IO_FILE
  3451 ;;		 -> NULL(0), sprintf@f(5), 
  3452 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  3453 ;;		 -> vfprintf@cfmt(2), 
  3454 ;;  ap              1   47[BANK0 ] PTR PTR void 
  3455 ;;		 -> printf@ap(1), sprintf@ap(1), 
  3456 ;; Auto vars:     Size  Location     Type
  3457 ;;  fp              1   62[BANK0 ] PTR struct _IO_FILE
  3458 ;;		 -> NULL(0), sprintf@f(5), 
  3459 ;;  ll              8   53[BANK0 ] long long 
  3460 ;;  llu             8    0        unsigned long long 
  3461 ;;  f               4    0        unsigned long long 
  3462 ;;  ct              3    0        unsigned char [3]
  3463 ;;  i               2    0        int 
  3464 ;;  done            2    0        int 
  3465 ;;  cp              2    0        PTR unsigned char 
  3466 ;;  vp              1   61[BANK0 ] PTR void 
  3467 ;;		 -> ?_printf(2), ?_sprintf(2), 
  3468 ;;  c               1    0        unsigned char 
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  2   46[BANK0 ] int 
  3471 ;; Registers used:
  3472 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3478 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3479 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3480 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3481 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3482 ;;Total ram usage:       17 bytes
  3483 ;; Hardware stack levels used: 1
  3484 ;; Hardware stack levels required when called: 6
  3485 ;; This function calls:
  3486 ;;		_dtoa
  3487 ;;		_fputc
  3488 ;; This function is called by:
  3489 ;;		_vfprintf
  3490 ;; This function uses a non-reentrant model
  3491 ;;
  3492                           
  3493                           
  3494                           ;psect for function _vfpfcnvrt
  3495  057D                     _vfpfcnvrt:
  3496                           
  3497                           ;incstack = 0
  3498                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3499                           ;vfpfcnvrt@fp stored from wreg
  3500  057D  0020               	movlb	0	; select bank0
  3501  057E  00DE               	movwf	vfpfcnvrt@fp
  3502  057F                     l1400:
  3503                           
  3504                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3505  057F  084E               	movf	vfpfcnvrt@fmt,w
  3506  0580  0086               	movwf	6
  3507  0581  0187               	clrf	7
  3508  0582  3F40               	moviw [0]fsr1
  3509  0583  00D0               	movwf	??_vfpfcnvrt
  3510  0584  3F41               	moviw [1]fsr1
  3511  0585  00D1               	movwf	??_vfpfcnvrt+1
  3512  0586  0850               	movf	??_vfpfcnvrt,w
  3513  0587  0084               	movwf	4
  3514  0588  0851               	movf	??_vfpfcnvrt+1,w
  3515  0589  0085               	movwf	5
  3516  058A  0012               	moviw fsr0++
  3517  058B  3A25               	xorlw	37
  3518  058C  1D03               	btfss	3,2
  3519  058D  2D8F               	goto	u1231
  3520  058E  2D90               	goto	u1230
  3521  058F                     u1231:
  3522  058F  2E64               	goto	l1448
  3523  0590                     u1230:
  3524  0590                     l1402:
  3525                           
  3526                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3527  0590  084E               	movf	vfpfcnvrt@fmt,w
  3528  0591  0086               	movwf	6
  3529  0592  0187               	clrf	7
  3530  0593  3001               	movlw	1
  3531  0594  0781               	addwf	1,f
  3532  0595  3141               	addfsr 1,1
  3533  0596  1803               	skipnc
  3534  0597  0A81               	incf	1,f
  3535  0598                     l1404:
  3536                           
  3537                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3538  0598  0021               	movlb	1	; select bank1
  3539  0599  01CB               	clrf	_width^(0+128)
  3540  059A  01CC               	clrf	(_width+1)^(0+128)
  3541  059B  0020               	movlb	0	; select bank0
  3542  059C  01ED               	clrf	_flags
  3543  059D  01EE               	clrf	_flags+1
  3544  059E                     l1406:
  3545                           
  3546                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3547  059E  30FF               	movlw	255
  3548  059F  0021               	movlb	1	; select bank1
  3549  05A0  00CD               	movwf	_prec^(0+128)
  3550  05A1  30FF               	movlw	255
  3551  05A2  00CE               	movwf	(_prec^(0+128)+1)
  3552  05A3                     l1408:
  3553                           
  3554                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3555  05A3  0020               	movlb	0	; select bank0
  3556  05A4  084E               	movf	vfpfcnvrt@fmt,w
  3557  05A5  0086               	movwf	6
  3558  05A6  0187               	clrf	7
  3559  05A7  3F40               	moviw [0]fsr1
  3560  05A8  00D0               	movwf	??_vfpfcnvrt
  3561  05A9  3F41               	moviw [1]fsr1
  3562  05AA  00D1               	movwf	??_vfpfcnvrt+1
  3563  05AB  0850               	movf	??_vfpfcnvrt,w
  3564  05AC  0084               	movwf	4
  3565  05AD  0851               	movf	??_vfpfcnvrt+1,w
  3566  05AE  0085               	movwf	5
  3567  05AF  0012               	moviw fsr0++
  3568  05B0  3A64               	xorlw	100
  3569  05B1  1903               	btfsc	3,2
  3570  05B2  2DB4               	goto	u1241
  3571  05B3  2DB5               	goto	u1240
  3572  05B4                     u1241:
  3573  05B4  2DC6               	goto	l1412
  3574  05B5                     u1240:
  3575  05B5                     l1410:
  3576  05B5  084E               	movf	vfpfcnvrt@fmt,w
  3577  05B6  0086               	movwf	6
  3578  05B7  0187               	clrf	7
  3579  05B8  3F40               	moviw [0]fsr1
  3580  05B9  00D0               	movwf	??_vfpfcnvrt
  3581  05BA  3F41               	moviw [1]fsr1
  3582  05BB  00D1               	movwf	??_vfpfcnvrt+1
  3583  05BC  0850               	movf	??_vfpfcnvrt,w
  3584  05BD  0084               	movwf	4
  3585  05BE  0851               	movf	??_vfpfcnvrt+1,w
  3586  05BF  0085               	movwf	5
  3587  05C0  0012               	moviw fsr0++
  3588  05C1  3A69               	xorlw	105
  3589  05C2  1D03               	btfss	3,2
  3590  05C3  2DC5               	goto	u1251
  3591  05C4  2DC6               	goto	u1250
  3592  05C5                     u1251:
  3593  05C5  2E01               	goto	l1420
  3594  05C6                     u1250:
  3595  05C6                     l1412:
  3596                           
  3597                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3598  05C6  084E               	movf	vfpfcnvrt@fmt,w
  3599  05C7  0086               	movwf	6
  3600  05C8  0187               	clrf	7
  3601  05C9  3001               	movlw	1
  3602  05CA  0781               	addwf	1,f
  3603  05CB  3141               	addfsr 1,1
  3604  05CC  1803               	skipnc
  3605  05CD  0A81               	incf	1,f
  3606  05CE                     l1414:
  3607                           
  3608                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3609  05CE  084F               	movf	vfpfcnvrt@ap,w
  3610  05CF  0086               	movwf	6
  3611  05D0  0187               	clrf	7
  3612  05D1  0801               	movf	1,w
  3613  05D2  0084               	movwf	4
  3614  05D3  0185               	clrf	5
  3615  05D4  3002               	movlw	2
  3616  05D5  0781               	addwf	1,f
  3617  05D6  3F00               	moviw [0]fsr0
  3618  05D7  00D0               	movwf	??_vfpfcnvrt
  3619  05D8  3F01               	moviw [1]fsr0
  3620  05D9  00D1               	movwf	??_vfpfcnvrt+1
  3621  05DA  0850               	movf	??_vfpfcnvrt,w
  3622  05DB  00D5               	movwf	vfpfcnvrt@ll
  3623  05DC  0851               	movf	??_vfpfcnvrt+1,w
  3624  05DD  00D6               	movwf	vfpfcnvrt@ll+1
  3625  05DE  0D89               	rlf	9,f
  3626  05DF  3B89               	subwfb	9,f
  3627  05E0  0989               	comf	9,f
  3628  05E1  00D7               	movwf	vfpfcnvrt@ll+2
  3629  05E2  00D8               	movwf	vfpfcnvrt@ll+3
  3630  05E3  00D9               	movwf	vfpfcnvrt@ll+4
  3631  05E4  00DA               	movwf	vfpfcnvrt@ll+5
  3632  05E5  00DB               	movwf	vfpfcnvrt@ll+6
  3633  05E6  00DC               	movwf	vfpfcnvrt@ll+7
  3634  05E7                     l1416:
  3635                           
  3636                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3637  05E7  0855               	movf	vfpfcnvrt@ll,w
  3638  05E8  00B0               	movwf	dtoa@d
  3639  05E9  0856               	movf	vfpfcnvrt@ll+1,w
  3640  05EA  00B1               	movwf	dtoa@d+1
  3641  05EB  0857               	movf	vfpfcnvrt@ll+2,w
  3642  05EC  00B2               	movwf	dtoa@d+2
  3643  05ED  0858               	movf	vfpfcnvrt@ll+3,w
  3644  05EE  00B3               	movwf	dtoa@d+3
  3645  05EF  0859               	movf	vfpfcnvrt@ll+4,w
  3646  05F0  00B4               	movwf	dtoa@d+4
  3647  05F1  085A               	movf	vfpfcnvrt@ll+5,w
  3648  05F2  00B5               	movwf	dtoa@d+5
  3649  05F3  085B               	movf	vfpfcnvrt@ll+6,w
  3650  05F4  00B6               	movwf	dtoa@d+6
  3651  05F5  085C               	movf	vfpfcnvrt@ll+7,w
  3652  05F6  00B7               	movwf	dtoa@d+7
  3653  05F7  085E               	movf	vfpfcnvrt@fp,w
  3654  05F8  3186  2688  3185   	fcall	_dtoa
  3655  05FB  0020               	movlb	0	; select bank0
  3656  05FC  0831               	movf	?_dtoa+1,w
  3657  05FD  00CF               	movwf	?_vfpfcnvrt+1
  3658  05FE  0830               	movf	?_dtoa,w
  3659  05FF  00CE               	movwf	?_vfpfcnvrt
  3660  0600  2E87               	goto	l776
  3661  0601                     l1420:
  3662                           
  3663                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1099:         if 
      +                          (*fmt[0] == 'n') {
  3664  0601  084E               	movf	vfpfcnvrt@fmt,w
  3665  0602  0086               	movwf	6
  3666  0603  0187               	clrf	7
  3667  0604  3F40               	moviw [0]fsr1
  3668  0605  00D0               	movwf	??_vfpfcnvrt
  3669  0606  3F41               	moviw [1]fsr1
  3670  0607  00D1               	movwf	??_vfpfcnvrt+1
  3671  0608  0850               	movf	??_vfpfcnvrt,w
  3672  0609  0084               	movwf	4
  3673  060A  0851               	movf	??_vfpfcnvrt+1,w
  3674  060B  0085               	movwf	5
  3675  060C  0012               	moviw fsr0++
  3676  060D  3A6E               	xorlw	110
  3677  060E  1D03               	btfss	3,2
  3678  060F  2E11               	goto	u1261
  3679  0610  2E12               	goto	u1260
  3680  0611                     u1261:
  3681  0611  2E31               	goto	l1432
  3682  0612                     u1260:
  3683  0612                     l1422:
  3684                           
  3685                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1100:            
      +                           ++*fmt;
  3686  0612  084E               	movf	vfpfcnvrt@fmt,w
  3687  0613  0086               	movwf	6
  3688  0614  0187               	clrf	7
  3689  0615  3001               	movlw	1
  3690  0616  0781               	addwf	1,f
  3691  0617  3141               	addfsr 1,1
  3692  0618  1803               	skipnc
  3693  0619  0A81               	incf	1,f
  3694  061A                     l1424:
  3695                           
  3696                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1101:            
      +                           vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  3697  061A  084F               	movf	vfpfcnvrt@ap,w
  3698  061B  0086               	movwf	6
  3699  061C  0187               	clrf	7
  3700  061D  3F40               	moviw [0]fsr1
  3701  061E  0084               	movwf	4
  3702  061F  0185               	clrf	5
  3703  0620  0A81               	incf	1,f
  3704  0621  0800               	movf	0,w
  3705  0622  00D0               	movwf	??_vfpfcnvrt
  3706  0623  0850               	movf	??_vfpfcnvrt,w
  3707  0624  00DD               	movwf	vfpfcnvrt@vp
  3708  0625                     l1426:
  3709                           
  3710                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1102:            
      +                           *(int *)vp = nout;
  3711  0625  085D               	movf	vfpfcnvrt@vp,w
  3712  0626  0086               	movwf	6
  3713  0627  0187               	clrf	7
  3714  0628  0021               	movlb	1	; select bank1
  3715  0629  0849               	movf	_nout^(0+128),w
  3716  062A  3FC0               	movwi [0]fsr1
  3717  062B  084A               	movf	(_nout+1)^(0+128),w
  3718  062C  3FC1               	movwi [1]fsr1
  3719  062D                     l1428:
  3720                           
  3721                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1103:            
      +                           return 0;
  3722  062D  0020               	movlb	0	; select bank0
  3723  062E  01CE               	clrf	?_vfpfcnvrt
  3724  062F  01CF               	clrf	?_vfpfcnvrt+1
  3725  0630  2E87               	goto	l776
  3726  0631                     l1432:
  3727                           
  3728                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3729  0631  084E               	movf	vfpfcnvrt@fmt,w
  3730  0632  0086               	movwf	6
  3731  0633  0187               	clrf	7
  3732  0634  3F40               	moviw [0]fsr1
  3733  0635  00D0               	movwf	??_vfpfcnvrt
  3734  0636  3F41               	moviw [1]fsr1
  3735  0637  00D1               	movwf	??_vfpfcnvrt+1
  3736  0638  0850               	movf	??_vfpfcnvrt,w
  3737  0639  0084               	movwf	4
  3738  063A  0851               	movf	??_vfpfcnvrt+1,w
  3739  063B  0085               	movwf	5
  3740  063C  0012               	moviw fsr0++
  3741  063D  3A25               	xorlw	37
  3742  063E  1D03               	btfss	3,2
  3743  063F  2E41               	goto	u1271
  3744  0640  2E42               	goto	u1270
  3745  0641                     u1271:
  3746  0641  2E5B               	goto	l1442
  3747  0642                     u1270:
  3748  0642                     l1434:
  3749                           
  3750                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3751  0642  084E               	movf	vfpfcnvrt@fmt,w
  3752  0643  0086               	movwf	6
  3753  0644  0187               	clrf	7
  3754  0645  3001               	movlw	1
  3755  0646  0781               	addwf	1,f
  3756  0647  3141               	addfsr 1,1
  3757  0648  1803               	skipnc
  3758  0649  0A81               	incf	1,f
  3759  064A                     l1436:
  3760                           
  3761                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3762  064A  3025               	movlw	37
  3763  064B  00F3               	movwf	fputc@c
  3764  064C  3000               	movlw	0
  3765  064D  00F4               	movwf	fputc@c+1
  3766  064E  085E               	movf	vfpfcnvrt@fp,w
  3767  064F  00D0               	movwf	??_vfpfcnvrt
  3768  0650  0850               	movf	??_vfpfcnvrt,w
  3769  0651  00F5               	movwf	fputc@fp
  3770  0652  3182  221A  3185   	fcall	_fputc
  3771  0655                     l1438:
  3772                           
  3773                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3774  0655  3001               	movlw	1
  3775  0656  0020               	movlb	0	; select bank0
  3776  0657  00CE               	movwf	?_vfpfcnvrt
  3777  0658  3000               	movlw	0
  3778  0659  00CF               	movwf	?_vfpfcnvrt+1
  3779  065A  2E87               	goto	l776
  3780  065B                     l1442:
  3781                           
  3782                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3783  065B  084E               	movf	vfpfcnvrt@fmt,w
  3784  065C  0086               	movwf	6
  3785  065D  0187               	clrf	7
  3786  065E  3001               	movlw	1
  3787  065F  0781               	addwf	1,f
  3788  0660  3141               	addfsr 1,1
  3789  0661  1803               	skipnc
  3790  0662  0A81               	incf	1,f
  3791  0663  2E2D               	goto	l1428
  3792  0664                     l1448:
  3793                           
  3794                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3795  0664  084E               	movf	vfpfcnvrt@fmt,w
  3796  0665  0086               	movwf	6
  3797  0666  0187               	clrf	7
  3798  0667  3F40               	moviw [0]fsr1
  3799  0668  00D0               	movwf	??_vfpfcnvrt
  3800  0669  3F41               	moviw [1]fsr1
  3801  066A  00D1               	movwf	??_vfpfcnvrt+1
  3802  066B  0850               	movf	??_vfpfcnvrt,w
  3803  066C  0084               	movwf	4
  3804  066D  0851               	movf	??_vfpfcnvrt+1,w
  3805  066E  0085               	movwf	5
  3806  066F  0800               	movf	0,w	;code access
  3807  0670  00D2               	movwf	??_vfpfcnvrt+2
  3808  0671  01D3               	clrf	??_vfpfcnvrt+3
  3809  0672  0852               	movf	??_vfpfcnvrt+2,w
  3810  0673  00F3               	movwf	fputc@c
  3811  0674  0853               	movf	??_vfpfcnvrt+3,w
  3812  0675  00F4               	movwf	fputc@c+1
  3813  0676  085E               	movf	vfpfcnvrt@fp,w
  3814  0677  00D4               	movwf	??_vfpfcnvrt+4
  3815  0678  0854               	movf	??_vfpfcnvrt+4,w
  3816  0679  00F5               	movwf	fputc@fp
  3817  067A  3182  221A  3185   	fcall	_fputc
  3818  067D                     l1450:
  3819                           
  3820                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3821  067D  0020               	movlb	0	; select bank0
  3822  067E  084E               	movf	vfpfcnvrt@fmt,w
  3823  067F  0086               	movwf	6
  3824  0680  0187               	clrf	7
  3825  0681  3001               	movlw	1
  3826  0682  0781               	addwf	1,f
  3827  0683  3141               	addfsr 1,1
  3828  0684  1803               	skipnc
  3829  0685  0A81               	incf	1,f
  3830  0686  2E55               	goto	l1438
  3831  0687                     l776:
  3832  0687  0008               	return
  3833  0688                     __end_of_vfpfcnvrt:
  3834                           
  3835                           	psect	text8
  3836  0688                     __ptext8:	
  3837 ;; *************** function _dtoa *****************
  3838 ;; Defined at:
  3839 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3840 ;; Parameters:    Size  Location     Type
  3841 ;;  fp              1    wreg     PTR struct _IO_FILE
  3842 ;;		 -> NULL(0), sprintf@f(5), 
  3843 ;;  d               8   16[BANK0 ] long long 
  3844 ;; Auto vars:     Size  Location     Type
  3845 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  3846 ;;		 -> NULL(0), sprintf@f(5), 
  3847 ;;  n               8   36[BANK0 ] long long 
  3848 ;;  i               2   44[BANK0 ] int 
  3849 ;;  s               2   34[BANK0 ] int 
  3850 ;;  w               2   32[BANK0 ] int 
  3851 ;;  p               2   30[BANK0 ] int 
  3852 ;; Return value:  Size  Location     Type
  3853 ;;                  2   16[BANK0 ] int 
  3854 ;; Registers used:
  3855 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3856 ;; Tracked objects:
  3857 ;;		On entry : 0/0
  3858 ;;		On exit  : 0/0
  3859 ;;		Unchanged: 0/0
  3860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3861 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3862 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3863 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3864 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3865 ;;Total ram usage:       30 bytes
  3866 ;; Hardware stack levels used: 1
  3867 ;; Hardware stack levels required when called: 5
  3868 ;; This function calls:
  3869 ;;		___aodiv
  3870 ;;		___aomod
  3871 ;;		_abs
  3872 ;;		_pad
  3873 ;; This function is called by:
  3874 ;;		_vfpfcnvrt
  3875 ;; This function uses a non-reentrant model
  3876 ;;
  3877                           
  3878                           
  3879                           ;psect for function _dtoa
  3880  0688                     _dtoa:
  3881                           
  3882                           ;incstack = 0
  3883                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3884                           ;dtoa@fp stored from wreg
  3885  0688  0020               	movlb	0	; select bank0
  3886  0689  00BD               	movwf	dtoa@fp
  3887  068A                     l1342:
  3888                           
  3889                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  3890  068A  0830               	movf	dtoa@d,w
  3891  068B  00C4               	movwf	dtoa@n
  3892  068C  0831               	movf	dtoa@d+1,w
  3893  068D  00C5               	movwf	dtoa@n+1
  3894  068E  0832               	movf	dtoa@d+2,w
  3895  068F  00C6               	movwf	dtoa@n+2
  3896  0690  0833               	movf	dtoa@d+3,w
  3897  0691  00C7               	movwf	dtoa@n+3
  3898  0692  0834               	movf	dtoa@d+4,w
  3899  0693  00C8               	movwf	dtoa@n+4
  3900  0694  0835               	movf	dtoa@d+5,w
  3901  0695  00C9               	movwf	dtoa@n+5
  3902  0696  0836               	movf	dtoa@d+6,w
  3903  0697  00CA               	movwf	dtoa@n+6
  3904  0698  0837               	movf	dtoa@d+7,w
  3905  0699  00CB               	movwf	dtoa@n+7
  3906  069A                     l1344:
  3907                           
  3908                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  3909  069A  3044               	movlw	low dtoa@n
  3910  069B  0086               	movwf	6
  3911  069C  3000               	movlw	high dtoa@n
  3912  069D  0087               	movwf	7
  3913  069E  3F47               	moviw [7]fsr1
  3914  069F  00B8               	movwf	??_dtoa
  3915  06A0  1BB8               	btfsc	??_dtoa,7
  3916  06A1  2EA3               	goto	u1071
  3917  06A2  2EA5               	goto	u1070
  3918  06A3                     u1071:
  3919  06A3  3001               	movlw	1
  3920  06A4  2EA6               	goto	u1080
  3921  06A5                     u1070:
  3922  06A5  3000               	movlw	0
  3923  06A6                     u1080:
  3924  06A6  0020               	movlb	0	; select bank0
  3925  06A7  00B9               	movwf	??_dtoa+1
  3926  06A8  01BA               	clrf	??_dtoa+2
  3927  06A9  0839               	movf	??_dtoa+1,w
  3928  06AA  00C2               	movwf	dtoa@s
  3929  06AB  083A               	movf	??_dtoa+2,w
  3930  06AC  00C3               	movwf	dtoa@s+1
  3931  06AD                     l1346:
  3932                           
  3933                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  3934  06AD  0842               	movf	dtoa@s,w
  3935  06AE  0443               	iorwf	dtoa@s+1,w
  3936  06AF  1903               	btfsc	3,2
  3937  06B0  2EB2               	goto	u1091
  3938  06B1  2EB3               	goto	u1090
  3939  06B2                     u1091:
  3940  06B2  2ED1               	goto	l746
  3941  06B3                     u1090:
  3942  06B3                     l1348:
  3943                           
  3944                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  3945  06B3  09C4               	comf	dtoa@n,f
  3946  06B4  09C5               	comf	dtoa@n+1,f
  3947  06B5  09C6               	comf	dtoa@n+2,f
  3948  06B6  09C7               	comf	dtoa@n+3,f
  3949  06B7  09C8               	comf	dtoa@n+4,f
  3950  06B8  09C9               	comf	dtoa@n+5,f
  3951  06B9  09CA               	comf	dtoa@n+6,f
  3952  06BA  09CB               	comf	dtoa@n+7,f
  3953  06BB  0AC4               	incf	dtoa@n,f
  3954  06BC  1D03               	skipz
  3955  06BD  2ED1               	goto	u110lld
  3956  06BE  0AC5               	incf	dtoa@n+1,f
  3957  06BF  1D03               	skipz
  3958  06C0  2ED1               	goto	u110lld
  3959  06C1  0AC6               	incf	dtoa@n+2,f
  3960  06C2  1D03               	skipz
  3961  06C3  2ED1               	goto	u110lld
  3962  06C4  0AC7               	incf	dtoa@n+3,f
  3963  06C5  1D03               	skipz
  3964  06C6  2ED1               	goto	u110lld
  3965  06C7  0AC8               	incf	dtoa@n+4,f
  3966  06C8  1D03               	skipz
  3967  06C9  2ED1               	goto	u110lld
  3968  06CA  0AC9               	incf	dtoa@n+5,f
  3969  06CB  1D03               	skipz
  3970  06CC  2ED1               	goto	u110lld
  3971  06CD  0ACA               	incf	dtoa@n+6,f
  3972  06CE  1D03               	skipz
  3973  06CF  2ED1               	goto	u110lld
  3974  06D0  0ACB               	incf	dtoa@n+7,f
  3975  06D1                     u110lld:
  3976  06D1                     l746:	
  3977                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 297:     }
  3978                           
  3979                           
  3980                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  3981  06D1  0021               	movlb	1	; select bank1
  3982  06D2  1BCE               	btfsc	(_prec+1)^(0+128),7
  3983  06D3  2ED5               	goto	u1111
  3984  06D4  2ED6               	goto	u1110
  3985  06D5                     u1111:
  3986  06D5  2EDB               	goto	l747
  3987  06D6                     u1110:
  3988  06D6                     l1350:
  3989                           
  3990                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  3991  06D6  30FD               	movlw	253
  3992  06D7  0020               	movlb	0	; select bank0
  3993  06D8  05ED               	andwf	_flags,f
  3994  06D9  30FF               	movlw	255
  3995  06DA  05EE               	andwf	_flags+1,f
  3996  06DB                     l747:	
  3997                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 302:     }
  3998                           
  3999                           
  4000                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  4001  06DB  0021               	movlb	1	; select bank1
  4002  06DC  084E               	movf	(_prec+1)^(0+128),w
  4003  06DD  3A80               	xorlw	128
  4004  06DE  0020               	movlb	0	; select bank0
  4005  06DF  00B8               	movwf	??_dtoa
  4006  06E0  3080               	movlw	128
  4007  06E1  0238               	subwf	??_dtoa,w
  4008  06E2  1D03               	skipz
  4009  06E3  2EE7               	goto	u1125
  4010  06E4  3001               	movlw	1
  4011  06E5  0021               	movlb	1	; select bank1
  4012  06E6  024D               	subwf	_prec^(0+128),w
  4013  06E7                     u1125:
  4014  06E7  1803               	skipnc
  4015  06E8  2EEA               	goto	u1121
  4016  06E9  2EEB               	goto	u1120
  4017  06EA                     u1121:
  4018  06EA  2EF1               	goto	l1354
  4019  06EB                     u1120:
  4020  06EB                     l1352:
  4021  06EB  3001               	movlw	1
  4022  06EC  0020               	movlb	0	; select bank0
  4023  06ED  00BE               	movwf	dtoa@p
  4024  06EE  3000               	movlw	0
  4025  06EF  00BF               	movwf	dtoa@p+1
  4026  06F0  2EF9               	goto	l751
  4027  06F1                     l1354:
  4028  06F1  0021               	movlb	1	; select bank1
  4029  06F2  084E               	movf	(_prec+1)^(0+128),w
  4030  06F3  0020               	movlb	0	; select bank0
  4031  06F4  00BF               	movwf	dtoa@p+1
  4032  06F5  0021               	movlb	1	; select bank1
  4033  06F6  084D               	movf	_prec^(0+128),w
  4034  06F7  0020               	movlb	0	; select bank0
  4035  06F8  00BE               	movwf	dtoa@p
  4036  06F9                     l751:
  4037                           
  4038                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  4039  06F9  0021               	movlb	1	; select bank1
  4040  06FA  084C               	movf	(_width+1)^(0+128),w
  4041  06FB  0020               	movlb	0	; select bank0
  4042  06FC  00C1               	movwf	dtoa@w+1
  4043  06FD  0021               	movlb	1	; select bank1
  4044  06FE  084B               	movf	_width^(0+128),w
  4045  06FF  0020               	movlb	0	; select bank0
  4046  0700  00C0               	movwf	dtoa@w
  4047  0701                     l1356:
  4048                           
  4049                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  4050  0701  0842               	movf	dtoa@s,w
  4051  0702  0443               	iorwf	dtoa@s+1,w
  4052  0703  1D03               	btfss	3,2
  4053  0704  2F06               	goto	u1131
  4054  0705  2F07               	goto	u1130
  4055  0706                     u1131:
  4056  0706  2F0B               	goto	l1360
  4057  0707                     u1130:
  4058  0707                     l1358:
  4059  0707  1D6D               	btfss	_flags,2
  4060  0708  2F0A               	goto	u1141
  4061  0709  2F0B               	goto	u1140
  4062  070A                     u1141:
  4063  070A  2F0F               	goto	l752
  4064  070B                     u1140:
  4065  070B                     l1360:
  4066                           
  4067                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  4068  070B  30FF               	movlw	255
  4069  070C  07C0               	addwf	dtoa@w,f
  4070  070D  30FF               	movlw	255
  4071  070E  3DC1               	addwfc	dtoa@w+1,f
  4072  070F                     l752:	
  4073                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 307:     }
  4074                           
  4075                           
  4076                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  4077  070F  301F               	movlw	31
  4078  0710  00CC               	movwf	dtoa@i
  4079  0711  3000               	movlw	0
  4080  0712  00CD               	movwf	dtoa@i+1
  4081  0713                     l1362:
  4082                           
  4083                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  4084  0713  0021               	movlb	1	; select bank1
  4085  0714  01EE               	clrf	(_dbuf^(0+128)+31)
  4086                           
  4087                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4088  0715  2F7E               	goto	l755
  4089  0716                     l1364:
  4090                           
  4091                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  4092  0716  30FF               	movlw	255
  4093  0717  0020               	movlb	0	; select bank0
  4094  0718  07CC               	addwf	dtoa@i,f
  4095  0719  30FF               	movlw	255
  4096  071A  3DCD               	addwfc	dtoa@i+1,f
  4097  071B                     l1366:
  4098                           
  4099                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  4100  071B  300A               	movlw	10
  4101  071C  00A0               	movwf	___aomod@divisor
  4102  071D  01A1               	clrf	___aomod@divisor+1
  4103  071E  01A2               	clrf	___aomod@divisor+2
  4104  071F  01A3               	clrf	___aomod@divisor+3
  4105  0720  01A4               	clrf	___aomod@divisor+4
  4106  0721  01A5               	clrf	___aomod@divisor+5
  4107  0722  01A6               	clrf	___aomod@divisor+6
  4108  0723  01A7               	clrf	___aomod@divisor+7
  4109  0724  0844               	movf	dtoa@n,w
  4110  0725  00A8               	movwf	___aomod@dividend
  4111  0726  0845               	movf	dtoa@n+1,w
  4112  0727  00A9               	movwf	___aomod@dividend+1
  4113  0728  0846               	movf	dtoa@n+2,w
  4114  0729  00AA               	movwf	___aomod@dividend+2
  4115  072A  0847               	movf	dtoa@n+3,w
  4116  072B  00AB               	movwf	___aomod@dividend+3
  4117  072C  0848               	movf	dtoa@n+4,w
  4118  072D  00AC               	movwf	___aomod@dividend+4
  4119  072E  0849               	movf	dtoa@n+5,w
  4120  072F  00AD               	movwf	___aomod@dividend+5
  4121  0730  084A               	movf	dtoa@n+6,w
  4122  0731  00AE               	movwf	___aomod@dividend+6
  4123  0732  084B               	movf	dtoa@n+7,w
  4124  0733  00AF               	movwf	___aomod@dividend+7
  4125  0734  3183  2392  3186   	fcall	___aomod
  4126  0737  0020               	movlb	0	; select bank0
  4127  0738  0821               	movf	?___aomod+1,w
  4128  0739  00F4               	movwf	abs@a+1
  4129  073A  0820               	movf	?___aomod,w
  4130  073B  00F3               	movwf	abs@a
  4131  073C  3181  2127  3186   	fcall	_abs
  4132  073F  0873               	movf	?_abs,w
  4133  0740  3E30               	addlw	48
  4134  0741  0020               	movlb	0	; select bank0
  4135  0742  00B8               	movwf	??_dtoa
  4136  0743  084C               	movf	dtoa@i,w
  4137  0744  3ECF               	addlw	(low (_dbuf| 0))& (0+255)
  4138  0745  0086               	movwf	6
  4139  0746  0187               	clrf	7
  4140  0747  0838               	movf	??_dtoa,w
  4141  0748  0081               	movwf	1
  4142  0749                     l1368:
  4143                           
  4144                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  4145  0749  30FF               	movlw	255
  4146  074A  07BE               	addwf	dtoa@p,f
  4147  074B  30FF               	movlw	255
  4148  074C  3DBF               	addwfc	dtoa@p+1,f
  4149  074D                     l1370:
  4150                           
  4151                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  4152  074D  30FF               	movlw	255
  4153  074E  07C0               	addwf	dtoa@w,f
  4154  074F  30FF               	movlw	255
  4155  0750  3DC1               	addwfc	dtoa@w+1,f
  4156  0751                     l1372:
  4157                           
  4158                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  4159  0751  300A               	movlw	10
  4160  0752  00A0               	movwf	___aodiv@divisor
  4161  0753  01A1               	clrf	___aodiv@divisor+1
  4162  0754  01A2               	clrf	___aodiv@divisor+2
  4163  0755  01A3               	clrf	___aodiv@divisor+3
  4164  0756  01A4               	clrf	___aodiv@divisor+4
  4165  0757  01A5               	clrf	___aodiv@divisor+5
  4166  0758  01A6               	clrf	___aodiv@divisor+6
  4167  0759  01A7               	clrf	___aodiv@divisor+7
  4168  075A  0844               	movf	dtoa@n,w
  4169  075B  00A8               	movwf	___aodiv@dividend
  4170  075C  0845               	movf	dtoa@n+1,w
  4171  075D  00A9               	movwf	___aodiv@dividend+1
  4172  075E  0846               	movf	dtoa@n+2,w
  4173  075F  00AA               	movwf	___aodiv@dividend+2
  4174  0760  0847               	movf	dtoa@n+3,w
  4175  0761  00AB               	movwf	___aodiv@dividend+3
  4176  0762  0848               	movf	dtoa@n+4,w
  4177  0763  00AC               	movwf	___aodiv@dividend+4
  4178  0764  0849               	movf	dtoa@n+5,w
  4179  0765  00AD               	movwf	___aodiv@dividend+5
  4180  0766  084A               	movf	dtoa@n+6,w
  4181  0767  00AE               	movwf	___aodiv@dividend+6
  4182  0768  084B               	movf	dtoa@n+7,w
  4183  0769  00AF               	movwf	___aodiv@dividend+7
  4184  076A  3184  247C  3186   	fcall	___aodiv
  4185  076D  0020               	movlb	0	; select bank0
  4186  076E  0820               	movf	?___aodiv,w
  4187  076F  00C4               	movwf	dtoa@n
  4188  0770  0821               	movf	?___aodiv+1,w
  4189  0771  00C5               	movwf	dtoa@n+1
  4190  0772  0822               	movf	?___aodiv+2,w
  4191  0773  00C6               	movwf	dtoa@n+2
  4192  0774  0823               	movf	?___aodiv+3,w
  4193  0775  00C7               	movwf	dtoa@n+3
  4194  0776  0824               	movf	?___aodiv+4,w
  4195  0777  00C8               	movwf	dtoa@n+4
  4196  0778  0825               	movf	?___aodiv+5,w
  4197  0779  00C9               	movwf	dtoa@n+5
  4198  077A  0826               	movf	?___aodiv+6,w
  4199  077B  00CA               	movwf	dtoa@n+6
  4200  077C  0827               	movf	?___aodiv+7,w
  4201  077D  00CB               	movwf	dtoa@n+7
  4202  077E                     l755:	
  4203                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 318:     }
  4204                           
  4205                           
  4206                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4207  077E  0020               	movlb	0	; select bank0
  4208  077F  084D               	movf	dtoa@i+1,w
  4209  0780  3A80               	xorlw	128
  4210  0781  00B8               	movwf	??_dtoa
  4211  0782  3080               	movlw	128
  4212  0783  0238               	subwf	??_dtoa,w
  4213  0784  1D03               	skipz
  4214  0785  2F88               	goto	u1155
  4215  0786  3001               	movlw	1
  4216  0787  024C               	subwf	dtoa@i,w
  4217  0788                     u1155:
  4218  0788  1C03               	skipc
  4219  0789  2F8B               	goto	u1151
  4220  078A  2F8C               	goto	u1150
  4221  078B                     u1151:
  4222  078B  2FB9               	goto	l1382
  4223  078C                     u1150:
  4224  078C                     l1374:
  4225  078C  0020               	movlb	0	; select bank0
  4226  078D  0844               	movf	dtoa@n,w
  4227  078E  0445               	iorwf	dtoa@n+1,w
  4228  078F  0446               	iorwf	dtoa@n+2,w
  4229  0790  0447               	iorwf	dtoa@n+3,w
  4230  0791  0448               	iorwf	dtoa@n+4,w
  4231  0792  0449               	iorwf	dtoa@n+5,w
  4232  0793  044A               	iorwf	dtoa@n+6,w
  4233  0794  044B               	iorwf	dtoa@n+7,w
  4234  0795  1D03               	skipz
  4235  0796  2F98               	goto	u1161
  4236  0797  2F99               	goto	u1160
  4237  0798                     u1161:
  4238  0798  2F16               	goto	l1364
  4239  0799                     u1160:
  4240  0799                     l1376:
  4241  0799  083F               	movf	dtoa@p+1,w
  4242  079A  3A80               	xorlw	128
  4243  079B  00B8               	movwf	??_dtoa
  4244  079C  3080               	movlw	128
  4245  079D  0238               	subwf	??_dtoa,w
  4246  079E  1D03               	skipz
  4247  079F  2FA2               	goto	u1175
  4248  07A0  3001               	movlw	1
  4249  07A1  023E               	subwf	dtoa@p,w
  4250  07A2                     u1175:
  4251  07A2  1803               	skipnc
  4252  07A3  2FA5               	goto	u1171
  4253  07A4  2FA6               	goto	u1170
  4254  07A5                     u1171:
  4255  07A5  2F16               	goto	l1364
  4256  07A6                     u1170:
  4257  07A6                     l1378:
  4258  07A6  0020               	movlb	0	; select bank0
  4259  07A7  0841               	movf	dtoa@w+1,w
  4260  07A8  3A80               	xorlw	128
  4261  07A9  00B8               	movwf	??_dtoa
  4262  07AA  3080               	movlw	128
  4263  07AB  0238               	subwf	??_dtoa,w
  4264  07AC  1D03               	skipz
  4265  07AD  2FB0               	goto	u1185
  4266  07AE  3001               	movlw	1
  4267  07AF  0240               	subwf	dtoa@w,w
  4268  07B0                     u1185:
  4269  07B0  1C03               	skipc
  4270  07B1  2FB3               	goto	u1181
  4271  07B2  2FB4               	goto	u1180
  4272  07B3                     u1181:
  4273  07B3  2FB9               	goto	l1382
  4274  07B4                     u1180:
  4275  07B4                     l1380:
  4276  07B4  0020               	movlb	0	; select bank0
  4277  07B5  18ED               	btfsc	_flags,1
  4278  07B6  2FB8               	goto	u1191
  4279  07B7  2FB9               	goto	u1190
  4280  07B8                     u1191:
  4281  07B8  2F16               	goto	l1364
  4282  07B9                     u1190:
  4283  07B9                     l1382:
  4284                           
  4285                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  4286  07B9  0020               	movlb	0	; select bank0
  4287  07BA  0842               	movf	dtoa@s,w
  4288  07BB  0443               	iorwf	dtoa@s+1,w
  4289  07BC  1D03               	btfss	3,2
  4290  07BD  2FBF               	goto	u1201
  4291  07BE  2FC0               	goto	u1200
  4292  07BF                     u1201:
  4293  07BF  2FC4               	goto	l1386
  4294  07C0                     u1200:
  4295  07C0                     l1384:
  4296  07C0  1D6D               	btfss	_flags,2
  4297  07C1  2FC3               	goto	u1211
  4298  07C2  2FC4               	goto	u1210
  4299  07C3                     u1211:
  4300  07C3  2FDF               	goto	l1396
  4301  07C4                     u1210:
  4302  07C4                     l1386:
  4303                           
  4304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  4305  07C4  30FF               	movlw	255
  4306  07C5  07CC               	addwf	dtoa@i,f
  4307  07C6  30FF               	movlw	255
  4308  07C7  3DCD               	addwfc	dtoa@i+1,f
  4309  07C8                     l1388:
  4310                           
  4311                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  4312  07C8  0842               	movf	dtoa@s,w
  4313  07C9  0443               	iorwf	dtoa@s+1,w
  4314  07CA  1D03               	btfss	3,2
  4315  07CB  2FCD               	goto	u1221
  4316  07CC  2FCE               	goto	u1220
  4317  07CD                     u1221:
  4318  07CD  2FD3               	goto	l1392
  4319  07CE                     u1220:
  4320  07CE                     l1390:
  4321  07CE  302B               	movlw	43
  4322  07CF  00BB               	movwf	_dtoa$640
  4323  07D0  3000               	movlw	0
  4324  07D1  00BC               	movwf	_dtoa$640+1
  4325  07D2  2FD7               	goto	l1394
  4326  07D3                     l1392:
  4327  07D3  302D               	movlw	45
  4328  07D4  00BB               	movwf	_dtoa$640
  4329  07D5  3000               	movlw	0
  4330  07D6  00BC               	movwf	_dtoa$640+1
  4331  07D7                     l1394:
  4332  07D7  083B               	movf	_dtoa$640,w
  4333  07D8  00B8               	movwf	??_dtoa
  4334  07D9  084C               	movf	dtoa@i,w
  4335  07DA  3ECF               	addlw	(low (_dbuf| 0))& (0+255)
  4336  07DB  0086               	movwf	6
  4337  07DC  0187               	clrf	7
  4338  07DD  0838               	movf	??_dtoa,w
  4339  07DE  0081               	movwf	1
  4340  07DF                     l1396:
  4341                           
  4342                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  4343  07DF  084C               	movf	dtoa@i,w
  4344  07E0  3ECF               	addlw	(low (_dbuf| 0))& (0+255)
  4345  07E1  00B8               	movwf	??_dtoa
  4346  07E2  0838               	movf	??_dtoa,w
  4347  07E3  00A7               	movwf	pad@buf
  4348  07E4  0841               	movf	dtoa@w+1,w
  4349  07E5  00A9               	movwf	pad@p+1
  4350  07E6  0840               	movf	dtoa@w,w
  4351  07E7  00A8               	movwf	pad@p
  4352  07E8  083D               	movf	dtoa@fp,w
  4353  07E9  3182  2269  3186   	fcall	_pad
  4354  07EC  0020               	movlb	0	; select bank0
  4355  07ED  0828               	movf	?_pad+1,w
  4356  07EE  00B1               	movwf	?_dtoa+1
  4357  07EF  0827               	movf	?_pad,w
  4358  07F0  00B0               	movwf	?_dtoa
  4359  07F1                     l769:
  4360  07F1  0008               	return
  4361  07F2                     __end_of_dtoa:
  4362                           
  4363                           	psect	text9
  4364  0269                     __ptext9:	
  4365 ;; *************** function _pad *****************
  4366 ;; Defined at:
  4367 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4368 ;; Parameters:    Size  Location     Type
  4369 ;;  fp              1    wreg     PTR struct _IO_FILE
  4370 ;;		 -> NULL(0), sprintf@f(5), 
  4371 ;;  buf             1    7[BANK0 ] PTR unsigned char 
  4372 ;;		 -> dbuf(32), 
  4373 ;;  p               2    8[BANK0 ] int 
  4374 ;; Auto vars:     Size  Location     Type
  4375 ;;  fp              1   14[BANK0 ] PTR struct _IO_FILE
  4376 ;;		 -> NULL(0), sprintf@f(5), 
  4377 ;;  w               2   12[BANK0 ] int 
  4378 ;;  i               2   10[BANK0 ] int 
  4379 ;; Return value:  Size  Location     Type
  4380 ;;                  2    7[BANK0 ] int 
  4381 ;; Registers used:
  4382 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4383 ;; Tracked objects:
  4384 ;;		On entry : 0/0
  4385 ;;		On exit  : 0/0
  4386 ;;		Unchanged: 0/0
  4387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4388 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4389 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4390 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4391 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4392 ;;Total ram usage:        9 bytes
  4393 ;; Hardware stack levels used: 1
  4394 ;; Hardware stack levels required when called: 4
  4395 ;; This function calls:
  4396 ;;		_fputc
  4397 ;;		_fputs
  4398 ;;		_strlen
  4399 ;; This function is called by:
  4400 ;;		_dtoa
  4401 ;; This function uses a non-reentrant model
  4402 ;;
  4403                           
  4404                           
  4405                           ;psect for function _pad
  4406  0269                     _pad:
  4407                           
  4408                           ;incstack = 0
  4409                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4410                           ;pad@fp stored from wreg
  4411  0269  0020               	movlb	0	; select bank0
  4412  026A  00AE               	movwf	pad@fp
  4413  026B                     l1316:
  4414                           
  4415                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4416  026B  1C6D               	btfss	_flags,0
  4417  026C  2A6E               	goto	u1021
  4418  026D  2A6F               	goto	u1020
  4419  026E                     u1021:
  4420  026E  2A77               	goto	l1320
  4421  026F                     u1020:
  4422  026F                     l1318:
  4423                           
  4424                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4425  026F  082E               	movf	pad@fp,w
  4426  0270  00FC               	movwf	??_pad
  4427  0271  087C               	movf	??_pad,w
  4428  0272  00FB               	movwf	fputs@fp
  4429  0273  0827               	movf	pad@buf,w
  4430  0274  3181  2183  3182   	fcall	_fputs
  4431  0277                     l1320:
  4432                           
  4433                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4434  0277  0020               	movlb	0	; select bank0
  4435  0278  1BA9               	btfsc	pad@p+1,7
  4436  0279  2A7B               	goto	u1031
  4437  027A  2A7C               	goto	u1030
  4438  027B                     u1031:
  4439  027B  2A81               	goto	l1324
  4440  027C                     u1030:
  4441  027C                     l1322:
  4442  027C  0829               	movf	pad@p+1,w
  4443  027D  00AD               	movwf	pad@w+1
  4444  027E  0828               	movf	pad@p,w
  4445  027F  00AC               	movwf	pad@w
  4446  0280  2A83               	goto	l738
  4447  0281                     l1324:
  4448  0281  01AC               	clrf	pad@w
  4449  0282  01AD               	clrf	pad@w+1
  4450  0283                     l738:
  4451                           
  4452                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4453  0283  01AA               	clrf	pad@i
  4454  0284  01AB               	clrf	pad@i+1
  4455                           
  4456                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4457  0285  2A97               	goto	l1330
  4458  0286                     l1326:
  4459                           
  4460                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4461  0286  3020               	movlw	32
  4462  0287  00F3               	movwf	fputc@c
  4463  0288  3000               	movlw	0
  4464  0289  00F4               	movwf	fputc@c+1
  4465  028A  0020               	movlb	0	; select bank0
  4466  028B  082E               	movf	pad@fp,w
  4467  028C  00FC               	movwf	??_pad
  4468  028D  087C               	movf	??_pad,w
  4469  028E  00F5               	movwf	fputc@fp
  4470  028F  3182  221A  3182   	fcall	_fputc
  4471  0292                     l1328:
  4472                           
  4473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4474  0292  3001               	movlw	1
  4475  0293  0020               	movlb	0	; select bank0
  4476  0294  07AA               	addwf	pad@i,f
  4477  0295  3000               	movlw	0
  4478  0296  3DAB               	addwfc	pad@i+1,f
  4479  0297                     l1330:
  4480                           
  4481                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4482  0297  082B               	movf	pad@i+1,w
  4483  0298  3A80               	xorlw	128
  4484  0299  00FC               	movwf	??_pad
  4485  029A  082D               	movf	pad@w+1,w
  4486  029B  3A80               	xorlw	128
  4487  029C  027C               	subwf	??_pad,w
  4488  029D  1D03               	skipz
  4489  029E  2AA1               	goto	u1045
  4490  029F  082C               	movf	pad@w,w
  4491  02A0  022A               	subwf	pad@i,w
  4492  02A1                     u1045:
  4493  02A1  1C03               	skipc
  4494  02A2  2AA4               	goto	u1041
  4495  02A3  2AA5               	goto	u1040
  4496  02A4                     u1041:
  4497  02A4  2A86               	goto	l1326
  4498  02A5                     u1040:
  4499  02A5                     l741:
  4500                           
  4501                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4502  02A5  0020               	movlb	0	; select bank0
  4503  02A6  186D               	btfsc	_flags,0
  4504  02A7  2AA9               	goto	u1051
  4505  02A8  2AAA               	goto	u1050
  4506  02A9                     u1051:
  4507  02A9  2AB2               	goto	l1334
  4508  02AA                     u1050:
  4509  02AA                     l1332:
  4510                           
  4511                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4512  02AA  082E               	movf	pad@fp,w
  4513  02AB  00FC               	movwf	??_pad
  4514  02AC  087C               	movf	??_pad,w
  4515  02AD  00FB               	movwf	fputs@fp
  4516  02AE  0827               	movf	pad@buf,w
  4517  02AF  3181  2183  3182   	fcall	_fputs
  4518  02B2                     l1334:
  4519                           
  4520                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4521  02B2  0020               	movlb	0	; select bank0
  4522  02B3  0827               	movf	pad@buf,w
  4523  02B4  3181  210E  3182   	fcall	_strlen
  4524  02B7  0020               	movlb	0	; select bank0
  4525  02B8  082C               	movf	pad@w,w
  4526  02B9  0770               	addwf	?_strlen,w
  4527  02BA  00A7               	movwf	?_pad
  4528  02BB  082D               	movf	pad@w+1,w
  4529  02BC  3D71               	addwfc	?_strlen+1,w
  4530  02BD  00A8               	movwf	?_pad+1
  4531  02BE                     l743:
  4532  02BE  0008               	return
  4533  02BF                     __end_of_pad:
  4534                           
  4535                           	psect	text10
  4536  010E                     __ptext10:	
  4537 ;; *************** function _strlen *****************
  4538 ;; Defined at:
  4539 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  4540 ;; Parameters:    Size  Location     Type
  4541 ;;  s               1    wreg     PTR const unsigned char 
  4542 ;;		 -> dbuf(32), 
  4543 ;; Auto vars:     Size  Location     Type
  4544 ;;  s               1    4[COMMON] PTR const unsigned char 
  4545 ;;		 -> dbuf(32), 
  4546 ;;  a               1    3[COMMON] PTR const unsigned char 
  4547 ;;		 -> dbuf(32), 
  4548 ;; Return value:  Size  Location     Type
  4549 ;;                  2    0[COMMON] unsigned int 
  4550 ;; Registers used:
  4551 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4552 ;; Tracked objects:
  4553 ;;		On entry : 0/0
  4554 ;;		On exit  : 0/0
  4555 ;;		Unchanged: 0/0
  4556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4557 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4558 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4559 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4560 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4561 ;;Total ram usage:        5 bytes
  4562 ;; Hardware stack levels used: 1
  4563 ;; This function calls:
  4564 ;;		Nothing
  4565 ;; This function is called by:
  4566 ;;		_pad
  4567 ;; This function uses a non-reentrant model
  4568 ;;
  4569                           
  4570                           
  4571                           ;psect for function _strlen
  4572  010E                     _strlen:
  4573                           
  4574                           ;incstack = 0
  4575                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  4576                           ;strlen@s stored from wreg
  4577  010E  00F4               	movwf	strlen@s
  4578  010F                     l1238:
  4579  010F  0874               	movf	strlen@s,w
  4580  0110  00F2               	movwf	??_strlen
  4581  0111  0872               	movf	??_strlen,w
  4582  0112  00F3               	movwf	strlen@a
  4583  0113  2918               	goto	l1242
  4584  0114                     l1240:
  4585  0114  3001               	movlw	1
  4586  0115  00F2               	movwf	??_strlen
  4587  0116  0872               	movf	??_strlen,w
  4588  0117  07F4               	addwf	strlen@s,f
  4589  0118                     l1242:
  4590  0118  0874               	movf	strlen@s,w
  4591  0119  0086               	movwf	6
  4592  011A  0187               	clrf	7
  4593  011B  0801               	movf	1,w
  4594  011C  1D03               	btfss	3,2
  4595  011D  291F               	goto	u801
  4596  011E  2920               	goto	u800
  4597  011F                     u801:
  4598  011F  2914               	goto	l1240
  4599  0120                     u800:
  4600  0120                     l1244:
  4601  0120  0873               	movf	strlen@a,w
  4602  0121  0274               	subwf	strlen@s,w
  4603  0122  00F0               	movwf	?_strlen
  4604  0123  01F1               	clrf	?_strlen+1
  4605  0124  1BF0               	btfsc	?_strlen,7
  4606  0125  03F1               	decf	?_strlen+1,f
  4607  0126                     l824:
  4608  0126  0008               	return
  4609  0127                     __end_of_strlen:
  4610                           
  4611                           	psect	text11
  4612  0183                     __ptext11:	
  4613 ;; *************** function _fputs *****************
  4614 ;; Defined at:
  4615 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  4616 ;; Parameters:    Size  Location     Type
  4617 ;;  s               1    wreg     PTR const unsigned char 
  4618 ;;		 -> dbuf(32), 
  4619 ;;  fp              1   11[COMMON] PTR struct _IO_FILE
  4620 ;;		 -> NULL(0), sprintf@f(5), 
  4621 ;; Auto vars:     Size  Location     Type
  4622 ;;  s               1    6[BANK0 ] PTR const unsigned char 
  4623 ;;		 -> dbuf(32), 
  4624 ;;  i               2    4[BANK0 ] int 
  4625 ;;  c               1    3[BANK0 ] unsigned char 
  4626 ;; Return value:  Size  Location     Type
  4627 ;;                  2   11[COMMON] int 
  4628 ;; Registers used:
  4629 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4630 ;; Tracked objects:
  4631 ;;		On entry : 0/0
  4632 ;;		On exit  : 0/0
  4633 ;;		Unchanged: 0/0
  4634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4635 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4636 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4637 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4638 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4639 ;;Total ram usage:        8 bytes
  4640 ;; Hardware stack levels used: 1
  4641 ;; Hardware stack levels required when called: 3
  4642 ;; This function calls:
  4643 ;;		_fputc
  4644 ;; This function is called by:
  4645 ;;		_pad
  4646 ;; This function uses a non-reentrant model
  4647 ;;
  4648                           
  4649                           
  4650                           ;psect for function _fputs
  4651  0183                     _fputs:
  4652                           
  4653                           ;incstack = 0
  4654                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4655                           ;fputs@s stored from wreg
  4656  0183  0020               	movlb	0	; select bank0
  4657  0184  00A6               	movwf	fputs@s
  4658  0185                     l1230:
  4659  0185  01A4               	clrf	fputs@i
  4660  0186  01A5               	clrf	fputs@i+1
  4661  0187  299B               	goto	l1236
  4662  0188                     l1232:
  4663  0188  0823               	movf	fputs@c,w
  4664  0189  00A0               	movwf	??_fputs
  4665  018A  01A1               	clrf	??_fputs+1
  4666  018B  0820               	movf	??_fputs,w
  4667  018C  00F3               	movwf	fputc@c
  4668  018D  0821               	movf	??_fputs+1,w
  4669  018E  00F4               	movwf	fputc@c+1
  4670  018F  087B               	movf	fputs@fp,w
  4671  0190  00A2               	movwf	??_fputs+2
  4672  0191  0822               	movf	??_fputs+2,w
  4673  0192  00F5               	movwf	fputc@fp
  4674  0193  3182  221A  3181   	fcall	_fputc
  4675  0196                     l1234:
  4676  0196  3001               	movlw	1
  4677  0197  0020               	movlb	0	; select bank0
  4678  0198  07A4               	addwf	fputs@i,f
  4679  0199  3000               	movlw	0
  4680  019A  3DA5               	addwfc	fputs@i+1,f
  4681  019B                     l1236:
  4682  019B  0824               	movf	fputs@i,w
  4683  019C  0726               	addwf	fputs@s,w
  4684  019D  00A0               	movwf	??_fputs
  4685  019E  0820               	movf	??_fputs,w
  4686  019F  0086               	movwf	6
  4687  01A0  0187               	clrf	7
  4688  01A1  0801               	movf	1,w
  4689  01A2  00A1               	movwf	??_fputs+1
  4690  01A3  0821               	movf	??_fputs+1,w
  4691  01A4  00A3               	movwf	fputs@c
  4692  01A5  0823               	movf	fputs@c,w
  4693  01A6  1D03               	btfss	3,2
  4694  01A7  29A9               	goto	u791
  4695  01A8  29AA               	goto	u790
  4696  01A9                     u791:
  4697  01A9  2988               	goto	l1232
  4698  01AA                     u790:
  4699  01AA                     l811:
  4700  01AA  0008               	return
  4701  01AB                     __end_of_fputs:
  4702                           
  4703                           	psect	text12
  4704  021A                     __ptext12:	
  4705 ;; *************** function _fputc *****************
  4706 ;; Defined at:
  4707 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  4708 ;; Parameters:    Size  Location     Type
  4709 ;;  c               2    3[COMMON] int 
  4710 ;;  fp              1    5[COMMON] PTR struct _IO_FILE
  4711 ;;		 -> NULL(0), sprintf@f(5), 
  4712 ;; Auto vars:     Size  Location     Type
  4713 ;;		None
  4714 ;; Return value:  Size  Location     Type
  4715 ;;                  2    3[COMMON] int 
  4716 ;; Registers used:
  4717 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4718 ;; Tracked objects:
  4719 ;;		On entry : 0/0
  4720 ;;		On exit  : 0/0
  4721 ;;		Unchanged: 0/0
  4722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4723 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4725 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4726 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4727 ;;Total ram usage:        8 bytes
  4728 ;; Hardware stack levels used: 1
  4729 ;; Hardware stack levels required when called: 2
  4730 ;; This function calls:
  4731 ;;		_putch
  4732 ;; This function is called by:
  4733 ;;		_pad
  4734 ;;		_vfpfcnvrt
  4735 ;;		_fputs
  4736 ;; This function uses a non-reentrant model
  4737 ;;
  4738                           
  4739                           
  4740                           ;psect for function _fputc
  4741  021A                     _fputc:
  4742  021A                     l1214:	
  4743                           ;incstack = 0
  4744                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4745                           
  4746  021A  0875               	movf	fputc@fp,w
  4747  021B  1903               	btfsc	3,2
  4748  021C  2A1E               	goto	u751
  4749  021D  2A1F               	goto	u750
  4750  021E                     u751:
  4751  021E  2A24               	goto	l1218
  4752  021F                     u750:
  4753  021F                     l1216:
  4754  021F  0875               	movf	fputc@fp,w
  4755  0220  1D03               	btfss	3,2
  4756  0221  2A23               	goto	u761
  4757  0222  2A24               	goto	u760
  4758  0223                     u761:
  4759  0223  2A29               	goto	l1220
  4760  0224                     u760:
  4761  0224                     l1218:
  4762  0224  0873               	movf	fputc@c,w
  4763  0225  3180  20D3  3182   	fcall	_putch
  4764  0228  2A68               	goto	l803
  4765  0229                     l1220:
  4766  0229  0875               	movf	fputc@fp,w
  4767  022A  3E03               	addlw	3
  4768  022B  0086               	movwf	6
  4769  022C  0187               	clrf	7
  4770  022D  0016               	moviw fsr1++
  4771  022E  0401               	iorwf	1,w
  4772  022F  1903               	btfsc	3,2
  4773  0230  2A32               	goto	u771
  4774  0231  2A33               	goto	u770
  4775  0232                     u771:
  4776  0232  2A50               	goto	l1224
  4777  0233                     u770:
  4778  0233                     l1222:
  4779  0233  0875               	movf	fputc@fp,w
  4780  0234  3E03               	addlw	3
  4781  0235  0086               	movwf	6
  4782  0236  0187               	clrf	7
  4783  0237  3F40               	moviw [0]fsr1
  4784  0238  00F6               	movwf	??_fputc
  4785  0239  3F41               	moviw [1]fsr1
  4786  023A  00F7               	movwf	??_fputc+1
  4787  023B  0A75               	incf	fputc@fp,w
  4788  023C  0086               	movwf	6
  4789  023D  0187               	clrf	7
  4790  023E  3F40               	moviw [0]fsr1
  4791  023F  00F8               	movwf	??_fputc+2
  4792  0240  3F41               	moviw [1]fsr1
  4793  0241  00F9               	movwf	??_fputc+3
  4794  0242  0879               	movf	??_fputc+3,w
  4795  0243  3A80               	xorlw	128
  4796  0244  00FA               	movwf	??_fputc+4
  4797  0245  0877               	movf	??_fputc+1,w
  4798  0246  3A80               	xorlw	128
  4799  0247  027A               	subwf	??_fputc+4,w
  4800  0248  1D03               	skipz
  4801  0249  2A4C               	goto	u785
  4802  024A  0876               	movf	??_fputc,w
  4803  024B  0278               	subwf	??_fputc+2,w
  4804  024C                     u785:
  4805  024C  1803               	skipnc
  4806  024D  2A4F               	goto	u781
  4807  024E  2A50               	goto	u780
  4808  024F                     u781:
  4809  024F  2A68               	goto	l803
  4810  0250                     u780:
  4811  0250                     l1224:
  4812  0250  0873               	movf	fputc@c,w
  4813  0251  00F6               	movwf	??_fputc
  4814  0252  0875               	movf	fputc@fp,w
  4815  0253  0086               	movwf	6
  4816  0254  0187               	clrf	7
  4817  0255  0A75               	incf	fputc@fp,w
  4818  0256  0084               	movwf	4
  4819  0257  0185               	clrf	5
  4820  0258  0800               	movf	0,w
  4821  0259  0701               	addwf	1,w
  4822  025A  00F7               	movwf	??_fputc+1
  4823  025B  0877               	movf	??_fputc+1,w
  4824  025C  0086               	movwf	6
  4825  025D  0187               	clrf	7
  4826  025E  0876               	movf	??_fputc,w
  4827  025F  0081               	movwf	1
  4828  0260                     l1226:
  4829  0260  0A75               	incf	fputc@fp,w
  4830  0261  0086               	movwf	6
  4831  0262  0187               	clrf	7
  4832  0263  3001               	movlw	1
  4833  0264  0781               	addwf	1,f
  4834  0265  3141               	addfsr 1,1
  4835  0266  1803               	skipnc
  4836  0267  0A81               	incf	1,f
  4837  0268                     l803:
  4838  0268  0008               	return
  4839  0269                     __end_of_fputc:
  4840                           
  4841                           	psect	text13
  4842  00D3                     __ptext13:	
  4843 ;; *************** function _putch *****************
  4844 ;; Defined at:
  4845 ;;		line 64 in file "uart.c"
  4846 ;; Parameters:    Size  Location     Type
  4847 ;;  dato            1    wreg     unsigned char 
  4848 ;; Auto vars:     Size  Location     Type
  4849 ;;  dato            1    2[COMMON] unsigned char 
  4850 ;; Return value:  Size  Location     Type
  4851 ;;                  1    wreg      void 
  4852 ;; Registers used:
  4853 ;;		wreg, status,2, status,0, pclath, cstack
  4854 ;; Tracked objects:
  4855 ;;		On entry : 0/0
  4856 ;;		On exit  : 0/0
  4857 ;;		Unchanged: 0/0
  4858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4860 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4862 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4863 ;;Total ram usage:        1 bytes
  4864 ;; Hardware stack levels used: 1
  4865 ;; Hardware stack levels required when called: 1
  4866 ;; This function calls:
  4867 ;;		_uart_tx
  4868 ;; This function is called by:
  4869 ;;		_fputc
  4870 ;; This function uses a non-reentrant model
  4871 ;;
  4872                           
  4873                           
  4874                           ;psect for function _putch
  4875  00D3                     _putch:
  4876                           
  4877                           ;incstack = 0
  4878                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  4879                           ;putch@dato stored from wreg
  4880  00D3  00F2               	movwf	putch@dato
  4881  00D4                     l1212:
  4882                           
  4883                           ;uart.c: 66:     uart_tx( dato);
  4884  00D4  0872               	movf	putch@dato,w
  4885  00D5  3180  20EB  3180   	fcall	_uart_tx
  4886  00D8                     l87:
  4887  00D8  0008               	return
  4888  00D9                     __end_of_putch:
  4889                           
  4890                           	psect	text14
  4891  00EB                     __ptext14:	
  4892 ;; *************** function _uart_tx *****************
  4893 ;; Defined at:
  4894 ;;		line 31 in file "uart.c"
  4895 ;; Parameters:    Size  Location     Type
  4896 ;;  dato            1    wreg     unsigned char 
  4897 ;; Auto vars:     Size  Location     Type
  4898 ;;  dato            1    1[COMMON] unsigned char 
  4899 ;; Return value:  Size  Location     Type
  4900 ;;                  1    wreg      void 
  4901 ;; Registers used:
  4902 ;;		wreg, status,2, status,0
  4903 ;; Tracked objects:
  4904 ;;		On entry : 0/0
  4905 ;;		On exit  : 0/0
  4906 ;;		Unchanged: 0/0
  4907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4909 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4910 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4911 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4912 ;;Total ram usage:        2 bytes
  4913 ;; Hardware stack levels used: 1
  4914 ;; This function calls:
  4915 ;;		Nothing
  4916 ;; This function is called by:
  4917 ;;		_putch
  4918 ;;		_uart_send_string
  4919 ;; This function uses a non-reentrant model
  4920 ;;
  4921                           
  4922                           
  4923                           ;psect for function _uart_tx
  4924  00EB                     _uart_tx:
  4925                           
  4926                           ;incstack = 0
  4927                           ; Regs used in _uart_tx: [wreg+status,2+status,0]
  4928                           ;uart_tx@dato stored from wreg
  4929  00EB  00F1               	movwf	uart_tx@dato
  4930  00EC                     l1206:
  4931  00EC                     l1208:	
  4932                           ;uart.c: 33:     while( ( (PIR3>>4) & 0x01) == 0){}
  4933                           
  4934  00EC  002E               	movlb	14	; select bank14
  4935  00ED  080F               	movf	15,w	;volatile
  4936  00EE  00F0               	movwf	??_uart_tx
  4937  00EF  3004               	movlw	4
  4938  00F0                     u735:
  4939  00F0  36F0               	lsrf	??_uart_tx,f
  4940  00F1  0B89               	decfsz	9,f
  4941  00F2  28F0               	goto	u735
  4942  00F3  1C70               	btfss	??_uart_tx,0
  4943  00F4  28F6               	goto	u741
  4944  00F5  28F7               	goto	u740
  4945  00F6                     u741:
  4946  00F6  28EC               	goto	l1208
  4947  00F7                     u740:
  4948  00F7                     l1210:
  4949                           
  4950                           ;uart.c: 35:         TXREG = dato;
  4951  00F7  0871               	movf	uart_tx@dato,w
  4952  00F8  0022               	movlb	2	; select bank2
  4953  00F9  009A               	movwf	26	;volatile
  4954  00FA                     l71:
  4955  00FA  0008               	return
  4956  00FB                     __end_of_uart_tx:
  4957                           
  4958                           	psect	text15
  4959  0127                     __ptext15:	
  4960 ;; *************** function _abs *****************
  4961 ;; Defined at:
  4962 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  4963 ;; Parameters:    Size  Location     Type
  4964 ;;  a               2    3[COMMON] int 
  4965 ;; Auto vars:     Size  Location     Type
  4966 ;;		None
  4967 ;; Return value:  Size  Location     Type
  4968 ;;                  2    3[COMMON] int 
  4969 ;; Registers used:
  4970 ;;		wreg, status,2, status,0
  4971 ;; Tracked objects:
  4972 ;;		On entry : 0/0
  4973 ;;		On exit  : 0/0
  4974 ;;		Unchanged: 0/0
  4975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4976 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4978 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4979 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4980 ;;Total ram usage:        4 bytes
  4981 ;; Hardware stack levels used: 1
  4982 ;; This function calls:
  4983 ;;		Nothing
  4984 ;; This function is called by:
  4985 ;;		_dtoa
  4986 ;; This function uses a non-reentrant model
  4987 ;;
  4988                           
  4989                           
  4990                           ;psect for function _abs
  4991  0127                     _abs:
  4992  0127                     l1338:	
  4993                           ;incstack = 0
  4994                           ; Regs used in _abs: [wreg+status,2+status,0]
  4995                           
  4996  0127  0874               	movf	abs@a+1,w
  4997  0128  3A80               	xorlw	128
  4998  0129  00F5               	movwf	??_abs
  4999  012A  3080               	movlw	128
  5000  012B  0275               	subwf	??_abs,w
  5001  012C  1D03               	skipz
  5002  012D  2930               	goto	u1065
  5003  012E  3001               	movlw	1
  5004  012F  0273               	subwf	abs@a,w
  5005  0130                     u1065:
  5006  0130  1803               	skipnc
  5007  0131  2933               	goto	u1061
  5008  0132  2934               	goto	u1060
  5009  0133                     u1061:
  5010  0133  2940               	goto	l788
  5011  0134                     u1060:
  5012  0134                     l1340:
  5013  0134  0973               	comf	abs@a,w
  5014  0135  00F5               	movwf	??_abs
  5015  0136  0974               	comf	abs@a+1,w
  5016  0137  00F6               	movwf	??_abs+1
  5017  0138  0AF5               	incf	??_abs,f
  5018  0139  1903               	skipnz
  5019  013A  0AF6               	incf	??_abs+1,f
  5020  013B  0875               	movf	??_abs,w
  5021  013C  00F3               	movwf	?_abs
  5022  013D  0876               	movf	??_abs+1,w
  5023  013E  00F4               	movwf	?_abs+1
  5024  013F  2940               	goto	l791
  5025  0140                     l788:
  5026  0140                     l791:
  5027  0140  0008               	return
  5028  0141                     __end_of_abs:
  5029                           
  5030                           	psect	text16
  5031  0392                     __ptext16:	
  5032 ;; *************** function ___aomod *****************
  5033 ;; Defined at:
  5034 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  5035 ;; Parameters:    Size  Location     Type
  5036 ;;  divisor         8    0[BANK0 ] long long 
  5037 ;;  dividend        8    8[BANK0 ] long long 
  5038 ;; Auto vars:     Size  Location     Type
  5039 ;;  sign            1    2[COMMON] unsigned char 
  5040 ;;  counter         1    1[COMMON] unsigned char 
  5041 ;; Return value:  Size  Location     Type
  5042 ;;                  8    0[BANK0 ] long long 
  5043 ;; Registers used:
  5044 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5045 ;; Tracked objects:
  5046 ;;		On entry : 0/0
  5047 ;;		On exit  : 0/0
  5048 ;;		Unchanged: 0/0
  5049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5050 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5051 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5052 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5053 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5054 ;;Total ram usage:       19 bytes
  5055 ;; Hardware stack levels used: 1
  5056 ;; This function calls:
  5057 ;;		Nothing
  5058 ;; This function is called by:
  5059 ;;		_dtoa
  5060 ;; This function uses a non-reentrant model
  5061 ;;
  5062                           
  5063                           
  5064                           ;psect for function ___aomod
  5065  0392                     ___aomod:
  5066  0392                     l1286:	
  5067                           ;incstack = 0
  5068                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  5069                           
  5070  0392  01F2               	clrf	___aomod@sign
  5071  0393                     l1288:
  5072  0393  3028               	movlw	low ___aomod@dividend
  5073  0394  0086               	movwf	6
  5074  0395  3000               	movlw	high ___aomod@dividend
  5075  0396  0087               	movwf	7
  5076  0397  3F47               	moviw [7]fsr1
  5077  0398  00F0               	movwf	??___aomod
  5078  0399  1FF0               	btfss	??___aomod,7
  5079  039A  2B9C               	goto	u921
  5080  039B  2B9D               	goto	u920
  5081  039C                     u921:
  5082  039C  2BBE               	goto	l1292
  5083  039D                     u920:
  5084  039D                     l1290:
  5085  039D  0020               	movlb	0	; select bank0
  5086  039E  09A8               	comf	___aomod@dividend,f
  5087  039F  09A9               	comf	___aomod@dividend+1,f
  5088  03A0  09AA               	comf	___aomod@dividend+2,f
  5089  03A1  09AB               	comf	___aomod@dividend+3,f
  5090  03A2  09AC               	comf	___aomod@dividend+4,f
  5091  03A3  09AD               	comf	___aomod@dividend+5,f
  5092  03A4  09AE               	comf	___aomod@dividend+6,f
  5093  03A5  09AF               	comf	___aomod@dividend+7,f
  5094  03A6  0AA8               	incf	___aomod@dividend,f
  5095  03A7  1D03               	skipz
  5096  03A8  2BBC               	goto	u93lld
  5097  03A9  0AA9               	incf	___aomod@dividend+1,f
  5098  03AA  1D03               	skipz
  5099  03AB  2BBC               	goto	u93lld
  5100  03AC  0AAA               	incf	___aomod@dividend+2,f
  5101  03AD  1D03               	skipz
  5102  03AE  2BBC               	goto	u93lld
  5103  03AF  0AAB               	incf	___aomod@dividend+3,f
  5104  03B0  1D03               	skipz
  5105  03B1  2BBC               	goto	u93lld
  5106  03B2  0AAC               	incf	___aomod@dividend+4,f
  5107  03B3  1D03               	skipz
  5108  03B4  2BBC               	goto	u93lld
  5109  03B5  0AAD               	incf	___aomod@dividend+5,f
  5110  03B6  1D03               	skipz
  5111  03B7  2BBC               	goto	u93lld
  5112  03B8  0AAE               	incf	___aomod@dividend+6,f
  5113  03B9  1D03               	skipz
  5114  03BA  2BBC               	goto	u93lld
  5115  03BB  0AAF               	incf	___aomod@dividend+7,f
  5116  03BC                     u93lld:
  5117  03BC  01F2               	clrf	___aomod@sign
  5118  03BD  0AF2               	incf	___aomod@sign,f
  5119  03BE                     l1292:
  5120  03BE  3020               	movlw	low ___aomod@divisor
  5121  03BF  0086               	movwf	6
  5122  03C0  3000               	movlw	high ___aomod@divisor
  5123  03C1  0087               	movwf	7
  5124  03C2  3F47               	moviw [7]fsr1
  5125  03C3  00F0               	movwf	??___aomod
  5126  03C4  1FF0               	btfss	??___aomod,7
  5127  03C5  2BC7               	goto	u941
  5128  03C6  2BC8               	goto	u940
  5129  03C7                     u941:
  5130  03C7  2BE7               	goto	l1296
  5131  03C8                     u940:
  5132  03C8                     l1294:
  5133  03C8  0020               	movlb	0	; select bank0
  5134  03C9  09A0               	comf	___aomod@divisor,f
  5135  03CA  09A1               	comf	___aomod@divisor+1,f
  5136  03CB  09A2               	comf	___aomod@divisor+2,f
  5137  03CC  09A3               	comf	___aomod@divisor+3,f
  5138  03CD  09A4               	comf	___aomod@divisor+4,f
  5139  03CE  09A5               	comf	___aomod@divisor+5,f
  5140  03CF  09A6               	comf	___aomod@divisor+6,f
  5141  03D0  09A7               	comf	___aomod@divisor+7,f
  5142  03D1  0AA0               	incf	___aomod@divisor,f
  5143  03D2  1D03               	skipz
  5144  03D3  2BE7               	goto	u95lld
  5145  03D4  0AA1               	incf	___aomod@divisor+1,f
  5146  03D5  1D03               	skipz
  5147  03D6  2BE7               	goto	u95lld
  5148  03D7  0AA2               	incf	___aomod@divisor+2,f
  5149  03D8  1D03               	skipz
  5150  03D9  2BE7               	goto	u95lld
  5151  03DA  0AA3               	incf	___aomod@divisor+3,f
  5152  03DB  1D03               	skipz
  5153  03DC  2BE7               	goto	u95lld
  5154  03DD  0AA4               	incf	___aomod@divisor+4,f
  5155  03DE  1D03               	skipz
  5156  03DF  2BE7               	goto	u95lld
  5157  03E0  0AA5               	incf	___aomod@divisor+5,f
  5158  03E1  1D03               	skipz
  5159  03E2  2BE7               	goto	u95lld
  5160  03E3  0AA6               	incf	___aomod@divisor+6,f
  5161  03E4  1D03               	skipz
  5162  03E5  2BE7               	goto	u95lld
  5163  03E6  0AA7               	incf	___aomod@divisor+7,f
  5164  03E7                     u95lld:
  5165  03E7                     l1296:
  5166  03E7  0020               	movlb	0	; select bank0
  5167  03E8  0820               	movf	___aomod@divisor,w
  5168  03E9  0421               	iorwf	___aomod@divisor+1,w
  5169  03EA  0422               	iorwf	___aomod@divisor+2,w
  5170  03EB  0423               	iorwf	___aomod@divisor+3,w
  5171  03EC  0424               	iorwf	___aomod@divisor+4,w
  5172  03ED  0425               	iorwf	___aomod@divisor+5,w
  5173  03EE  0426               	iorwf	___aomod@divisor+6,w
  5174  03EF  0427               	iorwf	___aomod@divisor+7,w
  5175  03F0  1903               	skipnz
  5176  03F1  2BF3               	goto	u961
  5177  03F2  2BF4               	goto	u960
  5178  03F3                     u961:
  5179  03F3  2C47               	goto	l1312
  5180  03F4                     u960:
  5181  03F4                     l1298:
  5182  03F4  01F1               	clrf	___aomod@counter
  5183  03F5  0AF1               	incf	___aomod@counter,f
  5184  03F6  2C03               	goto	l1304
  5185  03F7                     l1300:
  5186  03F7  35A0               	lslf	___aomod@divisor,f
  5187  03F8  0DA1               	rlf	___aomod@divisor+1,f
  5188  03F9  0DA2               	rlf	___aomod@divisor+2,f
  5189  03FA  0DA3               	rlf	___aomod@divisor+3,f
  5190  03FB  0DA4               	rlf	___aomod@divisor+4,f
  5191  03FC  0DA5               	rlf	___aomod@divisor+5,f
  5192  03FD  0DA6               	rlf	___aomod@divisor+6,f
  5193  03FE  0DA7               	rlf	___aomod@divisor+7,f
  5194  03FF                     l1302:
  5195  03FF  3001               	movlw	1
  5196  0400  00F0               	movwf	??___aomod
  5197  0401  0870               	movf	??___aomod,w
  5198  0402  07F1               	addwf	___aomod@counter,f
  5199  0403                     l1304:
  5200  0403  1FA7               	btfss	___aomod@divisor+7,7
  5201  0404  2C06               	goto	u971
  5202  0405  2C07               	goto	u970
  5203  0406                     u971:
  5204  0406  2BF7               	goto	l1300
  5205  0407                     u970:
  5206  0407                     l1306:
  5207  0407  0827               	movf	___aomod@divisor+7,w
  5208  0408  022F               	subwf	___aomod@dividend+7,w
  5209  0409  1D03               	skipz
  5210  040A  2C25               	goto	u985
  5211  040B  0826               	movf	___aomod@divisor+6,w
  5212  040C  022E               	subwf	___aomod@dividend+6,w
  5213  040D  1D03               	skipz
  5214  040E  2C25               	goto	u985
  5215  040F  0825               	movf	___aomod@divisor+5,w
  5216  0410  022D               	subwf	___aomod@dividend+5,w
  5217  0411  1D03               	skipz
  5218  0412  2C25               	goto	u985
  5219  0413  0824               	movf	___aomod@divisor+4,w
  5220  0414  022C               	subwf	___aomod@dividend+4,w
  5221  0415  1D03               	skipz
  5222  0416  2C25               	goto	u985
  5223  0417  0823               	movf	___aomod@divisor+3,w
  5224  0418  022B               	subwf	___aomod@dividend+3,w
  5225  0419  1D03               	skipz
  5226  041A  2C25               	goto	u985
  5227  041B  0822               	movf	___aomod@divisor+2,w
  5228  041C  022A               	subwf	___aomod@dividend+2,w
  5229  041D  1D03               	skipz
  5230  041E  2C25               	goto	u985
  5231  041F  0821               	movf	___aomod@divisor+1,w
  5232  0420  0229               	subwf	___aomod@dividend+1,w
  5233  0421  1D03               	skipz
  5234  0422  2C25               	goto	u985
  5235  0423  0820               	movf	___aomod@divisor,w
  5236  0424  0228               	subwf	___aomod@dividend,w
  5237  0425                     u985:
  5238  0425  1C03               	skipc
  5239  0426  2C28               	goto	u981
  5240  0427  2C29               	goto	u980
  5241  0428                     u981:
  5242  0428  2C39               	goto	l1310
  5243  0429                     u980:
  5244  0429                     l1308:
  5245  0429  0820               	movf	___aomod@divisor,w
  5246  042A  02A8               	subwf	___aomod@dividend,f
  5247  042B  0821               	movf	___aomod@divisor+1,w
  5248  042C  3BA9               	subwfb	___aomod@dividend+1,f
  5249  042D  0822               	movf	___aomod@divisor+2,w
  5250  042E  3BAA               	subwfb	___aomod@dividend+2,f
  5251  042F  0823               	movf	___aomod@divisor+3,w
  5252  0430  3BAB               	subwfb	___aomod@dividend+3,f
  5253  0431  0824               	movf	___aomod@divisor+4,w
  5254  0432  3BAC               	subwfb	___aomod@dividend+4,f
  5255  0433  0825               	movf	___aomod@divisor+5,w
  5256  0434  3BAD               	subwfb	___aomod@dividend+5,f
  5257  0435  0826               	movf	___aomod@divisor+6,w
  5258  0436  3BAE               	subwfb	___aomod@dividend+6,f
  5259  0437  0827               	movf	___aomod@divisor+7,w
  5260  0438  3BAF               	subwfb	___aomod@dividend+7,f
  5261  0439                     l1310:
  5262  0439  36A7               	lsrf	___aomod@divisor+7,f
  5263  043A  0CA6               	rrf	___aomod@divisor+6,f
  5264  043B  0CA5               	rrf	___aomod@divisor+5,f
  5265  043C  0CA4               	rrf	___aomod@divisor+4,f
  5266  043D  0CA3               	rrf	___aomod@divisor+3,f
  5267  043E  0CA2               	rrf	___aomod@divisor+2,f
  5268  043F  0CA1               	rrf	___aomod@divisor+1,f
  5269  0440  0CA0               	rrf	___aomod@divisor,f
  5270  0441  3001               	movlw	1
  5271  0442  02F1               	subwf	___aomod@counter,f
  5272  0443  1D03               	btfss	3,2
  5273  0444  2C46               	goto	u991
  5274  0445  2C47               	goto	u990
  5275  0446                     u991:
  5276  0446  2C07               	goto	l1306
  5277  0447                     u990:
  5278  0447                     l1312:
  5279  0447  0872               	movf	___aomod@sign,w
  5280  0448  1903               	btfsc	3,2
  5281  0449  2C4B               	goto	u1001
  5282  044A  2C4C               	goto	u1000
  5283  044B                     u1001:
  5284  044B  2C6A               	goto	l361
  5285  044C                     u1000:
  5286  044C                     l1314:
  5287  044C  09A8               	comf	___aomod@dividend,f
  5288  044D  09A9               	comf	___aomod@dividend+1,f
  5289  044E  09AA               	comf	___aomod@dividend+2,f
  5290  044F  09AB               	comf	___aomod@dividend+3,f
  5291  0450  09AC               	comf	___aomod@dividend+4,f
  5292  0451  09AD               	comf	___aomod@dividend+5,f
  5293  0452  09AE               	comf	___aomod@dividend+6,f
  5294  0453  09AF               	comf	___aomod@dividend+7,f
  5295  0454  0AA8               	incf	___aomod@dividend,f
  5296  0455  1D03               	skipz
  5297  0456  2C6A               	goto	u101lld
  5298  0457  0AA9               	incf	___aomod@dividend+1,f
  5299  0458  1D03               	skipz
  5300  0459  2C6A               	goto	u101lld
  5301  045A  0AAA               	incf	___aomod@dividend+2,f
  5302  045B  1D03               	skipz
  5303  045C  2C6A               	goto	u101lld
  5304  045D  0AAB               	incf	___aomod@dividend+3,f
  5305  045E  1D03               	skipz
  5306  045F  2C6A               	goto	u101lld
  5307  0460  0AAC               	incf	___aomod@dividend+4,f
  5308  0461  1D03               	skipz
  5309  0462  2C6A               	goto	u101lld
  5310  0463  0AAD               	incf	___aomod@dividend+5,f
  5311  0464  1D03               	skipz
  5312  0465  2C6A               	goto	u101lld
  5313  0466  0AAE               	incf	___aomod@dividend+6,f
  5314  0467  1D03               	skipz
  5315  0468  2C6A               	goto	u101lld
  5316  0469  0AAF               	incf	___aomod@dividend+7,f
  5317  046A                     u101lld:
  5318  046A                     l361:
  5319  046A  0020               	movlb	0	; select bank0
  5320  046B  0828               	movf	___aomod@dividend,w
  5321  046C  00A0               	movwf	?___aomod
  5322  046D  0829               	movf	___aomod@dividend+1,w
  5323  046E  00A1               	movwf	?___aomod+1
  5324  046F  082A               	movf	___aomod@dividend+2,w
  5325  0470  00A2               	movwf	?___aomod+2
  5326  0471  082B               	movf	___aomod@dividend+3,w
  5327  0472  00A3               	movwf	?___aomod+3
  5328  0473  082C               	movf	___aomod@dividend+4,w
  5329  0474  00A4               	movwf	?___aomod+4
  5330  0475  082D               	movf	___aomod@dividend+5,w
  5331  0476  00A5               	movwf	?___aomod+5
  5332  0477  082E               	movf	___aomod@dividend+6,w
  5333  0478  00A6               	movwf	?___aomod+6
  5334  0479  082F               	movf	___aomod@dividend+7,w
  5335  047A  00A7               	movwf	?___aomod+7
  5336  047B                     l362:
  5337  047B  0008               	return
  5338  047C                     __end_of___aomod:
  5339                           
  5340                           	psect	text17
  5341  047C                     __ptext17:	
  5342 ;; *************** function ___aodiv *****************
  5343 ;; Defined at:
  5344 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  5345 ;; Parameters:    Size  Location     Type
  5346 ;;  divisor         8    0[BANK0 ] long long 
  5347 ;;  dividend        8    8[BANK0 ] long long 
  5348 ;; Auto vars:     Size  Location     Type
  5349 ;;  quotient        8    3[COMMON] long long 
  5350 ;;  sign            1    2[COMMON] unsigned char 
  5351 ;;  counter         1    1[COMMON] unsigned char 
  5352 ;; Return value:  Size  Location     Type
  5353 ;;                  8    0[BANK0 ] long long 
  5354 ;; Registers used:
  5355 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5356 ;; Tracked objects:
  5357 ;;		On entry : 0/0
  5358 ;;		On exit  : 0/0
  5359 ;;		Unchanged: 0/0
  5360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5361 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5362 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5363 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5364 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5365 ;;Total ram usage:       27 bytes
  5366 ;; Hardware stack levels used: 1
  5367 ;; This function calls:
  5368 ;;		Nothing
  5369 ;; This function is called by:
  5370 ;;		_dtoa
  5371 ;; This function uses a non-reentrant model
  5372 ;;
  5373                           
  5374                           
  5375                           ;psect for function ___aodiv
  5376  047C                     ___aodiv:
  5377  047C                     l1248:	
  5378                           ;incstack = 0
  5379                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  5380                           
  5381  047C  01F2               	clrf	___aodiv@sign
  5382  047D                     l1250:
  5383  047D  3020               	movlw	low ___aodiv@divisor
  5384  047E  0086               	movwf	6
  5385  047F  3000               	movlw	high ___aodiv@divisor
  5386  0480  0087               	movwf	7
  5387  0481  3F47               	moviw [7]fsr1
  5388  0482  00F0               	movwf	??___aodiv
  5389  0483  1FF0               	btfss	??___aodiv,7
  5390  0484  2C86               	goto	u811
  5391  0485  2C87               	goto	u810
  5392  0486                     u811:
  5393  0486  2CA8               	goto	l1254
  5394  0487                     u810:
  5395  0487                     l1252:
  5396  0487  0020               	movlb	0	; select bank0
  5397  0488  09A0               	comf	___aodiv@divisor,f
  5398  0489  09A1               	comf	___aodiv@divisor+1,f
  5399  048A  09A2               	comf	___aodiv@divisor+2,f
  5400  048B  09A3               	comf	___aodiv@divisor+3,f
  5401  048C  09A4               	comf	___aodiv@divisor+4,f
  5402  048D  09A5               	comf	___aodiv@divisor+5,f
  5403  048E  09A6               	comf	___aodiv@divisor+6,f
  5404  048F  09A7               	comf	___aodiv@divisor+7,f
  5405  0490  0AA0               	incf	___aodiv@divisor,f
  5406  0491  1D03               	skipz
  5407  0492  2CA6               	goto	u82lld
  5408  0493  0AA1               	incf	___aodiv@divisor+1,f
  5409  0494  1D03               	skipz
  5410  0495  2CA6               	goto	u82lld
  5411  0496  0AA2               	incf	___aodiv@divisor+2,f
  5412  0497  1D03               	skipz
  5413  0498  2CA6               	goto	u82lld
  5414  0499  0AA3               	incf	___aodiv@divisor+3,f
  5415  049A  1D03               	skipz
  5416  049B  2CA6               	goto	u82lld
  5417  049C  0AA4               	incf	___aodiv@divisor+4,f
  5418  049D  1D03               	skipz
  5419  049E  2CA6               	goto	u82lld
  5420  049F  0AA5               	incf	___aodiv@divisor+5,f
  5421  04A0  1D03               	skipz
  5422  04A1  2CA6               	goto	u82lld
  5423  04A2  0AA6               	incf	___aodiv@divisor+6,f
  5424  04A3  1D03               	skipz
  5425  04A4  2CA6               	goto	u82lld
  5426  04A5  0AA7               	incf	___aodiv@divisor+7,f
  5427  04A6                     u82lld:
  5428  04A6  01F2               	clrf	___aodiv@sign
  5429  04A7  0AF2               	incf	___aodiv@sign,f
  5430  04A8                     l1254:
  5431  04A8  3028               	movlw	low ___aodiv@dividend
  5432  04A9  0086               	movwf	6
  5433  04AA  3000               	movlw	high ___aodiv@dividend
  5434  04AB  0087               	movwf	7
  5435  04AC  3F47               	moviw [7]fsr1
  5436  04AD  00F0               	movwf	??___aodiv
  5437  04AE  1FF0               	btfss	??___aodiv,7
  5438  04AF  2CB1               	goto	u831
  5439  04B0  2CB2               	goto	u830
  5440  04B1                     u831:
  5441  04B1  2CD5               	goto	l1260
  5442  04B2                     u830:
  5443  04B2                     l1256:
  5444  04B2  0020               	movlb	0	; select bank0
  5445  04B3  09A8               	comf	___aodiv@dividend,f
  5446  04B4  09A9               	comf	___aodiv@dividend+1,f
  5447  04B5  09AA               	comf	___aodiv@dividend+2,f
  5448  04B6  09AB               	comf	___aodiv@dividend+3,f
  5449  04B7  09AC               	comf	___aodiv@dividend+4,f
  5450  04B8  09AD               	comf	___aodiv@dividend+5,f
  5451  04B9  09AE               	comf	___aodiv@dividend+6,f
  5452  04BA  09AF               	comf	___aodiv@dividend+7,f
  5453  04BB  0AA8               	incf	___aodiv@dividend,f
  5454  04BC  1D03               	skipz
  5455  04BD  2CD1               	goto	u84lld
  5456  04BE  0AA9               	incf	___aodiv@dividend+1,f
  5457  04BF  1D03               	skipz
  5458  04C0  2CD1               	goto	u84lld
  5459  04C1  0AAA               	incf	___aodiv@dividend+2,f
  5460  04C2  1D03               	skipz
  5461  04C3  2CD1               	goto	u84lld
  5462  04C4  0AAB               	incf	___aodiv@dividend+3,f
  5463  04C5  1D03               	skipz
  5464  04C6  2CD1               	goto	u84lld
  5465  04C7  0AAC               	incf	___aodiv@dividend+4,f
  5466  04C8  1D03               	skipz
  5467  04C9  2CD1               	goto	u84lld
  5468  04CA  0AAD               	incf	___aodiv@dividend+5,f
  5469  04CB  1D03               	skipz
  5470  04CC  2CD1               	goto	u84lld
  5471  04CD  0AAE               	incf	___aodiv@dividend+6,f
  5472  04CE  1D03               	skipz
  5473  04CF  2CD1               	goto	u84lld
  5474  04D0  0AAF               	incf	___aodiv@dividend+7,f
  5475  04D1                     u84lld:
  5476  04D1                     l1258:
  5477  04D1  3001               	movlw	1
  5478  04D2  00F0               	movwf	??___aodiv
  5479  04D3  0870               	movf	??___aodiv,w
  5480  04D4  06F2               	xorwf	___aodiv@sign,f
  5481  04D5                     l1260:
  5482  04D5  3073               	movlw	low ___aodiv@quotient
  5483  04D6  0086               	movwf	6
  5484  04D7  3000               	movlw	high ___aodiv@quotient
  5485  04D8  0087               	movwf	7
  5486  04D9  3008               	movlw	8
  5487  04DA  00F0               	movwf	??___aodiv
  5488  04DB  3000               	movlw	0
  5489  04DC                     u850:
  5490  04DC  001E               	movwi fsr1++
  5491  04DD  0BF0               	decfsz	??___aodiv,f
  5492  04DE  2CDC               	goto	u850
  5493  04DF                     l1262:
  5494  04DF  0020               	movlb	0	; select bank0
  5495  04E0  0820               	movf	___aodiv@divisor,w
  5496  04E1  0421               	iorwf	___aodiv@divisor+1,w
  5497  04E2  0422               	iorwf	___aodiv@divisor+2,w
  5498  04E3  0423               	iorwf	___aodiv@divisor+3,w
  5499  04E4  0424               	iorwf	___aodiv@divisor+4,w
  5500  04E5  0425               	iorwf	___aodiv@divisor+5,w
  5501  04E6  0426               	iorwf	___aodiv@divisor+6,w
  5502  04E7  0427               	iorwf	___aodiv@divisor+7,w
  5503  04E8  1903               	skipnz
  5504  04E9  2CEB               	goto	u861
  5505  04EA  2CEC               	goto	u860
  5506  04EB                     u861:
  5507  04EB  2D48               	goto	l1282
  5508  04EC                     u860:
  5509  04EC                     l1264:
  5510  04EC  01F1               	clrf	___aodiv@counter
  5511  04ED  0AF1               	incf	___aodiv@counter,f
  5512  04EE  2CFB               	goto	l1270
  5513  04EF                     l1266:
  5514  04EF  35A0               	lslf	___aodiv@divisor,f
  5515  04F0  0DA1               	rlf	___aodiv@divisor+1,f
  5516  04F1  0DA2               	rlf	___aodiv@divisor+2,f
  5517  04F2  0DA3               	rlf	___aodiv@divisor+3,f
  5518  04F3  0DA4               	rlf	___aodiv@divisor+4,f
  5519  04F4  0DA5               	rlf	___aodiv@divisor+5,f
  5520  04F5  0DA6               	rlf	___aodiv@divisor+6,f
  5521  04F6  0DA7               	rlf	___aodiv@divisor+7,f
  5522  04F7                     l1268:
  5523  04F7  3001               	movlw	1
  5524  04F8  00F0               	movwf	??___aodiv
  5525  04F9  0870               	movf	??___aodiv,w
  5526  04FA  07F1               	addwf	___aodiv@counter,f
  5527  04FB                     l1270:
  5528  04FB  1FA7               	btfss	___aodiv@divisor+7,7
  5529  04FC  2CFE               	goto	u871
  5530  04FD  2CFF               	goto	u870
  5531  04FE                     u871:
  5532  04FE  2CEF               	goto	l1266
  5533  04FF                     u870:
  5534  04FF                     l1272:
  5535  04FF  35F3               	lslf	___aodiv@quotient,f
  5536  0500  0DF4               	rlf	___aodiv@quotient+1,f
  5537  0501  0DF5               	rlf	___aodiv@quotient+2,f
  5538  0502  0DF6               	rlf	___aodiv@quotient+3,f
  5539  0503  0DF7               	rlf	___aodiv@quotient+4,f
  5540  0504  0DF8               	rlf	___aodiv@quotient+5,f
  5541  0505  0DF9               	rlf	___aodiv@quotient+6,f
  5542  0506  0DFA               	rlf	___aodiv@quotient+7,f
  5543  0507                     l1274:
  5544  0507  0827               	movf	___aodiv@divisor+7,w
  5545  0508  022F               	subwf	___aodiv@dividend+7,w
  5546  0509  1D03               	skipz
  5547  050A  2D25               	goto	u885
  5548  050B  0826               	movf	___aodiv@divisor+6,w
  5549  050C  022E               	subwf	___aodiv@dividend+6,w
  5550  050D  1D03               	skipz
  5551  050E  2D25               	goto	u885
  5552  050F  0825               	movf	___aodiv@divisor+5,w
  5553  0510  022D               	subwf	___aodiv@dividend+5,w
  5554  0511  1D03               	skipz
  5555  0512  2D25               	goto	u885
  5556  0513  0824               	movf	___aodiv@divisor+4,w
  5557  0514  022C               	subwf	___aodiv@dividend+4,w
  5558  0515  1D03               	skipz
  5559  0516  2D25               	goto	u885
  5560  0517  0823               	movf	___aodiv@divisor+3,w
  5561  0518  022B               	subwf	___aodiv@dividend+3,w
  5562  0519  1D03               	skipz
  5563  051A  2D25               	goto	u885
  5564  051B  0822               	movf	___aodiv@divisor+2,w
  5565  051C  022A               	subwf	___aodiv@dividend+2,w
  5566  051D  1D03               	skipz
  5567  051E  2D25               	goto	u885
  5568  051F  0821               	movf	___aodiv@divisor+1,w
  5569  0520  0229               	subwf	___aodiv@dividend+1,w
  5570  0521  1D03               	skipz
  5571  0522  2D25               	goto	u885
  5572  0523  0820               	movf	___aodiv@divisor,w
  5573  0524  0228               	subwf	___aodiv@dividend,w
  5574  0525                     u885:
  5575  0525  1C03               	skipc
  5576  0526  2D28               	goto	u881
  5577  0527  2D29               	goto	u880
  5578  0528                     u881:
  5579  0528  2D3A               	goto	l1280
  5580  0529                     u880:
  5581  0529                     l1276:
  5582  0529  0820               	movf	___aodiv@divisor,w
  5583  052A  02A8               	subwf	___aodiv@dividend,f
  5584  052B  0821               	movf	___aodiv@divisor+1,w
  5585  052C  3BA9               	subwfb	___aodiv@dividend+1,f
  5586  052D  0822               	movf	___aodiv@divisor+2,w
  5587  052E  3BAA               	subwfb	___aodiv@dividend+2,f
  5588  052F  0823               	movf	___aodiv@divisor+3,w
  5589  0530  3BAB               	subwfb	___aodiv@dividend+3,f
  5590  0531  0824               	movf	___aodiv@divisor+4,w
  5591  0532  3BAC               	subwfb	___aodiv@dividend+4,f
  5592  0533  0825               	movf	___aodiv@divisor+5,w
  5593  0534  3BAD               	subwfb	___aodiv@dividend+5,f
  5594  0535  0826               	movf	___aodiv@divisor+6,w
  5595  0536  3BAE               	subwfb	___aodiv@dividend+6,f
  5596  0537  0827               	movf	___aodiv@divisor+7,w
  5597  0538  3BAF               	subwfb	___aodiv@dividend+7,f
  5598  0539                     l1278:
  5599  0539  1473               	bsf	___aodiv@quotient,0
  5600  053A                     l1280:
  5601  053A  36A7               	lsrf	___aodiv@divisor+7,f
  5602  053B  0CA6               	rrf	___aodiv@divisor+6,f
  5603  053C  0CA5               	rrf	___aodiv@divisor+5,f
  5604  053D  0CA4               	rrf	___aodiv@divisor+4,f
  5605  053E  0CA3               	rrf	___aodiv@divisor+3,f
  5606  053F  0CA2               	rrf	___aodiv@divisor+2,f
  5607  0540  0CA1               	rrf	___aodiv@divisor+1,f
  5608  0541  0CA0               	rrf	___aodiv@divisor,f
  5609  0542  3001               	movlw	1
  5610  0543  02F1               	subwf	___aodiv@counter,f
  5611  0544  1D03               	btfss	3,2
  5612  0545  2D47               	goto	u891
  5613  0546  2D48               	goto	u890
  5614  0547                     u891:
  5615  0547  2CFF               	goto	l1272
  5616  0548                     u890:
  5617  0548                     l1282:
  5618  0548  0872               	movf	___aodiv@sign,w
  5619  0549  1903               	btfsc	3,2
  5620  054A  2D4C               	goto	u901
  5621  054B  2D4D               	goto	u900
  5622  054C                     u901:
  5623  054C  2D6B               	goto	l348
  5624  054D                     u900:
  5625  054D                     l1284:
  5626  054D  09F3               	comf	___aodiv@quotient,f
  5627  054E  09F4               	comf	___aodiv@quotient+1,f
  5628  054F  09F5               	comf	___aodiv@quotient+2,f
  5629  0550  09F6               	comf	___aodiv@quotient+3,f
  5630  0551  09F7               	comf	___aodiv@quotient+4,f
  5631  0552  09F8               	comf	___aodiv@quotient+5,f
  5632  0553  09F9               	comf	___aodiv@quotient+6,f
  5633  0554  09FA               	comf	___aodiv@quotient+7,f
  5634  0555  0AF3               	incf	___aodiv@quotient,f
  5635  0556  1D03               	skipz
  5636  0557  2D6B               	goto	u91lld
  5637  0558  0AF4               	incf	___aodiv@quotient+1,f
  5638  0559  1D03               	skipz
  5639  055A  2D6B               	goto	u91lld
  5640  055B  0AF5               	incf	___aodiv@quotient+2,f
  5641  055C  1D03               	skipz
  5642  055D  2D6B               	goto	u91lld
  5643  055E  0AF6               	incf	___aodiv@quotient+3,f
  5644  055F  1D03               	skipz
  5645  0560  2D6B               	goto	u91lld
  5646  0561  0AF7               	incf	___aodiv@quotient+4,f
  5647  0562  1D03               	skipz
  5648  0563  2D6B               	goto	u91lld
  5649  0564  0AF8               	incf	___aodiv@quotient+5,f
  5650  0565  1D03               	skipz
  5651  0566  2D6B               	goto	u91lld
  5652  0567  0AF9               	incf	___aodiv@quotient+6,f
  5653  0568  1D03               	skipz
  5654  0569  2D6B               	goto	u91lld
  5655  056A  0AFA               	incf	___aodiv@quotient+7,f
  5656  056B                     u91lld:
  5657  056B                     l348:
  5658  056B  0873               	movf	___aodiv@quotient,w
  5659  056C  0020               	movlb	0	; select bank0
  5660  056D  00A0               	movwf	?___aodiv
  5661  056E  0874               	movf	___aodiv@quotient+1,w
  5662  056F  00A1               	movwf	?___aodiv+1
  5663  0570  0875               	movf	___aodiv@quotient+2,w
  5664  0571  00A2               	movwf	?___aodiv+2
  5665  0572  0876               	movf	___aodiv@quotient+3,w
  5666  0573  00A3               	movwf	?___aodiv+3
  5667  0574  0877               	movf	___aodiv@quotient+4,w
  5668  0575  00A4               	movwf	?___aodiv+4
  5669  0576  0878               	movf	___aodiv@quotient+5,w
  5670  0577  00A5               	movwf	?___aodiv+5
  5671  0578  0879               	movf	___aodiv@quotient+6,w
  5672  0579  00A6               	movwf	?___aodiv+6
  5673  057A  087A               	movf	___aodiv@quotient+7,w
  5674  057B  00A7               	movwf	?___aodiv+7
  5675  057C                     l349:
  5676  057C  0008               	return
  5677  057D                     __end_of___aodiv:
  5678                           
  5679                           	psect	text18
  5680  00DF                     __ptext18:	
  5681 ;; *************** function _port_init *****************
  5682 ;; Defined at:
  5683 ;;		line 52 in file "Main.c"
  5684 ;; Parameters:    Size  Location     Type
  5685 ;;		None
  5686 ;; Auto vars:     Size  Location     Type
  5687 ;;		None
  5688 ;; Return value:  Size  Location     Type
  5689 ;;                  1    wreg      void 
  5690 ;; Registers used:
  5691 ;;		wreg, status,2
  5692 ;; Tracked objects:
  5693 ;;		On entry : 0/0
  5694 ;;		On exit  : 0/0
  5695 ;;		Unchanged: 0/0
  5696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5701 ;;Total ram usage:        0 bytes
  5702 ;; Hardware stack levels used: 1
  5703 ;; This function calls:
  5704 ;;		Nothing
  5705 ;; This function is called by:
  5706 ;;		_main
  5707 ;; This function uses a non-reentrant model
  5708 ;;
  5709                           
  5710                           
  5711                           ;psect for function _port_init
  5712  00DF                     _port_init:
  5713  00DF                     l1492:	
  5714                           ;incstack = 0
  5715                           ; Regs used in _port_init: [wreg+status,2]
  5716                           
  5717                           
  5718                           ;Main.c: 54:     ANSELA = 0;
  5719  00DF  003E               	movlb	30	; select bank30
  5720  00E0  01B8               	clrf	56	;volatile
  5721                           
  5722                           ;Main.c: 55:     LATA=0;
  5723  00E1  0020               	movlb	0	; select bank0
  5724  00E2  0196               	clrf	22	;volatile
  5725                           
  5726                           ;Main.c: 56:     PORTA =0;
  5727  00E3  018C               	clrf	12	;volatile
  5728  00E4                     l1494:
  5729                           
  5730                           ;Main.c: 57:     TRISA = 0b11110000;
  5731  00E4  30F0               	movlw	240
  5732  00E5  0091               	movwf	17	;volatile
  5733  00E6                     l1496:
  5734                           
  5735                           ;Main.c: 60:     TRISC = 0b10;
  5736  00E6  3002               	movlw	2
  5737  00E7  0093               	movwf	19	;volatile
  5738                           
  5739                           ;Main.c: 61:     ANSELC = 0;
  5740  00E8  003E               	movlb	30	; select bank30
  5741  00E9  01CE               	clrf	78	;volatile
  5742  00EA                     l42:
  5743  00EA  0008               	return
  5744  00EB                     __end_of_port_init:
  5745                           
  5746                           	psect	text19
  5747  00D2                     __ptext19:	
  5748 ;; *************** function _adc_init *****************
  5749 ;; Defined at:
  5750 ;;		line 2 in file "adc.c"
  5751 ;; Parameters:    Size  Location     Type
  5752 ;;		None
  5753 ;; Auto vars:     Size  Location     Type
  5754 ;;		None
  5755 ;; Return value:  Size  Location     Type
  5756 ;;                  1    wreg      void 
  5757 ;; Registers used:
  5758 ;;		None
  5759 ;; Tracked objects:
  5760 ;;		On entry : 0/0
  5761 ;;		On exit  : 0/0
  5762 ;;		Unchanged: 0/0
  5763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5768 ;;Total ram usage:        0 bytes
  5769 ;; Hardware stack levels used: 1
  5770 ;; This function calls:
  5771 ;;		Nothing
  5772 ;; This function is called by:
  5773 ;;		_main
  5774 ;; This function uses a non-reentrant model
  5775 ;;
  5776                           
  5777                           
  5778                           ;psect for function _adc_init
  5779  00D2                     _adc_init:
  5780  00D2                     l93:	
  5781                           ;incstack = 0
  5782                           ; Regs used in _adc_init: []
  5783                           
  5784  00D2  0008               	return
  5785  00D3                     __end_of_adc_init:
  5786  007E                     btemp	set	126	;btemp
  5787  007E                     wtemp0	set	126
  5788                           
  5789                           	psect	idloc
  5790                           
  5791                           ;Config register IDLOC0 @ 0x8000
  5792                           ;	unspecified, using default values
  5793  8000                     	org	32768
  5794  8000  3FFF               	dw	16383
  5795                           
  5796                           ;Config register IDLOC1 @ 0x8001
  5797                           ;	unspecified, using default values
  5798  8001                     	org	32769
  5799  8001  3FFF               	dw	16383
  5800                           
  5801                           ;Config register IDLOC2 @ 0x8002
  5802                           ;	unspecified, using default values
  5803  8002                     	org	32770
  5804  8002  3FFF               	dw	16383
  5805                           
  5806                           ;Config register IDLOC3 @ 0x8003
  5807                           ;	unspecified, using default values
  5808  8003                     	org	32771
  5809  8003  3FFF               	dw	16383
  5810                           
  5811                           	psect	config
  5812                           
  5813                           ;Config register CONFIG1 @ 0x8007
  5814                           ;	External Oscillator mode selection bits
  5815                           ;	FEXTOSC = OFF, Oscillator not enabled
  5816                           ;	Power-up default value for COSC bits
  5817                           ;	RSTOSC = HFINT32, HFINTOSC with OSCFRQ= 32 MHz and CDIV = 1:1
  5818                           ;	Clock Out Enable bit
  5819                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
  5820                           ;	Clock Switch Enable bit
  5821                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  5822                           ;	Fail-Safe Clock Monitor Enable bit
  5823                           ;	FCMEN = ON, FSCM timer enabled
  5824  8007                     	org	32775
  5825  8007  3F8C               	dw	16268
  5826                           
  5827                           ;Config register CONFIG2 @ 0x8008
  5828                           ;	Master Clear Enable bit
  5829                           ;	MCLRE = ON, MCLR pin is Master Clear function
  5830                           ;	Power-up Timer Enable bit
  5831                           ;	PWRTE = OFF, PWRT disabled
  5832                           ;	Low-Power BOR enable bit
  5833                           ;	LPBOREN = OFF, ULPBOR disabled
  5834                           ;	Brown-out reset enable bits
  5835                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  5836                           ;	Brown-out Reset Voltage Selection
  5837                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
  5838                           ;	Zero-cross detect disable
  5839                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
  5840                           ;	Peripheral Pin Select one-way control
  5841                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
  5842                           ;	Stack Overflow/Underflow Reset Enable bit
  5843                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  5844                           ;	Background Debugger
  5845                           ;	DEBUG = 0x1, unprogrammed default
  5846  8008                     	org	32776
  5847  8008  3FFF               	dw	16383
  5848                           
  5849                           ;Config register CONFIG3 @ 0x8009
  5850                           ;	WDT Period Select bits
  5851                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  5852                           ;	WDT operating mode
  5853                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
  5854                           ;	WDT Window Select bits
  5855                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  5856                           ;	WDT input clock selector
  5857                           ;	WDTCCS = SC, Software Control
  5858  8009                     	org	32777
  5859  8009  3F9F               	dw	16287
  5860                           
  5861                           ;Config register CONFIG4 @ 0x800A
  5862                           ;	UserNVM self-write protection bits
  5863                           ;	WRT = OFF, Write protection off
  5864                           ;	Scanner Enable bit
  5865                           ;	SCANE = available, Scanner module is available for use
  5866                           ;	Low Voltage Programming Enable bit
  5867                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
  5868  800A                     	org	32778
  5869  800A  3FFF               	dw	16383
  5870                           
  5871                           ;Config register CONFIG5 @ 0x800B
  5872                           ;	UserNVM Program memory code protection bit
  5873                           ;	CP = OFF, Program Memory code protection disabled
  5874                           ;	DataNVM code protection bit
  5875                           ;	CPD = OFF, Data EEPROM code protection disabled
  5876  800B                     	org	32779
  5877  800B  3FFF               	dw	16383

Data Sizes:
    Strings     15
    Constant    0
    Data        0
    BSS         40
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     77      79
    BANK1            80     41      79
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 32
		 -> main@buffer(BANK1[32]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), ?_sprintf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 32
		 -> main@buffer(BANK1[32]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_1(CODE[15]), main@buffer(BANK1[32]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 32
		 -> STR_1(CODE[15]), main@buffer(BANK1[32]), 

    vfpfcnvrt@vp	PTR void  size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), ?_sprintf(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 32
		 -> main@buffer(BANK1[32]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), ?_sprintf(BANK0[2]), 

    S567_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 32
		 -> main@buffer(BANK1[32]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 32
		 -> main@buffer(BANK1[32]), 


Critical Paths under _main in COMMON

    _main->_printf
    _main->_sprintf
    _serial_init->___lldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_uart_tx
    _abs->___aomod

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                36    36      0   13384
                                             75 BANK0      2     2      0
                                              7 BANK1     34    34      0
                           _adc_init
                          _port_init
                             _printf
                        _serial_init
                            _sprintf
                            _uart_rx
 ---------------------------------------------------------------------------------
 (1) _uart_rx                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             14    10      4    6523
                                             13 COMMON     1     1      0
                                             71 BANK0      4     0      4
                                              0 BANK1      7     7      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _serial_init                                         10     6      4     457
                                              0 BANK0     10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _printf                                               5     5      0    6302
                                             13 COMMON     1     1      0
                                             71 BANK0      2     2      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    6213
                                             63 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           39    37      2    5714
                                             46 BANK0     17    15      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4231
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2625
                                             12 COMMON     1     1      0
                                              7 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1193
                                             11 COMMON     1     0      1
                                              0 BANK0      7     7      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     878
                                              3 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      44
                                              2 COMMON     1     1      0
                            _uart_tx
 ---------------------------------------------------------------------------------
 (6) _uart_tx                                              2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (1) _port_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_init
   _port_init
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _uart_tx
             _fputs
               _fputc
             _strlen
         _fputc
   _serial_init
     ___lldiv
   _sprintf
     _vfprintf
   _uart_rx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4D      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     29      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      AC      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      AC      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jun 21 12:20:18 2022

                     l42 00EA                       l71 00FA                       l65 0219  
                     l93 00D2                       l78 015E                       l87 00D8  
                    l361 046A                      l362 047B                      l348 056B  
                    l284 0318                      l349 057C                      l711 0182  
                    l803 0268                      l811 01AA                      l741 02A5  
                    l743 02BE                      l751 06F9                      l824 0126  
                    l752 070F                      l738 0283                      l746 06D1  
                    l818 010D                      l755 077E                      l747 06DB  
                    l791 0140                      l776 0687                      l784 01DB  
                    l769 07F1                      l788 0140                      u800 0120  
                    u801 011F                      u810 0487                      u811 0486  
                    u900 054D                      u740 00F7                      u901 054C  
                    u741 00F6                      u830 04B2                      u750 021F  
                    u831 04B1                      u735 00F0                      u751 021E  
                    u920 039D                      u760 0224                      u921 039C  
                    u761 0223                      u850 04DC                      u770 0233  
                    u771 0232                      u860 04EC                      u940 03C8  
                    u780 0250                      u861 04EB                      u941 03C7  
                    u781 024F                      u870 04FF                      u790 01AA  
                    u871 04FE                      u791 01A9                      u880 0529  
                    u960 03F4                      u881 0528                      u961 03F3  
                    u785 024C                      u890 0548                      u970 0407  
                    u891 0547                      u971 0406                      u980 0429  
                    u885 0525                      u981 0428                      u990 0447  
                    u991 0446                      u985 0425                      _abs 0127  
                    _pad 0269                      wreg 0009             _BAUD1CONbits 011F  
                   l1210 00F7                     ?_abs 0073                     l1300 03F7  
                   l1212 00D4                     l1220 0229                     l1310 0439  
                   l1302 03FF                     l1206 00EC                     l1222 0233  
                   l1214 021A                     l1230 0185                     l1304 0403  
                   l1312 0447                     l1208 00EC                     l1224 0250  
                   l1216 021F                     l1232 0188                     l1240 0114  
                   l1320 0277                     l1400 057F                     l1250 047D  
                   l1314 044C                     l1306 0407                     l1226 0260  
                   l1218 0224                     l1234 0196                     l1242 0118  
                   l1330 0297                     l1322 027C                     l1410 05B5  
                   l1402 0590                     l1260 04D5                     l1252 0487  
                   l1308 0429                     l1340 0134                     l1236 019B  
                   l1244 0120                     l1332 02AA                     l1324 0281  
                   l1316 026B                     l1420 0601                     l1412 05C6  
                   l1404 0598                     l1500 01DE       serial_init@baudios 0020  
                   l1270 04FB                     l1262 04DF                     l1254 04A8  
                   l1238 010F                     l1334 02B2                     l1326 0286  
                   l1318 026F                     l1350 06D6                     l1342 068A  
                   l1422 0612                     l1414 05CE                     l1406 059E  
                   l1510 0216                     l1502 01E2                     l1280 053A  
                   l1272 04FF                     l1264 04EC                     l1256 04B2  
                   l1248 047C                     l1328 0292                     l1360 070B  
                   l1352 06EB                     l1344 069A                     l1424 061A  
                   l1432 0631                     l1416 05E7                     l1408 05A3  
                   l1504 020C                     l1520 017A                     l1512 0161  
                   l1274 0507                     l1266 04EF                     l1282 0548  
                   l1258 04D1                     l1290 039D                     l1338 0127  
                   l1370 074D                     l1362 0713                     l1354 06F1  
                   l1346 06AD                     l1450 067D                     l1434 0642  
                   l1442 065B                     l1426 0625                     l1506 020F  
                   l1514 0169                     l1530 0141                     l1284 054D  
                   l1276 0529                     l1268 04F7                     l1292 03BE  
                   l1380 07B4                     l1372 0751                     l1364 0716  
                   l1356 0701                     l1348 06B3                     l1436 064A  
                   l1428 062D                     l1524 00FD                     l1460 02D2  
                   l1508 0213                     l1516 016B                     l1532 0141  
                   l1278 0539                     l1294 03C8                     l1286 0392  
                   l1390 07CE                     l1374 078C                     l1382 07B9  
                   l1366 071B                     l1358 0707                     l1438 0655  
                   l1526 0101                     l1470 0302                     l1462 02DD  
                   l1518 016D                     l1534 014C                     l1550 032D  
                   l1542 0319                     l1296 03E7                     l1288 0393  
                   l1392 07D3                     l1384 07C0                     l1376 0799  
                   l1368 0749                     l1448 0664                     l1480 01AD  
                   l1472 0303                     l1464 02E1                     l1456 02BF  
                   l1536 0157                     l1560 0361                     l1552 0331  
                   l1544 031B                     l1298 03F4                     l1394 07D7  
                   l1386 07C4                     l1378 07A6                     l1482 01B1  
                   l1474 030A                     l1466 02E8                     l1458 02CF  
                   l1538 015D                     l1570 0386                     l1562 0367  
                   l1554 033E                     l1546 031E                     l1492 00DF  
                   l1388 07C8                     l1396 07DF                     l1484 01B5  
                   l1468 02FA                     l1476 0310                     l1572 038B  
                   l1564 036B                     l1556 0342                     l1548 032A  
                   l1494 00E4                     l1486 01C9                     l1566 0377  
                   l1558 034F                     l1496 00E6                     l1488 01D3  
                   l1568 037F                     l1498 01DC                     ?_pad 0027  
                   STR_1 0800                     u1000 044C                     u1001 044B  
                   u1020 026F                     u1021 026E                     u1030 027C  
                   u1110 06D6                     u1031 027B                     u1111 06D5  
                   u1040 02A5                     u1200 07C0                     u1120 06EB  
                   u1041 02A4                     u1201 07BF                     u1121 06EA  
                   u1050 02AA                     u1210 07C4                     u1130 0707  
                   u1051 02A9                     u1211 07C3                     u1131 0706  
                   u1060 0134                     u1220 07CE                     u1140 070B  
                   u1300 02E1                     u1061 0133                     u1045 02A1  
                   u1221 07CD                     u1141 070A                     u1125 06E7  
                   u1301 02E0                     u1150 078C                     u1070 06A5  
                   u1230 0590                     u1151 078B                     u1071 06A3  
                   u1231 058F                     u1160 0799                     u1080 06A6  
                   u1240 05B5                     u1320 02FA                     u1400 0157  
                   u1065 0130                     u1161 0798                     u1241 05B4  
                   u1321 02F9                     u1401 0156                     u1170 07A6  
                   u1090 06B3                     u1250 05C6                     u1171 07A5  
                   u1155 0788                     u1091 06B2                     u1251 05C5  
                   u1315 02E2                     u1180 07B4                     u1260 0612  
                   u1340 0310                     u1420 0377                     u1181 07B3  
                   u1261 0611                     u1341 030F                     u1325 02F6  
                   u1421 0376                     _LATA 0016                     u1190 07B9  
                   u1270 0642                     u1350 01D3                     u1430 0386  
                   u1191 07B8                     u1175 07A2                     u1271 0641  
                   u1351 01D2                     u1335 0304                     u1431 0385  
                   u1415 0370                     u1280 02CF                     u1360 0204  
                   u1185 07B0                     u1281 02CE                     u1380 014C  
                   u1365 0200                     u1381 014B                     u1295 02D3  
                   u1375 0145                     u1457 0337                     u1395 0150  
                   u1467 0348                     _PIR3 070F                     abs@a 0073  
                   _dbuf 00CF                     _main 0319                     _dtoa 0688  
                   _prec 00CD                     _nout 00C9                     pad@i 002A  
                   pad@p 0028                     fsr0h 0005                     fsr1h 0007  
                   indf0 0000                     fsr0l 0004                     indf1 0001  
                   fsr1l 0006                     pad@w 002C                     btemp 007E  
                   start 0002                    ??_abs 0075                    ??_pad 007C  
        __end_of___aodiv 057D             main@contador 00C8                    ?_main 0070  
                  ?_dtoa 0030          __end_of___aomod 047C          __end_of___lldiv 0319  
                  _RCREG 0119             vfpfcnvrt@fmt 004E                    _PORTA 000C  
                  _TRISA 0011                    _TRISC 0013                    _RXPPS 0ECB  
                  _TXREG 011A                    u82lld 04A6                    u91lld 056B  
                  u84lld 04D1                    u93lld 03BC                    u95lld 03E7  
                  _flags 006D                    _fputc 021A                    _fputs 0183  
                  pad@fp 002E                    _width 00CB                    _putch 00D3  
                  dtoa@d 0030                    dtoa@i 004C                    dtoa@n 0044  
                  dtoa@p 003E                    dtoa@s 0042                    dtoa@w 0040  
        __end_of_uart_rx 015F          __end_of_uart_tx 00FB                    status 0003  
                  wtemp0 007E          __end_of_sprintf 0183          __initialization 07F2  
           __end_of_main 0392             __end_of_dtoa 07F2                   ??_main 006B  
                 ??_dtoa 0038                   ?_fputc 0073                   ?_fputs 007B  
                 _ANSELA 0F38                   ?_putch 0070                   _ANSELC 0F4E  
                 _RC0PPS 0F20         __end_of_adc_init 00D3                   _RC1STA 011D  
                 u101lld 046A                   u110lld 06D1                   _TX1STA 011E  
           ?_serial_init 0020             vfprintf@cfmt 0065                ??___aodiv 0070  
              ??___aomod 0070                ??___lldiv 0078                   _printf 00FB  
                 pad@buf 0027                   dtoa@fp 003D                   main@rx 00C7  
                 _strlen 010E                   fputc@c 0073                   fputs@c 0023  
                 fputs@i 0024                   fputs@s 0026                ??_uart_rx 0070  
              ??_uart_tx 0070         __end_of_vfprintf 01DC                ??_sprintf 007D  
__end_of__initialization 07FD           __pcstackCOMMON 0070            __end_of_fputc 0269  
          __end_of_fputs 01AB            __end_of_putch 00D9                  ??_fputc 0076  
                ??_fputs 0020                  ??_putch 0072               __pbssBANK0 006D  
             __pbssBANK1 00C9               __pmaintext 0319                  ?_printf 0070  
              ?_adc_init 0070                  ?_strlen 0070                  _SP1BRGH 011C  
                _SP1BRGL 011B       __size_of_vfpfcnvrt 010B       __size_of_port_init 000C  
                ___aodiv 047C                  ___aomod 0392                  ___lldiv 02BF  
              ?_vfprintf 005F     __size_of_serial_init 003E               ??_adc_init 0070  
                __ptext1 0141                  __ptext2 015F                  __ptext3 01DC  
                __ptext4 02BF                  __ptext5 00FB                  __ptext6 01AB  
                __ptext7 057D                  __ptext8 0688                  __ptext9 0269  
        __size_of_printf 0013          __size_of_strlen 0019             __size_of_abs 001A  
           __size_of_pad 0056                  _uart_rx 0141                  _uart_tx 00EB  
                _sprintf 015F                  clrloop0 00DA     end_of_initialization 07FD  
                fputc@fp 0075                  fputs@fp 007B          ___lldiv@divisor 0070  
        ___lldiv@counter 007D        __end_of_vfpfcnvrt 0688        __end_of_port_init 00EB  
             ??_vfprintf 0062                  strlen@a 0073                  strlen@s 0074  
            uart_tx@dato 0071               main@buffer 00A7              vfpfcnvrt@ap 004F  
            vfpfcnvrt@fp 005E              vfpfcnvrt@ll 0055              vfpfcnvrt@vp 005D  
         __end_of_printf 010E           __end_of_strlen 0127      start_initialization 07F2  
            __end_of_abs 0141              __end_of_pad 02BF              vfprintf@fmt 005F  
               ??_printf 007D                 ??_strlen 0072        __size_of_adc_init 0001  
              ___latbits 0002            __pcstackBANK0 0020            __pcstackBANK1 00A0  
       ___aodiv@dividend 0028                 ?___aodiv 0020                 ?___aomod 0020  
       ___aodiv@quotient 0073                 ?___lldiv 0070        __size_of_vfprintf 0031  
               ?_uart_rx 0070                 ?_uart_tx 0070                 ?_sprintf 0067  
         __size_of_fputc 004F           __size_of_fputs 0028           __size_of_putch 0006  
              clear_ram0 00D9            ??_serial_init 0024                _vfpfcnvrt 057D  
              _port_init 00DF            serial_init@sx 0028               vfprintf@ap 0061  
             vfprintf@fp 0064         __size_of___aodiv 0101         __size_of___aomod 00EA  
       __size_of___lldiv 005A               ?_vfpfcnvrt 004E               ?_port_init 0070  
    __end_of_serial_init 021A          ___aodiv@divisor 0020                 _adc_init 00D2  
        ___aodiv@counter 0071               sprintf@fmt 0067                 _dtoa$640 003B  
               __ptext10 010E                 __ptext11 0183                 __ptext12 021A  
               __ptext13 00D3                 __ptext14 00EB                 __ptext15 0127  
               __ptext16 0392                 __ptext17 047C                 __ptext18 00DF  
               __ptext19 00D2         __size_of_uart_rx 001E         __size_of_uart_tx 0010  
       __size_of_sprintf 0024            __size_of_main 0079            __size_of_dtoa 016A  
               _vfprintf 01AB                printf@fmt 0067         ___aomod@dividend 0028  
              putch@dato 0072                sprintf@ap 00A0         ___lldiv@dividend 0074  
            _serial_init 01DC                 printf@ap 0068          ___aomod@divisor 0020  
            ??_vfpfcnvrt 0050          ___aomod@counter 0071              ??_port_init 0070  
          __pstringtext1 0800            __pstringtext2 0000                 sprintf@f 00A2  
               sprintf@s 00A1         ___lldiv@quotient 0079             ___aodiv@sign 0072  
           ___aomod@sign 0072  
