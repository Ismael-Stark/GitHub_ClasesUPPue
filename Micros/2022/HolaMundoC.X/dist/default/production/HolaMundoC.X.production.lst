

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jun 14 13:42:43 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F18855
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 2.40
    37                           ; Generated 02/12/2021 GMT
    38                           ; 
    39                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F18855 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0008                     	;# 
    80  0009                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  0010                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  001C                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  008C                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0090                     	;# 
   107  0091                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0110                     	;# 
   126  0110                     	;# 
   127  0111                     	;# 
   128  0112                     	;# 
   129  0112                     	;# 
   130  0113                     	;# 
   131  0114                     	;# 
   132  0114                     	;# 
   133  0115                     	;# 
   134  0116                     	;# 
   135  0116                     	;# 
   136  0117                     	;# 
   137  0119                     	;# 
   138  0119                     	;# 
   139  0119                     	;# 
   140  011A                     	;# 
   141  011A                     	;# 
   142  011A                     	;# 
   143  011B                     	;# 
   144  011B                     	;# 
   145  011B                     	;# 
   146  011B                     	;# 
   147  011B                     	;# 
   148  011C                     	;# 
   149  011C                     	;# 
   150  011C                     	;# 
   151  011D                     	;# 
   152  011D                     	;# 
   153  011D                     	;# 
   154  011E                     	;# 
   155  011E                     	;# 
   156  011E                     	;# 
   157  011F                     	;# 
   158  011F                     	;# 
   159  011F                     	;# 
   160  011F                     	;# 
   161  011F                     	;# 
   162  018C                     	;# 
   163  018D                     	;# 
   164  018E                     	;# 
   165  018F                     	;# 
   166  0190                     	;# 
   167  0191                     	;# 
   168  0192                     	;# 
   169  0196                     	;# 
   170  0197                     	;# 
   171  0198                     	;# 
   172  0199                     	;# 
   173  019A                     	;# 
   174  019B                     	;# 
   175  019C                     	;# 
   176  020C                     	;# 
   177  020C                     	;# 
   178  020D                     	;# 
   179  020E                     	;# 
   180  020F                     	;# 
   181  020F                     	;# 
   182  0210                     	;# 
   183  0210                     	;# 
   184  0211                     	;# 
   185  0211                     	;# 
   186  0212                     	;# 
   187  0212                     	;# 
   188  0213                     	;# 
   189  0214                     	;# 
   190  0215                     	;# 
   191  0215                     	;# 
   192  0216                     	;# 
   193  0216                     	;# 
   194  0217                     	;# 
   195  0217                     	;# 
   196  0218                     	;# 
   197  0218                     	;# 
   198  0219                     	;# 
   199  021A                     	;# 
   200  021B                     	;# 
   201  021B                     	;# 
   202  021C                     	;# 
   203  021C                     	;# 
   204  021D                     	;# 
   205  021D                     	;# 
   206  021E                     	;# 
   207  021F                     	;# 
   208  028C                     	;# 
   209  028C                     	;# 
   210  028D                     	;# 
   211  028D                     	;# 
   212  028E                     	;# 
   213  028F                     	;# 
   214  0290                     	;# 
   215  0290                     	;# 
   216  0291                     	;# 
   217  0292                     	;# 
   218  0292                     	;# 
   219  0293                     	;# 
   220  0293                     	;# 
   221  0294                     	;# 
   222  0295                     	;# 
   223  0296                     	;# 
   224  0296                     	;# 
   225  0297                     	;# 
   226  0298                     	;# 
   227  0298                     	;# 
   228  0299                     	;# 
   229  0299                     	;# 
   230  029A                     	;# 
   231  029B                     	;# 
   232  029C                     	;# 
   233  029C                     	;# 
   234  029D                     	;# 
   235  030C                     	;# 
   236  030C                     	;# 
   237  030D                     	;# 
   238  030E                     	;# 
   239  030F                     	;# 
   240  0310                     	;# 
   241  0310                     	;# 
   242  0311                     	;# 
   243  0312                     	;# 
   244  0313                     	;# 
   245  0314                     	;# 
   246  0314                     	;# 
   247  0315                     	;# 
   248  0316                     	;# 
   249  0317                     	;# 
   250  0318                     	;# 
   251  0318                     	;# 
   252  0319                     	;# 
   253  031A                     	;# 
   254  031B                     	;# 
   255  031C                     	;# 
   256  031C                     	;# 
   257  031D                     	;# 
   258  031E                     	;# 
   259  031F                     	;# 
   260  038C                     	;# 
   261  038C                     	;# 
   262  038D                     	;# 
   263  038E                     	;# 
   264  0390                     	;# 
   265  0390                     	;# 
   266  0391                     	;# 
   267  0392                     	;# 
   268  040C                     	;# 
   269  040D                     	;# 
   270  040E                     	;# 
   271  040F                     	;# 
   272  0410                     	;# 
   273  0411                     	;# 
   274  0416                     	;# 
   275  0416                     	;# 
   276  0417                     	;# 
   277  0418                     	;# 
   278  0418                     	;# 
   279  0419                     	;# 
   280  041A                     	;# 
   281  041A                     	;# 
   282  041B                     	;# 
   283  041C                     	;# 
   284  041C                     	;# 
   285  041D                     	;# 
   286  041E                     	;# 
   287  041F                     	;# 
   288  048C                     	;# 
   289  048C                     	;# 
   290  048D                     	;# 
   291  048E                     	;# 
   292  048F                     	;# 
   293  048F                     	;# 
   294  0490                     	;# 
   295  0491                     	;# 
   296  0492                     	;# 
   297  0492                     	;# 
   298  0493                     	;# 
   299  0494                     	;# 
   300  0495                     	;# 
   301  0495                     	;# 
   302  0496                     	;# 
   303  0497                     	;# 
   304  0498                     	;# 
   305  0499                     	;# 
   306  049A                     	;# 
   307  049B                     	;# 
   308  049C                     	;# 
   309  049D                     	;# 
   310  050C                     	;# 
   311  050C                     	;# 
   312  050D                     	;# 
   313  050E                     	;# 
   314  050F                     	;# 
   315  050F                     	;# 
   316  0510                     	;# 
   317  0511                     	;# 
   318  0512                     	;# 
   319  0512                     	;# 
   320  0513                     	;# 
   321  0514                     	;# 
   322  0515                     	;# 
   323  0515                     	;# 
   324  0516                     	;# 
   325  0517                     	;# 
   326  0518                     	;# 
   327  0519                     	;# 
   328  051A                     	;# 
   329  051B                     	;# 
   330  051C                     	;# 
   331  051D                     	;# 
   332  058C                     	;# 
   333  058C                     	;# 
   334  058D                     	;# 
   335  058E                     	;# 
   336  058F                     	;# 
   337  058F                     	;# 
   338  0590                     	;# 
   339  0591                     	;# 
   340  0592                     	;# 
   341  0593                     	;# 
   342  060C                     	;# 
   343  060D                     	;# 
   344  060E                     	;# 
   345  060F                     	;# 
   346  0610                     	;# 
   347  0611                     	;# 
   348  0612                     	;# 
   349  0613                     	;# 
   350  0614                     	;# 
   351  0616                     	;# 
   352  0617                     	;# 
   353  0618                     	;# 
   354  0619                     	;# 
   355  061A                     	;# 
   356  061B                     	;# 
   357  061C                     	;# 
   358  061D                     	;# 
   359  061E                     	;# 
   360  068C                     	;# 
   361  068D                     	;# 
   362  068E                     	;# 
   363  068F                     	;# 
   364  0690                     	;# 
   365  0691                     	;# 
   366  0692                     	;# 
   367  0693                     	;# 
   368  0694                     	;# 
   369  070C                     	;# 
   370  070D                     	;# 
   371  070E                     	;# 
   372  070F                     	;# 
   373  0710                     	;# 
   374  0711                     	;# 
   375  0712                     	;# 
   376  0713                     	;# 
   377  0714                     	;# 
   378  0716                     	;# 
   379  0717                     	;# 
   380  0718                     	;# 
   381  0719                     	;# 
   382  071A                     	;# 
   383  071B                     	;# 
   384  071C                     	;# 
   385  071D                     	;# 
   386  071E                     	;# 
   387  0796                     	;# 
   388  0797                     	;# 
   389  0798                     	;# 
   390  0799                     	;# 
   391  079A                     	;# 
   392  079B                     	;# 
   393  080C                     	;# 
   394  080D                     	;# 
   395  080E                     	;# 
   396  080F                     	;# 
   397  0810                     	;# 
   398  0811                     	;# 
   399  0812                     	;# 
   400  0813                     	;# 
   401  0814                     	;# 
   402  081A                     	;# 
   403  081B                     	;# 
   404  081C                     	;# 
   405  081D                     	;# 
   406  081E                     	;# 
   407  081F                     	;# 
   408  088C                     	;# 
   409  088D                     	;# 
   410  088E                     	;# 
   411  088F                     	;# 
   412  0890                     	;# 
   413  0891                     	;# 
   414  0892                     	;# 
   415  0893                     	;# 
   416  0895                     	;# 
   417  0896                     	;# 
   418  0897                     	;# 
   419  0898                     	;# 
   420  0899                     	;# 
   421  089A                     	;# 
   422  089B                     	;# 
   423  090C                     	;# 
   424  090E                     	;# 
   425  090F                     	;# 
   426  091F                     	;# 
   427  091F                     	;# 
   428  098F                     	;# 
   429  098F                     	;# 
   430  0990                     	;# 
   431  0991                     	;# 
   432  0992                     	;# 
   433  0993                     	;# 
   434  0994                     	;# 
   435  0995                     	;# 
   436  0996                     	;# 
   437  0997                     	;# 
   438  0E0F                     	;# 
   439  0E10                     	;# 
   440  0E11                     	;# 
   441  0E12                     	;# 
   442  0E13                     	;# 
   443  0E14                     	;# 
   444  0E15                     	;# 
   445  0E16                     	;# 
   446  0E17                     	;# 
   447  0E18                     	;# 
   448  0E19                     	;# 
   449  0E1A                     	;# 
   450  0E1B                     	;# 
   451  0E1C                     	;# 
   452  0E1D                     	;# 
   453  0E1E                     	;# 
   454  0E1F                     	;# 
   455  0E20                     	;# 
   456  0E21                     	;# 
   457  0E22                     	;# 
   458  0E23                     	;# 
   459  0E24                     	;# 
   460  0E25                     	;# 
   461  0E26                     	;# 
   462  0E27                     	;# 
   463  0E28                     	;# 
   464  0E29                     	;# 
   465  0E2A                     	;# 
   466  0E2B                     	;# 
   467  0E2C                     	;# 
   468  0E2D                     	;# 
   469  0E2E                     	;# 
   470  0E2F                     	;# 
   471  0E30                     	;# 
   472  0E31                     	;# 
   473  0E32                     	;# 
   474  0E33                     	;# 
   475  0E34                     	;# 
   476  0E35                     	;# 
   477  0E36                     	;# 
   478  0E37                     	;# 
   479  0E8F                     	;# 
   480  0E90                     	;# 
   481  0E91                     	;# 
   482  0E92                     	;# 
   483  0E93                     	;# 
   484  0E94                     	;# 
   485  0E95                     	;# 
   486  0E96                     	;# 
   487  0E97                     	;# 
   488  0E9C                     	;# 
   489  0E9D                     	;# 
   490  0E9E                     	;# 
   491  0EA1                     	;# 
   492  0EA2                     	;# 
   493  0EA3                     	;# 
   494  0EA4                     	;# 
   495  0EA5                     	;# 
   496  0EA9                     	;# 
   497  0EAA                     	;# 
   498  0EAB                     	;# 
   499  0EAC                     	;# 
   500  0EB1                     	;# 
   501  0EB2                     	;# 
   502  0EB3                     	;# 
   503  0EB8                     	;# 
   504  0EB9                     	;# 
   505  0EBA                     	;# 
   506  0EBB                     	;# 
   507  0EBC                     	;# 
   508  0EBD                     	;# 
   509  0EBE                     	;# 
   510  0EC3                     	;# 
   511  0EC5                     	;# 
   512  0EC6                     	;# 
   513  0EC7                     	;# 
   514  0EC8                     	;# 
   515  0EC9                     	;# 
   516  0ECA                     	;# 
   517  0ECB                     	;# 
   518  0ECC                     	;# 
   519  0F10                     	;# 
   520  0F11                     	;# 
   521  0F12                     	;# 
   522  0F13                     	;# 
   523  0F14                     	;# 
   524  0F15                     	;# 
   525  0F16                     	;# 
   526  0F17                     	;# 
   527  0F18                     	;# 
   528  0F19                     	;# 
   529  0F1A                     	;# 
   530  0F1B                     	;# 
   531  0F1C                     	;# 
   532  0F1D                     	;# 
   533  0F1E                     	;# 
   534  0F1F                     	;# 
   535  0F20                     	;# 
   536  0F21                     	;# 
   537  0F22                     	;# 
   538  0F23                     	;# 
   539  0F24                     	;# 
   540  0F25                     	;# 
   541  0F26                     	;# 
   542  0F27                     	;# 
   543  0F38                     	;# 
   544  0F39                     	;# 
   545  0F3A                     	;# 
   546  0F3B                     	;# 
   547  0F3C                     	;# 
   548  0F3D                     	;# 
   549  0F3E                     	;# 
   550  0F3F                     	;# 
   551  0F40                     	;# 
   552  0F41                     	;# 
   553  0F43                     	;# 
   554  0F44                     	;# 
   555  0F45                     	;# 
   556  0F46                     	;# 
   557  0F47                     	;# 
   558  0F48                     	;# 
   559  0F49                     	;# 
   560  0F4A                     	;# 
   561  0F4B                     	;# 
   562  0F4C                     	;# 
   563  0F4E                     	;# 
   564  0F4F                     	;# 
   565  0F50                     	;# 
   566  0F51                     	;# 
   567  0F52                     	;# 
   568  0F53                     	;# 
   569  0F54                     	;# 
   570  0F55                     	;# 
   571  0F56                     	;# 
   572  0F57                     	;# 
   573  0F65                     	;# 
   574  0F68                     	;# 
   575  0F69                     	;# 
   576  0F6A                     	;# 
   577  0F6B                     	;# 
   578  0FE4                     	;# 
   579  0FE5                     	;# 
   580  0FE6                     	;# 
   581  0FE7                     	;# 
   582  0FE8                     	;# 
   583  0FE9                     	;# 
   584  0FEA                     	;# 
   585  0FEB                     	;# 
   586  0FED                     	;# 
   587  0FEE                     	;# 
   588  0FEF                     	;# 
   589  0000                     	;# 
   590  0001                     	;# 
   591  0002                     	;# 
   592  0003                     	;# 
   593  0004                     	;# 
   594  0005                     	;# 
   595  0006                     	;# 
   596  0007                     	;# 
   597  0008                     	;# 
   598  0009                     	;# 
   599  000A                     	;# 
   600  000B                     	;# 
   601  000C                     	;# 
   602  000D                     	;# 
   603  000E                     	;# 
   604  0010                     	;# 
   605  0011                     	;# 
   606  0012                     	;# 
   607  0013                     	;# 
   608  0016                     	;# 
   609  0017                     	;# 
   610  0018                     	;# 
   611  001C                     	;# 
   612  001C                     	;# 
   613  001D                     	;# 
   614  001D                     	;# 
   615  001E                     	;# 
   616  001F                     	;# 
   617  008C                     	;# 
   618  008C                     	;# 
   619  008D                     	;# 
   620  008E                     	;# 
   621  008E                     	;# 
   622  008F                     	;# 
   623  0090                     	;# 
   624  0090                     	;# 
   625  0091                     	;# 
   626  0093                     	;# 
   627  0094                     	;# 
   628  0095                     	;# 
   629  0096                     	;# 
   630  0097                     	;# 
   631  0098                     	;# 
   632  0099                     	;# 
   633  009A                     	;# 
   634  009B                     	;# 
   635  009C                     	;# 
   636  009D                     	;# 
   637  009E                     	;# 
   638  010C                     	;# 
   639  010D                     	;# 
   640  010E                     	;# 
   641  010E                     	;# 
   642  010F                     	;# 
   643  0110                     	;# 
   644  0110                     	;# 
   645  0111                     	;# 
   646  0112                     	;# 
   647  0112                     	;# 
   648  0113                     	;# 
   649  0114                     	;# 
   650  0114                     	;# 
   651  0115                     	;# 
   652  0116                     	;# 
   653  0116                     	;# 
   654  0117                     	;# 
   655  0119                     	;# 
   656  0119                     	;# 
   657  0119                     	;# 
   658  011A                     	;# 
   659  011A                     	;# 
   660  011A                     	;# 
   661  011B                     	;# 
   662  011B                     	;# 
   663  011B                     	;# 
   664  011B                     	;# 
   665  011B                     	;# 
   666  011C                     	;# 
   667  011C                     	;# 
   668  011C                     	;# 
   669  011D                     	;# 
   670  011D                     	;# 
   671  011D                     	;# 
   672  011E                     	;# 
   673  011E                     	;# 
   674  011E                     	;# 
   675  011F                     	;# 
   676  011F                     	;# 
   677  011F                     	;# 
   678  011F                     	;# 
   679  011F                     	;# 
   680  018C                     	;# 
   681  018D                     	;# 
   682  018E                     	;# 
   683  018F                     	;# 
   684  0190                     	;# 
   685  0191                     	;# 
   686  0192                     	;# 
   687  0196                     	;# 
   688  0197                     	;# 
   689  0198                     	;# 
   690  0199                     	;# 
   691  019A                     	;# 
   692  019B                     	;# 
   693  019C                     	;# 
   694  020C                     	;# 
   695  020C                     	;# 
   696  020D                     	;# 
   697  020E                     	;# 
   698  020F                     	;# 
   699  020F                     	;# 
   700  0210                     	;# 
   701  0210                     	;# 
   702  0211                     	;# 
   703  0211                     	;# 
   704  0212                     	;# 
   705  0212                     	;# 
   706  0213                     	;# 
   707  0214                     	;# 
   708  0215                     	;# 
   709  0215                     	;# 
   710  0216                     	;# 
   711  0216                     	;# 
   712  0217                     	;# 
   713  0217                     	;# 
   714  0218                     	;# 
   715  0218                     	;# 
   716  0219                     	;# 
   717  021A                     	;# 
   718  021B                     	;# 
   719  021B                     	;# 
   720  021C                     	;# 
   721  021C                     	;# 
   722  021D                     	;# 
   723  021D                     	;# 
   724  021E                     	;# 
   725  021F                     	;# 
   726  028C                     	;# 
   727  028C                     	;# 
   728  028D                     	;# 
   729  028D                     	;# 
   730  028E                     	;# 
   731  028F                     	;# 
   732  0290                     	;# 
   733  0290                     	;# 
   734  0291                     	;# 
   735  0292                     	;# 
   736  0292                     	;# 
   737  0293                     	;# 
   738  0293                     	;# 
   739  0294                     	;# 
   740  0295                     	;# 
   741  0296                     	;# 
   742  0296                     	;# 
   743  0297                     	;# 
   744  0298                     	;# 
   745  0298                     	;# 
   746  0299                     	;# 
   747  0299                     	;# 
   748  029A                     	;# 
   749  029B                     	;# 
   750  029C                     	;# 
   751  029C                     	;# 
   752  029D                     	;# 
   753  030C                     	;# 
   754  030C                     	;# 
   755  030D                     	;# 
   756  030E                     	;# 
   757  030F                     	;# 
   758  0310                     	;# 
   759  0310                     	;# 
   760  0311                     	;# 
   761  0312                     	;# 
   762  0313                     	;# 
   763  0314                     	;# 
   764  0314                     	;# 
   765  0315                     	;# 
   766  0316                     	;# 
   767  0317                     	;# 
   768  0318                     	;# 
   769  0318                     	;# 
   770  0319                     	;# 
   771  031A                     	;# 
   772  031B                     	;# 
   773  031C                     	;# 
   774  031C                     	;# 
   775  031D                     	;# 
   776  031E                     	;# 
   777  031F                     	;# 
   778  038C                     	;# 
   779  038C                     	;# 
   780  038D                     	;# 
   781  038E                     	;# 
   782  0390                     	;# 
   783  0390                     	;# 
   784  0391                     	;# 
   785  0392                     	;# 
   786  040C                     	;# 
   787  040D                     	;# 
   788  040E                     	;# 
   789  040F                     	;# 
   790  0410                     	;# 
   791  0411                     	;# 
   792  0416                     	;# 
   793  0416                     	;# 
   794  0417                     	;# 
   795  0418                     	;# 
   796  0418                     	;# 
   797  0419                     	;# 
   798  041A                     	;# 
   799  041A                     	;# 
   800  041B                     	;# 
   801  041C                     	;# 
   802  041C                     	;# 
   803  041D                     	;# 
   804  041E                     	;# 
   805  041F                     	;# 
   806  048C                     	;# 
   807  048C                     	;# 
   808  048D                     	;# 
   809  048E                     	;# 
   810  048F                     	;# 
   811  048F                     	;# 
   812  0490                     	;# 
   813  0491                     	;# 
   814  0492                     	;# 
   815  0492                     	;# 
   816  0493                     	;# 
   817  0494                     	;# 
   818  0495                     	;# 
   819  0495                     	;# 
   820  0496                     	;# 
   821  0497                     	;# 
   822  0498                     	;# 
   823  0499                     	;# 
   824  049A                     	;# 
   825  049B                     	;# 
   826  049C                     	;# 
   827  049D                     	;# 
   828  050C                     	;# 
   829  050C                     	;# 
   830  050D                     	;# 
   831  050E                     	;# 
   832  050F                     	;# 
   833  050F                     	;# 
   834  0510                     	;# 
   835  0511                     	;# 
   836  0512                     	;# 
   837  0512                     	;# 
   838  0513                     	;# 
   839  0514                     	;# 
   840  0515                     	;# 
   841  0515                     	;# 
   842  0516                     	;# 
   843  0517                     	;# 
   844  0518                     	;# 
   845  0519                     	;# 
   846  051A                     	;# 
   847  051B                     	;# 
   848  051C                     	;# 
   849  051D                     	;# 
   850  058C                     	;# 
   851  058C                     	;# 
   852  058D                     	;# 
   853  058E                     	;# 
   854  058F                     	;# 
   855  058F                     	;# 
   856  0590                     	;# 
   857  0591                     	;# 
   858  0592                     	;# 
   859  0593                     	;# 
   860  060C                     	;# 
   861  060D                     	;# 
   862  060E                     	;# 
   863  060F                     	;# 
   864  0610                     	;# 
   865  0611                     	;# 
   866  0612                     	;# 
   867  0613                     	;# 
   868  0614                     	;# 
   869  0616                     	;# 
   870  0617                     	;# 
   871  0618                     	;# 
   872  0619                     	;# 
   873  061A                     	;# 
   874  061B                     	;# 
   875  061C                     	;# 
   876  061D                     	;# 
   877  061E                     	;# 
   878  068C                     	;# 
   879  068D                     	;# 
   880  068E                     	;# 
   881  068F                     	;# 
   882  0690                     	;# 
   883  0691                     	;# 
   884  0692                     	;# 
   885  0693                     	;# 
   886  0694                     	;# 
   887  070C                     	;# 
   888  070D                     	;# 
   889  070E                     	;# 
   890  070F                     	;# 
   891  0710                     	;# 
   892  0711                     	;# 
   893  0712                     	;# 
   894  0713                     	;# 
   895  0714                     	;# 
   896  0716                     	;# 
   897  0717                     	;# 
   898  0718                     	;# 
   899  0719                     	;# 
   900  071A                     	;# 
   901  071B                     	;# 
   902  071C                     	;# 
   903  071D                     	;# 
   904  071E                     	;# 
   905  0796                     	;# 
   906  0797                     	;# 
   907  0798                     	;# 
   908  0799                     	;# 
   909  079A                     	;# 
   910  079B                     	;# 
   911  080C                     	;# 
   912  080D                     	;# 
   913  080E                     	;# 
   914  080F                     	;# 
   915  0810                     	;# 
   916  0811                     	;# 
   917  0812                     	;# 
   918  0813                     	;# 
   919  0814                     	;# 
   920  081A                     	;# 
   921  081B                     	;# 
   922  081C                     	;# 
   923  081D                     	;# 
   924  081E                     	;# 
   925  081F                     	;# 
   926  088C                     	;# 
   927  088D                     	;# 
   928  088E                     	;# 
   929  088F                     	;# 
   930  0890                     	;# 
   931  0891                     	;# 
   932  0892                     	;# 
   933  0893                     	;# 
   934  0895                     	;# 
   935  0896                     	;# 
   936  0897                     	;# 
   937  0898                     	;# 
   938  0899                     	;# 
   939  089A                     	;# 
   940  089B                     	;# 
   941  090C                     	;# 
   942  090E                     	;# 
   943  090F                     	;# 
   944  091F                     	;# 
   945  091F                     	;# 
   946  098F                     	;# 
   947  098F                     	;# 
   948  0990                     	;# 
   949  0991                     	;# 
   950  0992                     	;# 
   951  0993                     	;# 
   952  0994                     	;# 
   953  0995                     	;# 
   954  0996                     	;# 
   955  0997                     	;# 
   956  0E0F                     	;# 
   957  0E10                     	;# 
   958  0E11                     	;# 
   959  0E12                     	;# 
   960  0E13                     	;# 
   961  0E14                     	;# 
   962  0E15                     	;# 
   963  0E16                     	;# 
   964  0E17                     	;# 
   965  0E18                     	;# 
   966  0E19                     	;# 
   967  0E1A                     	;# 
   968  0E1B                     	;# 
   969  0E1C                     	;# 
   970  0E1D                     	;# 
   971  0E1E                     	;# 
   972  0E1F                     	;# 
   973  0E20                     	;# 
   974  0E21                     	;# 
   975  0E22                     	;# 
   976  0E23                     	;# 
   977  0E24                     	;# 
   978  0E25                     	;# 
   979  0E26                     	;# 
   980  0E27                     	;# 
   981  0E28                     	;# 
   982  0E29                     	;# 
   983  0E2A                     	;# 
   984  0E2B                     	;# 
   985  0E2C                     	;# 
   986  0E2D                     	;# 
   987  0E2E                     	;# 
   988  0E2F                     	;# 
   989  0E30                     	;# 
   990  0E31                     	;# 
   991  0E32                     	;# 
   992  0E33                     	;# 
   993  0E34                     	;# 
   994  0E35                     	;# 
   995  0E36                     	;# 
   996  0E37                     	;# 
   997  0E8F                     	;# 
   998  0E90                     	;# 
   999  0E91                     	;# 
  1000  0E92                     	;# 
  1001  0E93                     	;# 
  1002  0E94                     	;# 
  1003  0E95                     	;# 
  1004  0E96                     	;# 
  1005  0E97                     	;# 
  1006  0E9C                     	;# 
  1007  0E9D                     	;# 
  1008  0E9E                     	;# 
  1009  0EA1                     	;# 
  1010  0EA2                     	;# 
  1011  0EA3                     	;# 
  1012  0EA4                     	;# 
  1013  0EA5                     	;# 
  1014  0EA9                     	;# 
  1015  0EAA                     	;# 
  1016  0EAB                     	;# 
  1017  0EAC                     	;# 
  1018  0EB1                     	;# 
  1019  0EB2                     	;# 
  1020  0EB3                     	;# 
  1021  0EB8                     	;# 
  1022  0EB9                     	;# 
  1023  0EBA                     	;# 
  1024  0EBB                     	;# 
  1025  0EBC                     	;# 
  1026  0EBD                     	;# 
  1027  0EBE                     	;# 
  1028  0EC3                     	;# 
  1029  0EC5                     	;# 
  1030  0EC6                     	;# 
  1031  0EC7                     	;# 
  1032  0EC8                     	;# 
  1033  0EC9                     	;# 
  1034  0ECA                     	;# 
  1035  0ECB                     	;# 
  1036  0ECC                     	;# 
  1037  0F10                     	;# 
  1038  0F11                     	;# 
  1039  0F12                     	;# 
  1040  0F13                     	;# 
  1041  0F14                     	;# 
  1042  0F15                     	;# 
  1043  0F16                     	;# 
  1044  0F17                     	;# 
  1045  0F18                     	;# 
  1046  0F19                     	;# 
  1047  0F1A                     	;# 
  1048  0F1B                     	;# 
  1049  0F1C                     	;# 
  1050  0F1D                     	;# 
  1051  0F1E                     	;# 
  1052  0F1F                     	;# 
  1053  0F20                     	;# 
  1054  0F21                     	;# 
  1055  0F22                     	;# 
  1056  0F23                     	;# 
  1057  0F24                     	;# 
  1058  0F25                     	;# 
  1059  0F26                     	;# 
  1060  0F27                     	;# 
  1061  0F38                     	;# 
  1062  0F39                     	;# 
  1063  0F3A                     	;# 
  1064  0F3B                     	;# 
  1065  0F3C                     	;# 
  1066  0F3D                     	;# 
  1067  0F3E                     	;# 
  1068  0F3F                     	;# 
  1069  0F40                     	;# 
  1070  0F41                     	;# 
  1071  0F43                     	;# 
  1072  0F44                     	;# 
  1073  0F45                     	;# 
  1074  0F46                     	;# 
  1075  0F47                     	;# 
  1076  0F48                     	;# 
  1077  0F49                     	;# 
  1078  0F4A                     	;# 
  1079  0F4B                     	;# 
  1080  0F4C                     	;# 
  1081  0F4E                     	;# 
  1082  0F4F                     	;# 
  1083  0F50                     	;# 
  1084  0F51                     	;# 
  1085  0F52                     	;# 
  1086  0F53                     	;# 
  1087  0F54                     	;# 
  1088  0F55                     	;# 
  1089  0F56                     	;# 
  1090  0F57                     	;# 
  1091  0F65                     	;# 
  1092  0F68                     	;# 
  1093  0F69                     	;# 
  1094  0F6A                     	;# 
  1095  0F6B                     	;# 
  1096  0FE4                     	;# 
  1097  0FE5                     	;# 
  1098  0FE6                     	;# 
  1099  0FE7                     	;# 
  1100  0FE8                     	;# 
  1101  0FE9                     	;# 
  1102  0FEA                     	;# 
  1103  0FEB                     	;# 
  1104  0FED                     	;# 
  1105  0FEE                     	;# 
  1106  0FEF                     	;# 
  1107  0000                     	;# 
  1108  0001                     	;# 
  1109  0002                     	;# 
  1110  0003                     	;# 
  1111  0004                     	;# 
  1112  0005                     	;# 
  1113  0006                     	;# 
  1114  0007                     	;# 
  1115  0008                     	;# 
  1116  0009                     	;# 
  1117  000A                     	;# 
  1118  000B                     	;# 
  1119  000C                     	;# 
  1120  000D                     	;# 
  1121  000E                     	;# 
  1122  0010                     	;# 
  1123  0011                     	;# 
  1124  0012                     	;# 
  1125  0013                     	;# 
  1126  0016                     	;# 
  1127  0017                     	;# 
  1128  0018                     	;# 
  1129  001C                     	;# 
  1130  001C                     	;# 
  1131  001D                     	;# 
  1132  001D                     	;# 
  1133  001E                     	;# 
  1134  001F                     	;# 
  1135  008C                     	;# 
  1136  008C                     	;# 
  1137  008D                     	;# 
  1138  008E                     	;# 
  1139  008E                     	;# 
  1140  008F                     	;# 
  1141  0090                     	;# 
  1142  0090                     	;# 
  1143  0091                     	;# 
  1144  0093                     	;# 
  1145  0094                     	;# 
  1146  0095                     	;# 
  1147  0096                     	;# 
  1148  0097                     	;# 
  1149  0098                     	;# 
  1150  0099                     	;# 
  1151  009A                     	;# 
  1152  009B                     	;# 
  1153  009C                     	;# 
  1154  009D                     	;# 
  1155  009E                     	;# 
  1156  010C                     	;# 
  1157  010D                     	;# 
  1158  010E                     	;# 
  1159  010E                     	;# 
  1160  010F                     	;# 
  1161  0110                     	;# 
  1162  0110                     	;# 
  1163  0111                     	;# 
  1164  0112                     	;# 
  1165  0112                     	;# 
  1166  0113                     	;# 
  1167  0114                     	;# 
  1168  0114                     	;# 
  1169  0115                     	;# 
  1170  0116                     	;# 
  1171  0116                     	;# 
  1172  0117                     	;# 
  1173  0119                     	;# 
  1174  0119                     	;# 
  1175  0119                     	;# 
  1176  011A                     	;# 
  1177  011A                     	;# 
  1178  011A                     	;# 
  1179  011B                     	;# 
  1180  011B                     	;# 
  1181  011B                     	;# 
  1182  011B                     	;# 
  1183  011B                     	;# 
  1184  011C                     	;# 
  1185  011C                     	;# 
  1186  011C                     	;# 
  1187  011D                     	;# 
  1188  011D                     	;# 
  1189  011D                     	;# 
  1190  011E                     	;# 
  1191  011E                     	;# 
  1192  011E                     	;# 
  1193  011F                     	;# 
  1194  011F                     	;# 
  1195  011F                     	;# 
  1196  011F                     	;# 
  1197  011F                     	;# 
  1198  018C                     	;# 
  1199  018D                     	;# 
  1200  018E                     	;# 
  1201  018F                     	;# 
  1202  0190                     	;# 
  1203  0191                     	;# 
  1204  0192                     	;# 
  1205  0196                     	;# 
  1206  0197                     	;# 
  1207  0198                     	;# 
  1208  0199                     	;# 
  1209  019A                     	;# 
  1210  019B                     	;# 
  1211  019C                     	;# 
  1212  020C                     	;# 
  1213  020C                     	;# 
  1214  020D                     	;# 
  1215  020E                     	;# 
  1216  020F                     	;# 
  1217  020F                     	;# 
  1218  0210                     	;# 
  1219  0210                     	;# 
  1220  0211                     	;# 
  1221  0211                     	;# 
  1222  0212                     	;# 
  1223  0212                     	;# 
  1224  0213                     	;# 
  1225  0214                     	;# 
  1226  0215                     	;# 
  1227  0215                     	;# 
  1228  0216                     	;# 
  1229  0216                     	;# 
  1230  0217                     	;# 
  1231  0217                     	;# 
  1232  0218                     	;# 
  1233  0218                     	;# 
  1234  0219                     	;# 
  1235  021A                     	;# 
  1236  021B                     	;# 
  1237  021B                     	;# 
  1238  021C                     	;# 
  1239  021C                     	;# 
  1240  021D                     	;# 
  1241  021D                     	;# 
  1242  021E                     	;# 
  1243  021F                     	;# 
  1244  028C                     	;# 
  1245  028C                     	;# 
  1246  028D                     	;# 
  1247  028D                     	;# 
  1248  028E                     	;# 
  1249  028F                     	;# 
  1250  0290                     	;# 
  1251  0290                     	;# 
  1252  0291                     	;# 
  1253  0292                     	;# 
  1254  0292                     	;# 
  1255  0293                     	;# 
  1256  0293                     	;# 
  1257  0294                     	;# 
  1258  0295                     	;# 
  1259  0296                     	;# 
  1260  0296                     	;# 
  1261  0297                     	;# 
  1262  0298                     	;# 
  1263  0298                     	;# 
  1264  0299                     	;# 
  1265  0299                     	;# 
  1266  029A                     	;# 
  1267  029B                     	;# 
  1268  029C                     	;# 
  1269  029C                     	;# 
  1270  029D                     	;# 
  1271  030C                     	;# 
  1272  030C                     	;# 
  1273  030D                     	;# 
  1274  030E                     	;# 
  1275  030F                     	;# 
  1276  0310                     	;# 
  1277  0310                     	;# 
  1278  0311                     	;# 
  1279  0312                     	;# 
  1280  0313                     	;# 
  1281  0314                     	;# 
  1282  0314                     	;# 
  1283  0315                     	;# 
  1284  0316                     	;# 
  1285  0317                     	;# 
  1286  0318                     	;# 
  1287  0318                     	;# 
  1288  0319                     	;# 
  1289  031A                     	;# 
  1290  031B                     	;# 
  1291  031C                     	;# 
  1292  031C                     	;# 
  1293  031D                     	;# 
  1294  031E                     	;# 
  1295  031F                     	;# 
  1296  038C                     	;# 
  1297  038C                     	;# 
  1298  038D                     	;# 
  1299  038E                     	;# 
  1300  0390                     	;# 
  1301  0390                     	;# 
  1302  0391                     	;# 
  1303  0392                     	;# 
  1304  040C                     	;# 
  1305  040D                     	;# 
  1306  040E                     	;# 
  1307  040F                     	;# 
  1308  0410                     	;# 
  1309  0411                     	;# 
  1310  0416                     	;# 
  1311  0416                     	;# 
  1312  0417                     	;# 
  1313  0418                     	;# 
  1314  0418                     	;# 
  1315  0419                     	;# 
  1316  041A                     	;# 
  1317  041A                     	;# 
  1318  041B                     	;# 
  1319  041C                     	;# 
  1320  041C                     	;# 
  1321  041D                     	;# 
  1322  041E                     	;# 
  1323  041F                     	;# 
  1324  048C                     	;# 
  1325  048C                     	;# 
  1326  048D                     	;# 
  1327  048E                     	;# 
  1328  048F                     	;# 
  1329  048F                     	;# 
  1330  0490                     	;# 
  1331  0491                     	;# 
  1332  0492                     	;# 
  1333  0492                     	;# 
  1334  0493                     	;# 
  1335  0494                     	;# 
  1336  0495                     	;# 
  1337  0495                     	;# 
  1338  0496                     	;# 
  1339  0497                     	;# 
  1340  0498                     	;# 
  1341  0499                     	;# 
  1342  049A                     	;# 
  1343  049B                     	;# 
  1344  049C                     	;# 
  1345  049D                     	;# 
  1346  050C                     	;# 
  1347  050C                     	;# 
  1348  050D                     	;# 
  1349  050E                     	;# 
  1350  050F                     	;# 
  1351  050F                     	;# 
  1352  0510                     	;# 
  1353  0511                     	;# 
  1354  0512                     	;# 
  1355  0512                     	;# 
  1356  0513                     	;# 
  1357  0514                     	;# 
  1358  0515                     	;# 
  1359  0515                     	;# 
  1360  0516                     	;# 
  1361  0517                     	;# 
  1362  0518                     	;# 
  1363  0519                     	;# 
  1364  051A                     	;# 
  1365  051B                     	;# 
  1366  051C                     	;# 
  1367  051D                     	;# 
  1368  058C                     	;# 
  1369  058C                     	;# 
  1370  058D                     	;# 
  1371  058E                     	;# 
  1372  058F                     	;# 
  1373  058F                     	;# 
  1374  0590                     	;# 
  1375  0591                     	;# 
  1376  0592                     	;# 
  1377  0593                     	;# 
  1378  060C                     	;# 
  1379  060D                     	;# 
  1380  060E                     	;# 
  1381  060F                     	;# 
  1382  0610                     	;# 
  1383  0611                     	;# 
  1384  0612                     	;# 
  1385  0613                     	;# 
  1386  0614                     	;# 
  1387  0616                     	;# 
  1388  0617                     	;# 
  1389  0618                     	;# 
  1390  0619                     	;# 
  1391  061A                     	;# 
  1392  061B                     	;# 
  1393  061C                     	;# 
  1394  061D                     	;# 
  1395  061E                     	;# 
  1396  068C                     	;# 
  1397  068D                     	;# 
  1398  068E                     	;# 
  1399  068F                     	;# 
  1400  0690                     	;# 
  1401  0691                     	;# 
  1402  0692                     	;# 
  1403  0693                     	;# 
  1404  0694                     	;# 
  1405  070C                     	;# 
  1406  070D                     	;# 
  1407  070E                     	;# 
  1408  070F                     	;# 
  1409  0710                     	;# 
  1410  0711                     	;# 
  1411  0712                     	;# 
  1412  0713                     	;# 
  1413  0714                     	;# 
  1414  0716                     	;# 
  1415  0717                     	;# 
  1416  0718                     	;# 
  1417  0719                     	;# 
  1418  071A                     	;# 
  1419  071B                     	;# 
  1420  071C                     	;# 
  1421  071D                     	;# 
  1422  071E                     	;# 
  1423  0796                     	;# 
  1424  0797                     	;# 
  1425  0798                     	;# 
  1426  0799                     	;# 
  1427  079A                     	;# 
  1428  079B                     	;# 
  1429  080C                     	;# 
  1430  080D                     	;# 
  1431  080E                     	;# 
  1432  080F                     	;# 
  1433  0810                     	;# 
  1434  0811                     	;# 
  1435  0812                     	;# 
  1436  0813                     	;# 
  1437  0814                     	;# 
  1438  081A                     	;# 
  1439  081B                     	;# 
  1440  081C                     	;# 
  1441  081D                     	;# 
  1442  081E                     	;# 
  1443  081F                     	;# 
  1444  088C                     	;# 
  1445  088D                     	;# 
  1446  088E                     	;# 
  1447  088F                     	;# 
  1448  0890                     	;# 
  1449  0891                     	;# 
  1450  0892                     	;# 
  1451  0893                     	;# 
  1452  0895                     	;# 
  1453  0896                     	;# 
  1454  0897                     	;# 
  1455  0898                     	;# 
  1456  0899                     	;# 
  1457  089A                     	;# 
  1458  089B                     	;# 
  1459  090C                     	;# 
  1460  090E                     	;# 
  1461  090F                     	;# 
  1462  091F                     	;# 
  1463  091F                     	;# 
  1464  098F                     	;# 
  1465  098F                     	;# 
  1466  0990                     	;# 
  1467  0991                     	;# 
  1468  0992                     	;# 
  1469  0993                     	;# 
  1470  0994                     	;# 
  1471  0995                     	;# 
  1472  0996                     	;# 
  1473  0997                     	;# 
  1474  0E0F                     	;# 
  1475  0E10                     	;# 
  1476  0E11                     	;# 
  1477  0E12                     	;# 
  1478  0E13                     	;# 
  1479  0E14                     	;# 
  1480  0E15                     	;# 
  1481  0E16                     	;# 
  1482  0E17                     	;# 
  1483  0E18                     	;# 
  1484  0E19                     	;# 
  1485  0E1A                     	;# 
  1486  0E1B                     	;# 
  1487  0E1C                     	;# 
  1488  0E1D                     	;# 
  1489  0E1E                     	;# 
  1490  0E1F                     	;# 
  1491  0E20                     	;# 
  1492  0E21                     	;# 
  1493  0E22                     	;# 
  1494  0E23                     	;# 
  1495  0E24                     	;# 
  1496  0E25                     	;# 
  1497  0E26                     	;# 
  1498  0E27                     	;# 
  1499  0E28                     	;# 
  1500  0E29                     	;# 
  1501  0E2A                     	;# 
  1502  0E2B                     	;# 
  1503  0E2C                     	;# 
  1504  0E2D                     	;# 
  1505  0E2E                     	;# 
  1506  0E2F                     	;# 
  1507  0E30                     	;# 
  1508  0E31                     	;# 
  1509  0E32                     	;# 
  1510  0E33                     	;# 
  1511  0E34                     	;# 
  1512  0E35                     	;# 
  1513  0E36                     	;# 
  1514  0E37                     	;# 
  1515  0E8F                     	;# 
  1516  0E90                     	;# 
  1517  0E91                     	;# 
  1518  0E92                     	;# 
  1519  0E93                     	;# 
  1520  0E94                     	;# 
  1521  0E95                     	;# 
  1522  0E96                     	;# 
  1523  0E97                     	;# 
  1524  0E9C                     	;# 
  1525  0E9D                     	;# 
  1526  0E9E                     	;# 
  1527  0EA1                     	;# 
  1528  0EA2                     	;# 
  1529  0EA3                     	;# 
  1530  0EA4                     	;# 
  1531  0EA5                     	;# 
  1532  0EA9                     	;# 
  1533  0EAA                     	;# 
  1534  0EAB                     	;# 
  1535  0EAC                     	;# 
  1536  0EB1                     	;# 
  1537  0EB2                     	;# 
  1538  0EB3                     	;# 
  1539  0EB8                     	;# 
  1540  0EB9                     	;# 
  1541  0EBA                     	;# 
  1542  0EBB                     	;# 
  1543  0EBC                     	;# 
  1544  0EBD                     	;# 
  1545  0EBE                     	;# 
  1546  0EC3                     	;# 
  1547  0EC5                     	;# 
  1548  0EC6                     	;# 
  1549  0EC7                     	;# 
  1550  0EC8                     	;# 
  1551  0EC9                     	;# 
  1552  0ECA                     	;# 
  1553  0ECB                     	;# 
  1554  0ECC                     	;# 
  1555  0F10                     	;# 
  1556  0F11                     	;# 
  1557  0F12                     	;# 
  1558  0F13                     	;# 
  1559  0F14                     	;# 
  1560  0F15                     	;# 
  1561  0F16                     	;# 
  1562  0F17                     	;# 
  1563  0F18                     	;# 
  1564  0F19                     	;# 
  1565  0F1A                     	;# 
  1566  0F1B                     	;# 
  1567  0F1C                     	;# 
  1568  0F1D                     	;# 
  1569  0F1E                     	;# 
  1570  0F1F                     	;# 
  1571  0F20                     	;# 
  1572  0F21                     	;# 
  1573  0F22                     	;# 
  1574  0F23                     	;# 
  1575  0F24                     	;# 
  1576  0F25                     	;# 
  1577  0F26                     	;# 
  1578  0F27                     	;# 
  1579  0F38                     	;# 
  1580  0F39                     	;# 
  1581  0F3A                     	;# 
  1582  0F3B                     	;# 
  1583  0F3C                     	;# 
  1584  0F3D                     	;# 
  1585  0F3E                     	;# 
  1586  0F3F                     	;# 
  1587  0F40                     	;# 
  1588  0F41                     	;# 
  1589  0F43                     	;# 
  1590  0F44                     	;# 
  1591  0F45                     	;# 
  1592  0F46                     	;# 
  1593  0F47                     	;# 
  1594  0F48                     	;# 
  1595  0F49                     	;# 
  1596  0F4A                     	;# 
  1597  0F4B                     	;# 
  1598  0F4C                     	;# 
  1599  0F4E                     	;# 
  1600  0F4F                     	;# 
  1601  0F50                     	;# 
  1602  0F51                     	;# 
  1603  0F52                     	;# 
  1604  0F53                     	;# 
  1605  0F54                     	;# 
  1606  0F55                     	;# 
  1607  0F56                     	;# 
  1608  0F57                     	;# 
  1609  0F65                     	;# 
  1610  0F68                     	;# 
  1611  0F69                     	;# 
  1612  0F6A                     	;# 
  1613  0F6B                     	;# 
  1614  0FE4                     	;# 
  1615  0FE5                     	;# 
  1616  0FE6                     	;# 
  1617  0FE7                     	;# 
  1618  0FE8                     	;# 
  1619  0FE9                     	;# 
  1620  0FEA                     	;# 
  1621  0FEB                     	;# 
  1622  0FED                     	;# 
  1623  0FEE                     	;# 
  1624  0FEF                     	;# 
  1625  0013                     _TRISC	set	19
  1626  0011                     _TRISA	set	17
  1627  000C                     _PORTA	set	12
  1628  0016                     _LATA	set	22
  1629  0119                     _RCREG	set	281
  1630  011A                     _TXREG	set	282
  1631  011C                     _SP1BRGH	set	284
  1632  011B                     _SP1BRGL	set	283
  1633  011E                     _TX1STA	set	286
  1634  011D                     _RC1STA	set	285
  1635  011F                     _BAUD1CONbits	set	287
  1636  070F                     _PIR3	set	1807
  1637  0ECB                     _RXPPS	set	3787
  1638  0F20                     _RC0PPS	set	3872
  1639  0F4E                     _ANSELC	set	3918
  1640  0F38                     _ANSELA	set	3896
  1641                           
  1642                           	psect	stringtext1
  1643  0800                     __pstringtext1:
  1644  0800                     STR_1:
  1645  0800  3468               	retlw	104	;'h'
  1646  0801  346F               	retlw	111	;'o'
  1647  0802  346C               	retlw	108	;'l'
  1648  0803  3461               	retlw	97	;'a'
  1649  0804  3420               	retlw	32	;' '
  1650  0805  346D               	retlw	109	;'m'
  1651  0806  3475               	retlw	117	;'u'
  1652  0807  346E               	retlw	110	;'n'
  1653  0808  3464               	retlw	100	;'d'
  1654  0809  346F               	retlw	111	;'o'
  1655  080A  3420               	retlw	32	;' '
  1656  080B  3425               	retlw	37	;'%'
  1657  080C  3469               	retlw	105	;'i'
  1658  080D  340A               	retlw	10
  1659  080E  3400               	retlw	0
  1660                           
  1661                           	psect	stringtext2
  1662  0000                     __pstringtext2:
  1663                           
  1664                           	psect	cinit
  1665  07F2                     start_initialization:	
  1666                           ; #config settings
  1667                           
  1668  07F2                     __initialization:
  1669                           
  1670                           ; Clear objects allocated to BANK0
  1671  07F2  0020               	movlb	0	; select bank0
  1672  07F3  01ED               	clrf	__pbssBANK0& (0+127)
  1673  07F4  01EE               	clrf	(__pbssBANK0+1)& (0+127)
  1674                           
  1675                           ; Clear objects allocated to BANK1
  1676  07F5  30C9               	movlw	low __pbssBANK1
  1677  07F6  0084               	movwf	4
  1678  07F7  3000               	movlw	high __pbssBANK1
  1679  07F8  0085               	movwf	5
  1680  07F9  3026               	movlw	38
  1681  07FA  3180  20DC  3187   	fcall	clear_ram0
  1682  07FD                     end_of_initialization:	
  1683                           ;End of C runtime variable initialization code
  1684                           
  1685  07FD                     __end_of__initialization:
  1686  07FD  0020               	movlb	0
  1687  07FE  3183  2B1C         	ljmp	_main	;jump to C main() function
  1688                           
  1689                           	psect	bssBANK0
  1690  006D                     __pbssBANK0:
  1691  006D                     _flags:
  1692  006D                     	ds	2
  1693                           
  1694                           	psect	bssBANK1
  1695  00C9                     __pbssBANK1:
  1696  00C9                     _nout:
  1697  00C9                     	ds	2
  1698  00CB                     _width:
  1699  00CB                     	ds	2
  1700  00CD                     _prec:
  1701  00CD                     	ds	2
  1702  00CF                     _dbuf:
  1703  00CF                     	ds	32
  1704                           
  1705                           	psect	clrtext
  1706  00DC                     clear_ram0:	
  1707                           ;	Called with FSR0 containing the base address, and
  1708                           ;	WREG with the size to clear
  1709                           
  1710  00DC  0064               	clrwdt	;clear the watchdog before getting into this loop
  1711  00DD                     clrloop0:
  1712  00DD  0180               	clrf	0	;clear RAM location pointed to by FSR
  1713  00DE  3101               	addfsr 0,1
  1714  00DF  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1715  00E0  28DD               	goto	clrloop0	;have we reached the end yet?
  1716  00E1  3400               	retlw	0	;all done for this memory range, return
  1717                           
  1718                           	psect	cstackBANK1
  1719  00A0                     __pcstackBANK1:
  1720  00A0                     sprintf@ap:
  1721                           
  1722                           ; 1 bytes @ 0x0
  1723  00A0                     	ds	1
  1724  00A1                     sprintf@s:
  1725                           
  1726                           ; 1 bytes @ 0x1
  1727  00A1                     	ds	1
  1728  00A2                     sprintf@f:
  1729                           
  1730                           ; 5 bytes @ 0x2
  1731  00A2                     	ds	5
  1732  00A7                     main@buffer:
  1733                           
  1734                           ; 32 bytes @ 0x7
  1735  00A7                     	ds	32
  1736  00C7                     main@rx:
  1737                           
  1738                           ; 1 bytes @ 0x27
  1739  00C7                     	ds	1
  1740  00C8                     main@contador:
  1741                           
  1742                           ; 1 bytes @ 0x28
  1743  00C8                     	ds	1
  1744                           
  1745                           	psect	cstackCOMMON
  1746  0070                     __pcstackCOMMON:
  1747  0070                     ?_port_init:
  1748  0070                     ??_port_init:	
  1749                           ; 1 bytes @ 0x0
  1750                           
  1751  0070                     ?_uart_rx:	
  1752                           ; 1 bytes @ 0x0
  1753                           
  1754  0070                     ??_uart_rx:	
  1755                           ; 1 bytes @ 0x0
  1756                           
  1757  0070                     ?_main:	
  1758                           ; 1 bytes @ 0x0
  1759                           
  1760  0070                     ?_uart_tx:	
  1761                           ; 1 bytes @ 0x0
  1762                           
  1763  0070                     ??_uart_tx:	
  1764                           ; 1 bytes @ 0x0
  1765                           
  1766  0070                     ?_putch:	
  1767                           ; 1 bytes @ 0x0
  1768                           
  1769  0070                     ??___aodiv:	
  1770                           ; 1 bytes @ 0x0
  1771                           
  1772  0070                     ??___aomod:	
  1773                           ; 1 bytes @ 0x0
  1774                           
  1775  0070                     ?_printf:	
  1776                           ; 1 bytes @ 0x0
  1777                           
  1778  0070                     ?_strlen:	
  1779                           ; 2 bytes @ 0x0
  1780                           
  1781  0070                     ?___lldiv:	
  1782                           ; 2 bytes @ 0x0
  1783                           
  1784  0070                     ___lldiv@divisor:	
  1785                           ; 4 bytes @ 0x0
  1786                           
  1787                           
  1788                           ; 4 bytes @ 0x0
  1789  0070                     	ds	1
  1790  0071                     uart_tx@dato:
  1791  0071                     ___aodiv@counter:	
  1792                           ; 1 bytes @ 0x1
  1793                           
  1794  0071                     ___aomod@counter:	
  1795                           ; 1 bytes @ 0x1
  1796                           
  1797                           
  1798                           ; 1 bytes @ 0x1
  1799  0071                     	ds	1
  1800  0072                     ??_strlen:
  1801  0072                     ??_putch:	
  1802                           ; 1 bytes @ 0x2
  1803                           
  1804  0072                     putch@dato:	
  1805                           ; 1 bytes @ 0x2
  1806                           
  1807  0072                     ___aodiv@sign:	
  1808                           ; 1 bytes @ 0x2
  1809                           
  1810  0072                     ___aomod@sign:	
  1811                           ; 1 bytes @ 0x2
  1812                           
  1813                           
  1814                           ; 1 bytes @ 0x2
  1815  0072                     	ds	1
  1816  0073                     ?_fputc:
  1817  0073                     ?_abs:	
  1818                           ; 2 bytes @ 0x3
  1819                           
  1820  0073                     strlen@a:	
  1821                           ; 2 bytes @ 0x3
  1822                           
  1823  0073                     abs@a:	
  1824                           ; 1 bytes @ 0x3
  1825                           
  1826  0073                     fputc@c:	
  1827                           ; 2 bytes @ 0x3
  1828                           
  1829  0073                     ___aodiv@quotient:	
  1830                           ; 2 bytes @ 0x3
  1831                           
  1832                           
  1833                           ; 8 bytes @ 0x3
  1834  0073                     	ds	1
  1835  0074                     strlen@s:
  1836  0074                     ___lldiv@dividend:	
  1837                           ; 1 bytes @ 0x4
  1838                           
  1839                           
  1840                           ; 4 bytes @ 0x4
  1841  0074                     	ds	1
  1842  0075                     ??_abs:
  1843  0075                     fputc@fp:	
  1844                           ; 1 bytes @ 0x5
  1845                           
  1846                           
  1847                           ; 1 bytes @ 0x5
  1848  0075                     	ds	1
  1849  0076                     ??_fputc:
  1850                           
  1851                           ; 1 bytes @ 0x6
  1852  0076                     	ds	2
  1853  0078                     ??___lldiv:
  1854                           
  1855                           ; 1 bytes @ 0x8
  1856  0078                     	ds	1
  1857  0079                     ___lldiv@quotient:
  1858                           
  1859                           ; 4 bytes @ 0x9
  1860  0079                     	ds	2
  1861  007B                     ?_fputs:
  1862  007B                     fputs@fp:	
  1863                           ; 2 bytes @ 0xB
  1864                           
  1865                           
  1866                           ; 1 bytes @ 0xB
  1867  007B                     	ds	1
  1868  007C                     ??_pad:
  1869                           
  1870                           ; 1 bytes @ 0xC
  1871  007C                     	ds	1
  1872  007D                     ??_sprintf:
  1873  007D                     ??_printf:	
  1874                           ; 1 bytes @ 0xD
  1875                           
  1876  007D                     ___lldiv@counter:	
  1877                           ; 1 bytes @ 0xD
  1878                           
  1879                           
  1880                           ; 1 bytes @ 0xD
  1881  007D                     	ds	1
  1882                           
  1883                           	psect	cstackBANK0
  1884  0020                     __pcstackBANK0:
  1885  0020                     ?_serial_init:
  1886  0020                     ??_fputs:	
  1887                           ; 1 bytes @ 0x0
  1888                           
  1889  0020                     ?___aodiv:	
  1890                           ; 1 bytes @ 0x0
  1891                           
  1892  0020                     ?___aomod:	
  1893                           ; 8 bytes @ 0x0
  1894                           
  1895  0020                     serial_init@baudios:	
  1896                           ; 8 bytes @ 0x0
  1897                           
  1898  0020                     ___aodiv@divisor:	
  1899                           ; 4 bytes @ 0x0
  1900                           
  1901  0020                     ___aomod@divisor:	
  1902                           ; 8 bytes @ 0x0
  1903                           
  1904                           
  1905                           ; 8 bytes @ 0x0
  1906  0020                     	ds	3
  1907  0023                     fputs@c:
  1908                           
  1909                           ; 1 bytes @ 0x3
  1910  0023                     	ds	1
  1911  0024                     ??_serial_init:
  1912  0024                     fputs@i:	
  1913                           ; 1 bytes @ 0x4
  1914                           
  1915                           
  1916                           ; 2 bytes @ 0x4
  1917  0024                     	ds	2
  1918  0026                     fputs@s:
  1919                           
  1920                           ; 1 bytes @ 0x6
  1921  0026                     	ds	1
  1922  0027                     ?_pad:
  1923  0027                     pad@buf:	
  1924                           ; 2 bytes @ 0x7
  1925                           
  1926                           
  1927                           ; 1 bytes @ 0x7
  1928  0027                     	ds	1
  1929  0028                     serial_init@sx:
  1930  0028                     pad@p:	
  1931                           ; 2 bytes @ 0x8
  1932                           
  1933  0028                     ___aodiv@dividend:	
  1934                           ; 2 bytes @ 0x8
  1935                           
  1936  0028                     ___aomod@dividend:	
  1937                           ; 8 bytes @ 0x8
  1938                           
  1939                           
  1940                           ; 8 bytes @ 0x8
  1941  0028                     	ds	2
  1942  002A                     pad@i:
  1943                           
  1944                           ; 2 bytes @ 0xA
  1945  002A                     	ds	2
  1946  002C                     pad@w:
  1947                           
  1948                           ; 2 bytes @ 0xC
  1949  002C                     	ds	2
  1950  002E                     pad@fp:
  1951                           
  1952                           ; 1 bytes @ 0xE
  1953  002E                     	ds	2
  1954  0030                     ?_dtoa:
  1955  0030                     dtoa@d:	
  1956                           ; 2 bytes @ 0x10
  1957                           
  1958                           
  1959                           ; 8 bytes @ 0x10
  1960  0030                     	ds	8
  1961  0038                     ??_dtoa:
  1962                           
  1963                           ; 1 bytes @ 0x18
  1964  0038                     	ds	3
  1965  003B                     _dtoa$633:
  1966                           
  1967                           ; 2 bytes @ 0x1B
  1968  003B                     	ds	2
  1969  003D                     dtoa@fp:
  1970                           
  1971                           ; 1 bytes @ 0x1D
  1972  003D                     	ds	1
  1973  003E                     dtoa@p:
  1974                           
  1975                           ; 2 bytes @ 0x1E
  1976  003E                     	ds	2
  1977  0040                     dtoa@w:
  1978                           
  1979                           ; 2 bytes @ 0x20
  1980  0040                     	ds	2
  1981  0042                     dtoa@s:
  1982                           
  1983                           ; 2 bytes @ 0x22
  1984  0042                     	ds	2
  1985  0044                     dtoa@n:
  1986                           
  1987                           ; 8 bytes @ 0x24
  1988  0044                     	ds	8
  1989  004C                     dtoa@i:
  1990                           
  1991                           ; 2 bytes @ 0x2C
  1992  004C                     	ds	2
  1993  004E                     ?_vfpfcnvrt:
  1994  004E                     vfpfcnvrt@fmt:	
  1995                           ; 2 bytes @ 0x2E
  1996                           
  1997                           
  1998                           ; 1 bytes @ 0x2E
  1999  004E                     	ds	1
  2000  004F                     vfpfcnvrt@ap:
  2001                           
  2002                           ; 1 bytes @ 0x2F
  2003  004F                     	ds	1
  2004  0050                     ??_vfpfcnvrt:
  2005                           
  2006                           ; 1 bytes @ 0x30
  2007  0050                     	ds	5
  2008  0055                     vfpfcnvrt@ll:
  2009                           
  2010                           ; 8 bytes @ 0x35
  2011  0055                     	ds	8
  2012  005D                     vfpfcnvrt@vp:
  2013                           
  2014                           ; 1 bytes @ 0x3D
  2015  005D                     	ds	1
  2016  005E                     vfpfcnvrt@fp:
  2017                           
  2018                           ; 1 bytes @ 0x3E
  2019  005E                     	ds	1
  2020  005F                     ?_vfprintf:
  2021  005F                     vfprintf@fmt:	
  2022                           ; 2 bytes @ 0x3F
  2023                           
  2024                           
  2025                           ; 2 bytes @ 0x3F
  2026  005F                     	ds	2
  2027  0061                     vfprintf@ap:
  2028                           
  2029                           ; 1 bytes @ 0x41
  2030  0061                     	ds	1
  2031  0062                     ??_vfprintf:
  2032                           
  2033                           ; 1 bytes @ 0x42
  2034  0062                     	ds	2
  2035  0064                     vfprintf@fp:
  2036                           
  2037                           ; 1 bytes @ 0x44
  2038  0064                     	ds	1
  2039  0065                     vfprintf@cfmt:
  2040                           
  2041                           ; 2 bytes @ 0x45
  2042  0065                     	ds	2
  2043  0067                     ?_sprintf:
  2044  0067                     printf@fmt:	
  2045                           ; 2 bytes @ 0x47
  2046                           
  2047  0067                     sprintf@fmt:	
  2048                           ; 1 bytes @ 0x47
  2049                           
  2050                           
  2051                           ; 2 bytes @ 0x47
  2052  0067                     	ds	1
  2053  0068                     printf@ap:
  2054                           
  2055                           ; 1 bytes @ 0x48
  2056  0068                     	ds	3
  2057  006B                     ??_main:
  2058                           
  2059                           ; 1 bytes @ 0x4B
  2060  006B                     	ds	2
  2061                           
  2062                           	psect	maintext
  2063  031C                     __pmaintext:	
  2064 ;;
  2065 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2066 ;;
  2067 ;; *************** function _main *****************
  2068 ;; Defined at:
  2069 ;;		line 12 in file "Main.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;		None
  2072 ;; Auto vars:     Size  Location     Type
  2073 ;;  buffer         32    7[BANK1 ] unsigned char [32]
  2074 ;;  contador        1   40[BANK1 ] unsigned char 
  2075 ;;  rx              1   39[BANK1 ] unsigned char 
  2076 ;; Return value:  Size  Location     Type
  2077 ;;                  1    wreg      void 
  2078 ;; Registers used:
  2079 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2080 ;; Tracked objects:
  2081 ;;		On entry : B1F/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2086 ;;      Locals:         0       0      34       0       0       0       0       0       0       0       0       0       
      +0       0
  2087 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2088 ;;      Totals:         0       2      34       0       0       0       0       0       0       0       0       0       
      +0       0
  2089 ;;Total ram usage:       36 bytes
  2090 ;; Hardware stack levels required when called: 9
  2091 ;; This function calls:
  2092 ;;		_port_init
  2093 ;;		_printf
  2094 ;;		_serial_init
  2095 ;;		_sprintf
  2096 ;;		_uart_rx
  2097 ;; This function is called by:
  2098 ;;		Startup code after reset
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102                           
  2103                           ;psect for function _main
  2104  031C                     _main:
  2105  031C                     l1530:	
  2106                           ;incstack = 0
  2107                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2108                           
  2109                           
  2110                           ;Main.c: 13:     uint8_t rx, buffer[32], contador =0;
  2111  031C  0021               	movlb	1	; select bank1
  2112  031D  01C8               	clrf	main@contador^(0+128)
  2113  031E                     l1532:
  2114                           
  2115                           ;Main.c: 15:     port_init();
  2116  031E  3180  20E2  3183   	fcall	_port_init
  2117  0321                     l1534:
  2118                           
  2119                           ;Main.c: 16:     serial_init(9600);
  2120  0321  3000               	movlw	0
  2121  0322  0020               	movlb	0	; select bank0
  2122  0323  00A3               	movwf	serial_init@baudios+3
  2123  0324  3000               	movlw	0
  2124  0325  00A2               	movwf	serial_init@baudios+2
  2125  0326  3025               	movlw	37
  2126  0327  00A1               	movwf	serial_init@baudios+1
  2127  0328  3080               	movlw	128
  2128  0329  00A0               	movwf	serial_init@baudios
  2129  032A  3181  21DF  3183   	fcall	_serial_init
  2130  032D                     l1536:
  2131                           
  2132                           ;Main.c: 19:         LATA = LATA | (1<<3);
  2133  032D  0020               	movlb	0	; select bank0
  2134  032E  0816               	movf	22,w	;volatile
  2135  032F  3808               	iorlw	8
  2136  0330  0096               	movwf	22	;volatile
  2137                           
  2138                           ;Main.c: 20:         _delay((unsigned long)((500)*(32000000UL/4000.0)));
  2139  0331  3015               	movlw	21
  2140  0332  0020               	movlb	0	; select bank0
  2141  0333  00EC               	movwf	??_main+1
  2142  0334  304B               	movlw	75
  2143  0335  00EB               	movwf	??_main
  2144  0336  30BE               	movlw	190
  2145  0337                     u1457:
  2146  0337  0B89               	decfsz	9,f
  2147  0338  2B37               	goto	u1457
  2148  0339  0BEB               	decfsz	??_main,f
  2149  033A  2B37               	goto	u1457
  2150  033B  0BEC               	decfsz	??_main+1,f
  2151  033C  2B37               	goto	u1457
  2152  033D  0000               	nop
  2153  033E                     l1538:
  2154                           
  2155                           ;Main.c: 21:         LATA = LATA & ~(1<<3);
  2156  033E  0020               	movlb	0	; select bank0
  2157  033F  0816               	movf	22,w	;volatile
  2158  0340  39F7               	andlw	247
  2159  0341  0096               	movwf	22	;volatile
  2160  0342                     l1540:
  2161                           
  2162                           ;Main.c: 22:         _delay((unsigned long)((500)*(32000000UL/4000.0)));
  2163  0342  3015               	movlw	21
  2164  0343  0020               	movlb	0	; select bank0
  2165  0344  00EC               	movwf	??_main+1
  2166  0345  304B               	movlw	75
  2167  0346  00EB               	movwf	??_main
  2168  0347  30BE               	movlw	190
  2169  0348                     u1467:
  2170  0348  0B89               	decfsz	9,f
  2171  0349  2B48               	goto	u1467
  2172  034A  0BEB               	decfsz	??_main,f
  2173  034B  2B48               	goto	u1467
  2174  034C  0BEC               	decfsz	??_main+1,f
  2175  034D  2B48               	goto	u1467
  2176  034E  0000               	nop
  2177  034F                     l1542:
  2178                           
  2179                           ;Main.c: 23:         sprintf(buffer,"hola mundo %i\n",contador++);
  2180  034F  3000               	movlw	low (STR_1| (0+32768))
  2181  0350  0020               	movlb	0	; select bank0
  2182  0351  00E7               	movwf	sprintf@fmt
  2183  0352  3088               	movlw	high (STR_1| (0+32768))
  2184  0353  00E8               	movwf	sprintf@fmt+1
  2185  0354  0021               	movlb	1	; select bank1
  2186  0355  0848               	movf	main@contador^(0+128),w
  2187  0356  0020               	movlb	0	; select bank0
  2188  0357  00EB               	movwf	??_main
  2189  0358  01EC               	clrf	??_main+1
  2190  0359  086B               	movf	??_main,w
  2191  035A  00E9               	movwf	?_sprintf+2
  2192  035B  086C               	movf	??_main+1,w
  2193  035C  00EA               	movwf	?_sprintf+3
  2194  035D  30A7               	movlw	(low (main@buffer| 0))& (0+255)
  2195  035E  3181  2162  3183   	fcall	_sprintf
  2196  0361                     l1544:
  2197  0361  3001               	movlw	1
  2198  0362  0020               	movlb	0	; select bank0
  2199  0363  00EB               	movwf	??_main
  2200  0364  086B               	movf	??_main,w
  2201  0365  0021               	movlb	1	; select bank1
  2202  0366  07C8               	addwf	main@contador^(0+128),f
  2203  0367                     l1546:
  2204                           
  2205                           ;Main.c: 25:         printf(buffer);
  2206  0367  30A7               	movlw	(low (main@buffer| 0))& (0+255)
  2207  0368  3180  20FE  3183   	fcall	_printf
  2208  036B                     l1548:
  2209                           
  2210                           ;Main.c: 29:         if (((PIR3>>5) & 0x01) ==1){
  2211  036B  002E               	movlb	14	; select bank14
  2212  036C  080F               	movf	15,w	;volatile
  2213  036D  0020               	movlb	0	; select bank0
  2214  036E  00EB               	movwf	??_main
  2215  036F  3005               	movlw	5
  2216  0370                     u1415:
  2217  0370  36EB               	lsrf	??_main,f
  2218  0371  0B89               	decfsz	9,f
  2219  0372  2B70               	goto	u1415
  2220  0373  1C6B               	btfss	??_main,0
  2221  0374  2B76               	goto	u1421
  2222  0375  2B77               	goto	u1420
  2223  0376                     u1421:
  2224  0376  2B7F               	goto	l1552
  2225  0377                     u1420:
  2226  0377                     l1550:
  2227                           
  2228                           ;Main.c: 30:             rx = uart_rx();
  2229  0377  3181  2144  3183   	fcall	_uart_rx
  2230  037A  0020               	movlb	0	; select bank0
  2231  037B  00EB               	movwf	??_main
  2232  037C  086B               	movf	??_main,w
  2233  037D  0021               	movlb	1	; select bank1
  2234  037E  00C7               	movwf	main@rx^(0+128)
  2235  037F                     l1552:
  2236                           
  2237                           ;Main.c: 33:         if (rx == 'b'){
  2238  037F  3062               	movlw	98
  2239  0380  0021               	movlb	1	; select bank1
  2240  0381  0647               	xorwf	main@rx^(0+128),w
  2241  0382  1D03               	btfss	3,2
  2242  0383  2B85               	goto	u1431
  2243  0384  2B86               	goto	u1430
  2244  0385                     u1431:
  2245  0385  2B8B               	goto	l1556
  2246  0386                     u1430:
  2247  0386                     l1554:
  2248                           
  2249                           ;Main.c: 34:             LATA = LATA | (1<<0);
  2250  0386  0020               	movlb	0	; select bank0
  2251  0387  0816               	movf	22,w	;volatile
  2252  0388  3801               	iorlw	1
  2253  0389  0096               	movwf	22	;volatile
  2254                           
  2255                           ;Main.c: 35:         }else{
  2256  038A  2B2D               	goto	l1536
  2257  038B                     l1556:
  2258                           
  2259                           ;Main.c: 36:             LATA = LATA & ~(1<<0);
  2260  038B  0020               	movlb	0	; select bank0
  2261  038C  0816               	movf	22,w	;volatile
  2262  038D  39FE               	andlw	254
  2263  038E  0096               	movwf	22	;volatile
  2264  038F  2B2D               	goto	l1536
  2265  0390  3180  2802         	ljmp	start
  2266  0392                     __end_of_main:
  2267                           
  2268                           	psect	text1
  2269  0144                     __ptext1:	
  2270 ;; *************** function _uart_rx *****************
  2271 ;; Defined at:
  2272 ;;		line 39 in file "uart.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;		None
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;		None
  2277 ;; Return value:  Size  Location     Type
  2278 ;;                  1    wreg      unsigned char 
  2279 ;; Registers used:
  2280 ;;		wreg, status,2, status,0
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2288 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2289 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2290 ;;Total ram usage:        1 bytes
  2291 ;; Hardware stack levels used: 1
  2292 ;; This function calls:
  2293 ;;		Nothing
  2294 ;; This function is called by:
  2295 ;;		_main
  2296 ;;		_getch
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300                           
  2301                           ;psect for function _uart_rx
  2302  0144                     _uart_rx:
  2303  0144                     l1518:	
  2304                           ;incstack = 0
  2305                           ; Regs used in _uart_rx: [wreg+status,2+status,0]
  2306                           
  2307  0144                     l1520:	
  2308                           ;uart.c: 43:     while (( (PIR3>>5) & 0x01) == 0){}
  2309                           
  2310  0144  002E               	movlb	14	; select bank14
  2311  0145  080F               	movf	15,w	;volatile
  2312  0146  00F0               	movwf	??_uart_rx
  2313  0147  3005               	movlw	5
  2314  0148                     u1375:
  2315  0148  36F0               	lsrf	??_uart_rx,f
  2316  0149  0B89               	decfsz	9,f
  2317  014A  2948               	goto	u1375
  2318  014B  1C70               	btfss	??_uart_rx,0
  2319  014C  294E               	goto	u1381
  2320  014D  294F               	goto	u1380
  2321  014E                     u1381:
  2322  014E  2944               	goto	l1520
  2323  014F                     u1380:
  2324  014F                     l1522:
  2325                           
  2326                           ;uart.c: 45:     if( ((RC1STA >> 1)& 0x01) == 1){
  2327  014F  0022               	movlb	2	; select bank2
  2328  0150  081D               	movf	29,w	;volatile
  2329  0151  00F0               	movwf	??_uart_rx
  2330  0152  3001               	movlw	1
  2331  0153                     u1395:
  2332  0153  36F0               	lsrf	??_uart_rx,f
  2333  0154  0B89               	decfsz	9,f
  2334  0155  2953               	goto	u1395
  2335  0156  1C70               	btfss	??_uart_rx,0
  2336  0157  2959               	goto	u1401
  2337  0158  295A               	goto	u1400
  2338  0159                     u1401:
  2339  0159  2960               	goto	l1526
  2340  015A                     u1400:
  2341  015A                     l1524:
  2342                           
  2343                           ;uart.c: 46:         RC1STA = RC1STA & ~(1<<4);
  2344  015A  081D               	movf	29,w	;volatile
  2345  015B  39EF               	andlw	239
  2346  015C  009D               	movwf	29	;volatile
  2347                           
  2348                           ;uart.c: 47:         RC1STA = RC1STA | (1<<4);
  2349  015D  081D               	movf	29,w	;volatile
  2350  015E  3810               	iorlw	16
  2351  015F  009D               	movwf	29	;volatile
  2352  0160                     l1526:
  2353                           
  2354                           ;uart.c: 53:       return RCREG;
  2355  0160  0819               	movf	25,w	;volatile
  2356  0161                     l76:
  2357  0161  0008               	return
  2358  0162                     __end_of_uart_rx:
  2359                           
  2360                           	psect	text2
  2361  0162                     __ptext2:	
  2362 ;; *************** function _sprintf *****************
  2363 ;; Defined at:
  2364 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  2365 ;; Parameters:    Size  Location     Type
  2366 ;;  s               1    wreg     PTR unsigned char 
  2367 ;;		 -> main@buffer(32), 
  2368 ;;  fmt             2   71[BANK0 ] PTR const unsigned char 
  2369 ;;		 -> STR_1(15), 
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;  s               1    1[BANK1 ] PTR unsigned char 
  2372 ;;		 -> main@buffer(32), 
  2373 ;;  f               5    2[BANK1 ] struct _IO_FILE
  2374 ;;  ret             2    0        int 
  2375 ;;  ap              1    0[BANK1 ] PTR void [1]
  2376 ;;		 -> ?_printf(2), ?_sprintf(2), 
  2377 ;; Return value:  Size  Location     Type
  2378 ;;                  2   71[BANK0 ] int 
  2379 ;; Registers used:
  2380 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2386 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2387 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  2388 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2389 ;;      Totals:         1       4       7       0       0       0       0       0       0       0       0       0       
      +0       0
  2390 ;;Total ram usage:       12 bytes
  2391 ;; Hardware stack levels used: 1
  2392 ;; Hardware stack levels required when called: 8
  2393 ;; This function calls:
  2394 ;;		_vfprintf
  2395 ;; This function is called by:
  2396 ;;		_main
  2397 ;; This function uses a non-reentrant model
  2398 ;;
  2399                           
  2400                           
  2401                           ;psect for function _sprintf
  2402  0162                     _sprintf:
  2403                           
  2404                           ;incstack = 0
  2405                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2406                           ;sprintf@s stored from wreg
  2407  0162  0021               	movlb	1	; select bank1
  2408  0163  00A1               	movwf	sprintf@s^(0+128)
  2409  0164                     l1500:
  2410  0164  3069               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  2411  0165  00FD               	movwf	??_sprintf
  2412  0166  087D               	movf	??_sprintf,w
  2413  0167  00A0               	movwf	sprintf@ap^(0+128)
  2414  0168  0821               	movf	sprintf@s^(0+128),w
  2415  0169  00FD               	movwf	??_sprintf
  2416  016A  087D               	movf	??_sprintf,w
  2417  016B  00A2               	movwf	sprintf@f^(0+128)
  2418  016C                     l1502:
  2419  016C  01A3               	clrf	(sprintf@f^(0+128)+1)
  2420  016D  01A4               	clrf	((sprintf@f+1)^(0+128)+1)
  2421  016E                     l1504:
  2422  016E  01A5               	clrf	(sprintf@f^(0+128)+3)
  2423  016F  01A6               	clrf	((sprintf@f+1)^(0+128)+3)
  2424  0170                     l1506:
  2425  0170  0020               	movlb	0	; select bank0
  2426  0171  0868               	movf	sprintf@fmt+1,w
  2427  0172  00E0               	movwf	vfprintf@fmt+1
  2428  0173  0867               	movf	sprintf@fmt,w
  2429  0174  00DF               	movwf	vfprintf@fmt
  2430  0175  30A0               	movlw	(low (sprintf@ap| 0))& (0+255)
  2431  0176  00FD               	movwf	??_sprintf
  2432  0177  087D               	movf	??_sprintf,w
  2433  0178  00E1               	movwf	vfprintf@ap
  2434  0179  30A2               	movlw	(low (sprintf@f| 0))& (0+255)
  2435  017A  3181  21AE  3181   	fcall	_vfprintf
  2436  017D                     l1508:
  2437  017D  0021               	movlb	1	; select bank1
  2438  017E  0823               	movf	(sprintf@f^(0+128)+1),w
  2439  017F  0721               	addwf	sprintf@s^(0+128),w
  2440  0180  00FD               	movwf	??_sprintf
  2441  0181  087D               	movf	??_sprintf,w
  2442  0182  0086               	movwf	6
  2443  0183  0187               	clrf	7
  2444  0184  0181               	clrf	1
  2445  0185                     l703:
  2446  0185  0008               	return
  2447  0186                     __end_of_sprintf:
  2448                           
  2449                           	psect	text3
  2450  01DF                     __ptext3:	
  2451 ;; *************** function _serial_init *****************
  2452 ;; Defined at:
  2453 ;;		line 3 in file "uart.c"
  2454 ;; Parameters:    Size  Location     Type
  2455 ;;  baudios         4    0[BANK0 ] unsigned long 
  2456 ;; Auto vars:     Size  Location     Type
  2457 ;;  sx              2    8[BANK0 ] unsigned short 
  2458 ;; Return value:  Size  Location     Type
  2459 ;;                  1    wreg      void 
  2460 ;; Registers used:
  2461 ;;		wreg, status,2, status,0, pclath, cstack
  2462 ;; Tracked objects:
  2463 ;;		On entry : 0/0
  2464 ;;		On exit  : 0/0
  2465 ;;		Unchanged: 0/0
  2466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2467 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2468 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2469 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2470 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2471 ;;Total ram usage:       10 bytes
  2472 ;; Hardware stack levels used: 1
  2473 ;; Hardware stack levels required when called: 1
  2474 ;; This function calls:
  2475 ;;		___lldiv
  2476 ;; This function is called by:
  2477 ;;		_main
  2478 ;; This function uses a non-reentrant model
  2479 ;;
  2480                           
  2481                           
  2482                           ;psect for function _serial_init
  2483  01DF                     _serial_init:
  2484  01DF                     l1486:	
  2485                           ;incstack = 0
  2486                           ; Regs used in _serial_init: [wreg+status,2+status,0+pclath+cstack]
  2487                           
  2488                           
  2489                           ;uart.c: 4:     uint16_t sx;;uart.c: 6:     BAUD1CONbits.BRG16 = 0;
  2490  01DF  0022               	movlb	2	; select bank2
  2491  01E0  119F               	bcf	31,3	;volatile
  2492  01E1                     l1488:
  2493                           
  2494                           ;uart.c: 9:     RC1STA = 0b10010000;
  2495  01E1  3090               	movlw	144
  2496  01E2  009D               	movwf	29	;volatile
  2497                           
  2498                           ;uart.c: 15:     TX1STA = 0b00100000;
  2499  01E3  3020               	movlw	32
  2500  01E4  009E               	movwf	30	;volatile
  2501  01E5                     l1490:
  2502                           
  2503                           ;uart.c: 19:     sx = ((32000000UL/baudios)/64 ) - 1;
  2504  01E5  0020               	movlb	0	; select bank0
  2505  01E6  0823               	movf	serial_init@baudios+3,w
  2506  01E7  00F3               	movwf	___lldiv@divisor+3
  2507  01E8  0822               	movf	serial_init@baudios+2,w
  2508  01E9  00F2               	movwf	___lldiv@divisor+2
  2509  01EA  0821               	movf	serial_init@baudios+1,w
  2510  01EB  00F1               	movwf	___lldiv@divisor+1
  2511  01EC  0820               	movf	serial_init@baudios,w
  2512  01ED  00F0               	movwf	___lldiv@divisor
  2513  01EE  3001               	movlw	1
  2514  01EF  00F7               	movwf	___lldiv@dividend+3
  2515  01F0  30E8               	movlw	232
  2516  01F1  00F6               	movwf	___lldiv@dividend+2
  2517  01F2  3048               	movlw	72
  2518  01F3  00F5               	movwf	___lldiv@dividend+1
  2519  01F4  3000               	movlw	0
  2520  01F5  00F4               	movwf	___lldiv@dividend
  2521  01F6  3182  22C2  3181   	fcall	___lldiv
  2522  01F9  0870               	movf	?___lldiv,w
  2523  01FA  0020               	movlb	0	; select bank0
  2524  01FB  00A4               	movwf	??_serial_init
  2525  01FC  0871               	movf	?___lldiv+1,w
  2526  01FD  00A5               	movwf	??_serial_init+1
  2527  01FE  0872               	movf	?___lldiv+2,w
  2528  01FF  00A6               	movwf	??_serial_init+2
  2529  0200  0873               	movf	?___lldiv+3,w
  2530  0201  00A7               	movwf	??_serial_init+3
  2531  0202  3006               	movlw	6
  2532  0203                     u1365:
  2533  0203  36A7               	lsrf	??_serial_init+3,f
  2534  0204  0CA6               	rrf	??_serial_init+2,f
  2535  0205  0CA5               	rrf	??_serial_init+1,f
  2536  0206  0CA4               	rrf	??_serial_init,f
  2537  0207                     u1360:
  2538  0207  0B89               	decfsz	9,f
  2539  0208  2A03               	goto	u1365
  2540  0209  0824               	movf	??_serial_init,w
  2541  020A  3EFF               	addlw	255
  2542  020B  00A8               	movwf	serial_init@sx
  2543  020C  30FF               	movlw	255
  2544  020D  3D25               	addwfc	??_serial_init+1,w
  2545  020E  00A9               	movwf	serial_init@sx+1
  2546  020F                     l1492:
  2547                           
  2548                           ;uart.c: 20:     SP1BRGL = (uint8_t)sx;
  2549  020F  0828               	movf	serial_init@sx,w
  2550  0210  0022               	movlb	2	; select bank2
  2551  0211  009B               	movwf	27	;volatile
  2552  0212                     l1494:
  2553                           
  2554                           ;uart.c: 21:     SP1BRGH = (uint8_t)(sx>>8);
  2555  0212  0020               	movlb	0	; select bank0
  2556  0213  0829               	movf	serial_init@sx+1,w
  2557  0214  0022               	movlb	2	; select bank2
  2558  0215  009C               	movwf	28	;volatile
  2559  0216                     l1496:
  2560                           
  2561                           ;uart.c: 25:     RC0PPS = 0x10;
  2562  0216  3010               	movlw	16
  2563  0217  003E               	movlb	30	; select bank30
  2564  0218  00A0               	movwf	32	;volatile
  2565  0219                     l1498:
  2566                           
  2567                           ;uart.c: 27:     RXPPS = 0x11;
  2568  0219  3011               	movlw	17
  2569  021A  003D               	movlb	29	; select bank29
  2570  021B  00CB               	movwf	75	;volatile
  2571  021C                     l63:
  2572  021C  0008               	return
  2573  021D                     __end_of_serial_init:
  2574                           
  2575                           	psect	text4
  2576  02C2                     __ptext4:	
  2577 ;; *************** function ___lldiv *****************
  2578 ;; Defined at:
  2579 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
  2580 ;; Parameters:    Size  Location     Type
  2581 ;;  divisor         4    0[COMMON] unsigned long 
  2582 ;;  dividend        4    4[COMMON] unsigned long 
  2583 ;; Auto vars:     Size  Location     Type
  2584 ;;  quotient        4    9[COMMON] unsigned long 
  2585 ;;  counter         1   13[COMMON] unsigned char 
  2586 ;; Return value:  Size  Location     Type
  2587 ;;                  4    0[COMMON] unsigned long 
  2588 ;; Registers used:
  2589 ;;		wreg, status,2, status,0
  2590 ;; Tracked objects:
  2591 ;;		On entry : 0/0
  2592 ;;		On exit  : 0/0
  2593 ;;		Unchanged: 0/0
  2594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2595 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2596 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2597 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2598 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2599 ;;Total ram usage:       14 bytes
  2600 ;; Hardware stack levels used: 1
  2601 ;; This function calls:
  2602 ;;		Nothing
  2603 ;; This function is called by:
  2604 ;;		_serial_init
  2605 ;; This function uses a non-reentrant model
  2606 ;;
  2607                           
  2608                           
  2609                           ;psect for function ___lldiv
  2610  02C2                     ___lldiv:
  2611  02C2                     l1444:	
  2612                           ;incstack = 0
  2613                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2614                           
  2615  02C2  3000               	movlw	0
  2616  02C3  00FC               	movwf	___lldiv@quotient+3
  2617  02C4  3000               	movlw	0
  2618  02C5  00FB               	movwf	___lldiv@quotient+2
  2619  02C6  3000               	movlw	0
  2620  02C7  00FA               	movwf	___lldiv@quotient+1
  2621  02C8  3000               	movlw	0
  2622  02C9  00F9               	movwf	___lldiv@quotient
  2623  02CA  0873               	movf	___lldiv@divisor+3,w
  2624  02CB  0472               	iorwf	___lldiv@divisor+2,w
  2625  02CC  0471               	iorwf	___lldiv@divisor+1,w
  2626  02CD  0470               	iorwf	___lldiv@divisor,w
  2627  02CE  1903               	skipnz
  2628  02CF  2AD1               	goto	u1281
  2629  02D0  2AD2               	goto	u1280
  2630  02D1                     u1281:
  2631  02D1  2B13               	goto	l1464
  2632  02D2                     u1280:
  2633  02D2                     l1446:
  2634  02D2  01FD               	clrf	___lldiv@counter
  2635  02D3  0AFD               	incf	___lldiv@counter,f
  2636  02D4  2AE0               	goto	l1450
  2637  02D5                     l1448:
  2638  02D5  3001               	movlw	1
  2639  02D6                     u1295:
  2640  02D6  35F0               	lslf	___lldiv@divisor,f
  2641  02D7  0DF1               	rlf	___lldiv@divisor+1,f
  2642  02D8  0DF2               	rlf	___lldiv@divisor+2,f
  2643  02D9  0DF3               	rlf	___lldiv@divisor+3,f
  2644  02DA  0B89               	decfsz	9,f
  2645  02DB  2AD6               	goto	u1295
  2646  02DC  3001               	movlw	1
  2647  02DD  00F8               	movwf	??___lldiv
  2648  02DE  0878               	movf	??___lldiv,w
  2649  02DF  07FD               	addwf	___lldiv@counter,f
  2650  02E0                     l1450:
  2651  02E0  1FF3               	btfss	___lldiv@divisor+3,7
  2652  02E1  2AE3               	goto	u1301
  2653  02E2  2AE4               	goto	u1300
  2654  02E3                     u1301:
  2655  02E3  2AD5               	goto	l1448
  2656  02E4                     u1300:
  2657  02E4                     l1452:
  2658  02E4  3001               	movlw	1
  2659  02E5                     u1315:
  2660  02E5  35F9               	lslf	___lldiv@quotient,f
  2661  02E6  0DFA               	rlf	___lldiv@quotient+1,f
  2662  02E7  0DFB               	rlf	___lldiv@quotient+2,f
  2663  02E8  0DFC               	rlf	___lldiv@quotient+3,f
  2664  02E9  0B89               	decfsz	9,f
  2665  02EA  2AE5               	goto	u1315
  2666  02EB                     l1454:
  2667  02EB  0873               	movf	___lldiv@divisor+3,w
  2668  02EC  0277               	subwf	___lldiv@dividend+3,w
  2669  02ED  1D03               	skipz
  2670  02EE  2AF9               	goto	u1325
  2671  02EF  0872               	movf	___lldiv@divisor+2,w
  2672  02F0  0276               	subwf	___lldiv@dividend+2,w
  2673  02F1  1D03               	skipz
  2674  02F2  2AF9               	goto	u1325
  2675  02F3  0871               	movf	___lldiv@divisor+1,w
  2676  02F4  0275               	subwf	___lldiv@dividend+1,w
  2677  02F5  1D03               	skipz
  2678  02F6  2AF9               	goto	u1325
  2679  02F7  0870               	movf	___lldiv@divisor,w
  2680  02F8  0274               	subwf	___lldiv@dividend,w
  2681  02F9                     u1325:
  2682  02F9  1C03               	skipc
  2683  02FA  2AFC               	goto	u1321
  2684  02FB  2AFD               	goto	u1320
  2685  02FC                     u1321:
  2686  02FC  2B06               	goto	l1460
  2687  02FD                     u1320:
  2688  02FD                     l1456:
  2689  02FD  0870               	movf	___lldiv@divisor,w
  2690  02FE  02F4               	subwf	___lldiv@dividend,f
  2691  02FF  0871               	movf	___lldiv@divisor+1,w
  2692  0300  3BF5               	subwfb	___lldiv@dividend+1,f
  2693  0301  0872               	movf	___lldiv@divisor+2,w
  2694  0302  3BF6               	subwfb	___lldiv@dividend+2,f
  2695  0303  0873               	movf	___lldiv@divisor+3,w
  2696  0304  3BF7               	subwfb	___lldiv@dividend+3,f
  2697  0305                     l1458:
  2698  0305  1479               	bsf	___lldiv@quotient,0
  2699  0306                     l1460:
  2700  0306  3001               	movlw	1
  2701  0307                     u1335:
  2702  0307  36F3               	lsrf	___lldiv@divisor+3,f
  2703  0308  0CF2               	rrf	___lldiv@divisor+2,f
  2704  0309  0CF1               	rrf	___lldiv@divisor+1,f
  2705  030A  0CF0               	rrf	___lldiv@divisor,f
  2706  030B  0B89               	decfsz	9,f
  2707  030C  2B07               	goto	u1335
  2708  030D                     l1462:
  2709  030D  3001               	movlw	1
  2710  030E  02FD               	subwf	___lldiv@counter,f
  2711  030F  1D03               	btfss	3,2
  2712  0310  2B12               	goto	u1341
  2713  0311  2B13               	goto	u1340
  2714  0312                     u1341:
  2715  0312  2AE4               	goto	l1452
  2716  0313                     u1340:
  2717  0313                     l1464:
  2718  0313  087C               	movf	___lldiv@quotient+3,w
  2719  0314  00F3               	movwf	?___lldiv+3
  2720  0315  087B               	movf	___lldiv@quotient+2,w
  2721  0316  00F2               	movwf	?___lldiv+2
  2722  0317  087A               	movf	___lldiv@quotient+1,w
  2723  0318  00F1               	movwf	?___lldiv+1
  2724  0319  0879               	movf	___lldiv@quotient,w
  2725  031A  00F0               	movwf	?___lldiv
  2726  031B                     l276:
  2727  031B  0008               	return
  2728  031C                     __end_of___lldiv:
  2729                           
  2730                           	psect	text5
  2731  00FE                     __ptext5:	
  2732 ;; *************** function _printf *****************
  2733 ;; Defined at:
  2734 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  2735 ;; Parameters:    Size  Location     Type
  2736 ;;  fmt             1    wreg     PTR const unsigned char 
  2737 ;;		 -> main@buffer(32), 
  2738 ;; Auto vars:     Size  Location     Type
  2739 ;;  fmt             1   71[BANK0 ] PTR const unsigned char 
  2740 ;;		 -> main@buffer(32), 
  2741 ;;  ret             2    0        int 
  2742 ;;  ap              1   72[BANK0 ] PTR void [1]
  2743 ;;		 -> ?_printf(2), ?_sprintf(2), 
  2744 ;; Return value:  Size  Location     Type
  2745 ;;                  2   12[None  ] int 
  2746 ;; Registers used:
  2747 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2748 ;; Tracked objects:
  2749 ;;		On entry : 0/0
  2750 ;;		On exit  : 0/0
  2751 ;;		Unchanged: 0/0
  2752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2754 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2755 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2756 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2757 ;;Total ram usage:        3 bytes
  2758 ;; Hardware stack levels used: 1
  2759 ;; Hardware stack levels required when called: 8
  2760 ;; This function calls:
  2761 ;;		_vfprintf
  2762 ;; This function is called by:
  2763 ;;		_main
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766                           
  2767                           
  2768                           ;psect for function _printf
  2769  00FE                     _printf:
  2770                           
  2771                           ;incstack = 0
  2772                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2773                           ;printf@fmt stored from wreg
  2774  00FE  0020               	movlb	0	; select bank0
  2775  00FF  00E7               	movwf	printf@fmt
  2776  0100                     l1512:
  2777  0100  3070               	movlw	(low (?_printf| 0))& (0+255)
  2778  0101  00FD               	movwf	??_printf
  2779  0102  087D               	movf	??_printf,w
  2780  0103  00E8               	movwf	printf@ap
  2781  0104                     l1514:
  2782  0104  0867               	movf	printf@fmt,w
  2783  0105  00DF               	movwf	vfprintf@fmt
  2784  0106  3000               	movlw	0
  2785  0107  00E0               	movwf	vfprintf@fmt+1
  2786  0108  3068               	movlw	(low (printf@ap| 0))& (0+255)
  2787  0109  00FD               	movwf	??_printf
  2788  010A  087D               	movf	??_printf,w
  2789  010B  00E1               	movwf	vfprintf@ap
  2790  010C  3000               	movlw	0
  2791  010D  3181  21AE  3180   	fcall	_vfprintf
  2792  0110                     l810:
  2793  0110  0008               	return
  2794  0111                     __end_of_printf:
  2795                           
  2796                           	psect	text6
  2797  01AE                     __ptext6:	
  2798 ;; *************** function _vfprintf *****************
  2799 ;; Defined at:
  2800 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2801 ;; Parameters:    Size  Location     Type
  2802 ;;  fp              1    wreg     PTR struct _IO_FILE
  2803 ;;		 -> NULL(0), sprintf@f(5), 
  2804 ;;  fmt             2   63[BANK0 ] PTR const unsigned char 
  2805 ;;		 -> STR_1(15), main@buffer(32), 
  2806 ;;  ap              1   65[BANK0 ] PTR PTR void 
  2807 ;;		 -> printf@ap(1), sprintf@ap(1), 
  2808 ;; Auto vars:     Size  Location     Type
  2809 ;;  fp              1   68[BANK0 ] PTR struct _IO_FILE
  2810 ;;		 -> NULL(0), sprintf@f(5), 
  2811 ;;  cfmt            2   69[BANK0 ] PTR unsigned char 
  2812 ;;		 -> STR_1(15), main@buffer(32), 
  2813 ;; Return value:  Size  Location     Type
  2814 ;;                  2   63[BANK0 ] int 
  2815 ;; Registers used:
  2816 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2817 ;; Tracked objects:
  2818 ;;		On entry : 0/0
  2819 ;;		On exit  : 0/0
  2820 ;;		Unchanged: 0/0
  2821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2822 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2823 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2824 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2825 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2826 ;;Total ram usage:        8 bytes
  2827 ;; Hardware stack levels used: 1
  2828 ;; Hardware stack levels required when called: 7
  2829 ;; This function calls:
  2830 ;;		_vfpfcnvrt
  2831 ;; This function is called by:
  2832 ;;		_sprintf
  2833 ;;		_printf
  2834 ;; This function uses a non-reentrant model
  2835 ;;
  2836                           
  2837                           
  2838                           ;psect for function _vfprintf
  2839  01AE                     _vfprintf:
  2840                           
  2841                           ;incstack = 0
  2842                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2843                           ;vfprintf@fp stored from wreg
  2844  01AE  0020               	movlb	0	; select bank0
  2845  01AF  00E4               	movwf	vfprintf@fp
  2846  01B0                     l1468:
  2847                           
  2848                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2849  01B0  0860               	movf	vfprintf@fmt+1,w
  2850  01B1  00E6               	movwf	vfprintf@cfmt+1
  2851  01B2  085F               	movf	vfprintf@fmt,w
  2852  01B3  00E5               	movwf	vfprintf@cfmt
  2853  01B4                     l1470:
  2854                           
  2855                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2856  01B4  0021               	movlb	1	; select bank1
  2857  01B5  01C9               	clrf	_nout^(0+128)
  2858  01B6  01CA               	clrf	(_nout+1)^(0+128)
  2859                           
  2860                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2861  01B7  29CC               	goto	l1474
  2862  01B8                     l1472:
  2863                           
  2864                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2865  01B8  3065               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  2866  01B9  00E2               	movwf	??_vfprintf
  2867  01BA  0862               	movf	??_vfprintf,w
  2868  01BB  00CE               	movwf	vfpfcnvrt@fmt
  2869  01BC  0861               	movf	vfprintf@ap,w
  2870  01BD  00E3               	movwf	??_vfprintf+1
  2871  01BE  0863               	movf	??_vfprintf+1,w
  2872  01BF  00CF               	movwf	vfpfcnvrt@ap
  2873  01C0  0864               	movf	vfprintf@fp,w
  2874  01C1  3185  257D  3181   	fcall	_vfpfcnvrt
  2875  01C4  0020               	movlb	0	; select bank0
  2876  01C5  084E               	movf	?_vfpfcnvrt,w
  2877  01C6  0021               	movlb	1	; select bank1
  2878  01C7  07C9               	addwf	_nout^(0+128),f
  2879  01C8  0020               	movlb	0	; select bank0
  2880  01C9  084F               	movf	?_vfpfcnvrt+1,w
  2881  01CA  0021               	movlb	1	; select bank1
  2882  01CB  3DCA               	addwfc	(_nout+1)^(0+128),f
  2883  01CC                     l1474:
  2884                           
  2885                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2886  01CC  0020               	movlb	0	; select bank0
  2887  01CD  0865               	movf	vfprintf@cfmt,w
  2888  01CE  0084               	movwf	4
  2889  01CF  0866               	movf	vfprintf@cfmt+1,w
  2890  01D0  0085               	movwf	5
  2891  01D1  0012               	moviw fsr0++
  2892  01D2  1D03               	btfss	3,2
  2893  01D3  29D5               	goto	u1351
  2894  01D4  29D6               	goto	u1350
  2895  01D5                     u1351:
  2896  01D5  29B8               	goto	l1472
  2897  01D6                     u1350:
  2898  01D6                     l1476:
  2899                           
  2900                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2901  01D6  0021               	movlb	1	; select bank1
  2902  01D7  084A               	movf	(_nout+1)^(0+128),w
  2903  01D8  0020               	movlb	0	; select bank0
  2904  01D9  00E0               	movwf	?_vfprintf+1
  2905  01DA  0021               	movlb	1	; select bank1
  2906  01DB  0849               	movf	_nout^(0+128),w
  2907  01DC  0020               	movlb	0	; select bank0
  2908  01DD  00DF               	movwf	?_vfprintf
  2909  01DE                     l776:
  2910  01DE  0008               	return
  2911  01DF                     __end_of_vfprintf:
  2912                           
  2913                           	psect	text7
  2914  057D                     __ptext7:	
  2915 ;; *************** function _vfpfcnvrt *****************
  2916 ;; Defined at:
  2917 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2918 ;; Parameters:    Size  Location     Type
  2919 ;;  fp              1    wreg     PTR struct _IO_FILE
  2920 ;;		 -> NULL(0), sprintf@f(5), 
  2921 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  2922 ;;		 -> vfprintf@cfmt(2), 
  2923 ;;  ap              1   47[BANK0 ] PTR PTR void 
  2924 ;;		 -> printf@ap(1), sprintf@ap(1), 
  2925 ;; Auto vars:     Size  Location     Type
  2926 ;;  fp              1   62[BANK0 ] PTR struct _IO_FILE
  2927 ;;		 -> NULL(0), sprintf@f(5), 
  2928 ;;  ll              8   53[BANK0 ] long long 
  2929 ;;  llu             8    0        unsigned long long 
  2930 ;;  f               4    0        unsigned long long 
  2931 ;;  ct              3    0        unsigned char [3]
  2932 ;;  i               2    0        int 
  2933 ;;  done            2    0        int 
  2934 ;;  cp              2    0        PTR unsigned char 
  2935 ;;  vp              1   61[BANK0 ] PTR void 
  2936 ;;		 -> ?_printf(2), ?_sprintf(2), 
  2937 ;;  c               1    0        unsigned char 
  2938 ;; Return value:  Size  Location     Type
  2939 ;;                  2   46[BANK0 ] int 
  2940 ;; Registers used:
  2941 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2942 ;; Tracked objects:
  2943 ;;		On entry : 0/0
  2944 ;;		On exit  : 0/0
  2945 ;;		Unchanged: 0/0
  2946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2947 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2948 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2949 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2950 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2951 ;;Total ram usage:       17 bytes
  2952 ;; Hardware stack levels used: 1
  2953 ;; Hardware stack levels required when called: 6
  2954 ;; This function calls:
  2955 ;;		_dtoa
  2956 ;;		_fputc
  2957 ;; This function is called by:
  2958 ;;		_vfprintf
  2959 ;; This function uses a non-reentrant model
  2960 ;;
  2961                           
  2962                           
  2963                           ;psect for function _vfpfcnvrt
  2964  057D                     _vfpfcnvrt:
  2965                           
  2966                           ;incstack = 0
  2967                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2968                           ;vfpfcnvrt@fp stored from wreg
  2969  057D  0020               	movlb	0	; select bank0
  2970  057E  00DE               	movwf	vfpfcnvrt@fp
  2971  057F                     l1388:
  2972                           
  2973                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2974  057F  084E               	movf	vfpfcnvrt@fmt,w
  2975  0580  0086               	movwf	6
  2976  0581  0187               	clrf	7
  2977  0582  3F40               	moviw [0]fsr1
  2978  0583  00D0               	movwf	??_vfpfcnvrt
  2979  0584  3F41               	moviw [1]fsr1
  2980  0585  00D1               	movwf	??_vfpfcnvrt+1
  2981  0586  0850               	movf	??_vfpfcnvrt,w
  2982  0587  0084               	movwf	4
  2983  0588  0851               	movf	??_vfpfcnvrt+1,w
  2984  0589  0085               	movwf	5
  2985  058A  0012               	moviw fsr0++
  2986  058B  3A25               	xorlw	37
  2987  058C  1D03               	btfss	3,2
  2988  058D  2D8F               	goto	u1231
  2989  058E  2D90               	goto	u1230
  2990  058F                     u1231:
  2991  058F  2E64               	goto	l1436
  2992  0590                     u1230:
  2993  0590                     l1390:
  2994                           
  2995                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2996  0590  084E               	movf	vfpfcnvrt@fmt,w
  2997  0591  0086               	movwf	6
  2998  0592  0187               	clrf	7
  2999  0593  3001               	movlw	1
  3000  0594  0781               	addwf	1,f
  3001  0595  3141               	addfsr 1,1
  3002  0596  1803               	skipnc
  3003  0597  0A81               	incf	1,f
  3004  0598                     l1392:
  3005                           
  3006                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3007  0598  0021               	movlb	1	; select bank1
  3008  0599  01CB               	clrf	_width^(0+128)
  3009  059A  01CC               	clrf	(_width+1)^(0+128)
  3010  059B  0020               	movlb	0	; select bank0
  3011  059C  01ED               	clrf	_flags
  3012  059D  01EE               	clrf	_flags+1
  3013  059E                     l1394:
  3014                           
  3015                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3016  059E  30FF               	movlw	255
  3017  059F  0021               	movlb	1	; select bank1
  3018  05A0  00CD               	movwf	_prec^(0+128)
  3019  05A1  30FF               	movlw	255
  3020  05A2  00CE               	movwf	(_prec^(0+128)+1)
  3021  05A3                     l1396:
  3022                           
  3023                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3024  05A3  0020               	movlb	0	; select bank0
  3025  05A4  084E               	movf	vfpfcnvrt@fmt,w
  3026  05A5  0086               	movwf	6
  3027  05A6  0187               	clrf	7
  3028  05A7  3F40               	moviw [0]fsr1
  3029  05A8  00D0               	movwf	??_vfpfcnvrt
  3030  05A9  3F41               	moviw [1]fsr1
  3031  05AA  00D1               	movwf	??_vfpfcnvrt+1
  3032  05AB  0850               	movf	??_vfpfcnvrt,w
  3033  05AC  0084               	movwf	4
  3034  05AD  0851               	movf	??_vfpfcnvrt+1,w
  3035  05AE  0085               	movwf	5
  3036  05AF  0012               	moviw fsr0++
  3037  05B0  3A64               	xorlw	100
  3038  05B1  1903               	btfsc	3,2
  3039  05B2  2DB4               	goto	u1241
  3040  05B3  2DB5               	goto	u1240
  3041  05B4                     u1241:
  3042  05B4  2DC6               	goto	l1400
  3043  05B5                     u1240:
  3044  05B5                     l1398:
  3045  05B5  084E               	movf	vfpfcnvrt@fmt,w
  3046  05B6  0086               	movwf	6
  3047  05B7  0187               	clrf	7
  3048  05B8  3F40               	moviw [0]fsr1
  3049  05B9  00D0               	movwf	??_vfpfcnvrt
  3050  05BA  3F41               	moviw [1]fsr1
  3051  05BB  00D1               	movwf	??_vfpfcnvrt+1
  3052  05BC  0850               	movf	??_vfpfcnvrt,w
  3053  05BD  0084               	movwf	4
  3054  05BE  0851               	movf	??_vfpfcnvrt+1,w
  3055  05BF  0085               	movwf	5
  3056  05C0  0012               	moviw fsr0++
  3057  05C1  3A69               	xorlw	105
  3058  05C2  1D03               	btfss	3,2
  3059  05C3  2DC5               	goto	u1251
  3060  05C4  2DC6               	goto	u1250
  3061  05C5                     u1251:
  3062  05C5  2E01               	goto	l1408
  3063  05C6                     u1250:
  3064  05C6                     l1400:
  3065                           
  3066                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3067  05C6  084E               	movf	vfpfcnvrt@fmt,w
  3068  05C7  0086               	movwf	6
  3069  05C8  0187               	clrf	7
  3070  05C9  3001               	movlw	1
  3071  05CA  0781               	addwf	1,f
  3072  05CB  3141               	addfsr 1,1
  3073  05CC  1803               	skipnc
  3074  05CD  0A81               	incf	1,f
  3075  05CE                     l1402:
  3076                           
  3077                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3078  05CE  084F               	movf	vfpfcnvrt@ap,w
  3079  05CF  0086               	movwf	6
  3080  05D0  0187               	clrf	7
  3081  05D1  0801               	movf	1,w
  3082  05D2  0084               	movwf	4
  3083  05D3  0185               	clrf	5
  3084  05D4  3002               	movlw	2
  3085  05D5  0781               	addwf	1,f
  3086  05D6  3F00               	moviw [0]fsr0
  3087  05D7  00D0               	movwf	??_vfpfcnvrt
  3088  05D8  3F01               	moviw [1]fsr0
  3089  05D9  00D1               	movwf	??_vfpfcnvrt+1
  3090  05DA  0850               	movf	??_vfpfcnvrt,w
  3091  05DB  00D5               	movwf	vfpfcnvrt@ll
  3092  05DC  0851               	movf	??_vfpfcnvrt+1,w
  3093  05DD  00D6               	movwf	vfpfcnvrt@ll+1
  3094  05DE  0D89               	rlf	9,f
  3095  05DF  3B89               	subwfb	9,f
  3096  05E0  0989               	comf	9,f
  3097  05E1  00D7               	movwf	vfpfcnvrt@ll+2
  3098  05E2  00D8               	movwf	vfpfcnvrt@ll+3
  3099  05E3  00D9               	movwf	vfpfcnvrt@ll+4
  3100  05E4  00DA               	movwf	vfpfcnvrt@ll+5
  3101  05E5  00DB               	movwf	vfpfcnvrt@ll+6
  3102  05E6  00DC               	movwf	vfpfcnvrt@ll+7
  3103  05E7                     l1404:
  3104                           
  3105                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3106  05E7  0855               	movf	vfpfcnvrt@ll,w
  3107  05E8  00B0               	movwf	dtoa@d
  3108  05E9  0856               	movf	vfpfcnvrt@ll+1,w
  3109  05EA  00B1               	movwf	dtoa@d+1
  3110  05EB  0857               	movf	vfpfcnvrt@ll+2,w
  3111  05EC  00B2               	movwf	dtoa@d+2
  3112  05ED  0858               	movf	vfpfcnvrt@ll+3,w
  3113  05EE  00B3               	movwf	dtoa@d+3
  3114  05EF  0859               	movf	vfpfcnvrt@ll+4,w
  3115  05F0  00B4               	movwf	dtoa@d+4
  3116  05F1  085A               	movf	vfpfcnvrt@ll+5,w
  3117  05F2  00B5               	movwf	dtoa@d+5
  3118  05F3  085B               	movf	vfpfcnvrt@ll+6,w
  3119  05F4  00B6               	movwf	dtoa@d+6
  3120  05F5  085C               	movf	vfpfcnvrt@ll+7,w
  3121  05F6  00B7               	movwf	dtoa@d+7
  3122  05F7  085E               	movf	vfpfcnvrt@fp,w
  3123  05F8  3186  2688  3185   	fcall	_dtoa
  3124  05FB  0020               	movlb	0	; select bank0
  3125  05FC  0831               	movf	?_dtoa+1,w
  3126  05FD  00CF               	movwf	?_vfpfcnvrt+1
  3127  05FE  0830               	movf	?_dtoa,w
  3128  05FF  00CE               	movwf	?_vfpfcnvrt
  3129  0600  2E87               	goto	l768
  3130  0601                     l1408:
  3131                           
  3132                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1099:         if 
      +                          (*fmt[0] == 'n') {
  3133  0601  084E               	movf	vfpfcnvrt@fmt,w
  3134  0602  0086               	movwf	6
  3135  0603  0187               	clrf	7
  3136  0604  3F40               	moviw [0]fsr1
  3137  0605  00D0               	movwf	??_vfpfcnvrt
  3138  0606  3F41               	moviw [1]fsr1
  3139  0607  00D1               	movwf	??_vfpfcnvrt+1
  3140  0608  0850               	movf	??_vfpfcnvrt,w
  3141  0609  0084               	movwf	4
  3142  060A  0851               	movf	??_vfpfcnvrt+1,w
  3143  060B  0085               	movwf	5
  3144  060C  0012               	moviw fsr0++
  3145  060D  3A6E               	xorlw	110
  3146  060E  1D03               	btfss	3,2
  3147  060F  2E11               	goto	u1261
  3148  0610  2E12               	goto	u1260
  3149  0611                     u1261:
  3150  0611  2E31               	goto	l1420
  3151  0612                     u1260:
  3152  0612                     l1410:
  3153                           
  3154                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1100:            
      +                           ++*fmt;
  3155  0612  084E               	movf	vfpfcnvrt@fmt,w
  3156  0613  0086               	movwf	6
  3157  0614  0187               	clrf	7
  3158  0615  3001               	movlw	1
  3159  0616  0781               	addwf	1,f
  3160  0617  3141               	addfsr 1,1
  3161  0618  1803               	skipnc
  3162  0619  0A81               	incf	1,f
  3163  061A                     l1412:
  3164                           
  3165                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1101:            
      +                           vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  3166  061A  084F               	movf	vfpfcnvrt@ap,w
  3167  061B  0086               	movwf	6
  3168  061C  0187               	clrf	7
  3169  061D  3F40               	moviw [0]fsr1
  3170  061E  0084               	movwf	4
  3171  061F  0185               	clrf	5
  3172  0620  0A81               	incf	1,f
  3173  0621  0800               	movf	0,w
  3174  0622  00D0               	movwf	??_vfpfcnvrt
  3175  0623  0850               	movf	??_vfpfcnvrt,w
  3176  0624  00DD               	movwf	vfpfcnvrt@vp
  3177  0625                     l1414:
  3178                           
  3179                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1102:            
      +                           *(int *)vp = nout;
  3180  0625  085D               	movf	vfpfcnvrt@vp,w
  3181  0626  0086               	movwf	6
  3182  0627  0187               	clrf	7
  3183  0628  0021               	movlb	1	; select bank1
  3184  0629  0849               	movf	_nout^(0+128),w
  3185  062A  3FC0               	movwi [0]fsr1
  3186  062B  084A               	movf	(_nout+1)^(0+128),w
  3187  062C  3FC1               	movwi [1]fsr1
  3188  062D                     l1416:
  3189                           
  3190                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1103:            
      +                           return 0;
  3191  062D  0020               	movlb	0	; select bank0
  3192  062E  01CE               	clrf	?_vfpfcnvrt
  3193  062F  01CF               	clrf	?_vfpfcnvrt+1
  3194  0630  2E87               	goto	l768
  3195  0631                     l1420:
  3196                           
  3197                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3198  0631  084E               	movf	vfpfcnvrt@fmt,w
  3199  0632  0086               	movwf	6
  3200  0633  0187               	clrf	7
  3201  0634  3F40               	moviw [0]fsr1
  3202  0635  00D0               	movwf	??_vfpfcnvrt
  3203  0636  3F41               	moviw [1]fsr1
  3204  0637  00D1               	movwf	??_vfpfcnvrt+1
  3205  0638  0850               	movf	??_vfpfcnvrt,w
  3206  0639  0084               	movwf	4
  3207  063A  0851               	movf	??_vfpfcnvrt+1,w
  3208  063B  0085               	movwf	5
  3209  063C  0012               	moviw fsr0++
  3210  063D  3A25               	xorlw	37
  3211  063E  1D03               	btfss	3,2
  3212  063F  2E41               	goto	u1271
  3213  0640  2E42               	goto	u1270
  3214  0641                     u1271:
  3215  0641  2E5B               	goto	l1430
  3216  0642                     u1270:
  3217  0642                     l1422:
  3218                           
  3219                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3220  0642  084E               	movf	vfpfcnvrt@fmt,w
  3221  0643  0086               	movwf	6
  3222  0644  0187               	clrf	7
  3223  0645  3001               	movlw	1
  3224  0646  0781               	addwf	1,f
  3225  0647  3141               	addfsr 1,1
  3226  0648  1803               	skipnc
  3227  0649  0A81               	incf	1,f
  3228  064A                     l1424:
  3229                           
  3230                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3231  064A  3025               	movlw	37
  3232  064B  00F3               	movwf	fputc@c
  3233  064C  3000               	movlw	0
  3234  064D  00F4               	movwf	fputc@c+1
  3235  064E  085E               	movf	vfpfcnvrt@fp,w
  3236  064F  00D0               	movwf	??_vfpfcnvrt
  3237  0650  0850               	movf	??_vfpfcnvrt,w
  3238  0651  00F5               	movwf	fputc@fp
  3239  0652  3182  221D  3185   	fcall	_fputc
  3240  0655                     l1426:
  3241                           
  3242                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3243  0655  3001               	movlw	1
  3244  0656  0020               	movlb	0	; select bank0
  3245  0657  00CE               	movwf	?_vfpfcnvrt
  3246  0658  3000               	movlw	0
  3247  0659  00CF               	movwf	?_vfpfcnvrt+1
  3248  065A  2E87               	goto	l768
  3249  065B                     l1430:
  3250                           
  3251                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3252  065B  084E               	movf	vfpfcnvrt@fmt,w
  3253  065C  0086               	movwf	6
  3254  065D  0187               	clrf	7
  3255  065E  3001               	movlw	1
  3256  065F  0781               	addwf	1,f
  3257  0660  3141               	addfsr 1,1
  3258  0661  1803               	skipnc
  3259  0662  0A81               	incf	1,f
  3260  0663  2E2D               	goto	l1416
  3261  0664                     l1436:
  3262                           
  3263                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3264  0664  084E               	movf	vfpfcnvrt@fmt,w
  3265  0665  0086               	movwf	6
  3266  0666  0187               	clrf	7
  3267  0667  3F40               	moviw [0]fsr1
  3268  0668  00D0               	movwf	??_vfpfcnvrt
  3269  0669  3F41               	moviw [1]fsr1
  3270  066A  00D1               	movwf	??_vfpfcnvrt+1
  3271  066B  0850               	movf	??_vfpfcnvrt,w
  3272  066C  0084               	movwf	4
  3273  066D  0851               	movf	??_vfpfcnvrt+1,w
  3274  066E  0085               	movwf	5
  3275  066F  0800               	movf	0,w	;code access
  3276  0670  00D2               	movwf	??_vfpfcnvrt+2
  3277  0671  01D3               	clrf	??_vfpfcnvrt+3
  3278  0672  0852               	movf	??_vfpfcnvrt+2,w
  3279  0673  00F3               	movwf	fputc@c
  3280  0674  0853               	movf	??_vfpfcnvrt+3,w
  3281  0675  00F4               	movwf	fputc@c+1
  3282  0676  085E               	movf	vfpfcnvrt@fp,w
  3283  0677  00D4               	movwf	??_vfpfcnvrt+4
  3284  0678  0854               	movf	??_vfpfcnvrt+4,w
  3285  0679  00F5               	movwf	fputc@fp
  3286  067A  3182  221D  3185   	fcall	_fputc
  3287  067D                     l1438:
  3288                           
  3289                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3290  067D  0020               	movlb	0	; select bank0
  3291  067E  084E               	movf	vfpfcnvrt@fmt,w
  3292  067F  0086               	movwf	6
  3293  0680  0187               	clrf	7
  3294  0681  3001               	movlw	1
  3295  0682  0781               	addwf	1,f
  3296  0683  3141               	addfsr 1,1
  3297  0684  1803               	skipnc
  3298  0685  0A81               	incf	1,f
  3299  0686  2E55               	goto	l1426
  3300  0687                     l768:
  3301  0687  0008               	return
  3302  0688                     __end_of_vfpfcnvrt:
  3303                           
  3304                           	psect	text8
  3305  0688                     __ptext8:	
  3306 ;; *************** function _dtoa *****************
  3307 ;; Defined at:
  3308 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;  fp              1    wreg     PTR struct _IO_FILE
  3311 ;;		 -> NULL(0), sprintf@f(5), 
  3312 ;;  d               8   16[BANK0 ] long long 
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  3315 ;;		 -> NULL(0), sprintf@f(5), 
  3316 ;;  n               8   36[BANK0 ] long long 
  3317 ;;  i               2   44[BANK0 ] int 
  3318 ;;  s               2   34[BANK0 ] int 
  3319 ;;  w               2   32[BANK0 ] int 
  3320 ;;  p               2   30[BANK0 ] int 
  3321 ;; Return value:  Size  Location     Type
  3322 ;;                  2   16[BANK0 ] int 
  3323 ;; Registers used:
  3324 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3325 ;; Tracked objects:
  3326 ;;		On entry : 0/0
  3327 ;;		On exit  : 0/0
  3328 ;;		Unchanged: 0/0
  3329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3330 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3331 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3332 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3333 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3334 ;;Total ram usage:       30 bytes
  3335 ;; Hardware stack levels used: 1
  3336 ;; Hardware stack levels required when called: 5
  3337 ;; This function calls:
  3338 ;;		___aodiv
  3339 ;;		___aomod
  3340 ;;		_abs
  3341 ;;		_pad
  3342 ;; This function is called by:
  3343 ;;		_vfpfcnvrt
  3344 ;; This function uses a non-reentrant model
  3345 ;;
  3346                           
  3347                           
  3348                           ;psect for function _dtoa
  3349  0688                     _dtoa:
  3350                           
  3351                           ;incstack = 0
  3352                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3353                           ;dtoa@fp stored from wreg
  3354  0688  0020               	movlb	0	; select bank0
  3355  0689  00BD               	movwf	dtoa@fp
  3356  068A                     l1330:
  3357                           
  3358                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  3359  068A  0830               	movf	dtoa@d,w
  3360  068B  00C4               	movwf	dtoa@n
  3361  068C  0831               	movf	dtoa@d+1,w
  3362  068D  00C5               	movwf	dtoa@n+1
  3363  068E  0832               	movf	dtoa@d+2,w
  3364  068F  00C6               	movwf	dtoa@n+2
  3365  0690  0833               	movf	dtoa@d+3,w
  3366  0691  00C7               	movwf	dtoa@n+3
  3367  0692  0834               	movf	dtoa@d+4,w
  3368  0693  00C8               	movwf	dtoa@n+4
  3369  0694  0835               	movf	dtoa@d+5,w
  3370  0695  00C9               	movwf	dtoa@n+5
  3371  0696  0836               	movf	dtoa@d+6,w
  3372  0697  00CA               	movwf	dtoa@n+6
  3373  0698  0837               	movf	dtoa@d+7,w
  3374  0699  00CB               	movwf	dtoa@n+7
  3375  069A                     l1332:
  3376                           
  3377                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  3378  069A  3044               	movlw	low dtoa@n
  3379  069B  0086               	movwf	6
  3380  069C  3000               	movlw	high dtoa@n
  3381  069D  0087               	movwf	7
  3382  069E  3F47               	moviw [7]fsr1
  3383  069F  00B8               	movwf	??_dtoa
  3384  06A0  1BB8               	btfsc	??_dtoa,7
  3385  06A1  2EA3               	goto	u1071
  3386  06A2  2EA5               	goto	u1070
  3387  06A3                     u1071:
  3388  06A3  3001               	movlw	1
  3389  06A4  2EA6               	goto	u1080
  3390  06A5                     u1070:
  3391  06A5  3000               	movlw	0
  3392  06A6                     u1080:
  3393  06A6  0020               	movlb	0	; select bank0
  3394  06A7  00B9               	movwf	??_dtoa+1
  3395  06A8  01BA               	clrf	??_dtoa+2
  3396  06A9  0839               	movf	??_dtoa+1,w
  3397  06AA  00C2               	movwf	dtoa@s
  3398  06AB  083A               	movf	??_dtoa+2,w
  3399  06AC  00C3               	movwf	dtoa@s+1
  3400  06AD                     l1334:
  3401                           
  3402                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  3403  06AD  0842               	movf	dtoa@s,w
  3404  06AE  0443               	iorwf	dtoa@s+1,w
  3405  06AF  1903               	btfsc	3,2
  3406  06B0  2EB2               	goto	u1091
  3407  06B1  2EB3               	goto	u1090
  3408  06B2                     u1091:
  3409  06B2  2ED1               	goto	l738
  3410  06B3                     u1090:
  3411  06B3                     l1336:
  3412                           
  3413                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  3414  06B3  09C4               	comf	dtoa@n,f
  3415  06B4  09C5               	comf	dtoa@n+1,f
  3416  06B5  09C6               	comf	dtoa@n+2,f
  3417  06B6  09C7               	comf	dtoa@n+3,f
  3418  06B7  09C8               	comf	dtoa@n+4,f
  3419  06B8  09C9               	comf	dtoa@n+5,f
  3420  06B9  09CA               	comf	dtoa@n+6,f
  3421  06BA  09CB               	comf	dtoa@n+7,f
  3422  06BB  0AC4               	incf	dtoa@n,f
  3423  06BC  1D03               	skipz
  3424  06BD  2ED1               	goto	u110lld
  3425  06BE  0AC5               	incf	dtoa@n+1,f
  3426  06BF  1D03               	skipz
  3427  06C0  2ED1               	goto	u110lld
  3428  06C1  0AC6               	incf	dtoa@n+2,f
  3429  06C2  1D03               	skipz
  3430  06C3  2ED1               	goto	u110lld
  3431  06C4  0AC7               	incf	dtoa@n+3,f
  3432  06C5  1D03               	skipz
  3433  06C6  2ED1               	goto	u110lld
  3434  06C7  0AC8               	incf	dtoa@n+4,f
  3435  06C8  1D03               	skipz
  3436  06C9  2ED1               	goto	u110lld
  3437  06CA  0AC9               	incf	dtoa@n+5,f
  3438  06CB  1D03               	skipz
  3439  06CC  2ED1               	goto	u110lld
  3440  06CD  0ACA               	incf	dtoa@n+6,f
  3441  06CE  1D03               	skipz
  3442  06CF  2ED1               	goto	u110lld
  3443  06D0  0ACB               	incf	dtoa@n+7,f
  3444  06D1                     u110lld:
  3445  06D1                     l738:	
  3446                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 297:     }
  3447                           
  3448                           
  3449                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  3450  06D1  0021               	movlb	1	; select bank1
  3451  06D2  1BCE               	btfsc	(_prec+1)^(0+128),7
  3452  06D3  2ED5               	goto	u1111
  3453  06D4  2ED6               	goto	u1110
  3454  06D5                     u1111:
  3455  06D5  2EDB               	goto	l739
  3456  06D6                     u1110:
  3457  06D6                     l1338:
  3458                           
  3459                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  3460  06D6  30FD               	movlw	253
  3461  06D7  0020               	movlb	0	; select bank0
  3462  06D8  05ED               	andwf	_flags,f
  3463  06D9  30FF               	movlw	255
  3464  06DA  05EE               	andwf	_flags+1,f
  3465  06DB                     l739:	
  3466                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 302:     }
  3467                           
  3468                           
  3469                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  3470  06DB  0021               	movlb	1	; select bank1
  3471  06DC  084E               	movf	(_prec+1)^(0+128),w
  3472  06DD  3A80               	xorlw	128
  3473  06DE  0020               	movlb	0	; select bank0
  3474  06DF  00B8               	movwf	??_dtoa
  3475  06E0  3080               	movlw	128
  3476  06E1  0238               	subwf	??_dtoa,w
  3477  06E2  1D03               	skipz
  3478  06E3  2EE7               	goto	u1125
  3479  06E4  3001               	movlw	1
  3480  06E5  0021               	movlb	1	; select bank1
  3481  06E6  024D               	subwf	_prec^(0+128),w
  3482  06E7                     u1125:
  3483  06E7  1803               	skipnc
  3484  06E8  2EEA               	goto	u1121
  3485  06E9  2EEB               	goto	u1120
  3486  06EA                     u1121:
  3487  06EA  2EF1               	goto	l1342
  3488  06EB                     u1120:
  3489  06EB                     l1340:
  3490  06EB  3001               	movlw	1
  3491  06EC  0020               	movlb	0	; select bank0
  3492  06ED  00BE               	movwf	dtoa@p
  3493  06EE  3000               	movlw	0
  3494  06EF  00BF               	movwf	dtoa@p+1
  3495  06F0  2EF9               	goto	l743
  3496  06F1                     l1342:
  3497  06F1  0021               	movlb	1	; select bank1
  3498  06F2  084E               	movf	(_prec+1)^(0+128),w
  3499  06F3  0020               	movlb	0	; select bank0
  3500  06F4  00BF               	movwf	dtoa@p+1
  3501  06F5  0021               	movlb	1	; select bank1
  3502  06F6  084D               	movf	_prec^(0+128),w
  3503  06F7  0020               	movlb	0	; select bank0
  3504  06F8  00BE               	movwf	dtoa@p
  3505  06F9                     l743:
  3506                           
  3507                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  3508  06F9  0021               	movlb	1	; select bank1
  3509  06FA  084C               	movf	(_width+1)^(0+128),w
  3510  06FB  0020               	movlb	0	; select bank0
  3511  06FC  00C1               	movwf	dtoa@w+1
  3512  06FD  0021               	movlb	1	; select bank1
  3513  06FE  084B               	movf	_width^(0+128),w
  3514  06FF  0020               	movlb	0	; select bank0
  3515  0700  00C0               	movwf	dtoa@w
  3516  0701                     l1344:
  3517                           
  3518                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  3519  0701  0842               	movf	dtoa@s,w
  3520  0702  0443               	iorwf	dtoa@s+1,w
  3521  0703  1D03               	btfss	3,2
  3522  0704  2F06               	goto	u1131
  3523  0705  2F07               	goto	u1130
  3524  0706                     u1131:
  3525  0706  2F0B               	goto	l1348
  3526  0707                     u1130:
  3527  0707                     l1346:
  3528  0707  1D6D               	btfss	_flags,2
  3529  0708  2F0A               	goto	u1141
  3530  0709  2F0B               	goto	u1140
  3531  070A                     u1141:
  3532  070A  2F0F               	goto	l744
  3533  070B                     u1140:
  3534  070B                     l1348:
  3535                           
  3536                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  3537  070B  30FF               	movlw	255
  3538  070C  07C0               	addwf	dtoa@w,f
  3539  070D  30FF               	movlw	255
  3540  070E  3DC1               	addwfc	dtoa@w+1,f
  3541  070F                     l744:	
  3542                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 307:     }
  3543                           
  3544                           
  3545                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  3546  070F  301F               	movlw	31
  3547  0710  00CC               	movwf	dtoa@i
  3548  0711  3000               	movlw	0
  3549  0712  00CD               	movwf	dtoa@i+1
  3550  0713                     l1350:
  3551                           
  3552                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  3553  0713  0021               	movlb	1	; select bank1
  3554  0714  01EE               	clrf	(_dbuf^(0+128)+31)
  3555                           
  3556                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3557  0715  2F7E               	goto	l747
  3558  0716                     l1352:
  3559                           
  3560                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  3561  0716  30FF               	movlw	255
  3562  0717  0020               	movlb	0	; select bank0
  3563  0718  07CC               	addwf	dtoa@i,f
  3564  0719  30FF               	movlw	255
  3565  071A  3DCD               	addwfc	dtoa@i+1,f
  3566  071B                     l1354:
  3567                           
  3568                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3569  071B  300A               	movlw	10
  3570  071C  00A0               	movwf	___aomod@divisor
  3571  071D  01A1               	clrf	___aomod@divisor+1
  3572  071E  01A2               	clrf	___aomod@divisor+2
  3573  071F  01A3               	clrf	___aomod@divisor+3
  3574  0720  01A4               	clrf	___aomod@divisor+4
  3575  0721  01A5               	clrf	___aomod@divisor+5
  3576  0722  01A6               	clrf	___aomod@divisor+6
  3577  0723  01A7               	clrf	___aomod@divisor+7
  3578  0724  0844               	movf	dtoa@n,w
  3579  0725  00A8               	movwf	___aomod@dividend
  3580  0726  0845               	movf	dtoa@n+1,w
  3581  0727  00A9               	movwf	___aomod@dividend+1
  3582  0728  0846               	movf	dtoa@n+2,w
  3583  0729  00AA               	movwf	___aomod@dividend+2
  3584  072A  0847               	movf	dtoa@n+3,w
  3585  072B  00AB               	movwf	___aomod@dividend+3
  3586  072C  0848               	movf	dtoa@n+4,w
  3587  072D  00AC               	movwf	___aomod@dividend+4
  3588  072E  0849               	movf	dtoa@n+5,w
  3589  072F  00AD               	movwf	___aomod@dividend+5
  3590  0730  084A               	movf	dtoa@n+6,w
  3591  0731  00AE               	movwf	___aomod@dividend+6
  3592  0732  084B               	movf	dtoa@n+7,w
  3593  0733  00AF               	movwf	___aomod@dividend+7
  3594  0734  3183  2392  3186   	fcall	___aomod
  3595  0737  0020               	movlb	0	; select bank0
  3596  0738  0821               	movf	?___aomod+1,w
  3597  0739  00F4               	movwf	abs@a+1
  3598  073A  0820               	movf	?___aomod,w
  3599  073B  00F3               	movwf	abs@a
  3600  073C  3181  212A  3186   	fcall	_abs
  3601  073F  0873               	movf	?_abs,w
  3602  0740  3E30               	addlw	48
  3603  0741  0020               	movlb	0	; select bank0
  3604  0742  00B8               	movwf	??_dtoa
  3605  0743  084C               	movf	dtoa@i,w
  3606  0744  3ECF               	addlw	(low (_dbuf| 0))& (0+255)
  3607  0745  0086               	movwf	6
  3608  0746  0187               	clrf	7
  3609  0747  0838               	movf	??_dtoa,w
  3610  0748  0081               	movwf	1
  3611  0749                     l1356:
  3612                           
  3613                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  3614  0749  30FF               	movlw	255
  3615  074A  07BE               	addwf	dtoa@p,f
  3616  074B  30FF               	movlw	255
  3617  074C  3DBF               	addwfc	dtoa@p+1,f
  3618  074D                     l1358:
  3619                           
  3620                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  3621  074D  30FF               	movlw	255
  3622  074E  07C0               	addwf	dtoa@w,f
  3623  074F  30FF               	movlw	255
  3624  0750  3DC1               	addwfc	dtoa@w+1,f
  3625  0751                     l1360:
  3626                           
  3627                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  3628  0751  300A               	movlw	10
  3629  0752  00A0               	movwf	___aodiv@divisor
  3630  0753  01A1               	clrf	___aodiv@divisor+1
  3631  0754  01A2               	clrf	___aodiv@divisor+2
  3632  0755  01A3               	clrf	___aodiv@divisor+3
  3633  0756  01A4               	clrf	___aodiv@divisor+4
  3634  0757  01A5               	clrf	___aodiv@divisor+5
  3635  0758  01A6               	clrf	___aodiv@divisor+6
  3636  0759  01A7               	clrf	___aodiv@divisor+7
  3637  075A  0844               	movf	dtoa@n,w
  3638  075B  00A8               	movwf	___aodiv@dividend
  3639  075C  0845               	movf	dtoa@n+1,w
  3640  075D  00A9               	movwf	___aodiv@dividend+1
  3641  075E  0846               	movf	dtoa@n+2,w
  3642  075F  00AA               	movwf	___aodiv@dividend+2
  3643  0760  0847               	movf	dtoa@n+3,w
  3644  0761  00AB               	movwf	___aodiv@dividend+3
  3645  0762  0848               	movf	dtoa@n+4,w
  3646  0763  00AC               	movwf	___aodiv@dividend+4
  3647  0764  0849               	movf	dtoa@n+5,w
  3648  0765  00AD               	movwf	___aodiv@dividend+5
  3649  0766  084A               	movf	dtoa@n+6,w
  3650  0767  00AE               	movwf	___aodiv@dividend+6
  3651  0768  084B               	movf	dtoa@n+7,w
  3652  0769  00AF               	movwf	___aodiv@dividend+7
  3653  076A  3184  247C  3186   	fcall	___aodiv
  3654  076D  0020               	movlb	0	; select bank0
  3655  076E  0820               	movf	?___aodiv,w
  3656  076F  00C4               	movwf	dtoa@n
  3657  0770  0821               	movf	?___aodiv+1,w
  3658  0771  00C5               	movwf	dtoa@n+1
  3659  0772  0822               	movf	?___aodiv+2,w
  3660  0773  00C6               	movwf	dtoa@n+2
  3661  0774  0823               	movf	?___aodiv+3,w
  3662  0775  00C7               	movwf	dtoa@n+3
  3663  0776  0824               	movf	?___aodiv+4,w
  3664  0777  00C8               	movwf	dtoa@n+4
  3665  0778  0825               	movf	?___aodiv+5,w
  3666  0779  00C9               	movwf	dtoa@n+5
  3667  077A  0826               	movf	?___aodiv+6,w
  3668  077B  00CA               	movwf	dtoa@n+6
  3669  077C  0827               	movf	?___aodiv+7,w
  3670  077D  00CB               	movwf	dtoa@n+7
  3671  077E                     l747:	
  3672                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 318:     }
  3673                           
  3674                           
  3675                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3676  077E  0020               	movlb	0	; select bank0
  3677  077F  084D               	movf	dtoa@i+1,w
  3678  0780  3A80               	xorlw	128
  3679  0781  00B8               	movwf	??_dtoa
  3680  0782  3080               	movlw	128
  3681  0783  0238               	subwf	??_dtoa,w
  3682  0784  1D03               	skipz
  3683  0785  2F88               	goto	u1155
  3684  0786  3001               	movlw	1
  3685  0787  024C               	subwf	dtoa@i,w
  3686  0788                     u1155:
  3687  0788  1C03               	skipc
  3688  0789  2F8B               	goto	u1151
  3689  078A  2F8C               	goto	u1150
  3690  078B                     u1151:
  3691  078B  2FB9               	goto	l1370
  3692  078C                     u1150:
  3693  078C                     l1362:
  3694  078C  0020               	movlb	0	; select bank0
  3695  078D  0844               	movf	dtoa@n,w
  3696  078E  0445               	iorwf	dtoa@n+1,w
  3697  078F  0446               	iorwf	dtoa@n+2,w
  3698  0790  0447               	iorwf	dtoa@n+3,w
  3699  0791  0448               	iorwf	dtoa@n+4,w
  3700  0792  0449               	iorwf	dtoa@n+5,w
  3701  0793  044A               	iorwf	dtoa@n+6,w
  3702  0794  044B               	iorwf	dtoa@n+7,w
  3703  0795  1D03               	skipz
  3704  0796  2F98               	goto	u1161
  3705  0797  2F99               	goto	u1160
  3706  0798                     u1161:
  3707  0798  2F16               	goto	l1352
  3708  0799                     u1160:
  3709  0799                     l1364:
  3710  0799  083F               	movf	dtoa@p+1,w
  3711  079A  3A80               	xorlw	128
  3712  079B  00B8               	movwf	??_dtoa
  3713  079C  3080               	movlw	128
  3714  079D  0238               	subwf	??_dtoa,w
  3715  079E  1D03               	skipz
  3716  079F  2FA2               	goto	u1175
  3717  07A0  3001               	movlw	1
  3718  07A1  023E               	subwf	dtoa@p,w
  3719  07A2                     u1175:
  3720  07A2  1803               	skipnc
  3721  07A3  2FA5               	goto	u1171
  3722  07A4  2FA6               	goto	u1170
  3723  07A5                     u1171:
  3724  07A5  2F16               	goto	l1352
  3725  07A6                     u1170:
  3726  07A6                     l1366:
  3727  07A6  0020               	movlb	0	; select bank0
  3728  07A7  0841               	movf	dtoa@w+1,w
  3729  07A8  3A80               	xorlw	128
  3730  07A9  00B8               	movwf	??_dtoa
  3731  07AA  3080               	movlw	128
  3732  07AB  0238               	subwf	??_dtoa,w
  3733  07AC  1D03               	skipz
  3734  07AD  2FB0               	goto	u1185
  3735  07AE  3001               	movlw	1
  3736  07AF  0240               	subwf	dtoa@w,w
  3737  07B0                     u1185:
  3738  07B0  1C03               	skipc
  3739  07B1  2FB3               	goto	u1181
  3740  07B2  2FB4               	goto	u1180
  3741  07B3                     u1181:
  3742  07B3  2FB9               	goto	l1370
  3743  07B4                     u1180:
  3744  07B4                     l1368:
  3745  07B4  0020               	movlb	0	; select bank0
  3746  07B5  18ED               	btfsc	_flags,1
  3747  07B6  2FB8               	goto	u1191
  3748  07B7  2FB9               	goto	u1190
  3749  07B8                     u1191:
  3750  07B8  2F16               	goto	l1352
  3751  07B9                     u1190:
  3752  07B9                     l1370:
  3753                           
  3754                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  3755  07B9  0020               	movlb	0	; select bank0
  3756  07BA  0842               	movf	dtoa@s,w
  3757  07BB  0443               	iorwf	dtoa@s+1,w
  3758  07BC  1D03               	btfss	3,2
  3759  07BD  2FBF               	goto	u1201
  3760  07BE  2FC0               	goto	u1200
  3761  07BF                     u1201:
  3762  07BF  2FC4               	goto	l1374
  3763  07C0                     u1200:
  3764  07C0                     l1372:
  3765  07C0  1D6D               	btfss	_flags,2
  3766  07C1  2FC3               	goto	u1211
  3767  07C2  2FC4               	goto	u1210
  3768  07C3                     u1211:
  3769  07C3  2FDF               	goto	l1384
  3770  07C4                     u1210:
  3771  07C4                     l1374:
  3772                           
  3773                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  3774  07C4  30FF               	movlw	255
  3775  07C5  07CC               	addwf	dtoa@i,f
  3776  07C6  30FF               	movlw	255
  3777  07C7  3DCD               	addwfc	dtoa@i+1,f
  3778  07C8                     l1376:
  3779                           
  3780                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  3781  07C8  0842               	movf	dtoa@s,w
  3782  07C9  0443               	iorwf	dtoa@s+1,w
  3783  07CA  1D03               	btfss	3,2
  3784  07CB  2FCD               	goto	u1221
  3785  07CC  2FCE               	goto	u1220
  3786  07CD                     u1221:
  3787  07CD  2FD3               	goto	l1380
  3788  07CE                     u1220:
  3789  07CE                     l1378:
  3790  07CE  302B               	movlw	43
  3791  07CF  00BB               	movwf	_dtoa$633
  3792  07D0  3000               	movlw	0
  3793  07D1  00BC               	movwf	_dtoa$633+1
  3794  07D2  2FD7               	goto	l1382
  3795  07D3                     l1380:
  3796  07D3  302D               	movlw	45
  3797  07D4  00BB               	movwf	_dtoa$633
  3798  07D5  3000               	movlw	0
  3799  07D6  00BC               	movwf	_dtoa$633+1
  3800  07D7                     l1382:
  3801  07D7  083B               	movf	_dtoa$633,w
  3802  07D8  00B8               	movwf	??_dtoa
  3803  07D9  084C               	movf	dtoa@i,w
  3804  07DA  3ECF               	addlw	(low (_dbuf| 0))& (0+255)
  3805  07DB  0086               	movwf	6
  3806  07DC  0187               	clrf	7
  3807  07DD  0838               	movf	??_dtoa,w
  3808  07DE  0081               	movwf	1
  3809  07DF                     l1384:
  3810                           
  3811                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  3812  07DF  084C               	movf	dtoa@i,w
  3813  07E0  3ECF               	addlw	(low (_dbuf| 0))& (0+255)
  3814  07E1  00B8               	movwf	??_dtoa
  3815  07E2  0838               	movf	??_dtoa,w
  3816  07E3  00A7               	movwf	pad@buf
  3817  07E4  0841               	movf	dtoa@w+1,w
  3818  07E5  00A9               	movwf	pad@p+1
  3819  07E6  0840               	movf	dtoa@w,w
  3820  07E7  00A8               	movwf	pad@p
  3821  07E8  083D               	movf	dtoa@fp,w
  3822  07E9  3182  226C  3186   	fcall	_pad
  3823  07EC  0020               	movlb	0	; select bank0
  3824  07ED  0828               	movf	?_pad+1,w
  3825  07EE  00B1               	movwf	?_dtoa+1
  3826  07EF  0827               	movf	?_pad,w
  3827  07F0  00B0               	movwf	?_dtoa
  3828  07F1                     l761:
  3829  07F1  0008               	return
  3830  07F2                     __end_of_dtoa:
  3831                           
  3832                           	psect	text9
  3833  026C                     __ptext9:	
  3834 ;; *************** function _pad *****************
  3835 ;; Defined at:
  3836 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3837 ;; Parameters:    Size  Location     Type
  3838 ;;  fp              1    wreg     PTR struct _IO_FILE
  3839 ;;		 -> NULL(0), sprintf@f(5), 
  3840 ;;  buf             1    7[BANK0 ] PTR unsigned char 
  3841 ;;		 -> dbuf(32), 
  3842 ;;  p               2    8[BANK0 ] int 
  3843 ;; Auto vars:     Size  Location     Type
  3844 ;;  fp              1   14[BANK0 ] PTR struct _IO_FILE
  3845 ;;		 -> NULL(0), sprintf@f(5), 
  3846 ;;  w               2   12[BANK0 ] int 
  3847 ;;  i               2   10[BANK0 ] int 
  3848 ;; Return value:  Size  Location     Type
  3849 ;;                  2    7[BANK0 ] int 
  3850 ;; Registers used:
  3851 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3852 ;; Tracked objects:
  3853 ;;		On entry : 0/0
  3854 ;;		On exit  : 0/0
  3855 ;;		Unchanged: 0/0
  3856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3857 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3858 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3859 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3860 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3861 ;;Total ram usage:        9 bytes
  3862 ;; Hardware stack levels used: 1
  3863 ;; Hardware stack levels required when called: 4
  3864 ;; This function calls:
  3865 ;;		_fputc
  3866 ;;		_fputs
  3867 ;;		_strlen
  3868 ;; This function is called by:
  3869 ;;		_dtoa
  3870 ;; This function uses a non-reentrant model
  3871 ;;
  3872                           
  3873                           
  3874                           ;psect for function _pad
  3875  026C                     _pad:
  3876                           
  3877                           ;incstack = 0
  3878                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3879                           ;pad@fp stored from wreg
  3880  026C  0020               	movlb	0	; select bank0
  3881  026D  00AE               	movwf	pad@fp
  3882  026E                     l1304:
  3883                           
  3884                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3885  026E  1C6D               	btfss	_flags,0
  3886  026F  2A71               	goto	u1021
  3887  0270  2A72               	goto	u1020
  3888  0271                     u1021:
  3889  0271  2A7A               	goto	l1308
  3890  0272                     u1020:
  3891  0272                     l1306:
  3892                           
  3893                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3894  0272  082E               	movf	pad@fp,w
  3895  0273  00FC               	movwf	??_pad
  3896  0274  087C               	movf	??_pad,w
  3897  0275  00FB               	movwf	fputs@fp
  3898  0276  0827               	movf	pad@buf,w
  3899  0277  3181  2186  3182   	fcall	_fputs
  3900  027A                     l1308:
  3901                           
  3902                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3903  027A  0020               	movlb	0	; select bank0
  3904  027B  1BA9               	btfsc	pad@p+1,7
  3905  027C  2A7E               	goto	u1031
  3906  027D  2A7F               	goto	u1030
  3907  027E                     u1031:
  3908  027E  2A84               	goto	l1312
  3909  027F                     u1030:
  3910  027F                     l1310:
  3911  027F  0829               	movf	pad@p+1,w
  3912  0280  00AD               	movwf	pad@w+1
  3913  0281  0828               	movf	pad@p,w
  3914  0282  00AC               	movwf	pad@w
  3915  0283  2A86               	goto	l730
  3916  0284                     l1312:
  3917  0284  01AC               	clrf	pad@w
  3918  0285  01AD               	clrf	pad@w+1
  3919  0286                     l730:
  3920                           
  3921                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3922  0286  01AA               	clrf	pad@i
  3923  0287  01AB               	clrf	pad@i+1
  3924                           
  3925                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3926  0288  2A9A               	goto	l1318
  3927  0289                     l1314:
  3928                           
  3929                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3930  0289  3020               	movlw	32
  3931  028A  00F3               	movwf	fputc@c
  3932  028B  3000               	movlw	0
  3933  028C  00F4               	movwf	fputc@c+1
  3934  028D  0020               	movlb	0	; select bank0
  3935  028E  082E               	movf	pad@fp,w
  3936  028F  00FC               	movwf	??_pad
  3937  0290  087C               	movf	??_pad,w
  3938  0291  00F5               	movwf	fputc@fp
  3939  0292  3182  221D  3182   	fcall	_fputc
  3940  0295                     l1316:
  3941                           
  3942                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3943  0295  3001               	movlw	1
  3944  0296  0020               	movlb	0	; select bank0
  3945  0297  07AA               	addwf	pad@i,f
  3946  0298  3000               	movlw	0
  3947  0299  3DAB               	addwfc	pad@i+1,f
  3948  029A                     l1318:
  3949                           
  3950                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3951  029A  082B               	movf	pad@i+1,w
  3952  029B  3A80               	xorlw	128
  3953  029C  00FC               	movwf	??_pad
  3954  029D  082D               	movf	pad@w+1,w
  3955  029E  3A80               	xorlw	128
  3956  029F  027C               	subwf	??_pad,w
  3957  02A0  1D03               	skipz
  3958  02A1  2AA4               	goto	u1045
  3959  02A2  082C               	movf	pad@w,w
  3960  02A3  022A               	subwf	pad@i,w
  3961  02A4                     u1045:
  3962  02A4  1C03               	skipc
  3963  02A5  2AA7               	goto	u1041
  3964  02A6  2AA8               	goto	u1040
  3965  02A7                     u1041:
  3966  02A7  2A89               	goto	l1314
  3967  02A8                     u1040:
  3968  02A8                     l733:
  3969                           
  3970                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3971  02A8  0020               	movlb	0	; select bank0
  3972  02A9  186D               	btfsc	_flags,0
  3973  02AA  2AAC               	goto	u1051
  3974  02AB  2AAD               	goto	u1050
  3975  02AC                     u1051:
  3976  02AC  2AB5               	goto	l1322
  3977  02AD                     u1050:
  3978  02AD                     l1320:
  3979                           
  3980                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3981  02AD  082E               	movf	pad@fp,w
  3982  02AE  00FC               	movwf	??_pad
  3983  02AF  087C               	movf	??_pad,w
  3984  02B0  00FB               	movwf	fputs@fp
  3985  02B1  0827               	movf	pad@buf,w
  3986  02B2  3181  2186  3182   	fcall	_fputs
  3987  02B5                     l1322:
  3988                           
  3989                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3990  02B5  0020               	movlb	0	; select bank0
  3991  02B6  0827               	movf	pad@buf,w
  3992  02B7  3181  2111  3182   	fcall	_strlen
  3993  02BA  0020               	movlb	0	; select bank0
  3994  02BB  082C               	movf	pad@w,w
  3995  02BC  0770               	addwf	?_strlen,w
  3996  02BD  00A7               	movwf	?_pad
  3997  02BE  082D               	movf	pad@w+1,w
  3998  02BF  3D71               	addwfc	?_strlen+1,w
  3999  02C0  00A8               	movwf	?_pad+1
  4000  02C1                     l735:
  4001  02C1  0008               	return
  4002  02C2                     __end_of_pad:
  4003                           
  4004                           	psect	text10
  4005  0111                     __ptext10:	
  4006 ;; *************** function _strlen *****************
  4007 ;; Defined at:
  4008 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;  s               1    wreg     PTR const unsigned char 
  4011 ;;		 -> dbuf(32), 
  4012 ;; Auto vars:     Size  Location     Type
  4013 ;;  s               1    4[COMMON] PTR const unsigned char 
  4014 ;;		 -> dbuf(32), 
  4015 ;;  a               1    3[COMMON] PTR const unsigned char 
  4016 ;;		 -> dbuf(32), 
  4017 ;; Return value:  Size  Location     Type
  4018 ;;                  2    0[COMMON] unsigned int 
  4019 ;; Registers used:
  4020 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4021 ;; Tracked objects:
  4022 ;;		On entry : 0/0
  4023 ;;		On exit  : 0/0
  4024 ;;		Unchanged: 0/0
  4025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4026 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4027 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4028 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4029 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4030 ;;Total ram usage:        5 bytes
  4031 ;; Hardware stack levels used: 1
  4032 ;; This function calls:
  4033 ;;		Nothing
  4034 ;; This function is called by:
  4035 ;;		_pad
  4036 ;; This function uses a non-reentrant model
  4037 ;;
  4038                           
  4039                           
  4040                           ;psect for function _strlen
  4041  0111                     _strlen:
  4042                           
  4043                           ;incstack = 0
  4044                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  4045                           ;strlen@s stored from wreg
  4046  0111  00F4               	movwf	strlen@s
  4047  0112                     l1226:
  4048  0112  0874               	movf	strlen@s,w
  4049  0113  00F2               	movwf	??_strlen
  4050  0114  0872               	movf	??_strlen,w
  4051  0115  00F3               	movwf	strlen@a
  4052  0116  291B               	goto	l1230
  4053  0117                     l1228:
  4054  0117  3001               	movlw	1
  4055  0118  00F2               	movwf	??_strlen
  4056  0119  0872               	movf	??_strlen,w
  4057  011A  07F4               	addwf	strlen@s,f
  4058  011B                     l1230:
  4059  011B  0874               	movf	strlen@s,w
  4060  011C  0086               	movwf	6
  4061  011D  0187               	clrf	7
  4062  011E  0801               	movf	1,w
  4063  011F  1D03               	btfss	3,2
  4064  0120  2922               	goto	u801
  4065  0121  2923               	goto	u800
  4066  0122                     u801:
  4067  0122  2917               	goto	l1228
  4068  0123                     u800:
  4069  0123                     l1232:
  4070  0123  0873               	movf	strlen@a,w
  4071  0124  0274               	subwf	strlen@s,w
  4072  0125  00F0               	movwf	?_strlen
  4073  0126  01F1               	clrf	?_strlen+1
  4074  0127  1BF0               	btfsc	?_strlen,7
  4075  0128  03F1               	decf	?_strlen+1,f
  4076  0129                     l816:
  4077  0129  0008               	return
  4078  012A                     __end_of_strlen:
  4079                           
  4080                           	psect	text11
  4081  0186                     __ptext11:	
  4082 ;; *************** function _fputs *****************
  4083 ;; Defined at:
  4084 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  4085 ;; Parameters:    Size  Location     Type
  4086 ;;  s               1    wreg     PTR const unsigned char 
  4087 ;;		 -> dbuf(32), 
  4088 ;;  fp              1   11[COMMON] PTR struct _IO_FILE
  4089 ;;		 -> NULL(0), sprintf@f(5), 
  4090 ;; Auto vars:     Size  Location     Type
  4091 ;;  s               1    6[BANK0 ] PTR const unsigned char 
  4092 ;;		 -> dbuf(32), 
  4093 ;;  i               2    4[BANK0 ] int 
  4094 ;;  c               1    3[BANK0 ] unsigned char 
  4095 ;; Return value:  Size  Location     Type
  4096 ;;                  2   11[COMMON] int 
  4097 ;; Registers used:
  4098 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4099 ;; Tracked objects:
  4100 ;;		On entry : 0/0
  4101 ;;		On exit  : 0/0
  4102 ;;		Unchanged: 0/0
  4103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4104 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4105 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4106 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4107 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4108 ;;Total ram usage:        8 bytes
  4109 ;; Hardware stack levels used: 1
  4110 ;; Hardware stack levels required when called: 3
  4111 ;; This function calls:
  4112 ;;		_fputc
  4113 ;; This function is called by:
  4114 ;;		_pad
  4115 ;; This function uses a non-reentrant model
  4116 ;;
  4117                           
  4118                           
  4119                           ;psect for function _fputs
  4120  0186                     _fputs:
  4121                           
  4122                           ;incstack = 0
  4123                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4124                           ;fputs@s stored from wreg
  4125  0186  0020               	movlb	0	; select bank0
  4126  0187  00A6               	movwf	fputs@s
  4127  0188                     l1218:
  4128  0188  01A4               	clrf	fputs@i
  4129  0189  01A5               	clrf	fputs@i+1
  4130  018A  299E               	goto	l1224
  4131  018B                     l1220:
  4132  018B  0823               	movf	fputs@c,w
  4133  018C  00A0               	movwf	??_fputs
  4134  018D  01A1               	clrf	??_fputs+1
  4135  018E  0820               	movf	??_fputs,w
  4136  018F  00F3               	movwf	fputc@c
  4137  0190  0821               	movf	??_fputs+1,w
  4138  0191  00F4               	movwf	fputc@c+1
  4139  0192  087B               	movf	fputs@fp,w
  4140  0193  00A2               	movwf	??_fputs+2
  4141  0194  0822               	movf	??_fputs+2,w
  4142  0195  00F5               	movwf	fputc@fp
  4143  0196  3182  221D  3181   	fcall	_fputc
  4144  0199                     l1222:
  4145  0199  3001               	movlw	1
  4146  019A  0020               	movlb	0	; select bank0
  4147  019B  07A4               	addwf	fputs@i,f
  4148  019C  3000               	movlw	0
  4149  019D  3DA5               	addwfc	fputs@i+1,f
  4150  019E                     l1224:
  4151  019E  0824               	movf	fputs@i,w
  4152  019F  0726               	addwf	fputs@s,w
  4153  01A0  00A0               	movwf	??_fputs
  4154  01A1  0820               	movf	??_fputs,w
  4155  01A2  0086               	movwf	6
  4156  01A3  0187               	clrf	7
  4157  01A4  0801               	movf	1,w
  4158  01A5  00A1               	movwf	??_fputs+1
  4159  01A6  0821               	movf	??_fputs+1,w
  4160  01A7  00A3               	movwf	fputs@c
  4161  01A8  0823               	movf	fputs@c,w
  4162  01A9  1D03               	btfss	3,2
  4163  01AA  29AC               	goto	u791
  4164  01AB  29AD               	goto	u790
  4165  01AC                     u791:
  4166  01AC  298B               	goto	l1220
  4167  01AD                     u790:
  4168  01AD                     l803:
  4169  01AD  0008               	return
  4170  01AE                     __end_of_fputs:
  4171                           
  4172                           	psect	text12
  4173  021D                     __ptext12:	
  4174 ;; *************** function _fputc *****************
  4175 ;; Defined at:
  4176 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  4177 ;; Parameters:    Size  Location     Type
  4178 ;;  c               2    3[COMMON] int 
  4179 ;;  fp              1    5[COMMON] PTR struct _IO_FILE
  4180 ;;		 -> NULL(0), sprintf@f(5), 
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;		None
  4183 ;; Return value:  Size  Location     Type
  4184 ;;                  2    3[COMMON] int 
  4185 ;; Registers used:
  4186 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4187 ;; Tracked objects:
  4188 ;;		On entry : 0/0
  4189 ;;		On exit  : 0/0
  4190 ;;		Unchanged: 0/0
  4191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4192 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4194 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4195 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4196 ;;Total ram usage:        8 bytes
  4197 ;; Hardware stack levels used: 1
  4198 ;; Hardware stack levels required when called: 2
  4199 ;; This function calls:
  4200 ;;		_putch
  4201 ;; This function is called by:
  4202 ;;		_pad
  4203 ;;		_vfpfcnvrt
  4204 ;;		_fputs
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           
  4208                           
  4209                           ;psect for function _fputc
  4210  021D                     _fputc:
  4211  021D                     l1202:	
  4212                           ;incstack = 0
  4213                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4214                           
  4215  021D  0875               	movf	fputc@fp,w
  4216  021E  1903               	btfsc	3,2
  4217  021F  2A21               	goto	u751
  4218  0220  2A22               	goto	u750
  4219  0221                     u751:
  4220  0221  2A27               	goto	l1206
  4221  0222                     u750:
  4222  0222                     l1204:
  4223  0222  0875               	movf	fputc@fp,w
  4224  0223  1D03               	btfss	3,2
  4225  0224  2A26               	goto	u761
  4226  0225  2A27               	goto	u760
  4227  0226                     u761:
  4228  0226  2A2C               	goto	l1208
  4229  0227                     u760:
  4230  0227                     l1206:
  4231  0227  0873               	movf	fputc@c,w
  4232  0228  3180  20D6  3182   	fcall	_putch
  4233  022B  2A6B               	goto	l795
  4234  022C                     l1208:
  4235  022C  0875               	movf	fputc@fp,w
  4236  022D  3E03               	addlw	3
  4237  022E  0086               	movwf	6
  4238  022F  0187               	clrf	7
  4239  0230  0016               	moviw fsr1++
  4240  0231  0401               	iorwf	1,w
  4241  0232  1903               	btfsc	3,2
  4242  0233  2A35               	goto	u771
  4243  0234  2A36               	goto	u770
  4244  0235                     u771:
  4245  0235  2A53               	goto	l1212
  4246  0236                     u770:
  4247  0236                     l1210:
  4248  0236  0875               	movf	fputc@fp,w
  4249  0237  3E03               	addlw	3
  4250  0238  0086               	movwf	6
  4251  0239  0187               	clrf	7
  4252  023A  3F40               	moviw [0]fsr1
  4253  023B  00F6               	movwf	??_fputc
  4254  023C  3F41               	moviw [1]fsr1
  4255  023D  00F7               	movwf	??_fputc+1
  4256  023E  0A75               	incf	fputc@fp,w
  4257  023F  0086               	movwf	6
  4258  0240  0187               	clrf	7
  4259  0241  3F40               	moviw [0]fsr1
  4260  0242  00F8               	movwf	??_fputc+2
  4261  0243  3F41               	moviw [1]fsr1
  4262  0244  00F9               	movwf	??_fputc+3
  4263  0245  0879               	movf	??_fputc+3,w
  4264  0246  3A80               	xorlw	128
  4265  0247  00FA               	movwf	??_fputc+4
  4266  0248  0877               	movf	??_fputc+1,w
  4267  0249  3A80               	xorlw	128
  4268  024A  027A               	subwf	??_fputc+4,w
  4269  024B  1D03               	skipz
  4270  024C  2A4F               	goto	u785
  4271  024D  0876               	movf	??_fputc,w
  4272  024E  0278               	subwf	??_fputc+2,w
  4273  024F                     u785:
  4274  024F  1803               	skipnc
  4275  0250  2A52               	goto	u781
  4276  0251  2A53               	goto	u780
  4277  0252                     u781:
  4278  0252  2A6B               	goto	l795
  4279  0253                     u780:
  4280  0253                     l1212:
  4281  0253  0873               	movf	fputc@c,w
  4282  0254  00F6               	movwf	??_fputc
  4283  0255  0875               	movf	fputc@fp,w
  4284  0256  0086               	movwf	6
  4285  0257  0187               	clrf	7
  4286  0258  0A75               	incf	fputc@fp,w
  4287  0259  0084               	movwf	4
  4288  025A  0185               	clrf	5
  4289  025B  0800               	movf	0,w
  4290  025C  0701               	addwf	1,w
  4291  025D  00F7               	movwf	??_fputc+1
  4292  025E  0877               	movf	??_fputc+1,w
  4293  025F  0086               	movwf	6
  4294  0260  0187               	clrf	7
  4295  0261  0876               	movf	??_fputc,w
  4296  0262  0081               	movwf	1
  4297  0263                     l1214:
  4298  0263  0A75               	incf	fputc@fp,w
  4299  0264  0086               	movwf	6
  4300  0265  0187               	clrf	7
  4301  0266  3001               	movlw	1
  4302  0267  0781               	addwf	1,f
  4303  0268  3141               	addfsr 1,1
  4304  0269  1803               	skipnc
  4305  026A  0A81               	incf	1,f
  4306  026B                     l795:
  4307  026B  0008               	return
  4308  026C                     __end_of_fputc:
  4309                           
  4310                           	psect	text13
  4311  00D6                     __ptext13:	
  4312 ;; *************** function _putch *****************
  4313 ;; Defined at:
  4314 ;;		line 64 in file "uart.c"
  4315 ;; Parameters:    Size  Location     Type
  4316 ;;  dato            1    wreg     unsigned char 
  4317 ;; Auto vars:     Size  Location     Type
  4318 ;;  dato            1    2[COMMON] unsigned char 
  4319 ;; Return value:  Size  Location     Type
  4320 ;;                  1    wreg      void 
  4321 ;; Registers used:
  4322 ;;		wreg, status,2, status,0, pclath, cstack
  4323 ;; Tracked objects:
  4324 ;;		On entry : 0/0
  4325 ;;		On exit  : 0/0
  4326 ;;		Unchanged: 0/0
  4327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4329 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4331 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4332 ;;Total ram usage:        1 bytes
  4333 ;; Hardware stack levels used: 1
  4334 ;; Hardware stack levels required when called: 1
  4335 ;; This function calls:
  4336 ;;		_uart_tx
  4337 ;; This function is called by:
  4338 ;;		_fputc
  4339 ;; This function uses a non-reentrant model
  4340 ;;
  4341                           
  4342                           
  4343                           ;psect for function _putch
  4344  00D6                     _putch:
  4345                           
  4346                           ;incstack = 0
  4347                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  4348                           ;putch@dato stored from wreg
  4349  00D6  00F2               	movwf	putch@dato
  4350  00D7                     l1200:
  4351                           
  4352                           ;uart.c: 66:     uart_tx( dato);
  4353  00D7  0872               	movf	putch@dato,w
  4354  00D8  3180  20EE  3180   	fcall	_uart_tx
  4355  00DB                     l85:
  4356  00DB  0008               	return
  4357  00DC                     __end_of_putch:
  4358                           
  4359                           	psect	text14
  4360  00EE                     __ptext14:	
  4361 ;; *************** function _uart_tx *****************
  4362 ;; Defined at:
  4363 ;;		line 31 in file "uart.c"
  4364 ;; Parameters:    Size  Location     Type
  4365 ;;  dato            1    wreg     unsigned char 
  4366 ;; Auto vars:     Size  Location     Type
  4367 ;;  dato            1    1[COMMON] unsigned char 
  4368 ;; Return value:  Size  Location     Type
  4369 ;;                  1    wreg      void 
  4370 ;; Registers used:
  4371 ;;		wreg, status,2, status,0
  4372 ;; Tracked objects:
  4373 ;;		On entry : 0/0
  4374 ;;		On exit  : 0/0
  4375 ;;		Unchanged: 0/0
  4376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4378 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4379 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4380 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4381 ;;Total ram usage:        2 bytes
  4382 ;; Hardware stack levels used: 1
  4383 ;; This function calls:
  4384 ;;		Nothing
  4385 ;; This function is called by:
  4386 ;;		_putch
  4387 ;;		_uart_send_string
  4388 ;; This function uses a non-reentrant model
  4389 ;;
  4390                           
  4391                           
  4392                           ;psect for function _uart_tx
  4393  00EE                     _uart_tx:
  4394                           
  4395                           ;incstack = 0
  4396                           ; Regs used in _uart_tx: [wreg+status,2+status,0]
  4397                           ;uart_tx@dato stored from wreg
  4398  00EE  00F1               	movwf	uart_tx@dato
  4399  00EF                     l1194:
  4400  00EF                     l1196:	
  4401                           ;uart.c: 33:     while( ( (PIR3>>4) & 0x01) == 0){}
  4402                           
  4403  00EF  002E               	movlb	14	; select bank14
  4404  00F0  080F               	movf	15,w	;volatile
  4405  00F1  00F0               	movwf	??_uart_tx
  4406  00F2  3004               	movlw	4
  4407  00F3                     u735:
  4408  00F3  36F0               	lsrf	??_uart_tx,f
  4409  00F4  0B89               	decfsz	9,f
  4410  00F5  28F3               	goto	u735
  4411  00F6  1C70               	btfss	??_uart_tx,0
  4412  00F7  28F9               	goto	u741
  4413  00F8  28FA               	goto	u740
  4414  00F9                     u741:
  4415  00F9  28EF               	goto	l1196
  4416  00FA                     u740:
  4417  00FA                     l1198:
  4418                           
  4419                           ;uart.c: 35:         TXREG = dato;
  4420  00FA  0871               	movf	uart_tx@dato,w
  4421  00FB  0022               	movlb	2	; select bank2
  4422  00FC  009A               	movwf	26	;volatile
  4423  00FD                     l69:
  4424  00FD  0008               	return
  4425  00FE                     __end_of_uart_tx:
  4426                           
  4427                           	psect	text15
  4428  012A                     __ptext15:	
  4429 ;; *************** function _abs *****************
  4430 ;; Defined at:
  4431 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  4432 ;; Parameters:    Size  Location     Type
  4433 ;;  a               2    3[COMMON] int 
  4434 ;; Auto vars:     Size  Location     Type
  4435 ;;		None
  4436 ;; Return value:  Size  Location     Type
  4437 ;;                  2    3[COMMON] int 
  4438 ;; Registers used:
  4439 ;;		wreg, status,2, status,0
  4440 ;; Tracked objects:
  4441 ;;		On entry : 0/0
  4442 ;;		On exit  : 0/0
  4443 ;;		Unchanged: 0/0
  4444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4445 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4447 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4448 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4449 ;;Total ram usage:        4 bytes
  4450 ;; Hardware stack levels used: 1
  4451 ;; This function calls:
  4452 ;;		Nothing
  4453 ;; This function is called by:
  4454 ;;		_dtoa
  4455 ;; This function uses a non-reentrant model
  4456 ;;
  4457                           
  4458                           
  4459                           ;psect for function _abs
  4460  012A                     _abs:
  4461  012A                     l1326:	
  4462                           ;incstack = 0
  4463                           ; Regs used in _abs: [wreg+status,2+status,0]
  4464                           
  4465  012A  0874               	movf	abs@a+1,w
  4466  012B  3A80               	xorlw	128
  4467  012C  00F5               	movwf	??_abs
  4468  012D  3080               	movlw	128
  4469  012E  0275               	subwf	??_abs,w
  4470  012F  1D03               	skipz
  4471  0130  2933               	goto	u1065
  4472  0131  3001               	movlw	1
  4473  0132  0273               	subwf	abs@a,w
  4474  0133                     u1065:
  4475  0133  1803               	skipnc
  4476  0134  2936               	goto	u1061
  4477  0135  2937               	goto	u1060
  4478  0136                     u1061:
  4479  0136  2943               	goto	l780
  4480  0137                     u1060:
  4481  0137                     l1328:
  4482  0137  0973               	comf	abs@a,w
  4483  0138  00F5               	movwf	??_abs
  4484  0139  0974               	comf	abs@a+1,w
  4485  013A  00F6               	movwf	??_abs+1
  4486  013B  0AF5               	incf	??_abs,f
  4487  013C  1903               	skipnz
  4488  013D  0AF6               	incf	??_abs+1,f
  4489  013E  0875               	movf	??_abs,w
  4490  013F  00F3               	movwf	?_abs
  4491  0140  0876               	movf	??_abs+1,w
  4492  0141  00F4               	movwf	?_abs+1
  4493  0142  2943               	goto	l783
  4494  0143                     l780:
  4495  0143                     l783:
  4496  0143  0008               	return
  4497  0144                     __end_of_abs:
  4498                           
  4499                           	psect	text16
  4500  0392                     __ptext16:	
  4501 ;; *************** function ___aomod *****************
  4502 ;; Defined at:
  4503 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  4504 ;; Parameters:    Size  Location     Type
  4505 ;;  divisor         8    0[BANK0 ] long long 
  4506 ;;  dividend        8    8[BANK0 ] long long 
  4507 ;; Auto vars:     Size  Location     Type
  4508 ;;  sign            1    2[COMMON] unsigned char 
  4509 ;;  counter         1    1[COMMON] unsigned char 
  4510 ;; Return value:  Size  Location     Type
  4511 ;;                  8    0[BANK0 ] long long 
  4512 ;; Registers used:
  4513 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4514 ;; Tracked objects:
  4515 ;;		On entry : 0/0
  4516 ;;		On exit  : 0/0
  4517 ;;		Unchanged: 0/0
  4518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4519 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4520 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4521 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4522 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4523 ;;Total ram usage:       19 bytes
  4524 ;; Hardware stack levels used: 1
  4525 ;; This function calls:
  4526 ;;		Nothing
  4527 ;; This function is called by:
  4528 ;;		_dtoa
  4529 ;; This function uses a non-reentrant model
  4530 ;;
  4531                           
  4532                           
  4533                           ;psect for function ___aomod
  4534  0392                     ___aomod:
  4535  0392                     l1274:	
  4536                           ;incstack = 0
  4537                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  4538                           
  4539  0392  01F2               	clrf	___aomod@sign
  4540  0393                     l1276:
  4541  0393  3028               	movlw	low ___aomod@dividend
  4542  0394  0086               	movwf	6
  4543  0395  3000               	movlw	high ___aomod@dividend
  4544  0396  0087               	movwf	7
  4545  0397  3F47               	moviw [7]fsr1
  4546  0398  00F0               	movwf	??___aomod
  4547  0399  1FF0               	btfss	??___aomod,7
  4548  039A  2B9C               	goto	u921
  4549  039B  2B9D               	goto	u920
  4550  039C                     u921:
  4551  039C  2BBE               	goto	l1280
  4552  039D                     u920:
  4553  039D                     l1278:
  4554  039D  0020               	movlb	0	; select bank0
  4555  039E  09A8               	comf	___aomod@dividend,f
  4556  039F  09A9               	comf	___aomod@dividend+1,f
  4557  03A0  09AA               	comf	___aomod@dividend+2,f
  4558  03A1  09AB               	comf	___aomod@dividend+3,f
  4559  03A2  09AC               	comf	___aomod@dividend+4,f
  4560  03A3  09AD               	comf	___aomod@dividend+5,f
  4561  03A4  09AE               	comf	___aomod@dividend+6,f
  4562  03A5  09AF               	comf	___aomod@dividend+7,f
  4563  03A6  0AA8               	incf	___aomod@dividend,f
  4564  03A7  1D03               	skipz
  4565  03A8  2BBC               	goto	u93lld
  4566  03A9  0AA9               	incf	___aomod@dividend+1,f
  4567  03AA  1D03               	skipz
  4568  03AB  2BBC               	goto	u93lld
  4569  03AC  0AAA               	incf	___aomod@dividend+2,f
  4570  03AD  1D03               	skipz
  4571  03AE  2BBC               	goto	u93lld
  4572  03AF  0AAB               	incf	___aomod@dividend+3,f
  4573  03B0  1D03               	skipz
  4574  03B1  2BBC               	goto	u93lld
  4575  03B2  0AAC               	incf	___aomod@dividend+4,f
  4576  03B3  1D03               	skipz
  4577  03B4  2BBC               	goto	u93lld
  4578  03B5  0AAD               	incf	___aomod@dividend+5,f
  4579  03B6  1D03               	skipz
  4580  03B7  2BBC               	goto	u93lld
  4581  03B8  0AAE               	incf	___aomod@dividend+6,f
  4582  03B9  1D03               	skipz
  4583  03BA  2BBC               	goto	u93lld
  4584  03BB  0AAF               	incf	___aomod@dividend+7,f
  4585  03BC                     u93lld:
  4586  03BC  01F2               	clrf	___aomod@sign
  4587  03BD  0AF2               	incf	___aomod@sign,f
  4588  03BE                     l1280:
  4589  03BE  3020               	movlw	low ___aomod@divisor
  4590  03BF  0086               	movwf	6
  4591  03C0  3000               	movlw	high ___aomod@divisor
  4592  03C1  0087               	movwf	7
  4593  03C2  3F47               	moviw [7]fsr1
  4594  03C3  00F0               	movwf	??___aomod
  4595  03C4  1FF0               	btfss	??___aomod,7
  4596  03C5  2BC7               	goto	u941
  4597  03C6  2BC8               	goto	u940
  4598  03C7                     u941:
  4599  03C7  2BE7               	goto	l1284
  4600  03C8                     u940:
  4601  03C8                     l1282:
  4602  03C8  0020               	movlb	0	; select bank0
  4603  03C9  09A0               	comf	___aomod@divisor,f
  4604  03CA  09A1               	comf	___aomod@divisor+1,f
  4605  03CB  09A2               	comf	___aomod@divisor+2,f
  4606  03CC  09A3               	comf	___aomod@divisor+3,f
  4607  03CD  09A4               	comf	___aomod@divisor+4,f
  4608  03CE  09A5               	comf	___aomod@divisor+5,f
  4609  03CF  09A6               	comf	___aomod@divisor+6,f
  4610  03D0  09A7               	comf	___aomod@divisor+7,f
  4611  03D1  0AA0               	incf	___aomod@divisor,f
  4612  03D2  1D03               	skipz
  4613  03D3  2BE7               	goto	u95lld
  4614  03D4  0AA1               	incf	___aomod@divisor+1,f
  4615  03D5  1D03               	skipz
  4616  03D6  2BE7               	goto	u95lld
  4617  03D7  0AA2               	incf	___aomod@divisor+2,f
  4618  03D8  1D03               	skipz
  4619  03D9  2BE7               	goto	u95lld
  4620  03DA  0AA3               	incf	___aomod@divisor+3,f
  4621  03DB  1D03               	skipz
  4622  03DC  2BE7               	goto	u95lld
  4623  03DD  0AA4               	incf	___aomod@divisor+4,f
  4624  03DE  1D03               	skipz
  4625  03DF  2BE7               	goto	u95lld
  4626  03E0  0AA5               	incf	___aomod@divisor+5,f
  4627  03E1  1D03               	skipz
  4628  03E2  2BE7               	goto	u95lld
  4629  03E3  0AA6               	incf	___aomod@divisor+6,f
  4630  03E4  1D03               	skipz
  4631  03E5  2BE7               	goto	u95lld
  4632  03E6  0AA7               	incf	___aomod@divisor+7,f
  4633  03E7                     u95lld:
  4634  03E7                     l1284:
  4635  03E7  0020               	movlb	0	; select bank0
  4636  03E8  0820               	movf	___aomod@divisor,w
  4637  03E9  0421               	iorwf	___aomod@divisor+1,w
  4638  03EA  0422               	iorwf	___aomod@divisor+2,w
  4639  03EB  0423               	iorwf	___aomod@divisor+3,w
  4640  03EC  0424               	iorwf	___aomod@divisor+4,w
  4641  03ED  0425               	iorwf	___aomod@divisor+5,w
  4642  03EE  0426               	iorwf	___aomod@divisor+6,w
  4643  03EF  0427               	iorwf	___aomod@divisor+7,w
  4644  03F0  1903               	skipnz
  4645  03F1  2BF3               	goto	u961
  4646  03F2  2BF4               	goto	u960
  4647  03F3                     u961:
  4648  03F3  2C47               	goto	l1300
  4649  03F4                     u960:
  4650  03F4                     l1286:
  4651  03F4  01F1               	clrf	___aomod@counter
  4652  03F5  0AF1               	incf	___aomod@counter,f
  4653  03F6  2C03               	goto	l1292
  4654  03F7                     l1288:
  4655  03F7  35A0               	lslf	___aomod@divisor,f
  4656  03F8  0DA1               	rlf	___aomod@divisor+1,f
  4657  03F9  0DA2               	rlf	___aomod@divisor+2,f
  4658  03FA  0DA3               	rlf	___aomod@divisor+3,f
  4659  03FB  0DA4               	rlf	___aomod@divisor+4,f
  4660  03FC  0DA5               	rlf	___aomod@divisor+5,f
  4661  03FD  0DA6               	rlf	___aomod@divisor+6,f
  4662  03FE  0DA7               	rlf	___aomod@divisor+7,f
  4663  03FF                     l1290:
  4664  03FF  3001               	movlw	1
  4665  0400  00F0               	movwf	??___aomod
  4666  0401  0870               	movf	??___aomod,w
  4667  0402  07F1               	addwf	___aomod@counter,f
  4668  0403                     l1292:
  4669  0403  1FA7               	btfss	___aomod@divisor+7,7
  4670  0404  2C06               	goto	u971
  4671  0405  2C07               	goto	u970
  4672  0406                     u971:
  4673  0406  2BF7               	goto	l1288
  4674  0407                     u970:
  4675  0407                     l1294:
  4676  0407  0827               	movf	___aomod@divisor+7,w
  4677  0408  022F               	subwf	___aomod@dividend+7,w
  4678  0409  1D03               	skipz
  4679  040A  2C25               	goto	u985
  4680  040B  0826               	movf	___aomod@divisor+6,w
  4681  040C  022E               	subwf	___aomod@dividend+6,w
  4682  040D  1D03               	skipz
  4683  040E  2C25               	goto	u985
  4684  040F  0825               	movf	___aomod@divisor+5,w
  4685  0410  022D               	subwf	___aomod@dividend+5,w
  4686  0411  1D03               	skipz
  4687  0412  2C25               	goto	u985
  4688  0413  0824               	movf	___aomod@divisor+4,w
  4689  0414  022C               	subwf	___aomod@dividend+4,w
  4690  0415  1D03               	skipz
  4691  0416  2C25               	goto	u985
  4692  0417  0823               	movf	___aomod@divisor+3,w
  4693  0418  022B               	subwf	___aomod@dividend+3,w
  4694  0419  1D03               	skipz
  4695  041A  2C25               	goto	u985
  4696  041B  0822               	movf	___aomod@divisor+2,w
  4697  041C  022A               	subwf	___aomod@dividend+2,w
  4698  041D  1D03               	skipz
  4699  041E  2C25               	goto	u985
  4700  041F  0821               	movf	___aomod@divisor+1,w
  4701  0420  0229               	subwf	___aomod@dividend+1,w
  4702  0421  1D03               	skipz
  4703  0422  2C25               	goto	u985
  4704  0423  0820               	movf	___aomod@divisor,w
  4705  0424  0228               	subwf	___aomod@dividend,w
  4706  0425                     u985:
  4707  0425  1C03               	skipc
  4708  0426  2C28               	goto	u981
  4709  0427  2C29               	goto	u980
  4710  0428                     u981:
  4711  0428  2C39               	goto	l1298
  4712  0429                     u980:
  4713  0429                     l1296:
  4714  0429  0820               	movf	___aomod@divisor,w
  4715  042A  02A8               	subwf	___aomod@dividend,f
  4716  042B  0821               	movf	___aomod@divisor+1,w
  4717  042C  3BA9               	subwfb	___aomod@dividend+1,f
  4718  042D  0822               	movf	___aomod@divisor+2,w
  4719  042E  3BAA               	subwfb	___aomod@dividend+2,f
  4720  042F  0823               	movf	___aomod@divisor+3,w
  4721  0430  3BAB               	subwfb	___aomod@dividend+3,f
  4722  0431  0824               	movf	___aomod@divisor+4,w
  4723  0432  3BAC               	subwfb	___aomod@dividend+4,f
  4724  0433  0825               	movf	___aomod@divisor+5,w
  4725  0434  3BAD               	subwfb	___aomod@dividend+5,f
  4726  0435  0826               	movf	___aomod@divisor+6,w
  4727  0436  3BAE               	subwfb	___aomod@dividend+6,f
  4728  0437  0827               	movf	___aomod@divisor+7,w
  4729  0438  3BAF               	subwfb	___aomod@dividend+7,f
  4730  0439                     l1298:
  4731  0439  36A7               	lsrf	___aomod@divisor+7,f
  4732  043A  0CA6               	rrf	___aomod@divisor+6,f
  4733  043B  0CA5               	rrf	___aomod@divisor+5,f
  4734  043C  0CA4               	rrf	___aomod@divisor+4,f
  4735  043D  0CA3               	rrf	___aomod@divisor+3,f
  4736  043E  0CA2               	rrf	___aomod@divisor+2,f
  4737  043F  0CA1               	rrf	___aomod@divisor+1,f
  4738  0440  0CA0               	rrf	___aomod@divisor,f
  4739  0441  3001               	movlw	1
  4740  0442  02F1               	subwf	___aomod@counter,f
  4741  0443  1D03               	btfss	3,2
  4742  0444  2C46               	goto	u991
  4743  0445  2C47               	goto	u990
  4744  0446                     u991:
  4745  0446  2C07               	goto	l1294
  4746  0447                     u990:
  4747  0447                     l1300:
  4748  0447  0872               	movf	___aomod@sign,w
  4749  0448  1903               	btfsc	3,2
  4750  0449  2C4B               	goto	u1001
  4751  044A  2C4C               	goto	u1000
  4752  044B                     u1001:
  4753  044B  2C6A               	goto	l353
  4754  044C                     u1000:
  4755  044C                     l1302:
  4756  044C  09A8               	comf	___aomod@dividend,f
  4757  044D  09A9               	comf	___aomod@dividend+1,f
  4758  044E  09AA               	comf	___aomod@dividend+2,f
  4759  044F  09AB               	comf	___aomod@dividend+3,f
  4760  0450  09AC               	comf	___aomod@dividend+4,f
  4761  0451  09AD               	comf	___aomod@dividend+5,f
  4762  0452  09AE               	comf	___aomod@dividend+6,f
  4763  0453  09AF               	comf	___aomod@dividend+7,f
  4764  0454  0AA8               	incf	___aomod@dividend,f
  4765  0455  1D03               	skipz
  4766  0456  2C6A               	goto	u101lld
  4767  0457  0AA9               	incf	___aomod@dividend+1,f
  4768  0458  1D03               	skipz
  4769  0459  2C6A               	goto	u101lld
  4770  045A  0AAA               	incf	___aomod@dividend+2,f
  4771  045B  1D03               	skipz
  4772  045C  2C6A               	goto	u101lld
  4773  045D  0AAB               	incf	___aomod@dividend+3,f
  4774  045E  1D03               	skipz
  4775  045F  2C6A               	goto	u101lld
  4776  0460  0AAC               	incf	___aomod@dividend+4,f
  4777  0461  1D03               	skipz
  4778  0462  2C6A               	goto	u101lld
  4779  0463  0AAD               	incf	___aomod@dividend+5,f
  4780  0464  1D03               	skipz
  4781  0465  2C6A               	goto	u101lld
  4782  0466  0AAE               	incf	___aomod@dividend+6,f
  4783  0467  1D03               	skipz
  4784  0468  2C6A               	goto	u101lld
  4785  0469  0AAF               	incf	___aomod@dividend+7,f
  4786  046A                     u101lld:
  4787  046A                     l353:
  4788  046A  0020               	movlb	0	; select bank0
  4789  046B  0828               	movf	___aomod@dividend,w
  4790  046C  00A0               	movwf	?___aomod
  4791  046D  0829               	movf	___aomod@dividend+1,w
  4792  046E  00A1               	movwf	?___aomod+1
  4793  046F  082A               	movf	___aomod@dividend+2,w
  4794  0470  00A2               	movwf	?___aomod+2
  4795  0471  082B               	movf	___aomod@dividend+3,w
  4796  0472  00A3               	movwf	?___aomod+3
  4797  0473  082C               	movf	___aomod@dividend+4,w
  4798  0474  00A4               	movwf	?___aomod+4
  4799  0475  082D               	movf	___aomod@dividend+5,w
  4800  0476  00A5               	movwf	?___aomod+5
  4801  0477  082E               	movf	___aomod@dividend+6,w
  4802  0478  00A6               	movwf	?___aomod+6
  4803  0479  082F               	movf	___aomod@dividend+7,w
  4804  047A  00A7               	movwf	?___aomod+7
  4805  047B                     l354:
  4806  047B  0008               	return
  4807  047C                     __end_of___aomod:
  4808                           
  4809                           	psect	text17
  4810  047C                     __ptext17:	
  4811 ;; *************** function ___aodiv *****************
  4812 ;; Defined at:
  4813 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;  divisor         8    0[BANK0 ] long long 
  4816 ;;  dividend        8    8[BANK0 ] long long 
  4817 ;; Auto vars:     Size  Location     Type
  4818 ;;  quotient        8    3[COMMON] long long 
  4819 ;;  sign            1    2[COMMON] unsigned char 
  4820 ;;  counter         1    1[COMMON] unsigned char 
  4821 ;; Return value:  Size  Location     Type
  4822 ;;                  8    0[BANK0 ] long long 
  4823 ;; Registers used:
  4824 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4825 ;; Tracked objects:
  4826 ;;		On entry : 0/0
  4827 ;;		On exit  : 0/0
  4828 ;;		Unchanged: 0/0
  4829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4830 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4831 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4832 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4833 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4834 ;;Total ram usage:       27 bytes
  4835 ;; Hardware stack levels used: 1
  4836 ;; This function calls:
  4837 ;;		Nothing
  4838 ;; This function is called by:
  4839 ;;		_dtoa
  4840 ;; This function uses a non-reentrant model
  4841 ;;
  4842                           
  4843                           
  4844                           ;psect for function ___aodiv
  4845  047C                     ___aodiv:
  4846  047C                     l1236:	
  4847                           ;incstack = 0
  4848                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  4849                           
  4850  047C  01F2               	clrf	___aodiv@sign
  4851  047D                     l1238:
  4852  047D  3020               	movlw	low ___aodiv@divisor
  4853  047E  0086               	movwf	6
  4854  047F  3000               	movlw	high ___aodiv@divisor
  4855  0480  0087               	movwf	7
  4856  0481  3F47               	moviw [7]fsr1
  4857  0482  00F0               	movwf	??___aodiv
  4858  0483  1FF0               	btfss	??___aodiv,7
  4859  0484  2C86               	goto	u811
  4860  0485  2C87               	goto	u810
  4861  0486                     u811:
  4862  0486  2CA8               	goto	l1242
  4863  0487                     u810:
  4864  0487                     l1240:
  4865  0487  0020               	movlb	0	; select bank0
  4866  0488  09A0               	comf	___aodiv@divisor,f
  4867  0489  09A1               	comf	___aodiv@divisor+1,f
  4868  048A  09A2               	comf	___aodiv@divisor+2,f
  4869  048B  09A3               	comf	___aodiv@divisor+3,f
  4870  048C  09A4               	comf	___aodiv@divisor+4,f
  4871  048D  09A5               	comf	___aodiv@divisor+5,f
  4872  048E  09A6               	comf	___aodiv@divisor+6,f
  4873  048F  09A7               	comf	___aodiv@divisor+7,f
  4874  0490  0AA0               	incf	___aodiv@divisor,f
  4875  0491  1D03               	skipz
  4876  0492  2CA6               	goto	u82lld
  4877  0493  0AA1               	incf	___aodiv@divisor+1,f
  4878  0494  1D03               	skipz
  4879  0495  2CA6               	goto	u82lld
  4880  0496  0AA2               	incf	___aodiv@divisor+2,f
  4881  0497  1D03               	skipz
  4882  0498  2CA6               	goto	u82lld
  4883  0499  0AA3               	incf	___aodiv@divisor+3,f
  4884  049A  1D03               	skipz
  4885  049B  2CA6               	goto	u82lld
  4886  049C  0AA4               	incf	___aodiv@divisor+4,f
  4887  049D  1D03               	skipz
  4888  049E  2CA6               	goto	u82lld
  4889  049F  0AA5               	incf	___aodiv@divisor+5,f
  4890  04A0  1D03               	skipz
  4891  04A1  2CA6               	goto	u82lld
  4892  04A2  0AA6               	incf	___aodiv@divisor+6,f
  4893  04A3  1D03               	skipz
  4894  04A4  2CA6               	goto	u82lld
  4895  04A5  0AA7               	incf	___aodiv@divisor+7,f
  4896  04A6                     u82lld:
  4897  04A6  01F2               	clrf	___aodiv@sign
  4898  04A7  0AF2               	incf	___aodiv@sign,f
  4899  04A8                     l1242:
  4900  04A8  3028               	movlw	low ___aodiv@dividend
  4901  04A9  0086               	movwf	6
  4902  04AA  3000               	movlw	high ___aodiv@dividend
  4903  04AB  0087               	movwf	7
  4904  04AC  3F47               	moviw [7]fsr1
  4905  04AD  00F0               	movwf	??___aodiv
  4906  04AE  1FF0               	btfss	??___aodiv,7
  4907  04AF  2CB1               	goto	u831
  4908  04B0  2CB2               	goto	u830
  4909  04B1                     u831:
  4910  04B1  2CD5               	goto	l1248
  4911  04B2                     u830:
  4912  04B2                     l1244:
  4913  04B2  0020               	movlb	0	; select bank0
  4914  04B3  09A8               	comf	___aodiv@dividend,f
  4915  04B4  09A9               	comf	___aodiv@dividend+1,f
  4916  04B5  09AA               	comf	___aodiv@dividend+2,f
  4917  04B6  09AB               	comf	___aodiv@dividend+3,f
  4918  04B7  09AC               	comf	___aodiv@dividend+4,f
  4919  04B8  09AD               	comf	___aodiv@dividend+5,f
  4920  04B9  09AE               	comf	___aodiv@dividend+6,f
  4921  04BA  09AF               	comf	___aodiv@dividend+7,f
  4922  04BB  0AA8               	incf	___aodiv@dividend,f
  4923  04BC  1D03               	skipz
  4924  04BD  2CD1               	goto	u84lld
  4925  04BE  0AA9               	incf	___aodiv@dividend+1,f
  4926  04BF  1D03               	skipz
  4927  04C0  2CD1               	goto	u84lld
  4928  04C1  0AAA               	incf	___aodiv@dividend+2,f
  4929  04C2  1D03               	skipz
  4930  04C3  2CD1               	goto	u84lld
  4931  04C4  0AAB               	incf	___aodiv@dividend+3,f
  4932  04C5  1D03               	skipz
  4933  04C6  2CD1               	goto	u84lld
  4934  04C7  0AAC               	incf	___aodiv@dividend+4,f
  4935  04C8  1D03               	skipz
  4936  04C9  2CD1               	goto	u84lld
  4937  04CA  0AAD               	incf	___aodiv@dividend+5,f
  4938  04CB  1D03               	skipz
  4939  04CC  2CD1               	goto	u84lld
  4940  04CD  0AAE               	incf	___aodiv@dividend+6,f
  4941  04CE  1D03               	skipz
  4942  04CF  2CD1               	goto	u84lld
  4943  04D0  0AAF               	incf	___aodiv@dividend+7,f
  4944  04D1                     u84lld:
  4945  04D1                     l1246:
  4946  04D1  3001               	movlw	1
  4947  04D2  00F0               	movwf	??___aodiv
  4948  04D3  0870               	movf	??___aodiv,w
  4949  04D4  06F2               	xorwf	___aodiv@sign,f
  4950  04D5                     l1248:
  4951  04D5  3073               	movlw	low ___aodiv@quotient
  4952  04D6  0086               	movwf	6
  4953  04D7  3000               	movlw	high ___aodiv@quotient
  4954  04D8  0087               	movwf	7
  4955  04D9  3008               	movlw	8
  4956  04DA  00F0               	movwf	??___aodiv
  4957  04DB  3000               	movlw	0
  4958  04DC                     u850:
  4959  04DC  001E               	movwi fsr1++
  4960  04DD  0BF0               	decfsz	??___aodiv,f
  4961  04DE  2CDC               	goto	u850
  4962  04DF                     l1250:
  4963  04DF  0020               	movlb	0	; select bank0
  4964  04E0  0820               	movf	___aodiv@divisor,w
  4965  04E1  0421               	iorwf	___aodiv@divisor+1,w
  4966  04E2  0422               	iorwf	___aodiv@divisor+2,w
  4967  04E3  0423               	iorwf	___aodiv@divisor+3,w
  4968  04E4  0424               	iorwf	___aodiv@divisor+4,w
  4969  04E5  0425               	iorwf	___aodiv@divisor+5,w
  4970  04E6  0426               	iorwf	___aodiv@divisor+6,w
  4971  04E7  0427               	iorwf	___aodiv@divisor+7,w
  4972  04E8  1903               	skipnz
  4973  04E9  2CEB               	goto	u861
  4974  04EA  2CEC               	goto	u860
  4975  04EB                     u861:
  4976  04EB  2D48               	goto	l1270
  4977  04EC                     u860:
  4978  04EC                     l1252:
  4979  04EC  01F1               	clrf	___aodiv@counter
  4980  04ED  0AF1               	incf	___aodiv@counter,f
  4981  04EE  2CFB               	goto	l1258
  4982  04EF                     l1254:
  4983  04EF  35A0               	lslf	___aodiv@divisor,f
  4984  04F0  0DA1               	rlf	___aodiv@divisor+1,f
  4985  04F1  0DA2               	rlf	___aodiv@divisor+2,f
  4986  04F2  0DA3               	rlf	___aodiv@divisor+3,f
  4987  04F3  0DA4               	rlf	___aodiv@divisor+4,f
  4988  04F4  0DA5               	rlf	___aodiv@divisor+5,f
  4989  04F5  0DA6               	rlf	___aodiv@divisor+6,f
  4990  04F6  0DA7               	rlf	___aodiv@divisor+7,f
  4991  04F7                     l1256:
  4992  04F7  3001               	movlw	1
  4993  04F8  00F0               	movwf	??___aodiv
  4994  04F9  0870               	movf	??___aodiv,w
  4995  04FA  07F1               	addwf	___aodiv@counter,f
  4996  04FB                     l1258:
  4997  04FB  1FA7               	btfss	___aodiv@divisor+7,7
  4998  04FC  2CFE               	goto	u871
  4999  04FD  2CFF               	goto	u870
  5000  04FE                     u871:
  5001  04FE  2CEF               	goto	l1254
  5002  04FF                     u870:
  5003  04FF                     l1260:
  5004  04FF  35F3               	lslf	___aodiv@quotient,f
  5005  0500  0DF4               	rlf	___aodiv@quotient+1,f
  5006  0501  0DF5               	rlf	___aodiv@quotient+2,f
  5007  0502  0DF6               	rlf	___aodiv@quotient+3,f
  5008  0503  0DF7               	rlf	___aodiv@quotient+4,f
  5009  0504  0DF8               	rlf	___aodiv@quotient+5,f
  5010  0505  0DF9               	rlf	___aodiv@quotient+6,f
  5011  0506  0DFA               	rlf	___aodiv@quotient+7,f
  5012  0507                     l1262:
  5013  0507  0827               	movf	___aodiv@divisor+7,w
  5014  0508  022F               	subwf	___aodiv@dividend+7,w
  5015  0509  1D03               	skipz
  5016  050A  2D25               	goto	u885
  5017  050B  0826               	movf	___aodiv@divisor+6,w
  5018  050C  022E               	subwf	___aodiv@dividend+6,w
  5019  050D  1D03               	skipz
  5020  050E  2D25               	goto	u885
  5021  050F  0825               	movf	___aodiv@divisor+5,w
  5022  0510  022D               	subwf	___aodiv@dividend+5,w
  5023  0511  1D03               	skipz
  5024  0512  2D25               	goto	u885
  5025  0513  0824               	movf	___aodiv@divisor+4,w
  5026  0514  022C               	subwf	___aodiv@dividend+4,w
  5027  0515  1D03               	skipz
  5028  0516  2D25               	goto	u885
  5029  0517  0823               	movf	___aodiv@divisor+3,w
  5030  0518  022B               	subwf	___aodiv@dividend+3,w
  5031  0519  1D03               	skipz
  5032  051A  2D25               	goto	u885
  5033  051B  0822               	movf	___aodiv@divisor+2,w
  5034  051C  022A               	subwf	___aodiv@dividend+2,w
  5035  051D  1D03               	skipz
  5036  051E  2D25               	goto	u885
  5037  051F  0821               	movf	___aodiv@divisor+1,w
  5038  0520  0229               	subwf	___aodiv@dividend+1,w
  5039  0521  1D03               	skipz
  5040  0522  2D25               	goto	u885
  5041  0523  0820               	movf	___aodiv@divisor,w
  5042  0524  0228               	subwf	___aodiv@dividend,w
  5043  0525                     u885:
  5044  0525  1C03               	skipc
  5045  0526  2D28               	goto	u881
  5046  0527  2D29               	goto	u880
  5047  0528                     u881:
  5048  0528  2D3A               	goto	l1268
  5049  0529                     u880:
  5050  0529                     l1264:
  5051  0529  0820               	movf	___aodiv@divisor,w
  5052  052A  02A8               	subwf	___aodiv@dividend,f
  5053  052B  0821               	movf	___aodiv@divisor+1,w
  5054  052C  3BA9               	subwfb	___aodiv@dividend+1,f
  5055  052D  0822               	movf	___aodiv@divisor+2,w
  5056  052E  3BAA               	subwfb	___aodiv@dividend+2,f
  5057  052F  0823               	movf	___aodiv@divisor+3,w
  5058  0530  3BAB               	subwfb	___aodiv@dividend+3,f
  5059  0531  0824               	movf	___aodiv@divisor+4,w
  5060  0532  3BAC               	subwfb	___aodiv@dividend+4,f
  5061  0533  0825               	movf	___aodiv@divisor+5,w
  5062  0534  3BAD               	subwfb	___aodiv@dividend+5,f
  5063  0535  0826               	movf	___aodiv@divisor+6,w
  5064  0536  3BAE               	subwfb	___aodiv@dividend+6,f
  5065  0537  0827               	movf	___aodiv@divisor+7,w
  5066  0538  3BAF               	subwfb	___aodiv@dividend+7,f
  5067  0539                     l1266:
  5068  0539  1473               	bsf	___aodiv@quotient,0
  5069  053A                     l1268:
  5070  053A  36A7               	lsrf	___aodiv@divisor+7,f
  5071  053B  0CA6               	rrf	___aodiv@divisor+6,f
  5072  053C  0CA5               	rrf	___aodiv@divisor+5,f
  5073  053D  0CA4               	rrf	___aodiv@divisor+4,f
  5074  053E  0CA3               	rrf	___aodiv@divisor+3,f
  5075  053F  0CA2               	rrf	___aodiv@divisor+2,f
  5076  0540  0CA1               	rrf	___aodiv@divisor+1,f
  5077  0541  0CA0               	rrf	___aodiv@divisor,f
  5078  0542  3001               	movlw	1
  5079  0543  02F1               	subwf	___aodiv@counter,f
  5080  0544  1D03               	btfss	3,2
  5081  0545  2D47               	goto	u891
  5082  0546  2D48               	goto	u890
  5083  0547                     u891:
  5084  0547  2CFF               	goto	l1260
  5085  0548                     u890:
  5086  0548                     l1270:
  5087  0548  0872               	movf	___aodiv@sign,w
  5088  0549  1903               	btfsc	3,2
  5089  054A  2D4C               	goto	u901
  5090  054B  2D4D               	goto	u900
  5091  054C                     u901:
  5092  054C  2D6B               	goto	l340
  5093  054D                     u900:
  5094  054D                     l1272:
  5095  054D  09F3               	comf	___aodiv@quotient,f
  5096  054E  09F4               	comf	___aodiv@quotient+1,f
  5097  054F  09F5               	comf	___aodiv@quotient+2,f
  5098  0550  09F6               	comf	___aodiv@quotient+3,f
  5099  0551  09F7               	comf	___aodiv@quotient+4,f
  5100  0552  09F8               	comf	___aodiv@quotient+5,f
  5101  0553  09F9               	comf	___aodiv@quotient+6,f
  5102  0554  09FA               	comf	___aodiv@quotient+7,f
  5103  0555  0AF3               	incf	___aodiv@quotient,f
  5104  0556  1D03               	skipz
  5105  0557  2D6B               	goto	u91lld
  5106  0558  0AF4               	incf	___aodiv@quotient+1,f
  5107  0559  1D03               	skipz
  5108  055A  2D6B               	goto	u91lld
  5109  055B  0AF5               	incf	___aodiv@quotient+2,f
  5110  055C  1D03               	skipz
  5111  055D  2D6B               	goto	u91lld
  5112  055E  0AF6               	incf	___aodiv@quotient+3,f
  5113  055F  1D03               	skipz
  5114  0560  2D6B               	goto	u91lld
  5115  0561  0AF7               	incf	___aodiv@quotient+4,f
  5116  0562  1D03               	skipz
  5117  0563  2D6B               	goto	u91lld
  5118  0564  0AF8               	incf	___aodiv@quotient+5,f
  5119  0565  1D03               	skipz
  5120  0566  2D6B               	goto	u91lld
  5121  0567  0AF9               	incf	___aodiv@quotient+6,f
  5122  0568  1D03               	skipz
  5123  0569  2D6B               	goto	u91lld
  5124  056A  0AFA               	incf	___aodiv@quotient+7,f
  5125  056B                     u91lld:
  5126  056B                     l340:
  5127  056B  0873               	movf	___aodiv@quotient,w
  5128  056C  0020               	movlb	0	; select bank0
  5129  056D  00A0               	movwf	?___aodiv
  5130  056E  0874               	movf	___aodiv@quotient+1,w
  5131  056F  00A1               	movwf	?___aodiv+1
  5132  0570  0875               	movf	___aodiv@quotient+2,w
  5133  0571  00A2               	movwf	?___aodiv+2
  5134  0572  0876               	movf	___aodiv@quotient+3,w
  5135  0573  00A3               	movwf	?___aodiv+3
  5136  0574  0877               	movf	___aodiv@quotient+4,w
  5137  0575  00A4               	movwf	?___aodiv+4
  5138  0576  0878               	movf	___aodiv@quotient+5,w
  5139  0577  00A5               	movwf	?___aodiv+5
  5140  0578  0879               	movf	___aodiv@quotient+6,w
  5141  0579  00A6               	movwf	?___aodiv+6
  5142  057A  087A               	movf	___aodiv@quotient+7,w
  5143  057B  00A7               	movwf	?___aodiv+7
  5144  057C                     l341:
  5145  057C  0008               	return
  5146  057D                     __end_of___aodiv:
  5147                           
  5148                           	psect	text18
  5149  00E2                     __ptext18:	
  5150 ;; *************** function _port_init *****************
  5151 ;; Defined at:
  5152 ;;		line 49 in file "Main.c"
  5153 ;; Parameters:    Size  Location     Type
  5154 ;;		None
  5155 ;; Auto vars:     Size  Location     Type
  5156 ;;		None
  5157 ;; Return value:  Size  Location     Type
  5158 ;;                  1    wreg      void 
  5159 ;; Registers used:
  5160 ;;		wreg, status,2
  5161 ;; Tracked objects:
  5162 ;;		On entry : 0/0
  5163 ;;		On exit  : 0/0
  5164 ;;		Unchanged: 0/0
  5165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5170 ;;Total ram usage:        0 bytes
  5171 ;; Hardware stack levels used: 1
  5172 ;; This function calls:
  5173 ;;		Nothing
  5174 ;; This function is called by:
  5175 ;;		_main
  5176 ;; This function uses a non-reentrant model
  5177 ;;
  5178                           
  5179                           
  5180                           ;psect for function _port_init
  5181  00E2                     _port_init:
  5182  00E2                     l1480:	
  5183                           ;incstack = 0
  5184                           ; Regs used in _port_init: [wreg+status,2]
  5185                           
  5186                           
  5187                           ;Main.c: 51:     ANSELA = 0;
  5188  00E2  003E               	movlb	30	; select bank30
  5189  00E3  01B8               	clrf	56	;volatile
  5190                           
  5191                           ;Main.c: 52:     LATA=0;
  5192  00E4  0020               	movlb	0	; select bank0
  5193  00E5  0196               	clrf	22	;volatile
  5194                           
  5195                           ;Main.c: 53:     PORTA =0;
  5196  00E6  018C               	clrf	12	;volatile
  5197  00E7                     l1482:
  5198                           
  5199                           ;Main.c: 54:     TRISA = 0b11110000;
  5200  00E7  30F0               	movlw	240
  5201  00E8  0091               	movwf	17	;volatile
  5202  00E9                     l1484:
  5203                           
  5204                           ;Main.c: 57:     TRISC = 0b10;
  5205  00E9  3002               	movlw	2
  5206  00EA  0093               	movwf	19	;volatile
  5207                           
  5208                           ;Main.c: 58:     ANSELC = 0;
  5209  00EB  003E               	movlb	30	; select bank30
  5210  00EC  01CE               	clrf	78	;volatile
  5211  00ED                     l40:
  5212  00ED  0008               	return
  5213  00EE                     __end_of_port_init:
  5214  007E                     btemp	set	126	;btemp
  5215  007E                     wtemp0	set	126
  5216                           
  5217                           	psect	idloc
  5218                           
  5219                           ;Config register IDLOC0 @ 0x8000
  5220                           ;	unspecified, using default values
  5221  8000                     	org	32768
  5222  8000  3FFF               	dw	16383
  5223                           
  5224                           ;Config register IDLOC1 @ 0x8001
  5225                           ;	unspecified, using default values
  5226  8001                     	org	32769
  5227  8001  3FFF               	dw	16383
  5228                           
  5229                           ;Config register IDLOC2 @ 0x8002
  5230                           ;	unspecified, using default values
  5231  8002                     	org	32770
  5232  8002  3FFF               	dw	16383
  5233                           
  5234                           ;Config register IDLOC3 @ 0x8003
  5235                           ;	unspecified, using default values
  5236  8003                     	org	32771
  5237  8003  3FFF               	dw	16383
  5238                           
  5239                           	psect	config
  5240                           
  5241                           ;Config register CONFIG1 @ 0x8007
  5242                           ;	External Oscillator mode selection bits
  5243                           ;	FEXTOSC = OFF, Oscillator not enabled
  5244                           ;	Power-up default value for COSC bits
  5245                           ;	RSTOSC = HFINT32, HFINTOSC with OSCFRQ= 32 MHz and CDIV = 1:1
  5246                           ;	Clock Out Enable bit
  5247                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
  5248                           ;	Clock Switch Enable bit
  5249                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  5250                           ;	Fail-Safe Clock Monitor Enable bit
  5251                           ;	FCMEN = ON, FSCM timer enabled
  5252  8007                     	org	32775
  5253  8007  3F8C               	dw	16268
  5254                           
  5255                           ;Config register CONFIG2 @ 0x8008
  5256                           ;	Master Clear Enable bit
  5257                           ;	MCLRE = ON, MCLR pin is Master Clear function
  5258                           ;	Power-up Timer Enable bit
  5259                           ;	PWRTE = OFF, PWRT disabled
  5260                           ;	Low-Power BOR enable bit
  5261                           ;	LPBOREN = OFF, ULPBOR disabled
  5262                           ;	Brown-out reset enable bits
  5263                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  5264                           ;	Brown-out Reset Voltage Selection
  5265                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
  5266                           ;	Zero-cross detect disable
  5267                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
  5268                           ;	Peripheral Pin Select one-way control
  5269                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
  5270                           ;	Stack Overflow/Underflow Reset Enable bit
  5271                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  5272                           ;	Background Debugger
  5273                           ;	DEBUG = 0x1, unprogrammed default
  5274  8008                     	org	32776
  5275  8008  3FFF               	dw	16383
  5276                           
  5277                           ;Config register CONFIG3 @ 0x8009
  5278                           ;	WDT Period Select bits
  5279                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  5280                           ;	WDT operating mode
  5281                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
  5282                           ;	WDT Window Select bits
  5283                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  5284                           ;	WDT input clock selector
  5285                           ;	WDTCCS = SC, Software Control
  5286  8009                     	org	32777
  5287  8009  3F9F               	dw	16287
  5288                           
  5289                           ;Config register CONFIG4 @ 0x800A
  5290                           ;	UserNVM self-write protection bits
  5291                           ;	WRT = OFF, Write protection off
  5292                           ;	Scanner Enable bit
  5293                           ;	SCANE = available, Scanner module is available for use
  5294                           ;	Low Voltage Programming Enable bit
  5295                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
  5296  800A                     	org	32778
  5297  800A  3FFF               	dw	16383
  5298                           
  5299                           ;Config register CONFIG5 @ 0x800B
  5300                           ;	UserNVM Program memory code protection bit
  5301                           ;	CP = OFF, Program Memory code protection disabled
  5302                           ;	DataNVM code protection bit
  5303                           ;	CPD = OFF, Data EEPROM code protection disabled
  5304  800B                     	org	32779
  5305  800B  3FFF               	dw	16383

Data Sizes:
    Strings     15
    Constant    0
    Data        0
    BSS         40
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     77      79
    BANK1            80     41      79
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 32
		 -> main@buffer(BANK1[32]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), ?_sprintf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 32
		 -> main@buffer(BANK1[32]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_1(CODE[15]), main@buffer(BANK1[32]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 32
		 -> STR_1(CODE[15]), main@buffer(BANK1[32]), 

    vfpfcnvrt@vp	PTR void  size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), ?_sprintf(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 32
		 -> main@buffer(BANK1[32]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), ?_sprintf(BANK0[2]), 

    S560_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 32
		 -> main@buffer(BANK1[32]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 32
		 -> main@buffer(BANK1[32]), 


Critical Paths under _main in COMMON

    _main->_printf
    _main->_sprintf
    _serial_init->___lldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_uart_tx
    _abs->___aomod

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                36    36      0   13384
                                             75 BANK0      2     2      0
                                              7 BANK1     34    34      0
                          _port_init
                             _printf
                        _serial_init
                            _sprintf
                            _uart_rx
 ---------------------------------------------------------------------------------
 (1) _uart_rx                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             14    10      4    6523
                                             13 COMMON     1     1      0
                                             71 BANK0      4     0      4
                                              0 BANK1      7     7      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _serial_init                                         10     6      4     457
                                              0 BANK0     10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _printf                                               5     5      0    6302
                                             13 COMMON     1     1      0
                                             71 BANK0      2     2      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    6213
                                             63 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           39    37      2    5714
                                             46 BANK0     17    15      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4231
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2625
                                             12 COMMON     1     1      0
                                              7 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1193
                                             11 COMMON     1     0      1
                                              0 BANK0      7     7      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     878
                                              3 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      44
                                              2 COMMON     1     1      0
                            _uart_tx
 ---------------------------------------------------------------------------------
 (6) _uart_tx                                              2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (1) _port_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _port_init
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _uart_tx
             _fputs
               _fputc
             _strlen
         _fputc
   _serial_init
     ___lldiv
   _sprintf
     _vfprintf
   _uart_rx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4D      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     29      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      AC      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      AC      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jun 14 13:42:43 2022

                     l40 00ED                       l63 021C                       l76 0161  
                     l69 00FD                       l85 00DB                      l340 056B  
                    l341 057C                      l353 046A                      l354 047B  
                    l276 031B                      l703 0185                      l730 0286  
                    l810 0110                      l803 01AD                      l733 02A8  
                    l735 02C1                      l743 06F9                      l816 0129  
                    l744 070F                      l761 07F1                      l738 06D1  
                    l747 077E                      l739 06DB                      l780 0143  
                    l783 0143                      l768 0687                      l776 01DE  
                    l795 026B                      u800 0123                      u801 0122  
                    u810 0487                      u811 0486                      u900 054D  
                    u740 00FA                      u901 054C                      u741 00F9  
                    u830 04B2                      u750 0222                      u831 04B1  
                    u735 00F3                      u751 0221                      u920 039D  
                    u760 0227                      u921 039C                      u761 0226  
                    u850 04DC                      u770 0236                      u771 0235  
                    u860 04EC                      u940 03C8                      u780 0253  
                    u861 04EB                      u941 03C7                      u781 0252  
                    u870 04FF                      u790 01AD                      u871 04FE  
                    u791 01AC                      u880 0529                      u960 03F4  
                    u881 0528                      u961 03F3                      u785 024F  
                    u890 0548                      u970 0407                      u891 0547  
                    u971 0406                      u980 0429                      u885 0525  
                    u981 0428                      u990 0447                      u991 0446  
                    u985 0425                      _abs 012A                      _pad 026C  
                    wreg 0009             _BAUD1CONbits 011F                     l1200 00D7  
                   l1210 0236                     l1202 021D                     ?_abs 0073  
                   l1300 0447                     l1212 0253                     l1204 0222  
                   l1220 018B                     l1302 044C                     l1214 0263  
                   l1206 0227                     l1222 0199                     l1230 011B  
                   l1310 027F                     l1240 0487                     l1208 022C  
                   l1224 019E                     l1232 0123                     l1320 02AD  
                   l1312 0284                     l1304 026E                     l1400 05C6  
                   l1250 04DF                     l1242 04A8                     l1218 0188  
                   l1226 0112                     l1322 02B5                     l1314 0289  
                   l1306 0272                     l1330 068A                     l1410 0612  
                   l1402 05CE                     l1260 04FF                     l1252 04EC  
                   l1244 04B2                     l1236 047C                     l1228 0117  
                   l1316 0295                     l1308 027A                     l1340 06EB  
                   l1332 069A                     l1412 061A                     l1420 0631  
                   l1404 05E7                     l1500 0164       serial_init@baudios 0020  
                   l1262 0507                     l1254 04EF                     l1270 0548  
                   l1246 04D1                     l1238 047D                     l1326 012A  
                   l1318 029A                     l1350 0713                     l1342 06F1  
                   l1334 06AD                     l1422 0642                     l1430 065B  
                   l1414 0625                     l1502 016C                     l1272 054D  
                   l1264 0529                     l1256 04F7                     l1248 04D5  
                   l1280 03BE                     l1328 0137                     l1360 0751  
                   l1352 0716                     l1344 0701                     l1336 06B3  
                   l1424 064A                     l1416 062D                     l1408 0601  
                   l1512 0100                     l1504 016E                     l1520 0144  
                   l1266 0539                     l1258 04FB                     l1290 03FF  
                   l1282 03C8                     l1274 0392                     l1194 00EF  
                   l1362 078C                     l1370 07B9                     l1354 071B  
                   l1346 0707                     l1338 06D6                     l1426 0655  
                   l1514 0104                     l1450 02E0                     l1506 0170  
                   l1522 014F                     l1530 031C                     l1268 053A  
                   l1292 0403                     l1284 03E7                     l1276 0393  
                   l1196 00EF                     l1380 07D3                     l1372 07C0  
                   l1364 0799                     l1356 0749                     l1348 070B  
                   l1436 0664                     l1460 0306                     l1452 02E4  
                   l1444 02C2                     l1508 017D                     l1524 015A  
                   l1540 0342                     l1532 031E                     l1294 0407  
                   l1286 03F4                     l1278 039D                     l1198 00FA  
                   l1382 07D7                     l1374 07C4                     l1366 07A6  
                   l1358 074D                     l1438 067D                     l1390 0590  
                   l1470 01B4                     l1462 030D                     l1454 02EB  
                   l1446 02D2                     l1526 0160                     l1518 0144  
                   l1550 0377                     l1542 034F                     l1534 0321  
                   l1480 00E2                     l1296 0429                     l1288 03F7  
                   l1376 07C8                     l1384 07DF                     l1368 07B4  
                   l1392 0598                     l1472 01B8                     l1456 02FD  
                   l1448 02D5                     l1464 0313                     l1552 037F  
                   l1544 0361                     l1536 032D                     l1482 00E7  
                   l1298 0439                     l1378 07CE                     l1394 059E  
                   l1474 01CC                     l1458 0305                     l1490 01E5  
                   l1554 0386                     l1546 0367                     l1538 033E  
                   l1484 00E9                     l1396 05A3                     l1388 057F  
                   l1476 01D6                     l1468 01B0                     l1492 020F  
                   l1556 038B                     l1548 036B                     l1398 05B5  
                   l1494 0212                     l1486 01DF                     l1496 0216  
                   l1488 01E1                     l1498 0219                     ?_pad 0027  
                   STR_1 0800                     u1000 044C                     u1001 044B  
                   u1020 0272                     u1021 0271                     u1030 027F  
                   u1110 06D6                     u1031 027E                     u1111 06D5  
                   u1040 02A8                     u1200 07C0                     u1120 06EB  
                   u1041 02A7                     u1201 07BF                     u1121 06EA  
                   u1050 02AD                     u1210 07C4                     u1130 0707  
                   u1051 02AC                     u1211 07C3                     u1131 0706  
                   u1060 0137                     u1220 07CE                     u1140 070B  
                   u1300 02E4                     u1061 0136                     u1045 02A4  
                   u1221 07CD                     u1141 070A                     u1125 06E7  
                   u1301 02E3                     u1150 078C                     u1070 06A5  
                   u1230 0590                     u1151 078B                     u1071 06A3  
                   u1231 058F                     u1160 0799                     u1080 06A6  
                   u1240 05B5                     u1320 02FD                     u1400 015A  
                   u1065 0133                     u1161 0798                     u1241 05B4  
                   u1321 02FC                     u1401 0159                     u1170 07A6  
                   u1090 06B3                     u1250 05C6                     u1171 07A5  
                   u1155 0788                     u1091 06B2                     u1251 05C5  
                   u1315 02E5                     u1180 07B4                     u1260 0612  
                   u1340 0313                     u1420 0377                     u1181 07B3  
                   u1261 0611                     u1341 0312                     u1325 02F9  
                   u1421 0376                     _LATA 0016                     u1190 07B9  
                   u1270 0642                     u1350 01D6                     u1430 0386  
                   u1191 07B8                     u1175 07A2                     u1271 0641  
                   u1351 01D5                     u1335 0307                     u1431 0385  
                   u1415 0370                     u1280 02D2                     u1360 0207  
                   u1185 07B0                     u1281 02D1                     u1380 014F  
                   u1365 0203                     u1381 014E                     u1295 02D6  
                   u1375 0148                     u1457 0337                     u1395 0153  
                   u1467 0348                     _PIR3 070F                     abs@a 0073  
                   _dbuf 00CF                     _main 031C                     _dtoa 0688  
                   _prec 00CD                     _nout 00C9                     pad@i 002A  
                   pad@p 0028                     fsr0h 0005                     fsr1h 0007  
                   indf0 0000                     fsr0l 0004                     indf1 0001  
                   fsr1l 0006                     pad@w 002C                     btemp 007E  
                   start 0002                    ??_abs 0075                    ??_pad 007C  
        __end_of___aodiv 057D             main@contador 00C8                    ?_main 0070  
                  ?_dtoa 0030          __end_of___aomod 047C          __end_of___lldiv 031C  
                  _RCREG 0119             vfpfcnvrt@fmt 004E                    _PORTA 000C  
                  _TRISA 0011                    _TRISC 0013                    _RXPPS 0ECB  
                  _TXREG 011A                    u82lld 04A6                    u91lld 056B  
                  u84lld 04D1                    u93lld 03BC                    u95lld 03E7  
                  _flags 006D                    _fputc 021D                    _fputs 0186  
                  pad@fp 002E                    _width 00CB                    _putch 00D6  
                  dtoa@d 0030                    dtoa@i 004C                    dtoa@n 0044  
                  dtoa@p 003E                    dtoa@s 0042                    dtoa@w 0040  
        __end_of_uart_rx 0162          __end_of_uart_tx 00FE                    status 0003  
                  wtemp0 007E          __end_of_sprintf 0186          __initialization 07F2  
           __end_of_main 0392             __end_of_dtoa 07F2                   ??_main 006B  
                 ??_dtoa 0038                   ?_fputc 0073                   ?_fputs 007B  
                 _ANSELA 0F38                   ?_putch 0070                   _ANSELC 0F4E  
                 _RC0PPS 0F20                   _RC1STA 011D                   u101lld 046A  
                 u110lld 06D1                   _TX1STA 011E             ?_serial_init 0020  
           vfprintf@cfmt 0065                ??___aodiv 0070                ??___aomod 0070  
              ??___lldiv 0078                   _printf 00FE                   pad@buf 0027  
                 dtoa@fp 003D                   main@rx 00C7                   _strlen 0111  
                 fputc@c 0073                   fputs@c 0023                   fputs@i 0024  
                 fputs@s 0026                ??_uart_rx 0070                ??_uart_tx 0070  
       __end_of_vfprintf 01DF                ??_sprintf 007D  __end_of__initialization 07FD  
         __pcstackCOMMON 0070            __end_of_fputc 026C            __end_of_fputs 01AE  
          __end_of_putch 00DC                  ??_fputc 0076                  ??_fputs 0020  
                ??_putch 0072               __pbssBANK0 006D               __pbssBANK1 00C9  
             __pmaintext 031C                  ?_printf 0070                  ?_strlen 0070  
                _SP1BRGH 011C                  _SP1BRGL 011B       __size_of_vfpfcnvrt 010B  
     __size_of_port_init 000C                  ___aodiv 047C                  ___aomod 0392  
                ___lldiv 02C2                ?_vfprintf 005F     __size_of_serial_init 003E  
                __ptext1 0144                  __ptext2 0162                  __ptext3 01DF  
                __ptext4 02C2                  __ptext5 00FE                  __ptext6 01AE  
                __ptext7 057D                  __ptext8 0688                  __ptext9 026C  
        __size_of_printf 0013          __size_of_strlen 0019             __size_of_abs 001A  
           __size_of_pad 0056                  _uart_rx 0144                  _uart_tx 00EE  
                _sprintf 0162                  clrloop0 00DD     end_of_initialization 07FD  
                fputc@fp 0075                  fputs@fp 007B          ___lldiv@divisor 0070  
        ___lldiv@counter 007D        __end_of_vfpfcnvrt 0688        __end_of_port_init 00EE  
             ??_vfprintf 0062                  strlen@a 0073                  strlen@s 0074  
            uart_tx@dato 0071               main@buffer 00A7              vfpfcnvrt@ap 004F  
            vfpfcnvrt@fp 005E              vfpfcnvrt@ll 0055              vfpfcnvrt@vp 005D  
         __end_of_printf 0111           __end_of_strlen 012A      start_initialization 07F2  
            __end_of_abs 0144              __end_of_pad 02C2              vfprintf@fmt 005F  
               ??_printf 007D                 ??_strlen 0072                ___latbits 0002  
          __pcstackBANK0 0020            __pcstackBANK1 00A0         ___aodiv@dividend 0028  
               ?___aodiv 0020                 ?___aomod 0020         ___aodiv@quotient 0073  
               ?___lldiv 0070        __size_of_vfprintf 0031                 ?_uart_rx 0070  
               ?_uart_tx 0070                 ?_sprintf 0067           __size_of_fputc 004F  
         __size_of_fputs 0028           __size_of_putch 0006                clear_ram0 00DC  
          ??_serial_init 0024                _vfpfcnvrt 057D                _port_init 00E2  
          serial_init@sx 0028               vfprintf@ap 0061               vfprintf@fp 0064  
       __size_of___aodiv 0101         __size_of___aomod 00EA         __size_of___lldiv 005A  
             ?_vfpfcnvrt 004E               ?_port_init 0070      __end_of_serial_init 021D  
        ___aodiv@divisor 0020          ___aodiv@counter 0071               sprintf@fmt 0067  
               _dtoa$633 003B                 __ptext10 0111                 __ptext11 0186  
               __ptext12 021D                 __ptext13 00D6                 __ptext14 00EE  
               __ptext15 012A                 __ptext16 0392                 __ptext17 047C  
               __ptext18 00E2         __size_of_uart_rx 001E         __size_of_uart_tx 0010  
       __size_of_sprintf 0024            __size_of_main 0076            __size_of_dtoa 016A  
               _vfprintf 01AE                printf@fmt 0067         ___aomod@dividend 0028  
              putch@dato 0072                sprintf@ap 00A0         ___lldiv@dividend 0074  
            _serial_init 01DF                 printf@ap 0068          ___aomod@divisor 0020  
            ??_vfpfcnvrt 0050          ___aomod@counter 0071              ??_port_init 0070  
          __pstringtext1 0800            __pstringtext2 0000                 sprintf@f 00A2  
               sprintf@s 00A1         ___lldiv@quotient 0079             ___aodiv@sign 0072  
           ___aomod@sign 0072  
