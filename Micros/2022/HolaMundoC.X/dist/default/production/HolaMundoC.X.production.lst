

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Jun 23 12:58:18 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F18855
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    32                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 2.40
    42                           ; Generated 02/12/2021 GMT
    43                           ; 
    44                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution. Publication is not required when
    58                           ;        this file is used in an embedded application.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F18855 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  001C                     	;# 
    99  001C                     	;# 
   100  001D                     	;# 
   101  001D                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  008C                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  008E                     	;# 
   109  008F                     	;# 
   110  0090                     	;# 
   111  0090                     	;# 
   112  0091                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0110                     	;# 
   131  0110                     	;# 
   132  0111                     	;# 
   133  0112                     	;# 
   134  0112                     	;# 
   135  0113                     	;# 
   136  0114                     	;# 
   137  0114                     	;# 
   138  0115                     	;# 
   139  0116                     	;# 
   140  0116                     	;# 
   141  0117                     	;# 
   142  0119                     	;# 
   143  0119                     	;# 
   144  0119                     	;# 
   145  011A                     	;# 
   146  011A                     	;# 
   147  011A                     	;# 
   148  011B                     	;# 
   149  011B                     	;# 
   150  011B                     	;# 
   151  011B                     	;# 
   152  011B                     	;# 
   153  011C                     	;# 
   154  011C                     	;# 
   155  011C                     	;# 
   156  011D                     	;# 
   157  011D                     	;# 
   158  011D                     	;# 
   159  011E                     	;# 
   160  011E                     	;# 
   161  011E                     	;# 
   162  011F                     	;# 
   163  011F                     	;# 
   164  011F                     	;# 
   165  011F                     	;# 
   166  011F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  018E                     	;# 
   170  018F                     	;# 
   171  0190                     	;# 
   172  0191                     	;# 
   173  0192                     	;# 
   174  0196                     	;# 
   175  0197                     	;# 
   176  0198                     	;# 
   177  0199                     	;# 
   178  019A                     	;# 
   179  019B                     	;# 
   180  019C                     	;# 
   181  020C                     	;# 
   182  020C                     	;# 
   183  020D                     	;# 
   184  020E                     	;# 
   185  020F                     	;# 
   186  020F                     	;# 
   187  0210                     	;# 
   188  0210                     	;# 
   189  0211                     	;# 
   190  0211                     	;# 
   191  0212                     	;# 
   192  0212                     	;# 
   193  0213                     	;# 
   194  0214                     	;# 
   195  0215                     	;# 
   196  0215                     	;# 
   197  0216                     	;# 
   198  0216                     	;# 
   199  0217                     	;# 
   200  0217                     	;# 
   201  0218                     	;# 
   202  0218                     	;# 
   203  0219                     	;# 
   204  021A                     	;# 
   205  021B                     	;# 
   206  021B                     	;# 
   207  021C                     	;# 
   208  021C                     	;# 
   209  021D                     	;# 
   210  021D                     	;# 
   211  021E                     	;# 
   212  021F                     	;# 
   213  028C                     	;# 
   214  028C                     	;# 
   215  028D                     	;# 
   216  028D                     	;# 
   217  028E                     	;# 
   218  028F                     	;# 
   219  0290                     	;# 
   220  0290                     	;# 
   221  0291                     	;# 
   222  0292                     	;# 
   223  0292                     	;# 
   224  0293                     	;# 
   225  0293                     	;# 
   226  0294                     	;# 
   227  0295                     	;# 
   228  0296                     	;# 
   229  0296                     	;# 
   230  0297                     	;# 
   231  0298                     	;# 
   232  0298                     	;# 
   233  0299                     	;# 
   234  0299                     	;# 
   235  029A                     	;# 
   236  029B                     	;# 
   237  029C                     	;# 
   238  029C                     	;# 
   239  029D                     	;# 
   240  030C                     	;# 
   241  030C                     	;# 
   242  030D                     	;# 
   243  030E                     	;# 
   244  030F                     	;# 
   245  0310                     	;# 
   246  0310                     	;# 
   247  0311                     	;# 
   248  0312                     	;# 
   249  0313                     	;# 
   250  0314                     	;# 
   251  0314                     	;# 
   252  0315                     	;# 
   253  0316                     	;# 
   254  0317                     	;# 
   255  0318                     	;# 
   256  0318                     	;# 
   257  0319                     	;# 
   258  031A                     	;# 
   259  031B                     	;# 
   260  031C                     	;# 
   261  031C                     	;# 
   262  031D                     	;# 
   263  031E                     	;# 
   264  031F                     	;# 
   265  038C                     	;# 
   266  038C                     	;# 
   267  038D                     	;# 
   268  038E                     	;# 
   269  0390                     	;# 
   270  0390                     	;# 
   271  0391                     	;# 
   272  0392                     	;# 
   273  040C                     	;# 
   274  040D                     	;# 
   275  040E                     	;# 
   276  040F                     	;# 
   277  0410                     	;# 
   278  0411                     	;# 
   279  0416                     	;# 
   280  0416                     	;# 
   281  0417                     	;# 
   282  0418                     	;# 
   283  0418                     	;# 
   284  0419                     	;# 
   285  041A                     	;# 
   286  041A                     	;# 
   287  041B                     	;# 
   288  041C                     	;# 
   289  041C                     	;# 
   290  041D                     	;# 
   291  041E                     	;# 
   292  041F                     	;# 
   293  048C                     	;# 
   294  048C                     	;# 
   295  048D                     	;# 
   296  048E                     	;# 
   297  048F                     	;# 
   298  048F                     	;# 
   299  0490                     	;# 
   300  0491                     	;# 
   301  0492                     	;# 
   302  0492                     	;# 
   303  0493                     	;# 
   304  0494                     	;# 
   305  0495                     	;# 
   306  0495                     	;# 
   307  0496                     	;# 
   308  0497                     	;# 
   309  0498                     	;# 
   310  0499                     	;# 
   311  049A                     	;# 
   312  049B                     	;# 
   313  049C                     	;# 
   314  049D                     	;# 
   315  050C                     	;# 
   316  050C                     	;# 
   317  050D                     	;# 
   318  050E                     	;# 
   319  050F                     	;# 
   320  050F                     	;# 
   321  0510                     	;# 
   322  0511                     	;# 
   323  0512                     	;# 
   324  0512                     	;# 
   325  0513                     	;# 
   326  0514                     	;# 
   327  0515                     	;# 
   328  0515                     	;# 
   329  0516                     	;# 
   330  0517                     	;# 
   331  0518                     	;# 
   332  0519                     	;# 
   333  051A                     	;# 
   334  051B                     	;# 
   335  051C                     	;# 
   336  051D                     	;# 
   337  058C                     	;# 
   338  058C                     	;# 
   339  058D                     	;# 
   340  058E                     	;# 
   341  058F                     	;# 
   342  058F                     	;# 
   343  0590                     	;# 
   344  0591                     	;# 
   345  0592                     	;# 
   346  0593                     	;# 
   347  060C                     	;# 
   348  060D                     	;# 
   349  060E                     	;# 
   350  060F                     	;# 
   351  0610                     	;# 
   352  0611                     	;# 
   353  0612                     	;# 
   354  0613                     	;# 
   355  0614                     	;# 
   356  0616                     	;# 
   357  0617                     	;# 
   358  0618                     	;# 
   359  0619                     	;# 
   360  061A                     	;# 
   361  061B                     	;# 
   362  061C                     	;# 
   363  061D                     	;# 
   364  061E                     	;# 
   365  068C                     	;# 
   366  068D                     	;# 
   367  068E                     	;# 
   368  068F                     	;# 
   369  0690                     	;# 
   370  0691                     	;# 
   371  0692                     	;# 
   372  0693                     	;# 
   373  0694                     	;# 
   374  070C                     	;# 
   375  070D                     	;# 
   376  070E                     	;# 
   377  070F                     	;# 
   378  0710                     	;# 
   379  0711                     	;# 
   380  0712                     	;# 
   381  0713                     	;# 
   382  0714                     	;# 
   383  0716                     	;# 
   384  0717                     	;# 
   385  0718                     	;# 
   386  0719                     	;# 
   387  071A                     	;# 
   388  071B                     	;# 
   389  071C                     	;# 
   390  071D                     	;# 
   391  071E                     	;# 
   392  0796                     	;# 
   393  0797                     	;# 
   394  0798                     	;# 
   395  0799                     	;# 
   396  079A                     	;# 
   397  079B                     	;# 
   398  080C                     	;# 
   399  080D                     	;# 
   400  080E                     	;# 
   401  080F                     	;# 
   402  0810                     	;# 
   403  0811                     	;# 
   404  0812                     	;# 
   405  0813                     	;# 
   406  0814                     	;# 
   407  081A                     	;# 
   408  081B                     	;# 
   409  081C                     	;# 
   410  081D                     	;# 
   411  081E                     	;# 
   412  081F                     	;# 
   413  088C                     	;# 
   414  088D                     	;# 
   415  088E                     	;# 
   416  088F                     	;# 
   417  0890                     	;# 
   418  0891                     	;# 
   419  0892                     	;# 
   420  0893                     	;# 
   421  0895                     	;# 
   422  0896                     	;# 
   423  0897                     	;# 
   424  0898                     	;# 
   425  0899                     	;# 
   426  089A                     	;# 
   427  089B                     	;# 
   428  090C                     	;# 
   429  090E                     	;# 
   430  090F                     	;# 
   431  091F                     	;# 
   432  091F                     	;# 
   433  098F                     	;# 
   434  098F                     	;# 
   435  0990                     	;# 
   436  0991                     	;# 
   437  0992                     	;# 
   438  0993                     	;# 
   439  0994                     	;# 
   440  0995                     	;# 
   441  0996                     	;# 
   442  0997                     	;# 
   443  0E0F                     	;# 
   444  0E10                     	;# 
   445  0E11                     	;# 
   446  0E12                     	;# 
   447  0E13                     	;# 
   448  0E14                     	;# 
   449  0E15                     	;# 
   450  0E16                     	;# 
   451  0E17                     	;# 
   452  0E18                     	;# 
   453  0E19                     	;# 
   454  0E1A                     	;# 
   455  0E1B                     	;# 
   456  0E1C                     	;# 
   457  0E1D                     	;# 
   458  0E1E                     	;# 
   459  0E1F                     	;# 
   460  0E20                     	;# 
   461  0E21                     	;# 
   462  0E22                     	;# 
   463  0E23                     	;# 
   464  0E24                     	;# 
   465  0E25                     	;# 
   466  0E26                     	;# 
   467  0E27                     	;# 
   468  0E28                     	;# 
   469  0E29                     	;# 
   470  0E2A                     	;# 
   471  0E2B                     	;# 
   472  0E2C                     	;# 
   473  0E2D                     	;# 
   474  0E2E                     	;# 
   475  0E2F                     	;# 
   476  0E30                     	;# 
   477  0E31                     	;# 
   478  0E32                     	;# 
   479  0E33                     	;# 
   480  0E34                     	;# 
   481  0E35                     	;# 
   482  0E36                     	;# 
   483  0E37                     	;# 
   484  0E8F                     	;# 
   485  0E90                     	;# 
   486  0E91                     	;# 
   487  0E92                     	;# 
   488  0E93                     	;# 
   489  0E94                     	;# 
   490  0E95                     	;# 
   491  0E96                     	;# 
   492  0E97                     	;# 
   493  0E9C                     	;# 
   494  0E9D                     	;# 
   495  0E9E                     	;# 
   496  0EA1                     	;# 
   497  0EA2                     	;# 
   498  0EA3                     	;# 
   499  0EA4                     	;# 
   500  0EA5                     	;# 
   501  0EA9                     	;# 
   502  0EAA                     	;# 
   503  0EAB                     	;# 
   504  0EAC                     	;# 
   505  0EB1                     	;# 
   506  0EB2                     	;# 
   507  0EB3                     	;# 
   508  0EB8                     	;# 
   509  0EB9                     	;# 
   510  0EBA                     	;# 
   511  0EBB                     	;# 
   512  0EBC                     	;# 
   513  0EBD                     	;# 
   514  0EBE                     	;# 
   515  0EC3                     	;# 
   516  0EC5                     	;# 
   517  0EC6                     	;# 
   518  0EC7                     	;# 
   519  0EC8                     	;# 
   520  0EC9                     	;# 
   521  0ECA                     	;# 
   522  0ECB                     	;# 
   523  0ECC                     	;# 
   524  0F10                     	;# 
   525  0F11                     	;# 
   526  0F12                     	;# 
   527  0F13                     	;# 
   528  0F14                     	;# 
   529  0F15                     	;# 
   530  0F16                     	;# 
   531  0F17                     	;# 
   532  0F18                     	;# 
   533  0F19                     	;# 
   534  0F1A                     	;# 
   535  0F1B                     	;# 
   536  0F1C                     	;# 
   537  0F1D                     	;# 
   538  0F1E                     	;# 
   539  0F1F                     	;# 
   540  0F20                     	;# 
   541  0F21                     	;# 
   542  0F22                     	;# 
   543  0F23                     	;# 
   544  0F24                     	;# 
   545  0F25                     	;# 
   546  0F26                     	;# 
   547  0F27                     	;# 
   548  0F38                     	;# 
   549  0F39                     	;# 
   550  0F3A                     	;# 
   551  0F3B                     	;# 
   552  0F3C                     	;# 
   553  0F3D                     	;# 
   554  0F3E                     	;# 
   555  0F3F                     	;# 
   556  0F40                     	;# 
   557  0F41                     	;# 
   558  0F43                     	;# 
   559  0F44                     	;# 
   560  0F45                     	;# 
   561  0F46                     	;# 
   562  0F47                     	;# 
   563  0F48                     	;# 
   564  0F49                     	;# 
   565  0F4A                     	;# 
   566  0F4B                     	;# 
   567  0F4C                     	;# 
   568  0F4E                     	;# 
   569  0F4F                     	;# 
   570  0F50                     	;# 
   571  0F51                     	;# 
   572  0F52                     	;# 
   573  0F53                     	;# 
   574  0F54                     	;# 
   575  0F55                     	;# 
   576  0F56                     	;# 
   577  0F57                     	;# 
   578  0F65                     	;# 
   579  0F68                     	;# 
   580  0F69                     	;# 
   581  0F6A                     	;# 
   582  0F6B                     	;# 
   583  0FE4                     	;# 
   584  0FE5                     	;# 
   585  0FE6                     	;# 
   586  0FE7                     	;# 
   587  0FE8                     	;# 
   588  0FE9                     	;# 
   589  0FEA                     	;# 
   590  0FEB                     	;# 
   591  0FED                     	;# 
   592  0FEE                     	;# 
   593  0FEF                     	;# 
   594  0000                     	;# 
   595  0001                     	;# 
   596  0002                     	;# 
   597  0003                     	;# 
   598  0004                     	;# 
   599  0005                     	;# 
   600  0006                     	;# 
   601  0007                     	;# 
   602  0008                     	;# 
   603  0009                     	;# 
   604  000A                     	;# 
   605  000B                     	;# 
   606  000C                     	;# 
   607  000D                     	;# 
   608  000E                     	;# 
   609  0010                     	;# 
   610  0011                     	;# 
   611  0012                     	;# 
   612  0013                     	;# 
   613  0016                     	;# 
   614  0017                     	;# 
   615  0018                     	;# 
   616  001C                     	;# 
   617  001C                     	;# 
   618  001D                     	;# 
   619  001D                     	;# 
   620  001E                     	;# 
   621  001F                     	;# 
   622  008C                     	;# 
   623  008C                     	;# 
   624  008D                     	;# 
   625  008E                     	;# 
   626  008E                     	;# 
   627  008F                     	;# 
   628  0090                     	;# 
   629  0090                     	;# 
   630  0091                     	;# 
   631  0093                     	;# 
   632  0094                     	;# 
   633  0095                     	;# 
   634  0096                     	;# 
   635  0097                     	;# 
   636  0098                     	;# 
   637  0099                     	;# 
   638  009A                     	;# 
   639  009B                     	;# 
   640  009C                     	;# 
   641  009D                     	;# 
   642  009E                     	;# 
   643  010C                     	;# 
   644  010D                     	;# 
   645  010E                     	;# 
   646  010E                     	;# 
   647  010F                     	;# 
   648  0110                     	;# 
   649  0110                     	;# 
   650  0111                     	;# 
   651  0112                     	;# 
   652  0112                     	;# 
   653  0113                     	;# 
   654  0114                     	;# 
   655  0114                     	;# 
   656  0115                     	;# 
   657  0116                     	;# 
   658  0116                     	;# 
   659  0117                     	;# 
   660  0119                     	;# 
   661  0119                     	;# 
   662  0119                     	;# 
   663  011A                     	;# 
   664  011A                     	;# 
   665  011A                     	;# 
   666  011B                     	;# 
   667  011B                     	;# 
   668  011B                     	;# 
   669  011B                     	;# 
   670  011B                     	;# 
   671  011C                     	;# 
   672  011C                     	;# 
   673  011C                     	;# 
   674  011D                     	;# 
   675  011D                     	;# 
   676  011D                     	;# 
   677  011E                     	;# 
   678  011E                     	;# 
   679  011E                     	;# 
   680  011F                     	;# 
   681  011F                     	;# 
   682  011F                     	;# 
   683  011F                     	;# 
   684  011F                     	;# 
   685  018C                     	;# 
   686  018D                     	;# 
   687  018E                     	;# 
   688  018F                     	;# 
   689  0190                     	;# 
   690  0191                     	;# 
   691  0192                     	;# 
   692  0196                     	;# 
   693  0197                     	;# 
   694  0198                     	;# 
   695  0199                     	;# 
   696  019A                     	;# 
   697  019B                     	;# 
   698  019C                     	;# 
   699  020C                     	;# 
   700  020C                     	;# 
   701  020D                     	;# 
   702  020E                     	;# 
   703  020F                     	;# 
   704  020F                     	;# 
   705  0210                     	;# 
   706  0210                     	;# 
   707  0211                     	;# 
   708  0211                     	;# 
   709  0212                     	;# 
   710  0212                     	;# 
   711  0213                     	;# 
   712  0214                     	;# 
   713  0215                     	;# 
   714  0215                     	;# 
   715  0216                     	;# 
   716  0216                     	;# 
   717  0217                     	;# 
   718  0217                     	;# 
   719  0218                     	;# 
   720  0218                     	;# 
   721  0219                     	;# 
   722  021A                     	;# 
   723  021B                     	;# 
   724  021B                     	;# 
   725  021C                     	;# 
   726  021C                     	;# 
   727  021D                     	;# 
   728  021D                     	;# 
   729  021E                     	;# 
   730  021F                     	;# 
   731  028C                     	;# 
   732  028C                     	;# 
   733  028D                     	;# 
   734  028D                     	;# 
   735  028E                     	;# 
   736  028F                     	;# 
   737  0290                     	;# 
   738  0290                     	;# 
   739  0291                     	;# 
   740  0292                     	;# 
   741  0292                     	;# 
   742  0293                     	;# 
   743  0293                     	;# 
   744  0294                     	;# 
   745  0295                     	;# 
   746  0296                     	;# 
   747  0296                     	;# 
   748  0297                     	;# 
   749  0298                     	;# 
   750  0298                     	;# 
   751  0299                     	;# 
   752  0299                     	;# 
   753  029A                     	;# 
   754  029B                     	;# 
   755  029C                     	;# 
   756  029C                     	;# 
   757  029D                     	;# 
   758  030C                     	;# 
   759  030C                     	;# 
   760  030D                     	;# 
   761  030E                     	;# 
   762  030F                     	;# 
   763  0310                     	;# 
   764  0310                     	;# 
   765  0311                     	;# 
   766  0312                     	;# 
   767  0313                     	;# 
   768  0314                     	;# 
   769  0314                     	;# 
   770  0315                     	;# 
   771  0316                     	;# 
   772  0317                     	;# 
   773  0318                     	;# 
   774  0318                     	;# 
   775  0319                     	;# 
   776  031A                     	;# 
   777  031B                     	;# 
   778  031C                     	;# 
   779  031C                     	;# 
   780  031D                     	;# 
   781  031E                     	;# 
   782  031F                     	;# 
   783  038C                     	;# 
   784  038C                     	;# 
   785  038D                     	;# 
   786  038E                     	;# 
   787  0390                     	;# 
   788  0390                     	;# 
   789  0391                     	;# 
   790  0392                     	;# 
   791  040C                     	;# 
   792  040D                     	;# 
   793  040E                     	;# 
   794  040F                     	;# 
   795  0410                     	;# 
   796  0411                     	;# 
   797  0416                     	;# 
   798  0416                     	;# 
   799  0417                     	;# 
   800  0418                     	;# 
   801  0418                     	;# 
   802  0419                     	;# 
   803  041A                     	;# 
   804  041A                     	;# 
   805  041B                     	;# 
   806  041C                     	;# 
   807  041C                     	;# 
   808  041D                     	;# 
   809  041E                     	;# 
   810  041F                     	;# 
   811  048C                     	;# 
   812  048C                     	;# 
   813  048D                     	;# 
   814  048E                     	;# 
   815  048F                     	;# 
   816  048F                     	;# 
   817  0490                     	;# 
   818  0491                     	;# 
   819  0492                     	;# 
   820  0492                     	;# 
   821  0493                     	;# 
   822  0494                     	;# 
   823  0495                     	;# 
   824  0495                     	;# 
   825  0496                     	;# 
   826  0497                     	;# 
   827  0498                     	;# 
   828  0499                     	;# 
   829  049A                     	;# 
   830  049B                     	;# 
   831  049C                     	;# 
   832  049D                     	;# 
   833  050C                     	;# 
   834  050C                     	;# 
   835  050D                     	;# 
   836  050E                     	;# 
   837  050F                     	;# 
   838  050F                     	;# 
   839  0510                     	;# 
   840  0511                     	;# 
   841  0512                     	;# 
   842  0512                     	;# 
   843  0513                     	;# 
   844  0514                     	;# 
   845  0515                     	;# 
   846  0515                     	;# 
   847  0516                     	;# 
   848  0517                     	;# 
   849  0518                     	;# 
   850  0519                     	;# 
   851  051A                     	;# 
   852  051B                     	;# 
   853  051C                     	;# 
   854  051D                     	;# 
   855  058C                     	;# 
   856  058C                     	;# 
   857  058D                     	;# 
   858  058E                     	;# 
   859  058F                     	;# 
   860  058F                     	;# 
   861  0590                     	;# 
   862  0591                     	;# 
   863  0592                     	;# 
   864  0593                     	;# 
   865  060C                     	;# 
   866  060D                     	;# 
   867  060E                     	;# 
   868  060F                     	;# 
   869  0610                     	;# 
   870  0611                     	;# 
   871  0612                     	;# 
   872  0613                     	;# 
   873  0614                     	;# 
   874  0616                     	;# 
   875  0617                     	;# 
   876  0618                     	;# 
   877  0619                     	;# 
   878  061A                     	;# 
   879  061B                     	;# 
   880  061C                     	;# 
   881  061D                     	;# 
   882  061E                     	;# 
   883  068C                     	;# 
   884  068D                     	;# 
   885  068E                     	;# 
   886  068F                     	;# 
   887  0690                     	;# 
   888  0691                     	;# 
   889  0692                     	;# 
   890  0693                     	;# 
   891  0694                     	;# 
   892  070C                     	;# 
   893  070D                     	;# 
   894  070E                     	;# 
   895  070F                     	;# 
   896  0710                     	;# 
   897  0711                     	;# 
   898  0712                     	;# 
   899  0713                     	;# 
   900  0714                     	;# 
   901  0716                     	;# 
   902  0717                     	;# 
   903  0718                     	;# 
   904  0719                     	;# 
   905  071A                     	;# 
   906  071B                     	;# 
   907  071C                     	;# 
   908  071D                     	;# 
   909  071E                     	;# 
   910  0796                     	;# 
   911  0797                     	;# 
   912  0798                     	;# 
   913  0799                     	;# 
   914  079A                     	;# 
   915  079B                     	;# 
   916  080C                     	;# 
   917  080D                     	;# 
   918  080E                     	;# 
   919  080F                     	;# 
   920  0810                     	;# 
   921  0811                     	;# 
   922  0812                     	;# 
   923  0813                     	;# 
   924  0814                     	;# 
   925  081A                     	;# 
   926  081B                     	;# 
   927  081C                     	;# 
   928  081D                     	;# 
   929  081E                     	;# 
   930  081F                     	;# 
   931  088C                     	;# 
   932  088D                     	;# 
   933  088E                     	;# 
   934  088F                     	;# 
   935  0890                     	;# 
   936  0891                     	;# 
   937  0892                     	;# 
   938  0893                     	;# 
   939  0895                     	;# 
   940  0896                     	;# 
   941  0897                     	;# 
   942  0898                     	;# 
   943  0899                     	;# 
   944  089A                     	;# 
   945  089B                     	;# 
   946  090C                     	;# 
   947  090E                     	;# 
   948  090F                     	;# 
   949  091F                     	;# 
   950  091F                     	;# 
   951  098F                     	;# 
   952  098F                     	;# 
   953  0990                     	;# 
   954  0991                     	;# 
   955  0992                     	;# 
   956  0993                     	;# 
   957  0994                     	;# 
   958  0995                     	;# 
   959  0996                     	;# 
   960  0997                     	;# 
   961  0E0F                     	;# 
   962  0E10                     	;# 
   963  0E11                     	;# 
   964  0E12                     	;# 
   965  0E13                     	;# 
   966  0E14                     	;# 
   967  0E15                     	;# 
   968  0E16                     	;# 
   969  0E17                     	;# 
   970  0E18                     	;# 
   971  0E19                     	;# 
   972  0E1A                     	;# 
   973  0E1B                     	;# 
   974  0E1C                     	;# 
   975  0E1D                     	;# 
   976  0E1E                     	;# 
   977  0E1F                     	;# 
   978  0E20                     	;# 
   979  0E21                     	;# 
   980  0E22                     	;# 
   981  0E23                     	;# 
   982  0E24                     	;# 
   983  0E25                     	;# 
   984  0E26                     	;# 
   985  0E27                     	;# 
   986  0E28                     	;# 
   987  0E29                     	;# 
   988  0E2A                     	;# 
   989  0E2B                     	;# 
   990  0E2C                     	;# 
   991  0E2D                     	;# 
   992  0E2E                     	;# 
   993  0E2F                     	;# 
   994  0E30                     	;# 
   995  0E31                     	;# 
   996  0E32                     	;# 
   997  0E33                     	;# 
   998  0E34                     	;# 
   999  0E35                     	;# 
  1000  0E36                     	;# 
  1001  0E37                     	;# 
  1002  0E8F                     	;# 
  1003  0E90                     	;# 
  1004  0E91                     	;# 
  1005  0E92                     	;# 
  1006  0E93                     	;# 
  1007  0E94                     	;# 
  1008  0E95                     	;# 
  1009  0E96                     	;# 
  1010  0E97                     	;# 
  1011  0E9C                     	;# 
  1012  0E9D                     	;# 
  1013  0E9E                     	;# 
  1014  0EA1                     	;# 
  1015  0EA2                     	;# 
  1016  0EA3                     	;# 
  1017  0EA4                     	;# 
  1018  0EA5                     	;# 
  1019  0EA9                     	;# 
  1020  0EAA                     	;# 
  1021  0EAB                     	;# 
  1022  0EAC                     	;# 
  1023  0EB1                     	;# 
  1024  0EB2                     	;# 
  1025  0EB3                     	;# 
  1026  0EB8                     	;# 
  1027  0EB9                     	;# 
  1028  0EBA                     	;# 
  1029  0EBB                     	;# 
  1030  0EBC                     	;# 
  1031  0EBD                     	;# 
  1032  0EBE                     	;# 
  1033  0EC3                     	;# 
  1034  0EC5                     	;# 
  1035  0EC6                     	;# 
  1036  0EC7                     	;# 
  1037  0EC8                     	;# 
  1038  0EC9                     	;# 
  1039  0ECA                     	;# 
  1040  0ECB                     	;# 
  1041  0ECC                     	;# 
  1042  0F10                     	;# 
  1043  0F11                     	;# 
  1044  0F12                     	;# 
  1045  0F13                     	;# 
  1046  0F14                     	;# 
  1047  0F15                     	;# 
  1048  0F16                     	;# 
  1049  0F17                     	;# 
  1050  0F18                     	;# 
  1051  0F19                     	;# 
  1052  0F1A                     	;# 
  1053  0F1B                     	;# 
  1054  0F1C                     	;# 
  1055  0F1D                     	;# 
  1056  0F1E                     	;# 
  1057  0F1F                     	;# 
  1058  0F20                     	;# 
  1059  0F21                     	;# 
  1060  0F22                     	;# 
  1061  0F23                     	;# 
  1062  0F24                     	;# 
  1063  0F25                     	;# 
  1064  0F26                     	;# 
  1065  0F27                     	;# 
  1066  0F38                     	;# 
  1067  0F39                     	;# 
  1068  0F3A                     	;# 
  1069  0F3B                     	;# 
  1070  0F3C                     	;# 
  1071  0F3D                     	;# 
  1072  0F3E                     	;# 
  1073  0F3F                     	;# 
  1074  0F40                     	;# 
  1075  0F41                     	;# 
  1076  0F43                     	;# 
  1077  0F44                     	;# 
  1078  0F45                     	;# 
  1079  0F46                     	;# 
  1080  0F47                     	;# 
  1081  0F48                     	;# 
  1082  0F49                     	;# 
  1083  0F4A                     	;# 
  1084  0F4B                     	;# 
  1085  0F4C                     	;# 
  1086  0F4E                     	;# 
  1087  0F4F                     	;# 
  1088  0F50                     	;# 
  1089  0F51                     	;# 
  1090  0F52                     	;# 
  1091  0F53                     	;# 
  1092  0F54                     	;# 
  1093  0F55                     	;# 
  1094  0F56                     	;# 
  1095  0F57                     	;# 
  1096  0F65                     	;# 
  1097  0F68                     	;# 
  1098  0F69                     	;# 
  1099  0F6A                     	;# 
  1100  0F6B                     	;# 
  1101  0FE4                     	;# 
  1102  0FE5                     	;# 
  1103  0FE6                     	;# 
  1104  0FE7                     	;# 
  1105  0FE8                     	;# 
  1106  0FE9                     	;# 
  1107  0FEA                     	;# 
  1108  0FEB                     	;# 
  1109  0FED                     	;# 
  1110  0FEE                     	;# 
  1111  0FEF                     	;# 
  1112  0000                     	;# 
  1113  0001                     	;# 
  1114  0002                     	;# 
  1115  0003                     	;# 
  1116  0004                     	;# 
  1117  0005                     	;# 
  1118  0006                     	;# 
  1119  0007                     	;# 
  1120  0008                     	;# 
  1121  0009                     	;# 
  1122  000A                     	;# 
  1123  000B                     	;# 
  1124  000C                     	;# 
  1125  000D                     	;# 
  1126  000E                     	;# 
  1127  0010                     	;# 
  1128  0011                     	;# 
  1129  0012                     	;# 
  1130  0013                     	;# 
  1131  0016                     	;# 
  1132  0017                     	;# 
  1133  0018                     	;# 
  1134  001C                     	;# 
  1135  001C                     	;# 
  1136  001D                     	;# 
  1137  001D                     	;# 
  1138  001E                     	;# 
  1139  001F                     	;# 
  1140  008C                     	;# 
  1141  008C                     	;# 
  1142  008D                     	;# 
  1143  008E                     	;# 
  1144  008E                     	;# 
  1145  008F                     	;# 
  1146  0090                     	;# 
  1147  0090                     	;# 
  1148  0091                     	;# 
  1149  0093                     	;# 
  1150  0094                     	;# 
  1151  0095                     	;# 
  1152  0096                     	;# 
  1153  0097                     	;# 
  1154  0098                     	;# 
  1155  0099                     	;# 
  1156  009A                     	;# 
  1157  009B                     	;# 
  1158  009C                     	;# 
  1159  009D                     	;# 
  1160  009E                     	;# 
  1161  010C                     	;# 
  1162  010D                     	;# 
  1163  010E                     	;# 
  1164  010E                     	;# 
  1165  010F                     	;# 
  1166  0110                     	;# 
  1167  0110                     	;# 
  1168  0111                     	;# 
  1169  0112                     	;# 
  1170  0112                     	;# 
  1171  0113                     	;# 
  1172  0114                     	;# 
  1173  0114                     	;# 
  1174  0115                     	;# 
  1175  0116                     	;# 
  1176  0116                     	;# 
  1177  0117                     	;# 
  1178  0119                     	;# 
  1179  0119                     	;# 
  1180  0119                     	;# 
  1181  011A                     	;# 
  1182  011A                     	;# 
  1183  011A                     	;# 
  1184  011B                     	;# 
  1185  011B                     	;# 
  1186  011B                     	;# 
  1187  011B                     	;# 
  1188  011B                     	;# 
  1189  011C                     	;# 
  1190  011C                     	;# 
  1191  011C                     	;# 
  1192  011D                     	;# 
  1193  011D                     	;# 
  1194  011D                     	;# 
  1195  011E                     	;# 
  1196  011E                     	;# 
  1197  011E                     	;# 
  1198  011F                     	;# 
  1199  011F                     	;# 
  1200  011F                     	;# 
  1201  011F                     	;# 
  1202  011F                     	;# 
  1203  018C                     	;# 
  1204  018D                     	;# 
  1205  018E                     	;# 
  1206  018F                     	;# 
  1207  0190                     	;# 
  1208  0191                     	;# 
  1209  0192                     	;# 
  1210  0196                     	;# 
  1211  0197                     	;# 
  1212  0198                     	;# 
  1213  0199                     	;# 
  1214  019A                     	;# 
  1215  019B                     	;# 
  1216  019C                     	;# 
  1217  020C                     	;# 
  1218  020C                     	;# 
  1219  020D                     	;# 
  1220  020E                     	;# 
  1221  020F                     	;# 
  1222  020F                     	;# 
  1223  0210                     	;# 
  1224  0210                     	;# 
  1225  0211                     	;# 
  1226  0211                     	;# 
  1227  0212                     	;# 
  1228  0212                     	;# 
  1229  0213                     	;# 
  1230  0214                     	;# 
  1231  0215                     	;# 
  1232  0215                     	;# 
  1233  0216                     	;# 
  1234  0216                     	;# 
  1235  0217                     	;# 
  1236  0217                     	;# 
  1237  0218                     	;# 
  1238  0218                     	;# 
  1239  0219                     	;# 
  1240  021A                     	;# 
  1241  021B                     	;# 
  1242  021B                     	;# 
  1243  021C                     	;# 
  1244  021C                     	;# 
  1245  021D                     	;# 
  1246  021D                     	;# 
  1247  021E                     	;# 
  1248  021F                     	;# 
  1249  028C                     	;# 
  1250  028C                     	;# 
  1251  028D                     	;# 
  1252  028D                     	;# 
  1253  028E                     	;# 
  1254  028F                     	;# 
  1255  0290                     	;# 
  1256  0290                     	;# 
  1257  0291                     	;# 
  1258  0292                     	;# 
  1259  0292                     	;# 
  1260  0293                     	;# 
  1261  0293                     	;# 
  1262  0294                     	;# 
  1263  0295                     	;# 
  1264  0296                     	;# 
  1265  0296                     	;# 
  1266  0297                     	;# 
  1267  0298                     	;# 
  1268  0298                     	;# 
  1269  0299                     	;# 
  1270  0299                     	;# 
  1271  029A                     	;# 
  1272  029B                     	;# 
  1273  029C                     	;# 
  1274  029C                     	;# 
  1275  029D                     	;# 
  1276  030C                     	;# 
  1277  030C                     	;# 
  1278  030D                     	;# 
  1279  030E                     	;# 
  1280  030F                     	;# 
  1281  0310                     	;# 
  1282  0310                     	;# 
  1283  0311                     	;# 
  1284  0312                     	;# 
  1285  0313                     	;# 
  1286  0314                     	;# 
  1287  0314                     	;# 
  1288  0315                     	;# 
  1289  0316                     	;# 
  1290  0317                     	;# 
  1291  0318                     	;# 
  1292  0318                     	;# 
  1293  0319                     	;# 
  1294  031A                     	;# 
  1295  031B                     	;# 
  1296  031C                     	;# 
  1297  031C                     	;# 
  1298  031D                     	;# 
  1299  031E                     	;# 
  1300  031F                     	;# 
  1301  038C                     	;# 
  1302  038C                     	;# 
  1303  038D                     	;# 
  1304  038E                     	;# 
  1305  0390                     	;# 
  1306  0390                     	;# 
  1307  0391                     	;# 
  1308  0392                     	;# 
  1309  040C                     	;# 
  1310  040D                     	;# 
  1311  040E                     	;# 
  1312  040F                     	;# 
  1313  0410                     	;# 
  1314  0411                     	;# 
  1315  0416                     	;# 
  1316  0416                     	;# 
  1317  0417                     	;# 
  1318  0418                     	;# 
  1319  0418                     	;# 
  1320  0419                     	;# 
  1321  041A                     	;# 
  1322  041A                     	;# 
  1323  041B                     	;# 
  1324  041C                     	;# 
  1325  041C                     	;# 
  1326  041D                     	;# 
  1327  041E                     	;# 
  1328  041F                     	;# 
  1329  048C                     	;# 
  1330  048C                     	;# 
  1331  048D                     	;# 
  1332  048E                     	;# 
  1333  048F                     	;# 
  1334  048F                     	;# 
  1335  0490                     	;# 
  1336  0491                     	;# 
  1337  0492                     	;# 
  1338  0492                     	;# 
  1339  0493                     	;# 
  1340  0494                     	;# 
  1341  0495                     	;# 
  1342  0495                     	;# 
  1343  0496                     	;# 
  1344  0497                     	;# 
  1345  0498                     	;# 
  1346  0499                     	;# 
  1347  049A                     	;# 
  1348  049B                     	;# 
  1349  049C                     	;# 
  1350  049D                     	;# 
  1351  050C                     	;# 
  1352  050C                     	;# 
  1353  050D                     	;# 
  1354  050E                     	;# 
  1355  050F                     	;# 
  1356  050F                     	;# 
  1357  0510                     	;# 
  1358  0511                     	;# 
  1359  0512                     	;# 
  1360  0512                     	;# 
  1361  0513                     	;# 
  1362  0514                     	;# 
  1363  0515                     	;# 
  1364  0515                     	;# 
  1365  0516                     	;# 
  1366  0517                     	;# 
  1367  0518                     	;# 
  1368  0519                     	;# 
  1369  051A                     	;# 
  1370  051B                     	;# 
  1371  051C                     	;# 
  1372  051D                     	;# 
  1373  058C                     	;# 
  1374  058C                     	;# 
  1375  058D                     	;# 
  1376  058E                     	;# 
  1377  058F                     	;# 
  1378  058F                     	;# 
  1379  0590                     	;# 
  1380  0591                     	;# 
  1381  0592                     	;# 
  1382  0593                     	;# 
  1383  060C                     	;# 
  1384  060D                     	;# 
  1385  060E                     	;# 
  1386  060F                     	;# 
  1387  0610                     	;# 
  1388  0611                     	;# 
  1389  0612                     	;# 
  1390  0613                     	;# 
  1391  0614                     	;# 
  1392  0616                     	;# 
  1393  0617                     	;# 
  1394  0618                     	;# 
  1395  0619                     	;# 
  1396  061A                     	;# 
  1397  061B                     	;# 
  1398  061C                     	;# 
  1399  061D                     	;# 
  1400  061E                     	;# 
  1401  068C                     	;# 
  1402  068D                     	;# 
  1403  068E                     	;# 
  1404  068F                     	;# 
  1405  0690                     	;# 
  1406  0691                     	;# 
  1407  0692                     	;# 
  1408  0693                     	;# 
  1409  0694                     	;# 
  1410  070C                     	;# 
  1411  070D                     	;# 
  1412  070E                     	;# 
  1413  070F                     	;# 
  1414  0710                     	;# 
  1415  0711                     	;# 
  1416  0712                     	;# 
  1417  0713                     	;# 
  1418  0714                     	;# 
  1419  0716                     	;# 
  1420  0717                     	;# 
  1421  0718                     	;# 
  1422  0719                     	;# 
  1423  071A                     	;# 
  1424  071B                     	;# 
  1425  071C                     	;# 
  1426  071D                     	;# 
  1427  071E                     	;# 
  1428  0796                     	;# 
  1429  0797                     	;# 
  1430  0798                     	;# 
  1431  0799                     	;# 
  1432  079A                     	;# 
  1433  079B                     	;# 
  1434  080C                     	;# 
  1435  080D                     	;# 
  1436  080E                     	;# 
  1437  080F                     	;# 
  1438  0810                     	;# 
  1439  0811                     	;# 
  1440  0812                     	;# 
  1441  0813                     	;# 
  1442  0814                     	;# 
  1443  081A                     	;# 
  1444  081B                     	;# 
  1445  081C                     	;# 
  1446  081D                     	;# 
  1447  081E                     	;# 
  1448  081F                     	;# 
  1449  088C                     	;# 
  1450  088D                     	;# 
  1451  088E                     	;# 
  1452  088F                     	;# 
  1453  0890                     	;# 
  1454  0891                     	;# 
  1455  0892                     	;# 
  1456  0893                     	;# 
  1457  0895                     	;# 
  1458  0896                     	;# 
  1459  0897                     	;# 
  1460  0898                     	;# 
  1461  0899                     	;# 
  1462  089A                     	;# 
  1463  089B                     	;# 
  1464  090C                     	;# 
  1465  090E                     	;# 
  1466  090F                     	;# 
  1467  091F                     	;# 
  1468  091F                     	;# 
  1469  098F                     	;# 
  1470  098F                     	;# 
  1471  0990                     	;# 
  1472  0991                     	;# 
  1473  0992                     	;# 
  1474  0993                     	;# 
  1475  0994                     	;# 
  1476  0995                     	;# 
  1477  0996                     	;# 
  1478  0997                     	;# 
  1479  0E0F                     	;# 
  1480  0E10                     	;# 
  1481  0E11                     	;# 
  1482  0E12                     	;# 
  1483  0E13                     	;# 
  1484  0E14                     	;# 
  1485  0E15                     	;# 
  1486  0E16                     	;# 
  1487  0E17                     	;# 
  1488  0E18                     	;# 
  1489  0E19                     	;# 
  1490  0E1A                     	;# 
  1491  0E1B                     	;# 
  1492  0E1C                     	;# 
  1493  0E1D                     	;# 
  1494  0E1E                     	;# 
  1495  0E1F                     	;# 
  1496  0E20                     	;# 
  1497  0E21                     	;# 
  1498  0E22                     	;# 
  1499  0E23                     	;# 
  1500  0E24                     	;# 
  1501  0E25                     	;# 
  1502  0E26                     	;# 
  1503  0E27                     	;# 
  1504  0E28                     	;# 
  1505  0E29                     	;# 
  1506  0E2A                     	;# 
  1507  0E2B                     	;# 
  1508  0E2C                     	;# 
  1509  0E2D                     	;# 
  1510  0E2E                     	;# 
  1511  0E2F                     	;# 
  1512  0E30                     	;# 
  1513  0E31                     	;# 
  1514  0E32                     	;# 
  1515  0E33                     	;# 
  1516  0E34                     	;# 
  1517  0E35                     	;# 
  1518  0E36                     	;# 
  1519  0E37                     	;# 
  1520  0E8F                     	;# 
  1521  0E90                     	;# 
  1522  0E91                     	;# 
  1523  0E92                     	;# 
  1524  0E93                     	;# 
  1525  0E94                     	;# 
  1526  0E95                     	;# 
  1527  0E96                     	;# 
  1528  0E97                     	;# 
  1529  0E9C                     	;# 
  1530  0E9D                     	;# 
  1531  0E9E                     	;# 
  1532  0EA1                     	;# 
  1533  0EA2                     	;# 
  1534  0EA3                     	;# 
  1535  0EA4                     	;# 
  1536  0EA5                     	;# 
  1537  0EA9                     	;# 
  1538  0EAA                     	;# 
  1539  0EAB                     	;# 
  1540  0EAC                     	;# 
  1541  0EB1                     	;# 
  1542  0EB2                     	;# 
  1543  0EB3                     	;# 
  1544  0EB8                     	;# 
  1545  0EB9                     	;# 
  1546  0EBA                     	;# 
  1547  0EBB                     	;# 
  1548  0EBC                     	;# 
  1549  0EBD                     	;# 
  1550  0EBE                     	;# 
  1551  0EC3                     	;# 
  1552  0EC5                     	;# 
  1553  0EC6                     	;# 
  1554  0EC7                     	;# 
  1555  0EC8                     	;# 
  1556  0EC9                     	;# 
  1557  0ECA                     	;# 
  1558  0ECB                     	;# 
  1559  0ECC                     	;# 
  1560  0F10                     	;# 
  1561  0F11                     	;# 
  1562  0F12                     	;# 
  1563  0F13                     	;# 
  1564  0F14                     	;# 
  1565  0F15                     	;# 
  1566  0F16                     	;# 
  1567  0F17                     	;# 
  1568  0F18                     	;# 
  1569  0F19                     	;# 
  1570  0F1A                     	;# 
  1571  0F1B                     	;# 
  1572  0F1C                     	;# 
  1573  0F1D                     	;# 
  1574  0F1E                     	;# 
  1575  0F1F                     	;# 
  1576  0F20                     	;# 
  1577  0F21                     	;# 
  1578  0F22                     	;# 
  1579  0F23                     	;# 
  1580  0F24                     	;# 
  1581  0F25                     	;# 
  1582  0F26                     	;# 
  1583  0F27                     	;# 
  1584  0F38                     	;# 
  1585  0F39                     	;# 
  1586  0F3A                     	;# 
  1587  0F3B                     	;# 
  1588  0F3C                     	;# 
  1589  0F3D                     	;# 
  1590  0F3E                     	;# 
  1591  0F3F                     	;# 
  1592  0F40                     	;# 
  1593  0F41                     	;# 
  1594  0F43                     	;# 
  1595  0F44                     	;# 
  1596  0F45                     	;# 
  1597  0F46                     	;# 
  1598  0F47                     	;# 
  1599  0F48                     	;# 
  1600  0F49                     	;# 
  1601  0F4A                     	;# 
  1602  0F4B                     	;# 
  1603  0F4C                     	;# 
  1604  0F4E                     	;# 
  1605  0F4F                     	;# 
  1606  0F50                     	;# 
  1607  0F51                     	;# 
  1608  0F52                     	;# 
  1609  0F53                     	;# 
  1610  0F54                     	;# 
  1611  0F55                     	;# 
  1612  0F56                     	;# 
  1613  0F57                     	;# 
  1614  0F65                     	;# 
  1615  0F68                     	;# 
  1616  0F69                     	;# 
  1617  0F6A                     	;# 
  1618  0F6B                     	;# 
  1619  0FE4                     	;# 
  1620  0FE5                     	;# 
  1621  0FE6                     	;# 
  1622  0FE7                     	;# 
  1623  0FE8                     	;# 
  1624  0FE9                     	;# 
  1625  0FEA                     	;# 
  1626  0FEB                     	;# 
  1627  0FED                     	;# 
  1628  0FEE                     	;# 
  1629  0FEF                     	;# 
  1630  0000                     	;# 
  1631  0001                     	;# 
  1632  0002                     	;# 
  1633  0003                     	;# 
  1634  0004                     	;# 
  1635  0005                     	;# 
  1636  0006                     	;# 
  1637  0007                     	;# 
  1638  0008                     	;# 
  1639  0009                     	;# 
  1640  000A                     	;# 
  1641  000B                     	;# 
  1642  000C                     	;# 
  1643  000D                     	;# 
  1644  000E                     	;# 
  1645  0010                     	;# 
  1646  0011                     	;# 
  1647  0012                     	;# 
  1648  0013                     	;# 
  1649  0016                     	;# 
  1650  0017                     	;# 
  1651  0018                     	;# 
  1652  001C                     	;# 
  1653  001C                     	;# 
  1654  001D                     	;# 
  1655  001D                     	;# 
  1656  001E                     	;# 
  1657  001F                     	;# 
  1658  008C                     	;# 
  1659  008C                     	;# 
  1660  008D                     	;# 
  1661  008E                     	;# 
  1662  008E                     	;# 
  1663  008F                     	;# 
  1664  0090                     	;# 
  1665  0090                     	;# 
  1666  0091                     	;# 
  1667  0093                     	;# 
  1668  0094                     	;# 
  1669  0095                     	;# 
  1670  0096                     	;# 
  1671  0097                     	;# 
  1672  0098                     	;# 
  1673  0099                     	;# 
  1674  009A                     	;# 
  1675  009B                     	;# 
  1676  009C                     	;# 
  1677  009D                     	;# 
  1678  009E                     	;# 
  1679  010C                     	;# 
  1680  010D                     	;# 
  1681  010E                     	;# 
  1682  010E                     	;# 
  1683  010F                     	;# 
  1684  0110                     	;# 
  1685  0110                     	;# 
  1686  0111                     	;# 
  1687  0112                     	;# 
  1688  0112                     	;# 
  1689  0113                     	;# 
  1690  0114                     	;# 
  1691  0114                     	;# 
  1692  0115                     	;# 
  1693  0116                     	;# 
  1694  0116                     	;# 
  1695  0117                     	;# 
  1696  0119                     	;# 
  1697  0119                     	;# 
  1698  0119                     	;# 
  1699  011A                     	;# 
  1700  011A                     	;# 
  1701  011A                     	;# 
  1702  011B                     	;# 
  1703  011B                     	;# 
  1704  011B                     	;# 
  1705  011B                     	;# 
  1706  011B                     	;# 
  1707  011C                     	;# 
  1708  011C                     	;# 
  1709  011C                     	;# 
  1710  011D                     	;# 
  1711  011D                     	;# 
  1712  011D                     	;# 
  1713  011E                     	;# 
  1714  011E                     	;# 
  1715  011E                     	;# 
  1716  011F                     	;# 
  1717  011F                     	;# 
  1718  011F                     	;# 
  1719  011F                     	;# 
  1720  011F                     	;# 
  1721  018C                     	;# 
  1722  018D                     	;# 
  1723  018E                     	;# 
  1724  018F                     	;# 
  1725  0190                     	;# 
  1726  0191                     	;# 
  1727  0192                     	;# 
  1728  0196                     	;# 
  1729  0197                     	;# 
  1730  0198                     	;# 
  1731  0199                     	;# 
  1732  019A                     	;# 
  1733  019B                     	;# 
  1734  019C                     	;# 
  1735  020C                     	;# 
  1736  020C                     	;# 
  1737  020D                     	;# 
  1738  020E                     	;# 
  1739  020F                     	;# 
  1740  020F                     	;# 
  1741  0210                     	;# 
  1742  0210                     	;# 
  1743  0211                     	;# 
  1744  0211                     	;# 
  1745  0212                     	;# 
  1746  0212                     	;# 
  1747  0213                     	;# 
  1748  0214                     	;# 
  1749  0215                     	;# 
  1750  0215                     	;# 
  1751  0216                     	;# 
  1752  0216                     	;# 
  1753  0217                     	;# 
  1754  0217                     	;# 
  1755  0218                     	;# 
  1756  0218                     	;# 
  1757  0219                     	;# 
  1758  021A                     	;# 
  1759  021B                     	;# 
  1760  021B                     	;# 
  1761  021C                     	;# 
  1762  021C                     	;# 
  1763  021D                     	;# 
  1764  021D                     	;# 
  1765  021E                     	;# 
  1766  021F                     	;# 
  1767  028C                     	;# 
  1768  028C                     	;# 
  1769  028D                     	;# 
  1770  028D                     	;# 
  1771  028E                     	;# 
  1772  028F                     	;# 
  1773  0290                     	;# 
  1774  0290                     	;# 
  1775  0291                     	;# 
  1776  0292                     	;# 
  1777  0292                     	;# 
  1778  0293                     	;# 
  1779  0293                     	;# 
  1780  0294                     	;# 
  1781  0295                     	;# 
  1782  0296                     	;# 
  1783  0296                     	;# 
  1784  0297                     	;# 
  1785  0298                     	;# 
  1786  0298                     	;# 
  1787  0299                     	;# 
  1788  0299                     	;# 
  1789  029A                     	;# 
  1790  029B                     	;# 
  1791  029C                     	;# 
  1792  029C                     	;# 
  1793  029D                     	;# 
  1794  030C                     	;# 
  1795  030C                     	;# 
  1796  030D                     	;# 
  1797  030E                     	;# 
  1798  030F                     	;# 
  1799  0310                     	;# 
  1800  0310                     	;# 
  1801  0311                     	;# 
  1802  0312                     	;# 
  1803  0313                     	;# 
  1804  0314                     	;# 
  1805  0314                     	;# 
  1806  0315                     	;# 
  1807  0316                     	;# 
  1808  0317                     	;# 
  1809  0318                     	;# 
  1810  0318                     	;# 
  1811  0319                     	;# 
  1812  031A                     	;# 
  1813  031B                     	;# 
  1814  031C                     	;# 
  1815  031C                     	;# 
  1816  031D                     	;# 
  1817  031E                     	;# 
  1818  031F                     	;# 
  1819  038C                     	;# 
  1820  038C                     	;# 
  1821  038D                     	;# 
  1822  038E                     	;# 
  1823  0390                     	;# 
  1824  0390                     	;# 
  1825  0391                     	;# 
  1826  0392                     	;# 
  1827  040C                     	;# 
  1828  040D                     	;# 
  1829  040E                     	;# 
  1830  040F                     	;# 
  1831  0410                     	;# 
  1832  0411                     	;# 
  1833  0416                     	;# 
  1834  0416                     	;# 
  1835  0417                     	;# 
  1836  0418                     	;# 
  1837  0418                     	;# 
  1838  0419                     	;# 
  1839  041A                     	;# 
  1840  041A                     	;# 
  1841  041B                     	;# 
  1842  041C                     	;# 
  1843  041C                     	;# 
  1844  041D                     	;# 
  1845  041E                     	;# 
  1846  041F                     	;# 
  1847  048C                     	;# 
  1848  048C                     	;# 
  1849  048D                     	;# 
  1850  048E                     	;# 
  1851  048F                     	;# 
  1852  048F                     	;# 
  1853  0490                     	;# 
  1854  0491                     	;# 
  1855  0492                     	;# 
  1856  0492                     	;# 
  1857  0493                     	;# 
  1858  0494                     	;# 
  1859  0495                     	;# 
  1860  0495                     	;# 
  1861  0496                     	;# 
  1862  0497                     	;# 
  1863  0498                     	;# 
  1864  0499                     	;# 
  1865  049A                     	;# 
  1866  049B                     	;# 
  1867  049C                     	;# 
  1868  049D                     	;# 
  1869  050C                     	;# 
  1870  050C                     	;# 
  1871  050D                     	;# 
  1872  050E                     	;# 
  1873  050F                     	;# 
  1874  050F                     	;# 
  1875  0510                     	;# 
  1876  0511                     	;# 
  1877  0512                     	;# 
  1878  0512                     	;# 
  1879  0513                     	;# 
  1880  0514                     	;# 
  1881  0515                     	;# 
  1882  0515                     	;# 
  1883  0516                     	;# 
  1884  0517                     	;# 
  1885  0518                     	;# 
  1886  0519                     	;# 
  1887  051A                     	;# 
  1888  051B                     	;# 
  1889  051C                     	;# 
  1890  051D                     	;# 
  1891  058C                     	;# 
  1892  058C                     	;# 
  1893  058D                     	;# 
  1894  058E                     	;# 
  1895  058F                     	;# 
  1896  058F                     	;# 
  1897  0590                     	;# 
  1898  0591                     	;# 
  1899  0592                     	;# 
  1900  0593                     	;# 
  1901  060C                     	;# 
  1902  060D                     	;# 
  1903  060E                     	;# 
  1904  060F                     	;# 
  1905  0610                     	;# 
  1906  0611                     	;# 
  1907  0612                     	;# 
  1908  0613                     	;# 
  1909  0614                     	;# 
  1910  0616                     	;# 
  1911  0617                     	;# 
  1912  0618                     	;# 
  1913  0619                     	;# 
  1914  061A                     	;# 
  1915  061B                     	;# 
  1916  061C                     	;# 
  1917  061D                     	;# 
  1918  061E                     	;# 
  1919  068C                     	;# 
  1920  068D                     	;# 
  1921  068E                     	;# 
  1922  068F                     	;# 
  1923  0690                     	;# 
  1924  0691                     	;# 
  1925  0692                     	;# 
  1926  0693                     	;# 
  1927  0694                     	;# 
  1928  070C                     	;# 
  1929  070D                     	;# 
  1930  070E                     	;# 
  1931  070F                     	;# 
  1932  0710                     	;# 
  1933  0711                     	;# 
  1934  0712                     	;# 
  1935  0713                     	;# 
  1936  0714                     	;# 
  1937  0716                     	;# 
  1938  0717                     	;# 
  1939  0718                     	;# 
  1940  0719                     	;# 
  1941  071A                     	;# 
  1942  071B                     	;# 
  1943  071C                     	;# 
  1944  071D                     	;# 
  1945  071E                     	;# 
  1946  0796                     	;# 
  1947  0797                     	;# 
  1948  0798                     	;# 
  1949  0799                     	;# 
  1950  079A                     	;# 
  1951  079B                     	;# 
  1952  080C                     	;# 
  1953  080D                     	;# 
  1954  080E                     	;# 
  1955  080F                     	;# 
  1956  0810                     	;# 
  1957  0811                     	;# 
  1958  0812                     	;# 
  1959  0813                     	;# 
  1960  0814                     	;# 
  1961  081A                     	;# 
  1962  081B                     	;# 
  1963  081C                     	;# 
  1964  081D                     	;# 
  1965  081E                     	;# 
  1966  081F                     	;# 
  1967  088C                     	;# 
  1968  088D                     	;# 
  1969  088E                     	;# 
  1970  088F                     	;# 
  1971  0890                     	;# 
  1972  0891                     	;# 
  1973  0892                     	;# 
  1974  0893                     	;# 
  1975  0895                     	;# 
  1976  0896                     	;# 
  1977  0897                     	;# 
  1978  0898                     	;# 
  1979  0899                     	;# 
  1980  089A                     	;# 
  1981  089B                     	;# 
  1982  090C                     	;# 
  1983  090E                     	;# 
  1984  090F                     	;# 
  1985  091F                     	;# 
  1986  091F                     	;# 
  1987  098F                     	;# 
  1988  098F                     	;# 
  1989  0990                     	;# 
  1990  0991                     	;# 
  1991  0992                     	;# 
  1992  0993                     	;# 
  1993  0994                     	;# 
  1994  0995                     	;# 
  1995  0996                     	;# 
  1996  0997                     	;# 
  1997  0E0F                     	;# 
  1998  0E10                     	;# 
  1999  0E11                     	;# 
  2000  0E12                     	;# 
  2001  0E13                     	;# 
  2002  0E14                     	;# 
  2003  0E15                     	;# 
  2004  0E16                     	;# 
  2005  0E17                     	;# 
  2006  0E18                     	;# 
  2007  0E19                     	;# 
  2008  0E1A                     	;# 
  2009  0E1B                     	;# 
  2010  0E1C                     	;# 
  2011  0E1D                     	;# 
  2012  0E1E                     	;# 
  2013  0E1F                     	;# 
  2014  0E20                     	;# 
  2015  0E21                     	;# 
  2016  0E22                     	;# 
  2017  0E23                     	;# 
  2018  0E24                     	;# 
  2019  0E25                     	;# 
  2020  0E26                     	;# 
  2021  0E27                     	;# 
  2022  0E28                     	;# 
  2023  0E29                     	;# 
  2024  0E2A                     	;# 
  2025  0E2B                     	;# 
  2026  0E2C                     	;# 
  2027  0E2D                     	;# 
  2028  0E2E                     	;# 
  2029  0E2F                     	;# 
  2030  0E30                     	;# 
  2031  0E31                     	;# 
  2032  0E32                     	;# 
  2033  0E33                     	;# 
  2034  0E34                     	;# 
  2035  0E35                     	;# 
  2036  0E36                     	;# 
  2037  0E37                     	;# 
  2038  0E8F                     	;# 
  2039  0E90                     	;# 
  2040  0E91                     	;# 
  2041  0E92                     	;# 
  2042  0E93                     	;# 
  2043  0E94                     	;# 
  2044  0E95                     	;# 
  2045  0E96                     	;# 
  2046  0E97                     	;# 
  2047  0E9C                     	;# 
  2048  0E9D                     	;# 
  2049  0E9E                     	;# 
  2050  0EA1                     	;# 
  2051  0EA2                     	;# 
  2052  0EA3                     	;# 
  2053  0EA4                     	;# 
  2054  0EA5                     	;# 
  2055  0EA9                     	;# 
  2056  0EAA                     	;# 
  2057  0EAB                     	;# 
  2058  0EAC                     	;# 
  2059  0EB1                     	;# 
  2060  0EB2                     	;# 
  2061  0EB3                     	;# 
  2062  0EB8                     	;# 
  2063  0EB9                     	;# 
  2064  0EBA                     	;# 
  2065  0EBB                     	;# 
  2066  0EBC                     	;# 
  2067  0EBD                     	;# 
  2068  0EBE                     	;# 
  2069  0EC3                     	;# 
  2070  0EC5                     	;# 
  2071  0EC6                     	;# 
  2072  0EC7                     	;# 
  2073  0EC8                     	;# 
  2074  0EC9                     	;# 
  2075  0ECA                     	;# 
  2076  0ECB                     	;# 
  2077  0ECC                     	;# 
  2078  0F10                     	;# 
  2079  0F11                     	;# 
  2080  0F12                     	;# 
  2081  0F13                     	;# 
  2082  0F14                     	;# 
  2083  0F15                     	;# 
  2084  0F16                     	;# 
  2085  0F17                     	;# 
  2086  0F18                     	;# 
  2087  0F19                     	;# 
  2088  0F1A                     	;# 
  2089  0F1B                     	;# 
  2090  0F1C                     	;# 
  2091  0F1D                     	;# 
  2092  0F1E                     	;# 
  2093  0F1F                     	;# 
  2094  0F20                     	;# 
  2095  0F21                     	;# 
  2096  0F22                     	;# 
  2097  0F23                     	;# 
  2098  0F24                     	;# 
  2099  0F25                     	;# 
  2100  0F26                     	;# 
  2101  0F27                     	;# 
  2102  0F38                     	;# 
  2103  0F39                     	;# 
  2104  0F3A                     	;# 
  2105  0F3B                     	;# 
  2106  0F3C                     	;# 
  2107  0F3D                     	;# 
  2108  0F3E                     	;# 
  2109  0F3F                     	;# 
  2110  0F40                     	;# 
  2111  0F41                     	;# 
  2112  0F43                     	;# 
  2113  0F44                     	;# 
  2114  0F45                     	;# 
  2115  0F46                     	;# 
  2116  0F47                     	;# 
  2117  0F48                     	;# 
  2118  0F49                     	;# 
  2119  0F4A                     	;# 
  2120  0F4B                     	;# 
  2121  0F4C                     	;# 
  2122  0F4E                     	;# 
  2123  0F4F                     	;# 
  2124  0F50                     	;# 
  2125  0F51                     	;# 
  2126  0F52                     	;# 
  2127  0F53                     	;# 
  2128  0F54                     	;# 
  2129  0F55                     	;# 
  2130  0F56                     	;# 
  2131  0F57                     	;# 
  2132  0F65                     	;# 
  2133  0F68                     	;# 
  2134  0F69                     	;# 
  2135  0F6A                     	;# 
  2136  0F6B                     	;# 
  2137  0FE4                     	;# 
  2138  0FE5                     	;# 
  2139  0FE6                     	;# 
  2140  0FE7                     	;# 
  2141  0FE8                     	;# 
  2142  0FE9                     	;# 
  2143  0FEA                     	;# 
  2144  0FEB                     	;# 
  2145  0FED                     	;# 
  2146  0FEE                     	;# 
  2147  0FEF                     	;# 
  2148  0013                     _TRISC	set	19
  2149  0012                     _TRISB	set	18
  2150  000D                     _PORTB	set	13
  2151  0017                     _LATB	set	23
  2152  0011                     _TRISA	set	17
  2153  000C                     _PORTA	set	12
  2154  0016                     _LATA	set	22
  2155  008C                     _ADRESL	set	140
  2156  008D                     _ADRESH	set	141
  2157  009B                     _ADCAP	set	155
  2158  009E                     _ADPCH	set	158
  2159  009A                     _ADREF	set	154
  2160  0098                     _ADCLK	set	152
  2161  0095                     _ADCON2	set	149
  2162  0094                     _ADCON1	set	148
  2163  0093                     _ADCON0	set	147
  2164  0119                     _RCREG	set	281
  2165  011A                     _TXREG	set	282
  2166  011C                     _SP1BRGH	set	284
  2167  011B                     _SP1BRGL	set	283
  2168  011E                     _TX1STA	set	286
  2169  011D                     _RC1STA	set	285
  2170  011F                     _BAUD1CONbits	set	287
  2171  070F                     _PIR3	set	1807
  2172  0ECB                     _RXPPS	set	3787
  2173  0F20                     _RC0PPS	set	3872
  2174  0F4E                     _ANSELC	set	3918
  2175  0F43                     _ANSELB	set	3907
  2176  0F38                     _ANSELA	set	3896
  2177                           
  2178                           	psect	stringtext1
  2179  0800                     __pstringtext1:
  2180  0800                     STR_1:
  2181  0800  3468               	retlw	104	;'h'
  2182  0801  346F               	retlw	111	;'o'
  2183  0802  346C               	retlw	108	;'l'
  2184  0803  3461               	retlw	97	;'a'
  2185  0804  3420               	retlw	32	;' '
  2186  0805  346D               	retlw	109	;'m'
  2187  0806  3475               	retlw	117	;'u'
  2188  0807  346E               	retlw	110	;'n'
  2189  0808  3464               	retlw	100	;'d'
  2190  0809  346F               	retlw	111	;'o'
  2191  080A  3420               	retlw	32	;' '
  2192  080B  3425               	retlw	37	;'%'
  2193  080C  3469               	retlw	105	;'i'
  2194  080D  340A               	retlw	10
  2195  080E  3400               	retlw	0
  2196                           
  2197                           	psect	stringtext2
  2198  080F                     __pstringtext2:
  2199  080F                     STR_3:
  2200  080F  3441               	retlw	65	;'A'
  2201  0810  344E               	retlw	78	;'N'
  2202  0811  3442               	retlw	66	;'B'
  2203  0812  3430               	retlw	48	;'0'
  2204  0813  3420               	retlw	32	;' '
  2205  0814  343D               	retlw	61	;'='
  2206  0815  3420               	retlw	32	;' '
  2207  0816  3425               	retlw	37	;'%'
  2208  0817  3469               	retlw	105	;'i'
  2209  0818  3420               	retlw	32	;' '
  2210  0819  340A               	retlw	10
  2211  081A  340A               	retlw	10
  2212  081B  3400               	retlw	0
  2213                           
  2214                           	psect	stringtext3
  2215  081C                     __pstringtext3:
  2216  081C                     STR_2:
  2217  081C  3461               	retlw	97	;'a'
  2218  081D  3464               	retlw	100	;'d'
  2219  081E  3463               	retlw	99	;'c'
  2220  081F  3420               	retlw	32	;' '
  2221  0820  343D               	retlw	61	;'='
  2222  0821  3420               	retlw	32	;' '
  2223  0822  3425               	retlw	37	;'%'
  2224  0823  3469               	retlw	105	;'i'
  2225  0824  3420               	retlw	32	;' '
  2226  0825  340A               	retlw	10
  2227  0826  3400               	retlw	0
  2228                           
  2229                           	psect	stringtext4
  2230  0000                     __pstringtext4:
  2231                           
  2232                           	psect	cinit
  2233  07EB                     start_initialization:	
  2234                           ; #config settings
  2235                           
  2236  07EB                     __initialization:
  2237                           
  2238                           ; Clear objects allocated to BANK0
  2239  07EB  0020               	movlb	0	; select bank0
  2240  07EC  01ED               	clrf	__pbssBANK0& (0+127)
  2241  07ED  01EE               	clrf	(__pbssBANK0+1)& (0+127)
  2242                           
  2243                           ; Clear objects allocated to BANK1
  2244  07EE  0021               	movlb	1	; select bank1
  2245  07EF  01CB               	clrf	__pbssBANK1& (0+127)
  2246  07F0  01CC               	clrf	(__pbssBANK1+1)& (0+127)
  2247  07F1  01CD               	clrf	(__pbssBANK1+2)& (0+127)
  2248  07F2  01CE               	clrf	(__pbssBANK1+3)& (0+127)
  2249  07F3  01CF               	clrf	(__pbssBANK1+4)& (0+127)
  2250  07F4  01D0               	clrf	(__pbssBANK1+5)& (0+127)
  2251                           
  2252                           ; Clear objects allocated to BANK2
  2253  07F5  3020               	movlw	low __pbssBANK2
  2254  07F6  0084               	movwf	4
  2255  07F7  3001               	movlw	high __pbssBANK2
  2256  07F8  0085               	movwf	5
  2257  07F9  3020               	movlw	32
  2258  07FA  3180  2051  3187   	fcall	clear_ram0
  2259  07FD                     end_of_initialization:	
  2260                           ;End of C runtime variable initialization code
  2261                           
  2262  07FD                     __end_of__initialization:
  2263  07FD  0020               	movlb	0
  2264  07FE  3182  2AD4         	ljmp	_main	;jump to C main() function
  2265                           
  2266                           	psect	bssBANK0
  2267  006D                     __pbssBANK0:
  2268  006D                     _flags:
  2269  006D                     	ds	2
  2270                           
  2271                           	psect	bssBANK1
  2272  00CB                     __pbssBANK1:
  2273  00CB                     _nout:
  2274  00CB                     	ds	2
  2275  00CD                     _width:
  2276  00CD                     	ds	2
  2277  00CF                     _prec:
  2278  00CF                     	ds	2
  2279                           
  2280                           	psect	bssBANK2
  2281  0120                     __pbssBANK2:
  2282  0120                     _dbuf:
  2283  0120                     	ds	32
  2284                           
  2285                           	psect	clrtext
  2286  0051                     clear_ram0:	
  2287                           ;	Called with FSR0 containing the base address, and
  2288                           ;	WREG with the size to clear
  2289                           
  2290  0051  0064               	clrwdt	;clear the watchdog before getting into this loop
  2291  0052                     clrloop0:
  2292  0052  0180               	clrf	0	;clear RAM location pointed to by FSR
  2293  0053  3101               	addfsr 0,1
  2294  0054  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2295  0055  2852               	goto	clrloop0	;have we reached the end yet?
  2296  0056  3400               	retlw	0	;all done for this memory range, return
  2297                           
  2298                           	psect	cstackBANK1
  2299  00A0                     __pcstackBANK1:
  2300  00A0                     sprintf@ap:
  2301                           
  2302                           ; 1 bytes @ 0x0
  2303  00A0                     	ds	1
  2304  00A1                     sprintf@s:
  2305                           
  2306                           ; 1 bytes @ 0x1
  2307  00A1                     	ds	1
  2308  00A2                     sprintf@f:
  2309                           
  2310                           ; 5 bytes @ 0x2
  2311  00A2                     	ds	5
  2312  00A7                     main@buffer:
  2313                           
  2314                           ; 32 bytes @ 0x7
  2315  00A7                     	ds	32
  2316  00C7                     main@rx:
  2317                           
  2318                           ; 1 bytes @ 0x27
  2319  00C7                     	ds	1
  2320  00C8                     main@contador:
  2321                           
  2322                           ; 1 bytes @ 0x28
  2323  00C8                     	ds	1
  2324  00C9                     main@adc:
  2325                           
  2326                           ; 2 bytes @ 0x29
  2327  00C9                     	ds	2
  2328                           
  2329                           	psect	cstackCOMMON
  2330  0070                     __pcstackCOMMON:
  2331  0070                     ?_port_init:
  2332  0070                     ??_port_init:	
  2333                           ; 1 bytes @ 0x0
  2334                           
  2335  0070                     ?_adc_init:	
  2336                           ; 1 bytes @ 0x0
  2337                           
  2338  0070                     ??_adc_init:	
  2339                           ; 1 bytes @ 0x0
  2340                           
  2341  0070                     ?_uart_rx:	
  2342                           ; 1 bytes @ 0x0
  2343                           
  2344  0070                     ??_uart_rx:	
  2345                           ; 1 bytes @ 0x0
  2346                           
  2347  0070                     ?_main:	
  2348                           ; 1 bytes @ 0x0
  2349                           
  2350  0070                     ?_uart_tx:	
  2351                           ; 1 bytes @ 0x0
  2352                           
  2353  0070                     ??_uart_tx:	
  2354                           ; 1 bytes @ 0x0
  2355                           
  2356  0070                     ?_putch:	
  2357                           ; 1 bytes @ 0x0
  2358                           
  2359  0070                     ??___aodiv:	
  2360                           ; 1 bytes @ 0x0
  2361                           
  2362  0070                     ??___aomod:	
  2363                           ; 1 bytes @ 0x0
  2364                           
  2365  0070                     ?_printf:	
  2366                           ; 1 bytes @ 0x0
  2367                           
  2368  0070                     ?_adc_read:	
  2369                           ; 2 bytes @ 0x0
  2370                           
  2371  0070                     ?_strlen:	
  2372                           ; 2 bytes @ 0x0
  2373                           
  2374  0070                     ?___lldiv:	
  2375                           ; 2 bytes @ 0x0
  2376                           
  2377  0070                     ___lldiv@divisor:	
  2378                           ; 4 bytes @ 0x0
  2379                           
  2380                           
  2381                           ; 4 bytes @ 0x0
  2382  0070                     	ds	1
  2383  0071                     uart_tx@dato:
  2384  0071                     ___aodiv@counter:	
  2385                           ; 1 bytes @ 0x1
  2386                           
  2387  0071                     ___aomod@counter:	
  2388                           ; 1 bytes @ 0x1
  2389                           
  2390                           
  2391                           ; 1 bytes @ 0x1
  2392  0071                     	ds	1
  2393  0072                     ??_adc_read:
  2394  0072                     ??_strlen:	
  2395                           ; 1 bytes @ 0x2
  2396                           
  2397  0072                     ??_putch:	
  2398                           ; 1 bytes @ 0x2
  2399                           
  2400  0072                     putch@dato:	
  2401                           ; 1 bytes @ 0x2
  2402                           
  2403  0072                     adc_read@pin:	
  2404                           ; 1 bytes @ 0x2
  2405                           
  2406  0072                     ___aodiv@sign:	
  2407                           ; 1 bytes @ 0x2
  2408                           
  2409  0072                     ___aomod@sign:	
  2410                           ; 1 bytes @ 0x2
  2411                           
  2412                           
  2413                           ; 1 bytes @ 0x2
  2414  0072                     	ds	1
  2415  0073                     ?_fputc:
  2416  0073                     ?_abs:	
  2417                           ; 2 bytes @ 0x3
  2418                           
  2419  0073                     strlen@a:	
  2420                           ; 2 bytes @ 0x3
  2421                           
  2422  0073                     abs@a:	
  2423                           ; 1 bytes @ 0x3
  2424                           
  2425  0073                     fputc@c:	
  2426                           ; 2 bytes @ 0x3
  2427                           
  2428  0073                     ___aodiv@quotient:	
  2429                           ; 2 bytes @ 0x3
  2430                           
  2431                           
  2432                           ; 8 bytes @ 0x3
  2433  0073                     	ds	1
  2434  0074                     strlen@s:
  2435  0074                     ___lldiv@dividend:	
  2436                           ; 1 bytes @ 0x4
  2437                           
  2438                           
  2439                           ; 4 bytes @ 0x4
  2440  0074                     	ds	1
  2441  0075                     ??_abs:
  2442  0075                     fputc@fp:	
  2443                           ; 1 bytes @ 0x5
  2444                           
  2445                           
  2446                           ; 1 bytes @ 0x5
  2447  0075                     	ds	1
  2448  0076                     ??_fputc:
  2449                           
  2450                           ; 1 bytes @ 0x6
  2451  0076                     	ds	2
  2452  0078                     ??___lldiv:
  2453                           
  2454                           ; 1 bytes @ 0x8
  2455  0078                     	ds	1
  2456  0079                     ___lldiv@quotient:
  2457                           
  2458                           ; 4 bytes @ 0x9
  2459  0079                     	ds	2
  2460  007B                     ?_fputs:
  2461  007B                     fputs@fp:	
  2462                           ; 2 bytes @ 0xB
  2463                           
  2464                           
  2465                           ; 1 bytes @ 0xB
  2466  007B                     	ds	1
  2467  007C                     ??_pad:
  2468                           
  2469                           ; 1 bytes @ 0xC
  2470  007C                     	ds	1
  2471  007D                     ??_sprintf:
  2472  007D                     ??_printf:	
  2473                           ; 1 bytes @ 0xD
  2474                           
  2475  007D                     ___lldiv@counter:	
  2476                           ; 1 bytes @ 0xD
  2477                           
  2478                           
  2479                           ; 1 bytes @ 0xD
  2480  007D                     	ds	1
  2481                           
  2482                           	psect	cstackBANK0
  2483  0020                     __pcstackBANK0:
  2484  0020                     ?_serial_init:
  2485  0020                     ??_fputs:	
  2486                           ; 1 bytes @ 0x0
  2487                           
  2488  0020                     ?___aodiv:	
  2489                           ; 1 bytes @ 0x0
  2490                           
  2491  0020                     ?___aomod:	
  2492                           ; 8 bytes @ 0x0
  2493                           
  2494  0020                     serial_init@baudios:	
  2495                           ; 8 bytes @ 0x0
  2496                           
  2497  0020                     ___aodiv@divisor:	
  2498                           ; 4 bytes @ 0x0
  2499                           
  2500  0020                     ___aomod@divisor:	
  2501                           ; 8 bytes @ 0x0
  2502                           
  2503                           
  2504                           ; 8 bytes @ 0x0
  2505  0020                     	ds	3
  2506  0023                     fputs@c:
  2507                           
  2508                           ; 1 bytes @ 0x3
  2509  0023                     	ds	1
  2510  0024                     ??_serial_init:
  2511  0024                     fputs@i:	
  2512                           ; 1 bytes @ 0x4
  2513                           
  2514                           
  2515                           ; 2 bytes @ 0x4
  2516  0024                     	ds	2
  2517  0026                     fputs@s:
  2518                           
  2519                           ; 1 bytes @ 0x6
  2520  0026                     	ds	1
  2521  0027                     ?_pad:
  2522  0027                     pad@buf:	
  2523                           ; 2 bytes @ 0x7
  2524                           
  2525                           
  2526                           ; 1 bytes @ 0x7
  2527  0027                     	ds	1
  2528  0028                     serial_init@sx:
  2529  0028                     pad@p:	
  2530                           ; 2 bytes @ 0x8
  2531                           
  2532  0028                     ___aodiv@dividend:	
  2533                           ; 2 bytes @ 0x8
  2534                           
  2535  0028                     ___aomod@dividend:	
  2536                           ; 8 bytes @ 0x8
  2537                           
  2538                           
  2539                           ; 8 bytes @ 0x8
  2540  0028                     	ds	2
  2541  002A                     pad@i:
  2542                           
  2543                           ; 2 bytes @ 0xA
  2544  002A                     	ds	2
  2545  002C                     pad@w:
  2546                           
  2547                           ; 2 bytes @ 0xC
  2548  002C                     	ds	2
  2549  002E                     pad@fp:
  2550                           
  2551                           ; 1 bytes @ 0xE
  2552  002E                     	ds	2
  2553  0030                     ?_dtoa:
  2554  0030                     dtoa@d:	
  2555                           ; 2 bytes @ 0x10
  2556                           
  2557                           
  2558                           ; 8 bytes @ 0x10
  2559  0030                     	ds	8
  2560  0038                     ??_dtoa:
  2561                           
  2562                           ; 1 bytes @ 0x18
  2563  0038                     	ds	3
  2564  003B                     _dtoa$665:
  2565                           
  2566                           ; 2 bytes @ 0x1B
  2567  003B                     	ds	2
  2568  003D                     dtoa@fp:
  2569                           
  2570                           ; 1 bytes @ 0x1D
  2571  003D                     	ds	1
  2572  003E                     dtoa@p:
  2573                           
  2574                           ; 2 bytes @ 0x1E
  2575  003E                     	ds	2
  2576  0040                     dtoa@w:
  2577                           
  2578                           ; 2 bytes @ 0x20
  2579  0040                     	ds	2
  2580  0042                     dtoa@s:
  2581                           
  2582                           ; 2 bytes @ 0x22
  2583  0042                     	ds	2
  2584  0044                     dtoa@n:
  2585                           
  2586                           ; 8 bytes @ 0x24
  2587  0044                     	ds	8
  2588  004C                     dtoa@i:
  2589                           
  2590                           ; 2 bytes @ 0x2C
  2591  004C                     	ds	2
  2592  004E                     ?_vfpfcnvrt:
  2593  004E                     vfpfcnvrt@fmt:	
  2594                           ; 2 bytes @ 0x2E
  2595                           
  2596                           
  2597                           ; 1 bytes @ 0x2E
  2598  004E                     	ds	1
  2599  004F                     vfpfcnvrt@ap:
  2600                           
  2601                           ; 1 bytes @ 0x2F
  2602  004F                     	ds	1
  2603  0050                     ??_vfpfcnvrt:
  2604                           
  2605                           ; 1 bytes @ 0x30
  2606  0050                     	ds	5
  2607  0055                     vfpfcnvrt@ll:
  2608                           
  2609                           ; 8 bytes @ 0x35
  2610  0055                     	ds	8
  2611  005D                     vfpfcnvrt@vp:
  2612                           
  2613                           ; 1 bytes @ 0x3D
  2614  005D                     	ds	1
  2615  005E                     vfpfcnvrt@fp:
  2616                           
  2617                           ; 1 bytes @ 0x3E
  2618  005E                     	ds	1
  2619  005F                     ?_vfprintf:
  2620  005F                     vfprintf@fmt:	
  2621                           ; 2 bytes @ 0x3F
  2622                           
  2623                           
  2624                           ; 2 bytes @ 0x3F
  2625  005F                     	ds	2
  2626  0061                     vfprintf@ap:
  2627                           
  2628                           ; 1 bytes @ 0x41
  2629  0061                     	ds	1
  2630  0062                     ??_vfprintf:
  2631                           
  2632                           ; 1 bytes @ 0x42
  2633  0062                     	ds	2
  2634  0064                     vfprintf@fp:
  2635                           
  2636                           ; 1 bytes @ 0x44
  2637  0064                     	ds	1
  2638  0065                     vfprintf@cfmt:
  2639                           
  2640                           ; 2 bytes @ 0x45
  2641  0065                     	ds	2
  2642  0067                     ?_sprintf:
  2643  0067                     printf@fmt:	
  2644                           ; 2 bytes @ 0x47
  2645                           
  2646  0067                     sprintf@fmt:	
  2647                           ; 1 bytes @ 0x47
  2648                           
  2649                           
  2650                           ; 2 bytes @ 0x47
  2651  0067                     	ds	1
  2652  0068                     printf@ap:
  2653                           
  2654                           ; 1 bytes @ 0x48
  2655  0068                     	ds	3
  2656  006B                     ??_main:
  2657                           
  2658                           ; 1 bytes @ 0x4B
  2659  006B                     	ds	2
  2660                           
  2661                           	psect	maintext
  2662  02D4                     __pmaintext:	
  2663 ;;
  2664 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2665 ;;
  2666 ;; *************** function _main *****************
  2667 ;; Defined at:
  2668 ;;		line 14 in file "Main.c"
  2669 ;; Parameters:    Size  Location     Type
  2670 ;;		None
  2671 ;; Auto vars:     Size  Location     Type
  2672 ;;  buffer         32    7[BANK1 ] unsigned char [32]
  2673 ;;  adc             2   41[BANK1 ] unsigned short 
  2674 ;;  contador        1   40[BANK1 ] unsigned char 
  2675 ;;  rx              1   39[BANK1 ] unsigned char 
  2676 ;; Return value:  Size  Location     Type
  2677 ;;                  1    wreg      void 
  2678 ;; Registers used:
  2679 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2680 ;; Tracked objects:
  2681 ;;		On entry : B1F/0
  2682 ;;		On exit  : 0/0
  2683 ;;		Unchanged: 0/0
  2684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2686 ;;      Locals:         0       0      36       0       0       0       0       0       0       0       0       0       
      +0       0
  2687 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2688 ;;      Totals:         0       2      36       0       0       0       0       0       0       0       0       0       
      +0       0
  2689 ;;Total ram usage:       38 bytes
  2690 ;; Hardware stack levels required when called: 9
  2691 ;; This function calls:
  2692 ;;		_adc_init
  2693 ;;		_adc_read
  2694 ;;		_port_init
  2695 ;;		_printf
  2696 ;;		_serial_init
  2697 ;;		_sprintf
  2698 ;;		_uart_rx
  2699 ;; This function is called by:
  2700 ;;		Startup code after reset
  2701 ;; This function uses a non-reentrant model
  2702 ;;
  2703                           
  2704                           
  2705                           ;psect for function _main
  2706  02D4                     _main:
  2707  02D4                     l1631:	
  2708                           ;incstack = 0
  2709                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2710                           
  2711                           
  2712                           ;Main.c: 15:     uint8_t rx, buffer[32], contador = 0;
  2713  02D4  0021               	movlb	1	; select bank1
  2714  02D5  01C8               	clrf	main@contador^(0+128)
  2715  02D6                     l1633:
  2716                           
  2717                           ;Main.c: 18:     port_init();
  2718  02D6  3180  20E0  3182   	fcall	_port_init
  2719  02D9                     l1635:
  2720                           
  2721                           ;Main.c: 19:     serial_init(9600);
  2722  02D9  3000               	movlw	0
  2723  02DA  0020               	movlb	0	; select bank0
  2724  02DB  00A3               	movwf	serial_init@baudios+3
  2725  02DC  3000               	movlw	0
  2726  02DD  00A2               	movwf	serial_init@baudios+2
  2727  02DE  3025               	movlw	37
  2728  02DF  00A1               	movwf	serial_init@baudios+1
  2729  02E0  3080               	movlw	128
  2730  02E1  00A0               	movwf	serial_init@baudios
  2731  02E2  3181  2197  3182   	fcall	_serial_init
  2732  02E5                     l1637:
  2733                           
  2734                           ;Main.c: 20:     adc_init();
  2735  02E5  3180  2092  3182   	fcall	_adc_init
  2736  02E8                     l1639:
  2737                           
  2738                           ;Main.c: 24:         LATA = LATA | (1<<3);
  2739  02E8  0020               	movlb	0	; select bank0
  2740  02E9  0816               	movf	22,w	;volatile
  2741  02EA  3808               	iorlw	8
  2742  02EB  0096               	movwf	22	;volatile
  2743  02EC                     l1641:
  2744                           
  2745                           ;Main.c: 25:         _delay((unsigned long)((500)*(32000000UL/4000.0)));
  2746  02EC  3015               	movlw	21
  2747  02ED  0020               	movlb	0	; select bank0
  2748  02EE  00EC               	movwf	??_main+1
  2749  02EF  304B               	movlw	75
  2750  02F0  00EB               	movwf	??_main
  2751  02F1  30BE               	movlw	190
  2752  02F2                     u1477:
  2753  02F2  0B89               	decfsz	9,f
  2754  02F3  2AF2               	goto	u1477
  2755  02F4  0BEB               	decfsz	??_main,f
  2756  02F5  2AF2               	goto	u1477
  2757  02F6  0BEC               	decfsz	??_main+1,f
  2758  02F7  2AF2               	goto	u1477
  2759  02F8  0000               	nop
  2760  02F9                     l1643:
  2761                           
  2762                           ;Main.c: 26:         LATA = LATA & ~(1<<3);
  2763  02F9  0020               	movlb	0	; select bank0
  2764  02FA  0816               	movf	22,w	;volatile
  2765  02FB  39F7               	andlw	247
  2766  02FC  0096               	movwf	22	;volatile
  2767  02FD                     l1645:
  2768                           
  2769                           ;Main.c: 27:         _delay((unsigned long)((500)*(32000000UL/4000.0)));
  2770  02FD  3015               	movlw	21
  2771  02FE  0020               	movlb	0	; select bank0
  2772  02FF  00EC               	movwf	??_main+1
  2773  0300  304B               	movlw	75
  2774  0301  00EB               	movwf	??_main
  2775  0302  30BE               	movlw	190
  2776  0303                     u1487:
  2777  0303  0B89               	decfsz	9,f
  2778  0304  2B03               	goto	u1487
  2779  0305  0BEB               	decfsz	??_main,f
  2780  0306  2B03               	goto	u1487
  2781  0307  0BEC               	decfsz	??_main+1,f
  2782  0308  2B03               	goto	u1487
  2783  0309  0000               	nop
  2784  030A                     l1647:
  2785                           
  2786                           ;Main.c: 28:         sprintf(buffer,"hola mundo %i\n",contador++);
  2787  030A  3000               	movlw	low (STR_1| (0+32768))
  2788  030B  0020               	movlb	0	; select bank0
  2789  030C  00E7               	movwf	sprintf@fmt
  2790  030D  3088               	movlw	high (STR_1| (0+32768))
  2791  030E  00E8               	movwf	sprintf@fmt+1
  2792  030F  0021               	movlb	1	; select bank1
  2793  0310  0848               	movf	main@contador^(0+128),w
  2794  0311  0020               	movlb	0	; select bank0
  2795  0312  00EB               	movwf	??_main
  2796  0313  01EC               	clrf	??_main+1
  2797  0314  086B               	movf	??_main,w
  2798  0315  00E9               	movwf	?_sprintf+2
  2799  0316  086C               	movf	??_main+1,w
  2800  0317  00EA               	movwf	?_sprintf+3
  2801  0318  30A7               	movlw	(low (main@buffer| 0))& (0+255)
  2802  0319  3181  2119  3182   	fcall	_sprintf
  2803  031C                     l1649:
  2804  031C  3001               	movlw	1
  2805  031D  0020               	movlb	0	; select bank0
  2806  031E  00EB               	movwf	??_main
  2807  031F  086B               	movf	??_main,w
  2808  0320  0021               	movlb	1	; select bank1
  2809  0321  07C8               	addwf	main@contador^(0+128),f
  2810  0322                     l1651:
  2811                           
  2812                           ;Main.c: 29:         printf(buffer);
  2813  0322  30A7               	movlw	(low (main@buffer| 0))& (0+255)
  2814  0323  3180  2067  3182   	fcall	_printf
  2815  0326                     l1653:
  2816                           
  2817                           ;Main.c: 30:         adc = adc_read(4);
  2818  0326  3004               	movlw	4
  2819  0327  3180  207A  3182   	fcall	_adc_read
  2820  032A  0871               	movf	?_adc_read+1,w
  2821  032B  0021               	movlb	1	; select bank1
  2822  032C  00CA               	movwf	(main@adc+1)^(0+128)
  2823  032D  0870               	movf	?_adc_read,w
  2824  032E  00C9               	movwf	main@adc^(0+128)
  2825  032F                     l1655:
  2826                           
  2827                           ;Main.c: 31:         sprintf(buffer,"adc = %i \n",adc);
  2828  032F  301C               	movlw	low (STR_2| (0+32768))
  2829  0330  0020               	movlb	0	; select bank0
  2830  0331  00E7               	movwf	sprintf@fmt
  2831  0332  3088               	movlw	high (STR_2| (0+32768))
  2832  0333  00E8               	movwf	sprintf@fmt+1
  2833  0334  0021               	movlb	1	; select bank1
  2834  0335  084A               	movf	(main@adc+1)^(0+128),w
  2835  0336  0020               	movlb	0	; select bank0
  2836  0337  00EA               	movwf	?_sprintf+3
  2837  0338  0021               	movlb	1	; select bank1
  2838  0339  0849               	movf	main@adc^(0+128),w
  2839  033A  0020               	movlb	0	; select bank0
  2840  033B  00E9               	movwf	?_sprintf+2
  2841  033C  30A7               	movlw	(low (main@buffer| 0))& (0+255)
  2842  033D  3181  2119  3182   	fcall	_sprintf
  2843  0340                     l1657:
  2844                           
  2845                           ;Main.c: 32:         printf(buffer);
  2846  0340  30A7               	movlw	(low (main@buffer| 0))& (0+255)
  2847  0341  3180  2067  3182   	fcall	_printf
  2848  0344                     l1659:
  2849                           
  2850                           ;Main.c: 34:         adc = adc_read(8);
  2851  0344  3008               	movlw	8
  2852  0345  3180  207A  3182   	fcall	_adc_read
  2853  0348  0871               	movf	?_adc_read+1,w
  2854  0349  0021               	movlb	1	; select bank1
  2855  034A  00CA               	movwf	(main@adc+1)^(0+128)
  2856  034B  0870               	movf	?_adc_read,w
  2857  034C  00C9               	movwf	main@adc^(0+128)
  2858  034D                     l1661:
  2859                           
  2860                           ;Main.c: 35:         sprintf(buffer,"ANB0 = %i \n\n",adc);
  2861  034D  300F               	movlw	low (STR_3| (0+32768))
  2862  034E  0020               	movlb	0	; select bank0
  2863  034F  00E7               	movwf	sprintf@fmt
  2864  0350  3088               	movlw	high (STR_3| (0+32768))
  2865  0351  00E8               	movwf	sprintf@fmt+1
  2866  0352  0021               	movlb	1	; select bank1
  2867  0353  084A               	movf	(main@adc+1)^(0+128),w
  2868  0354  0020               	movlb	0	; select bank0
  2869  0355  00EA               	movwf	?_sprintf+3
  2870  0356  0021               	movlb	1	; select bank1
  2871  0357  0849               	movf	main@adc^(0+128),w
  2872  0358  0020               	movlb	0	; select bank0
  2873  0359  00E9               	movwf	?_sprintf+2
  2874  035A  30A7               	movlw	(low (main@buffer| 0))& (0+255)
  2875  035B  3181  2119  3182   	fcall	_sprintf
  2876  035E                     l1663:
  2877                           
  2878                           ;Main.c: 36:         printf(buffer);
  2879  035E  30A7               	movlw	(low (main@buffer| 0))& (0+255)
  2880  035F  3180  2067  3182   	fcall	_printf
  2881  0362                     l1665:
  2882                           
  2883                           ;Main.c: 40:         if (((PIR3>>5) & 0x01) ==1){
  2884  0362  002E               	movlb	14	; select bank14
  2885  0363  080F               	movf	15,w	;volatile
  2886  0364  0020               	movlb	0	; select bank0
  2887  0365  00EB               	movwf	??_main
  2888  0366  3005               	movlw	5
  2889  0367                     u1435:
  2890  0367  36EB               	lsrf	??_main,f
  2891  0368  0B89               	decfsz	9,f
  2892  0369  2B67               	goto	u1435
  2893  036A  1C6B               	btfss	??_main,0
  2894  036B  2B6D               	goto	u1441
  2895  036C  2B6E               	goto	u1440
  2896  036D                     u1441:
  2897  036D  2B76               	goto	l1669
  2898  036E                     u1440:
  2899  036E                     l1667:
  2900                           
  2901                           ;Main.c: 41:             rx = uart_rx();
  2902  036E  3180  20FB  3182   	fcall	_uart_rx
  2903  0371  0020               	movlb	0	; select bank0
  2904  0372  00EB               	movwf	??_main
  2905  0373  086B               	movf	??_main,w
  2906  0374  0021               	movlb	1	; select bank1
  2907  0375  00C7               	movwf	main@rx^(0+128)
  2908  0376                     l1669:
  2909                           
  2910                           ;Main.c: 44:         if (rx == 'b'){
  2911  0376  3062               	movlw	98
  2912  0377  0021               	movlb	1	; select bank1
  2913  0378  0647               	xorwf	main@rx^(0+128),w
  2914  0379  1D03               	btfss	3,2
  2915  037A  2B7C               	goto	u1451
  2916  037B  2B7D               	goto	u1450
  2917  037C                     u1451:
  2918  037C  2B82               	goto	l1673
  2919  037D                     u1450:
  2920  037D                     l1671:
  2921                           
  2922                           ;Main.c: 45:             LATA = LATA | (1<<0);
  2923  037D  0020               	movlb	0	; select bank0
  2924  037E  0816               	movf	22,w	;volatile
  2925  037F  3801               	iorlw	1
  2926  0380  0096               	movwf	22	;volatile
  2927                           
  2928                           ;Main.c: 46:         }else{
  2929  0381  2AE8               	goto	l1639
  2930  0382                     l1673:
  2931                           
  2932                           ;Main.c: 47:             LATA = LATA & ~(1<<0);
  2933  0382  0020               	movlb	0	; select bank0
  2934  0383  0816               	movf	22,w	;volatile
  2935  0384  39FE               	andlw	254
  2936  0385  0096               	movwf	22	;volatile
  2937  0386  2AE8               	goto	l1639
  2938  0387  3180  2802         	ljmp	start
  2939  0389                     __end_of_main:
  2940                           
  2941                           	psect	text1
  2942  00FB                     __ptext1:	
  2943 ;; *************** function _uart_rx *****************
  2944 ;; Defined at:
  2945 ;;		line 39 in file "uart.c"
  2946 ;; Parameters:    Size  Location     Type
  2947 ;;		None
  2948 ;; Auto vars:     Size  Location     Type
  2949 ;;		None
  2950 ;; Return value:  Size  Location     Type
  2951 ;;                  1    wreg      unsigned char 
  2952 ;; Registers used:
  2953 ;;		wreg, status,2, status,0
  2954 ;; Tracked objects:
  2955 ;;		On entry : 0/0
  2956 ;;		On exit  : 0/0
  2957 ;;		Unchanged: 0/0
  2958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2961 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2962 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2963 ;;Total ram usage:        1 bytes
  2964 ;; Hardware stack levels used: 1
  2965 ;; This function calls:
  2966 ;;		Nothing
  2967 ;; This function is called by:
  2968 ;;		_main
  2969 ;;		_getch
  2970 ;; This function uses a non-reentrant model
  2971 ;;
  2972                           
  2973                           
  2974                           ;psect for function _uart_rx
  2975  00FB                     _uart_rx:
  2976  00FB                     l1619:	
  2977                           ;incstack = 0
  2978                           ; Regs used in _uart_rx: [wreg+status,2+status,0]
  2979                           
  2980  00FB                     l1621:	
  2981                           ;uart.c: 43:     while (((PIR3>>5) & 0x01) == 0){}
  2982                           
  2983  00FB  002E               	movlb	14	; select bank14
  2984  00FC  080F               	movf	15,w	;volatile
  2985  00FD  00F0               	movwf	??_uart_rx
  2986  00FE  3005               	movlw	5
  2987  00FF                     u1395:
  2988  00FF  36F0               	lsrf	??_uart_rx,f
  2989  0100  0B89               	decfsz	9,f
  2990  0101  28FF               	goto	u1395
  2991  0102  1C70               	btfss	??_uart_rx,0
  2992  0103  2905               	goto	u1401
  2993  0104  2906               	goto	u1400
  2994  0105                     u1401:
  2995  0105  28FB               	goto	l1621
  2996  0106                     u1400:
  2997  0106                     l1623:
  2998                           
  2999                           ;uart.c: 45:     if( ((RC1STA >> 1)& 0x01) == 1){
  3000  0106  0022               	movlb	2	; select bank2
  3001  0107  081D               	movf	29,w	;volatile
  3002  0108  00F0               	movwf	??_uart_rx
  3003  0109  3001               	movlw	1
  3004  010A                     u1415:
  3005  010A  36F0               	lsrf	??_uart_rx,f
  3006  010B  0B89               	decfsz	9,f
  3007  010C  290A               	goto	u1415
  3008  010D  1C70               	btfss	??_uart_rx,0
  3009  010E  2910               	goto	u1421
  3010  010F  2911               	goto	u1420
  3011  0110                     u1421:
  3012  0110  2917               	goto	l1627
  3013  0111                     u1420:
  3014  0111                     l1625:
  3015                           
  3016                           ;uart.c: 46:         RC1STA = RC1STA & ~(1<<4);
  3017  0111  081D               	movf	29,w	;volatile
  3018  0112  39EF               	andlw	239
  3019  0113  009D               	movwf	29	;volatile
  3020                           
  3021                           ;uart.c: 47:         RC1STA = RC1STA | (1<<4);
  3022  0114  081D               	movf	29,w	;volatile
  3023  0115  3810               	iorlw	16
  3024  0116  009D               	movwf	29	;volatile
  3025  0117                     l1627:
  3026                           
  3027                           ;uart.c: 53:       return RCREG;
  3028  0117  0819               	movf	25,w	;volatile
  3029  0118                     l88:
  3030  0118  0008               	return
  3031  0119                     __end_of_uart_rx:
  3032                           
  3033                           	psect	text2
  3034  0119                     __ptext2:	
  3035 ;; *************** function _sprintf *****************
  3036 ;; Defined at:
  3037 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  3038 ;; Parameters:    Size  Location     Type
  3039 ;;  s               1    wreg     PTR unsigned char 
  3040 ;;		 -> main@buffer(32), 
  3041 ;;  fmt             2   71[BANK0 ] PTR const unsigned char 
  3042 ;;		 -> STR_3(13), STR_2(11), STR_1(15), 
  3043 ;; Auto vars:     Size  Location     Type
  3044 ;;  s               1    1[BANK1 ] PTR unsigned char 
  3045 ;;		 -> main@buffer(32), 
  3046 ;;  f               5    2[BANK1 ] struct _IO_FILE
  3047 ;;  ret             2    0        int 
  3048 ;;  ap              1    0[BANK1 ] PTR void [1]
  3049 ;;		 -> ?_printf(2), ?_sprintf(2), 
  3050 ;; Return value:  Size  Location     Type
  3051 ;;                  2   71[BANK0 ] int 
  3052 ;; Registers used:
  3053 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3054 ;; Tracked objects:
  3055 ;;		On entry : 0/0
  3056 ;;		On exit  : 0/0
  3057 ;;		Unchanged: 0/0
  3058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3059 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3060 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  3061 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3062 ;;      Totals:         1       4       7       0       0       0       0       0       0       0       0       0       
      +0       0
  3063 ;;Total ram usage:       12 bytes
  3064 ;; Hardware stack levels used: 1
  3065 ;; Hardware stack levels required when called: 8
  3066 ;; This function calls:
  3067 ;;		_vfprintf
  3068 ;; This function is called by:
  3069 ;;		_main
  3070 ;; This function uses a non-reentrant model
  3071 ;;
  3072                           
  3073                           
  3074                           ;psect for function _sprintf
  3075  0119                     _sprintf:
  3076                           
  3077                           ;incstack = 0
  3078                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3079                           ;sprintf@s stored from wreg
  3080  0119  0021               	movlb	1	; select bank1
  3081  011A  00A1               	movwf	sprintf@s^(0+128)
  3082  011B                     l1587:
  3083  011B  3069               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  3084  011C  00FD               	movwf	??_sprintf
  3085  011D  087D               	movf	??_sprintf,w
  3086  011E  00A0               	movwf	sprintf@ap^(0+128)
  3087  011F  0821               	movf	sprintf@s^(0+128),w
  3088  0120  00FD               	movwf	??_sprintf
  3089  0121  087D               	movf	??_sprintf,w
  3090  0122  00A2               	movwf	sprintf@f^(0+128)
  3091  0123                     l1589:
  3092  0123  01A3               	clrf	(sprintf@f^(0+128)+1)
  3093  0124  01A4               	clrf	((sprintf@f+1)^(0+128)+1)
  3094  0125                     l1591:
  3095  0125  01A5               	clrf	(sprintf@f^(0+128)+3)
  3096  0126  01A6               	clrf	((sprintf@f+1)^(0+128)+3)
  3097  0127                     l1593:
  3098  0127  0020               	movlb	0	; select bank0
  3099  0128  0868               	movf	sprintf@fmt+1,w
  3100  0129  00E0               	movwf	vfprintf@fmt+1
  3101  012A  0867               	movf	sprintf@fmt,w
  3102  012B  00DF               	movwf	vfprintf@fmt
  3103  012C  30A0               	movlw	(low (sprintf@ap| 0))& (0+255)
  3104  012D  00FD               	movwf	??_sprintf
  3105  012E  087D               	movf	??_sprintf,w
  3106  012F  00E1               	movwf	vfprintf@ap
  3107  0130  30A2               	movlw	(low (sprintf@f| 0))& (0+255)
  3108  0131  3181  2166  3181   	fcall	_vfprintf
  3109  0134                     l1595:
  3110  0134  0021               	movlb	1	; select bank1
  3111  0135  0823               	movf	(sprintf@f^(0+128)+1),w
  3112  0136  0721               	addwf	sprintf@s^(0+128),w
  3113  0137  00FD               	movwf	??_sprintf
  3114  0138  087D               	movf	??_sprintf,w
  3115  0139  0086               	movwf	6
  3116  013A  0187               	clrf	7
  3117  013B  0181               	clrf	1
  3118  013C                     l744:
  3119  013C  0008               	return
  3120  013D                     __end_of_sprintf:
  3121                           
  3122                           	psect	text3
  3123  0197                     __ptext3:	
  3124 ;; *************** function _serial_init *****************
  3125 ;; Defined at:
  3126 ;;		line 3 in file "uart.c"
  3127 ;; Parameters:    Size  Location     Type
  3128 ;;  baudios         4    0[BANK0 ] unsigned long 
  3129 ;; Auto vars:     Size  Location     Type
  3130 ;;  sx              2    8[BANK0 ] unsigned short 
  3131 ;; Return value:  Size  Location     Type
  3132 ;;                  1    wreg      void 
  3133 ;; Registers used:
  3134 ;;		wreg, status,2, status,0, pclath, cstack
  3135 ;; Tracked objects:
  3136 ;;		On entry : 0/0
  3137 ;;		On exit  : 0/0
  3138 ;;		Unchanged: 0/0
  3139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3140 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3141 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3142 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3143 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3144 ;;Total ram usage:       10 bytes
  3145 ;; Hardware stack levels used: 1
  3146 ;; Hardware stack levels required when called: 1
  3147 ;; This function calls:
  3148 ;;		___lldiv
  3149 ;; This function is called by:
  3150 ;;		_main
  3151 ;; This function uses a non-reentrant model
  3152 ;;
  3153                           
  3154                           
  3155                           ;psect for function _serial_init
  3156  0197                     _serial_init:
  3157  0197                     l1569:	
  3158                           ;incstack = 0
  3159                           ; Regs used in _serial_init: [wreg+status,2+status,0+pclath+cstack]
  3160                           
  3161                           
  3162                           ;uart.c: 4:     uint16_t sx;;uart.c: 6:     BAUD1CONbits.BRG16 = 0;
  3163  0197  0022               	movlb	2	; select bank2
  3164  0198  119F               	bcf	31,3	;volatile
  3165  0199                     l1571:
  3166                           
  3167                           ;uart.c: 9:     RC1STA = 0b10010000;
  3168  0199  3090               	movlw	144
  3169  019A  009D               	movwf	29	;volatile
  3170                           
  3171                           ;uart.c: 15:     TX1STA = 0b00100000;
  3172  019B  3020               	movlw	32
  3173  019C  009E               	movwf	30	;volatile
  3174  019D                     l1573:
  3175                           
  3176                           ;uart.c: 19:     sx = ((32000000UL/baudios)/64 ) - 1;
  3177  019D  0020               	movlb	0	; select bank0
  3178  019E  0823               	movf	serial_init@baudios+3,w
  3179  019F  00F3               	movwf	___lldiv@divisor+3
  3180  01A0  0822               	movf	serial_init@baudios+2,w
  3181  01A1  00F2               	movwf	___lldiv@divisor+2
  3182  01A2  0821               	movf	serial_init@baudios+1,w
  3183  01A3  00F1               	movwf	___lldiv@divisor+1
  3184  01A4  0820               	movf	serial_init@baudios,w
  3185  01A5  00F0               	movwf	___lldiv@divisor
  3186  01A6  3001               	movlw	1
  3187  01A7  00F7               	movwf	___lldiv@dividend+3
  3188  01A8  30E8               	movlw	232
  3189  01A9  00F6               	movwf	___lldiv@dividend+2
  3190  01AA  3048               	movlw	72
  3191  01AB  00F5               	movwf	___lldiv@dividend+1
  3192  01AC  3000               	movlw	0
  3193  01AD  00F4               	movwf	___lldiv@dividend
  3194  01AE  3182  227A  3181   	fcall	___lldiv
  3195  01B1  0870               	movf	?___lldiv,w
  3196  01B2  0020               	movlb	0	; select bank0
  3197  01B3  00A4               	movwf	??_serial_init
  3198  01B4  0871               	movf	?___lldiv+1,w
  3199  01B5  00A5               	movwf	??_serial_init+1
  3200  01B6  0872               	movf	?___lldiv+2,w
  3201  01B7  00A6               	movwf	??_serial_init+2
  3202  01B8  0873               	movf	?___lldiv+3,w
  3203  01B9  00A7               	movwf	??_serial_init+3
  3204  01BA  3006               	movlw	6
  3205  01BB                     u1375:
  3206  01BB  36A7               	lsrf	??_serial_init+3,f
  3207  01BC  0CA6               	rrf	??_serial_init+2,f
  3208  01BD  0CA5               	rrf	??_serial_init+1,f
  3209  01BE  0CA4               	rrf	??_serial_init,f
  3210  01BF                     u1370:
  3211  01BF  0B89               	decfsz	9,f
  3212  01C0  29BB               	goto	u1375
  3213  01C1  0824               	movf	??_serial_init,w
  3214  01C2  3EFF               	addlw	255
  3215  01C3  00A8               	movwf	serial_init@sx
  3216  01C4  30FF               	movlw	255
  3217  01C5  3D25               	addwfc	??_serial_init+1,w
  3218  01C6  00A9               	movwf	serial_init@sx+1
  3219  01C7                     l1575:
  3220                           
  3221                           ;uart.c: 20:     SP1BRGL = (uint8_t)sx;
  3222  01C7  0828               	movf	serial_init@sx,w
  3223  01C8  0022               	movlb	2	; select bank2
  3224  01C9  009B               	movwf	27	;volatile
  3225  01CA                     l1577:
  3226                           
  3227                           ;uart.c: 21:     SP1BRGH = (uint8_t)(sx>>8);
  3228  01CA  0020               	movlb	0	; select bank0
  3229  01CB  0829               	movf	serial_init@sx+1,w
  3230  01CC  0022               	movlb	2	; select bank2
  3231  01CD  009C               	movwf	28	;volatile
  3232  01CE                     l1579:
  3233                           
  3234                           ;uart.c: 25:     RC0PPS = 0x10;
  3235  01CE  3010               	movlw	16
  3236  01CF  003E               	movlb	30	; select bank30
  3237  01D0  00A0               	movwf	32	;volatile
  3238  01D1                     l1581:
  3239                           
  3240                           ;uart.c: 27:     RXPPS = 0x11;
  3241  01D1  3011               	movlw	17
  3242  01D2  003D               	movlb	29	; select bank29
  3243  01D3  00CB               	movwf	75	;volatile
  3244  01D4                     l75:
  3245  01D4  0008               	return
  3246  01D5                     __end_of_serial_init:
  3247                           
  3248                           	psect	text4
  3249  027A                     __ptext4:	
  3250 ;; *************** function ___lldiv *****************
  3251 ;; Defined at:
  3252 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
  3253 ;; Parameters:    Size  Location     Type
  3254 ;;  divisor         4    0[COMMON] unsigned long 
  3255 ;;  dividend        4    4[COMMON] unsigned long 
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;  quotient        4    9[COMMON] unsigned long 
  3258 ;;  counter         1   13[COMMON] unsigned char 
  3259 ;; Return value:  Size  Location     Type
  3260 ;;                  4    0[COMMON] unsigned long 
  3261 ;; Registers used:
  3262 ;;		wreg, status,2, status,0
  3263 ;; Tracked objects:
  3264 ;;		On entry : 0/0
  3265 ;;		On exit  : 0/0
  3266 ;;		Unchanged: 0/0
  3267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3268 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3269 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3270 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3271 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3272 ;;Total ram usage:       14 bytes
  3273 ;; Hardware stack levels used: 1
  3274 ;; This function calls:
  3275 ;;		Nothing
  3276 ;; This function is called by:
  3277 ;;		_serial_init
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280                           
  3281                           
  3282                           ;psect for function ___lldiv
  3283  027A                     ___lldiv:
  3284  027A                     l1523:	
  3285                           ;incstack = 0
  3286                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3287                           
  3288  027A  3000               	movlw	0
  3289  027B  00FC               	movwf	___lldiv@quotient+3
  3290  027C  3000               	movlw	0
  3291  027D  00FB               	movwf	___lldiv@quotient+2
  3292  027E  3000               	movlw	0
  3293  027F  00FA               	movwf	___lldiv@quotient+1
  3294  0280  3000               	movlw	0
  3295  0281  00F9               	movwf	___lldiv@quotient
  3296  0282  0873               	movf	___lldiv@divisor+3,w
  3297  0283  0472               	iorwf	___lldiv@divisor+2,w
  3298  0284  0471               	iorwf	___lldiv@divisor+1,w
  3299  0285  0470               	iorwf	___lldiv@divisor,w
  3300  0286  1903               	skipnz
  3301  0287  2A89               	goto	u1291
  3302  0288  2A8A               	goto	u1290
  3303  0289                     u1291:
  3304  0289  2ACB               	goto	l1543
  3305  028A                     u1290:
  3306  028A                     l1525:
  3307  028A  01FD               	clrf	___lldiv@counter
  3308  028B  0AFD               	incf	___lldiv@counter,f
  3309  028C  2A98               	goto	l1529
  3310  028D                     l1527:
  3311  028D  3001               	movlw	1
  3312  028E                     u1305:
  3313  028E  35F0               	lslf	___lldiv@divisor,f
  3314  028F  0DF1               	rlf	___lldiv@divisor+1,f
  3315  0290  0DF2               	rlf	___lldiv@divisor+2,f
  3316  0291  0DF3               	rlf	___lldiv@divisor+3,f
  3317  0292  0B89               	decfsz	9,f
  3318  0293  2A8E               	goto	u1305
  3319  0294  3001               	movlw	1
  3320  0295  00F8               	movwf	??___lldiv
  3321  0296  0878               	movf	??___lldiv,w
  3322  0297  07FD               	addwf	___lldiv@counter,f
  3323  0298                     l1529:
  3324  0298  1FF3               	btfss	___lldiv@divisor+3,7
  3325  0299  2A9B               	goto	u1311
  3326  029A  2A9C               	goto	u1310
  3327  029B                     u1311:
  3328  029B  2A8D               	goto	l1527
  3329  029C                     u1310:
  3330  029C                     l1531:
  3331  029C  3001               	movlw	1
  3332  029D                     u1325:
  3333  029D  35F9               	lslf	___lldiv@quotient,f
  3334  029E  0DFA               	rlf	___lldiv@quotient+1,f
  3335  029F  0DFB               	rlf	___lldiv@quotient+2,f
  3336  02A0  0DFC               	rlf	___lldiv@quotient+3,f
  3337  02A1  0B89               	decfsz	9,f
  3338  02A2  2A9D               	goto	u1325
  3339  02A3                     l1533:
  3340  02A3  0873               	movf	___lldiv@divisor+3,w
  3341  02A4  0277               	subwf	___lldiv@dividend+3,w
  3342  02A5  1D03               	skipz
  3343  02A6  2AB1               	goto	u1335
  3344  02A7  0872               	movf	___lldiv@divisor+2,w
  3345  02A8  0276               	subwf	___lldiv@dividend+2,w
  3346  02A9  1D03               	skipz
  3347  02AA  2AB1               	goto	u1335
  3348  02AB  0871               	movf	___lldiv@divisor+1,w
  3349  02AC  0275               	subwf	___lldiv@dividend+1,w
  3350  02AD  1D03               	skipz
  3351  02AE  2AB1               	goto	u1335
  3352  02AF  0870               	movf	___lldiv@divisor,w
  3353  02B0  0274               	subwf	___lldiv@dividend,w
  3354  02B1                     u1335:
  3355  02B1  1C03               	skipc
  3356  02B2  2AB4               	goto	u1331
  3357  02B3  2AB5               	goto	u1330
  3358  02B4                     u1331:
  3359  02B4  2ABE               	goto	l1539
  3360  02B5                     u1330:
  3361  02B5                     l1535:
  3362  02B5  0870               	movf	___lldiv@divisor,w
  3363  02B6  02F4               	subwf	___lldiv@dividend,f
  3364  02B7  0871               	movf	___lldiv@divisor+1,w
  3365  02B8  3BF5               	subwfb	___lldiv@dividend+1,f
  3366  02B9  0872               	movf	___lldiv@divisor+2,w
  3367  02BA  3BF6               	subwfb	___lldiv@dividend+2,f
  3368  02BB  0873               	movf	___lldiv@divisor+3,w
  3369  02BC  3BF7               	subwfb	___lldiv@dividend+3,f
  3370  02BD                     l1537:
  3371  02BD  1479               	bsf	___lldiv@quotient,0
  3372  02BE                     l1539:
  3373  02BE  3001               	movlw	1
  3374  02BF                     u1345:
  3375  02BF  36F3               	lsrf	___lldiv@divisor+3,f
  3376  02C0  0CF2               	rrf	___lldiv@divisor+2,f
  3377  02C1  0CF1               	rrf	___lldiv@divisor+1,f
  3378  02C2  0CF0               	rrf	___lldiv@divisor,f
  3379  02C3  0B89               	decfsz	9,f
  3380  02C4  2ABF               	goto	u1345
  3381  02C5                     l1541:
  3382  02C5  3001               	movlw	1
  3383  02C6  02FD               	subwf	___lldiv@counter,f
  3384  02C7  1D03               	btfss	3,2
  3385  02C8  2ACA               	goto	u1351
  3386  02C9  2ACB               	goto	u1350
  3387  02CA                     u1351:
  3388  02CA  2A9C               	goto	l1531
  3389  02CB                     u1350:
  3390  02CB                     l1543:
  3391  02CB  087C               	movf	___lldiv@quotient+3,w
  3392  02CC  00F3               	movwf	?___lldiv+3
  3393  02CD  087B               	movf	___lldiv@quotient+2,w
  3394  02CE  00F2               	movwf	?___lldiv+2
  3395  02CF  087A               	movf	___lldiv@quotient+1,w
  3396  02D0  00F1               	movwf	?___lldiv+1
  3397  02D1  0879               	movf	___lldiv@quotient,w
  3398  02D2  00F0               	movwf	?___lldiv
  3399  02D3                     l317:
  3400  02D3  0008               	return
  3401  02D4                     __end_of___lldiv:
  3402                           
  3403                           	psect	text5
  3404  0067                     __ptext5:	
  3405 ;; *************** function _printf *****************
  3406 ;; Defined at:
  3407 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  3408 ;; Parameters:    Size  Location     Type
  3409 ;;  fmt             1    wreg     PTR const unsigned char 
  3410 ;;		 -> main@buffer(32), 
  3411 ;; Auto vars:     Size  Location     Type
  3412 ;;  fmt             1   71[BANK0 ] PTR const unsigned char 
  3413 ;;		 -> main@buffer(32), 
  3414 ;;  ret             2    0        int 
  3415 ;;  ap              1   72[BANK0 ] PTR void [1]
  3416 ;;		 -> ?_printf(2), ?_sprintf(2), 
  3417 ;; Return value:  Size  Location     Type
  3418 ;;                  2   14[None  ] int 
  3419 ;; Registers used:
  3420 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3427 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3428 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3429 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3430 ;;Total ram usage:        3 bytes
  3431 ;; Hardware stack levels used: 1
  3432 ;; Hardware stack levels required when called: 8
  3433 ;; This function calls:
  3434 ;;		_vfprintf
  3435 ;; This function is called by:
  3436 ;;		_main
  3437 ;; This function uses a non-reentrant model
  3438 ;;
  3439                           
  3440                           
  3441                           ;psect for function _printf
  3442  0067                     _printf:
  3443                           
  3444                           ;incstack = 0
  3445                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3446                           ;printf@fmt stored from wreg
  3447  0067  0020               	movlb	0	; select bank0
  3448  0068  00E7               	movwf	printf@fmt
  3449  0069                     l1599:
  3450  0069  3070               	movlw	(low (?_printf| 0))& (0+255)
  3451  006A  00FD               	movwf	??_printf
  3452  006B  087D               	movf	??_printf,w
  3453  006C  00E8               	movwf	printf@ap
  3454  006D                     l1601:
  3455  006D  0867               	movf	printf@fmt,w
  3456  006E  00DF               	movwf	vfprintf@fmt
  3457  006F  3000               	movlw	0
  3458  0070  00E0               	movwf	vfprintf@fmt+1
  3459  0071  3068               	movlw	(low (printf@ap| 0))& (0+255)
  3460  0072  00FD               	movwf	??_printf
  3461  0073  087D               	movf	??_printf,w
  3462  0074  00E1               	movwf	vfprintf@ap
  3463  0075  3000               	movlw	0
  3464  0076  3181  2166  3180   	fcall	_vfprintf
  3465  0079                     l851:
  3466  0079  0008               	return
  3467  007A                     __end_of_printf:
  3468                           
  3469                           	psect	text6
  3470  0166                     __ptext6:	
  3471 ;; *************** function _vfprintf *****************
  3472 ;; Defined at:
  3473 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;  fp              1    wreg     PTR struct _IO_FILE
  3476 ;;		 -> NULL(0), sprintf@f(5), 
  3477 ;;  fmt             2   63[BANK0 ] PTR const unsigned char 
  3478 ;;		 -> STR_3(13), STR_2(11), STR_1(15), main@buffer(32), 
  3479 ;;  ap              1   65[BANK0 ] PTR PTR void 
  3480 ;;		 -> printf@ap(1), sprintf@ap(1), 
  3481 ;; Auto vars:     Size  Location     Type
  3482 ;;  fp              1   68[BANK0 ] PTR struct _IO_FILE
  3483 ;;		 -> NULL(0), sprintf@f(5), 
  3484 ;;  cfmt            2   69[BANK0 ] PTR unsigned char 
  3485 ;;		 -> STR_3(13), STR_2(11), STR_1(15), main@buffer(32), 
  3486 ;; Return value:  Size  Location     Type
  3487 ;;                  2   63[BANK0 ] int 
  3488 ;; Registers used:
  3489 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3490 ;; Tracked objects:
  3491 ;;		On entry : 0/0
  3492 ;;		On exit  : 0/0
  3493 ;;		Unchanged: 0/0
  3494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3495 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3496 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3497 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3498 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3499 ;;Total ram usage:        8 bytes
  3500 ;; Hardware stack levels used: 1
  3501 ;; Hardware stack levels required when called: 7
  3502 ;; This function calls:
  3503 ;;		_vfpfcnvrt
  3504 ;; This function is called by:
  3505 ;;		_sprintf
  3506 ;;		_printf
  3507 ;; This function uses a non-reentrant model
  3508 ;;
  3509                           
  3510                           
  3511                           ;psect for function _vfprintf
  3512  0166                     _vfprintf:
  3513                           
  3514                           ;incstack = 0
  3515                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3516                           ;vfprintf@fp stored from wreg
  3517  0166  0020               	movlb	0	; select bank0
  3518  0167  00E4               	movwf	vfprintf@fp
  3519  0168                     l1547:
  3520                           
  3521                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3522  0168  0860               	movf	vfprintf@fmt+1,w
  3523  0169  00E6               	movwf	vfprintf@cfmt+1
  3524  016A  085F               	movf	vfprintf@fmt,w
  3525  016B  00E5               	movwf	vfprintf@cfmt
  3526  016C                     l1549:
  3527                           
  3528                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3529  016C  0021               	movlb	1	; select bank1
  3530  016D  01CB               	clrf	_nout^(0+128)
  3531  016E  01CC               	clrf	(_nout+1)^(0+128)
  3532                           
  3533                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3534  016F  2984               	goto	l1553
  3535  0170                     l1551:
  3536                           
  3537                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3538  0170  3065               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  3539  0171  00E2               	movwf	??_vfprintf
  3540  0172  0862               	movf	??_vfprintf,w
  3541  0173  00CE               	movwf	vfpfcnvrt@fmt
  3542  0174  0861               	movf	vfprintf@ap,w
  3543  0175  00E3               	movwf	??_vfprintf+1
  3544  0176  0863               	movf	??_vfprintf+1,w
  3545  0177  00CF               	movwf	vfpfcnvrt@ap
  3546  0178  0864               	movf	vfprintf@fp,w
  3547  0179  3185  2574  3181   	fcall	_vfpfcnvrt
  3548  017C  0020               	movlb	0	; select bank0
  3549  017D  084E               	movf	?_vfpfcnvrt,w
  3550  017E  0021               	movlb	1	; select bank1
  3551  017F  07CB               	addwf	_nout^(0+128),f
  3552  0180  0020               	movlb	0	; select bank0
  3553  0181  084F               	movf	?_vfpfcnvrt+1,w
  3554  0182  0021               	movlb	1	; select bank1
  3555  0183  3DCC               	addwfc	(_nout+1)^(0+128),f
  3556  0184                     l1553:
  3557                           
  3558                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3559  0184  0020               	movlb	0	; select bank0
  3560  0185  0865               	movf	vfprintf@cfmt,w
  3561  0186  0084               	movwf	4
  3562  0187  0866               	movf	vfprintf@cfmt+1,w
  3563  0188  0085               	movwf	5
  3564  0189  0012               	moviw fsr0++
  3565  018A  1D03               	btfss	3,2
  3566  018B  298D               	goto	u1361
  3567  018C  298E               	goto	u1360
  3568  018D                     u1361:
  3569  018D  2970               	goto	l1551
  3570  018E                     u1360:
  3571  018E                     l1555:
  3572                           
  3573                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3574  018E  0021               	movlb	1	; select bank1
  3575  018F  084C               	movf	(_nout+1)^(0+128),w
  3576  0190  0020               	movlb	0	; select bank0
  3577  0191  00E0               	movwf	?_vfprintf+1
  3578  0192  0021               	movlb	1	; select bank1
  3579  0193  084B               	movf	_nout^(0+128),w
  3580  0194  0020               	movlb	0	; select bank0
  3581  0195  00DF               	movwf	?_vfprintf
  3582  0196                     l817:
  3583  0196  0008               	return
  3584  0197                     __end_of_vfprintf:
  3585                           
  3586                           	psect	text7
  3587  0574                     __ptext7:	
  3588 ;; *************** function _vfpfcnvrt *****************
  3589 ;; Defined at:
  3590 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3591 ;; Parameters:    Size  Location     Type
  3592 ;;  fp              1    wreg     PTR struct _IO_FILE
  3593 ;;		 -> NULL(0), sprintf@f(5), 
  3594 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  3595 ;;		 -> vfprintf@cfmt(2), 
  3596 ;;  ap              1   47[BANK0 ] PTR PTR void 
  3597 ;;		 -> printf@ap(1), sprintf@ap(1), 
  3598 ;; Auto vars:     Size  Location     Type
  3599 ;;  fp              1   62[BANK0 ] PTR struct _IO_FILE
  3600 ;;		 -> NULL(0), sprintf@f(5), 
  3601 ;;  ll              8   53[BANK0 ] long long 
  3602 ;;  llu             8    0        unsigned long long 
  3603 ;;  f               4    0        unsigned long long 
  3604 ;;  ct              3    0        unsigned char [3]
  3605 ;;  i               2    0        int 
  3606 ;;  done            2    0        int 
  3607 ;;  cp              2    0        PTR unsigned char 
  3608 ;;  vp              1   61[BANK0 ] PTR void 
  3609 ;;		 -> ?_printf(2), ?_sprintf(2), 
  3610 ;;  c               1    0        unsigned char 
  3611 ;; Return value:  Size  Location     Type
  3612 ;;                  2   46[BANK0 ] int 
  3613 ;; Registers used:
  3614 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3615 ;; Tracked objects:
  3616 ;;		On entry : 0/0
  3617 ;;		On exit  : 0/0
  3618 ;;		Unchanged: 0/0
  3619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3620 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3621 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3622 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3623 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3624 ;;Total ram usage:       17 bytes
  3625 ;; Hardware stack levels used: 1
  3626 ;; Hardware stack levels required when called: 6
  3627 ;; This function calls:
  3628 ;;		_dtoa
  3629 ;;		_fputc
  3630 ;; This function is called by:
  3631 ;;		_vfprintf
  3632 ;; This function uses a non-reentrant model
  3633 ;;
  3634                           
  3635                           
  3636                           ;psect for function _vfpfcnvrt
  3637  0574                     _vfpfcnvrt:
  3638                           
  3639                           ;incstack = 0
  3640                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3641                           ;vfpfcnvrt@fp stored from wreg
  3642  0574  0020               	movlb	0	; select bank0
  3643  0575  00DE               	movwf	vfpfcnvrt@fp
  3644  0576                     l1467:
  3645                           
  3646                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3647  0576  084E               	movf	vfpfcnvrt@fmt,w
  3648  0577  0086               	movwf	6
  3649  0578  0187               	clrf	7
  3650  0579  3F40               	moviw [0]fsr1
  3651  057A  00D0               	movwf	??_vfpfcnvrt
  3652  057B  3F41               	moviw [1]fsr1
  3653  057C  00D1               	movwf	??_vfpfcnvrt+1
  3654  057D  0850               	movf	??_vfpfcnvrt,w
  3655  057E  0084               	movwf	4
  3656  057F  0851               	movf	??_vfpfcnvrt+1,w
  3657  0580  0085               	movwf	5
  3658  0581  0012               	moviw fsr0++
  3659  0582  3A25               	xorlw	37
  3660  0583  1D03               	btfss	3,2
  3661  0584  2D86               	goto	u1241
  3662  0585  2D87               	goto	u1240
  3663  0586                     u1241:
  3664  0586  2E5B               	goto	l1515
  3665  0587                     u1240:
  3666  0587                     l1469:
  3667                           
  3668                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3669  0587  084E               	movf	vfpfcnvrt@fmt,w
  3670  0588  0086               	movwf	6
  3671  0589  0187               	clrf	7
  3672  058A  3001               	movlw	1
  3673  058B  0781               	addwf	1,f
  3674  058C  3141               	addfsr 1,1
  3675  058D  1803               	skipnc
  3676  058E  0A81               	incf	1,f
  3677  058F                     l1471:
  3678                           
  3679                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3680  058F  0021               	movlb	1	; select bank1
  3681  0590  01CD               	clrf	_width^(0+128)
  3682  0591  01CE               	clrf	(_width+1)^(0+128)
  3683  0592  0020               	movlb	0	; select bank0
  3684  0593  01ED               	clrf	_flags
  3685  0594  01EE               	clrf	_flags+1
  3686  0595                     l1473:
  3687                           
  3688                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3689  0595  30FF               	movlw	255
  3690  0596  0021               	movlb	1	; select bank1
  3691  0597  00CF               	movwf	_prec^(0+128)
  3692  0598  30FF               	movlw	255
  3693  0599  00D0               	movwf	(_prec^(0+128)+1)
  3694  059A                     l1475:
  3695                           
  3696                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3697  059A  0020               	movlb	0	; select bank0
  3698  059B  084E               	movf	vfpfcnvrt@fmt,w
  3699  059C  0086               	movwf	6
  3700  059D  0187               	clrf	7
  3701  059E  3F40               	moviw [0]fsr1
  3702  059F  00D0               	movwf	??_vfpfcnvrt
  3703  05A0  3F41               	moviw [1]fsr1
  3704  05A1  00D1               	movwf	??_vfpfcnvrt+1
  3705  05A2  0850               	movf	??_vfpfcnvrt,w
  3706  05A3  0084               	movwf	4
  3707  05A4  0851               	movf	??_vfpfcnvrt+1,w
  3708  05A5  0085               	movwf	5
  3709  05A6  0012               	moviw fsr0++
  3710  05A7  3A64               	xorlw	100
  3711  05A8  1903               	btfsc	3,2
  3712  05A9  2DAB               	goto	u1251
  3713  05AA  2DAC               	goto	u1250
  3714  05AB                     u1251:
  3715  05AB  2DBD               	goto	l1479
  3716  05AC                     u1250:
  3717  05AC                     l1477:
  3718  05AC  084E               	movf	vfpfcnvrt@fmt,w
  3719  05AD  0086               	movwf	6
  3720  05AE  0187               	clrf	7
  3721  05AF  3F40               	moviw [0]fsr1
  3722  05B0  00D0               	movwf	??_vfpfcnvrt
  3723  05B1  3F41               	moviw [1]fsr1
  3724  05B2  00D1               	movwf	??_vfpfcnvrt+1
  3725  05B3  0850               	movf	??_vfpfcnvrt,w
  3726  05B4  0084               	movwf	4
  3727  05B5  0851               	movf	??_vfpfcnvrt+1,w
  3728  05B6  0085               	movwf	5
  3729  05B7  0012               	moviw fsr0++
  3730  05B8  3A69               	xorlw	105
  3731  05B9  1D03               	btfss	3,2
  3732  05BA  2DBC               	goto	u1261
  3733  05BB  2DBD               	goto	u1260
  3734  05BC                     u1261:
  3735  05BC  2DF8               	goto	l1487
  3736  05BD                     u1260:
  3737  05BD                     l1479:
  3738                           
  3739                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3740  05BD  084E               	movf	vfpfcnvrt@fmt,w
  3741  05BE  0086               	movwf	6
  3742  05BF  0187               	clrf	7
  3743  05C0  3001               	movlw	1
  3744  05C1  0781               	addwf	1,f
  3745  05C2  3141               	addfsr 1,1
  3746  05C3  1803               	skipnc
  3747  05C4  0A81               	incf	1,f
  3748  05C5                     l1481:
  3749                           
  3750                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3751  05C5  084F               	movf	vfpfcnvrt@ap,w
  3752  05C6  0086               	movwf	6
  3753  05C7  0187               	clrf	7
  3754  05C8  0801               	movf	1,w
  3755  05C9  0084               	movwf	4
  3756  05CA  0185               	clrf	5
  3757  05CB  3002               	movlw	2
  3758  05CC  0781               	addwf	1,f
  3759  05CD  3F00               	moviw [0]fsr0
  3760  05CE  00D0               	movwf	??_vfpfcnvrt
  3761  05CF  3F01               	moviw [1]fsr0
  3762  05D0  00D1               	movwf	??_vfpfcnvrt+1
  3763  05D1  0850               	movf	??_vfpfcnvrt,w
  3764  05D2  00D5               	movwf	vfpfcnvrt@ll
  3765  05D3  0851               	movf	??_vfpfcnvrt+1,w
  3766  05D4  00D6               	movwf	vfpfcnvrt@ll+1
  3767  05D5  0D89               	rlf	9,f
  3768  05D6  3B89               	subwfb	9,f
  3769  05D7  0989               	comf	9,f
  3770  05D8  00D7               	movwf	vfpfcnvrt@ll+2
  3771  05D9  00D8               	movwf	vfpfcnvrt@ll+3
  3772  05DA  00D9               	movwf	vfpfcnvrt@ll+4
  3773  05DB  00DA               	movwf	vfpfcnvrt@ll+5
  3774  05DC  00DB               	movwf	vfpfcnvrt@ll+6
  3775  05DD  00DC               	movwf	vfpfcnvrt@ll+7
  3776  05DE                     l1483:
  3777                           
  3778                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3779  05DE  0855               	movf	vfpfcnvrt@ll,w
  3780  05DF  00B0               	movwf	dtoa@d
  3781  05E0  0856               	movf	vfpfcnvrt@ll+1,w
  3782  05E1  00B1               	movwf	dtoa@d+1
  3783  05E2  0857               	movf	vfpfcnvrt@ll+2,w
  3784  05E3  00B2               	movwf	dtoa@d+2
  3785  05E4  0858               	movf	vfpfcnvrt@ll+3,w
  3786  05E5  00B3               	movwf	dtoa@d+3
  3787  05E6  0859               	movf	vfpfcnvrt@ll+4,w
  3788  05E7  00B4               	movwf	dtoa@d+4
  3789  05E8  085A               	movf	vfpfcnvrt@ll+5,w
  3790  05E9  00B5               	movwf	dtoa@d+5
  3791  05EA  085B               	movf	vfpfcnvrt@ll+6,w
  3792  05EB  00B6               	movwf	dtoa@d+6
  3793  05EC  085C               	movf	vfpfcnvrt@ll+7,w
  3794  05ED  00B7               	movwf	dtoa@d+7
  3795  05EE  085E               	movf	vfpfcnvrt@fp,w
  3796  05EF  3186  267F  3185   	fcall	_dtoa
  3797  05F2  0020               	movlb	0	; select bank0
  3798  05F3  0831               	movf	?_dtoa+1,w
  3799  05F4  00CF               	movwf	?_vfpfcnvrt+1
  3800  05F5  0830               	movf	?_dtoa,w
  3801  05F6  00CE               	movwf	?_vfpfcnvrt
  3802  05F7  2E7E               	goto	l809
  3803  05F8                     l1487:
  3804                           
  3805                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1099:         if 
      +                          (*fmt[0] == 'n') {
  3806  05F8  084E               	movf	vfpfcnvrt@fmt,w
  3807  05F9  0086               	movwf	6
  3808  05FA  0187               	clrf	7
  3809  05FB  3F40               	moviw [0]fsr1
  3810  05FC  00D0               	movwf	??_vfpfcnvrt
  3811  05FD  3F41               	moviw [1]fsr1
  3812  05FE  00D1               	movwf	??_vfpfcnvrt+1
  3813  05FF  0850               	movf	??_vfpfcnvrt,w
  3814  0600  0084               	movwf	4
  3815  0601  0851               	movf	??_vfpfcnvrt+1,w
  3816  0602  0085               	movwf	5
  3817  0603  0012               	moviw fsr0++
  3818  0604  3A6E               	xorlw	110
  3819  0605  1D03               	btfss	3,2
  3820  0606  2E08               	goto	u1271
  3821  0607  2E09               	goto	u1270
  3822  0608                     u1271:
  3823  0608  2E28               	goto	l1499
  3824  0609                     u1270:
  3825  0609                     l1489:
  3826                           
  3827                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1100:            
      +                           ++*fmt;
  3828  0609  084E               	movf	vfpfcnvrt@fmt,w
  3829  060A  0086               	movwf	6
  3830  060B  0187               	clrf	7
  3831  060C  3001               	movlw	1
  3832  060D  0781               	addwf	1,f
  3833  060E  3141               	addfsr 1,1
  3834  060F  1803               	skipnc
  3835  0610  0A81               	incf	1,f
  3836  0611                     l1491:
  3837                           
  3838                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1101:            
      +                           vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  3839  0611  084F               	movf	vfpfcnvrt@ap,w
  3840  0612  0086               	movwf	6
  3841  0613  0187               	clrf	7
  3842  0614  3F40               	moviw [0]fsr1
  3843  0615  0084               	movwf	4
  3844  0616  0185               	clrf	5
  3845  0617  0A81               	incf	1,f
  3846  0618  0800               	movf	0,w
  3847  0619  00D0               	movwf	??_vfpfcnvrt
  3848  061A  0850               	movf	??_vfpfcnvrt,w
  3849  061B  00DD               	movwf	vfpfcnvrt@vp
  3850  061C                     l1493:
  3851                           
  3852                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1102:            
      +                           *(int *)vp = nout;
  3853  061C  085D               	movf	vfpfcnvrt@vp,w
  3854  061D  0086               	movwf	6
  3855  061E  0187               	clrf	7
  3856  061F  0021               	movlb	1	; select bank1
  3857  0620  084B               	movf	_nout^(0+128),w
  3858  0621  3FC0               	movwi [0]fsr1
  3859  0622  084C               	movf	(_nout+1)^(0+128),w
  3860  0623  3FC1               	movwi [1]fsr1
  3861  0624                     l1495:
  3862                           
  3863                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1103:            
      +                           return 0;
  3864  0624  0020               	movlb	0	; select bank0
  3865  0625  01CE               	clrf	?_vfpfcnvrt
  3866  0626  01CF               	clrf	?_vfpfcnvrt+1
  3867  0627  2E7E               	goto	l809
  3868  0628                     l1499:
  3869                           
  3870                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3871  0628  084E               	movf	vfpfcnvrt@fmt,w
  3872  0629  0086               	movwf	6
  3873  062A  0187               	clrf	7
  3874  062B  3F40               	moviw [0]fsr1
  3875  062C  00D0               	movwf	??_vfpfcnvrt
  3876  062D  3F41               	moviw [1]fsr1
  3877  062E  00D1               	movwf	??_vfpfcnvrt+1
  3878  062F  0850               	movf	??_vfpfcnvrt,w
  3879  0630  0084               	movwf	4
  3880  0631  0851               	movf	??_vfpfcnvrt+1,w
  3881  0632  0085               	movwf	5
  3882  0633  0012               	moviw fsr0++
  3883  0634  3A25               	xorlw	37
  3884  0635  1D03               	btfss	3,2
  3885  0636  2E38               	goto	u1281
  3886  0637  2E39               	goto	u1280
  3887  0638                     u1281:
  3888  0638  2E52               	goto	l1509
  3889  0639                     u1280:
  3890  0639                     l1501:
  3891                           
  3892                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3893  0639  084E               	movf	vfpfcnvrt@fmt,w
  3894  063A  0086               	movwf	6
  3895  063B  0187               	clrf	7
  3896  063C  3001               	movlw	1
  3897  063D  0781               	addwf	1,f
  3898  063E  3141               	addfsr 1,1
  3899  063F  1803               	skipnc
  3900  0640  0A81               	incf	1,f
  3901  0641                     l1503:
  3902                           
  3903                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3904  0641  3025               	movlw	37
  3905  0642  00F3               	movwf	fputc@c
  3906  0643  3000               	movlw	0
  3907  0644  00F4               	movwf	fputc@c+1
  3908  0645  085E               	movf	vfpfcnvrt@fp,w
  3909  0646  00D0               	movwf	??_vfpfcnvrt
  3910  0647  0850               	movf	??_vfpfcnvrt,w
  3911  0648  00F5               	movwf	fputc@fp
  3912  0649  3181  21D5  3185   	fcall	_fputc
  3913  064C                     l1505:
  3914                           
  3915                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3916  064C  3001               	movlw	1
  3917  064D  0020               	movlb	0	; select bank0
  3918  064E  00CE               	movwf	?_vfpfcnvrt
  3919  064F  3000               	movlw	0
  3920  0650  00CF               	movwf	?_vfpfcnvrt+1
  3921  0651  2E7E               	goto	l809
  3922  0652                     l1509:
  3923                           
  3924                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3925  0652  084E               	movf	vfpfcnvrt@fmt,w
  3926  0653  0086               	movwf	6
  3927  0654  0187               	clrf	7
  3928  0655  3001               	movlw	1
  3929  0656  0781               	addwf	1,f
  3930  0657  3141               	addfsr 1,1
  3931  0658  1803               	skipnc
  3932  0659  0A81               	incf	1,f
  3933  065A  2E24               	goto	l1495
  3934  065B                     l1515:
  3935                           
  3936                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3937  065B  084E               	movf	vfpfcnvrt@fmt,w
  3938  065C  0086               	movwf	6
  3939  065D  0187               	clrf	7
  3940  065E  3F40               	moviw [0]fsr1
  3941  065F  00D0               	movwf	??_vfpfcnvrt
  3942  0660  3F41               	moviw [1]fsr1
  3943  0661  00D1               	movwf	??_vfpfcnvrt+1
  3944  0662  0850               	movf	??_vfpfcnvrt,w
  3945  0663  0084               	movwf	4
  3946  0664  0851               	movf	??_vfpfcnvrt+1,w
  3947  0665  0085               	movwf	5
  3948  0666  0800               	movf	0,w	;code access
  3949  0667  00D2               	movwf	??_vfpfcnvrt+2
  3950  0668  01D3               	clrf	??_vfpfcnvrt+3
  3951  0669  0852               	movf	??_vfpfcnvrt+2,w
  3952  066A  00F3               	movwf	fputc@c
  3953  066B  0853               	movf	??_vfpfcnvrt+3,w
  3954  066C  00F4               	movwf	fputc@c+1
  3955  066D  085E               	movf	vfpfcnvrt@fp,w
  3956  066E  00D4               	movwf	??_vfpfcnvrt+4
  3957  066F  0854               	movf	??_vfpfcnvrt+4,w
  3958  0670  00F5               	movwf	fputc@fp
  3959  0671  3181  21D5  3185   	fcall	_fputc
  3960  0674                     l1517:
  3961                           
  3962                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3963  0674  0020               	movlb	0	; select bank0
  3964  0675  084E               	movf	vfpfcnvrt@fmt,w
  3965  0676  0086               	movwf	6
  3966  0677  0187               	clrf	7
  3967  0678  3001               	movlw	1
  3968  0679  0781               	addwf	1,f
  3969  067A  3141               	addfsr 1,1
  3970  067B  1803               	skipnc
  3971  067C  0A81               	incf	1,f
  3972  067D  2E4C               	goto	l1505
  3973  067E                     l809:
  3974  067E  0008               	return
  3975  067F                     __end_of_vfpfcnvrt:
  3976                           
  3977                           	psect	text8
  3978  067F                     __ptext8:	
  3979 ;; *************** function _dtoa *****************
  3980 ;; Defined at:
  3981 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3982 ;; Parameters:    Size  Location     Type
  3983 ;;  fp              1    wreg     PTR struct _IO_FILE
  3984 ;;		 -> NULL(0), sprintf@f(5), 
  3985 ;;  d               8   16[BANK0 ] long long 
  3986 ;; Auto vars:     Size  Location     Type
  3987 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  3988 ;;		 -> NULL(0), sprintf@f(5), 
  3989 ;;  n               8   36[BANK0 ] long long 
  3990 ;;  i               2   44[BANK0 ] int 
  3991 ;;  s               2   34[BANK0 ] int 
  3992 ;;  w               2   32[BANK0 ] int 
  3993 ;;  p               2   30[BANK0 ] int 
  3994 ;; Return value:  Size  Location     Type
  3995 ;;                  2   16[BANK0 ] int 
  3996 ;; Registers used:
  3997 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3998 ;; Tracked objects:
  3999 ;;		On entry : 0/0
  4000 ;;		On exit  : 0/0
  4001 ;;		Unchanged: 0/0
  4002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4003 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4004 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4005 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4006 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4007 ;;Total ram usage:       30 bytes
  4008 ;; Hardware stack levels used: 1
  4009 ;; Hardware stack levels required when called: 5
  4010 ;; This function calls:
  4011 ;;		___aodiv
  4012 ;;		___aomod
  4013 ;;		_abs
  4014 ;;		_pad
  4015 ;; This function is called by:
  4016 ;;		_vfpfcnvrt
  4017 ;; This function uses a non-reentrant model
  4018 ;;
  4019                           
  4020                           
  4021                           ;psect for function _dtoa
  4022  067F                     _dtoa:
  4023                           
  4024                           ;incstack = 0
  4025                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4026                           ;dtoa@fp stored from wreg
  4027  067F  0020               	movlb	0	; select bank0
  4028  0680  00BD               	movwf	dtoa@fp
  4029  0681                     l1409:
  4030                           
  4031                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  4032  0681  0830               	movf	dtoa@d,w
  4033  0682  00C4               	movwf	dtoa@n
  4034  0683  0831               	movf	dtoa@d+1,w
  4035  0684  00C5               	movwf	dtoa@n+1
  4036  0685  0832               	movf	dtoa@d+2,w
  4037  0686  00C6               	movwf	dtoa@n+2
  4038  0687  0833               	movf	dtoa@d+3,w
  4039  0688  00C7               	movwf	dtoa@n+3
  4040  0689  0834               	movf	dtoa@d+4,w
  4041  068A  00C8               	movwf	dtoa@n+4
  4042  068B  0835               	movf	dtoa@d+5,w
  4043  068C  00C9               	movwf	dtoa@n+5
  4044  068D  0836               	movf	dtoa@d+6,w
  4045  068E  00CA               	movwf	dtoa@n+6
  4046  068F  0837               	movf	dtoa@d+7,w
  4047  0690  00CB               	movwf	dtoa@n+7
  4048  0691                     l1411:
  4049                           
  4050                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  4051  0691  3044               	movlw	low dtoa@n
  4052  0692  0086               	movwf	6
  4053  0693  3000               	movlw	high dtoa@n
  4054  0694  0087               	movwf	7
  4055  0695  3F47               	moviw [7]fsr1
  4056  0696  00B8               	movwf	??_dtoa
  4057  0697  1BB8               	btfsc	??_dtoa,7
  4058  0698  2E9A               	goto	u1081
  4059  0699  2E9C               	goto	u1080
  4060  069A                     u1081:
  4061  069A  3001               	movlw	1
  4062  069B  2E9D               	goto	u1090
  4063  069C                     u1080:
  4064  069C  3000               	movlw	0
  4065  069D                     u1090:
  4066  069D  0020               	movlb	0	; select bank0
  4067  069E  00B9               	movwf	??_dtoa+1
  4068  069F  01BA               	clrf	??_dtoa+2
  4069  06A0  0839               	movf	??_dtoa+1,w
  4070  06A1  00C2               	movwf	dtoa@s
  4071  06A2  083A               	movf	??_dtoa+2,w
  4072  06A3  00C3               	movwf	dtoa@s+1
  4073  06A4                     l1413:
  4074                           
  4075                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  4076  06A4  0842               	movf	dtoa@s,w
  4077  06A5  0443               	iorwf	dtoa@s+1,w
  4078  06A6  1903               	btfsc	3,2
  4079  06A7  2EA9               	goto	u1101
  4080  06A8  2EAA               	goto	u1100
  4081  06A9                     u1101:
  4082  06A9  2EC8               	goto	l779
  4083  06AA                     u1100:
  4084  06AA                     l1415:
  4085                           
  4086                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  4087  06AA  09C4               	comf	dtoa@n,f
  4088  06AB  09C5               	comf	dtoa@n+1,f
  4089  06AC  09C6               	comf	dtoa@n+2,f
  4090  06AD  09C7               	comf	dtoa@n+3,f
  4091  06AE  09C8               	comf	dtoa@n+4,f
  4092  06AF  09C9               	comf	dtoa@n+5,f
  4093  06B0  09CA               	comf	dtoa@n+6,f
  4094  06B1  09CB               	comf	dtoa@n+7,f
  4095  06B2  0AC4               	incf	dtoa@n,f
  4096  06B3  1D03               	skipz
  4097  06B4  2EC8               	goto	u111lld
  4098  06B5  0AC5               	incf	dtoa@n+1,f
  4099  06B6  1D03               	skipz
  4100  06B7  2EC8               	goto	u111lld
  4101  06B8  0AC6               	incf	dtoa@n+2,f
  4102  06B9  1D03               	skipz
  4103  06BA  2EC8               	goto	u111lld
  4104  06BB  0AC7               	incf	dtoa@n+3,f
  4105  06BC  1D03               	skipz
  4106  06BD  2EC8               	goto	u111lld
  4107  06BE  0AC8               	incf	dtoa@n+4,f
  4108  06BF  1D03               	skipz
  4109  06C0  2EC8               	goto	u111lld
  4110  06C1  0AC9               	incf	dtoa@n+5,f
  4111  06C2  1D03               	skipz
  4112  06C3  2EC8               	goto	u111lld
  4113  06C4  0ACA               	incf	dtoa@n+6,f
  4114  06C5  1D03               	skipz
  4115  06C6  2EC8               	goto	u111lld
  4116  06C7  0ACB               	incf	dtoa@n+7,f
  4117  06C8                     u111lld:
  4118  06C8                     l779:	
  4119                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 297:     }
  4120                           
  4121                           
  4122                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  4123  06C8  0021               	movlb	1	; select bank1
  4124  06C9  1BD0               	btfsc	(_prec+1)^(0+128),7
  4125  06CA  2ECC               	goto	u1121
  4126  06CB  2ECD               	goto	u1120
  4127  06CC                     u1121:
  4128  06CC  2ED2               	goto	l780
  4129  06CD                     u1120:
  4130  06CD                     l1417:
  4131                           
  4132                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  4133  06CD  30FD               	movlw	253
  4134  06CE  0020               	movlb	0	; select bank0
  4135  06CF  05ED               	andwf	_flags,f
  4136  06D0  30FF               	movlw	255
  4137  06D1  05EE               	andwf	_flags+1,f
  4138  06D2                     l780:	
  4139                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 302:     }
  4140                           
  4141                           
  4142                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  4143  06D2  0021               	movlb	1	; select bank1
  4144  06D3  0850               	movf	(_prec+1)^(0+128),w
  4145  06D4  3A80               	xorlw	128
  4146  06D5  0020               	movlb	0	; select bank0
  4147  06D6  00B8               	movwf	??_dtoa
  4148  06D7  3080               	movlw	128
  4149  06D8  0238               	subwf	??_dtoa,w
  4150  06D9  1D03               	skipz
  4151  06DA  2EDE               	goto	u1135
  4152  06DB  3001               	movlw	1
  4153  06DC  0021               	movlb	1	; select bank1
  4154  06DD  024F               	subwf	_prec^(0+128),w
  4155  06DE                     u1135:
  4156  06DE  1803               	skipnc
  4157  06DF  2EE1               	goto	u1131
  4158  06E0  2EE2               	goto	u1130
  4159  06E1                     u1131:
  4160  06E1  2EE8               	goto	l1421
  4161  06E2                     u1130:
  4162  06E2                     l1419:
  4163  06E2  3001               	movlw	1
  4164  06E3  0020               	movlb	0	; select bank0
  4165  06E4  00BE               	movwf	dtoa@p
  4166  06E5  3000               	movlw	0
  4167  06E6  00BF               	movwf	dtoa@p+1
  4168  06E7  2EF0               	goto	l784
  4169  06E8                     l1421:
  4170  06E8  0021               	movlb	1	; select bank1
  4171  06E9  0850               	movf	(_prec+1)^(0+128),w
  4172  06EA  0020               	movlb	0	; select bank0
  4173  06EB  00BF               	movwf	dtoa@p+1
  4174  06EC  0021               	movlb	1	; select bank1
  4175  06ED  084F               	movf	_prec^(0+128),w
  4176  06EE  0020               	movlb	0	; select bank0
  4177  06EF  00BE               	movwf	dtoa@p
  4178  06F0                     l784:
  4179                           
  4180                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  4181  06F0  0021               	movlb	1	; select bank1
  4182  06F1  084E               	movf	(_width+1)^(0+128),w
  4183  06F2  0020               	movlb	0	; select bank0
  4184  06F3  00C1               	movwf	dtoa@w+1
  4185  06F4  0021               	movlb	1	; select bank1
  4186  06F5  084D               	movf	_width^(0+128),w
  4187  06F6  0020               	movlb	0	; select bank0
  4188  06F7  00C0               	movwf	dtoa@w
  4189  06F8                     l1423:
  4190                           
  4191                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  4192  06F8  0842               	movf	dtoa@s,w
  4193  06F9  0443               	iorwf	dtoa@s+1,w
  4194  06FA  1D03               	btfss	3,2
  4195  06FB  2EFD               	goto	u1141
  4196  06FC  2EFE               	goto	u1140
  4197  06FD                     u1141:
  4198  06FD  2F02               	goto	l1427
  4199  06FE                     u1140:
  4200  06FE                     l1425:
  4201  06FE  1D6D               	btfss	_flags,2
  4202  06FF  2F01               	goto	u1151
  4203  0700  2F02               	goto	u1150
  4204  0701                     u1151:
  4205  0701  2F06               	goto	l785
  4206  0702                     u1150:
  4207  0702                     l1427:
  4208                           
  4209                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  4210  0702  30FF               	movlw	255
  4211  0703  07C0               	addwf	dtoa@w,f
  4212  0704  30FF               	movlw	255
  4213  0705  3DC1               	addwfc	dtoa@w+1,f
  4214  0706                     l785:	
  4215                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 307:     }
  4216                           
  4217                           
  4218                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  4219  0706  301F               	movlw	31
  4220  0707  00CC               	movwf	dtoa@i
  4221  0708  3000               	movlw	0
  4222  0709  00CD               	movwf	dtoa@i+1
  4223  070A                     l1429:
  4224                           
  4225                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  4226  070A  0022               	movlb	2	; select bank2
  4227  070B  01BF               	clrf	(_dbuf^(0+256)+31)
  4228                           
  4229                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4230  070C  2F76               	goto	l788
  4231  070D                     l1431:
  4232                           
  4233                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  4234  070D  30FF               	movlw	255
  4235  070E  0020               	movlb	0	; select bank0
  4236  070F  07CC               	addwf	dtoa@i,f
  4237  0710  30FF               	movlw	255
  4238  0711  3DCD               	addwfc	dtoa@i+1,f
  4239  0712                     l1433:
  4240                           
  4241                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  4242  0712  300A               	movlw	10
  4243  0713  00A0               	movwf	___aomod@divisor
  4244  0714  01A1               	clrf	___aomod@divisor+1
  4245  0715  01A2               	clrf	___aomod@divisor+2
  4246  0716  01A3               	clrf	___aomod@divisor+3
  4247  0717  01A4               	clrf	___aomod@divisor+4
  4248  0718  01A5               	clrf	___aomod@divisor+5
  4249  0719  01A6               	clrf	___aomod@divisor+6
  4250  071A  01A7               	clrf	___aomod@divisor+7
  4251  071B  0844               	movf	dtoa@n,w
  4252  071C  00A8               	movwf	___aomod@dividend
  4253  071D  0845               	movf	dtoa@n+1,w
  4254  071E  00A9               	movwf	___aomod@dividend+1
  4255  071F  0846               	movf	dtoa@n+2,w
  4256  0720  00AA               	movwf	___aomod@dividend+2
  4257  0721  0847               	movf	dtoa@n+3,w
  4258  0722  00AB               	movwf	___aomod@dividend+3
  4259  0723  0848               	movf	dtoa@n+4,w
  4260  0724  00AC               	movwf	___aomod@dividend+4
  4261  0725  0849               	movf	dtoa@n+5,w
  4262  0726  00AD               	movwf	___aomod@dividend+5
  4263  0727  084A               	movf	dtoa@n+6,w
  4264  0728  00AE               	movwf	___aomod@dividend+6
  4265  0729  084B               	movf	dtoa@n+7,w
  4266  072A  00AF               	movwf	___aomod@dividend+7
  4267  072B  3183  2389  3186   	fcall	___aomod
  4268  072E  0020               	movlb	0	; select bank0
  4269  072F  0821               	movf	?___aomod+1,w
  4270  0730  00F4               	movwf	abs@a+1
  4271  0731  0820               	movf	?___aomod,w
  4272  0732  00F3               	movwf	abs@a
  4273  0733  3180  20AC  3186   	fcall	_abs
  4274  0736  0873               	movf	?_abs,w
  4275  0737  3E30               	addlw	48
  4276  0738  0020               	movlb	0	; select bank0
  4277  0739  00B8               	movwf	??_dtoa
  4278  073A  084C               	movf	dtoa@i,w
  4279  073B  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4280  073C  0086               	movwf	6
  4281  073D  3001               	movlw	1	; select bank2/3
  4282  073E  0087               	movwf	7
  4283  073F  0838               	movf	??_dtoa,w
  4284  0740  0081               	movwf	1
  4285  0741                     l1435:
  4286                           
  4287                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  4288  0741  30FF               	movlw	255
  4289  0742  07BE               	addwf	dtoa@p,f
  4290  0743  30FF               	movlw	255
  4291  0744  3DBF               	addwfc	dtoa@p+1,f
  4292  0745                     l1437:
  4293                           
  4294                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  4295  0745  30FF               	movlw	255
  4296  0746  07C0               	addwf	dtoa@w,f
  4297  0747  30FF               	movlw	255
  4298  0748  3DC1               	addwfc	dtoa@w+1,f
  4299  0749                     l1439:
  4300                           
  4301                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  4302  0749  300A               	movlw	10
  4303  074A  00A0               	movwf	___aodiv@divisor
  4304  074B  01A1               	clrf	___aodiv@divisor+1
  4305  074C  01A2               	clrf	___aodiv@divisor+2
  4306  074D  01A3               	clrf	___aodiv@divisor+3
  4307  074E  01A4               	clrf	___aodiv@divisor+4
  4308  074F  01A5               	clrf	___aodiv@divisor+5
  4309  0750  01A6               	clrf	___aodiv@divisor+6
  4310  0751  01A7               	clrf	___aodiv@divisor+7
  4311  0752  0844               	movf	dtoa@n,w
  4312  0753  00A8               	movwf	___aodiv@dividend
  4313  0754  0845               	movf	dtoa@n+1,w
  4314  0755  00A9               	movwf	___aodiv@dividend+1
  4315  0756  0846               	movf	dtoa@n+2,w
  4316  0757  00AA               	movwf	___aodiv@dividend+2
  4317  0758  0847               	movf	dtoa@n+3,w
  4318  0759  00AB               	movwf	___aodiv@dividend+3
  4319  075A  0848               	movf	dtoa@n+4,w
  4320  075B  00AC               	movwf	___aodiv@dividend+4
  4321  075C  0849               	movf	dtoa@n+5,w
  4322  075D  00AD               	movwf	___aodiv@dividend+5
  4323  075E  084A               	movf	dtoa@n+6,w
  4324  075F  00AE               	movwf	___aodiv@dividend+6
  4325  0760  084B               	movf	dtoa@n+7,w
  4326  0761  00AF               	movwf	___aodiv@dividend+7
  4327  0762  3184  2473  3186   	fcall	___aodiv
  4328  0765  0020               	movlb	0	; select bank0
  4329  0766  0820               	movf	?___aodiv,w
  4330  0767  00C4               	movwf	dtoa@n
  4331  0768  0821               	movf	?___aodiv+1,w
  4332  0769  00C5               	movwf	dtoa@n+1
  4333  076A  0822               	movf	?___aodiv+2,w
  4334  076B  00C6               	movwf	dtoa@n+2
  4335  076C  0823               	movf	?___aodiv+3,w
  4336  076D  00C7               	movwf	dtoa@n+3
  4337  076E  0824               	movf	?___aodiv+4,w
  4338  076F  00C8               	movwf	dtoa@n+4
  4339  0770  0825               	movf	?___aodiv+5,w
  4340  0771  00C9               	movwf	dtoa@n+5
  4341  0772  0826               	movf	?___aodiv+6,w
  4342  0773  00CA               	movwf	dtoa@n+6
  4343  0774  0827               	movf	?___aodiv+7,w
  4344  0775  00CB               	movwf	dtoa@n+7
  4345  0776                     l788:	
  4346                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 318:     }
  4347                           
  4348                           
  4349                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4350  0776  0020               	movlb	0	; select bank0
  4351  0777  084D               	movf	dtoa@i+1,w
  4352  0778  3A80               	xorlw	128
  4353  0779  00B8               	movwf	??_dtoa
  4354  077A  3080               	movlw	128
  4355  077B  0238               	subwf	??_dtoa,w
  4356  077C  1D03               	skipz
  4357  077D  2F80               	goto	u1165
  4358  077E  3001               	movlw	1
  4359  077F  024C               	subwf	dtoa@i,w
  4360  0780                     u1165:
  4361  0780  1C03               	skipc
  4362  0781  2F83               	goto	u1161
  4363  0782  2F84               	goto	u1160
  4364  0783                     u1161:
  4365  0783  2FB1               	goto	l1449
  4366  0784                     u1160:
  4367  0784                     l1441:
  4368  0784  0020               	movlb	0	; select bank0
  4369  0785  0844               	movf	dtoa@n,w
  4370  0786  0445               	iorwf	dtoa@n+1,w
  4371  0787  0446               	iorwf	dtoa@n+2,w
  4372  0788  0447               	iorwf	dtoa@n+3,w
  4373  0789  0448               	iorwf	dtoa@n+4,w
  4374  078A  0449               	iorwf	dtoa@n+5,w
  4375  078B  044A               	iorwf	dtoa@n+6,w
  4376  078C  044B               	iorwf	dtoa@n+7,w
  4377  078D  1D03               	skipz
  4378  078E  2F90               	goto	u1171
  4379  078F  2F91               	goto	u1170
  4380  0790                     u1171:
  4381  0790  2F0D               	goto	l1431
  4382  0791                     u1170:
  4383  0791                     l1443:
  4384  0791  083F               	movf	dtoa@p+1,w
  4385  0792  3A80               	xorlw	128
  4386  0793  00B8               	movwf	??_dtoa
  4387  0794  3080               	movlw	128
  4388  0795  0238               	subwf	??_dtoa,w
  4389  0796  1D03               	skipz
  4390  0797  2F9A               	goto	u1185
  4391  0798  3001               	movlw	1
  4392  0799  023E               	subwf	dtoa@p,w
  4393  079A                     u1185:
  4394  079A  1803               	skipnc
  4395  079B  2F9D               	goto	u1181
  4396  079C  2F9E               	goto	u1180
  4397  079D                     u1181:
  4398  079D  2F0D               	goto	l1431
  4399  079E                     u1180:
  4400  079E                     l1445:
  4401  079E  0020               	movlb	0	; select bank0
  4402  079F  0841               	movf	dtoa@w+1,w
  4403  07A0  3A80               	xorlw	128
  4404  07A1  00B8               	movwf	??_dtoa
  4405  07A2  3080               	movlw	128
  4406  07A3  0238               	subwf	??_dtoa,w
  4407  07A4  1D03               	skipz
  4408  07A5  2FA8               	goto	u1195
  4409  07A6  3001               	movlw	1
  4410  07A7  0240               	subwf	dtoa@w,w
  4411  07A8                     u1195:
  4412  07A8  1C03               	skipc
  4413  07A9  2FAB               	goto	u1191
  4414  07AA  2FAC               	goto	u1190
  4415  07AB                     u1191:
  4416  07AB  2FB1               	goto	l1449
  4417  07AC                     u1190:
  4418  07AC                     l1447:
  4419  07AC  0020               	movlb	0	; select bank0
  4420  07AD  18ED               	btfsc	_flags,1
  4421  07AE  2FB0               	goto	u1201
  4422  07AF  2FB1               	goto	u1200
  4423  07B0                     u1201:
  4424  07B0  2F0D               	goto	l1431
  4425  07B1                     u1200:
  4426  07B1                     l1449:
  4427                           
  4428                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  4429  07B1  0020               	movlb	0	; select bank0
  4430  07B2  0842               	movf	dtoa@s,w
  4431  07B3  0443               	iorwf	dtoa@s+1,w
  4432  07B4  1D03               	btfss	3,2
  4433  07B5  2FB7               	goto	u1211
  4434  07B6  2FB8               	goto	u1210
  4435  07B7                     u1211:
  4436  07B7  2FBC               	goto	l1453
  4437  07B8                     u1210:
  4438  07B8                     l1451:
  4439  07B8  1D6D               	btfss	_flags,2
  4440  07B9  2FBB               	goto	u1221
  4441  07BA  2FBC               	goto	u1220
  4442  07BB                     u1221:
  4443  07BB  2FD8               	goto	l1463
  4444  07BC                     u1220:
  4445  07BC                     l1453:
  4446                           
  4447                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  4448  07BC  30FF               	movlw	255
  4449  07BD  07CC               	addwf	dtoa@i,f
  4450  07BE  30FF               	movlw	255
  4451  07BF  3DCD               	addwfc	dtoa@i+1,f
  4452  07C0                     l1455:
  4453                           
  4454                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  4455  07C0  0842               	movf	dtoa@s,w
  4456  07C1  0443               	iorwf	dtoa@s+1,w
  4457  07C2  1D03               	btfss	3,2
  4458  07C3  2FC5               	goto	u1231
  4459  07C4  2FC6               	goto	u1230
  4460  07C5                     u1231:
  4461  07C5  2FCB               	goto	l1459
  4462  07C6                     u1230:
  4463  07C6                     l1457:
  4464  07C6  302B               	movlw	43
  4465  07C7  00BB               	movwf	_dtoa$665
  4466  07C8  3000               	movlw	0
  4467  07C9  00BC               	movwf	_dtoa$665+1
  4468  07CA  2FCF               	goto	l1461
  4469  07CB                     l1459:
  4470  07CB  302D               	movlw	45
  4471  07CC  00BB               	movwf	_dtoa$665
  4472  07CD  3000               	movlw	0
  4473  07CE  00BC               	movwf	_dtoa$665+1
  4474  07CF                     l1461:
  4475  07CF  083B               	movf	_dtoa$665,w
  4476  07D0  00B8               	movwf	??_dtoa
  4477  07D1  084C               	movf	dtoa@i,w
  4478  07D2  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4479  07D3  0086               	movwf	6
  4480  07D4  3001               	movlw	1	; select bank2/3
  4481  07D5  0087               	movwf	7
  4482  07D6  0838               	movf	??_dtoa,w
  4483  07D7  0081               	movwf	1
  4484  07D8                     l1463:
  4485                           
  4486                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  4487  07D8  084C               	movf	dtoa@i,w
  4488  07D9  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4489  07DA  00B8               	movwf	??_dtoa
  4490  07DB  0838               	movf	??_dtoa,w
  4491  07DC  00A7               	movwf	pad@buf
  4492  07DD  0841               	movf	dtoa@w+1,w
  4493  07DE  00A9               	movwf	pad@p+1
  4494  07DF  0840               	movf	dtoa@w,w
  4495  07E0  00A8               	movwf	pad@p
  4496  07E1  083D               	movf	dtoa@fp,w
  4497  07E2  3182  2224  3186   	fcall	_pad
  4498  07E5  0020               	movlb	0	; select bank0
  4499  07E6  0828               	movf	?_pad+1,w
  4500  07E7  00B1               	movwf	?_dtoa+1
  4501  07E8  0827               	movf	?_pad,w
  4502  07E9  00B0               	movwf	?_dtoa
  4503  07EA                     l802:
  4504  07EA  0008               	return
  4505  07EB                     __end_of_dtoa:
  4506                           
  4507                           	psect	text9
  4508  0224                     __ptext9:	
  4509 ;; *************** function _pad *****************
  4510 ;; Defined at:
  4511 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4512 ;; Parameters:    Size  Location     Type
  4513 ;;  fp              1    wreg     PTR struct _IO_FILE
  4514 ;;		 -> NULL(0), sprintf@f(5), 
  4515 ;;  buf             1    7[BANK0 ] PTR unsigned char 
  4516 ;;		 -> dbuf(32), 
  4517 ;;  p               2    8[BANK0 ] int 
  4518 ;; Auto vars:     Size  Location     Type
  4519 ;;  fp              1   14[BANK0 ] PTR struct _IO_FILE
  4520 ;;		 -> NULL(0), sprintf@f(5), 
  4521 ;;  w               2   12[BANK0 ] int 
  4522 ;;  i               2   10[BANK0 ] int 
  4523 ;; Return value:  Size  Location     Type
  4524 ;;                  2    7[BANK0 ] int 
  4525 ;; Registers used:
  4526 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4527 ;; Tracked objects:
  4528 ;;		On entry : 0/0
  4529 ;;		On exit  : 0/0
  4530 ;;		Unchanged: 0/0
  4531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4532 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4533 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4534 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4535 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4536 ;;Total ram usage:        9 bytes
  4537 ;; Hardware stack levels used: 1
  4538 ;; Hardware stack levels required when called: 4
  4539 ;; This function calls:
  4540 ;;		_fputc
  4541 ;;		_fputs
  4542 ;;		_strlen
  4543 ;; This function is called by:
  4544 ;;		_dtoa
  4545 ;; This function uses a non-reentrant model
  4546 ;;
  4547                           
  4548                           
  4549                           ;psect for function _pad
  4550  0224                     _pad:
  4551                           
  4552                           ;incstack = 0
  4553                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4554                           ;pad@fp stored from wreg
  4555  0224  0020               	movlb	0	; select bank0
  4556  0225  00AE               	movwf	pad@fp
  4557  0226                     l1383:
  4558                           
  4559                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4560  0226  1C6D               	btfss	_flags,0
  4561  0227  2A29               	goto	u1031
  4562  0228  2A2A               	goto	u1030
  4563  0229                     u1031:
  4564  0229  2A32               	goto	l1387
  4565  022A                     u1030:
  4566  022A                     l1385:
  4567                           
  4568                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4569  022A  082E               	movf	pad@fp,w
  4570  022B  00FC               	movwf	??_pad
  4571  022C  087C               	movf	??_pad,w
  4572  022D  00FB               	movwf	fputs@fp
  4573  022E  0827               	movf	pad@buf,w
  4574  022F  3181  213D  3182   	fcall	_fputs
  4575  0232                     l1387:
  4576                           
  4577                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4578  0232  0020               	movlb	0	; select bank0
  4579  0233  1BA9               	btfsc	pad@p+1,7
  4580  0234  2A36               	goto	u1041
  4581  0235  2A37               	goto	u1040
  4582  0236                     u1041:
  4583  0236  2A3C               	goto	l1391
  4584  0237                     u1040:
  4585  0237                     l1389:
  4586  0237  0829               	movf	pad@p+1,w
  4587  0238  00AD               	movwf	pad@w+1
  4588  0239  0828               	movf	pad@p,w
  4589  023A  00AC               	movwf	pad@w
  4590  023B  2A3E               	goto	l771
  4591  023C                     l1391:
  4592  023C  01AC               	clrf	pad@w
  4593  023D  01AD               	clrf	pad@w+1
  4594  023E                     l771:
  4595                           
  4596                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4597  023E  01AA               	clrf	pad@i
  4598  023F  01AB               	clrf	pad@i+1
  4599                           
  4600                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4601  0240  2A52               	goto	l1397
  4602  0241                     l1393:
  4603                           
  4604                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4605  0241  3020               	movlw	32
  4606  0242  00F3               	movwf	fputc@c
  4607  0243  3000               	movlw	0
  4608  0244  00F4               	movwf	fputc@c+1
  4609  0245  0020               	movlb	0	; select bank0
  4610  0246  082E               	movf	pad@fp,w
  4611  0247  00FC               	movwf	??_pad
  4612  0248  087C               	movf	??_pad,w
  4613  0249  00F5               	movwf	fputc@fp
  4614  024A  3181  21D5  3182   	fcall	_fputc
  4615  024D                     l1395:
  4616                           
  4617                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4618  024D  3001               	movlw	1
  4619  024E  0020               	movlb	0	; select bank0
  4620  024F  07AA               	addwf	pad@i,f
  4621  0250  3000               	movlw	0
  4622  0251  3DAB               	addwfc	pad@i+1,f
  4623  0252                     l1397:
  4624                           
  4625                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4626  0252  082B               	movf	pad@i+1,w
  4627  0253  3A80               	xorlw	128
  4628  0254  00FC               	movwf	??_pad
  4629  0255  082D               	movf	pad@w+1,w
  4630  0256  3A80               	xorlw	128
  4631  0257  027C               	subwf	??_pad,w
  4632  0258  1D03               	skipz
  4633  0259  2A5C               	goto	u1055
  4634  025A  082C               	movf	pad@w,w
  4635  025B  022A               	subwf	pad@i,w
  4636  025C                     u1055:
  4637  025C  1C03               	skipc
  4638  025D  2A5F               	goto	u1051
  4639  025E  2A60               	goto	u1050
  4640  025F                     u1051:
  4641  025F  2A41               	goto	l1393
  4642  0260                     u1050:
  4643  0260                     l774:
  4644                           
  4645                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4646  0260  0020               	movlb	0	; select bank0
  4647  0261  186D               	btfsc	_flags,0
  4648  0262  2A64               	goto	u1061
  4649  0263  2A65               	goto	u1060
  4650  0264                     u1061:
  4651  0264  2A6D               	goto	l1401
  4652  0265                     u1060:
  4653  0265                     l1399:
  4654                           
  4655                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4656  0265  082E               	movf	pad@fp,w
  4657  0266  00FC               	movwf	??_pad
  4658  0267  087C               	movf	??_pad,w
  4659  0268  00FB               	movwf	fputs@fp
  4660  0269  0827               	movf	pad@buf,w
  4661  026A  3181  213D  3182   	fcall	_fputs
  4662  026D                     l1401:
  4663                           
  4664                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4665  026D  0020               	movlb	0	; select bank0
  4666  026E  0827               	movf	pad@buf,w
  4667  026F  3180  20C6  3182   	fcall	_strlen
  4668  0272  0020               	movlb	0	; select bank0
  4669  0273  082C               	movf	pad@w,w
  4670  0274  0770               	addwf	?_strlen,w
  4671  0275  00A7               	movwf	?_pad
  4672  0276  082D               	movf	pad@w+1,w
  4673  0277  3D71               	addwfc	?_strlen+1,w
  4674  0278  00A8               	movwf	?_pad+1
  4675  0279                     l776:
  4676  0279  0008               	return
  4677  027A                     __end_of_pad:
  4678                           
  4679                           	psect	text10
  4680  00C6                     __ptext10:	
  4681 ;; *************** function _strlen *****************
  4682 ;; Defined at:
  4683 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  4684 ;; Parameters:    Size  Location     Type
  4685 ;;  s               1    wreg     PTR const unsigned char 
  4686 ;;		 -> dbuf(32), 
  4687 ;; Auto vars:     Size  Location     Type
  4688 ;;  s               1    4[COMMON] PTR const unsigned char 
  4689 ;;		 -> dbuf(32), 
  4690 ;;  a               1    3[COMMON] PTR const unsigned char 
  4691 ;;		 -> dbuf(32), 
  4692 ;; Return value:  Size  Location     Type
  4693 ;;                  2    0[COMMON] unsigned int 
  4694 ;; Registers used:
  4695 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4696 ;; Tracked objects:
  4697 ;;		On entry : 0/0
  4698 ;;		On exit  : 0/0
  4699 ;;		Unchanged: 0/0
  4700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4701 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4702 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4703 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4704 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4705 ;;Total ram usage:        5 bytes
  4706 ;; Hardware stack levels used: 1
  4707 ;; This function calls:
  4708 ;;		Nothing
  4709 ;; This function is called by:
  4710 ;;		_pad
  4711 ;; This function uses a non-reentrant model
  4712 ;;
  4713                           
  4714                           
  4715                           ;psect for function _strlen
  4716  00C6                     _strlen:
  4717                           
  4718                           ;incstack = 0
  4719                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  4720                           ;strlen@s stored from wreg
  4721  00C6  00F4               	movwf	strlen@s
  4722  00C7                     l1305:
  4723  00C7  0874               	movf	strlen@s,w
  4724  00C8  00F2               	movwf	??_strlen
  4725  00C9  0872               	movf	??_strlen,w
  4726  00CA  00F3               	movwf	strlen@a
  4727  00CB  28D0               	goto	l1309
  4728  00CC                     l1307:
  4729  00CC  3001               	movlw	1
  4730  00CD  00F2               	movwf	??_strlen
  4731  00CE  0872               	movf	??_strlen,w
  4732  00CF  07F4               	addwf	strlen@s,f
  4733  00D0                     l1309:
  4734  00D0  0874               	movf	strlen@s,w
  4735  00D1  0086               	movwf	6
  4736  00D2  3001               	movlw	1	; select bank2/3
  4737  00D3  0087               	movwf	7
  4738  00D4  0801               	movf	1,w
  4739  00D5  1D03               	btfss	3,2
  4740  00D6  28D8               	goto	u811
  4741  00D7  28D9               	goto	u810
  4742  00D8                     u811:
  4743  00D8  28CC               	goto	l1307
  4744  00D9                     u810:
  4745  00D9                     l1311:
  4746  00D9  0873               	movf	strlen@a,w
  4747  00DA  0274               	subwf	strlen@s,w
  4748  00DB  00F0               	movwf	?_strlen
  4749  00DC  01F1               	clrf	?_strlen+1
  4750  00DD  1BF0               	btfsc	?_strlen,7
  4751  00DE  03F1               	decf	?_strlen+1,f
  4752  00DF                     l857:
  4753  00DF  0008               	return
  4754  00E0                     __end_of_strlen:
  4755                           
  4756                           	psect	text11
  4757  013D                     __ptext11:	
  4758 ;; *************** function _fputs *****************
  4759 ;; Defined at:
  4760 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  4761 ;; Parameters:    Size  Location     Type
  4762 ;;  s               1    wreg     PTR const unsigned char 
  4763 ;;		 -> dbuf(32), 
  4764 ;;  fp              1   11[COMMON] PTR struct _IO_FILE
  4765 ;;		 -> NULL(0), sprintf@f(5), 
  4766 ;; Auto vars:     Size  Location     Type
  4767 ;;  s               1    6[BANK0 ] PTR const unsigned char 
  4768 ;;		 -> dbuf(32), 
  4769 ;;  i               2    4[BANK0 ] int 
  4770 ;;  c               1    3[BANK0 ] unsigned char 
  4771 ;; Return value:  Size  Location     Type
  4772 ;;                  2   11[COMMON] int 
  4773 ;; Registers used:
  4774 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4775 ;; Tracked objects:
  4776 ;;		On entry : 0/0
  4777 ;;		On exit  : 0/0
  4778 ;;		Unchanged: 0/0
  4779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4780 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4781 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4782 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4783 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4784 ;;Total ram usage:        8 bytes
  4785 ;; Hardware stack levels used: 1
  4786 ;; Hardware stack levels required when called: 3
  4787 ;; This function calls:
  4788 ;;		_fputc
  4789 ;; This function is called by:
  4790 ;;		_pad
  4791 ;; This function uses a non-reentrant model
  4792 ;;
  4793                           
  4794                           
  4795                           ;psect for function _fputs
  4796  013D                     _fputs:
  4797                           
  4798                           ;incstack = 0
  4799                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4800                           ;fputs@s stored from wreg
  4801  013D  0020               	movlb	0	; select bank0
  4802  013E  00A6               	movwf	fputs@s
  4803  013F                     l1297:
  4804  013F  01A4               	clrf	fputs@i
  4805  0140  01A5               	clrf	fputs@i+1
  4806  0141  2955               	goto	l1303
  4807  0142                     l1299:
  4808  0142  0823               	movf	fputs@c,w
  4809  0143  00A0               	movwf	??_fputs
  4810  0144  01A1               	clrf	??_fputs+1
  4811  0145  0820               	movf	??_fputs,w
  4812  0146  00F3               	movwf	fputc@c
  4813  0147  0821               	movf	??_fputs+1,w
  4814  0148  00F4               	movwf	fputc@c+1
  4815  0149  087B               	movf	fputs@fp,w
  4816  014A  00A2               	movwf	??_fputs+2
  4817  014B  0822               	movf	??_fputs+2,w
  4818  014C  00F5               	movwf	fputc@fp
  4819  014D  3181  21D5  3181   	fcall	_fputc
  4820  0150                     l1301:
  4821  0150  3001               	movlw	1
  4822  0151  0020               	movlb	0	; select bank0
  4823  0152  07A4               	addwf	fputs@i,f
  4824  0153  3000               	movlw	0
  4825  0154  3DA5               	addwfc	fputs@i+1,f
  4826  0155                     l1303:
  4827  0155  0824               	movf	fputs@i,w
  4828  0156  0726               	addwf	fputs@s,w
  4829  0157  00A0               	movwf	??_fputs
  4830  0158  0820               	movf	??_fputs,w
  4831  0159  0086               	movwf	6
  4832  015A  3001               	movlw	1	; select bank2/3
  4833  015B  0087               	movwf	7
  4834  015C  0801               	movf	1,w
  4835  015D  00A1               	movwf	??_fputs+1
  4836  015E  0821               	movf	??_fputs+1,w
  4837  015F  00A3               	movwf	fputs@c
  4838  0160  0823               	movf	fputs@c,w
  4839  0161  1D03               	btfss	3,2
  4840  0162  2964               	goto	u801
  4841  0163  2965               	goto	u800
  4842  0164                     u801:
  4843  0164  2942               	goto	l1299
  4844  0165                     u800:
  4845  0165                     l844:
  4846  0165  0008               	return
  4847  0166                     __end_of_fputs:
  4848                           
  4849                           	psect	text12
  4850  01D5                     __ptext12:	
  4851 ;; *************** function _fputc *****************
  4852 ;; Defined at:
  4853 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  4854 ;; Parameters:    Size  Location     Type
  4855 ;;  c               2    3[COMMON] int 
  4856 ;;  fp              1    5[COMMON] PTR struct _IO_FILE
  4857 ;;		 -> NULL(0), sprintf@f(5), 
  4858 ;; Auto vars:     Size  Location     Type
  4859 ;;		None
  4860 ;; Return value:  Size  Location     Type
  4861 ;;                  2    3[COMMON] int 
  4862 ;; Registers used:
  4863 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4864 ;; Tracked objects:
  4865 ;;		On entry : 0/0
  4866 ;;		On exit  : 0/0
  4867 ;;		Unchanged: 0/0
  4868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4869 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4871 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4872 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4873 ;;Total ram usage:        8 bytes
  4874 ;; Hardware stack levels used: 1
  4875 ;; Hardware stack levels required when called: 2
  4876 ;; This function calls:
  4877 ;;		_putch
  4878 ;; This function is called by:
  4879 ;;		_pad
  4880 ;;		_vfpfcnvrt
  4881 ;;		_fputs
  4882 ;; This function uses a non-reentrant model
  4883 ;;
  4884                           
  4885                           
  4886                           ;psect for function _fputc
  4887  01D5                     _fputc:
  4888  01D5                     l1281:	
  4889                           ;incstack = 0
  4890                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4891                           
  4892  01D5  0875               	movf	fputc@fp,w
  4893  01D6  1903               	btfsc	3,2
  4894  01D7  29D9               	goto	u761
  4895  01D8  29DA               	goto	u760
  4896  01D9                     u761:
  4897  01D9  29DF               	goto	l1285
  4898  01DA                     u760:
  4899  01DA                     l1283:
  4900  01DA  0875               	movf	fputc@fp,w
  4901  01DB  1D03               	btfss	3,2
  4902  01DC  29DE               	goto	u771
  4903  01DD  29DF               	goto	u770
  4904  01DE                     u771:
  4905  01DE  29E4               	goto	l1287
  4906  01DF                     u770:
  4907  01DF                     l1285:
  4908  01DF  0873               	movf	fputc@c,w
  4909  01E0  3180  204B  3181   	fcall	_putch
  4910  01E3  2A23               	goto	l836
  4911  01E4                     l1287:
  4912  01E4  0875               	movf	fputc@fp,w
  4913  01E5  3E03               	addlw	3
  4914  01E6  0086               	movwf	6
  4915  01E7  0187               	clrf	7
  4916  01E8  0016               	moviw fsr1++
  4917  01E9  0401               	iorwf	1,w
  4918  01EA  1903               	btfsc	3,2
  4919  01EB  29ED               	goto	u781
  4920  01EC  29EE               	goto	u780
  4921  01ED                     u781:
  4922  01ED  2A0B               	goto	l1291
  4923  01EE                     u780:
  4924  01EE                     l1289:
  4925  01EE  0875               	movf	fputc@fp,w
  4926  01EF  3E03               	addlw	3
  4927  01F0  0086               	movwf	6
  4928  01F1  0187               	clrf	7
  4929  01F2  3F40               	moviw [0]fsr1
  4930  01F3  00F6               	movwf	??_fputc
  4931  01F4  3F41               	moviw [1]fsr1
  4932  01F5  00F7               	movwf	??_fputc+1
  4933  01F6  0A75               	incf	fputc@fp,w
  4934  01F7  0086               	movwf	6
  4935  01F8  0187               	clrf	7
  4936  01F9  3F40               	moviw [0]fsr1
  4937  01FA  00F8               	movwf	??_fputc+2
  4938  01FB  3F41               	moviw [1]fsr1
  4939  01FC  00F9               	movwf	??_fputc+3
  4940  01FD  0879               	movf	??_fputc+3,w
  4941  01FE  3A80               	xorlw	128
  4942  01FF  00FA               	movwf	??_fputc+4
  4943  0200  0877               	movf	??_fputc+1,w
  4944  0201  3A80               	xorlw	128
  4945  0202  027A               	subwf	??_fputc+4,w
  4946  0203  1D03               	skipz
  4947  0204  2A07               	goto	u795
  4948  0205  0876               	movf	??_fputc,w
  4949  0206  0278               	subwf	??_fputc+2,w
  4950  0207                     u795:
  4951  0207  1803               	skipnc
  4952  0208  2A0A               	goto	u791
  4953  0209  2A0B               	goto	u790
  4954  020A                     u791:
  4955  020A  2A23               	goto	l836
  4956  020B                     u790:
  4957  020B                     l1291:
  4958  020B  0873               	movf	fputc@c,w
  4959  020C  00F6               	movwf	??_fputc
  4960  020D  0875               	movf	fputc@fp,w
  4961  020E  0086               	movwf	6
  4962  020F  0187               	clrf	7
  4963  0210  0A75               	incf	fputc@fp,w
  4964  0211  0084               	movwf	4
  4965  0212  0185               	clrf	5
  4966  0213  0800               	movf	0,w
  4967  0214  0701               	addwf	1,w
  4968  0215  00F7               	movwf	??_fputc+1
  4969  0216  0877               	movf	??_fputc+1,w
  4970  0217  0086               	movwf	6
  4971  0218  0187               	clrf	7
  4972  0219  0876               	movf	??_fputc,w
  4973  021A  0081               	movwf	1
  4974  021B                     l1293:
  4975  021B  0A75               	incf	fputc@fp,w
  4976  021C  0086               	movwf	6
  4977  021D  0187               	clrf	7
  4978  021E  3001               	movlw	1
  4979  021F  0781               	addwf	1,f
  4980  0220  3141               	addfsr 1,1
  4981  0221  1803               	skipnc
  4982  0222  0A81               	incf	1,f
  4983  0223                     l836:
  4984  0223  0008               	return
  4985  0224                     __end_of_fputc:
  4986                           
  4987                           	psect	text13
  4988  004B                     __ptext13:	
  4989 ;; *************** function _putch *****************
  4990 ;; Defined at:
  4991 ;;		line 64 in file "uart.c"
  4992 ;; Parameters:    Size  Location     Type
  4993 ;;  dato            1    wreg     unsigned char 
  4994 ;; Auto vars:     Size  Location     Type
  4995 ;;  dato            1    2[COMMON] unsigned char 
  4996 ;; Return value:  Size  Location     Type
  4997 ;;                  1    wreg      void 
  4998 ;; Registers used:
  4999 ;;		wreg, status,2, status,0, pclath, cstack
  5000 ;; Tracked objects:
  5001 ;;		On entry : 0/0
  5002 ;;		On exit  : 0/0
  5003 ;;		Unchanged: 0/0
  5004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5006 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5008 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5009 ;;Total ram usage:        1 bytes
  5010 ;; Hardware stack levels used: 1
  5011 ;; Hardware stack levels required when called: 1
  5012 ;; This function calls:
  5013 ;;		_uart_tx
  5014 ;; This function is called by:
  5015 ;;		_fputc
  5016 ;; This function uses a non-reentrant model
  5017 ;;
  5018                           
  5019                           
  5020                           ;psect for function _putch
  5021  004B                     _putch:
  5022                           
  5023                           ;incstack = 0
  5024                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  5025                           ;putch@dato stored from wreg
  5026  004B  00F2               	movwf	putch@dato
  5027  004C                     l1279:
  5028                           
  5029                           ;uart.c: 66:     uart_tx( dato);
  5030  004C  0872               	movf	putch@dato,w
  5031  004D  3180  2057  3180   	fcall	_uart_tx
  5032  0050                     l97:
  5033  0050  0008               	return
  5034  0051                     __end_of_putch:
  5035                           
  5036                           	psect	text14
  5037  0057                     __ptext14:	
  5038 ;; *************** function _uart_tx *****************
  5039 ;; Defined at:
  5040 ;;		line 31 in file "uart.c"
  5041 ;; Parameters:    Size  Location     Type
  5042 ;;  dato            1    wreg     unsigned char 
  5043 ;; Auto vars:     Size  Location     Type
  5044 ;;  dato            1    1[COMMON] unsigned char 
  5045 ;; Return value:  Size  Location     Type
  5046 ;;                  1    wreg      void 
  5047 ;; Registers used:
  5048 ;;		wreg, status,2, status,0
  5049 ;; Tracked objects:
  5050 ;;		On entry : 0/0
  5051 ;;		On exit  : 0/0
  5052 ;;		Unchanged: 0/0
  5053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5055 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5056 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5057 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5058 ;;Total ram usage:        2 bytes
  5059 ;; Hardware stack levels used: 1
  5060 ;; This function calls:
  5061 ;;		Nothing
  5062 ;; This function is called by:
  5063 ;;		_putch
  5064 ;;		_uart_send_string
  5065 ;; This function uses a non-reentrant model
  5066 ;;
  5067                           
  5068                           
  5069                           ;psect for function _uart_tx
  5070  0057                     _uart_tx:
  5071                           
  5072                           ;incstack = 0
  5073                           ; Regs used in _uart_tx: [wreg+status,2+status,0]
  5074                           ;uart_tx@dato stored from wreg
  5075  0057  00F1               	movwf	uart_tx@dato
  5076  0058                     l1273:
  5077  0058                     l1275:	
  5078                           ;uart.c: 33:     while( ( (PIR3>>4) & 0x01) == 0){}
  5079                           
  5080  0058  002E               	movlb	14	; select bank14
  5081  0059  080F               	movf	15,w	;volatile
  5082  005A  00F0               	movwf	??_uart_tx
  5083  005B  3004               	movlw	4
  5084  005C                     u745:
  5085  005C  36F0               	lsrf	??_uart_tx,f
  5086  005D  0B89               	decfsz	9,f
  5087  005E  285C               	goto	u745
  5088  005F  1C70               	btfss	??_uart_tx,0
  5089  0060  2862               	goto	u751
  5090  0061  2863               	goto	u750
  5091  0062                     u751:
  5092  0062  2858               	goto	l1275
  5093  0063                     u750:
  5094  0063                     l1277:
  5095                           
  5096                           ;uart.c: 35:         TXREG = dato;
  5097  0063  0871               	movf	uart_tx@dato,w
  5098  0064  0022               	movlb	2	; select bank2
  5099  0065  009A               	movwf	26	;volatile
  5100  0066                     l81:
  5101  0066  0008               	return
  5102  0067                     __end_of_uart_tx:
  5103                           
  5104                           	psect	text15
  5105  00AC                     __ptext15:	
  5106 ;; *************** function _abs *****************
  5107 ;; Defined at:
  5108 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  5109 ;; Parameters:    Size  Location     Type
  5110 ;;  a               2    3[COMMON] int 
  5111 ;; Auto vars:     Size  Location     Type
  5112 ;;		None
  5113 ;; Return value:  Size  Location     Type
  5114 ;;                  2    3[COMMON] int 
  5115 ;; Registers used:
  5116 ;;		wreg, status,2, status,0
  5117 ;; Tracked objects:
  5118 ;;		On entry : 0/0
  5119 ;;		On exit  : 0/0
  5120 ;;		Unchanged: 0/0
  5121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5122 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5124 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5125 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5126 ;;Total ram usage:        4 bytes
  5127 ;; Hardware stack levels used: 1
  5128 ;; This function calls:
  5129 ;;		Nothing
  5130 ;; This function is called by:
  5131 ;;		_dtoa
  5132 ;; This function uses a non-reentrant model
  5133 ;;
  5134                           
  5135                           
  5136                           ;psect for function _abs
  5137  00AC                     _abs:
  5138  00AC                     l1405:	
  5139                           ;incstack = 0
  5140                           ; Regs used in _abs: [wreg+status,2+status,0]
  5141                           
  5142  00AC  0874               	movf	abs@a+1,w
  5143  00AD  3A80               	xorlw	128
  5144  00AE  00F5               	movwf	??_abs
  5145  00AF  3080               	movlw	128
  5146  00B0  0275               	subwf	??_abs,w
  5147  00B1  1D03               	skipz
  5148  00B2  28B5               	goto	u1075
  5149  00B3  3001               	movlw	1
  5150  00B4  0273               	subwf	abs@a,w
  5151  00B5                     u1075:
  5152  00B5  1803               	skipnc
  5153  00B6  28B8               	goto	u1071
  5154  00B7  28B9               	goto	u1070
  5155  00B8                     u1071:
  5156  00B8  28C5               	goto	l821
  5157  00B9                     u1070:
  5158  00B9                     l1407:
  5159  00B9  0973               	comf	abs@a,w
  5160  00BA  00F5               	movwf	??_abs
  5161  00BB  0974               	comf	abs@a+1,w
  5162  00BC  00F6               	movwf	??_abs+1
  5163  00BD  0AF5               	incf	??_abs,f
  5164  00BE  1903               	skipnz
  5165  00BF  0AF6               	incf	??_abs+1,f
  5166  00C0  0875               	movf	??_abs,w
  5167  00C1  00F3               	movwf	?_abs
  5168  00C2  0876               	movf	??_abs+1,w
  5169  00C3  00F4               	movwf	?_abs+1
  5170  00C4  28C5               	goto	l824
  5171  00C5                     l821:
  5172  00C5                     l824:
  5173  00C5  0008               	return
  5174  00C6                     __end_of_abs:
  5175                           
  5176                           	psect	text16
  5177  0389                     __ptext16:	
  5178 ;; *************** function ___aomod *****************
  5179 ;; Defined at:
  5180 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  5181 ;; Parameters:    Size  Location     Type
  5182 ;;  divisor         8    0[BANK0 ] long long 
  5183 ;;  dividend        8    8[BANK0 ] long long 
  5184 ;; Auto vars:     Size  Location     Type
  5185 ;;  sign            1    2[COMMON] unsigned char 
  5186 ;;  counter         1    1[COMMON] unsigned char 
  5187 ;; Return value:  Size  Location     Type
  5188 ;;                  8    0[BANK0 ] long long 
  5189 ;; Registers used:
  5190 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5191 ;; Tracked objects:
  5192 ;;		On entry : 0/0
  5193 ;;		On exit  : 0/0
  5194 ;;		Unchanged: 0/0
  5195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5196 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5197 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5198 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5199 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5200 ;;Total ram usage:       19 bytes
  5201 ;; Hardware stack levels used: 1
  5202 ;; This function calls:
  5203 ;;		Nothing
  5204 ;; This function is called by:
  5205 ;;		_dtoa
  5206 ;; This function uses a non-reentrant model
  5207 ;;
  5208                           
  5209                           
  5210                           ;psect for function ___aomod
  5211  0389                     ___aomod:
  5212  0389                     l1353:	
  5213                           ;incstack = 0
  5214                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  5215                           
  5216  0389  01F2               	clrf	___aomod@sign
  5217  038A                     l1355:
  5218  038A  3028               	movlw	low ___aomod@dividend
  5219  038B  0086               	movwf	6
  5220  038C  3000               	movlw	high ___aomod@dividend
  5221  038D  0087               	movwf	7
  5222  038E  3F47               	moviw [7]fsr1
  5223  038F  00F0               	movwf	??___aomod
  5224  0390  1FF0               	btfss	??___aomod,7
  5225  0391  2B93               	goto	u931
  5226  0392  2B94               	goto	u930
  5227  0393                     u931:
  5228  0393  2BB5               	goto	l1359
  5229  0394                     u930:
  5230  0394                     l1357:
  5231  0394  0020               	movlb	0	; select bank0
  5232  0395  09A8               	comf	___aomod@dividend,f
  5233  0396  09A9               	comf	___aomod@dividend+1,f
  5234  0397  09AA               	comf	___aomod@dividend+2,f
  5235  0398  09AB               	comf	___aomod@dividend+3,f
  5236  0399  09AC               	comf	___aomod@dividend+4,f
  5237  039A  09AD               	comf	___aomod@dividend+5,f
  5238  039B  09AE               	comf	___aomod@dividend+6,f
  5239  039C  09AF               	comf	___aomod@dividend+7,f
  5240  039D  0AA8               	incf	___aomod@dividend,f
  5241  039E  1D03               	skipz
  5242  039F  2BB3               	goto	u94lld
  5243  03A0  0AA9               	incf	___aomod@dividend+1,f
  5244  03A1  1D03               	skipz
  5245  03A2  2BB3               	goto	u94lld
  5246  03A3  0AAA               	incf	___aomod@dividend+2,f
  5247  03A4  1D03               	skipz
  5248  03A5  2BB3               	goto	u94lld
  5249  03A6  0AAB               	incf	___aomod@dividend+3,f
  5250  03A7  1D03               	skipz
  5251  03A8  2BB3               	goto	u94lld
  5252  03A9  0AAC               	incf	___aomod@dividend+4,f
  5253  03AA  1D03               	skipz
  5254  03AB  2BB3               	goto	u94lld
  5255  03AC  0AAD               	incf	___aomod@dividend+5,f
  5256  03AD  1D03               	skipz
  5257  03AE  2BB3               	goto	u94lld
  5258  03AF  0AAE               	incf	___aomod@dividend+6,f
  5259  03B0  1D03               	skipz
  5260  03B1  2BB3               	goto	u94lld
  5261  03B2  0AAF               	incf	___aomod@dividend+7,f
  5262  03B3                     u94lld:
  5263  03B3  01F2               	clrf	___aomod@sign
  5264  03B4  0AF2               	incf	___aomod@sign,f
  5265  03B5                     l1359:
  5266  03B5  3020               	movlw	low ___aomod@divisor
  5267  03B6  0086               	movwf	6
  5268  03B7  3000               	movlw	high ___aomod@divisor
  5269  03B8  0087               	movwf	7
  5270  03B9  3F47               	moviw [7]fsr1
  5271  03BA  00F0               	movwf	??___aomod
  5272  03BB  1FF0               	btfss	??___aomod,7
  5273  03BC  2BBE               	goto	u951
  5274  03BD  2BBF               	goto	u950
  5275  03BE                     u951:
  5276  03BE  2BDE               	goto	l1363
  5277  03BF                     u950:
  5278  03BF                     l1361:
  5279  03BF  0020               	movlb	0	; select bank0
  5280  03C0  09A0               	comf	___aomod@divisor,f
  5281  03C1  09A1               	comf	___aomod@divisor+1,f
  5282  03C2  09A2               	comf	___aomod@divisor+2,f
  5283  03C3  09A3               	comf	___aomod@divisor+3,f
  5284  03C4  09A4               	comf	___aomod@divisor+4,f
  5285  03C5  09A5               	comf	___aomod@divisor+5,f
  5286  03C6  09A6               	comf	___aomod@divisor+6,f
  5287  03C7  09A7               	comf	___aomod@divisor+7,f
  5288  03C8  0AA0               	incf	___aomod@divisor,f
  5289  03C9  1D03               	skipz
  5290  03CA  2BDE               	goto	u96lld
  5291  03CB  0AA1               	incf	___aomod@divisor+1,f
  5292  03CC  1D03               	skipz
  5293  03CD  2BDE               	goto	u96lld
  5294  03CE  0AA2               	incf	___aomod@divisor+2,f
  5295  03CF  1D03               	skipz
  5296  03D0  2BDE               	goto	u96lld
  5297  03D1  0AA3               	incf	___aomod@divisor+3,f
  5298  03D2  1D03               	skipz
  5299  03D3  2BDE               	goto	u96lld
  5300  03D4  0AA4               	incf	___aomod@divisor+4,f
  5301  03D5  1D03               	skipz
  5302  03D6  2BDE               	goto	u96lld
  5303  03D7  0AA5               	incf	___aomod@divisor+5,f
  5304  03D8  1D03               	skipz
  5305  03D9  2BDE               	goto	u96lld
  5306  03DA  0AA6               	incf	___aomod@divisor+6,f
  5307  03DB  1D03               	skipz
  5308  03DC  2BDE               	goto	u96lld
  5309  03DD  0AA7               	incf	___aomod@divisor+7,f
  5310  03DE                     u96lld:
  5311  03DE                     l1363:
  5312  03DE  0020               	movlb	0	; select bank0
  5313  03DF  0820               	movf	___aomod@divisor,w
  5314  03E0  0421               	iorwf	___aomod@divisor+1,w
  5315  03E1  0422               	iorwf	___aomod@divisor+2,w
  5316  03E2  0423               	iorwf	___aomod@divisor+3,w
  5317  03E3  0424               	iorwf	___aomod@divisor+4,w
  5318  03E4  0425               	iorwf	___aomod@divisor+5,w
  5319  03E5  0426               	iorwf	___aomod@divisor+6,w
  5320  03E6  0427               	iorwf	___aomod@divisor+7,w
  5321  03E7  1903               	skipnz
  5322  03E8  2BEA               	goto	u971
  5323  03E9  2BEB               	goto	u970
  5324  03EA                     u971:
  5325  03EA  2C3E               	goto	l1379
  5326  03EB                     u970:
  5327  03EB                     l1365:
  5328  03EB  01F1               	clrf	___aomod@counter
  5329  03EC  0AF1               	incf	___aomod@counter,f
  5330  03ED  2BFA               	goto	l1371
  5331  03EE                     l1367:
  5332  03EE  35A0               	lslf	___aomod@divisor,f
  5333  03EF  0DA1               	rlf	___aomod@divisor+1,f
  5334  03F0  0DA2               	rlf	___aomod@divisor+2,f
  5335  03F1  0DA3               	rlf	___aomod@divisor+3,f
  5336  03F2  0DA4               	rlf	___aomod@divisor+4,f
  5337  03F3  0DA5               	rlf	___aomod@divisor+5,f
  5338  03F4  0DA6               	rlf	___aomod@divisor+6,f
  5339  03F5  0DA7               	rlf	___aomod@divisor+7,f
  5340  03F6                     l1369:
  5341  03F6  3001               	movlw	1
  5342  03F7  00F0               	movwf	??___aomod
  5343  03F8  0870               	movf	??___aomod,w
  5344  03F9  07F1               	addwf	___aomod@counter,f
  5345  03FA                     l1371:
  5346  03FA  1FA7               	btfss	___aomod@divisor+7,7
  5347  03FB  2BFD               	goto	u981
  5348  03FC  2BFE               	goto	u980
  5349  03FD                     u981:
  5350  03FD  2BEE               	goto	l1367
  5351  03FE                     u980:
  5352  03FE                     l1373:
  5353  03FE  0827               	movf	___aomod@divisor+7,w
  5354  03FF  022F               	subwf	___aomod@dividend+7,w
  5355  0400  1D03               	skipz
  5356  0401  2C1C               	goto	u995
  5357  0402  0826               	movf	___aomod@divisor+6,w
  5358  0403  022E               	subwf	___aomod@dividend+6,w
  5359  0404  1D03               	skipz
  5360  0405  2C1C               	goto	u995
  5361  0406  0825               	movf	___aomod@divisor+5,w
  5362  0407  022D               	subwf	___aomod@dividend+5,w
  5363  0408  1D03               	skipz
  5364  0409  2C1C               	goto	u995
  5365  040A  0824               	movf	___aomod@divisor+4,w
  5366  040B  022C               	subwf	___aomod@dividend+4,w
  5367  040C  1D03               	skipz
  5368  040D  2C1C               	goto	u995
  5369  040E  0823               	movf	___aomod@divisor+3,w
  5370  040F  022B               	subwf	___aomod@dividend+3,w
  5371  0410  1D03               	skipz
  5372  0411  2C1C               	goto	u995
  5373  0412  0822               	movf	___aomod@divisor+2,w
  5374  0413  022A               	subwf	___aomod@dividend+2,w
  5375  0414  1D03               	skipz
  5376  0415  2C1C               	goto	u995
  5377  0416  0821               	movf	___aomod@divisor+1,w
  5378  0417  0229               	subwf	___aomod@dividend+1,w
  5379  0418  1D03               	skipz
  5380  0419  2C1C               	goto	u995
  5381  041A  0820               	movf	___aomod@divisor,w
  5382  041B  0228               	subwf	___aomod@dividend,w
  5383  041C                     u995:
  5384  041C  1C03               	skipc
  5385  041D  2C1F               	goto	u991
  5386  041E  2C20               	goto	u990
  5387  041F                     u991:
  5388  041F  2C30               	goto	l1377
  5389  0420                     u990:
  5390  0420                     l1375:
  5391  0420  0820               	movf	___aomod@divisor,w
  5392  0421  02A8               	subwf	___aomod@dividend,f
  5393  0422  0821               	movf	___aomod@divisor+1,w
  5394  0423  3BA9               	subwfb	___aomod@dividend+1,f
  5395  0424  0822               	movf	___aomod@divisor+2,w
  5396  0425  3BAA               	subwfb	___aomod@dividend+2,f
  5397  0426  0823               	movf	___aomod@divisor+3,w
  5398  0427  3BAB               	subwfb	___aomod@dividend+3,f
  5399  0428  0824               	movf	___aomod@divisor+4,w
  5400  0429  3BAC               	subwfb	___aomod@dividend+4,f
  5401  042A  0825               	movf	___aomod@divisor+5,w
  5402  042B  3BAD               	subwfb	___aomod@dividend+5,f
  5403  042C  0826               	movf	___aomod@divisor+6,w
  5404  042D  3BAE               	subwfb	___aomod@dividend+6,f
  5405  042E  0827               	movf	___aomod@divisor+7,w
  5406  042F  3BAF               	subwfb	___aomod@dividend+7,f
  5407  0430                     l1377:
  5408  0430  36A7               	lsrf	___aomod@divisor+7,f
  5409  0431  0CA6               	rrf	___aomod@divisor+6,f
  5410  0432  0CA5               	rrf	___aomod@divisor+5,f
  5411  0433  0CA4               	rrf	___aomod@divisor+4,f
  5412  0434  0CA3               	rrf	___aomod@divisor+3,f
  5413  0435  0CA2               	rrf	___aomod@divisor+2,f
  5414  0436  0CA1               	rrf	___aomod@divisor+1,f
  5415  0437  0CA0               	rrf	___aomod@divisor,f
  5416  0438  3001               	movlw	1
  5417  0439  02F1               	subwf	___aomod@counter,f
  5418  043A  1D03               	btfss	3,2
  5419  043B  2C3D               	goto	u1001
  5420  043C  2C3E               	goto	u1000
  5421  043D                     u1001:
  5422  043D  2BFE               	goto	l1373
  5423  043E                     u1000:
  5424  043E                     l1379:
  5425  043E  0872               	movf	___aomod@sign,w
  5426  043F  1903               	btfsc	3,2
  5427  0440  2C42               	goto	u1011
  5428  0441  2C43               	goto	u1010
  5429  0442                     u1011:
  5430  0442  2C61               	goto	l394
  5431  0443                     u1010:
  5432  0443                     l1381:
  5433  0443  09A8               	comf	___aomod@dividend,f
  5434  0444  09A9               	comf	___aomod@dividend+1,f
  5435  0445  09AA               	comf	___aomod@dividend+2,f
  5436  0446  09AB               	comf	___aomod@dividend+3,f
  5437  0447  09AC               	comf	___aomod@dividend+4,f
  5438  0448  09AD               	comf	___aomod@dividend+5,f
  5439  0449  09AE               	comf	___aomod@dividend+6,f
  5440  044A  09AF               	comf	___aomod@dividend+7,f
  5441  044B  0AA8               	incf	___aomod@dividend,f
  5442  044C  1D03               	skipz
  5443  044D  2C61               	goto	u102lld
  5444  044E  0AA9               	incf	___aomod@dividend+1,f
  5445  044F  1D03               	skipz
  5446  0450  2C61               	goto	u102lld
  5447  0451  0AAA               	incf	___aomod@dividend+2,f
  5448  0452  1D03               	skipz
  5449  0453  2C61               	goto	u102lld
  5450  0454  0AAB               	incf	___aomod@dividend+3,f
  5451  0455  1D03               	skipz
  5452  0456  2C61               	goto	u102lld
  5453  0457  0AAC               	incf	___aomod@dividend+4,f
  5454  0458  1D03               	skipz
  5455  0459  2C61               	goto	u102lld
  5456  045A  0AAD               	incf	___aomod@dividend+5,f
  5457  045B  1D03               	skipz
  5458  045C  2C61               	goto	u102lld
  5459  045D  0AAE               	incf	___aomod@dividend+6,f
  5460  045E  1D03               	skipz
  5461  045F  2C61               	goto	u102lld
  5462  0460  0AAF               	incf	___aomod@dividend+7,f
  5463  0461                     u102lld:
  5464  0461                     l394:
  5465  0461  0020               	movlb	0	; select bank0
  5466  0462  0828               	movf	___aomod@dividend,w
  5467  0463  00A0               	movwf	?___aomod
  5468  0464  0829               	movf	___aomod@dividend+1,w
  5469  0465  00A1               	movwf	?___aomod+1
  5470  0466  082A               	movf	___aomod@dividend+2,w
  5471  0467  00A2               	movwf	?___aomod+2
  5472  0468  082B               	movf	___aomod@dividend+3,w
  5473  0469  00A3               	movwf	?___aomod+3
  5474  046A  082C               	movf	___aomod@dividend+4,w
  5475  046B  00A4               	movwf	?___aomod+4
  5476  046C  082D               	movf	___aomod@dividend+5,w
  5477  046D  00A5               	movwf	?___aomod+5
  5478  046E  082E               	movf	___aomod@dividend+6,w
  5479  046F  00A6               	movwf	?___aomod+6
  5480  0470  082F               	movf	___aomod@dividend+7,w
  5481  0471  00A7               	movwf	?___aomod+7
  5482  0472                     l395:
  5483  0472  0008               	return
  5484  0473                     __end_of___aomod:
  5485                           
  5486                           	psect	text17
  5487  0473                     __ptext17:	
  5488 ;; *************** function ___aodiv *****************
  5489 ;; Defined at:
  5490 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  5491 ;; Parameters:    Size  Location     Type
  5492 ;;  divisor         8    0[BANK0 ] long long 
  5493 ;;  dividend        8    8[BANK0 ] long long 
  5494 ;; Auto vars:     Size  Location     Type
  5495 ;;  quotient        8    3[COMMON] long long 
  5496 ;;  sign            1    2[COMMON] unsigned char 
  5497 ;;  counter         1    1[COMMON] unsigned char 
  5498 ;; Return value:  Size  Location     Type
  5499 ;;                  8    0[BANK0 ] long long 
  5500 ;; Registers used:
  5501 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5502 ;; Tracked objects:
  5503 ;;		On entry : 0/0
  5504 ;;		On exit  : 0/0
  5505 ;;		Unchanged: 0/0
  5506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5507 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5508 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5509 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5510 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5511 ;;Total ram usage:       27 bytes
  5512 ;; Hardware stack levels used: 1
  5513 ;; This function calls:
  5514 ;;		Nothing
  5515 ;; This function is called by:
  5516 ;;		_dtoa
  5517 ;; This function uses a non-reentrant model
  5518 ;;
  5519                           
  5520                           
  5521                           ;psect for function ___aodiv
  5522  0473                     ___aodiv:
  5523  0473                     l1315:	
  5524                           ;incstack = 0
  5525                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  5526                           
  5527  0473  01F2               	clrf	___aodiv@sign
  5528  0474                     l1317:
  5529  0474  3020               	movlw	low ___aodiv@divisor
  5530  0475  0086               	movwf	6
  5531  0476  3000               	movlw	high ___aodiv@divisor
  5532  0477  0087               	movwf	7
  5533  0478  3F47               	moviw [7]fsr1
  5534  0479  00F0               	movwf	??___aodiv
  5535  047A  1FF0               	btfss	??___aodiv,7
  5536  047B  2C7D               	goto	u821
  5537  047C  2C7E               	goto	u820
  5538  047D                     u821:
  5539  047D  2C9F               	goto	l1321
  5540  047E                     u820:
  5541  047E                     l1319:
  5542  047E  0020               	movlb	0	; select bank0
  5543  047F  09A0               	comf	___aodiv@divisor,f
  5544  0480  09A1               	comf	___aodiv@divisor+1,f
  5545  0481  09A2               	comf	___aodiv@divisor+2,f
  5546  0482  09A3               	comf	___aodiv@divisor+3,f
  5547  0483  09A4               	comf	___aodiv@divisor+4,f
  5548  0484  09A5               	comf	___aodiv@divisor+5,f
  5549  0485  09A6               	comf	___aodiv@divisor+6,f
  5550  0486  09A7               	comf	___aodiv@divisor+7,f
  5551  0487  0AA0               	incf	___aodiv@divisor,f
  5552  0488  1D03               	skipz
  5553  0489  2C9D               	goto	u83lld
  5554  048A  0AA1               	incf	___aodiv@divisor+1,f
  5555  048B  1D03               	skipz
  5556  048C  2C9D               	goto	u83lld
  5557  048D  0AA2               	incf	___aodiv@divisor+2,f
  5558  048E  1D03               	skipz
  5559  048F  2C9D               	goto	u83lld
  5560  0490  0AA3               	incf	___aodiv@divisor+3,f
  5561  0491  1D03               	skipz
  5562  0492  2C9D               	goto	u83lld
  5563  0493  0AA4               	incf	___aodiv@divisor+4,f
  5564  0494  1D03               	skipz
  5565  0495  2C9D               	goto	u83lld
  5566  0496  0AA5               	incf	___aodiv@divisor+5,f
  5567  0497  1D03               	skipz
  5568  0498  2C9D               	goto	u83lld
  5569  0499  0AA6               	incf	___aodiv@divisor+6,f
  5570  049A  1D03               	skipz
  5571  049B  2C9D               	goto	u83lld
  5572  049C  0AA7               	incf	___aodiv@divisor+7,f
  5573  049D                     u83lld:
  5574  049D  01F2               	clrf	___aodiv@sign
  5575  049E  0AF2               	incf	___aodiv@sign,f
  5576  049F                     l1321:
  5577  049F  3028               	movlw	low ___aodiv@dividend
  5578  04A0  0086               	movwf	6
  5579  04A1  3000               	movlw	high ___aodiv@dividend
  5580  04A2  0087               	movwf	7
  5581  04A3  3F47               	moviw [7]fsr1
  5582  04A4  00F0               	movwf	??___aodiv
  5583  04A5  1FF0               	btfss	??___aodiv,7
  5584  04A6  2CA8               	goto	u841
  5585  04A7  2CA9               	goto	u840
  5586  04A8                     u841:
  5587  04A8  2CCC               	goto	l1327
  5588  04A9                     u840:
  5589  04A9                     l1323:
  5590  04A9  0020               	movlb	0	; select bank0
  5591  04AA  09A8               	comf	___aodiv@dividend,f
  5592  04AB  09A9               	comf	___aodiv@dividend+1,f
  5593  04AC  09AA               	comf	___aodiv@dividend+2,f
  5594  04AD  09AB               	comf	___aodiv@dividend+3,f
  5595  04AE  09AC               	comf	___aodiv@dividend+4,f
  5596  04AF  09AD               	comf	___aodiv@dividend+5,f
  5597  04B0  09AE               	comf	___aodiv@dividend+6,f
  5598  04B1  09AF               	comf	___aodiv@dividend+7,f
  5599  04B2  0AA8               	incf	___aodiv@dividend,f
  5600  04B3  1D03               	skipz
  5601  04B4  2CC8               	goto	u85lld
  5602  04B5  0AA9               	incf	___aodiv@dividend+1,f
  5603  04B6  1D03               	skipz
  5604  04B7  2CC8               	goto	u85lld
  5605  04B8  0AAA               	incf	___aodiv@dividend+2,f
  5606  04B9  1D03               	skipz
  5607  04BA  2CC8               	goto	u85lld
  5608  04BB  0AAB               	incf	___aodiv@dividend+3,f
  5609  04BC  1D03               	skipz
  5610  04BD  2CC8               	goto	u85lld
  5611  04BE  0AAC               	incf	___aodiv@dividend+4,f
  5612  04BF  1D03               	skipz
  5613  04C0  2CC8               	goto	u85lld
  5614  04C1  0AAD               	incf	___aodiv@dividend+5,f
  5615  04C2  1D03               	skipz
  5616  04C3  2CC8               	goto	u85lld
  5617  04C4  0AAE               	incf	___aodiv@dividend+6,f
  5618  04C5  1D03               	skipz
  5619  04C6  2CC8               	goto	u85lld
  5620  04C7  0AAF               	incf	___aodiv@dividend+7,f
  5621  04C8                     u85lld:
  5622  04C8                     l1325:
  5623  04C8  3001               	movlw	1
  5624  04C9  00F0               	movwf	??___aodiv
  5625  04CA  0870               	movf	??___aodiv,w
  5626  04CB  06F2               	xorwf	___aodiv@sign,f
  5627  04CC                     l1327:
  5628  04CC  3073               	movlw	low ___aodiv@quotient
  5629  04CD  0086               	movwf	6
  5630  04CE  3000               	movlw	high ___aodiv@quotient
  5631  04CF  0087               	movwf	7
  5632  04D0  3008               	movlw	8
  5633  04D1  00F0               	movwf	??___aodiv
  5634  04D2  3000               	movlw	0
  5635  04D3                     u860:
  5636  04D3  001E               	movwi fsr1++
  5637  04D4  0BF0               	decfsz	??___aodiv,f
  5638  04D5  2CD3               	goto	u860
  5639  04D6                     l1329:
  5640  04D6  0020               	movlb	0	; select bank0
  5641  04D7  0820               	movf	___aodiv@divisor,w
  5642  04D8  0421               	iorwf	___aodiv@divisor+1,w
  5643  04D9  0422               	iorwf	___aodiv@divisor+2,w
  5644  04DA  0423               	iorwf	___aodiv@divisor+3,w
  5645  04DB  0424               	iorwf	___aodiv@divisor+4,w
  5646  04DC  0425               	iorwf	___aodiv@divisor+5,w
  5647  04DD  0426               	iorwf	___aodiv@divisor+6,w
  5648  04DE  0427               	iorwf	___aodiv@divisor+7,w
  5649  04DF  1903               	skipnz
  5650  04E0  2CE2               	goto	u871
  5651  04E1  2CE3               	goto	u870
  5652  04E2                     u871:
  5653  04E2  2D3F               	goto	l1349
  5654  04E3                     u870:
  5655  04E3                     l1331:
  5656  04E3  01F1               	clrf	___aodiv@counter
  5657  04E4  0AF1               	incf	___aodiv@counter,f
  5658  04E5  2CF2               	goto	l1337
  5659  04E6                     l1333:
  5660  04E6  35A0               	lslf	___aodiv@divisor,f
  5661  04E7  0DA1               	rlf	___aodiv@divisor+1,f
  5662  04E8  0DA2               	rlf	___aodiv@divisor+2,f
  5663  04E9  0DA3               	rlf	___aodiv@divisor+3,f
  5664  04EA  0DA4               	rlf	___aodiv@divisor+4,f
  5665  04EB  0DA5               	rlf	___aodiv@divisor+5,f
  5666  04EC  0DA6               	rlf	___aodiv@divisor+6,f
  5667  04ED  0DA7               	rlf	___aodiv@divisor+7,f
  5668  04EE                     l1335:
  5669  04EE  3001               	movlw	1
  5670  04EF  00F0               	movwf	??___aodiv
  5671  04F0  0870               	movf	??___aodiv,w
  5672  04F1  07F1               	addwf	___aodiv@counter,f
  5673  04F2                     l1337:
  5674  04F2  1FA7               	btfss	___aodiv@divisor+7,7
  5675  04F3  2CF5               	goto	u881
  5676  04F4  2CF6               	goto	u880
  5677  04F5                     u881:
  5678  04F5  2CE6               	goto	l1333
  5679  04F6                     u880:
  5680  04F6                     l1339:
  5681  04F6  35F3               	lslf	___aodiv@quotient,f
  5682  04F7  0DF4               	rlf	___aodiv@quotient+1,f
  5683  04F8  0DF5               	rlf	___aodiv@quotient+2,f
  5684  04F9  0DF6               	rlf	___aodiv@quotient+3,f
  5685  04FA  0DF7               	rlf	___aodiv@quotient+4,f
  5686  04FB  0DF8               	rlf	___aodiv@quotient+5,f
  5687  04FC  0DF9               	rlf	___aodiv@quotient+6,f
  5688  04FD  0DFA               	rlf	___aodiv@quotient+7,f
  5689  04FE                     l1341:
  5690  04FE  0827               	movf	___aodiv@divisor+7,w
  5691  04FF  022F               	subwf	___aodiv@dividend+7,w
  5692  0500  1D03               	skipz
  5693  0501  2D1C               	goto	u895
  5694  0502  0826               	movf	___aodiv@divisor+6,w
  5695  0503  022E               	subwf	___aodiv@dividend+6,w
  5696  0504  1D03               	skipz
  5697  0505  2D1C               	goto	u895
  5698  0506  0825               	movf	___aodiv@divisor+5,w
  5699  0507  022D               	subwf	___aodiv@dividend+5,w
  5700  0508  1D03               	skipz
  5701  0509  2D1C               	goto	u895
  5702  050A  0824               	movf	___aodiv@divisor+4,w
  5703  050B  022C               	subwf	___aodiv@dividend+4,w
  5704  050C  1D03               	skipz
  5705  050D  2D1C               	goto	u895
  5706  050E  0823               	movf	___aodiv@divisor+3,w
  5707  050F  022B               	subwf	___aodiv@dividend+3,w
  5708  0510  1D03               	skipz
  5709  0511  2D1C               	goto	u895
  5710  0512  0822               	movf	___aodiv@divisor+2,w
  5711  0513  022A               	subwf	___aodiv@dividend+2,w
  5712  0514  1D03               	skipz
  5713  0515  2D1C               	goto	u895
  5714  0516  0821               	movf	___aodiv@divisor+1,w
  5715  0517  0229               	subwf	___aodiv@dividend+1,w
  5716  0518  1D03               	skipz
  5717  0519  2D1C               	goto	u895
  5718  051A  0820               	movf	___aodiv@divisor,w
  5719  051B  0228               	subwf	___aodiv@dividend,w
  5720  051C                     u895:
  5721  051C  1C03               	skipc
  5722  051D  2D1F               	goto	u891
  5723  051E  2D20               	goto	u890
  5724  051F                     u891:
  5725  051F  2D31               	goto	l1347
  5726  0520                     u890:
  5727  0520                     l1343:
  5728  0520  0820               	movf	___aodiv@divisor,w
  5729  0521  02A8               	subwf	___aodiv@dividend,f
  5730  0522  0821               	movf	___aodiv@divisor+1,w
  5731  0523  3BA9               	subwfb	___aodiv@dividend+1,f
  5732  0524  0822               	movf	___aodiv@divisor+2,w
  5733  0525  3BAA               	subwfb	___aodiv@dividend+2,f
  5734  0526  0823               	movf	___aodiv@divisor+3,w
  5735  0527  3BAB               	subwfb	___aodiv@dividend+3,f
  5736  0528  0824               	movf	___aodiv@divisor+4,w
  5737  0529  3BAC               	subwfb	___aodiv@dividend+4,f
  5738  052A  0825               	movf	___aodiv@divisor+5,w
  5739  052B  3BAD               	subwfb	___aodiv@dividend+5,f
  5740  052C  0826               	movf	___aodiv@divisor+6,w
  5741  052D  3BAE               	subwfb	___aodiv@dividend+6,f
  5742  052E  0827               	movf	___aodiv@divisor+7,w
  5743  052F  3BAF               	subwfb	___aodiv@dividend+7,f
  5744  0530                     l1345:
  5745  0530  1473               	bsf	___aodiv@quotient,0
  5746  0531                     l1347:
  5747  0531  36A7               	lsrf	___aodiv@divisor+7,f
  5748  0532  0CA6               	rrf	___aodiv@divisor+6,f
  5749  0533  0CA5               	rrf	___aodiv@divisor+5,f
  5750  0534  0CA4               	rrf	___aodiv@divisor+4,f
  5751  0535  0CA3               	rrf	___aodiv@divisor+3,f
  5752  0536  0CA2               	rrf	___aodiv@divisor+2,f
  5753  0537  0CA1               	rrf	___aodiv@divisor+1,f
  5754  0538  0CA0               	rrf	___aodiv@divisor,f
  5755  0539  3001               	movlw	1
  5756  053A  02F1               	subwf	___aodiv@counter,f
  5757  053B  1D03               	btfss	3,2
  5758  053C  2D3E               	goto	u901
  5759  053D  2D3F               	goto	u900
  5760  053E                     u901:
  5761  053E  2CF6               	goto	l1339
  5762  053F                     u900:
  5763  053F                     l1349:
  5764  053F  0872               	movf	___aodiv@sign,w
  5765  0540  1903               	btfsc	3,2
  5766  0541  2D43               	goto	u911
  5767  0542  2D44               	goto	u910
  5768  0543                     u911:
  5769  0543  2D62               	goto	l381
  5770  0544                     u910:
  5771  0544                     l1351:
  5772  0544  09F3               	comf	___aodiv@quotient,f
  5773  0545  09F4               	comf	___aodiv@quotient+1,f
  5774  0546  09F5               	comf	___aodiv@quotient+2,f
  5775  0547  09F6               	comf	___aodiv@quotient+3,f
  5776  0548  09F7               	comf	___aodiv@quotient+4,f
  5777  0549  09F8               	comf	___aodiv@quotient+5,f
  5778  054A  09F9               	comf	___aodiv@quotient+6,f
  5779  054B  09FA               	comf	___aodiv@quotient+7,f
  5780  054C  0AF3               	incf	___aodiv@quotient,f
  5781  054D  1D03               	skipz
  5782  054E  2D62               	goto	u92lld
  5783  054F  0AF4               	incf	___aodiv@quotient+1,f
  5784  0550  1D03               	skipz
  5785  0551  2D62               	goto	u92lld
  5786  0552  0AF5               	incf	___aodiv@quotient+2,f
  5787  0553  1D03               	skipz
  5788  0554  2D62               	goto	u92lld
  5789  0555  0AF6               	incf	___aodiv@quotient+3,f
  5790  0556  1D03               	skipz
  5791  0557  2D62               	goto	u92lld
  5792  0558  0AF7               	incf	___aodiv@quotient+4,f
  5793  0559  1D03               	skipz
  5794  055A  2D62               	goto	u92lld
  5795  055B  0AF8               	incf	___aodiv@quotient+5,f
  5796  055C  1D03               	skipz
  5797  055D  2D62               	goto	u92lld
  5798  055E  0AF9               	incf	___aodiv@quotient+6,f
  5799  055F  1D03               	skipz
  5800  0560  2D62               	goto	u92lld
  5801  0561  0AFA               	incf	___aodiv@quotient+7,f
  5802  0562                     u92lld:
  5803  0562                     l381:
  5804  0562  0873               	movf	___aodiv@quotient,w
  5805  0563  0020               	movlb	0	; select bank0
  5806  0564  00A0               	movwf	?___aodiv
  5807  0565  0874               	movf	___aodiv@quotient+1,w
  5808  0566  00A1               	movwf	?___aodiv+1
  5809  0567  0875               	movf	___aodiv@quotient+2,w
  5810  0568  00A2               	movwf	?___aodiv+2
  5811  0569  0876               	movf	___aodiv@quotient+3,w
  5812  056A  00A3               	movwf	?___aodiv+3
  5813  056B  0877               	movf	___aodiv@quotient+4,w
  5814  056C  00A4               	movwf	?___aodiv+4
  5815  056D  0878               	movf	___aodiv@quotient+5,w
  5816  056E  00A5               	movwf	?___aodiv+5
  5817  056F  0879               	movf	___aodiv@quotient+6,w
  5818  0570  00A6               	movwf	?___aodiv+6
  5819  0571  087A               	movf	___aodiv@quotient+7,w
  5820  0572  00A7               	movwf	?___aodiv+7
  5821  0573                     l382:
  5822  0573  0008               	return
  5823  0574                     __end_of___aodiv:
  5824                           
  5825                           	psect	text18
  5826  00E0                     __ptext18:	
  5827 ;; *************** function _port_init *****************
  5828 ;; Defined at:
  5829 ;;		line 60 in file "Main.c"
  5830 ;; Parameters:    Size  Location     Type
  5831 ;;		None
  5832 ;; Auto vars:     Size  Location     Type
  5833 ;;		None
  5834 ;; Return value:  Size  Location     Type
  5835 ;;                  1    wreg      void 
  5836 ;; Registers used:
  5837 ;;		wreg, status,2
  5838 ;; Tracked objects:
  5839 ;;		On entry : 0/0
  5840 ;;		On exit  : 0/0
  5841 ;;		Unchanged: 0/0
  5842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5847 ;;Total ram usage:        0 bytes
  5848 ;; Hardware stack levels used: 1
  5849 ;; This function calls:
  5850 ;;		Nothing
  5851 ;; This function is called by:
  5852 ;;		_main
  5853 ;; This function uses a non-reentrant model
  5854 ;;
  5855                           
  5856                           
  5857                           ;psect for function _port_init
  5858  00E0                     _port_init:
  5859  00E0                     l1559:	
  5860                           ;incstack = 0
  5861                           ; Regs used in _port_init: [wreg+status,2]
  5862                           
  5863                           
  5864                           ;Main.c: 62:     ANSELA = 0;
  5865  00E0  003E               	movlb	30	; select bank30
  5866  00E1  01B8               	clrf	56	;volatile
  5867                           
  5868                           ;Main.c: 63:     LATA=0;
  5869  00E2  0020               	movlb	0	; select bank0
  5870  00E3  0196               	clrf	22	;volatile
  5871                           
  5872                           ;Main.c: 64:     PORTA =0;
  5873  00E4  018C               	clrf	12	;volatile
  5874  00E5                     l1561:
  5875                           
  5876                           ;Main.c: 65:     TRISA = 0b11110000;
  5877  00E5  30F0               	movlw	240
  5878  00E6  0091               	movwf	17	;volatile
  5879                           
  5880                           ;Main.c: 68:     ANSELA = ANSELA | (1<<4);
  5881  00E7  003E               	movlb	30	; select bank30
  5882  00E8  0838               	movf	56,w	;volatile
  5883  00E9  3810               	iorlw	16
  5884  00EA  00B8               	movwf	56	;volatile
  5885  00EB                     l1563:
  5886                           
  5887                           ;Main.c: 70:     LATB=0;
  5888  00EB  0020               	movlb	0	; select bank0
  5889  00EC  0197               	clrf	23	;volatile
  5890  00ED                     l1565:
  5891                           
  5892                           ;Main.c: 71:     PORTB =0;
  5893  00ED  018D               	clrf	13	;volatile
  5894                           
  5895                           ;Main.c: 72:     TRISB = TRISA | (1<<0);
  5896  00EE  0811               	movf	17,w	;volatile
  5897  00EF  3801               	iorlw	1
  5898  00F0  0092               	movwf	18	;volatile
  5899                           
  5900                           ;Main.c: 73:     ANSELB = ANSELB | (1<<0);
  5901  00F1  003E               	movlb	30	; select bank30
  5902  00F2  0843               	movf	67,w	;volatile
  5903  00F3  3801               	iorlw	1
  5904  00F4  00C3               	movwf	67	;volatile
  5905  00F5                     l1567:
  5906                           
  5907                           ;Main.c: 75:     TRISC = 0b10;
  5908  00F5  3002               	movlw	2
  5909  00F6  0020               	movlb	0	; select bank0
  5910  00F7  0093               	movwf	19	;volatile
  5911                           
  5912                           ;Main.c: 76:     ANSELC = 0;
  5913  00F8  003E               	movlb	30	; select bank30
  5914  00F9  01CE               	clrf	78	;volatile
  5915  00FA                     l52:
  5916  00FA  0008               	return
  5917  00FB                     __end_of_port_init:
  5918                           
  5919                           	psect	text19
  5920  007A                     __ptext19:	
  5921 ;; *************** function _adc_read *****************
  5922 ;; Defined at:
  5923 ;;		line 18 in file "adc.c"
  5924 ;; Parameters:    Size  Location     Type
  5925 ;;  pin             1    wreg     unsigned char 
  5926 ;; Auto vars:     Size  Location     Type
  5927 ;;  pin             1    2[COMMON] unsigned char 
  5928 ;; Return value:  Size  Location     Type
  5929 ;;                  2    0[COMMON] unsigned short 
  5930 ;; Registers used:
  5931 ;;		wreg, status,2
  5932 ;; Tracked objects:
  5933 ;;		On entry : 0/0
  5934 ;;		On exit  : 0/0
  5935 ;;		Unchanged: 0/0
  5936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5937 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5938 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5940 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5941 ;;Total ram usage:        3 bytes
  5942 ;; Hardware stack levels used: 1
  5943 ;; This function calls:
  5944 ;;		Nothing
  5945 ;; This function is called by:
  5946 ;;		_main
  5947 ;; This function uses a non-reentrant model
  5948 ;;
  5949                           
  5950                           
  5951                           ;psect for function _adc_read
  5952  007A                     _adc_read:
  5953                           
  5954                           ;incstack = 0
  5955                           ; Regs used in _adc_read: [wreg+status,2]
  5956                           ;adc_read@pin stored from wreg
  5957  007A  00F2               	movwf	adc_read@pin
  5958  007B                     l1605:
  5959                           
  5960                           ;adc.c: 19:     ADPCH = pin;
  5961  007B  0872               	movf	adc_read@pin,w
  5962  007C  0021               	movlb	1	; select bank1
  5963  007D  009E               	movwf	30	;volatile
  5964  007E                     l1607:
  5965                           
  5966                           ;adc.c: 20:     ADCON0 = ADCON0 |(1<<7);
  5967  007E  0813               	movf	19,w	;volatile
  5968  007F  3880               	iorlw	128
  5969  0080  0093               	movwf	19	;volatile
  5970  0081                     l1609:
  5971                           
  5972                           ;adc.c: 21:     ADCON0 = ADCON0 &~(1<<6);
  5973  0081  0813               	movf	19,w	;volatile
  5974  0082  39BF               	andlw	191
  5975  0083  0093               	movwf	19	;volatile
  5976  0084                     l1611:
  5977                           
  5978                           ;adc.c: 22:     ADCON0 = ADCON0 |(1<<0);
  5979  0084  0813               	movf	19,w	;volatile
  5980  0085  3801               	iorlw	1
  5981  0086  0093               	movwf	19	;volatile
  5982  0087                     l1613:
  5983                           
  5984                           ;adc.c: 25:     __nop();
  5985  0087  0000               	nop
  5986  0088                     l126:	
  5987                           ;adc.c: 27:     while ((ADCON0&0x01)==1){}
  5988                           
  5989  0088  0021               	movlb	1	; select bank1
  5990  0089  1813               	btfsc	19,0	;volatile
  5991  008A  288C               	goto	u1381
  5992  008B  288D               	goto	u1380
  5993  008C                     u1381:
  5994  008C  2888               	goto	l126
  5995  008D                     u1380:
  5996  008D                     l1615:
  5997                           
  5998                           ;adc.c: 30:     return ((uint16_t)((ADRESH << 8) + ADRESL));
  5999  008D  080D               	movf	13,w	;volatile
  6000  008E  00F1               	movwf	?_adc_read+1
  6001  008F  080C               	movf	12,w	;volatile
  6002  0090  00F0               	movwf	?_adc_read
  6003  0091                     l129:
  6004  0091  0008               	return
  6005  0092                     __end_of_adc_read:
  6006                           
  6007                           	psect	text20
  6008  0092                     __ptext20:	
  6009 ;; *************** function _adc_init *****************
  6010 ;; Defined at:
  6011 ;;		line 3 in file "adc.c"
  6012 ;; Parameters:    Size  Location     Type
  6013 ;;		None
  6014 ;; Auto vars:     Size  Location     Type
  6015 ;;		None
  6016 ;; Return value:  Size  Location     Type
  6017 ;;                  1    wreg      void 
  6018 ;; Registers used:
  6019 ;;		wreg, status,2
  6020 ;; Tracked objects:
  6021 ;;		On entry : 0/0
  6022 ;;		On exit  : 0/0
  6023 ;;		Unchanged: 0/0
  6024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6029 ;;Total ram usage:        0 bytes
  6030 ;; Hardware stack levels used: 1
  6031 ;; This function calls:
  6032 ;;		Nothing
  6033 ;; This function is called by:
  6034 ;;		_main
  6035 ;; This function uses a non-reentrant model
  6036 ;;
  6037                           
  6038                           
  6039                           ;psect for function _adc_init
  6040  0092                     _adc_init:
  6041  0092                     l1583:	
  6042                           ;incstack = 0
  6043                           ; Regs used in _adc_init: [wreg+status,2]
  6044                           
  6045                           
  6046                           ;adc.c: 4:     ADCON0 = ADCON0 & ~(1<<7 | 1<<4 );
  6047  0092  0021               	movlb	1	; select bank1
  6048  0093  0813               	movf	19,w	;volatile
  6049  0094  396F               	andlw	111
  6050  0095  0093               	movwf	19	;volatile
  6051                           
  6052                           ;adc.c: 5:     ADCON0 = ADCON0 |(1<<2);
  6053  0096  0813               	movf	19,w	;volatile
  6054  0097  3804               	iorlw	4
  6055  0098  0093               	movwf	19	;volatile
  6056                           
  6057                           ;adc.c: 6:     ADCON1 = ADCON1 |(1<<7);
  6058  0099  0814               	movf	20,w	;volatile
  6059  009A  3880               	iorlw	128
  6060  009B  0094               	movwf	20	;volatile
  6061                           
  6062                           ;adc.c: 7:     ADCON2 = ADCON2 & ~(7<<0 );
  6063  009C  0815               	movf	21,w	;volatile
  6064  009D  39F8               	andlw	248
  6065  009E  0095               	movwf	21	;volatile
  6066                           
  6067                           ;adc.c: 8:     ADCLK = ADCLK |(16<<0);
  6068  009F  0818               	movf	24,w	;volatile
  6069  00A0  3810               	iorlw	16
  6070  00A1  0098               	movwf	24	;volatile
  6071                           
  6072                           ;adc.c: 10:     ADREF = ADREF & ~(1<<4 );
  6073  00A2  081A               	movf	26,w	;volatile
  6074  00A3  39EF               	andlw	239
  6075  00A4  009A               	movwf	26	;volatile
  6076                           
  6077                           ;adc.c: 11:     ADREF = ADREF & ~(3<<0 );
  6078  00A5  081A               	movf	26,w	;volatile
  6079  00A6  39FC               	andlw	252
  6080  00A7  009A               	movwf	26	;volatile
  6081  00A8                     l1585:
  6082                           
  6083                           ;adc.c: 14:     ADPCH = 4;
  6084  00A8  3004               	movlw	4
  6085  00A9  009E               	movwf	30	;volatile
  6086                           
  6087                           ;adc.c: 15:     ADCAP = 0;
  6088  00AA  019B               	clrf	27	;volatile
  6089  00AB                     l123:
  6090  00AB  0008               	return
  6091  00AC                     __end_of_adc_init:
  6092  007E                     btemp	set	126	;btemp
  6093  007E                     wtemp0	set	126
  6094                           
  6095                           	psect	idloc
  6096                           
  6097                           ;Config register IDLOC0 @ 0x8000
  6098                           ;	unspecified, using default values
  6099  8000                     	org	32768
  6100  8000  3FFF               	dw	16383
  6101                           
  6102                           ;Config register IDLOC1 @ 0x8001
  6103                           ;	unspecified, using default values
  6104  8001                     	org	32769
  6105  8001  3FFF               	dw	16383
  6106                           
  6107                           ;Config register IDLOC2 @ 0x8002
  6108                           ;	unspecified, using default values
  6109  8002                     	org	32770
  6110  8002  3FFF               	dw	16383
  6111                           
  6112                           ;Config register IDLOC3 @ 0x8003
  6113                           ;	unspecified, using default values
  6114  8003                     	org	32771
  6115  8003  3FFF               	dw	16383
  6116                           
  6117                           	psect	config
  6118                           
  6119                           ;Config register CONFIG1 @ 0x8007
  6120                           ;	External Oscillator mode selection bits
  6121                           ;	FEXTOSC = OFF, Oscillator not enabled
  6122                           ;	Power-up default value for COSC bits
  6123                           ;	RSTOSC = HFINT32, HFINTOSC with OSCFRQ= 32 MHz and CDIV = 1:1
  6124                           ;	Clock Out Enable bit
  6125                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
  6126                           ;	Clock Switch Enable bit
  6127                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  6128                           ;	Fail-Safe Clock Monitor Enable bit
  6129                           ;	FCMEN = ON, FSCM timer enabled
  6130  8007                     	org	32775
  6131  8007  3F8C               	dw	16268
  6132                           
  6133                           ;Config register CONFIG2 @ 0x8008
  6134                           ;	Master Clear Enable bit
  6135                           ;	MCLRE = ON, MCLR pin is Master Clear function
  6136                           ;	Power-up Timer Enable bit
  6137                           ;	PWRTE = OFF, PWRT disabled
  6138                           ;	Low-Power BOR enable bit
  6139                           ;	LPBOREN = OFF, ULPBOR disabled
  6140                           ;	Brown-out reset enable bits
  6141                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  6142                           ;	Brown-out Reset Voltage Selection
  6143                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
  6144                           ;	Zero-cross detect disable
  6145                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
  6146                           ;	Peripheral Pin Select one-way control
  6147                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
  6148                           ;	Stack Overflow/Underflow Reset Enable bit
  6149                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  6150                           ;	Background Debugger
  6151                           ;	DEBUG = 0x1, unprogrammed default
  6152  8008                     	org	32776
  6153  8008  3FFF               	dw	16383
  6154                           
  6155                           ;Config register CONFIG3 @ 0x8009
  6156                           ;	WDT Period Select bits
  6157                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  6158                           ;	WDT operating mode
  6159                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
  6160                           ;	WDT Window Select bits
  6161                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  6162                           ;	WDT input clock selector
  6163                           ;	WDTCCS = SC, Software Control
  6164  8009                     	org	32777
  6165  8009  3F9F               	dw	16287
  6166                           
  6167                           ;Config register CONFIG4 @ 0x800A
  6168                           ;	UserNVM self-write protection bits
  6169                           ;	WRT = OFF, Write protection off
  6170                           ;	Scanner Enable bit
  6171                           ;	SCANE = available, Scanner module is available for use
  6172                           ;	Low Voltage Programming Enable bit
  6173                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
  6174  800A                     	org	32778
  6175  800A  3FFF               	dw	16383
  6176                           
  6177                           ;Config register CONFIG5 @ 0x800B
  6178                           ;	UserNVM Program memory code protection bit
  6179                           ;	CP = OFF, Program Memory code protection disabled
  6180                           ;	DataNVM code protection bit
  6181                           ;	CPD = OFF, Data EEPROM code protection disabled
  6182  800B                     	org	32779
  6183  800B  3FFF               	dw	16383

Data Sizes:
    Strings     39
    Constant    0
    Data        0
    BSS         40
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     77      79
    BANK1            80     43      49
    BANK2            80      0      32
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 32
		 -> main@buffer(BANK1[32]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), ?_sprintf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 32
		 -> main@buffer(BANK1[32]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_3(CODE[13]), STR_2(CODE[11]), STR_1(CODE[15]), main@buffer(BANK1[32]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 32
		 -> STR_3(CODE[13]), STR_2(CODE[11]), STR_1(CODE[15]), main@buffer(BANK1[32]), 

    vfpfcnvrt@vp	PTR void  size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), ?_sprintf(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[13]), STR_2(CODE[11]), STR_1(CODE[15]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 32
		 -> main@buffer(BANK1[32]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), ?_sprintf(BANK0[2]), 

    S592_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 32
		 -> main@buffer(BANK1[32]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 32
		 -> main@buffer(BANK1[32]), 


Critical Paths under _main in COMMON

    _main->_printf
    _main->_sprintf
    _serial_init->___lldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_uart_tx
    _abs->___aomod

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                38    38      0   13825
                                             75 BANK0      2     2      0
                                              7 BANK1     36    36      0
                           _adc_init
                           _adc_read
                          _port_init
                             _printf
                        _serial_init
                            _sprintf
                            _uart_rx
 ---------------------------------------------------------------------------------
 (1) _uart_rx                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             14    10      4    6741
                                             13 COMMON     1     1      0
                                             71 BANK0      4     0      4
                                              0 BANK1      7     7      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _serial_init                                         10     6      4     457
                                              0 BANK0     10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _printf                                               5     5      0    6368
                                             13 COMMON     1     1      0
                                             71 BANK0      2     2      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    6213
                                             63 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           39    37      2    5714
                                             46 BANK0     17    15      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4231
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2625
                                             12 COMMON     1     1      0
                                              7 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1193
                                             11 COMMON     1     0      1
                                              0 BANK0      7     7      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     878
                                              3 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      44
                                              2 COMMON     1     1      0
                            _uart_tx
 ---------------------------------------------------------------------------------
 (6) _uart_tx                                              2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (1) _port_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_read                                             3     1      2      22
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_init
   _adc_read
   _port_init
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _uart_tx
             _fputs
               _fputc
             _strlen
         _fputc
   _serial_init
     ___lldiv
   _sprintf
     _vfprintf
   _uart_rx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4D      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     2B      31       7       61.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      20       9       40.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      AE      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      AE      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Jun 23 12:58:18 2022

                     l52 00FA                       l81 0066                       l75 01D4  
                     l88 0118                       l97 0050                      l123 00AB  
                    l126 0088                      l129 0091                      l317 02D3  
                    l381 0562                      l382 0573                      l394 0461  
                    l802 07EA                      l395 0472                      l821 00C5  
                    l824 00C5                      l744 013C                      l809 067E  
                    l817 0196                      l771 023E                      l851 0079  
                    l836 0223                      l844 0165                      l780 06D2  
                    l774 0260                      l776 0279                      l784 06F0  
                    l857 00DF                      l785 0706                      l779 06C8  
                    l788 0776                      u800 0165                      u801 0164  
                    u810 00D9                      u811 00D8                      u900 053F  
                    u820 047E                      u901 053E                      u821 047D  
                    u910 0544                      u750 0063                      u911 0543  
                    u751 0062                      u840 04A9                      u760 01DA  
                    u841 04A8                      u745 005C                      u761 01D9  
                    u930 0394                      u770 01DF                      u931 0393  
                    u771 01DE                      u860 04D3                      u780 01EE  
                    u781 01ED                      u870 04E3                      u950 03BF  
                    u790 020B                      u871 04E2                      u951 03BE  
                    u791 020A                      u880 04F6                      u881 04F5  
                    u890 0520                      u970 03EB                      u891 051F  
                    u971 03EA                      u795 0207                      u980 03FE  
                    u981 03FD                      u990 0420                      u895 051C  
                    u991 041F                      u995 041C                      _abs 00AC  
                    _pad 0224                      wreg 0009             _BAUD1CONbits 011F  
                   ?_abs 0073                     l1301 0150                     l1303 0155  
                   l1311 00D9                     l1321 049F                     l1305 00C7  
                   l1401 026D                     l1331 04E3                     l1323 04A9  
                   l1315 0473                     l1307 00CC                     l1411 0691  
                   l1341 04FE                     l1333 04E6                     l1325 04C8  
                   l1317 0474                     l1405 00AC                     l1309 00D0  
                   l1421 06E8                     l1413 06A4                     l1501 0639  
     serial_init@baudios 0020                     l1351 0544                     l1343 0520  
                   l1335 04EE                     l1327 04CC                     l1319 047E  
                   l1407 00B9                     l1431 070D                     l1423 06F8  
                   l1415 06AA                     l1503 0641                     l1345 0530  
                   l1337 04F2                     l1329 04D6                     l1361 03BF  
                   l1353 0389                     l1273 0058                     l1281 01D5  
                   l1441 0784                     l1433 0712                     l1425 06FE  
                   l1417 06CD                     l1409 0681                     l1505 064C  
                   l1601 006D                     l1611 0084                     l1347 0531  
                   l1339 04F6                     l1371 03FA                     l1363 03DE  
                   l1355 038A                     l1275 0058                     l1291 020B  
                   l1283 01DA                     l1451 07B8                     l1443 0791  
                   l1435 0741                     l1427 0702                     l1419 06E2  
                   l1515 065B                     l1531 029C                     l1523 027A  
                   l1613 0087                     l1605 007B                     l1349 053F  
                   l1381 0443                     l1373 03FE                     l1365 03EB  
                   l1357 0394                     l1277 0063                     l1293 021B  
                   l1285 01DF                     l1461 07CF                     l1453 07BC  
                   l1445 079E                     l1437 0745                     l1429 070A  
                   l1517 0674                     l1509 0652                     l1541 02C5  
                   l1533 02A3                     l1525 028A                     l1621 00FB  
                   l1615 008D                     l1607 007E                     l1375 0420  
                   l1367 03EE                     l1359 03B5                     l1279 004C  
                   l1287 01E4                     l1391 023C                     l1383 0226  
                   l1455 07C0                     l1463 07D8                     l1447 07AC  
                   l1439 0749                     l1471 058F                     l1551 0170  
                   l1535 02B5                     l1527 028D                     l1543 02CB  
                   l1623 0106                     l1631 02D4                     l1609 0081  
                   l1561 00E5                     l1377 0430                     l1369 03F6  
                   l1289 01EE                     l1297 013F                     l1393 0241  
                   l1385 022A                     l1457 07C6                     l1449 07B1  
                   l1481 05C5                     l1473 0595                     l1553 0184  
                   l1537 02BD                     l1529 0298                     l1625 0111  
                   l1641 02EC                     l1633 02D6                     l1563 00EB  
                   l1379 043E                     l1299 0142                     l1395 024D  
                   l1387 0232                     l1459 07CB                     l1491 0611  
                   l1483 05DE                     l1475 059A                     l1467 0576  
                   l1555 018E                     l1547 0168                     l1539 02BE  
                   l1571 0199                     l1627 0117                     l1619 00FB  
                   l1651 0322                     l1643 02F9                     l1635 02D9  
                   l1565 00ED                     l1397 0252                     l1389 0237  
                   l1493 061C                     l1477 05AC                     l1469 0587  
                   l1549 016C                     l1581 01D1                     l1573 019D  
                   l1661 034D                     l1653 0326                     l1645 02FD  
                   l1637 02E5                     l1583 0092                     l1567 00F5  
                   l1559 00E0                     l1399 0265                     l1495 0624  
                   l1487 05F8                     l1479 05BD                     l1575 01C7  
                   l1591 0125                     l1671 037D                     l1663 035E  
                   l1655 032F                     l1647 030A                     l1639 02E8  
                   l1585 00A8                     l1489 0609                     l1577 01CA  
                   l1569 0197                     l1593 0127                     l1673 0382  
                   l1665 0362                     l1657 0340                     l1649 031C  
                   l1499 0628                     l1579 01CE                     l1595 0134  
                   l1587 011B                     l1667 036E                     l1659 0344  
                   l1589 0123                     l1669 0376                     l1599 0069  
                   ?_pad 0027                     STR_1 0800                     STR_2 081C  
                   STR_3 080F                     u1000 043E                     u1001 043D  
                   u1010 0443                     u1011 0442                     u1100 06AA  
                   u1101 06A9                     u1030 022A                     u1031 0229  
                   u1040 0237                     u1200 07B1                     u1120 06CD  
                   u1041 0236                     u1201 07B0                     u1121 06CC  
                   u1050 0260                     u1210 07B8                     u1130 06E2  
                   u1051 025F                     u1211 07B7                     u1131 06E1  
                   u1060 0265                     u1220 07BC                     u1140 06FE  
                   u1061 0264                     u1221 07BB                     u1141 06FD  
                   u1070 00B9                     u1230 07C6                     u1150 0702  
                   u1310 029C                     u1071 00B8                     u1055 025C  
                   u1231 07C5                     u1151 0701                     u1135 06DE  
                   u1311 029B                     u1160 0784                     u1080 069C  
                   u1240 0587                     u1400 0106                     u1161 0783  
                   u1081 069A                     u1241 0586                     u1305 028E  
                   u1401 0105                     u1170 0791                     u1090 069D  
                   u1250 05AC                     u1330 02B5                     u1075 00B5  
                   u1171 0790                     u1251 05AB                     u1331 02B4  
                   u1180 079E                     u1260 05BD                     u1420 0111  
                   u1181 079D                     u1165 0780                     u1261 05BC  
                   u1325 029D                     u1421 0110                     _LATA 0016  
                   u1190 07AC                     u1270 0609                     u1350 02CB  
                   _LATB 0017                     u1191 07AB                     u1271 0608  
                   u1351 02CA                     u1335 02B1                     u1415 010A  
                   u1280 0639                     u1360 018E                     u1440 036E  
                   u1185 079A                     u1281 0638                     u1361 018D  
                   u1345 02BF                     u1441 036D                     u1290 028A  
                   u1370 01BF                     u1450 037D                     u1195 07A8  
                   u1291 0289                     u1451 037C                     u1435 0367  
                   u1380 008D                     u1381 008C                     u1375 01BB  
                   u1395 00FF                     u1477 02F2                     u1487 0303  
                   _PIR3 070F                     abs@a 0073                     _dbuf 0120  
                   _main 02D4                     _dtoa 067F                     _prec 00CF  
                   _nout 00CB                     pad@i 002A                     pad@p 0028  
                   fsr0h 0005                     fsr1h 0007                     indf0 0000  
                   fsr0l 0004                     indf1 0001                     fsr1l 0006  
                   pad@w 002C                     btemp 007E                     start 0002  
                  ??_abs 0075                    ??_pad 007C          __end_of___aodiv 0574  
                  _ADCAP 009B             main@contador 00C8                    ?_main 0070  
                  ?_dtoa 0030                    _ADCLK 0098          __end_of___aomod 0473  
                  _ADPCH 009E                    _ADREF 009A          __end_of___lldiv 02D4  
                  _RCREG 0119             vfpfcnvrt@fmt 004E                    _PORTA 000C  
                  _PORTB 000D                    _TRISA 0011                    _TRISB 0012  
                  _TRISC 0013                    _RXPPS 0ECB                    _TXREG 011A  
                  u83lld 049D                    u92lld 0562                    u85lld 04C8  
                  u94lld 03B3                    u96lld 03DE                    _flags 006D  
                  _fputc 01D5                    _fputs 013D                    pad@fp 002E  
                  _width 00CD                    _putch 004B                    dtoa@d 0030  
                  dtoa@i 004C                    dtoa@n 0044                    dtoa@p 003E  
                  dtoa@s 0042                    dtoa@w 0040          __end_of_uart_rx 0119  
        __end_of_uart_tx 0067                    status 0003                    wtemp0 007E  
        __end_of_sprintf 013D          __initialization 07EB             __end_of_main 0389  
           __end_of_dtoa 07EB                   ??_main 006B                   ??_dtoa 0038  
                 _ADCON0 0093                   _ADCON1 0094                   _ADCON2 0095  
                 ?_fputc 0073                   ?_fputs 007B                   _ADRESH 008D  
                 _ADRESL 008C                   _ANSELA 0F38                   ?_putch 0070  
                 _ANSELB 0F43                   _ANSELC 0F4E                   _RC0PPS 0F20  
       __end_of_adc_init 00AC                   _RC1STA 011D         __end_of_adc_read 0092  
                 u102lld 0461                   u111lld 06C8                   _TX1STA 011E  
           ?_serial_init 0020             vfprintf@cfmt 0065                ??___aodiv 0070  
              ??___aomod 0070                ??___lldiv 0078                   _printf 0067  
                 pad@buf 0027                   dtoa@fp 003D                   main@rx 00C7  
                 _strlen 00C6                   fputc@c 0073                   fputs@c 0023  
                 fputs@i 0024                   fputs@s 0026                ??_uart_rx 0070  
              ??_uart_tx 0070         __end_of_vfprintf 0197                ??_sprintf 007D  
__end_of__initialization 07FD           __pcstackCOMMON 0070            __end_of_fputc 0224  
          __end_of_fputs 0166            __end_of_putch 0051                  ??_fputc 0076  
                ??_fputs 0020                  ??_putch 0072               __pbssBANK0 006D  
             __pbssBANK1 00CB               __pbssBANK2 0120               __pmaintext 02D4  
                ?_printf 0070                ?_adc_init 0070                ?_adc_read 0070  
                ?_strlen 0070                  _SP1BRGH 011C                  _SP1BRGL 011B  
     __size_of_vfpfcnvrt 010B       __size_of_port_init 001B                  ___aodiv 0473  
                ___aomod 0389                  ___lldiv 027A                ?_vfprintf 005F  
   __size_of_serial_init 003E               ??_adc_init 0070               ??_adc_read 0072  
                __ptext1 00FB                  __ptext2 0119                  __ptext3 0197  
                __ptext4 027A                  __ptext5 0067                  __ptext6 0166  
                __ptext7 0574                  __ptext8 067F                  __ptext9 0224  
        __size_of_printf 0013          __size_of_strlen 001A             __size_of_abs 001A  
           __size_of_pad 0056                  _uart_rx 00FB                  _uart_tx 0057  
                main@adc 00C9                  _sprintf 0119                  clrloop0 0052  
   end_of_initialization 07FD                  fputc@fp 0075                  fputs@fp 007B  
        ___lldiv@divisor 0070          ___lldiv@counter 007D        __end_of_vfpfcnvrt 067F  
      __end_of_port_init 00FB               ??_vfprintf 0062                  strlen@a 0073  
                strlen@s 0074              uart_tx@dato 0071               main@buffer 00A7  
            vfpfcnvrt@ap 004F              vfpfcnvrt@fp 005E              vfpfcnvrt@ll 0055  
            vfpfcnvrt@vp 005D           __end_of_printf 007A           __end_of_strlen 00E0  
    start_initialization 07EB              __end_of_abs 00C6              __end_of_pad 027A  
            vfprintf@fmt 005F                 ??_printf 007D                 ??_strlen 0072  
      __size_of_adc_init 001A        __size_of_adc_read 0018                ___latbits 0002  
          __pcstackBANK0 0020            __pcstackBANK1 00A0         ___aodiv@dividend 0028  
            adc_read@pin 0072                 ?___aodiv 0020                 ?___aomod 0020  
       ___aodiv@quotient 0073                 ?___lldiv 0070        __size_of_vfprintf 0031  
               ?_uart_rx 0070                 ?_uart_tx 0070                 ?_sprintf 0067  
         __size_of_fputc 004F           __size_of_fputs 0029           __size_of_putch 0006  
              clear_ram0 0051            ??_serial_init 0024                _vfpfcnvrt 0574  
              _port_init 00E0            serial_init@sx 0028               vfprintf@ap 0061  
             vfprintf@fp 0064         __size_of___aodiv 0101         __size_of___aomod 00EA  
       __size_of___lldiv 005A               ?_vfpfcnvrt 004E               ?_port_init 0070  
    __end_of_serial_init 01D5          ___aodiv@divisor 0020                 _adc_init 0092  
               _adc_read 007A          ___aodiv@counter 0071               sprintf@fmt 0067  
               _dtoa$665 003B                 __ptext10 00C6                 __ptext11 013D  
               __ptext20 0092                 __ptext12 01D5                 __ptext13 004B  
               __ptext14 0057                 __ptext15 00AC                 __ptext16 0389  
               __ptext17 0473                 __ptext18 00E0                 __ptext19 007A  
       __size_of_uart_rx 001E         __size_of_uart_tx 0010         __size_of_sprintf 0024  
          __size_of_main 00B5            __size_of_dtoa 016C                 _vfprintf 0166  
              printf@fmt 0067         ___aomod@dividend 0028                putch@dato 0072  
              sprintf@ap 00A0         ___lldiv@dividend 0074              _serial_init 0197  
               printf@ap 0068          ___aomod@divisor 0020              ??_vfpfcnvrt 0050  
        ___aomod@counter 0071              ??_port_init 0070            __pstringtext1 0800  
          __pstringtext2 080F            __pstringtext3 081C            __pstringtext4 0000  
               sprintf@f 00A2                 sprintf@s 00A1         ___lldiv@quotient 0079  
           ___aodiv@sign 0072             ___aomod@sign 0072  
