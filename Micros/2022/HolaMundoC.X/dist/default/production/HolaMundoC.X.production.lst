

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jun 28 18:30:13 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	16F18855
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    46                           	dabs	1,0x7E,2
    47  0000                     
    48                           ; Version 2.40
    49                           ; Generated 02/12/2021 GMT
    50                           ; 
    51                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution. Publication is not required when
    65                           ;        this file is used in an embedded application.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F18855 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  0007                     	;# 
    91  0008                     	;# 
    92  0009                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  000D                     	;# 
    97  000E                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  001C                     	;# 
   106  001C                     	;# 
   107  001D                     	;# 
   108  001D                     	;# 
   109  001E                     	;# 
   110  001F                     	;# 
   111  008C                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  008E                     	;# 
   116  008F                     	;# 
   117  0090                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0095                     	;# 
   123  0096                     	;# 
   124  0097                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009A                     	;# 
   128  009B                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  0110                     	;# 
   138  0110                     	;# 
   139  0111                     	;# 
   140  0112                     	;# 
   141  0112                     	;# 
   142  0113                     	;# 
   143  0114                     	;# 
   144  0114                     	;# 
   145  0115                     	;# 
   146  0116                     	;# 
   147  0116                     	;# 
   148  0117                     	;# 
   149  0119                     	;# 
   150  0119                     	;# 
   151  0119                     	;# 
   152  011A                     	;# 
   153  011A                     	;# 
   154  011A                     	;# 
   155  011B                     	;# 
   156  011B                     	;# 
   157  011B                     	;# 
   158  011B                     	;# 
   159  011B                     	;# 
   160  011C                     	;# 
   161  011C                     	;# 
   162  011C                     	;# 
   163  011D                     	;# 
   164  011D                     	;# 
   165  011D                     	;# 
   166  011E                     	;# 
   167  011E                     	;# 
   168  011E                     	;# 
   169  011F                     	;# 
   170  011F                     	;# 
   171  011F                     	;# 
   172  011F                     	;# 
   173  011F                     	;# 
   174  018C                     	;# 
   175  018D                     	;# 
   176  018E                     	;# 
   177  018F                     	;# 
   178  0190                     	;# 
   179  0191                     	;# 
   180  0192                     	;# 
   181  0196                     	;# 
   182  0197                     	;# 
   183  0198                     	;# 
   184  0199                     	;# 
   185  019A                     	;# 
   186  019B                     	;# 
   187  019C                     	;# 
   188  020C                     	;# 
   189  020C                     	;# 
   190  020D                     	;# 
   191  020E                     	;# 
   192  020F                     	;# 
   193  020F                     	;# 
   194  0210                     	;# 
   195  0210                     	;# 
   196  0211                     	;# 
   197  0211                     	;# 
   198  0212                     	;# 
   199  0212                     	;# 
   200  0213                     	;# 
   201  0214                     	;# 
   202  0215                     	;# 
   203  0215                     	;# 
   204  0216                     	;# 
   205  0216                     	;# 
   206  0217                     	;# 
   207  0217                     	;# 
   208  0218                     	;# 
   209  0218                     	;# 
   210  0219                     	;# 
   211  021A                     	;# 
   212  021B                     	;# 
   213  021B                     	;# 
   214  021C                     	;# 
   215  021C                     	;# 
   216  021D                     	;# 
   217  021D                     	;# 
   218  021E                     	;# 
   219  021F                     	;# 
   220  028C                     	;# 
   221  028C                     	;# 
   222  028D                     	;# 
   223  028D                     	;# 
   224  028E                     	;# 
   225  028F                     	;# 
   226  0290                     	;# 
   227  0290                     	;# 
   228  0291                     	;# 
   229  0292                     	;# 
   230  0292                     	;# 
   231  0293                     	;# 
   232  0293                     	;# 
   233  0294                     	;# 
   234  0295                     	;# 
   235  0296                     	;# 
   236  0296                     	;# 
   237  0297                     	;# 
   238  0298                     	;# 
   239  0298                     	;# 
   240  0299                     	;# 
   241  0299                     	;# 
   242  029A                     	;# 
   243  029B                     	;# 
   244  029C                     	;# 
   245  029C                     	;# 
   246  029D                     	;# 
   247  030C                     	;# 
   248  030C                     	;# 
   249  030D                     	;# 
   250  030E                     	;# 
   251  030F                     	;# 
   252  0310                     	;# 
   253  0310                     	;# 
   254  0311                     	;# 
   255  0312                     	;# 
   256  0313                     	;# 
   257  0314                     	;# 
   258  0314                     	;# 
   259  0315                     	;# 
   260  0316                     	;# 
   261  0317                     	;# 
   262  0318                     	;# 
   263  0318                     	;# 
   264  0319                     	;# 
   265  031A                     	;# 
   266  031B                     	;# 
   267  031C                     	;# 
   268  031C                     	;# 
   269  031D                     	;# 
   270  031E                     	;# 
   271  031F                     	;# 
   272  038C                     	;# 
   273  038C                     	;# 
   274  038D                     	;# 
   275  038E                     	;# 
   276  0390                     	;# 
   277  0390                     	;# 
   278  0391                     	;# 
   279  0392                     	;# 
   280  040C                     	;# 
   281  040D                     	;# 
   282  040E                     	;# 
   283  040F                     	;# 
   284  0410                     	;# 
   285  0411                     	;# 
   286  0416                     	;# 
   287  0416                     	;# 
   288  0417                     	;# 
   289  0418                     	;# 
   290  0418                     	;# 
   291  0419                     	;# 
   292  041A                     	;# 
   293  041A                     	;# 
   294  041B                     	;# 
   295  041C                     	;# 
   296  041C                     	;# 
   297  041D                     	;# 
   298  041E                     	;# 
   299  041F                     	;# 
   300  048C                     	;# 
   301  048C                     	;# 
   302  048D                     	;# 
   303  048E                     	;# 
   304  048F                     	;# 
   305  048F                     	;# 
   306  0490                     	;# 
   307  0491                     	;# 
   308  0492                     	;# 
   309  0492                     	;# 
   310  0493                     	;# 
   311  0494                     	;# 
   312  0495                     	;# 
   313  0495                     	;# 
   314  0496                     	;# 
   315  0497                     	;# 
   316  0498                     	;# 
   317  0499                     	;# 
   318  049A                     	;# 
   319  049B                     	;# 
   320  049C                     	;# 
   321  049D                     	;# 
   322  050C                     	;# 
   323  050C                     	;# 
   324  050D                     	;# 
   325  050E                     	;# 
   326  050F                     	;# 
   327  050F                     	;# 
   328  0510                     	;# 
   329  0511                     	;# 
   330  0512                     	;# 
   331  0512                     	;# 
   332  0513                     	;# 
   333  0514                     	;# 
   334  0515                     	;# 
   335  0515                     	;# 
   336  0516                     	;# 
   337  0517                     	;# 
   338  0518                     	;# 
   339  0519                     	;# 
   340  051A                     	;# 
   341  051B                     	;# 
   342  051C                     	;# 
   343  051D                     	;# 
   344  058C                     	;# 
   345  058C                     	;# 
   346  058D                     	;# 
   347  058E                     	;# 
   348  058F                     	;# 
   349  058F                     	;# 
   350  0590                     	;# 
   351  0591                     	;# 
   352  0592                     	;# 
   353  0593                     	;# 
   354  060C                     	;# 
   355  060D                     	;# 
   356  060E                     	;# 
   357  060F                     	;# 
   358  0610                     	;# 
   359  0611                     	;# 
   360  0612                     	;# 
   361  0613                     	;# 
   362  0614                     	;# 
   363  0616                     	;# 
   364  0617                     	;# 
   365  0618                     	;# 
   366  0619                     	;# 
   367  061A                     	;# 
   368  061B                     	;# 
   369  061C                     	;# 
   370  061D                     	;# 
   371  061E                     	;# 
   372  068C                     	;# 
   373  068D                     	;# 
   374  068E                     	;# 
   375  068F                     	;# 
   376  0690                     	;# 
   377  0691                     	;# 
   378  0692                     	;# 
   379  0693                     	;# 
   380  0694                     	;# 
   381  070C                     	;# 
   382  070D                     	;# 
   383  070E                     	;# 
   384  070F                     	;# 
   385  0710                     	;# 
   386  0711                     	;# 
   387  0712                     	;# 
   388  0713                     	;# 
   389  0714                     	;# 
   390  0716                     	;# 
   391  0717                     	;# 
   392  0718                     	;# 
   393  0719                     	;# 
   394  071A                     	;# 
   395  071B                     	;# 
   396  071C                     	;# 
   397  071D                     	;# 
   398  071E                     	;# 
   399  0796                     	;# 
   400  0797                     	;# 
   401  0798                     	;# 
   402  0799                     	;# 
   403  079A                     	;# 
   404  079B                     	;# 
   405  080C                     	;# 
   406  080D                     	;# 
   407  080E                     	;# 
   408  080F                     	;# 
   409  0810                     	;# 
   410  0811                     	;# 
   411  0812                     	;# 
   412  0813                     	;# 
   413  0814                     	;# 
   414  081A                     	;# 
   415  081B                     	;# 
   416  081C                     	;# 
   417  081D                     	;# 
   418  081E                     	;# 
   419  081F                     	;# 
   420  088C                     	;# 
   421  088D                     	;# 
   422  088E                     	;# 
   423  088F                     	;# 
   424  0890                     	;# 
   425  0891                     	;# 
   426  0892                     	;# 
   427  0893                     	;# 
   428  0895                     	;# 
   429  0896                     	;# 
   430  0897                     	;# 
   431  0898                     	;# 
   432  0899                     	;# 
   433  089A                     	;# 
   434  089B                     	;# 
   435  090C                     	;# 
   436  090E                     	;# 
   437  090F                     	;# 
   438  091F                     	;# 
   439  091F                     	;# 
   440  098F                     	;# 
   441  098F                     	;# 
   442  0990                     	;# 
   443  0991                     	;# 
   444  0992                     	;# 
   445  0993                     	;# 
   446  0994                     	;# 
   447  0995                     	;# 
   448  0996                     	;# 
   449  0997                     	;# 
   450  0E0F                     	;# 
   451  0E10                     	;# 
   452  0E11                     	;# 
   453  0E12                     	;# 
   454  0E13                     	;# 
   455  0E14                     	;# 
   456  0E15                     	;# 
   457  0E16                     	;# 
   458  0E17                     	;# 
   459  0E18                     	;# 
   460  0E19                     	;# 
   461  0E1A                     	;# 
   462  0E1B                     	;# 
   463  0E1C                     	;# 
   464  0E1D                     	;# 
   465  0E1E                     	;# 
   466  0E1F                     	;# 
   467  0E20                     	;# 
   468  0E21                     	;# 
   469  0E22                     	;# 
   470  0E23                     	;# 
   471  0E24                     	;# 
   472  0E25                     	;# 
   473  0E26                     	;# 
   474  0E27                     	;# 
   475  0E28                     	;# 
   476  0E29                     	;# 
   477  0E2A                     	;# 
   478  0E2B                     	;# 
   479  0E2C                     	;# 
   480  0E2D                     	;# 
   481  0E2E                     	;# 
   482  0E2F                     	;# 
   483  0E30                     	;# 
   484  0E31                     	;# 
   485  0E32                     	;# 
   486  0E33                     	;# 
   487  0E34                     	;# 
   488  0E35                     	;# 
   489  0E36                     	;# 
   490  0E37                     	;# 
   491  0E8F                     	;# 
   492  0E90                     	;# 
   493  0E91                     	;# 
   494  0E92                     	;# 
   495  0E93                     	;# 
   496  0E94                     	;# 
   497  0E95                     	;# 
   498  0E96                     	;# 
   499  0E97                     	;# 
   500  0E9C                     	;# 
   501  0E9D                     	;# 
   502  0E9E                     	;# 
   503  0EA1                     	;# 
   504  0EA2                     	;# 
   505  0EA3                     	;# 
   506  0EA4                     	;# 
   507  0EA5                     	;# 
   508  0EA9                     	;# 
   509  0EAA                     	;# 
   510  0EAB                     	;# 
   511  0EAC                     	;# 
   512  0EB1                     	;# 
   513  0EB2                     	;# 
   514  0EB3                     	;# 
   515  0EB8                     	;# 
   516  0EB9                     	;# 
   517  0EBA                     	;# 
   518  0EBB                     	;# 
   519  0EBC                     	;# 
   520  0EBD                     	;# 
   521  0EBE                     	;# 
   522  0EC3                     	;# 
   523  0EC5                     	;# 
   524  0EC6                     	;# 
   525  0EC7                     	;# 
   526  0EC8                     	;# 
   527  0EC9                     	;# 
   528  0ECA                     	;# 
   529  0ECB                     	;# 
   530  0ECC                     	;# 
   531  0F10                     	;# 
   532  0F11                     	;# 
   533  0F12                     	;# 
   534  0F13                     	;# 
   535  0F14                     	;# 
   536  0F15                     	;# 
   537  0F16                     	;# 
   538  0F17                     	;# 
   539  0F18                     	;# 
   540  0F19                     	;# 
   541  0F1A                     	;# 
   542  0F1B                     	;# 
   543  0F1C                     	;# 
   544  0F1D                     	;# 
   545  0F1E                     	;# 
   546  0F1F                     	;# 
   547  0F20                     	;# 
   548  0F21                     	;# 
   549  0F22                     	;# 
   550  0F23                     	;# 
   551  0F24                     	;# 
   552  0F25                     	;# 
   553  0F26                     	;# 
   554  0F27                     	;# 
   555  0F38                     	;# 
   556  0F39                     	;# 
   557  0F3A                     	;# 
   558  0F3B                     	;# 
   559  0F3C                     	;# 
   560  0F3D                     	;# 
   561  0F3E                     	;# 
   562  0F3F                     	;# 
   563  0F40                     	;# 
   564  0F41                     	;# 
   565  0F43                     	;# 
   566  0F44                     	;# 
   567  0F45                     	;# 
   568  0F46                     	;# 
   569  0F47                     	;# 
   570  0F48                     	;# 
   571  0F49                     	;# 
   572  0F4A                     	;# 
   573  0F4B                     	;# 
   574  0F4C                     	;# 
   575  0F4E                     	;# 
   576  0F4F                     	;# 
   577  0F50                     	;# 
   578  0F51                     	;# 
   579  0F52                     	;# 
   580  0F53                     	;# 
   581  0F54                     	;# 
   582  0F55                     	;# 
   583  0F56                     	;# 
   584  0F57                     	;# 
   585  0F65                     	;# 
   586  0F68                     	;# 
   587  0F69                     	;# 
   588  0F6A                     	;# 
   589  0F6B                     	;# 
   590  0FE4                     	;# 
   591  0FE5                     	;# 
   592  0FE6                     	;# 
   593  0FE7                     	;# 
   594  0FE8                     	;# 
   595  0FE9                     	;# 
   596  0FEA                     	;# 
   597  0FEB                     	;# 
   598  0FED                     	;# 
   599  0FEE                     	;# 
   600  0FEF                     	;# 
   601  0000                     	;# 
   602  0001                     	;# 
   603  0002                     	;# 
   604  0003                     	;# 
   605  0004                     	;# 
   606  0005                     	;# 
   607  0006                     	;# 
   608  0007                     	;# 
   609  0008                     	;# 
   610  0009                     	;# 
   611  000A                     	;# 
   612  000B                     	;# 
   613  000C                     	;# 
   614  000D                     	;# 
   615  000E                     	;# 
   616  0010                     	;# 
   617  0011                     	;# 
   618  0012                     	;# 
   619  0013                     	;# 
   620  0016                     	;# 
   621  0017                     	;# 
   622  0018                     	;# 
   623  001C                     	;# 
   624  001C                     	;# 
   625  001D                     	;# 
   626  001D                     	;# 
   627  001E                     	;# 
   628  001F                     	;# 
   629  008C                     	;# 
   630  008C                     	;# 
   631  008D                     	;# 
   632  008E                     	;# 
   633  008E                     	;# 
   634  008F                     	;# 
   635  0090                     	;# 
   636  0090                     	;# 
   637  0091                     	;# 
   638  0093                     	;# 
   639  0094                     	;# 
   640  0095                     	;# 
   641  0096                     	;# 
   642  0097                     	;# 
   643  0098                     	;# 
   644  0099                     	;# 
   645  009A                     	;# 
   646  009B                     	;# 
   647  009C                     	;# 
   648  009D                     	;# 
   649  009E                     	;# 
   650  010C                     	;# 
   651  010D                     	;# 
   652  010E                     	;# 
   653  010E                     	;# 
   654  010F                     	;# 
   655  0110                     	;# 
   656  0110                     	;# 
   657  0111                     	;# 
   658  0112                     	;# 
   659  0112                     	;# 
   660  0113                     	;# 
   661  0114                     	;# 
   662  0114                     	;# 
   663  0115                     	;# 
   664  0116                     	;# 
   665  0116                     	;# 
   666  0117                     	;# 
   667  0119                     	;# 
   668  0119                     	;# 
   669  0119                     	;# 
   670  011A                     	;# 
   671  011A                     	;# 
   672  011A                     	;# 
   673  011B                     	;# 
   674  011B                     	;# 
   675  011B                     	;# 
   676  011B                     	;# 
   677  011B                     	;# 
   678  011C                     	;# 
   679  011C                     	;# 
   680  011C                     	;# 
   681  011D                     	;# 
   682  011D                     	;# 
   683  011D                     	;# 
   684  011E                     	;# 
   685  011E                     	;# 
   686  011E                     	;# 
   687  011F                     	;# 
   688  011F                     	;# 
   689  011F                     	;# 
   690  011F                     	;# 
   691  011F                     	;# 
   692  018C                     	;# 
   693  018D                     	;# 
   694  018E                     	;# 
   695  018F                     	;# 
   696  0190                     	;# 
   697  0191                     	;# 
   698  0192                     	;# 
   699  0196                     	;# 
   700  0197                     	;# 
   701  0198                     	;# 
   702  0199                     	;# 
   703  019A                     	;# 
   704  019B                     	;# 
   705  019C                     	;# 
   706  020C                     	;# 
   707  020C                     	;# 
   708  020D                     	;# 
   709  020E                     	;# 
   710  020F                     	;# 
   711  020F                     	;# 
   712  0210                     	;# 
   713  0210                     	;# 
   714  0211                     	;# 
   715  0211                     	;# 
   716  0212                     	;# 
   717  0212                     	;# 
   718  0213                     	;# 
   719  0214                     	;# 
   720  0215                     	;# 
   721  0215                     	;# 
   722  0216                     	;# 
   723  0216                     	;# 
   724  0217                     	;# 
   725  0217                     	;# 
   726  0218                     	;# 
   727  0218                     	;# 
   728  0219                     	;# 
   729  021A                     	;# 
   730  021B                     	;# 
   731  021B                     	;# 
   732  021C                     	;# 
   733  021C                     	;# 
   734  021D                     	;# 
   735  021D                     	;# 
   736  021E                     	;# 
   737  021F                     	;# 
   738  028C                     	;# 
   739  028C                     	;# 
   740  028D                     	;# 
   741  028D                     	;# 
   742  028E                     	;# 
   743  028F                     	;# 
   744  0290                     	;# 
   745  0290                     	;# 
   746  0291                     	;# 
   747  0292                     	;# 
   748  0292                     	;# 
   749  0293                     	;# 
   750  0293                     	;# 
   751  0294                     	;# 
   752  0295                     	;# 
   753  0296                     	;# 
   754  0296                     	;# 
   755  0297                     	;# 
   756  0298                     	;# 
   757  0298                     	;# 
   758  0299                     	;# 
   759  0299                     	;# 
   760  029A                     	;# 
   761  029B                     	;# 
   762  029C                     	;# 
   763  029C                     	;# 
   764  029D                     	;# 
   765  030C                     	;# 
   766  030C                     	;# 
   767  030D                     	;# 
   768  030E                     	;# 
   769  030F                     	;# 
   770  0310                     	;# 
   771  0310                     	;# 
   772  0311                     	;# 
   773  0312                     	;# 
   774  0313                     	;# 
   775  0314                     	;# 
   776  0314                     	;# 
   777  0315                     	;# 
   778  0316                     	;# 
   779  0317                     	;# 
   780  0318                     	;# 
   781  0318                     	;# 
   782  0319                     	;# 
   783  031A                     	;# 
   784  031B                     	;# 
   785  031C                     	;# 
   786  031C                     	;# 
   787  031D                     	;# 
   788  031E                     	;# 
   789  031F                     	;# 
   790  038C                     	;# 
   791  038C                     	;# 
   792  038D                     	;# 
   793  038E                     	;# 
   794  0390                     	;# 
   795  0390                     	;# 
   796  0391                     	;# 
   797  0392                     	;# 
   798  040C                     	;# 
   799  040D                     	;# 
   800  040E                     	;# 
   801  040F                     	;# 
   802  0410                     	;# 
   803  0411                     	;# 
   804  0416                     	;# 
   805  0416                     	;# 
   806  0417                     	;# 
   807  0418                     	;# 
   808  0418                     	;# 
   809  0419                     	;# 
   810  041A                     	;# 
   811  041A                     	;# 
   812  041B                     	;# 
   813  041C                     	;# 
   814  041C                     	;# 
   815  041D                     	;# 
   816  041E                     	;# 
   817  041F                     	;# 
   818  048C                     	;# 
   819  048C                     	;# 
   820  048D                     	;# 
   821  048E                     	;# 
   822  048F                     	;# 
   823  048F                     	;# 
   824  0490                     	;# 
   825  0491                     	;# 
   826  0492                     	;# 
   827  0492                     	;# 
   828  0493                     	;# 
   829  0494                     	;# 
   830  0495                     	;# 
   831  0495                     	;# 
   832  0496                     	;# 
   833  0497                     	;# 
   834  0498                     	;# 
   835  0499                     	;# 
   836  049A                     	;# 
   837  049B                     	;# 
   838  049C                     	;# 
   839  049D                     	;# 
   840  050C                     	;# 
   841  050C                     	;# 
   842  050D                     	;# 
   843  050E                     	;# 
   844  050F                     	;# 
   845  050F                     	;# 
   846  0510                     	;# 
   847  0511                     	;# 
   848  0512                     	;# 
   849  0512                     	;# 
   850  0513                     	;# 
   851  0514                     	;# 
   852  0515                     	;# 
   853  0515                     	;# 
   854  0516                     	;# 
   855  0517                     	;# 
   856  0518                     	;# 
   857  0519                     	;# 
   858  051A                     	;# 
   859  051B                     	;# 
   860  051C                     	;# 
   861  051D                     	;# 
   862  058C                     	;# 
   863  058C                     	;# 
   864  058D                     	;# 
   865  058E                     	;# 
   866  058F                     	;# 
   867  058F                     	;# 
   868  0590                     	;# 
   869  0591                     	;# 
   870  0592                     	;# 
   871  0593                     	;# 
   872  060C                     	;# 
   873  060D                     	;# 
   874  060E                     	;# 
   875  060F                     	;# 
   876  0610                     	;# 
   877  0611                     	;# 
   878  0612                     	;# 
   879  0613                     	;# 
   880  0614                     	;# 
   881  0616                     	;# 
   882  0617                     	;# 
   883  0618                     	;# 
   884  0619                     	;# 
   885  061A                     	;# 
   886  061B                     	;# 
   887  061C                     	;# 
   888  061D                     	;# 
   889  061E                     	;# 
   890  068C                     	;# 
   891  068D                     	;# 
   892  068E                     	;# 
   893  068F                     	;# 
   894  0690                     	;# 
   895  0691                     	;# 
   896  0692                     	;# 
   897  0693                     	;# 
   898  0694                     	;# 
   899  070C                     	;# 
   900  070D                     	;# 
   901  070E                     	;# 
   902  070F                     	;# 
   903  0710                     	;# 
   904  0711                     	;# 
   905  0712                     	;# 
   906  0713                     	;# 
   907  0714                     	;# 
   908  0716                     	;# 
   909  0717                     	;# 
   910  0718                     	;# 
   911  0719                     	;# 
   912  071A                     	;# 
   913  071B                     	;# 
   914  071C                     	;# 
   915  071D                     	;# 
   916  071E                     	;# 
   917  0796                     	;# 
   918  0797                     	;# 
   919  0798                     	;# 
   920  0799                     	;# 
   921  079A                     	;# 
   922  079B                     	;# 
   923  080C                     	;# 
   924  080D                     	;# 
   925  080E                     	;# 
   926  080F                     	;# 
   927  0810                     	;# 
   928  0811                     	;# 
   929  0812                     	;# 
   930  0813                     	;# 
   931  0814                     	;# 
   932  081A                     	;# 
   933  081B                     	;# 
   934  081C                     	;# 
   935  081D                     	;# 
   936  081E                     	;# 
   937  081F                     	;# 
   938  088C                     	;# 
   939  088D                     	;# 
   940  088E                     	;# 
   941  088F                     	;# 
   942  0890                     	;# 
   943  0891                     	;# 
   944  0892                     	;# 
   945  0893                     	;# 
   946  0895                     	;# 
   947  0896                     	;# 
   948  0897                     	;# 
   949  0898                     	;# 
   950  0899                     	;# 
   951  089A                     	;# 
   952  089B                     	;# 
   953  090C                     	;# 
   954  090E                     	;# 
   955  090F                     	;# 
   956  091F                     	;# 
   957  091F                     	;# 
   958  098F                     	;# 
   959  098F                     	;# 
   960  0990                     	;# 
   961  0991                     	;# 
   962  0992                     	;# 
   963  0993                     	;# 
   964  0994                     	;# 
   965  0995                     	;# 
   966  0996                     	;# 
   967  0997                     	;# 
   968  0E0F                     	;# 
   969  0E10                     	;# 
   970  0E11                     	;# 
   971  0E12                     	;# 
   972  0E13                     	;# 
   973  0E14                     	;# 
   974  0E15                     	;# 
   975  0E16                     	;# 
   976  0E17                     	;# 
   977  0E18                     	;# 
   978  0E19                     	;# 
   979  0E1A                     	;# 
   980  0E1B                     	;# 
   981  0E1C                     	;# 
   982  0E1D                     	;# 
   983  0E1E                     	;# 
   984  0E1F                     	;# 
   985  0E20                     	;# 
   986  0E21                     	;# 
   987  0E22                     	;# 
   988  0E23                     	;# 
   989  0E24                     	;# 
   990  0E25                     	;# 
   991  0E26                     	;# 
   992  0E27                     	;# 
   993  0E28                     	;# 
   994  0E29                     	;# 
   995  0E2A                     	;# 
   996  0E2B                     	;# 
   997  0E2C                     	;# 
   998  0E2D                     	;# 
   999  0E2E                     	;# 
  1000  0E2F                     	;# 
  1001  0E30                     	;# 
  1002  0E31                     	;# 
  1003  0E32                     	;# 
  1004  0E33                     	;# 
  1005  0E34                     	;# 
  1006  0E35                     	;# 
  1007  0E36                     	;# 
  1008  0E37                     	;# 
  1009  0E8F                     	;# 
  1010  0E90                     	;# 
  1011  0E91                     	;# 
  1012  0E92                     	;# 
  1013  0E93                     	;# 
  1014  0E94                     	;# 
  1015  0E95                     	;# 
  1016  0E96                     	;# 
  1017  0E97                     	;# 
  1018  0E9C                     	;# 
  1019  0E9D                     	;# 
  1020  0E9E                     	;# 
  1021  0EA1                     	;# 
  1022  0EA2                     	;# 
  1023  0EA3                     	;# 
  1024  0EA4                     	;# 
  1025  0EA5                     	;# 
  1026  0EA9                     	;# 
  1027  0EAA                     	;# 
  1028  0EAB                     	;# 
  1029  0EAC                     	;# 
  1030  0EB1                     	;# 
  1031  0EB2                     	;# 
  1032  0EB3                     	;# 
  1033  0EB8                     	;# 
  1034  0EB9                     	;# 
  1035  0EBA                     	;# 
  1036  0EBB                     	;# 
  1037  0EBC                     	;# 
  1038  0EBD                     	;# 
  1039  0EBE                     	;# 
  1040  0EC3                     	;# 
  1041  0EC5                     	;# 
  1042  0EC6                     	;# 
  1043  0EC7                     	;# 
  1044  0EC8                     	;# 
  1045  0EC9                     	;# 
  1046  0ECA                     	;# 
  1047  0ECB                     	;# 
  1048  0ECC                     	;# 
  1049  0F10                     	;# 
  1050  0F11                     	;# 
  1051  0F12                     	;# 
  1052  0F13                     	;# 
  1053  0F14                     	;# 
  1054  0F15                     	;# 
  1055  0F16                     	;# 
  1056  0F17                     	;# 
  1057  0F18                     	;# 
  1058  0F19                     	;# 
  1059  0F1A                     	;# 
  1060  0F1B                     	;# 
  1061  0F1C                     	;# 
  1062  0F1D                     	;# 
  1063  0F1E                     	;# 
  1064  0F1F                     	;# 
  1065  0F20                     	;# 
  1066  0F21                     	;# 
  1067  0F22                     	;# 
  1068  0F23                     	;# 
  1069  0F24                     	;# 
  1070  0F25                     	;# 
  1071  0F26                     	;# 
  1072  0F27                     	;# 
  1073  0F38                     	;# 
  1074  0F39                     	;# 
  1075  0F3A                     	;# 
  1076  0F3B                     	;# 
  1077  0F3C                     	;# 
  1078  0F3D                     	;# 
  1079  0F3E                     	;# 
  1080  0F3F                     	;# 
  1081  0F40                     	;# 
  1082  0F41                     	;# 
  1083  0F43                     	;# 
  1084  0F44                     	;# 
  1085  0F45                     	;# 
  1086  0F46                     	;# 
  1087  0F47                     	;# 
  1088  0F48                     	;# 
  1089  0F49                     	;# 
  1090  0F4A                     	;# 
  1091  0F4B                     	;# 
  1092  0F4C                     	;# 
  1093  0F4E                     	;# 
  1094  0F4F                     	;# 
  1095  0F50                     	;# 
  1096  0F51                     	;# 
  1097  0F52                     	;# 
  1098  0F53                     	;# 
  1099  0F54                     	;# 
  1100  0F55                     	;# 
  1101  0F56                     	;# 
  1102  0F57                     	;# 
  1103  0F65                     	;# 
  1104  0F68                     	;# 
  1105  0F69                     	;# 
  1106  0F6A                     	;# 
  1107  0F6B                     	;# 
  1108  0FE4                     	;# 
  1109  0FE5                     	;# 
  1110  0FE6                     	;# 
  1111  0FE7                     	;# 
  1112  0FE8                     	;# 
  1113  0FE9                     	;# 
  1114  0FEA                     	;# 
  1115  0FEB                     	;# 
  1116  0FED                     	;# 
  1117  0FEE                     	;# 
  1118  0FEF                     	;# 
  1119  0000                     	;# 
  1120  0001                     	;# 
  1121  0002                     	;# 
  1122  0003                     	;# 
  1123  0004                     	;# 
  1124  0005                     	;# 
  1125  0006                     	;# 
  1126  0007                     	;# 
  1127  0008                     	;# 
  1128  0009                     	;# 
  1129  000A                     	;# 
  1130  000B                     	;# 
  1131  000C                     	;# 
  1132  000D                     	;# 
  1133  000E                     	;# 
  1134  0010                     	;# 
  1135  0011                     	;# 
  1136  0012                     	;# 
  1137  0013                     	;# 
  1138  0016                     	;# 
  1139  0017                     	;# 
  1140  0018                     	;# 
  1141  001C                     	;# 
  1142  001C                     	;# 
  1143  001D                     	;# 
  1144  001D                     	;# 
  1145  001E                     	;# 
  1146  001F                     	;# 
  1147  008C                     	;# 
  1148  008C                     	;# 
  1149  008D                     	;# 
  1150  008E                     	;# 
  1151  008E                     	;# 
  1152  008F                     	;# 
  1153  0090                     	;# 
  1154  0090                     	;# 
  1155  0091                     	;# 
  1156  0093                     	;# 
  1157  0094                     	;# 
  1158  0095                     	;# 
  1159  0096                     	;# 
  1160  0097                     	;# 
  1161  0098                     	;# 
  1162  0099                     	;# 
  1163  009A                     	;# 
  1164  009B                     	;# 
  1165  009C                     	;# 
  1166  009D                     	;# 
  1167  009E                     	;# 
  1168  010C                     	;# 
  1169  010D                     	;# 
  1170  010E                     	;# 
  1171  010E                     	;# 
  1172  010F                     	;# 
  1173  0110                     	;# 
  1174  0110                     	;# 
  1175  0111                     	;# 
  1176  0112                     	;# 
  1177  0112                     	;# 
  1178  0113                     	;# 
  1179  0114                     	;# 
  1180  0114                     	;# 
  1181  0115                     	;# 
  1182  0116                     	;# 
  1183  0116                     	;# 
  1184  0117                     	;# 
  1185  0119                     	;# 
  1186  0119                     	;# 
  1187  0119                     	;# 
  1188  011A                     	;# 
  1189  011A                     	;# 
  1190  011A                     	;# 
  1191  011B                     	;# 
  1192  011B                     	;# 
  1193  011B                     	;# 
  1194  011B                     	;# 
  1195  011B                     	;# 
  1196  011C                     	;# 
  1197  011C                     	;# 
  1198  011C                     	;# 
  1199  011D                     	;# 
  1200  011D                     	;# 
  1201  011D                     	;# 
  1202  011E                     	;# 
  1203  011E                     	;# 
  1204  011E                     	;# 
  1205  011F                     	;# 
  1206  011F                     	;# 
  1207  011F                     	;# 
  1208  011F                     	;# 
  1209  011F                     	;# 
  1210  018C                     	;# 
  1211  018D                     	;# 
  1212  018E                     	;# 
  1213  018F                     	;# 
  1214  0190                     	;# 
  1215  0191                     	;# 
  1216  0192                     	;# 
  1217  0196                     	;# 
  1218  0197                     	;# 
  1219  0198                     	;# 
  1220  0199                     	;# 
  1221  019A                     	;# 
  1222  019B                     	;# 
  1223  019C                     	;# 
  1224  020C                     	;# 
  1225  020C                     	;# 
  1226  020D                     	;# 
  1227  020E                     	;# 
  1228  020F                     	;# 
  1229  020F                     	;# 
  1230  0210                     	;# 
  1231  0210                     	;# 
  1232  0211                     	;# 
  1233  0211                     	;# 
  1234  0212                     	;# 
  1235  0212                     	;# 
  1236  0213                     	;# 
  1237  0214                     	;# 
  1238  0215                     	;# 
  1239  0215                     	;# 
  1240  0216                     	;# 
  1241  0216                     	;# 
  1242  0217                     	;# 
  1243  0217                     	;# 
  1244  0218                     	;# 
  1245  0218                     	;# 
  1246  0219                     	;# 
  1247  021A                     	;# 
  1248  021B                     	;# 
  1249  021B                     	;# 
  1250  021C                     	;# 
  1251  021C                     	;# 
  1252  021D                     	;# 
  1253  021D                     	;# 
  1254  021E                     	;# 
  1255  021F                     	;# 
  1256  028C                     	;# 
  1257  028C                     	;# 
  1258  028D                     	;# 
  1259  028D                     	;# 
  1260  028E                     	;# 
  1261  028F                     	;# 
  1262  0290                     	;# 
  1263  0290                     	;# 
  1264  0291                     	;# 
  1265  0292                     	;# 
  1266  0292                     	;# 
  1267  0293                     	;# 
  1268  0293                     	;# 
  1269  0294                     	;# 
  1270  0295                     	;# 
  1271  0296                     	;# 
  1272  0296                     	;# 
  1273  0297                     	;# 
  1274  0298                     	;# 
  1275  0298                     	;# 
  1276  0299                     	;# 
  1277  0299                     	;# 
  1278  029A                     	;# 
  1279  029B                     	;# 
  1280  029C                     	;# 
  1281  029C                     	;# 
  1282  029D                     	;# 
  1283  030C                     	;# 
  1284  030C                     	;# 
  1285  030D                     	;# 
  1286  030E                     	;# 
  1287  030F                     	;# 
  1288  0310                     	;# 
  1289  0310                     	;# 
  1290  0311                     	;# 
  1291  0312                     	;# 
  1292  0313                     	;# 
  1293  0314                     	;# 
  1294  0314                     	;# 
  1295  0315                     	;# 
  1296  0316                     	;# 
  1297  0317                     	;# 
  1298  0318                     	;# 
  1299  0318                     	;# 
  1300  0319                     	;# 
  1301  031A                     	;# 
  1302  031B                     	;# 
  1303  031C                     	;# 
  1304  031C                     	;# 
  1305  031D                     	;# 
  1306  031E                     	;# 
  1307  031F                     	;# 
  1308  038C                     	;# 
  1309  038C                     	;# 
  1310  038D                     	;# 
  1311  038E                     	;# 
  1312  0390                     	;# 
  1313  0390                     	;# 
  1314  0391                     	;# 
  1315  0392                     	;# 
  1316  040C                     	;# 
  1317  040D                     	;# 
  1318  040E                     	;# 
  1319  040F                     	;# 
  1320  0410                     	;# 
  1321  0411                     	;# 
  1322  0416                     	;# 
  1323  0416                     	;# 
  1324  0417                     	;# 
  1325  0418                     	;# 
  1326  0418                     	;# 
  1327  0419                     	;# 
  1328  041A                     	;# 
  1329  041A                     	;# 
  1330  041B                     	;# 
  1331  041C                     	;# 
  1332  041C                     	;# 
  1333  041D                     	;# 
  1334  041E                     	;# 
  1335  041F                     	;# 
  1336  048C                     	;# 
  1337  048C                     	;# 
  1338  048D                     	;# 
  1339  048E                     	;# 
  1340  048F                     	;# 
  1341  048F                     	;# 
  1342  0490                     	;# 
  1343  0491                     	;# 
  1344  0492                     	;# 
  1345  0492                     	;# 
  1346  0493                     	;# 
  1347  0494                     	;# 
  1348  0495                     	;# 
  1349  0495                     	;# 
  1350  0496                     	;# 
  1351  0497                     	;# 
  1352  0498                     	;# 
  1353  0499                     	;# 
  1354  049A                     	;# 
  1355  049B                     	;# 
  1356  049C                     	;# 
  1357  049D                     	;# 
  1358  050C                     	;# 
  1359  050C                     	;# 
  1360  050D                     	;# 
  1361  050E                     	;# 
  1362  050F                     	;# 
  1363  050F                     	;# 
  1364  0510                     	;# 
  1365  0511                     	;# 
  1366  0512                     	;# 
  1367  0512                     	;# 
  1368  0513                     	;# 
  1369  0514                     	;# 
  1370  0515                     	;# 
  1371  0515                     	;# 
  1372  0516                     	;# 
  1373  0517                     	;# 
  1374  0518                     	;# 
  1375  0519                     	;# 
  1376  051A                     	;# 
  1377  051B                     	;# 
  1378  051C                     	;# 
  1379  051D                     	;# 
  1380  058C                     	;# 
  1381  058C                     	;# 
  1382  058D                     	;# 
  1383  058E                     	;# 
  1384  058F                     	;# 
  1385  058F                     	;# 
  1386  0590                     	;# 
  1387  0591                     	;# 
  1388  0592                     	;# 
  1389  0593                     	;# 
  1390  060C                     	;# 
  1391  060D                     	;# 
  1392  060E                     	;# 
  1393  060F                     	;# 
  1394  0610                     	;# 
  1395  0611                     	;# 
  1396  0612                     	;# 
  1397  0613                     	;# 
  1398  0614                     	;# 
  1399  0616                     	;# 
  1400  0617                     	;# 
  1401  0618                     	;# 
  1402  0619                     	;# 
  1403  061A                     	;# 
  1404  061B                     	;# 
  1405  061C                     	;# 
  1406  061D                     	;# 
  1407  061E                     	;# 
  1408  068C                     	;# 
  1409  068D                     	;# 
  1410  068E                     	;# 
  1411  068F                     	;# 
  1412  0690                     	;# 
  1413  0691                     	;# 
  1414  0692                     	;# 
  1415  0693                     	;# 
  1416  0694                     	;# 
  1417  070C                     	;# 
  1418  070D                     	;# 
  1419  070E                     	;# 
  1420  070F                     	;# 
  1421  0710                     	;# 
  1422  0711                     	;# 
  1423  0712                     	;# 
  1424  0713                     	;# 
  1425  0714                     	;# 
  1426  0716                     	;# 
  1427  0717                     	;# 
  1428  0718                     	;# 
  1429  0719                     	;# 
  1430  071A                     	;# 
  1431  071B                     	;# 
  1432  071C                     	;# 
  1433  071D                     	;# 
  1434  071E                     	;# 
  1435  0796                     	;# 
  1436  0797                     	;# 
  1437  0798                     	;# 
  1438  0799                     	;# 
  1439  079A                     	;# 
  1440  079B                     	;# 
  1441  080C                     	;# 
  1442  080D                     	;# 
  1443  080E                     	;# 
  1444  080F                     	;# 
  1445  0810                     	;# 
  1446  0811                     	;# 
  1447  0812                     	;# 
  1448  0813                     	;# 
  1449  0814                     	;# 
  1450  081A                     	;# 
  1451  081B                     	;# 
  1452  081C                     	;# 
  1453  081D                     	;# 
  1454  081E                     	;# 
  1455  081F                     	;# 
  1456  088C                     	;# 
  1457  088D                     	;# 
  1458  088E                     	;# 
  1459  088F                     	;# 
  1460  0890                     	;# 
  1461  0891                     	;# 
  1462  0892                     	;# 
  1463  0893                     	;# 
  1464  0895                     	;# 
  1465  0896                     	;# 
  1466  0897                     	;# 
  1467  0898                     	;# 
  1468  0899                     	;# 
  1469  089A                     	;# 
  1470  089B                     	;# 
  1471  090C                     	;# 
  1472  090E                     	;# 
  1473  090F                     	;# 
  1474  091F                     	;# 
  1475  091F                     	;# 
  1476  098F                     	;# 
  1477  098F                     	;# 
  1478  0990                     	;# 
  1479  0991                     	;# 
  1480  0992                     	;# 
  1481  0993                     	;# 
  1482  0994                     	;# 
  1483  0995                     	;# 
  1484  0996                     	;# 
  1485  0997                     	;# 
  1486  0E0F                     	;# 
  1487  0E10                     	;# 
  1488  0E11                     	;# 
  1489  0E12                     	;# 
  1490  0E13                     	;# 
  1491  0E14                     	;# 
  1492  0E15                     	;# 
  1493  0E16                     	;# 
  1494  0E17                     	;# 
  1495  0E18                     	;# 
  1496  0E19                     	;# 
  1497  0E1A                     	;# 
  1498  0E1B                     	;# 
  1499  0E1C                     	;# 
  1500  0E1D                     	;# 
  1501  0E1E                     	;# 
  1502  0E1F                     	;# 
  1503  0E20                     	;# 
  1504  0E21                     	;# 
  1505  0E22                     	;# 
  1506  0E23                     	;# 
  1507  0E24                     	;# 
  1508  0E25                     	;# 
  1509  0E26                     	;# 
  1510  0E27                     	;# 
  1511  0E28                     	;# 
  1512  0E29                     	;# 
  1513  0E2A                     	;# 
  1514  0E2B                     	;# 
  1515  0E2C                     	;# 
  1516  0E2D                     	;# 
  1517  0E2E                     	;# 
  1518  0E2F                     	;# 
  1519  0E30                     	;# 
  1520  0E31                     	;# 
  1521  0E32                     	;# 
  1522  0E33                     	;# 
  1523  0E34                     	;# 
  1524  0E35                     	;# 
  1525  0E36                     	;# 
  1526  0E37                     	;# 
  1527  0E8F                     	;# 
  1528  0E90                     	;# 
  1529  0E91                     	;# 
  1530  0E92                     	;# 
  1531  0E93                     	;# 
  1532  0E94                     	;# 
  1533  0E95                     	;# 
  1534  0E96                     	;# 
  1535  0E97                     	;# 
  1536  0E9C                     	;# 
  1537  0E9D                     	;# 
  1538  0E9E                     	;# 
  1539  0EA1                     	;# 
  1540  0EA2                     	;# 
  1541  0EA3                     	;# 
  1542  0EA4                     	;# 
  1543  0EA5                     	;# 
  1544  0EA9                     	;# 
  1545  0EAA                     	;# 
  1546  0EAB                     	;# 
  1547  0EAC                     	;# 
  1548  0EB1                     	;# 
  1549  0EB2                     	;# 
  1550  0EB3                     	;# 
  1551  0EB8                     	;# 
  1552  0EB9                     	;# 
  1553  0EBA                     	;# 
  1554  0EBB                     	;# 
  1555  0EBC                     	;# 
  1556  0EBD                     	;# 
  1557  0EBE                     	;# 
  1558  0EC3                     	;# 
  1559  0EC5                     	;# 
  1560  0EC6                     	;# 
  1561  0EC7                     	;# 
  1562  0EC8                     	;# 
  1563  0EC9                     	;# 
  1564  0ECA                     	;# 
  1565  0ECB                     	;# 
  1566  0ECC                     	;# 
  1567  0F10                     	;# 
  1568  0F11                     	;# 
  1569  0F12                     	;# 
  1570  0F13                     	;# 
  1571  0F14                     	;# 
  1572  0F15                     	;# 
  1573  0F16                     	;# 
  1574  0F17                     	;# 
  1575  0F18                     	;# 
  1576  0F19                     	;# 
  1577  0F1A                     	;# 
  1578  0F1B                     	;# 
  1579  0F1C                     	;# 
  1580  0F1D                     	;# 
  1581  0F1E                     	;# 
  1582  0F1F                     	;# 
  1583  0F20                     	;# 
  1584  0F21                     	;# 
  1585  0F22                     	;# 
  1586  0F23                     	;# 
  1587  0F24                     	;# 
  1588  0F25                     	;# 
  1589  0F26                     	;# 
  1590  0F27                     	;# 
  1591  0F38                     	;# 
  1592  0F39                     	;# 
  1593  0F3A                     	;# 
  1594  0F3B                     	;# 
  1595  0F3C                     	;# 
  1596  0F3D                     	;# 
  1597  0F3E                     	;# 
  1598  0F3F                     	;# 
  1599  0F40                     	;# 
  1600  0F41                     	;# 
  1601  0F43                     	;# 
  1602  0F44                     	;# 
  1603  0F45                     	;# 
  1604  0F46                     	;# 
  1605  0F47                     	;# 
  1606  0F48                     	;# 
  1607  0F49                     	;# 
  1608  0F4A                     	;# 
  1609  0F4B                     	;# 
  1610  0F4C                     	;# 
  1611  0F4E                     	;# 
  1612  0F4F                     	;# 
  1613  0F50                     	;# 
  1614  0F51                     	;# 
  1615  0F52                     	;# 
  1616  0F53                     	;# 
  1617  0F54                     	;# 
  1618  0F55                     	;# 
  1619  0F56                     	;# 
  1620  0F57                     	;# 
  1621  0F65                     	;# 
  1622  0F68                     	;# 
  1623  0F69                     	;# 
  1624  0F6A                     	;# 
  1625  0F6B                     	;# 
  1626  0FE4                     	;# 
  1627  0FE5                     	;# 
  1628  0FE6                     	;# 
  1629  0FE7                     	;# 
  1630  0FE8                     	;# 
  1631  0FE9                     	;# 
  1632  0FEA                     	;# 
  1633  0FEB                     	;# 
  1634  0FED                     	;# 
  1635  0FEE                     	;# 
  1636  0FEF                     	;# 
  1637  0000                     	;# 
  1638  0001                     	;# 
  1639  0002                     	;# 
  1640  0003                     	;# 
  1641  0004                     	;# 
  1642  0005                     	;# 
  1643  0006                     	;# 
  1644  0007                     	;# 
  1645  0008                     	;# 
  1646  0009                     	;# 
  1647  000A                     	;# 
  1648  000B                     	;# 
  1649  000C                     	;# 
  1650  000D                     	;# 
  1651  000E                     	;# 
  1652  0010                     	;# 
  1653  0011                     	;# 
  1654  0012                     	;# 
  1655  0013                     	;# 
  1656  0016                     	;# 
  1657  0017                     	;# 
  1658  0018                     	;# 
  1659  001C                     	;# 
  1660  001C                     	;# 
  1661  001D                     	;# 
  1662  001D                     	;# 
  1663  001E                     	;# 
  1664  001F                     	;# 
  1665  008C                     	;# 
  1666  008C                     	;# 
  1667  008D                     	;# 
  1668  008E                     	;# 
  1669  008E                     	;# 
  1670  008F                     	;# 
  1671  0090                     	;# 
  1672  0090                     	;# 
  1673  0091                     	;# 
  1674  0093                     	;# 
  1675  0094                     	;# 
  1676  0095                     	;# 
  1677  0096                     	;# 
  1678  0097                     	;# 
  1679  0098                     	;# 
  1680  0099                     	;# 
  1681  009A                     	;# 
  1682  009B                     	;# 
  1683  009C                     	;# 
  1684  009D                     	;# 
  1685  009E                     	;# 
  1686  010C                     	;# 
  1687  010D                     	;# 
  1688  010E                     	;# 
  1689  010E                     	;# 
  1690  010F                     	;# 
  1691  0110                     	;# 
  1692  0110                     	;# 
  1693  0111                     	;# 
  1694  0112                     	;# 
  1695  0112                     	;# 
  1696  0113                     	;# 
  1697  0114                     	;# 
  1698  0114                     	;# 
  1699  0115                     	;# 
  1700  0116                     	;# 
  1701  0116                     	;# 
  1702  0117                     	;# 
  1703  0119                     	;# 
  1704  0119                     	;# 
  1705  0119                     	;# 
  1706  011A                     	;# 
  1707  011A                     	;# 
  1708  011A                     	;# 
  1709  011B                     	;# 
  1710  011B                     	;# 
  1711  011B                     	;# 
  1712  011B                     	;# 
  1713  011B                     	;# 
  1714  011C                     	;# 
  1715  011C                     	;# 
  1716  011C                     	;# 
  1717  011D                     	;# 
  1718  011D                     	;# 
  1719  011D                     	;# 
  1720  011E                     	;# 
  1721  011E                     	;# 
  1722  011E                     	;# 
  1723  011F                     	;# 
  1724  011F                     	;# 
  1725  011F                     	;# 
  1726  011F                     	;# 
  1727  011F                     	;# 
  1728  018C                     	;# 
  1729  018D                     	;# 
  1730  018E                     	;# 
  1731  018F                     	;# 
  1732  0190                     	;# 
  1733  0191                     	;# 
  1734  0192                     	;# 
  1735  0196                     	;# 
  1736  0197                     	;# 
  1737  0198                     	;# 
  1738  0199                     	;# 
  1739  019A                     	;# 
  1740  019B                     	;# 
  1741  019C                     	;# 
  1742  020C                     	;# 
  1743  020C                     	;# 
  1744  020D                     	;# 
  1745  020E                     	;# 
  1746  020F                     	;# 
  1747  020F                     	;# 
  1748  0210                     	;# 
  1749  0210                     	;# 
  1750  0211                     	;# 
  1751  0211                     	;# 
  1752  0212                     	;# 
  1753  0212                     	;# 
  1754  0213                     	;# 
  1755  0214                     	;# 
  1756  0215                     	;# 
  1757  0215                     	;# 
  1758  0216                     	;# 
  1759  0216                     	;# 
  1760  0217                     	;# 
  1761  0217                     	;# 
  1762  0218                     	;# 
  1763  0218                     	;# 
  1764  0219                     	;# 
  1765  021A                     	;# 
  1766  021B                     	;# 
  1767  021B                     	;# 
  1768  021C                     	;# 
  1769  021C                     	;# 
  1770  021D                     	;# 
  1771  021D                     	;# 
  1772  021E                     	;# 
  1773  021F                     	;# 
  1774  028C                     	;# 
  1775  028C                     	;# 
  1776  028D                     	;# 
  1777  028D                     	;# 
  1778  028E                     	;# 
  1779  028F                     	;# 
  1780  0290                     	;# 
  1781  0290                     	;# 
  1782  0291                     	;# 
  1783  0292                     	;# 
  1784  0292                     	;# 
  1785  0293                     	;# 
  1786  0293                     	;# 
  1787  0294                     	;# 
  1788  0295                     	;# 
  1789  0296                     	;# 
  1790  0296                     	;# 
  1791  0297                     	;# 
  1792  0298                     	;# 
  1793  0298                     	;# 
  1794  0299                     	;# 
  1795  0299                     	;# 
  1796  029A                     	;# 
  1797  029B                     	;# 
  1798  029C                     	;# 
  1799  029C                     	;# 
  1800  029D                     	;# 
  1801  030C                     	;# 
  1802  030C                     	;# 
  1803  030D                     	;# 
  1804  030E                     	;# 
  1805  030F                     	;# 
  1806  0310                     	;# 
  1807  0310                     	;# 
  1808  0311                     	;# 
  1809  0312                     	;# 
  1810  0313                     	;# 
  1811  0314                     	;# 
  1812  0314                     	;# 
  1813  0315                     	;# 
  1814  0316                     	;# 
  1815  0317                     	;# 
  1816  0318                     	;# 
  1817  0318                     	;# 
  1818  0319                     	;# 
  1819  031A                     	;# 
  1820  031B                     	;# 
  1821  031C                     	;# 
  1822  031C                     	;# 
  1823  031D                     	;# 
  1824  031E                     	;# 
  1825  031F                     	;# 
  1826  038C                     	;# 
  1827  038C                     	;# 
  1828  038D                     	;# 
  1829  038E                     	;# 
  1830  0390                     	;# 
  1831  0390                     	;# 
  1832  0391                     	;# 
  1833  0392                     	;# 
  1834  040C                     	;# 
  1835  040D                     	;# 
  1836  040E                     	;# 
  1837  040F                     	;# 
  1838  0410                     	;# 
  1839  0411                     	;# 
  1840  0416                     	;# 
  1841  0416                     	;# 
  1842  0417                     	;# 
  1843  0418                     	;# 
  1844  0418                     	;# 
  1845  0419                     	;# 
  1846  041A                     	;# 
  1847  041A                     	;# 
  1848  041B                     	;# 
  1849  041C                     	;# 
  1850  041C                     	;# 
  1851  041D                     	;# 
  1852  041E                     	;# 
  1853  041F                     	;# 
  1854  048C                     	;# 
  1855  048C                     	;# 
  1856  048D                     	;# 
  1857  048E                     	;# 
  1858  048F                     	;# 
  1859  048F                     	;# 
  1860  0490                     	;# 
  1861  0491                     	;# 
  1862  0492                     	;# 
  1863  0492                     	;# 
  1864  0493                     	;# 
  1865  0494                     	;# 
  1866  0495                     	;# 
  1867  0495                     	;# 
  1868  0496                     	;# 
  1869  0497                     	;# 
  1870  0498                     	;# 
  1871  0499                     	;# 
  1872  049A                     	;# 
  1873  049B                     	;# 
  1874  049C                     	;# 
  1875  049D                     	;# 
  1876  050C                     	;# 
  1877  050C                     	;# 
  1878  050D                     	;# 
  1879  050E                     	;# 
  1880  050F                     	;# 
  1881  050F                     	;# 
  1882  0510                     	;# 
  1883  0511                     	;# 
  1884  0512                     	;# 
  1885  0512                     	;# 
  1886  0513                     	;# 
  1887  0514                     	;# 
  1888  0515                     	;# 
  1889  0515                     	;# 
  1890  0516                     	;# 
  1891  0517                     	;# 
  1892  0518                     	;# 
  1893  0519                     	;# 
  1894  051A                     	;# 
  1895  051B                     	;# 
  1896  051C                     	;# 
  1897  051D                     	;# 
  1898  058C                     	;# 
  1899  058C                     	;# 
  1900  058D                     	;# 
  1901  058E                     	;# 
  1902  058F                     	;# 
  1903  058F                     	;# 
  1904  0590                     	;# 
  1905  0591                     	;# 
  1906  0592                     	;# 
  1907  0593                     	;# 
  1908  060C                     	;# 
  1909  060D                     	;# 
  1910  060E                     	;# 
  1911  060F                     	;# 
  1912  0610                     	;# 
  1913  0611                     	;# 
  1914  0612                     	;# 
  1915  0613                     	;# 
  1916  0614                     	;# 
  1917  0616                     	;# 
  1918  0617                     	;# 
  1919  0618                     	;# 
  1920  0619                     	;# 
  1921  061A                     	;# 
  1922  061B                     	;# 
  1923  061C                     	;# 
  1924  061D                     	;# 
  1925  061E                     	;# 
  1926  068C                     	;# 
  1927  068D                     	;# 
  1928  068E                     	;# 
  1929  068F                     	;# 
  1930  0690                     	;# 
  1931  0691                     	;# 
  1932  0692                     	;# 
  1933  0693                     	;# 
  1934  0694                     	;# 
  1935  070C                     	;# 
  1936  070D                     	;# 
  1937  070E                     	;# 
  1938  070F                     	;# 
  1939  0710                     	;# 
  1940  0711                     	;# 
  1941  0712                     	;# 
  1942  0713                     	;# 
  1943  0714                     	;# 
  1944  0716                     	;# 
  1945  0717                     	;# 
  1946  0718                     	;# 
  1947  0719                     	;# 
  1948  071A                     	;# 
  1949  071B                     	;# 
  1950  071C                     	;# 
  1951  071D                     	;# 
  1952  071E                     	;# 
  1953  0796                     	;# 
  1954  0797                     	;# 
  1955  0798                     	;# 
  1956  0799                     	;# 
  1957  079A                     	;# 
  1958  079B                     	;# 
  1959  080C                     	;# 
  1960  080D                     	;# 
  1961  080E                     	;# 
  1962  080F                     	;# 
  1963  0810                     	;# 
  1964  0811                     	;# 
  1965  0812                     	;# 
  1966  0813                     	;# 
  1967  0814                     	;# 
  1968  081A                     	;# 
  1969  081B                     	;# 
  1970  081C                     	;# 
  1971  081D                     	;# 
  1972  081E                     	;# 
  1973  081F                     	;# 
  1974  088C                     	;# 
  1975  088D                     	;# 
  1976  088E                     	;# 
  1977  088F                     	;# 
  1978  0890                     	;# 
  1979  0891                     	;# 
  1980  0892                     	;# 
  1981  0893                     	;# 
  1982  0895                     	;# 
  1983  0896                     	;# 
  1984  0897                     	;# 
  1985  0898                     	;# 
  1986  0899                     	;# 
  1987  089A                     	;# 
  1988  089B                     	;# 
  1989  090C                     	;# 
  1990  090E                     	;# 
  1991  090F                     	;# 
  1992  091F                     	;# 
  1993  091F                     	;# 
  1994  098F                     	;# 
  1995  098F                     	;# 
  1996  0990                     	;# 
  1997  0991                     	;# 
  1998  0992                     	;# 
  1999  0993                     	;# 
  2000  0994                     	;# 
  2001  0995                     	;# 
  2002  0996                     	;# 
  2003  0997                     	;# 
  2004  0E0F                     	;# 
  2005  0E10                     	;# 
  2006  0E11                     	;# 
  2007  0E12                     	;# 
  2008  0E13                     	;# 
  2009  0E14                     	;# 
  2010  0E15                     	;# 
  2011  0E16                     	;# 
  2012  0E17                     	;# 
  2013  0E18                     	;# 
  2014  0E19                     	;# 
  2015  0E1A                     	;# 
  2016  0E1B                     	;# 
  2017  0E1C                     	;# 
  2018  0E1D                     	;# 
  2019  0E1E                     	;# 
  2020  0E1F                     	;# 
  2021  0E20                     	;# 
  2022  0E21                     	;# 
  2023  0E22                     	;# 
  2024  0E23                     	;# 
  2025  0E24                     	;# 
  2026  0E25                     	;# 
  2027  0E26                     	;# 
  2028  0E27                     	;# 
  2029  0E28                     	;# 
  2030  0E29                     	;# 
  2031  0E2A                     	;# 
  2032  0E2B                     	;# 
  2033  0E2C                     	;# 
  2034  0E2D                     	;# 
  2035  0E2E                     	;# 
  2036  0E2F                     	;# 
  2037  0E30                     	;# 
  2038  0E31                     	;# 
  2039  0E32                     	;# 
  2040  0E33                     	;# 
  2041  0E34                     	;# 
  2042  0E35                     	;# 
  2043  0E36                     	;# 
  2044  0E37                     	;# 
  2045  0E8F                     	;# 
  2046  0E90                     	;# 
  2047  0E91                     	;# 
  2048  0E92                     	;# 
  2049  0E93                     	;# 
  2050  0E94                     	;# 
  2051  0E95                     	;# 
  2052  0E96                     	;# 
  2053  0E97                     	;# 
  2054  0E9C                     	;# 
  2055  0E9D                     	;# 
  2056  0E9E                     	;# 
  2057  0EA1                     	;# 
  2058  0EA2                     	;# 
  2059  0EA3                     	;# 
  2060  0EA4                     	;# 
  2061  0EA5                     	;# 
  2062  0EA9                     	;# 
  2063  0EAA                     	;# 
  2064  0EAB                     	;# 
  2065  0EAC                     	;# 
  2066  0EB1                     	;# 
  2067  0EB2                     	;# 
  2068  0EB3                     	;# 
  2069  0EB8                     	;# 
  2070  0EB9                     	;# 
  2071  0EBA                     	;# 
  2072  0EBB                     	;# 
  2073  0EBC                     	;# 
  2074  0EBD                     	;# 
  2075  0EBE                     	;# 
  2076  0EC3                     	;# 
  2077  0EC5                     	;# 
  2078  0EC6                     	;# 
  2079  0EC7                     	;# 
  2080  0EC8                     	;# 
  2081  0EC9                     	;# 
  2082  0ECA                     	;# 
  2083  0ECB                     	;# 
  2084  0ECC                     	;# 
  2085  0F10                     	;# 
  2086  0F11                     	;# 
  2087  0F12                     	;# 
  2088  0F13                     	;# 
  2089  0F14                     	;# 
  2090  0F15                     	;# 
  2091  0F16                     	;# 
  2092  0F17                     	;# 
  2093  0F18                     	;# 
  2094  0F19                     	;# 
  2095  0F1A                     	;# 
  2096  0F1B                     	;# 
  2097  0F1C                     	;# 
  2098  0F1D                     	;# 
  2099  0F1E                     	;# 
  2100  0F1F                     	;# 
  2101  0F20                     	;# 
  2102  0F21                     	;# 
  2103  0F22                     	;# 
  2104  0F23                     	;# 
  2105  0F24                     	;# 
  2106  0F25                     	;# 
  2107  0F26                     	;# 
  2108  0F27                     	;# 
  2109  0F38                     	;# 
  2110  0F39                     	;# 
  2111  0F3A                     	;# 
  2112  0F3B                     	;# 
  2113  0F3C                     	;# 
  2114  0F3D                     	;# 
  2115  0F3E                     	;# 
  2116  0F3F                     	;# 
  2117  0F40                     	;# 
  2118  0F41                     	;# 
  2119  0F43                     	;# 
  2120  0F44                     	;# 
  2121  0F45                     	;# 
  2122  0F46                     	;# 
  2123  0F47                     	;# 
  2124  0F48                     	;# 
  2125  0F49                     	;# 
  2126  0F4A                     	;# 
  2127  0F4B                     	;# 
  2128  0F4C                     	;# 
  2129  0F4E                     	;# 
  2130  0F4F                     	;# 
  2131  0F50                     	;# 
  2132  0F51                     	;# 
  2133  0F52                     	;# 
  2134  0F53                     	;# 
  2135  0F54                     	;# 
  2136  0F55                     	;# 
  2137  0F56                     	;# 
  2138  0F57                     	;# 
  2139  0F65                     	;# 
  2140  0F68                     	;# 
  2141  0F69                     	;# 
  2142  0F6A                     	;# 
  2143  0F6B                     	;# 
  2144  0FE4                     	;# 
  2145  0FE5                     	;# 
  2146  0FE6                     	;# 
  2147  0FE7                     	;# 
  2148  0FE8                     	;# 
  2149  0FE9                     	;# 
  2150  0FEA                     	;# 
  2151  0FEB                     	;# 
  2152  0FED                     	;# 
  2153  0FEE                     	;# 
  2154  0FEF                     	;# 
  2155  0000                     	;# 
  2156  0001                     	;# 
  2157  0002                     	;# 
  2158  0003                     	;# 
  2159  0004                     	;# 
  2160  0005                     	;# 
  2161  0006                     	;# 
  2162  0007                     	;# 
  2163  0008                     	;# 
  2164  0009                     	;# 
  2165  000A                     	;# 
  2166  000B                     	;# 
  2167  000C                     	;# 
  2168  000D                     	;# 
  2169  000E                     	;# 
  2170  0010                     	;# 
  2171  0011                     	;# 
  2172  0012                     	;# 
  2173  0013                     	;# 
  2174  0016                     	;# 
  2175  0017                     	;# 
  2176  0018                     	;# 
  2177  001C                     	;# 
  2178  001C                     	;# 
  2179  001D                     	;# 
  2180  001D                     	;# 
  2181  001E                     	;# 
  2182  001F                     	;# 
  2183  008C                     	;# 
  2184  008C                     	;# 
  2185  008D                     	;# 
  2186  008E                     	;# 
  2187  008E                     	;# 
  2188  008F                     	;# 
  2189  0090                     	;# 
  2190  0090                     	;# 
  2191  0091                     	;# 
  2192  0093                     	;# 
  2193  0094                     	;# 
  2194  0095                     	;# 
  2195  0096                     	;# 
  2196  0097                     	;# 
  2197  0098                     	;# 
  2198  0099                     	;# 
  2199  009A                     	;# 
  2200  009B                     	;# 
  2201  009C                     	;# 
  2202  009D                     	;# 
  2203  009E                     	;# 
  2204  010C                     	;# 
  2205  010D                     	;# 
  2206  010E                     	;# 
  2207  010E                     	;# 
  2208  010F                     	;# 
  2209  0110                     	;# 
  2210  0110                     	;# 
  2211  0111                     	;# 
  2212  0112                     	;# 
  2213  0112                     	;# 
  2214  0113                     	;# 
  2215  0114                     	;# 
  2216  0114                     	;# 
  2217  0115                     	;# 
  2218  0116                     	;# 
  2219  0116                     	;# 
  2220  0117                     	;# 
  2221  0119                     	;# 
  2222  0119                     	;# 
  2223  0119                     	;# 
  2224  011A                     	;# 
  2225  011A                     	;# 
  2226  011A                     	;# 
  2227  011B                     	;# 
  2228  011B                     	;# 
  2229  011B                     	;# 
  2230  011B                     	;# 
  2231  011B                     	;# 
  2232  011C                     	;# 
  2233  011C                     	;# 
  2234  011C                     	;# 
  2235  011D                     	;# 
  2236  011D                     	;# 
  2237  011D                     	;# 
  2238  011E                     	;# 
  2239  011E                     	;# 
  2240  011E                     	;# 
  2241  011F                     	;# 
  2242  011F                     	;# 
  2243  011F                     	;# 
  2244  011F                     	;# 
  2245  011F                     	;# 
  2246  018C                     	;# 
  2247  018D                     	;# 
  2248  018E                     	;# 
  2249  018F                     	;# 
  2250  0190                     	;# 
  2251  0191                     	;# 
  2252  0192                     	;# 
  2253  0196                     	;# 
  2254  0197                     	;# 
  2255  0198                     	;# 
  2256  0199                     	;# 
  2257  019A                     	;# 
  2258  019B                     	;# 
  2259  019C                     	;# 
  2260  020C                     	;# 
  2261  020C                     	;# 
  2262  020D                     	;# 
  2263  020E                     	;# 
  2264  020F                     	;# 
  2265  020F                     	;# 
  2266  0210                     	;# 
  2267  0210                     	;# 
  2268  0211                     	;# 
  2269  0211                     	;# 
  2270  0212                     	;# 
  2271  0212                     	;# 
  2272  0213                     	;# 
  2273  0214                     	;# 
  2274  0215                     	;# 
  2275  0215                     	;# 
  2276  0216                     	;# 
  2277  0216                     	;# 
  2278  0217                     	;# 
  2279  0217                     	;# 
  2280  0218                     	;# 
  2281  0218                     	;# 
  2282  0219                     	;# 
  2283  021A                     	;# 
  2284  021B                     	;# 
  2285  021B                     	;# 
  2286  021C                     	;# 
  2287  021C                     	;# 
  2288  021D                     	;# 
  2289  021D                     	;# 
  2290  021E                     	;# 
  2291  021F                     	;# 
  2292  028C                     	;# 
  2293  028C                     	;# 
  2294  028D                     	;# 
  2295  028D                     	;# 
  2296  028E                     	;# 
  2297  028F                     	;# 
  2298  0290                     	;# 
  2299  0290                     	;# 
  2300  0291                     	;# 
  2301  0292                     	;# 
  2302  0292                     	;# 
  2303  0293                     	;# 
  2304  0293                     	;# 
  2305  0294                     	;# 
  2306  0295                     	;# 
  2307  0296                     	;# 
  2308  0296                     	;# 
  2309  0297                     	;# 
  2310  0298                     	;# 
  2311  0298                     	;# 
  2312  0299                     	;# 
  2313  0299                     	;# 
  2314  029A                     	;# 
  2315  029B                     	;# 
  2316  029C                     	;# 
  2317  029C                     	;# 
  2318  029D                     	;# 
  2319  030C                     	;# 
  2320  030C                     	;# 
  2321  030D                     	;# 
  2322  030E                     	;# 
  2323  030F                     	;# 
  2324  0310                     	;# 
  2325  0310                     	;# 
  2326  0311                     	;# 
  2327  0312                     	;# 
  2328  0313                     	;# 
  2329  0314                     	;# 
  2330  0314                     	;# 
  2331  0315                     	;# 
  2332  0316                     	;# 
  2333  0317                     	;# 
  2334  0318                     	;# 
  2335  0318                     	;# 
  2336  0319                     	;# 
  2337  031A                     	;# 
  2338  031B                     	;# 
  2339  031C                     	;# 
  2340  031C                     	;# 
  2341  031D                     	;# 
  2342  031E                     	;# 
  2343  031F                     	;# 
  2344  038C                     	;# 
  2345  038C                     	;# 
  2346  038D                     	;# 
  2347  038E                     	;# 
  2348  0390                     	;# 
  2349  0390                     	;# 
  2350  0391                     	;# 
  2351  0392                     	;# 
  2352  040C                     	;# 
  2353  040D                     	;# 
  2354  040E                     	;# 
  2355  040F                     	;# 
  2356  0410                     	;# 
  2357  0411                     	;# 
  2358  0416                     	;# 
  2359  0416                     	;# 
  2360  0417                     	;# 
  2361  0418                     	;# 
  2362  0418                     	;# 
  2363  0419                     	;# 
  2364  041A                     	;# 
  2365  041A                     	;# 
  2366  041B                     	;# 
  2367  041C                     	;# 
  2368  041C                     	;# 
  2369  041D                     	;# 
  2370  041E                     	;# 
  2371  041F                     	;# 
  2372  048C                     	;# 
  2373  048C                     	;# 
  2374  048D                     	;# 
  2375  048E                     	;# 
  2376  048F                     	;# 
  2377  048F                     	;# 
  2378  0490                     	;# 
  2379  0491                     	;# 
  2380  0492                     	;# 
  2381  0492                     	;# 
  2382  0493                     	;# 
  2383  0494                     	;# 
  2384  0495                     	;# 
  2385  0495                     	;# 
  2386  0496                     	;# 
  2387  0497                     	;# 
  2388  0498                     	;# 
  2389  0499                     	;# 
  2390  049A                     	;# 
  2391  049B                     	;# 
  2392  049C                     	;# 
  2393  049D                     	;# 
  2394  050C                     	;# 
  2395  050C                     	;# 
  2396  050D                     	;# 
  2397  050E                     	;# 
  2398  050F                     	;# 
  2399  050F                     	;# 
  2400  0510                     	;# 
  2401  0511                     	;# 
  2402  0512                     	;# 
  2403  0512                     	;# 
  2404  0513                     	;# 
  2405  0514                     	;# 
  2406  0515                     	;# 
  2407  0515                     	;# 
  2408  0516                     	;# 
  2409  0517                     	;# 
  2410  0518                     	;# 
  2411  0519                     	;# 
  2412  051A                     	;# 
  2413  051B                     	;# 
  2414  051C                     	;# 
  2415  051D                     	;# 
  2416  058C                     	;# 
  2417  058C                     	;# 
  2418  058D                     	;# 
  2419  058E                     	;# 
  2420  058F                     	;# 
  2421  058F                     	;# 
  2422  0590                     	;# 
  2423  0591                     	;# 
  2424  0592                     	;# 
  2425  0593                     	;# 
  2426  060C                     	;# 
  2427  060D                     	;# 
  2428  060E                     	;# 
  2429  060F                     	;# 
  2430  0610                     	;# 
  2431  0611                     	;# 
  2432  0612                     	;# 
  2433  0613                     	;# 
  2434  0614                     	;# 
  2435  0616                     	;# 
  2436  0617                     	;# 
  2437  0618                     	;# 
  2438  0619                     	;# 
  2439  061A                     	;# 
  2440  061B                     	;# 
  2441  061C                     	;# 
  2442  061D                     	;# 
  2443  061E                     	;# 
  2444  068C                     	;# 
  2445  068D                     	;# 
  2446  068E                     	;# 
  2447  068F                     	;# 
  2448  0690                     	;# 
  2449  0691                     	;# 
  2450  0692                     	;# 
  2451  0693                     	;# 
  2452  0694                     	;# 
  2453  070C                     	;# 
  2454  070D                     	;# 
  2455  070E                     	;# 
  2456  070F                     	;# 
  2457  0710                     	;# 
  2458  0711                     	;# 
  2459  0712                     	;# 
  2460  0713                     	;# 
  2461  0714                     	;# 
  2462  0716                     	;# 
  2463  0717                     	;# 
  2464  0718                     	;# 
  2465  0719                     	;# 
  2466  071A                     	;# 
  2467  071B                     	;# 
  2468  071C                     	;# 
  2469  071D                     	;# 
  2470  071E                     	;# 
  2471  0796                     	;# 
  2472  0797                     	;# 
  2473  0798                     	;# 
  2474  0799                     	;# 
  2475  079A                     	;# 
  2476  079B                     	;# 
  2477  080C                     	;# 
  2478  080D                     	;# 
  2479  080E                     	;# 
  2480  080F                     	;# 
  2481  0810                     	;# 
  2482  0811                     	;# 
  2483  0812                     	;# 
  2484  0813                     	;# 
  2485  0814                     	;# 
  2486  081A                     	;# 
  2487  081B                     	;# 
  2488  081C                     	;# 
  2489  081D                     	;# 
  2490  081E                     	;# 
  2491  081F                     	;# 
  2492  088C                     	;# 
  2493  088D                     	;# 
  2494  088E                     	;# 
  2495  088F                     	;# 
  2496  0890                     	;# 
  2497  0891                     	;# 
  2498  0892                     	;# 
  2499  0893                     	;# 
  2500  0895                     	;# 
  2501  0896                     	;# 
  2502  0897                     	;# 
  2503  0898                     	;# 
  2504  0899                     	;# 
  2505  089A                     	;# 
  2506  089B                     	;# 
  2507  090C                     	;# 
  2508  090E                     	;# 
  2509  090F                     	;# 
  2510  091F                     	;# 
  2511  091F                     	;# 
  2512  098F                     	;# 
  2513  098F                     	;# 
  2514  0990                     	;# 
  2515  0991                     	;# 
  2516  0992                     	;# 
  2517  0993                     	;# 
  2518  0994                     	;# 
  2519  0995                     	;# 
  2520  0996                     	;# 
  2521  0997                     	;# 
  2522  0E0F                     	;# 
  2523  0E10                     	;# 
  2524  0E11                     	;# 
  2525  0E12                     	;# 
  2526  0E13                     	;# 
  2527  0E14                     	;# 
  2528  0E15                     	;# 
  2529  0E16                     	;# 
  2530  0E17                     	;# 
  2531  0E18                     	;# 
  2532  0E19                     	;# 
  2533  0E1A                     	;# 
  2534  0E1B                     	;# 
  2535  0E1C                     	;# 
  2536  0E1D                     	;# 
  2537  0E1E                     	;# 
  2538  0E1F                     	;# 
  2539  0E20                     	;# 
  2540  0E21                     	;# 
  2541  0E22                     	;# 
  2542  0E23                     	;# 
  2543  0E24                     	;# 
  2544  0E25                     	;# 
  2545  0E26                     	;# 
  2546  0E27                     	;# 
  2547  0E28                     	;# 
  2548  0E29                     	;# 
  2549  0E2A                     	;# 
  2550  0E2B                     	;# 
  2551  0E2C                     	;# 
  2552  0E2D                     	;# 
  2553  0E2E                     	;# 
  2554  0E2F                     	;# 
  2555  0E30                     	;# 
  2556  0E31                     	;# 
  2557  0E32                     	;# 
  2558  0E33                     	;# 
  2559  0E34                     	;# 
  2560  0E35                     	;# 
  2561  0E36                     	;# 
  2562  0E37                     	;# 
  2563  0E8F                     	;# 
  2564  0E90                     	;# 
  2565  0E91                     	;# 
  2566  0E92                     	;# 
  2567  0E93                     	;# 
  2568  0E94                     	;# 
  2569  0E95                     	;# 
  2570  0E96                     	;# 
  2571  0E97                     	;# 
  2572  0E9C                     	;# 
  2573  0E9D                     	;# 
  2574  0E9E                     	;# 
  2575  0EA1                     	;# 
  2576  0EA2                     	;# 
  2577  0EA3                     	;# 
  2578  0EA4                     	;# 
  2579  0EA5                     	;# 
  2580  0EA9                     	;# 
  2581  0EAA                     	;# 
  2582  0EAB                     	;# 
  2583  0EAC                     	;# 
  2584  0EB1                     	;# 
  2585  0EB2                     	;# 
  2586  0EB3                     	;# 
  2587  0EB8                     	;# 
  2588  0EB9                     	;# 
  2589  0EBA                     	;# 
  2590  0EBB                     	;# 
  2591  0EBC                     	;# 
  2592  0EBD                     	;# 
  2593  0EBE                     	;# 
  2594  0EC3                     	;# 
  2595  0EC5                     	;# 
  2596  0EC6                     	;# 
  2597  0EC7                     	;# 
  2598  0EC8                     	;# 
  2599  0EC9                     	;# 
  2600  0ECA                     	;# 
  2601  0ECB                     	;# 
  2602  0ECC                     	;# 
  2603  0F10                     	;# 
  2604  0F11                     	;# 
  2605  0F12                     	;# 
  2606  0F13                     	;# 
  2607  0F14                     	;# 
  2608  0F15                     	;# 
  2609  0F16                     	;# 
  2610  0F17                     	;# 
  2611  0F18                     	;# 
  2612  0F19                     	;# 
  2613  0F1A                     	;# 
  2614  0F1B                     	;# 
  2615  0F1C                     	;# 
  2616  0F1D                     	;# 
  2617  0F1E                     	;# 
  2618  0F1F                     	;# 
  2619  0F20                     	;# 
  2620  0F21                     	;# 
  2621  0F22                     	;# 
  2622  0F23                     	;# 
  2623  0F24                     	;# 
  2624  0F25                     	;# 
  2625  0F26                     	;# 
  2626  0F27                     	;# 
  2627  0F38                     	;# 
  2628  0F39                     	;# 
  2629  0F3A                     	;# 
  2630  0F3B                     	;# 
  2631  0F3C                     	;# 
  2632  0F3D                     	;# 
  2633  0F3E                     	;# 
  2634  0F3F                     	;# 
  2635  0F40                     	;# 
  2636  0F41                     	;# 
  2637  0F43                     	;# 
  2638  0F44                     	;# 
  2639  0F45                     	;# 
  2640  0F46                     	;# 
  2641  0F47                     	;# 
  2642  0F48                     	;# 
  2643  0F49                     	;# 
  2644  0F4A                     	;# 
  2645  0F4B                     	;# 
  2646  0F4C                     	;# 
  2647  0F4E                     	;# 
  2648  0F4F                     	;# 
  2649  0F50                     	;# 
  2650  0F51                     	;# 
  2651  0F52                     	;# 
  2652  0F53                     	;# 
  2653  0F54                     	;# 
  2654  0F55                     	;# 
  2655  0F56                     	;# 
  2656  0F57                     	;# 
  2657  0F65                     	;# 
  2658  0F68                     	;# 
  2659  0F69                     	;# 
  2660  0F6A                     	;# 
  2661  0F6B                     	;# 
  2662  0FE4                     	;# 
  2663  0FE5                     	;# 
  2664  0FE6                     	;# 
  2665  0FE7                     	;# 
  2666  0FE8                     	;# 
  2667  0FE9                     	;# 
  2668  0FEA                     	;# 
  2669  0FEB                     	;# 
  2670  0FED                     	;# 
  2671  0FEE                     	;# 
  2672  0FEF                     	;# 
  2673  0000                     	;# 
  2674  0001                     	;# 
  2675  0002                     	;# 
  2676  0003                     	;# 
  2677  0004                     	;# 
  2678  0005                     	;# 
  2679  0006                     	;# 
  2680  0007                     	;# 
  2681  0008                     	;# 
  2682  0009                     	;# 
  2683  000A                     	;# 
  2684  000B                     	;# 
  2685  000C                     	;# 
  2686  000D                     	;# 
  2687  000E                     	;# 
  2688  0010                     	;# 
  2689  0011                     	;# 
  2690  0012                     	;# 
  2691  0013                     	;# 
  2692  0016                     	;# 
  2693  0017                     	;# 
  2694  0018                     	;# 
  2695  001C                     	;# 
  2696  001C                     	;# 
  2697  001D                     	;# 
  2698  001D                     	;# 
  2699  001E                     	;# 
  2700  001F                     	;# 
  2701  008C                     	;# 
  2702  008C                     	;# 
  2703  008D                     	;# 
  2704  008E                     	;# 
  2705  008E                     	;# 
  2706  008F                     	;# 
  2707  0090                     	;# 
  2708  0090                     	;# 
  2709  0091                     	;# 
  2710  0093                     	;# 
  2711  0094                     	;# 
  2712  0095                     	;# 
  2713  0096                     	;# 
  2714  0097                     	;# 
  2715  0098                     	;# 
  2716  0099                     	;# 
  2717  009A                     	;# 
  2718  009B                     	;# 
  2719  009C                     	;# 
  2720  009D                     	;# 
  2721  009E                     	;# 
  2722  010C                     	;# 
  2723  010D                     	;# 
  2724  010E                     	;# 
  2725  010E                     	;# 
  2726  010F                     	;# 
  2727  0110                     	;# 
  2728  0110                     	;# 
  2729  0111                     	;# 
  2730  0112                     	;# 
  2731  0112                     	;# 
  2732  0113                     	;# 
  2733  0114                     	;# 
  2734  0114                     	;# 
  2735  0115                     	;# 
  2736  0116                     	;# 
  2737  0116                     	;# 
  2738  0117                     	;# 
  2739  0119                     	;# 
  2740  0119                     	;# 
  2741  0119                     	;# 
  2742  011A                     	;# 
  2743  011A                     	;# 
  2744  011A                     	;# 
  2745  011B                     	;# 
  2746  011B                     	;# 
  2747  011B                     	;# 
  2748  011B                     	;# 
  2749  011B                     	;# 
  2750  011C                     	;# 
  2751  011C                     	;# 
  2752  011C                     	;# 
  2753  011D                     	;# 
  2754  011D                     	;# 
  2755  011D                     	;# 
  2756  011E                     	;# 
  2757  011E                     	;# 
  2758  011E                     	;# 
  2759  011F                     	;# 
  2760  011F                     	;# 
  2761  011F                     	;# 
  2762  011F                     	;# 
  2763  011F                     	;# 
  2764  018C                     	;# 
  2765  018D                     	;# 
  2766  018E                     	;# 
  2767  018F                     	;# 
  2768  0190                     	;# 
  2769  0191                     	;# 
  2770  0192                     	;# 
  2771  0196                     	;# 
  2772  0197                     	;# 
  2773  0198                     	;# 
  2774  0199                     	;# 
  2775  019A                     	;# 
  2776  019B                     	;# 
  2777  019C                     	;# 
  2778  020C                     	;# 
  2779  020C                     	;# 
  2780  020D                     	;# 
  2781  020E                     	;# 
  2782  020F                     	;# 
  2783  020F                     	;# 
  2784  0210                     	;# 
  2785  0210                     	;# 
  2786  0211                     	;# 
  2787  0211                     	;# 
  2788  0212                     	;# 
  2789  0212                     	;# 
  2790  0213                     	;# 
  2791  0214                     	;# 
  2792  0215                     	;# 
  2793  0215                     	;# 
  2794  0216                     	;# 
  2795  0216                     	;# 
  2796  0217                     	;# 
  2797  0217                     	;# 
  2798  0218                     	;# 
  2799  0218                     	;# 
  2800  0219                     	;# 
  2801  021A                     	;# 
  2802  021B                     	;# 
  2803  021B                     	;# 
  2804  021C                     	;# 
  2805  021C                     	;# 
  2806  021D                     	;# 
  2807  021D                     	;# 
  2808  021E                     	;# 
  2809  021F                     	;# 
  2810  028C                     	;# 
  2811  028C                     	;# 
  2812  028D                     	;# 
  2813  028D                     	;# 
  2814  028E                     	;# 
  2815  028F                     	;# 
  2816  0290                     	;# 
  2817  0290                     	;# 
  2818  0291                     	;# 
  2819  0292                     	;# 
  2820  0292                     	;# 
  2821  0293                     	;# 
  2822  0293                     	;# 
  2823  0294                     	;# 
  2824  0295                     	;# 
  2825  0296                     	;# 
  2826  0296                     	;# 
  2827  0297                     	;# 
  2828  0298                     	;# 
  2829  0298                     	;# 
  2830  0299                     	;# 
  2831  0299                     	;# 
  2832  029A                     	;# 
  2833  029B                     	;# 
  2834  029C                     	;# 
  2835  029C                     	;# 
  2836  029D                     	;# 
  2837  030C                     	;# 
  2838  030C                     	;# 
  2839  030D                     	;# 
  2840  030E                     	;# 
  2841  030F                     	;# 
  2842  0310                     	;# 
  2843  0310                     	;# 
  2844  0311                     	;# 
  2845  0312                     	;# 
  2846  0313                     	;# 
  2847  0314                     	;# 
  2848  0314                     	;# 
  2849  0315                     	;# 
  2850  0316                     	;# 
  2851  0317                     	;# 
  2852  0318                     	;# 
  2853  0318                     	;# 
  2854  0319                     	;# 
  2855  031A                     	;# 
  2856  031B                     	;# 
  2857  031C                     	;# 
  2858  031C                     	;# 
  2859  031D                     	;# 
  2860  031E                     	;# 
  2861  031F                     	;# 
  2862  038C                     	;# 
  2863  038C                     	;# 
  2864  038D                     	;# 
  2865  038E                     	;# 
  2866  0390                     	;# 
  2867  0390                     	;# 
  2868  0391                     	;# 
  2869  0392                     	;# 
  2870  040C                     	;# 
  2871  040D                     	;# 
  2872  040E                     	;# 
  2873  040F                     	;# 
  2874  0410                     	;# 
  2875  0411                     	;# 
  2876  0416                     	;# 
  2877  0416                     	;# 
  2878  0417                     	;# 
  2879  0418                     	;# 
  2880  0418                     	;# 
  2881  0419                     	;# 
  2882  041A                     	;# 
  2883  041A                     	;# 
  2884  041B                     	;# 
  2885  041C                     	;# 
  2886  041C                     	;# 
  2887  041D                     	;# 
  2888  041E                     	;# 
  2889  041F                     	;# 
  2890  048C                     	;# 
  2891  048C                     	;# 
  2892  048D                     	;# 
  2893  048E                     	;# 
  2894  048F                     	;# 
  2895  048F                     	;# 
  2896  0490                     	;# 
  2897  0491                     	;# 
  2898  0492                     	;# 
  2899  0492                     	;# 
  2900  0493                     	;# 
  2901  0494                     	;# 
  2902  0495                     	;# 
  2903  0495                     	;# 
  2904  0496                     	;# 
  2905  0497                     	;# 
  2906  0498                     	;# 
  2907  0499                     	;# 
  2908  049A                     	;# 
  2909  049B                     	;# 
  2910  049C                     	;# 
  2911  049D                     	;# 
  2912  050C                     	;# 
  2913  050C                     	;# 
  2914  050D                     	;# 
  2915  050E                     	;# 
  2916  050F                     	;# 
  2917  050F                     	;# 
  2918  0510                     	;# 
  2919  0511                     	;# 
  2920  0512                     	;# 
  2921  0512                     	;# 
  2922  0513                     	;# 
  2923  0514                     	;# 
  2924  0515                     	;# 
  2925  0515                     	;# 
  2926  0516                     	;# 
  2927  0517                     	;# 
  2928  0518                     	;# 
  2929  0519                     	;# 
  2930  051A                     	;# 
  2931  051B                     	;# 
  2932  051C                     	;# 
  2933  051D                     	;# 
  2934  058C                     	;# 
  2935  058C                     	;# 
  2936  058D                     	;# 
  2937  058E                     	;# 
  2938  058F                     	;# 
  2939  058F                     	;# 
  2940  0590                     	;# 
  2941  0591                     	;# 
  2942  0592                     	;# 
  2943  0593                     	;# 
  2944  060C                     	;# 
  2945  060D                     	;# 
  2946  060E                     	;# 
  2947  060F                     	;# 
  2948  0610                     	;# 
  2949  0611                     	;# 
  2950  0612                     	;# 
  2951  0613                     	;# 
  2952  0614                     	;# 
  2953  0616                     	;# 
  2954  0617                     	;# 
  2955  0618                     	;# 
  2956  0619                     	;# 
  2957  061A                     	;# 
  2958  061B                     	;# 
  2959  061C                     	;# 
  2960  061D                     	;# 
  2961  061E                     	;# 
  2962  068C                     	;# 
  2963  068D                     	;# 
  2964  068E                     	;# 
  2965  068F                     	;# 
  2966  0690                     	;# 
  2967  0691                     	;# 
  2968  0692                     	;# 
  2969  0693                     	;# 
  2970  0694                     	;# 
  2971  070C                     	;# 
  2972  070D                     	;# 
  2973  070E                     	;# 
  2974  070F                     	;# 
  2975  0710                     	;# 
  2976  0711                     	;# 
  2977  0712                     	;# 
  2978  0713                     	;# 
  2979  0714                     	;# 
  2980  0716                     	;# 
  2981  0717                     	;# 
  2982  0718                     	;# 
  2983  0719                     	;# 
  2984  071A                     	;# 
  2985  071B                     	;# 
  2986  071C                     	;# 
  2987  071D                     	;# 
  2988  071E                     	;# 
  2989  0796                     	;# 
  2990  0797                     	;# 
  2991  0798                     	;# 
  2992  0799                     	;# 
  2993  079A                     	;# 
  2994  079B                     	;# 
  2995  080C                     	;# 
  2996  080D                     	;# 
  2997  080E                     	;# 
  2998  080F                     	;# 
  2999  0810                     	;# 
  3000  0811                     	;# 
  3001  0812                     	;# 
  3002  0813                     	;# 
  3003  0814                     	;# 
  3004  081A                     	;# 
  3005  081B                     	;# 
  3006  081C                     	;# 
  3007  081D                     	;# 
  3008  081E                     	;# 
  3009  081F                     	;# 
  3010  088C                     	;# 
  3011  088D                     	;# 
  3012  088E                     	;# 
  3013  088F                     	;# 
  3014  0890                     	;# 
  3015  0891                     	;# 
  3016  0892                     	;# 
  3017  0893                     	;# 
  3018  0895                     	;# 
  3019  0896                     	;# 
  3020  0897                     	;# 
  3021  0898                     	;# 
  3022  0899                     	;# 
  3023  089A                     	;# 
  3024  089B                     	;# 
  3025  090C                     	;# 
  3026  090E                     	;# 
  3027  090F                     	;# 
  3028  091F                     	;# 
  3029  091F                     	;# 
  3030  098F                     	;# 
  3031  098F                     	;# 
  3032  0990                     	;# 
  3033  0991                     	;# 
  3034  0992                     	;# 
  3035  0993                     	;# 
  3036  0994                     	;# 
  3037  0995                     	;# 
  3038  0996                     	;# 
  3039  0997                     	;# 
  3040  0E0F                     	;# 
  3041  0E10                     	;# 
  3042  0E11                     	;# 
  3043  0E12                     	;# 
  3044  0E13                     	;# 
  3045  0E14                     	;# 
  3046  0E15                     	;# 
  3047  0E16                     	;# 
  3048  0E17                     	;# 
  3049  0E18                     	;# 
  3050  0E19                     	;# 
  3051  0E1A                     	;# 
  3052  0E1B                     	;# 
  3053  0E1C                     	;# 
  3054  0E1D                     	;# 
  3055  0E1E                     	;# 
  3056  0E1F                     	;# 
  3057  0E20                     	;# 
  3058  0E21                     	;# 
  3059  0E22                     	;# 
  3060  0E23                     	;# 
  3061  0E24                     	;# 
  3062  0E25                     	;# 
  3063  0E26                     	;# 
  3064  0E27                     	;# 
  3065  0E28                     	;# 
  3066  0E29                     	;# 
  3067  0E2A                     	;# 
  3068  0E2B                     	;# 
  3069  0E2C                     	;# 
  3070  0E2D                     	;# 
  3071  0E2E                     	;# 
  3072  0E2F                     	;# 
  3073  0E30                     	;# 
  3074  0E31                     	;# 
  3075  0E32                     	;# 
  3076  0E33                     	;# 
  3077  0E34                     	;# 
  3078  0E35                     	;# 
  3079  0E36                     	;# 
  3080  0E37                     	;# 
  3081  0E8F                     	;# 
  3082  0E90                     	;# 
  3083  0E91                     	;# 
  3084  0E92                     	;# 
  3085  0E93                     	;# 
  3086  0E94                     	;# 
  3087  0E95                     	;# 
  3088  0E96                     	;# 
  3089  0E97                     	;# 
  3090  0E9C                     	;# 
  3091  0E9D                     	;# 
  3092  0E9E                     	;# 
  3093  0EA1                     	;# 
  3094  0EA2                     	;# 
  3095  0EA3                     	;# 
  3096  0EA4                     	;# 
  3097  0EA5                     	;# 
  3098  0EA9                     	;# 
  3099  0EAA                     	;# 
  3100  0EAB                     	;# 
  3101  0EAC                     	;# 
  3102  0EB1                     	;# 
  3103  0EB2                     	;# 
  3104  0EB3                     	;# 
  3105  0EB8                     	;# 
  3106  0EB9                     	;# 
  3107  0EBA                     	;# 
  3108  0EBB                     	;# 
  3109  0EBC                     	;# 
  3110  0EBD                     	;# 
  3111  0EBE                     	;# 
  3112  0EC3                     	;# 
  3113  0EC5                     	;# 
  3114  0EC6                     	;# 
  3115  0EC7                     	;# 
  3116  0EC8                     	;# 
  3117  0EC9                     	;# 
  3118  0ECA                     	;# 
  3119  0ECB                     	;# 
  3120  0ECC                     	;# 
  3121  0F10                     	;# 
  3122  0F11                     	;# 
  3123  0F12                     	;# 
  3124  0F13                     	;# 
  3125  0F14                     	;# 
  3126  0F15                     	;# 
  3127  0F16                     	;# 
  3128  0F17                     	;# 
  3129  0F18                     	;# 
  3130  0F19                     	;# 
  3131  0F1A                     	;# 
  3132  0F1B                     	;# 
  3133  0F1C                     	;# 
  3134  0F1D                     	;# 
  3135  0F1E                     	;# 
  3136  0F1F                     	;# 
  3137  0F20                     	;# 
  3138  0F21                     	;# 
  3139  0F22                     	;# 
  3140  0F23                     	;# 
  3141  0F24                     	;# 
  3142  0F25                     	;# 
  3143  0F26                     	;# 
  3144  0F27                     	;# 
  3145  0F38                     	;# 
  3146  0F39                     	;# 
  3147  0F3A                     	;# 
  3148  0F3B                     	;# 
  3149  0F3C                     	;# 
  3150  0F3D                     	;# 
  3151  0F3E                     	;# 
  3152  0F3F                     	;# 
  3153  0F40                     	;# 
  3154  0F41                     	;# 
  3155  0F43                     	;# 
  3156  0F44                     	;# 
  3157  0F45                     	;# 
  3158  0F46                     	;# 
  3159  0F47                     	;# 
  3160  0F48                     	;# 
  3161  0F49                     	;# 
  3162  0F4A                     	;# 
  3163  0F4B                     	;# 
  3164  0F4C                     	;# 
  3165  0F4E                     	;# 
  3166  0F4F                     	;# 
  3167  0F50                     	;# 
  3168  0F51                     	;# 
  3169  0F52                     	;# 
  3170  0F53                     	;# 
  3171  0F54                     	;# 
  3172  0F55                     	;# 
  3173  0F56                     	;# 
  3174  0F57                     	;# 
  3175  0F65                     	;# 
  3176  0F68                     	;# 
  3177  0F69                     	;# 
  3178  0F6A                     	;# 
  3179  0F6B                     	;# 
  3180  0FE4                     	;# 
  3181  0FE5                     	;# 
  3182  0FE6                     	;# 
  3183  0FE7                     	;# 
  3184  0FE8                     	;# 
  3185  0FE9                     	;# 
  3186  0FEA                     	;# 
  3187  0FEB                     	;# 
  3188  0FED                     	;# 
  3189  0FEE                     	;# 
  3190  0FEF                     	;# 
  3191                           
  3192                           	psect	stringtext1
  3193  0813                     __pstringtext1:
  3194  0813                     _mv:
  3195  0813  340D               	retlw	13
  3196  0814  3468               	retlw	104
  3197  0815  3453               	retlw	83
  3198  0816  343B               	retlw	59
  3199  0817                     __end_of_mv:
  3200                           
  3201                           	psect	stringtext2
  3202  0800                     __pstringtext2:
  3203  0800                     _LCD_INIT_STRING:
  3204  0800  3428               	retlw	40
  3205  0801  340C               	retlw	12
  3206  0802  3401               	retlw	1
  3207  0803  3406               	retlw	6
  3208  0804                     __end_of_LCD_INIT_STRING:
  3209  0013                     _TRISC	set	19
  3210  0012                     _TRISB	set	18
  3211  000D                     _PORTB	set	13
  3212  0017                     _LATB	set	23
  3213  0011                     _TRISA	set	17
  3214  000C                     _PORTA	set	12
  3215  0016                     _LATA	set	22
  3216  009B                     _ADCAP	set	155
  3217  009E                     _ADPCH	set	158
  3218  009A                     _ADREF	set	154
  3219  0098                     _ADCLK	set	152
  3220  0095                     _ADCON2	set	149
  3221  0094                     _ADCON1	set	148
  3222  0093                     _ADCON0	set	147
  3223  0119                     _RCREG	set	281
  3224  011A                     _TXREG	set	282
  3225  011C                     _SP1BRGH	set	284
  3226  011B                     _SP1BRGL	set	283
  3227  011E                     _TX1STA	set	286
  3228  011D                     _RC1STA	set	285
  3229  011F                     _BAUD1CON	set	287
  3230  018C                     _SSP1BUF	set	396
  3231  0191                     _SSP1CON2bits	set	401
  3232  018D                     _SSP1ADD	set	397
  3233  0192                     _SSP1CON3	set	402
  3234  0190                     _SSP1CON1	set	400
  3235  018F                     _SSP1STAT	set	399
  3236  070F                     _PIR3bits	set	1807
  3237  070F                     _PIR3	set	1807
  3238  0EC6                     _SSP1DATPPS	set	3782
  3239  0EC5                     _SSP1CLKPPS	set	3781
  3240  0ECB                     _RXPPS	set	3787
  3241  0F24                     _RC4PPS	set	3876
  3242  0F23                     _RC3PPS	set	3875
  3243  0F20                     _RC0PPS	set	3872
  3244  0F4E                     _ANSELC	set	3918
  3245  0F43                     _ANSELB	set	3907
  3246  0F38                     _ANSELA	set	3896
  3247  0804                     STR_1:
  3248  0804  340C               	retlw	12
  3249  0805  3468               	retlw	104	;'h'
  3250  0806  346F               	retlw	111	;'o'
  3251  0807  346C               	retlw	108	;'l'
  3252  0808  3461               	retlw	97	;'a'
  3253  0809  3420               	retlw	32	;' '
  3254  080A  346D               	retlw	109	;'m'
  3255  080B  3475               	retlw	117	;'u'
  3256  080C  346E               	retlw	110	;'n'
  3257  080D  3464               	retlw	100	;'d'
  3258  080E  346F               	retlw	111	;'o'
  3259  080F  340A               	retlw	10
  3260  0810  3425               	retlw	37	;'%'
  3261  0811  3469               	retlw	105	;'i'
  3262  0812  3400               	retlw	0
  3263                           
  3264                           	psect	stringtext3
  3265  0000                     __pstringtext3:
  3266                           
  3267                           	psect	cinit
  3268  07E8                     start_initialization:	
  3269                           ; #config settings
  3270                           
  3271  07E8                     __initialization:
  3272                           
  3273                           ; Clear objects allocated to BANK0
  3274  07E8  0020               	movlb	0	; select bank0
  3275  07E9  01EB               	clrf	__pbssBANK0& (0+127)
  3276  07EA  01EC               	clrf	(__pbssBANK0+1)& (0+127)
  3277  07EB  01ED               	clrf	(__pbssBANK0+2)& (0+127)
  3278  07EC  01EE               	clrf	(__pbssBANK0+3)& (0+127)
  3279  07ED  01EF               	clrf	(__pbssBANK0+4)& (0+127)
  3280                           
  3281                           ; Clear objects allocated to BANK1
  3282  07EE  30DB               	movlw	low __pbssBANK1
  3283  07EF  0084               	movwf	4
  3284  07F0  3000               	movlw	high __pbssBANK1
  3285  07F1  0085               	movwf	5
  3286  07F2  300D               	movlw	13
  3287  07F3  3180  2028  3187   	fcall	clear_ram0
  3288                           
  3289                           ; Clear objects allocated to BANK2
  3290  07F6  3020               	movlw	low __pbssBANK2
  3291  07F7  0084               	movwf	4
  3292  07F8  3001               	movlw	high __pbssBANK2
  3293  07F9  0085               	movwf	5
  3294  07FA  3020               	movlw	32
  3295  07FB  3180  2028         	fcall	clear_ram0
  3296  07FD                     end_of_initialization:	
  3297                           ;End of C runtime variable initialization code
  3298                           
  3299  07FD                     __end_of__initialization:
  3300  07FD  0020               	movlb	0
  3301  07FE  3181  2979         	ljmp	_main	;jump to C main() function
  3302                           
  3303                           	psect	bssBANK0
  3304  006B                     __pbssBANK0:
  3305  006B                     _prec:
  3306  006B                     	ds	2
  3307  006D                     _flags:
  3308  006D                     	ds	2
  3309  006F                     _g_LcdY:
  3310  006F                     	ds	1
  3311                           
  3312                           	psect	bssBANK1
  3313  00DB                     __pbssBANK1:
  3314  00DB                     _temperatura:
  3315  00DB                     	ds	4
  3316  00DF                     _volt:
  3317  00DF                     	ds	4
  3318  00E3                     _nout:
  3319  00E3                     	ds	2
  3320  00E5                     _width:
  3321  00E5                     	ds	2
  3322  00E7                     _g_LcdX:
  3323  00E7                     	ds	1
  3324                           
  3325                           	psect	bssBANK2
  3326  0120                     __pbssBANK2:
  3327  0120                     _dbuf:
  3328  0120                     	ds	32
  3329                           
  3330                           	psect	clrtext
  3331  0028                     clear_ram0:	
  3332                           ;	Called with FSR0 containing the base address, and
  3333                           ;	WREG with the size to clear
  3334                           
  3335  0028  0064               	clrwdt	;clear the watchdog before getting into this loop
  3336  0029                     clrloop0:
  3337  0029  0180               	clrf	0	;clear RAM location pointed to by FSR
  3338  002A  3101               	addfsr 0,1
  3339  002B  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3340  002C  2829               	goto	clrloop0	;have we reached the end yet?
  3341  002D  3400               	retlw	0	;all done for this memory range, return
  3342                           
  3343                           	psect	cstackBANK1
  3344  00A0                     __pcstackBANK1:
  3345  00A0                     sprintf@ap:
  3346                           
  3347                           ; 1 bytes @ 0x0
  3348  00A0                     	ds	1
  3349  00A1                     sprintf@s:
  3350                           
  3351                           ; 1 bytes @ 0x1
  3352  00A1                     	ds	1
  3353  00A2                     sprintf@f:
  3354                           
  3355                           ; 5 bytes @ 0x2
  3356  00A2                     	ds	5
  3357  00A7                     main@buffer:
  3358                           
  3359                           ; 50 bytes @ 0x7
  3360  00A7                     	ds	50
  3361  00D9                     main@adc:
  3362                           
  3363                           ; 2 bytes @ 0x39
  3364  00D9                     	ds	2
  3365                           
  3366                           	psect	cstackCOMMON
  3367  0070                     __pcstackCOMMON:
  3368  0070                     ?_port_init:
  3369  0070                     ??_port_init:	
  3370                           ; 1 bytes @ 0x0
  3371                           
  3372  0070                     ?_adc_init:	
  3373                           ; 1 bytes @ 0x0
  3374                           
  3375  0070                     ??_adc_init:	
  3376                           ; 1 bytes @ 0x0
  3377                           
  3378  0070                     ?_I2C_init:	
  3379                           ; 1 bytes @ 0x0
  3380                           
  3381  0070                     ??_I2C_init:	
  3382                           ; 1 bytes @ 0x0
  3383                           
  3384  0070                     ?_lcd_init:	
  3385                           ; 1 bytes @ 0x0
  3386                           
  3387  0070                     ?_lcd_puts:	
  3388                           ; 1 bytes @ 0x0
  3389                           
  3390  0070                     ?_I2C_start:	
  3391                           ; 1 bytes @ 0x0
  3392                           
  3393  0070                     ??_I2C_start:	
  3394                           ; 1 bytes @ 0x0
  3395                           
  3396  0070                     ?_I2C_write:	
  3397                           ; 1 bytes @ 0x0
  3398                           
  3399  0070                     ??_I2C_write:	
  3400                           ; 1 bytes @ 0x0
  3401                           
  3402  0070                     ?_I2C_stop:	
  3403                           ; 1 bytes @ 0x0
  3404                           
  3405  0070                     ??_I2C_stop:	
  3406                           ; 1 bytes @ 0x0
  3407                           
  3408  0070                     ?_uart_rx:	
  3409                           ; 1 bytes @ 0x0
  3410                           
  3411  0070                     ??_uart_rx:	
  3412                           ; 1 bytes @ 0x0
  3413                           
  3414  0070                     ?_main:	
  3415                           ; 1 bytes @ 0x0
  3416                           
  3417  0070                     ?_uart_tx:	
  3418                           ; 1 bytes @ 0x0
  3419                           
  3420  0070                     ??_uart_tx:	
  3421                           ; 1 bytes @ 0x0
  3422                           
  3423  0070                     ?_putch:	
  3424                           ; 1 bytes @ 0x0
  3425                           
  3426  0070                     ?_Write_PCF:	
  3427                           ; 1 bytes @ 0x0
  3428                           
  3429  0070                     ??___aodiv:	
  3430                           ; 1 bytes @ 0x0
  3431                           
  3432  0070                     ??___aomod:	
  3433                           ; 1 bytes @ 0x0
  3434                           
  3435  0070                     ?_strlen:	
  3436                           ; 1 bytes @ 0x0
  3437                           
  3438  0070                     ?___lldiv:	
  3439                           ; 2 bytes @ 0x0
  3440                           
  3441  0070                     I2C_write@I2C_data:	
  3442                           ; 4 bytes @ 0x0
  3443                           
  3444  0070                     ___lldiv@divisor:	
  3445                           ; 1 bytes @ 0x0
  3446                           
  3447                           
  3448                           ; 4 bytes @ 0x0
  3449  0070                     	ds	1
  3450  0071                     ??_Write_PCF:
  3451  0071                     uart_tx@dato:	
  3452                           ; 1 bytes @ 0x1
  3453                           
  3454  0071                     Write_PCF@dato:	
  3455                           ; 1 bytes @ 0x1
  3456                           
  3457  0071                     ___aodiv@counter:	
  3458                           ; 1 bytes @ 0x1
  3459                           
  3460  0071                     ___aomod@counter:	
  3461                           ; 1 bytes @ 0x1
  3462                           
  3463                           
  3464                           ; 1 bytes @ 0x1
  3465  0071                     	ds	1
  3466  0072                     ??_strlen:
  3467  0072                     ??_putch:	
  3468                           ; 1 bytes @ 0x2
  3469                           
  3470  0072                     ?_Send_D7_D4:	
  3471                           ; 1 bytes @ 0x2
  3472                           
  3473  0072                     putch@dato:	
  3474                           ; 1 bytes @ 0x2
  3475                           
  3476  0072                     Send_D7_D4@nibble:	
  3477                           ; 1 bytes @ 0x2
  3478                           
  3479  0072                     ___aodiv@sign:	
  3480                           ; 1 bytes @ 0x2
  3481                           
  3482  0072                     ___aomod@sign:	
  3483                           ; 1 bytes @ 0x2
  3484                           
  3485                           
  3486                           ; 1 bytes @ 0x2
  3487  0072                     	ds	1
  3488  0073                     ??_Send_D7_D4:
  3489  0073                     ?_fputc:	
  3490                           ; 1 bytes @ 0x3
  3491                           
  3492  0073                     ?_abs:	
  3493                           ; 2 bytes @ 0x3
  3494                           
  3495  0073                     strlen@a:	
  3496                           ; 2 bytes @ 0x3
  3497                           
  3498  0073                     abs@a:	
  3499                           ; 1 bytes @ 0x3
  3500                           
  3501  0073                     fputc@c:	
  3502                           ; 2 bytes @ 0x3
  3503                           
  3504  0073                     ___aodiv@quotient:	
  3505                           ; 2 bytes @ 0x3
  3506                           
  3507                           
  3508                           ; 8 bytes @ 0x3
  3509  0073                     	ds	1
  3510  0074                     Send_D7_D4@address:
  3511  0074                     strlen@s:	
  3512                           ; 1 bytes @ 0x4
  3513                           
  3514  0074                     ___lldiv@dividend:	
  3515                           ; 1 bytes @ 0x4
  3516                           
  3517                           
  3518                           ; 4 bytes @ 0x4
  3519  0074                     	ds	1
  3520  0075                     ??_abs:
  3521  0075                     Send_D7_D4@datos:	
  3522                           ; 1 bytes @ 0x5
  3523                           
  3524  0075                     fputc@fp:	
  3525                           ; 1 bytes @ 0x5
  3526                           
  3527                           
  3528                           ; 1 bytes @ 0x5
  3529  0075                     	ds	1
  3530  0076                     ??_fputc:
  3531  0076                     ?_lcd_send_byte:	
  3532                           ; 1 bytes @ 0x6
  3533                           
  3534  0076                     lcd_send_byte@n:	
  3535                           ; 1 bytes @ 0x6
  3536                           
  3537                           
  3538                           ; 1 bytes @ 0x6
  3539  0076                     	ds	1
  3540  0077                     ??_lcd_send_byte:
  3541                           
  3542                           ; 1 bytes @ 0x7
  3543  0077                     	ds	1
  3544  0078                     ??___lldiv:
  3545                           
  3546                           ; 1 bytes @ 0x8
  3547  0078                     	ds	1
  3548  0079                     lcd_send_byte@address:
  3549  0079                     ___lldiv@quotient:	
  3550                           ; 1 bytes @ 0x9
  3551                           
  3552                           
  3553                           ; 4 bytes @ 0x9
  3554  0079                     	ds	1
  3555  007A                     ??_lcd_init:
  3556  007A                     ?_lcd_gotoxy:	
  3557                           ; 1 bytes @ 0xA
  3558                           
  3559  007A                     lcd_gotoxy@y:	
  3560                           ; 1 bytes @ 0xA
  3561                           
  3562                           
  3563                           ; 1 bytes @ 0xA
  3564  007A                     	ds	1
  3565  007B                     ??_lcd_gotoxy:
  3566  007B                     ?_fputs:	
  3567                           ; 1 bytes @ 0xB
  3568                           
  3569  007B                     fputs@fp:	
  3570                           ; 2 bytes @ 0xB
  3571                           
  3572                           
  3573                           ; 1 bytes @ 0xB
  3574  007B                     	ds	1
  3575  007C                     ??_pad:
  3576  007C                     lcd_init@i:	
  3577                           ; 1 bytes @ 0xC
  3578                           
  3579                           
  3580                           ; 1 bytes @ 0xC
  3581  007C                     	ds	1
  3582  007D                     ??_sprintf:
  3583  007D                     lcd_puts@dato:	
  3584                           ; 1 bytes @ 0xD
  3585                           
  3586  007D                     ___lldiv@counter:	
  3587                           ; 1 bytes @ 0xD
  3588                           
  3589                           
  3590                           ; 1 bytes @ 0xD
  3591  007D                     	ds	1
  3592                           
  3593                           	psect	cstackBANK0
  3594  0020                     __pcstackBANK0:
  3595  0020                     ?_serial_init:
  3596  0020                     ??_fputs:	
  3597                           ; 1 bytes @ 0x0
  3598                           
  3599  0020                     ?___aodiv:	
  3600                           ; 1 bytes @ 0x0
  3601                           
  3602  0020                     ?___aomod:	
  3603                           ; 8 bytes @ 0x0
  3604                           
  3605  0020                     lcd_gotoxy@x:	
  3606                           ; 8 bytes @ 0x0
  3607                           
  3608  0020                     serial_init@baudios:	
  3609                           ; 1 bytes @ 0x0
  3610                           
  3611  0020                     ___aodiv@divisor:	
  3612                           ; 4 bytes @ 0x0
  3613                           
  3614  0020                     ___aomod@divisor:	
  3615                           ; 8 bytes @ 0x0
  3616                           
  3617                           
  3618                           ; 8 bytes @ 0x0
  3619  0020                     	ds	1
  3620  0021                     lcd_gotoxy@address:
  3621                           
  3622                           ; 1 bytes @ 0x1
  3623  0021                     	ds	1
  3624  0022                     ??_lcd_puts:
  3625                           
  3626                           ; 1 bytes @ 0x2
  3627  0022                     	ds	1
  3628  0023                     fputs@c:
  3629                           
  3630                           ; 1 bytes @ 0x3
  3631  0023                     	ds	1
  3632  0024                     ??_serial_init:
  3633  0024                     fputs@i:	
  3634                           ; 1 bytes @ 0x4
  3635                           
  3636                           
  3637                           ; 2 bytes @ 0x4
  3638  0024                     	ds	2
  3639  0026                     fputs@s:
  3640                           
  3641                           ; 1 bytes @ 0x6
  3642  0026                     	ds	1
  3643  0027                     ?_pad:
  3644  0027                     pad@buf:	
  3645                           ; 2 bytes @ 0x7
  3646                           
  3647                           
  3648                           ; 1 bytes @ 0x7
  3649  0027                     	ds	1
  3650  0028                     serial_init@sx:
  3651  0028                     pad@p:	
  3652                           ; 2 bytes @ 0x8
  3653                           
  3654  0028                     ___aodiv@dividend:	
  3655                           ; 2 bytes @ 0x8
  3656                           
  3657  0028                     ___aomod@dividend:	
  3658                           ; 8 bytes @ 0x8
  3659                           
  3660                           
  3661                           ; 8 bytes @ 0x8
  3662  0028                     	ds	2
  3663  002A                     pad@i:
  3664                           
  3665                           ; 2 bytes @ 0xA
  3666  002A                     	ds	2
  3667  002C                     pad@w:
  3668                           
  3669                           ; 2 bytes @ 0xC
  3670  002C                     	ds	2
  3671  002E                     pad@fp:
  3672                           
  3673                           ; 1 bytes @ 0xE
  3674  002E                     	ds	2
  3675  0030                     ?_dtoa:
  3676  0030                     dtoa@d:	
  3677                           ; 2 bytes @ 0x10
  3678                           
  3679                           
  3680                           ; 8 bytes @ 0x10
  3681  0030                     	ds	8
  3682  0038                     ??_dtoa:
  3683                           
  3684                           ; 1 bytes @ 0x18
  3685  0038                     	ds	3
  3686  003B                     _dtoa$821:
  3687                           
  3688                           ; 2 bytes @ 0x1B
  3689  003B                     	ds	2
  3690  003D                     dtoa@fp:
  3691                           
  3692                           ; 1 bytes @ 0x1D
  3693  003D                     	ds	1
  3694  003E                     dtoa@p:
  3695                           
  3696                           ; 2 bytes @ 0x1E
  3697  003E                     	ds	2
  3698  0040                     dtoa@w:
  3699                           
  3700                           ; 2 bytes @ 0x20
  3701  0040                     	ds	2
  3702  0042                     dtoa@s:
  3703                           
  3704                           ; 2 bytes @ 0x22
  3705  0042                     	ds	2
  3706  0044                     dtoa@n:
  3707                           
  3708                           ; 8 bytes @ 0x24
  3709  0044                     	ds	8
  3710  004C                     dtoa@i:
  3711                           
  3712                           ; 2 bytes @ 0x2C
  3713  004C                     	ds	2
  3714  004E                     ?_vfpfcnvrt:
  3715  004E                     vfpfcnvrt@fmt:	
  3716                           ; 2 bytes @ 0x2E
  3717                           
  3718                           
  3719                           ; 1 bytes @ 0x2E
  3720  004E                     	ds	1
  3721  004F                     vfpfcnvrt@ap:
  3722                           
  3723                           ; 1 bytes @ 0x2F
  3724  004F                     	ds	1
  3725  0050                     ??_vfpfcnvrt:
  3726                           
  3727                           ; 1 bytes @ 0x30
  3728  0050                     	ds	5
  3729  0055                     vfpfcnvrt@ll:
  3730                           
  3731                           ; 8 bytes @ 0x35
  3732  0055                     	ds	8
  3733  005D                     vfpfcnvrt@fp:
  3734                           
  3735                           ; 1 bytes @ 0x3D
  3736  005D                     	ds	1
  3737  005E                     ?_vfprintf:
  3738  005E                     vfprintf@fmt:	
  3739                           ; 2 bytes @ 0x3E
  3740                           
  3741                           
  3742                           ; 2 bytes @ 0x3E
  3743  005E                     	ds	2
  3744  0060                     vfprintf@ap:
  3745                           
  3746                           ; 1 bytes @ 0x40
  3747  0060                     	ds	1
  3748  0061                     ??_vfprintf:
  3749                           
  3750                           ; 1 bytes @ 0x41
  3751  0061                     	ds	2
  3752  0063                     vfprintf@fp:
  3753                           
  3754                           ; 1 bytes @ 0x43
  3755  0063                     	ds	1
  3756  0064                     vfprintf@cfmt:
  3757                           
  3758                           ; 2 bytes @ 0x44
  3759  0064                     	ds	2
  3760  0066                     ?_sprintf:
  3761  0066                     sprintf@fmt:	
  3762                           ; 2 bytes @ 0x46
  3763                           
  3764                           
  3765                           ; 2 bytes @ 0x46
  3766  0066                     	ds	4
  3767  006A                     ??_main:
  3768                           
  3769                           ; 1 bytes @ 0x4A
  3770  006A                     	ds	1
  3771                           
  3772                           	psect	maintext
  3773  0179                     __pmaintext:	
  3774 ;;
  3775 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3776 ;;
  3777 ;; *************** function _main *****************
  3778 ;; Defined at:
  3779 ;;		line 19 in file "Main.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;		None
  3782 ;; Auto vars:     Size  Location     Type
  3783 ;;  buffer         50    7[BANK1 ] unsigned char [50]
  3784 ;;  adc             2   57[BANK1 ] unsigned short 
  3785 ;;  contador        1    0        unsigned char 
  3786 ;;  rx              1    0        unsigned char 
  3787 ;;  low_byte        1    0        unsigned char 
  3788 ;;  high_byte       1    0        char 
  3789 ;; Return value:  Size  Location     Type
  3790 ;;                  1    wreg      void 
  3791 ;; Registers used:
  3792 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3793 ;; Tracked objects:
  3794 ;;		On entry : B1F/0
  3795 ;;		On exit  : 0/0
  3796 ;;		Unchanged: 0/0
  3797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3799 ;;      Locals:         0       0      52       0       0       0       0       0       0       0       0       0       
      +0       0
  3800 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3801 ;;      Totals:         0       1      52       0       0       0       0       0       0       0       0       0       
      +0       0
  3802 ;;Total ram usage:       53 bytes
  3803 ;; Hardware stack levels required when called: 9
  3804 ;; This function calls:
  3805 ;;		_I2C_init
  3806 ;;		_I2C_start
  3807 ;;		_I2C_stop
  3808 ;;		_I2C_write
  3809 ;;		_adc_init
  3810 ;;		_lcd_init
  3811 ;;		_lcd_puts
  3812 ;;		_port_init
  3813 ;;		_serial_init
  3814 ;;		_sprintf
  3815 ;;		_uart_rx
  3816 ;; This function is called by:
  3817 ;;		Startup code after reset
  3818 ;; This function uses a non-reentrant model
  3819 ;;
  3820                           
  3821                           
  3822                           ;psect for function _main
  3823  0179                     _main:
  3824                           
  3825                           ;Main.c: 21:     uint16_t adc=0;
  3826                           
  3827                           ;incstack = 0
  3828                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3829  0179  0021               	movlb	1	; select bank1
  3830  017A  01D9               	clrf	main@adc^(0+128)
  3831  017B  01DA               	clrf	(main@adc+1)^(0+128)
  3832                           
  3833                           ;Main.c: 22:     int8_t high_byte;;Main.c: 23:     uint8_t low_byte;;Main.c: 25:     por
      +                          t_init();
  3834  017C  3180  20E5  3181   	fcall	_port_init
  3835                           
  3836                           ;Main.c: 26:     serial_init(9600);
  3837  017F  3000               	movlw	0
  3838  0180  00A3               	movwf	serial_init@baudios+3
  3839  0181  3000               	movlw	0
  3840  0182  00A2               	movwf	serial_init@baudios+2
  3841  0183  3025               	movlw	37
  3842  0184  00A1               	movwf	serial_init@baudios+1
  3843  0185  3080               	movlw	128
  3844  0186  00A0               	movwf	serial_init@baudios
  3845  0187  3181  21F4  3181   	fcall	_serial_init
  3846                           
  3847                           ;Main.c: 27:     adc_init();
  3848  018A  3180  20B1  3181   	fcall	_adc_init
  3849                           
  3850                           ;Main.c: 28:     I2C_init();
  3851  018D  3180  2056  3181   	fcall	_I2C_init
  3852                           
  3853                           ;Main.c: 30:     lcd_init();
  3854  0190  3183  23AC  3181   	fcall	_lcd_init
  3855                           
  3856                           ;Main.c: 31:     sprintf(buffer,"\fhola mundo\n%i",contador);
  3857  0193  3004               	movlw	low (STR_1| (0+32768))
  3858  0194  00E6               	movwf	sprintf@fmt
  3859  0195  3088               	movlw	high (STR_1| (0+32768))
  3860  0196  00E7               	movwf	sprintf@fmt+1
  3861  0197  3000               	movlw	0
  3862  0198  00E8               	movwf	?_sprintf+2
  3863  0199  00E9               	movwf	?_sprintf+3
  3864  019A  30A7               	movlw	(low (main@buffer| 0))& (0+255)
  3865  019B  3181  2104  3181   	fcall	_sprintf
  3866                           
  3867                           ;Main.c: 32:     lcd_puts(buffer);
  3868  019E  30A7               	movlw	(low (main@buffer| 0))& (0+255)
  3869  019F  3183  2358  3181   	fcall	_lcd_puts
  3870  01A2                     l2089:
  3871                           
  3872                           ;Main.c: 35:         I2C_start();
  3873  01A2  3180  2019  3181   	fcall	_I2C_start
  3874                           
  3875                           ;Main.c: 36:         I2C_write(0b01101000);
  3876  01A5  3068               	movlw	104
  3877  01A6  3180  202E  3181   	fcall	_I2C_write
  3878                           
  3879                           ;Main.c: 37:         I2C_stop();
  3880  01A9  3180  201E  3181   	fcall	_I2C_stop
  3881                           
  3882                           ;Main.c: 57:         _delay((unsigned long)((1)*(32000000UL/4000.0)));
  3883  01AC  300B               	movlw	11
  3884  01AD  0020               	movlb	0	; select bank0
  3885  01AE  00EA               	movwf	??_main
  3886  01AF  3062               	movlw	98
  3887  01B0                     u1597:
  3888  01B0  0B89               	decfsz	9,f
  3889  01B1  29B0               	goto	u1597
  3890  01B2  0BEA               	decfsz	??_main,f
  3891  01B3  29B0               	goto	u1597
  3892  01B4  0000               	nop
  3893  01B5  29A2               	goto	l2089
  3894  01B6                     __end_of_main:
  3895                           
  3896                           	psect	text1
  3897  00CB                     __ptext1:	
  3898 ;; *************** function _uart_rx *****************
  3899 ;; Defined at:
  3900 ;;		line 40 in file "uart.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;		None
  3903 ;; Auto vars:     Size  Location     Type
  3904 ;;		None
  3905 ;; Return value:  Size  Location     Type
  3906 ;;                  1    wreg      unsigned char 
  3907 ;; Registers used:
  3908 ;;		wreg, status,2, status,0
  3909 ;; Tracked objects:
  3910 ;;		On entry : 0/0
  3911 ;;		On exit  : 1F/2
  3912 ;;		Unchanged: 0/0
  3913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3916 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3917 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3918 ;;Total ram usage:        1 bytes
  3919 ;; Hardware stack levels used: 1
  3920 ;; This function calls:
  3921 ;;		Nothing
  3922 ;; This function is called by:
  3923 ;;		_main
  3924 ;; This function uses a non-reentrant model
  3925 ;;
  3926                           
  3927                           
  3928                           ;psect for function _uart_rx
  3929  00CB                     _uart_rx:
  3930  00CB                     l2063:	
  3931                           ;uart.c: 44:     while (((PIR3>>5) & 0x01) == 0){}
  3932                           
  3933                           ;incstack = 0
  3934                           ; Regs used in _uart_rx: [wreg+status,2+status,0]
  3935                           
  3936  00CB  002E               	movlb	14	; select bank14
  3937  00CC  080F               	movf	15,w	;volatile
  3938  00CD  00F0               	movwf	??_uart_rx
  3939  00CE  3005               	movlw	5
  3940  00CF                     u1555:
  3941  00CF  36F0               	lsrf	??_uart_rx,f
  3942  00D0  0B89               	decfsz	9,f
  3943  00D1  28CF               	goto	u1555
  3944  00D2  1C70               	btfss	??_uart_rx,0
  3945  00D3  28CB               	goto	l2063
  3946                           
  3947                           ;uart.c: 46:     if( ((RC1STA >> 1)& 0x01) == 1){
  3948  00D4  0022               	movlb	2	; select bank2
  3949  00D5  081D               	movf	29,w	;volatile
  3950  00D6  00F0               	movwf	??_uart_rx
  3951  00D7  3001               	movlw	1
  3952  00D8                     u1575:
  3953  00D8  36F0               	lsrf	??_uart_rx,f
  3954  00D9  0B89               	decfsz	9,f
  3955  00DA  28D8               	goto	u1575
  3956  00DB  1C70               	btfss	??_uart_rx,0
  3957  00DC  28E3               	goto	l2069
  3958                           
  3959                           ;uart.c: 47:         RC1STA = RC1STA & ~(1<<4);
  3960  00DD  081D               	movf	29,w	;volatile
  3961  00DE  39EF               	andlw	239
  3962  00DF  009D               	movwf	29	;volatile
  3963                           
  3964                           ;uart.c: 48:         RC1STA = RC1STA | (1<<4);
  3965  00E0  081D               	movf	29,w	;volatile
  3966  00E1  3810               	iorlw	16
  3967  00E2  009D               	movwf	29	;volatile
  3968  00E3                     l2069:
  3969                           
  3970                           ;uart.c: 54:       return RCREG;
  3971  00E3  0819               	movf	25,w	;volatile
  3972  00E4  0008               	return
  3973  00E5                     __end_of_uart_rx:
  3974                           
  3975                           	psect	text2
  3976  0104                     __ptext2:	
  3977 ;; *************** function _sprintf *****************
  3978 ;; Defined at:
  3979 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  3980 ;; Parameters:    Size  Location     Type
  3981 ;;  s               1    wreg     PTR unsigned char 
  3982 ;;		 -> main@buffer(50), 
  3983 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  3984 ;;		 -> STR_1(15), 
  3985 ;; Auto vars:     Size  Location     Type
  3986 ;;  s               1    1[BANK1 ] PTR unsigned char 
  3987 ;;		 -> main@buffer(50), 
  3988 ;;  f               5    2[BANK1 ] struct _IO_FILE
  3989 ;;  ret             2    0        int 
  3990 ;;  ap              1    0[BANK1 ] PTR void [1]
  3991 ;;		 -> ?_sprintf(2), 
  3992 ;; Return value:  Size  Location     Type
  3993 ;;                  2   70[BANK0 ] int 
  3994 ;; Registers used:
  3995 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3996 ;; Tracked objects:
  3997 ;;		On entry : 1F/0
  3998 ;;		On exit  : 1F/1
  3999 ;;		Unchanged: 0/0
  4000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4001 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4002 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  4003 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4004 ;;      Totals:         1       4       7       0       0       0       0       0       0       0       0       0       
      +0       0
  4005 ;;Total ram usage:       12 bytes
  4006 ;; Hardware stack levels used: 1
  4007 ;; Hardware stack levels required when called: 8
  4008 ;; This function calls:
  4009 ;;		_vfprintf
  4010 ;; This function is called by:
  4011 ;;		_main
  4012 ;; This function uses a non-reentrant model
  4013 ;;
  4014                           
  4015                           
  4016                           ;psect for function _sprintf
  4017  0104                     _sprintf:
  4018                           
  4019                           ;incstack = 0
  4020                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4021                           ;sprintf@s stored from wreg
  4022  0104  0021               	movlb	1	; select bank1
  4023  0105  00A1               	movwf	sprintf@s^(0+128)
  4024  0106  3068               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  4025  0107  00FD               	movwf	??_sprintf
  4026  0108  087D               	movf	??_sprintf,w
  4027  0109  00A0               	movwf	sprintf@ap^(0+128)
  4028  010A  0821               	movf	sprintf@s^(0+128),w
  4029  010B  00FD               	movwf	??_sprintf
  4030  010C  087D               	movf	??_sprintf,w
  4031  010D  00A2               	movwf	sprintf@f^(0+128)
  4032  010E  01A3               	clrf	(sprintf@f^(0+128)+1)
  4033  010F  01A4               	clrf	((sprintf@f+1)^(0+128)+1)
  4034  0110  01A5               	clrf	(sprintf@f^(0+128)+3)
  4035  0111  01A6               	clrf	((sprintf@f+1)^(0+128)+3)
  4036  0112  0020               	movlb	0	; select bank0
  4037  0113  0867               	movf	sprintf@fmt+1,w
  4038  0114  00DF               	movwf	vfprintf@fmt+1
  4039  0115  0866               	movf	sprintf@fmt,w
  4040  0116  00DE               	movwf	vfprintf@fmt
  4041  0117  30A0               	movlw	(low (sprintf@ap| 0))& (0+255)
  4042  0118  00FD               	movwf	??_sprintf
  4043  0119  087D               	movf	??_sprintf,w
  4044  011A  00E0               	movwf	vfprintf@ap
  4045  011B  30A2               	movlw	(low (sprintf@f| 0))& (0+255)
  4046  011C  3181  214C         	fcall	_vfprintf
  4047  011E  0021               	movlb	1	; select bank1
  4048  011F  0823               	movf	(sprintf@f^(0+128)+1),w
  4049  0120  0721               	addwf	sprintf@s^(0+128),w
  4050  0121  00FD               	movwf	??_sprintf
  4051  0122  087D               	movf	??_sprintf,w
  4052  0123  0086               	movwf	6
  4053  0124  0187               	clrf	7
  4054  0125  0181               	clrf	1
  4055  0126  0008               	return
  4056  0127                     __end_of_sprintf:
  4057                           
  4058                           	psect	text3
  4059  014C                     __ptext3:	
  4060 ;; *************** function _vfprintf *****************
  4061 ;; Defined at:
  4062 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4063 ;; Parameters:    Size  Location     Type
  4064 ;;  fp              1    wreg     PTR struct _IO_FILE
  4065 ;;		 -> sprintf@f(5), 
  4066 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  4067 ;;		 -> STR_1(15), 
  4068 ;;  ap              1   64[BANK0 ] PTR PTR void 
  4069 ;;		 -> sprintf@ap(1), 
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
  4072 ;;		 -> sprintf@f(5), 
  4073 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
  4074 ;;		 -> STR_1(15), 
  4075 ;; Return value:  Size  Location     Type
  4076 ;;                  2   62[BANK0 ] int 
  4077 ;; Registers used:
  4078 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4079 ;; Tracked objects:
  4080 ;;		On entry : 1F/0
  4081 ;;		On exit  : 1F/0
  4082 ;;		Unchanged: 0/0
  4083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4084 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4085 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4086 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4087 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4088 ;;Total ram usage:        8 bytes
  4089 ;; Hardware stack levels used: 1
  4090 ;; Hardware stack levels required when called: 7
  4091 ;; This function calls:
  4092 ;;		_vfpfcnvrt
  4093 ;; This function is called by:
  4094 ;;		_sprintf
  4095 ;; This function uses a non-reentrant model
  4096 ;;
  4097                           
  4098                           
  4099                           ;psect for function _vfprintf
  4100  014C                     _vfprintf:
  4101                           
  4102                           ;incstack = 0
  4103                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4104                           ;vfprintf@fp stored from wreg
  4105  014C  00E3               	movwf	vfprintf@fp
  4106                           
  4107                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  4108  014D  085F               	movf	vfprintf@fmt+1,w
  4109  014E  00E5               	movwf	vfprintf@cfmt+1
  4110  014F  085E               	movf	vfprintf@fmt,w
  4111  0150  00E4               	movwf	vfprintf@cfmt
  4112                           
  4113                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  4114  0151  0021               	movlb	1	; select bank1
  4115  0152  01E3               	clrf	_nout^(0+128)
  4116  0153  01E4               	clrf	(_nout+1)^(0+128)
  4117  0154                     l1941:	
  4118                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4119                           
  4120                           
  4121                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4122  0154  0020               	movlb	0	; select bank0
  4123  0155  0864               	movf	vfprintf@cfmt,w
  4124  0156  0084               	movwf	4
  4125  0157  0865               	movf	vfprintf@cfmt+1,w
  4126  0158  0085               	movwf	5
  4127  0159  0012               	moviw fsr0++
  4128  015A  1903               	btfsc	3,2
  4129  015B  2970               	goto	l1943
  4130                           
  4131                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  4132  015C  3064               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  4133  015D  00E1               	movwf	??_vfprintf
  4134  015E  0861               	movf	??_vfprintf,w
  4135  015F  00CE               	movwf	vfpfcnvrt@fmt
  4136  0160  0860               	movf	vfprintf@ap,w
  4137  0161  00E2               	movwf	??_vfprintf+1
  4138  0162  0862               	movf	??_vfprintf+1,w
  4139  0163  00CF               	movwf	vfpfcnvrt@ap
  4140  0164  0863               	movf	vfprintf@fp,w
  4141  0165  3184  2409  3181   	fcall	_vfpfcnvrt
  4142  0168  084E               	movf	?_vfpfcnvrt,w
  4143  0169  0021               	movlb	1	; select bank1
  4144  016A  07E3               	addwf	_nout^(0+128),f
  4145  016B  0020               	movlb	0	; select bank0
  4146  016C  084F               	movf	?_vfpfcnvrt+1,w
  4147  016D  0021               	movlb	1	; select bank1
  4148  016E  3DE4               	addwfc	(_nout+1)^(0+128),f
  4149  016F  2954               	goto	l1941
  4150  0170                     l1943:
  4151                           
  4152                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  4153  0170  0021               	movlb	1	; select bank1
  4154  0171  0864               	movf	(_nout+1)^(0+128),w
  4155  0172  0020               	movlb	0	; select bank0
  4156  0173  00DF               	movwf	?_vfprintf+1
  4157  0174  0021               	movlb	1	; select bank1
  4158  0175  0863               	movf	_nout^(0+128),w
  4159  0176  0020               	movlb	0	; select bank0
  4160  0177  00DE               	movwf	?_vfprintf
  4161  0178  0008               	return
  4162  0179                     __end_of_vfprintf:
  4163                           
  4164                           	psect	text4
  4165  0409                     __ptext4:	
  4166 ;; *************** function _vfpfcnvrt *****************
  4167 ;; Defined at:
  4168 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;  fp              1    wreg     PTR struct _IO_FILE
  4171 ;;		 -> sprintf@f(5), 
  4172 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  4173 ;;		 -> vfprintf@cfmt(2), 
  4174 ;;  ap              1   47[BANK0 ] PTR PTR void 
  4175 ;;		 -> sprintf@ap(1), 
  4176 ;; Auto vars:     Size  Location     Type
  4177 ;;  fp              1   61[BANK0 ] PTR struct _IO_FILE
  4178 ;;		 -> sprintf@f(5), 
  4179 ;;  ll              8   53[BANK0 ] long long 
  4180 ;;  llu             8    0        unsigned long long 
  4181 ;;  f               4    0        unsigned long long 
  4182 ;;  ct              3    0        unsigned char [3]
  4183 ;;  vp              2    0        PTR void 
  4184 ;;  i               2    0        int 
  4185 ;;  done            2    0        int 
  4186 ;;  cp              2    0        PTR unsigned char 
  4187 ;;  c               1    0        unsigned char 
  4188 ;; Return value:  Size  Location     Type
  4189 ;;                  2   46[BANK0 ] int 
  4190 ;; Registers used:
  4191 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4192 ;; Tracked objects:
  4193 ;;		On entry : 1F/0
  4194 ;;		On exit  : 1F/0
  4195 ;;		Unchanged: 0/0
  4196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4197 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4198 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4199 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4200 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4201 ;;Total ram usage:       16 bytes
  4202 ;; Hardware stack levels used: 1
  4203 ;; Hardware stack levels required when called: 6
  4204 ;; This function calls:
  4205 ;;		_dtoa
  4206 ;;		_fputc
  4207 ;; This function is called by:
  4208 ;;		_vfprintf
  4209 ;; This function uses a non-reentrant model
  4210 ;;
  4211                           
  4212                           
  4213                           ;psect for function _vfpfcnvrt
  4214  0409                     _vfpfcnvrt:
  4215                           
  4216                           ;incstack = 0
  4217                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4218                           ;vfpfcnvrt@fp stored from wreg
  4219  0409  00DD               	movwf	vfpfcnvrt@fp
  4220                           
  4221                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  4222  040A  084E               	movf	vfpfcnvrt@fmt,w
  4223  040B  0086               	movwf	6
  4224  040C  0187               	clrf	7
  4225  040D  3F40               	moviw [0]fsr1
  4226  040E  00D0               	movwf	??_vfpfcnvrt
  4227  040F  3F41               	moviw [1]fsr1
  4228  0410  00D1               	movwf	??_vfpfcnvrt+1
  4229  0411  0850               	movf	??_vfpfcnvrt,w
  4230  0412  0084               	movwf	4
  4231  0413  0851               	movf	??_vfpfcnvrt+1,w
  4232  0414  0085               	movwf	5
  4233  0415  0012               	moviw fsr0++
  4234  0416  3A25               	xorlw	37
  4235  0417  1D03               	btfss	3,2
  4236  0418  2CB4               	goto	l1873
  4237                           
  4238                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  4239  0419  084E               	movf	vfpfcnvrt@fmt,w
  4240  041A  0086               	movwf	6
  4241  041B  0187               	clrf	7
  4242  041C  3001               	movlw	1
  4243  041D  0781               	addwf	1,f
  4244  041E  3141               	addfsr 1,1
  4245  041F  1803               	skipnc
  4246  0420  0A81               	incf	1,f
  4247                           
  4248                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  4249  0421  0021               	movlb	1	; select bank1
  4250  0422  01E5               	clrf	_width^(0+128)
  4251  0423  01E6               	clrf	(_width+1)^(0+128)
  4252  0424  0020               	movlb	0	; select bank0
  4253  0425  01ED               	clrf	_flags
  4254  0426  01EE               	clrf	_flags+1
  4255                           
  4256                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  4257  0427  30FF               	movlw	255
  4258  0428  00EB               	movwf	_prec
  4259  0429  30FF               	movlw	255
  4260  042A  00EC               	movwf	_prec+1
  4261                           
  4262                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4263  042B  084E               	movf	vfpfcnvrt@fmt,w
  4264  042C  0086               	movwf	6
  4265  042D  0187               	clrf	7
  4266  042E  3F40               	moviw [0]fsr1
  4267  042F  00D0               	movwf	??_vfpfcnvrt
  4268  0430  3F41               	moviw [1]fsr1
  4269  0431  00D1               	movwf	??_vfpfcnvrt+1
  4270  0432  0850               	movf	??_vfpfcnvrt,w
  4271  0433  0084               	movwf	4
  4272  0434  0851               	movf	??_vfpfcnvrt+1,w
  4273  0435  0085               	movwf	5
  4274  0436  0012               	moviw fsr0++
  4275  0437  3A64               	xorlw	100
  4276  0438  1903               	btfsc	3,2
  4277  0439  2C49               	goto	l1849
  4278  043A  084E               	movf	vfpfcnvrt@fmt,w
  4279  043B  0086               	movwf	6
  4280  043C  0187               	clrf	7
  4281  043D  3F40               	moviw [0]fsr1
  4282  043E  00D0               	movwf	??_vfpfcnvrt
  4283  043F  3F41               	moviw [1]fsr1
  4284  0440  00D1               	movwf	??_vfpfcnvrt+1
  4285  0441  0850               	movf	??_vfpfcnvrt,w
  4286  0442  0084               	movwf	4
  4287  0443  0851               	movf	??_vfpfcnvrt+1,w
  4288  0444  0085               	movwf	5
  4289  0445  0012               	moviw fsr0++
  4290  0446  3A69               	xorlw	105
  4291  0447  1D03               	btfss	3,2
  4292  0448  2C82               	goto	l1857
  4293  0449                     l1849:
  4294                           
  4295                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  4296  0449  084E               	movf	vfpfcnvrt@fmt,w
  4297  044A  0086               	movwf	6
  4298  044B  0187               	clrf	7
  4299  044C  3001               	movlw	1
  4300  044D  0781               	addwf	1,f
  4301  044E  3141               	addfsr 1,1
  4302  044F  1803               	skipnc
  4303  0450  0A81               	incf	1,f
  4304                           
  4305                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4306  0451  084F               	movf	vfpfcnvrt@ap,w
  4307  0452  0086               	movwf	6
  4308  0453  0187               	clrf	7
  4309  0454  0801               	movf	1,w
  4310  0455  0084               	movwf	4
  4311  0456  0185               	clrf	5
  4312  0457  3002               	movlw	2
  4313  0458  0781               	addwf	1,f
  4314  0459  3F00               	moviw [0]fsr0
  4315  045A  00D0               	movwf	??_vfpfcnvrt
  4316  045B  3F01               	moviw [1]fsr0
  4317  045C  00D1               	movwf	??_vfpfcnvrt+1
  4318  045D  0850               	movf	??_vfpfcnvrt,w
  4319  045E  00D5               	movwf	vfpfcnvrt@ll
  4320  045F  0851               	movf	??_vfpfcnvrt+1,w
  4321  0460  00D6               	movwf	vfpfcnvrt@ll+1
  4322  0461  0D89               	rlf	9,f
  4323  0462  3B89               	subwfb	9,f
  4324  0463  0989               	comf	9,f
  4325  0464  00D7               	movwf	vfpfcnvrt@ll+2
  4326  0465  00D8               	movwf	vfpfcnvrt@ll+3
  4327  0466  00D9               	movwf	vfpfcnvrt@ll+4
  4328  0467  00DA               	movwf	vfpfcnvrt@ll+5
  4329  0468  00DB               	movwf	vfpfcnvrt@ll+6
  4330  0469  00DC               	movwf	vfpfcnvrt@ll+7
  4331                           
  4332                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  4333  046A  0855               	movf	vfpfcnvrt@ll,w
  4334  046B  00B0               	movwf	dtoa@d
  4335  046C  0856               	movf	vfpfcnvrt@ll+1,w
  4336  046D  00B1               	movwf	dtoa@d+1
  4337  046E  0857               	movf	vfpfcnvrt@ll+2,w
  4338  046F  00B2               	movwf	dtoa@d+2
  4339  0470  0858               	movf	vfpfcnvrt@ll+3,w
  4340  0471  00B3               	movwf	dtoa@d+3
  4341  0472  0859               	movf	vfpfcnvrt@ll+4,w
  4342  0473  00B4               	movwf	dtoa@d+4
  4343  0474  085A               	movf	vfpfcnvrt@ll+5,w
  4344  0475  00B5               	movwf	dtoa@d+5
  4345  0476  085B               	movf	vfpfcnvrt@ll+6,w
  4346  0477  00B6               	movwf	dtoa@d+6
  4347  0478  085C               	movf	vfpfcnvrt@ll+7,w
  4348  0479  00B7               	movwf	dtoa@d+7
  4349  047A  085D               	movf	vfpfcnvrt@fp,w
  4350  047B  3186  26A6         	fcall	_dtoa
  4351  047D  0831               	movf	?_dtoa+1,w
  4352  047E  00CF               	movwf	?_vfpfcnvrt+1
  4353  047F  0830               	movf	?_dtoa,w
  4354  0480  00CE               	movwf	?_vfpfcnvrt
  4355  0481  0008               	return
  4356  0482                     l1857:
  4357                           
  4358                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  4359  0482  084E               	movf	vfpfcnvrt@fmt,w
  4360  0483  0086               	movwf	6
  4361  0484  0187               	clrf	7
  4362  0485  3F40               	moviw [0]fsr1
  4363  0486  00D0               	movwf	??_vfpfcnvrt
  4364  0487  3F41               	moviw [1]fsr1
  4365  0488  00D1               	movwf	??_vfpfcnvrt+1
  4366  0489  0850               	movf	??_vfpfcnvrt,w
  4367  048A  0084               	movwf	4
  4368  048B  0851               	movf	??_vfpfcnvrt+1,w
  4369  048C  0085               	movwf	5
  4370  048D  0012               	moviw fsr0++
  4371  048E  3A25               	xorlw	37
  4372  048F  1D03               	btfss	3,2
  4373  0490  2CA9               	goto	l1867
  4374                           
  4375                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  4376  0491  084E               	movf	vfpfcnvrt@fmt,w
  4377  0492  0086               	movwf	6
  4378  0493  0187               	clrf	7
  4379  0494  3001               	movlw	1
  4380  0495  0781               	addwf	1,f
  4381  0496  3141               	addfsr 1,1
  4382  0497  1803               	skipnc
  4383  0498  0A81               	incf	1,f
  4384                           
  4385                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  4386  0499  3025               	movlw	37
  4387  049A  00F3               	movwf	fputc@c
  4388  049B  3000               	movlw	0
  4389  049C  00F4               	movwf	fputc@c+1
  4390  049D  085D               	movf	vfpfcnvrt@fp,w
  4391  049E  00D0               	movwf	??_vfpfcnvrt
  4392  049F  0850               	movf	??_vfpfcnvrt,w
  4393  04A0  00F5               	movwf	fputc@fp
  4394  04A1  3182  2232         	fcall	_fputc
  4395  04A3                     l1863:
  4396                           
  4397                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  4398  04A3  3001               	movlw	1
  4399  04A4  0020               	movlb	0	; select bank0
  4400  04A5  00CE               	movwf	?_vfpfcnvrt
  4401  04A6  3000               	movlw	0
  4402  04A7  00CF               	movwf	?_vfpfcnvrt+1
  4403  04A8  0008               	return
  4404  04A9                     l1867:
  4405                           
  4406                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  4407  04A9  084E               	movf	vfpfcnvrt@fmt,w
  4408  04AA  0086               	movwf	6
  4409  04AB  0187               	clrf	7
  4410  04AC  3001               	movlw	1
  4411  04AD  0781               	addwf	1,f
  4412  04AE  3141               	addfsr 1,1
  4413  04AF  1803               	skipnc
  4414  04B0  0A81               	incf	1,f
  4415                           
  4416                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  4417  04B1  01CE               	clrf	?_vfpfcnvrt
  4418  04B2  01CF               	clrf	?_vfpfcnvrt+1
  4419  04B3  0008               	return
  4420  04B4                     l1873:
  4421                           
  4422                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  4423  04B4  084E               	movf	vfpfcnvrt@fmt,w
  4424  04B5  0086               	movwf	6
  4425  04B6  0187               	clrf	7
  4426  04B7  3F40               	moviw [0]fsr1
  4427  04B8  00D0               	movwf	??_vfpfcnvrt
  4428  04B9  3F41               	moviw [1]fsr1
  4429  04BA  00D1               	movwf	??_vfpfcnvrt+1
  4430  04BB  0850               	movf	??_vfpfcnvrt,w
  4431  04BC  0084               	movwf	4
  4432  04BD  0851               	movf	??_vfpfcnvrt+1,w
  4433  04BE  0085               	movwf	5
  4434  04BF  0800               	movf	0,w	;code access
  4435  04C0  00D2               	movwf	??_vfpfcnvrt+2
  4436  04C1  01D3               	clrf	??_vfpfcnvrt+3
  4437  04C2  0852               	movf	??_vfpfcnvrt+2,w
  4438  04C3  00F3               	movwf	fputc@c
  4439  04C4  0853               	movf	??_vfpfcnvrt+3,w
  4440  04C5  00F4               	movwf	fputc@c+1
  4441  04C6  085D               	movf	vfpfcnvrt@fp,w
  4442  04C7  00D4               	movwf	??_vfpfcnvrt+4
  4443  04C8  0854               	movf	??_vfpfcnvrt+4,w
  4444  04C9  00F5               	movwf	fputc@fp
  4445  04CA  3182  2232  3184   	fcall	_fputc
  4446                           
  4447                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  4448  04CD  0020               	movlb	0	; select bank0
  4449  04CE  084E               	movf	vfpfcnvrt@fmt,w
  4450  04CF  0086               	movwf	6
  4451  04D0  0187               	clrf	7
  4452  04D1  3001               	movlw	1
  4453  04D2  0781               	addwf	1,f
  4454  04D3  3141               	addfsr 1,1
  4455  04D4  1803               	skipnc
  4456  04D5  0A81               	incf	1,f
  4457  04D6  2CA3               	goto	l1863
  4458  04D7                     __end_of_vfpfcnvrt:
  4459                           
  4460                           	psect	text5
  4461  06A6                     __ptext5:	
  4462 ;; *************** function _dtoa *****************
  4463 ;; Defined at:
  4464 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4465 ;; Parameters:    Size  Location     Type
  4466 ;;  fp              1    wreg     PTR struct _IO_FILE
  4467 ;;		 -> sprintf@f(5), 
  4468 ;;  d               8   16[BANK0 ] long long 
  4469 ;; Auto vars:     Size  Location     Type
  4470 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  4471 ;;		 -> sprintf@f(5), 
  4472 ;;  n               8   36[BANK0 ] long long 
  4473 ;;  i               2   44[BANK0 ] int 
  4474 ;;  s               2   34[BANK0 ] int 
  4475 ;;  w               2   32[BANK0 ] int 
  4476 ;;  p               2   30[BANK0 ] int 
  4477 ;; Return value:  Size  Location     Type
  4478 ;;                  2   16[BANK0 ] int 
  4479 ;; Registers used:
  4480 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4481 ;; Tracked objects:
  4482 ;;		On entry : 1F/0
  4483 ;;		On exit  : 1F/0
  4484 ;;		Unchanged: 0/0
  4485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4486 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4487 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4488 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4489 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4490 ;;Total ram usage:       30 bytes
  4491 ;; Hardware stack levels used: 1
  4492 ;; Hardware stack levels required when called: 5
  4493 ;; This function calls:
  4494 ;;		___aodiv
  4495 ;;		___aomod
  4496 ;;		_abs
  4497 ;;		_pad
  4498 ;; This function is called by:
  4499 ;;		_vfpfcnvrt
  4500 ;; This function uses a non-reentrant model
  4501 ;;
  4502                           
  4503                           
  4504                           ;psect for function _dtoa
  4505  06A6                     _dtoa:
  4506                           
  4507                           ;incstack = 0
  4508                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4509                           ;dtoa@fp stored from wreg
  4510  06A6  00BD               	movwf	dtoa@fp
  4511                           
  4512                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  4513  06A7  0830               	movf	dtoa@d,w
  4514  06A8  00C4               	movwf	dtoa@n
  4515  06A9  0831               	movf	dtoa@d+1,w
  4516  06AA  00C5               	movwf	dtoa@n+1
  4517  06AB  0832               	movf	dtoa@d+2,w
  4518  06AC  00C6               	movwf	dtoa@n+2
  4519  06AD  0833               	movf	dtoa@d+3,w
  4520  06AE  00C7               	movwf	dtoa@n+3
  4521  06AF  0834               	movf	dtoa@d+4,w
  4522  06B0  00C8               	movwf	dtoa@n+4
  4523  06B1  0835               	movf	dtoa@d+5,w
  4524  06B2  00C9               	movwf	dtoa@n+5
  4525  06B3  0836               	movf	dtoa@d+6,w
  4526  06B4  00CA               	movwf	dtoa@n+6
  4527  06B5  0837               	movf	dtoa@d+7,w
  4528  06B6  00CB               	movwf	dtoa@n+7
  4529                           
  4530                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  4531  06B7  3044               	movlw	low dtoa@n
  4532  06B8  0086               	movwf	6
  4533  06B9  3000               	movlw	high dtoa@n
  4534  06BA  0087               	movwf	7
  4535  06BB  3F47               	moviw [7]fsr1
  4536  06BC  00B8               	movwf	??_dtoa
  4537  06BD  1FB8               	btfss	??_dtoa,7
  4538  06BE  2EC1               	goto	u1220
  4539  06BF  3001               	movlw	1
  4540  06C0  2EC2               	goto	u1230
  4541  06C1                     u1220:
  4542  06C1  3000               	movlw	0
  4543  06C2                     u1230:
  4544  06C2  0020               	movlb	0	; select bank0
  4545  06C3  00B9               	movwf	??_dtoa+1
  4546  06C4  01BA               	clrf	??_dtoa+2
  4547  06C5  0839               	movf	??_dtoa+1,w
  4548  06C6  00C2               	movwf	dtoa@s
  4549  06C7  083A               	movf	??_dtoa+2,w
  4550  06C8  00C3               	movwf	dtoa@s+1
  4551                           
  4552                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  4553  06C9  0842               	movf	dtoa@s,w
  4554  06CA  0443               	iorwf	dtoa@s+1,w
  4555  06CB  1903               	btfsc	3,2
  4556  06CC  2EEB               	goto	l947
  4557                           
  4558                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  4559  06CD  09C4               	comf	dtoa@n,f
  4560  06CE  09C5               	comf	dtoa@n+1,f
  4561  06CF  09C6               	comf	dtoa@n+2,f
  4562  06D0  09C7               	comf	dtoa@n+3,f
  4563  06D1  09C8               	comf	dtoa@n+4,f
  4564  06D2  09C9               	comf	dtoa@n+5,f
  4565  06D3  09CA               	comf	dtoa@n+6,f
  4566  06D4  09CB               	comf	dtoa@n+7,f
  4567  06D5  0AC4               	incf	dtoa@n,f
  4568  06D6  1D03               	skipz
  4569  06D7  2EEB               	goto	l947
  4570  06D8  0AC5               	incf	dtoa@n+1,f
  4571  06D9  1D03               	skipz
  4572  06DA  2EEB               	goto	l947
  4573  06DB  0AC6               	incf	dtoa@n+2,f
  4574  06DC  1D03               	skipz
  4575  06DD  2EEB               	goto	l947
  4576  06DE  0AC7               	incf	dtoa@n+3,f
  4577  06DF  1D03               	skipz
  4578  06E0  2EEB               	goto	l947
  4579  06E1  0AC8               	incf	dtoa@n+4,f
  4580  06E2  1D03               	skipz
  4581  06E3  2EEB               	goto	l947
  4582  06E4  0AC9               	incf	dtoa@n+5,f
  4583  06E5  1D03               	skipz
  4584  06E6  2EEB               	goto	l947
  4585  06E7  0ACA               	incf	dtoa@n+6,f
  4586  06E8  1D03               	skipz
  4587  06E9  2EEB               	goto	l947
  4588  06EA  0ACB               	incf	dtoa@n+7,f
  4589  06EB                     l947:	
  4590                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 297:     }
  4591                           
  4592                           
  4593                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  4594  06EB  0020               	movlb	0	; select bank0
  4595  06EC  1BEC               	btfsc	_prec+1,7
  4596  06ED  2EF2               	goto	l948
  4597                           
  4598                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  4599  06EE  30FD               	movlw	253
  4600  06EF  05ED               	andwf	_flags,f
  4601  06F0  30FF               	movlw	255
  4602  06F1  05EE               	andwf	_flags+1,f
  4603  06F2                     l948:	
  4604                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 302:     }
  4605                           
  4606                           
  4607                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  4608  06F2  086C               	movf	_prec+1,w
  4609  06F3  3A80               	xorlw	128
  4610  06F4  00B8               	movwf	??_dtoa
  4611  06F5  3080               	movlw	128
  4612  06F6  0238               	subwf	??_dtoa,w
  4613  06F7  1D03               	skipz
  4614  06F8  2EFB               	goto	u1275
  4615  06F9  3001               	movlw	1
  4616  06FA  026B               	subwf	_prec,w
  4617  06FB                     u1275:
  4618  06FB  1803               	skipnc
  4619  06FC  2F03               	goto	l1789
  4620  06FD  3001               	movlw	1
  4621  06FE  0020               	movlb	0	; select bank0
  4622  06FF  00BE               	movwf	dtoa@p
  4623  0700  3000               	movlw	0
  4624  0701  00BF               	movwf	dtoa@p+1
  4625  0702  2F08               	goto	l952
  4626  0703                     l1789:
  4627  0703  0020               	movlb	0	; select bank0
  4628  0704  086C               	movf	_prec+1,w
  4629  0705  00BF               	movwf	dtoa@p+1
  4630  0706  086B               	movf	_prec,w
  4631  0707  00BE               	movwf	dtoa@p
  4632  0708                     l952:
  4633                           
  4634                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  4635  0708  0021               	movlb	1	; select bank1
  4636  0709  0866               	movf	(_width+1)^(0+128),w
  4637  070A  0020               	movlb	0	; select bank0
  4638  070B  00C1               	movwf	dtoa@w+1
  4639  070C  0021               	movlb	1	; select bank1
  4640  070D  0865               	movf	_width^(0+128),w
  4641  070E  0020               	movlb	0	; select bank0
  4642  070F  00C0               	movwf	dtoa@w
  4643                           
  4644                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  4645  0710  0842               	movf	dtoa@s,w
  4646  0711  0443               	iorwf	dtoa@s+1,w
  4647  0712  1D03               	btfss	3,2
  4648  0713  2F16               	goto	l1795
  4649  0714  1D6D               	btfss	_flags,2
  4650  0715  2F1A               	goto	l953
  4651  0716                     l1795:
  4652                           
  4653                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  4654  0716  30FF               	movlw	255
  4655  0717  07C0               	addwf	dtoa@w,f
  4656  0718  30FF               	movlw	255
  4657  0719  3DC1               	addwfc	dtoa@w+1,f
  4658  071A                     l953:	
  4659                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 307:     }
  4660                           
  4661                           
  4662                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  4663  071A  301F               	movlw	31
  4664  071B  00CC               	movwf	dtoa@i
  4665  071C  3000               	movlw	0
  4666  071D  00CD               	movwf	dtoa@i+1
  4667                           
  4668                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  4669  071E  0022               	movlb	2	; select bank2
  4670  071F  01BF               	clrf	(_dbuf^(0+256)+31)
  4671                           
  4672                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4673  0720  2FAD               	goto	l956
  4674  0721                     l1809:
  4675  0721  0020               	movlb	0	; select bank0
  4676  0722  0844               	movf	dtoa@n,w
  4677  0723  0445               	iorwf	dtoa@n+1,w
  4678  0724  0446               	iorwf	dtoa@n+2,w
  4679  0725  0447               	iorwf	dtoa@n+3,w
  4680  0726  0448               	iorwf	dtoa@n+4,w
  4681  0727  0449               	iorwf	dtoa@n+5,w
  4682  0728  044A               	iorwf	dtoa@n+6,w
  4683  0729  044B               	iorwf	dtoa@n+7,w
  4684  072A  1D03               	skipz
  4685  072B  2F46               	goto	l1799
  4686  072C  083F               	movf	dtoa@p+1,w
  4687  072D  3A80               	xorlw	128
  4688  072E  00B8               	movwf	??_dtoa
  4689  072F  3080               	movlw	128
  4690  0730  0238               	subwf	??_dtoa,w
  4691  0731  1D03               	skipz
  4692  0732  2F35               	goto	u1325
  4693  0733  3001               	movlw	1
  4694  0734  023E               	subwf	dtoa@p,w
  4695  0735                     u1325:
  4696  0735  1803               	skipnc
  4697  0736  2F46               	goto	l1799
  4698  0737  0020               	movlb	0	; select bank0
  4699  0738  0841               	movf	dtoa@w+1,w
  4700  0739  3A80               	xorlw	128
  4701  073A  00B8               	movwf	??_dtoa
  4702  073B  3080               	movlw	128
  4703  073C  0238               	subwf	??_dtoa,w
  4704  073D  1D03               	skipz
  4705  073E  2F41               	goto	u1335
  4706  073F  3001               	movlw	1
  4707  0740  0240               	subwf	dtoa@w,w
  4708  0741                     u1335:
  4709  0741  1C03               	skipc
  4710  0742  2FB9               	goto	l1817
  4711  0743  0020               	movlb	0	; select bank0
  4712  0744  1CED               	btfss	_flags,1
  4713  0745  2FB9               	goto	l1817
  4714  0746                     l1799:
  4715                           
  4716                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  4717  0746  30FF               	movlw	255
  4718  0747  0020               	movlb	0	; select bank0
  4719  0748  07CC               	addwf	dtoa@i,f
  4720  0749  30FF               	movlw	255
  4721  074A  3DCD               	addwfc	dtoa@i+1,f
  4722                           
  4723                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  4724  074B  300A               	movlw	10
  4725  074C  00A0               	movwf	___aomod@divisor
  4726  074D  01A1               	clrf	___aomod@divisor+1
  4727  074E  01A2               	clrf	___aomod@divisor+2
  4728  074F  01A3               	clrf	___aomod@divisor+3
  4729  0750  01A4               	clrf	___aomod@divisor+4
  4730  0751  01A5               	clrf	___aomod@divisor+5
  4731  0752  01A6               	clrf	___aomod@divisor+6
  4732  0753  01A7               	clrf	___aomod@divisor+7
  4733  0754  0844               	movf	dtoa@n,w
  4734  0755  00A8               	movwf	___aomod@dividend
  4735  0756  0845               	movf	dtoa@n+1,w
  4736  0757  00A9               	movwf	___aomod@dividend+1
  4737  0758  0846               	movf	dtoa@n+2,w
  4738  0759  00AA               	movwf	___aomod@dividend+2
  4739  075A  0847               	movf	dtoa@n+3,w
  4740  075B  00AB               	movwf	___aomod@dividend+3
  4741  075C  0848               	movf	dtoa@n+4,w
  4742  075D  00AC               	movwf	___aomod@dividend+4
  4743  075E  0849               	movf	dtoa@n+5,w
  4744  075F  00AD               	movwf	___aomod@dividend+5
  4745  0760  084A               	movf	dtoa@n+6,w
  4746  0761  00AE               	movwf	___aomod@dividend+6
  4747  0762  084B               	movf	dtoa@n+7,w
  4748  0763  00AF               	movwf	___aomod@dividend+7
  4749  0764  3184  24D7  3186   	fcall	___aomod
  4750  0767  0821               	movf	?___aomod+1,w
  4751  0768  00F4               	movwf	abs@a+1
  4752  0769  0820               	movf	?___aomod,w
  4753  076A  00F3               	movwf	abs@a
  4754  076B  3180  206A  3186   	fcall	_abs
  4755  076E  0873               	movf	?_abs,w
  4756  076F  3E30               	addlw	48
  4757  0770  0020               	movlb	0	; select bank0
  4758  0771  00B8               	movwf	??_dtoa
  4759  0772  084C               	movf	dtoa@i,w
  4760  0773  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4761  0774  0086               	movwf	6
  4762  0775  3001               	movlw	1	; select bank2/3
  4763  0776  0087               	movwf	7
  4764  0777  0838               	movf	??_dtoa,w
  4765  0778  0081               	movwf	1
  4766                           
  4767                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  4768  0779  30FF               	movlw	255
  4769  077A  07BE               	addwf	dtoa@p,f
  4770  077B  30FF               	movlw	255
  4771  077C  3DBF               	addwfc	dtoa@p+1,f
  4772                           
  4773                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  4774  077D  30FF               	movlw	255
  4775  077E  07C0               	addwf	dtoa@w,f
  4776  077F  30FF               	movlw	255
  4777  0780  3DC1               	addwfc	dtoa@w+1,f
  4778                           
  4779                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  4780  0781  300A               	movlw	10
  4781  0782  00A0               	movwf	___aodiv@divisor
  4782  0783  01A1               	clrf	___aodiv@divisor+1
  4783  0784  01A2               	clrf	___aodiv@divisor+2
  4784  0785  01A3               	clrf	___aodiv@divisor+3
  4785  0786  01A4               	clrf	___aodiv@divisor+4
  4786  0787  01A5               	clrf	___aodiv@divisor+5
  4787  0788  01A6               	clrf	___aodiv@divisor+6
  4788  0789  01A7               	clrf	___aodiv@divisor+7
  4789  078A  0844               	movf	dtoa@n,w
  4790  078B  00A8               	movwf	___aodiv@dividend
  4791  078C  0845               	movf	dtoa@n+1,w
  4792  078D  00A9               	movwf	___aodiv@dividend+1
  4793  078E  0846               	movf	dtoa@n+2,w
  4794  078F  00AA               	movwf	___aodiv@dividend+2
  4795  0790  0847               	movf	dtoa@n+3,w
  4796  0791  00AB               	movwf	___aodiv@dividend+3
  4797  0792  0848               	movf	dtoa@n+4,w
  4798  0793  00AC               	movwf	___aodiv@dividend+4
  4799  0794  0849               	movf	dtoa@n+5,w
  4800  0795  00AD               	movwf	___aodiv@dividend+5
  4801  0796  084A               	movf	dtoa@n+6,w
  4802  0797  00AE               	movwf	___aodiv@dividend+6
  4803  0798  084B               	movf	dtoa@n+7,w
  4804  0799  00AF               	movwf	___aodiv@dividend+7
  4805  079A  3185  25B3  3186   	fcall	___aodiv
  4806  079D  0820               	movf	?___aodiv,w
  4807  079E  00C4               	movwf	dtoa@n
  4808  079F  0821               	movf	?___aodiv+1,w
  4809  07A0  00C5               	movwf	dtoa@n+1
  4810  07A1  0822               	movf	?___aodiv+2,w
  4811  07A2  00C6               	movwf	dtoa@n+2
  4812  07A3  0823               	movf	?___aodiv+3,w
  4813  07A4  00C7               	movwf	dtoa@n+3
  4814  07A5  0824               	movf	?___aodiv+4,w
  4815  07A6  00C8               	movwf	dtoa@n+4
  4816  07A7  0825               	movf	?___aodiv+5,w
  4817  07A8  00C9               	movwf	dtoa@n+5
  4818  07A9  0826               	movf	?___aodiv+6,w
  4819  07AA  00CA               	movwf	dtoa@n+6
  4820  07AB  0827               	movf	?___aodiv+7,w
  4821  07AC  00CB               	movwf	dtoa@n+7
  4822  07AD                     l956:	
  4823                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 318:     }
  4824                           
  4825                           
  4826                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4827  07AD  0020               	movlb	0	; select bank0
  4828  07AE  084D               	movf	dtoa@i+1,w
  4829  07AF  3A80               	xorlw	128
  4830  07B0  00B8               	movwf	??_dtoa
  4831  07B1  3080               	movlw	128
  4832  07B2  0238               	subwf	??_dtoa,w
  4833  07B3  1D03               	skipz
  4834  07B4  2FB7               	goto	u1305
  4835  07B5  3001               	movlw	1
  4836  07B6  024C               	subwf	dtoa@i,w
  4837  07B7                     u1305:
  4838  07B7  1803               	btfsc	3,0
  4839  07B8  2F21               	goto	l1809
  4840  07B9                     l1817:
  4841                           
  4842                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  4843  07B9  0020               	movlb	0	; select bank0
  4844  07BA  0842               	movf	dtoa@s,w
  4845  07BB  0443               	iorwf	dtoa@s+1,w
  4846  07BC  1D03               	btfss	3,2
  4847  07BD  2FC0               	goto	l1821
  4848  07BE  1D6D               	btfss	_flags,2
  4849  07BF  2FD7               	goto	l1831
  4850  07C0                     l1821:
  4851                           
  4852                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  4853  07C0  30FF               	movlw	255
  4854  07C1  07CC               	addwf	dtoa@i,f
  4855  07C2  30FF               	movlw	255
  4856  07C3  3DCD               	addwfc	dtoa@i+1,f
  4857                           
  4858                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  4859  07C4  0842               	movf	dtoa@s,w
  4860  07C5  0443               	iorwf	dtoa@s+1,w
  4861  07C6  1D03               	btfss	3,2
  4862  07C7  2FCA               	goto	l1827
  4863  07C8  302B               	movlw	43
  4864  07C9  2FCB               	goto	L1
  4865  07CA                     l1827:
  4866  07CA  302D               	movlw	45
  4867  07CB                     L1:
  4868  07CB  00BB               	movwf	_dtoa$821
  4869  07CC  3000               	movlw	0
  4870  07CD  00BC               	movwf	_dtoa$821+1
  4871  07CE  083B               	movf	_dtoa$821,w
  4872  07CF  00B8               	movwf	??_dtoa
  4873  07D0  084C               	movf	dtoa@i,w
  4874  07D1  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4875  07D2  0086               	movwf	6
  4876  07D3  3001               	movlw	1	; select bank2/3
  4877  07D4  0087               	movwf	7
  4878  07D5  0838               	movf	??_dtoa,w
  4879  07D6  0081               	movwf	1
  4880  07D7                     l1831:
  4881                           
  4882                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  4883  07D7  084C               	movf	dtoa@i,w
  4884  07D8  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4885  07D9  00B8               	movwf	??_dtoa
  4886  07DA  0838               	movf	??_dtoa,w
  4887  07DB  00A7               	movwf	pad@buf
  4888  07DC  0841               	movf	dtoa@w+1,w
  4889  07DD  00A9               	movwf	pad@p+1
  4890  07DE  0840               	movf	dtoa@w,w
  4891  07DF  00A8               	movwf	pad@p
  4892  07E0  083D               	movf	dtoa@fp,w
  4893  07E1  3182  22BD         	fcall	_pad
  4894  07E3  0828               	movf	?_pad+1,w
  4895  07E4  00B1               	movwf	?_dtoa+1
  4896  07E5  0827               	movf	?_pad,w
  4897  07E6  00B0               	movwf	?_dtoa
  4898  07E7  0008               	return
  4899  07E8                     __end_of_dtoa:
  4900                           
  4901                           	psect	text6
  4902  02BD                     __ptext6:	
  4903 ;; *************** function _pad *****************
  4904 ;; Defined at:
  4905 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4906 ;; Parameters:    Size  Location     Type
  4907 ;;  fp              1    wreg     PTR struct _IO_FILE
  4908 ;;		 -> sprintf@f(5), 
  4909 ;;  buf             1    7[BANK0 ] PTR unsigned char 
  4910 ;;		 -> dbuf(32), 
  4911 ;;  p               2    8[BANK0 ] int 
  4912 ;; Auto vars:     Size  Location     Type
  4913 ;;  fp              1   14[BANK0 ] PTR struct _IO_FILE
  4914 ;;		 -> sprintf@f(5), 
  4915 ;;  w               2   12[BANK0 ] int 
  4916 ;;  i               2   10[BANK0 ] int 
  4917 ;; Return value:  Size  Location     Type
  4918 ;;                  2    7[BANK0 ] int 
  4919 ;; Registers used:
  4920 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4921 ;; Tracked objects:
  4922 ;;		On entry : 1F/0
  4923 ;;		On exit  : 1F/0
  4924 ;;		Unchanged: 0/0
  4925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4926 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4927 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4928 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4929 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4930 ;;Total ram usage:        9 bytes
  4931 ;; Hardware stack levels used: 1
  4932 ;; Hardware stack levels required when called: 4
  4933 ;; This function calls:
  4934 ;;		_fputc
  4935 ;;		_fputs
  4936 ;;		_strlen
  4937 ;; This function is called by:
  4938 ;;		_dtoa
  4939 ;; This function uses a non-reentrant model
  4940 ;;
  4941                           
  4942                           
  4943                           ;psect for function _pad
  4944  02BD                     _pad:
  4945                           
  4946                           ;incstack = 0
  4947                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4948                           ;pad@fp stored from wreg
  4949  02BD  00AE               	movwf	pad@fp
  4950                           
  4951                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4952  02BE  1C6D               	btfss	_flags,0
  4953  02BF  2AC8               	goto	l1715
  4954                           
  4955                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4956  02C0  082E               	movf	pad@fp,w
  4957  02C1  00FC               	movwf	??_pad
  4958  02C2  087C               	movf	??_pad,w
  4959  02C3  00FB               	movwf	fputs@fp
  4960  02C4  0827               	movf	pad@buf,w
  4961  02C5  3181  2127  3182   	fcall	_fputs
  4962  02C8                     l1715:
  4963                           
  4964                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4965  02C8  1BA9               	btfsc	pad@p+1,7
  4966  02C9  2ACF               	goto	l1719
  4967  02CA  0829               	movf	pad@p+1,w
  4968  02CB  00AD               	movwf	pad@w+1
  4969  02CC  0828               	movf	pad@p,w
  4970  02CD  00AC               	movwf	pad@w
  4971  02CE  2AD1               	goto	l939
  4972  02CF                     l1719:
  4973  02CF  01AC               	clrf	pad@w
  4974  02D0  01AD               	clrf	pad@w+1
  4975  02D1                     l939:
  4976                           
  4977                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4978  02D1  01AA               	clrf	pad@i
  4979  02D2  01AB               	clrf	pad@i+1
  4980  02D3                     l1725:	
  4981                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4982                           
  4983                           
  4984                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4985  02D3  082B               	movf	pad@i+1,w
  4986  02D4  3A80               	xorlw	128
  4987  02D5  00FC               	movwf	??_pad
  4988  02D6  082D               	movf	pad@w+1,w
  4989  02D7  3A80               	xorlw	128
  4990  02D8  027C               	subwf	??_pad,w
  4991  02D9  1D03               	skipz
  4992  02DA  2ADD               	goto	u1145
  4993  02DB  082C               	movf	pad@w,w
  4994  02DC  022A               	subwf	pad@i,w
  4995  02DD                     u1145:
  4996  02DD  1803               	btfsc	3,0
  4997  02DE  2AF1               	goto	l942
  4998                           
  4999                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  5000  02DF  3020               	movlw	32
  5001  02E0  00F3               	movwf	fputc@c
  5002  02E1  3000               	movlw	0
  5003  02E2  00F4               	movwf	fputc@c+1
  5004  02E3  0020               	movlb	0	; select bank0
  5005  02E4  082E               	movf	pad@fp,w
  5006  02E5  00FC               	movwf	??_pad
  5007  02E6  087C               	movf	??_pad,w
  5008  02E7  00F5               	movwf	fputc@fp
  5009  02E8  3182  2232  3182   	fcall	_fputc
  5010                           
  5011                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5012  02EB  3001               	movlw	1
  5013  02EC  0020               	movlb	0	; select bank0
  5014  02ED  07AA               	addwf	pad@i,f
  5015  02EE  3000               	movlw	0
  5016  02EF  3DAB               	addwfc	pad@i+1,f
  5017  02F0  2AD3               	goto	l1725
  5018  02F1                     l942:
  5019                           
  5020                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  5021  02F1  0020               	movlb	0	; select bank0
  5022  02F2  186D               	btfsc	_flags,0
  5023  02F3  2AFC               	goto	l1729
  5024                           
  5025                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  5026  02F4  082E               	movf	pad@fp,w
  5027  02F5  00FC               	movwf	??_pad
  5028  02F6  087C               	movf	??_pad,w
  5029  02F7  00FB               	movwf	fputs@fp
  5030  02F8  0827               	movf	pad@buf,w
  5031  02F9  3181  2127  3182   	fcall	_fputs
  5032  02FC                     l1729:
  5033                           
  5034                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  5035  02FC  0827               	movf	pad@buf,w
  5036  02FD  3180  2099         	fcall	_strlen
  5037  02FF  082C               	movf	pad@w,w
  5038  0300  0770               	addwf	?_strlen,w
  5039  0301  00A7               	movwf	?_pad
  5040  0302  082D               	movf	pad@w+1,w
  5041  0303  3D71               	addwfc	?_strlen+1,w
  5042  0304  00A8               	movwf	?_pad+1
  5043  0305  0008               	return
  5044  0306                     __end_of_pad:
  5045                           
  5046                           	psect	text7
  5047  0099                     __ptext7:	
  5048 ;; *************** function _strlen *****************
  5049 ;; Defined at:
  5050 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  5051 ;; Parameters:    Size  Location     Type
  5052 ;;  s               1    wreg     PTR const unsigned char 
  5053 ;;		 -> dbuf(32), 
  5054 ;; Auto vars:     Size  Location     Type
  5055 ;;  s               1    4[COMMON] PTR const unsigned char 
  5056 ;;		 -> dbuf(32), 
  5057 ;;  a               1    3[COMMON] PTR const unsigned char 
  5058 ;;		 -> dbuf(32), 
  5059 ;; Return value:  Size  Location     Type
  5060 ;;                  2    0[COMMON] unsigned int 
  5061 ;; Registers used:
  5062 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5063 ;; Tracked objects:
  5064 ;;		On entry : 1F/0
  5065 ;;		On exit  : 1F/0
  5066 ;;		Unchanged: 1F/0
  5067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5068 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5069 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5070 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5071 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5072 ;;Total ram usage:        5 bytes
  5073 ;; Hardware stack levels used: 1
  5074 ;; This function calls:
  5075 ;;		Nothing
  5076 ;; This function is called by:
  5077 ;;		_pad
  5078 ;; This function uses a non-reentrant model
  5079 ;;
  5080                           
  5081                           
  5082                           ;psect for function _strlen
  5083  0099                     _strlen:
  5084                           
  5085                           ;incstack = 0
  5086                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  5087                           ;strlen@s stored from wreg
  5088  0099  00F4               	movwf	strlen@s
  5089  009A  0874               	movf	strlen@s,w
  5090  009B  00F2               	movwf	??_strlen
  5091  009C  0872               	movf	??_strlen,w
  5092  009D  00F3               	movwf	strlen@a
  5093  009E                     l1631:
  5094  009E  0874               	movf	strlen@s,w
  5095  009F  0086               	movwf	6
  5096  00A0  3001               	movlw	1	; select bank2/3
  5097  00A1  0087               	movwf	7
  5098  00A2  0801               	movf	1,w
  5099  00A3  1903               	btfsc	3,2
  5100  00A4  28AA               	goto	l1633
  5101  00A5  3001               	movlw	1
  5102  00A6  00F2               	movwf	??_strlen
  5103  00A7  0872               	movf	??_strlen,w
  5104  00A8  07F4               	addwf	strlen@s,f
  5105  00A9  289E               	goto	l1631
  5106  00AA                     l1633:
  5107  00AA  0873               	movf	strlen@a,w
  5108  00AB  0274               	subwf	strlen@s,w
  5109  00AC  00F0               	movwf	?_strlen
  5110  00AD  01F1               	clrf	?_strlen+1
  5111  00AE  1BF0               	btfsc	?_strlen,7
  5112  00AF  03F1               	decf	?_strlen+1,f
  5113  00B0  0008               	return
  5114  00B1                     __end_of_strlen:
  5115                           
  5116                           	psect	text8
  5117  0127                     __ptext8:	
  5118 ;; *************** function _fputs *****************
  5119 ;; Defined at:
  5120 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  5121 ;; Parameters:    Size  Location     Type
  5122 ;;  s               1    wreg     PTR const unsigned char 
  5123 ;;		 -> dbuf(32), 
  5124 ;;  fp              1   11[COMMON] PTR struct _IO_FILE
  5125 ;;		 -> sprintf@f(5), 
  5126 ;; Auto vars:     Size  Location     Type
  5127 ;;  s               1    6[BANK0 ] PTR const unsigned char 
  5128 ;;		 -> dbuf(32), 
  5129 ;;  i               2    4[BANK0 ] int 
  5130 ;;  c               1    3[BANK0 ] unsigned char 
  5131 ;; Return value:  Size  Location     Type
  5132 ;;                  2   11[COMMON] int 
  5133 ;; Registers used:
  5134 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5135 ;; Tracked objects:
  5136 ;;		On entry : 1F/0
  5137 ;;		On exit  : 1F/0
  5138 ;;		Unchanged: 0/0
  5139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5140 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5141 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5142 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5143 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5144 ;;Total ram usage:        8 bytes
  5145 ;; Hardware stack levels used: 1
  5146 ;; Hardware stack levels required when called: 3
  5147 ;; This function calls:
  5148 ;;		_fputc
  5149 ;; This function is called by:
  5150 ;;		_pad
  5151 ;; This function uses a non-reentrant model
  5152 ;;
  5153                           
  5154                           
  5155                           ;psect for function _fputs
  5156  0127                     _fputs:
  5157                           
  5158                           ;incstack = 0
  5159                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5160                           ;fputs@s stored from wreg
  5161  0127  00A6               	movwf	fputs@s
  5162  0128  01A4               	clrf	fputs@i
  5163  0129  01A5               	clrf	fputs@i+1
  5164  012A                     l1625:
  5165  012A  0824               	movf	fputs@i,w
  5166  012B  0726               	addwf	fputs@s,w
  5167  012C  00A0               	movwf	??_fputs
  5168  012D  0820               	movf	??_fputs,w
  5169  012E  0086               	movwf	6
  5170  012F  3001               	movlw	1	; select bank2/3
  5171  0130  0087               	movwf	7
  5172  0131  0801               	movf	1,w
  5173  0132  00A1               	movwf	??_fputs+1
  5174  0133  0821               	movf	??_fputs+1,w
  5175  0134  00A3               	movwf	fputs@c
  5176  0135  0823               	movf	fputs@c,w
  5177  0136  1903               	btfsc	3,2
  5178  0137  0008               	return
  5179  0138  0823               	movf	fputs@c,w
  5180  0139  00A0               	movwf	??_fputs
  5181  013A  01A1               	clrf	??_fputs+1
  5182  013B  0820               	movf	??_fputs,w
  5183  013C  00F3               	movwf	fputc@c
  5184  013D  0821               	movf	??_fputs+1,w
  5185  013E  00F4               	movwf	fputc@c+1
  5186  013F  087B               	movf	fputs@fp,w
  5187  0140  00A2               	movwf	??_fputs+2
  5188  0141  0822               	movf	??_fputs+2,w
  5189  0142  00F5               	movwf	fputc@fp
  5190  0143  3182  2232  3181   	fcall	_fputc
  5191  0146  3001               	movlw	1
  5192  0147  0020               	movlb	0	; select bank0
  5193  0148  07A4               	addwf	fputs@i,f
  5194  0149  3000               	movlw	0
  5195  014A  3DA5               	addwfc	fputs@i+1,f
  5196  014B  292A               	goto	l1625
  5197  014C                     __end_of_fputs:
  5198                           
  5199                           	psect	text9
  5200  0232                     __ptext9:	
  5201 ;; *************** function _fputc *****************
  5202 ;; Defined at:
  5203 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  5204 ;; Parameters:    Size  Location     Type
  5205 ;;  c               2    3[COMMON] int 
  5206 ;;  fp              1    5[COMMON] PTR struct _IO_FILE
  5207 ;;		 -> sprintf@f(5), 
  5208 ;; Auto vars:     Size  Location     Type
  5209 ;;		None
  5210 ;; Return value:  Size  Location     Type
  5211 ;;                  2    3[COMMON] int 
  5212 ;; Registers used:
  5213 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5214 ;; Tracked objects:
  5215 ;;		On entry : 1F/0
  5216 ;;		On exit  : 0/0
  5217 ;;		Unchanged: 0/0
  5218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5219 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5221 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5222 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5223 ;;Total ram usage:        8 bytes
  5224 ;; Hardware stack levels used: 1
  5225 ;; Hardware stack levels required when called: 2
  5226 ;; This function calls:
  5227 ;;		_putch
  5228 ;; This function is called by:
  5229 ;;		_pad
  5230 ;;		_vfpfcnvrt
  5231 ;;		_fputs
  5232 ;; This function uses a non-reentrant model
  5233 ;;
  5234                           
  5235                           
  5236                           ;psect for function _fputc
  5237  0232                     _fputc:
  5238                           
  5239                           ;incstack = 0
  5240                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5241  0232  0875               	movf	fputc@fp,w
  5242  0233  1D03               	btfss	3,2
  5243  0234  0875               	movf	fputc@fp,w
  5244  0235  1D03               	btfss	3,2
  5245  0236  2A3B               	goto	l1601
  5246  0237  0873               	movf	fputc@c,w
  5247  0238  3180  2023         	fcall	_putch
  5248  023A  0008               	return
  5249  023B                     l1601:
  5250  023B  0875               	movf	fputc@fp,w
  5251  023C  3E03               	addlw	3
  5252  023D  0086               	movwf	6
  5253  023E  0187               	clrf	7
  5254  023F  0016               	moviw fsr1++
  5255  0240  0401               	iorwf	1,w
  5256  0241  1903               	btfsc	3,2
  5257  0242  2A5E               	goto	l1605
  5258  0243  0875               	movf	fputc@fp,w
  5259  0244  3E03               	addlw	3
  5260  0245  0086               	movwf	6
  5261  0246  0187               	clrf	7
  5262  0247  3F40               	moviw [0]fsr1
  5263  0248  00F6               	movwf	??_fputc
  5264  0249  3F41               	moviw [1]fsr1
  5265  024A  00F7               	movwf	??_fputc+1
  5266  024B  0A75               	incf	fputc@fp,w
  5267  024C  0086               	movwf	6
  5268  024D  0187               	clrf	7
  5269  024E  3F40               	moviw [0]fsr1
  5270  024F  00F8               	movwf	??_fputc+2
  5271  0250  3F41               	moviw [1]fsr1
  5272  0251  00F9               	movwf	??_fputc+3
  5273  0252  0879               	movf	??_fputc+3,w
  5274  0253  3A80               	xorlw	128
  5275  0254  00FA               	movwf	??_fputc+4
  5276  0255  0877               	movf	??_fputc+1,w
  5277  0256  3A80               	xorlw	128
  5278  0257  027A               	subwf	??_fputc+4,w
  5279  0258  1D03               	skipz
  5280  0259  2A5C               	goto	u855
  5281  025A  0876               	movf	??_fputc,w
  5282  025B  0278               	subwf	??_fputc+2,w
  5283  025C                     u855:
  5284  025C  1803               	skipnc
  5285  025D  0008               	return
  5286  025E                     l1605:
  5287  025E  0873               	movf	fputc@c,w
  5288  025F  00F6               	movwf	??_fputc
  5289  0260  0875               	movf	fputc@fp,w
  5290  0261  0086               	movwf	6
  5291  0262  0187               	clrf	7
  5292  0263  0A75               	incf	fputc@fp,w
  5293  0264  0084               	movwf	4
  5294  0265  0185               	clrf	5
  5295  0266  0800               	movf	0,w
  5296  0267  0701               	addwf	1,w
  5297  0268  00F7               	movwf	??_fputc+1
  5298  0269  0877               	movf	??_fputc+1,w
  5299  026A  0086               	movwf	6
  5300  026B  0187               	clrf	7
  5301  026C  0876               	movf	??_fputc,w
  5302  026D  0081               	movwf	1
  5303  026E  0A75               	incf	fputc@fp,w
  5304  026F  0086               	movwf	6
  5305  0270  0187               	clrf	7
  5306  0271  3001               	movlw	1
  5307  0272  0781               	addwf	1,f
  5308  0273  3141               	addfsr 1,1
  5309  0274  1803               	skipnc
  5310  0275  0A81               	incf	1,f
  5311  0276  0008               	return
  5312  0277                     __end_of_fputc:
  5313                           
  5314                           	psect	text10
  5315  0023                     __ptext10:	
  5316 ;; *************** function _putch *****************
  5317 ;; Defined at:
  5318 ;;		line 65 in file "uart.c"
  5319 ;; Parameters:    Size  Location     Type
  5320 ;;  dato            1    wreg     unsigned char 
  5321 ;; Auto vars:     Size  Location     Type
  5322 ;;  dato            1    2[COMMON] unsigned char 
  5323 ;; Return value:  Size  Location     Type
  5324 ;;                  1    wreg      void 
  5325 ;; Registers used:
  5326 ;;		wreg, status,2, status,0, pclath, cstack
  5327 ;; Tracked objects:
  5328 ;;		On entry : 1F/0
  5329 ;;		On exit  : 1F/2
  5330 ;;		Unchanged: 0/0
  5331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5333 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5335 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5336 ;;Total ram usage:        1 bytes
  5337 ;; Hardware stack levels used: 1
  5338 ;; Hardware stack levels required when called: 1
  5339 ;; This function calls:
  5340 ;;		_uart_tx
  5341 ;; This function is called by:
  5342 ;;		_fputc
  5343 ;; This function uses a non-reentrant model
  5344 ;;
  5345                           
  5346                           
  5347                           ;psect for function _putch
  5348  0023                     _putch:
  5349                           
  5350                           ;incstack = 0
  5351                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  5352                           ;putch@dato stored from wreg
  5353  0023  00F2               	movwf	putch@dato
  5354                           
  5355                           ;uart.c: 67:     uart_tx( dato);
  5356  0024  0872               	movf	putch@dato,w
  5357  0025  3180  2038         	fcall	_uart_tx
  5358  0027  0008               	return
  5359  0028                     __end_of_putch:
  5360                           
  5361                           	psect	text11
  5362  0038                     __ptext11:	
  5363 ;; *************** function _uart_tx *****************
  5364 ;; Defined at:
  5365 ;;		line 32 in file "uart.c"
  5366 ;; Parameters:    Size  Location     Type
  5367 ;;  dato            1    wreg     unsigned char 
  5368 ;; Auto vars:     Size  Location     Type
  5369 ;;  dato            1    1[COMMON] unsigned char 
  5370 ;; Return value:  Size  Location     Type
  5371 ;;                  1    wreg      void 
  5372 ;; Registers used:
  5373 ;;		wreg, status,2, status,0
  5374 ;; Tracked objects:
  5375 ;;		On entry : 1F/0
  5376 ;;		On exit  : 1F/2
  5377 ;;		Unchanged: 0/0
  5378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5380 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5381 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5382 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5383 ;;Total ram usage:        2 bytes
  5384 ;; Hardware stack levels used: 1
  5385 ;; This function calls:
  5386 ;;		Nothing
  5387 ;; This function is called by:
  5388 ;;		_putch
  5389 ;; This function uses a non-reentrant model
  5390 ;;
  5391                           
  5392                           
  5393                           ;psect for function _uart_tx
  5394  0038                     _uart_tx:
  5395                           
  5396                           ;incstack = 0
  5397                           ; Regs used in _uart_tx: [wreg+status,2+status,0]
  5398                           ;uart_tx@dato stored from wreg
  5399  0038  00F1               	movwf	uart_tx@dato
  5400  0039                     l1589:	
  5401                           ;uart.c: 34:     while( ( (PIR3>>4) & 0x01) == 0){}
  5402                           
  5403  0039  002E               	movlb	14	; select bank14
  5404  003A  080F               	movf	15,w	;volatile
  5405  003B  00F0               	movwf	??_uart_tx
  5406  003C  3004               	movlw	4
  5407  003D                     u805:
  5408  003D  36F0               	lsrf	??_uart_tx,f
  5409  003E  0B89               	decfsz	9,f
  5410  003F  283D               	goto	u805
  5411  0040  1C70               	btfss	??_uart_tx,0
  5412  0041  2839               	goto	l1589
  5413                           
  5414                           ;uart.c: 36:         TXREG = dato;
  5415  0042  0871               	movf	uart_tx@dato,w
  5416  0043  0022               	movlb	2	; select bank2
  5417  0044  009A               	movwf	26	;volatile
  5418  0045  0008               	return
  5419  0046                     __end_of_uart_tx:
  5420                           
  5421                           	psect	text12
  5422  006A                     __ptext12:	
  5423 ;; *************** function _abs *****************
  5424 ;; Defined at:
  5425 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  5426 ;; Parameters:    Size  Location     Type
  5427 ;;  a               2    3[COMMON] int 
  5428 ;; Auto vars:     Size  Location     Type
  5429 ;;		None
  5430 ;; Return value:  Size  Location     Type
  5431 ;;                  2    3[COMMON] int 
  5432 ;; Registers used:
  5433 ;;		wreg, status,2, status,0
  5434 ;; Tracked objects:
  5435 ;;		On entry : 1F/0
  5436 ;;		On exit  : 0/0
  5437 ;;		Unchanged: 0/0
  5438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5439 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5441 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5442 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5443 ;;Total ram usage:        4 bytes
  5444 ;; Hardware stack levels used: 1
  5445 ;; This function calls:
  5446 ;;		Nothing
  5447 ;; This function is called by:
  5448 ;;		_dtoa
  5449 ;; This function uses a non-reentrant model
  5450 ;;
  5451                           
  5452                           
  5453                           ;psect for function _abs
  5454  006A                     _abs:
  5455                           
  5456                           ;incstack = 0
  5457                           ; Regs used in _abs: [wreg+status,2+status,0]
  5458  006A  0874               	movf	abs@a+1,w
  5459  006B  3A80               	xorlw	128
  5460  006C  00F5               	movwf	??_abs
  5461  006D  3080               	movlw	128
  5462  006E  0275               	subwf	??_abs,w
  5463  006F  1D03               	skipz
  5464  0070  2873               	goto	u1165
  5465  0071  3001               	movlw	1
  5466  0072  0273               	subwf	abs@a,w
  5467  0073                     u1165:
  5468  0073  1803               	skipnc
  5469  0074  0008               	return
  5470  0075  0973               	comf	abs@a,w
  5471  0076  00F5               	movwf	??_abs
  5472  0077  0974               	comf	abs@a+1,w
  5473  0078  00F6               	movwf	??_abs+1
  5474  0079  0AF5               	incf	??_abs,f
  5475  007A  1903               	skipnz
  5476  007B  0AF6               	incf	??_abs+1,f
  5477  007C  0875               	movf	??_abs,w
  5478  007D  00F3               	movwf	?_abs
  5479  007E  0876               	movf	??_abs+1,w
  5480  007F  00F4               	movwf	?_abs+1
  5481  0080  0008               	return
  5482  0081                     __end_of_abs:
  5483                           
  5484                           	psect	text13
  5485  04D7                     __ptext13:	
  5486 ;; *************** function ___aomod *****************
  5487 ;; Defined at:
  5488 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  5489 ;; Parameters:    Size  Location     Type
  5490 ;;  divisor         8    0[BANK0 ] long long 
  5491 ;;  dividend        8    8[BANK0 ] long long 
  5492 ;; Auto vars:     Size  Location     Type
  5493 ;;  sign            1    2[COMMON] unsigned char 
  5494 ;;  counter         1    1[COMMON] unsigned char 
  5495 ;; Return value:  Size  Location     Type
  5496 ;;                  8    0[BANK0 ] long long 
  5497 ;; Registers used:
  5498 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5499 ;; Tracked objects:
  5500 ;;		On entry : 1F/0
  5501 ;;		On exit  : 1F/0
  5502 ;;		Unchanged: 0/0
  5503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5504 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5505 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5506 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5507 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5508 ;;Total ram usage:       19 bytes
  5509 ;; Hardware stack levels used: 1
  5510 ;; This function calls:
  5511 ;;		Nothing
  5512 ;; This function is called by:
  5513 ;;		_dtoa
  5514 ;; This function uses a non-reentrant model
  5515 ;;
  5516                           
  5517                           
  5518                           ;psect for function ___aomod
  5519  04D7                     ___aomod:
  5520                           
  5521                           ;incstack = 0
  5522                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  5523  04D7  01F2               	clrf	___aomod@sign
  5524  04D8  3028               	movlw	low ___aomod@dividend
  5525  04D9  0086               	movwf	6
  5526  04DA  3000               	movlw	high ___aomod@dividend
  5527  04DB  0087               	movwf	7
  5528  04DC  3F47               	moviw [7]fsr1
  5529  04DD  00F0               	movwf	??___aomod
  5530  04DE  1FF0               	btfss	??___aomod,7
  5531  04DF  2D01               	goto	l1687
  5532  04E0  0020               	movlb	0	; select bank0
  5533  04E1  09A8               	comf	___aomod@dividend,f
  5534  04E2  09A9               	comf	___aomod@dividend+1,f
  5535  04E3  09AA               	comf	___aomod@dividend+2,f
  5536  04E4  09AB               	comf	___aomod@dividend+3,f
  5537  04E5  09AC               	comf	___aomod@dividend+4,f
  5538  04E6  09AD               	comf	___aomod@dividend+5,f
  5539  04E7  09AE               	comf	___aomod@dividend+6,f
  5540  04E8  09AF               	comf	___aomod@dividend+7,f
  5541  04E9  0AA8               	incf	___aomod@dividend,f
  5542  04EA  1D03               	skipz
  5543  04EB  2CFF               	goto	u103lld
  5544  04EC  0AA9               	incf	___aomod@dividend+1,f
  5545  04ED  1D03               	skipz
  5546  04EE  2CFF               	goto	u103lld
  5547  04EF  0AAA               	incf	___aomod@dividend+2,f
  5548  04F0  1D03               	skipz
  5549  04F1  2CFF               	goto	u103lld
  5550  04F2  0AAB               	incf	___aomod@dividend+3,f
  5551  04F3  1D03               	skipz
  5552  04F4  2CFF               	goto	u103lld
  5553  04F5  0AAC               	incf	___aomod@dividend+4,f
  5554  04F6  1D03               	skipz
  5555  04F7  2CFF               	goto	u103lld
  5556  04F8  0AAD               	incf	___aomod@dividend+5,f
  5557  04F9  1D03               	skipz
  5558  04FA  2CFF               	goto	u103lld
  5559  04FB  0AAE               	incf	___aomod@dividend+6,f
  5560  04FC  1D03               	skipz
  5561  04FD  2CFF               	goto	u103lld
  5562  04FE  0AAF               	incf	___aomod@dividend+7,f
  5563  04FF                     u103lld:
  5564  04FF  01F2               	clrf	___aomod@sign
  5565  0500  0AF2               	incf	___aomod@sign,f
  5566  0501                     l1687:
  5567  0501  3020               	movlw	low ___aomod@divisor
  5568  0502  0086               	movwf	6
  5569  0503  3000               	movlw	high ___aomod@divisor
  5570  0504  0087               	movwf	7
  5571  0505  3F47               	moviw [7]fsr1
  5572  0506  00F0               	movwf	??___aomod
  5573  0507  1FF0               	btfss	??___aomod,7
  5574  0508  2D28               	goto	l1691
  5575  0509  0020               	movlb	0	; select bank0
  5576  050A  09A0               	comf	___aomod@divisor,f
  5577  050B  09A1               	comf	___aomod@divisor+1,f
  5578  050C  09A2               	comf	___aomod@divisor+2,f
  5579  050D  09A3               	comf	___aomod@divisor+3,f
  5580  050E  09A4               	comf	___aomod@divisor+4,f
  5581  050F  09A5               	comf	___aomod@divisor+5,f
  5582  0510  09A6               	comf	___aomod@divisor+6,f
  5583  0511  09A7               	comf	___aomod@divisor+7,f
  5584  0512  0AA0               	incf	___aomod@divisor,f
  5585  0513  1D03               	skipz
  5586  0514  2D28               	goto	l1691
  5587  0515  0AA1               	incf	___aomod@divisor+1,f
  5588  0516  1D03               	skipz
  5589  0517  2D28               	goto	l1691
  5590  0518  0AA2               	incf	___aomod@divisor+2,f
  5591  0519  1D03               	skipz
  5592  051A  2D28               	goto	l1691
  5593  051B  0AA3               	incf	___aomod@divisor+3,f
  5594  051C  1D03               	skipz
  5595  051D  2D28               	goto	l1691
  5596  051E  0AA4               	incf	___aomod@divisor+4,f
  5597  051F  1D03               	skipz
  5598  0520  2D28               	goto	l1691
  5599  0521  0AA5               	incf	___aomod@divisor+5,f
  5600  0522  1D03               	skipz
  5601  0523  2D28               	goto	l1691
  5602  0524  0AA6               	incf	___aomod@divisor+6,f
  5603  0525  1D03               	skipz
  5604  0526  2D28               	goto	l1691
  5605  0527  0AA7               	incf	___aomod@divisor+7,f
  5606  0528                     l1691:
  5607  0528  0020               	movlb	0	; select bank0
  5608  0529  0820               	movf	___aomod@divisor,w
  5609  052A  0421               	iorwf	___aomod@divisor+1,w
  5610  052B  0422               	iorwf	___aomod@divisor+2,w
  5611  052C  0423               	iorwf	___aomod@divisor+3,w
  5612  052D  0424               	iorwf	___aomod@divisor+4,w
  5613  052E  0425               	iorwf	___aomod@divisor+5,w
  5614  052F  0426               	iorwf	___aomod@divisor+6,w
  5615  0530  0427               	iorwf	___aomod@divisor+7,w
  5616  0531  1903               	skipnz
  5617  0532  2D80               	goto	l1707
  5618  0533  01F1               	clrf	___aomod@counter
  5619  0534  0AF1               	incf	___aomod@counter,f
  5620  0535                     l1699:
  5621  0535  1BA7               	btfsc	___aomod@divisor+7,7
  5622  0536  2D44               	goto	l1701
  5623  0537  35A0               	lslf	___aomod@divisor,f
  5624  0538  0DA1               	rlf	___aomod@divisor+1,f
  5625  0539  0DA2               	rlf	___aomod@divisor+2,f
  5626  053A  0DA3               	rlf	___aomod@divisor+3,f
  5627  053B  0DA4               	rlf	___aomod@divisor+4,f
  5628  053C  0DA5               	rlf	___aomod@divisor+5,f
  5629  053D  0DA6               	rlf	___aomod@divisor+6,f
  5630  053E  0DA7               	rlf	___aomod@divisor+7,f
  5631  053F  3001               	movlw	1
  5632  0540  00F0               	movwf	??___aomod
  5633  0541  0870               	movf	??___aomod,w
  5634  0542  07F1               	addwf	___aomod@counter,f
  5635  0543  2D35               	goto	l1699
  5636  0544                     l1701:
  5637  0544  0827               	movf	___aomod@divisor+7,w
  5638  0545  022F               	subwf	___aomod@dividend+7,w
  5639  0546  1D03               	skipz
  5640  0547  2D62               	goto	u1085
  5641  0548  0826               	movf	___aomod@divisor+6,w
  5642  0549  022E               	subwf	___aomod@dividend+6,w
  5643  054A  1D03               	skipz
  5644  054B  2D62               	goto	u1085
  5645  054C  0825               	movf	___aomod@divisor+5,w
  5646  054D  022D               	subwf	___aomod@dividend+5,w
  5647  054E  1D03               	skipz
  5648  054F  2D62               	goto	u1085
  5649  0550  0824               	movf	___aomod@divisor+4,w
  5650  0551  022C               	subwf	___aomod@dividend+4,w
  5651  0552  1D03               	skipz
  5652  0553  2D62               	goto	u1085
  5653  0554  0823               	movf	___aomod@divisor+3,w
  5654  0555  022B               	subwf	___aomod@dividend+3,w
  5655  0556  1D03               	skipz
  5656  0557  2D62               	goto	u1085
  5657  0558  0822               	movf	___aomod@divisor+2,w
  5658  0559  022A               	subwf	___aomod@dividend+2,w
  5659  055A  1D03               	skipz
  5660  055B  2D62               	goto	u1085
  5661  055C  0821               	movf	___aomod@divisor+1,w
  5662  055D  0229               	subwf	___aomod@dividend+1,w
  5663  055E  1D03               	skipz
  5664  055F  2D62               	goto	u1085
  5665  0560  0820               	movf	___aomod@divisor,w
  5666  0561  0228               	subwf	___aomod@dividend,w
  5667  0562                     u1085:
  5668  0562  1C03               	skipc
  5669  0563  2D74               	goto	l1705
  5670  0564  0820               	movf	___aomod@divisor,w
  5671  0565  02A8               	subwf	___aomod@dividend,f
  5672  0566  0821               	movf	___aomod@divisor+1,w
  5673  0567  3BA9               	subwfb	___aomod@dividend+1,f
  5674  0568  0822               	movf	___aomod@divisor+2,w
  5675  0569  3BAA               	subwfb	___aomod@dividend+2,f
  5676  056A  0823               	movf	___aomod@divisor+3,w
  5677  056B  3BAB               	subwfb	___aomod@dividend+3,f
  5678  056C  0824               	movf	___aomod@divisor+4,w
  5679  056D  3BAC               	subwfb	___aomod@dividend+4,f
  5680  056E  0825               	movf	___aomod@divisor+5,w
  5681  056F  3BAD               	subwfb	___aomod@dividend+5,f
  5682  0570  0826               	movf	___aomod@divisor+6,w
  5683  0571  3BAE               	subwfb	___aomod@dividend+6,f
  5684  0572  0827               	movf	___aomod@divisor+7,w
  5685  0573  3BAF               	subwfb	___aomod@dividend+7,f
  5686  0574                     l1705:
  5687  0574  36A7               	lsrf	___aomod@divisor+7,f
  5688  0575  0CA6               	rrf	___aomod@divisor+6,f
  5689  0576  0CA5               	rrf	___aomod@divisor+5,f
  5690  0577  0CA4               	rrf	___aomod@divisor+4,f
  5691  0578  0CA3               	rrf	___aomod@divisor+3,f
  5692  0579  0CA2               	rrf	___aomod@divisor+2,f
  5693  057A  0CA1               	rrf	___aomod@divisor+1,f
  5694  057B  0CA0               	rrf	___aomod@divisor,f
  5695  057C  3001               	movlw	1
  5696  057D  02F1               	subwf	___aomod@counter,f
  5697  057E  1D03               	btfss	3,2
  5698  057F  2D44               	goto	l1701
  5699  0580                     l1707:
  5700  0580  0872               	movf	___aomod@sign,w
  5701  0581  1903               	btfsc	3,2
  5702  0582  2DA1               	goto	l562
  5703  0583  09A8               	comf	___aomod@dividend,f
  5704  0584  09A9               	comf	___aomod@dividend+1,f
  5705  0585  09AA               	comf	___aomod@dividend+2,f
  5706  0586  09AB               	comf	___aomod@dividend+3,f
  5707  0587  09AC               	comf	___aomod@dividend+4,f
  5708  0588  09AD               	comf	___aomod@dividend+5,f
  5709  0589  09AE               	comf	___aomod@dividend+6,f
  5710  058A  09AF               	comf	___aomod@dividend+7,f
  5711  058B  0AA8               	incf	___aomod@dividend,f
  5712  058C  1D03               	skipz
  5713  058D  2DA1               	goto	l562
  5714  058E  0AA9               	incf	___aomod@dividend+1,f
  5715  058F  1D03               	skipz
  5716  0590  2DA1               	goto	l562
  5717  0591  0AAA               	incf	___aomod@dividend+2,f
  5718  0592  1D03               	skipz
  5719  0593  2DA1               	goto	l562
  5720  0594  0AAB               	incf	___aomod@dividend+3,f
  5721  0595  1D03               	skipz
  5722  0596  2DA1               	goto	l562
  5723  0597  0AAC               	incf	___aomod@dividend+4,f
  5724  0598  1D03               	skipz
  5725  0599  2DA1               	goto	l562
  5726  059A  0AAD               	incf	___aomod@dividend+5,f
  5727  059B  1D03               	skipz
  5728  059C  2DA1               	goto	l562
  5729  059D  0AAE               	incf	___aomod@dividend+6,f
  5730  059E  1D03               	skipz
  5731  059F  2DA1               	goto	l562
  5732  05A0  0AAF               	incf	___aomod@dividend+7,f
  5733  05A1                     l562:
  5734  05A1  0020               	movlb	0	; select bank0
  5735  05A2  0828               	movf	___aomod@dividend,w
  5736  05A3  00A0               	movwf	?___aomod
  5737  05A4  0829               	movf	___aomod@dividend+1,w
  5738  05A5  00A1               	movwf	?___aomod+1
  5739  05A6  082A               	movf	___aomod@dividend+2,w
  5740  05A7  00A2               	movwf	?___aomod+2
  5741  05A8  082B               	movf	___aomod@dividend+3,w
  5742  05A9  00A3               	movwf	?___aomod+3
  5743  05AA  082C               	movf	___aomod@dividend+4,w
  5744  05AB  00A4               	movwf	?___aomod+4
  5745  05AC  082D               	movf	___aomod@dividend+5,w
  5746  05AD  00A5               	movwf	?___aomod+5
  5747  05AE  082E               	movf	___aomod@dividend+6,w
  5748  05AF  00A6               	movwf	?___aomod+6
  5749  05B0  082F               	movf	___aomod@dividend+7,w
  5750  05B1  00A7               	movwf	?___aomod+7
  5751  05B2  0008               	return
  5752  05B3                     __end_of___aomod:
  5753                           
  5754                           	psect	text14
  5755  05B3                     __ptext14:	
  5756 ;; *************** function ___aodiv *****************
  5757 ;; Defined at:
  5758 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  5759 ;; Parameters:    Size  Location     Type
  5760 ;;  divisor         8    0[BANK0 ] long long 
  5761 ;;  dividend        8    8[BANK0 ] long long 
  5762 ;; Auto vars:     Size  Location     Type
  5763 ;;  quotient        8    3[COMMON] long long 
  5764 ;;  sign            1    2[COMMON] unsigned char 
  5765 ;;  counter         1    1[COMMON] unsigned char 
  5766 ;; Return value:  Size  Location     Type
  5767 ;;                  8    0[BANK0 ] long long 
  5768 ;; Registers used:
  5769 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5770 ;; Tracked objects:
  5771 ;;		On entry : 1F/0
  5772 ;;		On exit  : 1F/0
  5773 ;;		Unchanged: 0/0
  5774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5775 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5776 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5777 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5778 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5779 ;;Total ram usage:       27 bytes
  5780 ;; Hardware stack levels used: 1
  5781 ;; This function calls:
  5782 ;;		Nothing
  5783 ;; This function is called by:
  5784 ;;		_dtoa
  5785 ;; This function uses a non-reentrant model
  5786 ;;
  5787                           
  5788                           
  5789                           ;psect for function ___aodiv
  5790  05B3                     ___aodiv:
  5791                           
  5792                           ;incstack = 0
  5793                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  5794  05B3  01F2               	clrf	___aodiv@sign
  5795  05B4  3020               	movlw	low ___aodiv@divisor
  5796  05B5  0086               	movwf	6
  5797  05B6  3000               	movlw	high ___aodiv@divisor
  5798  05B7  0087               	movwf	7
  5799  05B8  3F47               	moviw [7]fsr1
  5800  05B9  00F0               	movwf	??___aodiv
  5801  05BA  1FF0               	btfss	??___aodiv,7
  5802  05BB  2DDD               	goto	l1649
  5803  05BC  0020               	movlb	0	; select bank0
  5804  05BD  09A0               	comf	___aodiv@divisor,f
  5805  05BE  09A1               	comf	___aodiv@divisor+1,f
  5806  05BF  09A2               	comf	___aodiv@divisor+2,f
  5807  05C0  09A3               	comf	___aodiv@divisor+3,f
  5808  05C1  09A4               	comf	___aodiv@divisor+4,f
  5809  05C2  09A5               	comf	___aodiv@divisor+5,f
  5810  05C3  09A6               	comf	___aodiv@divisor+6,f
  5811  05C4  09A7               	comf	___aodiv@divisor+7,f
  5812  05C5  0AA0               	incf	___aodiv@divisor,f
  5813  05C6  1D03               	skipz
  5814  05C7  2DDB               	goto	u92lld
  5815  05C8  0AA1               	incf	___aodiv@divisor+1,f
  5816  05C9  1D03               	skipz
  5817  05CA  2DDB               	goto	u92lld
  5818  05CB  0AA2               	incf	___aodiv@divisor+2,f
  5819  05CC  1D03               	skipz
  5820  05CD  2DDB               	goto	u92lld
  5821  05CE  0AA3               	incf	___aodiv@divisor+3,f
  5822  05CF  1D03               	skipz
  5823  05D0  2DDB               	goto	u92lld
  5824  05D1  0AA4               	incf	___aodiv@divisor+4,f
  5825  05D2  1D03               	skipz
  5826  05D3  2DDB               	goto	u92lld
  5827  05D4  0AA5               	incf	___aodiv@divisor+5,f
  5828  05D5  1D03               	skipz
  5829  05D6  2DDB               	goto	u92lld
  5830  05D7  0AA6               	incf	___aodiv@divisor+6,f
  5831  05D8  1D03               	skipz
  5832  05D9  2DDB               	goto	u92lld
  5833  05DA  0AA7               	incf	___aodiv@divisor+7,f
  5834  05DB                     u92lld:
  5835  05DB  01F2               	clrf	___aodiv@sign
  5836  05DC  0AF2               	incf	___aodiv@sign,f
  5837  05DD                     l1649:
  5838  05DD  3028               	movlw	low ___aodiv@dividend
  5839  05DE  0086               	movwf	6
  5840  05DF  3000               	movlw	high ___aodiv@dividend
  5841  05E0  0087               	movwf	7
  5842  05E1  3F47               	moviw [7]fsr1
  5843  05E2  00F0               	movwf	??___aodiv
  5844  05E3  1FF0               	btfss	??___aodiv,7
  5845  05E4  2E08               	goto	l1655
  5846  05E5  0020               	movlb	0	; select bank0
  5847  05E6  09A8               	comf	___aodiv@dividend,f
  5848  05E7  09A9               	comf	___aodiv@dividend+1,f
  5849  05E8  09AA               	comf	___aodiv@dividend+2,f
  5850  05E9  09AB               	comf	___aodiv@dividend+3,f
  5851  05EA  09AC               	comf	___aodiv@dividend+4,f
  5852  05EB  09AD               	comf	___aodiv@dividend+5,f
  5853  05EC  09AE               	comf	___aodiv@dividend+6,f
  5854  05ED  09AF               	comf	___aodiv@dividend+7,f
  5855  05EE  0AA8               	incf	___aodiv@dividend,f
  5856  05EF  1D03               	skipz
  5857  05F0  2E04               	goto	l1653
  5858  05F1  0AA9               	incf	___aodiv@dividend+1,f
  5859  05F2  1D03               	skipz
  5860  05F3  2E04               	goto	l1653
  5861  05F4  0AAA               	incf	___aodiv@dividend+2,f
  5862  05F5  1D03               	skipz
  5863  05F6  2E04               	goto	l1653
  5864  05F7  0AAB               	incf	___aodiv@dividend+3,f
  5865  05F8  1D03               	skipz
  5866  05F9  2E04               	goto	l1653
  5867  05FA  0AAC               	incf	___aodiv@dividend+4,f
  5868  05FB  1D03               	skipz
  5869  05FC  2E04               	goto	l1653
  5870  05FD  0AAD               	incf	___aodiv@dividend+5,f
  5871  05FE  1D03               	skipz
  5872  05FF  2E04               	goto	l1653
  5873  0600  0AAE               	incf	___aodiv@dividend+6,f
  5874  0601  1D03               	skipz
  5875  0602  2E04               	goto	l1653
  5876  0603  0AAF               	incf	___aodiv@dividend+7,f
  5877  0604                     l1653:
  5878  0604  3001               	movlw	1
  5879  0605  00F0               	movwf	??___aodiv
  5880  0606  0870               	movf	??___aodiv,w
  5881  0607  06F2               	xorwf	___aodiv@sign,f
  5882  0608                     l1655:
  5883  0608  3073               	movlw	low ___aodiv@quotient
  5884  0609  0086               	movwf	6
  5885  060A  3000               	movlw	high ___aodiv@quotient
  5886  060B  0087               	movwf	7
  5887  060C  3008               	movlw	8
  5888  060D  00F0               	movwf	??___aodiv
  5889  060E  3000               	movlw	0
  5890  060F                     u950:
  5891  060F  001E               	movwi fsr1++
  5892  0610  0BF0               	decfsz	??___aodiv,f
  5893  0611  2E0F               	goto	u950
  5894  0612  0020               	movlb	0	; select bank0
  5895  0613  0820               	movf	___aodiv@divisor,w
  5896  0614  0421               	iorwf	___aodiv@divisor+1,w
  5897  0615  0422               	iorwf	___aodiv@divisor+2,w
  5898  0616  0423               	iorwf	___aodiv@divisor+3,w
  5899  0617  0424               	iorwf	___aodiv@divisor+4,w
  5900  0618  0425               	iorwf	___aodiv@divisor+5,w
  5901  0619  0426               	iorwf	___aodiv@divisor+6,w
  5902  061A  0427               	iorwf	___aodiv@divisor+7,w
  5903  061B  1903               	skipnz
  5904  061C  2E73               	goto	l1677
  5905  061D  01F1               	clrf	___aodiv@counter
  5906  061E  0AF1               	incf	___aodiv@counter,f
  5907  061F                     l1665:
  5908  061F  1BA7               	btfsc	___aodiv@divisor+7,7
  5909  0620  2E2E               	goto	l1667
  5910  0621  35A0               	lslf	___aodiv@divisor,f
  5911  0622  0DA1               	rlf	___aodiv@divisor+1,f
  5912  0623  0DA2               	rlf	___aodiv@divisor+2,f
  5913  0624  0DA3               	rlf	___aodiv@divisor+3,f
  5914  0625  0DA4               	rlf	___aodiv@divisor+4,f
  5915  0626  0DA5               	rlf	___aodiv@divisor+5,f
  5916  0627  0DA6               	rlf	___aodiv@divisor+6,f
  5917  0628  0DA7               	rlf	___aodiv@divisor+7,f
  5918  0629  3001               	movlw	1
  5919  062A  00F0               	movwf	??___aodiv
  5920  062B  0870               	movf	??___aodiv,w
  5921  062C  07F1               	addwf	___aodiv@counter,f
  5922  062D  2E1F               	goto	l1665
  5923  062E                     l1667:
  5924  062E  35F3               	lslf	___aodiv@quotient,f
  5925  062F  0DF4               	rlf	___aodiv@quotient+1,f
  5926  0630  0DF5               	rlf	___aodiv@quotient+2,f
  5927  0631  0DF6               	rlf	___aodiv@quotient+3,f
  5928  0632  0DF7               	rlf	___aodiv@quotient+4,f
  5929  0633  0DF8               	rlf	___aodiv@quotient+5,f
  5930  0634  0DF9               	rlf	___aodiv@quotient+6,f
  5931  0635  0DFA               	rlf	___aodiv@quotient+7,f
  5932  0636  0827               	movf	___aodiv@divisor+7,w
  5933  0637  022F               	subwf	___aodiv@dividend+7,w
  5934  0638  1D03               	skipz
  5935  0639  2E54               	goto	u985
  5936  063A  0826               	movf	___aodiv@divisor+6,w
  5937  063B  022E               	subwf	___aodiv@dividend+6,w
  5938  063C  1D03               	skipz
  5939  063D  2E54               	goto	u985
  5940  063E  0825               	movf	___aodiv@divisor+5,w
  5941  063F  022D               	subwf	___aodiv@dividend+5,w
  5942  0640  1D03               	skipz
  5943  0641  2E54               	goto	u985
  5944  0642  0824               	movf	___aodiv@divisor+4,w
  5945  0643  022C               	subwf	___aodiv@dividend+4,w
  5946  0644  1D03               	skipz
  5947  0645  2E54               	goto	u985
  5948  0646  0823               	movf	___aodiv@divisor+3,w
  5949  0647  022B               	subwf	___aodiv@dividend+3,w
  5950  0648  1D03               	skipz
  5951  0649  2E54               	goto	u985
  5952  064A  0822               	movf	___aodiv@divisor+2,w
  5953  064B  022A               	subwf	___aodiv@dividend+2,w
  5954  064C  1D03               	skipz
  5955  064D  2E54               	goto	u985
  5956  064E  0821               	movf	___aodiv@divisor+1,w
  5957  064F  0229               	subwf	___aodiv@dividend+1,w
  5958  0650  1D03               	skipz
  5959  0651  2E54               	goto	u985
  5960  0652  0820               	movf	___aodiv@divisor,w
  5961  0653  0228               	subwf	___aodiv@dividend,w
  5962  0654                     u985:
  5963  0654  1C03               	skipc
  5964  0655  2E67               	goto	l1675
  5965  0656  0820               	movf	___aodiv@divisor,w
  5966  0657  02A8               	subwf	___aodiv@dividend,f
  5967  0658  0821               	movf	___aodiv@divisor+1,w
  5968  0659  3BA9               	subwfb	___aodiv@dividend+1,f
  5969  065A  0822               	movf	___aodiv@divisor+2,w
  5970  065B  3BAA               	subwfb	___aodiv@dividend+2,f
  5971  065C  0823               	movf	___aodiv@divisor+3,w
  5972  065D  3BAB               	subwfb	___aodiv@dividend+3,f
  5973  065E  0824               	movf	___aodiv@divisor+4,w
  5974  065F  3BAC               	subwfb	___aodiv@dividend+4,f
  5975  0660  0825               	movf	___aodiv@divisor+5,w
  5976  0661  3BAD               	subwfb	___aodiv@dividend+5,f
  5977  0662  0826               	movf	___aodiv@divisor+6,w
  5978  0663  3BAE               	subwfb	___aodiv@dividend+6,f
  5979  0664  0827               	movf	___aodiv@divisor+7,w
  5980  0665  3BAF               	subwfb	___aodiv@dividend+7,f
  5981  0666  1473               	bsf	___aodiv@quotient,0
  5982  0667                     l1675:
  5983  0667  36A7               	lsrf	___aodiv@divisor+7,f
  5984  0668  0CA6               	rrf	___aodiv@divisor+6,f
  5985  0669  0CA5               	rrf	___aodiv@divisor+5,f
  5986  066A  0CA4               	rrf	___aodiv@divisor+4,f
  5987  066B  0CA3               	rrf	___aodiv@divisor+3,f
  5988  066C  0CA2               	rrf	___aodiv@divisor+2,f
  5989  066D  0CA1               	rrf	___aodiv@divisor+1,f
  5990  066E  0CA0               	rrf	___aodiv@divisor,f
  5991  066F  3001               	movlw	1
  5992  0670  02F1               	subwf	___aodiv@counter,f
  5993  0671  1D03               	btfss	3,2
  5994  0672  2E2E               	goto	l1667
  5995  0673                     l1677:
  5996  0673  0872               	movf	___aodiv@sign,w
  5997  0674  1903               	btfsc	3,2
  5998  0675  2E94               	goto	l549
  5999  0676  09F3               	comf	___aodiv@quotient,f
  6000  0677  09F4               	comf	___aodiv@quotient+1,f
  6001  0678  09F5               	comf	___aodiv@quotient+2,f
  6002  0679  09F6               	comf	___aodiv@quotient+3,f
  6003  067A  09F7               	comf	___aodiv@quotient+4,f
  6004  067B  09F8               	comf	___aodiv@quotient+5,f
  6005  067C  09F9               	comf	___aodiv@quotient+6,f
  6006  067D  09FA               	comf	___aodiv@quotient+7,f
  6007  067E  0AF3               	incf	___aodiv@quotient,f
  6008  067F  1D03               	skipz
  6009  0680  2E94               	goto	l549
  6010  0681  0AF4               	incf	___aodiv@quotient+1,f
  6011  0682  1D03               	skipz
  6012  0683  2E94               	goto	l549
  6013  0684  0AF5               	incf	___aodiv@quotient+2,f
  6014  0685  1D03               	skipz
  6015  0686  2E94               	goto	l549
  6016  0687  0AF6               	incf	___aodiv@quotient+3,f
  6017  0688  1D03               	skipz
  6018  0689  2E94               	goto	l549
  6019  068A  0AF7               	incf	___aodiv@quotient+4,f
  6020  068B  1D03               	skipz
  6021  068C  2E94               	goto	l549
  6022  068D  0AF8               	incf	___aodiv@quotient+5,f
  6023  068E  1D03               	skipz
  6024  068F  2E94               	goto	l549
  6025  0690  0AF9               	incf	___aodiv@quotient+6,f
  6026  0691  1D03               	skipz
  6027  0692  2E94               	goto	l549
  6028  0693  0AFA               	incf	___aodiv@quotient+7,f
  6029  0694                     l549:
  6030  0694  0873               	movf	___aodiv@quotient,w
  6031  0695  0020               	movlb	0	; select bank0
  6032  0696  00A0               	movwf	?___aodiv
  6033  0697  0874               	movf	___aodiv@quotient+1,w
  6034  0698  00A1               	movwf	?___aodiv+1
  6035  0699  0875               	movf	___aodiv@quotient+2,w
  6036  069A  00A2               	movwf	?___aodiv+2
  6037  069B  0876               	movf	___aodiv@quotient+3,w
  6038  069C  00A3               	movwf	?___aodiv+3
  6039  069D  0877               	movf	___aodiv@quotient+4,w
  6040  069E  00A4               	movwf	?___aodiv+4
  6041  069F  0878               	movf	___aodiv@quotient+5,w
  6042  06A0  00A5               	movwf	?___aodiv+5
  6043  06A1  0879               	movf	___aodiv@quotient+6,w
  6044  06A2  00A6               	movwf	?___aodiv+6
  6045  06A3  087A               	movf	___aodiv@quotient+7,w
  6046  06A4  00A7               	movwf	?___aodiv+7
  6047  06A5  0008               	return
  6048  06A6                     __end_of___aodiv:
  6049                           
  6050                           	psect	text15
  6051  01F4                     __ptext15:	
  6052 ;; *************** function _serial_init *****************
  6053 ;; Defined at:
  6054 ;;		line 3 in file "uart.c"
  6055 ;; Parameters:    Size  Location     Type
  6056 ;;  baudios         4    0[BANK0 ] unsigned long 
  6057 ;; Auto vars:     Size  Location     Type
  6058 ;;  sx              2    8[BANK0 ] unsigned short 
  6059 ;; Return value:  Size  Location     Type
  6060 ;;                  1    wreg      void 
  6061 ;; Registers used:
  6062 ;;		wreg, status,2, status,0, pclath, cstack
  6063 ;; Tracked objects:
  6064 ;;		On entry : B1F/0
  6065 ;;		On exit  : B1F/1D
  6066 ;;		Unchanged: B00/0
  6067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6068 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6069 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6070 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6071 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6072 ;;Total ram usage:       10 bytes
  6073 ;; Hardware stack levels used: 1
  6074 ;; Hardware stack levels required when called: 1
  6075 ;; This function calls:
  6076 ;;		___lldiv
  6077 ;; This function is called by:
  6078 ;;		_main
  6079 ;; This function uses a non-reentrant model
  6080 ;;
  6081                           
  6082                           
  6083                           ;psect for function _serial_init
  6084  01F4                     _serial_init:
  6085                           
  6086                           ;uart.c: 4:     uint16_t sx;;uart.c: 7:     BAUD1CON = 0x08;
  6087                           
  6088                           ;incstack = 0
  6089                           ; Regs used in _serial_init: [wreg+status,2+status,0+pclath+cstack]
  6090  01F4  3008               	movlw	8
  6091  01F5  0022               	movlb	2	; select bank2
  6092  01F6  009F               	movwf	31	;volatile
  6093                           
  6094                           ;uart.c: 9:     RC1STA = 0b10010000;
  6095  01F7  3090               	movlw	144
  6096  01F8  009D               	movwf	29	;volatile
  6097                           
  6098                           ;uart.c: 15:     TX1STA = 0b00100100;
  6099  01F9  3024               	movlw	36
  6100  01FA  009E               	movwf	30	;volatile
  6101                           
  6102                           ;uart.c: 20:     sx = ((32000000UL/baudios)/4 ) - 1;
  6103  01FB  0020               	movlb	0	; select bank0
  6104  01FC  0823               	movf	serial_init@baudios+3,w
  6105  01FD  00F3               	movwf	___lldiv@divisor+3
  6106  01FE  0822               	movf	serial_init@baudios+2,w
  6107  01FF  00F2               	movwf	___lldiv@divisor+2
  6108  0200  0821               	movf	serial_init@baudios+1,w
  6109  0201  00F1               	movwf	___lldiv@divisor+1
  6110  0202  0820               	movf	serial_init@baudios,w
  6111  0203  00F0               	movwf	___lldiv@divisor
  6112  0204  3001               	movlw	1
  6113  0205  00F7               	movwf	___lldiv@dividend+3
  6114  0206  30E8               	movlw	232
  6115  0207  00F6               	movwf	___lldiv@dividend+2
  6116  0208  3048               	movlw	72
  6117  0209  00F5               	movwf	___lldiv@dividend+1
  6118  020A  3000               	movlw	0
  6119  020B  00F4               	movwf	___lldiv@dividend
  6120  020C  3183  2306  3181   	fcall	___lldiv
  6121  020F  0870               	movf	?___lldiv,w
  6122  0210  00A4               	movwf	??_serial_init
  6123  0211  0871               	movf	?___lldiv+1,w
  6124  0212  00A5               	movwf	??_serial_init+1
  6125  0213  0872               	movf	?___lldiv+2,w
  6126  0214  00A6               	movwf	??_serial_init+2
  6127  0215  0873               	movf	?___lldiv+3,w
  6128  0216  00A7               	movwf	??_serial_init+3
  6129  0217  3002               	movlw	2
  6130  0218                     u1515:
  6131  0218  36A7               	lsrf	??_serial_init+3,f
  6132  0219  0CA6               	rrf	??_serial_init+2,f
  6133  021A  0CA5               	rrf	??_serial_init+1,f
  6134  021B  0CA4               	rrf	??_serial_init,f
  6135  021C  0B89               	decfsz	9,f
  6136  021D  2A18               	goto	u1515
  6137  021E  0824               	movf	??_serial_init,w
  6138  021F  3EFF               	addlw	255
  6139  0220  00A8               	movwf	serial_init@sx
  6140  0221  30FF               	movlw	255
  6141  0222  3D25               	addwfc	??_serial_init+1,w
  6142  0223  00A9               	movwf	serial_init@sx+1
  6143                           
  6144                           ;uart.c: 21:     SP1BRGL = (uint8_t)sx;
  6145  0224  0828               	movf	serial_init@sx,w
  6146  0225  0022               	movlb	2	; select bank2
  6147  0226  009B               	movwf	27	;volatile
  6148                           
  6149                           ;uart.c: 22:     SP1BRGH = (uint8_t)(sx>>8);
  6150  0227  0020               	movlb	0	; select bank0
  6151  0228  0829               	movf	serial_init@sx+1,w
  6152  0229  0022               	movlb	2	; select bank2
  6153  022A  009C               	movwf	28	;volatile
  6154                           
  6155                           ;uart.c: 26:     RC0PPS = 0x10;
  6156  022B  3010               	movlw	16
  6157  022C  003E               	movlb	30	; select bank30
  6158  022D  00A0               	movwf	32	;volatile
  6159                           
  6160                           ;uart.c: 28:     RXPPS = 0x11;
  6161  022E  3011               	movlw	17
  6162  022F  003D               	movlb	29	; select bank29
  6163  0230  00CB               	movwf	75	;volatile
  6164  0231  0008               	return
  6165  0232                     __end_of_serial_init:
  6166                           
  6167                           	psect	text16
  6168  0306                     __ptext16:	
  6169 ;; *************** function ___lldiv *****************
  6170 ;; Defined at:
  6171 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
  6172 ;; Parameters:    Size  Location     Type
  6173 ;;  divisor         4    0[COMMON] unsigned long 
  6174 ;;  dividend        4    4[COMMON] unsigned long 
  6175 ;; Auto vars:     Size  Location     Type
  6176 ;;  quotient        4    9[COMMON] unsigned long 
  6177 ;;  counter         1   13[COMMON] unsigned char 
  6178 ;; Return value:  Size  Location     Type
  6179 ;;                  4    0[COMMON] unsigned long 
  6180 ;; Registers used:
  6181 ;;		wreg, status,2, status,0
  6182 ;; Tracked objects:
  6183 ;;		On entry : B1F/0
  6184 ;;		On exit  : B1F/0
  6185 ;;		Unchanged: B1F/0
  6186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6187 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6188 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6189 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6190 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6191 ;;Total ram usage:       14 bytes
  6192 ;; Hardware stack levels used: 1
  6193 ;; This function calls:
  6194 ;;		Nothing
  6195 ;; This function is called by:
  6196 ;;		_serial_init
  6197 ;; This function uses a non-reentrant model
  6198 ;;
  6199                           
  6200                           
  6201                           ;psect for function ___lldiv
  6202  0306                     ___lldiv:
  6203                           
  6204                           ;incstack = 0
  6205                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6206  0306  3000               	movlw	0
  6207  0307  00FC               	movwf	___lldiv@quotient+3
  6208  0308  3000               	movlw	0
  6209  0309  00FB               	movwf	___lldiv@quotient+2
  6210  030A  3000               	movlw	0
  6211  030B  00FA               	movwf	___lldiv@quotient+1
  6212  030C  3000               	movlw	0
  6213  030D  00F9               	movwf	___lldiv@quotient
  6214  030E  0873               	movf	___lldiv@divisor+3,w
  6215  030F  0472               	iorwf	___lldiv@divisor+2,w
  6216  0310  0471               	iorwf	___lldiv@divisor+1,w
  6217  0311  0470               	iorwf	___lldiv@divisor,w
  6218  0312  1903               	skipnz
  6219  0313  2B4F               	goto	l1931
  6220  0314  01FD               	clrf	___lldiv@counter
  6221  0315  0AFD               	incf	___lldiv@counter,f
  6222  0316                     l1917:
  6223  0316  1BF3               	btfsc	___lldiv@divisor+3,7
  6224  0317  2B24               	goto	l1919
  6225  0318  3001               	movlw	1
  6226  0319                     u1445:
  6227  0319  35F0               	lslf	___lldiv@divisor,f
  6228  031A  0DF1               	rlf	___lldiv@divisor+1,f
  6229  031B  0DF2               	rlf	___lldiv@divisor+2,f
  6230  031C  0DF3               	rlf	___lldiv@divisor+3,f
  6231  031D  0B89               	decfsz	9,f
  6232  031E  2B19               	goto	u1445
  6233  031F  3001               	movlw	1
  6234  0320  00F8               	movwf	??___lldiv
  6235  0321  0878               	movf	??___lldiv,w
  6236  0322  07FD               	addwf	___lldiv@counter,f
  6237  0323  2B16               	goto	l1917
  6238  0324                     l1919:
  6239  0324  3001               	movlw	1
  6240  0325                     u1465:
  6241  0325  35F9               	lslf	___lldiv@quotient,f
  6242  0326  0DFA               	rlf	___lldiv@quotient+1,f
  6243  0327  0DFB               	rlf	___lldiv@quotient+2,f
  6244  0328  0DFC               	rlf	___lldiv@quotient+3,f
  6245  0329  0B89               	decfsz	9,f
  6246  032A  2B25               	goto	u1465
  6247  032B  0873               	movf	___lldiv@divisor+3,w
  6248  032C  0277               	subwf	___lldiv@dividend+3,w
  6249  032D  1D03               	skipz
  6250  032E  2B39               	goto	u1475
  6251  032F  0872               	movf	___lldiv@divisor+2,w
  6252  0330  0276               	subwf	___lldiv@dividend+2,w
  6253  0331  1D03               	skipz
  6254  0332  2B39               	goto	u1475
  6255  0333  0871               	movf	___lldiv@divisor+1,w
  6256  0334  0275               	subwf	___lldiv@dividend+1,w
  6257  0335  1D03               	skipz
  6258  0336  2B39               	goto	u1475
  6259  0337  0870               	movf	___lldiv@divisor,w
  6260  0338  0274               	subwf	___lldiv@dividend,w
  6261  0339                     u1475:
  6262  0339  1C03               	skipc
  6263  033A  2B44               	goto	l1927
  6264  033B  0870               	movf	___lldiv@divisor,w
  6265  033C  02F4               	subwf	___lldiv@dividend,f
  6266  033D  0871               	movf	___lldiv@divisor+1,w
  6267  033E  3BF5               	subwfb	___lldiv@dividend+1,f
  6268  033F  0872               	movf	___lldiv@divisor+2,w
  6269  0340  3BF6               	subwfb	___lldiv@dividend+2,f
  6270  0341  0873               	movf	___lldiv@divisor+3,w
  6271  0342  3BF7               	subwfb	___lldiv@dividend+3,f
  6272  0343  1479               	bsf	___lldiv@quotient,0
  6273  0344                     l1927:
  6274  0344  3001               	movlw	1
  6275  0345                     u1485:
  6276  0345  36F3               	lsrf	___lldiv@divisor+3,f
  6277  0346  0CF2               	rrf	___lldiv@divisor+2,f
  6278  0347  0CF1               	rrf	___lldiv@divisor+1,f
  6279  0348  0CF0               	rrf	___lldiv@divisor,f
  6280  0349  0B89               	decfsz	9,f
  6281  034A  2B45               	goto	u1485
  6282  034B  3001               	movlw	1
  6283  034C  02FD               	subwf	___lldiv@counter,f
  6284  034D  1D03               	btfss	3,2
  6285  034E  2B24               	goto	l1919
  6286  034F                     l1931:
  6287  034F  087C               	movf	___lldiv@quotient+3,w
  6288  0350  00F3               	movwf	?___lldiv+3
  6289  0351  087B               	movf	___lldiv@quotient+2,w
  6290  0352  00F2               	movwf	?___lldiv+2
  6291  0353  087A               	movf	___lldiv@quotient+1,w
  6292  0354  00F1               	movwf	?___lldiv+1
  6293  0355  0879               	movf	___lldiv@quotient,w
  6294  0356  00F0               	movwf	?___lldiv
  6295  0357  0008               	return
  6296  0358                     __end_of___lldiv:
  6297                           
  6298                           	psect	text17
  6299  00E5                     __ptext17:	
  6300 ;; *************** function _port_init *****************
  6301 ;; Defined at:
  6302 ;;		line 110 in file "Main.c"
  6303 ;; Parameters:    Size  Location     Type
  6304 ;;		None
  6305 ;; Auto vars:     Size  Location     Type
  6306 ;;		None
  6307 ;; Return value:  Size  Location     Type
  6308 ;;                  1    wreg      void 
  6309 ;; Registers used:
  6310 ;;		wreg, status,2
  6311 ;; Tracked objects:
  6312 ;;		On entry : B1F/1
  6313 ;;		On exit  : B1F/0
  6314 ;;		Unchanged: B00/0
  6315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6320 ;;Total ram usage:        0 bytes
  6321 ;; Hardware stack levels used: 1
  6322 ;; This function calls:
  6323 ;;		Nothing
  6324 ;; This function is called by:
  6325 ;;		_main
  6326 ;; This function uses a non-reentrant model
  6327 ;;
  6328                           
  6329                           
  6330                           ;psect for function _port_init
  6331  00E5                     _port_init:
  6332                           
  6333                           ;Main.c: 112:     ANSELA = 0;
  6334                           
  6335                           ;incstack = 0
  6336                           ; Regs used in _port_init: [wreg+status,2]
  6337  00E5  003E               	movlb	30	; select bank30
  6338  00E6  01B8               	clrf	56	;volatile
  6339                           
  6340                           ;Main.c: 113:     LATA=0;
  6341  00E7  0020               	movlb	0	; select bank0
  6342  00E8  0196               	clrf	22	;volatile
  6343                           
  6344                           ;Main.c: 114:     PORTA =0;
  6345  00E9  018C               	clrf	12	;volatile
  6346                           
  6347                           ;Main.c: 115:     TRISA = 0b11110000;
  6348  00EA  30F0               	movlw	240
  6349  00EB  0091               	movwf	17	;volatile
  6350                           
  6351                           ;Main.c: 118:     ANSELA = ANSELA | (1<<4);
  6352  00EC  003E               	movlb	30	; select bank30
  6353  00ED  0838               	movf	56,w	;volatile
  6354  00EE  3810               	iorlw	16
  6355  00EF  00B8               	movwf	56	;volatile
  6356                           
  6357                           ;Main.c: 120:     LATB=0;
  6358  00F0  0020               	movlb	0	; select bank0
  6359  00F1  0197               	clrf	23	;volatile
  6360                           
  6361                           ;Main.c: 121:     PORTB =0;
  6362  00F2  018D               	clrf	13	;volatile
  6363                           
  6364                           ;Main.c: 122:     TRISB = TRISA | (1<<0);
  6365  00F3  0811               	movf	17,w	;volatile
  6366  00F4  3801               	iorlw	1
  6367  00F5  0092               	movwf	18	;volatile
  6368                           
  6369                           ;Main.c: 123:     ANSELB = ANSELB | (1<<0);
  6370  00F6  003E               	movlb	30	; select bank30
  6371  00F7  0843               	movf	67,w	;volatile
  6372  00F8  3801               	iorlw	1
  6373  00F9  00C3               	movwf	67	;volatile
  6374                           
  6375                           ;Main.c: 125:     TRISC = 0b10;
  6376  00FA  3002               	movlw	2
  6377  00FB  0020               	movlb	0	; select bank0
  6378  00FC  0093               	movwf	19	;volatile
  6379                           
  6380                           ;Main.c: 126:     ANSELC = 0;
  6381  00FD  003E               	movlb	30	; select bank30
  6382  00FE  01CE               	clrf	78	;volatile
  6383                           
  6384                           ;Main.c: 128:     TRISC = TRISC | (1<<4 |1<<3 );
  6385  00FF  0020               	movlb	0	; select bank0
  6386  0100  0813               	movf	19,w	;volatile
  6387  0101  3818               	iorlw	24
  6388  0102  0093               	movwf	19	;volatile
  6389  0103  0008               	return
  6390  0104                     __end_of_port_init:
  6391                           
  6392                           	psect	text18
  6393  0358                     __ptext18:	
  6394 ;; *************** function _lcd_puts *****************
  6395 ;; Defined at:
  6396 ;;		line 225 in file "LCD_i2c.c"
  6397 ;; Parameters:    Size  Location     Type
  6398 ;;  dato            1    wreg     PTR unsigned char 
  6399 ;;		 -> main@buffer(50), 
  6400 ;; Auto vars:     Size  Location     Type
  6401 ;;  dato            1   13[COMMON] PTR unsigned char 
  6402 ;;		 -> main@buffer(50), 
  6403 ;; Return value:  Size  Location     Type
  6404 ;;                  1    wreg      void 
  6405 ;; Registers used:
  6406 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6407 ;; Tracked objects:
  6408 ;;		On entry : 1F/1
  6409 ;;		On exit  : 1E/0
  6410 ;;		Unchanged: 0/0
  6411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6413 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6414 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6415 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6416 ;;Total ram usage:        3 bytes
  6417 ;; Hardware stack levels used: 1
  6418 ;; Hardware stack levels required when called: 5
  6419 ;; This function calls:
  6420 ;;		_lcd_gotoxy
  6421 ;;		_lcd_send_byte
  6422 ;; This function is called by:
  6423 ;;		_main
  6424 ;; This function uses a non-reentrant model
  6425 ;;
  6426                           
  6427                           
  6428                           ;psect for function _lcd_puts
  6429  0358                     _lcd_puts:
  6430                           
  6431                           ;incstack = 0
  6432                           ; Regs used in _lcd_puts: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6433                           ;lcd_puts@dato stored from wreg
  6434  0358  00FD               	movwf	lcd_puts@dato
  6435                           
  6436                           ;LCD_i2c.c: 226:    while (*dato){
  6437  0359  2B91               	goto	l2055
  6438  035A                     l2035:
  6439                           
  6440                           ;LCD_i2c.c: 231:             lcd_send_byte(0,1);
  6441  035A  01F6               	clrf	lcd_send_byte@n
  6442  035B  0AF6               	incf	lcd_send_byte@n,f
  6443  035C  3000               	movlw	0
  6444  035D  3180  2081  3183   	fcall	_lcd_send_byte
  6445                           
  6446                           ;LCD_i2c.c: 232:             _delay((unsigned long)((2)*(32000000UL/4000.0)));
  6447  0360  3015               	movlw	21
  6448  0361  0020               	movlb	0	; select bank0
  6449  0362  00A2               	movwf	??_lcd_puts
  6450  0363  30C6               	movlw	198
  6451  0364                     u1607:
  6452  0364  0B89               	decfsz	9,f
  6453  0365  2B64               	goto	u1607
  6454  0366  0BA2               	decfsz	??_lcd_puts,f
  6455  0367  2B64               	goto	u1607
  6456  0368  0000               	nop
  6457                           
  6458                           ;LCD_i2c.c: 233:             g_LcdX = 0;
  6459  0369  0021               	movlb	1	; select bank1
  6460  036A  01E7               	clrf	_g_LcdX^(0+128)
  6461                           
  6462                           ;LCD_i2c.c: 234:             g_LcdY = 0;
  6463  036B  0020               	movlb	0	; select bank0
  6464  036C  01EF               	clrf	_g_LcdY
  6465                           
  6466                           ;LCD_i2c.c: 235:             _delay((unsigned long)((2)*(32000000UL/4000.0)));
  6467  036D  3015               	movlw	21
  6468  036E  0020               	movlb	0	; select bank0
  6469  036F  00A2               	movwf	??_lcd_puts
  6470  0370  30C6               	movlw	198
  6471  0371                     u1617:
  6472  0371  0B89               	decfsz	9,f
  6473  0372  2B71               	goto	u1617
  6474  0373  0BA2               	decfsz	??_lcd_puts,f
  6475  0374  2B71               	goto	u1617
  6476  0375  0000               	nop
  6477                           
  6478                           ;LCD_i2c.c: 236:             break;
  6479  0376  2B8C               	goto	l2053
  6480  0377                     l2045:
  6481                           
  6482                           ;LCD_i2c.c: 238:             lcd_gotoxy(1, g_LcdY+2);
  6483  0377  086F               	movf	_g_LcdY,w
  6484  0378  3E02               	addlw	2
  6485  0379  00A2               	movwf	??_lcd_puts
  6486  037A  0822               	movf	??_lcd_puts,w
  6487  037B  00FA               	movwf	lcd_gotoxy@y
  6488  037C  3001               	movlw	1
  6489  037D  3181  21B6  3183   	fcall	_lcd_gotoxy
  6490                           
  6491                           ;LCD_i2c.c: 239:             break;
  6492  0380  2B8C               	goto	l2053
  6493  0381                     l2047:
  6494                           
  6495                           ;LCD_i2c.c: 241:             lcd_send_byte(1,*dato);
  6496  0381  087D               	movf	lcd_puts@dato,w
  6497  0382  0086               	movwf	6
  6498  0383  0187               	clrf	7
  6499  0384  0801               	movf	1,w
  6500  0385  00A2               	movwf	??_lcd_puts
  6501  0386  0822               	movf	??_lcd_puts,w
  6502  0387  00F6               	movwf	lcd_send_byte@n
  6503  0388  3001               	movlw	1
  6504  0389  3180  2081  3183   	fcall	_lcd_send_byte
  6505  038C                     l2053:	
  6506                           ;LCD_i2c.c: 242:             break;
  6507                           
  6508                           
  6509                           ;LCD_i2c.c: 246:       dato++;
  6510  038C  3001               	movlw	1
  6511  038D  0020               	movlb	0	; select bank0
  6512  038E  00A2               	movwf	??_lcd_puts
  6513  038F  0822               	movf	??_lcd_puts,w
  6514  0390  07FD               	addwf	lcd_puts@dato,f
  6515  0391                     l2055:
  6516                           
  6517                           ;LCD_i2c.c: 226:    while (*dato){
  6518  0391  087D               	movf	lcd_puts@dato,w
  6519  0392  0086               	movwf	6
  6520  0393  0187               	clrf	7
  6521  0394  0801               	movf	1,w
  6522  0395  1903               	btfsc	3,2
  6523  0396  0008               	return
  6524  0397  087D               	movf	lcd_puts@dato,w
  6525  0398  0086               	movwf	6
  6526  0399  0187               	clrf	7
  6527  039A  0801               	movf	1,w
  6528  039B  0020               	movlb	0	; select bank0
  6529  039C  00A2               	movwf	??_lcd_puts
  6530  039D  01A3               	clrf	??_lcd_puts+1
  6531                           
  6532                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6533                           ; Switch size 1, requested type "simple"
  6534                           ; Number of cases is 1, Range of values is 0 to 0
  6535                           ; switch strategies available:
  6536                           ; Name         Instructions Cycles
  6537                           ; simple_byte            4     3 (average)
  6538                           ; direct_byte            8     6 (fixed)
  6539                           ; jumptable            260     6 (fixed)
  6540                           ;	Chosen strategy is simple_byte
  6541  039E  0823               	movf	??_lcd_puts+1,w
  6542  039F  3A00               	xorlw	0	; case 0
  6543  03A0  1903               	skipnz
  6544  03A1  2BA3               	goto	l2147
  6545  03A2  2B81               	goto	l2047
  6546  03A3                     l2147:
  6547                           
  6548                           ; Switch size 1, requested type "simple"
  6549                           ; Number of cases is 2, Range of values is 10 to 12
  6550                           ; switch strategies available:
  6551                           ; Name         Instructions Cycles
  6552                           ; simple_byte            7     4 (average)
  6553                           ; direct_byte           15     9 (fixed)
  6554                           ; jumptable            263     9 (fixed)
  6555                           ;	Chosen strategy is simple_byte
  6556  03A3  0822               	movf	??_lcd_puts,w
  6557  03A4  3A0A               	xorlw	10	; case 10
  6558  03A5  1903               	skipnz
  6559  03A6  2B77               	goto	l2045
  6560  03A7  3A06               	xorlw	6	; case 12
  6561  03A8  1903               	skipnz
  6562  03A9  2B5A               	goto	l2035
  6563  03AA  2B81               	goto	l2047
  6564  03AB  2B8C               	goto	l2053
  6565  03AC                     __end_of_lcd_puts:
  6566                           
  6567                           	psect	text19
  6568  01B6                     __ptext19:	
  6569 ;; *************** function _lcd_gotoxy *****************
  6570 ;; Defined at:
  6571 ;;		line 177 in file "LCD_i2c.c"
  6572 ;; Parameters:    Size  Location     Type
  6573 ;;  x               1    wreg     unsigned char 
  6574 ;;  y               1   10[COMMON] unsigned char 
  6575 ;; Auto vars:     Size  Location     Type
  6576 ;;  x               1    0[BANK0 ] unsigned char 
  6577 ;;  address         1    1[BANK0 ] unsigned char 
  6578 ;; Return value:  Size  Location     Type
  6579 ;;                  1    wreg      void 
  6580 ;; Registers used:
  6581 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6582 ;; Tracked objects:
  6583 ;;		On entry : 1F/0
  6584 ;;		On exit  : 1F/0
  6585 ;;		Unchanged: 0/0
  6586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6587 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6588 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6589 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6590 ;;      Totals:         3       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6591 ;;Total ram usage:        5 bytes
  6592 ;; Hardware stack levels used: 1
  6593 ;; Hardware stack levels required when called: 4
  6594 ;; This function calls:
  6595 ;;		_lcd_send_byte
  6596 ;; This function is called by:
  6597 ;;		_lcd_puts
  6598 ;; This function uses a non-reentrant model
  6599 ;;
  6600                           
  6601                           
  6602                           ;psect for function _lcd_gotoxy
  6603  01B6                     _lcd_gotoxy:
  6604                           
  6605                           ;incstack = 0
  6606                           ; Regs used in _lcd_gotoxy: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6607                           ;lcd_gotoxy@x stored from wreg
  6608  01B6  00A0               	movwf	lcd_gotoxy@x
  6609                           
  6610                           ;LCD_i2c.c: 177: void lcd_gotoxy(int8 x, int8 y);LCD_i2c.c: 178: {;LCD_i2c.c: 179:    in
      +                          t8 address;;LCD_i2c.c: 181:    switch(y)
  6611  01B7  29C3               	goto	l1895
  6612  01B8                     l1883:
  6613                           
  6614                           ;LCD_i2c.c: 184:          address = 0x00;
  6615  01B8  01A1               	clrf	lcd_gotoxy@address
  6616                           
  6617                           ;LCD_i2c.c: 185:          break;
  6618  01B9  29D9               	goto	l1897
  6619  01BA                     l1885:
  6620                           
  6621                           ;LCD_i2c.c: 187:          address = 0x40;
  6622  01BA  3040               	movlw	64
  6623  01BB  29BF               	goto	L3
  6624  01BC                     l1887:	
  6625                           ;LCD_i2c.c: 188:          break;
  6626                           
  6627                           
  6628                           ;LCD_i2c.c: 190:          address = 0x14;
  6629  01BC  3014               	movlw	20
  6630  01BD  29BF               	goto	L3
  6631  01BE                     l1889:	
  6632                           ;LCD_i2c.c: 191:          break;
  6633                           
  6634                           
  6635                           ;LCD_i2c.c: 193:          address = 0x54;
  6636  01BE  3054               	movlw	84
  6637  01BF                     L3:
  6638  01BF  00FB               	movwf	??_lcd_gotoxy
  6639  01C0  087B               	movf	??_lcd_gotoxy,w
  6640  01C1  00A1               	movwf	lcd_gotoxy@address
  6641                           
  6642                           ;LCD_i2c.c: 194:          break;
  6643  01C2  29D9               	goto	l1897
  6644  01C3                     l1895:
  6645  01C3  087A               	movf	lcd_gotoxy@y,w
  6646  01C4  00FB               	movwf	??_lcd_gotoxy
  6647  01C5  01FC               	clrf	??_lcd_gotoxy+1
  6648                           
  6649                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6650                           ; Switch size 1, requested type "simple"
  6651                           ; Number of cases is 1, Range of values is 0 to 0
  6652                           ; switch strategies available:
  6653                           ; Name         Instructions Cycles
  6654                           ; simple_byte            4     3 (average)
  6655                           ; direct_byte            8     6 (fixed)
  6656                           ; jumptable            260     6 (fixed)
  6657                           ;	Chosen strategy is simple_byte
  6658  01C6  087C               	movf	??_lcd_gotoxy+1,w
  6659  01C7  3A00               	xorlw	0	; case 0
  6660  01C8  1903               	skipnz
  6661  01C9  29CB               	goto	l2149
  6662  01CA  29B8               	goto	l1883
  6663  01CB                     l2149:
  6664                           
  6665                           ; Switch size 1, requested type "simple"
  6666                           ; Number of cases is 4, Range of values is 1 to 4
  6667                           ; switch strategies available:
  6668                           ; Name         Instructions Cycles
  6669                           ; simple_byte           13     7 (average)
  6670                           ; direct_byte           17     9 (fixed)
  6671                           ; jumptable            263     9 (fixed)
  6672                           ;	Chosen strategy is simple_byte
  6673  01CB  087B               	movf	??_lcd_gotoxy,w
  6674  01CC  3A01               	xorlw	1	; case 1
  6675  01CD  1903               	skipnz
  6676  01CE  29B8               	goto	l1883
  6677  01CF  3A03               	xorlw	3	; case 2
  6678  01D0  1903               	skipnz
  6679  01D1  29BA               	goto	l1885
  6680  01D2  3A01               	xorlw	1	; case 3
  6681  01D3  1903               	skipnz
  6682  01D4  29BC               	goto	l1887
  6683  01D5  3A07               	xorlw	7	; case 4
  6684  01D6  1903               	skipnz
  6685  01D7  29BE               	goto	l1889
  6686  01D8  29B8               	goto	l1883
  6687  01D9                     l1897:
  6688                           
  6689                           ;LCD_i2c.c: 199:    address += x-1;
  6690  01D9  0820               	movf	lcd_gotoxy@x,w
  6691  01DA  3EFF               	addlw	255
  6692  01DB  00FB               	movwf	??_lcd_gotoxy
  6693  01DC  087B               	movf	??_lcd_gotoxy,w
  6694  01DD  07A1               	addwf	lcd_gotoxy@address,f
  6695                           
  6696                           ;LCD_i2c.c: 200:    lcd_send_byte(0, 0x80 | address);
  6697  01DE  0821               	movf	lcd_gotoxy@address,w
  6698  01DF  3880               	iorlw	128
  6699  01E0  00FB               	movwf	??_lcd_gotoxy
  6700  01E1  087B               	movf	??_lcd_gotoxy,w
  6701  01E2  00F6               	movwf	lcd_send_byte@n
  6702  01E3  3000               	movlw	0
  6703  01E4  3180  2081         	fcall	_lcd_send_byte
  6704                           
  6705                           ;LCD_i2c.c: 202:    g_LcdX = x - 1;
  6706  01E6  0020               	movlb	0	; select bank0
  6707  01E7  0820               	movf	lcd_gotoxy@x,w
  6708  01E8  3EFF               	addlw	255
  6709  01E9  00FB               	movwf	??_lcd_gotoxy
  6710  01EA  087B               	movf	??_lcd_gotoxy,w
  6711  01EB  0021               	movlb	1	; select bank1
  6712  01EC  00E7               	movwf	_g_LcdX^(0+128)
  6713                           
  6714                           ;LCD_i2c.c: 203:    g_LcdY = y - 1;
  6715  01ED  087A               	movf	lcd_gotoxy@y,w
  6716  01EE  3EFF               	addlw	255
  6717  01EF  00FB               	movwf	??_lcd_gotoxy
  6718  01F0  087B               	movf	??_lcd_gotoxy,w
  6719  01F1  0020               	movlb	0	; select bank0
  6720  01F2  00EF               	movwf	_g_LcdY
  6721  01F3  0008               	return
  6722  01F4                     __end_of_lcd_gotoxy:
  6723                           
  6724                           	psect	text20
  6725  03AC                     __ptext20:	
  6726 ;; *************** function _lcd_init *****************
  6727 ;; Defined at:
  6728 ;;		line 140 in file "LCD_i2c.c"
  6729 ;; Parameters:    Size  Location     Type
  6730 ;;		None
  6731 ;; Auto vars:     Size  Location     Type
  6732 ;;  i               1   12[COMMON] unsigned char 
  6733 ;; Return value:  Size  Location     Type
  6734 ;;                  1    wreg      void 
  6735 ;; Registers used:
  6736 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6737 ;; Tracked objects:
  6738 ;;		On entry : B1F/3
  6739 ;;		On exit  : 1F/0
  6740 ;;		Unchanged: 0/0
  6741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6743 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6744 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6745 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6746 ;;Total ram usage:        3 bytes
  6747 ;; Hardware stack levels used: 1
  6748 ;; Hardware stack levels required when called: 4
  6749 ;; This function calls:
  6750 ;;		_I2C_start
  6751 ;;		_I2C_stop
  6752 ;;		_I2C_write
  6753 ;;		_Send_D7_D4
  6754 ;;		_lcd_send_byte
  6755 ;; This function is called by:
  6756 ;;		_main
  6757 ;; This function uses a non-reentrant model
  6758 ;;
  6759                           
  6760                           
  6761                           ;psect for function _lcd_init
  6762  03AC                     _lcd_init:
  6763                           
  6764                           ;LCD_i2c.c: 141:    int8 i;;LCD_i2c.c: 142:    I2C_start();
  6765                           
  6766                           ;incstack = 0
  6767                           ; Regs used in _lcd_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6768  03AC  3180  2019  3183   	fcall	_I2C_start
  6769                           
  6770                           ;LCD_i2c.c: 143:    I2C_write(32|(7<<1));
  6771  03AF  302E               	movlw	46
  6772  03B0  3180  202E  3183   	fcall	_I2C_write
  6773                           
  6774                           ;LCD_i2c.c: 144:    I2C_write(0x00);
  6775  03B3  3000               	movlw	0
  6776  03B4  3180  202E  3183   	fcall	_I2C_write
  6777                           
  6778                           ;LCD_i2c.c: 145:    I2C_stop();
  6779  03B7  3180  201E  3183   	fcall	_I2C_stop
  6780                           
  6781                           ;LCD_i2c.c: 149:    _delay((unsigned long)((35)*(32000000UL/4000.0)));
  6782  03BA  3002               	movlw	2
  6783  03BB  00FB               	movwf	??_lcd_init+1
  6784  03BC  306C               	movlw	108
  6785  03BD  00FA               	movwf	??_lcd_init
  6786  03BE  30A0               	movlw	160
  6787  03BF                     u1627:
  6788  03BF  0B89               	decfsz	9,f
  6789  03C0  2BBF               	goto	u1627
  6790  03C1  0BFA               	decfsz	??_lcd_init,f
  6791  03C2  2BBF               	goto	u1627
  6792  03C3  0BFB               	decfsz	??_lcd_init+1,f
  6793  03C4  2BBF               	goto	u1627
  6794                           
  6795                           ;LCD_i2c.c: 151:    for(i=0 ;i < 3; i++){
  6796  03C5  01FC               	clrf	lcd_init@i
  6797  03C6                     l1995:
  6798                           
  6799                           ;LCD_i2c.c: 152:       Send_D7_D4(0,0x03);
  6800  03C6  3003               	movlw	3
  6801  03C7  00FA               	movwf	??_lcd_init
  6802  03C8  087A               	movf	??_lcd_init,w
  6803  03C9  00F2               	movwf	Send_D7_D4@nibble
  6804  03CA  3000               	movlw	0
  6805  03CB  3182  2277  3183   	fcall	_Send_D7_D4
  6806                           
  6807                           ;LCD_i2c.c: 153:       _delay((unsigned long)((5)*(32000000UL/4000.0)));
  6808  03CE  3034               	movlw	52
  6809  03CF  00FA               	movwf	??_lcd_init
  6810  03D0  30F2               	movlw	242
  6811  03D1                     u1637:
  6812  03D1  0B89               	decfsz	9,f
  6813  03D2  2BD1               	goto	u1637
  6814  03D3  0BFA               	decfsz	??_lcd_init,f
  6815  03D4  2BD1               	goto	u1637
  6816                           
  6817                           ;LCD_i2c.c: 154:    }
  6818  03D5  3001               	movlw	1
  6819  03D6  00FA               	movwf	??_lcd_init
  6820  03D7  087A               	movf	??_lcd_init,w
  6821  03D8  07FC               	addwf	lcd_init@i,f
  6822  03D9  3003               	movlw	3
  6823  03DA  027C               	subwf	lcd_init@i,w
  6824  03DB  1C03               	skipc
  6825  03DC  2BC6               	goto	l1995
  6826                           
  6827                           ;LCD_i2c.c: 155:     Send_D7_D4(0,0x02);
  6828  03DD  3002               	movlw	2
  6829  03DE  00FA               	movwf	??_lcd_init
  6830  03DF  087A               	movf	??_lcd_init,w
  6831  03E0  00F2               	movwf	Send_D7_D4@nibble
  6832  03E1  3000               	movlw	0
  6833  03E2  3182  2277  3183   	fcall	_Send_D7_D4
  6834                           
  6835                           ;LCD_i2c.c: 168:    for(i=0; i < sizeof(LCD_INIT_STRING); i++)
  6836  03E5  01FC               	clrf	lcd_init@i
  6837  03E6                     l2011:
  6838                           
  6839                           ;LCD_i2c.c: 169:    {;LCD_i2c.c: 170:       lcd_send_byte(0, LCD_INIT_STRING[i]);
  6840  03E6  087C               	movf	lcd_init@i,w
  6841  03E7  3E00               	addlw	low (_LCD_INIT_STRING| (0+32768))
  6842  03E8  0084               	movwf	4
  6843  03E9  3088               	movlw	high (_LCD_INIT_STRING| (0+32768))
  6844  03EA  1803               	skipnc
  6845  03EB  3E01               	addlw	1
  6846  03EC  0085               	movwf	5
  6847  03ED  0800               	movf	0,w	;code access
  6848  03EE  00FA               	movwf	??_lcd_init
  6849  03EF  087A               	movf	??_lcd_init,w
  6850  03F0  00F6               	movwf	lcd_send_byte@n
  6851  03F1  3000               	movlw	0
  6852  03F2  3180  2081  3183   	fcall	_lcd_send_byte
  6853                           
  6854                           ;LCD_i2c.c: 171:       _delay((unsigned long)((5)*(32000000UL/4000.0)));
  6855  03F5  3034               	movlw	52
  6856  03F6  00FA               	movwf	??_lcd_init
  6857  03F7  30F2               	movlw	242
  6858  03F8                     u1647:
  6859  03F8  0B89               	decfsz	9,f
  6860  03F9  2BF8               	goto	u1647
  6861  03FA  0BFA               	decfsz	??_lcd_init,f
  6862  03FB  2BF8               	goto	u1647
  6863                           
  6864                           ;LCD_i2c.c: 172:    }
  6865  03FC  3001               	movlw	1
  6866  03FD  00FA               	movwf	??_lcd_init
  6867  03FE  087A               	movf	??_lcd_init,w
  6868  03FF  07FC               	addwf	lcd_init@i,f
  6869  0400  3004               	movlw	4
  6870  0401  027C               	subwf	lcd_init@i,w
  6871  0402  1C03               	skipc
  6872  0403  2BE6               	goto	l2011
  6873                           
  6874                           ;LCD_i2c.c: 173:    g_LcdX = 0;
  6875  0404  0021               	movlb	1	; select bank1
  6876  0405  01E7               	clrf	_g_LcdX^(0+128)
  6877                           
  6878                           ;LCD_i2c.c: 174:    g_LcdY = 0;
  6879  0406  0020               	movlb	0	; select bank0
  6880  0407  01EF               	clrf	_g_LcdY
  6881  0408  0008               	return
  6882  0409                     __end_of_lcd_init:
  6883                           
  6884                           	psect	text21
  6885  0081                     __ptext21:	
  6886 ;; *************** function _lcd_send_byte *****************
  6887 ;; Defined at:
  6888 ;;		line 134 in file "LCD_i2c.c"
  6889 ;; Parameters:    Size  Location     Type
  6890 ;;  address         1    wreg     unsigned char 
  6891 ;;  n               1    6[COMMON] unsigned char 
  6892 ;; Auto vars:     Size  Location     Type
  6893 ;;  address         1    9[COMMON] unsigned char 
  6894 ;; Return value:  Size  Location     Type
  6895 ;;                  1    wreg      void 
  6896 ;; Registers used:
  6897 ;;		wreg, status,2, status,0, pclath, cstack
  6898 ;; Tracked objects:
  6899 ;;		On entry : 0/0
  6900 ;;		On exit  : 1F/3
  6901 ;;		Unchanged: 0/0
  6902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6903 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6904 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6905 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6906 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6907 ;;Total ram usage:        4 bytes
  6908 ;; Hardware stack levels used: 1
  6909 ;; Hardware stack levels required when called: 3
  6910 ;; This function calls:
  6911 ;;		_Send_D7_D4
  6912 ;; This function is called by:
  6913 ;;		_lcd_init
  6914 ;;		_lcd_gotoxy
  6915 ;;		_lcd_puts
  6916 ;; This function uses a non-reentrant model
  6917 ;;
  6918                           
  6919                           
  6920                           ;psect for function _lcd_send_byte
  6921  0081                     _lcd_send_byte:
  6922                           
  6923                           ;incstack = 0
  6924                           ; Regs used in _lcd_send_byte: [wreg+status,2+status,0+pclath+cstack]
  6925                           ;lcd_send_byte@address stored from wreg
  6926  0081  00F9               	movwf	lcd_send_byte@address
  6927                           
  6928                           ;LCD_i2c.c: 134: void lcd_send_byte(int8 address, int8 n);LCD_i2c.c: 135: {;LCD_i2c.c: 1
      +                          36:    Send_D7_D4(address,n >> 4);
  6929  0082  0876               	movf	lcd_send_byte@n,w
  6930  0083  00F7               	movwf	??_lcd_send_byte
  6931  0084  3004               	movlw	4
  6932  0085                     u1385:
  6933  0085  36F7               	lsrf	??_lcd_send_byte,f
  6934  0086  0B89               	decfsz	9,f
  6935  0087  2885               	goto	u1385
  6936  0088  0877               	movf	??_lcd_send_byte,w
  6937  0089  00F8               	movwf	??_lcd_send_byte+1
  6938  008A  0878               	movf	??_lcd_send_byte+1,w
  6939  008B  00F2               	movwf	Send_D7_D4@nibble
  6940  008C  0879               	movf	lcd_send_byte@address,w
  6941  008D  3182  2277  3180   	fcall	_Send_D7_D4
  6942                           
  6943                           ;LCD_i2c.c: 137:    Send_D7_D4(address,n & 0xf);
  6944  0090  0876               	movf	lcd_send_byte@n,w
  6945  0091  390F               	andlw	15
  6946  0092  00F7               	movwf	??_lcd_send_byte
  6947  0093  0877               	movf	??_lcd_send_byte,w
  6948  0094  00F2               	movwf	Send_D7_D4@nibble
  6949  0095  0879               	movf	lcd_send_byte@address,w
  6950  0096  3182  2277         	fcall	_Send_D7_D4
  6951  0098  0008               	return
  6952  0099                     __end_of_lcd_send_byte:
  6953                           
  6954                           	psect	text22
  6955  0277                     __ptext22:	
  6956 ;; *************** function _Send_D7_D4 *****************
  6957 ;; Defined at:
  6958 ;;		line 114 in file "LCD_i2c.c"
  6959 ;; Parameters:    Size  Location     Type
  6960 ;;  address         1    wreg     unsigned char 
  6961 ;;  nibble          1    2[COMMON] unsigned char 
  6962 ;; Auto vars:     Size  Location     Type
  6963 ;;  address         1    4[COMMON] unsigned char 
  6964 ;;  datos           1    5[COMMON] unsigned char 
  6965 ;; Return value:  Size  Location     Type
  6966 ;;                  1    wreg      void 
  6967 ;; Registers used:
  6968 ;;		wreg, status,2, status,0, pclath, cstack
  6969 ;; Tracked objects:
  6970 ;;		On entry : 0/3
  6971 ;;		On exit  : 1F/3
  6972 ;;		Unchanged: 0/0
  6973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6974 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6975 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6976 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6977 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6978 ;;Total ram usage:        4 bytes
  6979 ;; Hardware stack levels used: 1
  6980 ;; Hardware stack levels required when called: 2
  6981 ;; This function calls:
  6982 ;;		_Write_PCF
  6983 ;; This function is called by:
  6984 ;;		_lcd_send_byte
  6985 ;;		_lcd_init
  6986 ;; This function uses a non-reentrant model
  6987 ;;
  6988                           
  6989                           
  6990                           ;psect for function _Send_D7_D4
  6991  0277                     _Send_D7_D4:
  6992                           
  6993                           ;incstack = 0
  6994                           ; Regs used in _Send_D7_D4: [wreg+status,2+status,0+pclath+cstack]
  6995                           ;Send_D7_D4@address stored from wreg
  6996  0277  00F4               	movwf	Send_D7_D4@address
  6997                           
  6998                           ;LCD_i2c.c: 114: void Send_D7_D4(int8 address,int8 nibble);LCD_i2c.c: 115: {;LCD_i2c.c: 
      +                          116:    char datos=0;
  6999  0278  01F5               	clrf	Send_D7_D4@datos
  7000                           
  7001                           ;LCD_i2c.c: 118:    if((nibble & 1)==1) datos= datos|16; else datos = datos&~16;
  7002  0279  1C72               	btfss	Send_D7_D4@nibble,0
  7003  027A  2A7E               	goto	l1743
  7004  027B  0875               	movf	Send_D7_D4@datos,w
  7005  027C  3810               	iorlw	16
  7006  027D  2A80               	goto	L4
  7007  027E                     l1743:
  7008  027E  0875               	movf	Send_D7_D4@datos,w
  7009  027F  39EF               	andlw	239
  7010  0280                     L4:
  7011  0280  00F3               	movwf	??_Send_D7_D4
  7012  0281  0873               	movf	??_Send_D7_D4,w
  7013  0282  00F5               	movwf	Send_D7_D4@datos
  7014                           
  7015                           ;LCD_i2c.c: 119:    if((nibble & 2)==2) datos= datos|32; else datos = datos&~32;
  7016  0283  1CF2               	btfss	Send_D7_D4@nibble,1
  7017  0284  2A88               	goto	l1749
  7018  0285  0875               	movf	Send_D7_D4@datos,w
  7019  0286  3820               	iorlw	32
  7020  0287  2A8A               	goto	L5
  7021  0288                     l1749:
  7022  0288  0875               	movf	Send_D7_D4@datos,w
  7023  0289  39DF               	andlw	223
  7024  028A                     L5:
  7025  028A  00F3               	movwf	??_Send_D7_D4
  7026  028B  0873               	movf	??_Send_D7_D4,w
  7027  028C  00F5               	movwf	Send_D7_D4@datos
  7028                           
  7029                           ;LCD_i2c.c: 120:    if((nibble & 4)==4) datos= datos|64; else datos = datos&~64;
  7030  028D  1D72               	btfss	Send_D7_D4@nibble,2
  7031  028E  2A92               	goto	l1755
  7032  028F  0875               	movf	Send_D7_D4@datos,w
  7033  0290  3840               	iorlw	64
  7034  0291  2A94               	goto	L6
  7035  0292                     l1755:
  7036  0292  0875               	movf	Send_D7_D4@datos,w
  7037  0293  39BF               	andlw	191
  7038  0294                     L6:
  7039  0294  00F3               	movwf	??_Send_D7_D4
  7040  0295  0873               	movf	??_Send_D7_D4,w
  7041  0296  00F5               	movwf	Send_D7_D4@datos
  7042                           
  7043                           ;LCD_i2c.c: 121:    if((nibble & 8)==8) datos= datos|128; else datos = datos&~128;
  7044  0297  1DF2               	btfss	Send_D7_D4@nibble,3
  7045  0298  2A9C               	goto	l1761
  7046  0299  0875               	movf	Send_D7_D4@datos,w
  7047  029A  3880               	iorlw	128
  7048  029B  2A9E               	goto	L7
  7049  029C                     l1761:
  7050  029C  0875               	movf	Send_D7_D4@datos,w
  7051  029D  397F               	andlw	127
  7052  029E                     L7:
  7053  029E  00F3               	movwf	??_Send_D7_D4
  7054  029F  0873               	movf	??_Send_D7_D4,w
  7055  02A0  00F5               	movwf	Send_D7_D4@datos
  7056                           
  7057                           ;LCD_i2c.c: 122:       _delay((unsigned long)((60)*(32000000UL/4000000.0)));
  7058  02A1  30A0               	movlw	160
  7059  02A2                     u1657:
  7060  02A2  0B89               	decfsz	9,f
  7061  02A3  2AA2               	goto	u1657
  7062                           
  7063                           ;LCD_i2c.c: 123:    if(address)
  7064  02A4  0874               	movf	Send_D7_D4@address,w
  7065  02A5  1903               	btfsc	3,2
  7066  02A6  2AAA               	goto	l1769
  7067                           
  7068                           ;LCD_i2c.c: 124:       datos= datos |1;
  7069  02A7  0875               	movf	Send_D7_D4@datos,w
  7070  02A8  3801               	iorlw	1
  7071  02A9  2AAC               	goto	L8
  7072  02AA                     l1769:
  7073                           
  7074                           ;LCD_i2c.c: 126:      datos = datos &~1;
  7075  02AA  0875               	movf	Send_D7_D4@datos,w
  7076  02AB  39FE               	andlw	254
  7077  02AC                     L8:
  7078  02AC  00F3               	movwf	??_Send_D7_D4
  7079  02AD  0873               	movf	??_Send_D7_D4,w
  7080  02AE  00F5               	movwf	Send_D7_D4@datos
  7081                           
  7082                           ;LCD_i2c.c: 129:    Write_PCF( datos | 4);
  7083  02AF  0875               	movf	Send_D7_D4@datos,w
  7084  02B0  3804               	iorlw	4
  7085  02B1  3180  2046  3182   	fcall	_Write_PCF
  7086                           
  7087                           ;LCD_i2c.c: 130:    _delay((unsigned long)((2)*(32000000UL/4000000.0)));
  7088  02B4  3005               	movlw	5
  7089  02B5                     u1667:
  7090  02B5  0B89               	decfsz	9,f
  7091  02B6  2AB5               	goto	u1667
  7092  02B7  0000               	nop
  7093                           
  7094                           ;LCD_i2c.c: 131:    Write_PCF( datos & ~4);
  7095  02B8  0875               	movf	Send_D7_D4@datos,w
  7096  02B9  39FB               	andlw	251
  7097  02BA  3180  2046         	fcall	_Write_PCF
  7098  02BC  0008               	return
  7099  02BD                     __end_of_Send_D7_D4:
  7100                           
  7101                           	psect	text23
  7102  0046                     __ptext23:	
  7103 ;; *************** function _Write_PCF *****************
  7104 ;; Defined at:
  7105 ;;		line 104 in file "LCD_i2c.c"
  7106 ;; Parameters:    Size  Location     Type
  7107 ;;  dato            1    wreg     unsigned char 
  7108 ;; Auto vars:     Size  Location     Type
  7109 ;;  dato            1    1[COMMON] unsigned char 
  7110 ;; Return value:  Size  Location     Type
  7111 ;;                  1    wreg      void 
  7112 ;; Registers used:
  7113 ;;		wreg, status,2, status,0, pclath, cstack
  7114 ;; Tracked objects:
  7115 ;;		On entry : 0/3
  7116 ;;		On exit  : 1F/3
  7117 ;;		Unchanged: 0/0
  7118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7120 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7122 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7123 ;;Total ram usage:        1 bytes
  7124 ;; Hardware stack levels used: 1
  7125 ;; Hardware stack levels required when called: 1
  7126 ;; This function calls:
  7127 ;;		_I2C_start
  7128 ;;		_I2C_stop
  7129 ;;		_I2C_write
  7130 ;; This function is called by:
  7131 ;;		_Send_D7_D4
  7132 ;; This function uses a non-reentrant model
  7133 ;;
  7134                           
  7135                           
  7136                           ;psect for function _Write_PCF
  7137  0046                     _Write_PCF:
  7138                           
  7139                           ;incstack = 0
  7140                           ; Regs used in _Write_PCF: [wreg+status,2+status,0+pclath+cstack]
  7141                           ;Write_PCF@dato stored from wreg
  7142  0046  00F1               	movwf	Write_PCF@dato
  7143                           
  7144                           ;LCD_i2c.c: 106:    I2C_start();
  7145  0047  3180  2019  3180   	fcall	_I2C_start
  7146                           
  7147                           ;LCD_i2c.c: 107:    I2C_write(32|(7<<1));
  7148  004A  302E               	movlw	46
  7149  004B  3180  202E  3180   	fcall	_I2C_write
  7150                           
  7151                           ;LCD_i2c.c: 108:    I2C_write(dato|8 );
  7152  004E  0871               	movf	Write_PCF@dato,w
  7153  004F  3808               	iorlw	8
  7154  0050  3180  202E  3180   	fcall	_I2C_write
  7155                           
  7156                           ;LCD_i2c.c: 109:    I2C_stop();
  7157  0053  3180  201E         	fcall	_I2C_stop
  7158  0055  0008               	return
  7159  0056                     __end_of_Write_PCF:
  7160                           
  7161                           	psect	text24
  7162  002E                     __ptext24:	
  7163 ;; *************** function _I2C_write *****************
  7164 ;; Defined at:
  7165 ;;		line 59 in file "I2C.c"
  7166 ;; Parameters:    Size  Location     Type
  7167 ;;  I2C_data        1    wreg     unsigned char 
  7168 ;; Auto vars:     Size  Location     Type
  7169 ;;  I2C_data        1    0[COMMON] unsigned char 
  7170 ;; Return value:  Size  Location     Type
  7171 ;;                  1    wreg      void 
  7172 ;; Registers used:
  7173 ;;		wreg
  7174 ;; Tracked objects:
  7175 ;;		On entry : 12/3
  7176 ;;		On exit  : 1F/E
  7177 ;;		Unchanged: 0/0
  7178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7180 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7182 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7183 ;;Total ram usage:        1 bytes
  7184 ;; Hardware stack levels used: 1
  7185 ;; This function calls:
  7186 ;;		Nothing
  7187 ;; This function is called by:
  7188 ;;		_main
  7189 ;;		_Write_PCF
  7190 ;;		_lcd_init
  7191 ;; This function uses a non-reentrant model
  7192 ;;
  7193                           
  7194                           
  7195                           ;psect for function _I2C_write
  7196  002E                     _I2C_write:
  7197                           
  7198                           ;incstack = 0
  7199                           ; Regs used in _I2C_write: [wreg]
  7200                           ;I2C_write@I2C_data stored from wreg
  7201  002E  00F0               	movwf	I2C_write@I2C_data
  7202                           
  7203                           ;I2C.c: 59: void I2C_write(char I2C_data);I2C.c: 60: {;I2C.c: 61:     PIR3bits.SSP1IF = 
      +                          0;
  7204  002F  002E               	movlb	14	; select bank14
  7205  0030  100F               	bcf	15,0	;volatile
  7206                           
  7207                           ;I2C.c: 62:     SSP1BUF = I2C_data;
  7208  0031  0870               	movf	I2C_write@I2C_data,w
  7209  0032  0023               	movlb	3	; select bank3
  7210  0033  008C               	movwf	12	;volatile
  7211  0034                     l216:	
  7212                           ;I2C.c: 63:     while(PIR3bits.SSP1IF == 0);
  7213                           
  7214  0034  002E               	movlb	14	; select bank14
  7215  0035  180F               	btfsc	15,0	;volatile
  7216  0036  0008               	return
  7217  0037  2834               	goto	l216
  7218  0038                     __end_of_I2C_write:
  7219                           
  7220                           	psect	text25
  7221  001E                     __ptext25:	
  7222 ;; *************** function _I2C_stop *****************
  7223 ;; Defined at:
  7224 ;;		line 29 in file "I2C.c"
  7225 ;; Parameters:    Size  Location     Type
  7226 ;;		None
  7227 ;; Auto vars:     Size  Location     Type
  7228 ;;		None
  7229 ;; Return value:  Size  Location     Type
  7230 ;;                  1    wreg      void 
  7231 ;; Registers used:
  7232 ;;		None
  7233 ;; Tracked objects:
  7234 ;;		On entry : 1F/E
  7235 ;;		On exit  : 1F/3
  7236 ;;		Unchanged: 0/0
  7237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7242 ;;Total ram usage:        0 bytes
  7243 ;; Hardware stack levels used: 1
  7244 ;; This function calls:
  7245 ;;		Nothing
  7246 ;; This function is called by:
  7247 ;;		_main
  7248 ;;		_Write_PCF
  7249 ;;		_lcd_init
  7250 ;; This function uses a non-reentrant model
  7251 ;;
  7252                           
  7253                           
  7254                           ;psect for function _I2C_stop
  7255  001E                     _I2C_stop:
  7256                           
  7257                           ;I2C.c: 31:     SSP1CON2bits.PEN = 1;
  7258                           
  7259                           ;incstack = 0
  7260                           ; Regs used in _I2C_stop: []
  7261  001E  0023               	movlb	3	; select bank3
  7262  001F  1511               	bsf	17,2	;volatile
  7263  0020                     l192:	
  7264                           ;I2C.c: 32:     while(SSP1CON2bits.PEN == 1);
  7265                           
  7266  0020  1D11               	btfss	17,2	;volatile
  7267  0021  0008               	return
  7268  0022  2820               	goto	l192
  7269  0023                     __end_of_I2C_stop:
  7270                           
  7271                           	psect	text26
  7272  0019                     __ptext26:	
  7273 ;; *************** function _I2C_start *****************
  7274 ;; Defined at:
  7275 ;;		line 17 in file "I2C.c"
  7276 ;; Parameters:    Size  Location     Type
  7277 ;;		None
  7278 ;; Auto vars:     Size  Location     Type
  7279 ;;		None
  7280 ;; Return value:  Size  Location     Type
  7281 ;;                  1    wreg      void 
  7282 ;; Registers used:
  7283 ;;		None
  7284 ;; Tracked objects:
  7285 ;;		On entry : 0/1
  7286 ;;		On exit  : 1F/3
  7287 ;;		Unchanged: 0/0
  7288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7293 ;;Total ram usage:        0 bytes
  7294 ;; Hardware stack levels used: 1
  7295 ;; This function calls:
  7296 ;;		Nothing
  7297 ;; This function is called by:
  7298 ;;		_main
  7299 ;;		_Write_PCF
  7300 ;;		_lcd_init
  7301 ;; This function uses a non-reentrant model
  7302 ;;
  7303                           
  7304                           
  7305                           ;psect for function _I2C_start
  7306  0019                     _I2C_start:
  7307                           
  7308                           ;I2C.c: 19:     SSP1CON2bits.SEN = 1;
  7309                           
  7310                           ;incstack = 0
  7311                           ; Regs used in _I2C_start: []
  7312  0019  0023               	movlb	3	; select bank3
  7313  001A  1411               	bsf	17,0	;volatile
  7314  001B                     l180:	
  7315                           ;I2C.c: 20:     while(SSP1CON2bits.SEN == 1);
  7316                           
  7317  001B  1C11               	btfss	17,0	;volatile
  7318  001C  0008               	return
  7319  001D  281B               	goto	l180
  7320  001E                     __end_of_I2C_start:
  7321                           
  7322                           	psect	text27
  7323  00B1                     __ptext27:	
  7324 ;; *************** function _adc_init *****************
  7325 ;; Defined at:
  7326 ;;		line 3 in file "adc.c"
  7327 ;; Parameters:    Size  Location     Type
  7328 ;;		None
  7329 ;; Auto vars:     Size  Location     Type
  7330 ;;		None
  7331 ;; Return value:  Size  Location     Type
  7332 ;;                  1    wreg      void 
  7333 ;; Registers used:
  7334 ;;		wreg, status,2
  7335 ;; Tracked objects:
  7336 ;;		On entry : B1F/1D
  7337 ;;		On exit  : B1F/1
  7338 ;;		Unchanged: B00/0
  7339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7344 ;;Total ram usage:        0 bytes
  7345 ;; Hardware stack levels used: 1
  7346 ;; This function calls:
  7347 ;;		Nothing
  7348 ;; This function is called by:
  7349 ;;		_main
  7350 ;; This function uses a non-reentrant model
  7351 ;;
  7352                           
  7353                           
  7354                           ;psect for function _adc_init
  7355  00B1                     _adc_init:
  7356                           
  7357                           ;adc.c: 4:     ADCON0 = ADCON0 & ~(1<<7 | 1<<4 );
  7358                           
  7359                           ;incstack = 0
  7360                           ; Regs used in _adc_init: [wreg+status,2]
  7361  00B1  0021               	movlb	1	; select bank1
  7362  00B2  0813               	movf	19,w	;volatile
  7363  00B3  396F               	andlw	111
  7364  00B4  0093               	movwf	19	;volatile
  7365                           
  7366                           ;adc.c: 5:     ADCON0 = ADCON0 |(1<<2);
  7367  00B5  0813               	movf	19,w	;volatile
  7368  00B6  3804               	iorlw	4
  7369  00B7  0093               	movwf	19	;volatile
  7370                           
  7371                           ;adc.c: 6:     ADCON1 = ADCON1 |(1<<7);
  7372  00B8  0814               	movf	20,w	;volatile
  7373  00B9  3880               	iorlw	128
  7374  00BA  0094               	movwf	20	;volatile
  7375                           
  7376                           ;adc.c: 7:     ADCON2 = ADCON2 & ~(7<<0 );
  7377  00BB  0815               	movf	21,w	;volatile
  7378  00BC  39F8               	andlw	248
  7379  00BD  0095               	movwf	21	;volatile
  7380                           
  7381                           ;adc.c: 17:     ADCLK = ADCLK |(16<<0);
  7382  00BE  0818               	movf	24,w	;volatile
  7383  00BF  3810               	iorlw	16
  7384  00C0  0098               	movwf	24	;volatile
  7385                           
  7386                           ;adc.c: 19:     ADREF = ADREF & ~(1<<4 );
  7387  00C1  081A               	movf	26,w	;volatile
  7388  00C2  39EF               	andlw	239
  7389  00C3  009A               	movwf	26	;volatile
  7390                           
  7391                           ;adc.c: 20:     ADREF = ADREF & ~(3<<0 );
  7392  00C4  081A               	movf	26,w	;volatile
  7393  00C5  39FC               	andlw	252
  7394  00C6  009A               	movwf	26	;volatile
  7395                           
  7396                           ;adc.c: 23:     ADPCH = 4;
  7397  00C7  3004               	movlw	4
  7398  00C8  009E               	movwf	30	;volatile
  7399                           
  7400                           ;adc.c: 24:     ADCAP = 0;
  7401  00C9  019B               	clrf	27	;volatile
  7402  00CA  0008               	return
  7403  00CB                     __end_of_adc_init:
  7404                           
  7405                           	psect	text28
  7406  0056                     __ptext28:	
  7407 ;; *************** function _I2C_init *****************
  7408 ;; Defined at:
  7409 ;;		line 4 in file "I2C.c"
  7410 ;; Parameters:    Size  Location     Type
  7411 ;;		None
  7412 ;; Auto vars:     Size  Location     Type
  7413 ;;		None
  7414 ;; Return value:  Size  Location     Type
  7415 ;;                  1    wreg      void 
  7416 ;; Registers used:
  7417 ;;		wreg, status,2
  7418 ;; Tracked objects:
  7419 ;;		On entry : B1F/1
  7420 ;;		On exit  : B1F/3
  7421 ;;		Unchanged: B00/0
  7422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7427 ;;Total ram usage:        0 bytes
  7428 ;; Hardware stack levels used: 1
  7429 ;; This function calls:
  7430 ;;		Nothing
  7431 ;; This function is called by:
  7432 ;;		_main
  7433 ;; This function uses a non-reentrant model
  7434 ;;
  7435                           
  7436                           
  7437                           ;psect for function _I2C_init
  7438  0056                     _I2C_init:
  7439                           
  7440                           ;I2C.c: 6:     SSP1CLKPPS = 0x14;
  7441                           
  7442                           ;incstack = 0
  7443                           ; Regs used in _I2C_init: [wreg+status,2]
  7444  0056  3014               	movlw	20
  7445  0057  003D               	movlb	29	; select bank29
  7446  0058  00C5               	movwf	69	;volatile
  7447                           
  7448                           ;I2C.c: 7:     RC3PPS = 0x15;
  7449  0059  3015               	movlw	21
  7450  005A  003E               	movlb	30	; select bank30
  7451  005B  00A3               	movwf	35	;volatile
  7452                           
  7453                           ;I2C.c: 8:     RC4PPS = 0x14;
  7454  005C  3014               	movlw	20
  7455  005D  00A4               	movwf	36	;volatile
  7456                           
  7457                           ;I2C.c: 9:     SSP1DATPPS = 0x13;
  7458  005E  3013               	movlw	19
  7459  005F  003D               	movlb	29	; select bank29
  7460  0060  00C6               	movwf	70	;volatile
  7461                           
  7462                           ;I2C.c: 11:     SSP1STAT = 0b10000000;
  7463  0061  3080               	movlw	128
  7464  0062  0023               	movlb	3	; select bank3
  7465  0063  008F               	movwf	15	;volatile
  7466                           
  7467                           ;I2C.c: 12:  SSP1CON1 = 0b00101000;
  7468  0064  3028               	movlw	40
  7469  0065  0090               	movwf	16	;volatile
  7470                           
  7471                           ;I2C.c: 13:  SSP1CON3 = 0x00;
  7472  0066  0192               	clrf	18	;volatile
  7473                           
  7474                           ;I2C.c: 14:  SSP1ADD = ((32000000UL/(4UL*100000UL))-1);
  7475  0067  304F               	movlw	79
  7476  0068  008D               	movwf	13	;volatile
  7477  0069  0008               	return
  7478  006A                     __end_of_I2C_init:
  7479  007E                     btemp	set	126	;btemp
  7480  007E                     wtemp0	set	126
  7481                           
  7482                           	psect	idloc
  7483                           
  7484                           ;Config register IDLOC0 @ 0x8000
  7485                           ;	unspecified, using default values
  7486  8000                     	org	32768
  7487  8000  3FFF               	dw	16383
  7488                           
  7489                           ;Config register IDLOC1 @ 0x8001
  7490                           ;	unspecified, using default values
  7491  8001                     	org	32769
  7492  8001  3FFF               	dw	16383
  7493                           
  7494                           ;Config register IDLOC2 @ 0x8002
  7495                           ;	unspecified, using default values
  7496  8002                     	org	32770
  7497  8002  3FFF               	dw	16383
  7498                           
  7499                           ;Config register IDLOC3 @ 0x8003
  7500                           ;	unspecified, using default values
  7501  8003                     	org	32771
  7502  8003  3FFF               	dw	16383
  7503                           
  7504                           	psect	config
  7505                           
  7506                           ;Config register CONFIG1 @ 0x8007
  7507                           ;	External Oscillator mode selection bits
  7508                           ;	FEXTOSC = OFF, Oscillator not enabled
  7509                           ;	Power-up default value for COSC bits
  7510                           ;	RSTOSC = HFINT32, HFINTOSC with OSCFRQ= 32 MHz and CDIV = 1:1
  7511                           ;	Clock Out Enable bit
  7512                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
  7513                           ;	Clock Switch Enable bit
  7514                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  7515                           ;	Fail-Safe Clock Monitor Enable bit
  7516                           ;	FCMEN = ON, FSCM timer enabled
  7517  8007                     	org	32775
  7518  8007  3F8C               	dw	16268
  7519                           
  7520                           ;Config register CONFIG2 @ 0x8008
  7521                           ;	Master Clear Enable bit
  7522                           ;	MCLRE = ON, MCLR pin is Master Clear function
  7523                           ;	Power-up Timer Enable bit
  7524                           ;	PWRTE = OFF, PWRT disabled
  7525                           ;	Low-Power BOR enable bit
  7526                           ;	LPBOREN = OFF, ULPBOR disabled
  7527                           ;	Brown-out reset enable bits
  7528                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  7529                           ;	Brown-out Reset Voltage Selection
  7530                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
  7531                           ;	Zero-cross detect disable
  7532                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
  7533                           ;	Peripheral Pin Select one-way control
  7534                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
  7535                           ;	Stack Overflow/Underflow Reset Enable bit
  7536                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  7537                           ;	Background Debugger
  7538                           ;	DEBUG = 0x1, unprogrammed default
  7539  8008                     	org	32776
  7540  8008  3FFF               	dw	16383
  7541                           
  7542                           ;Config register CONFIG3 @ 0x8009
  7543                           ;	WDT Period Select bits
  7544                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  7545                           ;	WDT operating mode
  7546                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
  7547                           ;	WDT Window Select bits
  7548                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  7549                           ;	WDT input clock selector
  7550                           ;	WDTCCS = SC, Software Control
  7551  8009                     	org	32777
  7552  8009  3F9F               	dw	16287
  7553                           
  7554                           ;Config register CONFIG4 @ 0x800A
  7555                           ;	UserNVM self-write protection bits
  7556                           ;	WRT = OFF, Write protection off
  7557                           ;	Scanner Enable bit
  7558                           ;	SCANE = available, Scanner module is available for use
  7559                           ;	Low Voltage Programming Enable bit
  7560                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
  7561  800A                     	org	32778
  7562  800A  3FFF               	dw	16383
  7563                           
  7564                           ;Config register CONFIG5 @ 0x800B
  7565                           ;	UserNVM Program memory code protection bit
  7566                           ;	CP = OFF, Program Memory code protection disabled
  7567                           ;	DataNVM code protection bit
  7568                           ;	CPD = OFF, Data EEPROM code protection disabled
  7569  800B                     	org	32779
  7570  800B  3FFF               	dw	16383

Data Sizes:
    Strings     15
    Constant    8
    Data        0
    BSS         50
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     75      80
    BANK1            80     59      72
    BANK2            80      0      32
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 50
		 -> main@buffer(BANK1[50]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 50
		 -> main@buffer(BANK1[50]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S748_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 50
		 -> main@buffer(BANK1[50]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 50
		 -> main@buffer(BANK1[50]), 

    lcd_puts@dato	PTR unsigned char  size(1) Largest target is 50
		 -> main@buffer(BANK1[50]), 


Critical Paths under _main in COMMON

    _main->_lcd_puts
    _main->_sprintf
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_uart_tx
    _abs->___aomod
    _serial_init->___lldiv
    _lcd_puts->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_init->_lcd_send_byte
    _lcd_send_byte->_Send_D7_D4
    _Send_D7_D4->_Write_PCF
    _Write_PCF->_I2C_write

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod
    _lcd_puts->_lcd_gotoxy

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                57    57      0   12366
                                             74 BANK0      1     1      0
                                              7 BANK1     52    52      0
                           _I2C_init
                          _I2C_start
                           _I2C_stop
                          _I2C_write
                           _adc_init
                           _lcd_init
                           _lcd_puts
                          _port_init
                        _serial_init
                            _sprintf
                            _uart_rx
 ---------------------------------------------------------------------------------
 (1) _uart_rx                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             14    10      4    6244
                                             13 COMMON     1     1      0
                                             70 BANK0      4     0      4
                                              0 BANK1      7     7      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    5936
                                             62 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    5625
                                             46 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4231
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2625
                                             12 COMMON     1     1      0
                                              7 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1193
                                             11 COMMON     1     0      1
                                              0 BANK0      7     7      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     878
                                              3 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      44
                                              2 COMMON     1     1      0
                            _uart_tx
 ---------------------------------------------------------------------------------
 (6) _uart_tx                                              2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (1) _serial_init                                         10     6      4     458
                                              0 BANK0     10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _port_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             3     3      0    3235
                                             13 COMMON     1     1      0
                                              2 BANK0      2     2      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoxy                                           5     4      1    1695
                                             10 COMMON     3     2      1
                                              0 BANK0      2     2      0
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0    2309
                                             10 COMMON     3     3      0
                          _I2C_start
                           _I2C_stop
                          _I2C_write
                         _Send_D7_D4
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_send_byte                                        4     3      1    1440
                                              6 COMMON     4     3      1
                         _Send_D7_D4
 ---------------------------------------------------------------------------------
 (3) _Send_D7_D4                                           4     3      1     733
                                              2 COMMON     4     3      1
                          _Write_PCF
 ---------------------------------------------------------------------------------
 (4) _Write_PCF                                            1     1      0      44
                                              1 COMMON     1     1      0
                          _I2C_start
                           _I2C_stop
                          _I2C_write
 ---------------------------------------------------------------------------------
 (5) _I2C_write                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_init
   _I2C_start
   _I2C_stop
   _I2C_write
   _adc_init
   _lcd_init
     _I2C_start
     _I2C_stop
     _I2C_write
     _Send_D7_D4
       _Write_PCF
         _I2C_start
         _I2C_stop
         _I2C_write
     _lcd_send_byte
       _Send_D7_D4
   _lcd_puts
     _lcd_gotoxy
       _lcd_send_byte
     _lcd_send_byte
   _port_init
   _serial_init
     ___lldiv
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _uart_tx
             _fputs
               _fputc
             _strlen
         _fputc
   _uart_rx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4B      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     3B      48       7       90.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      20       9       40.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      C6      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      C6      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jun 28 18:30:13 2022

      Send_D7_D4@address 0074         Send_D7_D4@nibble 0072           ?_lcd_send_byte 0076  
                     _mv 0813       __size_of_I2C_start 0005       __size_of_I2C_write 000A  
                    l216 0034                      l180 001B                      l192 0020  
                    l562 05A1                      l549 0694                      l942 02F1  
                    l952 0708                      l953 071A                      l939 02D1  
                    l947 06EB                      l956 07AD                      l948 06F2  
                    u805 003D                      u950 060F                      u855 025C  
                    u985 0654                      _abs 006A                      _pad 02BD  
                    wreg 0009              lcd_gotoxy@x 0020              lcd_gotoxy@y 007A  
                   l2011 03E6                     ?_abs 0073                     l2035 035A  
                   l2045 0377                     l2053 038C       serial_init@baudios 0020  
                   l2047 0381                     l2055 0391                     l2063 00CB  
                   l1601 023B                     l2147 03A3                     l2149 01CB  
                   l1701 0544                     l1605 025E                     l2069 00E3  
                   l1631 009E                     l1705 0574                     l1625 012A  
                   l1633 00AA                     l2089 01A2                     l1707 0580  
                   l1715 02C8                     l1653 0604                     l1725 02D3  
                   l1821 07C0                     l1743 027E                     l1655 0608  
                   l1719 02CF                     l1831 07D7                     l1761 029C  
                   l1665 061F                     l1649 05DD                     l1729 02FC  
                   l1809 0721                     l1817 07B9                     l1755 0292  
                   l1931 034F                     l1675 0667                     l1667 062E  
                   l1691 0528                     l1827 07CA                     l1749 0288  
                   l1917 0316                     l1677 0673                     l1589 0039  
                   l1941 0154                     l1927 0344                     l1919 0324  
                   l1687 0501                     l1863 04A3                     l1943 0170  
                   l1769 02AA                     l1857 0482                     l1849 0449  
                   l1873 04B4                     l1883 01B8                     l1699 0535  
                   l1795 0716                     l1867 04A9                     l1885 01BA  
                   l1789 0703                     ?_pad 0027                     l1887 01BC  
                   l1895 01C3                     l1799 0746                     l1889 01BE  
                   l1897 01D9                     l1995 03C6                     STR_1 0804  
                   u1220 06C1                     u1230 06C2                     u1145 02DD  
                   u1305 07B7                     u1085 0562                     u1165 0073  
                   u1325 0735                     _LATA 0016                     _LATB 0017  
                   u1335 0741                     u1515 0218                     u1275 06FB  
                   u1445 0319                     u1607 0364                     u1385 0085  
                   u1617 0371                     u1465 0325                     u1627 03BF  
                   u1475 0339                     u1555 00CF                     u1637 03D1  
                   u1485 0345                     u1647 03F8                     u1575 00D8  
                   u1657 02A2                     u1667 02B5                     u1597 01B0  
                   _PIR3 070F                     abs@a 0073                     _dbuf 0120  
                   _main 0179                     _dtoa 06A6                     _prec 006B  
                   _nout 00E3                     pad@i 002A                     pad@p 0028  
                   fsr0h 0005                     fsr1h 0007                     indf0 0000  
                   fsr0l 0004                     indf1 0001                     fsr1l 0006  
                   pad@w 002C                     btemp 007E                     _volt 00DF  
       __end_of_I2C_init 006A                     start 0002         __end_of_I2C_stop 0023  
                  ??_abs 0075                    ??_pad 007C          __end_of___aodiv 06A6  
                  _ADCAP 009B                    ?_main 0070                    ?_dtoa 0030  
                  _ADCLK 0098          __end_of___aomod 05B3                    _ADPCH 009E  
                  _ADREF 009A          __end_of___lldiv 0358                    _RCREG 0119  
           vfpfcnvrt@fmt 004E                    _PORTA 000C                    _PORTB 000D  
                  _TRISA 0011                    _TRISB 0012                    _TRISC 0013  
                  _RXPPS 0ECB                    _TXREG 011A                    u92lld 05DB  
                  _flags 006D                    _fputc 0232                    _fputs 0127  
                  pad@fp 002E                    _width 00E5                    _putch 0023  
                  dtoa@d 0030                    dtoa@i 004C             lcd_puts@dato 007D  
                  dtoa@n 0044                    dtoa@p 003E                    dtoa@s 0042  
                  dtoa@w 0040          __end_of_uart_rx 00E5          __end_of_uart_tx 0046  
                  status 0003        __end_of_I2C_start 001E                    wtemp0 007E  
        __end_of_sprintf 0127        __end_of_I2C_write 0038          __initialization 07E8  
      I2C_write@I2C_data 0070             __end_of_main 01B6             __end_of_dtoa 07E8  
        ??_lcd_send_byte 0077                   ??_main 006A                   ??_dtoa 0038  
             _Send_D7_D4 0277                   _ADCON0 0093                   _ADCON1 0094  
                 _ADCON2 0095                   ?_fputc 0073                   ?_fputs 007B  
                 _ANSELA 0F38                   ?_putch 0070                   _ANSELB 0F43  
                 _ANSELC 0F4E                   _RC0PPS 0F20         __end_of_adc_init 00CB  
                 _RC1STA 011D                   _RC3PPS 0F23                   _RC4PPS 0F24  
                 u103lld 04FF                   _TX1STA 011E             ?_serial_init 0020  
           vfprintf@cfmt 0064         __end_of_lcd_init 0409                   _g_LcdX 00E7  
                 _g_LcdY 006F         __end_of_lcd_puts 03AC                ??___aodiv 0070  
              ??___aomod 0070                ??___lldiv 0078                   pad@buf 0027  
                 dtoa@fp 003D                   _strlen 0099                   fputc@c 0073  
                 fputs@c 0023                   fputs@i 0024                   fputs@s 0026  
              ?_I2C_init 0070                ?_I2C_stop 0070                ??_uart_rx 0070  
              ??_uart_tx 0070         __end_of_vfprintf 0179                ??_sprintf 007D  
__end_of__initialization 07FD       __size_of_Write_PCF 0010           __pcstackCOMMON 0070  
          __end_of_fputc 0277            __end_of_fputs 014C            __end_of_putch 0028  
             __end_of_mv 0817              ?_Send_D7_D4 0072               ??_I2C_init 0070  
             ??_I2C_stop 0070        lcd_gotoxy@address 0021                  ??_fputc 0076  
                ??_fputs 0020                  ??_putch 0072               __pbssBANK0 006B  
             __pbssBANK1 00DB               __pbssBANK2 0120               __pmaintext 0179  
         lcd_send_byte@n 0076                ?_adc_init 0070                  ?_strlen 0070  
      __end_of_Write_PCF 0056                  _SP1BRGH 011C                  _SP1BRGL 011B  
     __size_of_vfpfcnvrt 00CE       __size_of_port_init 001F               _lcd_gotoxy 01B6  
                _SSP1ADD 018D                  _SSP1BUF 018C                ?_lcd_init 0070  
              ?_lcd_puts 0070                _I2C_start 0019                _I2C_write 002E  
    __size_of_Send_D7_D4 0046                  ___aodiv 05B3                  ___aomod 04D7  
                ___lldiv 0306                ?_vfprintf 005E     __size_of_serial_init 003E  
             ??_adc_init 0070                  __ptext1 00CB                  __ptext2 0104  
                __ptext3 014C                  __ptext4 0409                  __ptext5 06A6  
                __ptext6 02BD                  __ptext7 0099                  __ptext8 0127  
                __ptext9 0232          __size_of_strlen 0018             __size_of_abs 0017  
           __size_of_pad 0049                  _uart_rx 00CB                  _uart_tx 0038  
                main@adc 00D9                  _sprintf 0104                  clrloop0 0029  
             ??_lcd_init 007A               ??_lcd_puts 0022     end_of_initialization 07FD  
   lcd_send_byte@address 0079                  fputc@fp 0075                  fputs@fp 007B  
        ___lldiv@divisor 0070          ___lldiv@counter 007D               ?_I2C_start 0070  
             ?_I2C_write 0070        __end_of_vfpfcnvrt 04D7        __end_of_port_init 0104  
             ??_vfprintf 0061    __end_of_lcd_send_byte 0099                  strlen@a 0073  
                strlen@s 0074              uart_tx@dato 0071              ?_lcd_gotoxy 007A  
        Send_D7_D4@datos 0075        __size_of_I2C_init 0014          _LCD_INIT_STRING 0800  
      __size_of_I2C_stop 0005               main@buffer 00A7              vfpfcnvrt@ap 004F  
            vfpfcnvrt@fp 005D              vfpfcnvrt@ll 0055           __end_of_strlen 00B1  
           ??_Send_D7_D4 0073      start_initialization 07E8              __end_of_abs 0081  
            __end_of_pad 0306            Write_PCF@dato 0071              ??_I2C_start 0070  
            ??_I2C_write 0070              vfprintf@fmt 005E       __end_of_Send_D7_D4 02BD  
    __size_of_lcd_gotoxy 003E                 ??_strlen 0072  __end_of_LCD_INIT_STRING 0804  
      __size_of_adc_init 001A                ___latbits 0002            __pcstackBANK0 0020  
          __pcstackBANK1 00A0         ___aodiv@dividend 0028                _Write_PCF 0046  
      __size_of_lcd_init 005D        __size_of_lcd_puts 0054                 ?___aodiv 0020  
               ?___aomod 0020         ___aodiv@quotient 0073                 ?___lldiv 0070  
      __size_of_vfprintf 002D                 _BAUD1CON 011F                 _I2C_init 0056  
               _I2C_stop 001E                 ?_uart_rx 0070               ?_Write_PCF 0070  
               ?_uart_tx 0070                 ?_sprintf 0066           __size_of_fputc 0045  
         __size_of_fputs 0025           __size_of_putch 0005                clear_ram0 0028  
          ??_serial_init 0024                 _PIR3bits 070F                 _SSP1CON1 0190  
               _SSP1CON3 0192                 _SSP1STAT 018F                _vfpfcnvrt 0409  
              _port_init 00E5            serial_init@sx 0028                lcd_init@i 007C  
           ??_lcd_gotoxy 007B               vfprintf@ap 0060               vfprintf@fp 0063  
     __end_of_lcd_gotoxy 01F4         __size_of___aodiv 00F3         __size_of___aomod 00DC  
       __size_of___lldiv 0052               ?_vfpfcnvrt 004E               ?_port_init 0070  
    __end_of_serial_init 0232          ___aodiv@divisor 0020                 _adc_init 00B1  
        ___aodiv@counter 0071               sprintf@fmt 0066                 _dtoa$821 003B  
            ??_Write_PCF 0071                 __ptext10 0023                 __ptext11 0038  
               __ptext20 03AC                 __ptext12 006A                 __ptext21 0081  
               __ptext13 04D7                 __ptext22 0277                 __ptext14 05B3  
               __ptext23 0046                 __ptext15 01F4                 __ptext24 002E  
               __ptext16 0306                 __ptext25 001E                 __ptext17 00E5  
               __ptext26 0019                 __ptext18 0358                 __ptext27 00B1  
               __ptext19 01B6                 __ptext28 0056             _SSP1CON2bits 0191  
       __size_of_uart_rx 001A         __size_of_uart_tx 000E                 _lcd_init 03AC  
               _lcd_puts 0358         __size_of_sprintf 0023   __size_of_lcd_send_byte 0018  
          __size_of_main 003D            __size_of_dtoa 0142                 _vfprintf 014C  
       ___aomod@dividend 0028                putch@dato 0072                sprintf@ap 00A0  
       ___lldiv@dividend 0074              _serial_init 01F4          ___aomod@divisor 0020  
            ??_vfpfcnvrt 0050          ___aomod@counter 0071              ??_port_init 0070  
          _lcd_send_byte 0081            __pstringtext1 0813            __pstringtext2 0800  
          __pstringtext3 0000              _temperatura 00DB                 sprintf@f 00A2  
               sprintf@s 00A1               _SSP1DATPPS 0EC6               _SSP1CLKPPS 0EC5  
       ___lldiv@quotient 0079             ___aodiv@sign 0072             ___aomod@sign 0072  
