

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jul 04 19:34:54 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F18855
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    44                           	dabs	1,0x7E,2
    45  0000                     
    46                           ; Version 2.40
    47                           ; Generated 02/12/2021 GMT
    48                           ; 
    49                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution. Publication is not required when
    63                           ;        this file is used in an embedded application.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F18855 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0008                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000D                     	;# 
    95  000E                     	;# 
    96  0010                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0013                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  001C                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001D                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  008C                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  008E                     	;# 
   114  008F                     	;# 
   115  0090                     	;# 
   116  0090                     	;# 
   117  0091                     	;# 
   118  0093                     	;# 
   119  0094                     	;# 
   120  0095                     	;# 
   121  0096                     	;# 
   122  0097                     	;# 
   123  0098                     	;# 
   124  0099                     	;# 
   125  009A                     	;# 
   126  009B                     	;# 
   127  009C                     	;# 
   128  009D                     	;# 
   129  009E                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  0110                     	;# 
   136  0110                     	;# 
   137  0111                     	;# 
   138  0112                     	;# 
   139  0112                     	;# 
   140  0113                     	;# 
   141  0114                     	;# 
   142  0114                     	;# 
   143  0115                     	;# 
   144  0116                     	;# 
   145  0116                     	;# 
   146  0117                     	;# 
   147  0119                     	;# 
   148  0119                     	;# 
   149  0119                     	;# 
   150  011A                     	;# 
   151  011A                     	;# 
   152  011A                     	;# 
   153  011B                     	;# 
   154  011B                     	;# 
   155  011B                     	;# 
   156  011B                     	;# 
   157  011B                     	;# 
   158  011C                     	;# 
   159  011C                     	;# 
   160  011C                     	;# 
   161  011D                     	;# 
   162  011D                     	;# 
   163  011D                     	;# 
   164  011E                     	;# 
   165  011E                     	;# 
   166  011E                     	;# 
   167  011F                     	;# 
   168  011F                     	;# 
   169  011F                     	;# 
   170  011F                     	;# 
   171  011F                     	;# 
   172  018C                     	;# 
   173  018D                     	;# 
   174  018E                     	;# 
   175  018F                     	;# 
   176  0190                     	;# 
   177  0191                     	;# 
   178  0192                     	;# 
   179  0196                     	;# 
   180  0197                     	;# 
   181  0198                     	;# 
   182  0199                     	;# 
   183  019A                     	;# 
   184  019B                     	;# 
   185  019C                     	;# 
   186  020C                     	;# 
   187  020C                     	;# 
   188  020D                     	;# 
   189  020E                     	;# 
   190  020F                     	;# 
   191  020F                     	;# 
   192  0210                     	;# 
   193  0210                     	;# 
   194  0211                     	;# 
   195  0211                     	;# 
   196  0212                     	;# 
   197  0212                     	;# 
   198  0213                     	;# 
   199  0214                     	;# 
   200  0215                     	;# 
   201  0215                     	;# 
   202  0216                     	;# 
   203  0216                     	;# 
   204  0217                     	;# 
   205  0217                     	;# 
   206  0218                     	;# 
   207  0218                     	;# 
   208  0219                     	;# 
   209  021A                     	;# 
   210  021B                     	;# 
   211  021B                     	;# 
   212  021C                     	;# 
   213  021C                     	;# 
   214  021D                     	;# 
   215  021D                     	;# 
   216  021E                     	;# 
   217  021F                     	;# 
   218  028C                     	;# 
   219  028C                     	;# 
   220  028D                     	;# 
   221  028D                     	;# 
   222  028E                     	;# 
   223  028F                     	;# 
   224  0290                     	;# 
   225  0290                     	;# 
   226  0291                     	;# 
   227  0292                     	;# 
   228  0292                     	;# 
   229  0293                     	;# 
   230  0293                     	;# 
   231  0294                     	;# 
   232  0295                     	;# 
   233  0296                     	;# 
   234  0296                     	;# 
   235  0297                     	;# 
   236  0298                     	;# 
   237  0298                     	;# 
   238  0299                     	;# 
   239  0299                     	;# 
   240  029A                     	;# 
   241  029B                     	;# 
   242  029C                     	;# 
   243  029C                     	;# 
   244  029D                     	;# 
   245  030C                     	;# 
   246  030C                     	;# 
   247  030D                     	;# 
   248  030E                     	;# 
   249  030F                     	;# 
   250  0310                     	;# 
   251  0310                     	;# 
   252  0311                     	;# 
   253  0312                     	;# 
   254  0313                     	;# 
   255  0314                     	;# 
   256  0314                     	;# 
   257  0315                     	;# 
   258  0316                     	;# 
   259  0317                     	;# 
   260  0318                     	;# 
   261  0318                     	;# 
   262  0319                     	;# 
   263  031A                     	;# 
   264  031B                     	;# 
   265  031C                     	;# 
   266  031C                     	;# 
   267  031D                     	;# 
   268  031E                     	;# 
   269  031F                     	;# 
   270  038C                     	;# 
   271  038C                     	;# 
   272  038D                     	;# 
   273  038E                     	;# 
   274  0390                     	;# 
   275  0390                     	;# 
   276  0391                     	;# 
   277  0392                     	;# 
   278  040C                     	;# 
   279  040D                     	;# 
   280  040E                     	;# 
   281  040F                     	;# 
   282  0410                     	;# 
   283  0411                     	;# 
   284  0416                     	;# 
   285  0416                     	;# 
   286  0417                     	;# 
   287  0418                     	;# 
   288  0418                     	;# 
   289  0419                     	;# 
   290  041A                     	;# 
   291  041A                     	;# 
   292  041B                     	;# 
   293  041C                     	;# 
   294  041C                     	;# 
   295  041D                     	;# 
   296  041E                     	;# 
   297  041F                     	;# 
   298  048C                     	;# 
   299  048C                     	;# 
   300  048D                     	;# 
   301  048E                     	;# 
   302  048F                     	;# 
   303  048F                     	;# 
   304  0490                     	;# 
   305  0491                     	;# 
   306  0492                     	;# 
   307  0492                     	;# 
   308  0493                     	;# 
   309  0494                     	;# 
   310  0495                     	;# 
   311  0495                     	;# 
   312  0496                     	;# 
   313  0497                     	;# 
   314  0498                     	;# 
   315  0499                     	;# 
   316  049A                     	;# 
   317  049B                     	;# 
   318  049C                     	;# 
   319  049D                     	;# 
   320  050C                     	;# 
   321  050C                     	;# 
   322  050D                     	;# 
   323  050E                     	;# 
   324  050F                     	;# 
   325  050F                     	;# 
   326  0510                     	;# 
   327  0511                     	;# 
   328  0512                     	;# 
   329  0512                     	;# 
   330  0513                     	;# 
   331  0514                     	;# 
   332  0515                     	;# 
   333  0515                     	;# 
   334  0516                     	;# 
   335  0517                     	;# 
   336  0518                     	;# 
   337  0519                     	;# 
   338  051A                     	;# 
   339  051B                     	;# 
   340  051C                     	;# 
   341  051D                     	;# 
   342  058C                     	;# 
   343  058C                     	;# 
   344  058D                     	;# 
   345  058E                     	;# 
   346  058F                     	;# 
   347  058F                     	;# 
   348  0590                     	;# 
   349  0591                     	;# 
   350  0592                     	;# 
   351  0593                     	;# 
   352  060C                     	;# 
   353  060D                     	;# 
   354  060E                     	;# 
   355  060F                     	;# 
   356  0610                     	;# 
   357  0611                     	;# 
   358  0612                     	;# 
   359  0613                     	;# 
   360  0614                     	;# 
   361  0616                     	;# 
   362  0617                     	;# 
   363  0618                     	;# 
   364  0619                     	;# 
   365  061A                     	;# 
   366  061B                     	;# 
   367  061C                     	;# 
   368  061D                     	;# 
   369  061E                     	;# 
   370  068C                     	;# 
   371  068D                     	;# 
   372  068E                     	;# 
   373  068F                     	;# 
   374  0690                     	;# 
   375  0691                     	;# 
   376  0692                     	;# 
   377  0693                     	;# 
   378  0694                     	;# 
   379  070C                     	;# 
   380  070D                     	;# 
   381  070E                     	;# 
   382  070F                     	;# 
   383  0710                     	;# 
   384  0711                     	;# 
   385  0712                     	;# 
   386  0713                     	;# 
   387  0714                     	;# 
   388  0716                     	;# 
   389  0717                     	;# 
   390  0718                     	;# 
   391  0719                     	;# 
   392  071A                     	;# 
   393  071B                     	;# 
   394  071C                     	;# 
   395  071D                     	;# 
   396  071E                     	;# 
   397  0796                     	;# 
   398  0797                     	;# 
   399  0798                     	;# 
   400  0799                     	;# 
   401  079A                     	;# 
   402  079B                     	;# 
   403  080C                     	;# 
   404  080D                     	;# 
   405  080E                     	;# 
   406  080F                     	;# 
   407  0810                     	;# 
   408  0811                     	;# 
   409  0812                     	;# 
   410  0813                     	;# 
   411  0814                     	;# 
   412  081A                     	;# 
   413  081B                     	;# 
   414  081C                     	;# 
   415  081D                     	;# 
   416  081E                     	;# 
   417  081F                     	;# 
   418  088C                     	;# 
   419  088D                     	;# 
   420  088E                     	;# 
   421  088F                     	;# 
   422  0890                     	;# 
   423  0891                     	;# 
   424  0892                     	;# 
   425  0893                     	;# 
   426  0895                     	;# 
   427  0896                     	;# 
   428  0897                     	;# 
   429  0898                     	;# 
   430  0899                     	;# 
   431  089A                     	;# 
   432  089B                     	;# 
   433  090C                     	;# 
   434  090E                     	;# 
   435  090F                     	;# 
   436  091F                     	;# 
   437  091F                     	;# 
   438  098F                     	;# 
   439  098F                     	;# 
   440  0990                     	;# 
   441  0991                     	;# 
   442  0992                     	;# 
   443  0993                     	;# 
   444  0994                     	;# 
   445  0995                     	;# 
   446  0996                     	;# 
   447  0997                     	;# 
   448  0E0F                     	;# 
   449  0E10                     	;# 
   450  0E11                     	;# 
   451  0E12                     	;# 
   452  0E13                     	;# 
   453  0E14                     	;# 
   454  0E15                     	;# 
   455  0E16                     	;# 
   456  0E17                     	;# 
   457  0E18                     	;# 
   458  0E19                     	;# 
   459  0E1A                     	;# 
   460  0E1B                     	;# 
   461  0E1C                     	;# 
   462  0E1D                     	;# 
   463  0E1E                     	;# 
   464  0E1F                     	;# 
   465  0E20                     	;# 
   466  0E21                     	;# 
   467  0E22                     	;# 
   468  0E23                     	;# 
   469  0E24                     	;# 
   470  0E25                     	;# 
   471  0E26                     	;# 
   472  0E27                     	;# 
   473  0E28                     	;# 
   474  0E29                     	;# 
   475  0E2A                     	;# 
   476  0E2B                     	;# 
   477  0E2C                     	;# 
   478  0E2D                     	;# 
   479  0E2E                     	;# 
   480  0E2F                     	;# 
   481  0E30                     	;# 
   482  0E31                     	;# 
   483  0E32                     	;# 
   484  0E33                     	;# 
   485  0E34                     	;# 
   486  0E35                     	;# 
   487  0E36                     	;# 
   488  0E37                     	;# 
   489  0E8F                     	;# 
   490  0E90                     	;# 
   491  0E91                     	;# 
   492  0E92                     	;# 
   493  0E93                     	;# 
   494  0E94                     	;# 
   495  0E95                     	;# 
   496  0E96                     	;# 
   497  0E97                     	;# 
   498  0E9C                     	;# 
   499  0E9D                     	;# 
   500  0E9E                     	;# 
   501  0EA1                     	;# 
   502  0EA2                     	;# 
   503  0EA3                     	;# 
   504  0EA4                     	;# 
   505  0EA5                     	;# 
   506  0EA9                     	;# 
   507  0EAA                     	;# 
   508  0EAB                     	;# 
   509  0EAC                     	;# 
   510  0EB1                     	;# 
   511  0EB2                     	;# 
   512  0EB3                     	;# 
   513  0EB8                     	;# 
   514  0EB9                     	;# 
   515  0EBA                     	;# 
   516  0EBB                     	;# 
   517  0EBC                     	;# 
   518  0EBD                     	;# 
   519  0EBE                     	;# 
   520  0EC3                     	;# 
   521  0EC5                     	;# 
   522  0EC6                     	;# 
   523  0EC7                     	;# 
   524  0EC8                     	;# 
   525  0EC9                     	;# 
   526  0ECA                     	;# 
   527  0ECB                     	;# 
   528  0ECC                     	;# 
   529  0F10                     	;# 
   530  0F11                     	;# 
   531  0F12                     	;# 
   532  0F13                     	;# 
   533  0F14                     	;# 
   534  0F15                     	;# 
   535  0F16                     	;# 
   536  0F17                     	;# 
   537  0F18                     	;# 
   538  0F19                     	;# 
   539  0F1A                     	;# 
   540  0F1B                     	;# 
   541  0F1C                     	;# 
   542  0F1D                     	;# 
   543  0F1E                     	;# 
   544  0F1F                     	;# 
   545  0F20                     	;# 
   546  0F21                     	;# 
   547  0F22                     	;# 
   548  0F23                     	;# 
   549  0F24                     	;# 
   550  0F25                     	;# 
   551  0F26                     	;# 
   552  0F27                     	;# 
   553  0F38                     	;# 
   554  0F39                     	;# 
   555  0F3A                     	;# 
   556  0F3B                     	;# 
   557  0F3C                     	;# 
   558  0F3D                     	;# 
   559  0F3E                     	;# 
   560  0F3F                     	;# 
   561  0F40                     	;# 
   562  0F41                     	;# 
   563  0F43                     	;# 
   564  0F44                     	;# 
   565  0F45                     	;# 
   566  0F46                     	;# 
   567  0F47                     	;# 
   568  0F48                     	;# 
   569  0F49                     	;# 
   570  0F4A                     	;# 
   571  0F4B                     	;# 
   572  0F4C                     	;# 
   573  0F4E                     	;# 
   574  0F4F                     	;# 
   575  0F50                     	;# 
   576  0F51                     	;# 
   577  0F52                     	;# 
   578  0F53                     	;# 
   579  0F54                     	;# 
   580  0F55                     	;# 
   581  0F56                     	;# 
   582  0F57                     	;# 
   583  0F65                     	;# 
   584  0F68                     	;# 
   585  0F69                     	;# 
   586  0F6A                     	;# 
   587  0F6B                     	;# 
   588  0FE4                     	;# 
   589  0FE5                     	;# 
   590  0FE6                     	;# 
   591  0FE7                     	;# 
   592  0FE8                     	;# 
   593  0FE9                     	;# 
   594  0FEA                     	;# 
   595  0FEB                     	;# 
   596  0FED                     	;# 
   597  0FEE                     	;# 
   598  0FEF                     	;# 
   599  0000                     	;# 
   600  0001                     	;# 
   601  0002                     	;# 
   602  0003                     	;# 
   603  0004                     	;# 
   604  0005                     	;# 
   605  0006                     	;# 
   606  0007                     	;# 
   607  0008                     	;# 
   608  0009                     	;# 
   609  000A                     	;# 
   610  000B                     	;# 
   611  000C                     	;# 
   612  000D                     	;# 
   613  000E                     	;# 
   614  0010                     	;# 
   615  0011                     	;# 
   616  0012                     	;# 
   617  0013                     	;# 
   618  0016                     	;# 
   619  0017                     	;# 
   620  0018                     	;# 
   621  001C                     	;# 
   622  001C                     	;# 
   623  001D                     	;# 
   624  001D                     	;# 
   625  001E                     	;# 
   626  001F                     	;# 
   627  008C                     	;# 
   628  008C                     	;# 
   629  008D                     	;# 
   630  008E                     	;# 
   631  008E                     	;# 
   632  008F                     	;# 
   633  0090                     	;# 
   634  0090                     	;# 
   635  0091                     	;# 
   636  0093                     	;# 
   637  0094                     	;# 
   638  0095                     	;# 
   639  0096                     	;# 
   640  0097                     	;# 
   641  0098                     	;# 
   642  0099                     	;# 
   643  009A                     	;# 
   644  009B                     	;# 
   645  009C                     	;# 
   646  009D                     	;# 
   647  009E                     	;# 
   648  010C                     	;# 
   649  010D                     	;# 
   650  010E                     	;# 
   651  010E                     	;# 
   652  010F                     	;# 
   653  0110                     	;# 
   654  0110                     	;# 
   655  0111                     	;# 
   656  0112                     	;# 
   657  0112                     	;# 
   658  0113                     	;# 
   659  0114                     	;# 
   660  0114                     	;# 
   661  0115                     	;# 
   662  0116                     	;# 
   663  0116                     	;# 
   664  0117                     	;# 
   665  0119                     	;# 
   666  0119                     	;# 
   667  0119                     	;# 
   668  011A                     	;# 
   669  011A                     	;# 
   670  011A                     	;# 
   671  011B                     	;# 
   672  011B                     	;# 
   673  011B                     	;# 
   674  011B                     	;# 
   675  011B                     	;# 
   676  011C                     	;# 
   677  011C                     	;# 
   678  011C                     	;# 
   679  011D                     	;# 
   680  011D                     	;# 
   681  011D                     	;# 
   682  011E                     	;# 
   683  011E                     	;# 
   684  011E                     	;# 
   685  011F                     	;# 
   686  011F                     	;# 
   687  011F                     	;# 
   688  011F                     	;# 
   689  011F                     	;# 
   690  018C                     	;# 
   691  018D                     	;# 
   692  018E                     	;# 
   693  018F                     	;# 
   694  0190                     	;# 
   695  0191                     	;# 
   696  0192                     	;# 
   697  0196                     	;# 
   698  0197                     	;# 
   699  0198                     	;# 
   700  0199                     	;# 
   701  019A                     	;# 
   702  019B                     	;# 
   703  019C                     	;# 
   704  020C                     	;# 
   705  020C                     	;# 
   706  020D                     	;# 
   707  020E                     	;# 
   708  020F                     	;# 
   709  020F                     	;# 
   710  0210                     	;# 
   711  0210                     	;# 
   712  0211                     	;# 
   713  0211                     	;# 
   714  0212                     	;# 
   715  0212                     	;# 
   716  0213                     	;# 
   717  0214                     	;# 
   718  0215                     	;# 
   719  0215                     	;# 
   720  0216                     	;# 
   721  0216                     	;# 
   722  0217                     	;# 
   723  0217                     	;# 
   724  0218                     	;# 
   725  0218                     	;# 
   726  0219                     	;# 
   727  021A                     	;# 
   728  021B                     	;# 
   729  021B                     	;# 
   730  021C                     	;# 
   731  021C                     	;# 
   732  021D                     	;# 
   733  021D                     	;# 
   734  021E                     	;# 
   735  021F                     	;# 
   736  028C                     	;# 
   737  028C                     	;# 
   738  028D                     	;# 
   739  028D                     	;# 
   740  028E                     	;# 
   741  028F                     	;# 
   742  0290                     	;# 
   743  0290                     	;# 
   744  0291                     	;# 
   745  0292                     	;# 
   746  0292                     	;# 
   747  0293                     	;# 
   748  0293                     	;# 
   749  0294                     	;# 
   750  0295                     	;# 
   751  0296                     	;# 
   752  0296                     	;# 
   753  0297                     	;# 
   754  0298                     	;# 
   755  0298                     	;# 
   756  0299                     	;# 
   757  0299                     	;# 
   758  029A                     	;# 
   759  029B                     	;# 
   760  029C                     	;# 
   761  029C                     	;# 
   762  029D                     	;# 
   763  030C                     	;# 
   764  030C                     	;# 
   765  030D                     	;# 
   766  030E                     	;# 
   767  030F                     	;# 
   768  0310                     	;# 
   769  0310                     	;# 
   770  0311                     	;# 
   771  0312                     	;# 
   772  0313                     	;# 
   773  0314                     	;# 
   774  0314                     	;# 
   775  0315                     	;# 
   776  0316                     	;# 
   777  0317                     	;# 
   778  0318                     	;# 
   779  0318                     	;# 
   780  0319                     	;# 
   781  031A                     	;# 
   782  031B                     	;# 
   783  031C                     	;# 
   784  031C                     	;# 
   785  031D                     	;# 
   786  031E                     	;# 
   787  031F                     	;# 
   788  038C                     	;# 
   789  038C                     	;# 
   790  038D                     	;# 
   791  038E                     	;# 
   792  0390                     	;# 
   793  0390                     	;# 
   794  0391                     	;# 
   795  0392                     	;# 
   796  040C                     	;# 
   797  040D                     	;# 
   798  040E                     	;# 
   799  040F                     	;# 
   800  0410                     	;# 
   801  0411                     	;# 
   802  0416                     	;# 
   803  0416                     	;# 
   804  0417                     	;# 
   805  0418                     	;# 
   806  0418                     	;# 
   807  0419                     	;# 
   808  041A                     	;# 
   809  041A                     	;# 
   810  041B                     	;# 
   811  041C                     	;# 
   812  041C                     	;# 
   813  041D                     	;# 
   814  041E                     	;# 
   815  041F                     	;# 
   816  048C                     	;# 
   817  048C                     	;# 
   818  048D                     	;# 
   819  048E                     	;# 
   820  048F                     	;# 
   821  048F                     	;# 
   822  0490                     	;# 
   823  0491                     	;# 
   824  0492                     	;# 
   825  0492                     	;# 
   826  0493                     	;# 
   827  0494                     	;# 
   828  0495                     	;# 
   829  0495                     	;# 
   830  0496                     	;# 
   831  0497                     	;# 
   832  0498                     	;# 
   833  0499                     	;# 
   834  049A                     	;# 
   835  049B                     	;# 
   836  049C                     	;# 
   837  049D                     	;# 
   838  050C                     	;# 
   839  050C                     	;# 
   840  050D                     	;# 
   841  050E                     	;# 
   842  050F                     	;# 
   843  050F                     	;# 
   844  0510                     	;# 
   845  0511                     	;# 
   846  0512                     	;# 
   847  0512                     	;# 
   848  0513                     	;# 
   849  0514                     	;# 
   850  0515                     	;# 
   851  0515                     	;# 
   852  0516                     	;# 
   853  0517                     	;# 
   854  0518                     	;# 
   855  0519                     	;# 
   856  051A                     	;# 
   857  051B                     	;# 
   858  051C                     	;# 
   859  051D                     	;# 
   860  058C                     	;# 
   861  058C                     	;# 
   862  058D                     	;# 
   863  058E                     	;# 
   864  058F                     	;# 
   865  058F                     	;# 
   866  0590                     	;# 
   867  0591                     	;# 
   868  0592                     	;# 
   869  0593                     	;# 
   870  060C                     	;# 
   871  060D                     	;# 
   872  060E                     	;# 
   873  060F                     	;# 
   874  0610                     	;# 
   875  0611                     	;# 
   876  0612                     	;# 
   877  0613                     	;# 
   878  0614                     	;# 
   879  0616                     	;# 
   880  0617                     	;# 
   881  0618                     	;# 
   882  0619                     	;# 
   883  061A                     	;# 
   884  061B                     	;# 
   885  061C                     	;# 
   886  061D                     	;# 
   887  061E                     	;# 
   888  068C                     	;# 
   889  068D                     	;# 
   890  068E                     	;# 
   891  068F                     	;# 
   892  0690                     	;# 
   893  0691                     	;# 
   894  0692                     	;# 
   895  0693                     	;# 
   896  0694                     	;# 
   897  070C                     	;# 
   898  070D                     	;# 
   899  070E                     	;# 
   900  070F                     	;# 
   901  0710                     	;# 
   902  0711                     	;# 
   903  0712                     	;# 
   904  0713                     	;# 
   905  0714                     	;# 
   906  0716                     	;# 
   907  0717                     	;# 
   908  0718                     	;# 
   909  0719                     	;# 
   910  071A                     	;# 
   911  071B                     	;# 
   912  071C                     	;# 
   913  071D                     	;# 
   914  071E                     	;# 
   915  0796                     	;# 
   916  0797                     	;# 
   917  0798                     	;# 
   918  0799                     	;# 
   919  079A                     	;# 
   920  079B                     	;# 
   921  080C                     	;# 
   922  080D                     	;# 
   923  080E                     	;# 
   924  080F                     	;# 
   925  0810                     	;# 
   926  0811                     	;# 
   927  0812                     	;# 
   928  0813                     	;# 
   929  0814                     	;# 
   930  081A                     	;# 
   931  081B                     	;# 
   932  081C                     	;# 
   933  081D                     	;# 
   934  081E                     	;# 
   935  081F                     	;# 
   936  088C                     	;# 
   937  088D                     	;# 
   938  088E                     	;# 
   939  088F                     	;# 
   940  0890                     	;# 
   941  0891                     	;# 
   942  0892                     	;# 
   943  0893                     	;# 
   944  0895                     	;# 
   945  0896                     	;# 
   946  0897                     	;# 
   947  0898                     	;# 
   948  0899                     	;# 
   949  089A                     	;# 
   950  089B                     	;# 
   951  090C                     	;# 
   952  090E                     	;# 
   953  090F                     	;# 
   954  091F                     	;# 
   955  091F                     	;# 
   956  098F                     	;# 
   957  098F                     	;# 
   958  0990                     	;# 
   959  0991                     	;# 
   960  0992                     	;# 
   961  0993                     	;# 
   962  0994                     	;# 
   963  0995                     	;# 
   964  0996                     	;# 
   965  0997                     	;# 
   966  0E0F                     	;# 
   967  0E10                     	;# 
   968  0E11                     	;# 
   969  0E12                     	;# 
   970  0E13                     	;# 
   971  0E14                     	;# 
   972  0E15                     	;# 
   973  0E16                     	;# 
   974  0E17                     	;# 
   975  0E18                     	;# 
   976  0E19                     	;# 
   977  0E1A                     	;# 
   978  0E1B                     	;# 
   979  0E1C                     	;# 
   980  0E1D                     	;# 
   981  0E1E                     	;# 
   982  0E1F                     	;# 
   983  0E20                     	;# 
   984  0E21                     	;# 
   985  0E22                     	;# 
   986  0E23                     	;# 
   987  0E24                     	;# 
   988  0E25                     	;# 
   989  0E26                     	;# 
   990  0E27                     	;# 
   991  0E28                     	;# 
   992  0E29                     	;# 
   993  0E2A                     	;# 
   994  0E2B                     	;# 
   995  0E2C                     	;# 
   996  0E2D                     	;# 
   997  0E2E                     	;# 
   998  0E2F                     	;# 
   999  0E30                     	;# 
  1000  0E31                     	;# 
  1001  0E32                     	;# 
  1002  0E33                     	;# 
  1003  0E34                     	;# 
  1004  0E35                     	;# 
  1005  0E36                     	;# 
  1006  0E37                     	;# 
  1007  0E8F                     	;# 
  1008  0E90                     	;# 
  1009  0E91                     	;# 
  1010  0E92                     	;# 
  1011  0E93                     	;# 
  1012  0E94                     	;# 
  1013  0E95                     	;# 
  1014  0E96                     	;# 
  1015  0E97                     	;# 
  1016  0E9C                     	;# 
  1017  0E9D                     	;# 
  1018  0E9E                     	;# 
  1019  0EA1                     	;# 
  1020  0EA2                     	;# 
  1021  0EA3                     	;# 
  1022  0EA4                     	;# 
  1023  0EA5                     	;# 
  1024  0EA9                     	;# 
  1025  0EAA                     	;# 
  1026  0EAB                     	;# 
  1027  0EAC                     	;# 
  1028  0EB1                     	;# 
  1029  0EB2                     	;# 
  1030  0EB3                     	;# 
  1031  0EB8                     	;# 
  1032  0EB9                     	;# 
  1033  0EBA                     	;# 
  1034  0EBB                     	;# 
  1035  0EBC                     	;# 
  1036  0EBD                     	;# 
  1037  0EBE                     	;# 
  1038  0EC3                     	;# 
  1039  0EC5                     	;# 
  1040  0EC6                     	;# 
  1041  0EC7                     	;# 
  1042  0EC8                     	;# 
  1043  0EC9                     	;# 
  1044  0ECA                     	;# 
  1045  0ECB                     	;# 
  1046  0ECC                     	;# 
  1047  0F10                     	;# 
  1048  0F11                     	;# 
  1049  0F12                     	;# 
  1050  0F13                     	;# 
  1051  0F14                     	;# 
  1052  0F15                     	;# 
  1053  0F16                     	;# 
  1054  0F17                     	;# 
  1055  0F18                     	;# 
  1056  0F19                     	;# 
  1057  0F1A                     	;# 
  1058  0F1B                     	;# 
  1059  0F1C                     	;# 
  1060  0F1D                     	;# 
  1061  0F1E                     	;# 
  1062  0F1F                     	;# 
  1063  0F20                     	;# 
  1064  0F21                     	;# 
  1065  0F22                     	;# 
  1066  0F23                     	;# 
  1067  0F24                     	;# 
  1068  0F25                     	;# 
  1069  0F26                     	;# 
  1070  0F27                     	;# 
  1071  0F38                     	;# 
  1072  0F39                     	;# 
  1073  0F3A                     	;# 
  1074  0F3B                     	;# 
  1075  0F3C                     	;# 
  1076  0F3D                     	;# 
  1077  0F3E                     	;# 
  1078  0F3F                     	;# 
  1079  0F40                     	;# 
  1080  0F41                     	;# 
  1081  0F43                     	;# 
  1082  0F44                     	;# 
  1083  0F45                     	;# 
  1084  0F46                     	;# 
  1085  0F47                     	;# 
  1086  0F48                     	;# 
  1087  0F49                     	;# 
  1088  0F4A                     	;# 
  1089  0F4B                     	;# 
  1090  0F4C                     	;# 
  1091  0F4E                     	;# 
  1092  0F4F                     	;# 
  1093  0F50                     	;# 
  1094  0F51                     	;# 
  1095  0F52                     	;# 
  1096  0F53                     	;# 
  1097  0F54                     	;# 
  1098  0F55                     	;# 
  1099  0F56                     	;# 
  1100  0F57                     	;# 
  1101  0F65                     	;# 
  1102  0F68                     	;# 
  1103  0F69                     	;# 
  1104  0F6A                     	;# 
  1105  0F6B                     	;# 
  1106  0FE4                     	;# 
  1107  0FE5                     	;# 
  1108  0FE6                     	;# 
  1109  0FE7                     	;# 
  1110  0FE8                     	;# 
  1111  0FE9                     	;# 
  1112  0FEA                     	;# 
  1113  0FEB                     	;# 
  1114  0FED                     	;# 
  1115  0FEE                     	;# 
  1116  0FEF                     	;# 
  1117  0000                     	;# 
  1118  0001                     	;# 
  1119  0002                     	;# 
  1120  0003                     	;# 
  1121  0004                     	;# 
  1122  0005                     	;# 
  1123  0006                     	;# 
  1124  0007                     	;# 
  1125  0008                     	;# 
  1126  0009                     	;# 
  1127  000A                     	;# 
  1128  000B                     	;# 
  1129  000C                     	;# 
  1130  000D                     	;# 
  1131  000E                     	;# 
  1132  0010                     	;# 
  1133  0011                     	;# 
  1134  0012                     	;# 
  1135  0013                     	;# 
  1136  0016                     	;# 
  1137  0017                     	;# 
  1138  0018                     	;# 
  1139  001C                     	;# 
  1140  001C                     	;# 
  1141  001D                     	;# 
  1142  001D                     	;# 
  1143  001E                     	;# 
  1144  001F                     	;# 
  1145  008C                     	;# 
  1146  008C                     	;# 
  1147  008D                     	;# 
  1148  008E                     	;# 
  1149  008E                     	;# 
  1150  008F                     	;# 
  1151  0090                     	;# 
  1152  0090                     	;# 
  1153  0091                     	;# 
  1154  0093                     	;# 
  1155  0094                     	;# 
  1156  0095                     	;# 
  1157  0096                     	;# 
  1158  0097                     	;# 
  1159  0098                     	;# 
  1160  0099                     	;# 
  1161  009A                     	;# 
  1162  009B                     	;# 
  1163  009C                     	;# 
  1164  009D                     	;# 
  1165  009E                     	;# 
  1166  010C                     	;# 
  1167  010D                     	;# 
  1168  010E                     	;# 
  1169  010E                     	;# 
  1170  010F                     	;# 
  1171  0110                     	;# 
  1172  0110                     	;# 
  1173  0111                     	;# 
  1174  0112                     	;# 
  1175  0112                     	;# 
  1176  0113                     	;# 
  1177  0114                     	;# 
  1178  0114                     	;# 
  1179  0115                     	;# 
  1180  0116                     	;# 
  1181  0116                     	;# 
  1182  0117                     	;# 
  1183  0119                     	;# 
  1184  0119                     	;# 
  1185  0119                     	;# 
  1186  011A                     	;# 
  1187  011A                     	;# 
  1188  011A                     	;# 
  1189  011B                     	;# 
  1190  011B                     	;# 
  1191  011B                     	;# 
  1192  011B                     	;# 
  1193  011B                     	;# 
  1194  011C                     	;# 
  1195  011C                     	;# 
  1196  011C                     	;# 
  1197  011D                     	;# 
  1198  011D                     	;# 
  1199  011D                     	;# 
  1200  011E                     	;# 
  1201  011E                     	;# 
  1202  011E                     	;# 
  1203  011F                     	;# 
  1204  011F                     	;# 
  1205  011F                     	;# 
  1206  011F                     	;# 
  1207  011F                     	;# 
  1208  018C                     	;# 
  1209  018D                     	;# 
  1210  018E                     	;# 
  1211  018F                     	;# 
  1212  0190                     	;# 
  1213  0191                     	;# 
  1214  0192                     	;# 
  1215  0196                     	;# 
  1216  0197                     	;# 
  1217  0198                     	;# 
  1218  0199                     	;# 
  1219  019A                     	;# 
  1220  019B                     	;# 
  1221  019C                     	;# 
  1222  020C                     	;# 
  1223  020C                     	;# 
  1224  020D                     	;# 
  1225  020E                     	;# 
  1226  020F                     	;# 
  1227  020F                     	;# 
  1228  0210                     	;# 
  1229  0210                     	;# 
  1230  0211                     	;# 
  1231  0211                     	;# 
  1232  0212                     	;# 
  1233  0212                     	;# 
  1234  0213                     	;# 
  1235  0214                     	;# 
  1236  0215                     	;# 
  1237  0215                     	;# 
  1238  0216                     	;# 
  1239  0216                     	;# 
  1240  0217                     	;# 
  1241  0217                     	;# 
  1242  0218                     	;# 
  1243  0218                     	;# 
  1244  0219                     	;# 
  1245  021A                     	;# 
  1246  021B                     	;# 
  1247  021B                     	;# 
  1248  021C                     	;# 
  1249  021C                     	;# 
  1250  021D                     	;# 
  1251  021D                     	;# 
  1252  021E                     	;# 
  1253  021F                     	;# 
  1254  028C                     	;# 
  1255  028C                     	;# 
  1256  028D                     	;# 
  1257  028D                     	;# 
  1258  028E                     	;# 
  1259  028F                     	;# 
  1260  0290                     	;# 
  1261  0290                     	;# 
  1262  0291                     	;# 
  1263  0292                     	;# 
  1264  0292                     	;# 
  1265  0293                     	;# 
  1266  0293                     	;# 
  1267  0294                     	;# 
  1268  0295                     	;# 
  1269  0296                     	;# 
  1270  0296                     	;# 
  1271  0297                     	;# 
  1272  0298                     	;# 
  1273  0298                     	;# 
  1274  0299                     	;# 
  1275  0299                     	;# 
  1276  029A                     	;# 
  1277  029B                     	;# 
  1278  029C                     	;# 
  1279  029C                     	;# 
  1280  029D                     	;# 
  1281  030C                     	;# 
  1282  030C                     	;# 
  1283  030D                     	;# 
  1284  030E                     	;# 
  1285  030F                     	;# 
  1286  0310                     	;# 
  1287  0310                     	;# 
  1288  0311                     	;# 
  1289  0312                     	;# 
  1290  0313                     	;# 
  1291  0314                     	;# 
  1292  0314                     	;# 
  1293  0315                     	;# 
  1294  0316                     	;# 
  1295  0317                     	;# 
  1296  0318                     	;# 
  1297  0318                     	;# 
  1298  0319                     	;# 
  1299  031A                     	;# 
  1300  031B                     	;# 
  1301  031C                     	;# 
  1302  031C                     	;# 
  1303  031D                     	;# 
  1304  031E                     	;# 
  1305  031F                     	;# 
  1306  038C                     	;# 
  1307  038C                     	;# 
  1308  038D                     	;# 
  1309  038E                     	;# 
  1310  0390                     	;# 
  1311  0390                     	;# 
  1312  0391                     	;# 
  1313  0392                     	;# 
  1314  040C                     	;# 
  1315  040D                     	;# 
  1316  040E                     	;# 
  1317  040F                     	;# 
  1318  0410                     	;# 
  1319  0411                     	;# 
  1320  0416                     	;# 
  1321  0416                     	;# 
  1322  0417                     	;# 
  1323  0418                     	;# 
  1324  0418                     	;# 
  1325  0419                     	;# 
  1326  041A                     	;# 
  1327  041A                     	;# 
  1328  041B                     	;# 
  1329  041C                     	;# 
  1330  041C                     	;# 
  1331  041D                     	;# 
  1332  041E                     	;# 
  1333  041F                     	;# 
  1334  048C                     	;# 
  1335  048C                     	;# 
  1336  048D                     	;# 
  1337  048E                     	;# 
  1338  048F                     	;# 
  1339  048F                     	;# 
  1340  0490                     	;# 
  1341  0491                     	;# 
  1342  0492                     	;# 
  1343  0492                     	;# 
  1344  0493                     	;# 
  1345  0494                     	;# 
  1346  0495                     	;# 
  1347  0495                     	;# 
  1348  0496                     	;# 
  1349  0497                     	;# 
  1350  0498                     	;# 
  1351  0499                     	;# 
  1352  049A                     	;# 
  1353  049B                     	;# 
  1354  049C                     	;# 
  1355  049D                     	;# 
  1356  050C                     	;# 
  1357  050C                     	;# 
  1358  050D                     	;# 
  1359  050E                     	;# 
  1360  050F                     	;# 
  1361  050F                     	;# 
  1362  0510                     	;# 
  1363  0511                     	;# 
  1364  0512                     	;# 
  1365  0512                     	;# 
  1366  0513                     	;# 
  1367  0514                     	;# 
  1368  0515                     	;# 
  1369  0515                     	;# 
  1370  0516                     	;# 
  1371  0517                     	;# 
  1372  0518                     	;# 
  1373  0519                     	;# 
  1374  051A                     	;# 
  1375  051B                     	;# 
  1376  051C                     	;# 
  1377  051D                     	;# 
  1378  058C                     	;# 
  1379  058C                     	;# 
  1380  058D                     	;# 
  1381  058E                     	;# 
  1382  058F                     	;# 
  1383  058F                     	;# 
  1384  0590                     	;# 
  1385  0591                     	;# 
  1386  0592                     	;# 
  1387  0593                     	;# 
  1388  060C                     	;# 
  1389  060D                     	;# 
  1390  060E                     	;# 
  1391  060F                     	;# 
  1392  0610                     	;# 
  1393  0611                     	;# 
  1394  0612                     	;# 
  1395  0613                     	;# 
  1396  0614                     	;# 
  1397  0616                     	;# 
  1398  0617                     	;# 
  1399  0618                     	;# 
  1400  0619                     	;# 
  1401  061A                     	;# 
  1402  061B                     	;# 
  1403  061C                     	;# 
  1404  061D                     	;# 
  1405  061E                     	;# 
  1406  068C                     	;# 
  1407  068D                     	;# 
  1408  068E                     	;# 
  1409  068F                     	;# 
  1410  0690                     	;# 
  1411  0691                     	;# 
  1412  0692                     	;# 
  1413  0693                     	;# 
  1414  0694                     	;# 
  1415  070C                     	;# 
  1416  070D                     	;# 
  1417  070E                     	;# 
  1418  070F                     	;# 
  1419  0710                     	;# 
  1420  0711                     	;# 
  1421  0712                     	;# 
  1422  0713                     	;# 
  1423  0714                     	;# 
  1424  0716                     	;# 
  1425  0717                     	;# 
  1426  0718                     	;# 
  1427  0719                     	;# 
  1428  071A                     	;# 
  1429  071B                     	;# 
  1430  071C                     	;# 
  1431  071D                     	;# 
  1432  071E                     	;# 
  1433  0796                     	;# 
  1434  0797                     	;# 
  1435  0798                     	;# 
  1436  0799                     	;# 
  1437  079A                     	;# 
  1438  079B                     	;# 
  1439  080C                     	;# 
  1440  080D                     	;# 
  1441  080E                     	;# 
  1442  080F                     	;# 
  1443  0810                     	;# 
  1444  0811                     	;# 
  1445  0812                     	;# 
  1446  0813                     	;# 
  1447  0814                     	;# 
  1448  081A                     	;# 
  1449  081B                     	;# 
  1450  081C                     	;# 
  1451  081D                     	;# 
  1452  081E                     	;# 
  1453  081F                     	;# 
  1454  088C                     	;# 
  1455  088D                     	;# 
  1456  088E                     	;# 
  1457  088F                     	;# 
  1458  0890                     	;# 
  1459  0891                     	;# 
  1460  0892                     	;# 
  1461  0893                     	;# 
  1462  0895                     	;# 
  1463  0896                     	;# 
  1464  0897                     	;# 
  1465  0898                     	;# 
  1466  0899                     	;# 
  1467  089A                     	;# 
  1468  089B                     	;# 
  1469  090C                     	;# 
  1470  090E                     	;# 
  1471  090F                     	;# 
  1472  091F                     	;# 
  1473  091F                     	;# 
  1474  098F                     	;# 
  1475  098F                     	;# 
  1476  0990                     	;# 
  1477  0991                     	;# 
  1478  0992                     	;# 
  1479  0993                     	;# 
  1480  0994                     	;# 
  1481  0995                     	;# 
  1482  0996                     	;# 
  1483  0997                     	;# 
  1484  0E0F                     	;# 
  1485  0E10                     	;# 
  1486  0E11                     	;# 
  1487  0E12                     	;# 
  1488  0E13                     	;# 
  1489  0E14                     	;# 
  1490  0E15                     	;# 
  1491  0E16                     	;# 
  1492  0E17                     	;# 
  1493  0E18                     	;# 
  1494  0E19                     	;# 
  1495  0E1A                     	;# 
  1496  0E1B                     	;# 
  1497  0E1C                     	;# 
  1498  0E1D                     	;# 
  1499  0E1E                     	;# 
  1500  0E1F                     	;# 
  1501  0E20                     	;# 
  1502  0E21                     	;# 
  1503  0E22                     	;# 
  1504  0E23                     	;# 
  1505  0E24                     	;# 
  1506  0E25                     	;# 
  1507  0E26                     	;# 
  1508  0E27                     	;# 
  1509  0E28                     	;# 
  1510  0E29                     	;# 
  1511  0E2A                     	;# 
  1512  0E2B                     	;# 
  1513  0E2C                     	;# 
  1514  0E2D                     	;# 
  1515  0E2E                     	;# 
  1516  0E2F                     	;# 
  1517  0E30                     	;# 
  1518  0E31                     	;# 
  1519  0E32                     	;# 
  1520  0E33                     	;# 
  1521  0E34                     	;# 
  1522  0E35                     	;# 
  1523  0E36                     	;# 
  1524  0E37                     	;# 
  1525  0E8F                     	;# 
  1526  0E90                     	;# 
  1527  0E91                     	;# 
  1528  0E92                     	;# 
  1529  0E93                     	;# 
  1530  0E94                     	;# 
  1531  0E95                     	;# 
  1532  0E96                     	;# 
  1533  0E97                     	;# 
  1534  0E9C                     	;# 
  1535  0E9D                     	;# 
  1536  0E9E                     	;# 
  1537  0EA1                     	;# 
  1538  0EA2                     	;# 
  1539  0EA3                     	;# 
  1540  0EA4                     	;# 
  1541  0EA5                     	;# 
  1542  0EA9                     	;# 
  1543  0EAA                     	;# 
  1544  0EAB                     	;# 
  1545  0EAC                     	;# 
  1546  0EB1                     	;# 
  1547  0EB2                     	;# 
  1548  0EB3                     	;# 
  1549  0EB8                     	;# 
  1550  0EB9                     	;# 
  1551  0EBA                     	;# 
  1552  0EBB                     	;# 
  1553  0EBC                     	;# 
  1554  0EBD                     	;# 
  1555  0EBE                     	;# 
  1556  0EC3                     	;# 
  1557  0EC5                     	;# 
  1558  0EC6                     	;# 
  1559  0EC7                     	;# 
  1560  0EC8                     	;# 
  1561  0EC9                     	;# 
  1562  0ECA                     	;# 
  1563  0ECB                     	;# 
  1564  0ECC                     	;# 
  1565  0F10                     	;# 
  1566  0F11                     	;# 
  1567  0F12                     	;# 
  1568  0F13                     	;# 
  1569  0F14                     	;# 
  1570  0F15                     	;# 
  1571  0F16                     	;# 
  1572  0F17                     	;# 
  1573  0F18                     	;# 
  1574  0F19                     	;# 
  1575  0F1A                     	;# 
  1576  0F1B                     	;# 
  1577  0F1C                     	;# 
  1578  0F1D                     	;# 
  1579  0F1E                     	;# 
  1580  0F1F                     	;# 
  1581  0F20                     	;# 
  1582  0F21                     	;# 
  1583  0F22                     	;# 
  1584  0F23                     	;# 
  1585  0F24                     	;# 
  1586  0F25                     	;# 
  1587  0F26                     	;# 
  1588  0F27                     	;# 
  1589  0F38                     	;# 
  1590  0F39                     	;# 
  1591  0F3A                     	;# 
  1592  0F3B                     	;# 
  1593  0F3C                     	;# 
  1594  0F3D                     	;# 
  1595  0F3E                     	;# 
  1596  0F3F                     	;# 
  1597  0F40                     	;# 
  1598  0F41                     	;# 
  1599  0F43                     	;# 
  1600  0F44                     	;# 
  1601  0F45                     	;# 
  1602  0F46                     	;# 
  1603  0F47                     	;# 
  1604  0F48                     	;# 
  1605  0F49                     	;# 
  1606  0F4A                     	;# 
  1607  0F4B                     	;# 
  1608  0F4C                     	;# 
  1609  0F4E                     	;# 
  1610  0F4F                     	;# 
  1611  0F50                     	;# 
  1612  0F51                     	;# 
  1613  0F52                     	;# 
  1614  0F53                     	;# 
  1615  0F54                     	;# 
  1616  0F55                     	;# 
  1617  0F56                     	;# 
  1618  0F57                     	;# 
  1619  0F65                     	;# 
  1620  0F68                     	;# 
  1621  0F69                     	;# 
  1622  0F6A                     	;# 
  1623  0F6B                     	;# 
  1624  0FE4                     	;# 
  1625  0FE5                     	;# 
  1626  0FE6                     	;# 
  1627  0FE7                     	;# 
  1628  0FE8                     	;# 
  1629  0FE9                     	;# 
  1630  0FEA                     	;# 
  1631  0FEB                     	;# 
  1632  0FED                     	;# 
  1633  0FEE                     	;# 
  1634  0FEF                     	;# 
  1635  0000                     	;# 
  1636  0001                     	;# 
  1637  0002                     	;# 
  1638  0003                     	;# 
  1639  0004                     	;# 
  1640  0005                     	;# 
  1641  0006                     	;# 
  1642  0007                     	;# 
  1643  0008                     	;# 
  1644  0009                     	;# 
  1645  000A                     	;# 
  1646  000B                     	;# 
  1647  000C                     	;# 
  1648  000D                     	;# 
  1649  000E                     	;# 
  1650  0010                     	;# 
  1651  0011                     	;# 
  1652  0012                     	;# 
  1653  0013                     	;# 
  1654  0016                     	;# 
  1655  0017                     	;# 
  1656  0018                     	;# 
  1657  001C                     	;# 
  1658  001C                     	;# 
  1659  001D                     	;# 
  1660  001D                     	;# 
  1661  001E                     	;# 
  1662  001F                     	;# 
  1663  008C                     	;# 
  1664  008C                     	;# 
  1665  008D                     	;# 
  1666  008E                     	;# 
  1667  008E                     	;# 
  1668  008F                     	;# 
  1669  0090                     	;# 
  1670  0090                     	;# 
  1671  0091                     	;# 
  1672  0093                     	;# 
  1673  0094                     	;# 
  1674  0095                     	;# 
  1675  0096                     	;# 
  1676  0097                     	;# 
  1677  0098                     	;# 
  1678  0099                     	;# 
  1679  009A                     	;# 
  1680  009B                     	;# 
  1681  009C                     	;# 
  1682  009D                     	;# 
  1683  009E                     	;# 
  1684  010C                     	;# 
  1685  010D                     	;# 
  1686  010E                     	;# 
  1687  010E                     	;# 
  1688  010F                     	;# 
  1689  0110                     	;# 
  1690  0110                     	;# 
  1691  0111                     	;# 
  1692  0112                     	;# 
  1693  0112                     	;# 
  1694  0113                     	;# 
  1695  0114                     	;# 
  1696  0114                     	;# 
  1697  0115                     	;# 
  1698  0116                     	;# 
  1699  0116                     	;# 
  1700  0117                     	;# 
  1701  0119                     	;# 
  1702  0119                     	;# 
  1703  0119                     	;# 
  1704  011A                     	;# 
  1705  011A                     	;# 
  1706  011A                     	;# 
  1707  011B                     	;# 
  1708  011B                     	;# 
  1709  011B                     	;# 
  1710  011B                     	;# 
  1711  011B                     	;# 
  1712  011C                     	;# 
  1713  011C                     	;# 
  1714  011C                     	;# 
  1715  011D                     	;# 
  1716  011D                     	;# 
  1717  011D                     	;# 
  1718  011E                     	;# 
  1719  011E                     	;# 
  1720  011E                     	;# 
  1721  011F                     	;# 
  1722  011F                     	;# 
  1723  011F                     	;# 
  1724  011F                     	;# 
  1725  011F                     	;# 
  1726  018C                     	;# 
  1727  018D                     	;# 
  1728  018E                     	;# 
  1729  018F                     	;# 
  1730  0190                     	;# 
  1731  0191                     	;# 
  1732  0192                     	;# 
  1733  0196                     	;# 
  1734  0197                     	;# 
  1735  0198                     	;# 
  1736  0199                     	;# 
  1737  019A                     	;# 
  1738  019B                     	;# 
  1739  019C                     	;# 
  1740  020C                     	;# 
  1741  020C                     	;# 
  1742  020D                     	;# 
  1743  020E                     	;# 
  1744  020F                     	;# 
  1745  020F                     	;# 
  1746  0210                     	;# 
  1747  0210                     	;# 
  1748  0211                     	;# 
  1749  0211                     	;# 
  1750  0212                     	;# 
  1751  0212                     	;# 
  1752  0213                     	;# 
  1753  0214                     	;# 
  1754  0215                     	;# 
  1755  0215                     	;# 
  1756  0216                     	;# 
  1757  0216                     	;# 
  1758  0217                     	;# 
  1759  0217                     	;# 
  1760  0218                     	;# 
  1761  0218                     	;# 
  1762  0219                     	;# 
  1763  021A                     	;# 
  1764  021B                     	;# 
  1765  021B                     	;# 
  1766  021C                     	;# 
  1767  021C                     	;# 
  1768  021D                     	;# 
  1769  021D                     	;# 
  1770  021E                     	;# 
  1771  021F                     	;# 
  1772  028C                     	;# 
  1773  028C                     	;# 
  1774  028D                     	;# 
  1775  028D                     	;# 
  1776  028E                     	;# 
  1777  028F                     	;# 
  1778  0290                     	;# 
  1779  0290                     	;# 
  1780  0291                     	;# 
  1781  0292                     	;# 
  1782  0292                     	;# 
  1783  0293                     	;# 
  1784  0293                     	;# 
  1785  0294                     	;# 
  1786  0295                     	;# 
  1787  0296                     	;# 
  1788  0296                     	;# 
  1789  0297                     	;# 
  1790  0298                     	;# 
  1791  0298                     	;# 
  1792  0299                     	;# 
  1793  0299                     	;# 
  1794  029A                     	;# 
  1795  029B                     	;# 
  1796  029C                     	;# 
  1797  029C                     	;# 
  1798  029D                     	;# 
  1799  030C                     	;# 
  1800  030C                     	;# 
  1801  030D                     	;# 
  1802  030E                     	;# 
  1803  030F                     	;# 
  1804  0310                     	;# 
  1805  0310                     	;# 
  1806  0311                     	;# 
  1807  0312                     	;# 
  1808  0313                     	;# 
  1809  0314                     	;# 
  1810  0314                     	;# 
  1811  0315                     	;# 
  1812  0316                     	;# 
  1813  0317                     	;# 
  1814  0318                     	;# 
  1815  0318                     	;# 
  1816  0319                     	;# 
  1817  031A                     	;# 
  1818  031B                     	;# 
  1819  031C                     	;# 
  1820  031C                     	;# 
  1821  031D                     	;# 
  1822  031E                     	;# 
  1823  031F                     	;# 
  1824  038C                     	;# 
  1825  038C                     	;# 
  1826  038D                     	;# 
  1827  038E                     	;# 
  1828  0390                     	;# 
  1829  0390                     	;# 
  1830  0391                     	;# 
  1831  0392                     	;# 
  1832  040C                     	;# 
  1833  040D                     	;# 
  1834  040E                     	;# 
  1835  040F                     	;# 
  1836  0410                     	;# 
  1837  0411                     	;# 
  1838  0416                     	;# 
  1839  0416                     	;# 
  1840  0417                     	;# 
  1841  0418                     	;# 
  1842  0418                     	;# 
  1843  0419                     	;# 
  1844  041A                     	;# 
  1845  041A                     	;# 
  1846  041B                     	;# 
  1847  041C                     	;# 
  1848  041C                     	;# 
  1849  041D                     	;# 
  1850  041E                     	;# 
  1851  041F                     	;# 
  1852  048C                     	;# 
  1853  048C                     	;# 
  1854  048D                     	;# 
  1855  048E                     	;# 
  1856  048F                     	;# 
  1857  048F                     	;# 
  1858  0490                     	;# 
  1859  0491                     	;# 
  1860  0492                     	;# 
  1861  0492                     	;# 
  1862  0493                     	;# 
  1863  0494                     	;# 
  1864  0495                     	;# 
  1865  0495                     	;# 
  1866  0496                     	;# 
  1867  0497                     	;# 
  1868  0498                     	;# 
  1869  0499                     	;# 
  1870  049A                     	;# 
  1871  049B                     	;# 
  1872  049C                     	;# 
  1873  049D                     	;# 
  1874  050C                     	;# 
  1875  050C                     	;# 
  1876  050D                     	;# 
  1877  050E                     	;# 
  1878  050F                     	;# 
  1879  050F                     	;# 
  1880  0510                     	;# 
  1881  0511                     	;# 
  1882  0512                     	;# 
  1883  0512                     	;# 
  1884  0513                     	;# 
  1885  0514                     	;# 
  1886  0515                     	;# 
  1887  0515                     	;# 
  1888  0516                     	;# 
  1889  0517                     	;# 
  1890  0518                     	;# 
  1891  0519                     	;# 
  1892  051A                     	;# 
  1893  051B                     	;# 
  1894  051C                     	;# 
  1895  051D                     	;# 
  1896  058C                     	;# 
  1897  058C                     	;# 
  1898  058D                     	;# 
  1899  058E                     	;# 
  1900  058F                     	;# 
  1901  058F                     	;# 
  1902  0590                     	;# 
  1903  0591                     	;# 
  1904  0592                     	;# 
  1905  0593                     	;# 
  1906  060C                     	;# 
  1907  060D                     	;# 
  1908  060E                     	;# 
  1909  060F                     	;# 
  1910  0610                     	;# 
  1911  0611                     	;# 
  1912  0612                     	;# 
  1913  0613                     	;# 
  1914  0614                     	;# 
  1915  0616                     	;# 
  1916  0617                     	;# 
  1917  0618                     	;# 
  1918  0619                     	;# 
  1919  061A                     	;# 
  1920  061B                     	;# 
  1921  061C                     	;# 
  1922  061D                     	;# 
  1923  061E                     	;# 
  1924  068C                     	;# 
  1925  068D                     	;# 
  1926  068E                     	;# 
  1927  068F                     	;# 
  1928  0690                     	;# 
  1929  0691                     	;# 
  1930  0692                     	;# 
  1931  0693                     	;# 
  1932  0694                     	;# 
  1933  070C                     	;# 
  1934  070D                     	;# 
  1935  070E                     	;# 
  1936  070F                     	;# 
  1937  0710                     	;# 
  1938  0711                     	;# 
  1939  0712                     	;# 
  1940  0713                     	;# 
  1941  0714                     	;# 
  1942  0716                     	;# 
  1943  0717                     	;# 
  1944  0718                     	;# 
  1945  0719                     	;# 
  1946  071A                     	;# 
  1947  071B                     	;# 
  1948  071C                     	;# 
  1949  071D                     	;# 
  1950  071E                     	;# 
  1951  0796                     	;# 
  1952  0797                     	;# 
  1953  0798                     	;# 
  1954  0799                     	;# 
  1955  079A                     	;# 
  1956  079B                     	;# 
  1957  080C                     	;# 
  1958  080D                     	;# 
  1959  080E                     	;# 
  1960  080F                     	;# 
  1961  0810                     	;# 
  1962  0811                     	;# 
  1963  0812                     	;# 
  1964  0813                     	;# 
  1965  0814                     	;# 
  1966  081A                     	;# 
  1967  081B                     	;# 
  1968  081C                     	;# 
  1969  081D                     	;# 
  1970  081E                     	;# 
  1971  081F                     	;# 
  1972  088C                     	;# 
  1973  088D                     	;# 
  1974  088E                     	;# 
  1975  088F                     	;# 
  1976  0890                     	;# 
  1977  0891                     	;# 
  1978  0892                     	;# 
  1979  0893                     	;# 
  1980  0895                     	;# 
  1981  0896                     	;# 
  1982  0897                     	;# 
  1983  0898                     	;# 
  1984  0899                     	;# 
  1985  089A                     	;# 
  1986  089B                     	;# 
  1987  090C                     	;# 
  1988  090E                     	;# 
  1989  090F                     	;# 
  1990  091F                     	;# 
  1991  091F                     	;# 
  1992  098F                     	;# 
  1993  098F                     	;# 
  1994  0990                     	;# 
  1995  0991                     	;# 
  1996  0992                     	;# 
  1997  0993                     	;# 
  1998  0994                     	;# 
  1999  0995                     	;# 
  2000  0996                     	;# 
  2001  0997                     	;# 
  2002  0E0F                     	;# 
  2003  0E10                     	;# 
  2004  0E11                     	;# 
  2005  0E12                     	;# 
  2006  0E13                     	;# 
  2007  0E14                     	;# 
  2008  0E15                     	;# 
  2009  0E16                     	;# 
  2010  0E17                     	;# 
  2011  0E18                     	;# 
  2012  0E19                     	;# 
  2013  0E1A                     	;# 
  2014  0E1B                     	;# 
  2015  0E1C                     	;# 
  2016  0E1D                     	;# 
  2017  0E1E                     	;# 
  2018  0E1F                     	;# 
  2019  0E20                     	;# 
  2020  0E21                     	;# 
  2021  0E22                     	;# 
  2022  0E23                     	;# 
  2023  0E24                     	;# 
  2024  0E25                     	;# 
  2025  0E26                     	;# 
  2026  0E27                     	;# 
  2027  0E28                     	;# 
  2028  0E29                     	;# 
  2029  0E2A                     	;# 
  2030  0E2B                     	;# 
  2031  0E2C                     	;# 
  2032  0E2D                     	;# 
  2033  0E2E                     	;# 
  2034  0E2F                     	;# 
  2035  0E30                     	;# 
  2036  0E31                     	;# 
  2037  0E32                     	;# 
  2038  0E33                     	;# 
  2039  0E34                     	;# 
  2040  0E35                     	;# 
  2041  0E36                     	;# 
  2042  0E37                     	;# 
  2043  0E8F                     	;# 
  2044  0E90                     	;# 
  2045  0E91                     	;# 
  2046  0E92                     	;# 
  2047  0E93                     	;# 
  2048  0E94                     	;# 
  2049  0E95                     	;# 
  2050  0E96                     	;# 
  2051  0E97                     	;# 
  2052  0E9C                     	;# 
  2053  0E9D                     	;# 
  2054  0E9E                     	;# 
  2055  0EA1                     	;# 
  2056  0EA2                     	;# 
  2057  0EA3                     	;# 
  2058  0EA4                     	;# 
  2059  0EA5                     	;# 
  2060  0EA9                     	;# 
  2061  0EAA                     	;# 
  2062  0EAB                     	;# 
  2063  0EAC                     	;# 
  2064  0EB1                     	;# 
  2065  0EB2                     	;# 
  2066  0EB3                     	;# 
  2067  0EB8                     	;# 
  2068  0EB9                     	;# 
  2069  0EBA                     	;# 
  2070  0EBB                     	;# 
  2071  0EBC                     	;# 
  2072  0EBD                     	;# 
  2073  0EBE                     	;# 
  2074  0EC3                     	;# 
  2075  0EC5                     	;# 
  2076  0EC6                     	;# 
  2077  0EC7                     	;# 
  2078  0EC8                     	;# 
  2079  0EC9                     	;# 
  2080  0ECA                     	;# 
  2081  0ECB                     	;# 
  2082  0ECC                     	;# 
  2083  0F10                     	;# 
  2084  0F11                     	;# 
  2085  0F12                     	;# 
  2086  0F13                     	;# 
  2087  0F14                     	;# 
  2088  0F15                     	;# 
  2089  0F16                     	;# 
  2090  0F17                     	;# 
  2091  0F18                     	;# 
  2092  0F19                     	;# 
  2093  0F1A                     	;# 
  2094  0F1B                     	;# 
  2095  0F1C                     	;# 
  2096  0F1D                     	;# 
  2097  0F1E                     	;# 
  2098  0F1F                     	;# 
  2099  0F20                     	;# 
  2100  0F21                     	;# 
  2101  0F22                     	;# 
  2102  0F23                     	;# 
  2103  0F24                     	;# 
  2104  0F25                     	;# 
  2105  0F26                     	;# 
  2106  0F27                     	;# 
  2107  0F38                     	;# 
  2108  0F39                     	;# 
  2109  0F3A                     	;# 
  2110  0F3B                     	;# 
  2111  0F3C                     	;# 
  2112  0F3D                     	;# 
  2113  0F3E                     	;# 
  2114  0F3F                     	;# 
  2115  0F40                     	;# 
  2116  0F41                     	;# 
  2117  0F43                     	;# 
  2118  0F44                     	;# 
  2119  0F45                     	;# 
  2120  0F46                     	;# 
  2121  0F47                     	;# 
  2122  0F48                     	;# 
  2123  0F49                     	;# 
  2124  0F4A                     	;# 
  2125  0F4B                     	;# 
  2126  0F4C                     	;# 
  2127  0F4E                     	;# 
  2128  0F4F                     	;# 
  2129  0F50                     	;# 
  2130  0F51                     	;# 
  2131  0F52                     	;# 
  2132  0F53                     	;# 
  2133  0F54                     	;# 
  2134  0F55                     	;# 
  2135  0F56                     	;# 
  2136  0F57                     	;# 
  2137  0F65                     	;# 
  2138  0F68                     	;# 
  2139  0F69                     	;# 
  2140  0F6A                     	;# 
  2141  0F6B                     	;# 
  2142  0FE4                     	;# 
  2143  0FE5                     	;# 
  2144  0FE6                     	;# 
  2145  0FE7                     	;# 
  2146  0FE8                     	;# 
  2147  0FE9                     	;# 
  2148  0FEA                     	;# 
  2149  0FEB                     	;# 
  2150  0FED                     	;# 
  2151  0FEE                     	;# 
  2152  0FEF                     	;# 
  2153  0000                     	;# 
  2154  0001                     	;# 
  2155  0002                     	;# 
  2156  0003                     	;# 
  2157  0004                     	;# 
  2158  0005                     	;# 
  2159  0006                     	;# 
  2160  0007                     	;# 
  2161  0008                     	;# 
  2162  0009                     	;# 
  2163  000A                     	;# 
  2164  000B                     	;# 
  2165  000C                     	;# 
  2166  000D                     	;# 
  2167  000E                     	;# 
  2168  0010                     	;# 
  2169  0011                     	;# 
  2170  0012                     	;# 
  2171  0013                     	;# 
  2172  0016                     	;# 
  2173  0017                     	;# 
  2174  0018                     	;# 
  2175  001C                     	;# 
  2176  001C                     	;# 
  2177  001D                     	;# 
  2178  001D                     	;# 
  2179  001E                     	;# 
  2180  001F                     	;# 
  2181  008C                     	;# 
  2182  008C                     	;# 
  2183  008D                     	;# 
  2184  008E                     	;# 
  2185  008E                     	;# 
  2186  008F                     	;# 
  2187  0090                     	;# 
  2188  0090                     	;# 
  2189  0091                     	;# 
  2190  0093                     	;# 
  2191  0094                     	;# 
  2192  0095                     	;# 
  2193  0096                     	;# 
  2194  0097                     	;# 
  2195  0098                     	;# 
  2196  0099                     	;# 
  2197  009A                     	;# 
  2198  009B                     	;# 
  2199  009C                     	;# 
  2200  009D                     	;# 
  2201  009E                     	;# 
  2202  010C                     	;# 
  2203  010D                     	;# 
  2204  010E                     	;# 
  2205  010E                     	;# 
  2206  010F                     	;# 
  2207  0110                     	;# 
  2208  0110                     	;# 
  2209  0111                     	;# 
  2210  0112                     	;# 
  2211  0112                     	;# 
  2212  0113                     	;# 
  2213  0114                     	;# 
  2214  0114                     	;# 
  2215  0115                     	;# 
  2216  0116                     	;# 
  2217  0116                     	;# 
  2218  0117                     	;# 
  2219  0119                     	;# 
  2220  0119                     	;# 
  2221  0119                     	;# 
  2222  011A                     	;# 
  2223  011A                     	;# 
  2224  011A                     	;# 
  2225  011B                     	;# 
  2226  011B                     	;# 
  2227  011B                     	;# 
  2228  011B                     	;# 
  2229  011B                     	;# 
  2230  011C                     	;# 
  2231  011C                     	;# 
  2232  011C                     	;# 
  2233  011D                     	;# 
  2234  011D                     	;# 
  2235  011D                     	;# 
  2236  011E                     	;# 
  2237  011E                     	;# 
  2238  011E                     	;# 
  2239  011F                     	;# 
  2240  011F                     	;# 
  2241  011F                     	;# 
  2242  011F                     	;# 
  2243  011F                     	;# 
  2244  018C                     	;# 
  2245  018D                     	;# 
  2246  018E                     	;# 
  2247  018F                     	;# 
  2248  0190                     	;# 
  2249  0191                     	;# 
  2250  0192                     	;# 
  2251  0196                     	;# 
  2252  0197                     	;# 
  2253  0198                     	;# 
  2254  0199                     	;# 
  2255  019A                     	;# 
  2256  019B                     	;# 
  2257  019C                     	;# 
  2258  020C                     	;# 
  2259  020C                     	;# 
  2260  020D                     	;# 
  2261  020E                     	;# 
  2262  020F                     	;# 
  2263  020F                     	;# 
  2264  0210                     	;# 
  2265  0210                     	;# 
  2266  0211                     	;# 
  2267  0211                     	;# 
  2268  0212                     	;# 
  2269  0212                     	;# 
  2270  0213                     	;# 
  2271  0214                     	;# 
  2272  0215                     	;# 
  2273  0215                     	;# 
  2274  0216                     	;# 
  2275  0216                     	;# 
  2276  0217                     	;# 
  2277  0217                     	;# 
  2278  0218                     	;# 
  2279  0218                     	;# 
  2280  0219                     	;# 
  2281  021A                     	;# 
  2282  021B                     	;# 
  2283  021B                     	;# 
  2284  021C                     	;# 
  2285  021C                     	;# 
  2286  021D                     	;# 
  2287  021D                     	;# 
  2288  021E                     	;# 
  2289  021F                     	;# 
  2290  028C                     	;# 
  2291  028C                     	;# 
  2292  028D                     	;# 
  2293  028D                     	;# 
  2294  028E                     	;# 
  2295  028F                     	;# 
  2296  0290                     	;# 
  2297  0290                     	;# 
  2298  0291                     	;# 
  2299  0292                     	;# 
  2300  0292                     	;# 
  2301  0293                     	;# 
  2302  0293                     	;# 
  2303  0294                     	;# 
  2304  0295                     	;# 
  2305  0296                     	;# 
  2306  0296                     	;# 
  2307  0297                     	;# 
  2308  0298                     	;# 
  2309  0298                     	;# 
  2310  0299                     	;# 
  2311  0299                     	;# 
  2312  029A                     	;# 
  2313  029B                     	;# 
  2314  029C                     	;# 
  2315  029C                     	;# 
  2316  029D                     	;# 
  2317  030C                     	;# 
  2318  030C                     	;# 
  2319  030D                     	;# 
  2320  030E                     	;# 
  2321  030F                     	;# 
  2322  0310                     	;# 
  2323  0310                     	;# 
  2324  0311                     	;# 
  2325  0312                     	;# 
  2326  0313                     	;# 
  2327  0314                     	;# 
  2328  0314                     	;# 
  2329  0315                     	;# 
  2330  0316                     	;# 
  2331  0317                     	;# 
  2332  0318                     	;# 
  2333  0318                     	;# 
  2334  0319                     	;# 
  2335  031A                     	;# 
  2336  031B                     	;# 
  2337  031C                     	;# 
  2338  031C                     	;# 
  2339  031D                     	;# 
  2340  031E                     	;# 
  2341  031F                     	;# 
  2342  038C                     	;# 
  2343  038C                     	;# 
  2344  038D                     	;# 
  2345  038E                     	;# 
  2346  0390                     	;# 
  2347  0390                     	;# 
  2348  0391                     	;# 
  2349  0392                     	;# 
  2350  040C                     	;# 
  2351  040D                     	;# 
  2352  040E                     	;# 
  2353  040F                     	;# 
  2354  0410                     	;# 
  2355  0411                     	;# 
  2356  0416                     	;# 
  2357  0416                     	;# 
  2358  0417                     	;# 
  2359  0418                     	;# 
  2360  0418                     	;# 
  2361  0419                     	;# 
  2362  041A                     	;# 
  2363  041A                     	;# 
  2364  041B                     	;# 
  2365  041C                     	;# 
  2366  041C                     	;# 
  2367  041D                     	;# 
  2368  041E                     	;# 
  2369  041F                     	;# 
  2370  048C                     	;# 
  2371  048C                     	;# 
  2372  048D                     	;# 
  2373  048E                     	;# 
  2374  048F                     	;# 
  2375  048F                     	;# 
  2376  0490                     	;# 
  2377  0491                     	;# 
  2378  0492                     	;# 
  2379  0492                     	;# 
  2380  0493                     	;# 
  2381  0494                     	;# 
  2382  0495                     	;# 
  2383  0495                     	;# 
  2384  0496                     	;# 
  2385  0497                     	;# 
  2386  0498                     	;# 
  2387  0499                     	;# 
  2388  049A                     	;# 
  2389  049B                     	;# 
  2390  049C                     	;# 
  2391  049D                     	;# 
  2392  050C                     	;# 
  2393  050C                     	;# 
  2394  050D                     	;# 
  2395  050E                     	;# 
  2396  050F                     	;# 
  2397  050F                     	;# 
  2398  0510                     	;# 
  2399  0511                     	;# 
  2400  0512                     	;# 
  2401  0512                     	;# 
  2402  0513                     	;# 
  2403  0514                     	;# 
  2404  0515                     	;# 
  2405  0515                     	;# 
  2406  0516                     	;# 
  2407  0517                     	;# 
  2408  0518                     	;# 
  2409  0519                     	;# 
  2410  051A                     	;# 
  2411  051B                     	;# 
  2412  051C                     	;# 
  2413  051D                     	;# 
  2414  058C                     	;# 
  2415  058C                     	;# 
  2416  058D                     	;# 
  2417  058E                     	;# 
  2418  058F                     	;# 
  2419  058F                     	;# 
  2420  0590                     	;# 
  2421  0591                     	;# 
  2422  0592                     	;# 
  2423  0593                     	;# 
  2424  060C                     	;# 
  2425  060D                     	;# 
  2426  060E                     	;# 
  2427  060F                     	;# 
  2428  0610                     	;# 
  2429  0611                     	;# 
  2430  0612                     	;# 
  2431  0613                     	;# 
  2432  0614                     	;# 
  2433  0616                     	;# 
  2434  0617                     	;# 
  2435  0618                     	;# 
  2436  0619                     	;# 
  2437  061A                     	;# 
  2438  061B                     	;# 
  2439  061C                     	;# 
  2440  061D                     	;# 
  2441  061E                     	;# 
  2442  068C                     	;# 
  2443  068D                     	;# 
  2444  068E                     	;# 
  2445  068F                     	;# 
  2446  0690                     	;# 
  2447  0691                     	;# 
  2448  0692                     	;# 
  2449  0693                     	;# 
  2450  0694                     	;# 
  2451  070C                     	;# 
  2452  070D                     	;# 
  2453  070E                     	;# 
  2454  070F                     	;# 
  2455  0710                     	;# 
  2456  0711                     	;# 
  2457  0712                     	;# 
  2458  0713                     	;# 
  2459  0714                     	;# 
  2460  0716                     	;# 
  2461  0717                     	;# 
  2462  0718                     	;# 
  2463  0719                     	;# 
  2464  071A                     	;# 
  2465  071B                     	;# 
  2466  071C                     	;# 
  2467  071D                     	;# 
  2468  071E                     	;# 
  2469  0796                     	;# 
  2470  0797                     	;# 
  2471  0798                     	;# 
  2472  0799                     	;# 
  2473  079A                     	;# 
  2474  079B                     	;# 
  2475  080C                     	;# 
  2476  080D                     	;# 
  2477  080E                     	;# 
  2478  080F                     	;# 
  2479  0810                     	;# 
  2480  0811                     	;# 
  2481  0812                     	;# 
  2482  0813                     	;# 
  2483  0814                     	;# 
  2484  081A                     	;# 
  2485  081B                     	;# 
  2486  081C                     	;# 
  2487  081D                     	;# 
  2488  081E                     	;# 
  2489  081F                     	;# 
  2490  088C                     	;# 
  2491  088D                     	;# 
  2492  088E                     	;# 
  2493  088F                     	;# 
  2494  0890                     	;# 
  2495  0891                     	;# 
  2496  0892                     	;# 
  2497  0893                     	;# 
  2498  0895                     	;# 
  2499  0896                     	;# 
  2500  0897                     	;# 
  2501  0898                     	;# 
  2502  0899                     	;# 
  2503  089A                     	;# 
  2504  089B                     	;# 
  2505  090C                     	;# 
  2506  090E                     	;# 
  2507  090F                     	;# 
  2508  091F                     	;# 
  2509  091F                     	;# 
  2510  098F                     	;# 
  2511  098F                     	;# 
  2512  0990                     	;# 
  2513  0991                     	;# 
  2514  0992                     	;# 
  2515  0993                     	;# 
  2516  0994                     	;# 
  2517  0995                     	;# 
  2518  0996                     	;# 
  2519  0997                     	;# 
  2520  0E0F                     	;# 
  2521  0E10                     	;# 
  2522  0E11                     	;# 
  2523  0E12                     	;# 
  2524  0E13                     	;# 
  2525  0E14                     	;# 
  2526  0E15                     	;# 
  2527  0E16                     	;# 
  2528  0E17                     	;# 
  2529  0E18                     	;# 
  2530  0E19                     	;# 
  2531  0E1A                     	;# 
  2532  0E1B                     	;# 
  2533  0E1C                     	;# 
  2534  0E1D                     	;# 
  2535  0E1E                     	;# 
  2536  0E1F                     	;# 
  2537  0E20                     	;# 
  2538  0E21                     	;# 
  2539  0E22                     	;# 
  2540  0E23                     	;# 
  2541  0E24                     	;# 
  2542  0E25                     	;# 
  2543  0E26                     	;# 
  2544  0E27                     	;# 
  2545  0E28                     	;# 
  2546  0E29                     	;# 
  2547  0E2A                     	;# 
  2548  0E2B                     	;# 
  2549  0E2C                     	;# 
  2550  0E2D                     	;# 
  2551  0E2E                     	;# 
  2552  0E2F                     	;# 
  2553  0E30                     	;# 
  2554  0E31                     	;# 
  2555  0E32                     	;# 
  2556  0E33                     	;# 
  2557  0E34                     	;# 
  2558  0E35                     	;# 
  2559  0E36                     	;# 
  2560  0E37                     	;# 
  2561  0E8F                     	;# 
  2562  0E90                     	;# 
  2563  0E91                     	;# 
  2564  0E92                     	;# 
  2565  0E93                     	;# 
  2566  0E94                     	;# 
  2567  0E95                     	;# 
  2568  0E96                     	;# 
  2569  0E97                     	;# 
  2570  0E9C                     	;# 
  2571  0E9D                     	;# 
  2572  0E9E                     	;# 
  2573  0EA1                     	;# 
  2574  0EA2                     	;# 
  2575  0EA3                     	;# 
  2576  0EA4                     	;# 
  2577  0EA5                     	;# 
  2578  0EA9                     	;# 
  2579  0EAA                     	;# 
  2580  0EAB                     	;# 
  2581  0EAC                     	;# 
  2582  0EB1                     	;# 
  2583  0EB2                     	;# 
  2584  0EB3                     	;# 
  2585  0EB8                     	;# 
  2586  0EB9                     	;# 
  2587  0EBA                     	;# 
  2588  0EBB                     	;# 
  2589  0EBC                     	;# 
  2590  0EBD                     	;# 
  2591  0EBE                     	;# 
  2592  0EC3                     	;# 
  2593  0EC5                     	;# 
  2594  0EC6                     	;# 
  2595  0EC7                     	;# 
  2596  0EC8                     	;# 
  2597  0EC9                     	;# 
  2598  0ECA                     	;# 
  2599  0ECB                     	;# 
  2600  0ECC                     	;# 
  2601  0F10                     	;# 
  2602  0F11                     	;# 
  2603  0F12                     	;# 
  2604  0F13                     	;# 
  2605  0F14                     	;# 
  2606  0F15                     	;# 
  2607  0F16                     	;# 
  2608  0F17                     	;# 
  2609  0F18                     	;# 
  2610  0F19                     	;# 
  2611  0F1A                     	;# 
  2612  0F1B                     	;# 
  2613  0F1C                     	;# 
  2614  0F1D                     	;# 
  2615  0F1E                     	;# 
  2616  0F1F                     	;# 
  2617  0F20                     	;# 
  2618  0F21                     	;# 
  2619  0F22                     	;# 
  2620  0F23                     	;# 
  2621  0F24                     	;# 
  2622  0F25                     	;# 
  2623  0F26                     	;# 
  2624  0F27                     	;# 
  2625  0F38                     	;# 
  2626  0F39                     	;# 
  2627  0F3A                     	;# 
  2628  0F3B                     	;# 
  2629  0F3C                     	;# 
  2630  0F3D                     	;# 
  2631  0F3E                     	;# 
  2632  0F3F                     	;# 
  2633  0F40                     	;# 
  2634  0F41                     	;# 
  2635  0F43                     	;# 
  2636  0F44                     	;# 
  2637  0F45                     	;# 
  2638  0F46                     	;# 
  2639  0F47                     	;# 
  2640  0F48                     	;# 
  2641  0F49                     	;# 
  2642  0F4A                     	;# 
  2643  0F4B                     	;# 
  2644  0F4C                     	;# 
  2645  0F4E                     	;# 
  2646  0F4F                     	;# 
  2647  0F50                     	;# 
  2648  0F51                     	;# 
  2649  0F52                     	;# 
  2650  0F53                     	;# 
  2651  0F54                     	;# 
  2652  0F55                     	;# 
  2653  0F56                     	;# 
  2654  0F57                     	;# 
  2655  0F65                     	;# 
  2656  0F68                     	;# 
  2657  0F69                     	;# 
  2658  0F6A                     	;# 
  2659  0F6B                     	;# 
  2660  0FE4                     	;# 
  2661  0FE5                     	;# 
  2662  0FE6                     	;# 
  2663  0FE7                     	;# 
  2664  0FE8                     	;# 
  2665  0FE9                     	;# 
  2666  0FEA                     	;# 
  2667  0FEB                     	;# 
  2668  0FED                     	;# 
  2669  0FEE                     	;# 
  2670  0FEF                     	;# 
  2671  0000                     	;# 
  2672  0001                     	;# 
  2673  0002                     	;# 
  2674  0003                     	;# 
  2675  0004                     	;# 
  2676  0005                     	;# 
  2677  0006                     	;# 
  2678  0007                     	;# 
  2679  0008                     	;# 
  2680  0009                     	;# 
  2681  000A                     	;# 
  2682  000B                     	;# 
  2683  000C                     	;# 
  2684  000D                     	;# 
  2685  000E                     	;# 
  2686  0010                     	;# 
  2687  0011                     	;# 
  2688  0012                     	;# 
  2689  0013                     	;# 
  2690  0016                     	;# 
  2691  0017                     	;# 
  2692  0018                     	;# 
  2693  001C                     	;# 
  2694  001C                     	;# 
  2695  001D                     	;# 
  2696  001D                     	;# 
  2697  001E                     	;# 
  2698  001F                     	;# 
  2699  008C                     	;# 
  2700  008C                     	;# 
  2701  008D                     	;# 
  2702  008E                     	;# 
  2703  008E                     	;# 
  2704  008F                     	;# 
  2705  0090                     	;# 
  2706  0090                     	;# 
  2707  0091                     	;# 
  2708  0093                     	;# 
  2709  0094                     	;# 
  2710  0095                     	;# 
  2711  0096                     	;# 
  2712  0097                     	;# 
  2713  0098                     	;# 
  2714  0099                     	;# 
  2715  009A                     	;# 
  2716  009B                     	;# 
  2717  009C                     	;# 
  2718  009D                     	;# 
  2719  009E                     	;# 
  2720  010C                     	;# 
  2721  010D                     	;# 
  2722  010E                     	;# 
  2723  010E                     	;# 
  2724  010F                     	;# 
  2725  0110                     	;# 
  2726  0110                     	;# 
  2727  0111                     	;# 
  2728  0112                     	;# 
  2729  0112                     	;# 
  2730  0113                     	;# 
  2731  0114                     	;# 
  2732  0114                     	;# 
  2733  0115                     	;# 
  2734  0116                     	;# 
  2735  0116                     	;# 
  2736  0117                     	;# 
  2737  0119                     	;# 
  2738  0119                     	;# 
  2739  0119                     	;# 
  2740  011A                     	;# 
  2741  011A                     	;# 
  2742  011A                     	;# 
  2743  011B                     	;# 
  2744  011B                     	;# 
  2745  011B                     	;# 
  2746  011B                     	;# 
  2747  011B                     	;# 
  2748  011C                     	;# 
  2749  011C                     	;# 
  2750  011C                     	;# 
  2751  011D                     	;# 
  2752  011D                     	;# 
  2753  011D                     	;# 
  2754  011E                     	;# 
  2755  011E                     	;# 
  2756  011E                     	;# 
  2757  011F                     	;# 
  2758  011F                     	;# 
  2759  011F                     	;# 
  2760  011F                     	;# 
  2761  011F                     	;# 
  2762  018C                     	;# 
  2763  018D                     	;# 
  2764  018E                     	;# 
  2765  018F                     	;# 
  2766  0190                     	;# 
  2767  0191                     	;# 
  2768  0192                     	;# 
  2769  0196                     	;# 
  2770  0197                     	;# 
  2771  0198                     	;# 
  2772  0199                     	;# 
  2773  019A                     	;# 
  2774  019B                     	;# 
  2775  019C                     	;# 
  2776  020C                     	;# 
  2777  020C                     	;# 
  2778  020D                     	;# 
  2779  020E                     	;# 
  2780  020F                     	;# 
  2781  020F                     	;# 
  2782  0210                     	;# 
  2783  0210                     	;# 
  2784  0211                     	;# 
  2785  0211                     	;# 
  2786  0212                     	;# 
  2787  0212                     	;# 
  2788  0213                     	;# 
  2789  0214                     	;# 
  2790  0215                     	;# 
  2791  0215                     	;# 
  2792  0216                     	;# 
  2793  0216                     	;# 
  2794  0217                     	;# 
  2795  0217                     	;# 
  2796  0218                     	;# 
  2797  0218                     	;# 
  2798  0219                     	;# 
  2799  021A                     	;# 
  2800  021B                     	;# 
  2801  021B                     	;# 
  2802  021C                     	;# 
  2803  021C                     	;# 
  2804  021D                     	;# 
  2805  021D                     	;# 
  2806  021E                     	;# 
  2807  021F                     	;# 
  2808  028C                     	;# 
  2809  028C                     	;# 
  2810  028D                     	;# 
  2811  028D                     	;# 
  2812  028E                     	;# 
  2813  028F                     	;# 
  2814  0290                     	;# 
  2815  0290                     	;# 
  2816  0291                     	;# 
  2817  0292                     	;# 
  2818  0292                     	;# 
  2819  0293                     	;# 
  2820  0293                     	;# 
  2821  0294                     	;# 
  2822  0295                     	;# 
  2823  0296                     	;# 
  2824  0296                     	;# 
  2825  0297                     	;# 
  2826  0298                     	;# 
  2827  0298                     	;# 
  2828  0299                     	;# 
  2829  0299                     	;# 
  2830  029A                     	;# 
  2831  029B                     	;# 
  2832  029C                     	;# 
  2833  029C                     	;# 
  2834  029D                     	;# 
  2835  030C                     	;# 
  2836  030C                     	;# 
  2837  030D                     	;# 
  2838  030E                     	;# 
  2839  030F                     	;# 
  2840  0310                     	;# 
  2841  0310                     	;# 
  2842  0311                     	;# 
  2843  0312                     	;# 
  2844  0313                     	;# 
  2845  0314                     	;# 
  2846  0314                     	;# 
  2847  0315                     	;# 
  2848  0316                     	;# 
  2849  0317                     	;# 
  2850  0318                     	;# 
  2851  0318                     	;# 
  2852  0319                     	;# 
  2853  031A                     	;# 
  2854  031B                     	;# 
  2855  031C                     	;# 
  2856  031C                     	;# 
  2857  031D                     	;# 
  2858  031E                     	;# 
  2859  031F                     	;# 
  2860  038C                     	;# 
  2861  038C                     	;# 
  2862  038D                     	;# 
  2863  038E                     	;# 
  2864  0390                     	;# 
  2865  0390                     	;# 
  2866  0391                     	;# 
  2867  0392                     	;# 
  2868  040C                     	;# 
  2869  040D                     	;# 
  2870  040E                     	;# 
  2871  040F                     	;# 
  2872  0410                     	;# 
  2873  0411                     	;# 
  2874  0416                     	;# 
  2875  0416                     	;# 
  2876  0417                     	;# 
  2877  0418                     	;# 
  2878  0418                     	;# 
  2879  0419                     	;# 
  2880  041A                     	;# 
  2881  041A                     	;# 
  2882  041B                     	;# 
  2883  041C                     	;# 
  2884  041C                     	;# 
  2885  041D                     	;# 
  2886  041E                     	;# 
  2887  041F                     	;# 
  2888  048C                     	;# 
  2889  048C                     	;# 
  2890  048D                     	;# 
  2891  048E                     	;# 
  2892  048F                     	;# 
  2893  048F                     	;# 
  2894  0490                     	;# 
  2895  0491                     	;# 
  2896  0492                     	;# 
  2897  0492                     	;# 
  2898  0493                     	;# 
  2899  0494                     	;# 
  2900  0495                     	;# 
  2901  0495                     	;# 
  2902  0496                     	;# 
  2903  0497                     	;# 
  2904  0498                     	;# 
  2905  0499                     	;# 
  2906  049A                     	;# 
  2907  049B                     	;# 
  2908  049C                     	;# 
  2909  049D                     	;# 
  2910  050C                     	;# 
  2911  050C                     	;# 
  2912  050D                     	;# 
  2913  050E                     	;# 
  2914  050F                     	;# 
  2915  050F                     	;# 
  2916  0510                     	;# 
  2917  0511                     	;# 
  2918  0512                     	;# 
  2919  0512                     	;# 
  2920  0513                     	;# 
  2921  0514                     	;# 
  2922  0515                     	;# 
  2923  0515                     	;# 
  2924  0516                     	;# 
  2925  0517                     	;# 
  2926  0518                     	;# 
  2927  0519                     	;# 
  2928  051A                     	;# 
  2929  051B                     	;# 
  2930  051C                     	;# 
  2931  051D                     	;# 
  2932  058C                     	;# 
  2933  058C                     	;# 
  2934  058D                     	;# 
  2935  058E                     	;# 
  2936  058F                     	;# 
  2937  058F                     	;# 
  2938  0590                     	;# 
  2939  0591                     	;# 
  2940  0592                     	;# 
  2941  0593                     	;# 
  2942  060C                     	;# 
  2943  060D                     	;# 
  2944  060E                     	;# 
  2945  060F                     	;# 
  2946  0610                     	;# 
  2947  0611                     	;# 
  2948  0612                     	;# 
  2949  0613                     	;# 
  2950  0614                     	;# 
  2951  0616                     	;# 
  2952  0617                     	;# 
  2953  0618                     	;# 
  2954  0619                     	;# 
  2955  061A                     	;# 
  2956  061B                     	;# 
  2957  061C                     	;# 
  2958  061D                     	;# 
  2959  061E                     	;# 
  2960  068C                     	;# 
  2961  068D                     	;# 
  2962  068E                     	;# 
  2963  068F                     	;# 
  2964  0690                     	;# 
  2965  0691                     	;# 
  2966  0692                     	;# 
  2967  0693                     	;# 
  2968  0694                     	;# 
  2969  070C                     	;# 
  2970  070D                     	;# 
  2971  070E                     	;# 
  2972  070F                     	;# 
  2973  0710                     	;# 
  2974  0711                     	;# 
  2975  0712                     	;# 
  2976  0713                     	;# 
  2977  0714                     	;# 
  2978  0716                     	;# 
  2979  0717                     	;# 
  2980  0718                     	;# 
  2981  0719                     	;# 
  2982  071A                     	;# 
  2983  071B                     	;# 
  2984  071C                     	;# 
  2985  071D                     	;# 
  2986  071E                     	;# 
  2987  0796                     	;# 
  2988  0797                     	;# 
  2989  0798                     	;# 
  2990  0799                     	;# 
  2991  079A                     	;# 
  2992  079B                     	;# 
  2993  080C                     	;# 
  2994  080D                     	;# 
  2995  080E                     	;# 
  2996  080F                     	;# 
  2997  0810                     	;# 
  2998  0811                     	;# 
  2999  0812                     	;# 
  3000  0813                     	;# 
  3001  0814                     	;# 
  3002  081A                     	;# 
  3003  081B                     	;# 
  3004  081C                     	;# 
  3005  081D                     	;# 
  3006  081E                     	;# 
  3007  081F                     	;# 
  3008  088C                     	;# 
  3009  088D                     	;# 
  3010  088E                     	;# 
  3011  088F                     	;# 
  3012  0890                     	;# 
  3013  0891                     	;# 
  3014  0892                     	;# 
  3015  0893                     	;# 
  3016  0895                     	;# 
  3017  0896                     	;# 
  3018  0897                     	;# 
  3019  0898                     	;# 
  3020  0899                     	;# 
  3021  089A                     	;# 
  3022  089B                     	;# 
  3023  090C                     	;# 
  3024  090E                     	;# 
  3025  090F                     	;# 
  3026  091F                     	;# 
  3027  091F                     	;# 
  3028  098F                     	;# 
  3029  098F                     	;# 
  3030  0990                     	;# 
  3031  0991                     	;# 
  3032  0992                     	;# 
  3033  0993                     	;# 
  3034  0994                     	;# 
  3035  0995                     	;# 
  3036  0996                     	;# 
  3037  0997                     	;# 
  3038  0E0F                     	;# 
  3039  0E10                     	;# 
  3040  0E11                     	;# 
  3041  0E12                     	;# 
  3042  0E13                     	;# 
  3043  0E14                     	;# 
  3044  0E15                     	;# 
  3045  0E16                     	;# 
  3046  0E17                     	;# 
  3047  0E18                     	;# 
  3048  0E19                     	;# 
  3049  0E1A                     	;# 
  3050  0E1B                     	;# 
  3051  0E1C                     	;# 
  3052  0E1D                     	;# 
  3053  0E1E                     	;# 
  3054  0E1F                     	;# 
  3055  0E20                     	;# 
  3056  0E21                     	;# 
  3057  0E22                     	;# 
  3058  0E23                     	;# 
  3059  0E24                     	;# 
  3060  0E25                     	;# 
  3061  0E26                     	;# 
  3062  0E27                     	;# 
  3063  0E28                     	;# 
  3064  0E29                     	;# 
  3065  0E2A                     	;# 
  3066  0E2B                     	;# 
  3067  0E2C                     	;# 
  3068  0E2D                     	;# 
  3069  0E2E                     	;# 
  3070  0E2F                     	;# 
  3071  0E30                     	;# 
  3072  0E31                     	;# 
  3073  0E32                     	;# 
  3074  0E33                     	;# 
  3075  0E34                     	;# 
  3076  0E35                     	;# 
  3077  0E36                     	;# 
  3078  0E37                     	;# 
  3079  0E8F                     	;# 
  3080  0E90                     	;# 
  3081  0E91                     	;# 
  3082  0E92                     	;# 
  3083  0E93                     	;# 
  3084  0E94                     	;# 
  3085  0E95                     	;# 
  3086  0E96                     	;# 
  3087  0E97                     	;# 
  3088  0E9C                     	;# 
  3089  0E9D                     	;# 
  3090  0E9E                     	;# 
  3091  0EA1                     	;# 
  3092  0EA2                     	;# 
  3093  0EA3                     	;# 
  3094  0EA4                     	;# 
  3095  0EA5                     	;# 
  3096  0EA9                     	;# 
  3097  0EAA                     	;# 
  3098  0EAB                     	;# 
  3099  0EAC                     	;# 
  3100  0EB1                     	;# 
  3101  0EB2                     	;# 
  3102  0EB3                     	;# 
  3103  0EB8                     	;# 
  3104  0EB9                     	;# 
  3105  0EBA                     	;# 
  3106  0EBB                     	;# 
  3107  0EBC                     	;# 
  3108  0EBD                     	;# 
  3109  0EBE                     	;# 
  3110  0EC3                     	;# 
  3111  0EC5                     	;# 
  3112  0EC6                     	;# 
  3113  0EC7                     	;# 
  3114  0EC8                     	;# 
  3115  0EC9                     	;# 
  3116  0ECA                     	;# 
  3117  0ECB                     	;# 
  3118  0ECC                     	;# 
  3119  0F10                     	;# 
  3120  0F11                     	;# 
  3121  0F12                     	;# 
  3122  0F13                     	;# 
  3123  0F14                     	;# 
  3124  0F15                     	;# 
  3125  0F16                     	;# 
  3126  0F17                     	;# 
  3127  0F18                     	;# 
  3128  0F19                     	;# 
  3129  0F1A                     	;# 
  3130  0F1B                     	;# 
  3131  0F1C                     	;# 
  3132  0F1D                     	;# 
  3133  0F1E                     	;# 
  3134  0F1F                     	;# 
  3135  0F20                     	;# 
  3136  0F21                     	;# 
  3137  0F22                     	;# 
  3138  0F23                     	;# 
  3139  0F24                     	;# 
  3140  0F25                     	;# 
  3141  0F26                     	;# 
  3142  0F27                     	;# 
  3143  0F38                     	;# 
  3144  0F39                     	;# 
  3145  0F3A                     	;# 
  3146  0F3B                     	;# 
  3147  0F3C                     	;# 
  3148  0F3D                     	;# 
  3149  0F3E                     	;# 
  3150  0F3F                     	;# 
  3151  0F40                     	;# 
  3152  0F41                     	;# 
  3153  0F43                     	;# 
  3154  0F44                     	;# 
  3155  0F45                     	;# 
  3156  0F46                     	;# 
  3157  0F47                     	;# 
  3158  0F48                     	;# 
  3159  0F49                     	;# 
  3160  0F4A                     	;# 
  3161  0F4B                     	;# 
  3162  0F4C                     	;# 
  3163  0F4E                     	;# 
  3164  0F4F                     	;# 
  3165  0F50                     	;# 
  3166  0F51                     	;# 
  3167  0F52                     	;# 
  3168  0F53                     	;# 
  3169  0F54                     	;# 
  3170  0F55                     	;# 
  3171  0F56                     	;# 
  3172  0F57                     	;# 
  3173  0F65                     	;# 
  3174  0F68                     	;# 
  3175  0F69                     	;# 
  3176  0F6A                     	;# 
  3177  0F6B                     	;# 
  3178  0FE4                     	;# 
  3179  0FE5                     	;# 
  3180  0FE6                     	;# 
  3181  0FE7                     	;# 
  3182  0FE8                     	;# 
  3183  0FE9                     	;# 
  3184  0FEA                     	;# 
  3185  0FEB                     	;# 
  3186  0FED                     	;# 
  3187  0FEE                     	;# 
  3188  0FEF                     	;# 
  3189  0013                     _TRISCbits	set	19
  3190  0013                     _TRISC	set	19
  3191  0012                     _TRISB	set	18
  3192  000D                     _PORTB	set	13
  3193  0017                     _LATB	set	23
  3194  0011                     _TRISA	set	17
  3195  000C                     _PORTA	set	12
  3196  0016                     _LATA	set	22
  3197  008C                     _ADRESL	set	140
  3198  008D                     _ADRESH	set	141
  3199  009B                     _ADCAP	set	155
  3200  009E                     _ADPCH	set	158
  3201  009A                     _ADREF	set	154
  3202  0098                     _ADCLK	set	152
  3203  0095                     _ADCON2	set	149
  3204  0094                     _ADCON1	set	148
  3205  0093                     _ADCON0	set	147
  3206  011A                     _TX1REG	set	282
  3207  0119                     _RC1REG	set	281
  3208  011C                     _SP1BRGH	set	284
  3209  011B                     _SP1BRGL	set	283
  3210  011E                     _TX1STA	set	286
  3211  011D                     _RC1STA	set	285
  3212  011F                     _BAUD1CON	set	287
  3213  018C                     _SSP1BUF	set	396
  3214  0191                     _SSP1CON2bits	set	401
  3215  018D                     _SSP1ADD	set	397
  3216  0192                     _SSP1CON3	set	402
  3217  0190                     _SSP1CON1	set	400
  3218  018F                     _SSP1STAT	set	399
  3219  070F                     _PIR3bits	set	1807
  3220  070F                     _PIR3	set	1807
  3221  0EC6                     _SSP1DATPPS	set	3782
  3222  0EC5                     _SSP1CLKPPS	set	3781
  3223  0ECB                     _RXPPS	set	3787
  3224  0F24                     _RC4PPS	set	3876
  3225  0F23                     _RC3PPS	set	3875
  3226  0F4E                     _ANSELCbits	set	3918
  3227  0F20                     _RC0PPS	set	3872
  3228  0F4E                     _ANSELC	set	3918
  3229  0F43                     _ANSELB	set	3907
  3230  0F38                     _ANSELA	set	3896
  3231                           
  3232                           	psect	stringtext1
  3233  0800                     __pstringtext1:
  3234  0800                     STR_5:
  3235  0800  344C               	retlw	76	;'L'
  3236  0801  3461               	retlw	97	;'a'
  3237  0802  3420               	retlw	32	;' '
  3238  0803  3474               	retlw	116	;'t'
  3239  0804  3465               	retlw	101	;'e'
  3240  0805  346D               	retlw	109	;'m'
  3241  0806  3470               	retlw	112	;'p'
  3242  0807  3465               	retlw	101	;'e'
  3243  0808  3472               	retlw	114	;'r'
  3244  0809  3461               	retlw	97	;'a'
  3245  080A  3474               	retlw	116	;'t'
  3246  080B  3475               	retlw	117	;'u'
  3247  080C  3472               	retlw	114	;'r'
  3248  080D  3461               	retlw	97	;'a'
  3249  080E  3420               	retlw	32	;' '
  3250  080F  3465               	retlw	101	;'e'
  3251  0810  3473               	retlw	115	;'s'
  3252  0811  343A               	retlw	58	;':'
  3253  0812  3420               	retlw	32	;' '
  3254  0813  3425               	retlw	37	;'%'
  3255  0814  3464               	retlw	100	;'d'
  3256  0815  342E               	retlw	46	;'.'
  3257  0816  3425               	retlw	37	;'%'
  3258  0817  3464               	retlw	100	;'d'
  3259  0818  3420               	retlw	32	;' '
  3260  0819  3443               	retlw	67	;'C'
  3261  081A  340A               	retlw	10
  3262  081B  340D               	retlw	13
  3263  081C  3400               	retlw	0
  3264                           
  3265                           	psect	stringtext2
  3266  081D                     __pstringtext2:
  3267  081D                     STR_3:
  3268  081D  3453               	retlw	83	;'S'
  3269  081E  3465               	retlw	101	;'e'
  3270  081F  346E               	retlw	110	;'n'
  3271  0820  3473               	retlw	115	;'s'
  3272  0821  346F               	retlw	111	;'o'
  3273  0822  3472               	retlw	114	;'r'
  3274  0823  3420               	retlw	32	;' '
  3275  0824  344D               	retlw	77	;'M'
  3276  0825  344C               	retlw	76	;'L'
  3277  0826  3458               	retlw	88	;'X'
  3278  0827  3439               	retlw	57	;'9'
  3279  0828  3430               	retlw	48	;'0'
  3280  0829  3436               	retlw	54	;'6'
  3281  082A  3431               	retlw	49	;'1'
  3282  082B  3434               	retlw	52	;'4'
  3283  082C  3420               	retlw	32	;' '
  3284  082D  344E               	retlw	78	;'N'
  3285  082E  344F               	retlw	79	;'O'
  3286  082F  3420               	retlw	32	;' '
  3287  0830  3445               	retlw	69	;'E'
  3288  0831  3478               	retlw	120	;'x'
  3289  0832  3469               	retlw	105	;'i'
  3290  0833  3473               	retlw	115	;'s'
  3291  0834  3474               	retlw	116	;'t'
  3292  0835  3465               	retlw	101	;'e'
  3293  0836  340A               	retlw	10
  3294  0837  340A               	retlw	10
  3295  0838  3400               	retlw	0
  3296                           
  3297                           	psect	stringtext3
  3298  0839                     __pstringtext3:
  3299  0839                     STR_2:
  3300  0839  3453               	retlw	83	;'S'
  3301  083A  3465               	retlw	101	;'e'
  3302  083B  346E               	retlw	110	;'n'
  3303  083C  3473               	retlw	115	;'s'
  3304  083D  346F               	retlw	111	;'o'
  3305  083E  3472               	retlw	114	;'r'
  3306  083F  3420               	retlw	32	;' '
  3307  0840  344D               	retlw	77	;'M'
  3308  0841  344C               	retlw	76	;'L'
  3309  0842  3458               	retlw	88	;'X'
  3310  0843  3439               	retlw	57	;'9'
  3311  0844  3430               	retlw	48	;'0'
  3312  0845  3436               	retlw	54	;'6'
  3313  0846  3431               	retlw	49	;'1'
  3314  0847  3434               	retlw	52	;'4'
  3315  0848  3420               	retlw	32	;' '
  3316  0849  3445               	retlw	69	;'E'
  3317  084A  3478               	retlw	120	;'x'
  3318  084B  3469               	retlw	105	;'i'
  3319  084C  3473               	retlw	115	;'s'
  3320  084D  3474               	retlw	116	;'t'
  3321  084E  3465               	retlw	101	;'e'
  3322  084F  340A               	retlw	10
  3323  0850  340A               	retlw	10
  3324  0851  3400               	retlw	0
  3325                           
  3326                           	psect	stringtext4
  3327  0852                     __pstringtext4:
  3328  0852                     STR_1:
  3329  0852  340A               	retlw	10
  3330  0853  340A               	retlw	10
  3331  0854  3453               	retlw	83	;'S'
  3332  0855  3465               	retlw	101	;'e'
  3333  0856  346E               	retlw	110	;'n'
  3334  0857  3473               	retlw	115	;'s'
  3335  0858  346F               	retlw	111	;'o'
  3336  0859  3472               	retlw	114	;'r'
  3337  085A  3420               	retlw	32	;' '
  3338  085B  344D               	retlw	77	;'M'
  3339  085C  344C               	retlw	76	;'L'
  3340  085D  3458               	retlw	88	;'X'
  3341  085E  3439               	retlw	57	;'9'
  3342  085F  3430               	retlw	48	;'0'
  3343  0860  3436               	retlw	54	;'6'
  3344  0861  3431               	retlw	49	;'1'
  3345  0862  3434               	retlw	52	;'4'
  3346  0863  340A               	retlw	10
  3347  0864  340A               	retlw	10
  3348  0865  3400               	retlw	0
  3349                           
  3350                           	psect	stringtext5
  3351  0000                     __pstringtext5:
  3352  0839                     
  3353                           	psect	cinit
  3354  07F3                     start_initialization:	
  3355                           ; #config settings
  3356                           
  3357  07F3                     __initialization:
  3358                           
  3359                           ; Clear objects allocated to BANK0
  3360  07F3  0020               	movlb	0	; select bank0
  3361  07F4  01EF               	clrf	__pbssBANK0& (0+127)
  3362                           
  3363                           ; Clear objects allocated to BANK1
  3364  07F5  30A0               	movlw	low __pbssBANK1
  3365  07F6  0084               	movwf	4
  3366  07F7  3000               	movlw	high __pbssBANK1
  3367  07F8  0085               	movwf	5
  3368  07F9  3029               	movlw	41
  3369  07FA  3180  2043  3187   	fcall	clear_ram0
  3370  07FD                     end_of_initialization:	
  3371                           ;End of C runtime variable initialization code
  3372                           
  3373  07FD                     __end_of__initialization:
  3374  07FD  0020               	movlb	0
  3375  07FE  3182  2AEE         	ljmp	_main	;jump to C main() function
  3376                           
  3377                           	psect	bssBANK0
  3378  006F                     __pbssBANK0:
  3379  006F                     _low_byte:
  3380  006F                     	ds	1
  3381                           
  3382                           	psect	bssBANK1
  3383  00A0                     __pbssBANK1:
  3384  00A0                     _nout:
  3385  00A0                     	ds	2
  3386  00A2                     _width:
  3387  00A2                     	ds	2
  3388  00A4                     _prec:
  3389  00A4                     	ds	2
  3390  00A6                     _flags:
  3391  00A6                     	ds	2
  3392  00A8                     _high_byte:
  3393  00A8                     	ds	1
  3394  00A9                     _dbuf:
  3395  00A9                     	ds	32
  3396                           
  3397                           	psect	clrtext
  3398  0043                     clear_ram0:	
  3399                           ;	Called with FSR0 containing the base address, and
  3400                           ;	WREG with the size to clear
  3401                           
  3402  0043  0064               	clrwdt	;clear the watchdog before getting into this loop
  3403  0044                     clrloop0:
  3404  0044  0180               	clrf	0	;clear RAM location pointed to by FSR
  3405  0045  3101               	addfsr 0,1
  3406  0046  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3407  0047  2844               	goto	clrloop0	;have we reached the end yet?
  3408  0048  3400               	retlw	0	;all done for this memory range, return
  3409                           
  3410                           	psect	cstackCOMMON
  3411  0070                     __pcstackCOMMON:
  3412  0070                     ?_port_init:
  3413  0070                     ??_port_init:	
  3414                           ; 1 bytes @ 0x0
  3415                           
  3416  0070                     ?_adc_init:	
  3417                           ; 1 bytes @ 0x0
  3418                           
  3419  0070                     ??_adc_init:	
  3420                           ; 1 bytes @ 0x0
  3421                           
  3422  0070                     ?_I2C_init:	
  3423                           ; 1 bytes @ 0x0
  3424                           
  3425  0070                     ??_I2C_init:	
  3426                           ; 1 bytes @ 0x0
  3427                           
  3428  0070                     ?_MLX90614_init:	
  3429                           ; 1 bytes @ 0x0
  3430                           
  3431  0070                     ?_I2C_start:	
  3432                           ; 1 bytes @ 0x0
  3433                           
  3434  0070                     ??_I2C_start:	
  3435                           ; 1 bytes @ 0x0
  3436                           
  3437  0070                     ?_I2C_write:	
  3438                           ; 1 bytes @ 0x0
  3439                           
  3440  0070                     ??_I2C_write:	
  3441                           ; 1 bytes @ 0x0
  3442                           
  3443  0070                     ?_I2C_restart:	
  3444                           ; 1 bytes @ 0x0
  3445                           
  3446  0070                     ??_I2C_restart:	
  3447                           ; 1 bytes @ 0x0
  3448                           
  3449  0070                     ?_I2C_read:	
  3450                           ; 1 bytes @ 0x0
  3451                           
  3452  0070                     ??_I2C_read:	
  3453                           ; 1 bytes @ 0x0
  3454                           
  3455  0070                     ?_I2C_nack:	
  3456                           ; 1 bytes @ 0x0
  3457                           
  3458  0070                     ??_I2C_nack:	
  3459                           ; 1 bytes @ 0x0
  3460                           
  3461  0070                     ?_I2C_stop:	
  3462                           ; 1 bytes @ 0x0
  3463                           
  3464  0070                     ??_I2C_stop:	
  3465                           ; 1 bytes @ 0x0
  3466                           
  3467  0070                     ?_main:	
  3468                           ; 1 bytes @ 0x0
  3469                           
  3470  0070                     ?_uart_tx:	
  3471                           ; 1 bytes @ 0x0
  3472                           
  3473  0070                     ??_uart_tx:	
  3474                           ; 1 bytes @ 0x0
  3475                           
  3476  0070                     ?_putch:	
  3477                           ; 1 bytes @ 0x0
  3478                           
  3479  0070                     ??___aodiv:	
  3480                           ; 1 bytes @ 0x0
  3481                           
  3482  0070                     ??___aomod:	
  3483                           ; 1 bytes @ 0x0
  3484                           
  3485  0070                     ?_strlen:	
  3486                           ; 1 bytes @ 0x0
  3487                           
  3488  0070                     ?___wmul:	
  3489                           ; 2 bytes @ 0x0
  3490                           
  3491  0070                     ?___lldiv:	
  3492                           ; 2 bytes @ 0x0
  3493                           
  3494  0070                     I2C_write@I2C_data:	
  3495                           ; 4 bytes @ 0x0
  3496                           
  3497  0070                     ___wmul@multiplier:	
  3498                           ; 1 bytes @ 0x0
  3499                           
  3500  0070                     ___lldiv@divisor:	
  3501                           ; 2 bytes @ 0x0
  3502                           
  3503                           
  3504                           ; 4 bytes @ 0x0
  3505  0070                     	ds	1
  3506  0071                     ??_MLX90614_init:
  3507  0071                     uart_tx@dato:	
  3508                           ; 1 bytes @ 0x1
  3509                           
  3510  0071                     ___aodiv@counter:	
  3511                           ; 1 bytes @ 0x1
  3512                           
  3513  0071                     ___aomod@counter:	
  3514                           ; 1 bytes @ 0x1
  3515                           
  3516                           
  3517                           ; 1 bytes @ 0x1
  3518  0071                     	ds	1
  3519  0072                     ??_strlen:
  3520  0072                     ??_putch:	
  3521                           ; 1 bytes @ 0x2
  3522                           
  3523  0072                     putch@dato:	
  3524                           ; 1 bytes @ 0x2
  3525                           
  3526  0072                     MLX90614_init@x:	
  3527                           ; 1 bytes @ 0x2
  3528                           
  3529  0072                     ___aodiv@sign:	
  3530                           ; 1 bytes @ 0x2
  3531                           
  3532  0072                     ___aomod@sign:	
  3533                           ; 1 bytes @ 0x2
  3534                           
  3535  0072                     ___wmul@multiplicand:	
  3536                           ; 1 bytes @ 0x2
  3537                           
  3538                           
  3539                           ; 2 bytes @ 0x2
  3540  0072                     	ds	1
  3541  0073                     ?_fputc:
  3542  0073                     ?_abs:	
  3543                           ; 2 bytes @ 0x3
  3544                           
  3545  0073                     strlen@a:	
  3546                           ; 2 bytes @ 0x3
  3547                           
  3548  0073                     abs@a:	
  3549                           ; 1 bytes @ 0x3
  3550                           
  3551  0073                     fputc@c:	
  3552                           ; 2 bytes @ 0x3
  3553                           
  3554  0073                     ___aodiv@quotient:	
  3555                           ; 2 bytes @ 0x3
  3556                           
  3557                           
  3558                           ; 8 bytes @ 0x3
  3559  0073                     	ds	1
  3560  0074                     ??___wmul:
  3561  0074                     strlen@s:	
  3562                           ; 1 bytes @ 0x4
  3563                           
  3564  0074                     ___wmul@product:	
  3565                           ; 1 bytes @ 0x4
  3566                           
  3567  0074                     ___lldiv@dividend:	
  3568                           ; 2 bytes @ 0x4
  3569                           
  3570                           
  3571                           ; 4 bytes @ 0x4
  3572  0074                     	ds	1
  3573  0075                     ??_abs:
  3574  0075                     fputc@fp:	
  3575                           ; 1 bytes @ 0x5
  3576                           
  3577                           
  3578                           ; 1 bytes @ 0x5
  3579  0075                     	ds	1
  3580  0076                     ??_fputc:
  3581                           
  3582                           ; 1 bytes @ 0x6
  3583  0076                     	ds	2
  3584  0078                     ??___lldiv:
  3585                           
  3586                           ; 1 bytes @ 0x8
  3587  0078                     	ds	1
  3588  0079                     ___lldiv@quotient:
  3589                           
  3590                           ; 4 bytes @ 0x9
  3591  0079                     	ds	2
  3592  007B                     ?_fputs:
  3593  007B                     fputs@fp:	
  3594                           ; 2 bytes @ 0xB
  3595                           
  3596                           
  3597                           ; 1 bytes @ 0xB
  3598  007B                     	ds	1
  3599  007C                     ??_pad:
  3600                           
  3601                           ; 1 bytes @ 0xC
  3602  007C                     	ds	1
  3603  007D                     ??_printf:
  3604  007D                     ___lldiv@counter:	
  3605                           ; 1 bytes @ 0xD
  3606                           
  3607                           
  3608                           ; 1 bytes @ 0xD
  3609  007D                     	ds	1
  3610                           
  3611                           	psect	cstackBANK0
  3612  0020                     __pcstackBANK0:
  3613  0020                     ?_serial_init:
  3614  0020                     ??_fputs:	
  3615                           ; 1 bytes @ 0x0
  3616                           
  3617  0020                     ?___aodiv:	
  3618                           ; 1 bytes @ 0x0
  3619                           
  3620  0020                     ?___aomod:	
  3621                           ; 8 bytes @ 0x0
  3622                           
  3623  0020                     serial_init@baudios:	
  3624                           ; 8 bytes @ 0x0
  3625                           
  3626  0020                     ___aodiv@divisor:	
  3627                           ; 4 bytes @ 0x0
  3628                           
  3629  0020                     ___aomod@divisor:	
  3630                           ; 8 bytes @ 0x0
  3631                           
  3632                           
  3633                           ; 8 bytes @ 0x0
  3634  0020                     	ds	3
  3635  0023                     fputs@c:
  3636                           
  3637                           ; 1 bytes @ 0x3
  3638  0023                     	ds	1
  3639  0024                     ??_serial_init:
  3640  0024                     fputs@i:	
  3641                           ; 1 bytes @ 0x4
  3642                           
  3643                           
  3644                           ; 2 bytes @ 0x4
  3645  0024                     	ds	2
  3646  0026                     fputs@s:
  3647                           
  3648                           ; 1 bytes @ 0x6
  3649  0026                     	ds	1
  3650  0027                     ?_pad:
  3651  0027                     pad@buf:	
  3652                           ; 2 bytes @ 0x7
  3653                           
  3654                           
  3655                           ; 1 bytes @ 0x7
  3656  0027                     	ds	1
  3657  0028                     serial_init@sx:
  3658  0028                     pad@p:	
  3659                           ; 2 bytes @ 0x8
  3660                           
  3661  0028                     ___aodiv@dividend:	
  3662                           ; 2 bytes @ 0x8
  3663                           
  3664  0028                     ___aomod@dividend:	
  3665                           ; 8 bytes @ 0x8
  3666                           
  3667                           
  3668                           ; 8 bytes @ 0x8
  3669  0028                     	ds	2
  3670  002A                     pad@i:
  3671                           
  3672                           ; 2 bytes @ 0xA
  3673  002A                     	ds	2
  3674  002C                     pad@w:
  3675                           
  3676                           ; 2 bytes @ 0xC
  3677  002C                     	ds	2
  3678  002E                     pad@fp:
  3679                           
  3680                           ; 1 bytes @ 0xE
  3681  002E                     	ds	2
  3682  0030                     ?_dtoa:
  3683  0030                     dtoa@d:	
  3684                           ; 2 bytes @ 0x10
  3685                           
  3686                           
  3687                           ; 8 bytes @ 0x10
  3688  0030                     	ds	8
  3689  0038                     ??_dtoa:
  3690                           
  3691                           ; 1 bytes @ 0x18
  3692  0038                     	ds	3
  3693  003B                     _dtoa$840:
  3694                           
  3695                           ; 2 bytes @ 0x1B
  3696  003B                     	ds	2
  3697  003D                     dtoa@p:
  3698                           
  3699                           ; 2 bytes @ 0x1D
  3700  003D                     	ds	2
  3701  003F                     dtoa@fp:
  3702                           
  3703                           ; 1 bytes @ 0x1F
  3704  003F                     	ds	1
  3705  0040                     dtoa@w:
  3706                           
  3707                           ; 2 bytes @ 0x20
  3708  0040                     	ds	2
  3709  0042                     dtoa@s:
  3710                           
  3711                           ; 2 bytes @ 0x22
  3712  0042                     	ds	2
  3713  0044                     dtoa@n:
  3714                           
  3715                           ; 8 bytes @ 0x24
  3716  0044                     	ds	8
  3717  004C                     dtoa@i:
  3718                           
  3719                           ; 2 bytes @ 0x2C
  3720  004C                     	ds	2
  3721  004E                     ?_vfpfcnvrt:
  3722  004E                     vfpfcnvrt@fmt:	
  3723                           ; 2 bytes @ 0x2E
  3724                           
  3725                           
  3726                           ; 1 bytes @ 0x2E
  3727  004E                     	ds	1
  3728  004F                     vfpfcnvrt@ap:
  3729                           
  3730                           ; 1 bytes @ 0x2F
  3731  004F                     	ds	1
  3732  0050                     ??_vfpfcnvrt:
  3733                           
  3734                           ; 1 bytes @ 0x30
  3735  0050                     	ds	5
  3736  0055                     vfpfcnvrt@ll:
  3737                           
  3738                           ; 8 bytes @ 0x35
  3739  0055                     	ds	8
  3740  005D                     vfpfcnvrt@fp:
  3741                           
  3742                           ; 1 bytes @ 0x3D
  3743  005D                     	ds	1
  3744  005E                     ?_vfprintf:
  3745  005E                     vfprintf@fmt:	
  3746                           ; 2 bytes @ 0x3E
  3747                           
  3748                           
  3749                           ; 2 bytes @ 0x3E
  3750  005E                     	ds	2
  3751  0060                     vfprintf@ap:
  3752                           
  3753                           ; 1 bytes @ 0x40
  3754  0060                     	ds	1
  3755  0061                     ??_vfprintf:
  3756                           
  3757                           ; 1 bytes @ 0x41
  3758  0061                     	ds	2
  3759  0063                     vfprintf@fp:
  3760                           
  3761                           ; 1 bytes @ 0x43
  3762  0063                     	ds	1
  3763  0064                     vfprintf@cfmt:
  3764                           
  3765                           ; 2 bytes @ 0x44
  3766  0064                     	ds	2
  3767  0066                     ?_printf:
  3768  0066                     printf@fmt:	
  3769                           ; 2 bytes @ 0x46
  3770                           
  3771                           
  3772                           ; 2 bytes @ 0x46
  3773  0066                     	ds	6
  3774  006C                     printf@ap:
  3775                           
  3776                           ; 1 bytes @ 0x4C
  3777  006C                     	ds	1
  3778  006D                     ??_main:
  3779                           
  3780                           ; 1 bytes @ 0x4D
  3781  006D                     	ds	2
  3782                           
  3783                           	psect	maintext
  3784  02EE                     __pmaintext:	
  3785 ;;
  3786 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3787 ;;
  3788 ;; *************** function _main *****************
  3789 ;; Defined at:
  3790 ;;		line 22 in file "Main.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;		None
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;  flag            1    0        _Bool 
  3795 ;; Return value:  Size  Location     Type
  3796 ;;                  1    wreg      void 
  3797 ;; Registers used:
  3798 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3799 ;; Tracked objects:
  3800 ;;		On entry : B1F/0
  3801 ;;		On exit  : 0/0
  3802 ;;		Unchanged: 0/0
  3803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3806 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3807 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3808 ;;Total ram usage:        2 bytes
  3809 ;; Hardware stack levels required when called: 9
  3810 ;; This function calls:
  3811 ;;		_I2C_init
  3812 ;;		_I2C_nack
  3813 ;;		_I2C_read
  3814 ;;		_I2C_restart
  3815 ;;		_I2C_start
  3816 ;;		_I2C_stop
  3817 ;;		_I2C_write
  3818 ;;		_MLX90614_init
  3819 ;;		___wmul
  3820 ;;		_adc_init
  3821 ;;		_port_init
  3822 ;;		_printf
  3823 ;;		_serial_init
  3824 ;; This function is called by:
  3825 ;;		Startup code after reset
  3826 ;; This function uses a non-reentrant model
  3827 ;;
  3828                           
  3829                           
  3830                           ;psect for function _main
  3831  02EE                     _main:
  3832  02EE                     l1781:	
  3833                           ;incstack = 0
  3834                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3835                           
  3836  02EE                     l1783:
  3837                           
  3838                           ;Main.c: 26:     port_init();
  3839  02EE  3180  20BA  3182   	fcall	_port_init
  3840  02F1                     l1785:
  3841                           
  3842                           ;Main.c: 27:     serial_init(9600);
  3843  02F1  3000               	movlw	0
  3844  02F2  0020               	movlb	0	; select bank0
  3845  02F3  00A3               	movwf	serial_init@baudios+3
  3846  02F4  3000               	movlw	0
  3847  02F5  00A2               	movwf	serial_init@baudios+2
  3848  02F6  3025               	movlw	37
  3849  02F7  00A1               	movwf	serial_init@baudios+1
  3850  02F8  3080               	movlw	128
  3851  02F9  00A0               	movwf	serial_init@baudios
  3852  02FA  3181  21EE  3182   	fcall	_serial_init
  3853  02FD                     l1787:
  3854                           
  3855                           ;Main.c: 28:     adc_init();
  3856  02FD  3181  2103  3182   	fcall	_adc_init
  3857  0300                     l1789:
  3858                           
  3859                           ;Main.c: 29:     I2C_init();
  3860  0300  3180  20E9  3182   	fcall	_I2C_init
  3861  0303                     l1791:
  3862                           
  3863                           ;Main.c: 30:     printf("\n\nSensor MLX90614\n\n");
  3864  0303  3052               	movlw	low (STR_1| (0+32768))
  3865  0304  0020               	movlb	0	; select bank0
  3866  0305  00E6               	movwf	printf@fmt
  3867  0306  3088               	movlw	high (STR_1| (0+32768))
  3868  0307  00E7               	movwf	printf@fmt+1
  3869  0308  3180  2094  3182   	fcall	_printf
  3870  030B                     l1793:
  3871  030B  3180  2075  3182   	fcall	_MLX90614_init
  3872  030E                     l1795:
  3873                           
  3874                           ;Main.c: 36:     if (MLX90614_init() == 1){
  3875  030E  3180  2075  3182   	fcall	_MLX90614_init
  3876  0311  3A01               	xorlw	1
  3877  0312  1D03               	skipz
  3878  0313  2B15               	goto	u1591
  3879  0314  2B16               	goto	u1590
  3880  0315                     u1591:
  3881  0315  2B1F               	goto	l1799
  3882  0316                     u1590:
  3883  0316                     l1797:
  3884                           
  3885                           ;Main.c: 37:         printf("Sensor MLX90614 Existe\n\n");
  3886  0316  3039               	movlw	low (STR_2| (0+32768))
  3887  0317  0020               	movlb	0	; select bank0
  3888  0318  00E6               	movwf	printf@fmt
  3889  0319  3088               	movlw	high (STR_2| (0+32768))
  3890  031A  00E7               	movwf	printf@fmt+1
  3891  031B  3180  2094  3182   	fcall	_printf
  3892                           
  3893                           ;Main.c: 38:     }else{
  3894  031E  2B3D               	goto	l1805
  3895  031F                     l1799:
  3896                           
  3897                           ;Main.c: 39:         printf("Sensor MLX90614 NO Existe\n\n");}
  3898  031F  301D               	movlw	low (STR_3| (0+32768))
  3899  0320  0020               	movlb	0	; select bank0
  3900  0321  00E6               	movwf	printf@fmt
  3901  0322  3088               	movlw	high (STR_3| (0+32768))
  3902  0323  00E7               	movwf	printf@fmt+1
  3903  0324  3180  2094  3182   	fcall	_printf
  3904  0327  2B3D               	goto	l1805
  3905  0328                     l1801:
  3906                           
  3907                           ;Main.c: 42:         printf("Sensor MLX90614 Existe\n\n");
  3908  0328  3039               	movlw	low (STR_2| (0+32768))
  3909  0329  0020               	movlb	0	; select bank0
  3910  032A  00E6               	movwf	printf@fmt
  3911  032B  3088               	movlw	high (STR_2| (0+32768))
  3912  032C  00E7               	movwf	printf@fmt+1
  3913  032D  3180  2094  3182   	fcall	_printf
  3914  0330                     l1803:
  3915                           
  3916                           ;Main.c: 43:         _delay((unsigned long)((500)*(32000000UL/4000.0)));
  3917  0330  3015               	movlw	21
  3918  0331  0020               	movlb	0	; select bank0
  3919  0332  00EE               	movwf	??_main+1
  3920  0333  304B               	movlw	75
  3921  0334  00ED               	movwf	??_main
  3922  0335  30BE               	movlw	190
  3923  0336                     u1637:
  3924  0336  0B89               	decfsz	9,f
  3925  0337  2B36               	goto	u1637
  3926  0338  0BED               	decfsz	??_main,f
  3927  0339  2B36               	goto	u1637
  3928  033A  0BEE               	decfsz	??_main+1,f
  3929  033B  2B36               	goto	u1637
  3930  033C  0000               	nop
  3931  033D                     l1805:
  3932                           
  3933                           ;Main.c: 41:     while(MLX90614_init()==1){
  3934  033D  3180  2075  3182   	fcall	_MLX90614_init
  3935  0340  3A01               	xorlw	1
  3936  0341  1903               	skipnz
  3937  0342  2B44               	goto	u1601
  3938  0343  2B45               	goto	u1600
  3939  0344                     u1601:
  3940  0344  2B28               	goto	l1801
  3941  0345                     u1600:
  3942  0345                     l1807:
  3943                           
  3944                           ;Main.c: 47:         I2C_start();
  3945  0345  3180  2050  3182   	fcall	_I2C_start
  3946  0348                     l1809:
  3947                           
  3948                           ;Main.c: 48:         I2C_write(0b01110000);
  3949  0348  3070               	movlw	112
  3950  0349  3180  20A6  3182   	fcall	_I2C_write
  3951  034C                     l1811:
  3952                           
  3953                           ;Main.c: 49:         I2C_write(0);
  3954  034C  3000               	movlw	0
  3955  034D  3180  20A6  3182   	fcall	_I2C_write
  3956                           
  3957                           ;Main.c: 50:         I2C_restart();
  3958  0350  3180  2049  3182   	fcall	_I2C_restart
  3959  0353                     l1813:
  3960                           
  3961                           ;Main.c: 51:         I2C_write(0b01110001);
  3962  0353  3071               	movlw	113
  3963  0354  3180  20A6  3182   	fcall	_I2C_write
  3964  0357                     l1815:
  3965                           
  3966                           ;Main.c: 52:         high_byte = (int8_t)I2C_read();
  3967  0357  3180  2069  3182   	fcall	_I2C_read
  3968  035A  0020               	movlb	0	; select bank0
  3969  035B  00ED               	movwf	??_main
  3970  035C  086D               	movf	??_main,w
  3971  035D  0021               	movlb	1	; select bank1
  3972  035E  00A8               	movwf	_high_byte^(0+128)
  3973  035F                     l1817:
  3974                           
  3975                           ;Main.c: 53:         I2C_nack();
  3976  035F  3180  205E  3182   	fcall	_I2C_nack
  3977  0362                     l1819:
  3978                           
  3979                           ;Main.c: 54:         I2C_stop();
  3980  0362  3180  2057  3182   	fcall	_I2C_stop
  3981  0365                     l1821:
  3982                           
  3983                           ;Main.c: 56:         I2C_start();
  3984  0365  3180  2050  3182   	fcall	_I2C_start
  3985  0368                     l1823:
  3986                           
  3987                           ;Main.c: 57:         I2C_write(0b01110000);
  3988  0368  3070               	movlw	112
  3989  0369  3180  20A6  3182   	fcall	_I2C_write
  3990  036C                     l1825:
  3991                           
  3992                           ;Main.c: 58:         I2C_write(2);
  3993  036C  3002               	movlw	2
  3994  036D  3180  20A6  3182   	fcall	_I2C_write
  3995  0370                     l1827:
  3996                           
  3997                           ;Main.c: 59:         I2C_restart();
  3998  0370  3180  2049  3182   	fcall	_I2C_restart
  3999  0373                     l1829:
  4000                           
  4001                           ;Main.c: 60:         I2C_write(0b01110001);
  4002  0373  3071               	movlw	113
  4003  0374  3180  20A6  3182   	fcall	_I2C_write
  4004  0377                     l1831:
  4005                           
  4006                           ;Main.c: 61:         low_byte = I2C_read();
  4007  0377  3180  2069  3182   	fcall	_I2C_read
  4008  037A  0020               	movlb	0	; select bank0
  4009  037B  00ED               	movwf	??_main
  4010  037C  086D               	movf	??_main,w
  4011  037D  00EF               	movwf	_low_byte
  4012                           
  4013                           ;Main.c: 62:         I2C_nack();
  4014  037E  3180  205E  3182   	fcall	_I2C_nack
  4015                           
  4016                           ;Main.c: 63:         I2C_stop();
  4017  0381  3180  2057  3182   	fcall	_I2C_stop
  4018  0384                     l1833:
  4019                           
  4020                           ;Main.c: 65:         low_byte = low_byte >> 6;
  4021  0384  0020               	movlb	0	; select bank0
  4022  0385  086F               	movf	_low_byte,w
  4023  0386  00ED               	movwf	??_main
  4024  0387  3006               	movlw	6
  4025  0388                     u1615:
  4026  0388  36ED               	lsrf	??_main,f
  4027  0389  0B89               	decfsz	9,f
  4028  038A  2B88               	goto	u1615
  4029  038B  086D               	movf	??_main,w
  4030  038C  00EE               	movwf	??_main+1
  4031  038D  086E               	movf	??_main+1,w
  4032  038E  00EF               	movwf	_low_byte
  4033  038F                     l1835:
  4034                           
  4035                           ;Main.c: 66:         printf("La temperatura es: %d.%d C\n\r", high_byte, low_byte *25 );
  4036  038F  3000               	movlw	low (STR_5| (0+32768))
  4037  0390  00E6               	movwf	printf@fmt
  4038  0391  3088               	movlw	high (STR_5| (0+32768))
  4039  0392  00E7               	movwf	printf@fmt+1
  4040  0393  0021               	movlb	1	; select bank1
  4041  0394  0828               	movf	_high_byte^(0+128),w
  4042  0395  0020               	movlb	0	; select bank0
  4043  0396  00E8               	movwf	?_printf+2
  4044  0397  01E9               	clrf	?_printf+3
  4045  0398  1BE8               	btfsc	?_printf+2,7
  4046  0399  03E9               	decf	?_printf+3,f
  4047  039A  086F               	movf	_low_byte,w
  4048  039B  00ED               	movwf	??_main
  4049  039C  01EE               	clrf	??_main+1
  4050  039D  086D               	movf	??_main,w
  4051  039E  00F0               	movwf	___wmul@multiplier
  4052  039F  086E               	movf	??_main+1,w
  4053  03A0  00F1               	movwf	___wmul@multiplier+1
  4054  03A1  3019               	movlw	25
  4055  03A2  00F2               	movwf	___wmul@multiplicand
  4056  03A3  3000               	movlw	0
  4057  03A4  00F3               	movwf	___wmul@multiplicand+1
  4058  03A5  3181  2137  3182   	fcall	___wmul
  4059  03A8  0871               	movf	?___wmul+1,w
  4060  03A9  0020               	movlb	0	; select bank0
  4061  03AA  00EB               	movwf	?_printf+5
  4062  03AB  0870               	movf	?___wmul,w
  4063  03AC  00EA               	movwf	?_printf+4
  4064  03AD  3180  2094  3182   	fcall	_printf
  4065  03B0                     l1837:
  4066                           
  4067                           ;Main.c: 68:         _delay((unsigned long)((1000)*(32000000UL/4000.0)));
  4068  03B0  3029               	movlw	41
  4069  03B1  0020               	movlb	0	; select bank0
  4070  03B2  00EE               	movwf	??_main+1
  4071  03B3  3096               	movlw	150
  4072  03B4  00ED               	movwf	??_main
  4073  03B5  307F               	movlw	127
  4074  03B6                     u1647:
  4075  03B6  0B89               	decfsz	9,f
  4076  03B7  2BB6               	goto	u1647
  4077  03B8  0BED               	decfsz	??_main,f
  4078  03B9  2BB6               	goto	u1647
  4079  03BA  0BEE               	decfsz	??_main+1,f
  4080  03BB  2BB6               	goto	u1647
  4081  03BC  2B45               	goto	l1807
  4082  03BD  3180  2802         	ljmp	start
  4083  03BF                     __end_of_main:
  4084                           
  4085                           	psect	text1
  4086  01EE                     __ptext1:	
  4087 ;; *************** function _serial_init *****************
  4088 ;; Defined at:
  4089 ;;		line 4 in file "uart.c"
  4090 ;; Parameters:    Size  Location     Type
  4091 ;;  baudios         4    0[BANK0 ] unsigned long 
  4092 ;; Auto vars:     Size  Location     Type
  4093 ;;  sx              2    8[BANK0 ] unsigned short 
  4094 ;; Return value:  Size  Location     Type
  4095 ;;                  1    wreg      void 
  4096 ;; Registers used:
  4097 ;;		wreg, status,2, status,0, pclath, cstack
  4098 ;; Tracked objects:
  4099 ;;		On entry : 0/0
  4100 ;;		On exit  : 0/0
  4101 ;;		Unchanged: 0/0
  4102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4103 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4104 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4105 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4106 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4107 ;;Total ram usage:       10 bytes
  4108 ;; Hardware stack levels used: 1
  4109 ;; Hardware stack levels required when called: 1
  4110 ;; This function calls:
  4111 ;;		___lldiv
  4112 ;; This function is called by:
  4113 ;;		_main
  4114 ;; This function uses a non-reentrant model
  4115 ;;
  4116                           
  4117                           
  4118                           ;psect for function _serial_init
  4119  01EE                     _serial_init:
  4120  01EE                     l1709:	
  4121                           ;incstack = 0
  4122                           ; Regs used in _serial_init: [wreg+status,2+status,0+pclath+cstack]
  4123                           
  4124                           
  4125                           ;uart.c: 5:     uint16_t sx;;uart.c: 8:     BAUD1CON = 0x08;
  4126  01EE  3008               	movlw	8
  4127  01EF  0022               	movlb	2	; select bank2
  4128  01F0  009F               	movwf	31	;volatile
  4129                           
  4130                           ;uart.c: 10:     RC1STA = 0b10010000;
  4131  01F1  3090               	movlw	144
  4132  01F2  009D               	movwf	29	;volatile
  4133                           
  4134                           ;uart.c: 16:     TX1STA = 0b00100100;
  4135  01F3  3024               	movlw	36
  4136  01F4  009E               	movwf	30	;volatile
  4137  01F5                     l1711:
  4138                           
  4139                           ;uart.c: 21:     sx = (uint16_t) (((32000000UL/baudios)/4 ) - 1 );
  4140  01F5  0020               	movlb	0	; select bank0
  4141  01F6  0823               	movf	serial_init@baudios+3,w
  4142  01F7  00F3               	movwf	___lldiv@divisor+3
  4143  01F8  0822               	movf	serial_init@baudios+2,w
  4144  01F9  00F2               	movwf	___lldiv@divisor+2
  4145  01FA  0821               	movf	serial_init@baudios+1,w
  4146  01FB  00F1               	movwf	___lldiv@divisor+1
  4147  01FC  0820               	movf	serial_init@baudios,w
  4148  01FD  00F0               	movwf	___lldiv@divisor
  4149  01FE  3001               	movlw	1
  4150  01FF  00F7               	movwf	___lldiv@dividend+3
  4151  0200  30E8               	movlw	232
  4152  0201  00F6               	movwf	___lldiv@dividend+2
  4153  0202  3048               	movlw	72
  4154  0203  00F5               	movwf	___lldiv@dividend+1
  4155  0204  3000               	movlw	0
  4156  0205  00F4               	movwf	___lldiv@dividend
  4157  0206  3182  2294  3181   	fcall	___lldiv
  4158  0209  0870               	movf	?___lldiv,w
  4159  020A  0020               	movlb	0	; select bank0
  4160  020B  00A4               	movwf	??_serial_init
  4161  020C  0871               	movf	?___lldiv+1,w
  4162  020D  00A5               	movwf	??_serial_init+1
  4163  020E  0872               	movf	?___lldiv+2,w
  4164  020F  00A6               	movwf	??_serial_init+2
  4165  0210  0873               	movf	?___lldiv+3,w
  4166  0211  00A7               	movwf	??_serial_init+3
  4167  0212  3002               	movlw	2
  4168  0213                     u1515:
  4169  0213  36A7               	lsrf	??_serial_init+3,f
  4170  0214  0CA6               	rrf	??_serial_init+2,f
  4171  0215  0CA5               	rrf	??_serial_init+1,f
  4172  0216  0CA4               	rrf	??_serial_init,f
  4173  0217                     u1510:
  4174  0217  0B89               	decfsz	9,f
  4175  0218  2A13               	goto	u1515
  4176  0219  0824               	movf	??_serial_init,w
  4177  021A  3EFF               	addlw	255
  4178  021B  00A8               	movwf	serial_init@sx
  4179  021C  30FF               	movlw	255
  4180  021D  3D25               	addwfc	??_serial_init+1,w
  4181  021E  00A9               	movwf	serial_init@sx+1
  4182  021F                     l1713:
  4183                           
  4184                           ;uart.c: 22:     SP1BRGL = (uint8_t)sx;
  4185  021F  0828               	movf	serial_init@sx,w
  4186  0220  0022               	movlb	2	; select bank2
  4187  0221  009B               	movwf	27	;volatile
  4188  0222                     l1715:
  4189                           
  4190                           ;uart.c: 23:     SP1BRGH = (uint8_t)(sx>>8);
  4191  0222  0020               	movlb	0	; select bank0
  4192  0223  0829               	movf	serial_init@sx+1,w
  4193  0224  0022               	movlb	2	; select bank2
  4194  0225  009C               	movwf	28	;volatile
  4195  0226                     l1717:
  4196                           
  4197                           ;uart.c: 28:     TRISC = TRISC & ~(1<<0);
  4198  0226  0020               	movlb	0	; select bank0
  4199  0227  0813               	movf	19,w	;volatile
  4200  0228  39FE               	andlw	254
  4201  0229  0093               	movwf	19	;volatile
  4202  022A                     l1719:
  4203                           
  4204                           ;uart.c: 29:     TRISC = TRISC |(1<<1);
  4205  022A  0813               	movf	19,w	;volatile
  4206  022B  3802               	iorlw	2
  4207  022C  0093               	movwf	19	;volatile
  4208  022D                     l1721:
  4209                           
  4210                           ;uart.c: 30:     ANSELC = ANSELC & ~(1<<7);
  4211  022D  003E               	movlb	30	; select bank30
  4212  022E  084E               	movf	78,w	;volatile
  4213  022F  397F               	andlw	127
  4214  0230  00CE               	movwf	78	;volatile
  4215  0231                     l1723:
  4216                           
  4217                           ;uart.c: 31:     ANSELC = ANSELC & ~(1<<2);
  4218  0231  084E               	movf	78,w	;volatile
  4219  0232  39FB               	andlw	251
  4220  0233  00CE               	movwf	78	;volatile
  4221  0234                     l1725:
  4222                           
  4223                           ;uart.c: 32:     RXPPS = 0x11;
  4224  0234  3011               	movlw	17
  4225  0235  003D               	movlb	29	; select bank29
  4226  0236  00CB               	movwf	75	;volatile
  4227  0237                     l1727:
  4228                           
  4229                           ;uart.c: 34:     RC0PPS = 0x10;
  4230  0237  3010               	movlw	16
  4231  0238  003E               	movlb	30	; select bank30
  4232  0239  00A0               	movwf	32	;volatile
  4233  023A                     l118:
  4234  023A  0008               	return
  4235  023B                     __end_of_serial_init:
  4236                           
  4237                           	psect	text2
  4238  0294                     __ptext2:	
  4239 ;; *************** function ___lldiv *****************
  4240 ;; Defined at:
  4241 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
  4242 ;; Parameters:    Size  Location     Type
  4243 ;;  divisor         4    0[COMMON] unsigned long 
  4244 ;;  dividend        4    4[COMMON] unsigned long 
  4245 ;; Auto vars:     Size  Location     Type
  4246 ;;  quotient        4    9[COMMON] unsigned long 
  4247 ;;  counter         1   13[COMMON] unsigned char 
  4248 ;; Return value:  Size  Location     Type
  4249 ;;                  4    0[COMMON] unsigned long 
  4250 ;; Registers used:
  4251 ;;		wreg, status,2, status,0
  4252 ;; Tracked objects:
  4253 ;;		On entry : 0/0
  4254 ;;		On exit  : 0/0
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4257 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4258 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4259 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4260 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4261 ;;Total ram usage:       14 bytes
  4262 ;; Hardware stack levels used: 1
  4263 ;; This function calls:
  4264 ;;		Nothing
  4265 ;; This function is called by:
  4266 ;;		_serial_init
  4267 ;; This function uses a non-reentrant model
  4268 ;;
  4269                           
  4270                           
  4271                           ;psect for function ___lldiv
  4272  0294                     ___lldiv:
  4273  0294                     l1665:	
  4274                           ;incstack = 0
  4275                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4276                           
  4277  0294  3000               	movlw	0
  4278  0295  00FC               	movwf	___lldiv@quotient+3
  4279  0296  3000               	movlw	0
  4280  0297  00FB               	movwf	___lldiv@quotient+2
  4281  0298  3000               	movlw	0
  4282  0299  00FA               	movwf	___lldiv@quotient+1
  4283  029A  3000               	movlw	0
  4284  029B  00F9               	movwf	___lldiv@quotient
  4285  029C  0873               	movf	___lldiv@divisor+3,w
  4286  029D  0472               	iorwf	___lldiv@divisor+2,w
  4287  029E  0471               	iorwf	___lldiv@divisor+1,w
  4288  029F  0470               	iorwf	___lldiv@divisor,w
  4289  02A0  1903               	skipnz
  4290  02A1  2AA3               	goto	u1431
  4291  02A2  2AA4               	goto	u1430
  4292  02A3                     u1431:
  4293  02A3  2AE5               	goto	l1685
  4294  02A4                     u1430:
  4295  02A4                     l1667:
  4296  02A4  01FD               	clrf	___lldiv@counter
  4297  02A5  0AFD               	incf	___lldiv@counter,f
  4298  02A6  2AB2               	goto	l1671
  4299  02A7                     l1669:
  4300  02A7  3001               	movlw	1
  4301  02A8                     u1445:
  4302  02A8  35F0               	lslf	___lldiv@divisor,f
  4303  02A9  0DF1               	rlf	___lldiv@divisor+1,f
  4304  02AA  0DF2               	rlf	___lldiv@divisor+2,f
  4305  02AB  0DF3               	rlf	___lldiv@divisor+3,f
  4306  02AC  0B89               	decfsz	9,f
  4307  02AD  2AA8               	goto	u1445
  4308  02AE  3001               	movlw	1
  4309  02AF  00F8               	movwf	??___lldiv
  4310  02B0  0878               	movf	??___lldiv,w
  4311  02B1  07FD               	addwf	___lldiv@counter,f
  4312  02B2                     l1671:
  4313  02B2  1FF3               	btfss	___lldiv@divisor+3,7
  4314  02B3  2AB5               	goto	u1451
  4315  02B4  2AB6               	goto	u1450
  4316  02B5                     u1451:
  4317  02B5  2AA7               	goto	l1669
  4318  02B6                     u1450:
  4319  02B6                     l1673:
  4320  02B6  3001               	movlw	1
  4321  02B7                     u1465:
  4322  02B7  35F9               	lslf	___lldiv@quotient,f
  4323  02B8  0DFA               	rlf	___lldiv@quotient+1,f
  4324  02B9  0DFB               	rlf	___lldiv@quotient+2,f
  4325  02BA  0DFC               	rlf	___lldiv@quotient+3,f
  4326  02BB  0B89               	decfsz	9,f
  4327  02BC  2AB7               	goto	u1465
  4328  02BD                     l1675:
  4329  02BD  0873               	movf	___lldiv@divisor+3,w
  4330  02BE  0277               	subwf	___lldiv@dividend+3,w
  4331  02BF  1D03               	skipz
  4332  02C0  2ACB               	goto	u1475
  4333  02C1  0872               	movf	___lldiv@divisor+2,w
  4334  02C2  0276               	subwf	___lldiv@dividend+2,w
  4335  02C3  1D03               	skipz
  4336  02C4  2ACB               	goto	u1475
  4337  02C5  0871               	movf	___lldiv@divisor+1,w
  4338  02C6  0275               	subwf	___lldiv@dividend+1,w
  4339  02C7  1D03               	skipz
  4340  02C8  2ACB               	goto	u1475
  4341  02C9  0870               	movf	___lldiv@divisor,w
  4342  02CA  0274               	subwf	___lldiv@dividend,w
  4343  02CB                     u1475:
  4344  02CB  1C03               	skipc
  4345  02CC  2ACE               	goto	u1471
  4346  02CD  2ACF               	goto	u1470
  4347  02CE                     u1471:
  4348  02CE  2AD8               	goto	l1681
  4349  02CF                     u1470:
  4350  02CF                     l1677:
  4351  02CF  0870               	movf	___lldiv@divisor,w
  4352  02D0  02F4               	subwf	___lldiv@dividend,f
  4353  02D1  0871               	movf	___lldiv@divisor+1,w
  4354  02D2  3BF5               	subwfb	___lldiv@dividend+1,f
  4355  02D3  0872               	movf	___lldiv@divisor+2,w
  4356  02D4  3BF6               	subwfb	___lldiv@dividend+2,f
  4357  02D5  0873               	movf	___lldiv@divisor+3,w
  4358  02D6  3BF7               	subwfb	___lldiv@dividend+3,f
  4359  02D7                     l1679:
  4360  02D7  1479               	bsf	___lldiv@quotient,0
  4361  02D8                     l1681:
  4362  02D8  3001               	movlw	1
  4363  02D9                     u1485:
  4364  02D9  36F3               	lsrf	___lldiv@divisor+3,f
  4365  02DA  0CF2               	rrf	___lldiv@divisor+2,f
  4366  02DB  0CF1               	rrf	___lldiv@divisor+1,f
  4367  02DC  0CF0               	rrf	___lldiv@divisor,f
  4368  02DD  0B89               	decfsz	9,f
  4369  02DE  2AD9               	goto	u1485
  4370  02DF                     l1683:
  4371  02DF  3001               	movlw	1
  4372  02E0  02FD               	subwf	___lldiv@counter,f
  4373  02E1  1D03               	btfss	3,2
  4374  02E2  2AE4               	goto	u1491
  4375  02E3  2AE5               	goto	u1490
  4376  02E4                     u1491:
  4377  02E4  2AB6               	goto	l1673
  4378  02E5                     u1490:
  4379  02E5                     l1685:
  4380  02E5  087C               	movf	___lldiv@quotient+3,w
  4381  02E6  00F3               	movwf	?___lldiv+3
  4382  02E7  087B               	movf	___lldiv@quotient+2,w
  4383  02E8  00F2               	movwf	?___lldiv+2
  4384  02E9  087A               	movf	___lldiv@quotient+1,w
  4385  02EA  00F1               	movwf	?___lldiv+1
  4386  02EB  0879               	movf	___lldiv@quotient,w
  4387  02EC  00F0               	movwf	?___lldiv
  4388  02ED                     l413:
  4389  02ED  0008               	return
  4390  02EE                     __end_of___lldiv:
  4391                           
  4392                           	psect	text3
  4393  0094                     __ptext3:	
  4394 ;; *************** function _printf *****************
  4395 ;; Defined at:
  4396 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  4397 ;; Parameters:    Size  Location     Type
  4398 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  4399 ;;		 -> STR_5(29), STR_4(25), STR_3(28), STR_2(25), 
  4400 ;;		 -> STR_1(20), 
  4401 ;; Auto vars:     Size  Location     Type
  4402 ;;  ret             2    0        int 
  4403 ;;  ap              1   76[BANK0 ] PTR void [1]
  4404 ;;		 -> ?_printf(2), 
  4405 ;; Return value:  Size  Location     Type
  4406 ;;                  2   70[BANK0 ] int 
  4407 ;; Registers used:
  4408 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4409 ;; Tracked objects:
  4410 ;;		On entry : 0/0
  4411 ;;		On exit  : 0/0
  4412 ;;		Unchanged: 0/0
  4413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4414 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4415 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4416 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4417 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4418 ;;Total ram usage:        8 bytes
  4419 ;; Hardware stack levels used: 1
  4420 ;; Hardware stack levels required when called: 8
  4421 ;; This function calls:
  4422 ;;		_vfprintf
  4423 ;; This function is called by:
  4424 ;;		_main
  4425 ;; This function uses a non-reentrant model
  4426 ;;
  4427                           
  4428                           
  4429                           ;psect for function _printf
  4430  0094                     _printf:
  4431  0094                     l1741:	
  4432                           ;incstack = 0
  4433                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4434                           
  4435  0094  3068               	movlw	(low ((?_printf| 0+2)))& (0+255)
  4436  0095  00FD               	movwf	??_printf
  4437  0096  087D               	movf	??_printf,w
  4438  0097  0020               	movlb	0	; select bank0
  4439  0098  00EC               	movwf	printf@ap
  4440  0099                     l1743:
  4441  0099  0867               	movf	printf@fmt+1,w
  4442  009A  00DF               	movwf	vfprintf@fmt+1
  4443  009B  0866               	movf	printf@fmt,w
  4444  009C  00DE               	movwf	vfprintf@fmt
  4445  009D  306C               	movlw	(low (printf@ap| 0))& (0+255)
  4446  009E  00FD               	movwf	??_printf
  4447  009F  087D               	movf	??_printf,w
  4448  00A0  00E0               	movwf	vfprintf@ap
  4449  00A1  3000               	movlw	0
  4450  00A2  3181  217E  3180   	fcall	_vfprintf
  4451  00A5                     l840:
  4452  00A5  0008               	return
  4453  00A6                     __end_of_printf:
  4454                           
  4455                           	psect	text4
  4456  017E                     __ptext4:	
  4457 ;; *************** function _vfprintf *****************
  4458 ;; Defined at:
  4459 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4460 ;; Parameters:    Size  Location     Type
  4461 ;;  fp              1    wreg     PTR struct _IO_FILE
  4462 ;;		 -> NULL(0), 
  4463 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  4464 ;;		 -> STR_5(29), STR_4(25), STR_3(28), STR_2(25), 
  4465 ;;		 -> STR_1(20), 
  4466 ;;  ap              1   64[BANK0 ] PTR PTR void 
  4467 ;;		 -> printf@ap(1), 
  4468 ;; Auto vars:     Size  Location     Type
  4469 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
  4470 ;;		 -> NULL(0), 
  4471 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
  4472 ;;		 -> STR_5(29), STR_4(25), STR_3(28), STR_2(25), 
  4473 ;;		 -> STR_1(20), 
  4474 ;; Return value:  Size  Location     Type
  4475 ;;                  2   62[BANK0 ] int 
  4476 ;; Registers used:
  4477 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4478 ;; Tracked objects:
  4479 ;;		On entry : 0/0
  4480 ;;		On exit  : 0/0
  4481 ;;		Unchanged: 0/0
  4482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4483 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4484 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4485 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4486 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4487 ;;Total ram usage:        8 bytes
  4488 ;; Hardware stack levels used: 1
  4489 ;; Hardware stack levels required when called: 7
  4490 ;; This function calls:
  4491 ;;		_vfpfcnvrt
  4492 ;; This function is called by:
  4493 ;;		_printf
  4494 ;; This function uses a non-reentrant model
  4495 ;;
  4496                           
  4497                           
  4498                           ;psect for function _vfprintf
  4499  017E                     _vfprintf:
  4500                           
  4501                           ;incstack = 0
  4502                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4503                           ;vfprintf@fp stored from wreg
  4504  017E  0020               	movlb	0	; select bank0
  4505  017F  00E3               	movwf	vfprintf@fp
  4506  0180                     l1689:
  4507                           
  4508                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  4509  0180  085F               	movf	vfprintf@fmt+1,w
  4510  0181  00E5               	movwf	vfprintf@cfmt+1
  4511  0182  085E               	movf	vfprintf@fmt,w
  4512  0183  00E4               	movwf	vfprintf@cfmt
  4513  0184                     l1691:
  4514                           
  4515                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  4516  0184  0021               	movlb	1	; select bank1
  4517  0185  01A0               	clrf	_nout^(0+128)
  4518  0186  01A1               	clrf	(_nout+1)^(0+128)
  4519                           
  4520                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4521  0187  299C               	goto	l1695
  4522  0188                     l1693:
  4523                           
  4524                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  4525  0188  3064               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  4526  0189  00E1               	movwf	??_vfprintf
  4527  018A  0861               	movf	??_vfprintf,w
  4528  018B  00CE               	movwf	vfpfcnvrt@fmt
  4529  018C  0860               	movf	vfprintf@ap,w
  4530  018D  00E2               	movwf	??_vfprintf+1
  4531  018E  0862               	movf	??_vfprintf+1,w
  4532  018F  00CF               	movwf	vfpfcnvrt@ap
  4533  0190  0863               	movf	vfprintf@fp,w
  4534  0191  3183  23BF  3181   	fcall	_vfpfcnvrt
  4535  0194  0020               	movlb	0	; select bank0
  4536  0195  084E               	movf	?_vfpfcnvrt,w
  4537  0196  0021               	movlb	1	; select bank1
  4538  0197  07A0               	addwf	_nout^(0+128),f
  4539  0198  0020               	movlb	0	; select bank0
  4540  0199  084F               	movf	?_vfpfcnvrt+1,w
  4541  019A  0021               	movlb	1	; select bank1
  4542  019B  3DA1               	addwfc	(_nout+1)^(0+128),f
  4543  019C                     l1695:
  4544                           
  4545                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4546  019C  0020               	movlb	0	; select bank0
  4547  019D  0864               	movf	vfprintf@cfmt,w
  4548  019E  0084               	movwf	4
  4549  019F  0865               	movf	vfprintf@cfmt+1,w
  4550  01A0  0085               	movwf	5
  4551  01A1  0012               	moviw fsr0++
  4552  01A2  1D03               	btfss	3,2
  4553  01A3  29A5               	goto	u1501
  4554  01A4  29A6               	goto	u1500
  4555  01A5                     u1501:
  4556  01A5  2988               	goto	l1693
  4557  01A6                     u1500:
  4558  01A6                     l1697:
  4559                           
  4560                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  4561  01A6  0021               	movlb	1	; select bank1
  4562  01A7  0821               	movf	(_nout+1)^(0+128),w
  4563  01A8  0020               	movlb	0	; select bank0
  4564  01A9  00DF               	movwf	?_vfprintf+1
  4565  01AA  0021               	movlb	1	; select bank1
  4566  01AB  0820               	movf	_nout^(0+128),w
  4567  01AC  0020               	movlb	0	; select bank0
  4568  01AD  00DE               	movwf	?_vfprintf
  4569  01AE                     l912:
  4570  01AE  0008               	return
  4571  01AF                     __end_of_vfprintf:
  4572                           
  4573                           	psect	text5
  4574  03BF                     __ptext5:	
  4575 ;; *************** function _vfpfcnvrt *****************
  4576 ;; Defined at:
  4577 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4578 ;; Parameters:    Size  Location     Type
  4579 ;;  fp              1    wreg     PTR struct _IO_FILE
  4580 ;;		 -> NULL(0), 
  4581 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  4582 ;;		 -> vfprintf@cfmt(2), 
  4583 ;;  ap              1   47[BANK0 ] PTR PTR void 
  4584 ;;		 -> printf@ap(1), 
  4585 ;; Auto vars:     Size  Location     Type
  4586 ;;  fp              1   61[BANK0 ] PTR struct _IO_FILE
  4587 ;;		 -> NULL(0), 
  4588 ;;  ll              8   53[BANK0 ] long long 
  4589 ;;  llu             8    0        unsigned long long 
  4590 ;;  f               4    0        unsigned long long 
  4591 ;;  ct              3    0        unsigned char [3]
  4592 ;;  vp              2    0        PTR void 
  4593 ;;  i               2    0        int 
  4594 ;;  done            2    0        int 
  4595 ;;  cp              2    0        PTR unsigned char 
  4596 ;;  c               1    0        unsigned char 
  4597 ;; Return value:  Size  Location     Type
  4598 ;;                  2   46[BANK0 ] int 
  4599 ;; Registers used:
  4600 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4601 ;; Tracked objects:
  4602 ;;		On entry : 0/0
  4603 ;;		On exit  : 0/0
  4604 ;;		Unchanged: 0/0
  4605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4606 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4607 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4608 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4609 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4610 ;;Total ram usage:       16 bytes
  4611 ;; Hardware stack levels used: 1
  4612 ;; Hardware stack levels required when called: 6
  4613 ;; This function calls:
  4614 ;;		_dtoa
  4615 ;;		_fputc
  4616 ;; This function is called by:
  4617 ;;		_vfprintf
  4618 ;; This function uses a non-reentrant model
  4619 ;;
  4620                           
  4621                           
  4622                           ;psect for function _vfpfcnvrt
  4623  03BF                     _vfpfcnvrt:
  4624                           
  4625                           ;incstack = 0
  4626                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4627                           ;vfpfcnvrt@fp stored from wreg
  4628  03BF  0020               	movlb	0	; select bank0
  4629  03C0  00DD               	movwf	vfpfcnvrt@fp
  4630  03C1                     l1603:
  4631                           
  4632                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  4633  03C1  084E               	movf	vfpfcnvrt@fmt,w
  4634  03C2  0086               	movwf	6
  4635  03C3  0187               	clrf	7
  4636  03C4  3F40               	moviw [0]fsr1
  4637  03C5  00D0               	movwf	??_vfpfcnvrt
  4638  03C6  3F41               	moviw [1]fsr1
  4639  03C7  00D1               	movwf	??_vfpfcnvrt+1
  4640  03C8  0850               	movf	??_vfpfcnvrt,w
  4641  03C9  0084               	movwf	4
  4642  03CA  0851               	movf	??_vfpfcnvrt+1,w
  4643  03CB  0085               	movwf	5
  4644  03CC  0012               	moviw fsr0++
  4645  03CD  3A25               	xorlw	37
  4646  03CE  1D03               	btfss	3,2
  4647  03CF  2BD1               	goto	u1351
  4648  03D0  2BD2               	goto	u1350
  4649  03D1                     u1351:
  4650  03D1  2C76               	goto	l1639
  4651  03D2                     u1350:
  4652  03D2                     l1605:
  4653                           
  4654                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  4655  03D2  084E               	movf	vfpfcnvrt@fmt,w
  4656  03D3  0086               	movwf	6
  4657  03D4  0187               	clrf	7
  4658  03D5  3001               	movlw	1
  4659  03D6  0781               	addwf	1,f
  4660  03D7  3141               	addfsr 1,1
  4661  03D8  1803               	skipnc
  4662  03D9  0A81               	incf	1,f
  4663  03DA                     l1607:
  4664                           
  4665                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  4666  03DA  0021               	movlb	1	; select bank1
  4667  03DB  01A2               	clrf	_width^(0+128)
  4668  03DC  01A3               	clrf	(_width+1)^(0+128)
  4669  03DD  01A6               	clrf	_flags^(0+128)
  4670  03DE  01A7               	clrf	(_flags+1)^(0+128)
  4671  03DF                     l1609:
  4672                           
  4673                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  4674  03DF  30FF               	movlw	255
  4675  03E0  00A4               	movwf	_prec^(0+128)
  4676  03E1  30FF               	movlw	255
  4677  03E2  00A5               	movwf	(_prec^(0+128)+1)
  4678  03E3                     l1611:
  4679                           
  4680                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4681  03E3  0020               	movlb	0	; select bank0
  4682  03E4  084E               	movf	vfpfcnvrt@fmt,w
  4683  03E5  0086               	movwf	6
  4684  03E6  0187               	clrf	7
  4685  03E7  3F40               	moviw [0]fsr1
  4686  03E8  00D0               	movwf	??_vfpfcnvrt
  4687  03E9  3F41               	moviw [1]fsr1
  4688  03EA  00D1               	movwf	??_vfpfcnvrt+1
  4689  03EB  0850               	movf	??_vfpfcnvrt,w
  4690  03EC  0084               	movwf	4
  4691  03ED  0851               	movf	??_vfpfcnvrt+1,w
  4692  03EE  0085               	movwf	5
  4693  03EF  0012               	moviw fsr0++
  4694  03F0  3A64               	xorlw	100
  4695  03F1  1903               	btfsc	3,2
  4696  03F2  2BF4               	goto	u1361
  4697  03F3  2BF5               	goto	u1360
  4698  03F4                     u1361:
  4699  03F4  2C06               	goto	l1615
  4700  03F5                     u1360:
  4701  03F5                     l1613:
  4702  03F5  084E               	movf	vfpfcnvrt@fmt,w
  4703  03F6  0086               	movwf	6
  4704  03F7  0187               	clrf	7
  4705  03F8  3F40               	moviw [0]fsr1
  4706  03F9  00D0               	movwf	??_vfpfcnvrt
  4707  03FA  3F41               	moviw [1]fsr1
  4708  03FB  00D1               	movwf	??_vfpfcnvrt+1
  4709  03FC  0850               	movf	??_vfpfcnvrt,w
  4710  03FD  0084               	movwf	4
  4711  03FE  0851               	movf	??_vfpfcnvrt+1,w
  4712  03FF  0085               	movwf	5
  4713  0400  0012               	moviw fsr0++
  4714  0401  3A69               	xorlw	105
  4715  0402  1D03               	btfss	3,2
  4716  0403  2C05               	goto	u1371
  4717  0404  2C06               	goto	u1370
  4718  0405                     u1371:
  4719  0405  2C41               	goto	l1623
  4720  0406                     u1370:
  4721  0406                     l1615:
  4722                           
  4723                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  4724  0406  084E               	movf	vfpfcnvrt@fmt,w
  4725  0407  0086               	movwf	6
  4726  0408  0187               	clrf	7
  4727  0409  3001               	movlw	1
  4728  040A  0781               	addwf	1,f
  4729  040B  3141               	addfsr 1,1
  4730  040C  1803               	skipnc
  4731  040D  0A81               	incf	1,f
  4732  040E                     l1617:
  4733                           
  4734                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4735  040E  084F               	movf	vfpfcnvrt@ap,w
  4736  040F  0086               	movwf	6
  4737  0410  0187               	clrf	7
  4738  0411  0801               	movf	1,w
  4739  0412  0084               	movwf	4
  4740  0413  0185               	clrf	5
  4741  0414  3002               	movlw	2
  4742  0415  0781               	addwf	1,f
  4743  0416  3F00               	moviw [0]fsr0
  4744  0417  00D0               	movwf	??_vfpfcnvrt
  4745  0418  3F01               	moviw [1]fsr0
  4746  0419  00D1               	movwf	??_vfpfcnvrt+1
  4747  041A  0850               	movf	??_vfpfcnvrt,w
  4748  041B  00D5               	movwf	vfpfcnvrt@ll
  4749  041C  0851               	movf	??_vfpfcnvrt+1,w
  4750  041D  00D6               	movwf	vfpfcnvrt@ll+1
  4751  041E  0D89               	rlf	9,f
  4752  041F  3B89               	subwfb	9,f
  4753  0420  0989               	comf	9,f
  4754  0421  00D7               	movwf	vfpfcnvrt@ll+2
  4755  0422  00D8               	movwf	vfpfcnvrt@ll+3
  4756  0423  00D9               	movwf	vfpfcnvrt@ll+4
  4757  0424  00DA               	movwf	vfpfcnvrt@ll+5
  4758  0425  00DB               	movwf	vfpfcnvrt@ll+6
  4759  0426  00DC               	movwf	vfpfcnvrt@ll+7
  4760  0427                     l1619:
  4761                           
  4762                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  4763  0427  0855               	movf	vfpfcnvrt@ll,w
  4764  0428  00B0               	movwf	dtoa@d
  4765  0429  0856               	movf	vfpfcnvrt@ll+1,w
  4766  042A  00B1               	movwf	dtoa@d+1
  4767  042B  0857               	movf	vfpfcnvrt@ll+2,w
  4768  042C  00B2               	movwf	dtoa@d+2
  4769  042D  0858               	movf	vfpfcnvrt@ll+3,w
  4770  042E  00B3               	movwf	dtoa@d+3
  4771  042F  0859               	movf	vfpfcnvrt@ll+4,w
  4772  0430  00B4               	movwf	dtoa@d+4
  4773  0431  085A               	movf	vfpfcnvrt@ll+5,w
  4774  0432  00B5               	movwf	dtoa@d+5
  4775  0433  085B               	movf	vfpfcnvrt@ll+6,w
  4776  0434  00B6               	movwf	dtoa@d+6
  4777  0435  085C               	movf	vfpfcnvrt@ll+7,w
  4778  0436  00B7               	movwf	dtoa@d+7
  4779  0437  085D               	movf	vfpfcnvrt@fp,w
  4780  0438  3186  2685  3183   	fcall	_dtoa
  4781  043B  0020               	movlb	0	; select bank0
  4782  043C  0831               	movf	?_dtoa+1,w
  4783  043D  00CF               	movwf	?_vfpfcnvrt+1
  4784  043E  0830               	movf	?_dtoa,w
  4785  043F  00CE               	movwf	?_vfpfcnvrt
  4786  0440  2C99               	goto	l905
  4787  0441                     l1623:
  4788                           
  4789                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  4790  0441  084E               	movf	vfpfcnvrt@fmt,w
  4791  0442  0086               	movwf	6
  4792  0443  0187               	clrf	7
  4793  0444  3F40               	moviw [0]fsr1
  4794  0445  00D0               	movwf	??_vfpfcnvrt
  4795  0446  3F41               	moviw [1]fsr1
  4796  0447  00D1               	movwf	??_vfpfcnvrt+1
  4797  0448  0850               	movf	??_vfpfcnvrt,w
  4798  0449  0084               	movwf	4
  4799  044A  0851               	movf	??_vfpfcnvrt+1,w
  4800  044B  0085               	movwf	5
  4801  044C  0012               	moviw fsr0++
  4802  044D  3A25               	xorlw	37
  4803  044E  1D03               	btfss	3,2
  4804  044F  2C51               	goto	u1381
  4805  0450  2C52               	goto	u1380
  4806  0451                     u1381:
  4807  0451  2C6B               	goto	l1633
  4808  0452                     u1380:
  4809  0452                     l1625:
  4810                           
  4811                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  4812  0452  084E               	movf	vfpfcnvrt@fmt,w
  4813  0453  0086               	movwf	6
  4814  0454  0187               	clrf	7
  4815  0455  3001               	movlw	1
  4816  0456  0781               	addwf	1,f
  4817  0457  3141               	addfsr 1,1
  4818  0458  1803               	skipnc
  4819  0459  0A81               	incf	1,f
  4820  045A                     l1627:
  4821                           
  4822                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  4823  045A  3025               	movlw	37
  4824  045B  00F3               	movwf	fputc@c
  4825  045C  3000               	movlw	0
  4826  045D  00F4               	movwf	fputc@c+1
  4827  045E  085D               	movf	vfpfcnvrt@fp,w
  4828  045F  00D0               	movwf	??_vfpfcnvrt
  4829  0460  0850               	movf	??_vfpfcnvrt,w
  4830  0461  00F5               	movwf	fputc@fp
  4831  0462  3181  21AF  3183   	fcall	_fputc
  4832  0465                     l1629:
  4833                           
  4834                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  4835  0465  3001               	movlw	1
  4836  0466  0020               	movlb	0	; select bank0
  4837  0467  00CE               	movwf	?_vfpfcnvrt
  4838  0468  3000               	movlw	0
  4839  0469  00CF               	movwf	?_vfpfcnvrt+1
  4840  046A  2C99               	goto	l905
  4841  046B                     l1633:
  4842                           
  4843                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  4844  046B  084E               	movf	vfpfcnvrt@fmt,w
  4845  046C  0086               	movwf	6
  4846  046D  0187               	clrf	7
  4847  046E  3001               	movlw	1
  4848  046F  0781               	addwf	1,f
  4849  0470  3141               	addfsr 1,1
  4850  0471  1803               	skipnc
  4851  0472  0A81               	incf	1,f
  4852  0473                     l1635:
  4853                           
  4854                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  4855  0473  01CE               	clrf	?_vfpfcnvrt
  4856  0474  01CF               	clrf	?_vfpfcnvrt+1
  4857  0475  2C99               	goto	l905
  4858  0476                     l1639:
  4859                           
  4860                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  4861  0476  084E               	movf	vfpfcnvrt@fmt,w
  4862  0477  0086               	movwf	6
  4863  0478  0187               	clrf	7
  4864  0479  3F40               	moviw [0]fsr1
  4865  047A  00D0               	movwf	??_vfpfcnvrt
  4866  047B  3F41               	moviw [1]fsr1
  4867  047C  00D1               	movwf	??_vfpfcnvrt+1
  4868  047D  0850               	movf	??_vfpfcnvrt,w
  4869  047E  0084               	movwf	4
  4870  047F  0851               	movf	??_vfpfcnvrt+1,w
  4871  0480  0085               	movwf	5
  4872  0481  0800               	movf	0,w	;code access
  4873  0482  00D2               	movwf	??_vfpfcnvrt+2
  4874  0483  01D3               	clrf	??_vfpfcnvrt+3
  4875  0484  0852               	movf	??_vfpfcnvrt+2,w
  4876  0485  00F3               	movwf	fputc@c
  4877  0486  0853               	movf	??_vfpfcnvrt+3,w
  4878  0487  00F4               	movwf	fputc@c+1
  4879  0488  085D               	movf	vfpfcnvrt@fp,w
  4880  0489  00D4               	movwf	??_vfpfcnvrt+4
  4881  048A  0854               	movf	??_vfpfcnvrt+4,w
  4882  048B  00F5               	movwf	fputc@fp
  4883  048C  3181  21AF  3183   	fcall	_fputc
  4884  048F                     l1641:
  4885                           
  4886                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  4887  048F  0020               	movlb	0	; select bank0
  4888  0490  084E               	movf	vfpfcnvrt@fmt,w
  4889  0491  0086               	movwf	6
  4890  0492  0187               	clrf	7
  4891  0493  3001               	movlw	1
  4892  0494  0781               	addwf	1,f
  4893  0495  3141               	addfsr 1,1
  4894  0496  1803               	skipnc
  4895  0497  0A81               	incf	1,f
  4896  0498  2C65               	goto	l1629
  4897  0499                     l905:
  4898  0499  0008               	return
  4899  049A                     __end_of_vfpfcnvrt:
  4900                           
  4901                           	psect	text6
  4902  0685                     __ptext6:	
  4903 ;; *************** function _dtoa *****************
  4904 ;; Defined at:
  4905 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4906 ;; Parameters:    Size  Location     Type
  4907 ;;  fp              1    wreg     PTR struct _IO_FILE
  4908 ;;		 -> NULL(0), 
  4909 ;;  d               8   16[BANK0 ] long long 
  4910 ;; Auto vars:     Size  Location     Type
  4911 ;;  fp              1   31[BANK0 ] PTR struct _IO_FILE
  4912 ;;		 -> NULL(0), 
  4913 ;;  n               8   36[BANK0 ] long long 
  4914 ;;  i               2   44[BANK0 ] int 
  4915 ;;  s               2   34[BANK0 ] int 
  4916 ;;  w               2   32[BANK0 ] int 
  4917 ;;  p               2   29[BANK0 ] int 
  4918 ;; Return value:  Size  Location     Type
  4919 ;;                  2   16[BANK0 ] int 
  4920 ;; Registers used:
  4921 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4922 ;; Tracked objects:
  4923 ;;		On entry : 0/0
  4924 ;;		On exit  : 0/0
  4925 ;;		Unchanged: 0/0
  4926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4927 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4928 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4929 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4930 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4931 ;;Total ram usage:       30 bytes
  4932 ;; Hardware stack levels used: 1
  4933 ;; Hardware stack levels required when called: 5
  4934 ;; This function calls:
  4935 ;;		___aodiv
  4936 ;;		___aomod
  4937 ;;		_abs
  4938 ;;		_pad
  4939 ;; This function is called by:
  4940 ;;		_vfpfcnvrt
  4941 ;; This function uses a non-reentrant model
  4942 ;;
  4943                           
  4944                           
  4945                           ;psect for function _dtoa
  4946  0685                     _dtoa:
  4947                           
  4948                           ;incstack = 0
  4949                           ; Regs used in _dtoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4950                           ;dtoa@fp stored from wreg
  4951  0685  0020               	movlb	0	; select bank0
  4952  0686  00BF               	movwf	dtoa@fp
  4953  0687                     l1545:
  4954                           
  4955                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  4956  0687  0830               	movf	dtoa@d,w
  4957  0688  00C4               	movwf	dtoa@n
  4958  0689  0831               	movf	dtoa@d+1,w
  4959  068A  00C5               	movwf	dtoa@n+1
  4960  068B  0832               	movf	dtoa@d+2,w
  4961  068C  00C6               	movwf	dtoa@n+2
  4962  068D  0833               	movf	dtoa@d+3,w
  4963  068E  00C7               	movwf	dtoa@n+3
  4964  068F  0834               	movf	dtoa@d+4,w
  4965  0690  00C8               	movwf	dtoa@n+4
  4966  0691  0835               	movf	dtoa@d+5,w
  4967  0692  00C9               	movwf	dtoa@n+5
  4968  0693  0836               	movf	dtoa@d+6,w
  4969  0694  00CA               	movwf	dtoa@n+6
  4970  0695  0837               	movf	dtoa@d+7,w
  4971  0696  00CB               	movwf	dtoa@n+7
  4972  0697                     l1547:
  4973                           
  4974                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  4975  0697  3044               	movlw	low dtoa@n
  4976  0698  0086               	movwf	6
  4977  0699  3000               	movlw	high dtoa@n
  4978  069A  0087               	movwf	7
  4979  069B  3F47               	moviw [7]fsr1
  4980  069C  00B8               	movwf	??_dtoa
  4981  069D  1BB8               	btfsc	??_dtoa,7
  4982  069E  2EA0               	goto	u1191
  4983  069F  2EA2               	goto	u1190
  4984  06A0                     u1191:
  4985  06A0  3001               	movlw	1
  4986  06A1  2EA3               	goto	u1200
  4987  06A2                     u1190:
  4988  06A2  3000               	movlw	0
  4989  06A3                     u1200:
  4990  06A3  0020               	movlb	0	; select bank0
  4991  06A4  00B9               	movwf	??_dtoa+1
  4992  06A5  01BA               	clrf	??_dtoa+2
  4993  06A6  0839               	movf	??_dtoa+1,w
  4994  06A7  00C2               	movwf	dtoa@s
  4995  06A8  083A               	movf	??_dtoa+2,w
  4996  06A9  00C3               	movwf	dtoa@s+1
  4997  06AA                     l1549:
  4998                           
  4999                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  5000  06AA  0842               	movf	dtoa@s,w
  5001  06AB  0443               	iorwf	dtoa@s+1,w
  5002  06AC  1903               	btfsc	3,2
  5003  06AD  2EAF               	goto	u1211
  5004  06AE  2EB0               	goto	u1210
  5005  06AF                     u1211:
  5006  06AF  2ECE               	goto	l875
  5007  06B0                     u1210:
  5008  06B0                     l1551:
  5009                           
  5010                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  5011  06B0  09C4               	comf	dtoa@n,f
  5012  06B1  09C5               	comf	dtoa@n+1,f
  5013  06B2  09C6               	comf	dtoa@n+2,f
  5014  06B3  09C7               	comf	dtoa@n+3,f
  5015  06B4  09C8               	comf	dtoa@n+4,f
  5016  06B5  09C9               	comf	dtoa@n+5,f
  5017  06B6  09CA               	comf	dtoa@n+6,f
  5018  06B7  09CB               	comf	dtoa@n+7,f
  5019  06B8  0AC4               	incf	dtoa@n,f
  5020  06B9  1D03               	skipz
  5021  06BA  2ECE               	goto	u122lld
  5022  06BB  0AC5               	incf	dtoa@n+1,f
  5023  06BC  1D03               	skipz
  5024  06BD  2ECE               	goto	u122lld
  5025  06BE  0AC6               	incf	dtoa@n+2,f
  5026  06BF  1D03               	skipz
  5027  06C0  2ECE               	goto	u122lld
  5028  06C1  0AC7               	incf	dtoa@n+3,f
  5029  06C2  1D03               	skipz
  5030  06C3  2ECE               	goto	u122lld
  5031  06C4  0AC8               	incf	dtoa@n+4,f
  5032  06C5  1D03               	skipz
  5033  06C6  2ECE               	goto	u122lld
  5034  06C7  0AC9               	incf	dtoa@n+5,f
  5035  06C8  1D03               	skipz
  5036  06C9  2ECE               	goto	u122lld
  5037  06CA  0ACA               	incf	dtoa@n+6,f
  5038  06CB  1D03               	skipz
  5039  06CC  2ECE               	goto	u122lld
  5040  06CD  0ACB               	incf	dtoa@n+7,f
  5041  06CE                     u122lld:
  5042  06CE                     l875:	
  5043                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 297:     }
  5044                           
  5045                           
  5046                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  5047  06CE  0021               	movlb	1	; select bank1
  5048  06CF  1BA5               	btfsc	(_prec+1)^(0+128),7
  5049  06D0  2ED2               	goto	u1231
  5050  06D1  2ED3               	goto	u1230
  5051  06D2                     u1231:
  5052  06D2  2ED7               	goto	l876
  5053  06D3                     u1230:
  5054  06D3                     l1553:
  5055                           
  5056                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  5057  06D3  30FD               	movlw	253
  5058  06D4  05A6               	andwf	_flags^(0+128),f
  5059  06D5  30FF               	movlw	255
  5060  06D6  05A7               	andwf	(_flags+1)^(0+128),f
  5061  06D7                     l876:	
  5062                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 302:     }
  5063                           
  5064                           
  5065                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  5066  06D7  0825               	movf	(_prec+1)^(0+128),w
  5067  06D8  3A80               	xorlw	128
  5068  06D9  0020               	movlb	0	; select bank0
  5069  06DA  00B8               	movwf	??_dtoa
  5070  06DB  3080               	movlw	128
  5071  06DC  0238               	subwf	??_dtoa,w
  5072  06DD  1D03               	skipz
  5073  06DE  2EE2               	goto	u1245
  5074  06DF  3001               	movlw	1
  5075  06E0  0021               	movlb	1	; select bank1
  5076  06E1  0224               	subwf	_prec^(0+128),w
  5077  06E2                     u1245:
  5078  06E2  1803               	skipnc
  5079  06E3  2EE5               	goto	u1241
  5080  06E4  2EE6               	goto	u1240
  5081  06E5                     u1241:
  5082  06E5  2EEC               	goto	l1557
  5083  06E6                     u1240:
  5084  06E6                     l1555:
  5085  06E6  3001               	movlw	1
  5086  06E7  0020               	movlb	0	; select bank0
  5087  06E8  00BD               	movwf	dtoa@p
  5088  06E9  3000               	movlw	0
  5089  06EA  00BE               	movwf	dtoa@p+1
  5090  06EB  2EF4               	goto	l880
  5091  06EC                     l1557:
  5092  06EC  0021               	movlb	1	; select bank1
  5093  06ED  0825               	movf	(_prec+1)^(0+128),w
  5094  06EE  0020               	movlb	0	; select bank0
  5095  06EF  00BE               	movwf	dtoa@p+1
  5096  06F0  0021               	movlb	1	; select bank1
  5097  06F1  0824               	movf	_prec^(0+128),w
  5098  06F2  0020               	movlb	0	; select bank0
  5099  06F3  00BD               	movwf	dtoa@p
  5100  06F4                     l880:
  5101                           
  5102                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  5103  06F4  0021               	movlb	1	; select bank1
  5104  06F5  0823               	movf	(_width+1)^(0+128),w
  5105  06F6  0020               	movlb	0	; select bank0
  5106  06F7  00C1               	movwf	dtoa@w+1
  5107  06F8  0021               	movlb	1	; select bank1
  5108  06F9  0822               	movf	_width^(0+128),w
  5109  06FA  0020               	movlb	0	; select bank0
  5110  06FB  00C0               	movwf	dtoa@w
  5111  06FC                     l1559:
  5112                           
  5113                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  5114  06FC  0842               	movf	dtoa@s,w
  5115  06FD  0443               	iorwf	dtoa@s+1,w
  5116  06FE  1D03               	btfss	3,2
  5117  06FF  2F01               	goto	u1251
  5118  0700  2F02               	goto	u1250
  5119  0701                     u1251:
  5120  0701  2F07               	goto	l1563
  5121  0702                     u1250:
  5122  0702                     l1561:
  5123  0702  0021               	movlb	1	; select bank1
  5124  0703  1D26               	btfss	_flags^(0+128),2
  5125  0704  2F06               	goto	u1261
  5126  0705  2F07               	goto	u1260
  5127  0706                     u1261:
  5128  0706  2F0C               	goto	l881
  5129  0707                     u1260:
  5130  0707                     l1563:
  5131                           
  5132                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  5133  0707  30FF               	movlw	255
  5134  0708  0020               	movlb	0	; select bank0
  5135  0709  07C0               	addwf	dtoa@w,f
  5136  070A  30FF               	movlw	255
  5137  070B  3DC1               	addwfc	dtoa@w+1,f
  5138  070C                     l881:	
  5139                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 307:     }
  5140                           
  5141                           
  5142                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  5143  070C  301F               	movlw	31
  5144  070D  0020               	movlb	0	; select bank0
  5145  070E  00CC               	movwf	dtoa@i
  5146  070F  3000               	movlw	0
  5147  0710  00CD               	movwf	dtoa@i+1
  5148  0711                     l1565:
  5149                           
  5150                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  5151  0711  0021               	movlb	1	; select bank1
  5152  0712  01C8               	clrf	(_dbuf^(0+128)+31)
  5153                           
  5154                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5155  0713  2F7C               	goto	l884
  5156  0714                     l1567:
  5157                           
  5158                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  5159  0714  30FF               	movlw	255
  5160  0715  0020               	movlb	0	; select bank0
  5161  0716  07CC               	addwf	dtoa@i,f
  5162  0717  30FF               	movlw	255
  5163  0718  3DCD               	addwfc	dtoa@i+1,f
  5164  0719                     l1569:
  5165                           
  5166                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5167  0719  300A               	movlw	10
  5168  071A  00A0               	movwf	___aomod@divisor
  5169  071B  01A1               	clrf	___aomod@divisor+1
  5170  071C  01A2               	clrf	___aomod@divisor+2
  5171  071D  01A3               	clrf	___aomod@divisor+3
  5172  071E  01A4               	clrf	___aomod@divisor+4
  5173  071F  01A5               	clrf	___aomod@divisor+5
  5174  0720  01A6               	clrf	___aomod@divisor+6
  5175  0721  01A7               	clrf	___aomod@divisor+7
  5176  0722  0844               	movf	dtoa@n,w
  5177  0723  00A8               	movwf	___aomod@dividend
  5178  0724  0845               	movf	dtoa@n+1,w
  5179  0725  00A9               	movwf	___aomod@dividend+1
  5180  0726  0846               	movf	dtoa@n+2,w
  5181  0727  00AA               	movwf	___aomod@dividend+2
  5182  0728  0847               	movf	dtoa@n+3,w
  5183  0729  00AB               	movwf	___aomod@dividend+3
  5184  072A  0848               	movf	dtoa@n+4,w
  5185  072B  00AC               	movwf	___aomod@dividend+4
  5186  072C  0849               	movf	dtoa@n+5,w
  5187  072D  00AD               	movwf	___aomod@dividend+5
  5188  072E  084A               	movf	dtoa@n+6,w
  5189  072F  00AE               	movwf	___aomod@dividend+6
  5190  0730  084B               	movf	dtoa@n+7,w
  5191  0731  00AF               	movwf	___aomod@dividend+7
  5192  0732  3184  249A  3186   	fcall	___aomod
  5193  0735  0020               	movlb	0	; select bank0
  5194  0736  0821               	movf	?___aomod+1,w
  5195  0737  00F4               	movwf	abs@a+1
  5196  0738  0820               	movf	?___aomod,w
  5197  0739  00F3               	movwf	abs@a
  5198  073A  3181  211D  3186   	fcall	_abs
  5199  073D  0873               	movf	?_abs,w
  5200  073E  3E30               	addlw	48
  5201  073F  0020               	movlb	0	; select bank0
  5202  0740  00B8               	movwf	??_dtoa
  5203  0741  084C               	movf	dtoa@i,w
  5204  0742  3EA9               	addlw	(low (_dbuf| 0))& (0+255)
  5205  0743  0086               	movwf	6
  5206  0744  0187               	clrf	7
  5207  0745  0838               	movf	??_dtoa,w
  5208  0746  0081               	movwf	1
  5209  0747                     l1571:
  5210                           
  5211                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  5212  0747  30FF               	movlw	255
  5213  0748  07BD               	addwf	dtoa@p,f
  5214  0749  30FF               	movlw	255
  5215  074A  3DBE               	addwfc	dtoa@p+1,f
  5216  074B                     l1573:
  5217                           
  5218                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  5219  074B  30FF               	movlw	255
  5220  074C  07C0               	addwf	dtoa@w,f
  5221  074D  30FF               	movlw	255
  5222  074E  3DC1               	addwfc	dtoa@w+1,f
  5223  074F                     l1575:
  5224                           
  5225                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  5226  074F  300A               	movlw	10
  5227  0750  00A0               	movwf	___aodiv@divisor
  5228  0751  01A1               	clrf	___aodiv@divisor+1
  5229  0752  01A2               	clrf	___aodiv@divisor+2
  5230  0753  01A3               	clrf	___aodiv@divisor+3
  5231  0754  01A4               	clrf	___aodiv@divisor+4
  5232  0755  01A5               	clrf	___aodiv@divisor+5
  5233  0756  01A6               	clrf	___aodiv@divisor+6
  5234  0757  01A7               	clrf	___aodiv@divisor+7
  5235  0758  0844               	movf	dtoa@n,w
  5236  0759  00A8               	movwf	___aodiv@dividend
  5237  075A  0845               	movf	dtoa@n+1,w
  5238  075B  00A9               	movwf	___aodiv@dividend+1
  5239  075C  0846               	movf	dtoa@n+2,w
  5240  075D  00AA               	movwf	___aodiv@dividend+2
  5241  075E  0847               	movf	dtoa@n+3,w
  5242  075F  00AB               	movwf	___aodiv@dividend+3
  5243  0760  0848               	movf	dtoa@n+4,w
  5244  0761  00AC               	movwf	___aodiv@dividend+4
  5245  0762  0849               	movf	dtoa@n+5,w
  5246  0763  00AD               	movwf	___aodiv@dividend+5
  5247  0764  084A               	movf	dtoa@n+6,w
  5248  0765  00AE               	movwf	___aodiv@dividend+6
  5249  0766  084B               	movf	dtoa@n+7,w
  5250  0767  00AF               	movwf	___aodiv@dividend+7
  5251  0768  3185  2584  3186   	fcall	___aodiv
  5252  076B  0020               	movlb	0	; select bank0
  5253  076C  0820               	movf	?___aodiv,w
  5254  076D  00C4               	movwf	dtoa@n
  5255  076E  0821               	movf	?___aodiv+1,w
  5256  076F  00C5               	movwf	dtoa@n+1
  5257  0770  0822               	movf	?___aodiv+2,w
  5258  0771  00C6               	movwf	dtoa@n+2
  5259  0772  0823               	movf	?___aodiv+3,w
  5260  0773  00C7               	movwf	dtoa@n+3
  5261  0774  0824               	movf	?___aodiv+4,w
  5262  0775  00C8               	movwf	dtoa@n+4
  5263  0776  0825               	movf	?___aodiv+5,w
  5264  0777  00C9               	movwf	dtoa@n+5
  5265  0778  0826               	movf	?___aodiv+6,w
  5266  0779  00CA               	movwf	dtoa@n+6
  5267  077A  0827               	movf	?___aodiv+7,w
  5268  077B  00CB               	movwf	dtoa@n+7
  5269  077C                     l884:	
  5270                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 318:     }
  5271                           
  5272                           
  5273                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5274  077C  0020               	movlb	0	; select bank0
  5275  077D  084D               	movf	dtoa@i+1,w
  5276  077E  3A80               	xorlw	128
  5277  077F  00B8               	movwf	??_dtoa
  5278  0780  3080               	movlw	128
  5279  0781  0238               	subwf	??_dtoa,w
  5280  0782  1D03               	skipz
  5281  0783  2F86               	goto	u1275
  5282  0784  3001               	movlw	1
  5283  0785  024C               	subwf	dtoa@i,w
  5284  0786                     u1275:
  5285  0786  1C03               	skipc
  5286  0787  2F89               	goto	u1271
  5287  0788  2F8A               	goto	u1270
  5288  0789                     u1271:
  5289  0789  2FB7               	goto	l1585
  5290  078A                     u1270:
  5291  078A                     l1577:
  5292  078A  0020               	movlb	0	; select bank0
  5293  078B  0844               	movf	dtoa@n,w
  5294  078C  0445               	iorwf	dtoa@n+1,w
  5295  078D  0446               	iorwf	dtoa@n+2,w
  5296  078E  0447               	iorwf	dtoa@n+3,w
  5297  078F  0448               	iorwf	dtoa@n+4,w
  5298  0790  0449               	iorwf	dtoa@n+5,w
  5299  0791  044A               	iorwf	dtoa@n+6,w
  5300  0792  044B               	iorwf	dtoa@n+7,w
  5301  0793  1D03               	skipz
  5302  0794  2F96               	goto	u1281
  5303  0795  2F97               	goto	u1280
  5304  0796                     u1281:
  5305  0796  2F14               	goto	l1567
  5306  0797                     u1280:
  5307  0797                     l1579:
  5308  0797  083E               	movf	dtoa@p+1,w
  5309  0798  3A80               	xorlw	128
  5310  0799  00B8               	movwf	??_dtoa
  5311  079A  3080               	movlw	128
  5312  079B  0238               	subwf	??_dtoa,w
  5313  079C  1D03               	skipz
  5314  079D  2FA0               	goto	u1295
  5315  079E  3001               	movlw	1
  5316  079F  023D               	subwf	dtoa@p,w
  5317  07A0                     u1295:
  5318  07A0  1803               	skipnc
  5319  07A1  2FA3               	goto	u1291
  5320  07A2  2FA4               	goto	u1290
  5321  07A3                     u1291:
  5322  07A3  2F14               	goto	l1567
  5323  07A4                     u1290:
  5324  07A4                     l1581:
  5325  07A4  0020               	movlb	0	; select bank0
  5326  07A5  0841               	movf	dtoa@w+1,w
  5327  07A6  3A80               	xorlw	128
  5328  07A7  00B8               	movwf	??_dtoa
  5329  07A8  3080               	movlw	128
  5330  07A9  0238               	subwf	??_dtoa,w
  5331  07AA  1D03               	skipz
  5332  07AB  2FAE               	goto	u1305
  5333  07AC  3001               	movlw	1
  5334  07AD  0240               	subwf	dtoa@w,w
  5335  07AE                     u1305:
  5336  07AE  1C03               	skipc
  5337  07AF  2FB1               	goto	u1301
  5338  07B0  2FB2               	goto	u1300
  5339  07B1                     u1301:
  5340  07B1  2FB7               	goto	l1585
  5341  07B2                     u1300:
  5342  07B2                     l1583:
  5343  07B2  0021               	movlb	1	; select bank1
  5344  07B3  18A6               	btfsc	_flags^(0+128),1
  5345  07B4  2FB6               	goto	u1311
  5346  07B5  2FB7               	goto	u1310
  5347  07B6                     u1311:
  5348  07B6  2F14               	goto	l1567
  5349  07B7                     u1310:
  5350  07B7                     l1585:
  5351                           
  5352                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  5353  07B7  0020               	movlb	0	; select bank0
  5354  07B8  0842               	movf	dtoa@s,w
  5355  07B9  0443               	iorwf	dtoa@s+1,w
  5356  07BA  1D03               	btfss	3,2
  5357  07BB  2FBD               	goto	u1321
  5358  07BC  2FBE               	goto	u1320
  5359  07BD                     u1321:
  5360  07BD  2FC3               	goto	l1589
  5361  07BE                     u1320:
  5362  07BE                     l1587:
  5363  07BE  0021               	movlb	1	; select bank1
  5364  07BF  1D26               	btfss	_flags^(0+128),2
  5365  07C0  2FC2               	goto	u1331
  5366  07C1  2FC3               	goto	u1330
  5367  07C2                     u1331:
  5368  07C2  2FDF               	goto	l1599
  5369  07C3                     u1330:
  5370  07C3                     l1589:
  5371                           
  5372                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  5373  07C3  30FF               	movlw	255
  5374  07C4  0020               	movlb	0	; select bank0
  5375  07C5  07CC               	addwf	dtoa@i,f
  5376  07C6  30FF               	movlw	255
  5377  07C7  3DCD               	addwfc	dtoa@i+1,f
  5378  07C8                     l1591:
  5379                           
  5380                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  5381  07C8  0842               	movf	dtoa@s,w
  5382  07C9  0443               	iorwf	dtoa@s+1,w
  5383  07CA  1D03               	btfss	3,2
  5384  07CB  2FCD               	goto	u1341
  5385  07CC  2FCE               	goto	u1340
  5386  07CD                     u1341:
  5387  07CD  2FD3               	goto	l1595
  5388  07CE                     u1340:
  5389  07CE                     l1593:
  5390  07CE  302B               	movlw	43
  5391  07CF  00BB               	movwf	_dtoa$840
  5392  07D0  3000               	movlw	0
  5393  07D1  00BC               	movwf	_dtoa$840+1
  5394  07D2  2FD7               	goto	l1597
  5395  07D3                     l1595:
  5396  07D3  302D               	movlw	45
  5397  07D4  00BB               	movwf	_dtoa$840
  5398  07D5  3000               	movlw	0
  5399  07D6  00BC               	movwf	_dtoa$840+1
  5400  07D7                     l1597:
  5401  07D7  083B               	movf	_dtoa$840,w
  5402  07D8  00B8               	movwf	??_dtoa
  5403  07D9  084C               	movf	dtoa@i,w
  5404  07DA  3EA9               	addlw	(low (_dbuf| 0))& (0+255)
  5405  07DB  0086               	movwf	6
  5406  07DC  0187               	clrf	7
  5407  07DD  0838               	movf	??_dtoa,w
  5408  07DE  0081               	movwf	1
  5409  07DF                     l1599:
  5410                           
  5411                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  5412  07DF  0020               	movlb	0	; select bank0
  5413  07E0  084C               	movf	dtoa@i,w
  5414  07E1  3EA9               	addlw	(low (_dbuf| 0))& (0+255)
  5415  07E2  00B8               	movwf	??_dtoa
  5416  07E3  0838               	movf	??_dtoa,w
  5417  07E4  00A7               	movwf	pad@buf
  5418  07E5  0841               	movf	dtoa@w+1,w
  5419  07E6  00A9               	movwf	pad@p+1
  5420  07E7  0840               	movf	dtoa@w,w
  5421  07E8  00A8               	movwf	pad@p
  5422  07E9  083F               	movf	dtoa@fp,w
  5423  07EA  3182  223B  3186   	fcall	_pad
  5424  07ED  0020               	movlb	0	; select bank0
  5425  07EE  0828               	movf	?_pad+1,w
  5426  07EF  00B1               	movwf	?_dtoa+1
  5427  07F0  0827               	movf	?_pad,w
  5428  07F1  00B0               	movwf	?_dtoa
  5429  07F2                     l898:
  5430  07F2  0008               	return
  5431  07F3                     __end_of_dtoa:
  5432                           
  5433                           	psect	text7
  5434  023B                     __ptext7:	
  5435 ;; *************** function _pad *****************
  5436 ;; Defined at:
  5437 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5438 ;; Parameters:    Size  Location     Type
  5439 ;;  fp              1    wreg     PTR struct _IO_FILE
  5440 ;;		 -> NULL(0), 
  5441 ;;  buf             1    7[BANK0 ] PTR unsigned char 
  5442 ;;		 -> dbuf(32), 
  5443 ;;  p               2    8[BANK0 ] int 
  5444 ;; Auto vars:     Size  Location     Type
  5445 ;;  fp              1   14[BANK0 ] PTR struct _IO_FILE
  5446 ;;		 -> NULL(0), 
  5447 ;;  w               2   12[BANK0 ] int 
  5448 ;;  i               2   10[BANK0 ] int 
  5449 ;; Return value:  Size  Location     Type
  5450 ;;                  2    7[BANK0 ] int 
  5451 ;; Registers used:
  5452 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5453 ;; Tracked objects:
  5454 ;;		On entry : 0/0
  5455 ;;		On exit  : 0/0
  5456 ;;		Unchanged: 0/0
  5457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5458 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5459 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5460 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5461 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5462 ;;Total ram usage:        9 bytes
  5463 ;; Hardware stack levels used: 1
  5464 ;; Hardware stack levels required when called: 4
  5465 ;; This function calls:
  5466 ;;		_fputc
  5467 ;;		_fputs
  5468 ;;		_strlen
  5469 ;; This function is called by:
  5470 ;;		_dtoa
  5471 ;; This function uses a non-reentrant model
  5472 ;;
  5473                           
  5474                           
  5475                           ;psect for function _pad
  5476  023B                     _pad:
  5477                           
  5478                           ;incstack = 0
  5479                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5480                           ;pad@fp stored from wreg
  5481  023B  0020               	movlb	0	; select bank0
  5482  023C  00AE               	movwf	pad@fp
  5483  023D                     l1521:
  5484                           
  5485                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  5486  023D  0021               	movlb	1	; select bank1
  5487  023E  1C26               	btfss	_flags^(0+128),0
  5488  023F  2A41               	goto	u1141
  5489  0240  2A42               	goto	u1140
  5490  0241                     u1141:
  5491  0241  2A4B               	goto	l1525
  5492  0242                     u1140:
  5493  0242                     l1523:
  5494                           
  5495                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  5496  0242  0020               	movlb	0	; select bank0
  5497  0243  082E               	movf	pad@fp,w
  5498  0244  00FC               	movwf	??_pad
  5499  0245  087C               	movf	??_pad,w
  5500  0246  00FB               	movwf	fputs@fp
  5501  0247  0827               	movf	pad@buf,w
  5502  0248  3181  2156  3182   	fcall	_fputs
  5503  024B                     l1525:
  5504                           
  5505                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  5506  024B  0020               	movlb	0	; select bank0
  5507  024C  1BA9               	btfsc	pad@p+1,7
  5508  024D  2A4F               	goto	u1151
  5509  024E  2A50               	goto	u1150
  5510  024F                     u1151:
  5511  024F  2A55               	goto	l1529
  5512  0250                     u1150:
  5513  0250                     l1527:
  5514  0250  0829               	movf	pad@p+1,w
  5515  0251  00AD               	movwf	pad@w+1
  5516  0252  0828               	movf	pad@p,w
  5517  0253  00AC               	movwf	pad@w
  5518  0254  2A57               	goto	l867
  5519  0255                     l1529:
  5520  0255  01AC               	clrf	pad@w
  5521  0256  01AD               	clrf	pad@w+1
  5522  0257                     l867:
  5523                           
  5524                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5525  0257  01AA               	clrf	pad@i
  5526  0258  01AB               	clrf	pad@i+1
  5527                           
  5528                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5529  0259  2A6B               	goto	l1535
  5530  025A                     l1531:
  5531                           
  5532                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  5533  025A  3020               	movlw	32
  5534  025B  00F3               	movwf	fputc@c
  5535  025C  3000               	movlw	0
  5536  025D  00F4               	movwf	fputc@c+1
  5537  025E  0020               	movlb	0	; select bank0
  5538  025F  082E               	movf	pad@fp,w
  5539  0260  00FC               	movwf	??_pad
  5540  0261  087C               	movf	??_pad,w
  5541  0262  00F5               	movwf	fputc@fp
  5542  0263  3181  21AF  3182   	fcall	_fputc
  5543  0266                     l1533:
  5544                           
  5545                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5546  0266  3001               	movlw	1
  5547  0267  0020               	movlb	0	; select bank0
  5548  0268  07AA               	addwf	pad@i,f
  5549  0269  3000               	movlw	0
  5550  026A  3DAB               	addwfc	pad@i+1,f
  5551  026B                     l1535:
  5552                           
  5553                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5554  026B  082B               	movf	pad@i+1,w
  5555  026C  3A80               	xorlw	128
  5556  026D  00FC               	movwf	??_pad
  5557  026E  082D               	movf	pad@w+1,w
  5558  026F  3A80               	xorlw	128
  5559  0270  027C               	subwf	??_pad,w
  5560  0271  1D03               	skipz
  5561  0272  2A75               	goto	u1165
  5562  0273  082C               	movf	pad@w,w
  5563  0274  022A               	subwf	pad@i,w
  5564  0275                     u1165:
  5565  0275  1C03               	skipc
  5566  0276  2A78               	goto	u1161
  5567  0277  2A79               	goto	u1160
  5568  0278                     u1161:
  5569  0278  2A5A               	goto	l1531
  5570  0279                     u1160:
  5571  0279                     l870:
  5572                           
  5573                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  5574  0279  0021               	movlb	1	; select bank1
  5575  027A  1826               	btfsc	_flags^(0+128),0
  5576  027B  2A7D               	goto	u1171
  5577  027C  2A7E               	goto	u1170
  5578  027D                     u1171:
  5579  027D  2A87               	goto	l871
  5580  027E                     u1170:
  5581  027E                     l1537:
  5582                           
  5583                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  5584  027E  0020               	movlb	0	; select bank0
  5585  027F  082E               	movf	pad@fp,w
  5586  0280  00FC               	movwf	??_pad
  5587  0281  087C               	movf	??_pad,w
  5588  0282  00FB               	movwf	fputs@fp
  5589  0283  0827               	movf	pad@buf,w
  5590  0284  3181  2156  3182   	fcall	_fputs
  5591  0287                     l871:	
  5592                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 92:     }
  5593                           
  5594                           
  5595                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  5596  0287  0020               	movlb	0	; select bank0
  5597  0288  0827               	movf	pad@buf,w
  5598  0289  3180  20D0  3182   	fcall	_strlen
  5599  028C  0020               	movlb	0	; select bank0
  5600  028D  082C               	movf	pad@w,w
  5601  028E  0770               	addwf	?_strlen,w
  5602  028F  00A7               	movwf	?_pad
  5603  0290  082D               	movf	pad@w+1,w
  5604  0291  3D71               	addwfc	?_strlen+1,w
  5605  0292  00A8               	movwf	?_pad+1
  5606  0293                     l872:
  5607  0293  0008               	return
  5608  0294                     __end_of_pad:
  5609                           
  5610                           	psect	text8
  5611  00D0                     __ptext8:	
  5612 ;; *************** function _strlen *****************
  5613 ;; Defined at:
  5614 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  5615 ;; Parameters:    Size  Location     Type
  5616 ;;  s               1    wreg     PTR const unsigned char 
  5617 ;;		 -> dbuf(32), 
  5618 ;; Auto vars:     Size  Location     Type
  5619 ;;  s               1    4[COMMON] PTR const unsigned char 
  5620 ;;		 -> dbuf(32), 
  5621 ;;  a               1    3[COMMON] PTR const unsigned char 
  5622 ;;		 -> dbuf(32), 
  5623 ;; Return value:  Size  Location     Type
  5624 ;;                  2    0[COMMON] unsigned int 
  5625 ;; Registers used:
  5626 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5627 ;; Tracked objects:
  5628 ;;		On entry : 0/0
  5629 ;;		On exit  : 0/0
  5630 ;;		Unchanged: 0/0
  5631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5632 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5633 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5634 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5635 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5636 ;;Total ram usage:        5 bytes
  5637 ;; Hardware stack levels used: 1
  5638 ;; This function calls:
  5639 ;;		Nothing
  5640 ;; This function is called by:
  5641 ;;		_pad
  5642 ;; This function uses a non-reentrant model
  5643 ;;
  5644                           
  5645                           
  5646                           ;psect for function _strlen
  5647  00D0                     _strlen:
  5648                           
  5649                           ;incstack = 0
  5650                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  5651                           ;strlen@s stored from wreg
  5652  00D0  00F4               	movwf	strlen@s
  5653  00D1                     l1443:
  5654  00D1  0874               	movf	strlen@s,w
  5655  00D2  00F2               	movwf	??_strlen
  5656  00D3  0872               	movf	??_strlen,w
  5657  00D4  00F3               	movwf	strlen@a
  5658  00D5  28DA               	goto	l1447
  5659  00D6                     l1445:
  5660  00D6  3001               	movlw	1
  5661  00D7  00F2               	movwf	??_strlen
  5662  00D8  0872               	movf	??_strlen,w
  5663  00D9  07F4               	addwf	strlen@s,f
  5664  00DA                     l1447:
  5665  00DA  0874               	movf	strlen@s,w
  5666  00DB  0086               	movwf	6
  5667  00DC  0187               	clrf	7
  5668  00DD  0801               	movf	1,w
  5669  00DE  1D03               	btfss	3,2
  5670  00DF  28E1               	goto	u921
  5671  00E0  28E2               	goto	u920
  5672  00E1                     u921:
  5673  00E1  28D6               	goto	l1445
  5674  00E2                     u920:
  5675  00E2                     l1449:
  5676  00E2  0873               	movf	strlen@a,w
  5677  00E3  0274               	subwf	strlen@s,w
  5678  00E4  00F0               	movwf	?_strlen
  5679  00E5  01F1               	clrf	?_strlen+1
  5680  00E6  1BF0               	btfsc	?_strlen,7
  5681  00E7  03F1               	decf	?_strlen+1,f
  5682  00E8                     l945:
  5683  00E8  0008               	return
  5684  00E9                     __end_of_strlen:
  5685                           
  5686                           	psect	text9
  5687  0156                     __ptext9:	
  5688 ;; *************** function _fputs *****************
  5689 ;; Defined at:
  5690 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  5691 ;; Parameters:    Size  Location     Type
  5692 ;;  s               1    wreg     PTR const unsigned char 
  5693 ;;		 -> dbuf(32), 
  5694 ;;  fp              1   11[COMMON] PTR struct _IO_FILE
  5695 ;;		 -> NULL(0), 
  5696 ;; Auto vars:     Size  Location     Type
  5697 ;;  s               1    6[BANK0 ] PTR const unsigned char 
  5698 ;;		 -> dbuf(32), 
  5699 ;;  i               2    4[BANK0 ] int 
  5700 ;;  c               1    3[BANK0 ] unsigned char 
  5701 ;; Return value:  Size  Location     Type
  5702 ;;                  2   11[COMMON] int 
  5703 ;; Registers used:
  5704 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5705 ;; Tracked objects:
  5706 ;;		On entry : 0/0
  5707 ;;		On exit  : 0/0
  5708 ;;		Unchanged: 0/0
  5709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5710 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5711 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5712 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5713 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5714 ;;Total ram usage:        8 bytes
  5715 ;; Hardware stack levels used: 1
  5716 ;; Hardware stack levels required when called: 3
  5717 ;; This function calls:
  5718 ;;		_fputc
  5719 ;; This function is called by:
  5720 ;;		_pad
  5721 ;; This function uses a non-reentrant model
  5722 ;;
  5723                           
  5724                           
  5725                           ;psect for function _fputs
  5726  0156                     _fputs:
  5727                           
  5728                           ;incstack = 0
  5729                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5730                           ;fputs@s stored from wreg
  5731  0156  0020               	movlb	0	; select bank0
  5732  0157  00A6               	movwf	fputs@s
  5733  0158                     l1435:
  5734  0158  01A4               	clrf	fputs@i
  5735  0159  01A5               	clrf	fputs@i+1
  5736  015A  296E               	goto	l1441
  5737  015B                     l1437:
  5738  015B  0823               	movf	fputs@c,w
  5739  015C  00A0               	movwf	??_fputs
  5740  015D  01A1               	clrf	??_fputs+1
  5741  015E  0820               	movf	??_fputs,w
  5742  015F  00F3               	movwf	fputc@c
  5743  0160  0821               	movf	??_fputs+1,w
  5744  0161  00F4               	movwf	fputc@c+1
  5745  0162  087B               	movf	fputs@fp,w
  5746  0163  00A2               	movwf	??_fputs+2
  5747  0164  0822               	movf	??_fputs+2,w
  5748  0165  00F5               	movwf	fputc@fp
  5749  0166  3181  21AF  3181   	fcall	_fputc
  5750  0169                     l1439:
  5751  0169  3001               	movlw	1
  5752  016A  0020               	movlb	0	; select bank0
  5753  016B  07A4               	addwf	fputs@i,f
  5754  016C  3000               	movlw	0
  5755  016D  3DA5               	addwfc	fputs@i+1,f
  5756  016E                     l1441:
  5757  016E  0824               	movf	fputs@i,w
  5758  016F  0726               	addwf	fputs@s,w
  5759  0170  00A0               	movwf	??_fputs
  5760  0171  0820               	movf	??_fputs,w
  5761  0172  0086               	movwf	6
  5762  0173  0187               	clrf	7
  5763  0174  0801               	movf	1,w
  5764  0175  00A1               	movwf	??_fputs+1
  5765  0176  0821               	movf	??_fputs+1,w
  5766  0177  00A3               	movwf	fputs@c
  5767  0178  0823               	movf	fputs@c,w
  5768  0179  1D03               	btfss	3,2
  5769  017A  297C               	goto	u911
  5770  017B  297D               	goto	u910
  5771  017C                     u911:
  5772  017C  295B               	goto	l1437
  5773  017D                     u910:
  5774  017D                     l939:
  5775  017D  0008               	return
  5776  017E                     __end_of_fputs:
  5777                           
  5778                           	psect	text10
  5779  01AF                     __ptext10:	
  5780 ;; *************** function _fputc *****************
  5781 ;; Defined at:
  5782 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  5783 ;; Parameters:    Size  Location     Type
  5784 ;;  c               2    3[COMMON] int 
  5785 ;;  fp              1    5[COMMON] PTR struct _IO_FILE
  5786 ;;		 -> NULL(0), 
  5787 ;; Auto vars:     Size  Location     Type
  5788 ;;		None
  5789 ;; Return value:  Size  Location     Type
  5790 ;;                  2    3[COMMON] int 
  5791 ;; Registers used:
  5792 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5793 ;; Tracked objects:
  5794 ;;		On entry : 0/0
  5795 ;;		On exit  : 0/0
  5796 ;;		Unchanged: 0/0
  5797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5798 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5800 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5801 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5802 ;;Total ram usage:        8 bytes
  5803 ;; Hardware stack levels used: 1
  5804 ;; Hardware stack levels required when called: 2
  5805 ;; This function calls:
  5806 ;;		_putch
  5807 ;; This function is called by:
  5808 ;;		_pad
  5809 ;;		_vfpfcnvrt
  5810 ;;		_fputs
  5811 ;; This function uses a non-reentrant model
  5812 ;;
  5813                           
  5814                           
  5815                           ;psect for function _fputc
  5816  01AF                     _fputc:
  5817  01AF                     l1421:	
  5818                           ;incstack = 0
  5819                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5820                           
  5821  01AF  0875               	movf	fputc@fp,w
  5822  01B0  1903               	btfsc	3,2
  5823  01B1  29B3               	goto	u871
  5824  01B2  29B4               	goto	u870
  5825  01B3                     u871:
  5826  01B3  29B9               	goto	l1425
  5827  01B4                     u870:
  5828  01B4                     l1423:
  5829  01B4  0875               	movf	fputc@fp,w
  5830  01B5  1D03               	btfss	3,2
  5831  01B6  29B8               	goto	u881
  5832  01B7  29B9               	goto	u880
  5833  01B8                     u881:
  5834  01B8  29BE               	goto	l1427
  5835  01B9                     u880:
  5836  01B9                     l1425:
  5837  01B9  0873               	movf	fputc@c,w
  5838  01BA  3180  203D  3181   	fcall	_putch
  5839  01BD  29ED               	goto	l931
  5840  01BE                     l1427:
  5841  01BE  0875               	movf	fputc@fp,w
  5842  01BF  3E03               	addlw	3
  5843  01C0  0086               	movwf	6
  5844  01C1  0187               	clrf	7
  5845  01C2  0016               	moviw fsr1++
  5846  01C3  0401               	iorwf	1,w
  5847  01C4  1903               	btfsc	3,2
  5848  01C5  29C7               	goto	u891
  5849  01C6  29C8               	goto	u890
  5850  01C7                     u891:
  5851  01C7  29E5               	goto	l1431
  5852  01C8                     u890:
  5853  01C8                     l1429:
  5854  01C8  0875               	movf	fputc@fp,w
  5855  01C9  3E03               	addlw	3
  5856  01CA  0086               	movwf	6
  5857  01CB  0187               	clrf	7
  5858  01CC  3F40               	moviw [0]fsr1
  5859  01CD  00F6               	movwf	??_fputc
  5860  01CE  3F41               	moviw [1]fsr1
  5861  01CF  00F7               	movwf	??_fputc+1
  5862  01D0  0A75               	incf	fputc@fp,w
  5863  01D1  0086               	movwf	6
  5864  01D2  0187               	clrf	7
  5865  01D3  3F40               	moviw [0]fsr1
  5866  01D4  00F8               	movwf	??_fputc+2
  5867  01D5  3F41               	moviw [1]fsr1
  5868  01D6  00F9               	movwf	??_fputc+3
  5869  01D7  0879               	movf	??_fputc+3,w
  5870  01D8  3A80               	xorlw	128
  5871  01D9  00FA               	movwf	??_fputc+4
  5872  01DA  0877               	movf	??_fputc+1,w
  5873  01DB  3A80               	xorlw	128
  5874  01DC  027A               	subwf	??_fputc+4,w
  5875  01DD  1D03               	skipz
  5876  01DE  29E1               	goto	u905
  5877  01DF  0876               	movf	??_fputc,w
  5878  01E0  0278               	subwf	??_fputc+2,w
  5879  01E1                     u905:
  5880  01E1  1803               	skipnc
  5881  01E2  29E4               	goto	u901
  5882  01E3  29E5               	goto	u900
  5883  01E4                     u901:
  5884  01E4  29ED               	goto	l931
  5885  01E5                     u900:
  5886  01E5                     l1431:
  5887  01E5  0A75               	incf	fputc@fp,w
  5888  01E6  0086               	movwf	6
  5889  01E7  0187               	clrf	7
  5890  01E8  3001               	movlw	1
  5891  01E9  0781               	addwf	1,f
  5892  01EA  3141               	addfsr 1,1
  5893  01EB  1803               	skipnc
  5894  01EC  0A81               	incf	1,f
  5895  01ED                     l931:
  5896  01ED  0008               	return
  5897  01EE                     __end_of_fputc:
  5898                           
  5899                           	psect	text11
  5900  003D                     __ptext11:	
  5901 ;; *************** function _putch *****************
  5902 ;; Defined at:
  5903 ;;		line 82 in file "uart.c"
  5904 ;; Parameters:    Size  Location     Type
  5905 ;;  dato            1    wreg     unsigned char 
  5906 ;; Auto vars:     Size  Location     Type
  5907 ;;  dato            1    2[COMMON] unsigned char 
  5908 ;; Return value:  Size  Location     Type
  5909 ;;                  1    wreg      void 
  5910 ;; Registers used:
  5911 ;;		wreg, status,2, status,0, pclath, cstack
  5912 ;; Tracked objects:
  5913 ;;		On entry : 0/0
  5914 ;;		On exit  : 0/0
  5915 ;;		Unchanged: 0/0
  5916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5918 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5920 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5921 ;;Total ram usage:        1 bytes
  5922 ;; Hardware stack levels used: 1
  5923 ;; Hardware stack levels required when called: 1
  5924 ;; This function calls:
  5925 ;;		_uart_tx
  5926 ;; This function is called by:
  5927 ;;		_fputc
  5928 ;; This function uses a non-reentrant model
  5929 ;;
  5930                           
  5931                           
  5932                           ;psect for function _putch
  5933  003D                     _putch:
  5934                           
  5935                           ;incstack = 0
  5936                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  5937                           ;putch@dato stored from wreg
  5938  003D  00F2               	movwf	putch@dato
  5939  003E                     l1419:
  5940                           
  5941                           ;uart.c: 84:     uart_tx( dato);
  5942  003E  0872               	movf	putch@dato,w
  5943  003F  3180  2084  3180   	fcall	_uart_tx
  5944  0042                     l143:
  5945  0042  0008               	return
  5946  0043                     __end_of_putch:
  5947                           
  5948                           	psect	text12
  5949  0084                     __ptext12:	
  5950 ;; *************** function _uart_tx *****************
  5951 ;; Defined at:
  5952 ;;		line 63 in file "uart.c"
  5953 ;; Parameters:    Size  Location     Type
  5954 ;;  dato            1    wreg     unsigned char 
  5955 ;; Auto vars:     Size  Location     Type
  5956 ;;  dato            1    1[COMMON] unsigned char 
  5957 ;; Return value:  Size  Location     Type
  5958 ;;                  1    wreg      void 
  5959 ;; Registers used:
  5960 ;;		wreg, status,2, status,0
  5961 ;; Tracked objects:
  5962 ;;		On entry : 0/0
  5963 ;;		On exit  : 0/0
  5964 ;;		Unchanged: 0/0
  5965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5967 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5968 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5969 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5970 ;;Total ram usage:        2 bytes
  5971 ;; Hardware stack levels used: 1
  5972 ;; This function calls:
  5973 ;;		Nothing
  5974 ;; This function is called by:
  5975 ;;		_putch
  5976 ;;		_uart_send_string
  5977 ;; This function uses a non-reentrant model
  5978 ;;
  5979                           
  5980                           
  5981                           ;psect for function _uart_tx
  5982  0084                     _uart_tx:
  5983                           
  5984                           ;incstack = 0
  5985                           ; Regs used in _uart_tx: [wreg+status,2+status,0]
  5986                           ;uart_tx@dato stored from wreg
  5987  0084  00F1               	movwf	uart_tx@dato
  5988  0085                     l1413:
  5989  0085                     l1415:	
  5990                           ;uart.c: 65:     while( ( (PIR3>>4) & 0x01) == 0){}
  5991                           
  5992  0085  002E               	movlb	14	; select bank14
  5993  0086  080F               	movf	15,w	;volatile
  5994  0087  00F0               	movwf	??_uart_tx
  5995  0088  3004               	movlw	4
  5996  0089                     u855:
  5997  0089  36F0               	lsrf	??_uart_tx,f
  5998  008A  0B89               	decfsz	9,f
  5999  008B  2889               	goto	u855
  6000  008C  1C70               	btfss	??_uart_tx,0
  6001  008D  288F               	goto	u861
  6002  008E  2890               	goto	u860
  6003  008F                     u861:
  6004  008F  2885               	goto	l1415
  6005  0090                     u860:
  6006  0090                     l1417:
  6007                           
  6008                           ;uart.c: 66:         TX1REG = dato;
  6009  0090  0871               	movf	uart_tx@dato,w
  6010  0091  0022               	movlb	2	; select bank2
  6011  0092  009A               	movwf	26	;volatile
  6012  0093                     l131:
  6013  0093  0008               	return
  6014  0094                     __end_of_uart_tx:
  6015                           
  6016                           	psect	text13
  6017  011D                     __ptext13:	
  6018 ;; *************** function _abs *****************
  6019 ;; Defined at:
  6020 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  6021 ;; Parameters:    Size  Location     Type
  6022 ;;  a               2    3[COMMON] int 
  6023 ;; Auto vars:     Size  Location     Type
  6024 ;;		None
  6025 ;; Return value:  Size  Location     Type
  6026 ;;                  2    3[COMMON] int 
  6027 ;; Registers used:
  6028 ;;		wreg, status,2, status,0
  6029 ;; Tracked objects:
  6030 ;;		On entry : 0/0
  6031 ;;		On exit  : 0/0
  6032 ;;		Unchanged: 0/0
  6033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6034 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6036 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6037 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6038 ;;Total ram usage:        4 bytes
  6039 ;; Hardware stack levels used: 1
  6040 ;; This function calls:
  6041 ;;		Nothing
  6042 ;; This function is called by:
  6043 ;;		_dtoa
  6044 ;; This function uses a non-reentrant model
  6045 ;;
  6046                           
  6047                           
  6048                           ;psect for function _abs
  6049  011D                     _abs:
  6050  011D                     l1541:	
  6051                           ;incstack = 0
  6052                           ; Regs used in _abs: [wreg+status,2+status,0]
  6053                           
  6054  011D  0874               	movf	abs@a+1,w
  6055  011E  3A80               	xorlw	128
  6056  011F  00F5               	movwf	??_abs
  6057  0120  3080               	movlw	128
  6058  0121  0275               	subwf	??_abs,w
  6059  0122  1D03               	skipz
  6060  0123  2926               	goto	u1185
  6061  0124  3001               	movlw	1
  6062  0125  0273               	subwf	abs@a,w
  6063  0126                     u1185:
  6064  0126  1803               	skipnc
  6065  0127  2929               	goto	u1181
  6066  0128  292A               	goto	u1180
  6067  0129                     u1181:
  6068  0129  2936               	goto	l916
  6069  012A                     u1180:
  6070  012A                     l1543:
  6071  012A  0973               	comf	abs@a,w
  6072  012B  00F5               	movwf	??_abs
  6073  012C  0974               	comf	abs@a+1,w
  6074  012D  00F6               	movwf	??_abs+1
  6075  012E  0AF5               	incf	??_abs,f
  6076  012F  1903               	skipnz
  6077  0130  0AF6               	incf	??_abs+1,f
  6078  0131  0875               	movf	??_abs,w
  6079  0132  00F3               	movwf	?_abs
  6080  0133  0876               	movf	??_abs+1,w
  6081  0134  00F4               	movwf	?_abs+1
  6082  0135  2936               	goto	l919
  6083  0136                     l916:
  6084  0136                     l919:
  6085  0136  0008               	return
  6086  0137                     __end_of_abs:
  6087                           
  6088                           	psect	text14
  6089  049A                     __ptext14:	
  6090 ;; *************** function ___aomod *****************
  6091 ;; Defined at:
  6092 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  6093 ;; Parameters:    Size  Location     Type
  6094 ;;  divisor         8    0[BANK0 ] long long 
  6095 ;;  dividend        8    8[BANK0 ] long long 
  6096 ;; Auto vars:     Size  Location     Type
  6097 ;;  sign            1    2[COMMON] unsigned char 
  6098 ;;  counter         1    1[COMMON] unsigned char 
  6099 ;; Return value:  Size  Location     Type
  6100 ;;                  8    0[BANK0 ] long long 
  6101 ;; Registers used:
  6102 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6103 ;; Tracked objects:
  6104 ;;		On entry : 0/0
  6105 ;;		On exit  : 0/0
  6106 ;;		Unchanged: 0/0
  6107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6108 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6109 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6110 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6111 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6112 ;;Total ram usage:       19 bytes
  6113 ;; Hardware stack levels used: 1
  6114 ;; This function calls:
  6115 ;;		Nothing
  6116 ;; This function is called by:
  6117 ;;		_dtoa
  6118 ;; This function uses a non-reentrant model
  6119 ;;
  6120                           
  6121                           
  6122                           ;psect for function ___aomod
  6123  049A                     ___aomod:
  6124  049A                     l1491:	
  6125                           ;incstack = 0
  6126                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  6127                           
  6128  049A  01F2               	clrf	___aomod@sign
  6129  049B                     l1493:
  6130  049B  3028               	movlw	low ___aomod@dividend
  6131  049C  0086               	movwf	6
  6132  049D  3000               	movlw	high ___aomod@dividend
  6133  049E  0087               	movwf	7
  6134  049F  3F47               	moviw [7]fsr1
  6135  04A0  00F0               	movwf	??___aomod
  6136  04A1  1FF0               	btfss	??___aomod,7
  6137  04A2  2CA4               	goto	u1041
  6138  04A3  2CA5               	goto	u1040
  6139  04A4                     u1041:
  6140  04A4  2CC6               	goto	l1497
  6141  04A5                     u1040:
  6142  04A5                     l1495:
  6143  04A5  0020               	movlb	0	; select bank0
  6144  04A6  09A8               	comf	___aomod@dividend,f
  6145  04A7  09A9               	comf	___aomod@dividend+1,f
  6146  04A8  09AA               	comf	___aomod@dividend+2,f
  6147  04A9  09AB               	comf	___aomod@dividend+3,f
  6148  04AA  09AC               	comf	___aomod@dividend+4,f
  6149  04AB  09AD               	comf	___aomod@dividend+5,f
  6150  04AC  09AE               	comf	___aomod@dividend+6,f
  6151  04AD  09AF               	comf	___aomod@dividend+7,f
  6152  04AE  0AA8               	incf	___aomod@dividend,f
  6153  04AF  1D03               	skipz
  6154  04B0  2CC4               	goto	u105lld
  6155  04B1  0AA9               	incf	___aomod@dividend+1,f
  6156  04B2  1D03               	skipz
  6157  04B3  2CC4               	goto	u105lld
  6158  04B4  0AAA               	incf	___aomod@dividend+2,f
  6159  04B5  1D03               	skipz
  6160  04B6  2CC4               	goto	u105lld
  6161  04B7  0AAB               	incf	___aomod@dividend+3,f
  6162  04B8  1D03               	skipz
  6163  04B9  2CC4               	goto	u105lld
  6164  04BA  0AAC               	incf	___aomod@dividend+4,f
  6165  04BB  1D03               	skipz
  6166  04BC  2CC4               	goto	u105lld
  6167  04BD  0AAD               	incf	___aomod@dividend+5,f
  6168  04BE  1D03               	skipz
  6169  04BF  2CC4               	goto	u105lld
  6170  04C0  0AAE               	incf	___aomod@dividend+6,f
  6171  04C1  1D03               	skipz
  6172  04C2  2CC4               	goto	u105lld
  6173  04C3  0AAF               	incf	___aomod@dividend+7,f
  6174  04C4                     u105lld:
  6175  04C4  01F2               	clrf	___aomod@sign
  6176  04C5  0AF2               	incf	___aomod@sign,f
  6177  04C6                     l1497:
  6178  04C6  3020               	movlw	low ___aomod@divisor
  6179  04C7  0086               	movwf	6
  6180  04C8  3000               	movlw	high ___aomod@divisor
  6181  04C9  0087               	movwf	7
  6182  04CA  3F47               	moviw [7]fsr1
  6183  04CB  00F0               	movwf	??___aomod
  6184  04CC  1FF0               	btfss	??___aomod,7
  6185  04CD  2CCF               	goto	u1061
  6186  04CE  2CD0               	goto	u1060
  6187  04CF                     u1061:
  6188  04CF  2CEF               	goto	l1501
  6189  04D0                     u1060:
  6190  04D0                     l1499:
  6191  04D0  0020               	movlb	0	; select bank0
  6192  04D1  09A0               	comf	___aomod@divisor,f
  6193  04D2  09A1               	comf	___aomod@divisor+1,f
  6194  04D3  09A2               	comf	___aomod@divisor+2,f
  6195  04D4  09A3               	comf	___aomod@divisor+3,f
  6196  04D5  09A4               	comf	___aomod@divisor+4,f
  6197  04D6  09A5               	comf	___aomod@divisor+5,f
  6198  04D7  09A6               	comf	___aomod@divisor+6,f
  6199  04D8  09A7               	comf	___aomod@divisor+7,f
  6200  04D9  0AA0               	incf	___aomod@divisor,f
  6201  04DA  1D03               	skipz
  6202  04DB  2CEF               	goto	u107lld
  6203  04DC  0AA1               	incf	___aomod@divisor+1,f
  6204  04DD  1D03               	skipz
  6205  04DE  2CEF               	goto	u107lld
  6206  04DF  0AA2               	incf	___aomod@divisor+2,f
  6207  04E0  1D03               	skipz
  6208  04E1  2CEF               	goto	u107lld
  6209  04E2  0AA3               	incf	___aomod@divisor+3,f
  6210  04E3  1D03               	skipz
  6211  04E4  2CEF               	goto	u107lld
  6212  04E5  0AA4               	incf	___aomod@divisor+4,f
  6213  04E6  1D03               	skipz
  6214  04E7  2CEF               	goto	u107lld
  6215  04E8  0AA5               	incf	___aomod@divisor+5,f
  6216  04E9  1D03               	skipz
  6217  04EA  2CEF               	goto	u107lld
  6218  04EB  0AA6               	incf	___aomod@divisor+6,f
  6219  04EC  1D03               	skipz
  6220  04ED  2CEF               	goto	u107lld
  6221  04EE  0AA7               	incf	___aomod@divisor+7,f
  6222  04EF                     u107lld:
  6223  04EF                     l1501:
  6224  04EF  0020               	movlb	0	; select bank0
  6225  04F0  0820               	movf	___aomod@divisor,w
  6226  04F1  0421               	iorwf	___aomod@divisor+1,w
  6227  04F2  0422               	iorwf	___aomod@divisor+2,w
  6228  04F3  0423               	iorwf	___aomod@divisor+3,w
  6229  04F4  0424               	iorwf	___aomod@divisor+4,w
  6230  04F5  0425               	iorwf	___aomod@divisor+5,w
  6231  04F6  0426               	iorwf	___aomod@divisor+6,w
  6232  04F7  0427               	iorwf	___aomod@divisor+7,w
  6233  04F8  1903               	skipnz
  6234  04F9  2CFB               	goto	u1081
  6235  04FA  2CFC               	goto	u1080
  6236  04FB                     u1081:
  6237  04FB  2D4F               	goto	l1517
  6238  04FC                     u1080:
  6239  04FC                     l1503:
  6240  04FC  01F1               	clrf	___aomod@counter
  6241  04FD  0AF1               	incf	___aomod@counter,f
  6242  04FE  2D0B               	goto	l1509
  6243  04FF                     l1505:
  6244  04FF  35A0               	lslf	___aomod@divisor,f
  6245  0500  0DA1               	rlf	___aomod@divisor+1,f
  6246  0501  0DA2               	rlf	___aomod@divisor+2,f
  6247  0502  0DA3               	rlf	___aomod@divisor+3,f
  6248  0503  0DA4               	rlf	___aomod@divisor+4,f
  6249  0504  0DA5               	rlf	___aomod@divisor+5,f
  6250  0505  0DA6               	rlf	___aomod@divisor+6,f
  6251  0506  0DA7               	rlf	___aomod@divisor+7,f
  6252  0507                     l1507:
  6253  0507  3001               	movlw	1
  6254  0508  00F0               	movwf	??___aomod
  6255  0509  0870               	movf	??___aomod,w
  6256  050A  07F1               	addwf	___aomod@counter,f
  6257  050B                     l1509:
  6258  050B  1FA7               	btfss	___aomod@divisor+7,7
  6259  050C  2D0E               	goto	u1091
  6260  050D  2D0F               	goto	u1090
  6261  050E                     u1091:
  6262  050E  2CFF               	goto	l1505
  6263  050F                     u1090:
  6264  050F                     l1511:
  6265  050F  0827               	movf	___aomod@divisor+7,w
  6266  0510  022F               	subwf	___aomod@dividend+7,w
  6267  0511  1D03               	skipz
  6268  0512  2D2D               	goto	u1105
  6269  0513  0826               	movf	___aomod@divisor+6,w
  6270  0514  022E               	subwf	___aomod@dividend+6,w
  6271  0515  1D03               	skipz
  6272  0516  2D2D               	goto	u1105
  6273  0517  0825               	movf	___aomod@divisor+5,w
  6274  0518  022D               	subwf	___aomod@dividend+5,w
  6275  0519  1D03               	skipz
  6276  051A  2D2D               	goto	u1105
  6277  051B  0824               	movf	___aomod@divisor+4,w
  6278  051C  022C               	subwf	___aomod@dividend+4,w
  6279  051D  1D03               	skipz
  6280  051E  2D2D               	goto	u1105
  6281  051F  0823               	movf	___aomod@divisor+3,w
  6282  0520  022B               	subwf	___aomod@dividend+3,w
  6283  0521  1D03               	skipz
  6284  0522  2D2D               	goto	u1105
  6285  0523  0822               	movf	___aomod@divisor+2,w
  6286  0524  022A               	subwf	___aomod@dividend+2,w
  6287  0525  1D03               	skipz
  6288  0526  2D2D               	goto	u1105
  6289  0527  0821               	movf	___aomod@divisor+1,w
  6290  0528  0229               	subwf	___aomod@dividend+1,w
  6291  0529  1D03               	skipz
  6292  052A  2D2D               	goto	u1105
  6293  052B  0820               	movf	___aomod@divisor,w
  6294  052C  0228               	subwf	___aomod@dividend,w
  6295  052D                     u1105:
  6296  052D  1C03               	skipc
  6297  052E  2D30               	goto	u1101
  6298  052F  2D31               	goto	u1100
  6299  0530                     u1101:
  6300  0530  2D41               	goto	l1515
  6301  0531                     u1100:
  6302  0531                     l1513:
  6303  0531  0820               	movf	___aomod@divisor,w
  6304  0532  02A8               	subwf	___aomod@dividend,f
  6305  0533  0821               	movf	___aomod@divisor+1,w
  6306  0534  3BA9               	subwfb	___aomod@dividend+1,f
  6307  0535  0822               	movf	___aomod@divisor+2,w
  6308  0536  3BAA               	subwfb	___aomod@dividend+2,f
  6309  0537  0823               	movf	___aomod@divisor+3,w
  6310  0538  3BAB               	subwfb	___aomod@dividend+3,f
  6311  0539  0824               	movf	___aomod@divisor+4,w
  6312  053A  3BAC               	subwfb	___aomod@dividend+4,f
  6313  053B  0825               	movf	___aomod@divisor+5,w
  6314  053C  3BAD               	subwfb	___aomod@dividend+5,f
  6315  053D  0826               	movf	___aomod@divisor+6,w
  6316  053E  3BAE               	subwfb	___aomod@dividend+6,f
  6317  053F  0827               	movf	___aomod@divisor+7,w
  6318  0540  3BAF               	subwfb	___aomod@dividend+7,f
  6319  0541                     l1515:
  6320  0541  36A7               	lsrf	___aomod@divisor+7,f
  6321  0542  0CA6               	rrf	___aomod@divisor+6,f
  6322  0543  0CA5               	rrf	___aomod@divisor+5,f
  6323  0544  0CA4               	rrf	___aomod@divisor+4,f
  6324  0545  0CA3               	rrf	___aomod@divisor+3,f
  6325  0546  0CA2               	rrf	___aomod@divisor+2,f
  6326  0547  0CA1               	rrf	___aomod@divisor+1,f
  6327  0548  0CA0               	rrf	___aomod@divisor,f
  6328  0549  3001               	movlw	1
  6329  054A  02F1               	subwf	___aomod@counter,f
  6330  054B  1D03               	btfss	3,2
  6331  054C  2D4E               	goto	u1111
  6332  054D  2D4F               	goto	u1110
  6333  054E                     u1111:
  6334  054E  2D0F               	goto	l1511
  6335  054F                     u1110:
  6336  054F                     l1517:
  6337  054F  0872               	movf	___aomod@sign,w
  6338  0550  1903               	btfsc	3,2
  6339  0551  2D53               	goto	u1121
  6340  0552  2D54               	goto	u1120
  6341  0553                     u1121:
  6342  0553  2D72               	goto	l490
  6343  0554                     u1120:
  6344  0554                     l1519:
  6345  0554  09A8               	comf	___aomod@dividend,f
  6346  0555  09A9               	comf	___aomod@dividend+1,f
  6347  0556  09AA               	comf	___aomod@dividend+2,f
  6348  0557  09AB               	comf	___aomod@dividend+3,f
  6349  0558  09AC               	comf	___aomod@dividend+4,f
  6350  0559  09AD               	comf	___aomod@dividend+5,f
  6351  055A  09AE               	comf	___aomod@dividend+6,f
  6352  055B  09AF               	comf	___aomod@dividend+7,f
  6353  055C  0AA8               	incf	___aomod@dividend,f
  6354  055D  1D03               	skipz
  6355  055E  2D72               	goto	u113lld
  6356  055F  0AA9               	incf	___aomod@dividend+1,f
  6357  0560  1D03               	skipz
  6358  0561  2D72               	goto	u113lld
  6359  0562  0AAA               	incf	___aomod@dividend+2,f
  6360  0563  1D03               	skipz
  6361  0564  2D72               	goto	u113lld
  6362  0565  0AAB               	incf	___aomod@dividend+3,f
  6363  0566  1D03               	skipz
  6364  0567  2D72               	goto	u113lld
  6365  0568  0AAC               	incf	___aomod@dividend+4,f
  6366  0569  1D03               	skipz
  6367  056A  2D72               	goto	u113lld
  6368  056B  0AAD               	incf	___aomod@dividend+5,f
  6369  056C  1D03               	skipz
  6370  056D  2D72               	goto	u113lld
  6371  056E  0AAE               	incf	___aomod@dividend+6,f
  6372  056F  1D03               	skipz
  6373  0570  2D72               	goto	u113lld
  6374  0571  0AAF               	incf	___aomod@dividend+7,f
  6375  0572                     u113lld:
  6376  0572                     l490:
  6377  0572  0020               	movlb	0	; select bank0
  6378  0573  0828               	movf	___aomod@dividend,w
  6379  0574  00A0               	movwf	?___aomod
  6380  0575  0829               	movf	___aomod@dividend+1,w
  6381  0576  00A1               	movwf	?___aomod+1
  6382  0577  082A               	movf	___aomod@dividend+2,w
  6383  0578  00A2               	movwf	?___aomod+2
  6384  0579  082B               	movf	___aomod@dividend+3,w
  6385  057A  00A3               	movwf	?___aomod+3
  6386  057B  082C               	movf	___aomod@dividend+4,w
  6387  057C  00A4               	movwf	?___aomod+4
  6388  057D  082D               	movf	___aomod@dividend+5,w
  6389  057E  00A5               	movwf	?___aomod+5
  6390  057F  082E               	movf	___aomod@dividend+6,w
  6391  0580  00A6               	movwf	?___aomod+6
  6392  0581  082F               	movf	___aomod@dividend+7,w
  6393  0582  00A7               	movwf	?___aomod+7
  6394  0583                     l491:
  6395  0583  0008               	return
  6396  0584                     __end_of___aomod:
  6397                           
  6398                           	psect	text15
  6399  0584                     __ptext15:	
  6400 ;; *************** function ___aodiv *****************
  6401 ;; Defined at:
  6402 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  6403 ;; Parameters:    Size  Location     Type
  6404 ;;  divisor         8    0[BANK0 ] long long 
  6405 ;;  dividend        8    8[BANK0 ] long long 
  6406 ;; Auto vars:     Size  Location     Type
  6407 ;;  quotient        8    3[COMMON] long long 
  6408 ;;  sign            1    2[COMMON] unsigned char 
  6409 ;;  counter         1    1[COMMON] unsigned char 
  6410 ;; Return value:  Size  Location     Type
  6411 ;;                  8    0[BANK0 ] long long 
  6412 ;; Registers used:
  6413 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6414 ;; Tracked objects:
  6415 ;;		On entry : 0/0
  6416 ;;		On exit  : 0/0
  6417 ;;		Unchanged: 0/0
  6418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6419 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6420 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6421 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6422 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6423 ;;Total ram usage:       27 bytes
  6424 ;; Hardware stack levels used: 1
  6425 ;; This function calls:
  6426 ;;		Nothing
  6427 ;; This function is called by:
  6428 ;;		_dtoa
  6429 ;; This function uses a non-reentrant model
  6430 ;;
  6431                           
  6432                           
  6433                           ;psect for function ___aodiv
  6434  0584                     ___aodiv:
  6435  0584                     l1453:	
  6436                           ;incstack = 0
  6437                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  6438                           
  6439  0584  01F2               	clrf	___aodiv@sign
  6440  0585                     l1455:
  6441  0585  3020               	movlw	low ___aodiv@divisor
  6442  0586  0086               	movwf	6
  6443  0587  3000               	movlw	high ___aodiv@divisor
  6444  0588  0087               	movwf	7
  6445  0589  3F47               	moviw [7]fsr1
  6446  058A  00F0               	movwf	??___aodiv
  6447  058B  1FF0               	btfss	??___aodiv,7
  6448  058C  2D8E               	goto	u931
  6449  058D  2D8F               	goto	u930
  6450  058E                     u931:
  6451  058E  2DB0               	goto	l1459
  6452  058F                     u930:
  6453  058F                     l1457:
  6454  058F  0020               	movlb	0	; select bank0
  6455  0590  09A0               	comf	___aodiv@divisor,f
  6456  0591  09A1               	comf	___aodiv@divisor+1,f
  6457  0592  09A2               	comf	___aodiv@divisor+2,f
  6458  0593  09A3               	comf	___aodiv@divisor+3,f
  6459  0594  09A4               	comf	___aodiv@divisor+4,f
  6460  0595  09A5               	comf	___aodiv@divisor+5,f
  6461  0596  09A6               	comf	___aodiv@divisor+6,f
  6462  0597  09A7               	comf	___aodiv@divisor+7,f
  6463  0598  0AA0               	incf	___aodiv@divisor,f
  6464  0599  1D03               	skipz
  6465  059A  2DAE               	goto	u94lld
  6466  059B  0AA1               	incf	___aodiv@divisor+1,f
  6467  059C  1D03               	skipz
  6468  059D  2DAE               	goto	u94lld
  6469  059E  0AA2               	incf	___aodiv@divisor+2,f
  6470  059F  1D03               	skipz
  6471  05A0  2DAE               	goto	u94lld
  6472  05A1  0AA3               	incf	___aodiv@divisor+3,f
  6473  05A2  1D03               	skipz
  6474  05A3  2DAE               	goto	u94lld
  6475  05A4  0AA4               	incf	___aodiv@divisor+4,f
  6476  05A5  1D03               	skipz
  6477  05A6  2DAE               	goto	u94lld
  6478  05A7  0AA5               	incf	___aodiv@divisor+5,f
  6479  05A8  1D03               	skipz
  6480  05A9  2DAE               	goto	u94lld
  6481  05AA  0AA6               	incf	___aodiv@divisor+6,f
  6482  05AB  1D03               	skipz
  6483  05AC  2DAE               	goto	u94lld
  6484  05AD  0AA7               	incf	___aodiv@divisor+7,f
  6485  05AE                     u94lld:
  6486  05AE  01F2               	clrf	___aodiv@sign
  6487  05AF  0AF2               	incf	___aodiv@sign,f
  6488  05B0                     l1459:
  6489  05B0  3028               	movlw	low ___aodiv@dividend
  6490  05B1  0086               	movwf	6
  6491  05B2  3000               	movlw	high ___aodiv@dividend
  6492  05B3  0087               	movwf	7
  6493  05B4  3F47               	moviw [7]fsr1
  6494  05B5  00F0               	movwf	??___aodiv
  6495  05B6  1FF0               	btfss	??___aodiv,7
  6496  05B7  2DB9               	goto	u951
  6497  05B8  2DBA               	goto	u950
  6498  05B9                     u951:
  6499  05B9  2DDD               	goto	l1465
  6500  05BA                     u950:
  6501  05BA                     l1461:
  6502  05BA  0020               	movlb	0	; select bank0
  6503  05BB  09A8               	comf	___aodiv@dividend,f
  6504  05BC  09A9               	comf	___aodiv@dividend+1,f
  6505  05BD  09AA               	comf	___aodiv@dividend+2,f
  6506  05BE  09AB               	comf	___aodiv@dividend+3,f
  6507  05BF  09AC               	comf	___aodiv@dividend+4,f
  6508  05C0  09AD               	comf	___aodiv@dividend+5,f
  6509  05C1  09AE               	comf	___aodiv@dividend+6,f
  6510  05C2  09AF               	comf	___aodiv@dividend+7,f
  6511  05C3  0AA8               	incf	___aodiv@dividend,f
  6512  05C4  1D03               	skipz
  6513  05C5  2DD9               	goto	u96lld
  6514  05C6  0AA9               	incf	___aodiv@dividend+1,f
  6515  05C7  1D03               	skipz
  6516  05C8  2DD9               	goto	u96lld
  6517  05C9  0AAA               	incf	___aodiv@dividend+2,f
  6518  05CA  1D03               	skipz
  6519  05CB  2DD9               	goto	u96lld
  6520  05CC  0AAB               	incf	___aodiv@dividend+3,f
  6521  05CD  1D03               	skipz
  6522  05CE  2DD9               	goto	u96lld
  6523  05CF  0AAC               	incf	___aodiv@dividend+4,f
  6524  05D0  1D03               	skipz
  6525  05D1  2DD9               	goto	u96lld
  6526  05D2  0AAD               	incf	___aodiv@dividend+5,f
  6527  05D3  1D03               	skipz
  6528  05D4  2DD9               	goto	u96lld
  6529  05D5  0AAE               	incf	___aodiv@dividend+6,f
  6530  05D6  1D03               	skipz
  6531  05D7  2DD9               	goto	u96lld
  6532  05D8  0AAF               	incf	___aodiv@dividend+7,f
  6533  05D9                     u96lld:
  6534  05D9                     l1463:
  6535  05D9  3001               	movlw	1
  6536  05DA  00F0               	movwf	??___aodiv
  6537  05DB  0870               	movf	??___aodiv,w
  6538  05DC  06F2               	xorwf	___aodiv@sign,f
  6539  05DD                     l1465:
  6540  05DD  3073               	movlw	low ___aodiv@quotient
  6541  05DE  0086               	movwf	6
  6542  05DF  3000               	movlw	high ___aodiv@quotient
  6543  05E0  0087               	movwf	7
  6544  05E1  3008               	movlw	8
  6545  05E2  00F0               	movwf	??___aodiv
  6546  05E3  3000               	movlw	0
  6547  05E4                     u970:
  6548  05E4  001E               	movwi fsr1++
  6549  05E5  0BF0               	decfsz	??___aodiv,f
  6550  05E6  2DE4               	goto	u970
  6551  05E7                     l1467:
  6552  05E7  0020               	movlb	0	; select bank0
  6553  05E8  0820               	movf	___aodiv@divisor,w
  6554  05E9  0421               	iorwf	___aodiv@divisor+1,w
  6555  05EA  0422               	iorwf	___aodiv@divisor+2,w
  6556  05EB  0423               	iorwf	___aodiv@divisor+3,w
  6557  05EC  0424               	iorwf	___aodiv@divisor+4,w
  6558  05ED  0425               	iorwf	___aodiv@divisor+5,w
  6559  05EE  0426               	iorwf	___aodiv@divisor+6,w
  6560  05EF  0427               	iorwf	___aodiv@divisor+7,w
  6561  05F0  1903               	skipnz
  6562  05F1  2DF3               	goto	u981
  6563  05F2  2DF4               	goto	u980
  6564  05F3                     u981:
  6565  05F3  2E50               	goto	l1487
  6566  05F4                     u980:
  6567  05F4                     l1469:
  6568  05F4  01F1               	clrf	___aodiv@counter
  6569  05F5  0AF1               	incf	___aodiv@counter,f
  6570  05F6  2E03               	goto	l1475
  6571  05F7                     l1471:
  6572  05F7  35A0               	lslf	___aodiv@divisor,f
  6573  05F8  0DA1               	rlf	___aodiv@divisor+1,f
  6574  05F9  0DA2               	rlf	___aodiv@divisor+2,f
  6575  05FA  0DA3               	rlf	___aodiv@divisor+3,f
  6576  05FB  0DA4               	rlf	___aodiv@divisor+4,f
  6577  05FC  0DA5               	rlf	___aodiv@divisor+5,f
  6578  05FD  0DA6               	rlf	___aodiv@divisor+6,f
  6579  05FE  0DA7               	rlf	___aodiv@divisor+7,f
  6580  05FF                     l1473:
  6581  05FF  3001               	movlw	1
  6582  0600  00F0               	movwf	??___aodiv
  6583  0601  0870               	movf	??___aodiv,w
  6584  0602  07F1               	addwf	___aodiv@counter,f
  6585  0603                     l1475:
  6586  0603  1FA7               	btfss	___aodiv@divisor+7,7
  6587  0604  2E06               	goto	u991
  6588  0605  2E07               	goto	u990
  6589  0606                     u991:
  6590  0606  2DF7               	goto	l1471
  6591  0607                     u990:
  6592  0607                     l1477:
  6593  0607  35F3               	lslf	___aodiv@quotient,f
  6594  0608  0DF4               	rlf	___aodiv@quotient+1,f
  6595  0609  0DF5               	rlf	___aodiv@quotient+2,f
  6596  060A  0DF6               	rlf	___aodiv@quotient+3,f
  6597  060B  0DF7               	rlf	___aodiv@quotient+4,f
  6598  060C  0DF8               	rlf	___aodiv@quotient+5,f
  6599  060D  0DF9               	rlf	___aodiv@quotient+6,f
  6600  060E  0DFA               	rlf	___aodiv@quotient+7,f
  6601  060F                     l1479:
  6602  060F  0827               	movf	___aodiv@divisor+7,w
  6603  0610  022F               	subwf	___aodiv@dividend+7,w
  6604  0611  1D03               	skipz
  6605  0612  2E2D               	goto	u1005
  6606  0613  0826               	movf	___aodiv@divisor+6,w
  6607  0614  022E               	subwf	___aodiv@dividend+6,w
  6608  0615  1D03               	skipz
  6609  0616  2E2D               	goto	u1005
  6610  0617  0825               	movf	___aodiv@divisor+5,w
  6611  0618  022D               	subwf	___aodiv@dividend+5,w
  6612  0619  1D03               	skipz
  6613  061A  2E2D               	goto	u1005
  6614  061B  0824               	movf	___aodiv@divisor+4,w
  6615  061C  022C               	subwf	___aodiv@dividend+4,w
  6616  061D  1D03               	skipz
  6617  061E  2E2D               	goto	u1005
  6618  061F  0823               	movf	___aodiv@divisor+3,w
  6619  0620  022B               	subwf	___aodiv@dividend+3,w
  6620  0621  1D03               	skipz
  6621  0622  2E2D               	goto	u1005
  6622  0623  0822               	movf	___aodiv@divisor+2,w
  6623  0624  022A               	subwf	___aodiv@dividend+2,w
  6624  0625  1D03               	skipz
  6625  0626  2E2D               	goto	u1005
  6626  0627  0821               	movf	___aodiv@divisor+1,w
  6627  0628  0229               	subwf	___aodiv@dividend+1,w
  6628  0629  1D03               	skipz
  6629  062A  2E2D               	goto	u1005
  6630  062B  0820               	movf	___aodiv@divisor,w
  6631  062C  0228               	subwf	___aodiv@dividend,w
  6632  062D                     u1005:
  6633  062D  1C03               	skipc
  6634  062E  2E30               	goto	u1001
  6635  062F  2E31               	goto	u1000
  6636  0630                     u1001:
  6637  0630  2E42               	goto	l1485
  6638  0631                     u1000:
  6639  0631                     l1481:
  6640  0631  0820               	movf	___aodiv@divisor,w
  6641  0632  02A8               	subwf	___aodiv@dividend,f
  6642  0633  0821               	movf	___aodiv@divisor+1,w
  6643  0634  3BA9               	subwfb	___aodiv@dividend+1,f
  6644  0635  0822               	movf	___aodiv@divisor+2,w
  6645  0636  3BAA               	subwfb	___aodiv@dividend+2,f
  6646  0637  0823               	movf	___aodiv@divisor+3,w
  6647  0638  3BAB               	subwfb	___aodiv@dividend+3,f
  6648  0639  0824               	movf	___aodiv@divisor+4,w
  6649  063A  3BAC               	subwfb	___aodiv@dividend+4,f
  6650  063B  0825               	movf	___aodiv@divisor+5,w
  6651  063C  3BAD               	subwfb	___aodiv@dividend+5,f
  6652  063D  0826               	movf	___aodiv@divisor+6,w
  6653  063E  3BAE               	subwfb	___aodiv@dividend+6,f
  6654  063F  0827               	movf	___aodiv@divisor+7,w
  6655  0640  3BAF               	subwfb	___aodiv@dividend+7,f
  6656  0641                     l1483:
  6657  0641  1473               	bsf	___aodiv@quotient,0
  6658  0642                     l1485:
  6659  0642  36A7               	lsrf	___aodiv@divisor+7,f
  6660  0643  0CA6               	rrf	___aodiv@divisor+6,f
  6661  0644  0CA5               	rrf	___aodiv@divisor+5,f
  6662  0645  0CA4               	rrf	___aodiv@divisor+4,f
  6663  0646  0CA3               	rrf	___aodiv@divisor+3,f
  6664  0647  0CA2               	rrf	___aodiv@divisor+2,f
  6665  0648  0CA1               	rrf	___aodiv@divisor+1,f
  6666  0649  0CA0               	rrf	___aodiv@divisor,f
  6667  064A  3001               	movlw	1
  6668  064B  02F1               	subwf	___aodiv@counter,f
  6669  064C  1D03               	btfss	3,2
  6670  064D  2E4F               	goto	u1011
  6671  064E  2E50               	goto	u1010
  6672  064F                     u1011:
  6673  064F  2E07               	goto	l1477
  6674  0650                     u1010:
  6675  0650                     l1487:
  6676  0650  0872               	movf	___aodiv@sign,w
  6677  0651  1903               	btfsc	3,2
  6678  0652  2E54               	goto	u1021
  6679  0653  2E55               	goto	u1020
  6680  0654                     u1021:
  6681  0654  2E73               	goto	l477
  6682  0655                     u1020:
  6683  0655                     l1489:
  6684  0655  09F3               	comf	___aodiv@quotient,f
  6685  0656  09F4               	comf	___aodiv@quotient+1,f
  6686  0657  09F5               	comf	___aodiv@quotient+2,f
  6687  0658  09F6               	comf	___aodiv@quotient+3,f
  6688  0659  09F7               	comf	___aodiv@quotient+4,f
  6689  065A  09F8               	comf	___aodiv@quotient+5,f
  6690  065B  09F9               	comf	___aodiv@quotient+6,f
  6691  065C  09FA               	comf	___aodiv@quotient+7,f
  6692  065D  0AF3               	incf	___aodiv@quotient,f
  6693  065E  1D03               	skipz
  6694  065F  2E73               	goto	u103lld
  6695  0660  0AF4               	incf	___aodiv@quotient+1,f
  6696  0661  1D03               	skipz
  6697  0662  2E73               	goto	u103lld
  6698  0663  0AF5               	incf	___aodiv@quotient+2,f
  6699  0664  1D03               	skipz
  6700  0665  2E73               	goto	u103lld
  6701  0666  0AF6               	incf	___aodiv@quotient+3,f
  6702  0667  1D03               	skipz
  6703  0668  2E73               	goto	u103lld
  6704  0669  0AF7               	incf	___aodiv@quotient+4,f
  6705  066A  1D03               	skipz
  6706  066B  2E73               	goto	u103lld
  6707  066C  0AF8               	incf	___aodiv@quotient+5,f
  6708  066D  1D03               	skipz
  6709  066E  2E73               	goto	u103lld
  6710  066F  0AF9               	incf	___aodiv@quotient+6,f
  6711  0670  1D03               	skipz
  6712  0671  2E73               	goto	u103lld
  6713  0672  0AFA               	incf	___aodiv@quotient+7,f
  6714  0673                     u103lld:
  6715  0673                     l477:
  6716  0673  0873               	movf	___aodiv@quotient,w
  6717  0674  0020               	movlb	0	; select bank0
  6718  0675  00A0               	movwf	?___aodiv
  6719  0676  0874               	movf	___aodiv@quotient+1,w
  6720  0677  00A1               	movwf	?___aodiv+1
  6721  0678  0875               	movf	___aodiv@quotient+2,w
  6722  0679  00A2               	movwf	?___aodiv+2
  6723  067A  0876               	movf	___aodiv@quotient+3,w
  6724  067B  00A3               	movwf	?___aodiv+3
  6725  067C  0877               	movf	___aodiv@quotient+4,w
  6726  067D  00A4               	movwf	?___aodiv+4
  6727  067E  0878               	movf	___aodiv@quotient+5,w
  6728  067F  00A5               	movwf	?___aodiv+5
  6729  0680  0879               	movf	___aodiv@quotient+6,w
  6730  0681  00A6               	movwf	?___aodiv+6
  6731  0682  087A               	movf	___aodiv@quotient+7,w
  6732  0683  00A7               	movwf	?___aodiv+7
  6733  0684                     l478:
  6734  0684  0008               	return
  6735  0685                     __end_of___aodiv:
  6736                           
  6737                           	psect	text16
  6738  00BA                     __ptext16:	
  6739 ;; *************** function _port_init *****************
  6740 ;; Defined at:
  6741 ;;		line 75 in file "Main.c"
  6742 ;; Parameters:    Size  Location     Type
  6743 ;;		None
  6744 ;; Auto vars:     Size  Location     Type
  6745 ;;		None
  6746 ;; Return value:  Size  Location     Type
  6747 ;;                  1    wreg      void 
  6748 ;; Registers used:
  6749 ;;		wreg, status,2
  6750 ;; Tracked objects:
  6751 ;;		On entry : 0/0
  6752 ;;		On exit  : 0/0
  6753 ;;		Unchanged: 0/0
  6754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6759 ;;Total ram usage:        0 bytes
  6760 ;; Hardware stack levels used: 1
  6761 ;; This function calls:
  6762 ;;		Nothing
  6763 ;; This function is called by:
  6764 ;;		_main
  6765 ;; This function uses a non-reentrant model
  6766 ;;
  6767                           
  6768                           
  6769                           ;psect for function _port_init
  6770  00BA                     _port_init:
  6771  00BA                     l1701:	
  6772                           ;incstack = 0
  6773                           ; Regs used in _port_init: [wreg+status,2]
  6774                           
  6775                           
  6776                           ;Main.c: 77:     ANSELA = 0;
  6777  00BA  003E               	movlb	30	; select bank30
  6778  00BB  01B8               	clrf	56	;volatile
  6779                           
  6780                           ;Main.c: 78:     LATA=0;
  6781  00BC  0020               	movlb	0	; select bank0
  6782  00BD  0196               	clrf	22	;volatile
  6783                           
  6784                           ;Main.c: 79:     PORTA =0;
  6785  00BE  018C               	clrf	12	;volatile
  6786  00BF                     l1703:
  6787                           
  6788                           ;Main.c: 80:     TRISA = 0b11110000;
  6789  00BF  30F0               	movlw	240
  6790  00C0  0091               	movwf	17	;volatile
  6791                           
  6792                           ;Main.c: 83:     ANSELA = ANSELA | (1<<4);
  6793  00C1  003E               	movlb	30	; select bank30
  6794  00C2  0838               	movf	56,w	;volatile
  6795  00C3  3810               	iorlw	16
  6796  00C4  00B8               	movwf	56	;volatile
  6797  00C5                     l1705:
  6798                           
  6799                           ;Main.c: 85:     LATB=0;
  6800  00C5  0020               	movlb	0	; select bank0
  6801  00C6  0197               	clrf	23	;volatile
  6802  00C7                     l1707:
  6803                           
  6804                           ;Main.c: 86:     PORTB =0;
  6805  00C7  018D               	clrf	13	;volatile
  6806                           
  6807                           ;Main.c: 87:     TRISB = TRISA | (1<<0);
  6808  00C8  0811               	movf	17,w	;volatile
  6809  00C9  3801               	iorlw	1
  6810  00CA  0092               	movwf	18	;volatile
  6811                           
  6812                           ;Main.c: 88:     ANSELB = ANSELB | (1<<0);
  6813  00CB  003E               	movlb	30	; select bank30
  6814  00CC  0843               	movf	67,w	;volatile
  6815  00CD  3801               	iorlw	1
  6816  00CE  00C3               	movwf	67	;volatile
  6817  00CF                     l62:
  6818  00CF  0008               	return
  6819  00D0                     __end_of_port_init:
  6820                           
  6821                           	psect	text17
  6822  0103                     __ptext17:	
  6823 ;; *************** function _adc_init *****************
  6824 ;; Defined at:
  6825 ;;		line 3 in file "adc.c"
  6826 ;; Parameters:    Size  Location     Type
  6827 ;;		None
  6828 ;; Auto vars:     Size  Location     Type
  6829 ;;		None
  6830 ;; Return value:  Size  Location     Type
  6831 ;;                  1    wreg      void 
  6832 ;; Registers used:
  6833 ;;		wreg, status,2
  6834 ;; Tracked objects:
  6835 ;;		On entry : 0/0
  6836 ;;		On exit  : 0/0
  6837 ;;		Unchanged: 0/0
  6838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6843 ;;Total ram usage:        0 bytes
  6844 ;; Hardware stack levels used: 1
  6845 ;; This function calls:
  6846 ;;		Nothing
  6847 ;; This function is called by:
  6848 ;;		_main
  6849 ;; This function uses a non-reentrant model
  6850 ;;
  6851                           
  6852                           
  6853                           ;psect for function _adc_init
  6854  0103                     _adc_init:
  6855  0103                     l1729:	
  6856                           ;incstack = 0
  6857                           ; Regs used in _adc_init: [wreg+status,2]
  6858                           
  6859                           
  6860                           ;adc.c: 4:     ADCON0 = ADCON0 & ~(1<<7 | 1<<4 );
  6861  0103  0021               	movlb	1	; select bank1
  6862  0104  0813               	movf	19,w	;volatile
  6863  0105  396F               	andlw	111
  6864  0106  0093               	movwf	19	;volatile
  6865                           
  6866                           ;adc.c: 5:     ADCON0 = ADCON0 |(1<<2);
  6867  0107  0813               	movf	19,w	;volatile
  6868  0108  3804               	iorlw	4
  6869  0109  0093               	movwf	19	;volatile
  6870                           
  6871                           ;adc.c: 6:     ADCON1 = ADCON1 |(1<<7);
  6872  010A  0814               	movf	20,w	;volatile
  6873  010B  3880               	iorlw	128
  6874  010C  0094               	movwf	20	;volatile
  6875                           
  6876                           ;adc.c: 7:     ADCON2 = ADCON2 & ~(7<<0 );
  6877  010D  0815               	movf	21,w	;volatile
  6878  010E  39F8               	andlw	248
  6879  010F  0095               	movwf	21	;volatile
  6880                           
  6881                           ;adc.c: 17:     ADCLK = ADCLK |(16<<0);
  6882  0110  0818               	movf	24,w	;volatile
  6883  0111  3810               	iorlw	16
  6884  0112  0098               	movwf	24	;volatile
  6885                           
  6886                           ;adc.c: 19:     ADREF = ADREF & ~(1<<4 );
  6887  0113  081A               	movf	26,w	;volatile
  6888  0114  39EF               	andlw	239
  6889  0115  009A               	movwf	26	;volatile
  6890                           
  6891                           ;adc.c: 20:     ADREF = ADREF & ~(3<<0 );
  6892  0116  081A               	movf	26,w	;volatile
  6893  0117  39FC               	andlw	252
  6894  0118  009A               	movwf	26	;volatile
  6895  0119                     l1731:
  6896                           
  6897                           ;adc.c: 23:     ADPCH = 4;
  6898  0119  3004               	movlw	4
  6899  011A  009E               	movwf	30	;volatile
  6900                           
  6901                           ;adc.c: 24:     ADCAP = 0;
  6902  011B  019B               	clrf	27	;volatile
  6903  011C                     l85:
  6904  011C  0008               	return
  6905  011D                     __end_of_adc_init:
  6906                           
  6907                           	psect	text18
  6908  0137                     __ptext18:	
  6909 ;; *************** function ___wmul *****************
  6910 ;; Defined at:
  6911 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  6912 ;; Parameters:    Size  Location     Type
  6913 ;;  multiplier      2    0[COMMON] unsigned int 
  6914 ;;  multiplicand    2    2[COMMON] unsigned int 
  6915 ;; Auto vars:     Size  Location     Type
  6916 ;;  product         2    4[COMMON] unsigned int 
  6917 ;; Return value:  Size  Location     Type
  6918 ;;                  2    0[COMMON] unsigned int 
  6919 ;; Registers used:
  6920 ;;		wreg, status,2, status,0
  6921 ;; Tracked objects:
  6922 ;;		On entry : 0/0
  6923 ;;		On exit  : 0/0
  6924 ;;		Unchanged: 0/0
  6925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6926 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6927 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6929 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6930 ;;Total ram usage:        6 bytes
  6931 ;; Hardware stack levels used: 1
  6932 ;; This function calls:
  6933 ;;		Nothing
  6934 ;; This function is called by:
  6935 ;;		_main
  6936 ;; This function uses a non-reentrant model
  6937 ;;
  6938                           
  6939                           
  6940                           ;psect for function ___wmul
  6941  0137                     ___wmul:
  6942  0137                     l1767:	
  6943                           ;incstack = 0
  6944                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6945                           
  6946  0137  01F4               	clrf	___wmul@product
  6947  0138  01F5               	clrf	___wmul@product+1
  6948  0139                     l1769:
  6949  0139  1C70               	btfss	___wmul@multiplier,0
  6950  013A  293C               	goto	u1551
  6951  013B  293D               	goto	u1550
  6952  013C                     u1551:
  6953  013C  2941               	goto	l377
  6954  013D                     u1550:
  6955  013D                     l1771:
  6956  013D  0872               	movf	___wmul@multiplicand,w
  6957  013E  07F4               	addwf	___wmul@product,f
  6958  013F  0873               	movf	___wmul@multiplicand+1,w
  6959  0140  3DF5               	addwfc	___wmul@product+1,f
  6960  0141                     l377:
  6961  0141  3001               	movlw	1
  6962  0142                     u1565:
  6963  0142  35F2               	lslf	___wmul@multiplicand,f
  6964  0143  0DF3               	rlf	___wmul@multiplicand+1,f
  6965  0144  0B89               	decfsz	9,f
  6966  0145  2942               	goto	u1565
  6967  0146                     l1773:
  6968  0146  3001               	movlw	1
  6969  0147                     u1575:
  6970  0147  36F1               	lsrf	___wmul@multiplier+1,f
  6971  0148  0CF0               	rrf	___wmul@multiplier,f
  6972  0149  0B89               	decfsz	9,f
  6973  014A  2947               	goto	u1575
  6974  014B                     l1775:
  6975  014B  0870               	movf	___wmul@multiplier,w
  6976  014C  0471               	iorwf	___wmul@multiplier+1,w
  6977  014D  1D03               	btfss	3,2
  6978  014E  2950               	goto	u1581
  6979  014F  2951               	goto	u1580
  6980  0150                     u1581:
  6981  0150  2939               	goto	l1769
  6982  0151                     u1580:
  6983  0151                     l1777:
  6984  0151  0875               	movf	___wmul@product+1,w
  6985  0152  00F1               	movwf	?___wmul+1
  6986  0153  0874               	movf	___wmul@product,w
  6987  0154  00F0               	movwf	?___wmul
  6988  0155                     l379:
  6989  0155  0008               	return
  6990  0156                     __end_of___wmul:
  6991                           
  6992                           	psect	text19
  6993  0075                     __ptext19:	
  6994 ;; *************** function _MLX90614_init *****************
  6995 ;; Defined at:
  6996 ;;		line 12 in file "MLX90614.c"
  6997 ;; Parameters:    Size  Location     Type
  6998 ;;		None
  6999 ;; Auto vars:     Size  Location     Type
  7000 ;;  x               1    2[COMMON] _Bool 
  7001 ;; Return value:  Size  Location     Type
  7002 ;;                  1    wreg      _Bool 
  7003 ;; Registers used:
  7004 ;;		wreg, status,2, status,0, pclath, cstack
  7005 ;; Tracked objects:
  7006 ;;		On entry : 0/0
  7007 ;;		On exit  : 0/0
  7008 ;;		Unchanged: 0/0
  7009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7011 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7012 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7013 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7014 ;;Total ram usage:        2 bytes
  7015 ;; Hardware stack levels used: 1
  7016 ;; Hardware stack levels required when called: 1
  7017 ;; This function calls:
  7018 ;;		_I2C_start
  7019 ;;		_I2C_stop
  7020 ;;		_I2C_write
  7021 ;; This function is called by:
  7022 ;;		_main
  7023 ;; This function uses a non-reentrant model
  7024 ;;
  7025                           
  7026                           
  7027                           ;psect for function _MLX90614_init
  7028  0075                     _MLX90614_init:
  7029  0075                     l1747:	
  7030                           ;incstack = 0
  7031                           ; Regs used in _MLX90614_init: [wreg+status,2+status,0+pclath+cstack]
  7032                           
  7033                           
  7034                           ;MLX90614.c: 13:     _Bool x;;MLX90614.c: 14:     I2C_start();
  7035  0075  3180  2050  3180   	fcall	_I2C_start
  7036  0078                     l1749:
  7037                           
  7038                           ;MLX90614.c: 16:     x = I2C_write(0xB4|0x01);
  7039  0078  30B5               	movlw	181
  7040  0079  3180  20A6  3180   	fcall	_I2C_write
  7041  007C  00F1               	movwf	??_MLX90614_init
  7042  007D  0871               	movf	??_MLX90614_init,w
  7043  007E  00F2               	movwf	MLX90614_init@x
  7044  007F                     l1751:
  7045                           
  7046                           ;MLX90614.c: 17:     I2C_stop();
  7047  007F  3180  2057  3180   	fcall	_I2C_stop
  7048  0082                     l1753:
  7049                           
  7050                           ;MLX90614.c: 18:     return x;
  7051  0082  0872               	movf	MLX90614_init@x,w
  7052  0083                     l225:
  7053  0083  0008               	return
  7054  0084                     __end_of_MLX90614_init:
  7055                           
  7056                           	psect	text20
  7057  00A6                     __ptext20:	
  7058 ;; *************** function _I2C_write *****************
  7059 ;; Defined at:
  7060 ;;		line 63 in file "I2C.c"
  7061 ;; Parameters:    Size  Location     Type
  7062 ;;  I2C_data        1    wreg     unsigned char 
  7063 ;; Auto vars:     Size  Location     Type
  7064 ;;  I2C_data        1    0[COMMON] unsigned char 
  7065 ;; Return value:  Size  Location     Type
  7066 ;;                  1    wreg      _Bool 
  7067 ;; Registers used:
  7068 ;;		wreg
  7069 ;; Tracked objects:
  7070 ;;		On entry : 0/0
  7071 ;;		On exit  : 0/0
  7072 ;;		Unchanged: 0/0
  7073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7075 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7077 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7078 ;;Total ram usage:        1 bytes
  7079 ;; Hardware stack levels used: 1
  7080 ;; This function calls:
  7081 ;;		Nothing
  7082 ;; This function is called by:
  7083 ;;		_main
  7084 ;;		_MLX90614_init
  7085 ;; This function uses a non-reentrant model
  7086 ;;
  7087                           
  7088                           
  7089                           ;psect for function _I2C_write
  7090  00A6                     _I2C_write:
  7091                           
  7092                           ;incstack = 0
  7093                           ; Regs used in _I2C_write: [wreg]
  7094                           ;I2C_write@I2C_data stored from wreg
  7095  00A6  00F0               	movwf	I2C_write@I2C_data
  7096  00A7                     l1649:
  7097                           
  7098                           ;I2C.c: 63: _Bool I2C_write(uint8_t I2C_data);I2C.c: 64: {;I2C.c: 65:     PIR3bits.SSP1I
      +                          F = 0;
  7099  00A7  002E               	movlb	14	; select bank14
  7100  00A8  100F               	bcf	15,0	;volatile
  7101  00A9                     l1651:
  7102                           
  7103                           ;I2C.c: 66:     SSP1BUF = I2C_data;
  7104  00A9  0870               	movf	I2C_write@I2C_data,w
  7105  00AA  0023               	movlb	3	; select bank3
  7106  00AB  008C               	movwf	12	;volatile
  7107  00AC                     l211:	
  7108                           ;I2C.c: 67:     while(PIR3bits.SSP1IF == 0);
  7109                           
  7110  00AC  002E               	movlb	14	; select bank14
  7111  00AD  1C0F               	btfss	15,0	;volatile
  7112  00AE  28B0               	goto	u1401
  7113  00AF  28B1               	goto	u1400
  7114  00B0                     u1401:
  7115  00B0  28AC               	goto	l211
  7116  00B1                     u1400:
  7117  00B1                     l213:
  7118                           
  7119                           ;I2C.c: 68:     if(SSP1CON2bits.ACKSTAT==0)
  7120  00B1  0023               	movlb	3	; select bank3
  7121  00B2  1B11               	btfsc	17,6	;volatile
  7122  00B3  28B5               	goto	u1411
  7123  00B4  28B6               	goto	u1410
  7124  00B5                     u1411:
  7125  00B5  28B8               	goto	l1659
  7126  00B6                     u1410:
  7127  00B6                     l1653:
  7128                           
  7129                           ;I2C.c: 69:         return 1;
  7130  00B6  3001               	movlw	1
  7131  00B7  28B9               	goto	l215
  7132  00B8                     l1659:
  7133                           
  7134                           ;I2C.c: 71:         return 0;
  7135  00B8  3000               	movlw	0
  7136  00B9                     l215:
  7137  00B9  0008               	return
  7138  00BA                     __end_of_I2C_write:
  7139                           
  7140                           	psect	text21
  7141  0057                     __ptext21:	
  7142 ;; *************** function _I2C_stop *****************
  7143 ;; Defined at:
  7144 ;;		line 33 in file "I2C.c"
  7145 ;; Parameters:    Size  Location     Type
  7146 ;;		None
  7147 ;; Auto vars:     Size  Location     Type
  7148 ;;		None
  7149 ;; Return value:  Size  Location     Type
  7150 ;;                  1    wreg      void 
  7151 ;; Registers used:
  7152 ;;		None
  7153 ;; Tracked objects:
  7154 ;;		On entry : 0/0
  7155 ;;		On exit  : 0/0
  7156 ;;		Unchanged: 0/0
  7157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7162 ;;Total ram usage:        0 bytes
  7163 ;; Hardware stack levels used: 1
  7164 ;; This function calls:
  7165 ;;		Nothing
  7166 ;; This function is called by:
  7167 ;;		_main
  7168 ;;		_MLX90614_init
  7169 ;; This function uses a non-reentrant model
  7170 ;;
  7171                           
  7172                           
  7173                           ;psect for function _I2C_stop
  7174  0057                     _I2C_stop:
  7175  0057                     l1663:	
  7176                           ;incstack = 0
  7177                           ; Regs used in _I2C_stop: []
  7178                           
  7179                           
  7180                           ;I2C.c: 35:     SSP1CON2bits.PEN = 1;
  7181  0057  0023               	movlb	3	; select bank3
  7182  0058  1511               	bsf	17,2	;volatile
  7183  0059                     l187:	
  7184                           ;I2C.c: 36:     while(SSP1CON2bits.PEN == 1);
  7185                           
  7186  0059  1911               	btfsc	17,2	;volatile
  7187  005A  285C               	goto	u1421
  7188  005B  285D               	goto	u1420
  7189  005C                     u1421:
  7190  005C  2859               	goto	l187
  7191  005D                     u1420:
  7192  005D                     l190:
  7193  005D  0008               	return
  7194  005E                     __end_of_I2C_stop:
  7195                           
  7196                           	psect	text22
  7197  0050                     __ptext22:	
  7198 ;; *************** function _I2C_start *****************
  7199 ;; Defined at:
  7200 ;;		line 21 in file "I2C.c"
  7201 ;; Parameters:    Size  Location     Type
  7202 ;;		None
  7203 ;; Auto vars:     Size  Location     Type
  7204 ;;		None
  7205 ;; Return value:  Size  Location     Type
  7206 ;;                  1    wreg      void 
  7207 ;; Registers used:
  7208 ;;		None
  7209 ;; Tracked objects:
  7210 ;;		On entry : 0/0
  7211 ;;		On exit  : 0/0
  7212 ;;		Unchanged: 0/0
  7213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7218 ;;Total ram usage:        0 bytes
  7219 ;; Hardware stack levels used: 1
  7220 ;; This function calls:
  7221 ;;		Nothing
  7222 ;; This function is called by:
  7223 ;;		_main
  7224 ;;		_MLX90614_init
  7225 ;; This function uses a non-reentrant model
  7226 ;;
  7227                           
  7228                           
  7229                           ;psect for function _I2C_start
  7230  0050                     _I2C_start:
  7231  0050                     l1647:	
  7232                           ;incstack = 0
  7233                           ; Regs used in _I2C_start: []
  7234                           
  7235                           
  7236                           ;I2C.c: 23:     SSP1CON2bits.SEN = 1;
  7237  0050  0023               	movlb	3	; select bank3
  7238  0051  1411               	bsf	17,0	;volatile
  7239  0052                     l175:	
  7240                           ;I2C.c: 24:     while(SSP1CON2bits.SEN == 1);
  7241                           
  7242  0052  1811               	btfsc	17,0	;volatile
  7243  0053  2855               	goto	u1391
  7244  0054  2856               	goto	u1390
  7245  0055                     u1391:
  7246  0055  2852               	goto	l175
  7247  0056                     u1390:
  7248  0056                     l178:
  7249  0056  0008               	return
  7250  0057                     __end_of_I2C_start:
  7251                           
  7252                           	psect	text23
  7253  0049                     __ptext23:	
  7254 ;; *************** function _I2C_restart *****************
  7255 ;; Defined at:
  7256 ;;		line 27 in file "I2C.c"
  7257 ;; Parameters:    Size  Location     Type
  7258 ;;		None
  7259 ;; Auto vars:     Size  Location     Type
  7260 ;;		None
  7261 ;; Return value:  Size  Location     Type
  7262 ;;                  1    wreg      void 
  7263 ;; Registers used:
  7264 ;;		None
  7265 ;; Tracked objects:
  7266 ;;		On entry : 0/0
  7267 ;;		On exit  : 0/0
  7268 ;;		Unchanged: 0/0
  7269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7274 ;;Total ram usage:        0 bytes
  7275 ;; Hardware stack levels used: 1
  7276 ;; This function calls:
  7277 ;;		Nothing
  7278 ;; This function is called by:
  7279 ;;		_main
  7280 ;; This function uses a non-reentrant model
  7281 ;;
  7282                           
  7283                           
  7284                           ;psect for function _I2C_restart
  7285  0049                     _I2C_restart:
  7286  0049                     l1757:	
  7287                           ;incstack = 0
  7288                           ; Regs used in _I2C_restart: []
  7289                           
  7290                           
  7291                           ;I2C.c: 29:     SSP1CON2bits.RSEN = 1;
  7292  0049  0023               	movlb	3	; select bank3
  7293  004A  1491               	bsf	17,1	;volatile
  7294  004B                     l181:	
  7295                           ;I2C.c: 30:     while(SSP1CON2bits.RSEN == 1);
  7296                           
  7297  004B  1891               	btfsc	17,1	;volatile
  7298  004C  284E               	goto	u1521
  7299  004D  284F               	goto	u1520
  7300  004E                     u1521:
  7301  004E  284B               	goto	l181
  7302  004F                     u1520:
  7303  004F                     l184:
  7304  004F  0008               	return
  7305  0050                     __end_of_I2C_restart:
  7306                           
  7307                           	psect	text24
  7308  0069                     __ptext24:	
  7309 ;; *************** function _I2C_read *****************
  7310 ;; Defined at:
  7311 ;;		line 39 in file "I2C.c"
  7312 ;; Parameters:    Size  Location     Type
  7313 ;;		None
  7314 ;; Auto vars:     Size  Location     Type
  7315 ;;		None
  7316 ;; Return value:  Size  Location     Type
  7317 ;;                  1    wreg      unsigned char 
  7318 ;; Registers used:
  7319 ;;		wreg
  7320 ;; Tracked objects:
  7321 ;;		On entry : 0/0
  7322 ;;		On exit  : 0/0
  7323 ;;		Unchanged: 0/0
  7324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7329 ;;Total ram usage:        0 bytes
  7330 ;; Hardware stack levels used: 1
  7331 ;; This function calls:
  7332 ;;		Nothing
  7333 ;; This function is called by:
  7334 ;;		_main
  7335 ;; This function uses a non-reentrant model
  7336 ;;
  7337                           
  7338                           
  7339                           ;psect for function _I2C_read
  7340  0069                     _I2C_read:
  7341  0069                     l1759:	
  7342                           ;incstack = 0
  7343                           ; Regs used in _I2C_read: [wreg]
  7344                           
  7345                           
  7346                           ;I2C.c: 41:     PIR3bits.SSP1IF = 0;
  7347  0069  002E               	movlb	14	; select bank14
  7348  006A  100F               	bcf	15,0	;volatile
  7349                           
  7350                           ;I2C.c: 42:     SSP1CON2bits.RCEN = 1;
  7351  006B  0023               	movlb	3	; select bank3
  7352  006C  1591               	bsf	17,3	;volatile
  7353  006D                     l193:	
  7354                           ;I2C.c: 43:     while(PIR3bits.SSP1IF == 0);
  7355                           
  7356  006D  002E               	movlb	14	; select bank14
  7357  006E  1C0F               	btfss	15,0	;volatile
  7358  006F  2871               	goto	u1531
  7359  0070  2872               	goto	u1530
  7360  0071                     u1531:
  7361  0071  286D               	goto	l193
  7362  0072                     u1530:
  7363  0072                     l1761:
  7364                           
  7365                           ;I2C.c: 44:     return SSP1BUF;
  7366  0072  0023               	movlb	3	; select bank3
  7367  0073  080C               	movf	12,w	;volatile
  7368  0074                     l196:
  7369  0074  0008               	return
  7370  0075                     __end_of_I2C_read:
  7371                           
  7372                           	psect	text25
  7373  005E                     __ptext25:	
  7374 ;; *************** function _I2C_nack *****************
  7375 ;; Defined at:
  7376 ;;		line 55 in file "I2C.c"
  7377 ;; Parameters:    Size  Location     Type
  7378 ;;		None
  7379 ;; Auto vars:     Size  Location     Type
  7380 ;;		None
  7381 ;; Return value:  Size  Location     Type
  7382 ;;                  1    wreg      void 
  7383 ;; Registers used:
  7384 ;;		None
  7385 ;; Tracked objects:
  7386 ;;		On entry : 0/0
  7387 ;;		On exit  : 0/0
  7388 ;;		Unchanged: 0/0
  7389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7394 ;;Total ram usage:        0 bytes
  7395 ;; Hardware stack levels used: 1
  7396 ;; This function calls:
  7397 ;;		Nothing
  7398 ;; This function is called by:
  7399 ;;		_main
  7400 ;; This function uses a non-reentrant model
  7401 ;;
  7402                           
  7403                           
  7404                           ;psect for function _I2C_nack
  7405  005E                     _I2C_nack:
  7406  005E                     l1765:	
  7407                           ;incstack = 0
  7408                           ; Regs used in _I2C_nack: []
  7409                           
  7410                           
  7411                           ;I2C.c: 57:     PIR3bits.SSP1IF = 0;
  7412  005E  002E               	movlb	14	; select bank14
  7413  005F  100F               	bcf	15,0	;volatile
  7414                           
  7415                           ;I2C.c: 58:     SSP1CON2bits.ACKDT = 1;
  7416  0060  0023               	movlb	3	; select bank3
  7417  0061  1691               	bsf	17,5	;volatile
  7418                           
  7419                           ;I2C.c: 59:     SSP1CON2bits.ACKEN = 1;
  7420  0062  1611               	bsf	17,4	;volatile
  7421  0063                     l205:	
  7422                           ;I2C.c: 60:     while(PIR3bits.SSP1IF == 0);
  7423                           
  7424  0063  002E               	movlb	14	; select bank14
  7425  0064  1C0F               	btfss	15,0	;volatile
  7426  0065  2867               	goto	u1541
  7427  0066  2868               	goto	u1540
  7428  0067                     u1541:
  7429  0067  2863               	goto	l205
  7430  0068                     u1540:
  7431  0068                     l208:
  7432  0068  0008               	return
  7433  0069                     __end_of_I2C_nack:
  7434                           
  7435                           	psect	text26
  7436  00E9                     __ptext26:	
  7437 ;; *************** function _I2C_init *****************
  7438 ;; Defined at:
  7439 ;;		line 4 in file "I2C.c"
  7440 ;; Parameters:    Size  Location     Type
  7441 ;;		None
  7442 ;; Auto vars:     Size  Location     Type
  7443 ;;		None
  7444 ;; Return value:  Size  Location     Type
  7445 ;;                  1    wreg      void 
  7446 ;; Registers used:
  7447 ;;		wreg, status,2
  7448 ;; Tracked objects:
  7449 ;;		On entry : 0/0
  7450 ;;		On exit  : 0/0
  7451 ;;		Unchanged: 0/0
  7452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7457 ;;Total ram usage:        0 bytes
  7458 ;; Hardware stack levels used: 1
  7459 ;; This function calls:
  7460 ;;		Nothing
  7461 ;; This function is called by:
  7462 ;;		_main
  7463 ;; This function uses a non-reentrant model
  7464 ;;
  7465                           
  7466                           
  7467                           ;psect for function _I2C_init
  7468  00E9                     _I2C_init:
  7469  00E9                     l1733:	
  7470                           ;incstack = 0
  7471                           ; Regs used in _I2C_init: [wreg+status,2]
  7472                           
  7473                           
  7474                           ;I2C.c: 6:     TRISCbits.TRISC3 = 1;
  7475  00E9  0020               	movlb	0	; select bank0
  7476  00EA  1593               	bsf	19,3	;volatile
  7477                           
  7478                           ;I2C.c: 7:     TRISCbits.TRISC4 = 1;
  7479  00EB  1613               	bsf	19,4	;volatile
  7480                           
  7481                           ;I2C.c: 8:     ANSELCbits.ANSC3 = 0;
  7482  00EC  003E               	movlb	30	; select bank30
  7483  00ED  11CE               	bcf	78,3	;volatile
  7484                           
  7485                           ;I2C.c: 9:     ANSELCbits.ANSC4 = 0;
  7486  00EE  124E               	bcf	78,4	;volatile
  7487  00EF                     l1735:
  7488                           
  7489                           ;I2C.c: 10:     SSP1CLKPPS = 0x14;
  7490  00EF  3014               	movlw	20
  7491  00F0  003D               	movlb	29	; select bank29
  7492  00F1  00C5               	movwf	69	;volatile
  7493                           
  7494                           ;I2C.c: 11:     RC3PPS = 0x15;
  7495  00F2  3015               	movlw	21
  7496  00F3  003E               	movlb	30	; select bank30
  7497  00F4  00A3               	movwf	35	;volatile
  7498                           
  7499                           ;I2C.c: 12:     RC4PPS = 0x14;
  7500  00F5  3014               	movlw	20
  7501  00F6  00A4               	movwf	36	;volatile
  7502                           
  7503                           ;I2C.c: 13:     SSP1DATPPS = 0x13;
  7504  00F7  3013               	movlw	19
  7505  00F8  003D               	movlb	29	; select bank29
  7506  00F9  00C6               	movwf	70	;volatile
  7507                           
  7508                           ;I2C.c: 15:     SSP1STAT = 0b10000000;
  7509  00FA  3080               	movlw	128
  7510  00FB  0023               	movlb	3	; select bank3
  7511  00FC  008F               	movwf	15	;volatile
  7512                           
  7513                           ;I2C.c: 16:  SSP1CON1 = 0b00101000;
  7514  00FD  3028               	movlw	40
  7515  00FE  0090               	movwf	16	;volatile
  7516  00FF                     l1737:
  7517                           
  7518                           ;I2C.c: 17:  SSP1CON3 = 0x00;
  7519  00FF  0192               	clrf	18	;volatile
  7520  0100                     l1739:
  7521                           
  7522                           ;I2C.c: 18:  SSP1ADD = ((32000000UL/(4UL*100000UL))-1);
  7523  0100  304F               	movlw	79
  7524  0101  008D               	movwf	13	;volatile
  7525  0102                     l172:
  7526  0102  0008               	return
  7527  0103                     __end_of_I2C_init:
  7528  007E                     btemp	set	126	;btemp
  7529  007E                     wtemp0	set	126
  7530                           
  7531                           	psect	idloc
  7532                           
  7533                           ;Config register IDLOC0 @ 0x8000
  7534                           ;	unspecified, using default values
  7535  8000                     	org	32768
  7536  8000  3FFF               	dw	16383
  7537                           
  7538                           ;Config register IDLOC1 @ 0x8001
  7539                           ;	unspecified, using default values
  7540  8001                     	org	32769
  7541  8001  3FFF               	dw	16383
  7542                           
  7543                           ;Config register IDLOC2 @ 0x8002
  7544                           ;	unspecified, using default values
  7545  8002                     	org	32770
  7546  8002  3FFF               	dw	16383
  7547                           
  7548                           ;Config register IDLOC3 @ 0x8003
  7549                           ;	unspecified, using default values
  7550  8003                     	org	32771
  7551  8003  3FFF               	dw	16383
  7552                           
  7553                           	psect	config
  7554                           
  7555                           ;Config register CONFIG1 @ 0x8007
  7556                           ;	External Oscillator mode selection bits
  7557                           ;	FEXTOSC = OFF, Oscillator not enabled
  7558                           ;	Power-up default value for COSC bits
  7559                           ;	RSTOSC = HFINT32, HFINTOSC with OSCFRQ= 32 MHz and CDIV = 1:1
  7560                           ;	Clock Out Enable bit
  7561                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
  7562                           ;	Clock Switch Enable bit
  7563                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  7564                           ;	Fail-Safe Clock Monitor Enable bit
  7565                           ;	FCMEN = ON, FSCM timer enabled
  7566  8007                     	org	32775
  7567  8007  3F8C               	dw	16268
  7568                           
  7569                           ;Config register CONFIG2 @ 0x8008
  7570                           ;	Master Clear Enable bit
  7571                           ;	MCLRE = ON, MCLR pin is Master Clear function
  7572                           ;	Power-up Timer Enable bit
  7573                           ;	PWRTE = OFF, PWRT disabled
  7574                           ;	Low-Power BOR enable bit
  7575                           ;	LPBOREN = OFF, ULPBOR disabled
  7576                           ;	Brown-out reset enable bits
  7577                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  7578                           ;	Brown-out Reset Voltage Selection
  7579                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
  7580                           ;	Zero-cross detect disable
  7581                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
  7582                           ;	Peripheral Pin Select one-way control
  7583                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
  7584                           ;	Stack Overflow/Underflow Reset Enable bit
  7585                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  7586                           ;	Background Debugger
  7587                           ;	DEBUG = 0x1, unprogrammed default
  7588  8008                     	org	32776
  7589  8008  3FFF               	dw	16383
  7590                           
  7591                           ;Config register CONFIG3 @ 0x8009
  7592                           ;	WDT Period Select bits
  7593                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  7594                           ;	WDT operating mode
  7595                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
  7596                           ;	WDT Window Select bits
  7597                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  7598                           ;	WDT input clock selector
  7599                           ;	WDTCCS = SC, Software Control
  7600  8009                     	org	32777
  7601  8009  3F9F               	dw	16287
  7602                           
  7603                           ;Config register CONFIG4 @ 0x800A
  7604                           ;	UserNVM self-write protection bits
  7605                           ;	WRT = OFF, Write protection off
  7606                           ;	Scanner Enable bit
  7607                           ;	SCANE = available, Scanner module is available for use
  7608                           ;	Low Voltage Programming Enable bit
  7609                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
  7610  800A                     	org	32778
  7611  800A  3FFF               	dw	16383
  7612                           
  7613                           ;Config register CONFIG5 @ 0x800B
  7614                           ;	UserNVM Program memory code protection bit
  7615                           ;	CP = OFF, Program Memory code protection disabled
  7616                           ;	DataNVM code protection bit
  7617                           ;	CPD = OFF, Data EEPROM code protection disabled
  7618  800B                     	org	32779
  7619  800B  3FFF               	dw	16383

Data Sizes:
    Strings     102
    Constant    0
    Data        0
    BSS         42
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      80
    BANK1            80      0      41
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S776_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_5(CODE[29]), STR_4(CODE[25]), STR_3(CODE[28]), STR_2(CODE[25]), 
		 -> STR_1(CODE[20]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 29
		 -> STR_5(CODE[29]), STR_4(CODE[25]), STR_3(CODE[28]), STR_2(CODE[25]), 
		 -> STR_1(CODE[20]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_5(CODE[29]), STR_4(CODE[25]), STR_3(CODE[28]), STR_2(CODE[25]), 
		 -> STR_1(CODE[20]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMMON

    _main->_printf
    _serial_init->___lldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_uart_tx
    _abs->___aomod
    _MLX90614_init->_I2C_write

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    7010
                                             77 BANK0      2     2      0
                           _I2C_init
                           _I2C_nack
                           _I2C_read
                        _I2C_restart
                          _I2C_start
                           _I2C_stop
                          _I2C_write
                      _MLX90614_init
                             ___wmul
                           _adc_init
                          _port_init
                             _printf
                        _serial_init
 ---------------------------------------------------------------------------------
 (1) _serial_init                                         10     6      4     457
                                              0 BANK0     10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6    6240
                                             13 COMMON     1     1      0
                                             70 BANK0      7     1      6
                             ___wmul (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    5806
                                             62 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    5478
                                             46 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4133
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2510
                                             12 COMMON     1     1      0
                                              7 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1127
                                             11 COMMON     1     0      1
                                              0 BANK0      7     7      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     812
                                              3 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      44
                                              2 COMMON     1     1      0
                            _uart_tx
 ---------------------------------------------------------------------------------
 (6) _uart_tx                                              2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (1) _port_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _MLX90614_init                                        2     2      0      45
                                              1 COMMON     2     2      0
                          _I2C_start
                           _I2C_stop
                          _I2C_write
 ---------------------------------------------------------------------------------
 (2) _I2C_write                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_restart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_init
   _I2C_nack
   _I2C_read
   _I2C_restart
   _I2C_start
   _I2C_stop
   _I2C_write
   _MLX90614_init
     _I2C_start
     _I2C_stop
     _I2C_write
   ___wmul
   _adc_init
   _port_init
   _printf
     ___wmul (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _uart_tx
             _fputs
               _fputc
             _strlen
         _fputc
   _serial_init
     ___lldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      29       7       51.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      87      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      87      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jul 04 19:34:54 2022

                     l62 00CF                       l85 011C      ___wmul@multiplicand 0072  
     __size_of_I2C_start 0007       __size_of_I2C_write 0014                      l211 00AC  
                    l131 0093                      l205 0063                      l213 00B1  
                    l118 023A                      l215 00B9                      l143 0042  
                    l208 0068                      l225 0083                      l172 0102  
                    l181 004B                      l413 02ED                      l190 005D  
                    l175 0052                      l184 004F                      l193 006D  
                    l178 0056                      l187 0059                      l196 0074  
                    l377 0141                      l490 0572                      l379 0155  
                    l491 0583                      l477 0673                      l478 0684  
                    l912 01AE                      l840 00A5                      l905 0499  
                    l931 01ED                      l916 0136                      l870 0279  
                    l919 0136                      l871 0287                      l872 0293  
                    l880 06F4                      l945 00E8                      l881 070C  
                    l939 017D                      l867 0257                      l875 06CE  
                    l884 077C                      l876 06D7                      l898 07F2  
                    u900 01E5                      u901 01E4                      u910 017D  
                    u911 017C                      u920 00E2                      u905 01E1  
                    u921 00E1                      u930 058F                      u931 058E  
                    u860 0090                      u861 008F                      u950 05BA  
                    u870 01B4                      u951 05B9                      u855 0089  
                    u871 01B3                      u880 01B9                      u881 01B8  
                    u970 05E4                      u890 01C8                      u891 01C7  
                    u980 05F4                      u981 05F3                      u990 0607  
                    u991 0606                      _abs 011D                      _pad 023B  
                    wreg 0009                     ?_abs 0073                     l1501 04EF  
                   l1413 0085                     l1421 01AF       serial_init@baudios 0020  
                   l1511 050F                     l1503 04FC                     l1415 0085  
                   l1431 01E5                     l1423 01B4                     l1513 0531  
                   l1505 04FF                     l1417 0090                     l1425 01B9  
                   l1441 016E                     l1521 023D                     l1515 0541  
                   l1507 0507                     l1419 003E                     l1427 01BE  
                   l1435 0158                     l1443 00D1                     l1531 025A  
                   l1523 0242                     l1611 03E3                     l1603 03C1  
                   l1701 00BA                     l1461 05BA                     l1453 0584  
                   l1509 050B                     l1517 054F                     l1541 011D  
                   l1429 01C8                     l1437 015B                     l1445 00D6  
                   l1533 0266                     l1525 024B                     l1613 03F5  
                   l1605 03D2                     l1703 00BF                     l1471 05F7  
                   l1463 05D9                     l1455 0585                     l1519 0554  
                   l1543 012A                     l1439 0169                     l1447 00DA  
                   l1535 026B                     l1527 0250                     l1551 06B0  
                   l1623 0441                     l1615 0406                     l1607 03DA  
                   l1711 01F5                     l1705 00C5                     l1481 0631  
                   l1473 05FF                     l1465 05DD                     l1457 058F  
                   l1449 00E2                     l1537 027E                     l1529 0255  
                   l1561 0702                     l1553 06D3                     l1545 0687  
                   l1641 048F                     l1625 0452                     l1633 046B  
                   l1617 040E                     l1609 03DF                     l1721 022D  
                   l1713 021F                     l1801 0328                     l1651 00A9  
                   l1731 0119                     l1707 00C7                     l1483 0641  
                   l1475 0603                     l1467 05E7                     l1459 05B0  
                   l1491 049A                     l1571 0747                     l1563 0707  
                   l1555 06E6                     l1547 0697                     l1635 0473  
                   l1627 045A                     l1619 0427                     l1723 0231  
                   l1715 0222                     l1811 034C                     l1803 0330  
                   l1733 00E9                     l1653 00B6                     l1485 0642  
                   l1477 0607                     l1469 05F4                     l1493 049B  
                   l1581 07A4                     l1573 074B                     l1565 0711  
                   l1557 06EC                     l1549 06AA                     l1629 0465  
                   l1741 0094                     l1725 0234                     l1717 0226  
                   l1709 01EE                     l1821 0365                     l1813 0353  
                   l1805 033D                     l1735 00EF                     l1647 0050  
                   l1663 0057                     l1751 007F                     l1479 060F  
                   l1487 0650                     l1495 04A5                     l1591 07C8  
                   l1583 07B2                     l1575 074F                     l1567 0714  
                   l1559 06FC                     l1639 0476                     l1743 0099  
                   l1671 02B2                     l1727 0237                     l1719 022A  
                   l1831 0377                     l1823 0368                     l1815 0357  
                   l1807 0345                     l1737 00FF                     l1761 0072  
                   l1649 00A7                     l1753 0082                     l1729 0103  
                   l1489 0655                     l1497 04C6                     l1593 07CE  
                   l1577 078A                     l1585 07B7                     l1569 0719  
                   l1681 02D8                     l1673 02B6                     l1665 0294  
                   l1833 0384                     l1825 036C                     l1817 035F  
                   l1809 0348                     l1739 0100                     l1659 00B8  
                   l1747 0075                     l1771 013D                     l1499 04D0  
                   l1595 07D3                     l1587 07BE                     l1579 0797  
                   l1691 0184                     l1683 02DF                     l1675 02BD  
                   l1667 02A4                     l1835 038F                     l1827 0370  
                   l1819 0362                     l1765 005E                     l1757 0049  
                   l1749 0078                     l1773 0146                     l1597 07D7  
                   l1589 07C3                     l1693 0188                     l1677 02CF  
                   l1669 02A7                     l1685 02E5                     l1837 03B0  
                   l1829 0373                     l1781 02EE                     l1759 0069  
                   l1775 014B                     l1767 0137                     l1599 07DF  
                   l1695 019C                     l1679 02D7                     l1791 0303  
                   l1783 02EE                     l1777 0151                     l1769 0139  
                   l1697 01A6                     l1689 0180                     l1793 030B  
                   l1785 02F1                     l1795 030E                     l1787 02FD  
                   l1797 0316                     l1789 0300                     ?_pad 0027  
                   l1799 031F                     STR_1 0852                     STR_2 0839  
                   STR_3 081D                     STR_4 0839                     STR_5 0800  
                   u1000 0631                     u1001 0630                     u1010 0650  
                   u1011 064F                     u1020 0655                     u1100 0531  
                   u1021 0654                     u1005 062D                     u1101 0530  
                   u1110 054F                     u1111 054E                     u1120 0554  
                   u1040 04A5                     u1200 06A3                     u1121 0553  
                   u1105 052D                     u1041 04A4                     u1210 06B0  
                   u1211 06AF                     u1060 04D0                     u1140 0242  
                   u1300 07B2                     u1061 04CF                     u1141 0241  
                   u1301 07B1                     u1150 0250                     u1310 07B7  
                   u1230 06D3                     u1151 024F                     u1311 07B6  
                   u1231 06D2                     u1400 00B1                     u1080 04FC  
                   u1160 0279                     u1320 07BE                     u1240 06E6  
                   u1401 00B0                     u1081 04FB                     u1161 0278  
                   u1321 07BD                     u1305 07AE                     u1241 06E5  
                   u1410 00B6                     u1090 050F                     u1170 027E  
                   u1330 07C3                     u1250 0702                     u1411 00B5  
                   u1091 050E                     u1171 027D                     u1331 07C2  
                   u1251 0701                     u1420 005D                     u1180 012A  
                   u1340 07CE                     u1260 0707                     u1500 01A6  
                   u1421 005C                     u1181 0129                     u1165 0275  
                   u1341 07CD                     u1261 0706                     u1245 06E2  
                   u1501 01A5                     _LATA 0016                     u1270 078A  
                   u1190 06A2                     u1350 03D2                     u1430 02A4  
                   u1510 0217                     _LATB 0017                     u1271 0789  
                   u1191 06A0                     u1351 03D1                     u1431 02A3  
                   u1520 004F                     u1280 0797                     u1360 03F5  
                   u1600 0345                     u1521 004E                     u1185 0126  
                   u1281 0796                     u1361 03F4                     u1601 0344  
                   u1530 0072                     u1290 07A4                     u1370 0406  
                   u1450 02B6                     u1531 0071                     u1291 07A3  
                   u1275 0786                     u1371 0405                     u1451 02B5  
                   u1515 0213                     u1540 0068                     u1380 0452  
                   u1541 0067                     u1381 0451                     u1445 02A8  
                   u1390 0056                     u1550 013D                     u1470 02CF  
                   u1391 0055                     u1551 013C                     u1295 07A0  
                   u1471 02CE                     u1615 0388                     u1465 02B7  
                   u1490 02E5                     u1491 02E4                     u1475 02CB  
                   u1580 0151                     u1581 0150                     u1565 0142  
                   u1485 02D9                     u1637 0336                     u1590 0316  
                   u1575 0147                     u1647 03B6                     u1591 0315  
                   _PIR3 070F                     abs@a 0073                     _dbuf 00A9  
                   _main 02EE                     _dtoa 0685                     _prec 00A4  
                   _nout 00A0                     pad@i 002A                     pad@p 0028  
                   fsr0h 0005                     fsr1h 0007                     indf0 0000  
                   fsr0l 0004                     indf1 0001                     fsr1l 0006  
                   pad@w 002C                     btemp 007E         __end_of_I2C_nack 0069  
       __end_of_I2C_init 0103         __end_of_I2C_read 0075                     start 0002  
       __end_of_I2C_stop 005E     __size_of_I2C_restart 0007            _MLX90614_init 0075  
                  ??_abs 0075                    ??_pad 007C          __end_of___aodiv 0685  
                  _ADCAP 009B                    ?_main 0070                    ?_dtoa 0030  
                  _ADCLK 0098          __end_of___aomod 0584                    _ADPCH 009E  
                  _ADREF 009A          __end_of___lldiv 02EE             vfpfcnvrt@fmt 004E  
                  _PORTA 000C                    _PORTB 000D                    _TRISA 0011  
                  _TRISB 0012                    _TRISC 0013                    _RXPPS 0ECB  
                  u94lld 05AE                    u96lld 05D9                    _flags 00A6  
                  _fputc 01AF                    _fputs 0156                    pad@fp 002E  
                  _width 00A2                    _putch 003D                    dtoa@d 0030  
                  dtoa@i 004C                    dtoa@n 0044                    dtoa@p 003D  
                  dtoa@s 0042                    dtoa@w 0040          __end_of_uart_tx 0094  
                  status 0003        __end_of_I2C_start 0057                    wtemp0 007E  
      __end_of_I2C_write 00BA          __initialization 07F3        I2C_write@I2C_data 0070  
         ?_MLX90614_init 0070             __end_of_main 03BF             __end_of_dtoa 07F3  
                 ??_main 006D                   ??_dtoa 0038                   _ADCON0 0093  
                 _ADCON1 0094                   _ADCON2 0095                   ?_fputc 0073  
                 ?_fputs 007B                   _ADRESH 008D                   _ADRESL 008C  
                 _ANSELA 0F38                   ?_putch 0070                   _ANSELB 0F43  
                 _ANSELC 0F4E                   _RC1REG 0119                   _RC0PPS 0F20  
       __end_of_adc_init 011D                   _RC1STA 011D                   _RC3PPS 0F23  
                 _RC4PPS 0F24                   u103lld 0673                   u113lld 0572  
                 u105lld 04C4                   u122lld 06CE                   u107lld 04EF  
                 _TX1REG 011A                   _TX1STA 011E             ?_serial_init 0020  
           vfprintf@cfmt 0064                ??___aodiv 0070                ??___aomod 0070  
                 ___wmul 0137                ??___lldiv 0078                   _printf 0094  
                 pad@buf 0027                   dtoa@fp 003F                   _strlen 00D0  
                 fputc@c 0073                   fputs@c 0023                   fputs@i 0024  
                 fputs@s 0026                ?_I2C_nack 0070                ?_I2C_init 0070  
              ?_I2C_read 0070                ?_I2C_stop 0070                ??_uart_tx 0070  
       __end_of_vfprintf 01AF  __end_of__initialization 07FD          ??_MLX90614_init 0071  
         __pcstackCOMMON 0070            __end_of_fputc 01EE            __end_of_fputs 017E  
          __end_of_putch 0043               ??_I2C_nack 0070               ??_I2C_init 0070  
             ??_I2C_read 0070               ??_I2C_stop 0070                  ??_fputc 0076  
                ??_fputs 0020                  ??_putch 0072               __pbssBANK0 006F  
             __pbssBANK1 00A0               __pmaintext 02EE                  ?___wmul 0070  
                ?_printf 0066                ?_adc_init 0070                  ?_strlen 0070  
                _SP1BRGH 011C                  _SP1BRGL 011B       __size_of_vfpfcnvrt 00DB  
     __size_of_port_init 0016                  _SSP1ADD 018D                  _SSP1BUF 018C  
          ??_I2C_restart 0070                _I2C_start 0050                _I2C_write 00A6  
                ___aodiv 0584                  ___aomod 049A                  ___lldiv 0294  
        __size_of___wmul 001F                ?_vfprintf 005E     __size_of_serial_init 004D  
             ??_adc_init 0070                  __ptext1 01EE                  __ptext2 0294  
                __ptext3 0094                  __ptext4 017E                  __ptext5 03BF  
                __ptext6 0685                  __ptext7 023B                  __ptext8 00D0  
                __ptext9 0156          __size_of_printf 0012          __size_of_strlen 0019  
           __size_of_abs 001A             __size_of_pad 0059                  _uart_tx 0084  
                clrloop0 0044     end_of_initialization 07FD                  fputc@fp 0075  
                fputs@fp 007B          ___lldiv@divisor 0070          ___lldiv@counter 007D  
             ?_I2C_start 0070               ?_I2C_write 0070        __end_of_vfpfcnvrt 049A  
      __end_of_port_init 00D0      __end_of_I2C_restart 0050               ??_vfprintf 0061  
                strlen@a 0073                  strlen@s 0074              uart_tx@dato 0071  
              _TRISCbits 0013        __size_of_I2C_nack 000B        __size_of_I2C_init 001A  
      __size_of_I2C_read 000C        __size_of_I2C_stop 0007              vfpfcnvrt@ap 004F  
            vfpfcnvrt@fp 005D              vfpfcnvrt@ll 0055           __end_of___wmul 0156  
         __end_of_printf 00A6           __end_of_strlen 00E9      start_initialization 07F3  
            __end_of_abs 0137              __end_of_pad 0294              _I2C_restart 0049  
            ??_I2C_start 0070              ??_I2C_write 0070              vfprintf@fmt 005E  
  __end_of_MLX90614_init 0084                 ??___wmul 0074                 ??_printf 007D  
               ??_strlen 0072        __size_of_adc_init 001A                ___latbits 0002  
          __pcstackBANK0 0020         ___aodiv@dividend 0028                 ?___aodiv 0020  
               ?___aomod 0020         ___aodiv@quotient 0073                 ?___lldiv 0070  
              _high_byte 00A8        __size_of_vfprintf 0031                 _BAUD1CON 011F  
               _I2C_nack 005E                 _I2C_init 00E9                 _I2C_read 0069  
               _I2C_stop 0057                 ?_uart_tx 0070           __size_of_fputc 003F  
         __size_of_fputs 0028           __size_of_putch 0006           ___wmul@product 0074  
              clear_ram0 0043            ??_serial_init 0024                 _PIR3bits 070F  
               _SSP1CON1 0190                 _SSP1CON3 0192                 _SSP1STAT 018F  
              _vfpfcnvrt 03BF                _port_init 00BA            serial_init@sx 0028  
      ___wmul@multiplier 0070               vfprintf@ap 0060               vfprintf@fp 0063  
       __size_of___aodiv 0101         __size_of___aomod 00EA         __size_of___lldiv 005A  
             ?_vfpfcnvrt 004E               ?_port_init 0070      __end_of_serial_init 023B  
        ___aodiv@divisor 0020                 _adc_init 0103          ___aodiv@counter 0071  
             _ANSELCbits 0F4E                 _dtoa$840 003B           MLX90614_init@x 0072  
               __ptext10 01AF                 __ptext11 003D                 __ptext20 00A6  
               __ptext12 0084                 __ptext21 0057                 __ptext13 011D  
               __ptext22 0050                 __ptext14 049A                 __ptext23 0049  
               __ptext15 0584                 __ptext24 0069                 __ptext16 00BA  
               __ptext25 005E                 __ptext17 0103                 __ptext26 00E9  
               __ptext18 0137                 __ptext19 0075             _SSP1CON2bits 0191  
       __size_of_uart_tx 0010            __size_of_main 00D1            __size_of_dtoa 016E  
           ?_I2C_restart 0070                 _low_byte 006F                 _vfprintf 017E  
              printf@fmt 0066         ___aomod@dividend 0028                putch@dato 0072  
       ___lldiv@dividend 0074              _serial_init 01EE                 printf@ap 006C  
        ___aomod@divisor 0020              ??_vfpfcnvrt 0050          ___aomod@counter 0071  
            ??_port_init 0070            __pstringtext1 0800            __pstringtext2 081D  
          __pstringtext3 0839            __pstringtext4 0852            __pstringtext5 0000  
             _SSP1DATPPS 0EC6               _SSP1CLKPPS 0EC5         ___lldiv@quotient 0079  
 __size_of_MLX90614_init 000F             ___aodiv@sign 0072             ___aomod@sign 0072  
