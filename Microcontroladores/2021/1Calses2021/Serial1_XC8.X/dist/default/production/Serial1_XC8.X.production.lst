

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Aug 16 14:05:14 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F18855
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    50                           	dabs	1,0x7E,2
    51  0000                     
    52                           ; Version 2.35
    53                           ; Generated 01/06/2021 GMT
    54                           ; 
    55                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution. Publication is not required when
    69                           ;        this file is used in an embedded application.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC16F18855 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     	;# 
    88  0001                     	;# 
    89  0002                     	;# 
    90  0003                     	;# 
    91  0004                     	;# 
    92  0005                     	;# 
    93  0006                     	;# 
    94  0007                     	;# 
    95  0008                     	;# 
    96  0009                     	;# 
    97  000A                     	;# 
    98  000B                     	;# 
    99  000C                     	;# 
   100  000D                     	;# 
   101  000E                     	;# 
   102  0010                     	;# 
   103  0011                     	;# 
   104  0012                     	;# 
   105  0013                     	;# 
   106  0016                     	;# 
   107  0017                     	;# 
   108  0018                     	;# 
   109  001C                     	;# 
   110  001C                     	;# 
   111  001D                     	;# 
   112  001D                     	;# 
   113  001E                     	;# 
   114  001F                     	;# 
   115  008C                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  008E                     	;# 
   119  008E                     	;# 
   120  008F                     	;# 
   121  0090                     	;# 
   122  0090                     	;# 
   123  0091                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0095                     	;# 
   127  0096                     	;# 
   128  0097                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009A                     	;# 
   132  009B                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009E                     	;# 
   136  010C                     	;# 
   137  010D                     	;# 
   138  010E                     	;# 
   139  010E                     	;# 
   140  010F                     	;# 
   141  0110                     	;# 
   142  0110                     	;# 
   143  0111                     	;# 
   144  0112                     	;# 
   145  0112                     	;# 
   146  0113                     	;# 
   147  0114                     	;# 
   148  0114                     	;# 
   149  0115                     	;# 
   150  0116                     	;# 
   151  0116                     	;# 
   152  0117                     	;# 
   153  0119                     	;# 
   154  0119                     	;# 
   155  0119                     	;# 
   156  011A                     	;# 
   157  011A                     	;# 
   158  011A                     	;# 
   159  011B                     	;# 
   160  011B                     	;# 
   161  011B                     	;# 
   162  011B                     	;# 
   163  011B                     	;# 
   164  011C                     	;# 
   165  011C                     	;# 
   166  011C                     	;# 
   167  011D                     	;# 
   168  011D                     	;# 
   169  011D                     	;# 
   170  011E                     	;# 
   171  011E                     	;# 
   172  011E                     	;# 
   173  011F                     	;# 
   174  011F                     	;# 
   175  011F                     	;# 
   176  011F                     	;# 
   177  011F                     	;# 
   178  018C                     	;# 
   179  018D                     	;# 
   180  018E                     	;# 
   181  018F                     	;# 
   182  0190                     	;# 
   183  0191                     	;# 
   184  0192                     	;# 
   185  0196                     	;# 
   186  0197                     	;# 
   187  0198                     	;# 
   188  0199                     	;# 
   189  019A                     	;# 
   190  019B                     	;# 
   191  019C                     	;# 
   192  020C                     	;# 
   193  020C                     	;# 
   194  020D                     	;# 
   195  020E                     	;# 
   196  020F                     	;# 
   197  020F                     	;# 
   198  0210                     	;# 
   199  0210                     	;# 
   200  0211                     	;# 
   201  0211                     	;# 
   202  0212                     	;# 
   203  0212                     	;# 
   204  0213                     	;# 
   205  0214                     	;# 
   206  0215                     	;# 
   207  0215                     	;# 
   208  0216                     	;# 
   209  0216                     	;# 
   210  0217                     	;# 
   211  0217                     	;# 
   212  0218                     	;# 
   213  0218                     	;# 
   214  0219                     	;# 
   215  021A                     	;# 
   216  021B                     	;# 
   217  021B                     	;# 
   218  021C                     	;# 
   219  021C                     	;# 
   220  021D                     	;# 
   221  021D                     	;# 
   222  021E                     	;# 
   223  021F                     	;# 
   224  028C                     	;# 
   225  028C                     	;# 
   226  028D                     	;# 
   227  028D                     	;# 
   228  028E                     	;# 
   229  028F                     	;# 
   230  0290                     	;# 
   231  0290                     	;# 
   232  0291                     	;# 
   233  0292                     	;# 
   234  0292                     	;# 
   235  0293                     	;# 
   236  0293                     	;# 
   237  0294                     	;# 
   238  0295                     	;# 
   239  0296                     	;# 
   240  0296                     	;# 
   241  0297                     	;# 
   242  0298                     	;# 
   243  0298                     	;# 
   244  0299                     	;# 
   245  0299                     	;# 
   246  029A                     	;# 
   247  029B                     	;# 
   248  029C                     	;# 
   249  029C                     	;# 
   250  029D                     	;# 
   251  030C                     	;# 
   252  030C                     	;# 
   253  030D                     	;# 
   254  030E                     	;# 
   255  030F                     	;# 
   256  0310                     	;# 
   257  0310                     	;# 
   258  0311                     	;# 
   259  0312                     	;# 
   260  0313                     	;# 
   261  0314                     	;# 
   262  0314                     	;# 
   263  0315                     	;# 
   264  0316                     	;# 
   265  0317                     	;# 
   266  0318                     	;# 
   267  0318                     	;# 
   268  0319                     	;# 
   269  031A                     	;# 
   270  031B                     	;# 
   271  031C                     	;# 
   272  031C                     	;# 
   273  031D                     	;# 
   274  031E                     	;# 
   275  031F                     	;# 
   276  038C                     	;# 
   277  038C                     	;# 
   278  038D                     	;# 
   279  038E                     	;# 
   280  0390                     	;# 
   281  0390                     	;# 
   282  0391                     	;# 
   283  0392                     	;# 
   284  040C                     	;# 
   285  040D                     	;# 
   286  040E                     	;# 
   287  040F                     	;# 
   288  0410                     	;# 
   289  0411                     	;# 
   290  0416                     	;# 
   291  0416                     	;# 
   292  0417                     	;# 
   293  0418                     	;# 
   294  0418                     	;# 
   295  0419                     	;# 
   296  041A                     	;# 
   297  041A                     	;# 
   298  041B                     	;# 
   299  041C                     	;# 
   300  041C                     	;# 
   301  041D                     	;# 
   302  041E                     	;# 
   303  041F                     	;# 
   304  048C                     	;# 
   305  048C                     	;# 
   306  048D                     	;# 
   307  048E                     	;# 
   308  048F                     	;# 
   309  048F                     	;# 
   310  0490                     	;# 
   311  0491                     	;# 
   312  0492                     	;# 
   313  0492                     	;# 
   314  0493                     	;# 
   315  0494                     	;# 
   316  0495                     	;# 
   317  0495                     	;# 
   318  0496                     	;# 
   319  0497                     	;# 
   320  0498                     	;# 
   321  0499                     	;# 
   322  049A                     	;# 
   323  049B                     	;# 
   324  049C                     	;# 
   325  049D                     	;# 
   326  050C                     	;# 
   327  050C                     	;# 
   328  050D                     	;# 
   329  050E                     	;# 
   330  050F                     	;# 
   331  050F                     	;# 
   332  0510                     	;# 
   333  0511                     	;# 
   334  0512                     	;# 
   335  0512                     	;# 
   336  0513                     	;# 
   337  0514                     	;# 
   338  0515                     	;# 
   339  0515                     	;# 
   340  0516                     	;# 
   341  0517                     	;# 
   342  0518                     	;# 
   343  0519                     	;# 
   344  051A                     	;# 
   345  051B                     	;# 
   346  051C                     	;# 
   347  051D                     	;# 
   348  058C                     	;# 
   349  058C                     	;# 
   350  058D                     	;# 
   351  058E                     	;# 
   352  058F                     	;# 
   353  058F                     	;# 
   354  0590                     	;# 
   355  0591                     	;# 
   356  0592                     	;# 
   357  0593                     	;# 
   358  060C                     	;# 
   359  060D                     	;# 
   360  060E                     	;# 
   361  060F                     	;# 
   362  0610                     	;# 
   363  0611                     	;# 
   364  0612                     	;# 
   365  0613                     	;# 
   366  0614                     	;# 
   367  0616                     	;# 
   368  0617                     	;# 
   369  0618                     	;# 
   370  0619                     	;# 
   371  061A                     	;# 
   372  061B                     	;# 
   373  061C                     	;# 
   374  061D                     	;# 
   375  061E                     	;# 
   376  068C                     	;# 
   377  068D                     	;# 
   378  068E                     	;# 
   379  068F                     	;# 
   380  0690                     	;# 
   381  0691                     	;# 
   382  0692                     	;# 
   383  0693                     	;# 
   384  0694                     	;# 
   385  070C                     	;# 
   386  070D                     	;# 
   387  070E                     	;# 
   388  070F                     	;# 
   389  0710                     	;# 
   390  0711                     	;# 
   391  0712                     	;# 
   392  0713                     	;# 
   393  0714                     	;# 
   394  0716                     	;# 
   395  0717                     	;# 
   396  0718                     	;# 
   397  0719                     	;# 
   398  071A                     	;# 
   399  071B                     	;# 
   400  071C                     	;# 
   401  071D                     	;# 
   402  071E                     	;# 
   403  0796                     	;# 
   404  0797                     	;# 
   405  0798                     	;# 
   406  0799                     	;# 
   407  079A                     	;# 
   408  079B                     	;# 
   409  080C                     	;# 
   410  080D                     	;# 
   411  080E                     	;# 
   412  080F                     	;# 
   413  0810                     	;# 
   414  0811                     	;# 
   415  0812                     	;# 
   416  0813                     	;# 
   417  0814                     	;# 
   418  081A                     	;# 
   419  081B                     	;# 
   420  081C                     	;# 
   421  081D                     	;# 
   422  081E                     	;# 
   423  081F                     	;# 
   424  088C                     	;# 
   425  088D                     	;# 
   426  088E                     	;# 
   427  088F                     	;# 
   428  0890                     	;# 
   429  0891                     	;# 
   430  0892                     	;# 
   431  0893                     	;# 
   432  0895                     	;# 
   433  0896                     	;# 
   434  0897                     	;# 
   435  0898                     	;# 
   436  0899                     	;# 
   437  089A                     	;# 
   438  089B                     	;# 
   439  090C                     	;# 
   440  090E                     	;# 
   441  090F                     	;# 
   442  091F                     	;# 
   443  091F                     	;# 
   444  098F                     	;# 
   445  098F                     	;# 
   446  0990                     	;# 
   447  0991                     	;# 
   448  0992                     	;# 
   449  0993                     	;# 
   450  0994                     	;# 
   451  0995                     	;# 
   452  0996                     	;# 
   453  0997                     	;# 
   454  0E0F                     	;# 
   455  0E10                     	;# 
   456  0E11                     	;# 
   457  0E12                     	;# 
   458  0E13                     	;# 
   459  0E14                     	;# 
   460  0E15                     	;# 
   461  0E16                     	;# 
   462  0E17                     	;# 
   463  0E18                     	;# 
   464  0E19                     	;# 
   465  0E1A                     	;# 
   466  0E1B                     	;# 
   467  0E1C                     	;# 
   468  0E1D                     	;# 
   469  0E1E                     	;# 
   470  0E1F                     	;# 
   471  0E20                     	;# 
   472  0E21                     	;# 
   473  0E22                     	;# 
   474  0E23                     	;# 
   475  0E24                     	;# 
   476  0E25                     	;# 
   477  0E26                     	;# 
   478  0E27                     	;# 
   479  0E28                     	;# 
   480  0E29                     	;# 
   481  0E2A                     	;# 
   482  0E2B                     	;# 
   483  0E2C                     	;# 
   484  0E2D                     	;# 
   485  0E2E                     	;# 
   486  0E2F                     	;# 
   487  0E30                     	;# 
   488  0E31                     	;# 
   489  0E32                     	;# 
   490  0E33                     	;# 
   491  0E34                     	;# 
   492  0E35                     	;# 
   493  0E36                     	;# 
   494  0E37                     	;# 
   495  0E8F                     	;# 
   496  0E90                     	;# 
   497  0E91                     	;# 
   498  0E92                     	;# 
   499  0E93                     	;# 
   500  0E94                     	;# 
   501  0E95                     	;# 
   502  0E96                     	;# 
   503  0E97                     	;# 
   504  0E9C                     	;# 
   505  0E9D                     	;# 
   506  0E9E                     	;# 
   507  0EA1                     	;# 
   508  0EA2                     	;# 
   509  0EA3                     	;# 
   510  0EA4                     	;# 
   511  0EA5                     	;# 
   512  0EA9                     	;# 
   513  0EAA                     	;# 
   514  0EAB                     	;# 
   515  0EAC                     	;# 
   516  0EB1                     	;# 
   517  0EB2                     	;# 
   518  0EB3                     	;# 
   519  0EB8                     	;# 
   520  0EB9                     	;# 
   521  0EBA                     	;# 
   522  0EBB                     	;# 
   523  0EBC                     	;# 
   524  0EBD                     	;# 
   525  0EBE                     	;# 
   526  0EC3                     	;# 
   527  0EC5                     	;# 
   528  0EC6                     	;# 
   529  0EC7                     	;# 
   530  0EC8                     	;# 
   531  0EC9                     	;# 
   532  0ECA                     	;# 
   533  0ECB                     	;# 
   534  0ECC                     	;# 
   535  0F10                     	;# 
   536  0F11                     	;# 
   537  0F12                     	;# 
   538  0F13                     	;# 
   539  0F14                     	;# 
   540  0F15                     	;# 
   541  0F16                     	;# 
   542  0F17                     	;# 
   543  0F18                     	;# 
   544  0F19                     	;# 
   545  0F1A                     	;# 
   546  0F1B                     	;# 
   547  0F1C                     	;# 
   548  0F1D                     	;# 
   549  0F1E                     	;# 
   550  0F1F                     	;# 
   551  0F20                     	;# 
   552  0F21                     	;# 
   553  0F22                     	;# 
   554  0F23                     	;# 
   555  0F24                     	;# 
   556  0F25                     	;# 
   557  0F26                     	;# 
   558  0F27                     	;# 
   559  0F38                     	;# 
   560  0F39                     	;# 
   561  0F3A                     	;# 
   562  0F3B                     	;# 
   563  0F3C                     	;# 
   564  0F3D                     	;# 
   565  0F3E                     	;# 
   566  0F3F                     	;# 
   567  0F40                     	;# 
   568  0F41                     	;# 
   569  0F43                     	;# 
   570  0F44                     	;# 
   571  0F45                     	;# 
   572  0F46                     	;# 
   573  0F47                     	;# 
   574  0F48                     	;# 
   575  0F49                     	;# 
   576  0F4A                     	;# 
   577  0F4B                     	;# 
   578  0F4C                     	;# 
   579  0F4E                     	;# 
   580  0F4F                     	;# 
   581  0F50                     	;# 
   582  0F51                     	;# 
   583  0F52                     	;# 
   584  0F53                     	;# 
   585  0F54                     	;# 
   586  0F55                     	;# 
   587  0F56                     	;# 
   588  0F57                     	;# 
   589  0F65                     	;# 
   590  0F68                     	;# 
   591  0F69                     	;# 
   592  0F6A                     	;# 
   593  0F6B                     	;# 
   594  0FE4                     	;# 
   595  0FE5                     	;# 
   596  0FE6                     	;# 
   597  0FE7                     	;# 
   598  0FE8                     	;# 
   599  0FE9                     	;# 
   600  0FEA                     	;# 
   601  0FEB                     	;# 
   602  0FED                     	;# 
   603  0FEE                     	;# 
   604  0FEF                     	;# 
   605  0000                     	;# 
   606  0001                     	;# 
   607  0002                     	;# 
   608  0003                     	;# 
   609  0004                     	;# 
   610  0005                     	;# 
   611  0006                     	;# 
   612  0007                     	;# 
   613  0008                     	;# 
   614  0009                     	;# 
   615  000A                     	;# 
   616  000B                     	;# 
   617  000C                     	;# 
   618  000D                     	;# 
   619  000E                     	;# 
   620  0010                     	;# 
   621  0011                     	;# 
   622  0012                     	;# 
   623  0013                     	;# 
   624  0016                     	;# 
   625  0017                     	;# 
   626  0018                     	;# 
   627  001C                     	;# 
   628  001C                     	;# 
   629  001D                     	;# 
   630  001D                     	;# 
   631  001E                     	;# 
   632  001F                     	;# 
   633  008C                     	;# 
   634  008C                     	;# 
   635  008D                     	;# 
   636  008E                     	;# 
   637  008E                     	;# 
   638  008F                     	;# 
   639  0090                     	;# 
   640  0090                     	;# 
   641  0091                     	;# 
   642  0093                     	;# 
   643  0094                     	;# 
   644  0095                     	;# 
   645  0096                     	;# 
   646  0097                     	;# 
   647  0098                     	;# 
   648  0099                     	;# 
   649  009A                     	;# 
   650  009B                     	;# 
   651  009C                     	;# 
   652  009D                     	;# 
   653  009E                     	;# 
   654  010C                     	;# 
   655  010D                     	;# 
   656  010E                     	;# 
   657  010E                     	;# 
   658  010F                     	;# 
   659  0110                     	;# 
   660  0110                     	;# 
   661  0111                     	;# 
   662  0112                     	;# 
   663  0112                     	;# 
   664  0113                     	;# 
   665  0114                     	;# 
   666  0114                     	;# 
   667  0115                     	;# 
   668  0116                     	;# 
   669  0116                     	;# 
   670  0117                     	;# 
   671  0119                     	;# 
   672  0119                     	;# 
   673  0119                     	;# 
   674  011A                     	;# 
   675  011A                     	;# 
   676  011A                     	;# 
   677  011B                     	;# 
   678  011B                     	;# 
   679  011B                     	;# 
   680  011B                     	;# 
   681  011B                     	;# 
   682  011C                     	;# 
   683  011C                     	;# 
   684  011C                     	;# 
   685  011D                     	;# 
   686  011D                     	;# 
   687  011D                     	;# 
   688  011E                     	;# 
   689  011E                     	;# 
   690  011E                     	;# 
   691  011F                     	;# 
   692  011F                     	;# 
   693  011F                     	;# 
   694  011F                     	;# 
   695  011F                     	;# 
   696  018C                     	;# 
   697  018D                     	;# 
   698  018E                     	;# 
   699  018F                     	;# 
   700  0190                     	;# 
   701  0191                     	;# 
   702  0192                     	;# 
   703  0196                     	;# 
   704  0197                     	;# 
   705  0198                     	;# 
   706  0199                     	;# 
   707  019A                     	;# 
   708  019B                     	;# 
   709  019C                     	;# 
   710  020C                     	;# 
   711  020C                     	;# 
   712  020D                     	;# 
   713  020E                     	;# 
   714  020F                     	;# 
   715  020F                     	;# 
   716  0210                     	;# 
   717  0210                     	;# 
   718  0211                     	;# 
   719  0211                     	;# 
   720  0212                     	;# 
   721  0212                     	;# 
   722  0213                     	;# 
   723  0214                     	;# 
   724  0215                     	;# 
   725  0215                     	;# 
   726  0216                     	;# 
   727  0216                     	;# 
   728  0217                     	;# 
   729  0217                     	;# 
   730  0218                     	;# 
   731  0218                     	;# 
   732  0219                     	;# 
   733  021A                     	;# 
   734  021B                     	;# 
   735  021B                     	;# 
   736  021C                     	;# 
   737  021C                     	;# 
   738  021D                     	;# 
   739  021D                     	;# 
   740  021E                     	;# 
   741  021F                     	;# 
   742  028C                     	;# 
   743  028C                     	;# 
   744  028D                     	;# 
   745  028D                     	;# 
   746  028E                     	;# 
   747  028F                     	;# 
   748  0290                     	;# 
   749  0290                     	;# 
   750  0291                     	;# 
   751  0292                     	;# 
   752  0292                     	;# 
   753  0293                     	;# 
   754  0293                     	;# 
   755  0294                     	;# 
   756  0295                     	;# 
   757  0296                     	;# 
   758  0296                     	;# 
   759  0297                     	;# 
   760  0298                     	;# 
   761  0298                     	;# 
   762  0299                     	;# 
   763  0299                     	;# 
   764  029A                     	;# 
   765  029B                     	;# 
   766  029C                     	;# 
   767  029C                     	;# 
   768  029D                     	;# 
   769  030C                     	;# 
   770  030C                     	;# 
   771  030D                     	;# 
   772  030E                     	;# 
   773  030F                     	;# 
   774  0310                     	;# 
   775  0310                     	;# 
   776  0311                     	;# 
   777  0312                     	;# 
   778  0313                     	;# 
   779  0314                     	;# 
   780  0314                     	;# 
   781  0315                     	;# 
   782  0316                     	;# 
   783  0317                     	;# 
   784  0318                     	;# 
   785  0318                     	;# 
   786  0319                     	;# 
   787  031A                     	;# 
   788  031B                     	;# 
   789  031C                     	;# 
   790  031C                     	;# 
   791  031D                     	;# 
   792  031E                     	;# 
   793  031F                     	;# 
   794  038C                     	;# 
   795  038C                     	;# 
   796  038D                     	;# 
   797  038E                     	;# 
   798  0390                     	;# 
   799  0390                     	;# 
   800  0391                     	;# 
   801  0392                     	;# 
   802  040C                     	;# 
   803  040D                     	;# 
   804  040E                     	;# 
   805  040F                     	;# 
   806  0410                     	;# 
   807  0411                     	;# 
   808  0416                     	;# 
   809  0416                     	;# 
   810  0417                     	;# 
   811  0418                     	;# 
   812  0418                     	;# 
   813  0419                     	;# 
   814  041A                     	;# 
   815  041A                     	;# 
   816  041B                     	;# 
   817  041C                     	;# 
   818  041C                     	;# 
   819  041D                     	;# 
   820  041E                     	;# 
   821  041F                     	;# 
   822  048C                     	;# 
   823  048C                     	;# 
   824  048D                     	;# 
   825  048E                     	;# 
   826  048F                     	;# 
   827  048F                     	;# 
   828  0490                     	;# 
   829  0491                     	;# 
   830  0492                     	;# 
   831  0492                     	;# 
   832  0493                     	;# 
   833  0494                     	;# 
   834  0495                     	;# 
   835  0495                     	;# 
   836  0496                     	;# 
   837  0497                     	;# 
   838  0498                     	;# 
   839  0499                     	;# 
   840  049A                     	;# 
   841  049B                     	;# 
   842  049C                     	;# 
   843  049D                     	;# 
   844  050C                     	;# 
   845  050C                     	;# 
   846  050D                     	;# 
   847  050E                     	;# 
   848  050F                     	;# 
   849  050F                     	;# 
   850  0510                     	;# 
   851  0511                     	;# 
   852  0512                     	;# 
   853  0512                     	;# 
   854  0513                     	;# 
   855  0514                     	;# 
   856  0515                     	;# 
   857  0515                     	;# 
   858  0516                     	;# 
   859  0517                     	;# 
   860  0518                     	;# 
   861  0519                     	;# 
   862  051A                     	;# 
   863  051B                     	;# 
   864  051C                     	;# 
   865  051D                     	;# 
   866  058C                     	;# 
   867  058C                     	;# 
   868  058D                     	;# 
   869  058E                     	;# 
   870  058F                     	;# 
   871  058F                     	;# 
   872  0590                     	;# 
   873  0591                     	;# 
   874  0592                     	;# 
   875  0593                     	;# 
   876  060C                     	;# 
   877  060D                     	;# 
   878  060E                     	;# 
   879  060F                     	;# 
   880  0610                     	;# 
   881  0611                     	;# 
   882  0612                     	;# 
   883  0613                     	;# 
   884  0614                     	;# 
   885  0616                     	;# 
   886  0617                     	;# 
   887  0618                     	;# 
   888  0619                     	;# 
   889  061A                     	;# 
   890  061B                     	;# 
   891  061C                     	;# 
   892  061D                     	;# 
   893  061E                     	;# 
   894  068C                     	;# 
   895  068D                     	;# 
   896  068E                     	;# 
   897  068F                     	;# 
   898  0690                     	;# 
   899  0691                     	;# 
   900  0692                     	;# 
   901  0693                     	;# 
   902  0694                     	;# 
   903  070C                     	;# 
   904  070D                     	;# 
   905  070E                     	;# 
   906  070F                     	;# 
   907  0710                     	;# 
   908  0711                     	;# 
   909  0712                     	;# 
   910  0713                     	;# 
   911  0714                     	;# 
   912  0716                     	;# 
   913  0717                     	;# 
   914  0718                     	;# 
   915  0719                     	;# 
   916  071A                     	;# 
   917  071B                     	;# 
   918  071C                     	;# 
   919  071D                     	;# 
   920  071E                     	;# 
   921  0796                     	;# 
   922  0797                     	;# 
   923  0798                     	;# 
   924  0799                     	;# 
   925  079A                     	;# 
   926  079B                     	;# 
   927  080C                     	;# 
   928  080D                     	;# 
   929  080E                     	;# 
   930  080F                     	;# 
   931  0810                     	;# 
   932  0811                     	;# 
   933  0812                     	;# 
   934  0813                     	;# 
   935  0814                     	;# 
   936  081A                     	;# 
   937  081B                     	;# 
   938  081C                     	;# 
   939  081D                     	;# 
   940  081E                     	;# 
   941  081F                     	;# 
   942  088C                     	;# 
   943  088D                     	;# 
   944  088E                     	;# 
   945  088F                     	;# 
   946  0890                     	;# 
   947  0891                     	;# 
   948  0892                     	;# 
   949  0893                     	;# 
   950  0895                     	;# 
   951  0896                     	;# 
   952  0897                     	;# 
   953  0898                     	;# 
   954  0899                     	;# 
   955  089A                     	;# 
   956  089B                     	;# 
   957  090C                     	;# 
   958  090E                     	;# 
   959  090F                     	;# 
   960  091F                     	;# 
   961  091F                     	;# 
   962  098F                     	;# 
   963  098F                     	;# 
   964  0990                     	;# 
   965  0991                     	;# 
   966  0992                     	;# 
   967  0993                     	;# 
   968  0994                     	;# 
   969  0995                     	;# 
   970  0996                     	;# 
   971  0997                     	;# 
   972  0E0F                     	;# 
   973  0E10                     	;# 
   974  0E11                     	;# 
   975  0E12                     	;# 
   976  0E13                     	;# 
   977  0E14                     	;# 
   978  0E15                     	;# 
   979  0E16                     	;# 
   980  0E17                     	;# 
   981  0E18                     	;# 
   982  0E19                     	;# 
   983  0E1A                     	;# 
   984  0E1B                     	;# 
   985  0E1C                     	;# 
   986  0E1D                     	;# 
   987  0E1E                     	;# 
   988  0E1F                     	;# 
   989  0E20                     	;# 
   990  0E21                     	;# 
   991  0E22                     	;# 
   992  0E23                     	;# 
   993  0E24                     	;# 
   994  0E25                     	;# 
   995  0E26                     	;# 
   996  0E27                     	;# 
   997  0E28                     	;# 
   998  0E29                     	;# 
   999  0E2A                     	;# 
  1000  0E2B                     	;# 
  1001  0E2C                     	;# 
  1002  0E2D                     	;# 
  1003  0E2E                     	;# 
  1004  0E2F                     	;# 
  1005  0E30                     	;# 
  1006  0E31                     	;# 
  1007  0E32                     	;# 
  1008  0E33                     	;# 
  1009  0E34                     	;# 
  1010  0E35                     	;# 
  1011  0E36                     	;# 
  1012  0E37                     	;# 
  1013  0E8F                     	;# 
  1014  0E90                     	;# 
  1015  0E91                     	;# 
  1016  0E92                     	;# 
  1017  0E93                     	;# 
  1018  0E94                     	;# 
  1019  0E95                     	;# 
  1020  0E96                     	;# 
  1021  0E97                     	;# 
  1022  0E9C                     	;# 
  1023  0E9D                     	;# 
  1024  0E9E                     	;# 
  1025  0EA1                     	;# 
  1026  0EA2                     	;# 
  1027  0EA3                     	;# 
  1028  0EA4                     	;# 
  1029  0EA5                     	;# 
  1030  0EA9                     	;# 
  1031  0EAA                     	;# 
  1032  0EAB                     	;# 
  1033  0EAC                     	;# 
  1034  0EB1                     	;# 
  1035  0EB2                     	;# 
  1036  0EB3                     	;# 
  1037  0EB8                     	;# 
  1038  0EB9                     	;# 
  1039  0EBA                     	;# 
  1040  0EBB                     	;# 
  1041  0EBC                     	;# 
  1042  0EBD                     	;# 
  1043  0EBE                     	;# 
  1044  0EC3                     	;# 
  1045  0EC5                     	;# 
  1046  0EC6                     	;# 
  1047  0EC7                     	;# 
  1048  0EC8                     	;# 
  1049  0EC9                     	;# 
  1050  0ECA                     	;# 
  1051  0ECB                     	;# 
  1052  0ECC                     	;# 
  1053  0F10                     	;# 
  1054  0F11                     	;# 
  1055  0F12                     	;# 
  1056  0F13                     	;# 
  1057  0F14                     	;# 
  1058  0F15                     	;# 
  1059  0F16                     	;# 
  1060  0F17                     	;# 
  1061  0F18                     	;# 
  1062  0F19                     	;# 
  1063  0F1A                     	;# 
  1064  0F1B                     	;# 
  1065  0F1C                     	;# 
  1066  0F1D                     	;# 
  1067  0F1E                     	;# 
  1068  0F1F                     	;# 
  1069  0F20                     	;# 
  1070  0F21                     	;# 
  1071  0F22                     	;# 
  1072  0F23                     	;# 
  1073  0F24                     	;# 
  1074  0F25                     	;# 
  1075  0F26                     	;# 
  1076  0F27                     	;# 
  1077  0F38                     	;# 
  1078  0F39                     	;# 
  1079  0F3A                     	;# 
  1080  0F3B                     	;# 
  1081  0F3C                     	;# 
  1082  0F3D                     	;# 
  1083  0F3E                     	;# 
  1084  0F3F                     	;# 
  1085  0F40                     	;# 
  1086  0F41                     	;# 
  1087  0F43                     	;# 
  1088  0F44                     	;# 
  1089  0F45                     	;# 
  1090  0F46                     	;# 
  1091  0F47                     	;# 
  1092  0F48                     	;# 
  1093  0F49                     	;# 
  1094  0F4A                     	;# 
  1095  0F4B                     	;# 
  1096  0F4C                     	;# 
  1097  0F4E                     	;# 
  1098  0F4F                     	;# 
  1099  0F50                     	;# 
  1100  0F51                     	;# 
  1101  0F52                     	;# 
  1102  0F53                     	;# 
  1103  0F54                     	;# 
  1104  0F55                     	;# 
  1105  0F56                     	;# 
  1106  0F57                     	;# 
  1107  0F65                     	;# 
  1108  0F68                     	;# 
  1109  0F69                     	;# 
  1110  0F6A                     	;# 
  1111  0F6B                     	;# 
  1112  0FE4                     	;# 
  1113  0FE5                     	;# 
  1114  0FE6                     	;# 
  1115  0FE7                     	;# 
  1116  0FE8                     	;# 
  1117  0FE9                     	;# 
  1118  0FEA                     	;# 
  1119  0FEB                     	;# 
  1120  0FED                     	;# 
  1121  0FEE                     	;# 
  1122  0FEF                     	;# 
  1123  0000                     	;# 
  1124  0001                     	;# 
  1125  0002                     	;# 
  1126  0003                     	;# 
  1127  0004                     	;# 
  1128  0005                     	;# 
  1129  0006                     	;# 
  1130  0007                     	;# 
  1131  0008                     	;# 
  1132  0009                     	;# 
  1133  000A                     	;# 
  1134  000B                     	;# 
  1135  000C                     	;# 
  1136  000D                     	;# 
  1137  000E                     	;# 
  1138  0010                     	;# 
  1139  0011                     	;# 
  1140  0012                     	;# 
  1141  0013                     	;# 
  1142  0016                     	;# 
  1143  0017                     	;# 
  1144  0018                     	;# 
  1145  001C                     	;# 
  1146  001C                     	;# 
  1147  001D                     	;# 
  1148  001D                     	;# 
  1149  001E                     	;# 
  1150  001F                     	;# 
  1151  008C                     	;# 
  1152  008C                     	;# 
  1153  008D                     	;# 
  1154  008E                     	;# 
  1155  008E                     	;# 
  1156  008F                     	;# 
  1157  0090                     	;# 
  1158  0090                     	;# 
  1159  0091                     	;# 
  1160  0093                     	;# 
  1161  0094                     	;# 
  1162  0095                     	;# 
  1163  0096                     	;# 
  1164  0097                     	;# 
  1165  0098                     	;# 
  1166  0099                     	;# 
  1167  009A                     	;# 
  1168  009B                     	;# 
  1169  009C                     	;# 
  1170  009D                     	;# 
  1171  009E                     	;# 
  1172  010C                     	;# 
  1173  010D                     	;# 
  1174  010E                     	;# 
  1175  010E                     	;# 
  1176  010F                     	;# 
  1177  0110                     	;# 
  1178  0110                     	;# 
  1179  0111                     	;# 
  1180  0112                     	;# 
  1181  0112                     	;# 
  1182  0113                     	;# 
  1183  0114                     	;# 
  1184  0114                     	;# 
  1185  0115                     	;# 
  1186  0116                     	;# 
  1187  0116                     	;# 
  1188  0117                     	;# 
  1189  0119                     	;# 
  1190  0119                     	;# 
  1191  0119                     	;# 
  1192  011A                     	;# 
  1193  011A                     	;# 
  1194  011A                     	;# 
  1195  011B                     	;# 
  1196  011B                     	;# 
  1197  011B                     	;# 
  1198  011B                     	;# 
  1199  011B                     	;# 
  1200  011C                     	;# 
  1201  011C                     	;# 
  1202  011C                     	;# 
  1203  011D                     	;# 
  1204  011D                     	;# 
  1205  011D                     	;# 
  1206  011E                     	;# 
  1207  011E                     	;# 
  1208  011E                     	;# 
  1209  011F                     	;# 
  1210  011F                     	;# 
  1211  011F                     	;# 
  1212  011F                     	;# 
  1213  011F                     	;# 
  1214  018C                     	;# 
  1215  018D                     	;# 
  1216  018E                     	;# 
  1217  018F                     	;# 
  1218  0190                     	;# 
  1219  0191                     	;# 
  1220  0192                     	;# 
  1221  0196                     	;# 
  1222  0197                     	;# 
  1223  0198                     	;# 
  1224  0199                     	;# 
  1225  019A                     	;# 
  1226  019B                     	;# 
  1227  019C                     	;# 
  1228  020C                     	;# 
  1229  020C                     	;# 
  1230  020D                     	;# 
  1231  020E                     	;# 
  1232  020F                     	;# 
  1233  020F                     	;# 
  1234  0210                     	;# 
  1235  0210                     	;# 
  1236  0211                     	;# 
  1237  0211                     	;# 
  1238  0212                     	;# 
  1239  0212                     	;# 
  1240  0213                     	;# 
  1241  0214                     	;# 
  1242  0215                     	;# 
  1243  0215                     	;# 
  1244  0216                     	;# 
  1245  0216                     	;# 
  1246  0217                     	;# 
  1247  0217                     	;# 
  1248  0218                     	;# 
  1249  0218                     	;# 
  1250  0219                     	;# 
  1251  021A                     	;# 
  1252  021B                     	;# 
  1253  021B                     	;# 
  1254  021C                     	;# 
  1255  021C                     	;# 
  1256  021D                     	;# 
  1257  021D                     	;# 
  1258  021E                     	;# 
  1259  021F                     	;# 
  1260  028C                     	;# 
  1261  028C                     	;# 
  1262  028D                     	;# 
  1263  028D                     	;# 
  1264  028E                     	;# 
  1265  028F                     	;# 
  1266  0290                     	;# 
  1267  0290                     	;# 
  1268  0291                     	;# 
  1269  0292                     	;# 
  1270  0292                     	;# 
  1271  0293                     	;# 
  1272  0293                     	;# 
  1273  0294                     	;# 
  1274  0295                     	;# 
  1275  0296                     	;# 
  1276  0296                     	;# 
  1277  0297                     	;# 
  1278  0298                     	;# 
  1279  0298                     	;# 
  1280  0299                     	;# 
  1281  0299                     	;# 
  1282  029A                     	;# 
  1283  029B                     	;# 
  1284  029C                     	;# 
  1285  029C                     	;# 
  1286  029D                     	;# 
  1287  030C                     	;# 
  1288  030C                     	;# 
  1289  030D                     	;# 
  1290  030E                     	;# 
  1291  030F                     	;# 
  1292  0310                     	;# 
  1293  0310                     	;# 
  1294  0311                     	;# 
  1295  0312                     	;# 
  1296  0313                     	;# 
  1297  0314                     	;# 
  1298  0314                     	;# 
  1299  0315                     	;# 
  1300  0316                     	;# 
  1301  0317                     	;# 
  1302  0318                     	;# 
  1303  0318                     	;# 
  1304  0319                     	;# 
  1305  031A                     	;# 
  1306  031B                     	;# 
  1307  031C                     	;# 
  1308  031C                     	;# 
  1309  031D                     	;# 
  1310  031E                     	;# 
  1311  031F                     	;# 
  1312  038C                     	;# 
  1313  038C                     	;# 
  1314  038D                     	;# 
  1315  038E                     	;# 
  1316  0390                     	;# 
  1317  0390                     	;# 
  1318  0391                     	;# 
  1319  0392                     	;# 
  1320  040C                     	;# 
  1321  040D                     	;# 
  1322  040E                     	;# 
  1323  040F                     	;# 
  1324  0410                     	;# 
  1325  0411                     	;# 
  1326  0416                     	;# 
  1327  0416                     	;# 
  1328  0417                     	;# 
  1329  0418                     	;# 
  1330  0418                     	;# 
  1331  0419                     	;# 
  1332  041A                     	;# 
  1333  041A                     	;# 
  1334  041B                     	;# 
  1335  041C                     	;# 
  1336  041C                     	;# 
  1337  041D                     	;# 
  1338  041E                     	;# 
  1339  041F                     	;# 
  1340  048C                     	;# 
  1341  048C                     	;# 
  1342  048D                     	;# 
  1343  048E                     	;# 
  1344  048F                     	;# 
  1345  048F                     	;# 
  1346  0490                     	;# 
  1347  0491                     	;# 
  1348  0492                     	;# 
  1349  0492                     	;# 
  1350  0493                     	;# 
  1351  0494                     	;# 
  1352  0495                     	;# 
  1353  0495                     	;# 
  1354  0496                     	;# 
  1355  0497                     	;# 
  1356  0498                     	;# 
  1357  0499                     	;# 
  1358  049A                     	;# 
  1359  049B                     	;# 
  1360  049C                     	;# 
  1361  049D                     	;# 
  1362  050C                     	;# 
  1363  050C                     	;# 
  1364  050D                     	;# 
  1365  050E                     	;# 
  1366  050F                     	;# 
  1367  050F                     	;# 
  1368  0510                     	;# 
  1369  0511                     	;# 
  1370  0512                     	;# 
  1371  0512                     	;# 
  1372  0513                     	;# 
  1373  0514                     	;# 
  1374  0515                     	;# 
  1375  0515                     	;# 
  1376  0516                     	;# 
  1377  0517                     	;# 
  1378  0518                     	;# 
  1379  0519                     	;# 
  1380  051A                     	;# 
  1381  051B                     	;# 
  1382  051C                     	;# 
  1383  051D                     	;# 
  1384  058C                     	;# 
  1385  058C                     	;# 
  1386  058D                     	;# 
  1387  058E                     	;# 
  1388  058F                     	;# 
  1389  058F                     	;# 
  1390  0590                     	;# 
  1391  0591                     	;# 
  1392  0592                     	;# 
  1393  0593                     	;# 
  1394  060C                     	;# 
  1395  060D                     	;# 
  1396  060E                     	;# 
  1397  060F                     	;# 
  1398  0610                     	;# 
  1399  0611                     	;# 
  1400  0612                     	;# 
  1401  0613                     	;# 
  1402  0614                     	;# 
  1403  0616                     	;# 
  1404  0617                     	;# 
  1405  0618                     	;# 
  1406  0619                     	;# 
  1407  061A                     	;# 
  1408  061B                     	;# 
  1409  061C                     	;# 
  1410  061D                     	;# 
  1411  061E                     	;# 
  1412  068C                     	;# 
  1413  068D                     	;# 
  1414  068E                     	;# 
  1415  068F                     	;# 
  1416  0690                     	;# 
  1417  0691                     	;# 
  1418  0692                     	;# 
  1419  0693                     	;# 
  1420  0694                     	;# 
  1421  070C                     	;# 
  1422  070D                     	;# 
  1423  070E                     	;# 
  1424  070F                     	;# 
  1425  0710                     	;# 
  1426  0711                     	;# 
  1427  0712                     	;# 
  1428  0713                     	;# 
  1429  0714                     	;# 
  1430  0716                     	;# 
  1431  0717                     	;# 
  1432  0718                     	;# 
  1433  0719                     	;# 
  1434  071A                     	;# 
  1435  071B                     	;# 
  1436  071C                     	;# 
  1437  071D                     	;# 
  1438  071E                     	;# 
  1439  0796                     	;# 
  1440  0797                     	;# 
  1441  0798                     	;# 
  1442  0799                     	;# 
  1443  079A                     	;# 
  1444  079B                     	;# 
  1445  080C                     	;# 
  1446  080D                     	;# 
  1447  080E                     	;# 
  1448  080F                     	;# 
  1449  0810                     	;# 
  1450  0811                     	;# 
  1451  0812                     	;# 
  1452  0813                     	;# 
  1453  0814                     	;# 
  1454  081A                     	;# 
  1455  081B                     	;# 
  1456  081C                     	;# 
  1457  081D                     	;# 
  1458  081E                     	;# 
  1459  081F                     	;# 
  1460  088C                     	;# 
  1461  088D                     	;# 
  1462  088E                     	;# 
  1463  088F                     	;# 
  1464  0890                     	;# 
  1465  0891                     	;# 
  1466  0892                     	;# 
  1467  0893                     	;# 
  1468  0895                     	;# 
  1469  0896                     	;# 
  1470  0897                     	;# 
  1471  0898                     	;# 
  1472  0899                     	;# 
  1473  089A                     	;# 
  1474  089B                     	;# 
  1475  090C                     	;# 
  1476  090E                     	;# 
  1477  090F                     	;# 
  1478  091F                     	;# 
  1479  091F                     	;# 
  1480  098F                     	;# 
  1481  098F                     	;# 
  1482  0990                     	;# 
  1483  0991                     	;# 
  1484  0992                     	;# 
  1485  0993                     	;# 
  1486  0994                     	;# 
  1487  0995                     	;# 
  1488  0996                     	;# 
  1489  0997                     	;# 
  1490  0E0F                     	;# 
  1491  0E10                     	;# 
  1492  0E11                     	;# 
  1493  0E12                     	;# 
  1494  0E13                     	;# 
  1495  0E14                     	;# 
  1496  0E15                     	;# 
  1497  0E16                     	;# 
  1498  0E17                     	;# 
  1499  0E18                     	;# 
  1500  0E19                     	;# 
  1501  0E1A                     	;# 
  1502  0E1B                     	;# 
  1503  0E1C                     	;# 
  1504  0E1D                     	;# 
  1505  0E1E                     	;# 
  1506  0E1F                     	;# 
  1507  0E20                     	;# 
  1508  0E21                     	;# 
  1509  0E22                     	;# 
  1510  0E23                     	;# 
  1511  0E24                     	;# 
  1512  0E25                     	;# 
  1513  0E26                     	;# 
  1514  0E27                     	;# 
  1515  0E28                     	;# 
  1516  0E29                     	;# 
  1517  0E2A                     	;# 
  1518  0E2B                     	;# 
  1519  0E2C                     	;# 
  1520  0E2D                     	;# 
  1521  0E2E                     	;# 
  1522  0E2F                     	;# 
  1523  0E30                     	;# 
  1524  0E31                     	;# 
  1525  0E32                     	;# 
  1526  0E33                     	;# 
  1527  0E34                     	;# 
  1528  0E35                     	;# 
  1529  0E36                     	;# 
  1530  0E37                     	;# 
  1531  0E8F                     	;# 
  1532  0E90                     	;# 
  1533  0E91                     	;# 
  1534  0E92                     	;# 
  1535  0E93                     	;# 
  1536  0E94                     	;# 
  1537  0E95                     	;# 
  1538  0E96                     	;# 
  1539  0E97                     	;# 
  1540  0E9C                     	;# 
  1541  0E9D                     	;# 
  1542  0E9E                     	;# 
  1543  0EA1                     	;# 
  1544  0EA2                     	;# 
  1545  0EA3                     	;# 
  1546  0EA4                     	;# 
  1547  0EA5                     	;# 
  1548  0EA9                     	;# 
  1549  0EAA                     	;# 
  1550  0EAB                     	;# 
  1551  0EAC                     	;# 
  1552  0EB1                     	;# 
  1553  0EB2                     	;# 
  1554  0EB3                     	;# 
  1555  0EB8                     	;# 
  1556  0EB9                     	;# 
  1557  0EBA                     	;# 
  1558  0EBB                     	;# 
  1559  0EBC                     	;# 
  1560  0EBD                     	;# 
  1561  0EBE                     	;# 
  1562  0EC3                     	;# 
  1563  0EC5                     	;# 
  1564  0EC6                     	;# 
  1565  0EC7                     	;# 
  1566  0EC8                     	;# 
  1567  0EC9                     	;# 
  1568  0ECA                     	;# 
  1569  0ECB                     	;# 
  1570  0ECC                     	;# 
  1571  0F10                     	;# 
  1572  0F11                     	;# 
  1573  0F12                     	;# 
  1574  0F13                     	;# 
  1575  0F14                     	;# 
  1576  0F15                     	;# 
  1577  0F16                     	;# 
  1578  0F17                     	;# 
  1579  0F18                     	;# 
  1580  0F19                     	;# 
  1581  0F1A                     	;# 
  1582  0F1B                     	;# 
  1583  0F1C                     	;# 
  1584  0F1D                     	;# 
  1585  0F1E                     	;# 
  1586  0F1F                     	;# 
  1587  0F20                     	;# 
  1588  0F21                     	;# 
  1589  0F22                     	;# 
  1590  0F23                     	;# 
  1591  0F24                     	;# 
  1592  0F25                     	;# 
  1593  0F26                     	;# 
  1594  0F27                     	;# 
  1595  0F38                     	;# 
  1596  0F39                     	;# 
  1597  0F3A                     	;# 
  1598  0F3B                     	;# 
  1599  0F3C                     	;# 
  1600  0F3D                     	;# 
  1601  0F3E                     	;# 
  1602  0F3F                     	;# 
  1603  0F40                     	;# 
  1604  0F41                     	;# 
  1605  0F43                     	;# 
  1606  0F44                     	;# 
  1607  0F45                     	;# 
  1608  0F46                     	;# 
  1609  0F47                     	;# 
  1610  0F48                     	;# 
  1611  0F49                     	;# 
  1612  0F4A                     	;# 
  1613  0F4B                     	;# 
  1614  0F4C                     	;# 
  1615  0F4E                     	;# 
  1616  0F4F                     	;# 
  1617  0F50                     	;# 
  1618  0F51                     	;# 
  1619  0F52                     	;# 
  1620  0F53                     	;# 
  1621  0F54                     	;# 
  1622  0F55                     	;# 
  1623  0F56                     	;# 
  1624  0F57                     	;# 
  1625  0F65                     	;# 
  1626  0F68                     	;# 
  1627  0F69                     	;# 
  1628  0F6A                     	;# 
  1629  0F6B                     	;# 
  1630  0FE4                     	;# 
  1631  0FE5                     	;# 
  1632  0FE6                     	;# 
  1633  0FE7                     	;# 
  1634  0FE8                     	;# 
  1635  0FE9                     	;# 
  1636  0FEA                     	;# 
  1637  0FEB                     	;# 
  1638  0FED                     	;# 
  1639  0FEE                     	;# 
  1640  0FEF                     	;# 
  1641  0000                     	;# 
  1642  0001                     	;# 
  1643  0002                     	;# 
  1644  0003                     	;# 
  1645  0004                     	;# 
  1646  0005                     	;# 
  1647  0006                     	;# 
  1648  0007                     	;# 
  1649  0008                     	;# 
  1650  0009                     	;# 
  1651  000A                     	;# 
  1652  000B                     	;# 
  1653  000C                     	;# 
  1654  000D                     	;# 
  1655  000E                     	;# 
  1656  0010                     	;# 
  1657  0011                     	;# 
  1658  0012                     	;# 
  1659  0013                     	;# 
  1660  0016                     	;# 
  1661  0017                     	;# 
  1662  0018                     	;# 
  1663  001C                     	;# 
  1664  001C                     	;# 
  1665  001D                     	;# 
  1666  001D                     	;# 
  1667  001E                     	;# 
  1668  001F                     	;# 
  1669  008C                     	;# 
  1670  008C                     	;# 
  1671  008D                     	;# 
  1672  008E                     	;# 
  1673  008E                     	;# 
  1674  008F                     	;# 
  1675  0090                     	;# 
  1676  0090                     	;# 
  1677  0091                     	;# 
  1678  0093                     	;# 
  1679  0094                     	;# 
  1680  0095                     	;# 
  1681  0096                     	;# 
  1682  0097                     	;# 
  1683  0098                     	;# 
  1684  0099                     	;# 
  1685  009A                     	;# 
  1686  009B                     	;# 
  1687  009C                     	;# 
  1688  009D                     	;# 
  1689  009E                     	;# 
  1690  010C                     	;# 
  1691  010D                     	;# 
  1692  010E                     	;# 
  1693  010E                     	;# 
  1694  010F                     	;# 
  1695  0110                     	;# 
  1696  0110                     	;# 
  1697  0111                     	;# 
  1698  0112                     	;# 
  1699  0112                     	;# 
  1700  0113                     	;# 
  1701  0114                     	;# 
  1702  0114                     	;# 
  1703  0115                     	;# 
  1704  0116                     	;# 
  1705  0116                     	;# 
  1706  0117                     	;# 
  1707  0119                     	;# 
  1708  0119                     	;# 
  1709  0119                     	;# 
  1710  011A                     	;# 
  1711  011A                     	;# 
  1712  011A                     	;# 
  1713  011B                     	;# 
  1714  011B                     	;# 
  1715  011B                     	;# 
  1716  011B                     	;# 
  1717  011B                     	;# 
  1718  011C                     	;# 
  1719  011C                     	;# 
  1720  011C                     	;# 
  1721  011D                     	;# 
  1722  011D                     	;# 
  1723  011D                     	;# 
  1724  011E                     	;# 
  1725  011E                     	;# 
  1726  011E                     	;# 
  1727  011F                     	;# 
  1728  011F                     	;# 
  1729  011F                     	;# 
  1730  011F                     	;# 
  1731  011F                     	;# 
  1732  018C                     	;# 
  1733  018D                     	;# 
  1734  018E                     	;# 
  1735  018F                     	;# 
  1736  0190                     	;# 
  1737  0191                     	;# 
  1738  0192                     	;# 
  1739  0196                     	;# 
  1740  0197                     	;# 
  1741  0198                     	;# 
  1742  0199                     	;# 
  1743  019A                     	;# 
  1744  019B                     	;# 
  1745  019C                     	;# 
  1746  020C                     	;# 
  1747  020C                     	;# 
  1748  020D                     	;# 
  1749  020E                     	;# 
  1750  020F                     	;# 
  1751  020F                     	;# 
  1752  0210                     	;# 
  1753  0210                     	;# 
  1754  0211                     	;# 
  1755  0211                     	;# 
  1756  0212                     	;# 
  1757  0212                     	;# 
  1758  0213                     	;# 
  1759  0214                     	;# 
  1760  0215                     	;# 
  1761  0215                     	;# 
  1762  0216                     	;# 
  1763  0216                     	;# 
  1764  0217                     	;# 
  1765  0217                     	;# 
  1766  0218                     	;# 
  1767  0218                     	;# 
  1768  0219                     	;# 
  1769  021A                     	;# 
  1770  021B                     	;# 
  1771  021B                     	;# 
  1772  021C                     	;# 
  1773  021C                     	;# 
  1774  021D                     	;# 
  1775  021D                     	;# 
  1776  021E                     	;# 
  1777  021F                     	;# 
  1778  028C                     	;# 
  1779  028C                     	;# 
  1780  028D                     	;# 
  1781  028D                     	;# 
  1782  028E                     	;# 
  1783  028F                     	;# 
  1784  0290                     	;# 
  1785  0290                     	;# 
  1786  0291                     	;# 
  1787  0292                     	;# 
  1788  0292                     	;# 
  1789  0293                     	;# 
  1790  0293                     	;# 
  1791  0294                     	;# 
  1792  0295                     	;# 
  1793  0296                     	;# 
  1794  0296                     	;# 
  1795  0297                     	;# 
  1796  0298                     	;# 
  1797  0298                     	;# 
  1798  0299                     	;# 
  1799  0299                     	;# 
  1800  029A                     	;# 
  1801  029B                     	;# 
  1802  029C                     	;# 
  1803  029C                     	;# 
  1804  029D                     	;# 
  1805  030C                     	;# 
  1806  030C                     	;# 
  1807  030D                     	;# 
  1808  030E                     	;# 
  1809  030F                     	;# 
  1810  0310                     	;# 
  1811  0310                     	;# 
  1812  0311                     	;# 
  1813  0312                     	;# 
  1814  0313                     	;# 
  1815  0314                     	;# 
  1816  0314                     	;# 
  1817  0315                     	;# 
  1818  0316                     	;# 
  1819  0317                     	;# 
  1820  0318                     	;# 
  1821  0318                     	;# 
  1822  0319                     	;# 
  1823  031A                     	;# 
  1824  031B                     	;# 
  1825  031C                     	;# 
  1826  031C                     	;# 
  1827  031D                     	;# 
  1828  031E                     	;# 
  1829  031F                     	;# 
  1830  038C                     	;# 
  1831  038C                     	;# 
  1832  038D                     	;# 
  1833  038E                     	;# 
  1834  0390                     	;# 
  1835  0390                     	;# 
  1836  0391                     	;# 
  1837  0392                     	;# 
  1838  040C                     	;# 
  1839  040D                     	;# 
  1840  040E                     	;# 
  1841  040F                     	;# 
  1842  0410                     	;# 
  1843  0411                     	;# 
  1844  0416                     	;# 
  1845  0416                     	;# 
  1846  0417                     	;# 
  1847  0418                     	;# 
  1848  0418                     	;# 
  1849  0419                     	;# 
  1850  041A                     	;# 
  1851  041A                     	;# 
  1852  041B                     	;# 
  1853  041C                     	;# 
  1854  041C                     	;# 
  1855  041D                     	;# 
  1856  041E                     	;# 
  1857  041F                     	;# 
  1858  048C                     	;# 
  1859  048C                     	;# 
  1860  048D                     	;# 
  1861  048E                     	;# 
  1862  048F                     	;# 
  1863  048F                     	;# 
  1864  0490                     	;# 
  1865  0491                     	;# 
  1866  0492                     	;# 
  1867  0492                     	;# 
  1868  0493                     	;# 
  1869  0494                     	;# 
  1870  0495                     	;# 
  1871  0495                     	;# 
  1872  0496                     	;# 
  1873  0497                     	;# 
  1874  0498                     	;# 
  1875  0499                     	;# 
  1876  049A                     	;# 
  1877  049B                     	;# 
  1878  049C                     	;# 
  1879  049D                     	;# 
  1880  050C                     	;# 
  1881  050C                     	;# 
  1882  050D                     	;# 
  1883  050E                     	;# 
  1884  050F                     	;# 
  1885  050F                     	;# 
  1886  0510                     	;# 
  1887  0511                     	;# 
  1888  0512                     	;# 
  1889  0512                     	;# 
  1890  0513                     	;# 
  1891  0514                     	;# 
  1892  0515                     	;# 
  1893  0515                     	;# 
  1894  0516                     	;# 
  1895  0517                     	;# 
  1896  0518                     	;# 
  1897  0519                     	;# 
  1898  051A                     	;# 
  1899  051B                     	;# 
  1900  051C                     	;# 
  1901  051D                     	;# 
  1902  058C                     	;# 
  1903  058C                     	;# 
  1904  058D                     	;# 
  1905  058E                     	;# 
  1906  058F                     	;# 
  1907  058F                     	;# 
  1908  0590                     	;# 
  1909  0591                     	;# 
  1910  0592                     	;# 
  1911  0593                     	;# 
  1912  060C                     	;# 
  1913  060D                     	;# 
  1914  060E                     	;# 
  1915  060F                     	;# 
  1916  0610                     	;# 
  1917  0611                     	;# 
  1918  0612                     	;# 
  1919  0613                     	;# 
  1920  0614                     	;# 
  1921  0616                     	;# 
  1922  0617                     	;# 
  1923  0618                     	;# 
  1924  0619                     	;# 
  1925  061A                     	;# 
  1926  061B                     	;# 
  1927  061C                     	;# 
  1928  061D                     	;# 
  1929  061E                     	;# 
  1930  068C                     	;# 
  1931  068D                     	;# 
  1932  068E                     	;# 
  1933  068F                     	;# 
  1934  0690                     	;# 
  1935  0691                     	;# 
  1936  0692                     	;# 
  1937  0693                     	;# 
  1938  0694                     	;# 
  1939  070C                     	;# 
  1940  070D                     	;# 
  1941  070E                     	;# 
  1942  070F                     	;# 
  1943  0710                     	;# 
  1944  0711                     	;# 
  1945  0712                     	;# 
  1946  0713                     	;# 
  1947  0714                     	;# 
  1948  0716                     	;# 
  1949  0717                     	;# 
  1950  0718                     	;# 
  1951  0719                     	;# 
  1952  071A                     	;# 
  1953  071B                     	;# 
  1954  071C                     	;# 
  1955  071D                     	;# 
  1956  071E                     	;# 
  1957  0796                     	;# 
  1958  0797                     	;# 
  1959  0798                     	;# 
  1960  0799                     	;# 
  1961  079A                     	;# 
  1962  079B                     	;# 
  1963  080C                     	;# 
  1964  080D                     	;# 
  1965  080E                     	;# 
  1966  080F                     	;# 
  1967  0810                     	;# 
  1968  0811                     	;# 
  1969  0812                     	;# 
  1970  0813                     	;# 
  1971  0814                     	;# 
  1972  081A                     	;# 
  1973  081B                     	;# 
  1974  081C                     	;# 
  1975  081D                     	;# 
  1976  081E                     	;# 
  1977  081F                     	;# 
  1978  088C                     	;# 
  1979  088D                     	;# 
  1980  088E                     	;# 
  1981  088F                     	;# 
  1982  0890                     	;# 
  1983  0891                     	;# 
  1984  0892                     	;# 
  1985  0893                     	;# 
  1986  0895                     	;# 
  1987  0896                     	;# 
  1988  0897                     	;# 
  1989  0898                     	;# 
  1990  0899                     	;# 
  1991  089A                     	;# 
  1992  089B                     	;# 
  1993  090C                     	;# 
  1994  090E                     	;# 
  1995  090F                     	;# 
  1996  091F                     	;# 
  1997  091F                     	;# 
  1998  098F                     	;# 
  1999  098F                     	;# 
  2000  0990                     	;# 
  2001  0991                     	;# 
  2002  0992                     	;# 
  2003  0993                     	;# 
  2004  0994                     	;# 
  2005  0995                     	;# 
  2006  0996                     	;# 
  2007  0997                     	;# 
  2008  0E0F                     	;# 
  2009  0E10                     	;# 
  2010  0E11                     	;# 
  2011  0E12                     	;# 
  2012  0E13                     	;# 
  2013  0E14                     	;# 
  2014  0E15                     	;# 
  2015  0E16                     	;# 
  2016  0E17                     	;# 
  2017  0E18                     	;# 
  2018  0E19                     	;# 
  2019  0E1A                     	;# 
  2020  0E1B                     	;# 
  2021  0E1C                     	;# 
  2022  0E1D                     	;# 
  2023  0E1E                     	;# 
  2024  0E1F                     	;# 
  2025  0E20                     	;# 
  2026  0E21                     	;# 
  2027  0E22                     	;# 
  2028  0E23                     	;# 
  2029  0E24                     	;# 
  2030  0E25                     	;# 
  2031  0E26                     	;# 
  2032  0E27                     	;# 
  2033  0E28                     	;# 
  2034  0E29                     	;# 
  2035  0E2A                     	;# 
  2036  0E2B                     	;# 
  2037  0E2C                     	;# 
  2038  0E2D                     	;# 
  2039  0E2E                     	;# 
  2040  0E2F                     	;# 
  2041  0E30                     	;# 
  2042  0E31                     	;# 
  2043  0E32                     	;# 
  2044  0E33                     	;# 
  2045  0E34                     	;# 
  2046  0E35                     	;# 
  2047  0E36                     	;# 
  2048  0E37                     	;# 
  2049  0E8F                     	;# 
  2050  0E90                     	;# 
  2051  0E91                     	;# 
  2052  0E92                     	;# 
  2053  0E93                     	;# 
  2054  0E94                     	;# 
  2055  0E95                     	;# 
  2056  0E96                     	;# 
  2057  0E97                     	;# 
  2058  0E9C                     	;# 
  2059  0E9D                     	;# 
  2060  0E9E                     	;# 
  2061  0EA1                     	;# 
  2062  0EA2                     	;# 
  2063  0EA3                     	;# 
  2064  0EA4                     	;# 
  2065  0EA5                     	;# 
  2066  0EA9                     	;# 
  2067  0EAA                     	;# 
  2068  0EAB                     	;# 
  2069  0EAC                     	;# 
  2070  0EB1                     	;# 
  2071  0EB2                     	;# 
  2072  0EB3                     	;# 
  2073  0EB8                     	;# 
  2074  0EB9                     	;# 
  2075  0EBA                     	;# 
  2076  0EBB                     	;# 
  2077  0EBC                     	;# 
  2078  0EBD                     	;# 
  2079  0EBE                     	;# 
  2080  0EC3                     	;# 
  2081  0EC5                     	;# 
  2082  0EC6                     	;# 
  2083  0EC7                     	;# 
  2084  0EC8                     	;# 
  2085  0EC9                     	;# 
  2086  0ECA                     	;# 
  2087  0ECB                     	;# 
  2088  0ECC                     	;# 
  2089  0F10                     	;# 
  2090  0F11                     	;# 
  2091  0F12                     	;# 
  2092  0F13                     	;# 
  2093  0F14                     	;# 
  2094  0F15                     	;# 
  2095  0F16                     	;# 
  2096  0F17                     	;# 
  2097  0F18                     	;# 
  2098  0F19                     	;# 
  2099  0F1A                     	;# 
  2100  0F1B                     	;# 
  2101  0F1C                     	;# 
  2102  0F1D                     	;# 
  2103  0F1E                     	;# 
  2104  0F1F                     	;# 
  2105  0F20                     	;# 
  2106  0F21                     	;# 
  2107  0F22                     	;# 
  2108  0F23                     	;# 
  2109  0F24                     	;# 
  2110  0F25                     	;# 
  2111  0F26                     	;# 
  2112  0F27                     	;# 
  2113  0F38                     	;# 
  2114  0F39                     	;# 
  2115  0F3A                     	;# 
  2116  0F3B                     	;# 
  2117  0F3C                     	;# 
  2118  0F3D                     	;# 
  2119  0F3E                     	;# 
  2120  0F3F                     	;# 
  2121  0F40                     	;# 
  2122  0F41                     	;# 
  2123  0F43                     	;# 
  2124  0F44                     	;# 
  2125  0F45                     	;# 
  2126  0F46                     	;# 
  2127  0F47                     	;# 
  2128  0F48                     	;# 
  2129  0F49                     	;# 
  2130  0F4A                     	;# 
  2131  0F4B                     	;# 
  2132  0F4C                     	;# 
  2133  0F4E                     	;# 
  2134  0F4F                     	;# 
  2135  0F50                     	;# 
  2136  0F51                     	;# 
  2137  0F52                     	;# 
  2138  0F53                     	;# 
  2139  0F54                     	;# 
  2140  0F55                     	;# 
  2141  0F56                     	;# 
  2142  0F57                     	;# 
  2143  0F65                     	;# 
  2144  0F68                     	;# 
  2145  0F69                     	;# 
  2146  0F6A                     	;# 
  2147  0F6B                     	;# 
  2148  0FE4                     	;# 
  2149  0FE5                     	;# 
  2150  0FE6                     	;# 
  2151  0FE7                     	;# 
  2152  0FE8                     	;# 
  2153  0FE9                     	;# 
  2154  0FEA                     	;# 
  2155  0FEB                     	;# 
  2156  0FED                     	;# 
  2157  0FEE                     	;# 
  2158  0FEF                     	;# 
  2159  0000                     	;# 
  2160  0001                     	;# 
  2161  0002                     	;# 
  2162  0003                     	;# 
  2163  0004                     	;# 
  2164  0005                     	;# 
  2165  0006                     	;# 
  2166  0007                     	;# 
  2167  0008                     	;# 
  2168  0009                     	;# 
  2169  000A                     	;# 
  2170  000B                     	;# 
  2171  000C                     	;# 
  2172  000D                     	;# 
  2173  000E                     	;# 
  2174  0010                     	;# 
  2175  0011                     	;# 
  2176  0012                     	;# 
  2177  0013                     	;# 
  2178  0016                     	;# 
  2179  0017                     	;# 
  2180  0018                     	;# 
  2181  001C                     	;# 
  2182  001C                     	;# 
  2183  001D                     	;# 
  2184  001D                     	;# 
  2185  001E                     	;# 
  2186  001F                     	;# 
  2187  008C                     	;# 
  2188  008C                     	;# 
  2189  008D                     	;# 
  2190  008E                     	;# 
  2191  008E                     	;# 
  2192  008F                     	;# 
  2193  0090                     	;# 
  2194  0090                     	;# 
  2195  0091                     	;# 
  2196  0093                     	;# 
  2197  0094                     	;# 
  2198  0095                     	;# 
  2199  0096                     	;# 
  2200  0097                     	;# 
  2201  0098                     	;# 
  2202  0099                     	;# 
  2203  009A                     	;# 
  2204  009B                     	;# 
  2205  009C                     	;# 
  2206  009D                     	;# 
  2207  009E                     	;# 
  2208  010C                     	;# 
  2209  010D                     	;# 
  2210  010E                     	;# 
  2211  010E                     	;# 
  2212  010F                     	;# 
  2213  0110                     	;# 
  2214  0110                     	;# 
  2215  0111                     	;# 
  2216  0112                     	;# 
  2217  0112                     	;# 
  2218  0113                     	;# 
  2219  0114                     	;# 
  2220  0114                     	;# 
  2221  0115                     	;# 
  2222  0116                     	;# 
  2223  0116                     	;# 
  2224  0117                     	;# 
  2225  0119                     	;# 
  2226  0119                     	;# 
  2227  0119                     	;# 
  2228  011A                     	;# 
  2229  011A                     	;# 
  2230  011A                     	;# 
  2231  011B                     	;# 
  2232  011B                     	;# 
  2233  011B                     	;# 
  2234  011B                     	;# 
  2235  011B                     	;# 
  2236  011C                     	;# 
  2237  011C                     	;# 
  2238  011C                     	;# 
  2239  011D                     	;# 
  2240  011D                     	;# 
  2241  011D                     	;# 
  2242  011E                     	;# 
  2243  011E                     	;# 
  2244  011E                     	;# 
  2245  011F                     	;# 
  2246  011F                     	;# 
  2247  011F                     	;# 
  2248  011F                     	;# 
  2249  011F                     	;# 
  2250  018C                     	;# 
  2251  018D                     	;# 
  2252  018E                     	;# 
  2253  018F                     	;# 
  2254  0190                     	;# 
  2255  0191                     	;# 
  2256  0192                     	;# 
  2257  0196                     	;# 
  2258  0197                     	;# 
  2259  0198                     	;# 
  2260  0199                     	;# 
  2261  019A                     	;# 
  2262  019B                     	;# 
  2263  019C                     	;# 
  2264  020C                     	;# 
  2265  020C                     	;# 
  2266  020D                     	;# 
  2267  020E                     	;# 
  2268  020F                     	;# 
  2269  020F                     	;# 
  2270  0210                     	;# 
  2271  0210                     	;# 
  2272  0211                     	;# 
  2273  0211                     	;# 
  2274  0212                     	;# 
  2275  0212                     	;# 
  2276  0213                     	;# 
  2277  0214                     	;# 
  2278  0215                     	;# 
  2279  0215                     	;# 
  2280  0216                     	;# 
  2281  0216                     	;# 
  2282  0217                     	;# 
  2283  0217                     	;# 
  2284  0218                     	;# 
  2285  0218                     	;# 
  2286  0219                     	;# 
  2287  021A                     	;# 
  2288  021B                     	;# 
  2289  021B                     	;# 
  2290  021C                     	;# 
  2291  021C                     	;# 
  2292  021D                     	;# 
  2293  021D                     	;# 
  2294  021E                     	;# 
  2295  021F                     	;# 
  2296  028C                     	;# 
  2297  028C                     	;# 
  2298  028D                     	;# 
  2299  028D                     	;# 
  2300  028E                     	;# 
  2301  028F                     	;# 
  2302  0290                     	;# 
  2303  0290                     	;# 
  2304  0291                     	;# 
  2305  0292                     	;# 
  2306  0292                     	;# 
  2307  0293                     	;# 
  2308  0293                     	;# 
  2309  0294                     	;# 
  2310  0295                     	;# 
  2311  0296                     	;# 
  2312  0296                     	;# 
  2313  0297                     	;# 
  2314  0298                     	;# 
  2315  0298                     	;# 
  2316  0299                     	;# 
  2317  0299                     	;# 
  2318  029A                     	;# 
  2319  029B                     	;# 
  2320  029C                     	;# 
  2321  029C                     	;# 
  2322  029D                     	;# 
  2323  030C                     	;# 
  2324  030C                     	;# 
  2325  030D                     	;# 
  2326  030E                     	;# 
  2327  030F                     	;# 
  2328  0310                     	;# 
  2329  0310                     	;# 
  2330  0311                     	;# 
  2331  0312                     	;# 
  2332  0313                     	;# 
  2333  0314                     	;# 
  2334  0314                     	;# 
  2335  0315                     	;# 
  2336  0316                     	;# 
  2337  0317                     	;# 
  2338  0318                     	;# 
  2339  0318                     	;# 
  2340  0319                     	;# 
  2341  031A                     	;# 
  2342  031B                     	;# 
  2343  031C                     	;# 
  2344  031C                     	;# 
  2345  031D                     	;# 
  2346  031E                     	;# 
  2347  031F                     	;# 
  2348  038C                     	;# 
  2349  038C                     	;# 
  2350  038D                     	;# 
  2351  038E                     	;# 
  2352  0390                     	;# 
  2353  0390                     	;# 
  2354  0391                     	;# 
  2355  0392                     	;# 
  2356  040C                     	;# 
  2357  040D                     	;# 
  2358  040E                     	;# 
  2359  040F                     	;# 
  2360  0410                     	;# 
  2361  0411                     	;# 
  2362  0416                     	;# 
  2363  0416                     	;# 
  2364  0417                     	;# 
  2365  0418                     	;# 
  2366  0418                     	;# 
  2367  0419                     	;# 
  2368  041A                     	;# 
  2369  041A                     	;# 
  2370  041B                     	;# 
  2371  041C                     	;# 
  2372  041C                     	;# 
  2373  041D                     	;# 
  2374  041E                     	;# 
  2375  041F                     	;# 
  2376  048C                     	;# 
  2377  048C                     	;# 
  2378  048D                     	;# 
  2379  048E                     	;# 
  2380  048F                     	;# 
  2381  048F                     	;# 
  2382  0490                     	;# 
  2383  0491                     	;# 
  2384  0492                     	;# 
  2385  0492                     	;# 
  2386  0493                     	;# 
  2387  0494                     	;# 
  2388  0495                     	;# 
  2389  0495                     	;# 
  2390  0496                     	;# 
  2391  0497                     	;# 
  2392  0498                     	;# 
  2393  0499                     	;# 
  2394  049A                     	;# 
  2395  049B                     	;# 
  2396  049C                     	;# 
  2397  049D                     	;# 
  2398  050C                     	;# 
  2399  050C                     	;# 
  2400  050D                     	;# 
  2401  050E                     	;# 
  2402  050F                     	;# 
  2403  050F                     	;# 
  2404  0510                     	;# 
  2405  0511                     	;# 
  2406  0512                     	;# 
  2407  0512                     	;# 
  2408  0513                     	;# 
  2409  0514                     	;# 
  2410  0515                     	;# 
  2411  0515                     	;# 
  2412  0516                     	;# 
  2413  0517                     	;# 
  2414  0518                     	;# 
  2415  0519                     	;# 
  2416  051A                     	;# 
  2417  051B                     	;# 
  2418  051C                     	;# 
  2419  051D                     	;# 
  2420  058C                     	;# 
  2421  058C                     	;# 
  2422  058D                     	;# 
  2423  058E                     	;# 
  2424  058F                     	;# 
  2425  058F                     	;# 
  2426  0590                     	;# 
  2427  0591                     	;# 
  2428  0592                     	;# 
  2429  0593                     	;# 
  2430  060C                     	;# 
  2431  060D                     	;# 
  2432  060E                     	;# 
  2433  060F                     	;# 
  2434  0610                     	;# 
  2435  0611                     	;# 
  2436  0612                     	;# 
  2437  0613                     	;# 
  2438  0614                     	;# 
  2439  0616                     	;# 
  2440  0617                     	;# 
  2441  0618                     	;# 
  2442  0619                     	;# 
  2443  061A                     	;# 
  2444  061B                     	;# 
  2445  061C                     	;# 
  2446  061D                     	;# 
  2447  061E                     	;# 
  2448  068C                     	;# 
  2449  068D                     	;# 
  2450  068E                     	;# 
  2451  068F                     	;# 
  2452  0690                     	;# 
  2453  0691                     	;# 
  2454  0692                     	;# 
  2455  0693                     	;# 
  2456  0694                     	;# 
  2457  070C                     	;# 
  2458  070D                     	;# 
  2459  070E                     	;# 
  2460  070F                     	;# 
  2461  0710                     	;# 
  2462  0711                     	;# 
  2463  0712                     	;# 
  2464  0713                     	;# 
  2465  0714                     	;# 
  2466  0716                     	;# 
  2467  0717                     	;# 
  2468  0718                     	;# 
  2469  0719                     	;# 
  2470  071A                     	;# 
  2471  071B                     	;# 
  2472  071C                     	;# 
  2473  071D                     	;# 
  2474  071E                     	;# 
  2475  0796                     	;# 
  2476  0797                     	;# 
  2477  0798                     	;# 
  2478  0799                     	;# 
  2479  079A                     	;# 
  2480  079B                     	;# 
  2481  080C                     	;# 
  2482  080D                     	;# 
  2483  080E                     	;# 
  2484  080F                     	;# 
  2485  0810                     	;# 
  2486  0811                     	;# 
  2487  0812                     	;# 
  2488  0813                     	;# 
  2489  0814                     	;# 
  2490  081A                     	;# 
  2491  081B                     	;# 
  2492  081C                     	;# 
  2493  081D                     	;# 
  2494  081E                     	;# 
  2495  081F                     	;# 
  2496  088C                     	;# 
  2497  088D                     	;# 
  2498  088E                     	;# 
  2499  088F                     	;# 
  2500  0890                     	;# 
  2501  0891                     	;# 
  2502  0892                     	;# 
  2503  0893                     	;# 
  2504  0895                     	;# 
  2505  0896                     	;# 
  2506  0897                     	;# 
  2507  0898                     	;# 
  2508  0899                     	;# 
  2509  089A                     	;# 
  2510  089B                     	;# 
  2511  090C                     	;# 
  2512  090E                     	;# 
  2513  090F                     	;# 
  2514  091F                     	;# 
  2515  091F                     	;# 
  2516  098F                     	;# 
  2517  098F                     	;# 
  2518  0990                     	;# 
  2519  0991                     	;# 
  2520  0992                     	;# 
  2521  0993                     	;# 
  2522  0994                     	;# 
  2523  0995                     	;# 
  2524  0996                     	;# 
  2525  0997                     	;# 
  2526  0E0F                     	;# 
  2527  0E10                     	;# 
  2528  0E11                     	;# 
  2529  0E12                     	;# 
  2530  0E13                     	;# 
  2531  0E14                     	;# 
  2532  0E15                     	;# 
  2533  0E16                     	;# 
  2534  0E17                     	;# 
  2535  0E18                     	;# 
  2536  0E19                     	;# 
  2537  0E1A                     	;# 
  2538  0E1B                     	;# 
  2539  0E1C                     	;# 
  2540  0E1D                     	;# 
  2541  0E1E                     	;# 
  2542  0E1F                     	;# 
  2543  0E20                     	;# 
  2544  0E21                     	;# 
  2545  0E22                     	;# 
  2546  0E23                     	;# 
  2547  0E24                     	;# 
  2548  0E25                     	;# 
  2549  0E26                     	;# 
  2550  0E27                     	;# 
  2551  0E28                     	;# 
  2552  0E29                     	;# 
  2553  0E2A                     	;# 
  2554  0E2B                     	;# 
  2555  0E2C                     	;# 
  2556  0E2D                     	;# 
  2557  0E2E                     	;# 
  2558  0E2F                     	;# 
  2559  0E30                     	;# 
  2560  0E31                     	;# 
  2561  0E32                     	;# 
  2562  0E33                     	;# 
  2563  0E34                     	;# 
  2564  0E35                     	;# 
  2565  0E36                     	;# 
  2566  0E37                     	;# 
  2567  0E8F                     	;# 
  2568  0E90                     	;# 
  2569  0E91                     	;# 
  2570  0E92                     	;# 
  2571  0E93                     	;# 
  2572  0E94                     	;# 
  2573  0E95                     	;# 
  2574  0E96                     	;# 
  2575  0E97                     	;# 
  2576  0E9C                     	;# 
  2577  0E9D                     	;# 
  2578  0E9E                     	;# 
  2579  0EA1                     	;# 
  2580  0EA2                     	;# 
  2581  0EA3                     	;# 
  2582  0EA4                     	;# 
  2583  0EA5                     	;# 
  2584  0EA9                     	;# 
  2585  0EAA                     	;# 
  2586  0EAB                     	;# 
  2587  0EAC                     	;# 
  2588  0EB1                     	;# 
  2589  0EB2                     	;# 
  2590  0EB3                     	;# 
  2591  0EB8                     	;# 
  2592  0EB9                     	;# 
  2593  0EBA                     	;# 
  2594  0EBB                     	;# 
  2595  0EBC                     	;# 
  2596  0EBD                     	;# 
  2597  0EBE                     	;# 
  2598  0EC3                     	;# 
  2599  0EC5                     	;# 
  2600  0EC6                     	;# 
  2601  0EC7                     	;# 
  2602  0EC8                     	;# 
  2603  0EC9                     	;# 
  2604  0ECA                     	;# 
  2605  0ECB                     	;# 
  2606  0ECC                     	;# 
  2607  0F10                     	;# 
  2608  0F11                     	;# 
  2609  0F12                     	;# 
  2610  0F13                     	;# 
  2611  0F14                     	;# 
  2612  0F15                     	;# 
  2613  0F16                     	;# 
  2614  0F17                     	;# 
  2615  0F18                     	;# 
  2616  0F19                     	;# 
  2617  0F1A                     	;# 
  2618  0F1B                     	;# 
  2619  0F1C                     	;# 
  2620  0F1D                     	;# 
  2621  0F1E                     	;# 
  2622  0F1F                     	;# 
  2623  0F20                     	;# 
  2624  0F21                     	;# 
  2625  0F22                     	;# 
  2626  0F23                     	;# 
  2627  0F24                     	;# 
  2628  0F25                     	;# 
  2629  0F26                     	;# 
  2630  0F27                     	;# 
  2631  0F38                     	;# 
  2632  0F39                     	;# 
  2633  0F3A                     	;# 
  2634  0F3B                     	;# 
  2635  0F3C                     	;# 
  2636  0F3D                     	;# 
  2637  0F3E                     	;# 
  2638  0F3F                     	;# 
  2639  0F40                     	;# 
  2640  0F41                     	;# 
  2641  0F43                     	;# 
  2642  0F44                     	;# 
  2643  0F45                     	;# 
  2644  0F46                     	;# 
  2645  0F47                     	;# 
  2646  0F48                     	;# 
  2647  0F49                     	;# 
  2648  0F4A                     	;# 
  2649  0F4B                     	;# 
  2650  0F4C                     	;# 
  2651  0F4E                     	;# 
  2652  0F4F                     	;# 
  2653  0F50                     	;# 
  2654  0F51                     	;# 
  2655  0F52                     	;# 
  2656  0F53                     	;# 
  2657  0F54                     	;# 
  2658  0F55                     	;# 
  2659  0F56                     	;# 
  2660  0F57                     	;# 
  2661  0F65                     	;# 
  2662  0F68                     	;# 
  2663  0F69                     	;# 
  2664  0F6A                     	;# 
  2665  0F6B                     	;# 
  2666  0FE4                     	;# 
  2667  0FE5                     	;# 
  2668  0FE6                     	;# 
  2669  0FE7                     	;# 
  2670  0FE8                     	;# 
  2671  0FE9                     	;# 
  2672  0FEA                     	;# 
  2673  0FEB                     	;# 
  2674  0FED                     	;# 
  2675  0FEE                     	;# 
  2676  0FEF                     	;# 
  2677  0000                     	;# 
  2678  0001                     	;# 
  2679  0002                     	;# 
  2680  0003                     	;# 
  2681  0004                     	;# 
  2682  0005                     	;# 
  2683  0006                     	;# 
  2684  0007                     	;# 
  2685  0008                     	;# 
  2686  0009                     	;# 
  2687  000A                     	;# 
  2688  000B                     	;# 
  2689  000C                     	;# 
  2690  000D                     	;# 
  2691  000E                     	;# 
  2692  0010                     	;# 
  2693  0011                     	;# 
  2694  0012                     	;# 
  2695  0013                     	;# 
  2696  0016                     	;# 
  2697  0017                     	;# 
  2698  0018                     	;# 
  2699  001C                     	;# 
  2700  001C                     	;# 
  2701  001D                     	;# 
  2702  001D                     	;# 
  2703  001E                     	;# 
  2704  001F                     	;# 
  2705  008C                     	;# 
  2706  008C                     	;# 
  2707  008D                     	;# 
  2708  008E                     	;# 
  2709  008E                     	;# 
  2710  008F                     	;# 
  2711  0090                     	;# 
  2712  0090                     	;# 
  2713  0091                     	;# 
  2714  0093                     	;# 
  2715  0094                     	;# 
  2716  0095                     	;# 
  2717  0096                     	;# 
  2718  0097                     	;# 
  2719  0098                     	;# 
  2720  0099                     	;# 
  2721  009A                     	;# 
  2722  009B                     	;# 
  2723  009C                     	;# 
  2724  009D                     	;# 
  2725  009E                     	;# 
  2726  010C                     	;# 
  2727  010D                     	;# 
  2728  010E                     	;# 
  2729  010E                     	;# 
  2730  010F                     	;# 
  2731  0110                     	;# 
  2732  0110                     	;# 
  2733  0111                     	;# 
  2734  0112                     	;# 
  2735  0112                     	;# 
  2736  0113                     	;# 
  2737  0114                     	;# 
  2738  0114                     	;# 
  2739  0115                     	;# 
  2740  0116                     	;# 
  2741  0116                     	;# 
  2742  0117                     	;# 
  2743  0119                     	;# 
  2744  0119                     	;# 
  2745  0119                     	;# 
  2746  011A                     	;# 
  2747  011A                     	;# 
  2748  011A                     	;# 
  2749  011B                     	;# 
  2750  011B                     	;# 
  2751  011B                     	;# 
  2752  011B                     	;# 
  2753  011B                     	;# 
  2754  011C                     	;# 
  2755  011C                     	;# 
  2756  011C                     	;# 
  2757  011D                     	;# 
  2758  011D                     	;# 
  2759  011D                     	;# 
  2760  011E                     	;# 
  2761  011E                     	;# 
  2762  011E                     	;# 
  2763  011F                     	;# 
  2764  011F                     	;# 
  2765  011F                     	;# 
  2766  011F                     	;# 
  2767  011F                     	;# 
  2768  018C                     	;# 
  2769  018D                     	;# 
  2770  018E                     	;# 
  2771  018F                     	;# 
  2772  0190                     	;# 
  2773  0191                     	;# 
  2774  0192                     	;# 
  2775  0196                     	;# 
  2776  0197                     	;# 
  2777  0198                     	;# 
  2778  0199                     	;# 
  2779  019A                     	;# 
  2780  019B                     	;# 
  2781  019C                     	;# 
  2782  020C                     	;# 
  2783  020C                     	;# 
  2784  020D                     	;# 
  2785  020E                     	;# 
  2786  020F                     	;# 
  2787  020F                     	;# 
  2788  0210                     	;# 
  2789  0210                     	;# 
  2790  0211                     	;# 
  2791  0211                     	;# 
  2792  0212                     	;# 
  2793  0212                     	;# 
  2794  0213                     	;# 
  2795  0214                     	;# 
  2796  0215                     	;# 
  2797  0215                     	;# 
  2798  0216                     	;# 
  2799  0216                     	;# 
  2800  0217                     	;# 
  2801  0217                     	;# 
  2802  0218                     	;# 
  2803  0218                     	;# 
  2804  0219                     	;# 
  2805  021A                     	;# 
  2806  021B                     	;# 
  2807  021B                     	;# 
  2808  021C                     	;# 
  2809  021C                     	;# 
  2810  021D                     	;# 
  2811  021D                     	;# 
  2812  021E                     	;# 
  2813  021F                     	;# 
  2814  028C                     	;# 
  2815  028C                     	;# 
  2816  028D                     	;# 
  2817  028D                     	;# 
  2818  028E                     	;# 
  2819  028F                     	;# 
  2820  0290                     	;# 
  2821  0290                     	;# 
  2822  0291                     	;# 
  2823  0292                     	;# 
  2824  0292                     	;# 
  2825  0293                     	;# 
  2826  0293                     	;# 
  2827  0294                     	;# 
  2828  0295                     	;# 
  2829  0296                     	;# 
  2830  0296                     	;# 
  2831  0297                     	;# 
  2832  0298                     	;# 
  2833  0298                     	;# 
  2834  0299                     	;# 
  2835  0299                     	;# 
  2836  029A                     	;# 
  2837  029B                     	;# 
  2838  029C                     	;# 
  2839  029C                     	;# 
  2840  029D                     	;# 
  2841  030C                     	;# 
  2842  030C                     	;# 
  2843  030D                     	;# 
  2844  030E                     	;# 
  2845  030F                     	;# 
  2846  0310                     	;# 
  2847  0310                     	;# 
  2848  0311                     	;# 
  2849  0312                     	;# 
  2850  0313                     	;# 
  2851  0314                     	;# 
  2852  0314                     	;# 
  2853  0315                     	;# 
  2854  0316                     	;# 
  2855  0317                     	;# 
  2856  0318                     	;# 
  2857  0318                     	;# 
  2858  0319                     	;# 
  2859  031A                     	;# 
  2860  031B                     	;# 
  2861  031C                     	;# 
  2862  031C                     	;# 
  2863  031D                     	;# 
  2864  031E                     	;# 
  2865  031F                     	;# 
  2866  038C                     	;# 
  2867  038C                     	;# 
  2868  038D                     	;# 
  2869  038E                     	;# 
  2870  0390                     	;# 
  2871  0390                     	;# 
  2872  0391                     	;# 
  2873  0392                     	;# 
  2874  040C                     	;# 
  2875  040D                     	;# 
  2876  040E                     	;# 
  2877  040F                     	;# 
  2878  0410                     	;# 
  2879  0411                     	;# 
  2880  0416                     	;# 
  2881  0416                     	;# 
  2882  0417                     	;# 
  2883  0418                     	;# 
  2884  0418                     	;# 
  2885  0419                     	;# 
  2886  041A                     	;# 
  2887  041A                     	;# 
  2888  041B                     	;# 
  2889  041C                     	;# 
  2890  041C                     	;# 
  2891  041D                     	;# 
  2892  041E                     	;# 
  2893  041F                     	;# 
  2894  048C                     	;# 
  2895  048C                     	;# 
  2896  048D                     	;# 
  2897  048E                     	;# 
  2898  048F                     	;# 
  2899  048F                     	;# 
  2900  0490                     	;# 
  2901  0491                     	;# 
  2902  0492                     	;# 
  2903  0492                     	;# 
  2904  0493                     	;# 
  2905  0494                     	;# 
  2906  0495                     	;# 
  2907  0495                     	;# 
  2908  0496                     	;# 
  2909  0497                     	;# 
  2910  0498                     	;# 
  2911  0499                     	;# 
  2912  049A                     	;# 
  2913  049B                     	;# 
  2914  049C                     	;# 
  2915  049D                     	;# 
  2916  050C                     	;# 
  2917  050C                     	;# 
  2918  050D                     	;# 
  2919  050E                     	;# 
  2920  050F                     	;# 
  2921  050F                     	;# 
  2922  0510                     	;# 
  2923  0511                     	;# 
  2924  0512                     	;# 
  2925  0512                     	;# 
  2926  0513                     	;# 
  2927  0514                     	;# 
  2928  0515                     	;# 
  2929  0515                     	;# 
  2930  0516                     	;# 
  2931  0517                     	;# 
  2932  0518                     	;# 
  2933  0519                     	;# 
  2934  051A                     	;# 
  2935  051B                     	;# 
  2936  051C                     	;# 
  2937  051D                     	;# 
  2938  058C                     	;# 
  2939  058C                     	;# 
  2940  058D                     	;# 
  2941  058E                     	;# 
  2942  058F                     	;# 
  2943  058F                     	;# 
  2944  0590                     	;# 
  2945  0591                     	;# 
  2946  0592                     	;# 
  2947  0593                     	;# 
  2948  060C                     	;# 
  2949  060D                     	;# 
  2950  060E                     	;# 
  2951  060F                     	;# 
  2952  0610                     	;# 
  2953  0611                     	;# 
  2954  0612                     	;# 
  2955  0613                     	;# 
  2956  0614                     	;# 
  2957  0616                     	;# 
  2958  0617                     	;# 
  2959  0618                     	;# 
  2960  0619                     	;# 
  2961  061A                     	;# 
  2962  061B                     	;# 
  2963  061C                     	;# 
  2964  061D                     	;# 
  2965  061E                     	;# 
  2966  068C                     	;# 
  2967  068D                     	;# 
  2968  068E                     	;# 
  2969  068F                     	;# 
  2970  0690                     	;# 
  2971  0691                     	;# 
  2972  0692                     	;# 
  2973  0693                     	;# 
  2974  0694                     	;# 
  2975  070C                     	;# 
  2976  070D                     	;# 
  2977  070E                     	;# 
  2978  070F                     	;# 
  2979  0710                     	;# 
  2980  0711                     	;# 
  2981  0712                     	;# 
  2982  0713                     	;# 
  2983  0714                     	;# 
  2984  0716                     	;# 
  2985  0717                     	;# 
  2986  0718                     	;# 
  2987  0719                     	;# 
  2988  071A                     	;# 
  2989  071B                     	;# 
  2990  071C                     	;# 
  2991  071D                     	;# 
  2992  071E                     	;# 
  2993  0796                     	;# 
  2994  0797                     	;# 
  2995  0798                     	;# 
  2996  0799                     	;# 
  2997  079A                     	;# 
  2998  079B                     	;# 
  2999  080C                     	;# 
  3000  080D                     	;# 
  3001  080E                     	;# 
  3002  080F                     	;# 
  3003  0810                     	;# 
  3004  0811                     	;# 
  3005  0812                     	;# 
  3006  0813                     	;# 
  3007  0814                     	;# 
  3008  081A                     	;# 
  3009  081B                     	;# 
  3010  081C                     	;# 
  3011  081D                     	;# 
  3012  081E                     	;# 
  3013  081F                     	;# 
  3014  088C                     	;# 
  3015  088D                     	;# 
  3016  088E                     	;# 
  3017  088F                     	;# 
  3018  0890                     	;# 
  3019  0891                     	;# 
  3020  0892                     	;# 
  3021  0893                     	;# 
  3022  0895                     	;# 
  3023  0896                     	;# 
  3024  0897                     	;# 
  3025  0898                     	;# 
  3026  0899                     	;# 
  3027  089A                     	;# 
  3028  089B                     	;# 
  3029  090C                     	;# 
  3030  090E                     	;# 
  3031  090F                     	;# 
  3032  091F                     	;# 
  3033  091F                     	;# 
  3034  098F                     	;# 
  3035  098F                     	;# 
  3036  0990                     	;# 
  3037  0991                     	;# 
  3038  0992                     	;# 
  3039  0993                     	;# 
  3040  0994                     	;# 
  3041  0995                     	;# 
  3042  0996                     	;# 
  3043  0997                     	;# 
  3044  0E0F                     	;# 
  3045  0E10                     	;# 
  3046  0E11                     	;# 
  3047  0E12                     	;# 
  3048  0E13                     	;# 
  3049  0E14                     	;# 
  3050  0E15                     	;# 
  3051  0E16                     	;# 
  3052  0E17                     	;# 
  3053  0E18                     	;# 
  3054  0E19                     	;# 
  3055  0E1A                     	;# 
  3056  0E1B                     	;# 
  3057  0E1C                     	;# 
  3058  0E1D                     	;# 
  3059  0E1E                     	;# 
  3060  0E1F                     	;# 
  3061  0E20                     	;# 
  3062  0E21                     	;# 
  3063  0E22                     	;# 
  3064  0E23                     	;# 
  3065  0E24                     	;# 
  3066  0E25                     	;# 
  3067  0E26                     	;# 
  3068  0E27                     	;# 
  3069  0E28                     	;# 
  3070  0E29                     	;# 
  3071  0E2A                     	;# 
  3072  0E2B                     	;# 
  3073  0E2C                     	;# 
  3074  0E2D                     	;# 
  3075  0E2E                     	;# 
  3076  0E2F                     	;# 
  3077  0E30                     	;# 
  3078  0E31                     	;# 
  3079  0E32                     	;# 
  3080  0E33                     	;# 
  3081  0E34                     	;# 
  3082  0E35                     	;# 
  3083  0E36                     	;# 
  3084  0E37                     	;# 
  3085  0E8F                     	;# 
  3086  0E90                     	;# 
  3087  0E91                     	;# 
  3088  0E92                     	;# 
  3089  0E93                     	;# 
  3090  0E94                     	;# 
  3091  0E95                     	;# 
  3092  0E96                     	;# 
  3093  0E97                     	;# 
  3094  0E9C                     	;# 
  3095  0E9D                     	;# 
  3096  0E9E                     	;# 
  3097  0EA1                     	;# 
  3098  0EA2                     	;# 
  3099  0EA3                     	;# 
  3100  0EA4                     	;# 
  3101  0EA5                     	;# 
  3102  0EA9                     	;# 
  3103  0EAA                     	;# 
  3104  0EAB                     	;# 
  3105  0EAC                     	;# 
  3106  0EB1                     	;# 
  3107  0EB2                     	;# 
  3108  0EB3                     	;# 
  3109  0EB8                     	;# 
  3110  0EB9                     	;# 
  3111  0EBA                     	;# 
  3112  0EBB                     	;# 
  3113  0EBC                     	;# 
  3114  0EBD                     	;# 
  3115  0EBE                     	;# 
  3116  0EC3                     	;# 
  3117  0EC5                     	;# 
  3118  0EC6                     	;# 
  3119  0EC7                     	;# 
  3120  0EC8                     	;# 
  3121  0EC9                     	;# 
  3122  0ECA                     	;# 
  3123  0ECB                     	;# 
  3124  0ECC                     	;# 
  3125  0F10                     	;# 
  3126  0F11                     	;# 
  3127  0F12                     	;# 
  3128  0F13                     	;# 
  3129  0F14                     	;# 
  3130  0F15                     	;# 
  3131  0F16                     	;# 
  3132  0F17                     	;# 
  3133  0F18                     	;# 
  3134  0F19                     	;# 
  3135  0F1A                     	;# 
  3136  0F1B                     	;# 
  3137  0F1C                     	;# 
  3138  0F1D                     	;# 
  3139  0F1E                     	;# 
  3140  0F1F                     	;# 
  3141  0F20                     	;# 
  3142  0F21                     	;# 
  3143  0F22                     	;# 
  3144  0F23                     	;# 
  3145  0F24                     	;# 
  3146  0F25                     	;# 
  3147  0F26                     	;# 
  3148  0F27                     	;# 
  3149  0F38                     	;# 
  3150  0F39                     	;# 
  3151  0F3A                     	;# 
  3152  0F3B                     	;# 
  3153  0F3C                     	;# 
  3154  0F3D                     	;# 
  3155  0F3E                     	;# 
  3156  0F3F                     	;# 
  3157  0F40                     	;# 
  3158  0F41                     	;# 
  3159  0F43                     	;# 
  3160  0F44                     	;# 
  3161  0F45                     	;# 
  3162  0F46                     	;# 
  3163  0F47                     	;# 
  3164  0F48                     	;# 
  3165  0F49                     	;# 
  3166  0F4A                     	;# 
  3167  0F4B                     	;# 
  3168  0F4C                     	;# 
  3169  0F4E                     	;# 
  3170  0F4F                     	;# 
  3171  0F50                     	;# 
  3172  0F51                     	;# 
  3173  0F52                     	;# 
  3174  0F53                     	;# 
  3175  0F54                     	;# 
  3176  0F55                     	;# 
  3177  0F56                     	;# 
  3178  0F57                     	;# 
  3179  0F65                     	;# 
  3180  0F68                     	;# 
  3181  0F69                     	;# 
  3182  0F6A                     	;# 
  3183  0F6B                     	;# 
  3184  0FE4                     	;# 
  3185  0FE5                     	;# 
  3186  0FE6                     	;# 
  3187  0FE7                     	;# 
  3188  0FE8                     	;# 
  3189  0FE9                     	;# 
  3190  0FEA                     	;# 
  3191  0FEB                     	;# 
  3192  0FED                     	;# 
  3193  0FEE                     	;# 
  3194  0FEF                     	;# 
  3195  0000                     	;# 
  3196  0001                     	;# 
  3197  0002                     	;# 
  3198  0003                     	;# 
  3199  0004                     	;# 
  3200  0005                     	;# 
  3201  0006                     	;# 
  3202  0007                     	;# 
  3203  0008                     	;# 
  3204  0009                     	;# 
  3205  000A                     	;# 
  3206  000B                     	;# 
  3207  000C                     	;# 
  3208  000D                     	;# 
  3209  000E                     	;# 
  3210  0010                     	;# 
  3211  0011                     	;# 
  3212  0012                     	;# 
  3213  0013                     	;# 
  3214  0016                     	;# 
  3215  0017                     	;# 
  3216  0018                     	;# 
  3217  001C                     	;# 
  3218  001C                     	;# 
  3219  001D                     	;# 
  3220  001D                     	;# 
  3221  001E                     	;# 
  3222  001F                     	;# 
  3223  008C                     	;# 
  3224  008C                     	;# 
  3225  008D                     	;# 
  3226  008E                     	;# 
  3227  008E                     	;# 
  3228  008F                     	;# 
  3229  0090                     	;# 
  3230  0090                     	;# 
  3231  0091                     	;# 
  3232  0093                     	;# 
  3233  0094                     	;# 
  3234  0095                     	;# 
  3235  0096                     	;# 
  3236  0097                     	;# 
  3237  0098                     	;# 
  3238  0099                     	;# 
  3239  009A                     	;# 
  3240  009B                     	;# 
  3241  009C                     	;# 
  3242  009D                     	;# 
  3243  009E                     	;# 
  3244  010C                     	;# 
  3245  010D                     	;# 
  3246  010E                     	;# 
  3247  010E                     	;# 
  3248  010F                     	;# 
  3249  0110                     	;# 
  3250  0110                     	;# 
  3251  0111                     	;# 
  3252  0112                     	;# 
  3253  0112                     	;# 
  3254  0113                     	;# 
  3255  0114                     	;# 
  3256  0114                     	;# 
  3257  0115                     	;# 
  3258  0116                     	;# 
  3259  0116                     	;# 
  3260  0117                     	;# 
  3261  0119                     	;# 
  3262  0119                     	;# 
  3263  0119                     	;# 
  3264  011A                     	;# 
  3265  011A                     	;# 
  3266  011A                     	;# 
  3267  011B                     	;# 
  3268  011B                     	;# 
  3269  011B                     	;# 
  3270  011B                     	;# 
  3271  011B                     	;# 
  3272  011C                     	;# 
  3273  011C                     	;# 
  3274  011C                     	;# 
  3275  011D                     	;# 
  3276  011D                     	;# 
  3277  011D                     	;# 
  3278  011E                     	;# 
  3279  011E                     	;# 
  3280  011E                     	;# 
  3281  011F                     	;# 
  3282  011F                     	;# 
  3283  011F                     	;# 
  3284  011F                     	;# 
  3285  011F                     	;# 
  3286  018C                     	;# 
  3287  018D                     	;# 
  3288  018E                     	;# 
  3289  018F                     	;# 
  3290  0190                     	;# 
  3291  0191                     	;# 
  3292  0192                     	;# 
  3293  0196                     	;# 
  3294  0197                     	;# 
  3295  0198                     	;# 
  3296  0199                     	;# 
  3297  019A                     	;# 
  3298  019B                     	;# 
  3299  019C                     	;# 
  3300  020C                     	;# 
  3301  020C                     	;# 
  3302  020D                     	;# 
  3303  020E                     	;# 
  3304  020F                     	;# 
  3305  020F                     	;# 
  3306  0210                     	;# 
  3307  0210                     	;# 
  3308  0211                     	;# 
  3309  0211                     	;# 
  3310  0212                     	;# 
  3311  0212                     	;# 
  3312  0213                     	;# 
  3313  0214                     	;# 
  3314  0215                     	;# 
  3315  0215                     	;# 
  3316  0216                     	;# 
  3317  0216                     	;# 
  3318  0217                     	;# 
  3319  0217                     	;# 
  3320  0218                     	;# 
  3321  0218                     	;# 
  3322  0219                     	;# 
  3323  021A                     	;# 
  3324  021B                     	;# 
  3325  021B                     	;# 
  3326  021C                     	;# 
  3327  021C                     	;# 
  3328  021D                     	;# 
  3329  021D                     	;# 
  3330  021E                     	;# 
  3331  021F                     	;# 
  3332  028C                     	;# 
  3333  028C                     	;# 
  3334  028D                     	;# 
  3335  028D                     	;# 
  3336  028E                     	;# 
  3337  028F                     	;# 
  3338  0290                     	;# 
  3339  0290                     	;# 
  3340  0291                     	;# 
  3341  0292                     	;# 
  3342  0292                     	;# 
  3343  0293                     	;# 
  3344  0293                     	;# 
  3345  0294                     	;# 
  3346  0295                     	;# 
  3347  0296                     	;# 
  3348  0296                     	;# 
  3349  0297                     	;# 
  3350  0298                     	;# 
  3351  0298                     	;# 
  3352  0299                     	;# 
  3353  0299                     	;# 
  3354  029A                     	;# 
  3355  029B                     	;# 
  3356  029C                     	;# 
  3357  029C                     	;# 
  3358  029D                     	;# 
  3359  030C                     	;# 
  3360  030C                     	;# 
  3361  030D                     	;# 
  3362  030E                     	;# 
  3363  030F                     	;# 
  3364  0310                     	;# 
  3365  0310                     	;# 
  3366  0311                     	;# 
  3367  0312                     	;# 
  3368  0313                     	;# 
  3369  0314                     	;# 
  3370  0314                     	;# 
  3371  0315                     	;# 
  3372  0316                     	;# 
  3373  0317                     	;# 
  3374  0318                     	;# 
  3375  0318                     	;# 
  3376  0319                     	;# 
  3377  031A                     	;# 
  3378  031B                     	;# 
  3379  031C                     	;# 
  3380  031C                     	;# 
  3381  031D                     	;# 
  3382  031E                     	;# 
  3383  031F                     	;# 
  3384  038C                     	;# 
  3385  038C                     	;# 
  3386  038D                     	;# 
  3387  038E                     	;# 
  3388  0390                     	;# 
  3389  0390                     	;# 
  3390  0391                     	;# 
  3391  0392                     	;# 
  3392  040C                     	;# 
  3393  040D                     	;# 
  3394  040E                     	;# 
  3395  040F                     	;# 
  3396  0410                     	;# 
  3397  0411                     	;# 
  3398  0416                     	;# 
  3399  0416                     	;# 
  3400  0417                     	;# 
  3401  0418                     	;# 
  3402  0418                     	;# 
  3403  0419                     	;# 
  3404  041A                     	;# 
  3405  041A                     	;# 
  3406  041B                     	;# 
  3407  041C                     	;# 
  3408  041C                     	;# 
  3409  041D                     	;# 
  3410  041E                     	;# 
  3411  041F                     	;# 
  3412  048C                     	;# 
  3413  048C                     	;# 
  3414  048D                     	;# 
  3415  048E                     	;# 
  3416  048F                     	;# 
  3417  048F                     	;# 
  3418  0490                     	;# 
  3419  0491                     	;# 
  3420  0492                     	;# 
  3421  0492                     	;# 
  3422  0493                     	;# 
  3423  0494                     	;# 
  3424  0495                     	;# 
  3425  0495                     	;# 
  3426  0496                     	;# 
  3427  0497                     	;# 
  3428  0498                     	;# 
  3429  0499                     	;# 
  3430  049A                     	;# 
  3431  049B                     	;# 
  3432  049C                     	;# 
  3433  049D                     	;# 
  3434  050C                     	;# 
  3435  050C                     	;# 
  3436  050D                     	;# 
  3437  050E                     	;# 
  3438  050F                     	;# 
  3439  050F                     	;# 
  3440  0510                     	;# 
  3441  0511                     	;# 
  3442  0512                     	;# 
  3443  0512                     	;# 
  3444  0513                     	;# 
  3445  0514                     	;# 
  3446  0515                     	;# 
  3447  0515                     	;# 
  3448  0516                     	;# 
  3449  0517                     	;# 
  3450  0518                     	;# 
  3451  0519                     	;# 
  3452  051A                     	;# 
  3453  051B                     	;# 
  3454  051C                     	;# 
  3455  051D                     	;# 
  3456  058C                     	;# 
  3457  058C                     	;# 
  3458  058D                     	;# 
  3459  058E                     	;# 
  3460  058F                     	;# 
  3461  058F                     	;# 
  3462  0590                     	;# 
  3463  0591                     	;# 
  3464  0592                     	;# 
  3465  0593                     	;# 
  3466  060C                     	;# 
  3467  060D                     	;# 
  3468  060E                     	;# 
  3469  060F                     	;# 
  3470  0610                     	;# 
  3471  0611                     	;# 
  3472  0612                     	;# 
  3473  0613                     	;# 
  3474  0614                     	;# 
  3475  0616                     	;# 
  3476  0617                     	;# 
  3477  0618                     	;# 
  3478  0619                     	;# 
  3479  061A                     	;# 
  3480  061B                     	;# 
  3481  061C                     	;# 
  3482  061D                     	;# 
  3483  061E                     	;# 
  3484  068C                     	;# 
  3485  068D                     	;# 
  3486  068E                     	;# 
  3487  068F                     	;# 
  3488  0690                     	;# 
  3489  0691                     	;# 
  3490  0692                     	;# 
  3491  0693                     	;# 
  3492  0694                     	;# 
  3493  070C                     	;# 
  3494  070D                     	;# 
  3495  070E                     	;# 
  3496  070F                     	;# 
  3497  0710                     	;# 
  3498  0711                     	;# 
  3499  0712                     	;# 
  3500  0713                     	;# 
  3501  0714                     	;# 
  3502  0716                     	;# 
  3503  0717                     	;# 
  3504  0718                     	;# 
  3505  0719                     	;# 
  3506  071A                     	;# 
  3507  071B                     	;# 
  3508  071C                     	;# 
  3509  071D                     	;# 
  3510  071E                     	;# 
  3511  0796                     	;# 
  3512  0797                     	;# 
  3513  0798                     	;# 
  3514  0799                     	;# 
  3515  079A                     	;# 
  3516  079B                     	;# 
  3517  080C                     	;# 
  3518  080D                     	;# 
  3519  080E                     	;# 
  3520  080F                     	;# 
  3521  0810                     	;# 
  3522  0811                     	;# 
  3523  0812                     	;# 
  3524  0813                     	;# 
  3525  0814                     	;# 
  3526  081A                     	;# 
  3527  081B                     	;# 
  3528  081C                     	;# 
  3529  081D                     	;# 
  3530  081E                     	;# 
  3531  081F                     	;# 
  3532  088C                     	;# 
  3533  088D                     	;# 
  3534  088E                     	;# 
  3535  088F                     	;# 
  3536  0890                     	;# 
  3537  0891                     	;# 
  3538  0892                     	;# 
  3539  0893                     	;# 
  3540  0895                     	;# 
  3541  0896                     	;# 
  3542  0897                     	;# 
  3543  0898                     	;# 
  3544  0899                     	;# 
  3545  089A                     	;# 
  3546  089B                     	;# 
  3547  090C                     	;# 
  3548  090E                     	;# 
  3549  090F                     	;# 
  3550  091F                     	;# 
  3551  091F                     	;# 
  3552  098F                     	;# 
  3553  098F                     	;# 
  3554  0990                     	;# 
  3555  0991                     	;# 
  3556  0992                     	;# 
  3557  0993                     	;# 
  3558  0994                     	;# 
  3559  0995                     	;# 
  3560  0996                     	;# 
  3561  0997                     	;# 
  3562  0E0F                     	;# 
  3563  0E10                     	;# 
  3564  0E11                     	;# 
  3565  0E12                     	;# 
  3566  0E13                     	;# 
  3567  0E14                     	;# 
  3568  0E15                     	;# 
  3569  0E16                     	;# 
  3570  0E17                     	;# 
  3571  0E18                     	;# 
  3572  0E19                     	;# 
  3573  0E1A                     	;# 
  3574  0E1B                     	;# 
  3575  0E1C                     	;# 
  3576  0E1D                     	;# 
  3577  0E1E                     	;# 
  3578  0E1F                     	;# 
  3579  0E20                     	;# 
  3580  0E21                     	;# 
  3581  0E22                     	;# 
  3582  0E23                     	;# 
  3583  0E24                     	;# 
  3584  0E25                     	;# 
  3585  0E26                     	;# 
  3586  0E27                     	;# 
  3587  0E28                     	;# 
  3588  0E29                     	;# 
  3589  0E2A                     	;# 
  3590  0E2B                     	;# 
  3591  0E2C                     	;# 
  3592  0E2D                     	;# 
  3593  0E2E                     	;# 
  3594  0E2F                     	;# 
  3595  0E30                     	;# 
  3596  0E31                     	;# 
  3597  0E32                     	;# 
  3598  0E33                     	;# 
  3599  0E34                     	;# 
  3600  0E35                     	;# 
  3601  0E36                     	;# 
  3602  0E37                     	;# 
  3603  0E8F                     	;# 
  3604  0E90                     	;# 
  3605  0E91                     	;# 
  3606  0E92                     	;# 
  3607  0E93                     	;# 
  3608  0E94                     	;# 
  3609  0E95                     	;# 
  3610  0E96                     	;# 
  3611  0E97                     	;# 
  3612  0E9C                     	;# 
  3613  0E9D                     	;# 
  3614  0E9E                     	;# 
  3615  0EA1                     	;# 
  3616  0EA2                     	;# 
  3617  0EA3                     	;# 
  3618  0EA4                     	;# 
  3619  0EA5                     	;# 
  3620  0EA9                     	;# 
  3621  0EAA                     	;# 
  3622  0EAB                     	;# 
  3623  0EAC                     	;# 
  3624  0EB1                     	;# 
  3625  0EB2                     	;# 
  3626  0EB3                     	;# 
  3627  0EB8                     	;# 
  3628  0EB9                     	;# 
  3629  0EBA                     	;# 
  3630  0EBB                     	;# 
  3631  0EBC                     	;# 
  3632  0EBD                     	;# 
  3633  0EBE                     	;# 
  3634  0EC3                     	;# 
  3635  0EC5                     	;# 
  3636  0EC6                     	;# 
  3637  0EC7                     	;# 
  3638  0EC8                     	;# 
  3639  0EC9                     	;# 
  3640  0ECA                     	;# 
  3641  0ECB                     	;# 
  3642  0ECC                     	;# 
  3643  0F10                     	;# 
  3644  0F11                     	;# 
  3645  0F12                     	;# 
  3646  0F13                     	;# 
  3647  0F14                     	;# 
  3648  0F15                     	;# 
  3649  0F16                     	;# 
  3650  0F17                     	;# 
  3651  0F18                     	;# 
  3652  0F19                     	;# 
  3653  0F1A                     	;# 
  3654  0F1B                     	;# 
  3655  0F1C                     	;# 
  3656  0F1D                     	;# 
  3657  0F1E                     	;# 
  3658  0F1F                     	;# 
  3659  0F20                     	;# 
  3660  0F21                     	;# 
  3661  0F22                     	;# 
  3662  0F23                     	;# 
  3663  0F24                     	;# 
  3664  0F25                     	;# 
  3665  0F26                     	;# 
  3666  0F27                     	;# 
  3667  0F38                     	;# 
  3668  0F39                     	;# 
  3669  0F3A                     	;# 
  3670  0F3B                     	;# 
  3671  0F3C                     	;# 
  3672  0F3D                     	;# 
  3673  0F3E                     	;# 
  3674  0F3F                     	;# 
  3675  0F40                     	;# 
  3676  0F41                     	;# 
  3677  0F43                     	;# 
  3678  0F44                     	;# 
  3679  0F45                     	;# 
  3680  0F46                     	;# 
  3681  0F47                     	;# 
  3682  0F48                     	;# 
  3683  0F49                     	;# 
  3684  0F4A                     	;# 
  3685  0F4B                     	;# 
  3686  0F4C                     	;# 
  3687  0F4E                     	;# 
  3688  0F4F                     	;# 
  3689  0F50                     	;# 
  3690  0F51                     	;# 
  3691  0F52                     	;# 
  3692  0F53                     	;# 
  3693  0F54                     	;# 
  3694  0F55                     	;# 
  3695  0F56                     	;# 
  3696  0F57                     	;# 
  3697  0F65                     	;# 
  3698  0F68                     	;# 
  3699  0F69                     	;# 
  3700  0F6A                     	;# 
  3701  0F6B                     	;# 
  3702  0FE4                     	;# 
  3703  0FE5                     	;# 
  3704  0FE6                     	;# 
  3705  0FE7                     	;# 
  3706  0FE8                     	;# 
  3707  0FE9                     	;# 
  3708  0FEA                     	;# 
  3709  0FEB                     	;# 
  3710  0FED                     	;# 
  3711  0FEE                     	;# 
  3712  0FEF                     	;# 
  3713  0000                     	;# 
  3714  0001                     	;# 
  3715  0002                     	;# 
  3716  0003                     	;# 
  3717  0004                     	;# 
  3718  0005                     	;# 
  3719  0006                     	;# 
  3720  0007                     	;# 
  3721  0008                     	;# 
  3722  0009                     	;# 
  3723  000A                     	;# 
  3724  000B                     	;# 
  3725  000C                     	;# 
  3726  000D                     	;# 
  3727  000E                     	;# 
  3728  0010                     	;# 
  3729  0011                     	;# 
  3730  0012                     	;# 
  3731  0013                     	;# 
  3732  0016                     	;# 
  3733  0017                     	;# 
  3734  0018                     	;# 
  3735  001C                     	;# 
  3736  001C                     	;# 
  3737  001D                     	;# 
  3738  001D                     	;# 
  3739  001E                     	;# 
  3740  001F                     	;# 
  3741  008C                     	;# 
  3742  008C                     	;# 
  3743  008D                     	;# 
  3744  008E                     	;# 
  3745  008E                     	;# 
  3746  008F                     	;# 
  3747  0090                     	;# 
  3748  0090                     	;# 
  3749  0091                     	;# 
  3750  0093                     	;# 
  3751  0094                     	;# 
  3752  0095                     	;# 
  3753  0096                     	;# 
  3754  0097                     	;# 
  3755  0098                     	;# 
  3756  0099                     	;# 
  3757  009A                     	;# 
  3758  009B                     	;# 
  3759  009C                     	;# 
  3760  009D                     	;# 
  3761  009E                     	;# 
  3762  010C                     	;# 
  3763  010D                     	;# 
  3764  010E                     	;# 
  3765  010E                     	;# 
  3766  010F                     	;# 
  3767  0110                     	;# 
  3768  0110                     	;# 
  3769  0111                     	;# 
  3770  0112                     	;# 
  3771  0112                     	;# 
  3772  0113                     	;# 
  3773  0114                     	;# 
  3774  0114                     	;# 
  3775  0115                     	;# 
  3776  0116                     	;# 
  3777  0116                     	;# 
  3778  0117                     	;# 
  3779  0119                     	;# 
  3780  0119                     	;# 
  3781  0119                     	;# 
  3782  011A                     	;# 
  3783  011A                     	;# 
  3784  011A                     	;# 
  3785  011B                     	;# 
  3786  011B                     	;# 
  3787  011B                     	;# 
  3788  011B                     	;# 
  3789  011B                     	;# 
  3790  011C                     	;# 
  3791  011C                     	;# 
  3792  011C                     	;# 
  3793  011D                     	;# 
  3794  011D                     	;# 
  3795  011D                     	;# 
  3796  011E                     	;# 
  3797  011E                     	;# 
  3798  011E                     	;# 
  3799  011F                     	;# 
  3800  011F                     	;# 
  3801  011F                     	;# 
  3802  011F                     	;# 
  3803  011F                     	;# 
  3804  018C                     	;# 
  3805  018D                     	;# 
  3806  018E                     	;# 
  3807  018F                     	;# 
  3808  0190                     	;# 
  3809  0191                     	;# 
  3810  0192                     	;# 
  3811  0196                     	;# 
  3812  0197                     	;# 
  3813  0198                     	;# 
  3814  0199                     	;# 
  3815  019A                     	;# 
  3816  019B                     	;# 
  3817  019C                     	;# 
  3818  020C                     	;# 
  3819  020C                     	;# 
  3820  020D                     	;# 
  3821  020E                     	;# 
  3822  020F                     	;# 
  3823  020F                     	;# 
  3824  0210                     	;# 
  3825  0210                     	;# 
  3826  0211                     	;# 
  3827  0211                     	;# 
  3828  0212                     	;# 
  3829  0212                     	;# 
  3830  0213                     	;# 
  3831  0214                     	;# 
  3832  0215                     	;# 
  3833  0215                     	;# 
  3834  0216                     	;# 
  3835  0216                     	;# 
  3836  0217                     	;# 
  3837  0217                     	;# 
  3838  0218                     	;# 
  3839  0218                     	;# 
  3840  0219                     	;# 
  3841  021A                     	;# 
  3842  021B                     	;# 
  3843  021B                     	;# 
  3844  021C                     	;# 
  3845  021C                     	;# 
  3846  021D                     	;# 
  3847  021D                     	;# 
  3848  021E                     	;# 
  3849  021F                     	;# 
  3850  028C                     	;# 
  3851  028C                     	;# 
  3852  028D                     	;# 
  3853  028D                     	;# 
  3854  028E                     	;# 
  3855  028F                     	;# 
  3856  0290                     	;# 
  3857  0290                     	;# 
  3858  0291                     	;# 
  3859  0292                     	;# 
  3860  0292                     	;# 
  3861  0293                     	;# 
  3862  0293                     	;# 
  3863  0294                     	;# 
  3864  0295                     	;# 
  3865  0296                     	;# 
  3866  0296                     	;# 
  3867  0297                     	;# 
  3868  0298                     	;# 
  3869  0298                     	;# 
  3870  0299                     	;# 
  3871  0299                     	;# 
  3872  029A                     	;# 
  3873  029B                     	;# 
  3874  029C                     	;# 
  3875  029C                     	;# 
  3876  029D                     	;# 
  3877  030C                     	;# 
  3878  030C                     	;# 
  3879  030D                     	;# 
  3880  030E                     	;# 
  3881  030F                     	;# 
  3882  0310                     	;# 
  3883  0310                     	;# 
  3884  0311                     	;# 
  3885  0312                     	;# 
  3886  0313                     	;# 
  3887  0314                     	;# 
  3888  0314                     	;# 
  3889  0315                     	;# 
  3890  0316                     	;# 
  3891  0317                     	;# 
  3892  0318                     	;# 
  3893  0318                     	;# 
  3894  0319                     	;# 
  3895  031A                     	;# 
  3896  031B                     	;# 
  3897  031C                     	;# 
  3898  031C                     	;# 
  3899  031D                     	;# 
  3900  031E                     	;# 
  3901  031F                     	;# 
  3902  038C                     	;# 
  3903  038C                     	;# 
  3904  038D                     	;# 
  3905  038E                     	;# 
  3906  0390                     	;# 
  3907  0390                     	;# 
  3908  0391                     	;# 
  3909  0392                     	;# 
  3910  040C                     	;# 
  3911  040D                     	;# 
  3912  040E                     	;# 
  3913  040F                     	;# 
  3914  0410                     	;# 
  3915  0411                     	;# 
  3916  0416                     	;# 
  3917  0416                     	;# 
  3918  0417                     	;# 
  3919  0418                     	;# 
  3920  0418                     	;# 
  3921  0419                     	;# 
  3922  041A                     	;# 
  3923  041A                     	;# 
  3924  041B                     	;# 
  3925  041C                     	;# 
  3926  041C                     	;# 
  3927  041D                     	;# 
  3928  041E                     	;# 
  3929  041F                     	;# 
  3930  048C                     	;# 
  3931  048C                     	;# 
  3932  048D                     	;# 
  3933  048E                     	;# 
  3934  048F                     	;# 
  3935  048F                     	;# 
  3936  0490                     	;# 
  3937  0491                     	;# 
  3938  0492                     	;# 
  3939  0492                     	;# 
  3940  0493                     	;# 
  3941  0494                     	;# 
  3942  0495                     	;# 
  3943  0495                     	;# 
  3944  0496                     	;# 
  3945  0497                     	;# 
  3946  0498                     	;# 
  3947  0499                     	;# 
  3948  049A                     	;# 
  3949  049B                     	;# 
  3950  049C                     	;# 
  3951  049D                     	;# 
  3952  050C                     	;# 
  3953  050C                     	;# 
  3954  050D                     	;# 
  3955  050E                     	;# 
  3956  050F                     	;# 
  3957  050F                     	;# 
  3958  0510                     	;# 
  3959  0511                     	;# 
  3960  0512                     	;# 
  3961  0512                     	;# 
  3962  0513                     	;# 
  3963  0514                     	;# 
  3964  0515                     	;# 
  3965  0515                     	;# 
  3966  0516                     	;# 
  3967  0517                     	;# 
  3968  0518                     	;# 
  3969  0519                     	;# 
  3970  051A                     	;# 
  3971  051B                     	;# 
  3972  051C                     	;# 
  3973  051D                     	;# 
  3974  058C                     	;# 
  3975  058C                     	;# 
  3976  058D                     	;# 
  3977  058E                     	;# 
  3978  058F                     	;# 
  3979  058F                     	;# 
  3980  0590                     	;# 
  3981  0591                     	;# 
  3982  0592                     	;# 
  3983  0593                     	;# 
  3984  060C                     	;# 
  3985  060D                     	;# 
  3986  060E                     	;# 
  3987  060F                     	;# 
  3988  0610                     	;# 
  3989  0611                     	;# 
  3990  0612                     	;# 
  3991  0613                     	;# 
  3992  0614                     	;# 
  3993  0616                     	;# 
  3994  0617                     	;# 
  3995  0618                     	;# 
  3996  0619                     	;# 
  3997  061A                     	;# 
  3998  061B                     	;# 
  3999  061C                     	;# 
  4000  061D                     	;# 
  4001  061E                     	;# 
  4002  068C                     	;# 
  4003  068D                     	;# 
  4004  068E                     	;# 
  4005  068F                     	;# 
  4006  0690                     	;# 
  4007  0691                     	;# 
  4008  0692                     	;# 
  4009  0693                     	;# 
  4010  0694                     	;# 
  4011  070C                     	;# 
  4012  070D                     	;# 
  4013  070E                     	;# 
  4014  070F                     	;# 
  4015  0710                     	;# 
  4016  0711                     	;# 
  4017  0712                     	;# 
  4018  0713                     	;# 
  4019  0714                     	;# 
  4020  0716                     	;# 
  4021  0717                     	;# 
  4022  0718                     	;# 
  4023  0719                     	;# 
  4024  071A                     	;# 
  4025  071B                     	;# 
  4026  071C                     	;# 
  4027  071D                     	;# 
  4028  071E                     	;# 
  4029  0796                     	;# 
  4030  0797                     	;# 
  4031  0798                     	;# 
  4032  0799                     	;# 
  4033  079A                     	;# 
  4034  079B                     	;# 
  4035  080C                     	;# 
  4036  080D                     	;# 
  4037  080E                     	;# 
  4038  080F                     	;# 
  4039  0810                     	;# 
  4040  0811                     	;# 
  4041  0812                     	;# 
  4042  0813                     	;# 
  4043  0814                     	;# 
  4044  081A                     	;# 
  4045  081B                     	;# 
  4046  081C                     	;# 
  4047  081D                     	;# 
  4048  081E                     	;# 
  4049  081F                     	;# 
  4050  088C                     	;# 
  4051  088D                     	;# 
  4052  088E                     	;# 
  4053  088F                     	;# 
  4054  0890                     	;# 
  4055  0891                     	;# 
  4056  0892                     	;# 
  4057  0893                     	;# 
  4058  0895                     	;# 
  4059  0896                     	;# 
  4060  0897                     	;# 
  4061  0898                     	;# 
  4062  0899                     	;# 
  4063  089A                     	;# 
  4064  089B                     	;# 
  4065  090C                     	;# 
  4066  090E                     	;# 
  4067  090F                     	;# 
  4068  091F                     	;# 
  4069  091F                     	;# 
  4070  098F                     	;# 
  4071  098F                     	;# 
  4072  0990                     	;# 
  4073  0991                     	;# 
  4074  0992                     	;# 
  4075  0993                     	;# 
  4076  0994                     	;# 
  4077  0995                     	;# 
  4078  0996                     	;# 
  4079  0997                     	;# 
  4080  0E0F                     	;# 
  4081  0E10                     	;# 
  4082  0E11                     	;# 
  4083  0E12                     	;# 
  4084  0E13                     	;# 
  4085  0E14                     	;# 
  4086  0E15                     	;# 
  4087  0E16                     	;# 
  4088  0E17                     	;# 
  4089  0E18                     	;# 
  4090  0E19                     	;# 
  4091  0E1A                     	;# 
  4092  0E1B                     	;# 
  4093  0E1C                     	;# 
  4094  0E1D                     	;# 
  4095  0E1E                     	;# 
  4096  0E1F                     	;# 
  4097  0E20                     	;# 
  4098  0E21                     	;# 
  4099  0E22                     	;# 
  4100  0E23                     	;# 
  4101  0E24                     	;# 
  4102  0E25                     	;# 
  4103  0E26                     	;# 
  4104  0E27                     	;# 
  4105  0E28                     	;# 
  4106  0E29                     	;# 
  4107  0E2A                     	;# 
  4108  0E2B                     	;# 
  4109  0E2C                     	;# 
  4110  0E2D                     	;# 
  4111  0E2E                     	;# 
  4112  0E2F                     	;# 
  4113  0E30                     	;# 
  4114  0E31                     	;# 
  4115  0E32                     	;# 
  4116  0E33                     	;# 
  4117  0E34                     	;# 
  4118  0E35                     	;# 
  4119  0E36                     	;# 
  4120  0E37                     	;# 
  4121  0E8F                     	;# 
  4122  0E90                     	;# 
  4123  0E91                     	;# 
  4124  0E92                     	;# 
  4125  0E93                     	;# 
  4126  0E94                     	;# 
  4127  0E95                     	;# 
  4128  0E96                     	;# 
  4129  0E97                     	;# 
  4130  0E9C                     	;# 
  4131  0E9D                     	;# 
  4132  0E9E                     	;# 
  4133  0EA1                     	;# 
  4134  0EA2                     	;# 
  4135  0EA3                     	;# 
  4136  0EA4                     	;# 
  4137  0EA5                     	;# 
  4138  0EA9                     	;# 
  4139  0EAA                     	;# 
  4140  0EAB                     	;# 
  4141  0EAC                     	;# 
  4142  0EB1                     	;# 
  4143  0EB2                     	;# 
  4144  0EB3                     	;# 
  4145  0EB8                     	;# 
  4146  0EB9                     	;# 
  4147  0EBA                     	;# 
  4148  0EBB                     	;# 
  4149  0EBC                     	;# 
  4150  0EBD                     	;# 
  4151  0EBE                     	;# 
  4152  0EC3                     	;# 
  4153  0EC5                     	;# 
  4154  0EC6                     	;# 
  4155  0EC7                     	;# 
  4156  0EC8                     	;# 
  4157  0EC9                     	;# 
  4158  0ECA                     	;# 
  4159  0ECB                     	;# 
  4160  0ECC                     	;# 
  4161  0F10                     	;# 
  4162  0F11                     	;# 
  4163  0F12                     	;# 
  4164  0F13                     	;# 
  4165  0F14                     	;# 
  4166  0F15                     	;# 
  4167  0F16                     	;# 
  4168  0F17                     	;# 
  4169  0F18                     	;# 
  4170  0F19                     	;# 
  4171  0F1A                     	;# 
  4172  0F1B                     	;# 
  4173  0F1C                     	;# 
  4174  0F1D                     	;# 
  4175  0F1E                     	;# 
  4176  0F1F                     	;# 
  4177  0F20                     	;# 
  4178  0F21                     	;# 
  4179  0F22                     	;# 
  4180  0F23                     	;# 
  4181  0F24                     	;# 
  4182  0F25                     	;# 
  4183  0F26                     	;# 
  4184  0F27                     	;# 
  4185  0F38                     	;# 
  4186  0F39                     	;# 
  4187  0F3A                     	;# 
  4188  0F3B                     	;# 
  4189  0F3C                     	;# 
  4190  0F3D                     	;# 
  4191  0F3E                     	;# 
  4192  0F3F                     	;# 
  4193  0F40                     	;# 
  4194  0F41                     	;# 
  4195  0F43                     	;# 
  4196  0F44                     	;# 
  4197  0F45                     	;# 
  4198  0F46                     	;# 
  4199  0F47                     	;# 
  4200  0F48                     	;# 
  4201  0F49                     	;# 
  4202  0F4A                     	;# 
  4203  0F4B                     	;# 
  4204  0F4C                     	;# 
  4205  0F4E                     	;# 
  4206  0F4F                     	;# 
  4207  0F50                     	;# 
  4208  0F51                     	;# 
  4209  0F52                     	;# 
  4210  0F53                     	;# 
  4211  0F54                     	;# 
  4212  0F55                     	;# 
  4213  0F56                     	;# 
  4214  0F57                     	;# 
  4215  0F65                     	;# 
  4216  0F68                     	;# 
  4217  0F69                     	;# 
  4218  0F6A                     	;# 
  4219  0F6B                     	;# 
  4220  0FE4                     	;# 
  4221  0FE5                     	;# 
  4222  0FE6                     	;# 
  4223  0FE7                     	;# 
  4224  0FE8                     	;# 
  4225  0FE9                     	;# 
  4226  0FEA                     	;# 
  4227  0FEB                     	;# 
  4228  0FED                     	;# 
  4229  0FEE                     	;# 
  4230  0FEF                     	;# 
  4231                           
  4232                           	psect	stringtext1
  4233  1000                     __pstringtext1:
  4234  1000                     _LCD_INIT_STRING:
  4235  1000  3428               	retlw	40
  4236  1001  340C               	retlw	12
  4237  1002  3401               	retlw	1
  4238  1003  3406               	retlw	6
  4239  1004                     __end_of_LCD_INIT_STRING:
  4240  000D                     _PORTBbits	set	13
  4241  0017                     _LATBbits	set	23
  4242  0012                     _TRISBbits	set	18
  4243  0013                     _TRISCbits	set	19
  4244  0018                     _LATC	set	24
  4245  000E                     _PORTC	set	14
  4246  0012                     _TRISB	set	18
  4247  0017                     _LATB	set	23
  4248  000D                     _PORTB	set	13
  4249  0011                     _TRISA	set	17
  4250  0016                     _LATA	set	22
  4251  000C                     _PORTA	set	12
  4252  008C                     _ADRESL	set	140
  4253  008D                     _ADRESH	set	141
  4254  009E                     _ADPCH	set	158
  4255  009A                     _ADREF	set	154
  4256  0098                     _ADCLK	set	152
  4257  0093                     _ADCON0bits	set	147
  4258  0094                     _ADCON1	set	148
  4259  0119                     _RCREG	set	281
  4260  011D                     _RC1STAbits	set	285
  4261  011A                     _TXREG	set	282
  4262  011C                     _SP1BRGH	set	284
  4263  011B                     _SP1BRGL	set	283
  4264  011E                     _TX1STA	set	286
  4265  011D                     _RC1STA	set	285
  4266  011F                     _BAUD1CONbits	set	287
  4267  018C                     _SSP1BUF	set	396
  4268  0191                     _SSP1CON2bits	set	401
  4269  018D                     _SSP1ADD	set	397
  4270  0192                     _SSP1CON3	set	402
  4271  0190                     _SSP1CON1	set	400
  4272  018F                     _SSP1STAT	set	399
  4273  070F                     _PIR3bits	set	1807
  4274  0EC6                     _SSP1DATPPS	set	3782
  4275  0EC5                     _SSP1CLKPPS	set	3781
  4276  0ECB                     _RXPPS	set	3787
  4277  0F24                     _RC4PPS	set	3876
  4278  0F23                     _RC3PPS	set	3875
  4279  0F20                     _RC0PPS	set	3872
  4280  0F4E                     _ANSELC	set	3918
  4281  0F43                     _ANSELB	set	3907
  4282  0F38                     _ANSELA	set	3896
  4283  0F43                     _ANSELBbits	set	3907
  4284  0F38                     _ANSELAbits	set	3896
  4285  1004                     STR_2:
  4286  1004  344D               	retlw	77	;'M'
  4287  1005  3469               	retlw	105	;'i'
  4288  1006  3463               	retlw	99	;'c'
  4289  1007  3472               	retlw	114	;'r'
  4290  1008  346F               	retlw	111	;'o'
  4291  1009  3473               	retlw	115	;'s'
  4292  100A  343A               	retlw	58	;':'
  4293  100B  3420               	retlw	32	;' '
  4294  100C  344C               	retlw	76	;'L'
  4295  100D  3461               	retlw	97	;'a'
  4296  100E  3420               	retlw	32	;' '
  4297  100F  3474               	retlw	116	;'t'
  4298  1010  3465               	retlw	101	;'e'
  4299  1011  346D               	retlw	109	;'m'
  4300  1012  3470               	retlw	112	;'p'
  4301  1013  3465               	retlw	101	;'e'
  4302  1014  3472               	retlw	114	;'r'
  4303  1015  3461               	retlw	97	;'a'
  4304  1016  3474               	retlw	116	;'t'
  4305  1017  3475               	retlw	117	;'u'
  4306  1018  3472               	retlw	114	;'r'
  4307  1019  3461               	retlw	97	;'a'
  4308  101A  3420               	retlw	32	;' '
  4309  101B  3465               	retlw	101	;'e'
  4310  101C  3473               	retlw	115	;'s'
  4311  101D  343A               	retlw	58	;':'
  4312  101E  3420               	retlw	32	;' '
  4313  101F  3425               	retlw	37	;'%'
  4314  1020  3464               	retlw	100	;'d'
  4315  1021  342E               	retlw	46	;'.'
  4316  1022  3425               	retlw	37	;'%'
  4317  1023  3464               	retlw	100	;'d'
  4318  1024  3420               	retlw	32	;' '
  4319  1025  3443               	retlw	67	;'C'
  4320  1026  342C               	retlw	44	;','
  4321  1027  3420               	retlw	32	;' '
  4322  1028  3425               	retlw	37	;'%'
  4323  1029  3469               	retlw	105	;'i'
  4324  102A  340A               	retlw	10
  4325  102B  340D               	retlw	13
  4326  102C  3400               	retlw	0
  4327                           
  4328                           	psect	stringtext2
  4329  102D                     __pstringtext2:
  4330  102D                     STR_1:
  4331  102D  340C               	retlw	12
  4332  102E  344D               	retlw	77	;'M'
  4333  102F  3469               	retlw	105	;'i'
  4334  1030  3463               	retlw	99	;'c'
  4335  1031  3472               	retlw	114	;'r'
  4336  1032  346F               	retlw	111	;'o'
  4337  1033  3463               	retlw	99	;'c'
  4338  1034  346F               	retlw	111	;'o'
  4339  1035  346E               	retlw	110	;'n'
  4340  1036  3474               	retlw	116	;'t'
  4341  1037  3472               	retlw	114	;'r'
  4342  1038  346F               	retlw	111	;'o'
  4343  1039  346C               	retlw	108	;'l'
  4344  103A  3461               	retlw	97	;'a'
  4345  103B  3464               	retlw	100	;'d'
  4346  103C  346F               	retlw	111	;'o'
  4347  103D  3472               	retlw	114	;'r'
  4348  103E  3465               	retlw	101	;'e'
  4349  103F  3473               	retlw	115	;'s'
  4350  1040  340A               	retlw	10
  4351  1041  344A               	retlw	74	;'J'
  4352  1042  3475               	retlw	117	;'u'
  4353  1043  346C               	retlw	108	;'l'
  4354  1044  3469               	retlw	105	;'i'
  4355  1045  346F               	retlw	111	;'o'
  4356  1046  3420               	retlw	32	;' '
  4357  1047  3432               	retlw	50	;'2'
  4358  1048  3430               	retlw	48	;'0'
  4359  1049  3432               	retlw	50	;'2'
  4360  104A  3431               	retlw	49	;'1'
  4361  104B  3420               	retlw	32	;' '
  4362  104C  3400               	retlw	0
  4363                           
  4364                           	psect	stringtext3
  4365  0000                     __pstringtext3:
  4366                           
  4367                           	psect	cinit
  4368  07ED                     start_initialization:	
  4369                           ; #config settings
  4370                           
  4371  07ED                     __initialization:
  4372                           
  4373                           ; Clear objects allocated to BANK1
  4374  07ED  30CE               	movlw	low __pbssBANK1
  4375  07EE  0084               	movwf	4
  4376  07EF  3000               	movlw	high __pbssBANK1
  4377  07F0  0085               	movwf	5
  4378  07F1  3012               	movlw	18
  4379  07F2  318E  2663  3187   	fcall	clear_ram0
  4380                           
  4381                           ; Clear objects allocated to BANK2
  4382  07F5  3020               	movlw	low __pbssBANK2
  4383  07F6  0084               	movwf	4
  4384  07F7  3001               	movlw	high __pbssBANK2
  4385  07F8  0085               	movwf	5
  4386  07F9  3020               	movlw	32
  4387  07FA  318E  2663  3187   	fcall	clear_ram0
  4388  07FD                     end_of_initialization:	
  4389                           ;End of C runtime variable initialization code
  4390                           
  4391  07FD                     __end_of__initialization:
  4392  07FD  0020               	movlb	0
  4393  07FE  3182  2AF6         	ljmp	_main	;jump to C main() function
  4394                           
  4395                           	psect	bssBANK1
  4396  00CE                     __pbssBANK1:
  4397  00CE                     _dht_dat:
  4398  00CE                     	ds	5
  4399  00D3                     _nout:
  4400  00D3                     	ds	2
  4401  00D5                     _width:
  4402  00D5                     	ds	2
  4403  00D7                     _prec:
  4404  00D7                     	ds	2
  4405  00D9                     _flags:
  4406  00D9                     	ds	2
  4407  00DB                     _low_byte:
  4408  00DB                     	ds	1
  4409  00DC                     _high_byte:
  4410  00DC                     	ds	1
  4411  00DD                     _g_LcdY:
  4412  00DD                     	ds	1
  4413  00DE                     _g_LcdX:
  4414  00DE                     	ds	1
  4415  00DF                     _GlobalErr:
  4416  00DF                     	ds	1
  4417                           
  4418                           	psect	bssBANK2
  4419  0120                     __pbssBANK2:
  4420  0120                     _dbuf:
  4421  0120                     	ds	32
  4422                           
  4423                           	psect	clrtext
  4424  0E63                     clear_ram0:	
  4425                           ;	Called with FSR0 containing the base address, and
  4426                           ;	WREG with the size to clear
  4427                           
  4428  0E63  0064               	clrwdt	;clear the watchdog before getting into this loop
  4429  0E64                     clrloop0:
  4430  0E64  0180               	clrf	0	;clear RAM location pointed to by FSR
  4431  0E65  3101               	addfsr 0,1
  4432  0E66  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  4433  0E67  2E64               	goto	clrloop0	;have we reached the end yet?
  4434  0E68  3400               	retlw	0	;all done for this memory range, return
  4435                           
  4436                           	psect	cstackBANK1
  4437  00A0                     __pcstackBANK1:
  4438  00A0                     ??_main:
  4439                           
  4440                           ; 1 bytes @ 0x0
  4441  00A0                     	ds	2
  4442  00A2                     main@buffer:
  4443                           
  4444                           ; 40 bytes @ 0x2
  4445  00A2                     	ds	40
  4446  00CA                     main@T:
  4447                           
  4448                           ; 1 bytes @ 0x2A
  4449  00CA                     	ds	1
  4450  00CB                     main@H:
  4451                           
  4452                           ; 1 bytes @ 0x2B
  4453  00CB                     	ds	1
  4454  00CC                     main@mm:
  4455                           
  4456                           ; 2 bytes @ 0x2C
  4457  00CC                     	ds	2
  4458                           
  4459                           	psect	cstackCOMMON
  4460  0070                     __pcstackCOMMON:
  4461  0070                     ?_hc_sr04_init:
  4462  0070                     ??_hc_sr04_init:	
  4463                           ; 1 bytes @ 0x0
  4464                           
  4465  0070                     ?_dht11_init:	
  4466                           ; 1 bytes @ 0x0
  4467                           
  4468  0070                     ??_dht11_init:	
  4469                           ; 1 bytes @ 0x0
  4470                           
  4471  0070                     ?_I2C_init:	
  4472                           ; 1 bytes @ 0x0
  4473                           
  4474  0070                     ??_I2C_init:	
  4475                           ; 1 bytes @ 0x0
  4476                           
  4477  0070                     ?_lcd_init:	
  4478                           ; 1 bytes @ 0x0
  4479                           
  4480  0070                     ?_lcd_puts:	
  4481                           ; 1 bytes @ 0x0
  4482                           
  4483  0070                     ?_I2C_start:	
  4484                           ; 1 bytes @ 0x0
  4485                           
  4486  0070                     ??_I2C_start:	
  4487                           ; 1 bytes @ 0x0
  4488                           
  4489  0070                     ?_I2C_write:	
  4490                           ; 1 bytes @ 0x0
  4491                           
  4492  0070                     ??_I2C_write:	
  4493                           ; 1 bytes @ 0x0
  4494                           
  4495  0070                     ?_I2C_restart:	
  4496                           ; 1 bytes @ 0x0
  4497                           
  4498  0070                     ??_I2C_restart:	
  4499                           ; 1 bytes @ 0x0
  4500                           
  4501  0070                     ?_I2C_read:	
  4502                           ; 1 bytes @ 0x0
  4503                           
  4504  0070                     ??_I2C_read:	
  4505                           ; 1 bytes @ 0x0
  4506                           
  4507  0070                     ?_I2C_nack:	
  4508                           ; 1 bytes @ 0x0
  4509                           
  4510  0070                     ??_I2C_nack:	
  4511                           ; 1 bytes @ 0x0
  4512                           
  4513  0070                     ?_I2C_stop:	
  4514                           ; 1 bytes @ 0x0
  4515                           
  4516  0070                     ??_I2C_stop:	
  4517                           ; 1 bytes @ 0x0
  4518                           
  4519  0070                     ?_adc_init:	
  4520                           ; 1 bytes @ 0x0
  4521                           
  4522  0070                     ??_adc_init:	
  4523                           ; 1 bytes @ 0x0
  4524                           
  4525  0070                     ?_init:	
  4526                           ; 1 bytes @ 0x0
  4527                           
  4528  0070                     ??_init:	
  4529                           ; 1 bytes @ 0x0
  4530                           
  4531  0070                     ?_main:	
  4532                           ; 1 bytes @ 0x0
  4533                           
  4534  0070                     ?_serial_TX:	
  4535                           ; 1 bytes @ 0x0
  4536                           
  4537  0070                     ??_serial_TX:	
  4538                           ; 1 bytes @ 0x0
  4539                           
  4540  0070                     ?_putch:	
  4541                           ; 1 bytes @ 0x0
  4542                           
  4543  0070                     ?_Write_PCF:	
  4544                           ; 1 bytes @ 0x0
  4545                           
  4546  0070                     ??___aodiv:	
  4547                           ; 1 bytes @ 0x0
  4548                           
  4549  0070                     ??___aomod:	
  4550                           ; 1 bytes @ 0x0
  4551                           
  4552  0070                     ?_strlen:	
  4553                           ; 1 bytes @ 0x0
  4554                           
  4555  0070                     ?___wmul:	
  4556                           ; 2 bytes @ 0x0
  4557                           
  4558  0070                     ?___aldiv:	
  4559                           ; 2 bytes @ 0x0
  4560                           
  4561  0070                     serial_TX@dato:	
  4562                           ; 4 bytes @ 0x0
  4563                           
  4564  0070                     I2C_write@I2C_data:	
  4565                           ; 1 bytes @ 0x0
  4566                           
  4567  0070                     ___wmul@multiplier:	
  4568                           ; 1 bytes @ 0x0
  4569                           
  4570  0070                     ___aldiv@divisor:	
  4571                           ; 2 bytes @ 0x0
  4572                           
  4573                           
  4574                           ; 4 bytes @ 0x0
  4575  0070                     	ds	1
  4576  0071                     ??_putch:
  4577  0071                     ??_Write_PCF:	
  4578                           ; 1 bytes @ 0x1
  4579                           
  4580  0071                     putch@txData:	
  4581                           ; 1 bytes @ 0x1
  4582                           
  4583  0071                     Write_PCF@dato:	
  4584                           ; 1 bytes @ 0x1
  4585                           
  4586  0071                     ___aodiv@counter:	
  4587                           ; 1 bytes @ 0x1
  4588                           
  4589  0071                     ___aomod@counter:	
  4590                           ; 1 bytes @ 0x1
  4591                           
  4592                           
  4593                           ; 1 bytes @ 0x1
  4594  0071                     	ds	1
  4595  0072                     ??_strlen:
  4596  0072                     ?_Send_D7_D4:	
  4597                           ; 1 bytes @ 0x2
  4598                           
  4599  0072                     ?_fputc:	
  4600                           ; 1 bytes @ 0x2
  4601                           
  4602  0072                     Send_D7_D4@nibble:	
  4603                           ; 2 bytes @ 0x2
  4604                           
  4605  0072                     ___aodiv@sign:	
  4606                           ; 1 bytes @ 0x2
  4607                           
  4608  0072                     ___aomod@sign:	
  4609                           ; 1 bytes @ 0x2
  4610                           
  4611  0072                     ___wmul@multiplicand:	
  4612                           ; 1 bytes @ 0x2
  4613                           
  4614  0072                     fputc@c:	
  4615                           ; 2 bytes @ 0x2
  4616                           
  4617                           
  4618                           ; 2 bytes @ 0x2
  4619  0072                     	ds	1
  4620  0073                     ??_Send_D7_D4:
  4621  0073                     ?_abs:	
  4622                           ; 1 bytes @ 0x3
  4623                           
  4624  0073                     strlen@a:	
  4625                           ; 2 bytes @ 0x3
  4626                           
  4627  0073                     abs@a:	
  4628                           ; 1 bytes @ 0x3
  4629                           
  4630  0073                     ___aodiv@quotient:	
  4631                           ; 2 bytes @ 0x3
  4632                           
  4633                           
  4634                           ; 8 bytes @ 0x3
  4635  0073                     	ds	1
  4636  0074                     ??___wmul:
  4637  0074                     fputc@fp:	
  4638                           ; 1 bytes @ 0x4
  4639                           
  4640  0074                     strlen@s:	
  4641                           ; 1 bytes @ 0x4
  4642                           
  4643  0074                     ___wmul@product:	
  4644                           ; 1 bytes @ 0x4
  4645                           
  4646  0074                     ___aldiv@dividend:	
  4647                           ; 2 bytes @ 0x4
  4648                           
  4649                           
  4650                           ; 4 bytes @ 0x4
  4651  0074                     	ds	1
  4652  0075                     ??_fputc:
  4653  0075                     ??_abs:	
  4654                           ; 1 bytes @ 0x5
  4655                           
  4656  0075                     Send_D7_D4@address:	
  4657                           ; 1 bytes @ 0x5
  4658                           
  4659                           
  4660                           ; 1 bytes @ 0x5
  4661  0075                     	ds	1
  4662  0076                     Send_D7_D4@datos:
  4663                           
  4664                           ; 1 bytes @ 0x6
  4665  0076                     	ds	1
  4666  0077                     ?_lcd_send_byte:
  4667  0077                     lcd_send_byte@n:	
  4668                           ; 1 bytes @ 0x7
  4669                           
  4670                           
  4671                           ; 1 bytes @ 0x7
  4672  0077                     	ds	1
  4673  0078                     ??_lcd_send_byte:
  4674  0078                     ??___aldiv:	
  4675                           ; 1 bytes @ 0x8
  4676                           
  4677                           
  4678                           ; 1 bytes @ 0x8
  4679  0078                     	ds	1
  4680  0079                     ??_serial_init:
  4681  0079                     lcd_send_byte@address:	
  4682                           ; 1 bytes @ 0x9
  4683                           
  4684                           
  4685                           ; 1 bytes @ 0x9
  4686  0079                     	ds	1
  4687  007A                     ??_lcd_init:
  4688  007A                     ?_lcd_gotoxy:	
  4689                           ; 1 bytes @ 0xA
  4690                           
  4691  007A                     ?_fputs:	
  4692                           ; 1 bytes @ 0xA
  4693                           
  4694  007A                     lcd_gotoxy@y:	
  4695                           ; 2 bytes @ 0xA
  4696                           
  4697  007A                     fputs@fp:	
  4698                           ; 1 bytes @ 0xA
  4699                           
  4700                           
  4701                           ; 1 bytes @ 0xA
  4702  007A                     	ds	1
  4703  007B                     ??_fputs:
  4704  007B                     ??_lcd_gotoxy:	
  4705                           ; 1 bytes @ 0xB
  4706                           
  4707                           
  4708                           ; 1 bytes @ 0xB
  4709  007B                     	ds	1
  4710  007C                     lcd_init@i:
  4711                           
  4712                           ; 1 bytes @ 0xC
  4713  007C                     	ds	1
  4714  007D                     lcd_puts@dato:
  4715                           
  4716                           ; 1 bytes @ 0xD
  4717  007D                     	ds	1
  4718                           
  4719                           	psect	cstackBANK0
  4720  0020                     __pcstackBANK0:
  4721  0020                     ?___aodiv:
  4722  0020                     ?___aomod:	
  4723                           ; 8 bytes @ 0x0
  4724                           
  4725  0020                     lcd_gotoxy@x:	
  4726                           ; 8 bytes @ 0x0
  4727                           
  4728  0020                     ___aldiv@counter:	
  4729                           ; 1 bytes @ 0x0
  4730                           
  4731  0020                     fputs@c:	
  4732                           ; 1 bytes @ 0x0
  4733                           
  4734  0020                     ___aodiv@divisor:	
  4735                           ; 1 bytes @ 0x0
  4736                           
  4737  0020                     ___aomod@divisor:	
  4738                           ; 8 bytes @ 0x0
  4739                           
  4740                           
  4741                           ; 8 bytes @ 0x0
  4742  0020                     	ds	1
  4743  0021                     lcd_gotoxy@address:
  4744  0021                     ___aldiv@sign:	
  4745                           ; 1 bytes @ 0x1
  4746                           
  4747  0021                     fputs@i:	
  4748                           ; 1 bytes @ 0x1
  4749                           
  4750                           
  4751                           ; 2 bytes @ 0x1
  4752  0021                     	ds	1
  4753  0022                     ??_lcd_puts:
  4754  0022                     ___aldiv@quotient:	
  4755                           ; 1 bytes @ 0x2
  4756                           
  4757                           
  4758                           ; 4 bytes @ 0x2
  4759  0022                     	ds	1
  4760  0023                     fputs@s:
  4761                           
  4762                           ; 1 bytes @ 0x3
  4763  0023                     	ds	1
  4764  0024                     ?_pad:
  4765  0024                     pad@buf:	
  4766                           ; 2 bytes @ 0x4
  4767                           
  4768                           
  4769                           ; 1 bytes @ 0x4
  4770  0024                     	ds	1
  4771  0025                     pad@p:
  4772                           
  4773                           ; 2 bytes @ 0x5
  4774  0025                     	ds	1
  4775  0026                     ?_serial_init:
  4776  0026                     serial_init@baud:	
  4777                           ; 1 bytes @ 0x6
  4778                           
  4779                           
  4780                           ; 2 bytes @ 0x6
  4781  0026                     	ds	1
  4782  0027                     ??_pad:
  4783                           
  4784                           ; 1 bytes @ 0x7
  4785  0027                     	ds	1
  4786  0028                     pad@i:
  4787  0028                     _serial_init$1519:	
  4788                           ; 2 bytes @ 0x8
  4789                           
  4790  0028                     ___aodiv@dividend:	
  4791                           ; 4 bytes @ 0x8
  4792                           
  4793  0028                     ___aomod@dividend:	
  4794                           ; 8 bytes @ 0x8
  4795                           
  4796                           
  4797                           ; 8 bytes @ 0x8
  4798  0028                     	ds	2
  4799  002A                     pad@w:
  4800                           
  4801                           ; 2 bytes @ 0xA
  4802  002A                     	ds	2
  4803  002C                     pad@fp:
  4804  002C                     serial_init@sx:	
  4805                           ; 1 bytes @ 0xC
  4806                           
  4807                           
  4808                           ; 2 bytes @ 0xC
  4809  002C                     	ds	4
  4810  0030                     ?_dtoa:
  4811  0030                     dtoa@d:	
  4812                           ; 2 bytes @ 0x10
  4813                           
  4814                           
  4815                           ; 8 bytes @ 0x10
  4816  0030                     	ds	8
  4817  0038                     ??_dtoa:
  4818                           
  4819                           ; 1 bytes @ 0x18
  4820  0038                     	ds	3
  4821  003B                     _dtoa$1245:
  4822                           
  4823                           ; 2 bytes @ 0x1B
  4824  003B                     	ds	2
  4825  003D                     dtoa@fp:
  4826                           
  4827                           ; 1 bytes @ 0x1D
  4828  003D                     	ds	1
  4829  003E                     dtoa@p:
  4830                           
  4831                           ; 2 bytes @ 0x1E
  4832  003E                     	ds	2
  4833  0040                     dtoa@w:
  4834                           
  4835                           ; 2 bytes @ 0x20
  4836  0040                     	ds	2
  4837  0042                     dtoa@s:
  4838                           
  4839                           ; 2 bytes @ 0x22
  4840  0042                     	ds	2
  4841  0044                     dtoa@n:
  4842                           
  4843                           ; 8 bytes @ 0x24
  4844  0044                     	ds	8
  4845  004C                     dtoa@i:
  4846                           
  4847                           ; 2 bytes @ 0x2C
  4848  004C                     	ds	2
  4849  004E                     ?_vfpfcnvrt:
  4850  004E                     vfpfcnvrt@fmt:	
  4851                           ; 2 bytes @ 0x2E
  4852                           
  4853                           
  4854                           ; 1 bytes @ 0x2E
  4855  004E                     	ds	1
  4856  004F                     vfpfcnvrt@ap:
  4857                           
  4858                           ; 1 bytes @ 0x2F
  4859  004F                     	ds	1
  4860  0050                     ??_vfpfcnvrt:
  4861                           
  4862                           ; 1 bytes @ 0x30
  4863  0050                     	ds	5
  4864  0055                     vfpfcnvrt@ll:
  4865                           
  4866                           ; 8 bytes @ 0x35
  4867  0055                     	ds	8
  4868  005D                     vfpfcnvrt@fp:
  4869                           
  4870                           ; 1 bytes @ 0x3D
  4871  005D                     	ds	1
  4872  005E                     ?_vfprintf:
  4873  005E                     vfprintf@fmt:	
  4874                           ; 2 bytes @ 0x3E
  4875                           
  4876                           
  4877                           ; 2 bytes @ 0x3E
  4878  005E                     	ds	2
  4879  0060                     vfprintf@ap:
  4880                           
  4881                           ; 1 bytes @ 0x40
  4882  0060                     	ds	1
  4883  0061                     ??_vfprintf:
  4884                           
  4885                           ; 1 bytes @ 0x41
  4886  0061                     	ds	2
  4887  0063                     vfprintf@fp:
  4888                           
  4889                           ; 1 bytes @ 0x43
  4890  0063                     	ds	1
  4891  0064                     vfprintf@cfmt:
  4892                           
  4893                           ; 2 bytes @ 0x44
  4894  0064                     	ds	2
  4895  0066                     ?_sprintf:
  4896  0066                     ?_printf:	
  4897                           ; 2 bytes @ 0x46
  4898                           
  4899  0066                     sprintf@fmt:	
  4900                           ; 2 bytes @ 0x46
  4901                           
  4902  0066                     printf@fmt:	
  4903                           ; 2 bytes @ 0x46
  4904                           
  4905                           
  4906                           ; 2 bytes @ 0x46
  4907  0066                     	ds	2
  4908  0068                     ??_sprintf:
  4909                           
  4910                           ; 1 bytes @ 0x48
  4911  0068                     	ds	1
  4912  0069                     sprintf@ap:
  4913                           
  4914                           ; 1 bytes @ 0x49
  4915  0069                     	ds	1
  4916  006A                     sprintf@s:
  4917                           
  4918                           ; 1 bytes @ 0x4A
  4919  006A                     	ds	1
  4920  006B                     sprintf@f:
  4921                           
  4922                           ; 5 bytes @ 0x4B
  4923  006B                     	ds	3
  4924  006E                     ??_printf:
  4925                           
  4926                           ; 1 bytes @ 0x4E
  4927  006E                     	ds	1
  4928  006F                     printf@ap:
  4929                           
  4930                           ; 1 bytes @ 0x4F
  4931  006F                     	ds	1
  4932                           
  4933                           	psect	maintext
  4934  02F6                     __pmaintext:	
  4935 ;;
  4936 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4937 ;;
  4938 ;; *************** function _main *****************
  4939 ;; Defined at:
  4940 ;;		line 43 in file "main_Serial.c"
  4941 ;; Parameters:    Size  Location     Type
  4942 ;;		None
  4943 ;; Auto vars:     Size  Location     Type
  4944 ;;  buffer         40    2[BANK1 ] unsigned char [40]
  4945 ;;  voltaje         4    0        float 
  4946 ;;  temp            4    0        float 
  4947 ;;  mm              2   44[BANK1 ] unsigned short 
  4948 ;;  lecturaAdc      2    0        unsigned short 
  4949 ;;  H               1   43[BANK1 ] unsigned char 
  4950 ;;  T               1   42[BANK1 ] unsigned char 
  4951 ;;  i               1    0        unsigned char 
  4952 ;;  t_e             1    0        unsigned char 
  4953 ;;  t_d             1    0        unsigned char 
  4954 ;;  cm_decimal      1    0        unsigned char 
  4955 ;;  cm_entero       1    0        unsigned char 
  4956 ;;  rx              1    0        unsigned char 
  4957 ;;  adc             1    0        unsigned char 
  4958 ;; Return value:  Size  Location     Type
  4959 ;;                  1    wreg      void 
  4960 ;; Registers used:
  4961 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4962 ;; Tracked objects:
  4963 ;;		On entry : B1F/0
  4964 ;;		On exit  : 0/0
  4965 ;;		Unchanged: 0/0
  4966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4968 ;;      Locals:         0       0      44       0       0       0       0       0       0       0       0       0       
      +0       0
  4969 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4970 ;;      Totals:         0       0      46       0       0       0       0       0       0       0       0       0       
      +0       0
  4971 ;;Total ram usage:       46 bytes
  4972 ;; Hardware stack levels required when called: 9
  4973 ;; This function calls:
  4974 ;;		_I2C_init
  4975 ;;		_I2C_nack
  4976 ;;		_I2C_read
  4977 ;;		_I2C_restart
  4978 ;;		_I2C_start
  4979 ;;		_I2C_stop
  4980 ;;		_I2C_write
  4981 ;;		___wmul
  4982 ;;		_adc_init
  4983 ;;		_dht11_init
  4984 ;;		_hc_sr04_init
  4985 ;;		_init
  4986 ;;		_lcd_init
  4987 ;;		_lcd_puts
  4988 ;;		_printf
  4989 ;;		_serial_init
  4990 ;;		_sprintf
  4991 ;; This function is called by:
  4992 ;;		Startup code after reset
  4993 ;; This function uses a non-reentrant model
  4994 ;;
  4995                           
  4996                           
  4997                           ;psect for function _main
  4998  02F6                     _main:
  4999  02F6                     l2466:	
  5000                           ;incstack = 0
  5001                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5002                           
  5003                           
  5004                           ;main_Serial.c: 44:     uint16_t lecturaAdc, mm=0;
  5005  02F6  0021               	movlb	1	; select bank1
  5006  02F7  01CC               	clrf	main@mm^(0+128)
  5007  02F8  01CD               	clrf	(main@mm+1)^(0+128)
  5008                           
  5009                           ;main_Serial.c: 46:     uint8_t T=0,H=0;
  5010  02F9  01CA               	clrf	main@T^(0+128)
  5011  02FA  01CB               	clrf	main@H^(0+128)
  5012  02FB                     l2468:
  5013  02FB                     l2470:
  5014                           
  5015                           ;main_Serial.c: 49:     init();
  5016  02FB  318F  2701  3182   	fcall	_init
  5017  02FE                     l2472:
  5018                           
  5019                           ;main_Serial.c: 50:     adc_init();
  5020  02FE  318E  26C5  3182   	fcall	_adc_init
  5021  0301                     l2474:
  5022                           
  5023                           ;main_Serial.c: 51:     serial_init(9600);
  5024  0301  3080               	movlw	128
  5025  0302  0020               	movlb	0	; select bank0
  5026  0303  00A6               	movwf	serial_init@baud
  5027  0304  3025               	movlw	37
  5028  0305  00A7               	movwf	serial_init@baud+1
  5029  0306  3180  2048  3182   	fcall	_serial_init
  5030  0309                     l2476:
  5031                           
  5032                           ;main_Serial.c: 52:     hc_sr04_init();
  5033  0309  318E  267E  3182   	fcall	_hc_sr04_init
  5034  030C                     l2478:
  5035                           
  5036                           ;main_Serial.c: 53:     dht11_init();
  5037  030C  318E  2657  3182   	fcall	_dht11_init
  5038  030F                     l2480:
  5039                           
  5040                           ;main_Serial.c: 54:     I2C_init();
  5041  030F  318E  26D7  3182   	fcall	_I2C_init
  5042  0312                     l2482:
  5043                           
  5044                           ;main_Serial.c: 56:     lcd_init();
  5045  0312  3181  2191  3182   	fcall	_lcd_init
  5046  0315                     l2484:
  5047                           
  5048                           ;main_Serial.c: 57:     sprintf(buffer,"\fMicrocontroladores\nJulio 2021 ");
  5049  0315  302D               	movlw	low (STR_1| (0+32768))
  5050  0316  0020               	movlb	0	; select bank0
  5051  0317  00E6               	movwf	sprintf@fmt
  5052  0318  3090               	movlw	high (STR_1| (0+32768))
  5053  0319  00E7               	movwf	sprintf@fmt+1
  5054  031A  30A2               	movlw	(low (main@buffer| 0))& (0+255)
  5055  031B  318F  276D  3182   	fcall	_sprintf
  5056  031E                     l2486:
  5057                           
  5058                           ;main_Serial.c: 58:     lcd_puts(buffer);
  5059  031E  30A2               	movlw	(low (main@buffer| 0))& (0+255)
  5060  031F  3180  20E0  3182   	fcall	_lcd_puts
  5061  0322                     l2488:
  5062                           
  5063                           ;main_Serial.c: 59:     _delay((unsigned long)((1000)*(32000000L/4000.0)));
  5064  0322  3029               	movlw	41
  5065  0323  0021               	movlb	1	; select bank1
  5066  0324  00A1               	movwf	(??_main^(0+128)+1)
  5067  0325  3096               	movlw	150
  5068  0326  00A0               	movwf	??_main^(0+128)
  5069  0327  307F               	movlw	127
  5070  0328                     u1957:
  5071  0328  0B89               	decfsz	9,f
  5072  0329  2B28               	goto	u1957
  5073  032A  0BA0               	decfsz	??_main^(0+128),f
  5074  032B  2B28               	goto	u1957
  5075  032C  0BA1               	decfsz	(??_main^(0+128)+1),f
  5076  032D  2B28               	goto	u1957
  5077  032E                     l2490:
  5078                           
  5079                           ;main_Serial.c: 64:         I2C_start();
  5080  032E  318E  2670  3182   	fcall	_I2C_start
  5081  0331                     l2492:
  5082                           
  5083                           ;main_Serial.c: 65:         I2C_write(0b01110000);
  5084  0331  3070               	movlw	112
  5085  0332  318E  26A8  3182   	fcall	_I2C_write
  5086  0335                     l2494:
  5087                           
  5088                           ;main_Serial.c: 66:         I2C_write(0x00);
  5089  0335  3000               	movlw	0
  5090  0336  318E  26A8  3182   	fcall	_I2C_write
  5091  0339                     l2496:
  5092                           
  5093                           ;main_Serial.c: 67:         I2C_restart();
  5094  0339  318E  2669  3182   	fcall	_I2C_restart
  5095  033C                     l2498:
  5096                           
  5097                           ;main_Serial.c: 68:         I2C_write(0b01110001);
  5098  033C  3071               	movlw	113
  5099  033D  318E  26A8  3182   	fcall	_I2C_write
  5100  0340                     l2500:
  5101                           
  5102                           ;main_Serial.c: 69:         high_byte = I2C_read();
  5103  0340  318E  269C  3182   	fcall	_I2C_read
  5104  0343  0021               	movlb	1	; select bank1
  5105  0344  00A0               	movwf	??_main^(0+128)
  5106  0345  0820               	movf	??_main^(0+128),w
  5107  0346  00DC               	movwf	_high_byte^(0+128)
  5108  0347                     l2502:
  5109                           
  5110                           ;main_Serial.c: 70:         I2C_nack();
  5111  0347  318E  2691  3182   	fcall	_I2C_nack
  5112  034A                     l2504:
  5113                           
  5114                           ;main_Serial.c: 71:         I2C_stop();
  5115  034A  318E  2677  3182   	fcall	_I2C_stop
  5116  034D                     l2506:
  5117                           
  5118                           ;main_Serial.c: 73:         I2C_start();
  5119  034D  318E  2670  3182   	fcall	_I2C_start
  5120  0350                     l2508:
  5121                           
  5122                           ;main_Serial.c: 74:         I2C_write(0b01110000);
  5123  0350  3070               	movlw	112
  5124  0351  318E  26A8  3182   	fcall	_I2C_write
  5125  0354                     l2510:
  5126                           
  5127                           ;main_Serial.c: 75:         I2C_write(0x02);
  5128  0354  3002               	movlw	2
  5129  0355  318E  26A8  3182   	fcall	_I2C_write
  5130  0358                     l2512:
  5131                           
  5132                           ;main_Serial.c: 76:         I2C_restart();
  5133  0358  318E  2669  3182   	fcall	_I2C_restart
  5134  035B                     l2514:
  5135                           
  5136                           ;main_Serial.c: 77:         I2C_write(0b01110001);
  5137  035B  3071               	movlw	113
  5138  035C  318E  26A8  3182   	fcall	_I2C_write
  5139  035F                     l2516:
  5140                           
  5141                           ;main_Serial.c: 78:         low_byte = I2C_read();
  5142  035F  318E  269C  3182   	fcall	_I2C_read
  5143  0362  0021               	movlb	1	; select bank1
  5144  0363  00A0               	movwf	??_main^(0+128)
  5145  0364  0820               	movf	??_main^(0+128),w
  5146  0365  00DB               	movwf	_low_byte^(0+128)
  5147  0366                     l2518:
  5148                           
  5149                           ;main_Serial.c: 79:         I2C_nack();
  5150  0366  318E  2691  3182   	fcall	_I2C_nack
  5151  0369                     l2520:
  5152                           
  5153                           ;main_Serial.c: 80:         I2C_stop();
  5154  0369  318E  2677  3182   	fcall	_I2C_stop
  5155  036C                     l2522:
  5156                           
  5157                           ;main_Serial.c: 82:         low_byte = low_byte >> 6;
  5158  036C  0021               	movlb	1	; select bank1
  5159  036D  085B               	movf	_low_byte^(0+128),w
  5160  036E  00A0               	movwf	??_main^(0+128)
  5161  036F  3006               	movlw	6
  5162  0370                     u1845:
  5163  0370  36A0               	lsrf	??_main^(0+128),f
  5164  0371  0B89               	decfsz	9,f
  5165  0372  2B70               	goto	u1845
  5166  0373  0820               	movf	??_main^(0+128),w
  5167  0374  00A1               	movwf	(??_main+1)^(0+128)
  5168  0375  0821               	movf	(??_main+1)^(0+128),w
  5169  0376  00DB               	movwf	_low_byte^(0+128)
  5170  0377                     l2524:
  5171                           
  5172                           ;main_Serial.c: 83:         printf("Micros: La temperatura es: %d.%d C, %i\n\r", high_by
      +                          te, low_byte *25,mm++ );
  5173  0377  3004               	movlw	low (STR_2| (0+32768))
  5174  0378  0020               	movlb	0	; select bank0
  5175  0379  00E6               	movwf	printf@fmt
  5176  037A  3090               	movlw	high (STR_2| (0+32768))
  5177  037B  00E7               	movwf	printf@fmt+1
  5178  037C  0021               	movlb	1	; select bank1
  5179  037D  085C               	movf	_high_byte^(0+128),w
  5180  037E  0020               	movlb	0	; select bank0
  5181  037F  00E8               	movwf	?_printf+2
  5182  0380  01E9               	clrf	?_printf+3
  5183  0381  1BE8               	btfsc	?_printf+2,7
  5184  0382  03E9               	decf	?_printf+3,f
  5185  0383  0021               	movlb	1	; select bank1
  5186  0384  085B               	movf	_low_byte^(0+128),w
  5187  0385  00A0               	movwf	??_main^(0+128)
  5188  0386  01A1               	clrf	(??_main^(0+128)+1)
  5189  0387  0820               	movf	??_main^(0+128),w
  5190  0388  00F0               	movwf	___wmul@multiplier
  5191  0389  0821               	movf	(??_main+1)^(0+128),w
  5192  038A  00F1               	movwf	___wmul@multiplier+1
  5193  038B  3019               	movlw	25
  5194  038C  00F2               	movwf	___wmul@multiplicand
  5195  038D  3000               	movlw	0
  5196  038E  00F3               	movwf	___wmul@multiplicand+1
  5197  038F  318F  274E  3182   	fcall	___wmul
  5198  0392  0871               	movf	?___wmul+1,w
  5199  0393  0020               	movlb	0	; select bank0
  5200  0394  00EB               	movwf	?_printf+5
  5201  0395  0870               	movf	?___wmul,w
  5202  0396  00EA               	movwf	?_printf+4
  5203  0397  0021               	movlb	1	; select bank1
  5204  0398  084D               	movf	(main@mm+1)^(0+128),w
  5205  0399  0020               	movlb	0	; select bank0
  5206  039A  00ED               	movwf	?_printf+7
  5207  039B  0021               	movlb	1	; select bank1
  5208  039C  084C               	movf	main@mm^(0+128),w
  5209  039D  0020               	movlb	0	; select bank0
  5210  039E  00EC               	movwf	?_printf+6
  5211  039F  3180  2005  3182   	fcall	_printf
  5212  03A2                     l2526:
  5213  03A2  3001               	movlw	1
  5214  03A3  0021               	movlb	1	; select bank1
  5215  03A4  07CC               	addwf	main@mm^(0+128),f
  5216  03A5  3000               	movlw	0
  5217  03A6  3DCD               	addwfc	(main@mm+1)^(0+128),f
  5218  03A7                     l2528:
  5219                           
  5220                           ;main_Serial.c: 135:         _delay((unsigned long)((500)*(32000000L/4000.0)));
  5221  03A7  3015               	movlw	21
  5222  03A8  0021               	movlb	1	; select bank1
  5223  03A9  00A1               	movwf	(??_main^(0+128)+1)
  5224  03AA  304B               	movlw	75
  5225  03AB  00A0               	movwf	??_main^(0+128)
  5226  03AC  30BE               	movlw	190
  5227  03AD                     u1967:
  5228  03AD  0B89               	decfsz	9,f
  5229  03AE  2BAD               	goto	u1967
  5230  03AF  0BA0               	decfsz	??_main^(0+128),f
  5231  03B0  2BAD               	goto	u1967
  5232  03B1  0BA1               	decfsz	(??_main^(0+128)+1),f
  5233  03B2  2BAD               	goto	u1967
  5234  03B3  0000               	nop
  5235  03B4  2B2E               	goto	l2490
  5236  03B5  3180  2802         	ljmp	start
  5237  03B7                     __end_of_main:
  5238                           
  5239                           	psect	text1
  5240  0F6D                     __ptext1:	
  5241 ;; *************** function _sprintf *****************
  5242 ;; Defined at:
  5243 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  5244 ;; Parameters:    Size  Location     Type
  5245 ;;  s               1    wreg     PTR unsigned char 
  5246 ;;		 -> main@buffer(40), 
  5247 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  5248 ;;		 -> STR_1(32), 
  5249 ;; Auto vars:     Size  Location     Type
  5250 ;;  s               1   74[BANK0 ] PTR unsigned char 
  5251 ;;		 -> main@buffer(40), 
  5252 ;;  f               5   75[BANK0 ] struct _IO_FILE
  5253 ;;  ret             2    0        int 
  5254 ;;  ap              1   73[BANK0 ] PTR void [1]
  5255 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5256 ;; Return value:  Size  Location     Type
  5257 ;;                  2   70[BANK0 ] int 
  5258 ;; Registers used:
  5259 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5260 ;; Tracked objects:
  5261 ;;		On entry : 0/0
  5262 ;;		On exit  : 0/0
  5263 ;;		Unchanged: 0/0
  5264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5265 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5266 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5267 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5268 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5269 ;;Total ram usage:       10 bytes
  5270 ;; Hardware stack levels used: 1
  5271 ;; Hardware stack levels required when called: 8
  5272 ;; This function calls:
  5273 ;;		_vfprintf
  5274 ;; This function is called by:
  5275 ;;		_main
  5276 ;; This function uses a non-reentrant model
  5277 ;;
  5278                           
  5279                           
  5280                           ;psect for function _sprintf
  5281  0F6D                     _sprintf:
  5282                           
  5283                           ;incstack = 0
  5284                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5285                           ;sprintf@s stored from wreg
  5286  0F6D  0020               	movlb	0	; select bank0
  5287  0F6E  00EA               	movwf	sprintf@s
  5288  0F6F                     l2396:
  5289  0F6F  3068               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  5290  0F70  00E8               	movwf	??_sprintf
  5291  0F71  0868               	movf	??_sprintf,w
  5292  0F72  00E9               	movwf	sprintf@ap
  5293  0F73  086A               	movf	sprintf@s,w
  5294  0F74  00E8               	movwf	??_sprintf
  5295  0F75  0868               	movf	??_sprintf,w
  5296  0F76  00EB               	movwf	sprintf@f
  5297  0F77                     l2398:
  5298  0F77  01EC               	clrf	sprintf@f+1
  5299  0F78  01ED               	clrf	sprintf@f+2
  5300  0F79                     l2400:
  5301  0F79  01EE               	clrf	sprintf@f+3
  5302  0F7A  01EF               	clrf	sprintf@f+4
  5303  0F7B                     l2402:
  5304  0F7B  0867               	movf	sprintf@fmt+1,w
  5305  0F7C  00DF               	movwf	vfprintf@fmt+1
  5306  0F7D  0866               	movf	sprintf@fmt,w
  5307  0F7E  00DE               	movwf	vfprintf@fmt
  5308  0F7F  3069               	movlw	(low (sprintf@ap| 0))& (0+255)
  5309  0F80  00E8               	movwf	??_sprintf
  5310  0F81  0868               	movf	??_sprintf,w
  5311  0F82  00E0               	movwf	vfprintf@ap
  5312  0F83  306B               	movlw	(low (sprintf@f| 0))& (0+255)
  5313  0F84  3180  2017  318F   	fcall	_vfprintf
  5314  0F87                     l2404:
  5315  0F87  0020               	movlb	0	; select bank0
  5316  0F88  086C               	movf	sprintf@f+1,w
  5317  0F89  076A               	addwf	sprintf@s,w
  5318  0F8A  00E8               	movwf	??_sprintf
  5319  0F8B  0868               	movf	??_sprintf,w
  5320  0F8C  0086               	movwf	6
  5321  0F8D  0187               	clrf	7
  5322  0F8E  0181               	clrf	1
  5323  0F8F                     l986:
  5324  0F8F  0008               	return
  5325  0F90                     __end_of_sprintf:
  5326                           
  5327                           	psect	text2
  5328  0048                     __ptext2:	
  5329 ;; *************** function _serial_init *****************
  5330 ;; Defined at:
  5331 ;;		line 8 in file "Serial.c"
  5332 ;; Parameters:    Size  Location     Type
  5333 ;;  baud            2    6[BANK0 ] unsigned short 
  5334 ;; Auto vars:     Size  Location     Type
  5335 ;;  sx              2   12[BANK0 ] unsigned short 
  5336 ;; Return value:  Size  Location     Type
  5337 ;;                  1    wreg      void 
  5338 ;; Registers used:
  5339 ;;		wreg, status,2, status,0, pclath, cstack
  5340 ;; Tracked objects:
  5341 ;;		On entry : 0/0
  5342 ;;		On exit  : 0/0
  5343 ;;		Unchanged: 0/0
  5344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5345 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5346 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5348 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5349 ;;Total ram usage:        8 bytes
  5350 ;; Hardware stack levels used: 1
  5351 ;; Hardware stack levels required when called: 1
  5352 ;; This function calls:
  5353 ;;		___aldiv
  5354 ;; This function is called by:
  5355 ;;		_main
  5356 ;; This function uses a non-reentrant model
  5357 ;;
  5358                           
  5359                           
  5360                           ;psect for function _serial_init
  5361  0048                     _serial_init:
  5362  0048                     l2324:	
  5363                           ;incstack = 0
  5364                           ; Regs used in _serial_init: [wreg+status,2+status,0+pclath+cstack]
  5365                           
  5366                           
  5367                           ;Serial.c: 9:     uint16_t sx;;Serial.c: 11:     BAUD1CONbits.BRG16 = 0;
  5368  0048  0022               	movlb	2	; select bank2
  5369  0049  119F               	bcf	31,3	;volatile
  5370  004A                     l2326:
  5371                           
  5372                           ;Serial.c: 14:     RC1STA = 0b10010000;
  5373  004A  3090               	movlw	144
  5374  004B  009D               	movwf	29	;volatile
  5375                           
  5376                           ;Serial.c: 20:     TX1STA = 0b00100000;
  5377  004C  3020               	movlw	32
  5378  004D  009E               	movwf	30	;volatile
  5379  004E                     l2328:
  5380                           
  5381                           ;Serial.c: 23:     sx = ((32000000L/baud)/64 ) - 1;
  5382  004E  0020               	movlb	0	; select bank0
  5383  004F  0826               	movf	serial_init@baud,w
  5384  0050  00F0               	movwf	___aldiv@divisor
  5385  0051  0827               	movf	serial_init@baud+1,w
  5386  0052  00F1               	movwf	___aldiv@divisor+1
  5387  0053  01F2               	clrf	___aldiv@divisor+2
  5388  0054  01F3               	clrf	___aldiv@divisor+3
  5389  0055  3001               	movlw	1
  5390  0056  00F7               	movwf	___aldiv@dividend+3
  5391  0057  30E8               	movlw	232
  5392  0058  00F6               	movwf	___aldiv@dividend+2
  5393  0059  3048               	movlw	72
  5394  005A  00F5               	movwf	___aldiv@dividend+1
  5395  005B  3000               	movlw	0
  5396  005C  00F4               	movwf	___aldiv@dividend
  5397  005D  3182  2266  3180   	fcall	___aldiv
  5398  0060  0873               	movf	?___aldiv+3,w
  5399  0061  0020               	movlb	0	; select bank0
  5400  0062  00AB               	movwf	_serial_init$1519+3
  5401  0063  0872               	movf	?___aldiv+2,w
  5402  0064  00AA               	movwf	_serial_init$1519+2
  5403  0065  0871               	movf	?___aldiv+1,w
  5404  0066  00A9               	movwf	_serial_init$1519+1
  5405  0067  0870               	movf	?___aldiv,w
  5406  0068  00A8               	movwf	_serial_init$1519
  5407  0069                     l2330:
  5408                           
  5409                           ;Serial.c: 23:     sx = ((32000000L/baud)/64 ) - 1;
  5410  0069  3000               	movlw	0
  5411  006A  00F3               	movwf	___aldiv@divisor+3
  5412  006B  3000               	movlw	0
  5413  006C  00F2               	movwf	___aldiv@divisor+2
  5414  006D  3000               	movlw	0
  5415  006E  00F1               	movwf	___aldiv@divisor+1
  5416  006F  3040               	movlw	64
  5417  0070  00F0               	movwf	___aldiv@divisor
  5418  0071  082B               	movf	_serial_init$1519+3,w
  5419  0072  00F7               	movwf	___aldiv@dividend+3
  5420  0073  082A               	movf	_serial_init$1519+2,w
  5421  0074  00F6               	movwf	___aldiv@dividend+2
  5422  0075  0829               	movf	_serial_init$1519+1,w
  5423  0076  00F5               	movwf	___aldiv@dividend+1
  5424  0077  0828               	movf	_serial_init$1519,w
  5425  0078  00F4               	movwf	___aldiv@dividend
  5426  0079  3182  2266  3180   	fcall	___aldiv
  5427  007C  0870               	movf	?___aldiv,w
  5428  007D  3EFF               	addlw	255
  5429  007E  0020               	movlb	0	; select bank0
  5430  007F  00AC               	movwf	serial_init@sx
  5431  0080  30FF               	movlw	255
  5432  0081  3D71               	addwfc	?___aldiv+1,w
  5433  0082  00AD               	movwf	serial_init@sx+1
  5434                           
  5435                           ;Serial.c: 24:     SP1BRGL = (uint8_t)sx;
  5436  0083  082C               	movf	serial_init@sx,w
  5437  0084  0022               	movlb	2	; select bank2
  5438  0085  009B               	movwf	27	;volatile
  5439  0086                     l2332:
  5440                           
  5441                           ;Serial.c: 25:     SP1BRGH = (uint8_t)(sx>>8);
  5442  0086  0020               	movlb	0	; select bank0
  5443  0087  082D               	movf	serial_init@sx+1,w
  5444  0088  0022               	movlb	2	; select bank2
  5445  0089  009C               	movwf	28	;volatile
  5446  008A                     l2334:
  5447                           
  5448                           ;Serial.c: 29:     RC0PPS = 0x10;
  5449  008A  3010               	movlw	16
  5450  008B  003E               	movlb	30	; select bank30
  5451  008C  00A0               	movwf	32	;volatile
  5452  008D                     l2336:
  5453                           
  5454                           ;Serial.c: 31:     RXPPS = 0x11;
  5455  008D  3011               	movlw	17
  5456  008E  003D               	movlb	29	; select bank29
  5457  008F  00CB               	movwf	75	;volatile
  5458  0090                     l137:
  5459  0090  0008               	return
  5460  0091                     __end_of_serial_init:
  5461                           
  5462                           	psect	text3
  5463  0266                     __ptext3:	
  5464 ;; *************** function ___aldiv *****************
  5465 ;; Defined at:
  5466 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
  5467 ;; Parameters:    Size  Location     Type
  5468 ;;  divisor         4    0[COMMON] long 
  5469 ;;  dividend        4    4[COMMON] long 
  5470 ;; Auto vars:     Size  Location     Type
  5471 ;;  quotient        4    2[BANK0 ] long 
  5472 ;;  sign            1    1[BANK0 ] unsigned char 
  5473 ;;  counter         1    0[BANK0 ] unsigned char 
  5474 ;; Return value:  Size  Location     Type
  5475 ;;                  4    0[COMMON] long 
  5476 ;; Registers used:
  5477 ;;		wreg, status,2, status,0
  5478 ;; Tracked objects:
  5479 ;;		On entry : 0/0
  5480 ;;		On exit  : 0/0
  5481 ;;		Unchanged: 0/0
  5482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5483 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5484 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5485 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5486 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5487 ;;Total ram usage:       15 bytes
  5488 ;; Hardware stack levels used: 1
  5489 ;; This function calls:
  5490 ;;		Nothing
  5491 ;; This function is called by:
  5492 ;;		_serial_init
  5493 ;; This function uses a non-reentrant model
  5494 ;;
  5495                           
  5496                           
  5497                           ;psect for function ___aldiv
  5498  0266                     ___aldiv:
  5499  0266                     l2234:	
  5500                           ;incstack = 0
  5501                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  5502                           
  5503  0266  0020               	movlb	0	; select bank0
  5504  0267  01A1               	clrf	___aldiv@sign
  5505  0268                     l2236:
  5506  0268  1FF3               	btfss	___aldiv@divisor+3,7
  5507  0269  2A6B               	goto	u1631
  5508  026A  2A6C               	goto	u1630
  5509  026B                     u1631:
  5510  026B  2A79               	goto	l588
  5511  026C                     u1630:
  5512  026C                     l2238:
  5513  026C  09F0               	comf	___aldiv@divisor,f
  5514  026D  09F1               	comf	___aldiv@divisor+1,f
  5515  026E  09F2               	comf	___aldiv@divisor+2,f
  5516  026F  09F3               	comf	___aldiv@divisor+3,f
  5517  0270  0AF0               	incf	___aldiv@divisor,f
  5518  0271  1903               	skipnz
  5519  0272  0AF1               	incf	___aldiv@divisor+1,f
  5520  0273  1903               	skipnz
  5521  0274  0AF2               	incf	___aldiv@divisor+2,f
  5522  0275  1903               	skipnz
  5523  0276  0AF3               	incf	___aldiv@divisor+3,f
  5524  0277  01A1               	clrf	___aldiv@sign
  5525  0278  0AA1               	incf	___aldiv@sign,f
  5526  0279                     l588:
  5527  0279  1FF7               	btfss	___aldiv@dividend+3,7
  5528  027A  2A7C               	goto	u1641
  5529  027B  2A7D               	goto	u1640
  5530  027C                     u1641:
  5531  027C  2A8C               	goto	l2244
  5532  027D                     u1640:
  5533  027D                     l2240:
  5534  027D  09F4               	comf	___aldiv@dividend,f
  5535  027E  09F5               	comf	___aldiv@dividend+1,f
  5536  027F  09F6               	comf	___aldiv@dividend+2,f
  5537  0280  09F7               	comf	___aldiv@dividend+3,f
  5538  0281  0AF4               	incf	___aldiv@dividend,f
  5539  0282  1903               	skipnz
  5540  0283  0AF5               	incf	___aldiv@dividend+1,f
  5541  0284  1903               	skipnz
  5542  0285  0AF6               	incf	___aldiv@dividend+2,f
  5543  0286  1903               	skipnz
  5544  0287  0AF7               	incf	___aldiv@dividend+3,f
  5545  0288                     l2242:
  5546  0288  3001               	movlw	1
  5547  0289  00F8               	movwf	??___aldiv
  5548  028A  0878               	movf	??___aldiv,w
  5549  028B  06A1               	xorwf	___aldiv@sign,f
  5550  028C                     l2244:
  5551  028C  3000               	movlw	0
  5552  028D  00A5               	movwf	___aldiv@quotient+3
  5553  028E  3000               	movlw	0
  5554  028F  00A4               	movwf	___aldiv@quotient+2
  5555  0290  3000               	movlw	0
  5556  0291  00A3               	movwf	___aldiv@quotient+1
  5557  0292  3000               	movlw	0
  5558  0293  00A2               	movwf	___aldiv@quotient
  5559  0294                     l2246:
  5560  0294  0873               	movf	___aldiv@divisor+3,w
  5561  0295  0472               	iorwf	___aldiv@divisor+2,w
  5562  0296  0471               	iorwf	___aldiv@divisor+1,w
  5563  0297  0470               	iorwf	___aldiv@divisor,w
  5564  0298  1903               	skipnz
  5565  0299  2A9B               	goto	u1651
  5566  029A  2A9C               	goto	u1650
  5567  029B                     u1651:
  5568  029B  2ADD               	goto	l2266
  5569  029C                     u1650:
  5570  029C                     l2248:
  5571  029C  01A0               	clrf	___aldiv@counter
  5572  029D  0AA0               	incf	___aldiv@counter,f
  5573  029E  2AAA               	goto	l2252
  5574  029F                     l2250:
  5575  029F  3001               	movlw	1
  5576  02A0                     u1665:
  5577  02A0  35F0               	lslf	___aldiv@divisor,f
  5578  02A1  0DF1               	rlf	___aldiv@divisor+1,f
  5579  02A2  0DF2               	rlf	___aldiv@divisor+2,f
  5580  02A3  0DF3               	rlf	___aldiv@divisor+3,f
  5581  02A4  0B89               	decfsz	9,f
  5582  02A5  2AA0               	goto	u1665
  5583  02A6  3001               	movlw	1
  5584  02A7  00F8               	movwf	??___aldiv
  5585  02A8  0878               	movf	??___aldiv,w
  5586  02A9  07A0               	addwf	___aldiv@counter,f
  5587  02AA                     l2252:
  5588  02AA  1FF3               	btfss	___aldiv@divisor+3,7
  5589  02AB  2AAD               	goto	u1671
  5590  02AC  2AAE               	goto	u1670
  5591  02AD                     u1671:
  5592  02AD  2A9F               	goto	l2250
  5593  02AE                     u1670:
  5594  02AE                     l2254:
  5595  02AE  3001               	movlw	1
  5596  02AF                     u1685:
  5597  02AF  35A2               	lslf	___aldiv@quotient,f
  5598  02B0  0DA3               	rlf	___aldiv@quotient+1,f
  5599  02B1  0DA4               	rlf	___aldiv@quotient+2,f
  5600  02B2  0DA5               	rlf	___aldiv@quotient+3,f
  5601  02B3  0B89               	decfsz	9,f
  5602  02B4  2AAF               	goto	u1685
  5603  02B5                     l2256:
  5604  02B5  0873               	movf	___aldiv@divisor+3,w
  5605  02B6  0277               	subwf	___aldiv@dividend+3,w
  5606  02B7  1D03               	skipz
  5607  02B8  2AC3               	goto	u1695
  5608  02B9  0872               	movf	___aldiv@divisor+2,w
  5609  02BA  0276               	subwf	___aldiv@dividend+2,w
  5610  02BB  1D03               	skipz
  5611  02BC  2AC3               	goto	u1695
  5612  02BD  0871               	movf	___aldiv@divisor+1,w
  5613  02BE  0275               	subwf	___aldiv@dividend+1,w
  5614  02BF  1D03               	skipz
  5615  02C0  2AC3               	goto	u1695
  5616  02C1  0870               	movf	___aldiv@divisor,w
  5617  02C2  0274               	subwf	___aldiv@dividend,w
  5618  02C3                     u1695:
  5619  02C3  1C03               	skipc
  5620  02C4  2AC6               	goto	u1691
  5621  02C5  2AC7               	goto	u1690
  5622  02C6                     u1691:
  5623  02C6  2AD0               	goto	l2262
  5624  02C7                     u1690:
  5625  02C7                     l2258:
  5626  02C7  0870               	movf	___aldiv@divisor,w
  5627  02C8  02F4               	subwf	___aldiv@dividend,f
  5628  02C9  0871               	movf	___aldiv@divisor+1,w
  5629  02CA  3BF5               	subwfb	___aldiv@dividend+1,f
  5630  02CB  0872               	movf	___aldiv@divisor+2,w
  5631  02CC  3BF6               	subwfb	___aldiv@dividend+2,f
  5632  02CD  0873               	movf	___aldiv@divisor+3,w
  5633  02CE  3BF7               	subwfb	___aldiv@dividend+3,f
  5634  02CF                     l2260:
  5635  02CF  1422               	bsf	___aldiv@quotient,0
  5636  02D0                     l2262:
  5637  02D0  3001               	movlw	1
  5638  02D1                     u1705:
  5639  02D1  36F3               	lsrf	___aldiv@divisor+3,f
  5640  02D2  0CF2               	rrf	___aldiv@divisor+2,f
  5641  02D3  0CF1               	rrf	___aldiv@divisor+1,f
  5642  02D4  0CF0               	rrf	___aldiv@divisor,f
  5643  02D5  0B89               	decfsz	9,f
  5644  02D6  2AD1               	goto	u1705
  5645  02D7                     l2264:
  5646  02D7  3001               	movlw	1
  5647  02D8  02A0               	subwf	___aldiv@counter,f
  5648  02D9  1D03               	btfss	3,2
  5649  02DA  2ADC               	goto	u1711
  5650  02DB  2ADD               	goto	u1710
  5651  02DC                     u1711:
  5652  02DC  2AAE               	goto	l2254
  5653  02DD                     u1710:
  5654  02DD                     l2266:
  5655  02DD  0821               	movf	___aldiv@sign,w
  5656  02DE  1903               	btfsc	3,2
  5657  02DF  2AE1               	goto	u1721
  5658  02E0  2AE2               	goto	u1720
  5659  02E1                     u1721:
  5660  02E1  2AED               	goto	l2270
  5661  02E2                     u1720:
  5662  02E2                     l2268:
  5663  02E2  09A2               	comf	___aldiv@quotient,f
  5664  02E3  09A3               	comf	___aldiv@quotient+1,f
  5665  02E4  09A4               	comf	___aldiv@quotient+2,f
  5666  02E5  09A5               	comf	___aldiv@quotient+3,f
  5667  02E6  0AA2               	incf	___aldiv@quotient,f
  5668  02E7  1903               	skipnz
  5669  02E8  0AA3               	incf	___aldiv@quotient+1,f
  5670  02E9  1903               	skipnz
  5671  02EA  0AA4               	incf	___aldiv@quotient+2,f
  5672  02EB  1903               	skipnz
  5673  02EC  0AA5               	incf	___aldiv@quotient+3,f
  5674  02ED                     l2270:
  5675  02ED  0825               	movf	___aldiv@quotient+3,w
  5676  02EE  00F3               	movwf	?___aldiv+3
  5677  02EF  0824               	movf	___aldiv@quotient+2,w
  5678  02F0  00F2               	movwf	?___aldiv+2
  5679  02F1  0823               	movf	___aldiv@quotient+1,w
  5680  02F2  00F1               	movwf	?___aldiv+1
  5681  02F3  0822               	movf	___aldiv@quotient,w
  5682  02F4  00F0               	movwf	?___aldiv
  5683  02F5                     l598:
  5684  02F5  0008               	return
  5685  02F6                     __end_of___aldiv:
  5686                           
  5687                           	psect	text4
  5688  0005                     __ptext4:	
  5689 ;; *************** function _printf *****************
  5690 ;; Defined at:
  5691 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  5692 ;; Parameters:    Size  Location     Type
  5693 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  5694 ;;		 -> STR_2(41), 
  5695 ;; Auto vars:     Size  Location     Type
  5696 ;;  ret             2    0        int 
  5697 ;;  ap              1   79[BANK0 ] PTR void [1]
  5698 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5699 ;; Return value:  Size  Location     Type
  5700 ;;                  2   70[BANK0 ] int 
  5701 ;; Registers used:
  5702 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5703 ;; Tracked objects:
  5704 ;;		On entry : 0/0
  5705 ;;		On exit  : 0/0
  5706 ;;		Unchanged: 0/0
  5707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5708 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5709 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5710 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5711 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5712 ;;Total ram usage:       10 bytes
  5713 ;; Hardware stack levels used: 1
  5714 ;; Hardware stack levels required when called: 8
  5715 ;; This function calls:
  5716 ;;		_vfprintf
  5717 ;; This function is called by:
  5718 ;;		_main
  5719 ;; This function uses a non-reentrant model
  5720 ;;
  5721                           
  5722                           
  5723                           ;psect for function _printf
  5724  0005                     _printf:
  5725  0005                     l2446:	
  5726                           ;incstack = 0
  5727                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5728                           
  5729  0005  3068               	movlw	(low ((?_printf| 0+2)))& (0+255)
  5730  0006  0020               	movlb	0	; select bank0
  5731  0007  00EE               	movwf	??_printf
  5732  0008  086E               	movf	??_printf,w
  5733  0009  00EF               	movwf	printf@ap
  5734  000A                     l2448:
  5735  000A  0867               	movf	printf@fmt+1,w
  5736  000B  00DF               	movwf	vfprintf@fmt+1
  5737  000C  0866               	movf	printf@fmt,w
  5738  000D  00DE               	movwf	vfprintf@fmt
  5739  000E  306F               	movlw	(low (printf@ap| 0))& (0+255)
  5740  000F  00EE               	movwf	??_printf
  5741  0010  086E               	movf	??_printf,w
  5742  0011  00E0               	movwf	vfprintf@ap
  5743  0012  3000               	movlw	0
  5744  0013  3180  2017  3180   	fcall	_vfprintf
  5745  0016                     l1092:
  5746  0016  0008               	return
  5747  0017                     __end_of_printf:
  5748                           
  5749                           	psect	text5
  5750  0017                     __ptext5:	
  5751 ;; *************** function _vfprintf *****************
  5752 ;; Defined at:
  5753 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5754 ;; Parameters:    Size  Location     Type
  5755 ;;  fp              1    wreg     PTR struct _IO_FILE
  5756 ;;		 -> NULL(0), sprintf@f(5), 
  5757 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  5758 ;;		 -> STR_2(41), STR_1(32), 
  5759 ;;  ap              1   64[BANK0 ] PTR PTR void 
  5760 ;;		 -> printf@ap(1), sprintf@ap(1), 
  5761 ;; Auto vars:     Size  Location     Type
  5762 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
  5763 ;;		 -> NULL(0), sprintf@f(5), 
  5764 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
  5765 ;;		 -> STR_2(41), STR_1(32), 
  5766 ;; Return value:  Size  Location     Type
  5767 ;;                  2   62[BANK0 ] int 
  5768 ;; Registers used:
  5769 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5770 ;; Tracked objects:
  5771 ;;		On entry : 0/0
  5772 ;;		On exit  : 0/0
  5773 ;;		Unchanged: 0/0
  5774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5775 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5776 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5777 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5778 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5779 ;;Total ram usage:        8 bytes
  5780 ;; Hardware stack levels used: 1
  5781 ;; Hardware stack levels required when called: 7
  5782 ;; This function calls:
  5783 ;;		_vfpfcnvrt
  5784 ;; This function is called by:
  5785 ;;		_sprintf
  5786 ;;		_printf
  5787 ;; This function uses a non-reentrant model
  5788 ;;
  5789                           
  5790                           
  5791                           ;psect for function _vfprintf
  5792  0017                     _vfprintf:
  5793                           
  5794                           ;incstack = 0
  5795                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5796                           ;vfprintf@fp stored from wreg
  5797  0017  0020               	movlb	0	; select bank0
  5798  0018  00E3               	movwf	vfprintf@fp
  5799  0019                     l2274:
  5800                           
  5801                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  5802  0019  085F               	movf	vfprintf@fmt+1,w
  5803  001A  00E5               	movwf	vfprintf@cfmt+1
  5804  001B  085E               	movf	vfprintf@fmt,w
  5805  001C  00E4               	movwf	vfprintf@cfmt
  5806  001D                     l2276:
  5807                           
  5808                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  5809  001D  0021               	movlb	1	; select bank1
  5810  001E  01D3               	clrf	_nout^(0+128)
  5811  001F  01D4               	clrf	(_nout+1)^(0+128)
  5812                           
  5813                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5814  0020  2835               	goto	l2280
  5815  0021                     l2278:
  5816                           
  5817                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  5818  0021  3064               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  5819  0022  00E1               	movwf	??_vfprintf
  5820  0023  0861               	movf	??_vfprintf,w
  5821  0024  00CE               	movwf	vfpfcnvrt@fmt
  5822  0025  0860               	movf	vfprintf@ap,w
  5823  0026  00E2               	movwf	??_vfprintf+1
  5824  0027  0862               	movf	??_vfprintf+1,w
  5825  0028  00CF               	movwf	vfpfcnvrt@ap
  5826  0029  0863               	movf	vfprintf@fp,w
  5827  002A  3183  23B7  3180   	fcall	_vfpfcnvrt
  5828  002D  0020               	movlb	0	; select bank0
  5829  002E  084E               	movf	?_vfpfcnvrt,w
  5830  002F  0021               	movlb	1	; select bank1
  5831  0030  07D3               	addwf	_nout^(0+128),f
  5832  0031  0020               	movlb	0	; select bank0
  5833  0032  084F               	movf	?_vfpfcnvrt+1,w
  5834  0033  0021               	movlb	1	; select bank1
  5835  0034  3DD4               	addwfc	(_nout+1)^(0+128),f
  5836  0035                     l2280:
  5837                           
  5838                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5839  0035  0020               	movlb	0	; select bank0
  5840  0036  0864               	movf	vfprintf@cfmt,w
  5841  0037  0084               	movwf	4
  5842  0038  0865               	movf	vfprintf@cfmt+1,w
  5843  0039  0085               	movwf	5
  5844  003A  0012               	moviw fsr0++
  5845  003B  1D03               	btfss	3,2
  5846  003C  283E               	goto	u1731
  5847  003D  283F               	goto	u1730
  5848  003E                     u1731:
  5849  003E  2821               	goto	l2278
  5850  003F                     u1730:
  5851  003F                     l2282:
  5852                           
  5853                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  5854  003F  0021               	movlb	1	; select bank1
  5855  0040  0854               	movf	(_nout+1)^(0+128),w
  5856  0041  0020               	movlb	0	; select bank0
  5857  0042  00DF               	movwf	?_vfprintf+1
  5858  0043  0021               	movlb	1	; select bank1
  5859  0044  0853               	movf	_nout^(0+128),w
  5860  0045  0020               	movlb	0	; select bank0
  5861  0046  00DE               	movwf	?_vfprintf
  5862  0047                     l1058:
  5863  0047  0008               	return
  5864  0048                     __end_of_vfprintf:
  5865                           
  5866                           	psect	text6
  5867  03B7                     __ptext6:	
  5868 ;; *************** function _vfpfcnvrt *****************
  5869 ;; Defined at:
  5870 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5871 ;; Parameters:    Size  Location     Type
  5872 ;;  fp              1    wreg     PTR struct _IO_FILE
  5873 ;;		 -> NULL(0), sprintf@f(5), 
  5874 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  5875 ;;		 -> vfprintf@cfmt(2), 
  5876 ;;  ap              1   47[BANK0 ] PTR PTR void 
  5877 ;;		 -> printf@ap(1), sprintf@ap(1), 
  5878 ;; Auto vars:     Size  Location     Type
  5879 ;;  fp              1   61[BANK0 ] PTR struct _IO_FILE
  5880 ;;		 -> NULL(0), sprintf@f(5), 
  5881 ;;  ll              8   53[BANK0 ] long long 
  5882 ;;  llu             8    0        unsigned long long 
  5883 ;;  f               4    0        unsigned long long 
  5884 ;;  ct              3    0        unsigned char [3]
  5885 ;;  vp              2    0        PTR void 
  5886 ;;  i               2    0        int 
  5887 ;;  done            2    0        int 
  5888 ;;  cp              2    0        PTR unsigned char 
  5889 ;;  c               1    0        unsigned char 
  5890 ;; Return value:  Size  Location     Type
  5891 ;;                  2   46[BANK0 ] int 
  5892 ;; Registers used:
  5893 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5894 ;; Tracked objects:
  5895 ;;		On entry : 0/0
  5896 ;;		On exit  : 0/0
  5897 ;;		Unchanged: 0/0
  5898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5899 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5900 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5901 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5902 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5903 ;;Total ram usage:       16 bytes
  5904 ;; Hardware stack levels used: 1
  5905 ;; Hardware stack levels required when called: 6
  5906 ;; This function calls:
  5907 ;;		_dtoa
  5908 ;;		_fputc
  5909 ;; This function is called by:
  5910 ;;		_vfprintf
  5911 ;; This function uses a non-reentrant model
  5912 ;;
  5913                           
  5914                           
  5915                           ;psect for function _vfpfcnvrt
  5916  03B7                     _vfpfcnvrt:
  5917                           
  5918                           ;incstack = 0
  5919                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5920                           ;vfpfcnvrt@fp stored from wreg
  5921  03B7  0020               	movlb	0	; select bank0
  5922  03B8  00DD               	movwf	vfpfcnvrt@fp
  5923  03B9                     l2160:
  5924                           
  5925                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  5926  03B9  084E               	movf	vfpfcnvrt@fmt,w
  5927  03BA  0086               	movwf	6
  5928  03BB  0187               	clrf	7
  5929  03BC  3F40               	moviw [0]fsr1
  5930  03BD  00D0               	movwf	??_vfpfcnvrt
  5931  03BE  3F41               	moviw [1]fsr1
  5932  03BF  00D1               	movwf	??_vfpfcnvrt+1
  5933  03C0  0850               	movf	??_vfpfcnvrt,w
  5934  03C1  0084               	movwf	4
  5935  03C2  0851               	movf	??_vfpfcnvrt+1,w
  5936  03C3  0085               	movwf	5
  5937  03C4  0012               	moviw fsr0++
  5938  03C5  3A25               	xorlw	37
  5939  03C6  1D03               	btfss	3,2
  5940  03C7  2BC9               	goto	u1591
  5941  03C8  2BCA               	goto	u1590
  5942  03C9                     u1591:
  5943  03C9  2C6E               	goto	l2196
  5944  03CA                     u1590:
  5945  03CA                     l2162:
  5946                           
  5947                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  5948  03CA  084E               	movf	vfpfcnvrt@fmt,w
  5949  03CB  0086               	movwf	6
  5950  03CC  0187               	clrf	7
  5951  03CD  3001               	movlw	1
  5952  03CE  0781               	addwf	1,f
  5953  03CF  3141               	addfsr 1,1
  5954  03D0  1803               	skipnc
  5955  03D1  0A81               	incf	1,f
  5956  03D2                     l2164:
  5957                           
  5958                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  5959  03D2  0021               	movlb	1	; select bank1
  5960  03D3  01D5               	clrf	_width^(0+128)
  5961  03D4  01D6               	clrf	(_width+1)^(0+128)
  5962  03D5  01D9               	clrf	_flags^(0+128)
  5963  03D6  01DA               	clrf	(_flags+1)^(0+128)
  5964  03D7                     l2166:
  5965                           
  5966                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  5967  03D7  30FF               	movlw	255
  5968  03D8  00D7               	movwf	_prec^(0+128)
  5969  03D9  30FF               	movlw	255
  5970  03DA  00D8               	movwf	(_prec^(0+128)+1)
  5971  03DB                     l2168:
  5972                           
  5973                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5974  03DB  0020               	movlb	0	; select bank0
  5975  03DC  084E               	movf	vfpfcnvrt@fmt,w
  5976  03DD  0086               	movwf	6
  5977  03DE  0187               	clrf	7
  5978  03DF  3F40               	moviw [0]fsr1
  5979  03E0  00D0               	movwf	??_vfpfcnvrt
  5980  03E1  3F41               	moviw [1]fsr1
  5981  03E2  00D1               	movwf	??_vfpfcnvrt+1
  5982  03E3  0850               	movf	??_vfpfcnvrt,w
  5983  03E4  0084               	movwf	4
  5984  03E5  0851               	movf	??_vfpfcnvrt+1,w
  5985  03E6  0085               	movwf	5
  5986  03E7  0012               	moviw fsr0++
  5987  03E8  3A64               	xorlw	100
  5988  03E9  1903               	btfsc	3,2
  5989  03EA  2BEC               	goto	u1601
  5990  03EB  2BED               	goto	u1600
  5991  03EC                     u1601:
  5992  03EC  2BFE               	goto	l2172
  5993  03ED                     u1600:
  5994  03ED                     l2170:
  5995  03ED  084E               	movf	vfpfcnvrt@fmt,w
  5996  03EE  0086               	movwf	6
  5997  03EF  0187               	clrf	7
  5998  03F0  3F40               	moviw [0]fsr1
  5999  03F1  00D0               	movwf	??_vfpfcnvrt
  6000  03F2  3F41               	moviw [1]fsr1
  6001  03F3  00D1               	movwf	??_vfpfcnvrt+1
  6002  03F4  0850               	movf	??_vfpfcnvrt,w
  6003  03F5  0084               	movwf	4
  6004  03F6  0851               	movf	??_vfpfcnvrt+1,w
  6005  03F7  0085               	movwf	5
  6006  03F8  0012               	moviw fsr0++
  6007  03F9  3A69               	xorlw	105
  6008  03FA  1D03               	btfss	3,2
  6009  03FB  2BFD               	goto	u1611
  6010  03FC  2BFE               	goto	u1610
  6011  03FD                     u1611:
  6012  03FD  2C39               	goto	l2180
  6013  03FE                     u1610:
  6014  03FE                     l2172:
  6015                           
  6016                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  6017  03FE  084E               	movf	vfpfcnvrt@fmt,w
  6018  03FF  0086               	movwf	6
  6019  0400  0187               	clrf	7
  6020  0401  3001               	movlw	1
  6021  0402  0781               	addwf	1,f
  6022  0403  3141               	addfsr 1,1
  6023  0404  1803               	skipnc
  6024  0405  0A81               	incf	1,f
  6025  0406                     l2174:
  6026                           
  6027                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6028  0406  084F               	movf	vfpfcnvrt@ap,w
  6029  0407  0086               	movwf	6
  6030  0408  0187               	clrf	7
  6031  0409  0801               	movf	1,w
  6032  040A  0084               	movwf	4
  6033  040B  0185               	clrf	5
  6034  040C  3002               	movlw	2
  6035  040D  0781               	addwf	1,f
  6036  040E  3F00               	moviw [0]fsr0
  6037  040F  00D0               	movwf	??_vfpfcnvrt
  6038  0410  3F01               	moviw [1]fsr0
  6039  0411  00D1               	movwf	??_vfpfcnvrt+1
  6040  0412  0850               	movf	??_vfpfcnvrt,w
  6041  0413  00D5               	movwf	vfpfcnvrt@ll
  6042  0414  0851               	movf	??_vfpfcnvrt+1,w
  6043  0415  00D6               	movwf	vfpfcnvrt@ll+1
  6044  0416  0D89               	rlf	9,f
  6045  0417  3B89               	subwfb	9,f
  6046  0418  0989               	comf	9,f
  6047  0419  00D7               	movwf	vfpfcnvrt@ll+2
  6048  041A  00D8               	movwf	vfpfcnvrt@ll+3
  6049  041B  00D9               	movwf	vfpfcnvrt@ll+4
  6050  041C  00DA               	movwf	vfpfcnvrt@ll+5
  6051  041D  00DB               	movwf	vfpfcnvrt@ll+6
  6052  041E  00DC               	movwf	vfpfcnvrt@ll+7
  6053  041F                     l2176:
  6054                           
  6055                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  6056  041F  0855               	movf	vfpfcnvrt@ll,w
  6057  0420  00B0               	movwf	dtoa@d
  6058  0421  0856               	movf	vfpfcnvrt@ll+1,w
  6059  0422  00B1               	movwf	dtoa@d+1
  6060  0423  0857               	movf	vfpfcnvrt@ll+2,w
  6061  0424  00B2               	movwf	dtoa@d+2
  6062  0425  0858               	movf	vfpfcnvrt@ll+3,w
  6063  0426  00B3               	movwf	dtoa@d+3
  6064  0427  0859               	movf	vfpfcnvrt@ll+4,w
  6065  0428  00B4               	movwf	dtoa@d+4
  6066  0429  085A               	movf	vfpfcnvrt@ll+5,w
  6067  042A  00B5               	movwf	dtoa@d+5
  6068  042B  085B               	movf	vfpfcnvrt@ll+6,w
  6069  042C  00B6               	movwf	dtoa@d+6
  6070  042D  085C               	movf	vfpfcnvrt@ll+7,w
  6071  042E  00B7               	movwf	dtoa@d+7
  6072  042F  085D               	movf	vfpfcnvrt@fp,w
  6073  0430  3186  267D  3183   	fcall	_dtoa
  6074  0433  0020               	movlb	0	; select bank0
  6075  0434  0831               	movf	?_dtoa+1,w
  6076  0435  00CF               	movwf	?_vfpfcnvrt+1
  6077  0436  0830               	movf	?_dtoa,w
  6078  0437  00CE               	movwf	?_vfpfcnvrt
  6079  0438  2C91               	goto	l1051
  6080  0439                     l2180:
  6081                           
  6082                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  6083  0439  084E               	movf	vfpfcnvrt@fmt,w
  6084  043A  0086               	movwf	6
  6085  043B  0187               	clrf	7
  6086  043C  3F40               	moviw [0]fsr1
  6087  043D  00D0               	movwf	??_vfpfcnvrt
  6088  043E  3F41               	moviw [1]fsr1
  6089  043F  00D1               	movwf	??_vfpfcnvrt+1
  6090  0440  0850               	movf	??_vfpfcnvrt,w
  6091  0441  0084               	movwf	4
  6092  0442  0851               	movf	??_vfpfcnvrt+1,w
  6093  0443  0085               	movwf	5
  6094  0444  0012               	moviw fsr0++
  6095  0445  3A25               	xorlw	37
  6096  0446  1D03               	btfss	3,2
  6097  0447  2C49               	goto	u1621
  6098  0448  2C4A               	goto	u1620
  6099  0449                     u1621:
  6100  0449  2C63               	goto	l2190
  6101  044A                     u1620:
  6102  044A                     l2182:
  6103                           
  6104                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  6105  044A  084E               	movf	vfpfcnvrt@fmt,w
  6106  044B  0086               	movwf	6
  6107  044C  0187               	clrf	7
  6108  044D  3001               	movlw	1
  6109  044E  0781               	addwf	1,f
  6110  044F  3141               	addfsr 1,1
  6111  0450  1803               	skipnc
  6112  0451  0A81               	incf	1,f
  6113  0452                     l2184:
  6114                           
  6115                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  6116  0452  3025               	movlw	37
  6117  0453  00F2               	movwf	fputc@c
  6118  0454  3000               	movlw	0
  6119  0455  00F3               	movwf	fputc@c+1
  6120  0456  085D               	movf	vfpfcnvrt@fp,w
  6121  0457  00D0               	movwf	??_vfpfcnvrt
  6122  0458  0850               	movf	??_vfpfcnvrt,w
  6123  0459  00F4               	movwf	fputc@fp
  6124  045A  3180  2091  3183   	fcall	_fputc
  6125  045D                     l2186:
  6126                           
  6127                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  6128  045D  3001               	movlw	1
  6129  045E  0020               	movlb	0	; select bank0
  6130  045F  00CE               	movwf	?_vfpfcnvrt
  6131  0460  3000               	movlw	0
  6132  0461  00CF               	movwf	?_vfpfcnvrt+1
  6133  0462  2C91               	goto	l1051
  6134  0463                     l2190:
  6135                           
  6136                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  6137  0463  084E               	movf	vfpfcnvrt@fmt,w
  6138  0464  0086               	movwf	6
  6139  0465  0187               	clrf	7
  6140  0466  3001               	movlw	1
  6141  0467  0781               	addwf	1,f
  6142  0468  3141               	addfsr 1,1
  6143  0469  1803               	skipnc
  6144  046A  0A81               	incf	1,f
  6145  046B                     l2192:
  6146                           
  6147                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  6148  046B  01CE               	clrf	?_vfpfcnvrt
  6149  046C  01CF               	clrf	?_vfpfcnvrt+1
  6150  046D  2C91               	goto	l1051
  6151  046E                     l2196:
  6152                           
  6153                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  6154  046E  084E               	movf	vfpfcnvrt@fmt,w
  6155  046F  0086               	movwf	6
  6156  0470  0187               	clrf	7
  6157  0471  3F40               	moviw [0]fsr1
  6158  0472  00D0               	movwf	??_vfpfcnvrt
  6159  0473  3F41               	moviw [1]fsr1
  6160  0474  00D1               	movwf	??_vfpfcnvrt+1
  6161  0475  0850               	movf	??_vfpfcnvrt,w
  6162  0476  0084               	movwf	4
  6163  0477  0851               	movf	??_vfpfcnvrt+1,w
  6164  0478  0085               	movwf	5
  6165  0479  0800               	movf	0,w	;code access
  6166  047A  00D2               	movwf	??_vfpfcnvrt+2
  6167  047B  01D3               	clrf	??_vfpfcnvrt+3
  6168  047C  0852               	movf	??_vfpfcnvrt+2,w
  6169  047D  00F2               	movwf	fputc@c
  6170  047E  0853               	movf	??_vfpfcnvrt+3,w
  6171  047F  00F3               	movwf	fputc@c+1
  6172  0480  085D               	movf	vfpfcnvrt@fp,w
  6173  0481  00D4               	movwf	??_vfpfcnvrt+4
  6174  0482  0854               	movf	??_vfpfcnvrt+4,w
  6175  0483  00F4               	movwf	fputc@fp
  6176  0484  3180  2091  3183   	fcall	_fputc
  6177  0487                     l2198:
  6178                           
  6179                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  6180  0487  0020               	movlb	0	; select bank0
  6181  0488  084E               	movf	vfpfcnvrt@fmt,w
  6182  0489  0086               	movwf	6
  6183  048A  0187               	clrf	7
  6184  048B  3001               	movlw	1
  6185  048C  0781               	addwf	1,f
  6186  048D  3141               	addfsr 1,1
  6187  048E  1803               	skipnc
  6188  048F  0A81               	incf	1,f
  6189  0490  2C5D               	goto	l2186
  6190  0491                     l1051:
  6191  0491  0008               	return
  6192  0492                     __end_of_vfpfcnvrt:
  6193                           
  6194                           	psect	text7
  6195  067D                     __ptext7:	
  6196 ;; *************** function _dtoa *****************
  6197 ;; Defined at:
  6198 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6199 ;; Parameters:    Size  Location     Type
  6200 ;;  fp              1    wreg     PTR struct _IO_FILE
  6201 ;;		 -> NULL(0), sprintf@f(5), 
  6202 ;;  d               8   16[BANK0 ] long long 
  6203 ;; Auto vars:     Size  Location     Type
  6204 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  6205 ;;		 -> NULL(0), sprintf@f(5), 
  6206 ;;  n               8   36[BANK0 ] long long 
  6207 ;;  i               2   44[BANK0 ] int 
  6208 ;;  s               2   34[BANK0 ] int 
  6209 ;;  w               2   32[BANK0 ] int 
  6210 ;;  p               2   30[BANK0 ] int 
  6211 ;; Return value:  Size  Location     Type
  6212 ;;                  2   16[BANK0 ] int 
  6213 ;; Registers used:
  6214 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6215 ;; Tracked objects:
  6216 ;;		On entry : 0/0
  6217 ;;		On exit  : 0/0
  6218 ;;		Unchanged: 0/0
  6219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6220 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6221 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6222 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6223 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6224 ;;Total ram usage:       30 bytes
  6225 ;; Hardware stack levels used: 1
  6226 ;; Hardware stack levels required when called: 5
  6227 ;; This function calls:
  6228 ;;		___aodiv
  6229 ;;		___aomod
  6230 ;;		_abs
  6231 ;;		_pad
  6232 ;; This function is called by:
  6233 ;;		_vfpfcnvrt
  6234 ;; This function uses a non-reentrant model
  6235 ;;
  6236                           
  6237                           
  6238                           ;psect for function _dtoa
  6239  067D                     _dtoa:
  6240                           
  6241                           ;incstack = 0
  6242                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6243                           ;dtoa@fp stored from wreg
  6244  067D  0020               	movlb	0	; select bank0
  6245  067E  00BD               	movwf	dtoa@fp
  6246  067F                     l2100:
  6247                           
  6248                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  6249  067F  0830               	movf	dtoa@d,w
  6250  0680  00C4               	movwf	dtoa@n
  6251  0681  0831               	movf	dtoa@d+1,w
  6252  0682  00C5               	movwf	dtoa@n+1
  6253  0683  0832               	movf	dtoa@d+2,w
  6254  0684  00C6               	movwf	dtoa@n+2
  6255  0685  0833               	movf	dtoa@d+3,w
  6256  0686  00C7               	movwf	dtoa@n+3
  6257  0687  0834               	movf	dtoa@d+4,w
  6258  0688  00C8               	movwf	dtoa@n+4
  6259  0689  0835               	movf	dtoa@d+5,w
  6260  068A  00C9               	movwf	dtoa@n+5
  6261  068B  0836               	movf	dtoa@d+6,w
  6262  068C  00CA               	movwf	dtoa@n+6
  6263  068D  0837               	movf	dtoa@d+7,w
  6264  068E  00CB               	movwf	dtoa@n+7
  6265  068F                     l2102:
  6266                           
  6267                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  6268  068F  3044               	movlw	low dtoa@n
  6269  0690  0086               	movwf	6
  6270  0691  3000               	movlw	high dtoa@n
  6271  0692  0087               	movwf	7
  6272  0693  3F47               	moviw [7]fsr1
  6273  0694  00B8               	movwf	??_dtoa
  6274  0695  1BB8               	btfsc	??_dtoa,7
  6275  0696  2E98               	goto	u1431
  6276  0697  2E9A               	goto	u1430
  6277  0698                     u1431:
  6278  0698  3001               	movlw	1
  6279  0699  2E9B               	goto	u1440
  6280  069A                     u1430:
  6281  069A  3000               	movlw	0
  6282  069B                     u1440:
  6283  069B  0020               	movlb	0	; select bank0
  6284  069C  00B9               	movwf	??_dtoa+1
  6285  069D  01BA               	clrf	??_dtoa+2
  6286  069E  0839               	movf	??_dtoa+1,w
  6287  069F  00C2               	movwf	dtoa@s
  6288  06A0  083A               	movf	??_dtoa+2,w
  6289  06A1  00C3               	movwf	dtoa@s+1
  6290  06A2                     l2104:
  6291                           
  6292                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  6293  06A2  0842               	movf	dtoa@s,w
  6294  06A3  0443               	iorwf	dtoa@s+1,w
  6295  06A4  1903               	btfsc	3,2
  6296  06A5  2EA7               	goto	u1451
  6297  06A6  2EA8               	goto	u1450
  6298  06A7                     u1451:
  6299  06A7  2EC6               	goto	l1021
  6300  06A8                     u1450:
  6301  06A8                     l2106:
  6302                           
  6303                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  6304  06A8  09C4               	comf	dtoa@n,f
  6305  06A9  09C5               	comf	dtoa@n+1,f
  6306  06AA  09C6               	comf	dtoa@n+2,f
  6307  06AB  09C7               	comf	dtoa@n+3,f
  6308  06AC  09C8               	comf	dtoa@n+4,f
  6309  06AD  09C9               	comf	dtoa@n+5,f
  6310  06AE  09CA               	comf	dtoa@n+6,f
  6311  06AF  09CB               	comf	dtoa@n+7,f
  6312  06B0  0AC4               	incf	dtoa@n,f
  6313  06B1  1D03               	skipz
  6314  06B2  2EC6               	goto	u146lld
  6315  06B3  0AC5               	incf	dtoa@n+1,f
  6316  06B4  1D03               	skipz
  6317  06B5  2EC6               	goto	u146lld
  6318  06B6  0AC6               	incf	dtoa@n+2,f
  6319  06B7  1D03               	skipz
  6320  06B8  2EC6               	goto	u146lld
  6321  06B9  0AC7               	incf	dtoa@n+3,f
  6322  06BA  1D03               	skipz
  6323  06BB  2EC6               	goto	u146lld
  6324  06BC  0AC8               	incf	dtoa@n+4,f
  6325  06BD  1D03               	skipz
  6326  06BE  2EC6               	goto	u146lld
  6327  06BF  0AC9               	incf	dtoa@n+5,f
  6328  06C0  1D03               	skipz
  6329  06C1  2EC6               	goto	u146lld
  6330  06C2  0ACA               	incf	dtoa@n+6,f
  6331  06C3  1D03               	skipz
  6332  06C4  2EC6               	goto	u146lld
  6333  06C5  0ACB               	incf	dtoa@n+7,f
  6334  06C6                     u146lld:
  6335  06C6                     l1021:	
  6336                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 297:     }
  6337                           
  6338                           
  6339                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  6340  06C6  0021               	movlb	1	; select bank1
  6341  06C7  1BD8               	btfsc	(_prec+1)^(0+128),7
  6342  06C8  2ECA               	goto	u1471
  6343  06C9  2ECB               	goto	u1470
  6344  06CA                     u1471:
  6345  06CA  2ECF               	goto	l1022
  6346  06CB                     u1470:
  6347  06CB                     l2108:
  6348                           
  6349                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  6350  06CB  30FD               	movlw	253
  6351  06CC  05D9               	andwf	_flags^(0+128),f
  6352  06CD  30FF               	movlw	255
  6353  06CE  05DA               	andwf	(_flags+1)^(0+128),f
  6354  06CF                     l1022:	
  6355                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 302:     }
  6356                           
  6357                           
  6358                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  6359  06CF  0858               	movf	(_prec+1)^(0+128),w
  6360  06D0  3A80               	xorlw	128
  6361  06D1  0020               	movlb	0	; select bank0
  6362  06D2  00B8               	movwf	??_dtoa
  6363  06D3  3080               	movlw	128
  6364  06D4  0238               	subwf	??_dtoa,w
  6365  06D5  1D03               	skipz
  6366  06D6  2EDA               	goto	u1485
  6367  06D7  3001               	movlw	1
  6368  06D8  0021               	movlb	1	; select bank1
  6369  06D9  0257               	subwf	_prec^(0+128),w
  6370  06DA                     u1485:
  6371  06DA  1803               	skipnc
  6372  06DB  2EDD               	goto	u1481
  6373  06DC  2EDE               	goto	u1480
  6374  06DD                     u1481:
  6375  06DD  2EE4               	goto	l2112
  6376  06DE                     u1480:
  6377  06DE                     l2110:
  6378  06DE  3001               	movlw	1
  6379  06DF  0020               	movlb	0	; select bank0
  6380  06E0  00BE               	movwf	dtoa@p
  6381  06E1  3000               	movlw	0
  6382  06E2  00BF               	movwf	dtoa@p+1
  6383  06E3  2EEC               	goto	l1026
  6384  06E4                     l2112:
  6385  06E4  0021               	movlb	1	; select bank1
  6386  06E5  0858               	movf	(_prec+1)^(0+128),w
  6387  06E6  0020               	movlb	0	; select bank0
  6388  06E7  00BF               	movwf	dtoa@p+1
  6389  06E8  0021               	movlb	1	; select bank1
  6390  06E9  0857               	movf	_prec^(0+128),w
  6391  06EA  0020               	movlb	0	; select bank0
  6392  06EB  00BE               	movwf	dtoa@p
  6393  06EC                     l1026:
  6394                           
  6395                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  6396  06EC  0021               	movlb	1	; select bank1
  6397  06ED  0856               	movf	(_width+1)^(0+128),w
  6398  06EE  0020               	movlb	0	; select bank0
  6399  06EF  00C1               	movwf	dtoa@w+1
  6400  06F0  0021               	movlb	1	; select bank1
  6401  06F1  0855               	movf	_width^(0+128),w
  6402  06F2  0020               	movlb	0	; select bank0
  6403  06F3  00C0               	movwf	dtoa@w
  6404  06F4                     l2114:
  6405                           
  6406                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  6407  06F4  0842               	movf	dtoa@s,w
  6408  06F5  0443               	iorwf	dtoa@s+1,w
  6409  06F6  1D03               	btfss	3,2
  6410  06F7  2EF9               	goto	u1491
  6411  06F8  2EFA               	goto	u1490
  6412  06F9                     u1491:
  6413  06F9  2EFF               	goto	l2118
  6414  06FA                     u1490:
  6415  06FA                     l2116:
  6416  06FA  0021               	movlb	1	; select bank1
  6417  06FB  1D59               	btfss	_flags^(0+128),2
  6418  06FC  2EFE               	goto	u1501
  6419  06FD  2EFF               	goto	u1500
  6420  06FE                     u1501:
  6421  06FE  2F04               	goto	l1027
  6422  06FF                     u1500:
  6423  06FF                     l2118:
  6424                           
  6425                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  6426  06FF  30FF               	movlw	255
  6427  0700  0020               	movlb	0	; select bank0
  6428  0701  07C0               	addwf	dtoa@w,f
  6429  0702  30FF               	movlw	255
  6430  0703  3DC1               	addwfc	dtoa@w+1,f
  6431  0704                     l1027:	
  6432                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 307:     }
  6433                           
  6434                           
  6435                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  6436  0704  301F               	movlw	31
  6437  0705  0020               	movlb	0	; select bank0
  6438  0706  00CC               	movwf	dtoa@i
  6439  0707  3000               	movlw	0
  6440  0708  00CD               	movwf	dtoa@i+1
  6441  0709                     l2120:
  6442                           
  6443                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  6444  0709  0022               	movlb	2	; select bank2
  6445  070A  01BF               	clrf	(_dbuf^(0+256)+31)
  6446                           
  6447                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6448  070B  2F75               	goto	l1030
  6449  070C                     l2122:
  6450                           
  6451                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  6452  070C  30FF               	movlw	255
  6453  070D  0020               	movlb	0	; select bank0
  6454  070E  07CC               	addwf	dtoa@i,f
  6455  070F  30FF               	movlw	255
  6456  0710  3DCD               	addwfc	dtoa@i+1,f
  6457  0711                     l2124:
  6458                           
  6459                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  6460  0711  300A               	movlw	10
  6461  0712  00A0               	movwf	___aomod@divisor
  6462  0713  01A1               	clrf	___aomod@divisor+1
  6463  0714  01A2               	clrf	___aomod@divisor+2
  6464  0715  01A3               	clrf	___aomod@divisor+3
  6465  0716  01A4               	clrf	___aomod@divisor+4
  6466  0717  01A5               	clrf	___aomod@divisor+5
  6467  0718  01A6               	clrf	___aomod@divisor+6
  6468  0719  01A7               	clrf	___aomod@divisor+7
  6469  071A  0844               	movf	dtoa@n,w
  6470  071B  00A8               	movwf	___aomod@dividend
  6471  071C  0845               	movf	dtoa@n+1,w
  6472  071D  00A9               	movwf	___aomod@dividend+1
  6473  071E  0846               	movf	dtoa@n+2,w
  6474  071F  00AA               	movwf	___aomod@dividend+2
  6475  0720  0847               	movf	dtoa@n+3,w
  6476  0721  00AB               	movwf	___aomod@dividend+3
  6477  0722  0848               	movf	dtoa@n+4,w
  6478  0723  00AC               	movwf	___aomod@dividend+4
  6479  0724  0849               	movf	dtoa@n+5,w
  6480  0725  00AD               	movwf	___aomod@dividend+5
  6481  0726  084A               	movf	dtoa@n+6,w
  6482  0727  00AE               	movwf	___aomod@dividend+6
  6483  0728  084B               	movf	dtoa@n+7,w
  6484  0729  00AF               	movwf	___aomod@dividend+7
  6485  072A  3184  2492  3186   	fcall	___aomod
  6486  072D  0020               	movlb	0	; select bank0
  6487  072E  0821               	movf	?___aomod+1,w
  6488  072F  00F4               	movwf	abs@a+1
  6489  0730  0820               	movf	?___aomod,w
  6490  0731  00F3               	movwf	abs@a
  6491  0732  318F  271A  3186   	fcall	_abs
  6492  0735  0873               	movf	?_abs,w
  6493  0736  3E30               	addlw	48
  6494  0737  0020               	movlb	0	; select bank0
  6495  0738  00B8               	movwf	??_dtoa
  6496  0739  084C               	movf	dtoa@i,w
  6497  073A  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6498  073B  0086               	movwf	6
  6499  073C  3001               	movlw	1	; select bank2/3
  6500  073D  0087               	movwf	7
  6501  073E  0838               	movf	??_dtoa,w
  6502  073F  0081               	movwf	1
  6503  0740                     l2126:
  6504                           
  6505                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  6506  0740  30FF               	movlw	255
  6507  0741  07BE               	addwf	dtoa@p,f
  6508  0742  30FF               	movlw	255
  6509  0743  3DBF               	addwfc	dtoa@p+1,f
  6510  0744                     l2128:
  6511                           
  6512                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  6513  0744  30FF               	movlw	255
  6514  0745  07C0               	addwf	dtoa@w,f
  6515  0746  30FF               	movlw	255
  6516  0747  3DC1               	addwfc	dtoa@w+1,f
  6517  0748                     l2130:
  6518                           
  6519                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  6520  0748  300A               	movlw	10
  6521  0749  00A0               	movwf	___aodiv@divisor
  6522  074A  01A1               	clrf	___aodiv@divisor+1
  6523  074B  01A2               	clrf	___aodiv@divisor+2
  6524  074C  01A3               	clrf	___aodiv@divisor+3
  6525  074D  01A4               	clrf	___aodiv@divisor+4
  6526  074E  01A5               	clrf	___aodiv@divisor+5
  6527  074F  01A6               	clrf	___aodiv@divisor+6
  6528  0750  01A7               	clrf	___aodiv@divisor+7
  6529  0751  0844               	movf	dtoa@n,w
  6530  0752  00A8               	movwf	___aodiv@dividend
  6531  0753  0845               	movf	dtoa@n+1,w
  6532  0754  00A9               	movwf	___aodiv@dividend+1
  6533  0755  0846               	movf	dtoa@n+2,w
  6534  0756  00AA               	movwf	___aodiv@dividend+2
  6535  0757  0847               	movf	dtoa@n+3,w
  6536  0758  00AB               	movwf	___aodiv@dividend+3
  6537  0759  0848               	movf	dtoa@n+4,w
  6538  075A  00AC               	movwf	___aodiv@dividend+4
  6539  075B  0849               	movf	dtoa@n+5,w
  6540  075C  00AD               	movwf	___aodiv@dividend+5
  6541  075D  084A               	movf	dtoa@n+6,w
  6542  075E  00AE               	movwf	___aodiv@dividend+6
  6543  075F  084B               	movf	dtoa@n+7,w
  6544  0760  00AF               	movwf	___aodiv@dividend+7
  6545  0761  3185  257C  3186   	fcall	___aodiv
  6546  0764  0020               	movlb	0	; select bank0
  6547  0765  0820               	movf	?___aodiv,w
  6548  0766  00C4               	movwf	dtoa@n
  6549  0767  0821               	movf	?___aodiv+1,w
  6550  0768  00C5               	movwf	dtoa@n+1
  6551  0769  0822               	movf	?___aodiv+2,w
  6552  076A  00C6               	movwf	dtoa@n+2
  6553  076B  0823               	movf	?___aodiv+3,w
  6554  076C  00C7               	movwf	dtoa@n+3
  6555  076D  0824               	movf	?___aodiv+4,w
  6556  076E  00C8               	movwf	dtoa@n+4
  6557  076F  0825               	movf	?___aodiv+5,w
  6558  0770  00C9               	movwf	dtoa@n+5
  6559  0771  0826               	movf	?___aodiv+6,w
  6560  0772  00CA               	movwf	dtoa@n+6
  6561  0773  0827               	movf	?___aodiv+7,w
  6562  0774  00CB               	movwf	dtoa@n+7
  6563  0775                     l1030:	
  6564                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 318:     }
  6565                           
  6566                           
  6567                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6568  0775  0020               	movlb	0	; select bank0
  6569  0776  084D               	movf	dtoa@i+1,w
  6570  0777  3A80               	xorlw	128
  6571  0778  00B8               	movwf	??_dtoa
  6572  0779  3080               	movlw	128
  6573  077A  0238               	subwf	??_dtoa,w
  6574  077B  1D03               	skipz
  6575  077C  2F7F               	goto	u1515
  6576  077D  3001               	movlw	1
  6577  077E  024C               	subwf	dtoa@i,w
  6578  077F                     u1515:
  6579  077F  1C03               	skipc
  6580  0780  2F82               	goto	u1511
  6581  0781  2F83               	goto	u1510
  6582  0782                     u1511:
  6583  0782  2FB0               	goto	l2140
  6584  0783                     u1510:
  6585  0783                     l2132:
  6586  0783  0020               	movlb	0	; select bank0
  6587  0784  0844               	movf	dtoa@n,w
  6588  0785  0445               	iorwf	dtoa@n+1,w
  6589  0786  0446               	iorwf	dtoa@n+2,w
  6590  0787  0447               	iorwf	dtoa@n+3,w
  6591  0788  0448               	iorwf	dtoa@n+4,w
  6592  0789  0449               	iorwf	dtoa@n+5,w
  6593  078A  044A               	iorwf	dtoa@n+6,w
  6594  078B  044B               	iorwf	dtoa@n+7,w
  6595  078C  1D03               	skipz
  6596  078D  2F8F               	goto	u1521
  6597  078E  2F90               	goto	u1520
  6598  078F                     u1521:
  6599  078F  2F0C               	goto	l2122
  6600  0790                     u1520:
  6601  0790                     l2134:
  6602  0790  083F               	movf	dtoa@p+1,w
  6603  0791  3A80               	xorlw	128
  6604  0792  00B8               	movwf	??_dtoa
  6605  0793  3080               	movlw	128
  6606  0794  0238               	subwf	??_dtoa,w
  6607  0795  1D03               	skipz
  6608  0796  2F99               	goto	u1535
  6609  0797  3001               	movlw	1
  6610  0798  023E               	subwf	dtoa@p,w
  6611  0799                     u1535:
  6612  0799  1803               	skipnc
  6613  079A  2F9C               	goto	u1531
  6614  079B  2F9D               	goto	u1530
  6615  079C                     u1531:
  6616  079C  2F0C               	goto	l2122
  6617  079D                     u1530:
  6618  079D                     l2136:
  6619  079D  0020               	movlb	0	; select bank0
  6620  079E  0841               	movf	dtoa@w+1,w
  6621  079F  3A80               	xorlw	128
  6622  07A0  00B8               	movwf	??_dtoa
  6623  07A1  3080               	movlw	128
  6624  07A2  0238               	subwf	??_dtoa,w
  6625  07A3  1D03               	skipz
  6626  07A4  2FA7               	goto	u1545
  6627  07A5  3001               	movlw	1
  6628  07A6  0240               	subwf	dtoa@w,w
  6629  07A7                     u1545:
  6630  07A7  1C03               	skipc
  6631  07A8  2FAA               	goto	u1541
  6632  07A9  2FAB               	goto	u1540
  6633  07AA                     u1541:
  6634  07AA  2FB0               	goto	l2140
  6635  07AB                     u1540:
  6636  07AB                     l2138:
  6637  07AB  0021               	movlb	1	; select bank1
  6638  07AC  18D9               	btfsc	_flags^(0+128),1
  6639  07AD  2FAF               	goto	u1551
  6640  07AE  2FB0               	goto	u1550
  6641  07AF                     u1551:
  6642  07AF  2F0C               	goto	l2122
  6643  07B0                     u1550:
  6644  07B0                     l2140:
  6645                           
  6646                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  6647  07B0  0020               	movlb	0	; select bank0
  6648  07B1  0842               	movf	dtoa@s,w
  6649  07B2  0443               	iorwf	dtoa@s+1,w
  6650  07B3  1D03               	btfss	3,2
  6651  07B4  2FB6               	goto	u1561
  6652  07B5  2FB7               	goto	u1560
  6653  07B6                     u1561:
  6654  07B6  2FBC               	goto	l2144
  6655  07B7                     u1560:
  6656  07B7                     l2142:
  6657  07B7  0021               	movlb	1	; select bank1
  6658  07B8  1D59               	btfss	_flags^(0+128),2
  6659  07B9  2FBB               	goto	u1571
  6660  07BA  2FBC               	goto	u1570
  6661  07BB                     u1571:
  6662  07BB  2FD9               	goto	l2154
  6663  07BC                     u1570:
  6664  07BC                     l2144:
  6665                           
  6666                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  6667  07BC  30FF               	movlw	255
  6668  07BD  0020               	movlb	0	; select bank0
  6669  07BE  07CC               	addwf	dtoa@i,f
  6670  07BF  30FF               	movlw	255
  6671  07C0  3DCD               	addwfc	dtoa@i+1,f
  6672  07C1                     l2146:
  6673                           
  6674                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  6675  07C1  0842               	movf	dtoa@s,w
  6676  07C2  0443               	iorwf	dtoa@s+1,w
  6677  07C3  1D03               	btfss	3,2
  6678  07C4  2FC6               	goto	u1581
  6679  07C5  2FC7               	goto	u1580
  6680  07C6                     u1581:
  6681  07C6  2FCC               	goto	l2150
  6682  07C7                     u1580:
  6683  07C7                     l2148:
  6684  07C7  302B               	movlw	43
  6685  07C8  00BB               	movwf	_dtoa$1245
  6686  07C9  3000               	movlw	0
  6687  07CA  00BC               	movwf	_dtoa$1245+1
  6688  07CB  2FD0               	goto	l2152
  6689  07CC                     l2150:
  6690  07CC  302D               	movlw	45
  6691  07CD  00BB               	movwf	_dtoa$1245
  6692  07CE  3000               	movlw	0
  6693  07CF  00BC               	movwf	_dtoa$1245+1
  6694  07D0                     l2152:
  6695  07D0  083B               	movf	_dtoa$1245,w
  6696  07D1  00B8               	movwf	??_dtoa
  6697  07D2  084C               	movf	dtoa@i,w
  6698  07D3  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6699  07D4  0086               	movwf	6
  6700  07D5  3001               	movlw	1	; select bank2/3
  6701  07D6  0087               	movwf	7
  6702  07D7  0838               	movf	??_dtoa,w
  6703  07D8  0081               	movwf	1
  6704  07D9                     l2154:
  6705                           
  6706                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  6707  07D9  0020               	movlb	0	; select bank0
  6708  07DA  084C               	movf	dtoa@i,w
  6709  07DB  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6710  07DC  00B8               	movwf	??_dtoa
  6711  07DD  0838               	movf	??_dtoa,w
  6712  07DE  00A4               	movwf	pad@buf
  6713  07DF  0841               	movf	dtoa@w+1,w
  6714  07E0  00A6               	movwf	pad@p+1
  6715  07E1  0840               	movf	dtoa@w,w
  6716  07E2  00A5               	movwf	pad@p
  6717  07E3  083D               	movf	dtoa@fp,w
  6718  07E4  3181  2138  3186   	fcall	_pad
  6719  07E7  0020               	movlb	0	; select bank0
  6720  07E8  0825               	movf	?_pad+1,w
  6721  07E9  00B1               	movwf	?_dtoa+1
  6722  07EA  0824               	movf	?_pad,w
  6723  07EB  00B0               	movwf	?_dtoa
  6724  07EC                     l1044:
  6725  07EC  0008               	return
  6726  07ED                     __end_of_dtoa:
  6727                           
  6728                           	psect	text8
  6729  0138                     __ptext8:	
  6730 ;; *************** function _pad *****************
  6731 ;; Defined at:
  6732 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6733 ;; Parameters:    Size  Location     Type
  6734 ;;  fp              1    wreg     PTR struct _IO_FILE
  6735 ;;		 -> NULL(0), sprintf@f(5), 
  6736 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  6737 ;;		 -> dbuf(32), 
  6738 ;;  p               2    5[BANK0 ] int 
  6739 ;; Auto vars:     Size  Location     Type
  6740 ;;  fp              1   12[BANK0 ] PTR struct _IO_FILE
  6741 ;;		 -> NULL(0), sprintf@f(5), 
  6742 ;;  w               2   10[BANK0 ] int 
  6743 ;;  i               2    8[BANK0 ] int 
  6744 ;; Return value:  Size  Location     Type
  6745 ;;                  2    4[BANK0 ] int 
  6746 ;; Registers used:
  6747 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6748 ;; Tracked objects:
  6749 ;;		On entry : 0/0
  6750 ;;		On exit  : 0/0
  6751 ;;		Unchanged: 0/0
  6752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6753 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6754 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6755 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6756 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6757 ;;Total ram usage:        9 bytes
  6758 ;; Hardware stack levels used: 1
  6759 ;; Hardware stack levels required when called: 4
  6760 ;; This function calls:
  6761 ;;		_fputc
  6762 ;;		_fputs
  6763 ;;		_strlen
  6764 ;; This function is called by:
  6765 ;;		_dtoa
  6766 ;; This function uses a non-reentrant model
  6767 ;;
  6768                           
  6769                           
  6770                           ;psect for function _pad
  6771  0138                     _pad:
  6772                           
  6773                           ;incstack = 0
  6774                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6775                           ;pad@fp stored from wreg
  6776  0138  0020               	movlb	0	; select bank0
  6777  0139  00AC               	movwf	pad@fp
  6778  013A                     l2034:
  6779                           
  6780                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6781  013A  0021               	movlb	1	; select bank1
  6782  013B  1C59               	btfss	_flags^(0+128),0
  6783  013C  293E               	goto	u1331
  6784  013D  293F               	goto	u1330
  6785  013E                     u1331:
  6786  013E  2948               	goto	l2038
  6787  013F                     u1330:
  6788  013F                     l2036:
  6789                           
  6790                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6791  013F  0020               	movlb	0	; select bank0
  6792  0140  082C               	movf	pad@fp,w
  6793  0141  00A7               	movwf	??_pad
  6794  0142  0827               	movf	??_pad,w
  6795  0143  00FA               	movwf	fputs@fp
  6796  0144  0824               	movf	pad@buf,w
  6797  0145  318F  2790  3181   	fcall	_fputs
  6798  0148                     l2038:
  6799                           
  6800                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6801  0148  0020               	movlb	0	; select bank0
  6802  0149  1BA6               	btfsc	pad@p+1,7
  6803  014A  294C               	goto	u1341
  6804  014B  294D               	goto	u1340
  6805  014C                     u1341:
  6806  014C  2952               	goto	l2042
  6807  014D                     u1340:
  6808  014D                     l2040:
  6809  014D  0826               	movf	pad@p+1,w
  6810  014E  00AB               	movwf	pad@w+1
  6811  014F  0825               	movf	pad@p,w
  6812  0150  00AA               	movwf	pad@w
  6813  0151  2954               	goto	l1013
  6814  0152                     l2042:
  6815  0152  01AA               	clrf	pad@w
  6816  0153  01AB               	clrf	pad@w+1
  6817  0154                     l1013:
  6818                           
  6819                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6820  0154  01A8               	clrf	pad@i
  6821  0155  01A9               	clrf	pad@i+1
  6822                           
  6823                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6824  0156  2968               	goto	l2048
  6825  0157                     l2044:
  6826                           
  6827                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6828  0157  3020               	movlw	32
  6829  0158  00F2               	movwf	fputc@c
  6830  0159  3000               	movlw	0
  6831  015A  00F3               	movwf	fputc@c+1
  6832  015B  0020               	movlb	0	; select bank0
  6833  015C  082C               	movf	pad@fp,w
  6834  015D  00A7               	movwf	??_pad
  6835  015E  0827               	movf	??_pad,w
  6836  015F  00F4               	movwf	fputc@fp
  6837  0160  3180  2091  3181   	fcall	_fputc
  6838  0163                     l2046:
  6839                           
  6840                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6841  0163  3001               	movlw	1
  6842  0164  0020               	movlb	0	; select bank0
  6843  0165  07A8               	addwf	pad@i,f
  6844  0166  3000               	movlw	0
  6845  0167  3DA9               	addwfc	pad@i+1,f
  6846  0168                     l2048:
  6847                           
  6848                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6849  0168  0829               	movf	pad@i+1,w
  6850  0169  3A80               	xorlw	128
  6851  016A  00A7               	movwf	??_pad
  6852  016B  082B               	movf	pad@w+1,w
  6853  016C  3A80               	xorlw	128
  6854  016D  0227               	subwf	??_pad,w
  6855  016E  1D03               	skipz
  6856  016F  2972               	goto	u1355
  6857  0170  082A               	movf	pad@w,w
  6858  0171  0228               	subwf	pad@i,w
  6859  0172                     u1355:
  6860  0172  1C03               	skipc
  6861  0173  2975               	goto	u1351
  6862  0174  2976               	goto	u1350
  6863  0175                     u1351:
  6864  0175  2957               	goto	l2044
  6865  0176                     u1350:
  6866  0176                     l1016:
  6867                           
  6868                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6869  0176  0021               	movlb	1	; select bank1
  6870  0177  1859               	btfsc	_flags^(0+128),0
  6871  0178  297A               	goto	u1361
  6872  0179  297B               	goto	u1360
  6873  017A                     u1361:
  6874  017A  2984               	goto	l2052
  6875  017B                     u1360:
  6876  017B                     l2050:
  6877                           
  6878                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6879  017B  0020               	movlb	0	; select bank0
  6880  017C  082C               	movf	pad@fp,w
  6881  017D  00A7               	movwf	??_pad
  6882  017E  0827               	movf	??_pad,w
  6883  017F  00FA               	movwf	fputs@fp
  6884  0180  0824               	movf	pad@buf,w
  6885  0181  318F  2790  3181   	fcall	_fputs
  6886  0184                     l2052:
  6887                           
  6888                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6889  0184  0020               	movlb	0	; select bank0
  6890  0185  0824               	movf	pad@buf,w
  6891  0186  318F  2734  3181   	fcall	_strlen
  6892  0189  0020               	movlb	0	; select bank0
  6893  018A  082A               	movf	pad@w,w
  6894  018B  0770               	addwf	?_strlen,w
  6895  018C  00A4               	movwf	?_pad
  6896  018D  082B               	movf	pad@w+1,w
  6897  018E  3D71               	addwfc	?_strlen+1,w
  6898  018F  00A5               	movwf	?_pad+1
  6899  0190                     l1018:
  6900  0190  0008               	return
  6901  0191                     __end_of_pad:
  6902                           
  6903                           	psect	text9
  6904  0F34                     __ptext9:	
  6905 ;; *************** function _strlen *****************
  6906 ;; Defined at:
  6907 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  6908 ;; Parameters:    Size  Location     Type
  6909 ;;  s               1    wreg     PTR const unsigned char 
  6910 ;;		 -> dbuf(32), 
  6911 ;; Auto vars:     Size  Location     Type
  6912 ;;  s               1    4[COMMON] PTR const unsigned char 
  6913 ;;		 -> dbuf(32), 
  6914 ;;  a               1    3[COMMON] PTR const unsigned char 
  6915 ;;		 -> dbuf(32), 
  6916 ;; Return value:  Size  Location     Type
  6917 ;;                  2    0[COMMON] unsigned int 
  6918 ;; Registers used:
  6919 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6920 ;; Tracked objects:
  6921 ;;		On entry : 0/0
  6922 ;;		On exit  : 0/0
  6923 ;;		Unchanged: 0/0
  6924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6925 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6926 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6927 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6928 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6929 ;;Total ram usage:        5 bytes
  6930 ;; Hardware stack levels used: 1
  6931 ;; This function calls:
  6932 ;;		Nothing
  6933 ;; This function is called by:
  6934 ;;		_pad
  6935 ;; This function uses a non-reentrant model
  6936 ;;
  6937                           
  6938                           
  6939                           ;psect for function _strlen
  6940  0F34                     _strlen:
  6941                           
  6942                           ;incstack = 0
  6943                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  6944                           ;strlen@s stored from wreg
  6945  0F34  00F4               	movwf	strlen@s
  6946  0F35                     l1950:
  6947  0F35  0874               	movf	strlen@s,w
  6948  0F36  00F2               	movwf	??_strlen
  6949  0F37  0872               	movf	??_strlen,w
  6950  0F38  00F3               	movwf	strlen@a
  6951  0F39  2F3E               	goto	l1954
  6952  0F3A                     l1952:
  6953  0F3A  3001               	movlw	1
  6954  0F3B  00F2               	movwf	??_strlen
  6955  0F3C  0872               	movf	??_strlen,w
  6956  0F3D  07F4               	addwf	strlen@s,f
  6957  0F3E                     l1954:
  6958  0F3E  0874               	movf	strlen@s,w
  6959  0F3F  0086               	movwf	6
  6960  0F40  3001               	movlw	1	; select bank2/3
  6961  0F41  0087               	movwf	7
  6962  0F42  0801               	movf	1,w
  6963  0F43  1D03               	btfss	3,2
  6964  0F44  2F46               	goto	u1111
  6965  0F45  2F47               	goto	u1110
  6966  0F46                     u1111:
  6967  0F46  2F3A               	goto	l1952
  6968  0F47                     u1110:
  6969  0F47                     l1956:
  6970  0F47  0873               	movf	strlen@a,w
  6971  0F48  0274               	subwf	strlen@s,w
  6972  0F49  00F0               	movwf	?_strlen
  6973  0F4A  01F1               	clrf	?_strlen+1
  6974  0F4B  1BF0               	btfsc	?_strlen,7
  6975  0F4C  03F1               	decf	?_strlen+1,f
  6976  0F4D                     l1098:
  6977  0F4D  0008               	return
  6978  0F4E                     __end_of_strlen:
  6979                           
  6980                           	psect	text10
  6981  0F90                     __ptext10:	
  6982 ;; *************** function _fputs *****************
  6983 ;; Defined at:
  6984 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  6985 ;; Parameters:    Size  Location     Type
  6986 ;;  s               1    wreg     PTR const unsigned char 
  6987 ;;		 -> dbuf(32), 
  6988 ;;  fp              1   10[COMMON] PTR struct _IO_FILE
  6989 ;;		 -> NULL(0), sprintf@f(5), 
  6990 ;; Auto vars:     Size  Location     Type
  6991 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  6992 ;;		 -> dbuf(32), 
  6993 ;;  i               2    1[BANK0 ] int 
  6994 ;;  c               1    0[BANK0 ] unsigned char 
  6995 ;; Return value:  Size  Location     Type
  6996 ;;                  2   10[COMMON] int 
  6997 ;; Registers used:
  6998 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6999 ;; Tracked objects:
  7000 ;;		On entry : 0/0
  7001 ;;		On exit  : 0/0
  7002 ;;		Unchanged: 0/0
  7003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7004 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7005 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7006 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7007 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7008 ;;Total ram usage:        8 bytes
  7009 ;; Hardware stack levels used: 1
  7010 ;; Hardware stack levels required when called: 3
  7011 ;; This function calls:
  7012 ;;		_fputc
  7013 ;; This function is called by:
  7014 ;;		_pad
  7015 ;; This function uses a non-reentrant model
  7016 ;;
  7017                           
  7018                           
  7019                           ;psect for function _fputs
  7020  0F90                     _fputs:
  7021                           
  7022                           ;incstack = 0
  7023                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7024                           ;fputs@s stored from wreg
  7025  0F90  0020               	movlb	0	; select bank0
  7026  0F91  00A3               	movwf	fputs@s
  7027  0F92                     l1942:
  7028  0F92  01A1               	clrf	fputs@i
  7029  0F93  01A2               	clrf	fputs@i+1
  7030  0F94  2FA8               	goto	l1948
  7031  0F95                     l1944:
  7032  0F95  0820               	movf	fputs@c,w
  7033  0F96  00FB               	movwf	??_fputs
  7034  0F97  01FC               	clrf	??_fputs+1
  7035  0F98  087B               	movf	??_fputs,w
  7036  0F99  00F2               	movwf	fputc@c
  7037  0F9A  087C               	movf	??_fputs+1,w
  7038  0F9B  00F3               	movwf	fputc@c+1
  7039  0F9C  087A               	movf	fputs@fp,w
  7040  0F9D  00FD               	movwf	??_fputs+2
  7041  0F9E  087D               	movf	??_fputs+2,w
  7042  0F9F  00F4               	movwf	fputc@fp
  7043  0FA0  3180  2091  318F   	fcall	_fputc
  7044  0FA3                     l1946:
  7045  0FA3  3001               	movlw	1
  7046  0FA4  0020               	movlb	0	; select bank0
  7047  0FA5  07A1               	addwf	fputs@i,f
  7048  0FA6  3000               	movlw	0
  7049  0FA7  3DA2               	addwfc	fputs@i+1,f
  7050  0FA8                     l1948:
  7051  0FA8  0821               	movf	fputs@i,w
  7052  0FA9  0723               	addwf	fputs@s,w
  7053  0FAA  00FB               	movwf	??_fputs
  7054  0FAB  087B               	movf	??_fputs,w
  7055  0FAC  0086               	movwf	6
  7056  0FAD  3001               	movlw	1	; select bank2/3
  7057  0FAE  0087               	movwf	7
  7058  0FAF  0801               	movf	1,w
  7059  0FB0  00FC               	movwf	??_fputs+1
  7060  0FB1  087C               	movf	??_fputs+1,w
  7061  0FB2  00A0               	movwf	fputs@c
  7062  0FB3  0820               	movf	fputs@c,w
  7063  0FB4  1D03               	btfss	3,2
  7064  0FB5  2FB7               	goto	u1101
  7065  0FB6  2FB8               	goto	u1100
  7066  0FB7                     u1101:
  7067  0FB7  2F95               	goto	l1944
  7068  0FB8                     u1100:
  7069  0FB8                     l1085:
  7070  0FB8  0008               	return
  7071  0FB9                     __end_of_fputs:
  7072                           
  7073                           	psect	text11
  7074  0091                     __ptext11:	
  7075 ;; *************** function _fputc *****************
  7076 ;; Defined at:
  7077 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  7078 ;; Parameters:    Size  Location     Type
  7079 ;;  c               2    2[COMMON] int 
  7080 ;;  fp              1    4[COMMON] PTR struct _IO_FILE
  7081 ;;		 -> NULL(0), sprintf@f(5), 
  7082 ;; Auto vars:     Size  Location     Type
  7083 ;;		None
  7084 ;; Return value:  Size  Location     Type
  7085 ;;                  2    2[COMMON] int 
  7086 ;; Registers used:
  7087 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7088 ;; Tracked objects:
  7089 ;;		On entry : 0/0
  7090 ;;		On exit  : 0/0
  7091 ;;		Unchanged: 0/0
  7092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7093 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7095 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7096 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7097 ;;Total ram usage:        8 bytes
  7098 ;; Hardware stack levels used: 1
  7099 ;; Hardware stack levels required when called: 2
  7100 ;; This function calls:
  7101 ;;		_putch
  7102 ;; This function is called by:
  7103 ;;		_pad
  7104 ;;		_vfpfcnvrt
  7105 ;;		_fputs
  7106 ;; This function uses a non-reentrant model
  7107 ;;
  7108                           
  7109                           
  7110                           ;psect for function _fputc
  7111  0091                     _fputc:
  7112  0091                     l1918:	
  7113                           ;incstack = 0
  7114                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7115                           
  7116  0091  0874               	movf	fputc@fp,w
  7117  0092  1903               	btfsc	3,2
  7118  0093  2895               	goto	u1031
  7119  0094  2896               	goto	u1030
  7120  0095                     u1031:
  7121  0095  289B               	goto	l1922
  7122  0096                     u1030:
  7123  0096                     l1920:
  7124  0096  0874               	movf	fputc@fp,w
  7125  0097  1D03               	btfss	3,2
  7126  0098  289A               	goto	u1041
  7127  0099  289B               	goto	u1040
  7128  009A                     u1041:
  7129  009A  28A0               	goto	l1924
  7130  009B                     u1040:
  7131  009B                     l1922:
  7132  009B  0872               	movf	fputc@c,w
  7133  009C  318E  265D  3180   	fcall	_putch
  7134  009F  28DF               	goto	l1077
  7135  00A0                     l1924:
  7136  00A0  0874               	movf	fputc@fp,w
  7137  00A1  3E03               	addlw	3
  7138  00A2  0086               	movwf	6
  7139  00A3  0187               	clrf	7
  7140  00A4  0016               	moviw fsr1++
  7141  00A5  0401               	iorwf	1,w
  7142  00A6  1903               	btfsc	3,2
  7143  00A7  28A9               	goto	u1051
  7144  00A8  28AA               	goto	u1050
  7145  00A9                     u1051:
  7146  00A9  28C7               	goto	l1928
  7147  00AA                     u1050:
  7148  00AA                     l1926:
  7149  00AA  0874               	movf	fputc@fp,w
  7150  00AB  3E03               	addlw	3
  7151  00AC  0086               	movwf	6
  7152  00AD  0187               	clrf	7
  7153  00AE  3F40               	moviw [0]fsr1
  7154  00AF  00F5               	movwf	??_fputc
  7155  00B0  3F41               	moviw [1]fsr1
  7156  00B1  00F6               	movwf	??_fputc+1
  7157  00B2  0A74               	incf	fputc@fp,w
  7158  00B3  0086               	movwf	6
  7159  00B4  0187               	clrf	7
  7160  00B5  3F40               	moviw [0]fsr1
  7161  00B6  00F7               	movwf	??_fputc+2
  7162  00B7  3F41               	moviw [1]fsr1
  7163  00B8  00F8               	movwf	??_fputc+3
  7164  00B9  0878               	movf	??_fputc+3,w
  7165  00BA  3A80               	xorlw	128
  7166  00BB  00F9               	movwf	??_fputc+4
  7167  00BC  0876               	movf	??_fputc+1,w
  7168  00BD  3A80               	xorlw	128
  7169  00BE  0279               	subwf	??_fputc+4,w
  7170  00BF  1D03               	skipz
  7171  00C0  28C3               	goto	u1065
  7172  00C1  0875               	movf	??_fputc,w
  7173  00C2  0277               	subwf	??_fputc+2,w
  7174  00C3                     u1065:
  7175  00C3  1803               	skipnc
  7176  00C4  28C6               	goto	u1061
  7177  00C5  28C7               	goto	u1060
  7178  00C6                     u1061:
  7179  00C6  28DF               	goto	l1077
  7180  00C7                     u1060:
  7181  00C7                     l1928:
  7182  00C7  0872               	movf	fputc@c,w
  7183  00C8  00F5               	movwf	??_fputc
  7184  00C9  0874               	movf	fputc@fp,w
  7185  00CA  0086               	movwf	6
  7186  00CB  0187               	clrf	7
  7187  00CC  0A74               	incf	fputc@fp,w
  7188  00CD  0084               	movwf	4
  7189  00CE  0185               	clrf	5
  7190  00CF  0800               	movf	0,w
  7191  00D0  0701               	addwf	1,w
  7192  00D1  00F6               	movwf	??_fputc+1
  7193  00D2  0876               	movf	??_fputc+1,w
  7194  00D3  0086               	movwf	6
  7195  00D4  0187               	clrf	7
  7196  00D5  0875               	movf	??_fputc,w
  7197  00D6  0081               	movwf	1
  7198  00D7                     l1930:
  7199  00D7  0A74               	incf	fputc@fp,w
  7200  00D8  0086               	movwf	6
  7201  00D9  0187               	clrf	7
  7202  00DA  3001               	movlw	1
  7203  00DB  0781               	addwf	1,f
  7204  00DC  3141               	addfsr 1,1
  7205  00DD  1803               	skipnc
  7206  00DE  0A81               	incf	1,f
  7207  00DF                     l1077:
  7208  00DF  0008               	return
  7209  00E0                     __end_of_fputc:
  7210                           
  7211                           	psect	text12
  7212  0E5D                     __ptext12:	
  7213 ;; *************** function _putch *****************
  7214 ;; Defined at:
  7215 ;;		line 64 in file "Serial.c"
  7216 ;; Parameters:    Size  Location     Type
  7217 ;;  txData          1    wreg     unsigned char 
  7218 ;; Auto vars:     Size  Location     Type
  7219 ;;  txData          1    1[COMMON] unsigned char 
  7220 ;; Return value:  Size  Location     Type
  7221 ;;                  1    wreg      void 
  7222 ;; Registers used:
  7223 ;;		wreg, status,2, status,0, pclath, cstack
  7224 ;; Tracked objects:
  7225 ;;		On entry : 0/0
  7226 ;;		On exit  : 0/0
  7227 ;;		Unchanged: 0/0
  7228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7230 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7232 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7233 ;;Total ram usage:        1 bytes
  7234 ;; Hardware stack levels used: 1
  7235 ;; Hardware stack levels required when called: 1
  7236 ;; This function calls:
  7237 ;;		_serial_TX
  7238 ;; This function is called by:
  7239 ;;		_fputc
  7240 ;; This function uses a non-reentrant model
  7241 ;;
  7242                           
  7243                           
  7244                           ;psect for function _putch
  7245  0E5D                     _putch:
  7246                           
  7247                           ;incstack = 0
  7248                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  7249                           ;putch@txData stored from wreg
  7250  0E5D  00F1               	movwf	putch@txData
  7251  0E5E                     l1916:
  7252                           
  7253                           ;Serial.c: 65:     serial_TX(txData);
  7254  0E5E  0871               	movf	putch@txData,w
  7255  0E5F  318E  2687  318E   	fcall	_serial_TX
  7256  0E62                     l156:
  7257  0E62  0008               	return
  7258  0E63                     __end_of_putch:
  7259                           
  7260                           	psect	text13
  7261  0E87                     __ptext13:	
  7262 ;; *************** function _serial_TX *****************
  7263 ;; Defined at:
  7264 ;;		line 35 in file "Serial.c"
  7265 ;; Parameters:    Size  Location     Type
  7266 ;;  dato            1    wreg     unsigned char 
  7267 ;; Auto vars:     Size  Location     Type
  7268 ;;  dato            1    0[COMMON] unsigned char 
  7269 ;; Return value:  Size  Location     Type
  7270 ;;                  1    wreg      void 
  7271 ;; Registers used:
  7272 ;;		wreg
  7273 ;; Tracked objects:
  7274 ;;		On entry : 0/0
  7275 ;;		On exit  : 0/0
  7276 ;;		Unchanged: 0/0
  7277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7279 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7281 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7282 ;;Total ram usage:        1 bytes
  7283 ;; Hardware stack levels used: 1
  7284 ;; This function calls:
  7285 ;;		Nothing
  7286 ;; This function is called by:
  7287 ;;		_putch
  7288 ;; This function uses a non-reentrant model
  7289 ;;
  7290                           
  7291                           
  7292                           ;psect for function _serial_TX
  7293  0E87                     _serial_TX:
  7294                           
  7295                           ;incstack = 0
  7296                           ; Regs used in _serial_TX: [wreg]
  7297                           ;serial_TX@dato stored from wreg
  7298  0E87  00F0               	movwf	serial_TX@dato
  7299  0E88                     l1912:
  7300  0E88                     l140:	
  7301                           ;Serial.c: 36:     while(PIR3bits.TXIF == 0){}
  7302                           
  7303  0E88  002E               	movlb	14	; select bank14
  7304  0E89  1E0F               	btfss	15,4	;volatile
  7305  0E8A  2E8C               	goto	u1021
  7306  0E8B  2E8D               	goto	u1020
  7307  0E8C                     u1021:
  7308  0E8C  2E88               	goto	l140
  7309  0E8D                     u1020:
  7310  0E8D                     l1914:
  7311                           
  7312                           ;Serial.c: 38:         TXREG = dato;
  7313  0E8D  0870               	movf	serial_TX@dato,w
  7314  0E8E  0022               	movlb	2	; select bank2
  7315  0E8F  009A               	movwf	26	;volatile
  7316  0E90                     l143:
  7317  0E90  0008               	return
  7318  0E91                     __end_of_serial_TX:
  7319                           
  7320                           	psect	text14
  7321  0F1A                     __ptext14:	
  7322 ;; *************** function _abs *****************
  7323 ;; Defined at:
  7324 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  7325 ;; Parameters:    Size  Location     Type
  7326 ;;  a               2    3[COMMON] int 
  7327 ;; Auto vars:     Size  Location     Type
  7328 ;;		None
  7329 ;; Return value:  Size  Location     Type
  7330 ;;                  2    3[COMMON] int 
  7331 ;; Registers used:
  7332 ;;		wreg, status,2, status,0
  7333 ;; Tracked objects:
  7334 ;;		On entry : 0/0
  7335 ;;		On exit  : 0/0
  7336 ;;		Unchanged: 0/0
  7337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7338 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7340 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7341 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7342 ;;Total ram usage:        4 bytes
  7343 ;; Hardware stack levels used: 1
  7344 ;; This function calls:
  7345 ;;		Nothing
  7346 ;; This function is called by:
  7347 ;;		_dtoa
  7348 ;; This function uses a non-reentrant model
  7349 ;;
  7350                           
  7351                           
  7352                           ;psect for function _abs
  7353  0F1A                     _abs:
  7354  0F1A                     l2056:	
  7355                           ;incstack = 0
  7356                           ; Regs used in _abs: [wreg+status,2+status,0]
  7357                           
  7358  0F1A  0874               	movf	abs@a+1,w
  7359  0F1B  3A80               	xorlw	128
  7360  0F1C  00F5               	movwf	??_abs
  7361  0F1D  3080               	movlw	128
  7362  0F1E  0275               	subwf	??_abs,w
  7363  0F1F  1D03               	skipz
  7364  0F20  2F23               	goto	u1375
  7365  0F21  3001               	movlw	1
  7366  0F22  0273               	subwf	abs@a,w
  7367  0F23                     u1375:
  7368  0F23  1803               	skipnc
  7369  0F24  2F26               	goto	u1371
  7370  0F25  2F27               	goto	u1370
  7371  0F26                     u1371:
  7372  0F26  2F33               	goto	l1062
  7373  0F27                     u1370:
  7374  0F27                     l2058:
  7375  0F27  0973               	comf	abs@a,w
  7376  0F28  00F5               	movwf	??_abs
  7377  0F29  0974               	comf	abs@a+1,w
  7378  0F2A  00F6               	movwf	??_abs+1
  7379  0F2B  0AF5               	incf	??_abs,f
  7380  0F2C  1903               	skipnz
  7381  0F2D  0AF6               	incf	??_abs+1,f
  7382  0F2E  0875               	movf	??_abs,w
  7383  0F2F  00F3               	movwf	?_abs
  7384  0F30  0876               	movf	??_abs+1,w
  7385  0F31  00F4               	movwf	?_abs+1
  7386  0F32  2F33               	goto	l1065
  7387  0F33                     l1062:
  7388  0F33                     l1065:
  7389  0F33  0008               	return
  7390  0F34                     __end_of_abs:
  7391                           
  7392                           	psect	text15
  7393  0492                     __ptext15:	
  7394 ;; *************** function ___aomod *****************
  7395 ;; Defined at:
  7396 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  7397 ;; Parameters:    Size  Location     Type
  7398 ;;  divisor         8    0[BANK0 ] long long 
  7399 ;;  dividend        8    8[BANK0 ] long long 
  7400 ;; Auto vars:     Size  Location     Type
  7401 ;;  sign            1    2[COMMON] unsigned char 
  7402 ;;  counter         1    1[COMMON] unsigned char 
  7403 ;; Return value:  Size  Location     Type
  7404 ;;                  8    0[BANK0 ] long long 
  7405 ;; Registers used:
  7406 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7407 ;; Tracked objects:
  7408 ;;		On entry : 0/0
  7409 ;;		On exit  : 0/0
  7410 ;;		Unchanged: 0/0
  7411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7412 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7413 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7414 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7415 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7416 ;;Total ram usage:       19 bytes
  7417 ;; Hardware stack levels used: 1
  7418 ;; This function calls:
  7419 ;;		Nothing
  7420 ;; This function is called by:
  7421 ;;		_dtoa
  7422 ;; This function uses a non-reentrant model
  7423 ;;
  7424                           
  7425                           
  7426                           ;psect for function ___aomod
  7427  0492                     ___aomod:
  7428  0492                     l2004:	
  7429                           ;incstack = 0
  7430                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  7431                           
  7432  0492  01F2               	clrf	___aomod@sign
  7433  0493                     l2006:
  7434  0493  3028               	movlw	low ___aomod@dividend
  7435  0494  0086               	movwf	6
  7436  0495  3000               	movlw	high ___aomod@dividend
  7437  0496  0087               	movwf	7
  7438  0497  3F47               	moviw [7]fsr1
  7439  0498  00F0               	movwf	??___aomod
  7440  0499  1FF0               	btfss	??___aomod,7
  7441  049A  2C9C               	goto	u1231
  7442  049B  2C9D               	goto	u1230
  7443  049C                     u1231:
  7444  049C  2CBE               	goto	l2010
  7445  049D                     u1230:
  7446  049D                     l2008:
  7447  049D  0020               	movlb	0	; select bank0
  7448  049E  09A8               	comf	___aomod@dividend,f
  7449  049F  09A9               	comf	___aomod@dividend+1,f
  7450  04A0  09AA               	comf	___aomod@dividend+2,f
  7451  04A1  09AB               	comf	___aomod@dividend+3,f
  7452  04A2  09AC               	comf	___aomod@dividend+4,f
  7453  04A3  09AD               	comf	___aomod@dividend+5,f
  7454  04A4  09AE               	comf	___aomod@dividend+6,f
  7455  04A5  09AF               	comf	___aomod@dividend+7,f
  7456  04A6  0AA8               	incf	___aomod@dividend,f
  7457  04A7  1D03               	skipz
  7458  04A8  2CBC               	goto	u124lld
  7459  04A9  0AA9               	incf	___aomod@dividend+1,f
  7460  04AA  1D03               	skipz
  7461  04AB  2CBC               	goto	u124lld
  7462  04AC  0AAA               	incf	___aomod@dividend+2,f
  7463  04AD  1D03               	skipz
  7464  04AE  2CBC               	goto	u124lld
  7465  04AF  0AAB               	incf	___aomod@dividend+3,f
  7466  04B0  1D03               	skipz
  7467  04B1  2CBC               	goto	u124lld
  7468  04B2  0AAC               	incf	___aomod@dividend+4,f
  7469  04B3  1D03               	skipz
  7470  04B4  2CBC               	goto	u124lld
  7471  04B5  0AAD               	incf	___aomod@dividend+5,f
  7472  04B6  1D03               	skipz
  7473  04B7  2CBC               	goto	u124lld
  7474  04B8  0AAE               	incf	___aomod@dividend+6,f
  7475  04B9  1D03               	skipz
  7476  04BA  2CBC               	goto	u124lld
  7477  04BB  0AAF               	incf	___aomod@dividend+7,f
  7478  04BC                     u124lld:
  7479  04BC  01F2               	clrf	___aomod@sign
  7480  04BD  0AF2               	incf	___aomod@sign,f
  7481  04BE                     l2010:
  7482  04BE  3020               	movlw	low ___aomod@divisor
  7483  04BF  0086               	movwf	6
  7484  04C0  3000               	movlw	high ___aomod@divisor
  7485  04C1  0087               	movwf	7
  7486  04C2  3F47               	moviw [7]fsr1
  7487  04C3  00F0               	movwf	??___aomod
  7488  04C4  1FF0               	btfss	??___aomod,7
  7489  04C5  2CC7               	goto	u1251
  7490  04C6  2CC8               	goto	u1250
  7491  04C7                     u1251:
  7492  04C7  2CE7               	goto	l2014
  7493  04C8                     u1250:
  7494  04C8                     l2012:
  7495  04C8  0020               	movlb	0	; select bank0
  7496  04C9  09A0               	comf	___aomod@divisor,f
  7497  04CA  09A1               	comf	___aomod@divisor+1,f
  7498  04CB  09A2               	comf	___aomod@divisor+2,f
  7499  04CC  09A3               	comf	___aomod@divisor+3,f
  7500  04CD  09A4               	comf	___aomod@divisor+4,f
  7501  04CE  09A5               	comf	___aomod@divisor+5,f
  7502  04CF  09A6               	comf	___aomod@divisor+6,f
  7503  04D0  09A7               	comf	___aomod@divisor+7,f
  7504  04D1  0AA0               	incf	___aomod@divisor,f
  7505  04D2  1D03               	skipz
  7506  04D3  2CE7               	goto	u126lld
  7507  04D4  0AA1               	incf	___aomod@divisor+1,f
  7508  04D5  1D03               	skipz
  7509  04D6  2CE7               	goto	u126lld
  7510  04D7  0AA2               	incf	___aomod@divisor+2,f
  7511  04D8  1D03               	skipz
  7512  04D9  2CE7               	goto	u126lld
  7513  04DA  0AA3               	incf	___aomod@divisor+3,f
  7514  04DB  1D03               	skipz
  7515  04DC  2CE7               	goto	u126lld
  7516  04DD  0AA4               	incf	___aomod@divisor+4,f
  7517  04DE  1D03               	skipz
  7518  04DF  2CE7               	goto	u126lld
  7519  04E0  0AA5               	incf	___aomod@divisor+5,f
  7520  04E1  1D03               	skipz
  7521  04E2  2CE7               	goto	u126lld
  7522  04E3  0AA6               	incf	___aomod@divisor+6,f
  7523  04E4  1D03               	skipz
  7524  04E5  2CE7               	goto	u126lld
  7525  04E6  0AA7               	incf	___aomod@divisor+7,f
  7526  04E7                     u126lld:
  7527  04E7                     l2014:
  7528  04E7  0020               	movlb	0	; select bank0
  7529  04E8  0820               	movf	___aomod@divisor,w
  7530  04E9  0421               	iorwf	___aomod@divisor+1,w
  7531  04EA  0422               	iorwf	___aomod@divisor+2,w
  7532  04EB  0423               	iorwf	___aomod@divisor+3,w
  7533  04EC  0424               	iorwf	___aomod@divisor+4,w
  7534  04ED  0425               	iorwf	___aomod@divisor+5,w
  7535  04EE  0426               	iorwf	___aomod@divisor+6,w
  7536  04EF  0427               	iorwf	___aomod@divisor+7,w
  7537  04F0  1903               	skipnz
  7538  04F1  2CF3               	goto	u1271
  7539  04F2  2CF4               	goto	u1270
  7540  04F3                     u1271:
  7541  04F3  2D47               	goto	l2030
  7542  04F4                     u1270:
  7543  04F4                     l2016:
  7544  04F4  01F1               	clrf	___aomod@counter
  7545  04F5  0AF1               	incf	___aomod@counter,f
  7546  04F6  2D03               	goto	l2022
  7547  04F7                     l2018:
  7548  04F7  35A0               	lslf	___aomod@divisor,f
  7549  04F8  0DA1               	rlf	___aomod@divisor+1,f
  7550  04F9  0DA2               	rlf	___aomod@divisor+2,f
  7551  04FA  0DA3               	rlf	___aomod@divisor+3,f
  7552  04FB  0DA4               	rlf	___aomod@divisor+4,f
  7553  04FC  0DA5               	rlf	___aomod@divisor+5,f
  7554  04FD  0DA6               	rlf	___aomod@divisor+6,f
  7555  04FE  0DA7               	rlf	___aomod@divisor+7,f
  7556  04FF                     l2020:
  7557  04FF  3001               	movlw	1
  7558  0500  00F0               	movwf	??___aomod
  7559  0501  0870               	movf	??___aomod,w
  7560  0502  07F1               	addwf	___aomod@counter,f
  7561  0503                     l2022:
  7562  0503  1FA7               	btfss	___aomod@divisor+7,7
  7563  0504  2D06               	goto	u1281
  7564  0505  2D07               	goto	u1280
  7565  0506                     u1281:
  7566  0506  2CF7               	goto	l2018
  7567  0507                     u1280:
  7568  0507                     l2024:
  7569  0507  0827               	movf	___aomod@divisor+7,w
  7570  0508  022F               	subwf	___aomod@dividend+7,w
  7571  0509  1D03               	skipz
  7572  050A  2D25               	goto	u1295
  7573  050B  0826               	movf	___aomod@divisor+6,w
  7574  050C  022E               	subwf	___aomod@dividend+6,w
  7575  050D  1D03               	skipz
  7576  050E  2D25               	goto	u1295
  7577  050F  0825               	movf	___aomod@divisor+5,w
  7578  0510  022D               	subwf	___aomod@dividend+5,w
  7579  0511  1D03               	skipz
  7580  0512  2D25               	goto	u1295
  7581  0513  0824               	movf	___aomod@divisor+4,w
  7582  0514  022C               	subwf	___aomod@dividend+4,w
  7583  0515  1D03               	skipz
  7584  0516  2D25               	goto	u1295
  7585  0517  0823               	movf	___aomod@divisor+3,w
  7586  0518  022B               	subwf	___aomod@dividend+3,w
  7587  0519  1D03               	skipz
  7588  051A  2D25               	goto	u1295
  7589  051B  0822               	movf	___aomod@divisor+2,w
  7590  051C  022A               	subwf	___aomod@dividend+2,w
  7591  051D  1D03               	skipz
  7592  051E  2D25               	goto	u1295
  7593  051F  0821               	movf	___aomod@divisor+1,w
  7594  0520  0229               	subwf	___aomod@dividend+1,w
  7595  0521  1D03               	skipz
  7596  0522  2D25               	goto	u1295
  7597  0523  0820               	movf	___aomod@divisor,w
  7598  0524  0228               	subwf	___aomod@dividend,w
  7599  0525                     u1295:
  7600  0525  1C03               	skipc
  7601  0526  2D28               	goto	u1291
  7602  0527  2D29               	goto	u1290
  7603  0528                     u1291:
  7604  0528  2D39               	goto	l2028
  7605  0529                     u1290:
  7606  0529                     l2026:
  7607  0529  0820               	movf	___aomod@divisor,w
  7608  052A  02A8               	subwf	___aomod@dividend,f
  7609  052B  0821               	movf	___aomod@divisor+1,w
  7610  052C  3BA9               	subwfb	___aomod@dividend+1,f
  7611  052D  0822               	movf	___aomod@divisor+2,w
  7612  052E  3BAA               	subwfb	___aomod@dividend+2,f
  7613  052F  0823               	movf	___aomod@divisor+3,w
  7614  0530  3BAB               	subwfb	___aomod@dividend+3,f
  7615  0531  0824               	movf	___aomod@divisor+4,w
  7616  0532  3BAC               	subwfb	___aomod@dividend+4,f
  7617  0533  0825               	movf	___aomod@divisor+5,w
  7618  0534  3BAD               	subwfb	___aomod@dividend+5,f
  7619  0535  0826               	movf	___aomod@divisor+6,w
  7620  0536  3BAE               	subwfb	___aomod@dividend+6,f
  7621  0537  0827               	movf	___aomod@divisor+7,w
  7622  0538  3BAF               	subwfb	___aomod@dividend+7,f
  7623  0539                     l2028:
  7624  0539  36A7               	lsrf	___aomod@divisor+7,f
  7625  053A  0CA6               	rrf	___aomod@divisor+6,f
  7626  053B  0CA5               	rrf	___aomod@divisor+5,f
  7627  053C  0CA4               	rrf	___aomod@divisor+4,f
  7628  053D  0CA3               	rrf	___aomod@divisor+3,f
  7629  053E  0CA2               	rrf	___aomod@divisor+2,f
  7630  053F  0CA1               	rrf	___aomod@divisor+1,f
  7631  0540  0CA0               	rrf	___aomod@divisor,f
  7632  0541  3001               	movlw	1
  7633  0542  02F1               	subwf	___aomod@counter,f
  7634  0543  1D03               	btfss	3,2
  7635  0544  2D46               	goto	u1301
  7636  0545  2D47               	goto	u1300
  7637  0546                     u1301:
  7638  0546  2D07               	goto	l2024
  7639  0547                     u1300:
  7640  0547                     l2030:
  7641  0547  0872               	movf	___aomod@sign,w
  7642  0548  1903               	btfsc	3,2
  7643  0549  2D4B               	goto	u1311
  7644  054A  2D4C               	goto	u1310
  7645  054B                     u1311:
  7646  054B  2D6A               	goto	l636
  7647  054C                     u1310:
  7648  054C                     l2032:
  7649  054C  09A8               	comf	___aomod@dividend,f
  7650  054D  09A9               	comf	___aomod@dividend+1,f
  7651  054E  09AA               	comf	___aomod@dividend+2,f
  7652  054F  09AB               	comf	___aomod@dividend+3,f
  7653  0550  09AC               	comf	___aomod@dividend+4,f
  7654  0551  09AD               	comf	___aomod@dividend+5,f
  7655  0552  09AE               	comf	___aomod@dividend+6,f
  7656  0553  09AF               	comf	___aomod@dividend+7,f
  7657  0554  0AA8               	incf	___aomod@dividend,f
  7658  0555  1D03               	skipz
  7659  0556  2D6A               	goto	u132lld
  7660  0557  0AA9               	incf	___aomod@dividend+1,f
  7661  0558  1D03               	skipz
  7662  0559  2D6A               	goto	u132lld
  7663  055A  0AAA               	incf	___aomod@dividend+2,f
  7664  055B  1D03               	skipz
  7665  055C  2D6A               	goto	u132lld
  7666  055D  0AAB               	incf	___aomod@dividend+3,f
  7667  055E  1D03               	skipz
  7668  055F  2D6A               	goto	u132lld
  7669  0560  0AAC               	incf	___aomod@dividend+4,f
  7670  0561  1D03               	skipz
  7671  0562  2D6A               	goto	u132lld
  7672  0563  0AAD               	incf	___aomod@dividend+5,f
  7673  0564  1D03               	skipz
  7674  0565  2D6A               	goto	u132lld
  7675  0566  0AAE               	incf	___aomod@dividend+6,f
  7676  0567  1D03               	skipz
  7677  0568  2D6A               	goto	u132lld
  7678  0569  0AAF               	incf	___aomod@dividend+7,f
  7679  056A                     u132lld:
  7680  056A                     l636:
  7681  056A  0020               	movlb	0	; select bank0
  7682  056B  0828               	movf	___aomod@dividend,w
  7683  056C  00A0               	movwf	?___aomod
  7684  056D  0829               	movf	___aomod@dividend+1,w
  7685  056E  00A1               	movwf	?___aomod+1
  7686  056F  082A               	movf	___aomod@dividend+2,w
  7687  0570  00A2               	movwf	?___aomod+2
  7688  0571  082B               	movf	___aomod@dividend+3,w
  7689  0572  00A3               	movwf	?___aomod+3
  7690  0573  082C               	movf	___aomod@dividend+4,w
  7691  0574  00A4               	movwf	?___aomod+4
  7692  0575  082D               	movf	___aomod@dividend+5,w
  7693  0576  00A5               	movwf	?___aomod+5
  7694  0577  082E               	movf	___aomod@dividend+6,w
  7695  0578  00A6               	movwf	?___aomod+6
  7696  0579  082F               	movf	___aomod@dividend+7,w
  7697  057A  00A7               	movwf	?___aomod+7
  7698  057B                     l637:
  7699  057B  0008               	return
  7700  057C                     __end_of___aomod:
  7701                           
  7702                           	psect	text16
  7703  057C                     __ptext16:	
  7704 ;; *************** function ___aodiv *****************
  7705 ;; Defined at:
  7706 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  7707 ;; Parameters:    Size  Location     Type
  7708 ;;  divisor         8    0[BANK0 ] long long 
  7709 ;;  dividend        8    8[BANK0 ] long long 
  7710 ;; Auto vars:     Size  Location     Type
  7711 ;;  quotient        8    3[COMMON] long long 
  7712 ;;  sign            1    2[COMMON] unsigned char 
  7713 ;;  counter         1    1[COMMON] unsigned char 
  7714 ;; Return value:  Size  Location     Type
  7715 ;;                  8    0[BANK0 ] long long 
  7716 ;; Registers used:
  7717 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7718 ;; Tracked objects:
  7719 ;;		On entry : 0/0
  7720 ;;		On exit  : 0/0
  7721 ;;		Unchanged: 0/0
  7722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7723 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7724 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7725 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7726 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7727 ;;Total ram usage:       27 bytes
  7728 ;; Hardware stack levels used: 1
  7729 ;; This function calls:
  7730 ;;		Nothing
  7731 ;; This function is called by:
  7732 ;;		_dtoa
  7733 ;; This function uses a non-reentrant model
  7734 ;;
  7735                           
  7736                           
  7737                           ;psect for function ___aodiv
  7738  057C                     ___aodiv:
  7739  057C                     l1966:	
  7740                           ;incstack = 0
  7741                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  7742                           
  7743  057C  01F2               	clrf	___aodiv@sign
  7744  057D                     l1968:
  7745  057D  3020               	movlw	low ___aodiv@divisor
  7746  057E  0086               	movwf	6
  7747  057F  3000               	movlw	high ___aodiv@divisor
  7748  0580  0087               	movwf	7
  7749  0581  3F47               	moviw [7]fsr1
  7750  0582  00F0               	movwf	??___aodiv
  7751  0583  1FF0               	btfss	??___aodiv,7
  7752  0584  2D86               	goto	u1121
  7753  0585  2D87               	goto	u1120
  7754  0586                     u1121:
  7755  0586  2DA8               	goto	l1972
  7756  0587                     u1120:
  7757  0587                     l1970:
  7758  0587  0020               	movlb	0	; select bank0
  7759  0588  09A0               	comf	___aodiv@divisor,f
  7760  0589  09A1               	comf	___aodiv@divisor+1,f
  7761  058A  09A2               	comf	___aodiv@divisor+2,f
  7762  058B  09A3               	comf	___aodiv@divisor+3,f
  7763  058C  09A4               	comf	___aodiv@divisor+4,f
  7764  058D  09A5               	comf	___aodiv@divisor+5,f
  7765  058E  09A6               	comf	___aodiv@divisor+6,f
  7766  058F  09A7               	comf	___aodiv@divisor+7,f
  7767  0590  0AA0               	incf	___aodiv@divisor,f
  7768  0591  1D03               	skipz
  7769  0592  2DA6               	goto	u113lld
  7770  0593  0AA1               	incf	___aodiv@divisor+1,f
  7771  0594  1D03               	skipz
  7772  0595  2DA6               	goto	u113lld
  7773  0596  0AA2               	incf	___aodiv@divisor+2,f
  7774  0597  1D03               	skipz
  7775  0598  2DA6               	goto	u113lld
  7776  0599  0AA3               	incf	___aodiv@divisor+3,f
  7777  059A  1D03               	skipz
  7778  059B  2DA6               	goto	u113lld
  7779  059C  0AA4               	incf	___aodiv@divisor+4,f
  7780  059D  1D03               	skipz
  7781  059E  2DA6               	goto	u113lld
  7782  059F  0AA5               	incf	___aodiv@divisor+5,f
  7783  05A0  1D03               	skipz
  7784  05A1  2DA6               	goto	u113lld
  7785  05A2  0AA6               	incf	___aodiv@divisor+6,f
  7786  05A3  1D03               	skipz
  7787  05A4  2DA6               	goto	u113lld
  7788  05A5  0AA7               	incf	___aodiv@divisor+7,f
  7789  05A6                     u113lld:
  7790  05A6  01F2               	clrf	___aodiv@sign
  7791  05A7  0AF2               	incf	___aodiv@sign,f
  7792  05A8                     l1972:
  7793  05A8  3028               	movlw	low ___aodiv@dividend
  7794  05A9  0086               	movwf	6
  7795  05AA  3000               	movlw	high ___aodiv@dividend
  7796  05AB  0087               	movwf	7
  7797  05AC  3F47               	moviw [7]fsr1
  7798  05AD  00F0               	movwf	??___aodiv
  7799  05AE  1FF0               	btfss	??___aodiv,7
  7800  05AF  2DB1               	goto	u1141
  7801  05B0  2DB2               	goto	u1140
  7802  05B1                     u1141:
  7803  05B1  2DD5               	goto	l1978
  7804  05B2                     u1140:
  7805  05B2                     l1974:
  7806  05B2  0020               	movlb	0	; select bank0
  7807  05B3  09A8               	comf	___aodiv@dividend,f
  7808  05B4  09A9               	comf	___aodiv@dividend+1,f
  7809  05B5  09AA               	comf	___aodiv@dividend+2,f
  7810  05B6  09AB               	comf	___aodiv@dividend+3,f
  7811  05B7  09AC               	comf	___aodiv@dividend+4,f
  7812  05B8  09AD               	comf	___aodiv@dividend+5,f
  7813  05B9  09AE               	comf	___aodiv@dividend+6,f
  7814  05BA  09AF               	comf	___aodiv@dividend+7,f
  7815  05BB  0AA8               	incf	___aodiv@dividend,f
  7816  05BC  1D03               	skipz
  7817  05BD  2DD1               	goto	u115lld
  7818  05BE  0AA9               	incf	___aodiv@dividend+1,f
  7819  05BF  1D03               	skipz
  7820  05C0  2DD1               	goto	u115lld
  7821  05C1  0AAA               	incf	___aodiv@dividend+2,f
  7822  05C2  1D03               	skipz
  7823  05C3  2DD1               	goto	u115lld
  7824  05C4  0AAB               	incf	___aodiv@dividend+3,f
  7825  05C5  1D03               	skipz
  7826  05C6  2DD1               	goto	u115lld
  7827  05C7  0AAC               	incf	___aodiv@dividend+4,f
  7828  05C8  1D03               	skipz
  7829  05C9  2DD1               	goto	u115lld
  7830  05CA  0AAD               	incf	___aodiv@dividend+5,f
  7831  05CB  1D03               	skipz
  7832  05CC  2DD1               	goto	u115lld
  7833  05CD  0AAE               	incf	___aodiv@dividend+6,f
  7834  05CE  1D03               	skipz
  7835  05CF  2DD1               	goto	u115lld
  7836  05D0  0AAF               	incf	___aodiv@dividend+7,f
  7837  05D1                     u115lld:
  7838  05D1                     l1976:
  7839  05D1  3001               	movlw	1
  7840  05D2  00F0               	movwf	??___aodiv
  7841  05D3  0870               	movf	??___aodiv,w
  7842  05D4  06F2               	xorwf	___aodiv@sign,f
  7843  05D5                     l1978:
  7844  05D5  3073               	movlw	low ___aodiv@quotient
  7845  05D6  0086               	movwf	6
  7846  05D7  3000               	movlw	high ___aodiv@quotient
  7847  05D8  0087               	movwf	7
  7848  05D9  3008               	movlw	8
  7849  05DA  00F0               	movwf	??___aodiv
  7850  05DB  3000               	movlw	0
  7851  05DC                     u1160:
  7852  05DC  001E               	movwi fsr1++
  7853  05DD  0BF0               	decfsz	??___aodiv,f
  7854  05DE  2DDC               	goto	u1160
  7855  05DF                     l1980:
  7856  05DF  0020               	movlb	0	; select bank0
  7857  05E0  0820               	movf	___aodiv@divisor,w
  7858  05E1  0421               	iorwf	___aodiv@divisor+1,w
  7859  05E2  0422               	iorwf	___aodiv@divisor+2,w
  7860  05E3  0423               	iorwf	___aodiv@divisor+3,w
  7861  05E4  0424               	iorwf	___aodiv@divisor+4,w
  7862  05E5  0425               	iorwf	___aodiv@divisor+5,w
  7863  05E6  0426               	iorwf	___aodiv@divisor+6,w
  7864  05E7  0427               	iorwf	___aodiv@divisor+7,w
  7865  05E8  1903               	skipnz
  7866  05E9  2DEB               	goto	u1171
  7867  05EA  2DEC               	goto	u1170
  7868  05EB                     u1171:
  7869  05EB  2E48               	goto	l2000
  7870  05EC                     u1170:
  7871  05EC                     l1982:
  7872  05EC  01F1               	clrf	___aodiv@counter
  7873  05ED  0AF1               	incf	___aodiv@counter,f
  7874  05EE  2DFB               	goto	l1988
  7875  05EF                     l1984:
  7876  05EF  35A0               	lslf	___aodiv@divisor,f
  7877  05F0  0DA1               	rlf	___aodiv@divisor+1,f
  7878  05F1  0DA2               	rlf	___aodiv@divisor+2,f
  7879  05F2  0DA3               	rlf	___aodiv@divisor+3,f
  7880  05F3  0DA4               	rlf	___aodiv@divisor+4,f
  7881  05F4  0DA5               	rlf	___aodiv@divisor+5,f
  7882  05F5  0DA6               	rlf	___aodiv@divisor+6,f
  7883  05F6  0DA7               	rlf	___aodiv@divisor+7,f
  7884  05F7                     l1986:
  7885  05F7  3001               	movlw	1
  7886  05F8  00F0               	movwf	??___aodiv
  7887  05F9  0870               	movf	??___aodiv,w
  7888  05FA  07F1               	addwf	___aodiv@counter,f
  7889  05FB                     l1988:
  7890  05FB  1FA7               	btfss	___aodiv@divisor+7,7
  7891  05FC  2DFE               	goto	u1181
  7892  05FD  2DFF               	goto	u1180
  7893  05FE                     u1181:
  7894  05FE  2DEF               	goto	l1984
  7895  05FF                     u1180:
  7896  05FF                     l1990:
  7897  05FF  35F3               	lslf	___aodiv@quotient,f
  7898  0600  0DF4               	rlf	___aodiv@quotient+1,f
  7899  0601  0DF5               	rlf	___aodiv@quotient+2,f
  7900  0602  0DF6               	rlf	___aodiv@quotient+3,f
  7901  0603  0DF7               	rlf	___aodiv@quotient+4,f
  7902  0604  0DF8               	rlf	___aodiv@quotient+5,f
  7903  0605  0DF9               	rlf	___aodiv@quotient+6,f
  7904  0606  0DFA               	rlf	___aodiv@quotient+7,f
  7905  0607                     l1992:
  7906  0607  0827               	movf	___aodiv@divisor+7,w
  7907  0608  022F               	subwf	___aodiv@dividend+7,w
  7908  0609  1D03               	skipz
  7909  060A  2E25               	goto	u1195
  7910  060B  0826               	movf	___aodiv@divisor+6,w
  7911  060C  022E               	subwf	___aodiv@dividend+6,w
  7912  060D  1D03               	skipz
  7913  060E  2E25               	goto	u1195
  7914  060F  0825               	movf	___aodiv@divisor+5,w
  7915  0610  022D               	subwf	___aodiv@dividend+5,w
  7916  0611  1D03               	skipz
  7917  0612  2E25               	goto	u1195
  7918  0613  0824               	movf	___aodiv@divisor+4,w
  7919  0614  022C               	subwf	___aodiv@dividend+4,w
  7920  0615  1D03               	skipz
  7921  0616  2E25               	goto	u1195
  7922  0617  0823               	movf	___aodiv@divisor+3,w
  7923  0618  022B               	subwf	___aodiv@dividend+3,w
  7924  0619  1D03               	skipz
  7925  061A  2E25               	goto	u1195
  7926  061B  0822               	movf	___aodiv@divisor+2,w
  7927  061C  022A               	subwf	___aodiv@dividend+2,w
  7928  061D  1D03               	skipz
  7929  061E  2E25               	goto	u1195
  7930  061F  0821               	movf	___aodiv@divisor+1,w
  7931  0620  0229               	subwf	___aodiv@dividend+1,w
  7932  0621  1D03               	skipz
  7933  0622  2E25               	goto	u1195
  7934  0623  0820               	movf	___aodiv@divisor,w
  7935  0624  0228               	subwf	___aodiv@dividend,w
  7936  0625                     u1195:
  7937  0625  1C03               	skipc
  7938  0626  2E28               	goto	u1191
  7939  0627  2E29               	goto	u1190
  7940  0628                     u1191:
  7941  0628  2E3A               	goto	l1998
  7942  0629                     u1190:
  7943  0629                     l1994:
  7944  0629  0820               	movf	___aodiv@divisor,w
  7945  062A  02A8               	subwf	___aodiv@dividend,f
  7946  062B  0821               	movf	___aodiv@divisor+1,w
  7947  062C  3BA9               	subwfb	___aodiv@dividend+1,f
  7948  062D  0822               	movf	___aodiv@divisor+2,w
  7949  062E  3BAA               	subwfb	___aodiv@dividend+2,f
  7950  062F  0823               	movf	___aodiv@divisor+3,w
  7951  0630  3BAB               	subwfb	___aodiv@dividend+3,f
  7952  0631  0824               	movf	___aodiv@divisor+4,w
  7953  0632  3BAC               	subwfb	___aodiv@dividend+4,f
  7954  0633  0825               	movf	___aodiv@divisor+5,w
  7955  0634  3BAD               	subwfb	___aodiv@dividend+5,f
  7956  0635  0826               	movf	___aodiv@divisor+6,w
  7957  0636  3BAE               	subwfb	___aodiv@dividend+6,f
  7958  0637  0827               	movf	___aodiv@divisor+7,w
  7959  0638  3BAF               	subwfb	___aodiv@dividend+7,f
  7960  0639                     l1996:
  7961  0639  1473               	bsf	___aodiv@quotient,0
  7962  063A                     l1998:
  7963  063A  36A7               	lsrf	___aodiv@divisor+7,f
  7964  063B  0CA6               	rrf	___aodiv@divisor+6,f
  7965  063C  0CA5               	rrf	___aodiv@divisor+5,f
  7966  063D  0CA4               	rrf	___aodiv@divisor+4,f
  7967  063E  0CA3               	rrf	___aodiv@divisor+3,f
  7968  063F  0CA2               	rrf	___aodiv@divisor+2,f
  7969  0640  0CA1               	rrf	___aodiv@divisor+1,f
  7970  0641  0CA0               	rrf	___aodiv@divisor,f
  7971  0642  3001               	movlw	1
  7972  0643  02F1               	subwf	___aodiv@counter,f
  7973  0644  1D03               	btfss	3,2
  7974  0645  2E47               	goto	u1201
  7975  0646  2E48               	goto	u1200
  7976  0647                     u1201:
  7977  0647  2DFF               	goto	l1990
  7978  0648                     u1200:
  7979  0648                     l2000:
  7980  0648  0872               	movf	___aodiv@sign,w
  7981  0649  1903               	btfsc	3,2
  7982  064A  2E4C               	goto	u1211
  7983  064B  2E4D               	goto	u1210
  7984  064C                     u1211:
  7985  064C  2E6B               	goto	l623
  7986  064D                     u1210:
  7987  064D                     l2002:
  7988  064D  09F3               	comf	___aodiv@quotient,f
  7989  064E  09F4               	comf	___aodiv@quotient+1,f
  7990  064F  09F5               	comf	___aodiv@quotient+2,f
  7991  0650  09F6               	comf	___aodiv@quotient+3,f
  7992  0651  09F7               	comf	___aodiv@quotient+4,f
  7993  0652  09F8               	comf	___aodiv@quotient+5,f
  7994  0653  09F9               	comf	___aodiv@quotient+6,f
  7995  0654  09FA               	comf	___aodiv@quotient+7,f
  7996  0655  0AF3               	incf	___aodiv@quotient,f
  7997  0656  1D03               	skipz
  7998  0657  2E6B               	goto	u122lld
  7999  0658  0AF4               	incf	___aodiv@quotient+1,f
  8000  0659  1D03               	skipz
  8001  065A  2E6B               	goto	u122lld
  8002  065B  0AF5               	incf	___aodiv@quotient+2,f
  8003  065C  1D03               	skipz
  8004  065D  2E6B               	goto	u122lld
  8005  065E  0AF6               	incf	___aodiv@quotient+3,f
  8006  065F  1D03               	skipz
  8007  0660  2E6B               	goto	u122lld
  8008  0661  0AF7               	incf	___aodiv@quotient+4,f
  8009  0662  1D03               	skipz
  8010  0663  2E6B               	goto	u122lld
  8011  0664  0AF8               	incf	___aodiv@quotient+5,f
  8012  0665  1D03               	skipz
  8013  0666  2E6B               	goto	u122lld
  8014  0667  0AF9               	incf	___aodiv@quotient+6,f
  8015  0668  1D03               	skipz
  8016  0669  2E6B               	goto	u122lld
  8017  066A  0AFA               	incf	___aodiv@quotient+7,f
  8018  066B                     u122lld:
  8019  066B                     l623:
  8020  066B  0873               	movf	___aodiv@quotient,w
  8021  066C  0020               	movlb	0	; select bank0
  8022  066D  00A0               	movwf	?___aodiv
  8023  066E  0874               	movf	___aodiv@quotient+1,w
  8024  066F  00A1               	movwf	?___aodiv+1
  8025  0670  0875               	movf	___aodiv@quotient+2,w
  8026  0671  00A2               	movwf	?___aodiv+2
  8027  0672  0876               	movf	___aodiv@quotient+3,w
  8028  0673  00A3               	movwf	?___aodiv+3
  8029  0674  0877               	movf	___aodiv@quotient+4,w
  8030  0675  00A4               	movwf	?___aodiv+4
  8031  0676  0878               	movf	___aodiv@quotient+5,w
  8032  0677  00A5               	movwf	?___aodiv+5
  8033  0678  0879               	movf	___aodiv@quotient+6,w
  8034  0679  00A6               	movwf	?___aodiv+6
  8035  067A  087A               	movf	___aodiv@quotient+7,w
  8036  067B  00A7               	movwf	?___aodiv+7
  8037  067C                     l624:
  8038  067C  0008               	return
  8039  067D                     __end_of___aodiv:
  8040                           
  8041                           	psect	text17
  8042  00E0                     __ptext17:	
  8043 ;; *************** function _lcd_puts *****************
  8044 ;; Defined at:
  8045 ;;		line 119 in file "LCD_i2c.c"
  8046 ;; Parameters:    Size  Location     Type
  8047 ;;  dato            1    wreg     PTR unsigned char 
  8048 ;;		 -> main@buffer(40), 
  8049 ;; Auto vars:     Size  Location     Type
  8050 ;;  dato            1   13[COMMON] PTR unsigned char 
  8051 ;;		 -> main@buffer(40), 
  8052 ;; Return value:  Size  Location     Type
  8053 ;;                  1    wreg      void 
  8054 ;; Registers used:
  8055 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8056 ;; Tracked objects:
  8057 ;;		On entry : 0/0
  8058 ;;		On exit  : 0/0
  8059 ;;		Unchanged: 0/0
  8060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8062 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8063 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8064 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8065 ;;Total ram usage:        3 bytes
  8066 ;; Hardware stack levels used: 1
  8067 ;; Hardware stack levels required when called: 5
  8068 ;; This function calls:
  8069 ;;		_lcd_gotoxy
  8070 ;;		_lcd_send_byte
  8071 ;; This function is called by:
  8072 ;;		_main
  8073 ;; This function uses a non-reentrant model
  8074 ;;
  8075                           
  8076                           
  8077                           ;psect for function _lcd_puts
  8078  00E0                     _lcd_puts:
  8079                           
  8080                           ;incstack = 0
  8081                           ; Regs used in _lcd_puts: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8082                           ;lcd_puts@dato stored from wreg
  8083  00E0  00FD               	movwf	lcd_puts@dato
  8084  00E1                     l2408:
  8085                           
  8086                           ;LCD_i2c.c: 120:     while (*dato){
  8087  00E1  292F               	goto	l2430
  8088  00E2                     l2410:
  8089                           
  8090                           ;LCD_i2c.c: 123:                 lcd_send_byte(0,1);
  8091  00E2  01F7               	clrf	lcd_send_byte@n
  8092  00E3  0AF7               	incf	lcd_send_byte@n,f
  8093  00E4  3000               	movlw	0
  8094  00E5  318E  26EB  3180   	fcall	_lcd_send_byte
  8095  00E8                     l2412:
  8096                           
  8097                           ;LCD_i2c.c: 124:                 _delay((unsigned long)((2)*(32000000L/4000.0)));
  8098  00E8  3015               	movlw	21
  8099  00E9  0020               	movlb	0	; select bank0
  8100  00EA  00A2               	movwf	??_lcd_puts
  8101  00EB  30C6               	movlw	198
  8102  00EC                     u1977:
  8103  00EC  0B89               	decfsz	9,f
  8104  00ED  28EC               	goto	u1977
  8105  00EE  0BA2               	decfsz	??_lcd_puts,f
  8106  00EF  28EC               	goto	u1977
  8107  00F0  0000               	nop
  8108  00F1                     l2414:
  8109                           
  8110                           ;LCD_i2c.c: 125:                 g_LcdX = 0;
  8111  00F1  0021               	movlb	1	; select bank1
  8112  00F2  01DE               	clrf	_g_LcdX^(0+128)
  8113  00F3                     l2416:
  8114                           
  8115                           ;LCD_i2c.c: 126:                 g_LcdY = 0;
  8116  00F3  01DD               	clrf	_g_LcdY^(0+128)
  8117  00F4                     l2418:
  8118                           
  8119                           ;LCD_i2c.c: 127:                 _delay((unsigned long)((2)*(32000000L/4000.0)));
  8120  00F4  3015               	movlw	21
  8121  00F5  0020               	movlb	0	; select bank0
  8122  00F6  00A2               	movwf	??_lcd_puts
  8123  00F7  30C6               	movlw	198
  8124  00F8                     u1987:
  8125  00F8  0B89               	decfsz	9,f
  8126  00F9  28F8               	goto	u1987
  8127  00FA  0BA2               	decfsz	??_lcd_puts,f
  8128  00FB  28F8               	goto	u1987
  8129  00FC  0000               	nop
  8130                           
  8131                           ;LCD_i2c.c: 128:                 break;
  8132  00FD  292A               	goto	l2428
  8133  00FE                     l2420:
  8134                           
  8135                           ;LCD_i2c.c: 130:                 lcd_gotoxy(1, g_LcdY+2);
  8136  00FE  0021               	movlb	1	; select bank1
  8137  00FF  085D               	movf	_g_LcdY^(0+128),w
  8138  0100  3E02               	addlw	2
  8139  0101  0020               	movlb	0	; select bank0
  8140  0102  00A2               	movwf	??_lcd_puts
  8141  0103  0822               	movf	??_lcd_puts,w
  8142  0104  00FA               	movwf	lcd_gotoxy@y
  8143  0105  3001               	movlw	1
  8144  0106  318F  27B9  3180   	fcall	_lcd_gotoxy
  8145                           
  8146                           ;LCD_i2c.c: 131:                 break;
  8147  0109  292A               	goto	l2428
  8148  010A                     l2422:
  8149                           
  8150                           ;LCD_i2c.c: 133:                 lcd_send_byte(1,*dato);
  8151  010A  087D               	movf	lcd_puts@dato,w
  8152  010B  0086               	movwf	6
  8153  010C  0187               	clrf	7
  8154  010D  0801               	movf	1,w
  8155  010E  00A2               	movwf	??_lcd_puts
  8156  010F  0822               	movf	??_lcd_puts,w
  8157  0110  00F7               	movwf	lcd_send_byte@n
  8158  0111  3001               	movlw	1
  8159  0112  318E  26EB  3180   	fcall	_lcd_send_byte
  8160                           
  8161                           ;LCD_i2c.c: 134:                 break;
  8162  0115  292A               	goto	l2428
  8163  0116                     l2426:
  8164  0116  087D               	movf	lcd_puts@dato,w
  8165  0117  0086               	movwf	6
  8166  0118  0187               	clrf	7
  8167  0119  0801               	movf	1,w
  8168  011A  0020               	movlb	0	; select bank0
  8169  011B  00A2               	movwf	??_lcd_puts
  8170  011C  01A3               	clrf	??_lcd_puts+1
  8171                           
  8172                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8173                           ; Switch size 1, requested type "simple"
  8174                           ; Number of cases is 1, Range of values is 0 to 0
  8175                           ; switch strategies available:
  8176                           ; Name         Instructions Cycles
  8177                           ; simple_byte            4     3 (average)
  8178                           ; direct_byte            8     6 (fixed)
  8179                           ; jumptable            260     6 (fixed)
  8180                           ;	Chosen strategy is simple_byte
  8181  011D  0823               	movf	??_lcd_puts+1,w
  8182  011E  3A00               	xorlw	0	; case 0
  8183  011F  1903               	skipnz
  8184  0120  2922               	goto	l2686
  8185  0121  290A               	goto	l2422
  8186  0122                     l2686:
  8187                           
  8188                           ; Switch size 1, requested type "simple"
  8189                           ; Number of cases is 2, Range of values is 10 to 12
  8190                           ; switch strategies available:
  8191                           ; Name         Instructions Cycles
  8192                           ; simple_byte            7     4 (average)
  8193                           ; direct_byte           15     9 (fixed)
  8194                           ; jumptable            263     9 (fixed)
  8195                           ;	Chosen strategy is simple_byte
  8196  0122  0822               	movf	??_lcd_puts,w
  8197  0123  3A0A               	xorlw	10	; case 10
  8198  0124  1903               	skipnz
  8199  0125  28FE               	goto	l2420
  8200  0126  3A06               	xorlw	6	; case 12
  8201  0127  1903               	skipnz
  8202  0128  28E2               	goto	l2410
  8203  0129  290A               	goto	l2422
  8204  012A                     l2428:
  8205                           
  8206                           ;LCD_i2c.c: 138:         dato++;
  8207  012A  3001               	movlw	1
  8208  012B  0020               	movlb	0	; select bank0
  8209  012C  00A2               	movwf	??_lcd_puts
  8210  012D  0822               	movf	??_lcd_puts,w
  8211  012E  07FD               	addwf	lcd_puts@dato,f
  8212  012F                     l2430:
  8213                           
  8214                           ;LCD_i2c.c: 120:     while (*dato){
  8215  012F  087D               	movf	lcd_puts@dato,w
  8216  0130  0086               	movwf	6
  8217  0131  0187               	clrf	7
  8218  0132  0801               	movf	1,w
  8219  0133  1D03               	btfss	3,2
  8220  0134  2936               	goto	u1761
  8221  0135  2937               	goto	u1760
  8222  0136                     u1761:
  8223  0136  2916               	goto	l2426
  8224  0137                     u1760:
  8225  0137                     l362:
  8226  0137  0008               	return
  8227  0138                     __end_of_lcd_puts:
  8228                           
  8229                           	psect	text18
  8230  0FB9                     __ptext18:	
  8231 ;; *************** function _lcd_gotoxy *****************
  8232 ;; Defined at:
  8233 ;;		line 74 in file "LCD_i2c.c"
  8234 ;; Parameters:    Size  Location     Type
  8235 ;;  x               1    wreg     char 
  8236 ;;  y               1   10[COMMON] char 
  8237 ;; Auto vars:     Size  Location     Type
  8238 ;;  x               1    0[BANK0 ] char 
  8239 ;;  address         1    1[BANK0 ] char 
  8240 ;; Return value:  Size  Location     Type
  8241 ;;                  1    wreg      void 
  8242 ;; Registers used:
  8243 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8244 ;; Tracked objects:
  8245 ;;		On entry : 0/0
  8246 ;;		On exit  : 0/0
  8247 ;;		Unchanged: 0/0
  8248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8249 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8250 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8251 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8252 ;;      Totals:         3       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8253 ;;Total ram usage:        5 bytes
  8254 ;; Hardware stack levels used: 1
  8255 ;; Hardware stack levels required when called: 4
  8256 ;; This function calls:
  8257 ;;		_lcd_send_byte
  8258 ;; This function is called by:
  8259 ;;		_lcd_puts
  8260 ;;		_lcd_putc
  8261 ;; This function uses a non-reentrant model
  8262 ;;
  8263                           
  8264                           
  8265                           ;psect for function _lcd_gotoxy
  8266  0FB9                     _lcd_gotoxy:
  8267                           
  8268                           ;incstack = 0
  8269                           ; Regs used in _lcd_gotoxy: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8270                           ;lcd_gotoxy@x stored from wreg
  8271  0FB9  0020               	movlb	0	; select bank0
  8272  0FBA  00A0               	movwf	lcd_gotoxy@x
  8273  0FBB                     l2204:
  8274                           
  8275                           ;LCD_i2c.c: 75:    int8 address;;LCD_i2c.c: 76:    switch(y)
  8276  0FBB  2FCD               	goto	l2218
  8277  0FBC                     l2206:
  8278                           
  8279                           ;LCD_i2c.c: 79:          address = 0x00;
  8280  0FBC  01A1               	clrf	lcd_gotoxy@address
  8281                           
  8282                           ;LCD_i2c.c: 80:          break;
  8283  0FBD  2FE5               	goto	l2220
  8284  0FBE                     l2208:
  8285                           
  8286                           ;LCD_i2c.c: 82:          address = 0x40;
  8287  0FBE  3040               	movlw	64
  8288  0FBF  00FB               	movwf	??_lcd_gotoxy
  8289  0FC0  087B               	movf	??_lcd_gotoxy,w
  8290  0FC1  00A1               	movwf	lcd_gotoxy@address
  8291                           
  8292                           ;LCD_i2c.c: 83:          break;
  8293  0FC2  2FE5               	goto	l2220
  8294  0FC3                     l2210:
  8295                           
  8296                           ;LCD_i2c.c: 85:          address = 0x14;
  8297  0FC3  3014               	movlw	20
  8298  0FC4  00FB               	movwf	??_lcd_gotoxy
  8299  0FC5  087B               	movf	??_lcd_gotoxy,w
  8300  0FC6  00A1               	movwf	lcd_gotoxy@address
  8301                           
  8302                           ;LCD_i2c.c: 86:          break;
  8303  0FC7  2FE5               	goto	l2220
  8304  0FC8                     l2212:
  8305                           
  8306                           ;LCD_i2c.c: 88:          address = 0x54;
  8307  0FC8  3054               	movlw	84
  8308  0FC9  00FB               	movwf	??_lcd_gotoxy
  8309  0FCA  087B               	movf	??_lcd_gotoxy,w
  8310  0FCB  00A1               	movwf	lcd_gotoxy@address
  8311                           
  8312                           ;LCD_i2c.c: 89:          break;
  8313  0FCC  2FE5               	goto	l2220
  8314  0FCD                     l2218:
  8315  0FCD  087A               	movf	lcd_gotoxy@y,w
  8316  0FCE  00FB               	movwf	??_lcd_gotoxy
  8317  0FCF  01FC               	clrf	??_lcd_gotoxy+1
  8318  0FD0  1BFB               	btfsc	??_lcd_gotoxy,7
  8319  0FD1  03FC               	decf	??_lcd_gotoxy+1,f
  8320                           
  8321                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8322                           ; Switch size 1, requested type "simple"
  8323                           ; Number of cases is 1, Range of values is 0 to 0
  8324                           ; switch strategies available:
  8325                           ; Name         Instructions Cycles
  8326                           ; simple_byte            4     3 (average)
  8327                           ; direct_byte            8     6 (fixed)
  8328                           ; jumptable            260     6 (fixed)
  8329                           ;	Chosen strategy is simple_byte
  8330  0FD2  087C               	movf	??_lcd_gotoxy+1,w
  8331  0FD3  3A00               	xorlw	0	; case 0
  8332  0FD4  1903               	skipnz
  8333  0FD5  2FD7               	goto	l2688
  8334  0FD6  2FBC               	goto	l2206
  8335  0FD7                     l2688:
  8336                           
  8337                           ; Switch size 1, requested type "simple"
  8338                           ; Number of cases is 4, Range of values is 1 to 4
  8339                           ; switch strategies available:
  8340                           ; Name         Instructions Cycles
  8341                           ; simple_byte           13     7 (average)
  8342                           ; direct_byte           17     9 (fixed)
  8343                           ; jumptable            263     9 (fixed)
  8344                           ;	Chosen strategy is simple_byte
  8345  0FD7  087B               	movf	??_lcd_gotoxy,w
  8346  0FD8  3A01               	xorlw	1	; case 1
  8347  0FD9  1903               	skipnz
  8348  0FDA  2FBC               	goto	l2206
  8349  0FDB  3A03               	xorlw	3	; case 2
  8350  0FDC  1903               	skipnz
  8351  0FDD  2FBE               	goto	l2208
  8352  0FDE  3A01               	xorlw	1	; case 3
  8353  0FDF  1903               	skipnz
  8354  0FE0  2FC3               	goto	l2210
  8355  0FE1  3A07               	xorlw	7	; case 4
  8356  0FE2  1903               	skipnz
  8357  0FE3  2FC8               	goto	l2212
  8358  0FE4  2FBC               	goto	l2206
  8359  0FE5                     l2220:
  8360                           
  8361                           ;LCD_i2c.c: 94:    address += x-1;
  8362  0FE5  0820               	movf	lcd_gotoxy@x,w
  8363  0FE6  3EFF               	addlw	-1
  8364  0FE7  00FB               	movwf	??_lcd_gotoxy
  8365  0FE8  087B               	movf	??_lcd_gotoxy,w
  8366  0FE9  07A1               	addwf	lcd_gotoxy@address,f
  8367  0FEA                     l2222:
  8368                           
  8369                           ;LCD_i2c.c: 95:    lcd_send_byte(0, 0x80 | address);
  8370  0FEA  0821               	movf	lcd_gotoxy@address,w
  8371  0FEB  3880               	iorlw	-128
  8372  0FEC  00FB               	movwf	??_lcd_gotoxy
  8373  0FED  087B               	movf	??_lcd_gotoxy,w
  8374  0FEE  00F7               	movwf	lcd_send_byte@n
  8375  0FEF  3000               	movlw	0
  8376  0FF0  318E  26EB  318F   	fcall	_lcd_send_byte
  8377  0FF3                     l2224:
  8378                           
  8379                           ;LCD_i2c.c: 97:    g_LcdX = x - 1;
  8380  0FF3  0020               	movlb	0	; select bank0
  8381  0FF4  0820               	movf	lcd_gotoxy@x,w
  8382  0FF5  3EFF               	addlw	-1
  8383  0FF6  00FB               	movwf	??_lcd_gotoxy
  8384  0FF7  087B               	movf	??_lcd_gotoxy,w
  8385  0FF8  0021               	movlb	1	; select bank1
  8386  0FF9  00DE               	movwf	_g_LcdX^(0+128)
  8387  0FFA                     l2226:
  8388                           
  8389                           ;LCD_i2c.c: 98:    g_LcdY = y - 1;
  8390  0FFA  087A               	movf	lcd_gotoxy@y,w
  8391  0FFB  3EFF               	addlw	-1
  8392  0FFC  00FB               	movwf	??_lcd_gotoxy
  8393  0FFD  087B               	movf	??_lcd_gotoxy,w
  8394  0FFE  00DD               	movwf	_g_LcdY^(0+128)
  8395  0FFF                     l343:
  8396  0FFF  0008               	return
  8397  1000                     __end_of_lcd_gotoxy:
  8398                           
  8399                           	psect	text19
  8400  0191                     __ptext19:	
  8401 ;; *************** function _lcd_init *****************
  8402 ;; Defined at:
  8403 ;;		line 37 in file "LCD_i2c.c"
  8404 ;; Parameters:    Size  Location     Type
  8405 ;;		None
  8406 ;; Auto vars:     Size  Location     Type
  8407 ;;  i               1   12[COMMON] char 
  8408 ;; Return value:  Size  Location     Type
  8409 ;;                  1    wreg      void 
  8410 ;; Registers used:
  8411 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8412 ;; Tracked objects:
  8413 ;;		On entry : 0/0
  8414 ;;		On exit  : 0/0
  8415 ;;		Unchanged: 0/0
  8416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8418 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8419 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8420 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8421 ;;Total ram usage:        3 bytes
  8422 ;; Hardware stack levels used: 1
  8423 ;; Hardware stack levels required when called: 4
  8424 ;; This function calls:
  8425 ;;		_I2C_start
  8426 ;;		_I2C_stop
  8427 ;;		_I2C_write
  8428 ;;		_Send_D7_D4
  8429 ;;		_lcd_send_byte
  8430 ;; This function is called by:
  8431 ;;		_main
  8432 ;; This function uses a non-reentrant model
  8433 ;;
  8434                           
  8435                           
  8436                           ;psect for function _lcd_init
  8437  0191                     _lcd_init:
  8438  0191                     l2356:	
  8439                           ;incstack = 0
  8440                           ; Regs used in _lcd_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8441                           
  8442                           
  8443                           ;LCD_i2c.c: 38:    int8 i;;LCD_i2c.c: 39:    I2C_start();
  8444  0191  318E  2670  3181   	fcall	_I2C_start
  8445  0194                     l2358:
  8446                           
  8447                           ;LCD_i2c.c: 40:    I2C_write(112|(7<<1));
  8448  0194  307E               	movlw	126
  8449  0195  318E  26A8  3181   	fcall	_I2C_write
  8450  0198                     l2360:
  8451                           
  8452                           ;LCD_i2c.c: 41:    I2C_write(0x00);
  8453  0198  3000               	movlw	0
  8454  0199  318E  26A8  3181   	fcall	_I2C_write
  8455                           
  8456                           ;LCD_i2c.c: 42:    I2C_stop();
  8457  019C  318E  2677  3181   	fcall	_I2C_stop
  8458  019F                     l2362:
  8459                           
  8460                           ;LCD_i2c.c: 46:    _delay((unsigned long)((35)*(32000000L/4000.0)));
  8461  019F  3002               	movlw	2
  8462  01A0  00FB               	movwf	??_lcd_init+1
  8463  01A1  306C               	movlw	108
  8464  01A2  00FA               	movwf	??_lcd_init
  8465  01A3  30A0               	movlw	160
  8466  01A4                     u1997:
  8467  01A4  0B89               	decfsz	9,f
  8468  01A5  29A4               	goto	u1997
  8469  01A6  0BFA               	decfsz	??_lcd_init,f
  8470  01A7  29A4               	goto	u1997
  8471  01A8  0BFB               	decfsz	??_lcd_init+1,f
  8472  01A9  29A4               	goto	u1997
  8473  01AA                     l2364:
  8474                           
  8475                           ;LCD_i2c.c: 48:    for(i=0 ;i < 3; i++){
  8476  01AA  01FC               	clrf	lcd_init@i
  8477  01AB                     l2370:
  8478                           
  8479                           ;LCD_i2c.c: 49:       Send_D7_D4(0,0x03);
  8480  01AB  3003               	movlw	3
  8481  01AC  00FA               	movwf	??_lcd_init
  8482  01AD  087A               	movf	??_lcd_init,w
  8483  01AE  00F2               	movwf	Send_D7_D4@nibble
  8484  01AF  3000               	movlw	0
  8485  01B0  3181  21F2  3181   	fcall	_Send_D7_D4
  8486  01B3                     l2372:
  8487                           
  8488                           ;LCD_i2c.c: 50:       _delay((unsigned long)((5)*(32000000L/4000.0)));
  8489  01B3  3034               	movlw	52
  8490  01B4  00FA               	movwf	??_lcd_init
  8491  01B5  30F2               	movlw	242
  8492  01B6                     u2007:
  8493  01B6  0B89               	decfsz	9,f
  8494  01B7  29B6               	goto	u2007
  8495  01B8  0BFA               	decfsz	??_lcd_init,f
  8496  01B9  29B6               	goto	u2007
  8497  01BA                     l2374:
  8498                           
  8499                           ;LCD_i2c.c: 51:    }
  8500  01BA  3001               	movlw	1
  8501  01BB  00FA               	movwf	??_lcd_init
  8502  01BC  087A               	movf	??_lcd_init,w
  8503  01BD  07FC               	addwf	lcd_init@i,f
  8504  01BE                     l2376:
  8505  01BE  087C               	movf	lcd_init@i,w
  8506  01BF  3A80               	xorlw	128
  8507  01C0  3E7D               	addlw	-131
  8508  01C1  1C03               	skipc
  8509  01C2  29C4               	goto	u1741
  8510  01C3  29C5               	goto	u1740
  8511  01C4                     u1741:
  8512  01C4  29AB               	goto	l2370
  8513  01C5                     u1740:
  8514  01C5                     l2378:
  8515                           
  8516                           ;LCD_i2c.c: 52:     Send_D7_D4(0,0x02);
  8517  01C5  3002               	movlw	2
  8518  01C6  00FA               	movwf	??_lcd_init
  8519  01C7  087A               	movf	??_lcd_init,w
  8520  01C8  00F2               	movwf	Send_D7_D4@nibble
  8521  01C9  3000               	movlw	0
  8522  01CA  3181  21F2  3181   	fcall	_Send_D7_D4
  8523  01CD                     l2380:
  8524                           
  8525                           ;LCD_i2c.c: 65:    for(i=0; i < sizeof(LCD_INIT_STRING); i++)
  8526  01CD  01FC               	clrf	lcd_init@i
  8527  01CE                     l2386:
  8528                           
  8529                           ;LCD_i2c.c: 66:    {;LCD_i2c.c: 67:       lcd_send_byte(0, LCD_INIT_STRING[i]);
  8530  01CE  087C               	movf	lcd_init@i,w
  8531  01CF  3E00               	addlw	low (_LCD_INIT_STRING| (0+32768))
  8532  01D0  0084               	movwf	4
  8533  01D1  3090               	movlw	high (_LCD_INIT_STRING| (0+32768))
  8534  01D2  1803               	skipnc
  8535  01D3  3E01               	addlw	1
  8536  01D4  0085               	movwf	5
  8537  01D5  0800               	movf	0,w	;code access
  8538  01D6  00FA               	movwf	??_lcd_init
  8539  01D7  087A               	movf	??_lcd_init,w
  8540  01D8  00F7               	movwf	lcd_send_byte@n
  8541  01D9  3000               	movlw	0
  8542  01DA  318E  26EB  3181   	fcall	_lcd_send_byte
  8543  01DD                     l2388:
  8544                           
  8545                           ;LCD_i2c.c: 68:       _delay((unsigned long)((5)*(32000000L/4000.0)));
  8546  01DD  3034               	movlw	52
  8547  01DE  00FA               	movwf	??_lcd_init
  8548  01DF  30F2               	movlw	242
  8549  01E0                     u2017:
  8550  01E0  0B89               	decfsz	9,f
  8551  01E1  29E0               	goto	u2017
  8552  01E2  0BFA               	decfsz	??_lcd_init,f
  8553  01E3  29E0               	goto	u2017
  8554  01E4                     l2390:
  8555                           
  8556                           ;LCD_i2c.c: 69:    }
  8557  01E4  3001               	movlw	1
  8558  01E5  00FA               	movwf	??_lcd_init
  8559  01E6  087A               	movf	??_lcd_init,w
  8560  01E7  07FC               	addwf	lcd_init@i,f
  8561  01E8                     l2392:
  8562  01E8  3004               	movlw	4
  8563  01E9  027C               	subwf	lcd_init@i,w
  8564  01EA  1C03               	skipc
  8565  01EB  29ED               	goto	u1751
  8566  01EC  29EE               	goto	u1750
  8567  01ED                     u1751:
  8568  01ED  29CE               	goto	l2386
  8569  01EE                     u1750:
  8570  01EE                     l2394:
  8571                           
  8572                           ;LCD_i2c.c: 70:    g_LcdX = 0;
  8573  01EE  0021               	movlb	1	; select bank1
  8574  01EF  01DE               	clrf	_g_LcdX^(0+128)
  8575                           
  8576                           ;LCD_i2c.c: 71:    g_LcdY = 0;
  8577  01F0  01DD               	clrf	_g_LcdY^(0+128)
  8578  01F1                     l333:
  8579  01F1  0008               	return
  8580  01F2                     __end_of_lcd_init:
  8581                           
  8582                           	psect	text20
  8583  0EEB                     __ptext20:	
  8584 ;; *************** function _lcd_send_byte *****************
  8585 ;; Defined at:
  8586 ;;		line 32 in file "LCD_i2c.c"
  8587 ;; Parameters:    Size  Location     Type
  8588 ;;  address         1    wreg     char 
  8589 ;;  n               1    7[COMMON] char 
  8590 ;; Auto vars:     Size  Location     Type
  8591 ;;  address         1    9[COMMON] char 
  8592 ;; Return value:  Size  Location     Type
  8593 ;;                  1    wreg      void 
  8594 ;; Registers used:
  8595 ;;		wreg, status,2, status,0, pclath, cstack
  8596 ;; Tracked objects:
  8597 ;;		On entry : 0/0
  8598 ;;		On exit  : 0/0
  8599 ;;		Unchanged: 0/0
  8600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8601 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8602 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8603 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8604 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8605 ;;Total ram usage:        3 bytes
  8606 ;; Hardware stack levels used: 1
  8607 ;; Hardware stack levels required when called: 3
  8608 ;; This function calls:
  8609 ;;		_Send_D7_D4
  8610 ;; This function is called by:
  8611 ;;		_lcd_init
  8612 ;;		_lcd_gotoxy
  8613 ;;		_lcd_puts
  8614 ;;		_lcd_putc
  8615 ;;		_Clear_LCD
  8616 ;;		_CGRAM
  8617 ;;		_CGRAM_x
  8618 ;; This function uses a non-reentrant model
  8619 ;;
  8620                           
  8621                           
  8622                           ;psect for function _lcd_send_byte
  8623  0EEB                     _lcd_send_byte:
  8624                           
  8625                           ;incstack = 0
  8626                           ; Regs used in _lcd_send_byte: [wreg+status,2+status,0+pclath+cstack]
  8627                           ;lcd_send_byte@address stored from wreg
  8628  0EEB  00F9               	movwf	lcd_send_byte@address
  8629  0EEC                     l2158:
  8630                           
  8631                           ;LCD_i2c.c: 33:    Send_D7_D4(address,n >> 4);
  8632  0EEC  0E77               	swapf	lcd_send_byte@n,w
  8633  0EED  390F               	andlw	15
  8634  0EEE  1989               	btfsc	9,3
  8635  0EEF  38F0               	iorlw	240
  8636  0EF0  00F8               	movwf	??_lcd_send_byte
  8637  0EF1  0878               	movf	??_lcd_send_byte,w
  8638  0EF2  00F2               	movwf	Send_D7_D4@nibble
  8639  0EF3  0879               	movf	lcd_send_byte@address,w
  8640  0EF4  3181  21F2  318E   	fcall	_Send_D7_D4
  8641                           
  8642                           ;LCD_i2c.c: 34:    Send_D7_D4(address,n & 0xf);
  8643  0EF7  0877               	movf	lcd_send_byte@n,w
  8644  0EF8  390F               	andlw	15
  8645  0EF9  00F8               	movwf	??_lcd_send_byte
  8646  0EFA  0878               	movf	??_lcd_send_byte,w
  8647  0EFB  00F2               	movwf	Send_D7_D4@nibble
  8648  0EFC  0879               	movf	lcd_send_byte@address,w
  8649  0EFD  3181  21F2  318E   	fcall	_Send_D7_D4
  8650  0F00                     l326:
  8651  0F00  0008               	return
  8652  0F01                     __end_of_lcd_send_byte:
  8653                           
  8654                           	psect	text21
  8655  01F2                     __ptext21:	
  8656 ;; *************** function _Send_D7_D4 *****************
  8657 ;; Defined at:
  8658 ;;		line 13 in file "LCD_i2c.c"
  8659 ;; Parameters:    Size  Location     Type
  8660 ;;  address         1    wreg     char 
  8661 ;;  nibble          1    2[COMMON] char 
  8662 ;; Auto vars:     Size  Location     Type
  8663 ;;  address         1    5[COMMON] char 
  8664 ;;  datos           1    6[COMMON] unsigned char 
  8665 ;; Return value:  Size  Location     Type
  8666 ;;                  1    wreg      void 
  8667 ;; Registers used:
  8668 ;;		wreg, status,2, status,0, pclath, cstack
  8669 ;; Tracked objects:
  8670 ;;		On entry : 0/0
  8671 ;;		On exit  : 0/0
  8672 ;;		Unchanged: 0/0
  8673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8674 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8675 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8676 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8677 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8678 ;;Total ram usage:        5 bytes
  8679 ;; Hardware stack levels used: 1
  8680 ;; Hardware stack levels required when called: 2
  8681 ;; This function calls:
  8682 ;;		_Write_PCF
  8683 ;; This function is called by:
  8684 ;;		_lcd_send_byte
  8685 ;;		_lcd_init
  8686 ;; This function uses a non-reentrant model
  8687 ;;
  8688                           
  8689                           
  8690                           ;psect for function _Send_D7_D4
  8691  01F2                     _Send_D7_D4:
  8692                           
  8693                           ;incstack = 0
  8694                           ; Regs used in _Send_D7_D4: [wreg+status,2+status,0+pclath+cstack]
  8695                           ;Send_D7_D4@address stored from wreg
  8696  01F2  00F5               	movwf	Send_D7_D4@address
  8697  01F3                     l2060:
  8698                           
  8699                           ;LCD_i2c.c: 14:    char datos=0;
  8700  01F3  01F6               	clrf	Send_D7_D4@datos
  8701  01F4                     l2062:
  8702                           
  8703                           ;LCD_i2c.c: 16:    if((nibble & 1)==1) datos= datos|16; else datos = datos&~16;
  8704  01F4  0872               	movf	Send_D7_D4@nibble,w
  8705  01F5  00F3               	movwf	??_Send_D7_D4
  8706  01F6  01F4               	clrf	??_Send_D7_D4+1
  8707  01F7  1BF3               	btfsc	??_Send_D7_D4,7
  8708  01F8  03F4               	decf	??_Send_D7_D4+1,f
  8709  01F9  1C73               	btfss	??_Send_D7_D4,0
  8710  01FA  29FC               	goto	u1381
  8711  01FB  29FD               	goto	u1380
  8712  01FC                     u1381:
  8713  01FC  2A03               	goto	l2066
  8714  01FD                     u1380:
  8715  01FD                     l2064:
  8716  01FD  0876               	movf	Send_D7_D4@datos,w
  8717  01FE  3810               	iorlw	16
  8718  01FF  00F3               	movwf	??_Send_D7_D4
  8719  0200  0873               	movf	??_Send_D7_D4,w
  8720  0201  00F6               	movwf	Send_D7_D4@datos
  8721  0202  2A08               	goto	l2068
  8722  0203                     l2066:
  8723  0203  0876               	movf	Send_D7_D4@datos,w
  8724  0204  39EF               	andlw	239
  8725  0205  00F3               	movwf	??_Send_D7_D4
  8726  0206  0873               	movf	??_Send_D7_D4,w
  8727  0207  00F6               	movwf	Send_D7_D4@datos
  8728  0208                     l2068:
  8729                           
  8730                           ;LCD_i2c.c: 17:    if((nibble & 2)==2) datos= datos|32; else datos = datos&~32;
  8731  0208  0872               	movf	Send_D7_D4@nibble,w
  8732  0209  00F3               	movwf	??_Send_D7_D4
  8733  020A  01F4               	clrf	??_Send_D7_D4+1
  8734  020B  1BF3               	btfsc	??_Send_D7_D4,7
  8735  020C  03F4               	decf	??_Send_D7_D4+1,f
  8736  020D  1CF3               	btfss	??_Send_D7_D4,1
  8737  020E  2A10               	goto	u1391
  8738  020F  2A11               	goto	u1390
  8739  0210                     u1391:
  8740  0210  2A17               	goto	l2072
  8741  0211                     u1390:
  8742  0211                     l2070:
  8743  0211  0876               	movf	Send_D7_D4@datos,w
  8744  0212  3820               	iorlw	32
  8745  0213  00F3               	movwf	??_Send_D7_D4
  8746  0214  0873               	movf	??_Send_D7_D4,w
  8747  0215  00F6               	movwf	Send_D7_D4@datos
  8748  0216  2A1C               	goto	l2074
  8749  0217                     l2072:
  8750  0217  0876               	movf	Send_D7_D4@datos,w
  8751  0218  39DF               	andlw	223
  8752  0219  00F3               	movwf	??_Send_D7_D4
  8753  021A  0873               	movf	??_Send_D7_D4,w
  8754  021B  00F6               	movwf	Send_D7_D4@datos
  8755  021C                     l2074:
  8756                           
  8757                           ;LCD_i2c.c: 18:    if((nibble & 4)==4) datos= datos|64; else datos = datos&~64;
  8758  021C  0872               	movf	Send_D7_D4@nibble,w
  8759  021D  00F3               	movwf	??_Send_D7_D4
  8760  021E  01F4               	clrf	??_Send_D7_D4+1
  8761  021F  1BF3               	btfsc	??_Send_D7_D4,7
  8762  0220  03F4               	decf	??_Send_D7_D4+1,f
  8763  0221  1D73               	btfss	??_Send_D7_D4,2
  8764  0222  2A24               	goto	u1401
  8765  0223  2A25               	goto	u1400
  8766  0224                     u1401:
  8767  0224  2A2B               	goto	l2078
  8768  0225                     u1400:
  8769  0225                     l2076:
  8770  0225  0876               	movf	Send_D7_D4@datos,w
  8771  0226  3840               	iorlw	64
  8772  0227  00F3               	movwf	??_Send_D7_D4
  8773  0228  0873               	movf	??_Send_D7_D4,w
  8774  0229  00F6               	movwf	Send_D7_D4@datos
  8775  022A  2A30               	goto	l2080
  8776  022B                     l2078:
  8777  022B  0876               	movf	Send_D7_D4@datos,w
  8778  022C  39BF               	andlw	191
  8779  022D  00F3               	movwf	??_Send_D7_D4
  8780  022E  0873               	movf	??_Send_D7_D4,w
  8781  022F  00F6               	movwf	Send_D7_D4@datos
  8782  0230                     l2080:
  8783                           
  8784                           ;LCD_i2c.c: 19:    if((nibble & 8)==8) datos= datos|128; else datos = datos&~128;
  8785  0230  0872               	movf	Send_D7_D4@nibble,w
  8786  0231  00F3               	movwf	??_Send_D7_D4
  8787  0232  01F4               	clrf	??_Send_D7_D4+1
  8788  0233  1BF3               	btfsc	??_Send_D7_D4,7
  8789  0234  03F4               	decf	??_Send_D7_D4+1,f
  8790  0235  1DF3               	btfss	??_Send_D7_D4,3
  8791  0236  2A38               	goto	u1411
  8792  0237  2A39               	goto	u1410
  8793  0238                     u1411:
  8794  0238  2A3F               	goto	l2084
  8795  0239                     u1410:
  8796  0239                     l2082:
  8797  0239  0876               	movf	Send_D7_D4@datos,w
  8798  023A  3880               	iorlw	128
  8799  023B  00F3               	movwf	??_Send_D7_D4
  8800  023C  0873               	movf	??_Send_D7_D4,w
  8801  023D  00F6               	movwf	Send_D7_D4@datos
  8802  023E  2A44               	goto	l2086
  8803  023F                     l2084:
  8804  023F  0876               	movf	Send_D7_D4@datos,w
  8805  0240  397F               	andlw	127
  8806  0241  00F3               	movwf	??_Send_D7_D4
  8807  0242  0873               	movf	??_Send_D7_D4,w
  8808  0243  00F6               	movwf	Send_D7_D4@datos
  8809  0244                     l2086:
  8810                           
  8811                           ;LCD_i2c.c: 20:       _delay((unsigned long)((60)*(32000000L/4000000.0)));
  8812  0244  30A0               	movlw	160
  8813  0245                     u2027:
  8814  0245  0B89               	decfsz	9,f
  8815  0246  2A45               	goto	u2027
  8816  0247                     l2088:
  8817                           
  8818                           ;LCD_i2c.c: 21:    if(address)
  8819  0247  0875               	movf	Send_D7_D4@address,w
  8820  0248  1903               	btfsc	3,2
  8821  0249  2A4B               	goto	u1421
  8822  024A  2A4C               	goto	u1420
  8823  024B                     u1421:
  8824  024B  2A52               	goto	l2092
  8825  024C                     u1420:
  8826  024C                     l2090:
  8827                           
  8828                           ;LCD_i2c.c: 22:       datos= datos |1;
  8829  024C  0876               	movf	Send_D7_D4@datos,w
  8830  024D  3801               	iorlw	1
  8831  024E  00F3               	movwf	??_Send_D7_D4
  8832  024F  0873               	movf	??_Send_D7_D4,w
  8833  0250  00F6               	movwf	Send_D7_D4@datos
  8834  0251  2A57               	goto	l2094
  8835  0252                     l2092:
  8836                           
  8837                           ;LCD_i2c.c: 24:      datos = datos &~1;
  8838  0252  0876               	movf	Send_D7_D4@datos,w
  8839  0253  39FE               	andlw	254
  8840  0254  00F3               	movwf	??_Send_D7_D4
  8841  0255  0873               	movf	??_Send_D7_D4,w
  8842  0256  00F6               	movwf	Send_D7_D4@datos
  8843  0257                     l2094:
  8844                           
  8845                           ;LCD_i2c.c: 27:    Write_PCF( datos | 4);
  8846  0257  0876               	movf	Send_D7_D4@datos,w
  8847  0258  3804               	iorlw	4
  8848  0259  318E  26B4  3181   	fcall	_Write_PCF
  8849  025C                     l2096:
  8850                           
  8851                           ;LCD_i2c.c: 28:    _delay((unsigned long)((2)*(32000000L/4000000.0)));
  8852  025C  3005               	movlw	5
  8853  025D                     u2037:
  8854  025D  0B89               	decfsz	9,f
  8855  025E  2A5D               	goto	u2037
  8856  025F  0000               	nop
  8857  0260                     l2098:
  8858                           
  8859                           ;LCD_i2c.c: 29:    Write_PCF( datos & ~4);
  8860  0260  0876               	movf	Send_D7_D4@datos,w
  8861  0261  39FB               	andlw	251
  8862  0262  318E  26B4  3181   	fcall	_Write_PCF
  8863  0265                     l323:
  8864  0265  0008               	return
  8865  0266                     __end_of_Send_D7_D4:
  8866                           
  8867                           	psect	text22
  8868  0EB4                     __ptext22:	
  8869 ;; *************** function _Write_PCF *****************
  8870 ;; Defined at:
  8871 ;;		line 3 in file "LCD_i2c.c"
  8872 ;; Parameters:    Size  Location     Type
  8873 ;;  dato            1    wreg     unsigned char 
  8874 ;; Auto vars:     Size  Location     Type
  8875 ;;  dato            1    1[COMMON] unsigned char 
  8876 ;; Return value:  Size  Location     Type
  8877 ;;                  1    wreg      void 
  8878 ;; Registers used:
  8879 ;;		wreg, status,2, status,0, pclath, cstack
  8880 ;; Tracked objects:
  8881 ;;		On entry : 0/0
  8882 ;;		On exit  : 0/0
  8883 ;;		Unchanged: 0/0
  8884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8886 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8888 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8889 ;;Total ram usage:        1 bytes
  8890 ;; Hardware stack levels used: 1
  8891 ;; Hardware stack levels required when called: 1
  8892 ;; This function calls:
  8893 ;;		_I2C_start
  8894 ;;		_I2C_stop
  8895 ;;		_I2C_write
  8896 ;; This function is called by:
  8897 ;;		_Send_D7_D4
  8898 ;; This function uses a non-reentrant model
  8899 ;;
  8900                           
  8901                           
  8902                           ;psect for function _Write_PCF
  8903  0EB4                     _Write_PCF:
  8904                           
  8905                           ;incstack = 0
  8906                           ; Regs used in _Write_PCF: [wreg+status,2+status,0+pclath+cstack]
  8907                           ;Write_PCF@dato stored from wreg
  8908  0EB4  00F1               	movwf	Write_PCF@dato
  8909  0EB5                     l1960:
  8910                           
  8911                           ;LCD_i2c.c: 4:    I2C_start();
  8912  0EB5  318E  2670  318E   	fcall	_I2C_start
  8913  0EB8                     l1962:
  8914                           
  8915                           ;LCD_i2c.c: 5:    I2C_write(112|(7<<1));
  8916  0EB8  307E               	movlw	126
  8917  0EB9  318E  26A8  318E   	fcall	_I2C_write
  8918  0EBC                     l1964:
  8919                           
  8920                           ;LCD_i2c.c: 6:    I2C_write(dato|8 );
  8921  0EBC  0871               	movf	Write_PCF@dato,w
  8922  0EBD  3808               	iorlw	8
  8923  0EBE  318E  26A8  318E   	fcall	_I2C_write
  8924                           
  8925                           ;LCD_i2c.c: 7:    I2C_stop();
  8926  0EC1  318E  2677  318E   	fcall	_I2C_stop
  8927  0EC4                     l310:
  8928  0EC4  0008               	return
  8929  0EC5                     __end_of_Write_PCF:
  8930                           
  8931                           	psect	text23
  8932  0EA8                     __ptext23:	
  8933 ;; *************** function _I2C_write *****************
  8934 ;; Defined at:
  8935 ;;		line 53 in file "i2c.c"
  8936 ;; Parameters:    Size  Location     Type
  8937 ;;  I2C_data        1    wreg     unsigned char 
  8938 ;; Auto vars:     Size  Location     Type
  8939 ;;  I2C_data        1    0[COMMON] unsigned char 
  8940 ;; Return value:  Size  Location     Type
  8941 ;;                  1    wreg      void 
  8942 ;; Registers used:
  8943 ;;		wreg
  8944 ;; Tracked objects:
  8945 ;;		On entry : 0/0
  8946 ;;		On exit  : 0/0
  8947 ;;		Unchanged: 0/0
  8948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8950 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8952 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8953 ;;Total ram usage:        1 bytes
  8954 ;; Hardware stack levels used: 1
  8955 ;; This function calls:
  8956 ;;		Nothing
  8957 ;; This function is called by:
  8958 ;;		_main
  8959 ;;		_Write_PCF
  8960 ;;		_lcd_init
  8961 ;; This function uses a non-reentrant model
  8962 ;;
  8963                           
  8964                           
  8965                           ;psect for function _I2C_write
  8966  0EA8                     _I2C_write:
  8967                           
  8968                           ;incstack = 0
  8969                           ; Regs used in _I2C_write: [wreg]
  8970                           ;I2C_write@I2C_data stored from wreg
  8971  0EA8  00F0               	movwf	I2C_write@I2C_data
  8972  0EA9                     l1936:
  8973                           
  8974                           ;i2c.c: 54:     PIR3bits.SSP1IF = 0;
  8975  0EA9  002E               	movlb	14	; select bank14
  8976  0EAA  100F               	bcf	15,0	;volatile
  8977  0EAB                     l1938:
  8978                           
  8979                           ;i2c.c: 55:     SSP1BUF = I2C_data;
  8980  0EAB  0870               	movf	I2C_write@I2C_data,w
  8981  0EAC  0023               	movlb	3	; select bank3
  8982  0EAD  008C               	movwf	12	;volatile
  8983  0EAE                     l290:	
  8984                           ;i2c.c: 56:     while(PIR3bits.SSP1IF == 0);
  8985                           
  8986  0EAE  002E               	movlb	14	; select bank14
  8987  0EAF  1C0F               	btfss	15,0	;volatile
  8988  0EB0  2EB2               	goto	u1081
  8989  0EB1  2EB3               	goto	u1080
  8990  0EB2                     u1081:
  8991  0EB2  2EAE               	goto	l290
  8992  0EB3                     u1080:
  8993  0EB3                     l293:
  8994  0EB3  0008               	return
  8995  0EB4                     __end_of_I2C_write:
  8996                           
  8997                           	psect	text24
  8998  0E77                     __ptext24:	
  8999 ;; *************** function _I2C_stop *****************
  9000 ;; Defined at:
  9001 ;;		line 27 in file "i2c.c"
  9002 ;; Parameters:    Size  Location     Type
  9003 ;;		None
  9004 ;; Auto vars:     Size  Location     Type
  9005 ;;		None
  9006 ;; Return value:  Size  Location     Type
  9007 ;;                  1    wreg      void 
  9008 ;; Registers used:
  9009 ;;		None
  9010 ;; Tracked objects:
  9011 ;;		On entry : 0/0
  9012 ;;		On exit  : 0/0
  9013 ;;		Unchanged: 0/0
  9014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9019 ;;Total ram usage:        0 bytes
  9020 ;; Hardware stack levels used: 1
  9021 ;; This function calls:
  9022 ;;		Nothing
  9023 ;; This function is called by:
  9024 ;;		_main
  9025 ;;		_Write_PCF
  9026 ;;		_lcd_init
  9027 ;; This function uses a non-reentrant model
  9028 ;;
  9029                           
  9030                           
  9031                           ;psect for function _I2C_stop
  9032  0E77                     _I2C_stop:
  9033  0E77                     l1940:	
  9034                           ;incstack = 0
  9035                           ; Regs used in _I2C_stop: []
  9036                           
  9037                           
  9038                           ;i2c.c: 28:     SSP1CON2bits.PEN = 1;
  9039  0E77  0023               	movlb	3	; select bank3
  9040  0E78  1511               	bsf	17,2	;volatile
  9041  0E79                     l266:	
  9042                           ;i2c.c: 29:     while(SSP1CON2bits.PEN == 1);
  9043                           
  9044  0E79  1911               	btfsc	17,2	;volatile
  9045  0E7A  2E7C               	goto	u1091
  9046  0E7B  2E7D               	goto	u1090
  9047  0E7C                     u1091:
  9048  0E7C  2E79               	goto	l266
  9049  0E7D                     u1090:
  9050  0E7D                     l269:
  9051  0E7D  0008               	return
  9052  0E7E                     __end_of_I2C_stop:
  9053                           
  9054                           	psect	text25
  9055  0E70                     __ptext25:	
  9056 ;; *************** function _I2C_start *****************
  9057 ;; Defined at:
  9058 ;;		line 17 in file "i2c.c"
  9059 ;; Parameters:    Size  Location     Type
  9060 ;;		None
  9061 ;; Auto vars:     Size  Location     Type
  9062 ;;		None
  9063 ;; Return value:  Size  Location     Type
  9064 ;;                  1    wreg      void 
  9065 ;; Registers used:
  9066 ;;		None
  9067 ;; Tracked objects:
  9068 ;;		On entry : 0/0
  9069 ;;		On exit  : 0/0
  9070 ;;		Unchanged: 0/0
  9071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9076 ;;Total ram usage:        0 bytes
  9077 ;; Hardware stack levels used: 1
  9078 ;; This function calls:
  9079 ;;		Nothing
  9080 ;; This function is called by:
  9081 ;;		_main
  9082 ;;		_Write_PCF
  9083 ;;		_lcd_init
  9084 ;; This function uses a non-reentrant model
  9085 ;;
  9086                           
  9087                           
  9088                           ;psect for function _I2C_start
  9089  0E70                     _I2C_start:
  9090  0E70                     l1934:	
  9091                           ;incstack = 0
  9092                           ; Regs used in _I2C_start: []
  9093                           
  9094                           
  9095                           ;i2c.c: 18:     SSP1CON2bits.SEN = 1;
  9096  0E70  0023               	movlb	3	; select bank3
  9097  0E71  1411               	bsf	17,0	;volatile
  9098  0E72                     l254:	
  9099                           ;i2c.c: 19:     while(SSP1CON2bits.SEN == 1);
  9100                           
  9101  0E72  1811               	btfsc	17,0	;volatile
  9102  0E73  2E75               	goto	u1071
  9103  0E74  2E76               	goto	u1070
  9104  0E75                     u1071:
  9105  0E75  2E72               	goto	l254
  9106  0E76                     u1070:
  9107  0E76                     l257:
  9108  0E76  0008               	return
  9109  0E77                     __end_of_I2C_start:
  9110                           
  9111                           	psect	text26
  9112  0F01                     __ptext26:	
  9113 ;; *************** function _init *****************
  9114 ;; Defined at:
  9115 ;;		line 21 in file "main_Serial.c"
  9116 ;; Parameters:    Size  Location     Type
  9117 ;;		None
  9118 ;; Auto vars:     Size  Location     Type
  9119 ;;		None
  9120 ;; Return value:  Size  Location     Type
  9121 ;;                  1    wreg      void 
  9122 ;; Registers used:
  9123 ;;		wreg, status,2
  9124 ;; Tracked objects:
  9125 ;;		On entry : 0/0
  9126 ;;		On exit  : 0/0
  9127 ;;		Unchanged: 0/0
  9128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9133 ;;Total ram usage:        0 bytes
  9134 ;; Hardware stack levels used: 1
  9135 ;; This function calls:
  9136 ;;		Nothing
  9137 ;; This function is called by:
  9138 ;;		_main
  9139 ;; This function uses a non-reentrant model
  9140 ;;
  9141                           
  9142                           
  9143                           ;psect for function _init
  9144  0F01                     _init:
  9145  0F01                     l2304:	
  9146                           ;incstack = 0
  9147                           ; Regs used in _init: [wreg+status,2]
  9148                           
  9149                           
  9150                           ;main_Serial.c: 22:     PORTA = 0;
  9151  0F01  0020               	movlb	0	; select bank0
  9152  0F02  018C               	clrf	12	;volatile
  9153                           
  9154                           ;main_Serial.c: 23:     LATA = 0;
  9155  0F03  0196               	clrf	22	;volatile
  9156                           
  9157                           ;main_Serial.c: 24:     ANSELA = 0;
  9158  0F04  003E               	movlb	30	; select bank30
  9159  0F05  01B8               	clrf	56	;volatile
  9160  0F06                     l2306:
  9161                           
  9162                           ;main_Serial.c: 26:     TRISA = 0b11110000;
  9163  0F06  30F0               	movlw	240
  9164  0F07  0020               	movlb	0	; select bank0
  9165  0F08  0091               	movwf	17	;volatile
  9166  0F09                     l2308:
  9167                           
  9168                           ;main_Serial.c: 28:     PORTB = 0;
  9169  0F09  018D               	clrf	13	;volatile
  9170  0F0A                     l2310:
  9171                           
  9172                           ;main_Serial.c: 29:     LATB = 0;
  9173  0F0A  0197               	clrf	23	;volatile
  9174  0F0B                     l2312:
  9175                           
  9176                           ;main_Serial.c: 30:     ANSELB = 0;
  9177  0F0B  003E               	movlb	30	; select bank30
  9178  0F0C  01C3               	clrf	67	;volatile
  9179                           
  9180                           ;main_Serial.c: 31:     TRISB = 0x01;
  9181  0F0D  3001               	movlw	1
  9182  0F0E  0020               	movlb	0	; select bank0
  9183  0F0F  0092               	movwf	18	;volatile
  9184  0F10                     l2314:
  9185                           
  9186                           ;main_Serial.c: 32:     ANSELBbits.ANSB0 = 1;
  9187  0F10  003E               	movlb	30	; select bank30
  9188  0F11  1443               	bsf	67,0	;volatile
  9189  0F12                     l2316:
  9190                           
  9191                           ;main_Serial.c: 34:     PORTC = 0;
  9192  0F12  0020               	movlb	0	; select bank0
  9193  0F13  018E               	clrf	14	;volatile
  9194  0F14                     l2318:
  9195                           
  9196                           ;main_Serial.c: 35:     LATC = 0;
  9197  0F14  0198               	clrf	24	;volatile
  9198  0F15                     l2320:
  9199                           
  9200                           ;main_Serial.c: 36:     ANSELC = 0;
  9201  0F15  003E               	movlb	30	; select bank30
  9202  0F16  01CE               	clrf	78	;volatile
  9203  0F17                     l2322:
  9204                           
  9205                           ;main_Serial.c: 37:     TRISCbits.TRISC7 = 0;
  9206  0F17  0020               	movlb	0	; select bank0
  9207  0F18  1393               	bcf	19,7	;volatile
  9208  0F19                     l104:
  9209  0F19  0008               	return
  9210  0F1A                     __end_of_init:
  9211                           
  9212                           	psect	text27
  9213  0E7E                     __ptext27:	
  9214 ;; *************** function _hc_sr04_init *****************
  9215 ;; Defined at:
  9216 ;;		line 12 in file "ultraonico.c"
  9217 ;; Parameters:    Size  Location     Type
  9218 ;;		None
  9219 ;; Auto vars:     Size  Location     Type
  9220 ;;		None
  9221 ;; Return value:  Size  Location     Type
  9222 ;;                  1    wreg      void 
  9223 ;; Registers used:
  9224 ;;		None
  9225 ;; Tracked objects:
  9226 ;;		On entry : 0/0
  9227 ;;		On exit  : 0/0
  9228 ;;		Unchanged: 0/0
  9229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9234 ;;Total ram usage:        0 bytes
  9235 ;; Hardware stack levels used: 1
  9236 ;; This function calls:
  9237 ;;		Nothing
  9238 ;; This function is called by:
  9239 ;;		_main
  9240 ;; This function uses a non-reentrant model
  9241 ;;
  9242                           
  9243                           
  9244                           ;psect for function _hc_sr04_init
  9245  0E7E                     _hc_sr04_init:
  9246  0E7E                     l2338:	
  9247                           ;incstack = 0
  9248                           ; Regs used in _hc_sr04_init: []
  9249                           
  9250                           
  9251                           ;ultraonico.c: 13:     TRISBbits.TRISB1 = 0;
  9252  0E7E  0020               	movlb	0	; select bank0
  9253  0E7F  1092               	bcf	18,1	;volatile
  9254                           
  9255                           ;ultraonico.c: 14:     TRISBbits.TRISB2 = 1;
  9256  0E80  1512               	bsf	18,2	;volatile
  9257                           
  9258                           ;ultraonico.c: 15:     ANSELBbits.ANSB1 = 0;
  9259  0E81  003E               	movlb	30	; select bank30
  9260  0E82  10C3               	bcf	67,1	;volatile
  9261                           
  9262                           ;ultraonico.c: 16:     ANSELBbits.ANSB2 = 0;
  9263  0E83  1143               	bcf	67,2	;volatile
  9264                           
  9265                           ;ultraonico.c: 17:     LATBbits.LATB1 = 0;
  9266  0E84  0020               	movlb	0	; select bank0
  9267  0E85  1097               	bcf	23,1	;volatile
  9268  0E86                     l169:
  9269  0E86  0008               	return
  9270  0E87                     __end_of_hc_sr04_init:
  9271                           
  9272                           	psect	text28
  9273  0E57                     __ptext28:	
  9274 ;; *************** function _dht11_init *****************
  9275 ;; Defined at:
  9276 ;;		line 4 in file "dht11.c"
  9277 ;; Parameters:    Size  Location     Type
  9278 ;;		None
  9279 ;; Auto vars:     Size  Location     Type
  9280 ;;		None
  9281 ;; Return value:  Size  Location     Type
  9282 ;;                  1    wreg      void 
  9283 ;; Registers used:
  9284 ;;		None
  9285 ;; Tracked objects:
  9286 ;;		On entry : 0/0
  9287 ;;		On exit  : 0/0
  9288 ;;		Unchanged: 0/0
  9289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9294 ;;Total ram usage:        0 bytes
  9295 ;; Hardware stack levels used: 1
  9296 ;; This function calls:
  9297 ;;		Nothing
  9298 ;; This function is called by:
  9299 ;;		_main
  9300 ;; This function uses a non-reentrant model
  9301 ;;
  9302                           
  9303                           
  9304                           ;psect for function _dht11_init
  9305  0E57                     _dht11_init:
  9306  0E57                     l2340:	
  9307                           ;incstack = 0
  9308                           ; Regs used in _dht11_init: []
  9309                           
  9310                           
  9311                           ;dht11.c: 5:     ANSELBbits.ANSB3 =0;
  9312  0E57  003E               	movlb	30	; select bank30
  9313  0E58  11C3               	bcf	67,3	;volatile
  9314                           
  9315                           ;dht11.c: 6:     TRISBbits.TRISB3 = 0;
  9316  0E59  0020               	movlb	0	; select bank0
  9317  0E5A  1192               	bcf	18,3	;volatile
  9318                           
  9319                           ;dht11.c: 7:     LATBbits.LATB3 = 1;
  9320  0E5B  1597               	bsf	23,3	;volatile
  9321  0E5C                     l206:
  9322  0E5C  0008               	return
  9323  0E5D                     __end_of_dht11_init:
  9324                           
  9325                           	psect	text29
  9326  0EC5                     __ptext29:	
  9327 ;; *************** function _adc_init *****************
  9328 ;; Defined at:
  9329 ;;		line 6 in file "adc.c"
  9330 ;; Parameters:    Size  Location     Type
  9331 ;;		None
  9332 ;; Auto vars:     Size  Location     Type
  9333 ;;		None
  9334 ;; Return value:  Size  Location     Type
  9335 ;;                  1    wreg      void 
  9336 ;; Registers used:
  9337 ;;		wreg, status,2, status,0
  9338 ;; Tracked objects:
  9339 ;;		On entry : 0/0
  9340 ;;		On exit  : 0/0
  9341 ;;		Unchanged: 0/0
  9342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9347 ;;Total ram usage:        0 bytes
  9348 ;; Hardware stack levels used: 1
  9349 ;; This function calls:
  9350 ;;		Nothing
  9351 ;; This function is called by:
  9352 ;;		_main
  9353 ;; This function uses a non-reentrant model
  9354 ;;
  9355                           
  9356                           
  9357                           ;psect for function _adc_init
  9358  0EC5                     _adc_init:
  9359  0EC5                     l2286:	
  9360                           ;incstack = 0
  9361                           ; Regs used in _adc_init: [wreg+status,2+status,0]
  9362                           
  9363                           
  9364                           ;adc.c: 7:     ADCON1 = 0B11110000;
  9365  0EC5  30F0               	movlw	240
  9366  0EC6  0021               	movlb	1	; select bank1
  9367  0EC7  0094               	movwf	20	;volatile
  9368  0EC8                     l2288:
  9369                           
  9370                           ;adc.c: 9:     ANSELAbits.ANSA4 = 1;
  9371  0EC8  003E               	movlb	30	; select bank30
  9372  0EC9  1638               	bsf	56,4	;volatile
  9373  0ECA                     l2290:
  9374                           
  9375                           ;adc.c: 10:     ANSELBbits.ANSB0 = 1;
  9376  0ECA  1443               	bsf	67,0	;volatile
  9377  0ECB                     l2292:
  9378                           
  9379                           ;adc.c: 13:     ADCON0bits.ADON = 0;
  9380  0ECB  0021               	movlb	1	; select bank1
  9381  0ECC  1393               	bcf	19,7	;volatile
  9382  0ECD                     l2294:
  9383                           
  9384                           ;adc.c: 14:     ADCON0bits.ADCS = 0;
  9385  0ECD  1213               	bcf	19,4	;volatile
  9386  0ECE                     l2296:
  9387                           
  9388                           ;adc.c: 16:     ADCON0bits.ADFRM = 1;
  9389  0ECE  0813               	movf	19,w	;volatile
  9390  0ECF  39F3               	andlw	-13
  9391  0ED0  3804               	iorlw	4
  9392  0ED1  0093               	movwf	19	;volatile
  9393  0ED2                     l2298:
  9394                           
  9395                           ;adc.c: 28:     ADCLK = 0x12;
  9396  0ED2  3012               	movlw	18
  9397  0ED3  0098               	movwf	24	;volatile
  9398  0ED4                     l2300:
  9399                           
  9400                           ;adc.c: 29:         ADREF = 0;
  9401  0ED4  019A               	clrf	26	;volatile
  9402  0ED5                     l2302:
  9403                           
  9404                           ;adc.c: 30:     ADCON0bits.ADGO = 1;
  9405  0ED5  1413               	bsf	19,0	;volatile
  9406  0ED6                     l23:
  9407  0ED6  0008               	return
  9408  0ED7                     __end_of_adc_init:
  9409                           
  9410                           	psect	text30
  9411  0F4E                     __ptext30:	
  9412 ;; *************** function ___wmul *****************
  9413 ;; Defined at:
  9414 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  9415 ;; Parameters:    Size  Location     Type
  9416 ;;  multiplier      2    0[COMMON] unsigned int 
  9417 ;;  multiplicand    2    2[COMMON] unsigned int 
  9418 ;; Auto vars:     Size  Location     Type
  9419 ;;  product         2    4[COMMON] unsigned int 
  9420 ;; Return value:  Size  Location     Type
  9421 ;;                  2    0[COMMON] unsigned int 
  9422 ;; Registers used:
  9423 ;;		wreg, status,2, status,0
  9424 ;; Tracked objects:
  9425 ;;		On entry : 0/0
  9426 ;;		On exit  : 0/0
  9427 ;;		Unchanged: 0/0
  9428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9429 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9430 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9432 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9433 ;;Total ram usage:        6 bytes
  9434 ;; Hardware stack levels used: 1
  9435 ;; This function calls:
  9436 ;;		Nothing
  9437 ;; This function is called by:
  9438 ;;		_main
  9439 ;; This function uses a non-reentrant model
  9440 ;;
  9441                           
  9442                           
  9443                           ;psect for function ___wmul
  9444  0F4E                     ___wmul:
  9445  0F4E                     l2452:	
  9446                           ;incstack = 0
  9447                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9448                           
  9449  0F4E  01F4               	clrf	___wmul@product
  9450  0F4F  01F5               	clrf	___wmul@product+1
  9451  0F50                     l2454:
  9452  0F50  1C70               	btfss	___wmul@multiplier,0
  9453  0F51  2F53               	goto	u1801
  9454  0F52  2F54               	goto	u1800
  9455  0F53                     u1801:
  9456  0F53  2F58               	goto	l523
  9457  0F54                     u1800:
  9458  0F54                     l2456:
  9459  0F54  0872               	movf	___wmul@multiplicand,w
  9460  0F55  07F4               	addwf	___wmul@product,f
  9461  0F56  0873               	movf	___wmul@multiplicand+1,w
  9462  0F57  3DF5               	addwfc	___wmul@product+1,f
  9463  0F58                     l523:
  9464  0F58  3001               	movlw	1
  9465  0F59                     u1815:
  9466  0F59  35F2               	lslf	___wmul@multiplicand,f
  9467  0F5A  0DF3               	rlf	___wmul@multiplicand+1,f
  9468  0F5B  0B89               	decfsz	9,f
  9469  0F5C  2F59               	goto	u1815
  9470  0F5D                     l2458:
  9471  0F5D  3001               	movlw	1
  9472  0F5E                     u1825:
  9473  0F5E  36F1               	lsrf	___wmul@multiplier+1,f
  9474  0F5F  0CF0               	rrf	___wmul@multiplier,f
  9475  0F60  0B89               	decfsz	9,f
  9476  0F61  2F5E               	goto	u1825
  9477  0F62                     l2460:
  9478  0F62  0870               	movf	___wmul@multiplier,w
  9479  0F63  0471               	iorwf	___wmul@multiplier+1,w
  9480  0F64  1D03               	btfss	3,2
  9481  0F65  2F67               	goto	u1831
  9482  0F66  2F68               	goto	u1830
  9483  0F67                     u1831:
  9484  0F67  2F50               	goto	l2454
  9485  0F68                     u1830:
  9486  0F68                     l2462:
  9487  0F68  0875               	movf	___wmul@product+1,w
  9488  0F69  00F1               	movwf	?___wmul+1
  9489  0F6A  0874               	movf	___wmul@product,w
  9490  0F6B  00F0               	movwf	?___wmul
  9491  0F6C                     l525:
  9492  0F6C  0008               	return
  9493  0F6D                     __end_of___wmul:
  9494                           
  9495                           	psect	text31
  9496  0E69                     __ptext31:	
  9497 ;; *************** function _I2C_restart *****************
  9498 ;; Defined at:
  9499 ;;		line 22 in file "i2c.c"
  9500 ;; Parameters:    Size  Location     Type
  9501 ;;		None
  9502 ;; Auto vars:     Size  Location     Type
  9503 ;;		None
  9504 ;; Return value:  Size  Location     Type
  9505 ;;                  1    wreg      void 
  9506 ;; Registers used:
  9507 ;;		None
  9508 ;; Tracked objects:
  9509 ;;		On entry : 0/0
  9510 ;;		On exit  : 0/0
  9511 ;;		Unchanged: 0/0
  9512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9517 ;;Total ram usage:        0 bytes
  9518 ;; Hardware stack levels used: 1
  9519 ;; This function calls:
  9520 ;;		Nothing
  9521 ;; This function is called by:
  9522 ;;		_main
  9523 ;; This function uses a non-reentrant model
  9524 ;;
  9525                           
  9526                           
  9527                           ;psect for function _I2C_restart
  9528  0E69                     _I2C_restart:
  9529  0E69                     l2436:	
  9530                           ;incstack = 0
  9531                           ; Regs used in _I2C_restart: []
  9532                           
  9533                           
  9534                           ;i2c.c: 23:     SSP1CON2bits.RSEN = 1;
  9535  0E69  0023               	movlb	3	; select bank3
  9536  0E6A  1491               	bsf	17,1	;volatile
  9537  0E6B                     l260:	
  9538                           ;i2c.c: 24:     while(SSP1CON2bits.RSEN == 1);
  9539                           
  9540  0E6B  1891               	btfsc	17,1	;volatile
  9541  0E6C  2E6E               	goto	u1771
  9542  0E6D  2E6F               	goto	u1770
  9543  0E6E                     u1771:
  9544  0E6E  2E6B               	goto	l260
  9545  0E6F                     u1770:
  9546  0E6F                     l263:
  9547  0E6F  0008               	return
  9548  0E70                     __end_of_I2C_restart:
  9549                           
  9550                           	psect	text32
  9551  0E9C                     __ptext32:	
  9552 ;; *************** function _I2C_read *****************
  9553 ;; Defined at:
  9554 ;;		line 32 in file "i2c.c"
  9555 ;; Parameters:    Size  Location     Type
  9556 ;;		None
  9557 ;; Auto vars:     Size  Location     Type
  9558 ;;		None
  9559 ;; Return value:  Size  Location     Type
  9560 ;;                  1    wreg      unsigned char 
  9561 ;; Registers used:
  9562 ;;		wreg
  9563 ;; Tracked objects:
  9564 ;;		On entry : 0/0
  9565 ;;		On exit  : 0/0
  9566 ;;		Unchanged: 0/0
  9567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9572 ;;Total ram usage:        0 bytes
  9573 ;; Hardware stack levels used: 1
  9574 ;; This function calls:
  9575 ;;		Nothing
  9576 ;; This function is called by:
  9577 ;;		_main
  9578 ;; This function uses a non-reentrant model
  9579 ;;
  9580                           
  9581                           
  9582                           ;psect for function _I2C_read
  9583  0E9C                     _I2C_read:
  9584  0E9C                     l2438:	
  9585                           ;incstack = 0
  9586                           ; Regs used in _I2C_read: [wreg]
  9587                           
  9588                           
  9589                           ;i2c.c: 33:     PIR3bits.SSP1IF = 0;
  9590  0E9C  002E               	movlb	14	; select bank14
  9591  0E9D  100F               	bcf	15,0	;volatile
  9592                           
  9593                           ;i2c.c: 34:     SSP1CON2bits.RCEN = 1;
  9594  0E9E  0023               	movlb	3	; select bank3
  9595  0E9F  1591               	bsf	17,3	;volatile
  9596  0EA0                     l272:	
  9597                           ;i2c.c: 35:     while(PIR3bits.SSP1IF == 0);
  9598                           
  9599  0EA0  002E               	movlb	14	; select bank14
  9600  0EA1  1C0F               	btfss	15,0	;volatile
  9601  0EA2  2EA4               	goto	u1781
  9602  0EA3  2EA5               	goto	u1780
  9603  0EA4                     u1781:
  9604  0EA4  2EA0               	goto	l272
  9605  0EA5                     u1780:
  9606  0EA5                     l2440:
  9607                           
  9608                           ;i2c.c: 36:     return SSP1BUF;
  9609  0EA5  0023               	movlb	3	; select bank3
  9610  0EA6  080C               	movf	12,w	;volatile
  9611  0EA7                     l275:
  9612  0EA7  0008               	return
  9613  0EA8                     __end_of_I2C_read:
  9614                           
  9615                           	psect	text33
  9616  0E91                     __ptext33:	
  9617 ;; *************** function _I2C_nack *****************
  9618 ;; Defined at:
  9619 ;;		line 46 in file "i2c.c"
  9620 ;; Parameters:    Size  Location     Type
  9621 ;;		None
  9622 ;; Auto vars:     Size  Location     Type
  9623 ;;		None
  9624 ;; Return value:  Size  Location     Type
  9625 ;;                  1    wreg      void 
  9626 ;; Registers used:
  9627 ;;		None
  9628 ;; Tracked objects:
  9629 ;;		On entry : 0/0
  9630 ;;		On exit  : 0/0
  9631 ;;		Unchanged: 0/0
  9632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9637 ;;Total ram usage:        0 bytes
  9638 ;; Hardware stack levels used: 1
  9639 ;; This function calls:
  9640 ;;		Nothing
  9641 ;; This function is called by:
  9642 ;;		_main
  9643 ;; This function uses a non-reentrant model
  9644 ;;
  9645                           
  9646                           
  9647                           ;psect for function _I2C_nack
  9648  0E91                     _I2C_nack:
  9649  0E91                     l2444:	
  9650                           ;incstack = 0
  9651                           ; Regs used in _I2C_nack: []
  9652                           
  9653                           
  9654                           ;i2c.c: 47:     PIR3bits.SSP1IF = 0;
  9655  0E91  002E               	movlb	14	; select bank14
  9656  0E92  100F               	bcf	15,0	;volatile
  9657                           
  9658                           ;i2c.c: 48:     SSP1CON2bits.ACKDT = 1;
  9659  0E93  0023               	movlb	3	; select bank3
  9660  0E94  1691               	bsf	17,5	;volatile
  9661                           
  9662                           ;i2c.c: 49:     SSP1CON2bits.ACKEN = 1;
  9663  0E95  1611               	bsf	17,4	;volatile
  9664  0E96                     l284:	
  9665                           ;i2c.c: 50:     while(PIR3bits.SSP1IF == 0);
  9666                           
  9667  0E96  002E               	movlb	14	; select bank14
  9668  0E97  1C0F               	btfss	15,0	;volatile
  9669  0E98  2E9A               	goto	u1791
  9670  0E99  2E9B               	goto	u1790
  9671  0E9A                     u1791:
  9672  0E9A  2E96               	goto	l284
  9673  0E9B                     u1790:
  9674  0E9B                     l287:
  9675  0E9B  0008               	return
  9676  0E9C                     __end_of_I2C_nack:
  9677                           
  9678                           	psect	text34
  9679  0ED7                     __ptext34:	
  9680 ;; *************** function _I2C_init *****************
  9681 ;; Defined at:
  9682 ;;		line 3 in file "i2c.c"
  9683 ;; Parameters:    Size  Location     Type
  9684 ;;		None
  9685 ;; Auto vars:     Size  Location     Type
  9686 ;;		None
  9687 ;; Return value:  Size  Location     Type
  9688 ;;                  1    wreg      void 
  9689 ;; Registers used:
  9690 ;;		wreg, status,2
  9691 ;; Tracked objects:
  9692 ;;		On entry : 0/0
  9693 ;;		On exit  : 0/0
  9694 ;;		Unchanged: 0/0
  9695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9700 ;;Total ram usage:        0 bytes
  9701 ;; Hardware stack levels used: 1
  9702 ;; This function calls:
  9703 ;;		Nothing
  9704 ;; This function is called by:
  9705 ;;		_main
  9706 ;; This function uses a non-reentrant model
  9707 ;;
  9708                           
  9709                           
  9710                           ;psect for function _I2C_init
  9711  0ED7                     _I2C_init:
  9712  0ED7                     l2342:	
  9713                           ;incstack = 0
  9714                           ; Regs used in _I2C_init: [wreg+status,2]
  9715                           
  9716                           
  9717                           ;i2c.c: 4:     SSP1STAT = 0b10000000;
  9718  0ED7  3080               	movlw	128
  9719  0ED8  0023               	movlb	3	; select bank3
  9720  0ED9  008F               	movwf	15	;volatile
  9721                           
  9722                           ;i2c.c: 6:     SSP1CON1 = 0b00101000;
  9723  0EDA  3028               	movlw	40
  9724  0EDB  0090               	movwf	16	;volatile
  9725  0EDC                     l2344:
  9726                           
  9727                           ;i2c.c: 7:  SSP1CON3 = 0x00;
  9728  0EDC  0192               	clrf	18	;volatile
  9729  0EDD                     l2346:
  9730                           
  9731                           ;i2c.c: 8:     SSP1ADD = ((32000000L/(4UL*100000UL))-1);
  9732  0EDD  304F               	movlw	79
  9733  0EDE  008D               	movwf	13	;volatile
  9734  0EDF                     l2348:
  9735                           
  9736                           ;i2c.c: 11:     SSP1CLKPPS = 0x14;
  9737  0EDF  3014               	movlw	20
  9738  0EE0  003D               	movlb	29	; select bank29
  9739  0EE1  00C5               	movwf	69	;volatile
  9740  0EE2                     l2350:
  9741                           
  9742                           ;i2c.c: 12:     RC3PPS = 0x15;
  9743  0EE2  3015               	movlw	21
  9744  0EE3  003E               	movlb	30	; select bank30
  9745  0EE4  00A3               	movwf	35	;volatile
  9746  0EE5                     l2352:
  9747                           
  9748                           ;i2c.c: 13:     RC4PPS = 0x14;
  9749  0EE5  3014               	movlw	20
  9750  0EE6  00A4               	movwf	36	;volatile
  9751  0EE7                     l2354:
  9752                           
  9753                           ;i2c.c: 14:     SSP1DATPPS = 0x13;
  9754  0EE7  3013               	movlw	19
  9755  0EE8  003D               	movlb	29	; select bank29
  9756  0EE9  00C6               	movwf	70	;volatile
  9757  0EEA                     l251:
  9758  0EEA  0008               	return
  9759  0EEB                     __end_of_I2C_init:
  9760  007E                     btemp	set	126	;btemp
  9761  007E                     wtemp0	set	126
  9762                           
  9763                           	psect	config
  9764                           
  9765                           ;Config register CONFIG1 @ 0x8007
  9766                           ;	External Oscillator mode selection bits
  9767                           ;	FEXTOSC = OFF, Oscillator not enabled
  9768                           ;	Power-up default value for COSC bits
  9769                           ;	RSTOSC = HFINT32, HFINTOSC with OSCFRQ= 32 MHz and CDIV = 1:1
  9770                           ;	Clock Out Enable bit
  9771                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
  9772                           ;	Clock Switch Enable bit
  9773                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  9774                           ;	Fail-Safe Clock Monitor Enable bit
  9775                           ;	FCMEN = ON, FSCM timer enabled
  9776  8007                     	org	32775
  9777  8007  3F8C               	dw	16268
  9778                           
  9779                           ;Config register CONFIG2 @ 0x8008
  9780                           ;	Master Clear Enable bit
  9781                           ;	MCLRE = ON, MCLR pin is Master Clear function
  9782                           ;	Power-up Timer Enable bit
  9783                           ;	PWRTE = OFF, PWRT disabled
  9784                           ;	Low-Power BOR enable bit
  9785                           ;	LPBOREN = OFF, ULPBOR disabled
  9786                           ;	Brown-out reset enable bits
  9787                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  9788                           ;	Brown-out Reset Voltage Selection
  9789                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
  9790                           ;	Zero-cross detect disable
  9791                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
  9792                           ;	Peripheral Pin Select one-way control
  9793                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
  9794                           ;	Stack Overflow/Underflow Reset Enable bit
  9795                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  9796                           ;	Background Debugger
  9797                           ;	DEBUG = 0x1, unprogrammed default
  9798  8008                     	org	32776
  9799  8008  3FFF               	dw	16383
  9800                           
  9801                           ;Config register CONFIG3 @ 0x8009
  9802                           ;	WDT Period Select bits
  9803                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9804                           ;	WDT operating mode
  9805                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
  9806                           ;	WDT Window Select bits
  9807                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  9808                           ;	WDT input clock selector
  9809                           ;	WDTCCS = SC, Software Control
  9810  8009                     	org	32777
  9811  8009  3F9F               	dw	16287
  9812                           
  9813                           ;Config register CONFIG4 @ 0x800A
  9814                           ;	UserNVM self-write protection bits
  9815                           ;	WRT = OFF, Write protection off
  9816                           ;	Scanner Enable bit
  9817                           ;	SCANE = available, Scanner module is available for use
  9818                           ;	Low Voltage Programming Enable bit
  9819                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
  9820  800A                     	org	32778
  9821  800A  3FFF               	dw	16383
  9822                           
  9823                           ;Config register CONFIG5 @ 0x800B
  9824                           ;	UserNVM Program memory code protection bit
  9825                           ;	CP = OFF, Program Memory code protection disabled
  9826                           ;	DataNVM code protection bit
  9827                           ;	CPD = OFF, Data EEPROM code protection disabled
  9828  800B                     	org	32779
  9829  800B  3FFF               	dw	16383

Data Sizes:
    Strings     73
    Constant    4
    Data        0
    BSS         50
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     46      64
    BANK2            80      0      32
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 41
		 -> STR_2(CODE[41]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK0[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 40
		 -> main@buffer(BANK1[40]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK0[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK0[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 41
		 -> STR_2(CODE[41]), STR_1(CODE[32]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 41
		 -> STR_2(CODE[41]), STR_1(CODE[32]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK0[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK0[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK0[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_1(CODE[32]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 40
		 -> main@buffer(BANK1[40]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    S1172_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 40
		 -> main@buffer(BANK1[40]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 40
		 -> main@buffer(BANK1[40]), 

    lcd_puts@dato	PTR unsigned char  size(1) Largest target is 40
		 -> main@buffer(BANK1[40]), 


Critical Paths under _main in COMMON

    _main->_lcd_puts
    _serial_init->___aldiv
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_serial_TX
    _abs->___aomod
    _lcd_puts->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_init->_lcd_send_byte
    _lcd_send_byte->_Send_D7_D4
    _Send_D7_D4->_Write_PCF
    _Write_PCF->_I2C_write

Critical Paths under _main in BANK0

    _main->_printf
    _main->_sprintf
    _sprintf->_vfprintf
    _serial_init->___aldiv
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod
    _lcd_puts->_lcd_gotoxy

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                63    63      0   19547
                                              0 BANK1     46    46      0
                           _I2C_init
                           _I2C_nack
                           _I2C_read
                        _I2C_restart
                          _I2C_start
                           _I2C_stop
                          _I2C_write
                             ___wmul
                           _adc_init
                         _dht11_init
                       _hc_sr04_init
                               _init
                           _lcd_init
                           _lcd_puts
                             _printf
                        _serial_init
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             12    10      2    6429
                                             70 BANK0     10     8      2
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _serial_init                                          8     6      2     770
                                              6 BANK0      8     6      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     604
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _printf                                              12     4      8    6251
                                             70 BANK0     10     2      8
                             ___wmul (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    6121
                                             62 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    5625
                                             46 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4231
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2625
                                              4 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1193
                                             10 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     878
                                              2 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      44
                                              1 COMMON     1     1      0
                          _serial_TX
 ---------------------------------------------------------------------------------
 (6) _serial_TX                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             3     3      0    3378
                                             13 COMMON     1     1      0
                                              2 BANK0      2     2      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoxy                                           5     4      1    1773
                                             10 COMMON     3     2      1
                                              0 BANK0      2     2      0
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0    2374
                                             10 COMMON     3     3      0
                          _I2C_start
                           _I2C_stop
                          _I2C_write
                         _Send_D7_D4
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_send_byte                                        3     2      1    1505
                                              7 COMMON     3     2      1
                         _Send_D7_D4
 ---------------------------------------------------------------------------------
 (3) _Send_D7_D4                                           5     4      1     733
                                              2 COMMON     5     4      1
                          _Write_PCF
 ---------------------------------------------------------------------------------
 (4) _Write_PCF                                            1     1      0      44
                                              1 COMMON     1     1      0
                          _I2C_start
                           _I2C_stop
                          _I2C_write
 ---------------------------------------------------------------------------------
 (5) _I2C_write                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _hc_sr04_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dht11_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _I2C_restart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_init
   _I2C_nack
   _I2C_read
   _I2C_restart
   _I2C_start
   _I2C_stop
   _I2C_write
   ___wmul
   _adc_init
   _dht11_init
   _hc_sr04_init
   _init
   _lcd_init
     _I2C_start
     _I2C_stop
     _I2C_write
     _Send_D7_D4
       _Write_PCF
         _I2C_start
         _I2C_stop
         _I2C_write
     _lcd_send_byte
       _Send_D7_D4
   _lcd_puts
     _lcd_gotoxy
       _lcd_send_byte
     _lcd_send_byte
   _printf
     ___wmul (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _serial_TX
             _fputs
               _fputc
             _strlen
         _fputc
   _serial_init
     ___aldiv
   _sprintf
     _vfprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     2E      40       7       80.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      20       9       40.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      BE      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      BE      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Aug 16 14:05:14 2021

        serial_init@baud 0026        Send_D7_D4@address 0075                       l23 0ED6  
       Send_D7_D4@nibble 0072           ?_lcd_send_byte 0077      ___wmul@multiplicand 0072  
     __size_of_I2C_start 0007       __size_of_I2C_write 000C                      l104 0F19  
                    l140 0E88                      l206 0E5C                      l310 0EC4  
                    l143 0E90                      l137 0090                      l251 0EEA  
                    l323 0265                      l260 0E6B                      l156 0E62  
                    l333 01F1                      l254 0E72                      l326 0F00  
                    l263 0E6F                      l343 0FFF                      l272 0EA0  
                    l169 0E86                      l257 0E76                      l266 0E79  
                    l290 0EAE                      l362 0137                      l275 0EA7  
                    l523 0F58                      l284 0E96                      l525 0F6C  
                    l269 0E7D                      l293 0EB3                      l287 0E9B  
                    l623 066B                      l624 067C                      l636 056A  
                    l637 057B                      l588 0279                      l598 02F5  
                    l986 0F8F                      _abs 0F1A                      _pad 0138  
                    wreg 0009              lcd_gotoxy@x 0020              lcd_gotoxy@y 007A  
           _BAUD1CONbits 011F                     l1013 0154                     l1021 06C6  
                   l1030 0775                     l1022 06CF                     l2000 0648  
                   l1016 0176                     l2002 064D                     l2010 04BE  
                   l1018 0190                     l1026 06EC                     l1027 0704  
                   l1051 0491                     ?_abs 0073                     l2020 04FF  
                   l2012 04C8                     l2004 0492                     l1044 07EC  
                   l2100 067F                     l2022 0503                     l2030 0547  
                   l2014 04E7                     l2006 0493                     l1062 0F33  
                   l2110 06DE                     l2102 068F                     l2032 054C  
                   l2024 0507                     l2016 04F4                     l2008 049D  
                   l2040 014D                     l2120 0709                     l2112 06E4  
                   l2104 06A2                     l1065 0F33                     l2210 0FC3  
                   l2026 0529                     l2018 04F7                     l2050 017B  
                   l2042 0152                     l2034 013A                     l2130 0748  
                   l2122 070C                     l2114 06F4                     l2106 06A8  
                   l1058 0047                     l2300 0ED4                     l2060 01F3  
                   l2212 0FC8                     l2220 0FE5                     l2204 0FBB  
                   l2028 0539                     l2052 0184                     l2044 0157  
                   l2036 013F                     l2132 0783                     l2140 07B0  
                   l2124 0711                     l2116 06FA                     l2108 06CB  
                   l1092 0016                     l1077 00DF                     l1085 0FB8  
                   l2302 0ED5                     l2310 0F0A                     l2070 0211  
                   l2062 01F4                     l2222 0FEA                     l2206 0FBC  
                   l2046 0163                     l2038 0148                     l2150 07CC  
                   l2142 07B7                     l2134 0790                     l2126 0740  
                   l2118 06FF                     l2320 0F15                     l2312 0F0B  
                   l2304 0F01                     l2080 0230                     l2072 0217  
                   l2064 01FD                     l2224 0FF3                     l2208 0FBE  
                   l2056 0F1A                     l2048 0168                     l2152 07D0  
                   l2144 07BC                     l2136 079D                     l2128 0744  
                   l2160 03B9                     l2240 027D                     l2400 0F79  
                   l2322 0F17                     l2314 0F10                     l2306 0F06  
                   l2090 024C                     l2082 0239                     l2074 021C  
                   l2066 0203                     l2226 0FFA                     l2218 0FCD  
                   l2410 00E2                     l2058 0F27                     l1098 0F4D  
                   l2146 07C1                     l2154 07D9                     l2138 07AB  
                   l2170 03ED                     l2162 03CA                     l2250 029F  
                   l2242 0288                     l2234 0266                     l2330 0069  
                   l2402 0F7B                     l2340 0E57                     l2316 0F12  
                   l2308 0F09                     l2092 0252                     l2084 023F  
                   l2076 0225                     l2068 0208                     l2420 00FE  
                   l2412 00E8                     l2148 07C7                     l2180 0439  
                   l2172 03FE                     l2164 03D2                     l2260 02CF  
                   l2252 02AA                     l2244 028C                     l2236 0268  
                   l2332 0086                     l2324 0048                     l2404 0F87  
                   l2500 0340                     l2350 0EE2                     l2342 0ED7  
                   l2318 0F14                     l2094 0257                     l2086 0244  
                   l2078 022B                     l2158 0EEC                     l2422 010A  
                   l2414 00F1                     l2430 012F                     l2182 044A  
                   l2190 0463                     l2174 0406                     l2166 03D7  
                   l2270 02ED                     l2262 02D0                     l2254 02AE  
                   l2246 0294                     l2238 026C                     l2334 008A  
                   l2326 004A                     l2510 0354                     l2502 0347  
                   l2352 0EE5                     l2344 0EDC                     l2440 0EA5  
                   l2096 025C                     l2088 0247                     l2360 0198  
                   l2416 00F3                     l2408 00E1                     l2192 046B  
                   l2184 0452                     l2176 041F                     l2168 03DB  
                   l2280 0035                     l2264 02D7                     l2256 02B5  
                   l2248 029C                     l2336 008D                     l2328 004E  
                   l2520 0369                     l2512 0358                     l2504 034A  
                   l2354 0EE7                     l2346 0EDD                     l2290 0ECA  
                   l2338 0E7E                     l2098 0260                     l2370 01AB  
                   l2362 019F                     l2426 0116                     l2418 00F4  
                   l2186 045D                     l2282 003F                     l2274 0019  
                   l2258 02C7                     l2266 02DD                     l2522 036C  
                   l2514 035B                     l2506 034D                     l2348 0EDF  
                   l2444 0E91                     l2436 0E69                     l2460 0F62  
                   l2452 0F4E                     l2292 0ECB                     l2380 01CD  
                   l2372 01B3                     l2364 01AA                     l2356 0191  
                   l2428 012A                     l2196 046E                     l2276 001D  
                   l2268 02E2                     l2524 0377                     l2516 035F  
                   l2508 0350                     l2438 0E9C                     l2462 0F68  
                   l2454 0F50                     l2294 0ECD                     l2286 0EC5  
                   l2390 01E4                     l2374 01BA                     l2358 0194  
                   l2198 0487                     l2278 0021                     l2446 0005  
                   l2526 03A2                     l2518 0366                     l2470 02FB  
                   l2456 0F54                     l2296 0ECE                     l2288 0EC8  
                   l2392 01E8                     l2376 01BE                     l1912 0E88  
                   l1920 0096                     l2448 000A                     l2528 03A7  
                   l2480 030F                     l2472 02FE                     l2458 0F5D  
                   l2298 0ED2                     l2394 01EE                     l2386 01CE  
                   l2378 01C5                     l1914 0E8D                     l1930 00D7  
                   l1922 009B                     l2490 032E                     l2482 0312  
                   l2474 0301                     l2466 02F6                     l1940 0E77  
                   l2388 01DD                     l1916 0E5E                     l1924 00A0  
                   l2396 0F6F                     l2492 0331                     l2484 0315  
                   l2476 0309                     l2468 02FB                     l1934 0E70  
                   l1926 00AA                     l1918 0091                     l1942 0F92  
                   l1950 0F35                     l2398 0F77                     l2494 0335  
                   l2486 031E                     l2478 030C                     l1936 0EA9  
                   l1960 0EB5                     l1928 00C7                     l1944 0F95  
                   l1952 0F3A                     l2496 0339                     l2488 0322  
                   l1938 0EAB                     l1962 0EB8                     l1970 0587  
                   l1946 0FA3                     l1954 0F3E                     l2498 033C  
                   l1964 0EBC                     l1980 05DF                     l1972 05A8  
                   l1948 0FA8                     l1956 0F47                     l2686 0122  
                   l1990 05FF                     l1982 05EC                     l1974 05B2  
                   l1966 057C                     ?_pad 0024                     l2688 0FD7  
                   l1992 0607                     l1984 05EF                     l1976 05D1  
                   l1968 057D                     l1994 0629                     l1986 05F7  
                   l1978 05D5                     l1996 0639                     l1988 05FB  
                   l1998 063A                     STR_1 102D                     STR_2 1004  
                   u1020 0E8D                     u1100 0FB8                     u1021 0E8C  
                   u1101 0FB7                     u1030 0096                     u1110 0F47  
                   u1031 0095                     u1111 0F46                     u1200 0648  
                   u1120 0587                     u1040 009B                     u1201 0647  
                   u1121 0586                     u1041 009A                     u1210 064D  
                   u1050 00AA                     u1211 064C                     u1051 00A9  
                   u1140 05B2                     u1300 0547                     u1060 00C7  
                   u1141 05B1                     u1301 0546                     u1061 00C6  
                   u1070 0E76                     u1310 054C                     u1230 049D  
                   u1071 0E75                     u2007 01B6                     u1311 054B  
                   u1231 049C                     u1080 0EB3                     u1400 0225  
                   u1160 05DC                     u1081 0EB2                     u1401 0224  
                   u2017 01E0                     u1065 00C3                     u1090 0E7D  
                   u1410 0239                     u1170 05EC                     u1250 04C8  
                   u1330 013F                     u1091 0E7C                     u2027 0245  
                   u1411 0238                     u1171 05EB                     u1251 04C7  
                   u1331 013E                     u1420 024C                     u1180 05FF  
                   u1340 014D                     u1500 06FF                     u2037 025D  
                   u1421 024B                     u1181 05FE                     u1341 014C  
                   u1501 06FE                     _LATA 0016                     u1190 0629  
                   u1270 04F4                     u1350 0176                     u1510 0783  
                   u1430 069A                     _LATB 0017                     u1191 0628  
                   u1271 04F3                     u1351 0175                     u1511 0782  
                   u1431 0698                     _LATC 0018                     u1280 0507  
                   u1360 017B                     u1520 0790                     u1440 069B  
                   u1600 03ED                     u1281 0506                     u1361 017A  
                   u1521 078F                     u1601 03EC                     u1290 0529  
                   u1370 0F27                     u1530 079D                     u1450 06A8  
                   u1610 03FE                     u1195 0625                     u1291 0528  
                   u1371 0F26                     u1355 0172                     u1531 079C  
                   u1515 077F                     u1451 06A7                     u1611 03FD  
                   u1380 01FD                     u1540 07AB                     u1620 044A  
                   u1381 01FC                     u1541 07AA                     u1621 0449  
                   u1390 0211                     u1550 07B0                     u1470 06CB  
                   u1710 02DD                     u1630 026C                     u1391 0210  
                   u1295 0525                     u1375 0F23                     u1551 07AF  
                   u1535 0799                     u1471 06CA                     u1711 02DC  
                   u1631 026B                     u1800 0F54                     u1560 07B7  
                   u1480 06DE                     u1720 02E2                     u1640 027D  
                   u1801 0F53                     u1561 07B6                     u1545 07A7  
                   u1481 06DD                     u1721 02E1                     u1705 02D1  
                   u1641 027C                     u1570 07BC                     u1490 06FA  
                   u1730 003F                     u1650 029C                     u1571 07BB  
                   u1491 06F9                     u1731 003E                     u1651 029B  
                   u1740 01C5                     u1580 07C7                     u1741 01C4  
                   u1581 07C6                     u1485 06DA                     u1830 0F68  
                   u1750 01EE                     u1590 03CA                     u1670 02AE  
                   u1831 0F67                     u1815 0F59                     u1751 01ED  
                   u1591 03C9                     u1671 02AD                     u1760 0137  
                   u1825 0F5E                     u1761 0136                     u1665 02A0  
                   u1770 0E6F                     u1690 02C7                     u1771 0E6E  
                   u1691 02C6                     u1780 0EA5                     u1781 0EA4  
                   u1685 02AF                     u1845 0370                     u1790 0E9B  
                   u1791 0E9A                     u1695 02C3                     u1957 0328  
                   u1967 03AD                     u1977 00EC                     u1987 00F8  
                   u1997 01A4                     abs@a 0073                     _dbuf 0120  
                   _main 02F6                     _dtoa 067D                     _init 0F01  
                   _prec 00D7                     _nout 00D3                     pad@i 0028  
                   pad@p 0025                     fsr0h 0005                     fsr1h 0007  
                   indf0 0000                     fsr0l 0004                     indf1 0001  
                   fsr1l 0006                     pad@w 002A                     btemp 007E  
   __end_of_hc_sr04_init 0E87         __end_of_I2C_nack 0E9C         __end_of_I2C_init 0EEB  
       __end_of_I2C_read 0EA8                     start 0002         __end_of_I2C_stop 0E7E  
   __size_of_I2C_restart 0007                    ??_abs 0075                    ??_pad 0027  
        __end_of___aldiv 02F6          __end_of___aodiv 067D                    ?_main 0070  
                  ?_dtoa 0030                    _ADCLK 0098          __end_of___aomod 057C  
                  ?_init 0070                    _ADPCH 009E                    _ADREF 009A  
                  _RCREG 0119             vfpfcnvrt@fmt 004E                    _PORTA 000C  
                  _PORTB 000D                    _PORTC 000E                    _TRISA 0011  
                  _TRISB 0012                    _RXPPS 0ECB                    _TXREG 011A  
                  _flags 00D9                    _fputc 0091                    _fputs 0F90  
                  pad@fp 002C                    main@H 00CB                    _width 00D5  
                  main@T 00CA                    _putch 0E5D                    dtoa@d 0030  
                  dtoa@i 004C             lcd_puts@dato 007D                    dtoa@n 0044  
                  dtoa@p 003E                    dtoa@s 0042                    dtoa@w 0040  
                  status 0003        __end_of_I2C_start 0E77                    wtemp0 007E  
        __end_of_sprintf 0F90        __end_of_I2C_write 0EB4          __initialization 07ED  
      I2C_write@I2C_data 0070             __end_of_main 03B7             __end_of_dtoa 07ED  
        ??_lcd_send_byte 0078             __end_of_init 0F1A                   ??_main 00A0  
                 ??_dtoa 0038                   ??_init 0070               _Send_D7_D4 01F2  
                 _ADCON1 0094                   ?_fputc 0072                   ?_fputs 007A  
                 _ADRESH 008D                   _ADRESL 008C                   _ANSELA 0F38  
                 ?_putch 0070                   _ANSELB 0F43                   _ANSELC 0F4E  
                 _RC0PPS 0F20         __end_of_adc_init 0ED7                   _RC1STA 011D  
                 _RC3PPS 0F23                   _RC4PPS 0F24                   u113lld 05A6  
                 u122lld 066B                   u115lld 05D1                   u132lld 056A  
                 u124lld 04BC                   u126lld 04E7                   u146lld 06C6  
                 _TX1STA 011E             ?_serial_init 0026             vfprintf@cfmt 0064  
       __end_of_lcd_init 01F2                   _g_LcdX 00DE                   _g_LcdY 00DD  
       __end_of_lcd_puts 0138                ??___aldiv 0078                ??___aodiv 0070  
              ??___aomod 0070                   ___wmul 0F4E                   _printf 0005  
                 pad@buf 0024                   main@mm 00CC                   dtoa@fp 003D  
                 _strlen 0F34                   fputc@c 0072                   fputs@c 0020  
                 fputs@i 0021                   fputs@s 0023                ?_I2C_nack 0070  
              ?_I2C_init 0070                ?_I2C_read 0070                ?_I2C_stop 0070  
       __end_of_vfprintf 0048                ??_sprintf 0068    __size_of_hc_sr04_init 0009  
__end_of__initialization 07FD       __size_of_Write_PCF 0011           __pcstackCOMMON 0070  
             _dht11_init 0E57            __end_of_fputc 00E0            __end_of_fputs 0FB9  
          __end_of_putch 0E63             _hc_sr04_init 0E7E              ?_Send_D7_D4 0072  
             ??_I2C_nack 0070               ??_I2C_init 0070               ??_I2C_read 0070  
             ??_I2C_stop 0070        lcd_gotoxy@address 0021                  ??_fputc 0075  
                ??_fputs 007B                  ??_putch 0071               __pbssBANK1 00CE  
             __pbssBANK2 0120               __pmaintext 02F6           lcd_send_byte@n 0077  
                ?___wmul 0070       __size_of_serial_TX 000A                  ?_printf 0066  
              ?_adc_init 0070                  ?_strlen 0070        __end_of_Write_PCF 0EC5  
                _SP1BRGH 011C                  _SP1BRGL 011B       __size_of_vfpfcnvrt 00DB  
             _lcd_gotoxy 0FB9                  _SSP1ADD 018D                  _SSP1BUF 018C  
              ?_lcd_init 0070                ?_lcd_puts 0070            ??_I2C_restart 0070  
              _I2C_start 0E70                _I2C_write 0EA8      __size_of_Send_D7_D4 0074  
            ?_dht11_init 0070                  ___aldiv 0266                  ___aodiv 057C  
                ___aomod 0492          __size_of___wmul 001F                ?_vfprintf 005E  
   __size_of_serial_init 0049               ??_adc_init 0070                  _dht_dat 00CE  
                __ptext1 0F6D                  __ptext2 0048                  __ptext3 0266  
                __ptext4 0005                  __ptext5 0017                  __ptext6 03B7  
                __ptext7 067D                  __ptext8 0138                  __ptext9 0F34  
        __size_of_printf 0012          __size_of_strlen 001A             __size_of_abs 001A  
           __size_of_pad 0059         ___aldiv@dividend 0074                  _sprintf 0F6D  
                clrloop0 0E64               ??_lcd_init 007A               ??_lcd_puts 0022  
   end_of_initialization 07FD     lcd_send_byte@address 0079                  fputc@fp 0074  
                fputs@fp 007A        __end_of_serial_TX 0E91               ?_I2C_start 0070  
             ?_I2C_write 0070        __end_of_vfpfcnvrt 0492         ___aldiv@quotient 0022  
    __end_of_I2C_restart 0E70               ??_vfprintf 0061    __end_of_lcd_send_byte 0F01  
                strlen@a 0073                  strlen@s 0074                _PORTBbits 000D  
              _TRISBbits 0012                _TRISCbits 0013              ?_lcd_gotoxy 007A  
        Send_D7_D4@datos 0076        __size_of_I2C_nack 000B        __size_of_I2C_init 0014  
      __size_of_I2C_read 000C          _LCD_INIT_STRING 1000      __size_of_dht11_init 0006  
      __size_of_I2C_stop 0007               main@buffer 00A2              vfpfcnvrt@ap 004F  
            vfpfcnvrt@fp 005D              vfpfcnvrt@ll 0055           __end_of___wmul 0F6D  
              _GlobalErr 00DF           __end_of_printf 0017           __end_of_strlen 0F4E  
           ??_Send_D7_D4 0073      start_initialization 07ED              __end_of_abs 0F34  
            __end_of_pad 0191              putch@txData 0071              _I2C_restart 0E69  
          Write_PCF@dato 0071              ??_I2C_start 0070              ??_I2C_write 0070  
            vfprintf@fmt 005E       __end_of_Send_D7_D4 0266      __size_of_lcd_gotoxy 0047  
               ??___wmul 0074                 ??_printf 006E                 ??_strlen 0072  
__end_of_LCD_INIT_STRING 1004        __size_of_adc_init 0012                ___latbits 0002  
          __pcstackBANK0 0020            __pcstackBANK1 00A0         ___aodiv@dividend 0028  
              _Write_PCF 0EB4        __size_of_lcd_init 0061        __size_of_lcd_puts 0058  
              _dtoa$1245 003B             ??_dht11_init 0070                 ?___aldiv 0070  
               ?___aodiv 0020                 ?___aomod 0020         ___aodiv@quotient 0073  
              _high_byte 00DC        __size_of_vfprintf 0031                 _I2C_nack 0E91  
               _I2C_init 0ED7                 _I2C_read 0E9C                 _I2C_stop 0E77  
             ?_Write_PCF 0070                 ?_sprintf 0066            serial_TX@dato 0070  
         __size_of_fputc 004F           __size_of_fputs 0029           __size_of_putch 0006  
     __end_of_dht11_init 0E5D          ___aldiv@divisor 0070          ___aldiv@counter 0020  
         ___wmul@product 0074                 _LATBbits 0017                clear_ram0 0E63  
          ??_serial_init 0079                 _PIR3bits 070F                _serial_TX 0E87  
               _SSP1CON1 0190                 _SSP1CON3 0192                 _SSP1STAT 018F  
              _vfpfcnvrt 03B7            serial_init@sx 002C               _ADCON0bits 0093  
      ___wmul@multiplier 0070                lcd_init@i 007C             ??_lcd_gotoxy 007B  
             ?_serial_TX 0070               vfprintf@ap 0060               vfprintf@fp 0063  
     __end_of_lcd_gotoxy 1000         __size_of___aldiv 0090         __size_of___aodiv 0101  
       __size_of___aomod 00EA               ?_vfpfcnvrt 004E      __end_of_serial_init 0091  
        ___aodiv@divisor 0020                 _adc_init 0EC5          ___aodiv@counter 0071  
             _ANSELAbits 0F38               _ANSELBbits 0F43            ?_hc_sr04_init 0070  
             sprintf@fmt 0066              ??_Write_PCF 0071                 __ptext10 0F90  
               __ptext11 0091                 __ptext20 0EEB                 __ptext12 0E5D  
               __ptext21 01F2                 __ptext13 0E87                 __ptext30 0F4E  
               __ptext22 0EB4                 __ptext14 0F1A                 __ptext31 0E69  
               __ptext23 0EA8                 __ptext15 0492                 __ptext32 0E9C  
               __ptext24 0E77                 __ptext16 057C                 __ptext33 0E91  
               __ptext25 0E70                 __ptext17 00E0                 __ptext34 0ED7  
               __ptext26 0F01                 __ptext18 0FB9                 __ptext27 0E7E  
               __ptext19 0191                 __ptext28 0E57                 __ptext29 0EC5  
           _SSP1CON2bits 0191                 _lcd_init 0191                 _lcd_puts 00E0  
       __size_of_sprintf 0023   __size_of_lcd_send_byte 0016            __size_of_main 00C1  
          __size_of_dtoa 0170            __size_of_init 0019             ?_I2C_restart 0070  
               _low_byte 00DB               _RC1STAbits 011D                 _vfprintf 0017  
              printf@fmt 0066         ___aomod@dividend 0028           ??_hc_sr04_init 0070  
       _serial_init$1519 0028                sprintf@ap 0069              ??_serial_TX 0070  
            _serial_init 0048                 printf@ap 006F          ___aomod@divisor 0020  
            ??_vfpfcnvrt 0050          ___aomod@counter 0071            _lcd_send_byte 0EEB  
          __pstringtext1 1000            __pstringtext2 102D            __pstringtext3 0000  
               sprintf@f 006B                 sprintf@s 006A               _SSP1DATPPS 0EC6  
             _SSP1CLKPPS 0EC5             ___aldiv@sign 0021             ___aodiv@sign 0072  
           ___aomod@sign 0072  
