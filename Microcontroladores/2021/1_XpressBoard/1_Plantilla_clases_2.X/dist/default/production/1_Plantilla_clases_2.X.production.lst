

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Aug 17 13:22:00 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F18855
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
     9                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    21                           	psect	cinit,global,class=CODE,merge=1,delta=2
    22                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    24                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    25                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    26                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    27                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    28                           	psect	clrtext,global,class=CODE,delta=2
    29                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    30                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    31                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    32                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    33                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    34                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    36                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    37                           	psect	text5,local,class=CODE,merge=1,delta=2
    38                           	psect	text6,local,class=CODE,merge=1,delta=2
    39                           	psect	text7,local,class=CODE,merge=1,delta=2
    40                           	psect	text8,local,class=CODE,merge=1,delta=2
    41                           	psect	text9,local,class=CODE,merge=1,delta=2
    42                           	psect	text10,local,class=CODE,merge=1,delta=2
    43                           	psect	text11,local,class=CODE,merge=1,delta=2
    44                           	psect	text12,local,class=CODE,merge=1,delta=2
    45                           	psect	text13,local,class=CODE,merge=1,delta=2
    46                           	psect	text14,local,class=CODE,merge=1,inline,delta=2
    47                           	psect	text15,local,class=CODE,merge=1,delta=2
    48                           	psect	text16,local,class=CODE,merge=1,delta=2
    49                           	psect	text17,local,class=CODE,merge=1,delta=2
    50                           	psect	text18,local,class=CODE,merge=1,inline,delta=2
    51                           	psect	text19,local,class=CODE,merge=1,inline,delta=2
    52                           	psect	text20,local,class=CODE,merge=1,delta=2
    53                           	psect	text21,local,class=CODE,merge=1,delta=2
    54                           	psect	text22,local,class=CODE,merge=1,delta=2
    55                           	psect	text23,local,class=CODE,merge=1,delta=2
    56                           	psect	text24,local,class=CODE,merge=1,delta=2
    57                           	psect	text25,local,class=CODE,merge=1,delta=2
    58                           	psect	text26,local,class=CODE,merge=1,delta=2
    59                           	psect	text27,local,class=CODE,merge=1,delta=2
    60                           	psect	text28,local,class=CODE,merge=1,delta=2
    61                           	psect	text29,local,class=CODE,merge=1,delta=2
    62                           	psect	text30,local,class=CODE,merge=1,delta=2
    63                           	psect	text31,local,class=CODE,merge=1,delta=2
    64                           	psect	text32,local,class=CODE,merge=1,delta=2
    65                           	psect	text33,local,class=CODE,merge=1,delta=2
    66                           	psect	text34,local,class=CODE,merge=1,delta=2
    67                           	psect	text35,local,class=CODE,merge=1,delta=2
    68                           	psect	text36,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    70                           	psect	text38,local,class=CODE,merge=1,inline,delta=2
    71                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    72                           	psect	text40,local,class=CODE,merge=1,inline,delta=2
    73                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    74                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    75                           	psect	text43,local,class=CODE,merge=1,delta=2
    76                           	psect	text44,local,class=CODE,merge=1,delta=2
    77                           	psect	text45,local,class=CODE,merge=1,delta=2
    78                           	psect	text46,local,class=CODE,merge=1,delta=2
    79                           	psect	text47,local,class=CODE,merge=1,delta=2
    80                           	psect	text48,local,class=CODE,merge=1,delta=2
    81                           	psect	text49,local,class=CODE,merge=1,delta=2
    82                           	psect	text50,local,class=CODE,merge=1,delta=2
    83                           	psect	text51,local,class=CODE,merge=1,delta=2
    84                           	psect	text52,local,class=CODE,merge=1,delta=2
    85                           	psect	text53,local,class=CODE,merge=1,inline,delta=2
    86                           	psect	text54,local,class=CODE,merge=1,inline,delta=2
    87                           	psect	text55,local,class=CODE,merge=1,inline,delta=2
    88                           	psect	text56,local,class=CODE,merge=1,delta=2
    89                           	psect	text57,local,class=CODE,merge=1,inline,delta=2
    90                           	psect	text58,local,class=CODE,merge=1,inline,delta=2
    91                           	psect	text59,local,class=CODE,merge=1,inline,delta=2
    92                           	psect	text60,local,class=CODE,merge=1,delta=2,group=3
    93                           	psect	text61,local,class=CODE,merge=1,delta=2,group=3
    94                           	psect	text62,local,class=CODE,merge=1,delta=2,group=3
    95                           	psect	text63,local,class=CODE,merge=1,delta=2,group=2
    96                           	psect	text64,local,class=CODE,merge=1,delta=2
    97                           	psect	text65,local,class=CODE,merge=1,delta=2
    98                           	psect	text66,local,class=CODE,merge=1,delta=2
    99                           	psect	text67,local,class=CODE,merge=1,delta=2
   100                           	psect	text68,local,class=CODE,merge=1,delta=2
   101                           	psect	text69,local,class=CODE,merge=1,delta=2
   102                           	psect	text70,local,class=CODE,merge=1,delta=2
   103                           	psect	text71,local,class=CODE,merge=1,delta=2
   104                           	psect	text72,local,class=CODE,merge=1,delta=2
   105                           	psect	text73,local,class=CODE,merge=1,delta=2
   106                           	psect	text74,local,class=CODE,merge=1,delta=2
   107                           	psect	text75,local,class=CODE,merge=1,delta=2
   108                           	psect	text76,local,class=CODE,merge=1,delta=2
   109                           	psect	text77,local,class=CODE,merge=1,delta=2
   110                           	psect	text78,local,class=CODE,merge=1,delta=2
   111                           	psect	text79,local,class=CODE,merge=1,delta=2
   112                           	psect	text80,local,class=CODE,merge=1,delta=2
   113                           	psect	intentry,global,class=CODE,delta=2
   114                           	psect	text82,local,class=CODE,merge=1,delta=2,group=3
   115                           	psect	text83,local,class=CODE,merge=1,delta=2,group=1
   116                           	psect	text84,local,class=CODE,merge=1,delta=2,group=1
   117                           	psect	text85,local,class=CODE,merge=1,delta=2,group=1
   118                           	psect	text86,local,class=CODE,merge=1,delta=2,group=1
   119                           	psect	text87,local,class=CODE,merge=1,delta=2
   120                           	psect	text88,local,class=CODE,merge=1,delta=2,group=3
   121                           	psect	text89,local,class=CODE,merge=1,delta=2,group=3
   122                           	psect	text90,local,class=CODE,merge=1,delta=2
   123                           	psect	text91,local,class=CODE,merge=1,delta=2
   124                           	psect	text92,local,class=CODE,merge=1,delta=2,group=3
   125                           	psect	text93,local,class=CODE,merge=1,delta=2,group=2
   126                           	psect	text94,local,class=CODE,merge=1,delta=2,group=2
   127                           	psect	text95,local,class=CODE,merge=1,delta=2
   128                           	psect	text96,local,class=CODE,merge=1,delta=2,group=2
   129                           	psect	text97,local,class=CODE,merge=1,delta=2,group=2
   130                           	psect	text98,local,class=CODE,merge=1,delta=2
   131                           	psect	text99,local,class=CODE,merge=1,delta=2
   132                           	psect	text100,local,class=CODE,merge=1,delta=2
   133                           	psect	text101,local,class=CODE,merge=1,delta=2
   134                           	psect	text102,local,class=CODE,merge=1,delta=2
   135                           	psect	text103,local,class=CODE,merge=1,delta=2
   136                           	psect	text104,local,class=CODE,merge=1,delta=2
   137                           	psect	text105,local,class=CODE,merge=1,delta=2
   138                           	psect	text106,local,class=CODE,merge=1,delta=2
   139                           	psect	text107,local,class=CODE,merge=1,delta=2
   140                           	psect	text108,local,class=CODE,merge=1,delta=2
   141                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   142                           	dabs	1,0x7E,2
   143  0000                     
   144                           ; Version 2.35
   145                           ; Generated 01/06/2021 GMT
   146                           ; 
   147                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   148                           ; All rights reserved.
   149                           ; 
   150                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   151                           ; 
   152                           ; Redistribution and use in source and binary forms, with or without modification, are
   153                           ; permitted provided that the following conditions are met:
   154                           ; 
   155                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   156                           ;        conditions and the following disclaimer.
   157                           ; 
   158                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   159                           ;        of conditions and the following disclaimer in the documentation and/or other
   160                           ;        materials provided with the distribution. Publication is not required when
   161                           ;        this file is used in an embedded application.
   162                           ; 
   163                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   164                           ;        software without specific prior written permission.
   165                           ; 
   166                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   167                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   168                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   169                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   170                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   171                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   172                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   173                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   174                           ; 
   175                           ; 
   176                           ; Code-generator required, PIC16F18855 Definitions
   177                           ; 
   178                           ; SFR Addresses
   179  0000                     	;# 
   180  0001                     	;# 
   181  0002                     	;# 
   182  0003                     	;# 
   183  0004                     	;# 
   184  0005                     	;# 
   185  0006                     	;# 
   186  0007                     	;# 
   187  0008                     	;# 
   188  0009                     	;# 
   189  000A                     	;# 
   190  000B                     	;# 
   191  000C                     	;# 
   192  000D                     	;# 
   193  000E                     	;# 
   194  0010                     	;# 
   195  0011                     	;# 
   196  0012                     	;# 
   197  0013                     	;# 
   198  0016                     	;# 
   199  0017                     	;# 
   200  0018                     	;# 
   201  001C                     	;# 
   202  001C                     	;# 
   203  001D                     	;# 
   204  001D                     	;# 
   205  001E                     	;# 
   206  001F                     	;# 
   207  008C                     	;# 
   208  008C                     	;# 
   209  008D                     	;# 
   210  008E                     	;# 
   211  008E                     	;# 
   212  008F                     	;# 
   213  0090                     	;# 
   214  0090                     	;# 
   215  0091                     	;# 
   216  0093                     	;# 
   217  0094                     	;# 
   218  0095                     	;# 
   219  0096                     	;# 
   220  0097                     	;# 
   221  0098                     	;# 
   222  0099                     	;# 
   223  009A                     	;# 
   224  009B                     	;# 
   225  009C                     	;# 
   226  009D                     	;# 
   227  009E                     	;# 
   228  010C                     	;# 
   229  010D                     	;# 
   230  010E                     	;# 
   231  010E                     	;# 
   232  010F                     	;# 
   233  0110                     	;# 
   234  0110                     	;# 
   235  0111                     	;# 
   236  0112                     	;# 
   237  0112                     	;# 
   238  0113                     	;# 
   239  0114                     	;# 
   240  0114                     	;# 
   241  0115                     	;# 
   242  0116                     	;# 
   243  0116                     	;# 
   244  0117                     	;# 
   245  0119                     	;# 
   246  0119                     	;# 
   247  0119                     	;# 
   248  011A                     	;# 
   249  011A                     	;# 
   250  011A                     	;# 
   251  011B                     	;# 
   252  011B                     	;# 
   253  011B                     	;# 
   254  011B                     	;# 
   255  011B                     	;# 
   256  011C                     	;# 
   257  011C                     	;# 
   258  011C                     	;# 
   259  011D                     	;# 
   260  011D                     	;# 
   261  011D                     	;# 
   262  011E                     	;# 
   263  011E                     	;# 
   264  011E                     	;# 
   265  011F                     	;# 
   266  011F                     	;# 
   267  011F                     	;# 
   268  011F                     	;# 
   269  011F                     	;# 
   270  018C                     	;# 
   271  018D                     	;# 
   272  018E                     	;# 
   273  018F                     	;# 
   274  0190                     	;# 
   275  0191                     	;# 
   276  0192                     	;# 
   277  0196                     	;# 
   278  0197                     	;# 
   279  0198                     	;# 
   280  0199                     	;# 
   281  019A                     	;# 
   282  019B                     	;# 
   283  019C                     	;# 
   284  020C                     	;# 
   285  020C                     	;# 
   286  020D                     	;# 
   287  020E                     	;# 
   288  020F                     	;# 
   289  020F                     	;# 
   290  0210                     	;# 
   291  0210                     	;# 
   292  0211                     	;# 
   293  0211                     	;# 
   294  0212                     	;# 
   295  0212                     	;# 
   296  0213                     	;# 
   297  0214                     	;# 
   298  0215                     	;# 
   299  0215                     	;# 
   300  0216                     	;# 
   301  0216                     	;# 
   302  0217                     	;# 
   303  0217                     	;# 
   304  0218                     	;# 
   305  0218                     	;# 
   306  0219                     	;# 
   307  021A                     	;# 
   308  021B                     	;# 
   309  021B                     	;# 
   310  021C                     	;# 
   311  021C                     	;# 
   312  021D                     	;# 
   313  021D                     	;# 
   314  021E                     	;# 
   315  021F                     	;# 
   316  028C                     	;# 
   317  028C                     	;# 
   318  028D                     	;# 
   319  028D                     	;# 
   320  028E                     	;# 
   321  028F                     	;# 
   322  0290                     	;# 
   323  0290                     	;# 
   324  0291                     	;# 
   325  0292                     	;# 
   326  0292                     	;# 
   327  0293                     	;# 
   328  0293                     	;# 
   329  0294                     	;# 
   330  0295                     	;# 
   331  0296                     	;# 
   332  0296                     	;# 
   333  0297                     	;# 
   334  0298                     	;# 
   335  0298                     	;# 
   336  0299                     	;# 
   337  0299                     	;# 
   338  029A                     	;# 
   339  029B                     	;# 
   340  029C                     	;# 
   341  029C                     	;# 
   342  029D                     	;# 
   343  030C                     	;# 
   344  030C                     	;# 
   345  030D                     	;# 
   346  030E                     	;# 
   347  030F                     	;# 
   348  0310                     	;# 
   349  0310                     	;# 
   350  0311                     	;# 
   351  0312                     	;# 
   352  0313                     	;# 
   353  0314                     	;# 
   354  0314                     	;# 
   355  0315                     	;# 
   356  0316                     	;# 
   357  0317                     	;# 
   358  0318                     	;# 
   359  0318                     	;# 
   360  0319                     	;# 
   361  031A                     	;# 
   362  031B                     	;# 
   363  031C                     	;# 
   364  031C                     	;# 
   365  031D                     	;# 
   366  031E                     	;# 
   367  031F                     	;# 
   368  038C                     	;# 
   369  038C                     	;# 
   370  038D                     	;# 
   371  038E                     	;# 
   372  0390                     	;# 
   373  0390                     	;# 
   374  0391                     	;# 
   375  0392                     	;# 
   376  040C                     	;# 
   377  040D                     	;# 
   378  040E                     	;# 
   379  040F                     	;# 
   380  0410                     	;# 
   381  0411                     	;# 
   382  0416                     	;# 
   383  0416                     	;# 
   384  0417                     	;# 
   385  0418                     	;# 
   386  0418                     	;# 
   387  0419                     	;# 
   388  041A                     	;# 
   389  041A                     	;# 
   390  041B                     	;# 
   391  041C                     	;# 
   392  041C                     	;# 
   393  041D                     	;# 
   394  041E                     	;# 
   395  041F                     	;# 
   396  048C                     	;# 
   397  048C                     	;# 
   398  048D                     	;# 
   399  048E                     	;# 
   400  048F                     	;# 
   401  048F                     	;# 
   402  0490                     	;# 
   403  0491                     	;# 
   404  0492                     	;# 
   405  0492                     	;# 
   406  0493                     	;# 
   407  0494                     	;# 
   408  0495                     	;# 
   409  0495                     	;# 
   410  0496                     	;# 
   411  0497                     	;# 
   412  0498                     	;# 
   413  0499                     	;# 
   414  049A                     	;# 
   415  049B                     	;# 
   416  049C                     	;# 
   417  049D                     	;# 
   418  050C                     	;# 
   419  050C                     	;# 
   420  050D                     	;# 
   421  050E                     	;# 
   422  050F                     	;# 
   423  050F                     	;# 
   424  0510                     	;# 
   425  0511                     	;# 
   426  0512                     	;# 
   427  0512                     	;# 
   428  0513                     	;# 
   429  0514                     	;# 
   430  0515                     	;# 
   431  0515                     	;# 
   432  0516                     	;# 
   433  0517                     	;# 
   434  0518                     	;# 
   435  0519                     	;# 
   436  051A                     	;# 
   437  051B                     	;# 
   438  051C                     	;# 
   439  051D                     	;# 
   440  058C                     	;# 
   441  058C                     	;# 
   442  058D                     	;# 
   443  058E                     	;# 
   444  058F                     	;# 
   445  058F                     	;# 
   446  0590                     	;# 
   447  0591                     	;# 
   448  0592                     	;# 
   449  0593                     	;# 
   450  060C                     	;# 
   451  060D                     	;# 
   452  060E                     	;# 
   453  060F                     	;# 
   454  0610                     	;# 
   455  0611                     	;# 
   456  0612                     	;# 
   457  0613                     	;# 
   458  0614                     	;# 
   459  0616                     	;# 
   460  0617                     	;# 
   461  0618                     	;# 
   462  0619                     	;# 
   463  061A                     	;# 
   464  061B                     	;# 
   465  061C                     	;# 
   466  061D                     	;# 
   467  061E                     	;# 
   468  068C                     	;# 
   469  068D                     	;# 
   470  068E                     	;# 
   471  068F                     	;# 
   472  0690                     	;# 
   473  0691                     	;# 
   474  0692                     	;# 
   475  0693                     	;# 
   476  0694                     	;# 
   477  070C                     	;# 
   478  070D                     	;# 
   479  070E                     	;# 
   480  070F                     	;# 
   481  0710                     	;# 
   482  0711                     	;# 
   483  0712                     	;# 
   484  0713                     	;# 
   485  0714                     	;# 
   486  0716                     	;# 
   487  0717                     	;# 
   488  0718                     	;# 
   489  0719                     	;# 
   490  071A                     	;# 
   491  071B                     	;# 
   492  071C                     	;# 
   493  071D                     	;# 
   494  071E                     	;# 
   495  0796                     	;# 
   496  0797                     	;# 
   497  0798                     	;# 
   498  0799                     	;# 
   499  079A                     	;# 
   500  079B                     	;# 
   501  080C                     	;# 
   502  080D                     	;# 
   503  080E                     	;# 
   504  080F                     	;# 
   505  0810                     	;# 
   506  0811                     	;# 
   507  0812                     	;# 
   508  0813                     	;# 
   509  0814                     	;# 
   510  081A                     	;# 
   511  081B                     	;# 
   512  081C                     	;# 
   513  081D                     	;# 
   514  081E                     	;# 
   515  081F                     	;# 
   516  088C                     	;# 
   517  088D                     	;# 
   518  088E                     	;# 
   519  088F                     	;# 
   520  0890                     	;# 
   521  0891                     	;# 
   522  0892                     	;# 
   523  0893                     	;# 
   524  0895                     	;# 
   525  0896                     	;# 
   526  0897                     	;# 
   527  0898                     	;# 
   528  0899                     	;# 
   529  089A                     	;# 
   530  089B                     	;# 
   531  090C                     	;# 
   532  090E                     	;# 
   533  090F                     	;# 
   534  091F                     	;# 
   535  091F                     	;# 
   536  098F                     	;# 
   537  098F                     	;# 
   538  0990                     	;# 
   539  0991                     	;# 
   540  0992                     	;# 
   541  0993                     	;# 
   542  0994                     	;# 
   543  0995                     	;# 
   544  0996                     	;# 
   545  0997                     	;# 
   546  0E0F                     	;# 
   547  0E10                     	;# 
   548  0E11                     	;# 
   549  0E12                     	;# 
   550  0E13                     	;# 
   551  0E14                     	;# 
   552  0E15                     	;# 
   553  0E16                     	;# 
   554  0E17                     	;# 
   555  0E18                     	;# 
   556  0E19                     	;# 
   557  0E1A                     	;# 
   558  0E1B                     	;# 
   559  0E1C                     	;# 
   560  0E1D                     	;# 
   561  0E1E                     	;# 
   562  0E1F                     	;# 
   563  0E20                     	;# 
   564  0E21                     	;# 
   565  0E22                     	;# 
   566  0E23                     	;# 
   567  0E24                     	;# 
   568  0E25                     	;# 
   569  0E26                     	;# 
   570  0E27                     	;# 
   571  0E28                     	;# 
   572  0E29                     	;# 
   573  0E2A                     	;# 
   574  0E2B                     	;# 
   575  0E2C                     	;# 
   576  0E2D                     	;# 
   577  0E2E                     	;# 
   578  0E2F                     	;# 
   579  0E30                     	;# 
   580  0E31                     	;# 
   581  0E32                     	;# 
   582  0E33                     	;# 
   583  0E34                     	;# 
   584  0E35                     	;# 
   585  0E36                     	;# 
   586  0E37                     	;# 
   587  0E8F                     	;# 
   588  0E90                     	;# 
   589  0E91                     	;# 
   590  0E92                     	;# 
   591  0E93                     	;# 
   592  0E94                     	;# 
   593  0E95                     	;# 
   594  0E96                     	;# 
   595  0E97                     	;# 
   596  0E9C                     	;# 
   597  0E9D                     	;# 
   598  0E9E                     	;# 
   599  0EA1                     	;# 
   600  0EA2                     	;# 
   601  0EA3                     	;# 
   602  0EA4                     	;# 
   603  0EA5                     	;# 
   604  0EA9                     	;# 
   605  0EAA                     	;# 
   606  0EAB                     	;# 
   607  0EAC                     	;# 
   608  0EB1                     	;# 
   609  0EB2                     	;# 
   610  0EB3                     	;# 
   611  0EB8                     	;# 
   612  0EB9                     	;# 
   613  0EBA                     	;# 
   614  0EBB                     	;# 
   615  0EBC                     	;# 
   616  0EBD                     	;# 
   617  0EBE                     	;# 
   618  0EC3                     	;# 
   619  0EC5                     	;# 
   620  0EC6                     	;# 
   621  0EC7                     	;# 
   622  0EC8                     	;# 
   623  0EC9                     	;# 
   624  0ECA                     	;# 
   625  0ECB                     	;# 
   626  0ECC                     	;# 
   627  0F10                     	;# 
   628  0F11                     	;# 
   629  0F12                     	;# 
   630  0F13                     	;# 
   631  0F14                     	;# 
   632  0F15                     	;# 
   633  0F16                     	;# 
   634  0F17                     	;# 
   635  0F18                     	;# 
   636  0F19                     	;# 
   637  0F1A                     	;# 
   638  0F1B                     	;# 
   639  0F1C                     	;# 
   640  0F1D                     	;# 
   641  0F1E                     	;# 
   642  0F1F                     	;# 
   643  0F20                     	;# 
   644  0F21                     	;# 
   645  0F22                     	;# 
   646  0F23                     	;# 
   647  0F24                     	;# 
   648  0F25                     	;# 
   649  0F26                     	;# 
   650  0F27                     	;# 
   651  0F38                     	;# 
   652  0F39                     	;# 
   653  0F3A                     	;# 
   654  0F3B                     	;# 
   655  0F3C                     	;# 
   656  0F3D                     	;# 
   657  0F3E                     	;# 
   658  0F3F                     	;# 
   659  0F40                     	;# 
   660  0F41                     	;# 
   661  0F43                     	;# 
   662  0F44                     	;# 
   663  0F45                     	;# 
   664  0F46                     	;# 
   665  0F47                     	;# 
   666  0F48                     	;# 
   667  0F49                     	;# 
   668  0F4A                     	;# 
   669  0F4B                     	;# 
   670  0F4C                     	;# 
   671  0F4E                     	;# 
   672  0F4F                     	;# 
   673  0F50                     	;# 
   674  0F51                     	;# 
   675  0F52                     	;# 
   676  0F53                     	;# 
   677  0F54                     	;# 
   678  0F55                     	;# 
   679  0F56                     	;# 
   680  0F57                     	;# 
   681  0F65                     	;# 
   682  0F68                     	;# 
   683  0F69                     	;# 
   684  0F6A                     	;# 
   685  0F6B                     	;# 
   686  0FE4                     	;# 
   687  0FE5                     	;# 
   688  0FE6                     	;# 
   689  0FE7                     	;# 
   690  0FE8                     	;# 
   691  0FE9                     	;# 
   692  0FEA                     	;# 
   693  0FEB                     	;# 
   694  0FED                     	;# 
   695  0FEE                     	;# 
   696  0FEF                     	;# 
   697  0000                     	;# 
   698  0001                     	;# 
   699  0002                     	;# 
   700  0003                     	;# 
   701  0004                     	;# 
   702  0005                     	;# 
   703  0006                     	;# 
   704  0007                     	;# 
   705  0008                     	;# 
   706  0009                     	;# 
   707  000A                     	;# 
   708  000B                     	;# 
   709  000C                     	;# 
   710  000D                     	;# 
   711  000E                     	;# 
   712  0010                     	;# 
   713  0011                     	;# 
   714  0012                     	;# 
   715  0013                     	;# 
   716  0016                     	;# 
   717  0017                     	;# 
   718  0018                     	;# 
   719  001C                     	;# 
   720  001C                     	;# 
   721  001D                     	;# 
   722  001D                     	;# 
   723  001E                     	;# 
   724  001F                     	;# 
   725  008C                     	;# 
   726  008C                     	;# 
   727  008D                     	;# 
   728  008E                     	;# 
   729  008E                     	;# 
   730  008F                     	;# 
   731  0090                     	;# 
   732  0090                     	;# 
   733  0091                     	;# 
   734  0093                     	;# 
   735  0094                     	;# 
   736  0095                     	;# 
   737  0096                     	;# 
   738  0097                     	;# 
   739  0098                     	;# 
   740  0099                     	;# 
   741  009A                     	;# 
   742  009B                     	;# 
   743  009C                     	;# 
   744  009D                     	;# 
   745  009E                     	;# 
   746  010C                     	;# 
   747  010D                     	;# 
   748  010E                     	;# 
   749  010E                     	;# 
   750  010F                     	;# 
   751  0110                     	;# 
   752  0110                     	;# 
   753  0111                     	;# 
   754  0112                     	;# 
   755  0112                     	;# 
   756  0113                     	;# 
   757  0114                     	;# 
   758  0114                     	;# 
   759  0115                     	;# 
   760  0116                     	;# 
   761  0116                     	;# 
   762  0117                     	;# 
   763  0119                     	;# 
   764  0119                     	;# 
   765  0119                     	;# 
   766  011A                     	;# 
   767  011A                     	;# 
   768  011A                     	;# 
   769  011B                     	;# 
   770  011B                     	;# 
   771  011B                     	;# 
   772  011B                     	;# 
   773  011B                     	;# 
   774  011C                     	;# 
   775  011C                     	;# 
   776  011C                     	;# 
   777  011D                     	;# 
   778  011D                     	;# 
   779  011D                     	;# 
   780  011E                     	;# 
   781  011E                     	;# 
   782  011E                     	;# 
   783  011F                     	;# 
   784  011F                     	;# 
   785  011F                     	;# 
   786  011F                     	;# 
   787  011F                     	;# 
   788  018C                     	;# 
   789  018D                     	;# 
   790  018E                     	;# 
   791  018F                     	;# 
   792  0190                     	;# 
   793  0191                     	;# 
   794  0192                     	;# 
   795  0196                     	;# 
   796  0197                     	;# 
   797  0198                     	;# 
   798  0199                     	;# 
   799  019A                     	;# 
   800  019B                     	;# 
   801  019C                     	;# 
   802  020C                     	;# 
   803  020C                     	;# 
   804  020D                     	;# 
   805  020E                     	;# 
   806  020F                     	;# 
   807  020F                     	;# 
   808  0210                     	;# 
   809  0210                     	;# 
   810  0211                     	;# 
   811  0211                     	;# 
   812  0212                     	;# 
   813  0212                     	;# 
   814  0213                     	;# 
   815  0214                     	;# 
   816  0215                     	;# 
   817  0215                     	;# 
   818  0216                     	;# 
   819  0216                     	;# 
   820  0217                     	;# 
   821  0217                     	;# 
   822  0218                     	;# 
   823  0218                     	;# 
   824  0219                     	;# 
   825  021A                     	;# 
   826  021B                     	;# 
   827  021B                     	;# 
   828  021C                     	;# 
   829  021C                     	;# 
   830  021D                     	;# 
   831  021D                     	;# 
   832  021E                     	;# 
   833  021F                     	;# 
   834  028C                     	;# 
   835  028C                     	;# 
   836  028D                     	;# 
   837  028D                     	;# 
   838  028E                     	;# 
   839  028F                     	;# 
   840  0290                     	;# 
   841  0290                     	;# 
   842  0291                     	;# 
   843  0292                     	;# 
   844  0292                     	;# 
   845  0293                     	;# 
   846  0293                     	;# 
   847  0294                     	;# 
   848  0295                     	;# 
   849  0296                     	;# 
   850  0296                     	;# 
   851  0297                     	;# 
   852  0298                     	;# 
   853  0298                     	;# 
   854  0299                     	;# 
   855  0299                     	;# 
   856  029A                     	;# 
   857  029B                     	;# 
   858  029C                     	;# 
   859  029C                     	;# 
   860  029D                     	;# 
   861  030C                     	;# 
   862  030C                     	;# 
   863  030D                     	;# 
   864  030E                     	;# 
   865  030F                     	;# 
   866  0310                     	;# 
   867  0310                     	;# 
   868  0311                     	;# 
   869  0312                     	;# 
   870  0313                     	;# 
   871  0314                     	;# 
   872  0314                     	;# 
   873  0315                     	;# 
   874  0316                     	;# 
   875  0317                     	;# 
   876  0318                     	;# 
   877  0318                     	;# 
   878  0319                     	;# 
   879  031A                     	;# 
   880  031B                     	;# 
   881  031C                     	;# 
   882  031C                     	;# 
   883  031D                     	;# 
   884  031E                     	;# 
   885  031F                     	;# 
   886  038C                     	;# 
   887  038C                     	;# 
   888  038D                     	;# 
   889  038E                     	;# 
   890  0390                     	;# 
   891  0390                     	;# 
   892  0391                     	;# 
   893  0392                     	;# 
   894  040C                     	;# 
   895  040D                     	;# 
   896  040E                     	;# 
   897  040F                     	;# 
   898  0410                     	;# 
   899  0411                     	;# 
   900  0416                     	;# 
   901  0416                     	;# 
   902  0417                     	;# 
   903  0418                     	;# 
   904  0418                     	;# 
   905  0419                     	;# 
   906  041A                     	;# 
   907  041A                     	;# 
   908  041B                     	;# 
   909  041C                     	;# 
   910  041C                     	;# 
   911  041D                     	;# 
   912  041E                     	;# 
   913  041F                     	;# 
   914  048C                     	;# 
   915  048C                     	;# 
   916  048D                     	;# 
   917  048E                     	;# 
   918  048F                     	;# 
   919  048F                     	;# 
   920  0490                     	;# 
   921  0491                     	;# 
   922  0492                     	;# 
   923  0492                     	;# 
   924  0493                     	;# 
   925  0494                     	;# 
   926  0495                     	;# 
   927  0495                     	;# 
   928  0496                     	;# 
   929  0497                     	;# 
   930  0498                     	;# 
   931  0499                     	;# 
   932  049A                     	;# 
   933  049B                     	;# 
   934  049C                     	;# 
   935  049D                     	;# 
   936  050C                     	;# 
   937  050C                     	;# 
   938  050D                     	;# 
   939  050E                     	;# 
   940  050F                     	;# 
   941  050F                     	;# 
   942  0510                     	;# 
   943  0511                     	;# 
   944  0512                     	;# 
   945  0512                     	;# 
   946  0513                     	;# 
   947  0514                     	;# 
   948  0515                     	;# 
   949  0515                     	;# 
   950  0516                     	;# 
   951  0517                     	;# 
   952  0518                     	;# 
   953  0519                     	;# 
   954  051A                     	;# 
   955  051B                     	;# 
   956  051C                     	;# 
   957  051D                     	;# 
   958  058C                     	;# 
   959  058C                     	;# 
   960  058D                     	;# 
   961  058E                     	;# 
   962  058F                     	;# 
   963  058F                     	;# 
   964  0590                     	;# 
   965  0591                     	;# 
   966  0592                     	;# 
   967  0593                     	;# 
   968  060C                     	;# 
   969  060D                     	;# 
   970  060E                     	;# 
   971  060F                     	;# 
   972  0610                     	;# 
   973  0611                     	;# 
   974  0612                     	;# 
   975  0613                     	;# 
   976  0614                     	;# 
   977  0616                     	;# 
   978  0617                     	;# 
   979  0618                     	;# 
   980  0619                     	;# 
   981  061A                     	;# 
   982  061B                     	;# 
   983  061C                     	;# 
   984  061D                     	;# 
   985  061E                     	;# 
   986  068C                     	;# 
   987  068D                     	;# 
   988  068E                     	;# 
   989  068F                     	;# 
   990  0690                     	;# 
   991  0691                     	;# 
   992  0692                     	;# 
   993  0693                     	;# 
   994  0694                     	;# 
   995  070C                     	;# 
   996  070D                     	;# 
   997  070E                     	;# 
   998  070F                     	;# 
   999  0710                     	;# 
  1000  0711                     	;# 
  1001  0712                     	;# 
  1002  0713                     	;# 
  1003  0714                     	;# 
  1004  0716                     	;# 
  1005  0717                     	;# 
  1006  0718                     	;# 
  1007  0719                     	;# 
  1008  071A                     	;# 
  1009  071B                     	;# 
  1010  071C                     	;# 
  1011  071D                     	;# 
  1012  071E                     	;# 
  1013  0796                     	;# 
  1014  0797                     	;# 
  1015  0798                     	;# 
  1016  0799                     	;# 
  1017  079A                     	;# 
  1018  079B                     	;# 
  1019  080C                     	;# 
  1020  080D                     	;# 
  1021  080E                     	;# 
  1022  080F                     	;# 
  1023  0810                     	;# 
  1024  0811                     	;# 
  1025  0812                     	;# 
  1026  0813                     	;# 
  1027  0814                     	;# 
  1028  081A                     	;# 
  1029  081B                     	;# 
  1030  081C                     	;# 
  1031  081D                     	;# 
  1032  081E                     	;# 
  1033  081F                     	;# 
  1034  088C                     	;# 
  1035  088D                     	;# 
  1036  088E                     	;# 
  1037  088F                     	;# 
  1038  0890                     	;# 
  1039  0891                     	;# 
  1040  0892                     	;# 
  1041  0893                     	;# 
  1042  0895                     	;# 
  1043  0896                     	;# 
  1044  0897                     	;# 
  1045  0898                     	;# 
  1046  0899                     	;# 
  1047  089A                     	;# 
  1048  089B                     	;# 
  1049  090C                     	;# 
  1050  090E                     	;# 
  1051  090F                     	;# 
  1052  091F                     	;# 
  1053  091F                     	;# 
  1054  098F                     	;# 
  1055  098F                     	;# 
  1056  0990                     	;# 
  1057  0991                     	;# 
  1058  0992                     	;# 
  1059  0993                     	;# 
  1060  0994                     	;# 
  1061  0995                     	;# 
  1062  0996                     	;# 
  1063  0997                     	;# 
  1064  0E0F                     	;# 
  1065  0E10                     	;# 
  1066  0E11                     	;# 
  1067  0E12                     	;# 
  1068  0E13                     	;# 
  1069  0E14                     	;# 
  1070  0E15                     	;# 
  1071  0E16                     	;# 
  1072  0E17                     	;# 
  1073  0E18                     	;# 
  1074  0E19                     	;# 
  1075  0E1A                     	;# 
  1076  0E1B                     	;# 
  1077  0E1C                     	;# 
  1078  0E1D                     	;# 
  1079  0E1E                     	;# 
  1080  0E1F                     	;# 
  1081  0E20                     	;# 
  1082  0E21                     	;# 
  1083  0E22                     	;# 
  1084  0E23                     	;# 
  1085  0E24                     	;# 
  1086  0E25                     	;# 
  1087  0E26                     	;# 
  1088  0E27                     	;# 
  1089  0E28                     	;# 
  1090  0E29                     	;# 
  1091  0E2A                     	;# 
  1092  0E2B                     	;# 
  1093  0E2C                     	;# 
  1094  0E2D                     	;# 
  1095  0E2E                     	;# 
  1096  0E2F                     	;# 
  1097  0E30                     	;# 
  1098  0E31                     	;# 
  1099  0E32                     	;# 
  1100  0E33                     	;# 
  1101  0E34                     	;# 
  1102  0E35                     	;# 
  1103  0E36                     	;# 
  1104  0E37                     	;# 
  1105  0E8F                     	;# 
  1106  0E90                     	;# 
  1107  0E91                     	;# 
  1108  0E92                     	;# 
  1109  0E93                     	;# 
  1110  0E94                     	;# 
  1111  0E95                     	;# 
  1112  0E96                     	;# 
  1113  0E97                     	;# 
  1114  0E9C                     	;# 
  1115  0E9D                     	;# 
  1116  0E9E                     	;# 
  1117  0EA1                     	;# 
  1118  0EA2                     	;# 
  1119  0EA3                     	;# 
  1120  0EA4                     	;# 
  1121  0EA5                     	;# 
  1122  0EA9                     	;# 
  1123  0EAA                     	;# 
  1124  0EAB                     	;# 
  1125  0EAC                     	;# 
  1126  0EB1                     	;# 
  1127  0EB2                     	;# 
  1128  0EB3                     	;# 
  1129  0EB8                     	;# 
  1130  0EB9                     	;# 
  1131  0EBA                     	;# 
  1132  0EBB                     	;# 
  1133  0EBC                     	;# 
  1134  0EBD                     	;# 
  1135  0EBE                     	;# 
  1136  0EC3                     	;# 
  1137  0EC5                     	;# 
  1138  0EC6                     	;# 
  1139  0EC7                     	;# 
  1140  0EC8                     	;# 
  1141  0EC9                     	;# 
  1142  0ECA                     	;# 
  1143  0ECB                     	;# 
  1144  0ECC                     	;# 
  1145  0F10                     	;# 
  1146  0F11                     	;# 
  1147  0F12                     	;# 
  1148  0F13                     	;# 
  1149  0F14                     	;# 
  1150  0F15                     	;# 
  1151  0F16                     	;# 
  1152  0F17                     	;# 
  1153  0F18                     	;# 
  1154  0F19                     	;# 
  1155  0F1A                     	;# 
  1156  0F1B                     	;# 
  1157  0F1C                     	;# 
  1158  0F1D                     	;# 
  1159  0F1E                     	;# 
  1160  0F1F                     	;# 
  1161  0F20                     	;# 
  1162  0F21                     	;# 
  1163  0F22                     	;# 
  1164  0F23                     	;# 
  1165  0F24                     	;# 
  1166  0F25                     	;# 
  1167  0F26                     	;# 
  1168  0F27                     	;# 
  1169  0F38                     	;# 
  1170  0F39                     	;# 
  1171  0F3A                     	;# 
  1172  0F3B                     	;# 
  1173  0F3C                     	;# 
  1174  0F3D                     	;# 
  1175  0F3E                     	;# 
  1176  0F3F                     	;# 
  1177  0F40                     	;# 
  1178  0F41                     	;# 
  1179  0F43                     	;# 
  1180  0F44                     	;# 
  1181  0F45                     	;# 
  1182  0F46                     	;# 
  1183  0F47                     	;# 
  1184  0F48                     	;# 
  1185  0F49                     	;# 
  1186  0F4A                     	;# 
  1187  0F4B                     	;# 
  1188  0F4C                     	;# 
  1189  0F4E                     	;# 
  1190  0F4F                     	;# 
  1191  0F50                     	;# 
  1192  0F51                     	;# 
  1193  0F52                     	;# 
  1194  0F53                     	;# 
  1195  0F54                     	;# 
  1196  0F55                     	;# 
  1197  0F56                     	;# 
  1198  0F57                     	;# 
  1199  0F65                     	;# 
  1200  0F68                     	;# 
  1201  0F69                     	;# 
  1202  0F6A                     	;# 
  1203  0F6B                     	;# 
  1204  0FE4                     	;# 
  1205  0FE5                     	;# 
  1206  0FE6                     	;# 
  1207  0FE7                     	;# 
  1208  0FE8                     	;# 
  1209  0FE9                     	;# 
  1210  0FEA                     	;# 
  1211  0FEB                     	;# 
  1212  0FED                     	;# 
  1213  0FEE                     	;# 
  1214  0FEF                     	;# 
  1215  0000                     	;# 
  1216  0001                     	;# 
  1217  0002                     	;# 
  1218  0003                     	;# 
  1219  0004                     	;# 
  1220  0005                     	;# 
  1221  0006                     	;# 
  1222  0007                     	;# 
  1223  0008                     	;# 
  1224  0009                     	;# 
  1225  000A                     	;# 
  1226  000B                     	;# 
  1227  000C                     	;# 
  1228  000D                     	;# 
  1229  000E                     	;# 
  1230  0010                     	;# 
  1231  0011                     	;# 
  1232  0012                     	;# 
  1233  0013                     	;# 
  1234  0016                     	;# 
  1235  0017                     	;# 
  1236  0018                     	;# 
  1237  001C                     	;# 
  1238  001C                     	;# 
  1239  001D                     	;# 
  1240  001D                     	;# 
  1241  001E                     	;# 
  1242  001F                     	;# 
  1243  008C                     	;# 
  1244  008C                     	;# 
  1245  008D                     	;# 
  1246  008E                     	;# 
  1247  008E                     	;# 
  1248  008F                     	;# 
  1249  0090                     	;# 
  1250  0090                     	;# 
  1251  0091                     	;# 
  1252  0093                     	;# 
  1253  0094                     	;# 
  1254  0095                     	;# 
  1255  0096                     	;# 
  1256  0097                     	;# 
  1257  0098                     	;# 
  1258  0099                     	;# 
  1259  009A                     	;# 
  1260  009B                     	;# 
  1261  009C                     	;# 
  1262  009D                     	;# 
  1263  009E                     	;# 
  1264  010C                     	;# 
  1265  010D                     	;# 
  1266  010E                     	;# 
  1267  010E                     	;# 
  1268  010F                     	;# 
  1269  0110                     	;# 
  1270  0110                     	;# 
  1271  0111                     	;# 
  1272  0112                     	;# 
  1273  0112                     	;# 
  1274  0113                     	;# 
  1275  0114                     	;# 
  1276  0114                     	;# 
  1277  0115                     	;# 
  1278  0116                     	;# 
  1279  0116                     	;# 
  1280  0117                     	;# 
  1281  0119                     	;# 
  1282  0119                     	;# 
  1283  0119                     	;# 
  1284  011A                     	;# 
  1285  011A                     	;# 
  1286  011A                     	;# 
  1287  011B                     	;# 
  1288  011B                     	;# 
  1289  011B                     	;# 
  1290  011B                     	;# 
  1291  011B                     	;# 
  1292  011C                     	;# 
  1293  011C                     	;# 
  1294  011C                     	;# 
  1295  011D                     	;# 
  1296  011D                     	;# 
  1297  011D                     	;# 
  1298  011E                     	;# 
  1299  011E                     	;# 
  1300  011E                     	;# 
  1301  011F                     	;# 
  1302  011F                     	;# 
  1303  011F                     	;# 
  1304  011F                     	;# 
  1305  011F                     	;# 
  1306  018C                     	;# 
  1307  018D                     	;# 
  1308  018E                     	;# 
  1309  018F                     	;# 
  1310  0190                     	;# 
  1311  0191                     	;# 
  1312  0192                     	;# 
  1313  0196                     	;# 
  1314  0197                     	;# 
  1315  0198                     	;# 
  1316  0199                     	;# 
  1317  019A                     	;# 
  1318  019B                     	;# 
  1319  019C                     	;# 
  1320  020C                     	;# 
  1321  020C                     	;# 
  1322  020D                     	;# 
  1323  020E                     	;# 
  1324  020F                     	;# 
  1325  020F                     	;# 
  1326  0210                     	;# 
  1327  0210                     	;# 
  1328  0211                     	;# 
  1329  0211                     	;# 
  1330  0212                     	;# 
  1331  0212                     	;# 
  1332  0213                     	;# 
  1333  0214                     	;# 
  1334  0215                     	;# 
  1335  0215                     	;# 
  1336  0216                     	;# 
  1337  0216                     	;# 
  1338  0217                     	;# 
  1339  0217                     	;# 
  1340  0218                     	;# 
  1341  0218                     	;# 
  1342  0219                     	;# 
  1343  021A                     	;# 
  1344  021B                     	;# 
  1345  021B                     	;# 
  1346  021C                     	;# 
  1347  021C                     	;# 
  1348  021D                     	;# 
  1349  021D                     	;# 
  1350  021E                     	;# 
  1351  021F                     	;# 
  1352  028C                     	;# 
  1353  028C                     	;# 
  1354  028D                     	;# 
  1355  028D                     	;# 
  1356  028E                     	;# 
  1357  028F                     	;# 
  1358  0290                     	;# 
  1359  0290                     	;# 
  1360  0291                     	;# 
  1361  0292                     	;# 
  1362  0292                     	;# 
  1363  0293                     	;# 
  1364  0293                     	;# 
  1365  0294                     	;# 
  1366  0295                     	;# 
  1367  0296                     	;# 
  1368  0296                     	;# 
  1369  0297                     	;# 
  1370  0298                     	;# 
  1371  0298                     	;# 
  1372  0299                     	;# 
  1373  0299                     	;# 
  1374  029A                     	;# 
  1375  029B                     	;# 
  1376  029C                     	;# 
  1377  029C                     	;# 
  1378  029D                     	;# 
  1379  030C                     	;# 
  1380  030C                     	;# 
  1381  030D                     	;# 
  1382  030E                     	;# 
  1383  030F                     	;# 
  1384  0310                     	;# 
  1385  0310                     	;# 
  1386  0311                     	;# 
  1387  0312                     	;# 
  1388  0313                     	;# 
  1389  0314                     	;# 
  1390  0314                     	;# 
  1391  0315                     	;# 
  1392  0316                     	;# 
  1393  0317                     	;# 
  1394  0318                     	;# 
  1395  0318                     	;# 
  1396  0319                     	;# 
  1397  031A                     	;# 
  1398  031B                     	;# 
  1399  031C                     	;# 
  1400  031C                     	;# 
  1401  031D                     	;# 
  1402  031E                     	;# 
  1403  031F                     	;# 
  1404  038C                     	;# 
  1405  038C                     	;# 
  1406  038D                     	;# 
  1407  038E                     	;# 
  1408  0390                     	;# 
  1409  0390                     	;# 
  1410  0391                     	;# 
  1411  0392                     	;# 
  1412  040C                     	;# 
  1413  040D                     	;# 
  1414  040E                     	;# 
  1415  040F                     	;# 
  1416  0410                     	;# 
  1417  0411                     	;# 
  1418  0416                     	;# 
  1419  0416                     	;# 
  1420  0417                     	;# 
  1421  0418                     	;# 
  1422  0418                     	;# 
  1423  0419                     	;# 
  1424  041A                     	;# 
  1425  041A                     	;# 
  1426  041B                     	;# 
  1427  041C                     	;# 
  1428  041C                     	;# 
  1429  041D                     	;# 
  1430  041E                     	;# 
  1431  041F                     	;# 
  1432  048C                     	;# 
  1433  048C                     	;# 
  1434  048D                     	;# 
  1435  048E                     	;# 
  1436  048F                     	;# 
  1437  048F                     	;# 
  1438  0490                     	;# 
  1439  0491                     	;# 
  1440  0492                     	;# 
  1441  0492                     	;# 
  1442  0493                     	;# 
  1443  0494                     	;# 
  1444  0495                     	;# 
  1445  0495                     	;# 
  1446  0496                     	;# 
  1447  0497                     	;# 
  1448  0498                     	;# 
  1449  0499                     	;# 
  1450  049A                     	;# 
  1451  049B                     	;# 
  1452  049C                     	;# 
  1453  049D                     	;# 
  1454  050C                     	;# 
  1455  050C                     	;# 
  1456  050D                     	;# 
  1457  050E                     	;# 
  1458  050F                     	;# 
  1459  050F                     	;# 
  1460  0510                     	;# 
  1461  0511                     	;# 
  1462  0512                     	;# 
  1463  0512                     	;# 
  1464  0513                     	;# 
  1465  0514                     	;# 
  1466  0515                     	;# 
  1467  0515                     	;# 
  1468  0516                     	;# 
  1469  0517                     	;# 
  1470  0518                     	;# 
  1471  0519                     	;# 
  1472  051A                     	;# 
  1473  051B                     	;# 
  1474  051C                     	;# 
  1475  051D                     	;# 
  1476  058C                     	;# 
  1477  058C                     	;# 
  1478  058D                     	;# 
  1479  058E                     	;# 
  1480  058F                     	;# 
  1481  058F                     	;# 
  1482  0590                     	;# 
  1483  0591                     	;# 
  1484  0592                     	;# 
  1485  0593                     	;# 
  1486  060C                     	;# 
  1487  060D                     	;# 
  1488  060E                     	;# 
  1489  060F                     	;# 
  1490  0610                     	;# 
  1491  0611                     	;# 
  1492  0612                     	;# 
  1493  0613                     	;# 
  1494  0614                     	;# 
  1495  0616                     	;# 
  1496  0617                     	;# 
  1497  0618                     	;# 
  1498  0619                     	;# 
  1499  061A                     	;# 
  1500  061B                     	;# 
  1501  061C                     	;# 
  1502  061D                     	;# 
  1503  061E                     	;# 
  1504  068C                     	;# 
  1505  068D                     	;# 
  1506  068E                     	;# 
  1507  068F                     	;# 
  1508  0690                     	;# 
  1509  0691                     	;# 
  1510  0692                     	;# 
  1511  0693                     	;# 
  1512  0694                     	;# 
  1513  070C                     	;# 
  1514  070D                     	;# 
  1515  070E                     	;# 
  1516  070F                     	;# 
  1517  0710                     	;# 
  1518  0711                     	;# 
  1519  0712                     	;# 
  1520  0713                     	;# 
  1521  0714                     	;# 
  1522  0716                     	;# 
  1523  0717                     	;# 
  1524  0718                     	;# 
  1525  0719                     	;# 
  1526  071A                     	;# 
  1527  071B                     	;# 
  1528  071C                     	;# 
  1529  071D                     	;# 
  1530  071E                     	;# 
  1531  0796                     	;# 
  1532  0797                     	;# 
  1533  0798                     	;# 
  1534  0799                     	;# 
  1535  079A                     	;# 
  1536  079B                     	;# 
  1537  080C                     	;# 
  1538  080D                     	;# 
  1539  080E                     	;# 
  1540  080F                     	;# 
  1541  0810                     	;# 
  1542  0811                     	;# 
  1543  0812                     	;# 
  1544  0813                     	;# 
  1545  0814                     	;# 
  1546  081A                     	;# 
  1547  081B                     	;# 
  1548  081C                     	;# 
  1549  081D                     	;# 
  1550  081E                     	;# 
  1551  081F                     	;# 
  1552  088C                     	;# 
  1553  088D                     	;# 
  1554  088E                     	;# 
  1555  088F                     	;# 
  1556  0890                     	;# 
  1557  0891                     	;# 
  1558  0892                     	;# 
  1559  0893                     	;# 
  1560  0895                     	;# 
  1561  0896                     	;# 
  1562  0897                     	;# 
  1563  0898                     	;# 
  1564  0899                     	;# 
  1565  089A                     	;# 
  1566  089B                     	;# 
  1567  090C                     	;# 
  1568  090E                     	;# 
  1569  090F                     	;# 
  1570  091F                     	;# 
  1571  091F                     	;# 
  1572  098F                     	;# 
  1573  098F                     	;# 
  1574  0990                     	;# 
  1575  0991                     	;# 
  1576  0992                     	;# 
  1577  0993                     	;# 
  1578  0994                     	;# 
  1579  0995                     	;# 
  1580  0996                     	;# 
  1581  0997                     	;# 
  1582  0E0F                     	;# 
  1583  0E10                     	;# 
  1584  0E11                     	;# 
  1585  0E12                     	;# 
  1586  0E13                     	;# 
  1587  0E14                     	;# 
  1588  0E15                     	;# 
  1589  0E16                     	;# 
  1590  0E17                     	;# 
  1591  0E18                     	;# 
  1592  0E19                     	;# 
  1593  0E1A                     	;# 
  1594  0E1B                     	;# 
  1595  0E1C                     	;# 
  1596  0E1D                     	;# 
  1597  0E1E                     	;# 
  1598  0E1F                     	;# 
  1599  0E20                     	;# 
  1600  0E21                     	;# 
  1601  0E22                     	;# 
  1602  0E23                     	;# 
  1603  0E24                     	;# 
  1604  0E25                     	;# 
  1605  0E26                     	;# 
  1606  0E27                     	;# 
  1607  0E28                     	;# 
  1608  0E29                     	;# 
  1609  0E2A                     	;# 
  1610  0E2B                     	;# 
  1611  0E2C                     	;# 
  1612  0E2D                     	;# 
  1613  0E2E                     	;# 
  1614  0E2F                     	;# 
  1615  0E30                     	;# 
  1616  0E31                     	;# 
  1617  0E32                     	;# 
  1618  0E33                     	;# 
  1619  0E34                     	;# 
  1620  0E35                     	;# 
  1621  0E36                     	;# 
  1622  0E37                     	;# 
  1623  0E8F                     	;# 
  1624  0E90                     	;# 
  1625  0E91                     	;# 
  1626  0E92                     	;# 
  1627  0E93                     	;# 
  1628  0E94                     	;# 
  1629  0E95                     	;# 
  1630  0E96                     	;# 
  1631  0E97                     	;# 
  1632  0E9C                     	;# 
  1633  0E9D                     	;# 
  1634  0E9E                     	;# 
  1635  0EA1                     	;# 
  1636  0EA2                     	;# 
  1637  0EA3                     	;# 
  1638  0EA4                     	;# 
  1639  0EA5                     	;# 
  1640  0EA9                     	;# 
  1641  0EAA                     	;# 
  1642  0EAB                     	;# 
  1643  0EAC                     	;# 
  1644  0EB1                     	;# 
  1645  0EB2                     	;# 
  1646  0EB3                     	;# 
  1647  0EB8                     	;# 
  1648  0EB9                     	;# 
  1649  0EBA                     	;# 
  1650  0EBB                     	;# 
  1651  0EBC                     	;# 
  1652  0EBD                     	;# 
  1653  0EBE                     	;# 
  1654  0EC3                     	;# 
  1655  0EC5                     	;# 
  1656  0EC6                     	;# 
  1657  0EC7                     	;# 
  1658  0EC8                     	;# 
  1659  0EC9                     	;# 
  1660  0ECA                     	;# 
  1661  0ECB                     	;# 
  1662  0ECC                     	;# 
  1663  0F10                     	;# 
  1664  0F11                     	;# 
  1665  0F12                     	;# 
  1666  0F13                     	;# 
  1667  0F14                     	;# 
  1668  0F15                     	;# 
  1669  0F16                     	;# 
  1670  0F17                     	;# 
  1671  0F18                     	;# 
  1672  0F19                     	;# 
  1673  0F1A                     	;# 
  1674  0F1B                     	;# 
  1675  0F1C                     	;# 
  1676  0F1D                     	;# 
  1677  0F1E                     	;# 
  1678  0F1F                     	;# 
  1679  0F20                     	;# 
  1680  0F21                     	;# 
  1681  0F22                     	;# 
  1682  0F23                     	;# 
  1683  0F24                     	;# 
  1684  0F25                     	;# 
  1685  0F26                     	;# 
  1686  0F27                     	;# 
  1687  0F38                     	;# 
  1688  0F39                     	;# 
  1689  0F3A                     	;# 
  1690  0F3B                     	;# 
  1691  0F3C                     	;# 
  1692  0F3D                     	;# 
  1693  0F3E                     	;# 
  1694  0F3F                     	;# 
  1695  0F40                     	;# 
  1696  0F41                     	;# 
  1697  0F43                     	;# 
  1698  0F44                     	;# 
  1699  0F45                     	;# 
  1700  0F46                     	;# 
  1701  0F47                     	;# 
  1702  0F48                     	;# 
  1703  0F49                     	;# 
  1704  0F4A                     	;# 
  1705  0F4B                     	;# 
  1706  0F4C                     	;# 
  1707  0F4E                     	;# 
  1708  0F4F                     	;# 
  1709  0F50                     	;# 
  1710  0F51                     	;# 
  1711  0F52                     	;# 
  1712  0F53                     	;# 
  1713  0F54                     	;# 
  1714  0F55                     	;# 
  1715  0F56                     	;# 
  1716  0F57                     	;# 
  1717  0F65                     	;# 
  1718  0F68                     	;# 
  1719  0F69                     	;# 
  1720  0F6A                     	;# 
  1721  0F6B                     	;# 
  1722  0FE4                     	;# 
  1723  0FE5                     	;# 
  1724  0FE6                     	;# 
  1725  0FE7                     	;# 
  1726  0FE8                     	;# 
  1727  0FE9                     	;# 
  1728  0FEA                     	;# 
  1729  0FEB                     	;# 
  1730  0FED                     	;# 
  1731  0FEE                     	;# 
  1732  0FEF                     	;# 
  1733  0000                     	;# 
  1734  0001                     	;# 
  1735  0002                     	;# 
  1736  0003                     	;# 
  1737  0004                     	;# 
  1738  0005                     	;# 
  1739  0006                     	;# 
  1740  0007                     	;# 
  1741  0008                     	;# 
  1742  0009                     	;# 
  1743  000A                     	;# 
  1744  000B                     	;# 
  1745  000C                     	;# 
  1746  000D                     	;# 
  1747  000E                     	;# 
  1748  0010                     	;# 
  1749  0011                     	;# 
  1750  0012                     	;# 
  1751  0013                     	;# 
  1752  0016                     	;# 
  1753  0017                     	;# 
  1754  0018                     	;# 
  1755  001C                     	;# 
  1756  001C                     	;# 
  1757  001D                     	;# 
  1758  001D                     	;# 
  1759  001E                     	;# 
  1760  001F                     	;# 
  1761  008C                     	;# 
  1762  008C                     	;# 
  1763  008D                     	;# 
  1764  008E                     	;# 
  1765  008E                     	;# 
  1766  008F                     	;# 
  1767  0090                     	;# 
  1768  0090                     	;# 
  1769  0091                     	;# 
  1770  0093                     	;# 
  1771  0094                     	;# 
  1772  0095                     	;# 
  1773  0096                     	;# 
  1774  0097                     	;# 
  1775  0098                     	;# 
  1776  0099                     	;# 
  1777  009A                     	;# 
  1778  009B                     	;# 
  1779  009C                     	;# 
  1780  009D                     	;# 
  1781  009E                     	;# 
  1782  010C                     	;# 
  1783  010D                     	;# 
  1784  010E                     	;# 
  1785  010E                     	;# 
  1786  010F                     	;# 
  1787  0110                     	;# 
  1788  0110                     	;# 
  1789  0111                     	;# 
  1790  0112                     	;# 
  1791  0112                     	;# 
  1792  0113                     	;# 
  1793  0114                     	;# 
  1794  0114                     	;# 
  1795  0115                     	;# 
  1796  0116                     	;# 
  1797  0116                     	;# 
  1798  0117                     	;# 
  1799  0119                     	;# 
  1800  0119                     	;# 
  1801  0119                     	;# 
  1802  011A                     	;# 
  1803  011A                     	;# 
  1804  011A                     	;# 
  1805  011B                     	;# 
  1806  011B                     	;# 
  1807  011B                     	;# 
  1808  011B                     	;# 
  1809  011B                     	;# 
  1810  011C                     	;# 
  1811  011C                     	;# 
  1812  011C                     	;# 
  1813  011D                     	;# 
  1814  011D                     	;# 
  1815  011D                     	;# 
  1816  011E                     	;# 
  1817  011E                     	;# 
  1818  011E                     	;# 
  1819  011F                     	;# 
  1820  011F                     	;# 
  1821  011F                     	;# 
  1822  011F                     	;# 
  1823  011F                     	;# 
  1824  018C                     	;# 
  1825  018D                     	;# 
  1826  018E                     	;# 
  1827  018F                     	;# 
  1828  0190                     	;# 
  1829  0191                     	;# 
  1830  0192                     	;# 
  1831  0196                     	;# 
  1832  0197                     	;# 
  1833  0198                     	;# 
  1834  0199                     	;# 
  1835  019A                     	;# 
  1836  019B                     	;# 
  1837  019C                     	;# 
  1838  020C                     	;# 
  1839  020C                     	;# 
  1840  020D                     	;# 
  1841  020E                     	;# 
  1842  020F                     	;# 
  1843  020F                     	;# 
  1844  0210                     	;# 
  1845  0210                     	;# 
  1846  0211                     	;# 
  1847  0211                     	;# 
  1848  0212                     	;# 
  1849  0212                     	;# 
  1850  0213                     	;# 
  1851  0214                     	;# 
  1852  0215                     	;# 
  1853  0215                     	;# 
  1854  0216                     	;# 
  1855  0216                     	;# 
  1856  0217                     	;# 
  1857  0217                     	;# 
  1858  0218                     	;# 
  1859  0218                     	;# 
  1860  0219                     	;# 
  1861  021A                     	;# 
  1862  021B                     	;# 
  1863  021B                     	;# 
  1864  021C                     	;# 
  1865  021C                     	;# 
  1866  021D                     	;# 
  1867  021D                     	;# 
  1868  021E                     	;# 
  1869  021F                     	;# 
  1870  028C                     	;# 
  1871  028C                     	;# 
  1872  028D                     	;# 
  1873  028D                     	;# 
  1874  028E                     	;# 
  1875  028F                     	;# 
  1876  0290                     	;# 
  1877  0290                     	;# 
  1878  0291                     	;# 
  1879  0292                     	;# 
  1880  0292                     	;# 
  1881  0293                     	;# 
  1882  0293                     	;# 
  1883  0294                     	;# 
  1884  0295                     	;# 
  1885  0296                     	;# 
  1886  0296                     	;# 
  1887  0297                     	;# 
  1888  0298                     	;# 
  1889  0298                     	;# 
  1890  0299                     	;# 
  1891  0299                     	;# 
  1892  029A                     	;# 
  1893  029B                     	;# 
  1894  029C                     	;# 
  1895  029C                     	;# 
  1896  029D                     	;# 
  1897  030C                     	;# 
  1898  030C                     	;# 
  1899  030D                     	;# 
  1900  030E                     	;# 
  1901  030F                     	;# 
  1902  0310                     	;# 
  1903  0310                     	;# 
  1904  0311                     	;# 
  1905  0312                     	;# 
  1906  0313                     	;# 
  1907  0314                     	;# 
  1908  0314                     	;# 
  1909  0315                     	;# 
  1910  0316                     	;# 
  1911  0317                     	;# 
  1912  0318                     	;# 
  1913  0318                     	;# 
  1914  0319                     	;# 
  1915  031A                     	;# 
  1916  031B                     	;# 
  1917  031C                     	;# 
  1918  031C                     	;# 
  1919  031D                     	;# 
  1920  031E                     	;# 
  1921  031F                     	;# 
  1922  038C                     	;# 
  1923  038C                     	;# 
  1924  038D                     	;# 
  1925  038E                     	;# 
  1926  0390                     	;# 
  1927  0390                     	;# 
  1928  0391                     	;# 
  1929  0392                     	;# 
  1930  040C                     	;# 
  1931  040D                     	;# 
  1932  040E                     	;# 
  1933  040F                     	;# 
  1934  0410                     	;# 
  1935  0411                     	;# 
  1936  0416                     	;# 
  1937  0416                     	;# 
  1938  0417                     	;# 
  1939  0418                     	;# 
  1940  0418                     	;# 
  1941  0419                     	;# 
  1942  041A                     	;# 
  1943  041A                     	;# 
  1944  041B                     	;# 
  1945  041C                     	;# 
  1946  041C                     	;# 
  1947  041D                     	;# 
  1948  041E                     	;# 
  1949  041F                     	;# 
  1950  048C                     	;# 
  1951  048C                     	;# 
  1952  048D                     	;# 
  1953  048E                     	;# 
  1954  048F                     	;# 
  1955  048F                     	;# 
  1956  0490                     	;# 
  1957  0491                     	;# 
  1958  0492                     	;# 
  1959  0492                     	;# 
  1960  0493                     	;# 
  1961  0494                     	;# 
  1962  0495                     	;# 
  1963  0495                     	;# 
  1964  0496                     	;# 
  1965  0497                     	;# 
  1966  0498                     	;# 
  1967  0499                     	;# 
  1968  049A                     	;# 
  1969  049B                     	;# 
  1970  049C                     	;# 
  1971  049D                     	;# 
  1972  050C                     	;# 
  1973  050C                     	;# 
  1974  050D                     	;# 
  1975  050E                     	;# 
  1976  050F                     	;# 
  1977  050F                     	;# 
  1978  0510                     	;# 
  1979  0511                     	;# 
  1980  0512                     	;# 
  1981  0512                     	;# 
  1982  0513                     	;# 
  1983  0514                     	;# 
  1984  0515                     	;# 
  1985  0515                     	;# 
  1986  0516                     	;# 
  1987  0517                     	;# 
  1988  0518                     	;# 
  1989  0519                     	;# 
  1990  051A                     	;# 
  1991  051B                     	;# 
  1992  051C                     	;# 
  1993  051D                     	;# 
  1994  058C                     	;# 
  1995  058C                     	;# 
  1996  058D                     	;# 
  1997  058E                     	;# 
  1998  058F                     	;# 
  1999  058F                     	;# 
  2000  0590                     	;# 
  2001  0591                     	;# 
  2002  0592                     	;# 
  2003  0593                     	;# 
  2004  060C                     	;# 
  2005  060D                     	;# 
  2006  060E                     	;# 
  2007  060F                     	;# 
  2008  0610                     	;# 
  2009  0611                     	;# 
  2010  0612                     	;# 
  2011  0613                     	;# 
  2012  0614                     	;# 
  2013  0616                     	;# 
  2014  0617                     	;# 
  2015  0618                     	;# 
  2016  0619                     	;# 
  2017  061A                     	;# 
  2018  061B                     	;# 
  2019  061C                     	;# 
  2020  061D                     	;# 
  2021  061E                     	;# 
  2022  068C                     	;# 
  2023  068D                     	;# 
  2024  068E                     	;# 
  2025  068F                     	;# 
  2026  0690                     	;# 
  2027  0691                     	;# 
  2028  0692                     	;# 
  2029  0693                     	;# 
  2030  0694                     	;# 
  2031  070C                     	;# 
  2032  070D                     	;# 
  2033  070E                     	;# 
  2034  070F                     	;# 
  2035  0710                     	;# 
  2036  0711                     	;# 
  2037  0712                     	;# 
  2038  0713                     	;# 
  2039  0714                     	;# 
  2040  0716                     	;# 
  2041  0717                     	;# 
  2042  0718                     	;# 
  2043  0719                     	;# 
  2044  071A                     	;# 
  2045  071B                     	;# 
  2046  071C                     	;# 
  2047  071D                     	;# 
  2048  071E                     	;# 
  2049  0796                     	;# 
  2050  0797                     	;# 
  2051  0798                     	;# 
  2052  0799                     	;# 
  2053  079A                     	;# 
  2054  079B                     	;# 
  2055  080C                     	;# 
  2056  080D                     	;# 
  2057  080E                     	;# 
  2058  080F                     	;# 
  2059  0810                     	;# 
  2060  0811                     	;# 
  2061  0812                     	;# 
  2062  0813                     	;# 
  2063  0814                     	;# 
  2064  081A                     	;# 
  2065  081B                     	;# 
  2066  081C                     	;# 
  2067  081D                     	;# 
  2068  081E                     	;# 
  2069  081F                     	;# 
  2070  088C                     	;# 
  2071  088D                     	;# 
  2072  088E                     	;# 
  2073  088F                     	;# 
  2074  0890                     	;# 
  2075  0891                     	;# 
  2076  0892                     	;# 
  2077  0893                     	;# 
  2078  0895                     	;# 
  2079  0896                     	;# 
  2080  0897                     	;# 
  2081  0898                     	;# 
  2082  0899                     	;# 
  2083  089A                     	;# 
  2084  089B                     	;# 
  2085  090C                     	;# 
  2086  090E                     	;# 
  2087  090F                     	;# 
  2088  091F                     	;# 
  2089  091F                     	;# 
  2090  098F                     	;# 
  2091  098F                     	;# 
  2092  0990                     	;# 
  2093  0991                     	;# 
  2094  0992                     	;# 
  2095  0993                     	;# 
  2096  0994                     	;# 
  2097  0995                     	;# 
  2098  0996                     	;# 
  2099  0997                     	;# 
  2100  0E0F                     	;# 
  2101  0E10                     	;# 
  2102  0E11                     	;# 
  2103  0E12                     	;# 
  2104  0E13                     	;# 
  2105  0E14                     	;# 
  2106  0E15                     	;# 
  2107  0E16                     	;# 
  2108  0E17                     	;# 
  2109  0E18                     	;# 
  2110  0E19                     	;# 
  2111  0E1A                     	;# 
  2112  0E1B                     	;# 
  2113  0E1C                     	;# 
  2114  0E1D                     	;# 
  2115  0E1E                     	;# 
  2116  0E1F                     	;# 
  2117  0E20                     	;# 
  2118  0E21                     	;# 
  2119  0E22                     	;# 
  2120  0E23                     	;# 
  2121  0E24                     	;# 
  2122  0E25                     	;# 
  2123  0E26                     	;# 
  2124  0E27                     	;# 
  2125  0E28                     	;# 
  2126  0E29                     	;# 
  2127  0E2A                     	;# 
  2128  0E2B                     	;# 
  2129  0E2C                     	;# 
  2130  0E2D                     	;# 
  2131  0E2E                     	;# 
  2132  0E2F                     	;# 
  2133  0E30                     	;# 
  2134  0E31                     	;# 
  2135  0E32                     	;# 
  2136  0E33                     	;# 
  2137  0E34                     	;# 
  2138  0E35                     	;# 
  2139  0E36                     	;# 
  2140  0E37                     	;# 
  2141  0E8F                     	;# 
  2142  0E90                     	;# 
  2143  0E91                     	;# 
  2144  0E92                     	;# 
  2145  0E93                     	;# 
  2146  0E94                     	;# 
  2147  0E95                     	;# 
  2148  0E96                     	;# 
  2149  0E97                     	;# 
  2150  0E9C                     	;# 
  2151  0E9D                     	;# 
  2152  0E9E                     	;# 
  2153  0EA1                     	;# 
  2154  0EA2                     	;# 
  2155  0EA3                     	;# 
  2156  0EA4                     	;# 
  2157  0EA5                     	;# 
  2158  0EA9                     	;# 
  2159  0EAA                     	;# 
  2160  0EAB                     	;# 
  2161  0EAC                     	;# 
  2162  0EB1                     	;# 
  2163  0EB2                     	;# 
  2164  0EB3                     	;# 
  2165  0EB8                     	;# 
  2166  0EB9                     	;# 
  2167  0EBA                     	;# 
  2168  0EBB                     	;# 
  2169  0EBC                     	;# 
  2170  0EBD                     	;# 
  2171  0EBE                     	;# 
  2172  0EC3                     	;# 
  2173  0EC5                     	;# 
  2174  0EC6                     	;# 
  2175  0EC7                     	;# 
  2176  0EC8                     	;# 
  2177  0EC9                     	;# 
  2178  0ECA                     	;# 
  2179  0ECB                     	;# 
  2180  0ECC                     	;# 
  2181  0F10                     	;# 
  2182  0F11                     	;# 
  2183  0F12                     	;# 
  2184  0F13                     	;# 
  2185  0F14                     	;# 
  2186  0F15                     	;# 
  2187  0F16                     	;# 
  2188  0F17                     	;# 
  2189  0F18                     	;# 
  2190  0F19                     	;# 
  2191  0F1A                     	;# 
  2192  0F1B                     	;# 
  2193  0F1C                     	;# 
  2194  0F1D                     	;# 
  2195  0F1E                     	;# 
  2196  0F1F                     	;# 
  2197  0F20                     	;# 
  2198  0F21                     	;# 
  2199  0F22                     	;# 
  2200  0F23                     	;# 
  2201  0F24                     	;# 
  2202  0F25                     	;# 
  2203  0F26                     	;# 
  2204  0F27                     	;# 
  2205  0F38                     	;# 
  2206  0F39                     	;# 
  2207  0F3A                     	;# 
  2208  0F3B                     	;# 
  2209  0F3C                     	;# 
  2210  0F3D                     	;# 
  2211  0F3E                     	;# 
  2212  0F3F                     	;# 
  2213  0F40                     	;# 
  2214  0F41                     	;# 
  2215  0F43                     	;# 
  2216  0F44                     	;# 
  2217  0F45                     	;# 
  2218  0F46                     	;# 
  2219  0F47                     	;# 
  2220  0F48                     	;# 
  2221  0F49                     	;# 
  2222  0F4A                     	;# 
  2223  0F4B                     	;# 
  2224  0F4C                     	;# 
  2225  0F4E                     	;# 
  2226  0F4F                     	;# 
  2227  0F50                     	;# 
  2228  0F51                     	;# 
  2229  0F52                     	;# 
  2230  0F53                     	;# 
  2231  0F54                     	;# 
  2232  0F55                     	;# 
  2233  0F56                     	;# 
  2234  0F57                     	;# 
  2235  0F65                     	;# 
  2236  0F68                     	;# 
  2237  0F69                     	;# 
  2238  0F6A                     	;# 
  2239  0F6B                     	;# 
  2240  0FE4                     	;# 
  2241  0FE5                     	;# 
  2242  0FE6                     	;# 
  2243  0FE7                     	;# 
  2244  0FE8                     	;# 
  2245  0FE9                     	;# 
  2246  0FEA                     	;# 
  2247  0FEB                     	;# 
  2248  0FED                     	;# 
  2249  0FEE                     	;# 
  2250  0FEF                     	;# 
  2251  0000                     	;# 
  2252  0001                     	;# 
  2253  0002                     	;# 
  2254  0003                     	;# 
  2255  0004                     	;# 
  2256  0005                     	;# 
  2257  0006                     	;# 
  2258  0007                     	;# 
  2259  0008                     	;# 
  2260  0009                     	;# 
  2261  000A                     	;# 
  2262  000B                     	;# 
  2263  000C                     	;# 
  2264  000D                     	;# 
  2265  000E                     	;# 
  2266  0010                     	;# 
  2267  0011                     	;# 
  2268  0012                     	;# 
  2269  0013                     	;# 
  2270  0016                     	;# 
  2271  0017                     	;# 
  2272  0018                     	;# 
  2273  001C                     	;# 
  2274  001C                     	;# 
  2275  001D                     	;# 
  2276  001D                     	;# 
  2277  001E                     	;# 
  2278  001F                     	;# 
  2279  008C                     	;# 
  2280  008C                     	;# 
  2281  008D                     	;# 
  2282  008E                     	;# 
  2283  008E                     	;# 
  2284  008F                     	;# 
  2285  0090                     	;# 
  2286  0090                     	;# 
  2287  0091                     	;# 
  2288  0093                     	;# 
  2289  0094                     	;# 
  2290  0095                     	;# 
  2291  0096                     	;# 
  2292  0097                     	;# 
  2293  0098                     	;# 
  2294  0099                     	;# 
  2295  009A                     	;# 
  2296  009B                     	;# 
  2297  009C                     	;# 
  2298  009D                     	;# 
  2299  009E                     	;# 
  2300  010C                     	;# 
  2301  010D                     	;# 
  2302  010E                     	;# 
  2303  010E                     	;# 
  2304  010F                     	;# 
  2305  0110                     	;# 
  2306  0110                     	;# 
  2307  0111                     	;# 
  2308  0112                     	;# 
  2309  0112                     	;# 
  2310  0113                     	;# 
  2311  0114                     	;# 
  2312  0114                     	;# 
  2313  0115                     	;# 
  2314  0116                     	;# 
  2315  0116                     	;# 
  2316  0117                     	;# 
  2317  0119                     	;# 
  2318  0119                     	;# 
  2319  0119                     	;# 
  2320  011A                     	;# 
  2321  011A                     	;# 
  2322  011A                     	;# 
  2323  011B                     	;# 
  2324  011B                     	;# 
  2325  011B                     	;# 
  2326  011B                     	;# 
  2327  011B                     	;# 
  2328  011C                     	;# 
  2329  011C                     	;# 
  2330  011C                     	;# 
  2331  011D                     	;# 
  2332  011D                     	;# 
  2333  011D                     	;# 
  2334  011E                     	;# 
  2335  011E                     	;# 
  2336  011E                     	;# 
  2337  011F                     	;# 
  2338  011F                     	;# 
  2339  011F                     	;# 
  2340  011F                     	;# 
  2341  011F                     	;# 
  2342  018C                     	;# 
  2343  018D                     	;# 
  2344  018E                     	;# 
  2345  018F                     	;# 
  2346  0190                     	;# 
  2347  0191                     	;# 
  2348  0192                     	;# 
  2349  0196                     	;# 
  2350  0197                     	;# 
  2351  0198                     	;# 
  2352  0199                     	;# 
  2353  019A                     	;# 
  2354  019B                     	;# 
  2355  019C                     	;# 
  2356  020C                     	;# 
  2357  020C                     	;# 
  2358  020D                     	;# 
  2359  020E                     	;# 
  2360  020F                     	;# 
  2361  020F                     	;# 
  2362  0210                     	;# 
  2363  0210                     	;# 
  2364  0211                     	;# 
  2365  0211                     	;# 
  2366  0212                     	;# 
  2367  0212                     	;# 
  2368  0213                     	;# 
  2369  0214                     	;# 
  2370  0215                     	;# 
  2371  0215                     	;# 
  2372  0216                     	;# 
  2373  0216                     	;# 
  2374  0217                     	;# 
  2375  0217                     	;# 
  2376  0218                     	;# 
  2377  0218                     	;# 
  2378  0219                     	;# 
  2379  021A                     	;# 
  2380  021B                     	;# 
  2381  021B                     	;# 
  2382  021C                     	;# 
  2383  021C                     	;# 
  2384  021D                     	;# 
  2385  021D                     	;# 
  2386  021E                     	;# 
  2387  021F                     	;# 
  2388  028C                     	;# 
  2389  028C                     	;# 
  2390  028D                     	;# 
  2391  028D                     	;# 
  2392  028E                     	;# 
  2393  028F                     	;# 
  2394  0290                     	;# 
  2395  0290                     	;# 
  2396  0291                     	;# 
  2397  0292                     	;# 
  2398  0292                     	;# 
  2399  0293                     	;# 
  2400  0293                     	;# 
  2401  0294                     	;# 
  2402  0295                     	;# 
  2403  0296                     	;# 
  2404  0296                     	;# 
  2405  0297                     	;# 
  2406  0298                     	;# 
  2407  0298                     	;# 
  2408  0299                     	;# 
  2409  0299                     	;# 
  2410  029A                     	;# 
  2411  029B                     	;# 
  2412  029C                     	;# 
  2413  029C                     	;# 
  2414  029D                     	;# 
  2415  030C                     	;# 
  2416  030C                     	;# 
  2417  030D                     	;# 
  2418  030E                     	;# 
  2419  030F                     	;# 
  2420  0310                     	;# 
  2421  0310                     	;# 
  2422  0311                     	;# 
  2423  0312                     	;# 
  2424  0313                     	;# 
  2425  0314                     	;# 
  2426  0314                     	;# 
  2427  0315                     	;# 
  2428  0316                     	;# 
  2429  0317                     	;# 
  2430  0318                     	;# 
  2431  0318                     	;# 
  2432  0319                     	;# 
  2433  031A                     	;# 
  2434  031B                     	;# 
  2435  031C                     	;# 
  2436  031C                     	;# 
  2437  031D                     	;# 
  2438  031E                     	;# 
  2439  031F                     	;# 
  2440  038C                     	;# 
  2441  038C                     	;# 
  2442  038D                     	;# 
  2443  038E                     	;# 
  2444  0390                     	;# 
  2445  0390                     	;# 
  2446  0391                     	;# 
  2447  0392                     	;# 
  2448  040C                     	;# 
  2449  040D                     	;# 
  2450  040E                     	;# 
  2451  040F                     	;# 
  2452  0410                     	;# 
  2453  0411                     	;# 
  2454  0416                     	;# 
  2455  0416                     	;# 
  2456  0417                     	;# 
  2457  0418                     	;# 
  2458  0418                     	;# 
  2459  0419                     	;# 
  2460  041A                     	;# 
  2461  041A                     	;# 
  2462  041B                     	;# 
  2463  041C                     	;# 
  2464  041C                     	;# 
  2465  041D                     	;# 
  2466  041E                     	;# 
  2467  041F                     	;# 
  2468  048C                     	;# 
  2469  048C                     	;# 
  2470  048D                     	;# 
  2471  048E                     	;# 
  2472  048F                     	;# 
  2473  048F                     	;# 
  2474  0490                     	;# 
  2475  0491                     	;# 
  2476  0492                     	;# 
  2477  0492                     	;# 
  2478  0493                     	;# 
  2479  0494                     	;# 
  2480  0495                     	;# 
  2481  0495                     	;# 
  2482  0496                     	;# 
  2483  0497                     	;# 
  2484  0498                     	;# 
  2485  0499                     	;# 
  2486  049A                     	;# 
  2487  049B                     	;# 
  2488  049C                     	;# 
  2489  049D                     	;# 
  2490  050C                     	;# 
  2491  050C                     	;# 
  2492  050D                     	;# 
  2493  050E                     	;# 
  2494  050F                     	;# 
  2495  050F                     	;# 
  2496  0510                     	;# 
  2497  0511                     	;# 
  2498  0512                     	;# 
  2499  0512                     	;# 
  2500  0513                     	;# 
  2501  0514                     	;# 
  2502  0515                     	;# 
  2503  0515                     	;# 
  2504  0516                     	;# 
  2505  0517                     	;# 
  2506  0518                     	;# 
  2507  0519                     	;# 
  2508  051A                     	;# 
  2509  051B                     	;# 
  2510  051C                     	;# 
  2511  051D                     	;# 
  2512  058C                     	;# 
  2513  058C                     	;# 
  2514  058D                     	;# 
  2515  058E                     	;# 
  2516  058F                     	;# 
  2517  058F                     	;# 
  2518  0590                     	;# 
  2519  0591                     	;# 
  2520  0592                     	;# 
  2521  0593                     	;# 
  2522  060C                     	;# 
  2523  060D                     	;# 
  2524  060E                     	;# 
  2525  060F                     	;# 
  2526  0610                     	;# 
  2527  0611                     	;# 
  2528  0612                     	;# 
  2529  0613                     	;# 
  2530  0614                     	;# 
  2531  0616                     	;# 
  2532  0617                     	;# 
  2533  0618                     	;# 
  2534  0619                     	;# 
  2535  061A                     	;# 
  2536  061B                     	;# 
  2537  061C                     	;# 
  2538  061D                     	;# 
  2539  061E                     	;# 
  2540  068C                     	;# 
  2541  068D                     	;# 
  2542  068E                     	;# 
  2543  068F                     	;# 
  2544  0690                     	;# 
  2545  0691                     	;# 
  2546  0692                     	;# 
  2547  0693                     	;# 
  2548  0694                     	;# 
  2549  070C                     	;# 
  2550  070D                     	;# 
  2551  070E                     	;# 
  2552  070F                     	;# 
  2553  0710                     	;# 
  2554  0711                     	;# 
  2555  0712                     	;# 
  2556  0713                     	;# 
  2557  0714                     	;# 
  2558  0716                     	;# 
  2559  0717                     	;# 
  2560  0718                     	;# 
  2561  0719                     	;# 
  2562  071A                     	;# 
  2563  071B                     	;# 
  2564  071C                     	;# 
  2565  071D                     	;# 
  2566  071E                     	;# 
  2567  0796                     	;# 
  2568  0797                     	;# 
  2569  0798                     	;# 
  2570  0799                     	;# 
  2571  079A                     	;# 
  2572  079B                     	;# 
  2573  080C                     	;# 
  2574  080D                     	;# 
  2575  080E                     	;# 
  2576  080F                     	;# 
  2577  0810                     	;# 
  2578  0811                     	;# 
  2579  0812                     	;# 
  2580  0813                     	;# 
  2581  0814                     	;# 
  2582  081A                     	;# 
  2583  081B                     	;# 
  2584  081C                     	;# 
  2585  081D                     	;# 
  2586  081E                     	;# 
  2587  081F                     	;# 
  2588  088C                     	;# 
  2589  088D                     	;# 
  2590  088E                     	;# 
  2591  088F                     	;# 
  2592  0890                     	;# 
  2593  0891                     	;# 
  2594  0892                     	;# 
  2595  0893                     	;# 
  2596  0895                     	;# 
  2597  0896                     	;# 
  2598  0897                     	;# 
  2599  0898                     	;# 
  2600  0899                     	;# 
  2601  089A                     	;# 
  2602  089B                     	;# 
  2603  090C                     	;# 
  2604  090E                     	;# 
  2605  090F                     	;# 
  2606  091F                     	;# 
  2607  091F                     	;# 
  2608  098F                     	;# 
  2609  098F                     	;# 
  2610  0990                     	;# 
  2611  0991                     	;# 
  2612  0992                     	;# 
  2613  0993                     	;# 
  2614  0994                     	;# 
  2615  0995                     	;# 
  2616  0996                     	;# 
  2617  0997                     	;# 
  2618  0E0F                     	;# 
  2619  0E10                     	;# 
  2620  0E11                     	;# 
  2621  0E12                     	;# 
  2622  0E13                     	;# 
  2623  0E14                     	;# 
  2624  0E15                     	;# 
  2625  0E16                     	;# 
  2626  0E17                     	;# 
  2627  0E18                     	;# 
  2628  0E19                     	;# 
  2629  0E1A                     	;# 
  2630  0E1B                     	;# 
  2631  0E1C                     	;# 
  2632  0E1D                     	;# 
  2633  0E1E                     	;# 
  2634  0E1F                     	;# 
  2635  0E20                     	;# 
  2636  0E21                     	;# 
  2637  0E22                     	;# 
  2638  0E23                     	;# 
  2639  0E24                     	;# 
  2640  0E25                     	;# 
  2641  0E26                     	;# 
  2642  0E27                     	;# 
  2643  0E28                     	;# 
  2644  0E29                     	;# 
  2645  0E2A                     	;# 
  2646  0E2B                     	;# 
  2647  0E2C                     	;# 
  2648  0E2D                     	;# 
  2649  0E2E                     	;# 
  2650  0E2F                     	;# 
  2651  0E30                     	;# 
  2652  0E31                     	;# 
  2653  0E32                     	;# 
  2654  0E33                     	;# 
  2655  0E34                     	;# 
  2656  0E35                     	;# 
  2657  0E36                     	;# 
  2658  0E37                     	;# 
  2659  0E8F                     	;# 
  2660  0E90                     	;# 
  2661  0E91                     	;# 
  2662  0E92                     	;# 
  2663  0E93                     	;# 
  2664  0E94                     	;# 
  2665  0E95                     	;# 
  2666  0E96                     	;# 
  2667  0E97                     	;# 
  2668  0E9C                     	;# 
  2669  0E9D                     	;# 
  2670  0E9E                     	;# 
  2671  0EA1                     	;# 
  2672  0EA2                     	;# 
  2673  0EA3                     	;# 
  2674  0EA4                     	;# 
  2675  0EA5                     	;# 
  2676  0EA9                     	;# 
  2677  0EAA                     	;# 
  2678  0EAB                     	;# 
  2679  0EAC                     	;# 
  2680  0EB1                     	;# 
  2681  0EB2                     	;# 
  2682  0EB3                     	;# 
  2683  0EB8                     	;# 
  2684  0EB9                     	;# 
  2685  0EBA                     	;# 
  2686  0EBB                     	;# 
  2687  0EBC                     	;# 
  2688  0EBD                     	;# 
  2689  0EBE                     	;# 
  2690  0EC3                     	;# 
  2691  0EC5                     	;# 
  2692  0EC6                     	;# 
  2693  0EC7                     	;# 
  2694  0EC8                     	;# 
  2695  0EC9                     	;# 
  2696  0ECA                     	;# 
  2697  0ECB                     	;# 
  2698  0ECC                     	;# 
  2699  0F10                     	;# 
  2700  0F11                     	;# 
  2701  0F12                     	;# 
  2702  0F13                     	;# 
  2703  0F14                     	;# 
  2704  0F15                     	;# 
  2705  0F16                     	;# 
  2706  0F17                     	;# 
  2707  0F18                     	;# 
  2708  0F19                     	;# 
  2709  0F1A                     	;# 
  2710  0F1B                     	;# 
  2711  0F1C                     	;# 
  2712  0F1D                     	;# 
  2713  0F1E                     	;# 
  2714  0F1F                     	;# 
  2715  0F20                     	;# 
  2716  0F21                     	;# 
  2717  0F22                     	;# 
  2718  0F23                     	;# 
  2719  0F24                     	;# 
  2720  0F25                     	;# 
  2721  0F26                     	;# 
  2722  0F27                     	;# 
  2723  0F38                     	;# 
  2724  0F39                     	;# 
  2725  0F3A                     	;# 
  2726  0F3B                     	;# 
  2727  0F3C                     	;# 
  2728  0F3D                     	;# 
  2729  0F3E                     	;# 
  2730  0F3F                     	;# 
  2731  0F40                     	;# 
  2732  0F41                     	;# 
  2733  0F43                     	;# 
  2734  0F44                     	;# 
  2735  0F45                     	;# 
  2736  0F46                     	;# 
  2737  0F47                     	;# 
  2738  0F48                     	;# 
  2739  0F49                     	;# 
  2740  0F4A                     	;# 
  2741  0F4B                     	;# 
  2742  0F4C                     	;# 
  2743  0F4E                     	;# 
  2744  0F4F                     	;# 
  2745  0F50                     	;# 
  2746  0F51                     	;# 
  2747  0F52                     	;# 
  2748  0F53                     	;# 
  2749  0F54                     	;# 
  2750  0F55                     	;# 
  2751  0F56                     	;# 
  2752  0F57                     	;# 
  2753  0F65                     	;# 
  2754  0F68                     	;# 
  2755  0F69                     	;# 
  2756  0F6A                     	;# 
  2757  0F6B                     	;# 
  2758  0FE4                     	;# 
  2759  0FE5                     	;# 
  2760  0FE6                     	;# 
  2761  0FE7                     	;# 
  2762  0FE8                     	;# 
  2763  0FE9                     	;# 
  2764  0FEA                     	;# 
  2765  0FEB                     	;# 
  2766  0FED                     	;# 
  2767  0FEE                     	;# 
  2768  0FEF                     	;# 
  2769  0000                     	;# 
  2770  0001                     	;# 
  2771  0002                     	;# 
  2772  0003                     	;# 
  2773  0004                     	;# 
  2774  0005                     	;# 
  2775  0006                     	;# 
  2776  0007                     	;# 
  2777  0008                     	;# 
  2778  0009                     	;# 
  2779  000A                     	;# 
  2780  000B                     	;# 
  2781  000C                     	;# 
  2782  000D                     	;# 
  2783  000E                     	;# 
  2784  0010                     	;# 
  2785  0011                     	;# 
  2786  0012                     	;# 
  2787  0013                     	;# 
  2788  0016                     	;# 
  2789  0017                     	;# 
  2790  0018                     	;# 
  2791  001C                     	;# 
  2792  001C                     	;# 
  2793  001D                     	;# 
  2794  001D                     	;# 
  2795  001E                     	;# 
  2796  001F                     	;# 
  2797  008C                     	;# 
  2798  008C                     	;# 
  2799  008D                     	;# 
  2800  008E                     	;# 
  2801  008E                     	;# 
  2802  008F                     	;# 
  2803  0090                     	;# 
  2804  0090                     	;# 
  2805  0091                     	;# 
  2806  0093                     	;# 
  2807  0094                     	;# 
  2808  0095                     	;# 
  2809  0096                     	;# 
  2810  0097                     	;# 
  2811  0098                     	;# 
  2812  0099                     	;# 
  2813  009A                     	;# 
  2814  009B                     	;# 
  2815  009C                     	;# 
  2816  009D                     	;# 
  2817  009E                     	;# 
  2818  010C                     	;# 
  2819  010D                     	;# 
  2820  010E                     	;# 
  2821  010E                     	;# 
  2822  010F                     	;# 
  2823  0110                     	;# 
  2824  0110                     	;# 
  2825  0111                     	;# 
  2826  0112                     	;# 
  2827  0112                     	;# 
  2828  0113                     	;# 
  2829  0114                     	;# 
  2830  0114                     	;# 
  2831  0115                     	;# 
  2832  0116                     	;# 
  2833  0116                     	;# 
  2834  0117                     	;# 
  2835  0119                     	;# 
  2836  0119                     	;# 
  2837  0119                     	;# 
  2838  011A                     	;# 
  2839  011A                     	;# 
  2840  011A                     	;# 
  2841  011B                     	;# 
  2842  011B                     	;# 
  2843  011B                     	;# 
  2844  011B                     	;# 
  2845  011B                     	;# 
  2846  011C                     	;# 
  2847  011C                     	;# 
  2848  011C                     	;# 
  2849  011D                     	;# 
  2850  011D                     	;# 
  2851  011D                     	;# 
  2852  011E                     	;# 
  2853  011E                     	;# 
  2854  011E                     	;# 
  2855  011F                     	;# 
  2856  011F                     	;# 
  2857  011F                     	;# 
  2858  011F                     	;# 
  2859  011F                     	;# 
  2860  018C                     	;# 
  2861  018D                     	;# 
  2862  018E                     	;# 
  2863  018F                     	;# 
  2864  0190                     	;# 
  2865  0191                     	;# 
  2866  0192                     	;# 
  2867  0196                     	;# 
  2868  0197                     	;# 
  2869  0198                     	;# 
  2870  0199                     	;# 
  2871  019A                     	;# 
  2872  019B                     	;# 
  2873  019C                     	;# 
  2874  020C                     	;# 
  2875  020C                     	;# 
  2876  020D                     	;# 
  2877  020E                     	;# 
  2878  020F                     	;# 
  2879  020F                     	;# 
  2880  0210                     	;# 
  2881  0210                     	;# 
  2882  0211                     	;# 
  2883  0211                     	;# 
  2884  0212                     	;# 
  2885  0212                     	;# 
  2886  0213                     	;# 
  2887  0214                     	;# 
  2888  0215                     	;# 
  2889  0215                     	;# 
  2890  0216                     	;# 
  2891  0216                     	;# 
  2892  0217                     	;# 
  2893  0217                     	;# 
  2894  0218                     	;# 
  2895  0218                     	;# 
  2896  0219                     	;# 
  2897  021A                     	;# 
  2898  021B                     	;# 
  2899  021B                     	;# 
  2900  021C                     	;# 
  2901  021C                     	;# 
  2902  021D                     	;# 
  2903  021D                     	;# 
  2904  021E                     	;# 
  2905  021F                     	;# 
  2906  028C                     	;# 
  2907  028C                     	;# 
  2908  028D                     	;# 
  2909  028D                     	;# 
  2910  028E                     	;# 
  2911  028F                     	;# 
  2912  0290                     	;# 
  2913  0290                     	;# 
  2914  0291                     	;# 
  2915  0292                     	;# 
  2916  0292                     	;# 
  2917  0293                     	;# 
  2918  0293                     	;# 
  2919  0294                     	;# 
  2920  0295                     	;# 
  2921  0296                     	;# 
  2922  0296                     	;# 
  2923  0297                     	;# 
  2924  0298                     	;# 
  2925  0298                     	;# 
  2926  0299                     	;# 
  2927  0299                     	;# 
  2928  029A                     	;# 
  2929  029B                     	;# 
  2930  029C                     	;# 
  2931  029C                     	;# 
  2932  029D                     	;# 
  2933  030C                     	;# 
  2934  030C                     	;# 
  2935  030D                     	;# 
  2936  030E                     	;# 
  2937  030F                     	;# 
  2938  0310                     	;# 
  2939  0310                     	;# 
  2940  0311                     	;# 
  2941  0312                     	;# 
  2942  0313                     	;# 
  2943  0314                     	;# 
  2944  0314                     	;# 
  2945  0315                     	;# 
  2946  0316                     	;# 
  2947  0317                     	;# 
  2948  0318                     	;# 
  2949  0318                     	;# 
  2950  0319                     	;# 
  2951  031A                     	;# 
  2952  031B                     	;# 
  2953  031C                     	;# 
  2954  031C                     	;# 
  2955  031D                     	;# 
  2956  031E                     	;# 
  2957  031F                     	;# 
  2958  038C                     	;# 
  2959  038C                     	;# 
  2960  038D                     	;# 
  2961  038E                     	;# 
  2962  0390                     	;# 
  2963  0390                     	;# 
  2964  0391                     	;# 
  2965  0392                     	;# 
  2966  040C                     	;# 
  2967  040D                     	;# 
  2968  040E                     	;# 
  2969  040F                     	;# 
  2970  0410                     	;# 
  2971  0411                     	;# 
  2972  0416                     	;# 
  2973  0416                     	;# 
  2974  0417                     	;# 
  2975  0418                     	;# 
  2976  0418                     	;# 
  2977  0419                     	;# 
  2978  041A                     	;# 
  2979  041A                     	;# 
  2980  041B                     	;# 
  2981  041C                     	;# 
  2982  041C                     	;# 
  2983  041D                     	;# 
  2984  041E                     	;# 
  2985  041F                     	;# 
  2986  048C                     	;# 
  2987  048C                     	;# 
  2988  048D                     	;# 
  2989  048E                     	;# 
  2990  048F                     	;# 
  2991  048F                     	;# 
  2992  0490                     	;# 
  2993  0491                     	;# 
  2994  0492                     	;# 
  2995  0492                     	;# 
  2996  0493                     	;# 
  2997  0494                     	;# 
  2998  0495                     	;# 
  2999  0495                     	;# 
  3000  0496                     	;# 
  3001  0497                     	;# 
  3002  0498                     	;# 
  3003  0499                     	;# 
  3004  049A                     	;# 
  3005  049B                     	;# 
  3006  049C                     	;# 
  3007  049D                     	;# 
  3008  050C                     	;# 
  3009  050C                     	;# 
  3010  050D                     	;# 
  3011  050E                     	;# 
  3012  050F                     	;# 
  3013  050F                     	;# 
  3014  0510                     	;# 
  3015  0511                     	;# 
  3016  0512                     	;# 
  3017  0512                     	;# 
  3018  0513                     	;# 
  3019  0514                     	;# 
  3020  0515                     	;# 
  3021  0515                     	;# 
  3022  0516                     	;# 
  3023  0517                     	;# 
  3024  0518                     	;# 
  3025  0519                     	;# 
  3026  051A                     	;# 
  3027  051B                     	;# 
  3028  051C                     	;# 
  3029  051D                     	;# 
  3030  058C                     	;# 
  3031  058C                     	;# 
  3032  058D                     	;# 
  3033  058E                     	;# 
  3034  058F                     	;# 
  3035  058F                     	;# 
  3036  0590                     	;# 
  3037  0591                     	;# 
  3038  0592                     	;# 
  3039  0593                     	;# 
  3040  060C                     	;# 
  3041  060D                     	;# 
  3042  060E                     	;# 
  3043  060F                     	;# 
  3044  0610                     	;# 
  3045  0611                     	;# 
  3046  0612                     	;# 
  3047  0613                     	;# 
  3048  0614                     	;# 
  3049  0616                     	;# 
  3050  0617                     	;# 
  3051  0618                     	;# 
  3052  0619                     	;# 
  3053  061A                     	;# 
  3054  061B                     	;# 
  3055  061C                     	;# 
  3056  061D                     	;# 
  3057  061E                     	;# 
  3058  068C                     	;# 
  3059  068D                     	;# 
  3060  068E                     	;# 
  3061  068F                     	;# 
  3062  0690                     	;# 
  3063  0691                     	;# 
  3064  0692                     	;# 
  3065  0693                     	;# 
  3066  0694                     	;# 
  3067  070C                     	;# 
  3068  070D                     	;# 
  3069  070E                     	;# 
  3070  070F                     	;# 
  3071  0710                     	;# 
  3072  0711                     	;# 
  3073  0712                     	;# 
  3074  0713                     	;# 
  3075  0714                     	;# 
  3076  0716                     	;# 
  3077  0717                     	;# 
  3078  0718                     	;# 
  3079  0719                     	;# 
  3080  071A                     	;# 
  3081  071B                     	;# 
  3082  071C                     	;# 
  3083  071D                     	;# 
  3084  071E                     	;# 
  3085  0796                     	;# 
  3086  0797                     	;# 
  3087  0798                     	;# 
  3088  0799                     	;# 
  3089  079A                     	;# 
  3090  079B                     	;# 
  3091  080C                     	;# 
  3092  080D                     	;# 
  3093  080E                     	;# 
  3094  080F                     	;# 
  3095  0810                     	;# 
  3096  0811                     	;# 
  3097  0812                     	;# 
  3098  0813                     	;# 
  3099  0814                     	;# 
  3100  081A                     	;# 
  3101  081B                     	;# 
  3102  081C                     	;# 
  3103  081D                     	;# 
  3104  081E                     	;# 
  3105  081F                     	;# 
  3106  088C                     	;# 
  3107  088D                     	;# 
  3108  088E                     	;# 
  3109  088F                     	;# 
  3110  0890                     	;# 
  3111  0891                     	;# 
  3112  0892                     	;# 
  3113  0893                     	;# 
  3114  0895                     	;# 
  3115  0896                     	;# 
  3116  0897                     	;# 
  3117  0898                     	;# 
  3118  0899                     	;# 
  3119  089A                     	;# 
  3120  089B                     	;# 
  3121  090C                     	;# 
  3122  090E                     	;# 
  3123  090F                     	;# 
  3124  091F                     	;# 
  3125  091F                     	;# 
  3126  098F                     	;# 
  3127  098F                     	;# 
  3128  0990                     	;# 
  3129  0991                     	;# 
  3130  0992                     	;# 
  3131  0993                     	;# 
  3132  0994                     	;# 
  3133  0995                     	;# 
  3134  0996                     	;# 
  3135  0997                     	;# 
  3136  0E0F                     	;# 
  3137  0E10                     	;# 
  3138  0E11                     	;# 
  3139  0E12                     	;# 
  3140  0E13                     	;# 
  3141  0E14                     	;# 
  3142  0E15                     	;# 
  3143  0E16                     	;# 
  3144  0E17                     	;# 
  3145  0E18                     	;# 
  3146  0E19                     	;# 
  3147  0E1A                     	;# 
  3148  0E1B                     	;# 
  3149  0E1C                     	;# 
  3150  0E1D                     	;# 
  3151  0E1E                     	;# 
  3152  0E1F                     	;# 
  3153  0E20                     	;# 
  3154  0E21                     	;# 
  3155  0E22                     	;# 
  3156  0E23                     	;# 
  3157  0E24                     	;# 
  3158  0E25                     	;# 
  3159  0E26                     	;# 
  3160  0E27                     	;# 
  3161  0E28                     	;# 
  3162  0E29                     	;# 
  3163  0E2A                     	;# 
  3164  0E2B                     	;# 
  3165  0E2C                     	;# 
  3166  0E2D                     	;# 
  3167  0E2E                     	;# 
  3168  0E2F                     	;# 
  3169  0E30                     	;# 
  3170  0E31                     	;# 
  3171  0E32                     	;# 
  3172  0E33                     	;# 
  3173  0E34                     	;# 
  3174  0E35                     	;# 
  3175  0E36                     	;# 
  3176  0E37                     	;# 
  3177  0E8F                     	;# 
  3178  0E90                     	;# 
  3179  0E91                     	;# 
  3180  0E92                     	;# 
  3181  0E93                     	;# 
  3182  0E94                     	;# 
  3183  0E95                     	;# 
  3184  0E96                     	;# 
  3185  0E97                     	;# 
  3186  0E9C                     	;# 
  3187  0E9D                     	;# 
  3188  0E9E                     	;# 
  3189  0EA1                     	;# 
  3190  0EA2                     	;# 
  3191  0EA3                     	;# 
  3192  0EA4                     	;# 
  3193  0EA5                     	;# 
  3194  0EA9                     	;# 
  3195  0EAA                     	;# 
  3196  0EAB                     	;# 
  3197  0EAC                     	;# 
  3198  0EB1                     	;# 
  3199  0EB2                     	;# 
  3200  0EB3                     	;# 
  3201  0EB8                     	;# 
  3202  0EB9                     	;# 
  3203  0EBA                     	;# 
  3204  0EBB                     	;# 
  3205  0EBC                     	;# 
  3206  0EBD                     	;# 
  3207  0EBE                     	;# 
  3208  0EC3                     	;# 
  3209  0EC5                     	;# 
  3210  0EC6                     	;# 
  3211  0EC7                     	;# 
  3212  0EC8                     	;# 
  3213  0EC9                     	;# 
  3214  0ECA                     	;# 
  3215  0ECB                     	;# 
  3216  0ECC                     	;# 
  3217  0F10                     	;# 
  3218  0F11                     	;# 
  3219  0F12                     	;# 
  3220  0F13                     	;# 
  3221  0F14                     	;# 
  3222  0F15                     	;# 
  3223  0F16                     	;# 
  3224  0F17                     	;# 
  3225  0F18                     	;# 
  3226  0F19                     	;# 
  3227  0F1A                     	;# 
  3228  0F1B                     	;# 
  3229  0F1C                     	;# 
  3230  0F1D                     	;# 
  3231  0F1E                     	;# 
  3232  0F1F                     	;# 
  3233  0F20                     	;# 
  3234  0F21                     	;# 
  3235  0F22                     	;# 
  3236  0F23                     	;# 
  3237  0F24                     	;# 
  3238  0F25                     	;# 
  3239  0F26                     	;# 
  3240  0F27                     	;# 
  3241  0F38                     	;# 
  3242  0F39                     	;# 
  3243  0F3A                     	;# 
  3244  0F3B                     	;# 
  3245  0F3C                     	;# 
  3246  0F3D                     	;# 
  3247  0F3E                     	;# 
  3248  0F3F                     	;# 
  3249  0F40                     	;# 
  3250  0F41                     	;# 
  3251  0F43                     	;# 
  3252  0F44                     	;# 
  3253  0F45                     	;# 
  3254  0F46                     	;# 
  3255  0F47                     	;# 
  3256  0F48                     	;# 
  3257  0F49                     	;# 
  3258  0F4A                     	;# 
  3259  0F4B                     	;# 
  3260  0F4C                     	;# 
  3261  0F4E                     	;# 
  3262  0F4F                     	;# 
  3263  0F50                     	;# 
  3264  0F51                     	;# 
  3265  0F52                     	;# 
  3266  0F53                     	;# 
  3267  0F54                     	;# 
  3268  0F55                     	;# 
  3269  0F56                     	;# 
  3270  0F57                     	;# 
  3271  0F65                     	;# 
  3272  0F68                     	;# 
  3273  0F69                     	;# 
  3274  0F6A                     	;# 
  3275  0F6B                     	;# 
  3276  0FE4                     	;# 
  3277  0FE5                     	;# 
  3278  0FE6                     	;# 
  3279  0FE7                     	;# 
  3280  0FE8                     	;# 
  3281  0FE9                     	;# 
  3282  0FEA                     	;# 
  3283  0FEB                     	;# 
  3284  0FED                     	;# 
  3285  0FEE                     	;# 
  3286  0FEF                     	;# 
  3287  0000                     	;# 
  3288  0001                     	;# 
  3289  0002                     	;# 
  3290  0003                     	;# 
  3291  0004                     	;# 
  3292  0005                     	;# 
  3293  0006                     	;# 
  3294  0007                     	;# 
  3295  0008                     	;# 
  3296  0009                     	;# 
  3297  000A                     	;# 
  3298  000B                     	;# 
  3299  000C                     	;# 
  3300  000D                     	;# 
  3301  000E                     	;# 
  3302  0010                     	;# 
  3303  0011                     	;# 
  3304  0012                     	;# 
  3305  0013                     	;# 
  3306  0016                     	;# 
  3307  0017                     	;# 
  3308  0018                     	;# 
  3309  001C                     	;# 
  3310  001C                     	;# 
  3311  001D                     	;# 
  3312  001D                     	;# 
  3313  001E                     	;# 
  3314  001F                     	;# 
  3315  008C                     	;# 
  3316  008C                     	;# 
  3317  008D                     	;# 
  3318  008E                     	;# 
  3319  008E                     	;# 
  3320  008F                     	;# 
  3321  0090                     	;# 
  3322  0090                     	;# 
  3323  0091                     	;# 
  3324  0093                     	;# 
  3325  0094                     	;# 
  3326  0095                     	;# 
  3327  0096                     	;# 
  3328  0097                     	;# 
  3329  0098                     	;# 
  3330  0099                     	;# 
  3331  009A                     	;# 
  3332  009B                     	;# 
  3333  009C                     	;# 
  3334  009D                     	;# 
  3335  009E                     	;# 
  3336  010C                     	;# 
  3337  010D                     	;# 
  3338  010E                     	;# 
  3339  010E                     	;# 
  3340  010F                     	;# 
  3341  0110                     	;# 
  3342  0110                     	;# 
  3343  0111                     	;# 
  3344  0112                     	;# 
  3345  0112                     	;# 
  3346  0113                     	;# 
  3347  0114                     	;# 
  3348  0114                     	;# 
  3349  0115                     	;# 
  3350  0116                     	;# 
  3351  0116                     	;# 
  3352  0117                     	;# 
  3353  0119                     	;# 
  3354  0119                     	;# 
  3355  0119                     	;# 
  3356  011A                     	;# 
  3357  011A                     	;# 
  3358  011A                     	;# 
  3359  011B                     	;# 
  3360  011B                     	;# 
  3361  011B                     	;# 
  3362  011B                     	;# 
  3363  011B                     	;# 
  3364  011C                     	;# 
  3365  011C                     	;# 
  3366  011C                     	;# 
  3367  011D                     	;# 
  3368  011D                     	;# 
  3369  011D                     	;# 
  3370  011E                     	;# 
  3371  011E                     	;# 
  3372  011E                     	;# 
  3373  011F                     	;# 
  3374  011F                     	;# 
  3375  011F                     	;# 
  3376  011F                     	;# 
  3377  011F                     	;# 
  3378  018C                     	;# 
  3379  018D                     	;# 
  3380  018E                     	;# 
  3381  018F                     	;# 
  3382  0190                     	;# 
  3383  0191                     	;# 
  3384  0192                     	;# 
  3385  0196                     	;# 
  3386  0197                     	;# 
  3387  0198                     	;# 
  3388  0199                     	;# 
  3389  019A                     	;# 
  3390  019B                     	;# 
  3391  019C                     	;# 
  3392  020C                     	;# 
  3393  020C                     	;# 
  3394  020D                     	;# 
  3395  020E                     	;# 
  3396  020F                     	;# 
  3397  020F                     	;# 
  3398  0210                     	;# 
  3399  0210                     	;# 
  3400  0211                     	;# 
  3401  0211                     	;# 
  3402  0212                     	;# 
  3403  0212                     	;# 
  3404  0213                     	;# 
  3405  0214                     	;# 
  3406  0215                     	;# 
  3407  0215                     	;# 
  3408  0216                     	;# 
  3409  0216                     	;# 
  3410  0217                     	;# 
  3411  0217                     	;# 
  3412  0218                     	;# 
  3413  0218                     	;# 
  3414  0219                     	;# 
  3415  021A                     	;# 
  3416  021B                     	;# 
  3417  021B                     	;# 
  3418  021C                     	;# 
  3419  021C                     	;# 
  3420  021D                     	;# 
  3421  021D                     	;# 
  3422  021E                     	;# 
  3423  021F                     	;# 
  3424  028C                     	;# 
  3425  028C                     	;# 
  3426  028D                     	;# 
  3427  028D                     	;# 
  3428  028E                     	;# 
  3429  028F                     	;# 
  3430  0290                     	;# 
  3431  0290                     	;# 
  3432  0291                     	;# 
  3433  0292                     	;# 
  3434  0292                     	;# 
  3435  0293                     	;# 
  3436  0293                     	;# 
  3437  0294                     	;# 
  3438  0295                     	;# 
  3439  0296                     	;# 
  3440  0296                     	;# 
  3441  0297                     	;# 
  3442  0298                     	;# 
  3443  0298                     	;# 
  3444  0299                     	;# 
  3445  0299                     	;# 
  3446  029A                     	;# 
  3447  029B                     	;# 
  3448  029C                     	;# 
  3449  029C                     	;# 
  3450  029D                     	;# 
  3451  030C                     	;# 
  3452  030C                     	;# 
  3453  030D                     	;# 
  3454  030E                     	;# 
  3455  030F                     	;# 
  3456  0310                     	;# 
  3457  0310                     	;# 
  3458  0311                     	;# 
  3459  0312                     	;# 
  3460  0313                     	;# 
  3461  0314                     	;# 
  3462  0314                     	;# 
  3463  0315                     	;# 
  3464  0316                     	;# 
  3465  0317                     	;# 
  3466  0318                     	;# 
  3467  0318                     	;# 
  3468  0319                     	;# 
  3469  031A                     	;# 
  3470  031B                     	;# 
  3471  031C                     	;# 
  3472  031C                     	;# 
  3473  031D                     	;# 
  3474  031E                     	;# 
  3475  031F                     	;# 
  3476  038C                     	;# 
  3477  038C                     	;# 
  3478  038D                     	;# 
  3479  038E                     	;# 
  3480  0390                     	;# 
  3481  0390                     	;# 
  3482  0391                     	;# 
  3483  0392                     	;# 
  3484  040C                     	;# 
  3485  040D                     	;# 
  3486  040E                     	;# 
  3487  040F                     	;# 
  3488  0410                     	;# 
  3489  0411                     	;# 
  3490  0416                     	;# 
  3491  0416                     	;# 
  3492  0417                     	;# 
  3493  0418                     	;# 
  3494  0418                     	;# 
  3495  0419                     	;# 
  3496  041A                     	;# 
  3497  041A                     	;# 
  3498  041B                     	;# 
  3499  041C                     	;# 
  3500  041C                     	;# 
  3501  041D                     	;# 
  3502  041E                     	;# 
  3503  041F                     	;# 
  3504  048C                     	;# 
  3505  048C                     	;# 
  3506  048D                     	;# 
  3507  048E                     	;# 
  3508  048F                     	;# 
  3509  048F                     	;# 
  3510  0490                     	;# 
  3511  0491                     	;# 
  3512  0492                     	;# 
  3513  0492                     	;# 
  3514  0493                     	;# 
  3515  0494                     	;# 
  3516  0495                     	;# 
  3517  0495                     	;# 
  3518  0496                     	;# 
  3519  0497                     	;# 
  3520  0498                     	;# 
  3521  0499                     	;# 
  3522  049A                     	;# 
  3523  049B                     	;# 
  3524  049C                     	;# 
  3525  049D                     	;# 
  3526  050C                     	;# 
  3527  050C                     	;# 
  3528  050D                     	;# 
  3529  050E                     	;# 
  3530  050F                     	;# 
  3531  050F                     	;# 
  3532  0510                     	;# 
  3533  0511                     	;# 
  3534  0512                     	;# 
  3535  0512                     	;# 
  3536  0513                     	;# 
  3537  0514                     	;# 
  3538  0515                     	;# 
  3539  0515                     	;# 
  3540  0516                     	;# 
  3541  0517                     	;# 
  3542  0518                     	;# 
  3543  0519                     	;# 
  3544  051A                     	;# 
  3545  051B                     	;# 
  3546  051C                     	;# 
  3547  051D                     	;# 
  3548  058C                     	;# 
  3549  058C                     	;# 
  3550  058D                     	;# 
  3551  058E                     	;# 
  3552  058F                     	;# 
  3553  058F                     	;# 
  3554  0590                     	;# 
  3555  0591                     	;# 
  3556  0592                     	;# 
  3557  0593                     	;# 
  3558  060C                     	;# 
  3559  060D                     	;# 
  3560  060E                     	;# 
  3561  060F                     	;# 
  3562  0610                     	;# 
  3563  0611                     	;# 
  3564  0612                     	;# 
  3565  0613                     	;# 
  3566  0614                     	;# 
  3567  0616                     	;# 
  3568  0617                     	;# 
  3569  0618                     	;# 
  3570  0619                     	;# 
  3571  061A                     	;# 
  3572  061B                     	;# 
  3573  061C                     	;# 
  3574  061D                     	;# 
  3575  061E                     	;# 
  3576  068C                     	;# 
  3577  068D                     	;# 
  3578  068E                     	;# 
  3579  068F                     	;# 
  3580  0690                     	;# 
  3581  0691                     	;# 
  3582  0692                     	;# 
  3583  0693                     	;# 
  3584  0694                     	;# 
  3585  070C                     	;# 
  3586  070D                     	;# 
  3587  070E                     	;# 
  3588  070F                     	;# 
  3589  0710                     	;# 
  3590  0711                     	;# 
  3591  0712                     	;# 
  3592  0713                     	;# 
  3593  0714                     	;# 
  3594  0716                     	;# 
  3595  0717                     	;# 
  3596  0718                     	;# 
  3597  0719                     	;# 
  3598  071A                     	;# 
  3599  071B                     	;# 
  3600  071C                     	;# 
  3601  071D                     	;# 
  3602  071E                     	;# 
  3603  0796                     	;# 
  3604  0797                     	;# 
  3605  0798                     	;# 
  3606  0799                     	;# 
  3607  079A                     	;# 
  3608  079B                     	;# 
  3609  080C                     	;# 
  3610  080D                     	;# 
  3611  080E                     	;# 
  3612  080F                     	;# 
  3613  0810                     	;# 
  3614  0811                     	;# 
  3615  0812                     	;# 
  3616  0813                     	;# 
  3617  0814                     	;# 
  3618  081A                     	;# 
  3619  081B                     	;# 
  3620  081C                     	;# 
  3621  081D                     	;# 
  3622  081E                     	;# 
  3623  081F                     	;# 
  3624  088C                     	;# 
  3625  088D                     	;# 
  3626  088E                     	;# 
  3627  088F                     	;# 
  3628  0890                     	;# 
  3629  0891                     	;# 
  3630  0892                     	;# 
  3631  0893                     	;# 
  3632  0895                     	;# 
  3633  0896                     	;# 
  3634  0897                     	;# 
  3635  0898                     	;# 
  3636  0899                     	;# 
  3637  089A                     	;# 
  3638  089B                     	;# 
  3639  090C                     	;# 
  3640  090E                     	;# 
  3641  090F                     	;# 
  3642  091F                     	;# 
  3643  091F                     	;# 
  3644  098F                     	;# 
  3645  098F                     	;# 
  3646  0990                     	;# 
  3647  0991                     	;# 
  3648  0992                     	;# 
  3649  0993                     	;# 
  3650  0994                     	;# 
  3651  0995                     	;# 
  3652  0996                     	;# 
  3653  0997                     	;# 
  3654  0E0F                     	;# 
  3655  0E10                     	;# 
  3656  0E11                     	;# 
  3657  0E12                     	;# 
  3658  0E13                     	;# 
  3659  0E14                     	;# 
  3660  0E15                     	;# 
  3661  0E16                     	;# 
  3662  0E17                     	;# 
  3663  0E18                     	;# 
  3664  0E19                     	;# 
  3665  0E1A                     	;# 
  3666  0E1B                     	;# 
  3667  0E1C                     	;# 
  3668  0E1D                     	;# 
  3669  0E1E                     	;# 
  3670  0E1F                     	;# 
  3671  0E20                     	;# 
  3672  0E21                     	;# 
  3673  0E22                     	;# 
  3674  0E23                     	;# 
  3675  0E24                     	;# 
  3676  0E25                     	;# 
  3677  0E26                     	;# 
  3678  0E27                     	;# 
  3679  0E28                     	;# 
  3680  0E29                     	;# 
  3681  0E2A                     	;# 
  3682  0E2B                     	;# 
  3683  0E2C                     	;# 
  3684  0E2D                     	;# 
  3685  0E2E                     	;# 
  3686  0E2F                     	;# 
  3687  0E30                     	;# 
  3688  0E31                     	;# 
  3689  0E32                     	;# 
  3690  0E33                     	;# 
  3691  0E34                     	;# 
  3692  0E35                     	;# 
  3693  0E36                     	;# 
  3694  0E37                     	;# 
  3695  0E8F                     	;# 
  3696  0E90                     	;# 
  3697  0E91                     	;# 
  3698  0E92                     	;# 
  3699  0E93                     	;# 
  3700  0E94                     	;# 
  3701  0E95                     	;# 
  3702  0E96                     	;# 
  3703  0E97                     	;# 
  3704  0E9C                     	;# 
  3705  0E9D                     	;# 
  3706  0E9E                     	;# 
  3707  0EA1                     	;# 
  3708  0EA2                     	;# 
  3709  0EA3                     	;# 
  3710  0EA4                     	;# 
  3711  0EA5                     	;# 
  3712  0EA9                     	;# 
  3713  0EAA                     	;# 
  3714  0EAB                     	;# 
  3715  0EAC                     	;# 
  3716  0EB1                     	;# 
  3717  0EB2                     	;# 
  3718  0EB3                     	;# 
  3719  0EB8                     	;# 
  3720  0EB9                     	;# 
  3721  0EBA                     	;# 
  3722  0EBB                     	;# 
  3723  0EBC                     	;# 
  3724  0EBD                     	;# 
  3725  0EBE                     	;# 
  3726  0EC3                     	;# 
  3727  0EC5                     	;# 
  3728  0EC6                     	;# 
  3729  0EC7                     	;# 
  3730  0EC8                     	;# 
  3731  0EC9                     	;# 
  3732  0ECA                     	;# 
  3733  0ECB                     	;# 
  3734  0ECC                     	;# 
  3735  0F10                     	;# 
  3736  0F11                     	;# 
  3737  0F12                     	;# 
  3738  0F13                     	;# 
  3739  0F14                     	;# 
  3740  0F15                     	;# 
  3741  0F16                     	;# 
  3742  0F17                     	;# 
  3743  0F18                     	;# 
  3744  0F19                     	;# 
  3745  0F1A                     	;# 
  3746  0F1B                     	;# 
  3747  0F1C                     	;# 
  3748  0F1D                     	;# 
  3749  0F1E                     	;# 
  3750  0F1F                     	;# 
  3751  0F20                     	;# 
  3752  0F21                     	;# 
  3753  0F22                     	;# 
  3754  0F23                     	;# 
  3755  0F24                     	;# 
  3756  0F25                     	;# 
  3757  0F26                     	;# 
  3758  0F27                     	;# 
  3759  0F38                     	;# 
  3760  0F39                     	;# 
  3761  0F3A                     	;# 
  3762  0F3B                     	;# 
  3763  0F3C                     	;# 
  3764  0F3D                     	;# 
  3765  0F3E                     	;# 
  3766  0F3F                     	;# 
  3767  0F40                     	;# 
  3768  0F41                     	;# 
  3769  0F43                     	;# 
  3770  0F44                     	;# 
  3771  0F45                     	;# 
  3772  0F46                     	;# 
  3773  0F47                     	;# 
  3774  0F48                     	;# 
  3775  0F49                     	;# 
  3776  0F4A                     	;# 
  3777  0F4B                     	;# 
  3778  0F4C                     	;# 
  3779  0F4E                     	;# 
  3780  0F4F                     	;# 
  3781  0F50                     	;# 
  3782  0F51                     	;# 
  3783  0F52                     	;# 
  3784  0F53                     	;# 
  3785  0F54                     	;# 
  3786  0F55                     	;# 
  3787  0F56                     	;# 
  3788  0F57                     	;# 
  3789  0F65                     	;# 
  3790  0F68                     	;# 
  3791  0F69                     	;# 
  3792  0F6A                     	;# 
  3793  0F6B                     	;# 
  3794  0FE4                     	;# 
  3795  0FE5                     	;# 
  3796  0FE6                     	;# 
  3797  0FE7                     	;# 
  3798  0FE8                     	;# 
  3799  0FE9                     	;# 
  3800  0FEA                     	;# 
  3801  0FEB                     	;# 
  3802  0FED                     	;# 
  3803  0FEE                     	;# 
  3804  0FEF                     	;# 
  3805  0000                     	;# 
  3806  0001                     	;# 
  3807  0002                     	;# 
  3808  0003                     	;# 
  3809  0004                     	;# 
  3810  0005                     	;# 
  3811  0006                     	;# 
  3812  0007                     	;# 
  3813  0008                     	;# 
  3814  0009                     	;# 
  3815  000A                     	;# 
  3816  000B                     	;# 
  3817  000C                     	;# 
  3818  000D                     	;# 
  3819  000E                     	;# 
  3820  0010                     	;# 
  3821  0011                     	;# 
  3822  0012                     	;# 
  3823  0013                     	;# 
  3824  0016                     	;# 
  3825  0017                     	;# 
  3826  0018                     	;# 
  3827  001C                     	;# 
  3828  001C                     	;# 
  3829  001D                     	;# 
  3830  001D                     	;# 
  3831  001E                     	;# 
  3832  001F                     	;# 
  3833  008C                     	;# 
  3834  008C                     	;# 
  3835  008D                     	;# 
  3836  008E                     	;# 
  3837  008E                     	;# 
  3838  008F                     	;# 
  3839  0090                     	;# 
  3840  0090                     	;# 
  3841  0091                     	;# 
  3842  0093                     	;# 
  3843  0094                     	;# 
  3844  0095                     	;# 
  3845  0096                     	;# 
  3846  0097                     	;# 
  3847  0098                     	;# 
  3848  0099                     	;# 
  3849  009A                     	;# 
  3850  009B                     	;# 
  3851  009C                     	;# 
  3852  009D                     	;# 
  3853  009E                     	;# 
  3854  010C                     	;# 
  3855  010D                     	;# 
  3856  010E                     	;# 
  3857  010E                     	;# 
  3858  010F                     	;# 
  3859  0110                     	;# 
  3860  0110                     	;# 
  3861  0111                     	;# 
  3862  0112                     	;# 
  3863  0112                     	;# 
  3864  0113                     	;# 
  3865  0114                     	;# 
  3866  0114                     	;# 
  3867  0115                     	;# 
  3868  0116                     	;# 
  3869  0116                     	;# 
  3870  0117                     	;# 
  3871  0119                     	;# 
  3872  0119                     	;# 
  3873  0119                     	;# 
  3874  011A                     	;# 
  3875  011A                     	;# 
  3876  011A                     	;# 
  3877  011B                     	;# 
  3878  011B                     	;# 
  3879  011B                     	;# 
  3880  011B                     	;# 
  3881  011B                     	;# 
  3882  011C                     	;# 
  3883  011C                     	;# 
  3884  011C                     	;# 
  3885  011D                     	;# 
  3886  011D                     	;# 
  3887  011D                     	;# 
  3888  011E                     	;# 
  3889  011E                     	;# 
  3890  011E                     	;# 
  3891  011F                     	;# 
  3892  011F                     	;# 
  3893  011F                     	;# 
  3894  011F                     	;# 
  3895  011F                     	;# 
  3896  018C                     	;# 
  3897  018D                     	;# 
  3898  018E                     	;# 
  3899  018F                     	;# 
  3900  0190                     	;# 
  3901  0191                     	;# 
  3902  0192                     	;# 
  3903  0196                     	;# 
  3904  0197                     	;# 
  3905  0198                     	;# 
  3906  0199                     	;# 
  3907  019A                     	;# 
  3908  019B                     	;# 
  3909  019C                     	;# 
  3910  020C                     	;# 
  3911  020C                     	;# 
  3912  020D                     	;# 
  3913  020E                     	;# 
  3914  020F                     	;# 
  3915  020F                     	;# 
  3916  0210                     	;# 
  3917  0210                     	;# 
  3918  0211                     	;# 
  3919  0211                     	;# 
  3920  0212                     	;# 
  3921  0212                     	;# 
  3922  0213                     	;# 
  3923  0214                     	;# 
  3924  0215                     	;# 
  3925  0215                     	;# 
  3926  0216                     	;# 
  3927  0216                     	;# 
  3928  0217                     	;# 
  3929  0217                     	;# 
  3930  0218                     	;# 
  3931  0218                     	;# 
  3932  0219                     	;# 
  3933  021A                     	;# 
  3934  021B                     	;# 
  3935  021B                     	;# 
  3936  021C                     	;# 
  3937  021C                     	;# 
  3938  021D                     	;# 
  3939  021D                     	;# 
  3940  021E                     	;# 
  3941  021F                     	;# 
  3942  028C                     	;# 
  3943  028C                     	;# 
  3944  028D                     	;# 
  3945  028D                     	;# 
  3946  028E                     	;# 
  3947  028F                     	;# 
  3948  0290                     	;# 
  3949  0290                     	;# 
  3950  0291                     	;# 
  3951  0292                     	;# 
  3952  0292                     	;# 
  3953  0293                     	;# 
  3954  0293                     	;# 
  3955  0294                     	;# 
  3956  0295                     	;# 
  3957  0296                     	;# 
  3958  0296                     	;# 
  3959  0297                     	;# 
  3960  0298                     	;# 
  3961  0298                     	;# 
  3962  0299                     	;# 
  3963  0299                     	;# 
  3964  029A                     	;# 
  3965  029B                     	;# 
  3966  029C                     	;# 
  3967  029C                     	;# 
  3968  029D                     	;# 
  3969  030C                     	;# 
  3970  030C                     	;# 
  3971  030D                     	;# 
  3972  030E                     	;# 
  3973  030F                     	;# 
  3974  0310                     	;# 
  3975  0310                     	;# 
  3976  0311                     	;# 
  3977  0312                     	;# 
  3978  0313                     	;# 
  3979  0314                     	;# 
  3980  0314                     	;# 
  3981  0315                     	;# 
  3982  0316                     	;# 
  3983  0317                     	;# 
  3984  0318                     	;# 
  3985  0318                     	;# 
  3986  0319                     	;# 
  3987  031A                     	;# 
  3988  031B                     	;# 
  3989  031C                     	;# 
  3990  031C                     	;# 
  3991  031D                     	;# 
  3992  031E                     	;# 
  3993  031F                     	;# 
  3994  038C                     	;# 
  3995  038C                     	;# 
  3996  038D                     	;# 
  3997  038E                     	;# 
  3998  0390                     	;# 
  3999  0390                     	;# 
  4000  0391                     	;# 
  4001  0392                     	;# 
  4002  040C                     	;# 
  4003  040D                     	;# 
  4004  040E                     	;# 
  4005  040F                     	;# 
  4006  0410                     	;# 
  4007  0411                     	;# 
  4008  0416                     	;# 
  4009  0416                     	;# 
  4010  0417                     	;# 
  4011  0418                     	;# 
  4012  0418                     	;# 
  4013  0419                     	;# 
  4014  041A                     	;# 
  4015  041A                     	;# 
  4016  041B                     	;# 
  4017  041C                     	;# 
  4018  041C                     	;# 
  4019  041D                     	;# 
  4020  041E                     	;# 
  4021  041F                     	;# 
  4022  048C                     	;# 
  4023  048C                     	;# 
  4024  048D                     	;# 
  4025  048E                     	;# 
  4026  048F                     	;# 
  4027  048F                     	;# 
  4028  0490                     	;# 
  4029  0491                     	;# 
  4030  0492                     	;# 
  4031  0492                     	;# 
  4032  0493                     	;# 
  4033  0494                     	;# 
  4034  0495                     	;# 
  4035  0495                     	;# 
  4036  0496                     	;# 
  4037  0497                     	;# 
  4038  0498                     	;# 
  4039  0499                     	;# 
  4040  049A                     	;# 
  4041  049B                     	;# 
  4042  049C                     	;# 
  4043  049D                     	;# 
  4044  050C                     	;# 
  4045  050C                     	;# 
  4046  050D                     	;# 
  4047  050E                     	;# 
  4048  050F                     	;# 
  4049  050F                     	;# 
  4050  0510                     	;# 
  4051  0511                     	;# 
  4052  0512                     	;# 
  4053  0512                     	;# 
  4054  0513                     	;# 
  4055  0514                     	;# 
  4056  0515                     	;# 
  4057  0515                     	;# 
  4058  0516                     	;# 
  4059  0517                     	;# 
  4060  0518                     	;# 
  4061  0519                     	;# 
  4062  051A                     	;# 
  4063  051B                     	;# 
  4064  051C                     	;# 
  4065  051D                     	;# 
  4066  058C                     	;# 
  4067  058C                     	;# 
  4068  058D                     	;# 
  4069  058E                     	;# 
  4070  058F                     	;# 
  4071  058F                     	;# 
  4072  0590                     	;# 
  4073  0591                     	;# 
  4074  0592                     	;# 
  4075  0593                     	;# 
  4076  060C                     	;# 
  4077  060D                     	;# 
  4078  060E                     	;# 
  4079  060F                     	;# 
  4080  0610                     	;# 
  4081  0611                     	;# 
  4082  0612                     	;# 
  4083  0613                     	;# 
  4084  0614                     	;# 
  4085  0616                     	;# 
  4086  0617                     	;# 
  4087  0618                     	;# 
  4088  0619                     	;# 
  4089  061A                     	;# 
  4090  061B                     	;# 
  4091  061C                     	;# 
  4092  061D                     	;# 
  4093  061E                     	;# 
  4094  068C                     	;# 
  4095  068D                     	;# 
  4096  068E                     	;# 
  4097  068F                     	;# 
  4098  0690                     	;# 
  4099  0691                     	;# 
  4100  0692                     	;# 
  4101  0693                     	;# 
  4102  0694                     	;# 
  4103  070C                     	;# 
  4104  070D                     	;# 
  4105  070E                     	;# 
  4106  070F                     	;# 
  4107  0710                     	;# 
  4108  0711                     	;# 
  4109  0712                     	;# 
  4110  0713                     	;# 
  4111  0714                     	;# 
  4112  0716                     	;# 
  4113  0717                     	;# 
  4114  0718                     	;# 
  4115  0719                     	;# 
  4116  071A                     	;# 
  4117  071B                     	;# 
  4118  071C                     	;# 
  4119  071D                     	;# 
  4120  071E                     	;# 
  4121  0796                     	;# 
  4122  0797                     	;# 
  4123  0798                     	;# 
  4124  0799                     	;# 
  4125  079A                     	;# 
  4126  079B                     	;# 
  4127  080C                     	;# 
  4128  080D                     	;# 
  4129  080E                     	;# 
  4130  080F                     	;# 
  4131  0810                     	;# 
  4132  0811                     	;# 
  4133  0812                     	;# 
  4134  0813                     	;# 
  4135  0814                     	;# 
  4136  081A                     	;# 
  4137  081B                     	;# 
  4138  081C                     	;# 
  4139  081D                     	;# 
  4140  081E                     	;# 
  4141  081F                     	;# 
  4142  088C                     	;# 
  4143  088D                     	;# 
  4144  088E                     	;# 
  4145  088F                     	;# 
  4146  0890                     	;# 
  4147  0891                     	;# 
  4148  0892                     	;# 
  4149  0893                     	;# 
  4150  0895                     	;# 
  4151  0896                     	;# 
  4152  0897                     	;# 
  4153  0898                     	;# 
  4154  0899                     	;# 
  4155  089A                     	;# 
  4156  089B                     	;# 
  4157  090C                     	;# 
  4158  090E                     	;# 
  4159  090F                     	;# 
  4160  091F                     	;# 
  4161  091F                     	;# 
  4162  098F                     	;# 
  4163  098F                     	;# 
  4164  0990                     	;# 
  4165  0991                     	;# 
  4166  0992                     	;# 
  4167  0993                     	;# 
  4168  0994                     	;# 
  4169  0995                     	;# 
  4170  0996                     	;# 
  4171  0997                     	;# 
  4172  0E0F                     	;# 
  4173  0E10                     	;# 
  4174  0E11                     	;# 
  4175  0E12                     	;# 
  4176  0E13                     	;# 
  4177  0E14                     	;# 
  4178  0E15                     	;# 
  4179  0E16                     	;# 
  4180  0E17                     	;# 
  4181  0E18                     	;# 
  4182  0E19                     	;# 
  4183  0E1A                     	;# 
  4184  0E1B                     	;# 
  4185  0E1C                     	;# 
  4186  0E1D                     	;# 
  4187  0E1E                     	;# 
  4188  0E1F                     	;# 
  4189  0E20                     	;# 
  4190  0E21                     	;# 
  4191  0E22                     	;# 
  4192  0E23                     	;# 
  4193  0E24                     	;# 
  4194  0E25                     	;# 
  4195  0E26                     	;# 
  4196  0E27                     	;# 
  4197  0E28                     	;# 
  4198  0E29                     	;# 
  4199  0E2A                     	;# 
  4200  0E2B                     	;# 
  4201  0E2C                     	;# 
  4202  0E2D                     	;# 
  4203  0E2E                     	;# 
  4204  0E2F                     	;# 
  4205  0E30                     	;# 
  4206  0E31                     	;# 
  4207  0E32                     	;# 
  4208  0E33                     	;# 
  4209  0E34                     	;# 
  4210  0E35                     	;# 
  4211  0E36                     	;# 
  4212  0E37                     	;# 
  4213  0E8F                     	;# 
  4214  0E90                     	;# 
  4215  0E91                     	;# 
  4216  0E92                     	;# 
  4217  0E93                     	;# 
  4218  0E94                     	;# 
  4219  0E95                     	;# 
  4220  0E96                     	;# 
  4221  0E97                     	;# 
  4222  0E9C                     	;# 
  4223  0E9D                     	;# 
  4224  0E9E                     	;# 
  4225  0EA1                     	;# 
  4226  0EA2                     	;# 
  4227  0EA3                     	;# 
  4228  0EA4                     	;# 
  4229  0EA5                     	;# 
  4230  0EA9                     	;# 
  4231  0EAA                     	;# 
  4232  0EAB                     	;# 
  4233  0EAC                     	;# 
  4234  0EB1                     	;# 
  4235  0EB2                     	;# 
  4236  0EB3                     	;# 
  4237  0EB8                     	;# 
  4238  0EB9                     	;# 
  4239  0EBA                     	;# 
  4240  0EBB                     	;# 
  4241  0EBC                     	;# 
  4242  0EBD                     	;# 
  4243  0EBE                     	;# 
  4244  0EC3                     	;# 
  4245  0EC5                     	;# 
  4246  0EC6                     	;# 
  4247  0EC7                     	;# 
  4248  0EC8                     	;# 
  4249  0EC9                     	;# 
  4250  0ECA                     	;# 
  4251  0ECB                     	;# 
  4252  0ECC                     	;# 
  4253  0F10                     	;# 
  4254  0F11                     	;# 
  4255  0F12                     	;# 
  4256  0F13                     	;# 
  4257  0F14                     	;# 
  4258  0F15                     	;# 
  4259  0F16                     	;# 
  4260  0F17                     	;# 
  4261  0F18                     	;# 
  4262  0F19                     	;# 
  4263  0F1A                     	;# 
  4264  0F1B                     	;# 
  4265  0F1C                     	;# 
  4266  0F1D                     	;# 
  4267  0F1E                     	;# 
  4268  0F1F                     	;# 
  4269  0F20                     	;# 
  4270  0F21                     	;# 
  4271  0F22                     	;# 
  4272  0F23                     	;# 
  4273  0F24                     	;# 
  4274  0F25                     	;# 
  4275  0F26                     	;# 
  4276  0F27                     	;# 
  4277  0F38                     	;# 
  4278  0F39                     	;# 
  4279  0F3A                     	;# 
  4280  0F3B                     	;# 
  4281  0F3C                     	;# 
  4282  0F3D                     	;# 
  4283  0F3E                     	;# 
  4284  0F3F                     	;# 
  4285  0F40                     	;# 
  4286  0F41                     	;# 
  4287  0F43                     	;# 
  4288  0F44                     	;# 
  4289  0F45                     	;# 
  4290  0F46                     	;# 
  4291  0F47                     	;# 
  4292  0F48                     	;# 
  4293  0F49                     	;# 
  4294  0F4A                     	;# 
  4295  0F4B                     	;# 
  4296  0F4C                     	;# 
  4297  0F4E                     	;# 
  4298  0F4F                     	;# 
  4299  0F50                     	;# 
  4300  0F51                     	;# 
  4301  0F52                     	;# 
  4302  0F53                     	;# 
  4303  0F54                     	;# 
  4304  0F55                     	;# 
  4305  0F56                     	;# 
  4306  0F57                     	;# 
  4307  0F65                     	;# 
  4308  0F68                     	;# 
  4309  0F69                     	;# 
  4310  0F6A                     	;# 
  4311  0F6B                     	;# 
  4312  0FE4                     	;# 
  4313  0FE5                     	;# 
  4314  0FE6                     	;# 
  4315  0FE7                     	;# 
  4316  0FE8                     	;# 
  4317  0FE9                     	;# 
  4318  0FEA                     	;# 
  4319  0FEB                     	;# 
  4320  0FED                     	;# 
  4321  0FEE                     	;# 
  4322  0FEF                     	;# 
  4323  0000                     	;# 
  4324  0001                     	;# 
  4325  0002                     	;# 
  4326  0003                     	;# 
  4327  0004                     	;# 
  4328  0005                     	;# 
  4329  0006                     	;# 
  4330  0007                     	;# 
  4331  0008                     	;# 
  4332  0009                     	;# 
  4333  000A                     	;# 
  4334  000B                     	;# 
  4335  000C                     	;# 
  4336  000D                     	;# 
  4337  000E                     	;# 
  4338  0010                     	;# 
  4339  0011                     	;# 
  4340  0012                     	;# 
  4341  0013                     	;# 
  4342  0016                     	;# 
  4343  0017                     	;# 
  4344  0018                     	;# 
  4345  001C                     	;# 
  4346  001C                     	;# 
  4347  001D                     	;# 
  4348  001D                     	;# 
  4349  001E                     	;# 
  4350  001F                     	;# 
  4351  008C                     	;# 
  4352  008C                     	;# 
  4353  008D                     	;# 
  4354  008E                     	;# 
  4355  008E                     	;# 
  4356  008F                     	;# 
  4357  0090                     	;# 
  4358  0090                     	;# 
  4359  0091                     	;# 
  4360  0093                     	;# 
  4361  0094                     	;# 
  4362  0095                     	;# 
  4363  0096                     	;# 
  4364  0097                     	;# 
  4365  0098                     	;# 
  4366  0099                     	;# 
  4367  009A                     	;# 
  4368  009B                     	;# 
  4369  009C                     	;# 
  4370  009D                     	;# 
  4371  009E                     	;# 
  4372  010C                     	;# 
  4373  010D                     	;# 
  4374  010E                     	;# 
  4375  010E                     	;# 
  4376  010F                     	;# 
  4377  0110                     	;# 
  4378  0110                     	;# 
  4379  0111                     	;# 
  4380  0112                     	;# 
  4381  0112                     	;# 
  4382  0113                     	;# 
  4383  0114                     	;# 
  4384  0114                     	;# 
  4385  0115                     	;# 
  4386  0116                     	;# 
  4387  0116                     	;# 
  4388  0117                     	;# 
  4389  0119                     	;# 
  4390  0119                     	;# 
  4391  0119                     	;# 
  4392  011A                     	;# 
  4393  011A                     	;# 
  4394  011A                     	;# 
  4395  011B                     	;# 
  4396  011B                     	;# 
  4397  011B                     	;# 
  4398  011B                     	;# 
  4399  011B                     	;# 
  4400  011C                     	;# 
  4401  011C                     	;# 
  4402  011C                     	;# 
  4403  011D                     	;# 
  4404  011D                     	;# 
  4405  011D                     	;# 
  4406  011E                     	;# 
  4407  011E                     	;# 
  4408  011E                     	;# 
  4409  011F                     	;# 
  4410  011F                     	;# 
  4411  011F                     	;# 
  4412  011F                     	;# 
  4413  011F                     	;# 
  4414  018C                     	;# 
  4415  018D                     	;# 
  4416  018E                     	;# 
  4417  018F                     	;# 
  4418  0190                     	;# 
  4419  0191                     	;# 
  4420  0192                     	;# 
  4421  0196                     	;# 
  4422  0197                     	;# 
  4423  0198                     	;# 
  4424  0199                     	;# 
  4425  019A                     	;# 
  4426  019B                     	;# 
  4427  019C                     	;# 
  4428  020C                     	;# 
  4429  020C                     	;# 
  4430  020D                     	;# 
  4431  020E                     	;# 
  4432  020F                     	;# 
  4433  020F                     	;# 
  4434  0210                     	;# 
  4435  0210                     	;# 
  4436  0211                     	;# 
  4437  0211                     	;# 
  4438  0212                     	;# 
  4439  0212                     	;# 
  4440  0213                     	;# 
  4441  0214                     	;# 
  4442  0215                     	;# 
  4443  0215                     	;# 
  4444  0216                     	;# 
  4445  0216                     	;# 
  4446  0217                     	;# 
  4447  0217                     	;# 
  4448  0218                     	;# 
  4449  0218                     	;# 
  4450  0219                     	;# 
  4451  021A                     	;# 
  4452  021B                     	;# 
  4453  021B                     	;# 
  4454  021C                     	;# 
  4455  021C                     	;# 
  4456  021D                     	;# 
  4457  021D                     	;# 
  4458  021E                     	;# 
  4459  021F                     	;# 
  4460  028C                     	;# 
  4461  028C                     	;# 
  4462  028D                     	;# 
  4463  028D                     	;# 
  4464  028E                     	;# 
  4465  028F                     	;# 
  4466  0290                     	;# 
  4467  0290                     	;# 
  4468  0291                     	;# 
  4469  0292                     	;# 
  4470  0292                     	;# 
  4471  0293                     	;# 
  4472  0293                     	;# 
  4473  0294                     	;# 
  4474  0295                     	;# 
  4475  0296                     	;# 
  4476  0296                     	;# 
  4477  0297                     	;# 
  4478  0298                     	;# 
  4479  0298                     	;# 
  4480  0299                     	;# 
  4481  0299                     	;# 
  4482  029A                     	;# 
  4483  029B                     	;# 
  4484  029C                     	;# 
  4485  029C                     	;# 
  4486  029D                     	;# 
  4487  030C                     	;# 
  4488  030C                     	;# 
  4489  030D                     	;# 
  4490  030E                     	;# 
  4491  030F                     	;# 
  4492  0310                     	;# 
  4493  0310                     	;# 
  4494  0311                     	;# 
  4495  0312                     	;# 
  4496  0313                     	;# 
  4497  0314                     	;# 
  4498  0314                     	;# 
  4499  0315                     	;# 
  4500  0316                     	;# 
  4501  0317                     	;# 
  4502  0318                     	;# 
  4503  0318                     	;# 
  4504  0319                     	;# 
  4505  031A                     	;# 
  4506  031B                     	;# 
  4507  031C                     	;# 
  4508  031C                     	;# 
  4509  031D                     	;# 
  4510  031E                     	;# 
  4511  031F                     	;# 
  4512  038C                     	;# 
  4513  038C                     	;# 
  4514  038D                     	;# 
  4515  038E                     	;# 
  4516  0390                     	;# 
  4517  0390                     	;# 
  4518  0391                     	;# 
  4519  0392                     	;# 
  4520  040C                     	;# 
  4521  040D                     	;# 
  4522  040E                     	;# 
  4523  040F                     	;# 
  4524  0410                     	;# 
  4525  0411                     	;# 
  4526  0416                     	;# 
  4527  0416                     	;# 
  4528  0417                     	;# 
  4529  0418                     	;# 
  4530  0418                     	;# 
  4531  0419                     	;# 
  4532  041A                     	;# 
  4533  041A                     	;# 
  4534  041B                     	;# 
  4535  041C                     	;# 
  4536  041C                     	;# 
  4537  041D                     	;# 
  4538  041E                     	;# 
  4539  041F                     	;# 
  4540  048C                     	;# 
  4541  048C                     	;# 
  4542  048D                     	;# 
  4543  048E                     	;# 
  4544  048F                     	;# 
  4545  048F                     	;# 
  4546  0490                     	;# 
  4547  0491                     	;# 
  4548  0492                     	;# 
  4549  0492                     	;# 
  4550  0493                     	;# 
  4551  0494                     	;# 
  4552  0495                     	;# 
  4553  0495                     	;# 
  4554  0496                     	;# 
  4555  0497                     	;# 
  4556  0498                     	;# 
  4557  0499                     	;# 
  4558  049A                     	;# 
  4559  049B                     	;# 
  4560  049C                     	;# 
  4561  049D                     	;# 
  4562  050C                     	;# 
  4563  050C                     	;# 
  4564  050D                     	;# 
  4565  050E                     	;# 
  4566  050F                     	;# 
  4567  050F                     	;# 
  4568  0510                     	;# 
  4569  0511                     	;# 
  4570  0512                     	;# 
  4571  0512                     	;# 
  4572  0513                     	;# 
  4573  0514                     	;# 
  4574  0515                     	;# 
  4575  0515                     	;# 
  4576  0516                     	;# 
  4577  0517                     	;# 
  4578  0518                     	;# 
  4579  0519                     	;# 
  4580  051A                     	;# 
  4581  051B                     	;# 
  4582  051C                     	;# 
  4583  051D                     	;# 
  4584  058C                     	;# 
  4585  058C                     	;# 
  4586  058D                     	;# 
  4587  058E                     	;# 
  4588  058F                     	;# 
  4589  058F                     	;# 
  4590  0590                     	;# 
  4591  0591                     	;# 
  4592  0592                     	;# 
  4593  0593                     	;# 
  4594  060C                     	;# 
  4595  060D                     	;# 
  4596  060E                     	;# 
  4597  060F                     	;# 
  4598  0610                     	;# 
  4599  0611                     	;# 
  4600  0612                     	;# 
  4601  0613                     	;# 
  4602  0614                     	;# 
  4603  0616                     	;# 
  4604  0617                     	;# 
  4605  0618                     	;# 
  4606  0619                     	;# 
  4607  061A                     	;# 
  4608  061B                     	;# 
  4609  061C                     	;# 
  4610  061D                     	;# 
  4611  061E                     	;# 
  4612  068C                     	;# 
  4613  068D                     	;# 
  4614  068E                     	;# 
  4615  068F                     	;# 
  4616  0690                     	;# 
  4617  0691                     	;# 
  4618  0692                     	;# 
  4619  0693                     	;# 
  4620  0694                     	;# 
  4621  070C                     	;# 
  4622  070D                     	;# 
  4623  070E                     	;# 
  4624  070F                     	;# 
  4625  0710                     	;# 
  4626  0711                     	;# 
  4627  0712                     	;# 
  4628  0713                     	;# 
  4629  0714                     	;# 
  4630  0716                     	;# 
  4631  0717                     	;# 
  4632  0718                     	;# 
  4633  0719                     	;# 
  4634  071A                     	;# 
  4635  071B                     	;# 
  4636  071C                     	;# 
  4637  071D                     	;# 
  4638  071E                     	;# 
  4639  0796                     	;# 
  4640  0797                     	;# 
  4641  0798                     	;# 
  4642  0799                     	;# 
  4643  079A                     	;# 
  4644  079B                     	;# 
  4645  080C                     	;# 
  4646  080D                     	;# 
  4647  080E                     	;# 
  4648  080F                     	;# 
  4649  0810                     	;# 
  4650  0811                     	;# 
  4651  0812                     	;# 
  4652  0813                     	;# 
  4653  0814                     	;# 
  4654  081A                     	;# 
  4655  081B                     	;# 
  4656  081C                     	;# 
  4657  081D                     	;# 
  4658  081E                     	;# 
  4659  081F                     	;# 
  4660  088C                     	;# 
  4661  088D                     	;# 
  4662  088E                     	;# 
  4663  088F                     	;# 
  4664  0890                     	;# 
  4665  0891                     	;# 
  4666  0892                     	;# 
  4667  0893                     	;# 
  4668  0895                     	;# 
  4669  0896                     	;# 
  4670  0897                     	;# 
  4671  0898                     	;# 
  4672  0899                     	;# 
  4673  089A                     	;# 
  4674  089B                     	;# 
  4675  090C                     	;# 
  4676  090E                     	;# 
  4677  090F                     	;# 
  4678  091F                     	;# 
  4679  091F                     	;# 
  4680  098F                     	;# 
  4681  098F                     	;# 
  4682  0990                     	;# 
  4683  0991                     	;# 
  4684  0992                     	;# 
  4685  0993                     	;# 
  4686  0994                     	;# 
  4687  0995                     	;# 
  4688  0996                     	;# 
  4689  0997                     	;# 
  4690  0E0F                     	;# 
  4691  0E10                     	;# 
  4692  0E11                     	;# 
  4693  0E12                     	;# 
  4694  0E13                     	;# 
  4695  0E14                     	;# 
  4696  0E15                     	;# 
  4697  0E16                     	;# 
  4698  0E17                     	;# 
  4699  0E18                     	;# 
  4700  0E19                     	;# 
  4701  0E1A                     	;# 
  4702  0E1B                     	;# 
  4703  0E1C                     	;# 
  4704  0E1D                     	;# 
  4705  0E1E                     	;# 
  4706  0E1F                     	;# 
  4707  0E20                     	;# 
  4708  0E21                     	;# 
  4709  0E22                     	;# 
  4710  0E23                     	;# 
  4711  0E24                     	;# 
  4712  0E25                     	;# 
  4713  0E26                     	;# 
  4714  0E27                     	;# 
  4715  0E28                     	;# 
  4716  0E29                     	;# 
  4717  0E2A                     	;# 
  4718  0E2B                     	;# 
  4719  0E2C                     	;# 
  4720  0E2D                     	;# 
  4721  0E2E                     	;# 
  4722  0E2F                     	;# 
  4723  0E30                     	;# 
  4724  0E31                     	;# 
  4725  0E32                     	;# 
  4726  0E33                     	;# 
  4727  0E34                     	;# 
  4728  0E35                     	;# 
  4729  0E36                     	;# 
  4730  0E37                     	;# 
  4731  0E8F                     	;# 
  4732  0E90                     	;# 
  4733  0E91                     	;# 
  4734  0E92                     	;# 
  4735  0E93                     	;# 
  4736  0E94                     	;# 
  4737  0E95                     	;# 
  4738  0E96                     	;# 
  4739  0E97                     	;# 
  4740  0E9C                     	;# 
  4741  0E9D                     	;# 
  4742  0E9E                     	;# 
  4743  0EA1                     	;# 
  4744  0EA2                     	;# 
  4745  0EA3                     	;# 
  4746  0EA4                     	;# 
  4747  0EA5                     	;# 
  4748  0EA9                     	;# 
  4749  0EAA                     	;# 
  4750  0EAB                     	;# 
  4751  0EAC                     	;# 
  4752  0EB1                     	;# 
  4753  0EB2                     	;# 
  4754  0EB3                     	;# 
  4755  0EB8                     	;# 
  4756  0EB9                     	;# 
  4757  0EBA                     	;# 
  4758  0EBB                     	;# 
  4759  0EBC                     	;# 
  4760  0EBD                     	;# 
  4761  0EBE                     	;# 
  4762  0EC3                     	;# 
  4763  0EC5                     	;# 
  4764  0EC6                     	;# 
  4765  0EC7                     	;# 
  4766  0EC8                     	;# 
  4767  0EC9                     	;# 
  4768  0ECA                     	;# 
  4769  0ECB                     	;# 
  4770  0ECC                     	;# 
  4771  0F10                     	;# 
  4772  0F11                     	;# 
  4773  0F12                     	;# 
  4774  0F13                     	;# 
  4775  0F14                     	;# 
  4776  0F15                     	;# 
  4777  0F16                     	;# 
  4778  0F17                     	;# 
  4779  0F18                     	;# 
  4780  0F19                     	;# 
  4781  0F1A                     	;# 
  4782  0F1B                     	;# 
  4783  0F1C                     	;# 
  4784  0F1D                     	;# 
  4785  0F1E                     	;# 
  4786  0F1F                     	;# 
  4787  0F20                     	;# 
  4788  0F21                     	;# 
  4789  0F22                     	;# 
  4790  0F23                     	;# 
  4791  0F24                     	;# 
  4792  0F25                     	;# 
  4793  0F26                     	;# 
  4794  0F27                     	;# 
  4795  0F38                     	;# 
  4796  0F39                     	;# 
  4797  0F3A                     	;# 
  4798  0F3B                     	;# 
  4799  0F3C                     	;# 
  4800  0F3D                     	;# 
  4801  0F3E                     	;# 
  4802  0F3F                     	;# 
  4803  0F40                     	;# 
  4804  0F41                     	;# 
  4805  0F43                     	;# 
  4806  0F44                     	;# 
  4807  0F45                     	;# 
  4808  0F46                     	;# 
  4809  0F47                     	;# 
  4810  0F48                     	;# 
  4811  0F49                     	;# 
  4812  0F4A                     	;# 
  4813  0F4B                     	;# 
  4814  0F4C                     	;# 
  4815  0F4E                     	;# 
  4816  0F4F                     	;# 
  4817  0F50                     	;# 
  4818  0F51                     	;# 
  4819  0F52                     	;# 
  4820  0F53                     	;# 
  4821  0F54                     	;# 
  4822  0F55                     	;# 
  4823  0F56                     	;# 
  4824  0F57                     	;# 
  4825  0F65                     	;# 
  4826  0F68                     	;# 
  4827  0F69                     	;# 
  4828  0F6A                     	;# 
  4829  0F6B                     	;# 
  4830  0FE4                     	;# 
  4831  0FE5                     	;# 
  4832  0FE6                     	;# 
  4833  0FE7                     	;# 
  4834  0FE8                     	;# 
  4835  0FE9                     	;# 
  4836  0FEA                     	;# 
  4837  0FEB                     	;# 
  4838  0FED                     	;# 
  4839  0FEE                     	;# 
  4840  0FEF                     	;# 
  4841  0000                     	;# 
  4842  0001                     	;# 
  4843  0002                     	;# 
  4844  0003                     	;# 
  4845  0004                     	;# 
  4846  0005                     	;# 
  4847  0006                     	;# 
  4848  0007                     	;# 
  4849  0008                     	;# 
  4850  0009                     	;# 
  4851  000A                     	;# 
  4852  000B                     	;# 
  4853  000C                     	;# 
  4854  000D                     	;# 
  4855  000E                     	;# 
  4856  0010                     	;# 
  4857  0011                     	;# 
  4858  0012                     	;# 
  4859  0013                     	;# 
  4860  0016                     	;# 
  4861  0017                     	;# 
  4862  0018                     	;# 
  4863  001C                     	;# 
  4864  001C                     	;# 
  4865  001D                     	;# 
  4866  001D                     	;# 
  4867  001E                     	;# 
  4868  001F                     	;# 
  4869  008C                     	;# 
  4870  008C                     	;# 
  4871  008D                     	;# 
  4872  008E                     	;# 
  4873  008E                     	;# 
  4874  008F                     	;# 
  4875  0090                     	;# 
  4876  0090                     	;# 
  4877  0091                     	;# 
  4878  0093                     	;# 
  4879  0094                     	;# 
  4880  0095                     	;# 
  4881  0096                     	;# 
  4882  0097                     	;# 
  4883  0098                     	;# 
  4884  0099                     	;# 
  4885  009A                     	;# 
  4886  009B                     	;# 
  4887  009C                     	;# 
  4888  009D                     	;# 
  4889  009E                     	;# 
  4890  010C                     	;# 
  4891  010D                     	;# 
  4892  010E                     	;# 
  4893  010E                     	;# 
  4894  010F                     	;# 
  4895  0110                     	;# 
  4896  0110                     	;# 
  4897  0111                     	;# 
  4898  0112                     	;# 
  4899  0112                     	;# 
  4900  0113                     	;# 
  4901  0114                     	;# 
  4902  0114                     	;# 
  4903  0115                     	;# 
  4904  0116                     	;# 
  4905  0116                     	;# 
  4906  0117                     	;# 
  4907  0119                     	;# 
  4908  0119                     	;# 
  4909  0119                     	;# 
  4910  011A                     	;# 
  4911  011A                     	;# 
  4912  011A                     	;# 
  4913  011B                     	;# 
  4914  011B                     	;# 
  4915  011B                     	;# 
  4916  011B                     	;# 
  4917  011B                     	;# 
  4918  011C                     	;# 
  4919  011C                     	;# 
  4920  011C                     	;# 
  4921  011D                     	;# 
  4922  011D                     	;# 
  4923  011D                     	;# 
  4924  011E                     	;# 
  4925  011E                     	;# 
  4926  011E                     	;# 
  4927  011F                     	;# 
  4928  011F                     	;# 
  4929  011F                     	;# 
  4930  011F                     	;# 
  4931  011F                     	;# 
  4932  018C                     	;# 
  4933  018D                     	;# 
  4934  018E                     	;# 
  4935  018F                     	;# 
  4936  0190                     	;# 
  4937  0191                     	;# 
  4938  0192                     	;# 
  4939  0196                     	;# 
  4940  0197                     	;# 
  4941  0198                     	;# 
  4942  0199                     	;# 
  4943  019A                     	;# 
  4944  019B                     	;# 
  4945  019C                     	;# 
  4946  020C                     	;# 
  4947  020C                     	;# 
  4948  020D                     	;# 
  4949  020E                     	;# 
  4950  020F                     	;# 
  4951  020F                     	;# 
  4952  0210                     	;# 
  4953  0210                     	;# 
  4954  0211                     	;# 
  4955  0211                     	;# 
  4956  0212                     	;# 
  4957  0212                     	;# 
  4958  0213                     	;# 
  4959  0214                     	;# 
  4960  0215                     	;# 
  4961  0215                     	;# 
  4962  0216                     	;# 
  4963  0216                     	;# 
  4964  0217                     	;# 
  4965  0217                     	;# 
  4966  0218                     	;# 
  4967  0218                     	;# 
  4968  0219                     	;# 
  4969  021A                     	;# 
  4970  021B                     	;# 
  4971  021B                     	;# 
  4972  021C                     	;# 
  4973  021C                     	;# 
  4974  021D                     	;# 
  4975  021D                     	;# 
  4976  021E                     	;# 
  4977  021F                     	;# 
  4978  028C                     	;# 
  4979  028C                     	;# 
  4980  028D                     	;# 
  4981  028D                     	;# 
  4982  028E                     	;# 
  4983  028F                     	;# 
  4984  0290                     	;# 
  4985  0290                     	;# 
  4986  0291                     	;# 
  4987  0292                     	;# 
  4988  0292                     	;# 
  4989  0293                     	;# 
  4990  0293                     	;# 
  4991  0294                     	;# 
  4992  0295                     	;# 
  4993  0296                     	;# 
  4994  0296                     	;# 
  4995  0297                     	;# 
  4996  0298                     	;# 
  4997  0298                     	;# 
  4998  0299                     	;# 
  4999  0299                     	;# 
  5000  029A                     	;# 
  5001  029B                     	;# 
  5002  029C                     	;# 
  5003  029C                     	;# 
  5004  029D                     	;# 
  5005  030C                     	;# 
  5006  030C                     	;# 
  5007  030D                     	;# 
  5008  030E                     	;# 
  5009  030F                     	;# 
  5010  0310                     	;# 
  5011  0310                     	;# 
  5012  0311                     	;# 
  5013  0312                     	;# 
  5014  0313                     	;# 
  5015  0314                     	;# 
  5016  0314                     	;# 
  5017  0315                     	;# 
  5018  0316                     	;# 
  5019  0317                     	;# 
  5020  0318                     	;# 
  5021  0318                     	;# 
  5022  0319                     	;# 
  5023  031A                     	;# 
  5024  031B                     	;# 
  5025  031C                     	;# 
  5026  031C                     	;# 
  5027  031D                     	;# 
  5028  031E                     	;# 
  5029  031F                     	;# 
  5030  038C                     	;# 
  5031  038C                     	;# 
  5032  038D                     	;# 
  5033  038E                     	;# 
  5034  0390                     	;# 
  5035  0390                     	;# 
  5036  0391                     	;# 
  5037  0392                     	;# 
  5038  040C                     	;# 
  5039  040D                     	;# 
  5040  040E                     	;# 
  5041  040F                     	;# 
  5042  0410                     	;# 
  5043  0411                     	;# 
  5044  0416                     	;# 
  5045  0416                     	;# 
  5046  0417                     	;# 
  5047  0418                     	;# 
  5048  0418                     	;# 
  5049  0419                     	;# 
  5050  041A                     	;# 
  5051  041A                     	;# 
  5052  041B                     	;# 
  5053  041C                     	;# 
  5054  041C                     	;# 
  5055  041D                     	;# 
  5056  041E                     	;# 
  5057  041F                     	;# 
  5058  048C                     	;# 
  5059  048C                     	;# 
  5060  048D                     	;# 
  5061  048E                     	;# 
  5062  048F                     	;# 
  5063  048F                     	;# 
  5064  0490                     	;# 
  5065  0491                     	;# 
  5066  0492                     	;# 
  5067  0492                     	;# 
  5068  0493                     	;# 
  5069  0494                     	;# 
  5070  0495                     	;# 
  5071  0495                     	;# 
  5072  0496                     	;# 
  5073  0497                     	;# 
  5074  0498                     	;# 
  5075  0499                     	;# 
  5076  049A                     	;# 
  5077  049B                     	;# 
  5078  049C                     	;# 
  5079  049D                     	;# 
  5080  050C                     	;# 
  5081  050C                     	;# 
  5082  050D                     	;# 
  5083  050E                     	;# 
  5084  050F                     	;# 
  5085  050F                     	;# 
  5086  0510                     	;# 
  5087  0511                     	;# 
  5088  0512                     	;# 
  5089  0512                     	;# 
  5090  0513                     	;# 
  5091  0514                     	;# 
  5092  0515                     	;# 
  5093  0515                     	;# 
  5094  0516                     	;# 
  5095  0517                     	;# 
  5096  0518                     	;# 
  5097  0519                     	;# 
  5098  051A                     	;# 
  5099  051B                     	;# 
  5100  051C                     	;# 
  5101  051D                     	;# 
  5102  058C                     	;# 
  5103  058C                     	;# 
  5104  058D                     	;# 
  5105  058E                     	;# 
  5106  058F                     	;# 
  5107  058F                     	;# 
  5108  0590                     	;# 
  5109  0591                     	;# 
  5110  0592                     	;# 
  5111  0593                     	;# 
  5112  060C                     	;# 
  5113  060D                     	;# 
  5114  060E                     	;# 
  5115  060F                     	;# 
  5116  0610                     	;# 
  5117  0611                     	;# 
  5118  0612                     	;# 
  5119  0613                     	;# 
  5120  0614                     	;# 
  5121  0616                     	;# 
  5122  0617                     	;# 
  5123  0618                     	;# 
  5124  0619                     	;# 
  5125  061A                     	;# 
  5126  061B                     	;# 
  5127  061C                     	;# 
  5128  061D                     	;# 
  5129  061E                     	;# 
  5130  068C                     	;# 
  5131  068D                     	;# 
  5132  068E                     	;# 
  5133  068F                     	;# 
  5134  0690                     	;# 
  5135  0691                     	;# 
  5136  0692                     	;# 
  5137  0693                     	;# 
  5138  0694                     	;# 
  5139  070C                     	;# 
  5140  070D                     	;# 
  5141  070E                     	;# 
  5142  070F                     	;# 
  5143  0710                     	;# 
  5144  0711                     	;# 
  5145  0712                     	;# 
  5146  0713                     	;# 
  5147  0714                     	;# 
  5148  0716                     	;# 
  5149  0717                     	;# 
  5150  0718                     	;# 
  5151  0719                     	;# 
  5152  071A                     	;# 
  5153  071B                     	;# 
  5154  071C                     	;# 
  5155  071D                     	;# 
  5156  071E                     	;# 
  5157  0796                     	;# 
  5158  0797                     	;# 
  5159  0798                     	;# 
  5160  0799                     	;# 
  5161  079A                     	;# 
  5162  079B                     	;# 
  5163  080C                     	;# 
  5164  080D                     	;# 
  5165  080E                     	;# 
  5166  080F                     	;# 
  5167  0810                     	;# 
  5168  0811                     	;# 
  5169  0812                     	;# 
  5170  0813                     	;# 
  5171  0814                     	;# 
  5172  081A                     	;# 
  5173  081B                     	;# 
  5174  081C                     	;# 
  5175  081D                     	;# 
  5176  081E                     	;# 
  5177  081F                     	;# 
  5178  088C                     	;# 
  5179  088D                     	;# 
  5180  088E                     	;# 
  5181  088F                     	;# 
  5182  0890                     	;# 
  5183  0891                     	;# 
  5184  0892                     	;# 
  5185  0893                     	;# 
  5186  0895                     	;# 
  5187  0896                     	;# 
  5188  0897                     	;# 
  5189  0898                     	;# 
  5190  0899                     	;# 
  5191  089A                     	;# 
  5192  089B                     	;# 
  5193  090C                     	;# 
  5194  090E                     	;# 
  5195  090F                     	;# 
  5196  091F                     	;# 
  5197  091F                     	;# 
  5198  098F                     	;# 
  5199  098F                     	;# 
  5200  0990                     	;# 
  5201  0991                     	;# 
  5202  0992                     	;# 
  5203  0993                     	;# 
  5204  0994                     	;# 
  5205  0995                     	;# 
  5206  0996                     	;# 
  5207  0997                     	;# 
  5208  0E0F                     	;# 
  5209  0E10                     	;# 
  5210  0E11                     	;# 
  5211  0E12                     	;# 
  5212  0E13                     	;# 
  5213  0E14                     	;# 
  5214  0E15                     	;# 
  5215  0E16                     	;# 
  5216  0E17                     	;# 
  5217  0E18                     	;# 
  5218  0E19                     	;# 
  5219  0E1A                     	;# 
  5220  0E1B                     	;# 
  5221  0E1C                     	;# 
  5222  0E1D                     	;# 
  5223  0E1E                     	;# 
  5224  0E1F                     	;# 
  5225  0E20                     	;# 
  5226  0E21                     	;# 
  5227  0E22                     	;# 
  5228  0E23                     	;# 
  5229  0E24                     	;# 
  5230  0E25                     	;# 
  5231  0E26                     	;# 
  5232  0E27                     	;# 
  5233  0E28                     	;# 
  5234  0E29                     	;# 
  5235  0E2A                     	;# 
  5236  0E2B                     	;# 
  5237  0E2C                     	;# 
  5238  0E2D                     	;# 
  5239  0E2E                     	;# 
  5240  0E2F                     	;# 
  5241  0E30                     	;# 
  5242  0E31                     	;# 
  5243  0E32                     	;# 
  5244  0E33                     	;# 
  5245  0E34                     	;# 
  5246  0E35                     	;# 
  5247  0E36                     	;# 
  5248  0E37                     	;# 
  5249  0E8F                     	;# 
  5250  0E90                     	;# 
  5251  0E91                     	;# 
  5252  0E92                     	;# 
  5253  0E93                     	;# 
  5254  0E94                     	;# 
  5255  0E95                     	;# 
  5256  0E96                     	;# 
  5257  0E97                     	;# 
  5258  0E9C                     	;# 
  5259  0E9D                     	;# 
  5260  0E9E                     	;# 
  5261  0EA1                     	;# 
  5262  0EA2                     	;# 
  5263  0EA3                     	;# 
  5264  0EA4                     	;# 
  5265  0EA5                     	;# 
  5266  0EA9                     	;# 
  5267  0EAA                     	;# 
  5268  0EAB                     	;# 
  5269  0EAC                     	;# 
  5270  0EB1                     	;# 
  5271  0EB2                     	;# 
  5272  0EB3                     	;# 
  5273  0EB8                     	;# 
  5274  0EB9                     	;# 
  5275  0EBA                     	;# 
  5276  0EBB                     	;# 
  5277  0EBC                     	;# 
  5278  0EBD                     	;# 
  5279  0EBE                     	;# 
  5280  0EC3                     	;# 
  5281  0EC5                     	;# 
  5282  0EC6                     	;# 
  5283  0EC7                     	;# 
  5284  0EC8                     	;# 
  5285  0EC9                     	;# 
  5286  0ECA                     	;# 
  5287  0ECB                     	;# 
  5288  0ECC                     	;# 
  5289  0F10                     	;# 
  5290  0F11                     	;# 
  5291  0F12                     	;# 
  5292  0F13                     	;# 
  5293  0F14                     	;# 
  5294  0F15                     	;# 
  5295  0F16                     	;# 
  5296  0F17                     	;# 
  5297  0F18                     	;# 
  5298  0F19                     	;# 
  5299  0F1A                     	;# 
  5300  0F1B                     	;# 
  5301  0F1C                     	;# 
  5302  0F1D                     	;# 
  5303  0F1E                     	;# 
  5304  0F1F                     	;# 
  5305  0F20                     	;# 
  5306  0F21                     	;# 
  5307  0F22                     	;# 
  5308  0F23                     	;# 
  5309  0F24                     	;# 
  5310  0F25                     	;# 
  5311  0F26                     	;# 
  5312  0F27                     	;# 
  5313  0F38                     	;# 
  5314  0F39                     	;# 
  5315  0F3A                     	;# 
  5316  0F3B                     	;# 
  5317  0F3C                     	;# 
  5318  0F3D                     	;# 
  5319  0F3E                     	;# 
  5320  0F3F                     	;# 
  5321  0F40                     	;# 
  5322  0F41                     	;# 
  5323  0F43                     	;# 
  5324  0F44                     	;# 
  5325  0F45                     	;# 
  5326  0F46                     	;# 
  5327  0F47                     	;# 
  5328  0F48                     	;# 
  5329  0F49                     	;# 
  5330  0F4A                     	;# 
  5331  0F4B                     	;# 
  5332  0F4C                     	;# 
  5333  0F4E                     	;# 
  5334  0F4F                     	;# 
  5335  0F50                     	;# 
  5336  0F51                     	;# 
  5337  0F52                     	;# 
  5338  0F53                     	;# 
  5339  0F54                     	;# 
  5340  0F55                     	;# 
  5341  0F56                     	;# 
  5342  0F57                     	;# 
  5343  0F65                     	;# 
  5344  0F68                     	;# 
  5345  0F69                     	;# 
  5346  0F6A                     	;# 
  5347  0F6B                     	;# 
  5348  0FE4                     	;# 
  5349  0FE5                     	;# 
  5350  0FE6                     	;# 
  5351  0FE7                     	;# 
  5352  0FE8                     	;# 
  5353  0FE9                     	;# 
  5354  0FEA                     	;# 
  5355  0FEB                     	;# 
  5356  0FED                     	;# 
  5357  0FEE                     	;# 
  5358  0FEF                     	;# 
  5359  0000                     	;# 
  5360  0001                     	;# 
  5361  0002                     	;# 
  5362  0003                     	;# 
  5363  0004                     	;# 
  5364  0005                     	;# 
  5365  0006                     	;# 
  5366  0007                     	;# 
  5367  0008                     	;# 
  5368  0009                     	;# 
  5369  000A                     	;# 
  5370  000B                     	;# 
  5371  000C                     	;# 
  5372  000D                     	;# 
  5373  000E                     	;# 
  5374  0010                     	;# 
  5375  0011                     	;# 
  5376  0012                     	;# 
  5377  0013                     	;# 
  5378  0016                     	;# 
  5379  0017                     	;# 
  5380  0018                     	;# 
  5381  001C                     	;# 
  5382  001C                     	;# 
  5383  001D                     	;# 
  5384  001D                     	;# 
  5385  001E                     	;# 
  5386  001F                     	;# 
  5387  008C                     	;# 
  5388  008C                     	;# 
  5389  008D                     	;# 
  5390  008E                     	;# 
  5391  008E                     	;# 
  5392  008F                     	;# 
  5393  0090                     	;# 
  5394  0090                     	;# 
  5395  0091                     	;# 
  5396  0093                     	;# 
  5397  0094                     	;# 
  5398  0095                     	;# 
  5399  0096                     	;# 
  5400  0097                     	;# 
  5401  0098                     	;# 
  5402  0099                     	;# 
  5403  009A                     	;# 
  5404  009B                     	;# 
  5405  009C                     	;# 
  5406  009D                     	;# 
  5407  009E                     	;# 
  5408  010C                     	;# 
  5409  010D                     	;# 
  5410  010E                     	;# 
  5411  010E                     	;# 
  5412  010F                     	;# 
  5413  0110                     	;# 
  5414  0110                     	;# 
  5415  0111                     	;# 
  5416  0112                     	;# 
  5417  0112                     	;# 
  5418  0113                     	;# 
  5419  0114                     	;# 
  5420  0114                     	;# 
  5421  0115                     	;# 
  5422  0116                     	;# 
  5423  0116                     	;# 
  5424  0117                     	;# 
  5425  0119                     	;# 
  5426  0119                     	;# 
  5427  0119                     	;# 
  5428  011A                     	;# 
  5429  011A                     	;# 
  5430  011A                     	;# 
  5431  011B                     	;# 
  5432  011B                     	;# 
  5433  011B                     	;# 
  5434  011B                     	;# 
  5435  011B                     	;# 
  5436  011C                     	;# 
  5437  011C                     	;# 
  5438  011C                     	;# 
  5439  011D                     	;# 
  5440  011D                     	;# 
  5441  011D                     	;# 
  5442  011E                     	;# 
  5443  011E                     	;# 
  5444  011E                     	;# 
  5445  011F                     	;# 
  5446  011F                     	;# 
  5447  011F                     	;# 
  5448  011F                     	;# 
  5449  011F                     	;# 
  5450  018C                     	;# 
  5451  018D                     	;# 
  5452  018E                     	;# 
  5453  018F                     	;# 
  5454  0190                     	;# 
  5455  0191                     	;# 
  5456  0192                     	;# 
  5457  0196                     	;# 
  5458  0197                     	;# 
  5459  0198                     	;# 
  5460  0199                     	;# 
  5461  019A                     	;# 
  5462  019B                     	;# 
  5463  019C                     	;# 
  5464  020C                     	;# 
  5465  020C                     	;# 
  5466  020D                     	;# 
  5467  020E                     	;# 
  5468  020F                     	;# 
  5469  020F                     	;# 
  5470  0210                     	;# 
  5471  0210                     	;# 
  5472  0211                     	;# 
  5473  0211                     	;# 
  5474  0212                     	;# 
  5475  0212                     	;# 
  5476  0213                     	;# 
  5477  0214                     	;# 
  5478  0215                     	;# 
  5479  0215                     	;# 
  5480  0216                     	;# 
  5481  0216                     	;# 
  5482  0217                     	;# 
  5483  0217                     	;# 
  5484  0218                     	;# 
  5485  0218                     	;# 
  5486  0219                     	;# 
  5487  021A                     	;# 
  5488  021B                     	;# 
  5489  021B                     	;# 
  5490  021C                     	;# 
  5491  021C                     	;# 
  5492  021D                     	;# 
  5493  021D                     	;# 
  5494  021E                     	;# 
  5495  021F                     	;# 
  5496  028C                     	;# 
  5497  028C                     	;# 
  5498  028D                     	;# 
  5499  028D                     	;# 
  5500  028E                     	;# 
  5501  028F                     	;# 
  5502  0290                     	;# 
  5503  0290                     	;# 
  5504  0291                     	;# 
  5505  0292                     	;# 
  5506  0292                     	;# 
  5507  0293                     	;# 
  5508  0293                     	;# 
  5509  0294                     	;# 
  5510  0295                     	;# 
  5511  0296                     	;# 
  5512  0296                     	;# 
  5513  0297                     	;# 
  5514  0298                     	;# 
  5515  0298                     	;# 
  5516  0299                     	;# 
  5517  0299                     	;# 
  5518  029A                     	;# 
  5519  029B                     	;# 
  5520  029C                     	;# 
  5521  029C                     	;# 
  5522  029D                     	;# 
  5523  030C                     	;# 
  5524  030C                     	;# 
  5525  030D                     	;# 
  5526  030E                     	;# 
  5527  030F                     	;# 
  5528  0310                     	;# 
  5529  0310                     	;# 
  5530  0311                     	;# 
  5531  0312                     	;# 
  5532  0313                     	;# 
  5533  0314                     	;# 
  5534  0314                     	;# 
  5535  0315                     	;# 
  5536  0316                     	;# 
  5537  0317                     	;# 
  5538  0318                     	;# 
  5539  0318                     	;# 
  5540  0319                     	;# 
  5541  031A                     	;# 
  5542  031B                     	;# 
  5543  031C                     	;# 
  5544  031C                     	;# 
  5545  031D                     	;# 
  5546  031E                     	;# 
  5547  031F                     	;# 
  5548  038C                     	;# 
  5549  038C                     	;# 
  5550  038D                     	;# 
  5551  038E                     	;# 
  5552  0390                     	;# 
  5553  0390                     	;# 
  5554  0391                     	;# 
  5555  0392                     	;# 
  5556  040C                     	;# 
  5557  040D                     	;# 
  5558  040E                     	;# 
  5559  040F                     	;# 
  5560  0410                     	;# 
  5561  0411                     	;# 
  5562  0416                     	;# 
  5563  0416                     	;# 
  5564  0417                     	;# 
  5565  0418                     	;# 
  5566  0418                     	;# 
  5567  0419                     	;# 
  5568  041A                     	;# 
  5569  041A                     	;# 
  5570  041B                     	;# 
  5571  041C                     	;# 
  5572  041C                     	;# 
  5573  041D                     	;# 
  5574  041E                     	;# 
  5575  041F                     	;# 
  5576  048C                     	;# 
  5577  048C                     	;# 
  5578  048D                     	;# 
  5579  048E                     	;# 
  5580  048F                     	;# 
  5581  048F                     	;# 
  5582  0490                     	;# 
  5583  0491                     	;# 
  5584  0492                     	;# 
  5585  0492                     	;# 
  5586  0493                     	;# 
  5587  0494                     	;# 
  5588  0495                     	;# 
  5589  0495                     	;# 
  5590  0496                     	;# 
  5591  0497                     	;# 
  5592  0498                     	;# 
  5593  0499                     	;# 
  5594  049A                     	;# 
  5595  049B                     	;# 
  5596  049C                     	;# 
  5597  049D                     	;# 
  5598  050C                     	;# 
  5599  050C                     	;# 
  5600  050D                     	;# 
  5601  050E                     	;# 
  5602  050F                     	;# 
  5603  050F                     	;# 
  5604  0510                     	;# 
  5605  0511                     	;# 
  5606  0512                     	;# 
  5607  0512                     	;# 
  5608  0513                     	;# 
  5609  0514                     	;# 
  5610  0515                     	;# 
  5611  0515                     	;# 
  5612  0516                     	;# 
  5613  0517                     	;# 
  5614  0518                     	;# 
  5615  0519                     	;# 
  5616  051A                     	;# 
  5617  051B                     	;# 
  5618  051C                     	;# 
  5619  051D                     	;# 
  5620  058C                     	;# 
  5621  058C                     	;# 
  5622  058D                     	;# 
  5623  058E                     	;# 
  5624  058F                     	;# 
  5625  058F                     	;# 
  5626  0590                     	;# 
  5627  0591                     	;# 
  5628  0592                     	;# 
  5629  0593                     	;# 
  5630  060C                     	;# 
  5631  060D                     	;# 
  5632  060E                     	;# 
  5633  060F                     	;# 
  5634  0610                     	;# 
  5635  0611                     	;# 
  5636  0612                     	;# 
  5637  0613                     	;# 
  5638  0614                     	;# 
  5639  0616                     	;# 
  5640  0617                     	;# 
  5641  0618                     	;# 
  5642  0619                     	;# 
  5643  061A                     	;# 
  5644  061B                     	;# 
  5645  061C                     	;# 
  5646  061D                     	;# 
  5647  061E                     	;# 
  5648  068C                     	;# 
  5649  068D                     	;# 
  5650  068E                     	;# 
  5651  068F                     	;# 
  5652  0690                     	;# 
  5653  0691                     	;# 
  5654  0692                     	;# 
  5655  0693                     	;# 
  5656  0694                     	;# 
  5657  070C                     	;# 
  5658  070D                     	;# 
  5659  070E                     	;# 
  5660  070F                     	;# 
  5661  0710                     	;# 
  5662  0711                     	;# 
  5663  0712                     	;# 
  5664  0713                     	;# 
  5665  0714                     	;# 
  5666  0716                     	;# 
  5667  0717                     	;# 
  5668  0718                     	;# 
  5669  0719                     	;# 
  5670  071A                     	;# 
  5671  071B                     	;# 
  5672  071C                     	;# 
  5673  071D                     	;# 
  5674  071E                     	;# 
  5675  0796                     	;# 
  5676  0797                     	;# 
  5677  0798                     	;# 
  5678  0799                     	;# 
  5679  079A                     	;# 
  5680  079B                     	;# 
  5681  080C                     	;# 
  5682  080D                     	;# 
  5683  080E                     	;# 
  5684  080F                     	;# 
  5685  0810                     	;# 
  5686  0811                     	;# 
  5687  0812                     	;# 
  5688  0813                     	;# 
  5689  0814                     	;# 
  5690  081A                     	;# 
  5691  081B                     	;# 
  5692  081C                     	;# 
  5693  081D                     	;# 
  5694  081E                     	;# 
  5695  081F                     	;# 
  5696  088C                     	;# 
  5697  088D                     	;# 
  5698  088E                     	;# 
  5699  088F                     	;# 
  5700  0890                     	;# 
  5701  0891                     	;# 
  5702  0892                     	;# 
  5703  0893                     	;# 
  5704  0895                     	;# 
  5705  0896                     	;# 
  5706  0897                     	;# 
  5707  0898                     	;# 
  5708  0899                     	;# 
  5709  089A                     	;# 
  5710  089B                     	;# 
  5711  090C                     	;# 
  5712  090E                     	;# 
  5713  090F                     	;# 
  5714  091F                     	;# 
  5715  091F                     	;# 
  5716  098F                     	;# 
  5717  098F                     	;# 
  5718  0990                     	;# 
  5719  0991                     	;# 
  5720  0992                     	;# 
  5721  0993                     	;# 
  5722  0994                     	;# 
  5723  0995                     	;# 
  5724  0996                     	;# 
  5725  0997                     	;# 
  5726  0E0F                     	;# 
  5727  0E10                     	;# 
  5728  0E11                     	;# 
  5729  0E12                     	;# 
  5730  0E13                     	;# 
  5731  0E14                     	;# 
  5732  0E15                     	;# 
  5733  0E16                     	;# 
  5734  0E17                     	;# 
  5735  0E18                     	;# 
  5736  0E19                     	;# 
  5737  0E1A                     	;# 
  5738  0E1B                     	;# 
  5739  0E1C                     	;# 
  5740  0E1D                     	;# 
  5741  0E1E                     	;# 
  5742  0E1F                     	;# 
  5743  0E20                     	;# 
  5744  0E21                     	;# 
  5745  0E22                     	;# 
  5746  0E23                     	;# 
  5747  0E24                     	;# 
  5748  0E25                     	;# 
  5749  0E26                     	;# 
  5750  0E27                     	;# 
  5751  0E28                     	;# 
  5752  0E29                     	;# 
  5753  0E2A                     	;# 
  5754  0E2B                     	;# 
  5755  0E2C                     	;# 
  5756  0E2D                     	;# 
  5757  0E2E                     	;# 
  5758  0E2F                     	;# 
  5759  0E30                     	;# 
  5760  0E31                     	;# 
  5761  0E32                     	;# 
  5762  0E33                     	;# 
  5763  0E34                     	;# 
  5764  0E35                     	;# 
  5765  0E36                     	;# 
  5766  0E37                     	;# 
  5767  0E8F                     	;# 
  5768  0E90                     	;# 
  5769  0E91                     	;# 
  5770  0E92                     	;# 
  5771  0E93                     	;# 
  5772  0E94                     	;# 
  5773  0E95                     	;# 
  5774  0E96                     	;# 
  5775  0E97                     	;# 
  5776  0E9C                     	;# 
  5777  0E9D                     	;# 
  5778  0E9E                     	;# 
  5779  0EA1                     	;# 
  5780  0EA2                     	;# 
  5781  0EA3                     	;# 
  5782  0EA4                     	;# 
  5783  0EA5                     	;# 
  5784  0EA9                     	;# 
  5785  0EAA                     	;# 
  5786  0EAB                     	;# 
  5787  0EAC                     	;# 
  5788  0EB1                     	;# 
  5789  0EB2                     	;# 
  5790  0EB3                     	;# 
  5791  0EB8                     	;# 
  5792  0EB9                     	;# 
  5793  0EBA                     	;# 
  5794  0EBB                     	;# 
  5795  0EBC                     	;# 
  5796  0EBD                     	;# 
  5797  0EBE                     	;# 
  5798  0EC3                     	;# 
  5799  0EC5                     	;# 
  5800  0EC6                     	;# 
  5801  0EC7                     	;# 
  5802  0EC8                     	;# 
  5803  0EC9                     	;# 
  5804  0ECA                     	;# 
  5805  0ECB                     	;# 
  5806  0ECC                     	;# 
  5807  0F10                     	;# 
  5808  0F11                     	;# 
  5809  0F12                     	;# 
  5810  0F13                     	;# 
  5811  0F14                     	;# 
  5812  0F15                     	;# 
  5813  0F16                     	;# 
  5814  0F17                     	;# 
  5815  0F18                     	;# 
  5816  0F19                     	;# 
  5817  0F1A                     	;# 
  5818  0F1B                     	;# 
  5819  0F1C                     	;# 
  5820  0F1D                     	;# 
  5821  0F1E                     	;# 
  5822  0F1F                     	;# 
  5823  0F20                     	;# 
  5824  0F21                     	;# 
  5825  0F22                     	;# 
  5826  0F23                     	;# 
  5827  0F24                     	;# 
  5828  0F25                     	;# 
  5829  0F26                     	;# 
  5830  0F27                     	;# 
  5831  0F38                     	;# 
  5832  0F39                     	;# 
  5833  0F3A                     	;# 
  5834  0F3B                     	;# 
  5835  0F3C                     	;# 
  5836  0F3D                     	;# 
  5837  0F3E                     	;# 
  5838  0F3F                     	;# 
  5839  0F40                     	;# 
  5840  0F41                     	;# 
  5841  0F43                     	;# 
  5842  0F44                     	;# 
  5843  0F45                     	;# 
  5844  0F46                     	;# 
  5845  0F47                     	;# 
  5846  0F48                     	;# 
  5847  0F49                     	;# 
  5848  0F4A                     	;# 
  5849  0F4B                     	;# 
  5850  0F4C                     	;# 
  5851  0F4E                     	;# 
  5852  0F4F                     	;# 
  5853  0F50                     	;# 
  5854  0F51                     	;# 
  5855  0F52                     	;# 
  5856  0F53                     	;# 
  5857  0F54                     	;# 
  5858  0F55                     	;# 
  5859  0F56                     	;# 
  5860  0F57                     	;# 
  5861  0F65                     	;# 
  5862  0F68                     	;# 
  5863  0F69                     	;# 
  5864  0F6A                     	;# 
  5865  0F6B                     	;# 
  5866  0FE4                     	;# 
  5867  0FE5                     	;# 
  5868  0FE6                     	;# 
  5869  0FE7                     	;# 
  5870  0FE8                     	;# 
  5871  0FE9                     	;# 
  5872  0FEA                     	;# 
  5873  0FEB                     	;# 
  5874  0FED                     	;# 
  5875  0FEE                     	;# 
  5876  0FEF                     	;# 
  5877  0000                     	;# 
  5878  0001                     	;# 
  5879  0002                     	;# 
  5880  0003                     	;# 
  5881  0004                     	;# 
  5882  0005                     	;# 
  5883  0006                     	;# 
  5884  0007                     	;# 
  5885  0008                     	;# 
  5886  0009                     	;# 
  5887  000A                     	;# 
  5888  000B                     	;# 
  5889  000C                     	;# 
  5890  000D                     	;# 
  5891  000E                     	;# 
  5892  0010                     	;# 
  5893  0011                     	;# 
  5894  0012                     	;# 
  5895  0013                     	;# 
  5896  0016                     	;# 
  5897  0017                     	;# 
  5898  0018                     	;# 
  5899  001C                     	;# 
  5900  001C                     	;# 
  5901  001D                     	;# 
  5902  001D                     	;# 
  5903  001E                     	;# 
  5904  001F                     	;# 
  5905  008C                     	;# 
  5906  008C                     	;# 
  5907  008D                     	;# 
  5908  008E                     	;# 
  5909  008E                     	;# 
  5910  008F                     	;# 
  5911  0090                     	;# 
  5912  0090                     	;# 
  5913  0091                     	;# 
  5914  0093                     	;# 
  5915  0094                     	;# 
  5916  0095                     	;# 
  5917  0096                     	;# 
  5918  0097                     	;# 
  5919  0098                     	;# 
  5920  0099                     	;# 
  5921  009A                     	;# 
  5922  009B                     	;# 
  5923  009C                     	;# 
  5924  009D                     	;# 
  5925  009E                     	;# 
  5926  010C                     	;# 
  5927  010D                     	;# 
  5928  010E                     	;# 
  5929  010E                     	;# 
  5930  010F                     	;# 
  5931  0110                     	;# 
  5932  0110                     	;# 
  5933  0111                     	;# 
  5934  0112                     	;# 
  5935  0112                     	;# 
  5936  0113                     	;# 
  5937  0114                     	;# 
  5938  0114                     	;# 
  5939  0115                     	;# 
  5940  0116                     	;# 
  5941  0116                     	;# 
  5942  0117                     	;# 
  5943  0119                     	;# 
  5944  0119                     	;# 
  5945  0119                     	;# 
  5946  011A                     	;# 
  5947  011A                     	;# 
  5948  011A                     	;# 
  5949  011B                     	;# 
  5950  011B                     	;# 
  5951  011B                     	;# 
  5952  011B                     	;# 
  5953  011B                     	;# 
  5954  011C                     	;# 
  5955  011C                     	;# 
  5956  011C                     	;# 
  5957  011D                     	;# 
  5958  011D                     	;# 
  5959  011D                     	;# 
  5960  011E                     	;# 
  5961  011E                     	;# 
  5962  011E                     	;# 
  5963  011F                     	;# 
  5964  011F                     	;# 
  5965  011F                     	;# 
  5966  011F                     	;# 
  5967  011F                     	;# 
  5968  018C                     	;# 
  5969  018D                     	;# 
  5970  018E                     	;# 
  5971  018F                     	;# 
  5972  0190                     	;# 
  5973  0191                     	;# 
  5974  0192                     	;# 
  5975  0196                     	;# 
  5976  0197                     	;# 
  5977  0198                     	;# 
  5978  0199                     	;# 
  5979  019A                     	;# 
  5980  019B                     	;# 
  5981  019C                     	;# 
  5982  020C                     	;# 
  5983  020C                     	;# 
  5984  020D                     	;# 
  5985  020E                     	;# 
  5986  020F                     	;# 
  5987  020F                     	;# 
  5988  0210                     	;# 
  5989  0210                     	;# 
  5990  0211                     	;# 
  5991  0211                     	;# 
  5992  0212                     	;# 
  5993  0212                     	;# 
  5994  0213                     	;# 
  5995  0214                     	;# 
  5996  0215                     	;# 
  5997  0215                     	;# 
  5998  0216                     	;# 
  5999  0216                     	;# 
  6000  0217                     	;# 
  6001  0217                     	;# 
  6002  0218                     	;# 
  6003  0218                     	;# 
  6004  0219                     	;# 
  6005  021A                     	;# 
  6006  021B                     	;# 
  6007  021B                     	;# 
  6008  021C                     	;# 
  6009  021C                     	;# 
  6010  021D                     	;# 
  6011  021D                     	;# 
  6012  021E                     	;# 
  6013  021F                     	;# 
  6014  028C                     	;# 
  6015  028C                     	;# 
  6016  028D                     	;# 
  6017  028D                     	;# 
  6018  028E                     	;# 
  6019  028F                     	;# 
  6020  0290                     	;# 
  6021  0290                     	;# 
  6022  0291                     	;# 
  6023  0292                     	;# 
  6024  0292                     	;# 
  6025  0293                     	;# 
  6026  0293                     	;# 
  6027  0294                     	;# 
  6028  0295                     	;# 
  6029  0296                     	;# 
  6030  0296                     	;# 
  6031  0297                     	;# 
  6032  0298                     	;# 
  6033  0298                     	;# 
  6034  0299                     	;# 
  6035  0299                     	;# 
  6036  029A                     	;# 
  6037  029B                     	;# 
  6038  029C                     	;# 
  6039  029C                     	;# 
  6040  029D                     	;# 
  6041  030C                     	;# 
  6042  030C                     	;# 
  6043  030D                     	;# 
  6044  030E                     	;# 
  6045  030F                     	;# 
  6046  0310                     	;# 
  6047  0310                     	;# 
  6048  0311                     	;# 
  6049  0312                     	;# 
  6050  0313                     	;# 
  6051  0314                     	;# 
  6052  0314                     	;# 
  6053  0315                     	;# 
  6054  0316                     	;# 
  6055  0317                     	;# 
  6056  0318                     	;# 
  6057  0318                     	;# 
  6058  0319                     	;# 
  6059  031A                     	;# 
  6060  031B                     	;# 
  6061  031C                     	;# 
  6062  031C                     	;# 
  6063  031D                     	;# 
  6064  031E                     	;# 
  6065  031F                     	;# 
  6066  038C                     	;# 
  6067  038C                     	;# 
  6068  038D                     	;# 
  6069  038E                     	;# 
  6070  0390                     	;# 
  6071  0390                     	;# 
  6072  0391                     	;# 
  6073  0392                     	;# 
  6074  040C                     	;# 
  6075  040D                     	;# 
  6076  040E                     	;# 
  6077  040F                     	;# 
  6078  0410                     	;# 
  6079  0411                     	;# 
  6080  0416                     	;# 
  6081  0416                     	;# 
  6082  0417                     	;# 
  6083  0418                     	;# 
  6084  0418                     	;# 
  6085  0419                     	;# 
  6086  041A                     	;# 
  6087  041A                     	;# 
  6088  041B                     	;# 
  6089  041C                     	;# 
  6090  041C                     	;# 
  6091  041D                     	;# 
  6092  041E                     	;# 
  6093  041F                     	;# 
  6094  048C                     	;# 
  6095  048C                     	;# 
  6096  048D                     	;# 
  6097  048E                     	;# 
  6098  048F                     	;# 
  6099  048F                     	;# 
  6100  0490                     	;# 
  6101  0491                     	;# 
  6102  0492                     	;# 
  6103  0492                     	;# 
  6104  0493                     	;# 
  6105  0494                     	;# 
  6106  0495                     	;# 
  6107  0495                     	;# 
  6108  0496                     	;# 
  6109  0497                     	;# 
  6110  0498                     	;# 
  6111  0499                     	;# 
  6112  049A                     	;# 
  6113  049B                     	;# 
  6114  049C                     	;# 
  6115  049D                     	;# 
  6116  050C                     	;# 
  6117  050C                     	;# 
  6118  050D                     	;# 
  6119  050E                     	;# 
  6120  050F                     	;# 
  6121  050F                     	;# 
  6122  0510                     	;# 
  6123  0511                     	;# 
  6124  0512                     	;# 
  6125  0512                     	;# 
  6126  0513                     	;# 
  6127  0514                     	;# 
  6128  0515                     	;# 
  6129  0515                     	;# 
  6130  0516                     	;# 
  6131  0517                     	;# 
  6132  0518                     	;# 
  6133  0519                     	;# 
  6134  051A                     	;# 
  6135  051B                     	;# 
  6136  051C                     	;# 
  6137  051D                     	;# 
  6138  058C                     	;# 
  6139  058C                     	;# 
  6140  058D                     	;# 
  6141  058E                     	;# 
  6142  058F                     	;# 
  6143  058F                     	;# 
  6144  0590                     	;# 
  6145  0591                     	;# 
  6146  0592                     	;# 
  6147  0593                     	;# 
  6148  060C                     	;# 
  6149  060D                     	;# 
  6150  060E                     	;# 
  6151  060F                     	;# 
  6152  0610                     	;# 
  6153  0611                     	;# 
  6154  0612                     	;# 
  6155  0613                     	;# 
  6156  0614                     	;# 
  6157  0616                     	;# 
  6158  0617                     	;# 
  6159  0618                     	;# 
  6160  0619                     	;# 
  6161  061A                     	;# 
  6162  061B                     	;# 
  6163  061C                     	;# 
  6164  061D                     	;# 
  6165  061E                     	;# 
  6166  068C                     	;# 
  6167  068D                     	;# 
  6168  068E                     	;# 
  6169  068F                     	;# 
  6170  0690                     	;# 
  6171  0691                     	;# 
  6172  0692                     	;# 
  6173  0693                     	;# 
  6174  0694                     	;# 
  6175  070C                     	;# 
  6176  070D                     	;# 
  6177  070E                     	;# 
  6178  070F                     	;# 
  6179  0710                     	;# 
  6180  0711                     	;# 
  6181  0712                     	;# 
  6182  0713                     	;# 
  6183  0714                     	;# 
  6184  0716                     	;# 
  6185  0717                     	;# 
  6186  0718                     	;# 
  6187  0719                     	;# 
  6188  071A                     	;# 
  6189  071B                     	;# 
  6190  071C                     	;# 
  6191  071D                     	;# 
  6192  071E                     	;# 
  6193  0796                     	;# 
  6194  0797                     	;# 
  6195  0798                     	;# 
  6196  0799                     	;# 
  6197  079A                     	;# 
  6198  079B                     	;# 
  6199  080C                     	;# 
  6200  080D                     	;# 
  6201  080E                     	;# 
  6202  080F                     	;# 
  6203  0810                     	;# 
  6204  0811                     	;# 
  6205  0812                     	;# 
  6206  0813                     	;# 
  6207  0814                     	;# 
  6208  081A                     	;# 
  6209  081B                     	;# 
  6210  081C                     	;# 
  6211  081D                     	;# 
  6212  081E                     	;# 
  6213  081F                     	;# 
  6214  088C                     	;# 
  6215  088D                     	;# 
  6216  088E                     	;# 
  6217  088F                     	;# 
  6218  0890                     	;# 
  6219  0891                     	;# 
  6220  0892                     	;# 
  6221  0893                     	;# 
  6222  0895                     	;# 
  6223  0896                     	;# 
  6224  0897                     	;# 
  6225  0898                     	;# 
  6226  0899                     	;# 
  6227  089A                     	;# 
  6228  089B                     	;# 
  6229  090C                     	;# 
  6230  090E                     	;# 
  6231  090F                     	;# 
  6232  091F                     	;# 
  6233  091F                     	;# 
  6234  098F                     	;# 
  6235  098F                     	;# 
  6236  0990                     	;# 
  6237  0991                     	;# 
  6238  0992                     	;# 
  6239  0993                     	;# 
  6240  0994                     	;# 
  6241  0995                     	;# 
  6242  0996                     	;# 
  6243  0997                     	;# 
  6244  0E0F                     	;# 
  6245  0E10                     	;# 
  6246  0E11                     	;# 
  6247  0E12                     	;# 
  6248  0E13                     	;# 
  6249  0E14                     	;# 
  6250  0E15                     	;# 
  6251  0E16                     	;# 
  6252  0E17                     	;# 
  6253  0E18                     	;# 
  6254  0E19                     	;# 
  6255  0E1A                     	;# 
  6256  0E1B                     	;# 
  6257  0E1C                     	;# 
  6258  0E1D                     	;# 
  6259  0E1E                     	;# 
  6260  0E1F                     	;# 
  6261  0E20                     	;# 
  6262  0E21                     	;# 
  6263  0E22                     	;# 
  6264  0E23                     	;# 
  6265  0E24                     	;# 
  6266  0E25                     	;# 
  6267  0E26                     	;# 
  6268  0E27                     	;# 
  6269  0E28                     	;# 
  6270  0E29                     	;# 
  6271  0E2A                     	;# 
  6272  0E2B                     	;# 
  6273  0E2C                     	;# 
  6274  0E2D                     	;# 
  6275  0E2E                     	;# 
  6276  0E2F                     	;# 
  6277  0E30                     	;# 
  6278  0E31                     	;# 
  6279  0E32                     	;# 
  6280  0E33                     	;# 
  6281  0E34                     	;# 
  6282  0E35                     	;# 
  6283  0E36                     	;# 
  6284  0E37                     	;# 
  6285  0E8F                     	;# 
  6286  0E90                     	;# 
  6287  0E91                     	;# 
  6288  0E92                     	;# 
  6289  0E93                     	;# 
  6290  0E94                     	;# 
  6291  0E95                     	;# 
  6292  0E96                     	;# 
  6293  0E97                     	;# 
  6294  0E9C                     	;# 
  6295  0E9D                     	;# 
  6296  0E9E                     	;# 
  6297  0EA1                     	;# 
  6298  0EA2                     	;# 
  6299  0EA3                     	;# 
  6300  0EA4                     	;# 
  6301  0EA5                     	;# 
  6302  0EA9                     	;# 
  6303  0EAA                     	;# 
  6304  0EAB                     	;# 
  6305  0EAC                     	;# 
  6306  0EB1                     	;# 
  6307  0EB2                     	;# 
  6308  0EB3                     	;# 
  6309  0EB8                     	;# 
  6310  0EB9                     	;# 
  6311  0EBA                     	;# 
  6312  0EBB                     	;# 
  6313  0EBC                     	;# 
  6314  0EBD                     	;# 
  6315  0EBE                     	;# 
  6316  0EC3                     	;# 
  6317  0EC5                     	;# 
  6318  0EC6                     	;# 
  6319  0EC7                     	;# 
  6320  0EC8                     	;# 
  6321  0EC9                     	;# 
  6322  0ECA                     	;# 
  6323  0ECB                     	;# 
  6324  0ECC                     	;# 
  6325  0F10                     	;# 
  6326  0F11                     	;# 
  6327  0F12                     	;# 
  6328  0F13                     	;# 
  6329  0F14                     	;# 
  6330  0F15                     	;# 
  6331  0F16                     	;# 
  6332  0F17                     	;# 
  6333  0F18                     	;# 
  6334  0F19                     	;# 
  6335  0F1A                     	;# 
  6336  0F1B                     	;# 
  6337  0F1C                     	;# 
  6338  0F1D                     	;# 
  6339  0F1E                     	;# 
  6340  0F1F                     	;# 
  6341  0F20                     	;# 
  6342  0F21                     	;# 
  6343  0F22                     	;# 
  6344  0F23                     	;# 
  6345  0F24                     	;# 
  6346  0F25                     	;# 
  6347  0F26                     	;# 
  6348  0F27                     	;# 
  6349  0F38                     	;# 
  6350  0F39                     	;# 
  6351  0F3A                     	;# 
  6352  0F3B                     	;# 
  6353  0F3C                     	;# 
  6354  0F3D                     	;# 
  6355  0F3E                     	;# 
  6356  0F3F                     	;# 
  6357  0F40                     	;# 
  6358  0F41                     	;# 
  6359  0F43                     	;# 
  6360  0F44                     	;# 
  6361  0F45                     	;# 
  6362  0F46                     	;# 
  6363  0F47                     	;# 
  6364  0F48                     	;# 
  6365  0F49                     	;# 
  6366  0F4A                     	;# 
  6367  0F4B                     	;# 
  6368  0F4C                     	;# 
  6369  0F4E                     	;# 
  6370  0F4F                     	;# 
  6371  0F50                     	;# 
  6372  0F51                     	;# 
  6373  0F52                     	;# 
  6374  0F53                     	;# 
  6375  0F54                     	;# 
  6376  0F55                     	;# 
  6377  0F56                     	;# 
  6378  0F57                     	;# 
  6379  0F65                     	;# 
  6380  0F68                     	;# 
  6381  0F69                     	;# 
  6382  0F6A                     	;# 
  6383  0F6B                     	;# 
  6384  0FE4                     	;# 
  6385  0FE5                     	;# 
  6386  0FE6                     	;# 
  6387  0FE7                     	;# 
  6388  0FE8                     	;# 
  6389  0FE9                     	;# 
  6390  0FEA                     	;# 
  6391  0FEB                     	;# 
  6392  0FED                     	;# 
  6393  0FEE                     	;# 
  6394  0FEF                     	;# 
  6395  0000                     	;# 
  6396  0001                     	;# 
  6397  0002                     	;# 
  6398  0003                     	;# 
  6399  0004                     	;# 
  6400  0005                     	;# 
  6401  0006                     	;# 
  6402  0007                     	;# 
  6403  0008                     	;# 
  6404  0009                     	;# 
  6405  000A                     	;# 
  6406  000B                     	;# 
  6407  000C                     	;# 
  6408  000D                     	;# 
  6409  000E                     	;# 
  6410  0010                     	;# 
  6411  0011                     	;# 
  6412  0012                     	;# 
  6413  0013                     	;# 
  6414  0016                     	;# 
  6415  0017                     	;# 
  6416  0018                     	;# 
  6417  001C                     	;# 
  6418  001C                     	;# 
  6419  001D                     	;# 
  6420  001D                     	;# 
  6421  001E                     	;# 
  6422  001F                     	;# 
  6423  008C                     	;# 
  6424  008C                     	;# 
  6425  008D                     	;# 
  6426  008E                     	;# 
  6427  008E                     	;# 
  6428  008F                     	;# 
  6429  0090                     	;# 
  6430  0090                     	;# 
  6431  0091                     	;# 
  6432  0093                     	;# 
  6433  0094                     	;# 
  6434  0095                     	;# 
  6435  0096                     	;# 
  6436  0097                     	;# 
  6437  0098                     	;# 
  6438  0099                     	;# 
  6439  009A                     	;# 
  6440  009B                     	;# 
  6441  009C                     	;# 
  6442  009D                     	;# 
  6443  009E                     	;# 
  6444  010C                     	;# 
  6445  010D                     	;# 
  6446  010E                     	;# 
  6447  010E                     	;# 
  6448  010F                     	;# 
  6449  0110                     	;# 
  6450  0110                     	;# 
  6451  0111                     	;# 
  6452  0112                     	;# 
  6453  0112                     	;# 
  6454  0113                     	;# 
  6455  0114                     	;# 
  6456  0114                     	;# 
  6457  0115                     	;# 
  6458  0116                     	;# 
  6459  0116                     	;# 
  6460  0117                     	;# 
  6461  0119                     	;# 
  6462  0119                     	;# 
  6463  0119                     	;# 
  6464  011A                     	;# 
  6465  011A                     	;# 
  6466  011A                     	;# 
  6467  011B                     	;# 
  6468  011B                     	;# 
  6469  011B                     	;# 
  6470  011B                     	;# 
  6471  011B                     	;# 
  6472  011C                     	;# 
  6473  011C                     	;# 
  6474  011C                     	;# 
  6475  011D                     	;# 
  6476  011D                     	;# 
  6477  011D                     	;# 
  6478  011E                     	;# 
  6479  011E                     	;# 
  6480  011E                     	;# 
  6481  011F                     	;# 
  6482  011F                     	;# 
  6483  011F                     	;# 
  6484  011F                     	;# 
  6485  011F                     	;# 
  6486  018C                     	;# 
  6487  018D                     	;# 
  6488  018E                     	;# 
  6489  018F                     	;# 
  6490  0190                     	;# 
  6491  0191                     	;# 
  6492  0192                     	;# 
  6493  0196                     	;# 
  6494  0197                     	;# 
  6495  0198                     	;# 
  6496  0199                     	;# 
  6497  019A                     	;# 
  6498  019B                     	;# 
  6499  019C                     	;# 
  6500  020C                     	;# 
  6501  020C                     	;# 
  6502  020D                     	;# 
  6503  020E                     	;# 
  6504  020F                     	;# 
  6505  020F                     	;# 
  6506  0210                     	;# 
  6507  0210                     	;# 
  6508  0211                     	;# 
  6509  0211                     	;# 
  6510  0212                     	;# 
  6511  0212                     	;# 
  6512  0213                     	;# 
  6513  0214                     	;# 
  6514  0215                     	;# 
  6515  0215                     	;# 
  6516  0216                     	;# 
  6517  0216                     	;# 
  6518  0217                     	;# 
  6519  0217                     	;# 
  6520  0218                     	;# 
  6521  0218                     	;# 
  6522  0219                     	;# 
  6523  021A                     	;# 
  6524  021B                     	;# 
  6525  021B                     	;# 
  6526  021C                     	;# 
  6527  021C                     	;# 
  6528  021D                     	;# 
  6529  021D                     	;# 
  6530  021E                     	;# 
  6531  021F                     	;# 
  6532  028C                     	;# 
  6533  028C                     	;# 
  6534  028D                     	;# 
  6535  028D                     	;# 
  6536  028E                     	;# 
  6537  028F                     	;# 
  6538  0290                     	;# 
  6539  0290                     	;# 
  6540  0291                     	;# 
  6541  0292                     	;# 
  6542  0292                     	;# 
  6543  0293                     	;# 
  6544  0293                     	;# 
  6545  0294                     	;# 
  6546  0295                     	;# 
  6547  0296                     	;# 
  6548  0296                     	;# 
  6549  0297                     	;# 
  6550  0298                     	;# 
  6551  0298                     	;# 
  6552  0299                     	;# 
  6553  0299                     	;# 
  6554  029A                     	;# 
  6555  029B                     	;# 
  6556  029C                     	;# 
  6557  029C                     	;# 
  6558  029D                     	;# 
  6559  030C                     	;# 
  6560  030C                     	;# 
  6561  030D                     	;# 
  6562  030E                     	;# 
  6563  030F                     	;# 
  6564  0310                     	;# 
  6565  0310                     	;# 
  6566  0311                     	;# 
  6567  0312                     	;# 
  6568  0313                     	;# 
  6569  0314                     	;# 
  6570  0314                     	;# 
  6571  0315                     	;# 
  6572  0316                     	;# 
  6573  0317                     	;# 
  6574  0318                     	;# 
  6575  0318                     	;# 
  6576  0319                     	;# 
  6577  031A                     	;# 
  6578  031B                     	;# 
  6579  031C                     	;# 
  6580  031C                     	;# 
  6581  031D                     	;# 
  6582  031E                     	;# 
  6583  031F                     	;# 
  6584  038C                     	;# 
  6585  038C                     	;# 
  6586  038D                     	;# 
  6587  038E                     	;# 
  6588  0390                     	;# 
  6589  0390                     	;# 
  6590  0391                     	;# 
  6591  0392                     	;# 
  6592  040C                     	;# 
  6593  040D                     	;# 
  6594  040E                     	;# 
  6595  040F                     	;# 
  6596  0410                     	;# 
  6597  0411                     	;# 
  6598  0416                     	;# 
  6599  0416                     	;# 
  6600  0417                     	;# 
  6601  0418                     	;# 
  6602  0418                     	;# 
  6603  0419                     	;# 
  6604  041A                     	;# 
  6605  041A                     	;# 
  6606  041B                     	;# 
  6607  041C                     	;# 
  6608  041C                     	;# 
  6609  041D                     	;# 
  6610  041E                     	;# 
  6611  041F                     	;# 
  6612  048C                     	;# 
  6613  048C                     	;# 
  6614  048D                     	;# 
  6615  048E                     	;# 
  6616  048F                     	;# 
  6617  048F                     	;# 
  6618  0490                     	;# 
  6619  0491                     	;# 
  6620  0492                     	;# 
  6621  0492                     	;# 
  6622  0493                     	;# 
  6623  0494                     	;# 
  6624  0495                     	;# 
  6625  0495                     	;# 
  6626  0496                     	;# 
  6627  0497                     	;# 
  6628  0498                     	;# 
  6629  0499                     	;# 
  6630  049A                     	;# 
  6631  049B                     	;# 
  6632  049C                     	;# 
  6633  049D                     	;# 
  6634  050C                     	;# 
  6635  050C                     	;# 
  6636  050D                     	;# 
  6637  050E                     	;# 
  6638  050F                     	;# 
  6639  050F                     	;# 
  6640  0510                     	;# 
  6641  0511                     	;# 
  6642  0512                     	;# 
  6643  0512                     	;# 
  6644  0513                     	;# 
  6645  0514                     	;# 
  6646  0515                     	;# 
  6647  0515                     	;# 
  6648  0516                     	;# 
  6649  0517                     	;# 
  6650  0518                     	;# 
  6651  0519                     	;# 
  6652  051A                     	;# 
  6653  051B                     	;# 
  6654  051C                     	;# 
  6655  051D                     	;# 
  6656  058C                     	;# 
  6657  058C                     	;# 
  6658  058D                     	;# 
  6659  058E                     	;# 
  6660  058F                     	;# 
  6661  058F                     	;# 
  6662  0590                     	;# 
  6663  0591                     	;# 
  6664  0592                     	;# 
  6665  0593                     	;# 
  6666  060C                     	;# 
  6667  060D                     	;# 
  6668  060E                     	;# 
  6669  060F                     	;# 
  6670  0610                     	;# 
  6671  0611                     	;# 
  6672  0612                     	;# 
  6673  0613                     	;# 
  6674  0614                     	;# 
  6675  0616                     	;# 
  6676  0617                     	;# 
  6677  0618                     	;# 
  6678  0619                     	;# 
  6679  061A                     	;# 
  6680  061B                     	;# 
  6681  061C                     	;# 
  6682  061D                     	;# 
  6683  061E                     	;# 
  6684  068C                     	;# 
  6685  068D                     	;# 
  6686  068E                     	;# 
  6687  068F                     	;# 
  6688  0690                     	;# 
  6689  0691                     	;# 
  6690  0692                     	;# 
  6691  0693                     	;# 
  6692  0694                     	;# 
  6693  070C                     	;# 
  6694  070D                     	;# 
  6695  070E                     	;# 
  6696  070F                     	;# 
  6697  0710                     	;# 
  6698  0711                     	;# 
  6699  0712                     	;# 
  6700  0713                     	;# 
  6701  0714                     	;# 
  6702  0716                     	;# 
  6703  0717                     	;# 
  6704  0718                     	;# 
  6705  0719                     	;# 
  6706  071A                     	;# 
  6707  071B                     	;# 
  6708  071C                     	;# 
  6709  071D                     	;# 
  6710  071E                     	;# 
  6711  0796                     	;# 
  6712  0797                     	;# 
  6713  0798                     	;# 
  6714  0799                     	;# 
  6715  079A                     	;# 
  6716  079B                     	;# 
  6717  080C                     	;# 
  6718  080D                     	;# 
  6719  080E                     	;# 
  6720  080F                     	;# 
  6721  0810                     	;# 
  6722  0811                     	;# 
  6723  0812                     	;# 
  6724  0813                     	;# 
  6725  0814                     	;# 
  6726  081A                     	;# 
  6727  081B                     	;# 
  6728  081C                     	;# 
  6729  081D                     	;# 
  6730  081E                     	;# 
  6731  081F                     	;# 
  6732  088C                     	;# 
  6733  088D                     	;# 
  6734  088E                     	;# 
  6735  088F                     	;# 
  6736  0890                     	;# 
  6737  0891                     	;# 
  6738  0892                     	;# 
  6739  0893                     	;# 
  6740  0895                     	;# 
  6741  0896                     	;# 
  6742  0897                     	;# 
  6743  0898                     	;# 
  6744  0899                     	;# 
  6745  089A                     	;# 
  6746  089B                     	;# 
  6747  090C                     	;# 
  6748  090E                     	;# 
  6749  090F                     	;# 
  6750  091F                     	;# 
  6751  091F                     	;# 
  6752  098F                     	;# 
  6753  098F                     	;# 
  6754  0990                     	;# 
  6755  0991                     	;# 
  6756  0992                     	;# 
  6757  0993                     	;# 
  6758  0994                     	;# 
  6759  0995                     	;# 
  6760  0996                     	;# 
  6761  0997                     	;# 
  6762  0E0F                     	;# 
  6763  0E10                     	;# 
  6764  0E11                     	;# 
  6765  0E12                     	;# 
  6766  0E13                     	;# 
  6767  0E14                     	;# 
  6768  0E15                     	;# 
  6769  0E16                     	;# 
  6770  0E17                     	;# 
  6771  0E18                     	;# 
  6772  0E19                     	;# 
  6773  0E1A                     	;# 
  6774  0E1B                     	;# 
  6775  0E1C                     	;# 
  6776  0E1D                     	;# 
  6777  0E1E                     	;# 
  6778  0E1F                     	;# 
  6779  0E20                     	;# 
  6780  0E21                     	;# 
  6781  0E22                     	;# 
  6782  0E23                     	;# 
  6783  0E24                     	;# 
  6784  0E25                     	;# 
  6785  0E26                     	;# 
  6786  0E27                     	;# 
  6787  0E28                     	;# 
  6788  0E29                     	;# 
  6789  0E2A                     	;# 
  6790  0E2B                     	;# 
  6791  0E2C                     	;# 
  6792  0E2D                     	;# 
  6793  0E2E                     	;# 
  6794  0E2F                     	;# 
  6795  0E30                     	;# 
  6796  0E31                     	;# 
  6797  0E32                     	;# 
  6798  0E33                     	;# 
  6799  0E34                     	;# 
  6800  0E35                     	;# 
  6801  0E36                     	;# 
  6802  0E37                     	;# 
  6803  0E8F                     	;# 
  6804  0E90                     	;# 
  6805  0E91                     	;# 
  6806  0E92                     	;# 
  6807  0E93                     	;# 
  6808  0E94                     	;# 
  6809  0E95                     	;# 
  6810  0E96                     	;# 
  6811  0E97                     	;# 
  6812  0E9C                     	;# 
  6813  0E9D                     	;# 
  6814  0E9E                     	;# 
  6815  0EA1                     	;# 
  6816  0EA2                     	;# 
  6817  0EA3                     	;# 
  6818  0EA4                     	;# 
  6819  0EA5                     	;# 
  6820  0EA9                     	;# 
  6821  0EAA                     	;# 
  6822  0EAB                     	;# 
  6823  0EAC                     	;# 
  6824  0EB1                     	;# 
  6825  0EB2                     	;# 
  6826  0EB3                     	;# 
  6827  0EB8                     	;# 
  6828  0EB9                     	;# 
  6829  0EBA                     	;# 
  6830  0EBB                     	;# 
  6831  0EBC                     	;# 
  6832  0EBD                     	;# 
  6833  0EBE                     	;# 
  6834  0EC3                     	;# 
  6835  0EC5                     	;# 
  6836  0EC6                     	;# 
  6837  0EC7                     	;# 
  6838  0EC8                     	;# 
  6839  0EC9                     	;# 
  6840  0ECA                     	;# 
  6841  0ECB                     	;# 
  6842  0ECC                     	;# 
  6843  0F10                     	;# 
  6844  0F11                     	;# 
  6845  0F12                     	;# 
  6846  0F13                     	;# 
  6847  0F14                     	;# 
  6848  0F15                     	;# 
  6849  0F16                     	;# 
  6850  0F17                     	;# 
  6851  0F18                     	;# 
  6852  0F19                     	;# 
  6853  0F1A                     	;# 
  6854  0F1B                     	;# 
  6855  0F1C                     	;# 
  6856  0F1D                     	;# 
  6857  0F1E                     	;# 
  6858  0F1F                     	;# 
  6859  0F20                     	;# 
  6860  0F21                     	;# 
  6861  0F22                     	;# 
  6862  0F23                     	;# 
  6863  0F24                     	;# 
  6864  0F25                     	;# 
  6865  0F26                     	;# 
  6866  0F27                     	;# 
  6867  0F38                     	;# 
  6868  0F39                     	;# 
  6869  0F3A                     	;# 
  6870  0F3B                     	;# 
  6871  0F3C                     	;# 
  6872  0F3D                     	;# 
  6873  0F3E                     	;# 
  6874  0F3F                     	;# 
  6875  0F40                     	;# 
  6876  0F41                     	;# 
  6877  0F43                     	;# 
  6878  0F44                     	;# 
  6879  0F45                     	;# 
  6880  0F46                     	;# 
  6881  0F47                     	;# 
  6882  0F48                     	;# 
  6883  0F49                     	;# 
  6884  0F4A                     	;# 
  6885  0F4B                     	;# 
  6886  0F4C                     	;# 
  6887  0F4E                     	;# 
  6888  0F4F                     	;# 
  6889  0F50                     	;# 
  6890  0F51                     	;# 
  6891  0F52                     	;# 
  6892  0F53                     	;# 
  6893  0F54                     	;# 
  6894  0F55                     	;# 
  6895  0F56                     	;# 
  6896  0F57                     	;# 
  6897  0F65                     	;# 
  6898  0F68                     	;# 
  6899  0F69                     	;# 
  6900  0F6A                     	;# 
  6901  0F6B                     	;# 
  6902  0FE4                     	;# 
  6903  0FE5                     	;# 
  6904  0FE6                     	;# 
  6905  0FE7                     	;# 
  6906  0FE8                     	;# 
  6907  0FE9                     	;# 
  6908  0FEA                     	;# 
  6909  0FEB                     	;# 
  6910  0FED                     	;# 
  6911  0FEE                     	;# 
  6912  0FEF                     	;# 
  6913                           
  6914                           	psect	idataBANK1
  6915  0002                     __pidataBANK1:
  6916                           
  6917                           ;initializer for _k
  6918  0002  3404               	retlw	4
  6919                           
  6920                           ;initializer for _j
  6921  0003  3402               	retlw	2
  6922                           
  6923                           	psect	stringtext1
  6924  1000                     __pstringtext1:
  6925  1000                     _i2c1_fsmStateTable:
  6926  1000  34DC               	retlw	low _I2C1_DO_IDLE
  6927  1001  3416               	retlw	high _I2C1_DO_IDLE
  6928  1002  3485               	retlw	low _I2C1_DO_SEND_ADR_READ
  6929  1003  3417               	retlw	high _I2C1_DO_SEND_ADR_READ
  6930  1004  3447               	retlw	low _I2C1_DO_SEND_ADR_WRITE
  6931  1005  3417               	retlw	high _I2C1_DO_SEND_ADR_WRITE
  6932  1006  34ED               	retlw	low _I2C1_DO_TX
  6933  1007  340E               	retlw	high _I2C1_DO_TX
  6934  1008  34A2               	retlw	low _I2C1_DO_RX
  6935  1009  340D               	retlw	high _I2C1_DO_RX
  6936  100A  3438               	retlw	low _I2C1_DO_RCEN
  6937  100B  3417               	retlw	high _I2C1_DO_RCEN
  6938  100C  3487               	retlw	low _I2C1_DO_TX_EMPTY
  6939  100D  340B               	retlw	high _I2C1_DO_TX_EMPTY
  6940  100E  34E1               	retlw	low _I2C1_DO_SEND_RESTART_READ
  6941  100F  3416               	retlw	high _I2C1_DO_SEND_RESTART_READ
  6942  1010  34E6               	retlw	low _I2C1_DO_SEND_RESTART_WRITE
  6943  1011  3416               	retlw	high _I2C1_DO_SEND_RESTART_WRITE
  6944  1012  34EB               	retlw	low _I2C1_DO_SEND_RESTART
  6945  1013  3416               	retlw	high _I2C1_DO_SEND_RESTART
  6946  1014  34F0               	retlw	low _I2C1_DO_SEND_STOP
  6947  1015  3416               	retlw	high _I2C1_DO_SEND_STOP
  6948  1016  34F5               	retlw	low _I2C1_DO_RX_ACK
  6949  1017  3416               	retlw	high _I2C1_DO_RX_ACK
  6950  1018  34FA               	retlw	low _I2C1_DO_RX_NACK_STOP
  6951  1019  3416               	retlw	high _I2C1_DO_RX_NACK_STOP
  6952  101A  34FF               	retlw	low _I2C1_DO_RX_NACK_RESTART
  6953  101B  3416               	retlw	high _I2C1_DO_RX_NACK_RESTART
  6954  101C  3404               	retlw	low _I2C1_DO_RESET
  6955  101D  3417               	retlw	high _I2C1_DO_RESET
  6956  101E  3456               	retlw	low _I2C1_DO_ADDRESS_NACK
  6957  101F  340B               	retlw	high _I2C1_DO_ADDRESS_NACK
  6958  1020                     __end_of_i2c1_fsmStateTable:
  6959                           
  6960                           	psect	stringtext2
  6961  1848                     __pstringtext2:
  6962  1848                     _LCD_INIT_STRING:
  6963  1848  3428               	retlw	40
  6964  1849  340C               	retlw	12
  6965  184A  3401               	retlw	1
  6966  184B  3406               	retlw	6
  6967  184C                     __end_of_LCD_INIT_STRING:
  6968                           
  6969                           	psect	nvBANK1
  6970  00E8                     __pnvBANK1:
  6971  00E8                     _TMR0_InterruptHandler:
  6972  00E8                     	ds	2
  6973  00EA                     _EUSART_TxDefaultInterruptHandler:
  6974  00EA                     	ds	2
  6975  00EC                     _eusartTxBufferRemaining:
  6976  00EC                     	ds	1
  6977                           
  6978                           	psect	nvBANK2
  6979  0155                     __pnvBANK2:
  6980  0155                     _EUSART_ErrorHandler:
  6981  0155                     	ds	2
  6982  0157                     _EUSART_OverrunErrorHandler:
  6983  0157                     	ds	2
  6984  0159                     _EUSART_FramingErrorHandler:
  6985  0159                     	ds	2
  6986  015B                     _EUSART_RxDefaultInterruptHandler:
  6987  015B                     	ds	2
  6988  001E                     _T0CON0bits	set	30
  6989  001E                     _T0CON0	set	30
  6990  001C                     _TMR0L	set	28
  6991  001D                     _TMR0H	set	29
  6992  001F                     _T0CON1	set	31
  6993  000D                     _PORTBbits	set	13
  6994  0017                     _LATBbits	set	23
  6995  0012                     _TRISBbits	set	18
  6996  0016                     _LATAbits	set	22
  6997  000B                     _INTCONbits	set	11
  6998  0013                     _TRISC	set	19
  6999  0012                     _TRISB	set	18
  7000  0011                     _TRISA	set	17
  7001  0018                     _LATC	set	24
  7002  0017                     _LATB	set	23
  7003  0016                     _LATA	set	22
  7004  0094                     _ADCON1bits	set	148
  7005  008E                     _ADPREVL	set	142
  7006  008F                     _ADPREVH	set	143
  7007  0097                     _ADSTATbits	set	151
  7008  0090                     _ADACCL	set	144
  7009  0091                     _ADACCH	set	145
  7010  0095                     _ADCON2bits	set	149
  7011  0096                     _ADCON3bits	set	150
  7012  008C                     _ADRESL	set	140
  7013  008D                     _ADRESH	set	141
  7014  0093                     _ADCON0bits	set	147
  7015  009D                     _ADACQ	set	157
  7016  0093                     _ADCON0	set	147
  7017  0098                     _ADCLK	set	152
  7018  0099                     _ADACT	set	153
  7019  009A                     _ADREF	set	154
  7020  0097                     _ADSTAT	set	151
  7021  0096                     _ADCON3	set	150
  7022  0095                     _ADCON2	set	149
  7023  0094                     _ADCON1	set	148
  7024  009C                     _ADPRE	set	156
  7025  009B                     _ADCAP	set	155
  7026  009E                     _ADPCH	set	158
  7027  0119                     _RC1REG	set	281
  7028  011D                     _RC1STAbits	set	285
  7029  011A                     _TX1REG	set	282
  7030  011E                     _TX1STAbits	set	286
  7031  011C                     _SP1BRGH	set	284
  7032  011B                     _SP1BRGL	set	283
  7033  011E                     _TX1STA	set	286
  7034  011D                     _RC1STA	set	285
  7035  011F                     _BAUD1CON	set	287
  7036  0116                     _ADERRL	set	278
  7037  0117                     _ADERRH	set	279
  7038  0114                     _ADFLTRL	set	276
  7039  0115                     _ADFLTRH	set	277
  7040  010C                     _ADCNT	set	268
  7041  010D                     _ADRPT	set	269
  7042  0113                     _ADSTPTH	set	275
  7043  0112                     _ADSTPTL	set	274
  7044  0111                     _ADUTHH	set	273
  7045  0110                     _ADUTHL	set	272
  7046  010F                     _ADLTHH	set	271
  7047  010E                     _ADLTHL	set	270
  7048  018F                     _SSP1STATbits	set	399
  7049  0191                     _SSP1CON2bits	set	401
  7050  018C                     _SSP1BUF	set	396
  7051  0190                     _SSP1CON1bits	set	400
  7052  018D                     _SSP1ADD	set	397
  7053  0191                     _SSP1CON2	set	401
  7054  0190                     _SSP1CON1	set	400
  7055  018F                     _SSP1STAT	set	399
  7056  021F                     _CCPTMRS1bits	set	543
  7057  028D                     _PR2	set	653
  7058  028C                     _TMR2	set	652
  7059  028E                     _T2CONbits	set	654
  7060  0291                     _T2RSTbits	set	657
  7061  028F                     _T2HLTbits	set	655
  7062  028E                     _T2CON	set	654
  7063  028C                     _T2TMR	set	652
  7064  028D                     _T2PR	set	653
  7065  0291                     _T2RST	set	657
  7066  028F                     _T2HLT	set	655
  7067  0290                     _T2CLKCON	set	656
  7068  031E                     _CCP5CONbits	set	798
  7069  031C                     _CCPR5L	set	796
  7070  031D                     _CCPR5H	set	797
  7071  031E                     _CCP5CON	set	798
  7072  070C                     _PIR0bits	set	1804
  7073  0716                     _PIE0bits	set	1814
  7074  0710                     _PIR4bits	set	1808
  7075  0719                     _PIE3bits	set	1817
  7076  070F                     _PIR3bits	set	1807
  7077  079B                     _PMD5	set	1947
  7078  079A                     _PMD4	set	1946
  7079  0799                     _PMD3	set	1945
  7080  0798                     _PMD2	set	1944
  7081  0797                     _PMD1	set	1943
  7082  0796                     _PMD0	set	1942
  7083  0892                     _OSCTUNE	set	2194
  7084  0893                     _OSCFRQ	set	2195
  7085  0891                     _OSCEN	set	2193
  7086  088F                     _OSCCON3	set	2191
  7087  088D                     _OSCCON1	set	2189
  7088  0EC6                     _SSP1DATPPS	set	3782
  7089  0EC5                     _SSP1CLKPPS	set	3781
  7090  0ECB                     _RXPPS	set	3787
  7091  0F43                     _ANSELBbits	set	3907
  7092  0F27                     _RC7PPS	set	3879
  7093  0F24                     _RC4PPS	set	3876
  7094  0F23                     _RC3PPS	set	3875
  7095  0F20                     _RC0PPS	set	3872
  7096  0F68                     _INLVLE	set	3944
  7097  0F52                     _INLVLC	set	3922
  7098  0F47                     _INLVLB	set	3911
  7099  0F3C                     _INLVLA	set	3900
  7100  0F51                     _SLRCONC	set	3921
  7101  0F46                     _SLRCONB	set	3910
  7102  0F3B                     _SLRCONA	set	3899
  7103  0F50                     _ODCONC	set	3920
  7104  0F45                     _ODCONB	set	3909
  7105  0F3A                     _ODCONA	set	3898
  7106  0F4F                     _WPUC	set	3919
  7107  0F39                     _WPUA	set	3897
  7108  0F44                     _WPUB	set	3908
  7109  0F65                     _WPUE	set	3941
  7110  0F38                     _ANSELA	set	3896
  7111  0F43                     _ANSELB	set	3907
  7112  0F4E                     _ANSELC	set	3918
  7113                           
  7114                           	psect	stringtext3
  7115  1800                     __pstringtext3:
  7116  1800                     STR_4:
  7117  1800  3424               	retlw	36	;'$'
  7118  1801  346C               	retlw	108	;'l'
  7119  1802  3464               	retlw	100	;'d'
  7120  1803  3431               	retlw	49	;'1'
  7121  1804  346F               	retlw	111	;'o'
  7122  1805  3466               	retlw	102	;'f'
  7123  1806  3466               	retlw	102	;'f'
  7124  1807  3400               	retlw	0
  7125                           
  7126                           	psect	stringtext4
  7127  1808                     __pstringtext4:
  7128  1808                     STR_8:
  7129  1808  3424               	retlw	36	;'$'
  7130  1809  346C               	retlw	108	;'l'
  7131  180A  3464               	retlw	100	;'d'
  7132  180B  3432               	retlw	50	;'2'
  7133  180C  346F               	retlw	111	;'o'
  7134  180D  3466               	retlw	102	;'f'
  7135  180E  3466               	retlw	102	;'f'
  7136  180F  3400               	retlw	0
  7137                           
  7138                           	psect	stringtext5
  7139  1810                     __pstringtext5:
  7140  1810                     STR_12:
  7141  1810  3424               	retlw	36	;'$'
  7142  1811  346C               	retlw	108	;'l'
  7143  1812  3464               	retlw	100	;'d'
  7144  1813  3433               	retlw	51	;'3'
  7145  1814  346F               	retlw	111	;'o'
  7146  1815  3466               	retlw	102	;'f'
  7147  1816  3466               	retlw	102	;'f'
  7148  1817  3400               	retlw	0
  7149                           
  7150                           	psect	stringtext6
  7151  1818                     __pstringtext6:
  7152  1818                     STR_16:
  7153  1818  3424               	retlw	36	;'$'
  7154  1819  346C               	retlw	108	;'l'
  7155  181A  3464               	retlw	100	;'d'
  7156  181B  3434               	retlw	52	;'4'
  7157  181C  346F               	retlw	111	;'o'
  7158  181D  3466               	retlw	102	;'f'
  7159  181E  3466               	retlw	102	;'f'
  7160  181F  3400               	retlw	0
  7161                           
  7162                           	psect	stringtext7
  7163  1820                     __pstringtext7:
  7164  1820                     STR_20:
  7165  1820  3423               	retlw	35	;'#'
  7166  1821  3441               	retlw	65	;'A'
  7167  1822  3425               	retlw	37	;'%'
  7168  1823  3469               	retlw	105	;'i'
  7169  1824  340A               	retlw	10
  7170  1825  340D               	retlw	13
  7171  1826  3400               	retlw	0
  7172                           
  7173                           	psect	stringtext8
  7174  1827                     __pstringtext8:
  7175  1827                     STR_2:
  7176  1827  3424               	retlw	36	;'$'
  7177  1828  346C               	retlw	108	;'l'
  7178  1829  3464               	retlw	100	;'d'
  7179  182A  3431               	retlw	49	;'1'
  7180  182B  346F               	retlw	111	;'o'
  7181  182C  346E               	retlw	110	;'n'
  7182  182D  3400               	retlw	0
  7183                           
  7184                           	psect	stringtext9
  7185  182E                     __pstringtext9:
  7186  182E                     STR_6:
  7187  182E  3424               	retlw	36	;'$'
  7188  182F  346C               	retlw	108	;'l'
  7189  1830  3464               	retlw	100	;'d'
  7190  1831  3432               	retlw	50	;'2'
  7191  1832  346F               	retlw	111	;'o'
  7192  1833  346E               	retlw	110	;'n'
  7193  1834  3400               	retlw	0
  7194                           
  7195                           	psect	stringtext10
  7196  1835                     __pstringtext10:
  7197  1835                     STR_10:
  7198  1835  3424               	retlw	36	;'$'
  7199  1836  346C               	retlw	108	;'l'
  7200  1837  3464               	retlw	100	;'d'
  7201  1838  3433               	retlw	51	;'3'
  7202  1839  346F               	retlw	111	;'o'
  7203  183A  346E               	retlw	110	;'n'
  7204  183B  3400               	retlw	0
  7205                           
  7206                           	psect	stringtext11
  7207  183C                     __pstringtext11:
  7208  183C                     STR_14:
  7209  183C  3424               	retlw	36	;'$'
  7210  183D  346C               	retlw	108	;'l'
  7211  183E  3464               	retlw	100	;'d'
  7212  183F  3434               	retlw	52	;'4'
  7213  1840  346F               	retlw	111	;'o'
  7214  1841  346E               	retlw	110	;'n'
  7215  1842  3400               	retlw	0
  7216                           
  7217                           	psect	stringtext12
  7218  1843                     __pstringtext12:
  7219  1843                     STR_1:
  7220  1843  3448               	retlw	72	;'H'
  7221  1844  346F               	retlw	111	;'o'
  7222  1845  346C               	retlw	108	;'l'
  7223  1846  3461               	retlw	97	;'a'
  7224  1847  3400               	retlw	0
  7225                           
  7226                           	psect	stringtext13
  7227  184C                     __pstringtext13:
  7228  184C                     STR_18:
  7229  184C  3424               	retlw	36	;'$'
  7230  184D  3450               	retlw	80	;'P'
  7231  184E  3400               	retlw	0
  7232                           
  7233                           	psect	stringtext14
  7234  0000                     __pstringtext14:
  7235  184C                     
  7236                           	psect	cinit
  7237  00A1                     start_initialization:	
  7238                           ; #config settings
  7239                           
  7240  00A1                     __initialization:
  7241                           
  7242                           ; Initialize objects allocated to BANK1
  7243  00A1  0021               	movlb	1	; select bank1
  7244  00A2  3180  2002  3180   	fcall	__pidataBANK1	;fetch initializer
  7245  00A5  00ED               	movwf	__pdataBANK1& (0+127)
  7246  00A6  3180  2003  3180   	fcall	__pidataBANK1+1	;fetch initializer
  7247  00A9  00EE               	movwf	(__pdataBANK1+1)& (0+127)
  7248                           
  7249                           ; Clear objects allocated to BANK0
  7250  00AA  0020               	movlb	0	; select bank0
  7251  00AB  01ED               	clrf	__pbssBANK0& (0+127)
  7252  00AC  01EE               	clrf	(__pbssBANK0+1)& (0+127)
  7253  00AD  01EF               	clrf	(__pbssBANK0+2)& (0+127)
  7254                           
  7255                           ; Clear objects allocated to BANK1
  7256  00AE  30CB               	movlw	low __pbssBANK1
  7257  00AF  0084               	movwf	4
  7258  00B0  3000               	movlw	high __pbssBANK1
  7259  00B1  0085               	movwf	5
  7260  00B2  301D               	movlw	29
  7261  00B3  3197  2732  3180   	fcall	clear_ram0
  7262                           
  7263                           ; Clear objects allocated to BANK2
  7264  00B6  3020               	movlw	low __pbssBANK2
  7265  00B7  0084               	movwf	4
  7266  00B8  3001               	movlw	high __pbssBANK2
  7267  00B9  0085               	movwf	5
  7268  00BA  3035               	movlw	53
  7269  00BB  3197  2732  3180   	fcall	clear_ram0
  7270                           
  7271                           ; Clear objects allocated to BANK3
  7272  00BE  30A0               	movlw	low __pbssBANK3
  7273  00BF  0084               	movwf	4
  7274  00C0  3001               	movlw	high __pbssBANK3
  7275  00C1  0085               	movwf	5
  7276  00C2  3050               	movlw	80
  7277  00C3  3197  2732  3180   	fcall	clear_ram0
  7278                           
  7279                           ; Clear objects allocated to BANK4
  7280  00C6  3020               	movlw	low __pbssBANK4
  7281  00C7  0084               	movwf	4
  7282  00C8  3002               	movlw	high __pbssBANK4
  7283  00C9  0085               	movwf	5
  7284  00CA  3020               	movlw	32
  7285  00CB  3197  2732  3180   	fcall	clear_ram0
  7286  00CE                     end_of_initialization:	
  7287                           ;End of C runtime variable initialization code
  7288                           
  7289  00CE                     __end_of__initialization:
  7290  00CE  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7291  00CF  0020               	movlb	0
  7292  00D0  3184  2C29         	ljmp	_main	;jump to C main() function
  7293                           
  7294                           	psect	bssBANK0
  7295  006D                     __pbssBANK0:
  7296  006D                     _flags:
  7297  006D                     	ds	2
  7298  006F                     _c:
  7299  006F                     	ds	1
  7300                           
  7301                           	psect	bssBANK1
  7302  00CB                     __pbssBANK1:
  7303  00CB                     _dht_dat:
  7304  00CB                     	ds	5
  7305  00D0                     _nout:
  7306  00D0                     	ds	2
  7307  00D2                     _width:
  7308  00D2                     	ds	2
  7309  00D4                     _prec:
  7310  00D4                     	ds	2
  7311  00D6                     _duty:
  7312  00D6                     	ds	2
  7313  00D8                     _ADCC:
  7314  00D8                     	ds	2
  7315  00DA                     _GlobalErr:
  7316  00DA                     	ds	1
  7317  00DB                     _i:
  7318  00DB                     	ds	1
  7319  00DC                     _templ:
  7320  00DC                     	ds	1
  7321  00DD                     _temph:
  7322  00DD                     	ds	1
  7323  00DE                     _h:
  7324  00DE                     	ds	1
  7325  00DF                     _t:
  7326  00DF                     	ds	1
  7327  00E0                     _g_LcdY:
  7328  00E0                     	ds	1
  7329  00E1                     _g_LcdX:
  7330  00E1                     	ds	1
  7331  00E2                     _eusartRxLastError:
  7332  00E2                     	ds	1
  7333  00E3                     _eusartRxCount:
  7334  00E3                     	ds	1
  7335  00E4                     _eusartRxTail:
  7336  00E4                     	ds	1
  7337  00E5                     _eusartRxHead:
  7338  00E5                     	ds	1
  7339  00E6                     _eusartTxTail:
  7340  00E6                     	ds	1
  7341  00E7                     _eusartTxHead:
  7342  00E7                     	ds	1
  7343                           
  7344                           	psect	dataBANK1
  7345  00ED                     __pdataBANK1:
  7346  00ED                     _k:
  7347  00ED                     	ds	1
  7348  00EE                     _j:
  7349  00EE                     	ds	1
  7350                           
  7351                           	psect	bssBANK2
  7352  0120                     __pbssBANK2:
  7353  0120                     _I2C1_Status:
  7354  0120                     	ds	29
  7355  013D                     _eusartRxStatusBuffer:
  7356  013D                     	ds	8
  7357  0145                     _eusartRxBuffer:
  7358  0145                     	ds	8
  7359  014D                     _eusartTxBuffer:
  7360  014D                     	ds	8
  7361                           
  7362                           	psect	bssBANK3
  7363  01A0                     __pbssBANK3:
  7364  01A0                     _buffer3:
  7365  01A0                     	ds	20
  7366  01B4                     _buffer:
  7367  01B4                     	ds	40
  7368  01DC                     _buffer2:
  7369  01DC                     	ds	20
  7370                           
  7371                           	psect	bssBANK4
  7372  0220                     __pbssBANK4:
  7373  0220                     _dbuf:
  7374  0220                     	ds	32
  7375                           
  7376                           	psect	clrtext
  7377  1732                     clear_ram0:	
  7378                           ;	Called with FSR0 containing the base address, and
  7379                           ;	WREG with the size to clear
  7380                           
  7381  1732  0064               	clrwdt	;clear the watchdog before getting into this loop
  7382  1733                     clrloop0:
  7383  1733  0180               	clrf	0	;clear RAM location pointed to by FSR
  7384  1734  3101               	addfsr 0,1
  7385  1735  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  7386  1736  2F33               	goto	clrloop0	;have we reached the end yet?
  7387  1737  3400               	retlw	0	;all done for this memory range, return
  7388                           
  7389                           	psect	cstackBANK1
  7390  00A0                     __pcstackBANK1:
  7391  00A0                     ??_I2C1_Open:
  7392  00A0                     ?_I2C1_SetBuffer:	
  7393                           ; 1 bytes @ 0x0
  7394                           
  7395  00A0                     ??_I2C1_Close:	
  7396                           ; 1 bytes @ 0x0
  7397                           
  7398  00A0                     ??_PMD_Initialize:	
  7399                           ; 1 bytes @ 0x0
  7400                           
  7401  00A0                     ??_I2C1_Initialize:	
  7402                           ; 1 bytes @ 0x0
  7403                           
  7404  00A0                     ??_OSCILLATOR_Initialize:	
  7405                           ; 1 bytes @ 0x0
  7406                           
  7407  00A0                     ??_TMR2_Initialize:	
  7408                           ; 1 bytes @ 0x0
  7409                           
  7410  00A0                     ??_PWM5_Initialize:	
  7411                           ; 1 bytes @ 0x0
  7412                           
  7413  00A0                     ??_I2C1_DO_IDLE:	
  7414                           ; 1 bytes @ 0x0
  7415                           
  7416  00A0                     ??_I2C1_DO_SEND_ADR_READ:	
  7417                           ; 1 bytes @ 0x0
  7418                           
  7419  00A0                     ??_I2C1_DO_RCEN:	
  7420                           ; 1 bytes @ 0x0
  7421                           
  7422  00A0                     ??_I2C1_DO_SEND_RESTART_READ:	
  7423                           ; 1 bytes @ 0x0
  7424                           
  7425  00A0                     ??_I2C1_DO_SEND_RESTART_WRITE:	
  7426                           ; 1 bytes @ 0x0
  7427                           
  7428  00A0                     ??_I2C1_DO_SEND_RESTART:	
  7429                           ; 1 bytes @ 0x0
  7430                           
  7431  00A0                     ??_I2C1_DO_SEND_STOP:	
  7432                           ; 1 bytes @ 0x0
  7433                           
  7434  00A0                     ??_I2C1_DO_RX_ACK:	
  7435                           ; 1 bytes @ 0x0
  7436                           
  7437  00A0                     ??_I2C1_DO_RX_NACK_STOP:	
  7438                           ; 1 bytes @ 0x0
  7439                           
  7440  00A0                     ??_I2C1_DO_RX_NACK_RESTART:	
  7441                           ; 1 bytes @ 0x0
  7442                           
  7443  00A0                     ??_I2C1_DO_RESET:	
  7444                           ; 1 bytes @ 0x0
  7445                           
  7446  00A0                     ??_I2C1_MasterClearIrq:	
  7447                           ; 1 bytes @ 0x0
  7448                           
  7449  00A0                     ??_I2C1_MasterOpen:	
  7450                           ; 1 bytes @ 0x0
  7451                           
  7452  00A0                     ??_I2C1_MasterDisableIrq:	
  7453                           ; 1 bytes @ 0x0
  7454                           
  7455  00A0                     ??_I2C1_MasterClose:	
  7456                           ; 1 bytes @ 0x0
  7457                           
  7458  00A0                     ??_I2C1_MasterStart:	
  7459                           ; 1 bytes @ 0x0
  7460                           
  7461  00A0                     ?_I2C1_SetCallback:	
  7462                           ; 1 bytes @ 0x0
  7463                           
  7464  00A0                     ??_I2C1_MasterWaitForEvent:	
  7465                           ; 1 bytes @ 0x0
  7466                           
  7467  00A0                     ??_I2C1_MasterIsNack:	
  7468                           ; 1 bytes @ 0x0
  7469                           
  7470  00A0                     ??_I2C1_MasterSendTxData:	
  7471                           ; 1 bytes @ 0x0
  7472                           
  7473  00A0                     ??_I2C1_MasterGetRxData:	
  7474                           ; 1 bytes @ 0x0
  7475                           
  7476  00A0                     ??_I2C1_MasterSendAck:	
  7477                           ; 1 bytes @ 0x0
  7478                           
  7479  00A0                     ??_I2C1_MasterStartRx:	
  7480                           ; 1 bytes @ 0x0
  7481                           
  7482  00A0                     ??_I2C1_MasterSetIrq:	
  7483                           ; 1 bytes @ 0x0
  7484                           
  7485  00A0                     ??_I2C1_MasterEnableRestart:	
  7486                           ; 1 bytes @ 0x0
  7487                           
  7488  00A0                     ??_I2C1_MasterStop:	
  7489                           ; 1 bytes @ 0x0
  7490                           
  7491  00A0                     ??_I2C1_MasterSendNack:	
  7492                           ; 1 bytes @ 0x0
  7493                           
  7494  00A0                     ?_EUSART_SetRxInterruptHandler:	
  7495                           ; 1 bytes @ 0x0
  7496                           
  7497  00A0                     ?_EUSART_SetTxInterruptHandler:	
  7498                           ; 1 bytes @ 0x0
  7499                           
  7500  00A0                     ?_EUSART_SetFramingErrorHandler:	
  7501                           ; 1 bytes @ 0x0
  7502                           
  7503  00A0                     ?_EUSART_SetOverrunErrorHandler:	
  7504                           ; 1 bytes @ 0x0
  7505                           
  7506  00A0                     ?_EUSART_SetErrorHandler:	
  7507                           ; 1 bytes @ 0x0
  7508                           
  7509  00A0                     ?_PWM5_LoadDutyValue:	
  7510                           ; 1 bytes @ 0x0
  7511                           
  7512  00A0                     ?_TMR0_SetInterruptHandler:	
  7513                           ; 1 bytes @ 0x0
  7514                           
  7515  00A0                     ?_strchr:	
  7516                           ; 1 bytes @ 0x0
  7517                           
  7518  00A0                     ??_ADCC_Initialize:	
  7519                           ; 1 bytes @ 0x0
  7520                           
  7521  00A0                     ??_PIN_MANAGER_Initialize:	
  7522                           ; 1 bytes @ 0x0
  7523                           
  7524  00A0                     ?_isspace:	
  7525                           ; 1 bytes @ 0x0
  7526                           
  7527  00A0                     ?_isdigit:	
  7528                           ; 2 bytes @ 0x0
  7529                           
  7530  00A0                     ?_strlen:	
  7531                           ; 2 bytes @ 0x0
  7532                           
  7533  00A0                     ?_strncmp:	
  7534                           ; 2 bytes @ 0x0
  7535                           
  7536  00A0                     ?___wmul:	
  7537                           ; 2 bytes @ 0x0
  7538                           
  7539  00A0                     I2C1_MasterSendTxData@data:	
  7540                           ; 2 bytes @ 0x0
  7541                           
  7542  00A0                     I2C1_SetBuffer@bufferSize:	
  7543                           ; 1 bytes @ 0x0
  7544                           
  7545  00A0                     I2C1_SetCallback@cb:	
  7546                           ; 2 bytes @ 0x0
  7547                           
  7548  00A0                     EUSART_SetFramingErrorHandler@interruptHandler:	
  7549                           ; 2 bytes @ 0x0
  7550                           
  7551  00A0                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  7552                           ; 2 bytes @ 0x0
  7553                           
  7554  00A0                     EUSART_SetErrorHandler@interruptHandler:	
  7555                           ; 2 bytes @ 0x0
  7556                           
  7557  00A0                     EUSART_SetTxInterruptHandler@interruptHandler:	
  7558                           ; 2 bytes @ 0x0
  7559                           
  7560  00A0                     EUSART_SetRxInterruptHandler@interruptHandler:	
  7561                           ; 2 bytes @ 0x0
  7562                           
  7563  00A0                     TMR0_SetInterruptHandler@InterruptHandler:	
  7564                           ; 2 bytes @ 0x0
  7565                           
  7566  00A0                     PWM5_LoadDutyValue@dutyValue:	
  7567                           ; 2 bytes @ 0x0
  7568                           
  7569  00A0                     ___wmul@multiplier:	
  7570                           ; 2 bytes @ 0x0
  7571                           
  7572  00A0                     isdigit@c:	
  7573                           ; 2 bytes @ 0x0
  7574                           
  7575  00A0                     isspace@c:	
  7576                           ; 2 bytes @ 0x0
  7577                           
  7578  00A0                     strlen@s:	
  7579                           ; 2 bytes @ 0x0
  7580                           
  7581  00A0                     strchr@c:	
  7582                           ; 2 bytes @ 0x0
  7583                           
  7584  00A0                     strncmp@_r:	
  7585                           ; 2 bytes @ 0x0
  7586                           
  7587                           
  7588                           ; 2 bytes @ 0x0
  7589  00A0                     	ds	1
  7590  00A1                     ??_I2C1_DO_SEND_ADR_WRITE:
  7591  00A1                     I2C1_Open@address:	
  7592                           ; 1 bytes @ 0x1
  7593                           
  7594  00A1                     I2C1_Close@returnValue:	
  7595                           ; 1 bytes @ 0x1
  7596                           
  7597                           
  7598                           ; 1 bytes @ 0x1
  7599  00A1                     	ds	1
  7600  00A2                     ??_I2C1_SetBuffer:
  7601  00A2                     ??_TMR0_Initialize:	
  7602                           ; 1 bytes @ 0x2
  7603                           
  7604  00A2                     ??_EUSART_Initialize:	
  7605                           ; 1 bytes @ 0x2
  7606                           
  7607  00A2                     ??_EUSART_SetRxInterruptHandler:	
  7608                           ; 1 bytes @ 0x2
  7609                           
  7610  00A2                     ??_EUSART_SetTxInterruptHandler:	
  7611                           ; 1 bytes @ 0x2
  7612                           
  7613  00A2                     ??_EUSART_SetFramingErrorHandler:	
  7614                           ; 1 bytes @ 0x2
  7615                           
  7616  00A2                     ??_EUSART_SetOverrunErrorHandler:	
  7617                           ; 1 bytes @ 0x2
  7618                           
  7619  00A2                     ??_EUSART_SetErrorHandler:	
  7620                           ; 1 bytes @ 0x2
  7621                           
  7622  00A2                     ??_PWM5_LoadDutyValue:	
  7623                           ; 1 bytes @ 0x2
  7624                           
  7625  00A2                     ??_TMR0_SetInterruptHandler:	
  7626                           ; 1 bytes @ 0x2
  7627                           
  7628  00A2                     ??_isspace:	
  7629                           ; 1 bytes @ 0x2
  7630                           
  7631  00A2                     ??_isdigit:	
  7632                           ; 1 bytes @ 0x2
  7633                           
  7634  00A2                     ??_strlen:	
  7635                           ; 1 bytes @ 0x2
  7636                           
  7637  00A2                     ??_strchr:	
  7638                           ; 1 bytes @ 0x2
  7639                           
  7640  00A2                     I2C1_Open@returnValue:	
  7641                           ; 1 bytes @ 0x2
  7642                           
  7643  00A2                     I2C1_SetCallback@ptr:	
  7644                           ; 1 bytes @ 0x2
  7645                           
  7646  00A2                     strchr@s:	
  7647                           ; 1 bytes @ 0x2
  7648                           
  7649  00A2                     ___wmul@multiplicand:	
  7650                           ; 1 bytes @ 0x2
  7651                           
  7652  00A2                     strncmp@n:	
  7653                           ; 2 bytes @ 0x2
  7654                           
  7655                           
  7656                           ; 2 bytes @ 0x2
  7657  00A2                     	ds	1
  7658  00A3                     ??_I2C1_SetCallback:
  7659  00A3                     ??_SYSTEM_Initialize:	
  7660                           ; 1 bytes @ 0x3
  7661                           
  7662  00A3                     I2C1_SetBuffer@buffer:	
  7663                           ; 1 bytes @ 0x3
  7664                           
  7665  00A3                     strlen@a:	
  7666                           ; 1 bytes @ 0x3
  7667                           
  7668                           
  7669                           ; 2 bytes @ 0x3
  7670  00A3                     	ds	1
  7671  00A4                     ??_strncmp:
  7672  00A4                     ??___wmul:	
  7673                           ; 1 bytes @ 0x4
  7674                           
  7675  00A4                     I2C1_SetCallback@idx:	
  7676                           ; 1 bytes @ 0x4
  7677                           
  7678  00A4                     _isspace$2785:	
  7679                           ; 1 bytes @ 0x4
  7680                           
  7681  00A4                     ___wmul@product:	
  7682                           ; 1 bytes @ 0x4
  7683                           
  7684                           
  7685                           ; 2 bytes @ 0x4
  7686  00A4                     	ds	1
  7687  00A5                     ?_I2C1_SetDataCompleteCallback:
  7688  00A5                     ?_I2C1_SetAddressNackCallback:	
  7689                           ; 1 bytes @ 0x5
  7690                           
  7691  00A5                     strncmp@_l:	
  7692                           ; 1 bytes @ 0x5
  7693                           
  7694  00A5                     I2C1_SetDataCompleteCallback@cb:	
  7695                           ; 1 bytes @ 0x5
  7696                           
  7697  00A5                     I2C1_SetAddressNackCallback@cb:	
  7698                           ; 2 bytes @ 0x5
  7699                           
  7700                           
  7701                           ; 2 bytes @ 0x5
  7702  00A5                     	ds	1
  7703  00A6                     ?_atoi:
  7704  00A6                     strncmp@r:	
  7705                           ; 2 bytes @ 0x6
  7706                           
  7707                           
  7708                           ; 2 bytes @ 0x6
  7709  00A6                     	ds	1
  7710  00A7                     I2C1_SetDataCompleteCallback@ptr:
  7711  00A7                     I2C1_SetAddressNackCallback@ptr:	
  7712                           ; 1 bytes @ 0x7
  7713                           
  7714                           
  7715                           ; 1 bytes @ 0x7
  7716  00A7                     	ds	1
  7717  00A8                     ??_I2C1_SetDataCompleteCallback:
  7718  00A8                     ??_I2C1_SetAddressNackCallback:	
  7719                           ; 1 bytes @ 0x8
  7720                           
  7721  00A8                     ??_atoi:	
  7722                           ; 1 bytes @ 0x8
  7723                           
  7724  00A8                     strncmp@l:	
  7725                           ; 1 bytes @ 0x8
  7726                           
  7727                           
  7728                           ; 1 bytes @ 0x8
  7729  00A8                     	ds	1
  7730  00A9                     ?_rd1RegCompleteHandler:
  7731  00A9                     ?_rd2RegCompleteHandler:	
  7732                           ; 1 bytes @ 0x9
  7733                           
  7734  00A9                     ?_wr1RegCompleteHandler:	
  7735                           ; 1 bytes @ 0x9
  7736                           
  7737  00A9                     ?_wr2RegCompleteHandler:	
  7738                           ; 1 bytes @ 0x9
  7739                           
  7740  00A9                     ?_rdBlkRegCompleteHandler:	
  7741                           ; 1 bytes @ 0x9
  7742                           
  7743  00A9                     ?_I2C1_CallbackReturnStop:	
  7744                           ; 1 bytes @ 0x9
  7745                           
  7746  00A9                     ?_I2C1_CallbackReturnReset:	
  7747                           ; 1 bytes @ 0x9
  7748                           
  7749  00A9                     ?_strstr:	
  7750                           ; 1 bytes @ 0x9
  7751                           
  7752  00A9                     rd1RegCompleteHandler@ptr:	
  7753                           ; 1 bytes @ 0x9
  7754                           
  7755  00A9                     rd2RegCompleteHandler@ptr:	
  7756                           ; 1 bytes @ 0x9
  7757                           
  7758  00A9                     wr1RegCompleteHandler@ptr:	
  7759                           ; 1 bytes @ 0x9
  7760                           
  7761  00A9                     wr2RegCompleteHandler@ptr:	
  7762                           ; 1 bytes @ 0x9
  7763                           
  7764  00A9                     rdBlkRegCompleteHandler@ptr:	
  7765                           ; 1 bytes @ 0x9
  7766                           
  7767  00A9                     I2C1_CallbackReturnStop@funPtr:	
  7768                           ; 1 bytes @ 0x9
  7769                           
  7770  00A9                     I2C1_CallbackReturnReset@funPtr:	
  7771                           ; 1 bytes @ 0x9
  7772                           
  7773  00A9                     strstr@n:	
  7774                           ; 1 bytes @ 0x9
  7775                           
  7776                           
  7777                           ; 2 bytes @ 0x9
  7778  00A9                     	ds	1
  7779  00AA                     ??_rd1RegCompleteHandler:
  7780  00AA                     ??_rd2RegCompleteHandler:	
  7781                           ; 1 bytes @ 0xA
  7782                           
  7783  00AA                     ??_wr1RegCompleteHandler:	
  7784                           ; 1 bytes @ 0xA
  7785                           
  7786  00AA                     ??_wr2RegCompleteHandler:	
  7787                           ; 1 bytes @ 0xA
  7788                           
  7789  00AA                     ??_rdBlkRegCompleteHandler:	
  7790                           ; 1 bytes @ 0xA
  7791                           
  7792  00AA                     ??_I2C1_DO_TX:	
  7793                           ; 1 bytes @ 0xA
  7794                           
  7795  00AA                     ??_I2C1_DO_RX:	
  7796                           ; 1 bytes @ 0xA
  7797                           
  7798  00AA                     ??_I2C1_DO_TX_EMPTY:	
  7799                           ; 1 bytes @ 0xA
  7800                           
  7801  00AA                     ??_I2C1_DO_ADDRESS_NACK:	
  7802                           ; 1 bytes @ 0xA
  7803                           
  7804  00AA                     ??_I2C1_CallbackReturnStop:	
  7805                           ; 1 bytes @ 0xA
  7806                           
  7807  00AA                     ??_I2C1_CallbackReturnReset:	
  7808                           ; 1 bytes @ 0xA
  7809                           
  7810                           
  7811                           ; 1 bytes @ 0xA
  7812  00AA                     	ds	1
  7813  00AB                     ??_strstr:
  7814                           
  7815                           ; 1 bytes @ 0xB
  7816  00AB                     	ds	1
  7817  00AC                     atoi@neg:
  7818                           
  7819                           ; 2 bytes @ 0xC
  7820  00AC                     	ds	1
  7821  00AD                     ??_I2C1_MasterFsm:
  7822                           
  7823                           ; 1 bytes @ 0xD
  7824  00AD                     	ds	1
  7825  00AE                     _atoi$2767:
  7826  00AE                     strstr@nl:	
  7827                           ; 2 bytes @ 0xE
  7828                           
  7829                           
  7830                           ; 2 bytes @ 0xE
  7831  00AE                     	ds	2
  7832  00B0                     ??_I2C1_Poller:
  7833  00B0                     ??_I2C1_MasterOperation:	
  7834                           ; 1 bytes @ 0x10
  7835                           
  7836  00B0                     strstr@h:	
  7837                           ; 1 bytes @ 0x10
  7838                           
  7839  00B0                     _atoi$2769:	
  7840                           ; 1 bytes @ 0x10
  7841                           
  7842                           
  7843                           ; 2 bytes @ 0x10
  7844  00B0                     	ds	1
  7845  00B1                     I2C1_MasterOperation@read:
  7846                           
  7847                           ; 1 bytes @ 0x11
  7848  00B1                     	ds	1
  7849  00B2                     I2C1_MasterOperation@returnValue:
  7850  00B2                     _atoi$2768:	
  7851                           ; 1 bytes @ 0x12
  7852                           
  7853                           
  7854                           ; 1 bytes @ 0x12
  7855  00B2                     	ds	1
  7856  00B3                     ??_I2C1_MasterWrite:
  7857  00B3                     ?_I2C1_Write1ByteRegister:	
  7858                           ; 1 bytes @ 0x13
  7859                           
  7860  00B3                     I2C1_Write1ByteRegister@reg:	
  7861                           ; 1 bytes @ 0x13
  7862                           
  7863  00B3                     atoi@n:	
  7864                           ; 1 bytes @ 0x13
  7865                           
  7866                           
  7867                           ; 2 bytes @ 0x13
  7868  00B3                     	ds	1
  7869  00B4                     I2C1_Write1ByteRegister@data:
  7870                           
  7871                           ; 1 bytes @ 0x14
  7872  00B4                     	ds	1
  7873  00B5                     ??_I2C1_Write1ByteRegister:
  7874  00B5                     atoi@s:	
  7875                           ; 1 bytes @ 0x15
  7876                           
  7877                           
  7878                           ; 1 bytes @ 0x15
  7879  00B5                     	ds	1
  7880  00B6                     I2C1_Write1ByteRegister@address:
  7881                           
  7882                           ; 1 bytes @ 0x16
  7883  00B6                     	ds	1
  7884  00B7                     ??_Write_PCF:
  7885                           
  7886                           ; 1 bytes @ 0x17
  7887  00B7                     	ds	1
  7888  00B8                     Write_PCF@dato:
  7889                           
  7890                           ; 1 bytes @ 0x18
  7891  00B8                     	ds	1
  7892  00B9                     ?_Send_D7_D4:
  7893  00B9                     Send_D7_D4@nibble:	
  7894                           ; 1 bytes @ 0x19
  7895                           
  7896                           
  7897                           ; 1 bytes @ 0x19
  7898  00B9                     	ds	1
  7899  00BA                     ??_Send_D7_D4:
  7900                           
  7901                           ; 1 bytes @ 0x1A
  7902  00BA                     	ds	1
  7903  00BB                     Send_D7_D4@address:
  7904                           
  7905                           ; 1 bytes @ 0x1B
  7906  00BB                     	ds	1
  7907  00BC                     Send_D7_D4@datos:
  7908                           
  7909                           ; 1 bytes @ 0x1C
  7910  00BC                     	ds	1
  7911  00BD                     ?_lcd_send_byte:
  7912  00BD                     lcd_send_byte@n:	
  7913                           ; 1 bytes @ 0x1D
  7914                           
  7915                           
  7916                           ; 1 bytes @ 0x1D
  7917  00BD                     	ds	1
  7918  00BE                     ??_lcd_send_byte:
  7919                           
  7920                           ; 1 bytes @ 0x1E
  7921  00BE                     	ds	2
  7922  00C0                     lcd_send_byte@address:
  7923                           
  7924                           ; 1 bytes @ 0x20
  7925  00C0                     	ds	1
  7926  00C1                     ??_lcd_init:
  7927  00C1                     ?_lcd_gotoxy:	
  7928                           ; 1 bytes @ 0x21
  7929                           
  7930  00C1                     lcd_gotoxy@y:	
  7931                           ; 1 bytes @ 0x21
  7932                           
  7933                           
  7934                           ; 1 bytes @ 0x21
  7935  00C1                     	ds	1
  7936  00C2                     ??_lcd_gotoxy:
  7937  00C2                     lcd_init@i:	
  7938                           ; 1 bytes @ 0x22
  7939                           
  7940                           
  7941                           ; 1 bytes @ 0x22
  7942  00C2                     	ds	2
  7943  00C4                     lcd_gotoxy@x:
  7944                           
  7945                           ; 1 bytes @ 0x24
  7946  00C4                     	ds	1
  7947  00C5                     lcd_gotoxy@address:
  7948                           
  7949                           ; 1 bytes @ 0x25
  7950  00C5                     	ds	1
  7951  00C6                     ?_lcd_puts:
  7952  00C6                     lcd_puts@dato:	
  7953                           ; 1 bytes @ 0x26
  7954                           
  7955                           
  7956                           ; 2 bytes @ 0x26
  7957  00C6                     	ds	2
  7958  00C8                     ??_lcd_puts:
  7959                           
  7960                           ; 1 bytes @ 0x28
  7961  00C8                     	ds	2
  7962  00CA                     ??_main:
  7963                           
  7964                           ; 1 bytes @ 0x2A
  7965  00CA                     	ds	1
  7966                           
  7967                           	psect	cstackCOMMON
  7968  0070                     __pcstackCOMMON:
  7969  0070                     ?_I2C1_Open:
  7970  0070                     ?_I2C1_MasterWrite:	
  7971                           ; 1 bytes @ 0x0
  7972                           
  7973  0070                     ?_I2C1_Close:	
  7974                           ; 1 bytes @ 0x0
  7975                           
  7976  0070                     ?_PMD_Initialize:	
  7977                           ; 1 bytes @ 0x0
  7978                           
  7979  0070                     ?_I2C1_Initialize:	
  7980                           ; 1 bytes @ 0x0
  7981                           
  7982  0070                     ?_OSCILLATOR_Initialize:	
  7983                           ; 1 bytes @ 0x0
  7984                           
  7985  0070                     ?_TMR2_Initialize:	
  7986                           ; 1 bytes @ 0x0
  7987                           
  7988  0070                     ?_PWM5_Initialize:	
  7989                           ; 1 bytes @ 0x0
  7990                           
  7991  0070                     ?_TMR0_Initialize:	
  7992                           ; 1 bytes @ 0x0
  7993                           
  7994  0070                     ?_EUSART_Initialize:	
  7995                           ; 1 bytes @ 0x0
  7996                           
  7997  0070                     ?_I2C1_DO_IDLE:	
  7998                           ; 1 bytes @ 0x0
  7999                           
  8000  0070                     ?_I2C1_DO_SEND_ADR_READ:	
  8001                           ; 1 bytes @ 0x0
  8002                           
  8003  0070                     ?_I2C1_DO_SEND_ADR_WRITE:	
  8004                           ; 1 bytes @ 0x0
  8005                           
  8006  0070                     ?_I2C1_DO_TX:	
  8007                           ; 1 bytes @ 0x0
  8008                           
  8009  0070                     ?_I2C1_DO_RX:	
  8010                           ; 1 bytes @ 0x0
  8011                           
  8012  0070                     ?_I2C1_DO_RCEN:	
  8013                           ; 1 bytes @ 0x0
  8014                           
  8015  0070                     ?_I2C1_DO_TX_EMPTY:	
  8016                           ; 1 bytes @ 0x0
  8017                           
  8018  0070                     ?_I2C1_DO_SEND_RESTART_READ:	
  8019                           ; 1 bytes @ 0x0
  8020                           
  8021  0070                     ?_I2C1_DO_SEND_RESTART_WRITE:	
  8022                           ; 1 bytes @ 0x0
  8023                           
  8024  0070                     ?_I2C1_DO_SEND_RESTART:	
  8025                           ; 1 bytes @ 0x0
  8026                           
  8027  0070                     ?_I2C1_DO_SEND_STOP:	
  8028                           ; 1 bytes @ 0x0
  8029                           
  8030  0070                     ?_I2C1_DO_RX_ACK:	
  8031                           ; 1 bytes @ 0x0
  8032                           
  8033  0070                     ?_I2C1_DO_RX_NACK_STOP:	
  8034                           ; 1 bytes @ 0x0
  8035                           
  8036  0070                     ?_I2C1_DO_RX_NACK_RESTART:	
  8037                           ; 1 bytes @ 0x0
  8038                           
  8039  0070                     ?_I2C1_DO_RESET:	
  8040                           ; 1 bytes @ 0x0
  8041                           
  8042  0070                     ?_I2C1_DO_ADDRESS_NACK:	
  8043                           ; 1 bytes @ 0x0
  8044                           
  8045  0070                     ?_I2C1_MasterClearIrq:	
  8046                           ; 1 bytes @ 0x0
  8047                           
  8048  0070                     ?_I2C1_MasterOpen:	
  8049                           ; 1 bytes @ 0x0
  8050                           
  8051  0070                     ?_I2C1_MasterDisableIrq:	
  8052                           ; 1 bytes @ 0x0
  8053                           
  8054  0070                     ?_I2C1_MasterClose:	
  8055                           ; 1 bytes @ 0x0
  8056                           
  8057  0070                     ?_I2C1_MasterStart:	
  8058                           ; 1 bytes @ 0x0
  8059                           
  8060  0070                     ?_I2C1_Poller:	
  8061                           ; 1 bytes @ 0x0
  8062                           
  8063  0070                     ?_I2C1_MasterWaitForEvent:	
  8064                           ; 1 bytes @ 0x0
  8065                           
  8066  0070                     ?_I2C1_MasterFsm:	
  8067                           ; 1 bytes @ 0x0
  8068                           
  8069  0070                     ?_I2C1_MasterIsNack:	
  8070                           ; 1 bytes @ 0x0
  8071                           
  8072  0070                     ?_I2C1_MasterSendTxData:	
  8073                           ; 1 bytes @ 0x0
  8074                           
  8075  0070                     ?_I2C1_MasterGetRxData:	
  8076                           ; 1 bytes @ 0x0
  8077                           
  8078  0070                     ?_I2C1_MasterSendAck:	
  8079                           ; 1 bytes @ 0x0
  8080                           
  8081  0070                     ?_I2C1_MasterStartRx:	
  8082                           ; 1 bytes @ 0x0
  8083                           
  8084  0070                     ?_I2C1_MasterSetIrq:	
  8085                           ; 1 bytes @ 0x0
  8086                           
  8087  0070                     ?_I2C1_MasterEnableRestart:	
  8088                           ; 1 bytes @ 0x0
  8089                           
  8090  0070                     ?_I2C1_MasterStop:	
  8091                           ; 1 bytes @ 0x0
  8092                           
  8093  0070                     ?_I2C1_MasterSendNack:	
  8094                           ; 1 bytes @ 0x0
  8095                           
  8096  0070                     ?_EUSART_Receive_ISR:	
  8097                           ; 1 bytes @ 0x0
  8098                           
  8099  0070                     ?_EUSART_Transmit_ISR:	
  8100                           ; 1 bytes @ 0x0
  8101                           
  8102  0070                     ??_EUSART_Transmit_ISR:	
  8103                           ; 1 bytes @ 0x0
  8104                           
  8105  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  8106                           ; 1 bytes @ 0x0
  8107                           
  8108  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  8109                           ; 1 bytes @ 0x0
  8110                           
  8111  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  8112                           ; 1 bytes @ 0x0
  8113                           
  8114  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  8115                           ; 1 bytes @ 0x0
  8116                           
  8117  0070                     ?_EUSART_DefaultErrorHandler:	
  8118                           ; 1 bytes @ 0x0
  8119                           
  8120  0070                     ?_EUSART_RxDataHandler:	
  8121                           ; 1 bytes @ 0x0
  8122                           
  8123  0070                     ??_EUSART_RxDataHandler:	
  8124                           ; 1 bytes @ 0x0
  8125                           
  8126  0070                     ?_lcd_init:	
  8127                           ; 1 bytes @ 0x0
  8128                           
  8129  0070                     ?_TMR0_ISR:	
  8130                           ; 1 bytes @ 0x0
  8131                           
  8132  0070                     ??_TMR0_ISR:	
  8133                           ; 1 bytes @ 0x0
  8134                           
  8135  0070                     ?_TMR0_DefaultInterruptHandler:	
  8136                           ; 1 bytes @ 0x0
  8137                           
  8138  0070                     ??_TMR0_DefaultInterruptHandler:	
  8139                           ; 1 bytes @ 0x0
  8140                           
  8141  0070                     ?_ADCC_Initialize:	
  8142                           ; 1 bytes @ 0x0
  8143                           
  8144  0070                     ?_PIN_MANAGER_Initialize:	
  8145                           ; 1 bytes @ 0x0
  8146                           
  8147  0070                     ?_SYSTEM_Initialize:	
  8148                           ; 1 bytes @ 0x0
  8149                           
  8150  0070                     ?_I2C1_MasterOperation:	
  8151                           ; 1 bytes @ 0x0
  8152                           
  8153  0070                     ?_EUSART_Read:	
  8154                           ; 1 bytes @ 0x0
  8155                           
  8156  0070                     ??_EUSART_Read:	
  8157                           ; 1 bytes @ 0x0
  8158                           
  8159  0070                     ?_EUSART_Write:	
  8160                           ; 1 bytes @ 0x0
  8161                           
  8162  0070                     ??_EUSART_Write:	
  8163                           ; 1 bytes @ 0x0
  8164                           
  8165  0070                     ?_getch:	
  8166                           ; 1 bytes @ 0x0
  8167                           
  8168  0070                     ?_putch:	
  8169                           ; 1 bytes @ 0x0
  8170                           
  8171  0070                     ?_main:	
  8172                           ; 1 bytes @ 0x0
  8173                           
  8174  0070                     ?_Write_PCF:	
  8175                           ; 1 bytes @ 0x0
  8176                           
  8177  0070                     ?_INTERRUPT_InterruptManager:	
  8178                           ; 1 bytes @ 0x0
  8179                           
  8180  0070                     ??___aodiv:	
  8181                           ; 1 bytes @ 0x0
  8182                           
  8183  0070                     ??___aomod:	
  8184                           ; 1 bytes @ 0x0
  8185                           
  8186  0070                     ?_ADCC_GetSingleConversion:	
  8187                           ; 1 bytes @ 0x0
  8188                           
  8189  0070                     ?i1_strlen:	
  8190                           ; 2 bytes @ 0x0
  8191                           
  8192  0070                     ?___lmul:	
  8193                           ; 2 bytes @ 0x0
  8194                           
  8195  0070                     i1strlen@s:	
  8196                           ; 4 bytes @ 0x0
  8197                           
  8198  0070                     ___lmul@multiplier:	
  8199                           ; 2 bytes @ 0x0
  8200                           
  8201                           
  8202                           ; 4 bytes @ 0x0
  8203  0070                     	ds	1
  8204  0071                     ??_EUSART_Receive_ISR:
  8205  0071                     ??_EUSART_DefaultErrorHandler:	
  8206                           ; 1 bytes @ 0x1
  8207                           
  8208  0071                     EUSART_Read@readValue:	
  8209                           ; 1 bytes @ 0x1
  8210                           
  8211  0071                     EUSART_Write@txData:	
  8212                           ; 1 bytes @ 0x1
  8213                           
  8214  0071                     ___aodiv@counter:	
  8215                           ; 1 bytes @ 0x1
  8216                           
  8217  0071                     ___aomod@counter:	
  8218                           ; 1 bytes @ 0x1
  8219                           
  8220                           
  8221                           ; 1 bytes @ 0x1
  8222  0071                     	ds	1
  8223  0072                     ??_ADCC_GetSingleConversion:
  8224  0072                     ??_getch:	
  8225                           ; 1 bytes @ 0x2
  8226                           
  8227  0072                     ??_putch:	
  8228                           ; 1 bytes @ 0x2
  8229                           
  8230  0072                     ??i1_strlen:	
  8231                           ; 1 bytes @ 0x2
  8232                           
  8233  0072                     ADCC_GetSingleConversion@channel:	
  8234                           ; 1 bytes @ 0x2
  8235                           
  8236  0072                     putch@txData:	
  8237                           ; 1 bytes @ 0x2
  8238                           
  8239  0072                     ___aodiv@sign:	
  8240                           ; 1 bytes @ 0x2
  8241                           
  8242  0072                     ___aomod@sign:	
  8243                           ; 1 bytes @ 0x2
  8244                           
  8245                           
  8246                           ; 1 bytes @ 0x2
  8247  0072                     	ds	1
  8248  0073                     ?_fputc:
  8249  0073                     ?_abs:	
  8250                           ; 2 bytes @ 0x3
  8251                           
  8252  0073                     abs@a:	
  8253                           ; 2 bytes @ 0x3
  8254                           
  8255  0073                     fputc@c:	
  8256                           ; 2 bytes @ 0x3
  8257                           
  8258  0073                     i1strlen@a:	
  8259                           ; 2 bytes @ 0x3
  8260                           
  8261  0073                     ___aodiv@quotient:	
  8262                           ; 2 bytes @ 0x3
  8263                           
  8264                           
  8265                           ; 8 bytes @ 0x3
  8266  0073                     	ds	1
  8267  0074                     ___lmul@multiplicand:
  8268                           
  8269                           ; 4 bytes @ 0x4
  8270  0074                     	ds	1
  8271  0075                     ??_abs:
  8272  0075                     fputc@fp:	
  8273                           ; 1 bytes @ 0x5
  8274                           
  8275                           
  8276                           ; 1 bytes @ 0x5
  8277  0075                     	ds	1
  8278  0076                     ??_fputc:
  8279                           
  8280                           ; 1 bytes @ 0x6
  8281  0076                     	ds	2
  8282  0078                     ??___lmul:
  8283  0078                     ___lmul@product:	
  8284                           ; 1 bytes @ 0x8
  8285                           
  8286                           
  8287                           ; 4 bytes @ 0x8
  8288  0078                     	ds	3
  8289  007B                     ?_fputs:
  8290  007B                     fputs@fp:	
  8291                           ; 2 bytes @ 0xB
  8292                           
  8293                           
  8294                           ; 1 bytes @ 0xB
  8295  007B                     	ds	1
  8296  007C                     ??___aldiv:
  8297  007C                     ??_pad:	
  8298                           ; 1 bytes @ 0xC
  8299                           
  8300                           
  8301                           ; 1 bytes @ 0xC
  8302  007C                     	ds	1
  8303  007D                     ??_printf:
  8304                           
  8305                           ; 1 bytes @ 0xD
  8306  007D                     	ds	1
  8307                           
  8308                           	psect	cstackBANK0
  8309  0020                     __pcstackBANK0:
  8310  0020                     ??_fputs:
  8311  0020                     ?___aldiv:	
  8312                           ; 1 bytes @ 0x0
  8313                           
  8314  0020                     ?___aodiv:	
  8315                           ; 4 bytes @ 0x0
  8316                           
  8317  0020                     ?___aomod:	
  8318                           ; 8 bytes @ 0x0
  8319                           
  8320  0020                     ___aldiv@divisor:	
  8321                           ; 8 bytes @ 0x0
  8322                           
  8323  0020                     ___aodiv@divisor:	
  8324                           ; 4 bytes @ 0x0
  8325                           
  8326  0020                     ___aomod@divisor:	
  8327                           ; 8 bytes @ 0x0
  8328                           
  8329                           
  8330                           ; 8 bytes @ 0x0
  8331  0020                     	ds	3
  8332  0023                     fputs@c:
  8333                           
  8334                           ; 1 bytes @ 0x3
  8335  0023                     	ds	1
  8336  0024                     fputs@i:
  8337  0024                     ___aldiv@dividend:	
  8338                           ; 2 bytes @ 0x4
  8339                           
  8340                           
  8341                           ; 4 bytes @ 0x4
  8342  0024                     	ds	2
  8343  0026                     fputs@s:
  8344                           
  8345                           ; 1 bytes @ 0x6
  8346  0026                     	ds	1
  8347  0027                     ?_pad:
  8348  0027                     pad@buf:	
  8349                           ; 2 bytes @ 0x7
  8350                           
  8351                           
  8352                           ; 1 bytes @ 0x7
  8353  0027                     	ds	1
  8354  0028                     ___aldiv@counter:
  8355  0028                     pad@p:	
  8356                           ; 1 bytes @ 0x8
  8357                           
  8358  0028                     ___aodiv@dividend:	
  8359                           ; 2 bytes @ 0x8
  8360                           
  8361  0028                     ___aomod@dividend:	
  8362                           ; 8 bytes @ 0x8
  8363                           
  8364                           
  8365                           ; 8 bytes @ 0x8
  8366  0028                     	ds	1
  8367  0029                     ___aldiv@sign:
  8368                           
  8369                           ; 1 bytes @ 0x9
  8370  0029                     	ds	1
  8371  002A                     pad@i:
  8372  002A                     ___aldiv@quotient:	
  8373                           ; 2 bytes @ 0xA
  8374                           
  8375                           
  8376                           ; 4 bytes @ 0xA
  8377  002A                     	ds	2
  8378  002C                     pad@w:
  8379                           
  8380                           ; 2 bytes @ 0xC
  8381  002C                     	ds	2
  8382  002E                     ?_map:
  8383  002E                     pad@fp:	
  8384                           ; 4 bytes @ 0xE
  8385                           
  8386  002E                     map@x:	
  8387                           ; 1 bytes @ 0xE
  8388                           
  8389                           
  8390                           ; 4 bytes @ 0xE
  8391  002E                     	ds	2
  8392  0030                     ?_dtoa:
  8393  0030                     dtoa@d:	
  8394                           ; 2 bytes @ 0x10
  8395                           
  8396                           
  8397                           ; 8 bytes @ 0x10
  8398  0030                     	ds	2
  8399  0032                     map@in_min:
  8400                           
  8401                           ; 4 bytes @ 0x12
  8402  0032                     	ds	4
  8403  0036                     map@in_max:
  8404                           
  8405                           ; 4 bytes @ 0x16
  8406  0036                     	ds	2
  8407  0038                     ??_dtoa:
  8408                           
  8409                           ; 1 bytes @ 0x18
  8410  0038                     	ds	2
  8411  003A                     map@out_min:
  8412                           
  8413                           ; 4 bytes @ 0x1A
  8414  003A                     	ds	1
  8415  003B                     _dtoa$2856:
  8416                           
  8417                           ; 2 bytes @ 0x1B
  8418  003B                     	ds	2
  8419  003D                     dtoa@p:
  8420                           
  8421                           ; 2 bytes @ 0x1D
  8422  003D                     	ds	1
  8423  003E                     map@out_max:
  8424                           
  8425                           ; 4 bytes @ 0x1E
  8426  003E                     	ds	1
  8427  003F                     dtoa@fp:
  8428                           
  8429                           ; 1 bytes @ 0x1F
  8430  003F                     	ds	1
  8431  0040                     dtoa@w:
  8432                           
  8433                           ; 2 bytes @ 0x20
  8434  0040                     	ds	2
  8435  0042                     ??_map:
  8436  0042                     dtoa@s:	
  8437                           ; 1 bytes @ 0x22
  8438                           
  8439                           
  8440                           ; 2 bytes @ 0x22
  8441  0042                     	ds	2
  8442  0044                     dtoa@n:
  8443                           
  8444                           ; 8 bytes @ 0x24
  8445  0044                     	ds	8
  8446  004C                     dtoa@i:
  8447                           
  8448                           ; 2 bytes @ 0x2C
  8449  004C                     	ds	2
  8450  004E                     ?_vfpfcnvrt:
  8451  004E                     vfpfcnvrt@fmt:	
  8452                           ; 2 bytes @ 0x2E
  8453                           
  8454                           
  8455                           ; 1 bytes @ 0x2E
  8456  004E                     	ds	1
  8457  004F                     vfpfcnvrt@ap:
  8458                           
  8459                           ; 1 bytes @ 0x2F
  8460  004F                     	ds	1
  8461  0050                     ??_vfpfcnvrt:
  8462                           
  8463                           ; 1 bytes @ 0x30
  8464  0050                     	ds	5
  8465  0055                     vfpfcnvrt@ll:
  8466                           
  8467                           ; 8 bytes @ 0x35
  8468  0055                     	ds	8
  8469  005D                     vfpfcnvrt@fp:
  8470                           
  8471                           ; 1 bytes @ 0x3D
  8472  005D                     	ds	1
  8473  005E                     ?_vfprintf:
  8474  005E                     vfprintf@fmt:	
  8475                           ; 2 bytes @ 0x3E
  8476                           
  8477                           
  8478                           ; 2 bytes @ 0x3E
  8479  005E                     	ds	2
  8480  0060                     vfprintf@ap:
  8481                           
  8482                           ; 1 bytes @ 0x40
  8483  0060                     	ds	1
  8484  0061                     ??_vfprintf:
  8485                           
  8486                           ; 1 bytes @ 0x41
  8487  0061                     	ds	2
  8488  0063                     vfprintf@fp:
  8489                           
  8490                           ; 1 bytes @ 0x43
  8491  0063                     	ds	1
  8492  0064                     vfprintf@cfmt:
  8493                           
  8494                           ; 2 bytes @ 0x44
  8495  0064                     	ds	2
  8496  0066                     ?_printf:
  8497  0066                     printf@fmt:	
  8498                           ; 2 bytes @ 0x46
  8499                           
  8500                           
  8501                           ; 2 bytes @ 0x46
  8502  0066                     	ds	4
  8503  006A                     printf@ap:
  8504                           
  8505                           ; 1 bytes @ 0x4A
  8506  006A                     	ds	1
  8507  006B                     ??_INTERRUPT_InterruptManager:
  8508                           
  8509                           ; 1 bytes @ 0x4B
  8510  006B                     	ds	2
  8511                           
  8512                           	psect	maintext
  8513  0429                     __pmaintext:	
  8514 ;;
  8515 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  8516 ;;
  8517 ;; *************** function _main *****************
  8518 ;; Defined at:
  8519 ;;		line 21 in file "main.c"
  8520 ;; Parameters:    Size  Location     Type
  8521 ;;		None
  8522 ;; Auto vars:     Size  Location     Type
  8523 ;;		None
  8524 ;; Return value:  Size  Location     Type
  8525 ;;                  1    wreg      void 
  8526 ;; Registers used:
  8527 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8528 ;; Tracked objects:
  8529 ;;		On entry : B1F/0
  8530 ;;		On exit  : 0/0
  8531 ;;		Unchanged: 0/0
  8532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8535 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8536 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8537 ;;Total ram usage:        1 bytes
  8538 ;; Hardware stack levels required when called: 24
  8539 ;; This function calls:
  8540 ;;		_PWM5_LoadDutyValue
  8541 ;;		_SYSTEM_Initialize
  8542 ;;		_atoi
  8543 ;;		_lcd_gotoxy
  8544 ;;		_lcd_init
  8545 ;;		_lcd_puts
  8546 ;;		_strstr
  8547 ;; This function is called by:
  8548 ;;		Startup code after reset
  8549 ;; This function uses a non-reentrant model
  8550 ;;
  8551                           
  8552                           
  8553                           ;psect for function _main
  8554  0429                     _main:
  8555  0429                     l5425:	
  8556                           ;incstack = 0
  8557 ;; hardware stack exceeded
  8558                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8559                           
  8560                           
  8561                           ;main.c: 27:     SYSTEM_Initialize();
  8562  0429  3189  2187  3184   	fcall	_SYSTEM_Initialize
  8563  042C                     l5427:
  8564                           
  8565                           ;main.c: 35:     (INTCONbits.GIE = 1);
  8566  042C  178B               	bsf	11,7	;volatile
  8567  042D                     l5429:
  8568                           
  8569                           ;main.c: 38:     (INTCONbits.PEIE = 1);
  8570  042D  170B               	bsf	11,6	;volatile
  8571  042E                     l5431:
  8572                           
  8573                           ;main.c: 45:     lcd_init();
  8574  042E  318F  27A2  3184   	fcall	_lcd_init
  8575  0431                     l5433:
  8576                           
  8577                           ;main.c: 46:     lcd_gotoxy(1,2);
  8578  0431  3002               	movlw	2
  8579  0432  0021               	movlb	1	; select bank1
  8580  0433  00CA               	movwf	??_main^(0+128)
  8581  0434  084A               	movf	??_main^(0+128),w
  8582  0435  00C1               	movwf	lcd_gotoxy@y^(0+128)
  8583  0436  3001               	movlw	1
  8584  0437  318D  255E  3184   	fcall	_lcd_gotoxy
  8585  043A                     l5435:
  8586                           
  8587                           ;main.c: 47:     lcd_puts("Hola");
  8588  043A  3043               	movlw	low (STR_1| (0+32768))
  8589  043B  0021               	movlb	1	; select bank1
  8590  043C  00C6               	movwf	lcd_puts@dato^(0+128)
  8591  043D  3098               	movlw	high (STR_1| (0+32768))
  8592  043E  00C7               	movwf	(lcd_puts@dato^(0+128)+1)
  8593  043F  318E  263C  3184   	fcall	_lcd_puts
  8594  0442                     l5437:
  8595                           
  8596                           ;main.c: 49:     {;main.c: 78:         if(strstr(buffer,"$ld1on") ){
  8597  0442  3027               	movlw	low (STR_2| (0+32768))
  8598  0443  0021               	movlb	1	; select bank1
  8599  0444  00A9               	movwf	strstr@n^(0+128)
  8600  0445  3098               	movlw	high (STR_2| (0+32768))
  8601  0446  00AA               	movwf	(strstr@n^(0+128)+1)
  8602  0447  30B4               	movlw	(low (_buffer| (0+256)))& (0+255)
  8603  0448  318D  25EE  3184   	fcall	_strstr
  8604  044B  3A00               	xorlw	0
  8605  044C  1903               	skipnz
  8606  044D  2C4F               	goto	u3241
  8607  044E  2C50               	goto	u3240
  8608  044F                     u3241:
  8609  044F  2C53               	goto	l5441
  8610  0450                     u3240:
  8611  0450                     l5439:
  8612                           
  8613                           ;main.c: 79:             LATAbits.LATA0 = 1;
  8614  0450  0020               	movlb	0	; select bank0
  8615  0451  1416               	bsf	22,0	;volatile
  8616                           
  8617                           ;main.c: 80:         }else if(strstr(buffer,"$ld1off") ){
  8618  0452  2CCA               	goto	l5469
  8619  0453                     l5441:
  8620  0453  3000               	movlw	low (STR_4| (0+32768))
  8621  0454  0021               	movlb	1	; select bank1
  8622  0455  00A9               	movwf	strstr@n^(0+128)
  8623  0456  3098               	movlw	high (STR_4| (0+32768))
  8624  0457  00AA               	movwf	(strstr@n^(0+128)+1)
  8625  0458  30B4               	movlw	(low (_buffer| (0+256)))& (0+255)
  8626  0459  318D  25EE  3184   	fcall	_strstr
  8627  045C  3A00               	xorlw	0
  8628  045D  1903               	skipnz
  8629  045E  2C60               	goto	u3251
  8630  045F  2C61               	goto	u3250
  8631  0460                     u3251:
  8632  0460  2C64               	goto	l5445
  8633  0461                     u3250:
  8634  0461                     l5443:
  8635                           
  8636                           ;main.c: 81:             LATAbits.LATA0 = 0;
  8637  0461  0020               	movlb	0	; select bank0
  8638  0462  1016               	bcf	22,0	;volatile
  8639                           
  8640                           ;main.c: 82:         }else if(strstr(buffer,"$ld2on") ){
  8641  0463  2CCA               	goto	l5469
  8642  0464                     l5445:
  8643  0464  302E               	movlw	low (STR_6| (0+32768))
  8644  0465  0021               	movlb	1	; select bank1
  8645  0466  00A9               	movwf	strstr@n^(0+128)
  8646  0467  3098               	movlw	high (STR_6| (0+32768))
  8647  0468  00AA               	movwf	(strstr@n^(0+128)+1)
  8648  0469  30B4               	movlw	(low (_buffer| (0+256)))& (0+255)
  8649  046A  318D  25EE  3184   	fcall	_strstr
  8650  046D  3A00               	xorlw	0
  8651  046E  1903               	skipnz
  8652  046F  2C71               	goto	u3261
  8653  0470  2C72               	goto	u3260
  8654  0471                     u3261:
  8655  0471  2C75               	goto	l5449
  8656  0472                     u3260:
  8657  0472                     l5447:
  8658                           
  8659                           ;main.c: 83:             LATAbits.LATA1 = 1;
  8660  0472  0020               	movlb	0	; select bank0
  8661  0473  1496               	bsf	22,1	;volatile
  8662                           
  8663                           ;main.c: 84:         }else if(strstr(buffer,"$ld2off") ){
  8664  0474  2CCA               	goto	l5469
  8665  0475                     l5449:
  8666  0475  3008               	movlw	low (STR_8| (0+32768))
  8667  0476  0021               	movlb	1	; select bank1
  8668  0477  00A9               	movwf	strstr@n^(0+128)
  8669  0478  3098               	movlw	high (STR_8| (0+32768))
  8670  0479  00AA               	movwf	(strstr@n^(0+128)+1)
  8671  047A  30B4               	movlw	(low (_buffer| (0+256)))& (0+255)
  8672  047B  318D  25EE  3184   	fcall	_strstr
  8673  047E  3A00               	xorlw	0
  8674  047F  1903               	skipnz
  8675  0480  2C82               	goto	u3271
  8676  0481  2C83               	goto	u3270
  8677  0482                     u3271:
  8678  0482  2C86               	goto	l5453
  8679  0483                     u3270:
  8680  0483                     l5451:
  8681                           
  8682                           ;main.c: 85:             LATAbits.LATA1 = 0;
  8683  0483  0020               	movlb	0	; select bank0
  8684  0484  1096               	bcf	22,1	;volatile
  8685                           
  8686                           ;main.c: 86:         }else if(strstr(buffer,"$ld3on") ){
  8687  0485  2CCA               	goto	l5469
  8688  0486                     l5453:
  8689  0486  3035               	movlw	low (STR_10| (0+32768))
  8690  0487  0021               	movlb	1	; select bank1
  8691  0488  00A9               	movwf	strstr@n^(0+128)
  8692  0489  3098               	movlw	high (STR_10| (0+32768))
  8693  048A  00AA               	movwf	(strstr@n^(0+128)+1)
  8694  048B  30B4               	movlw	(low (_buffer| (0+256)))& (0+255)
  8695  048C  318D  25EE  3184   	fcall	_strstr
  8696  048F  3A00               	xorlw	0
  8697  0490  1903               	skipnz
  8698  0491  2C93               	goto	u3281
  8699  0492  2C94               	goto	u3280
  8700  0493                     u3281:
  8701  0493  2C97               	goto	l5457
  8702  0494                     u3280:
  8703  0494                     l5455:
  8704                           
  8705                           ;main.c: 87:             LATAbits.LATA2 = 1;
  8706  0494  0020               	movlb	0	; select bank0
  8707  0495  1516               	bsf	22,2	;volatile
  8708                           
  8709                           ;main.c: 88:         }else if(strstr(buffer,"$ld3off") ){
  8710  0496  2CCA               	goto	l5469
  8711  0497                     l5457:
  8712  0497  3010               	movlw	low (STR_12| (0+32768))
  8713  0498  0021               	movlb	1	; select bank1
  8714  0499  00A9               	movwf	strstr@n^(0+128)
  8715  049A  3098               	movlw	high (STR_12| (0+32768))
  8716  049B  00AA               	movwf	(strstr@n^(0+128)+1)
  8717  049C  30B4               	movlw	(low (_buffer| (0+256)))& (0+255)
  8718  049D  318D  25EE  3184   	fcall	_strstr
  8719  04A0  3A00               	xorlw	0
  8720  04A1  1903               	skipnz
  8721  04A2  2CA4               	goto	u3291
  8722  04A3  2CA5               	goto	u3290
  8723  04A4                     u3291:
  8724  04A4  2CA8               	goto	l5461
  8725  04A5                     u3290:
  8726  04A5                     l5459:
  8727                           
  8728                           ;main.c: 89:             LATAbits.LATA2 = 0;
  8729  04A5  0020               	movlb	0	; select bank0
  8730  04A6  1116               	bcf	22,2	;volatile
  8731                           
  8732                           ;main.c: 90:         }else if(strstr(buffer,"$ld4on") ){
  8733  04A7  2CCA               	goto	l5469
  8734  04A8                     l5461:
  8735  04A8  303C               	movlw	low (STR_14| (0+32768))
  8736  04A9  0021               	movlb	1	; select bank1
  8737  04AA  00A9               	movwf	strstr@n^(0+128)
  8738  04AB  3098               	movlw	high (STR_14| (0+32768))
  8739  04AC  00AA               	movwf	(strstr@n^(0+128)+1)
  8740  04AD  30B4               	movlw	(low (_buffer| (0+256)))& (0+255)
  8741  04AE  318D  25EE  3184   	fcall	_strstr
  8742  04B1  3A00               	xorlw	0
  8743  04B2  1903               	skipnz
  8744  04B3  2CB5               	goto	u3301
  8745  04B4  2CB6               	goto	u3300
  8746  04B5                     u3301:
  8747  04B5  2CB9               	goto	l5465
  8748  04B6                     u3300:
  8749  04B6                     l5463:
  8750                           
  8751                           ;main.c: 91:             LATAbits.LATA3 = 1;
  8752  04B6  0020               	movlb	0	; select bank0
  8753  04B7  1596               	bsf	22,3	;volatile
  8754                           
  8755                           ;main.c: 92:         }else if(strstr(buffer,"$ld4off") ){
  8756  04B8  2CCA               	goto	l5469
  8757  04B9                     l5465:
  8758  04B9  3018               	movlw	low (STR_16| (0+32768))
  8759  04BA  0021               	movlb	1	; select bank1
  8760  04BB  00A9               	movwf	strstr@n^(0+128)
  8761  04BC  3098               	movlw	high (STR_16| (0+32768))
  8762  04BD  00AA               	movwf	(strstr@n^(0+128)+1)
  8763  04BE  30B4               	movlw	(low (_buffer| (0+256)))& (0+255)
  8764  04BF  318D  25EE  3184   	fcall	_strstr
  8765  04C2  3A00               	xorlw	0
  8766  04C3  1903               	skipnz
  8767  04C4  2CC6               	goto	u3311
  8768  04C5  2CC7               	goto	u3310
  8769  04C6                     u3311:
  8770  04C6  2CCA               	goto	l923
  8771  04C7                     u3310:
  8772  04C7                     l5467:
  8773                           
  8774                           ;main.c: 93:             LATAbits.LATA3 = 0;
  8775  04C7  0020               	movlb	0	; select bank0
  8776  04C8  1196               	bcf	22,3	;volatile
  8777  04C9  2CCA               	goto	l5469
  8778  04CA                     l923:
  8779  04CA                     l5469:
  8780                           
  8781                           ;main.c: 96:         if(strstr(buffer,"$P") ){
  8782  04CA  304C               	movlw	low (STR_18| (0+32768))
  8783  04CB  0021               	movlb	1	; select bank1
  8784  04CC  00A9               	movwf	strstr@n^(0+128)
  8785  04CD  3098               	movlw	high (STR_18| (0+32768))
  8786  04CE  00AA               	movwf	(strstr@n^(0+128)+1)
  8787  04CF  30B4               	movlw	(low (_buffer| (0+256)))& (0+255)
  8788  04D0  318D  25EE  3184   	fcall	_strstr
  8789  04D3  3A00               	xorlw	0
  8790  04D4  1903               	skipnz
  8791  04D5  2CD7               	goto	u3321
  8792  04D6  2CD8               	goto	u3320
  8793  04D7                     u3321:
  8794  04D7  2C42               	goto	l5437
  8795  04D8                     u3320:
  8796  04D8                     l5471:
  8797                           
  8798                           ;main.c: 98:                 buffer2[j-2] = buffer[j];
  8799  04D8  0021               	movlb	1	; select bank1
  8800  04D9  086E               	movf	_j^(0+128),w
  8801  04DA  3EB4               	addlw	(low (_buffer| (0+256)))& (0+255)
  8802  04DB  0086               	movwf	6
  8803  04DC  3001               	movlw	1	; select bank3/4
  8804  04DD  0087               	movwf	7
  8805  04DE  0801               	movf	1,w
  8806  04DF  00CA               	movwf	??_main^(0+128)
  8807  04E0  086E               	movf	_j^(0+128),w
  8808  04E1  3EDA               	addlw	(low ((_buffer2| (0+256)+254)))& (0+255)
  8809  04E2  0086               	movwf	6
  8810  04E3  3001               	movlw	1	; select bank3/4
  8811  04E4  0087               	movwf	7
  8812  04E5  084A               	movf	??_main^(0+128),w
  8813  04E6  0081               	movwf	1
  8814  04E7                     l5473:
  8815                           
  8816                           ;main.c: 99:                 j++;
  8817  04E7  3001               	movlw	1
  8818  04E8  00CA               	movwf	??_main^(0+128)
  8819  04E9  084A               	movf	??_main^(0+128),w
  8820  04EA  07EE               	addwf	_j^(0+128),f
  8821  04EB                     l5475:
  8822                           
  8823                           ;main.c: 100:             }while(buffer[j] != '\0');
  8824  04EB  086E               	movf	_j^(0+128),w
  8825  04EC  3EB4               	addlw	(low (_buffer| (0+256)))& (0+255)
  8826  04ED  0086               	movwf	6
  8827  04EE  3001               	movlw	1	; select bank3/4
  8828  04EF  0087               	movwf	7
  8829  04F0  0801               	movf	1,w
  8830  04F1  1D03               	btfss	3,2
  8831  04F2  2CF4               	goto	u3331
  8832  04F3  2CF5               	goto	u3330
  8833  04F4                     u3331:
  8834  04F4  2CD8               	goto	l5471
  8835  04F5                     u3330:
  8836  04F5                     l5477:
  8837                           
  8838                           ;main.c: 101:             buffer2[j] = '\0';
  8839  04F5  086E               	movf	_j^(0+128),w
  8840  04F6  3EDC               	addlw	(low (_buffer2| (0+256)))& (0+255)
  8841  04F7  0086               	movwf	6
  8842  04F8  3001               	movlw	1	; select bank3/4
  8843  04F9  0087               	movwf	7
  8844  04FA  0181               	clrf	1
  8845  04FB                     l5479:
  8846                           
  8847                           ;main.c: 102:             j=2;
  8848  04FB  3002               	movlw	2
  8849  04FC  00CA               	movwf	??_main^(0+128)
  8850  04FD  084A               	movf	??_main^(0+128),w
  8851  04FE  00EE               	movwf	_j^(0+128)
  8852  04FF                     l5481:
  8853                           
  8854                           ;main.c: 103:             duty = atoi(buffer2);
  8855  04FF  30DC               	movlw	(low (_buffer2| (0+256)))& (0+255)
  8856  0500  3185  25EF  3184   	fcall	_atoi
  8857  0503  0021               	movlb	1	; select bank1
  8858  0504  0827               	movf	(?_atoi+1)^(0+128),w
  8859  0505  00D7               	movwf	(_duty+1)^(0+128)
  8860  0506  0826               	movf	?_atoi^(0+128),w
  8861  0507  00D6               	movwf	_duty^(0+128)
  8862  0508                     l5483:
  8863                           
  8864                           ;main.c: 104:             PWM5_LoadDutyValue(duty);
  8865  0508  0857               	movf	(_duty+1)^(0+128),w
  8866  0509  00A1               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^(0+128)
  8867  050A  0856               	movf	_duty^(0+128),w
  8868  050B  00A0               	movwf	PWM5_LoadDutyValue@dutyValue^(0+128)
  8869  050C  3188  20B7  3184   	fcall	_PWM5_LoadDutyValue
  8870  050F  2C42               	goto	l5437
  8871  0510  3180  289F         	ljmp	start
  8872  0512                     __end_of_main:
  8873                           
  8874                           	psect	text1
  8875  0DEE                     __ptext1:	
  8876 ;; *************** function _strstr *****************
  8877 ;; Defined at:
  8878 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strstr.c"
  8879 ;; Parameters:    Size  Location     Type
  8880 ;;  h               1    wreg     PTR const unsigned char 
  8881 ;;		 -> buffer(40), NULL(0), 
  8882 ;;  n               2    9[BANK1 ] PTR const unsigned char 
  8883 ;;		 -> STR_19(3), STR_17(8), STR_15(7), STR_13(8), 
  8884 ;;		 -> STR_11(7), STR_9(8), STR_7(7), STR_5(8), 
  8885 ;;		 -> STR_3(7), 
  8886 ;; Auto vars:     Size  Location     Type
  8887 ;;  h               1   16[BANK1 ] PTR const unsigned char 
  8888 ;;		 -> buffer(40), NULL(0), 
  8889 ;;  nl              2   14[BANK1 ] unsigned int 
  8890 ;; Return value:  Size  Location     Type
  8891 ;;                  1    wreg      PTR unsigned char 
  8892 ;; Registers used:
  8893 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8894 ;; Tracked objects:
  8895 ;;		On entry : 0/0
  8896 ;;		On exit  : 0/0
  8897 ;;		Unchanged: 0/0
  8898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8899 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8900 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8901 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8902 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  8903 ;;Total ram usage:        8 bytes
  8904 ;; Hardware stack levels used: 1
  8905 ;; Hardware stack levels required when called: 11
  8906 ;; This function calls:
  8907 ;;		_strchr
  8908 ;;		_strlen
  8909 ;;		_strncmp
  8910 ;; This function is called by:
  8911 ;;		_main
  8912 ;; This function uses a non-reentrant model
  8913 ;;
  8914                           
  8915                           
  8916                           ;psect for function _strstr
  8917  0DEE                     _strstr:
  8918                           
  8919                           ;incstack = 0
  8920                           ; Regs used in _strstr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8921                           ;strstr@h stored from wreg
  8922  0DEE  0021               	movlb	1	; select bank1
  8923  0DEF  00B0               	movwf	strstr@h^(0+128)
  8924  0DF0                     l5199:
  8925  0DF0  0829               	movf	strstr@n^(0+128),w
  8926  0DF1  042A               	iorwf	(strstr@n+1)^(0+128),w
  8927  0DF2  1903               	btfsc	3,2
  8928  0DF3  2DF5               	goto	u2971
  8929  0DF4  2DF6               	goto	u2970
  8930  0DF5                     u2971:
  8931  0DF5  2E3A               	goto	l5215
  8932  0DF6                     u2970:
  8933  0DF6                     l5201:
  8934  0DF6  082A               	movf	(strstr@n+1)^(0+128),w
  8935  0DF7  00A1               	movwf	(strlen@s+1)^(0+128)
  8936  0DF8  0829               	movf	strstr@n^(0+128),w
  8937  0DF9  00A0               	movwf	strlen@s^(0+128)
  8938  0DFA  3189  2137  318D   	fcall	_strlen
  8939  0DFD  0021               	movlb	1	; select bank1
  8940  0DFE  0821               	movf	(?_strlen+1)^(0+128),w
  8941  0DFF  00AF               	movwf	(strstr@nl+1)^(0+128)
  8942  0E00  0820               	movf	?_strlen^(0+128),w
  8943  0E01  00AE               	movwf	strstr@nl^(0+128)
  8944  0E02  2E2C               	goto	l5211
  8945  0E03                     l5203:
  8946  0E03  082A               	movf	(strstr@n+1)^(0+128),w
  8947  0E04  00A1               	movwf	(strncmp@_r+1)^(0+128)
  8948  0E05  0829               	movf	strstr@n^(0+128),w
  8949  0E06  00A0               	movwf	strncmp@_r^(0+128)
  8950  0E07  082F               	movf	(strstr@nl+1)^(0+128),w
  8951  0E08  00A3               	movwf	(strncmp@n+1)^(0+128)
  8952  0E09  082E               	movf	strstr@nl^(0+128),w
  8953  0E0A  00A2               	movwf	strncmp@n^(0+128)
  8954  0E0B  0830               	movf	strstr@h^(0+128),w
  8955  0E0C  318F  2746  318D   	fcall	_strncmp
  8956  0E0F  0021               	movlb	1	; select bank1
  8957  0E10  0820               	movf	?_strncmp^(0+128),w
  8958  0E11  0421               	iorwf	(?_strncmp+1)^(0+128),w
  8959  0E12  1D03               	btfss	3,2
  8960  0E13  2E15               	goto	u2981
  8961  0E14  2E16               	goto	u2980
  8962  0E15                     u2981:
  8963  0E15  2E18               	goto	l5209
  8964  0E16                     u2980:
  8965  0E16                     l5205:
  8966  0E16  0830               	movf	strstr@h^(0+128),w
  8967  0E17  2E3B               	goto	l2027
  8968  0E18                     l5209:
  8969  0E18  0829               	movf	strstr@n^(0+128),w
  8970  0E19  0084               	movwf	4
  8971  0E1A  082A               	movf	(strstr@n+1)^(0+128),w
  8972  0E1B  0085               	movwf	5
  8973  0E1C  0800               	movf	0,w	;code access
  8974  0E1D  00AB               	movwf	??_strstr^(0+128)
  8975  0E1E  01AC               	clrf	(??_strstr^(0+128)+1)
  8976  0E1F  082B               	movf	??_strstr^(0+128),w
  8977  0E20  00A0               	movwf	strchr@c^(0+128)
  8978  0E21  082C               	movf	(??_strstr+1)^(0+128),w
  8979  0E22  00A1               	movwf	(strchr@c+1)^(0+128)
  8980  0E23  0830               	movf	strstr@h^(0+128),w
  8981  0E24  3E01               	addlw	1
  8982  0E25  3189  211D  318D   	fcall	_strchr
  8983  0E28  0021               	movlb	1	; select bank1
  8984  0E29  00AD               	movwf	(??_strstr+2)^(0+128)
  8985  0E2A  082D               	movf	(??_strstr+2)^(0+128),w
  8986  0E2B  00B0               	movwf	strstr@h^(0+128)
  8987  0E2C                     l5211:
  8988  0E2C  0830               	movf	strstr@h^(0+128),w
  8989  0E2D  1903               	btfsc	3,2
  8990  0E2E  2E30               	goto	u2991
  8991  0E2F  2E31               	goto	u2990
  8992  0E30                     u2991:
  8993  0E30  2E3A               	goto	l5215
  8994  0E31                     u2990:
  8995  0E31                     l5213:
  8996  0E31  0830               	movf	strstr@h^(0+128),w
  8997  0E32  0086               	movwf	6
  8998  0E33  3001               	movlw	1	; select bank2/3
  8999  0E34  0087               	movwf	7
  9000  0E35  0801               	movf	1,w
  9001  0E36  1D03               	btfss	3,2
  9002  0E37  2E39               	goto	u3001
  9003  0E38  2E3A               	goto	u3000
  9004  0E39                     u3001:
  9005  0E39  2E03               	goto	l5203
  9006  0E3A                     u3000:
  9007  0E3A                     l5215:
  9008  0E3A  3000               	movlw	0
  9009  0E3B                     l2027:
  9010  0E3B  0008               	return
  9011  0E3C                     __end_of_strstr:
  9012                           
  9013                           	psect	text2
  9014  0F46                     __ptext2:	
  9015 ;; *************** function _strncmp *****************
  9016 ;; Defined at:
  9017 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  9018 ;; Parameters:    Size  Location     Type
  9019 ;;  _l              1    wreg     PTR const unsigned char 
  9020 ;;		 -> buffer(40), NULL(0), 
  9021 ;;  _r              2    0[BANK1 ] PTR const unsigned char 
  9022 ;;		 -> STR_19(3), STR_17(8), STR_15(7), STR_13(8), 
  9023 ;;		 -> STR_11(7), STR_9(8), STR_7(7), STR_5(8), 
  9024 ;;		 -> STR_3(7), 
  9025 ;;  n               2    2[BANK1 ] unsigned int 
  9026 ;; Auto vars:     Size  Location     Type
  9027 ;;  _l              1    5[BANK1 ] PTR const unsigned char 
  9028 ;;		 -> buffer(40), NULL(0), 
  9029 ;;  r               2    6[BANK1 ] PTR const unsigned char 
  9030 ;;		 -> STR_19(3), STR_17(8), STR_15(7), STR_13(8), 
  9031 ;;		 -> STR_11(7), STR_9(8), STR_7(7), STR_5(8), 
  9032 ;;		 -> STR_3(7), 
  9033 ;;  l               1    8[BANK1 ] PTR const unsigned char 
  9034 ;;		 -> buffer(40), NULL(0), 
  9035 ;; Return value:  Size  Location     Type
  9036 ;;                  2    0[BANK1 ] int 
  9037 ;; Registers used:
  9038 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  9039 ;; Tracked objects:
  9040 ;;		On entry : 0/0
  9041 ;;		On exit  : 0/0
  9042 ;;		Unchanged: 0/0
  9043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9044 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9045 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9046 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9047 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  9048 ;;Total ram usage:        9 bytes
  9049 ;; Hardware stack levels used: 1
  9050 ;; Hardware stack levels required when called: 10
  9051 ;; This function calls:
  9052 ;;		Nothing
  9053 ;; This function is called by:
  9054 ;;		_strstr
  9055 ;; This function uses a non-reentrant model
  9056 ;;
  9057                           
  9058                           
  9059                           ;psect for function _strncmp
  9060  0F46                     _strncmp:
  9061                           
  9062                           ;incstack = 0
  9063                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
  9064                           ;strncmp@_l stored from wreg
  9065  0F46  0021               	movlb	1	; select bank1
  9066  0F47  00A5               	movwf	strncmp@_l^(0+128)
  9067  0F48                     l5027:
  9068  0F48  0825               	movf	strncmp@_l^(0+128),w
  9069  0F49  00A4               	movwf	??_strncmp^(0+128)
  9070  0F4A  0824               	movf	??_strncmp^(0+128),w
  9071  0F4B  00A8               	movwf	strncmp@l^(0+128)
  9072  0F4C  0821               	movf	(strncmp@_r+1)^(0+128),w
  9073  0F4D  00A7               	movwf	(strncmp@r+1)^(0+128)
  9074  0F4E  0820               	movf	strncmp@_r^(0+128),w
  9075  0F4F  00A6               	movwf	strncmp@r^(0+128)
  9076  0F50                     l5029:
  9077  0F50  3001               	movlw	1
  9078  0F51  02A2               	subwf	strncmp@n^(0+128),f
  9079  0F52  3000               	movlw	0
  9080  0F53  3BA3               	subwfb	(strncmp@n+1)^(0+128),f
  9081  0F54  0A22               	incf	strncmp@n^(0+128),w
  9082  0F55  1D03               	skipz
  9083  0F56  2F5B               	goto	u2811
  9084  0F57  0A23               	incf	(strncmp@n+1)^(0+128),w
  9085  0F58  1D03               	btfss	3,2
  9086  0F59  2F5B               	goto	u2811
  9087  0F5A  2F5C               	goto	u2810
  9088  0F5B                     u2811:
  9089  0F5B  2F6B               	goto	l5041
  9090  0F5C                     u2810:
  9091  0F5C                     l5031:
  9092  0F5C  01A0               	clrf	?_strncmp^(0+128)
  9093  0F5D  01A1               	clrf	(?_strncmp+1)^(0+128)
  9094  0F5E  2FA1               	goto	l2040
  9095  0F5F                     l5035:
  9096  0F5F  3001               	movlw	1
  9097  0F60  00A4               	movwf	??_strncmp^(0+128)
  9098  0F61  0824               	movf	??_strncmp^(0+128),w
  9099  0F62  07A8               	addwf	strncmp@l^(0+128),f
  9100  0F63                     l5037:
  9101  0F63  3001               	movlw	1
  9102  0F64  07A6               	addwf	strncmp@r^(0+128),f
  9103  0F65  3000               	movlw	0
  9104  0F66  3DA7               	addwfc	(strncmp@r+1)^(0+128),f
  9105  0F67                     l5039:
  9106  0F67  3001               	movlw	1
  9107  0F68  02A2               	subwf	strncmp@n^(0+128),f
  9108  0F69  3000               	movlw	0
  9109  0F6A  3BA3               	subwfb	(strncmp@n+1)^(0+128),f
  9110  0F6B                     l5041:
  9111  0F6B  0828               	movf	strncmp@l^(0+128),w
  9112  0F6C  0086               	movwf	6
  9113  0F6D  3001               	movlw	1	; select bank2/3
  9114  0F6E  0087               	movwf	7
  9115  0F6F  0801               	movf	1,w
  9116  0F70  1903               	btfsc	3,2
  9117  0F71  2F73               	goto	u2821
  9118  0F72  2F74               	goto	u2820
  9119  0F73                     u2821:
  9120  0F73  2F93               	goto	l5049
  9121  0F74                     u2820:
  9122  0F74                     l5043:
  9123  0F74  0826               	movf	strncmp@r^(0+128),w
  9124  0F75  0084               	movwf	4
  9125  0F76  0827               	movf	(strncmp@r+1)^(0+128),w
  9126  0F77  0085               	movwf	5
  9127  0F78  0012               	moviw fsr0++
  9128  0F79  1903               	btfsc	3,2
  9129  0F7A  2F7C               	goto	u2831
  9130  0F7B  2F7D               	goto	u2830
  9131  0F7C                     u2831:
  9132  0F7C  2F93               	goto	l5049
  9133  0F7D                     u2830:
  9134  0F7D                     l5045:
  9135  0F7D  0822               	movf	strncmp@n^(0+128),w
  9136  0F7E  0423               	iorwf	(strncmp@n+1)^(0+128),w
  9137  0F7F  1903               	btfsc	3,2
  9138  0F80  2F82               	goto	u2841
  9139  0F81  2F83               	goto	u2840
  9140  0F82                     u2841:
  9141  0F82  2F93               	goto	l5049
  9142  0F83                     u2840:
  9143  0F83                     l5047:
  9144  0F83  0826               	movf	strncmp@r^(0+128),w
  9145  0F84  0084               	movwf	4
  9146  0F85  0827               	movf	(strncmp@r+1)^(0+128),w
  9147  0F86  0085               	movwf	5
  9148  0F87  0800               	movf	0,w	;code access
  9149  0F88  00A4               	movwf	??_strncmp^(0+128)
  9150  0F89  0828               	movf	strncmp@l^(0+128),w
  9151  0F8A  0086               	movwf	6
  9152  0F8B  3001               	movlw	1	; select bank2/3
  9153  0F8C  0087               	movwf	7
  9154  0F8D  0801               	movf	1,w
  9155  0F8E  0624               	xorwf	??_strncmp^(0+128),w
  9156  0F8F  1903               	skipnz
  9157  0F90  2F92               	goto	u2851
  9158  0F91  2F93               	goto	u2850
  9159  0F92                     u2851:
  9160  0F92  2F5F               	goto	l5035
  9161  0F93                     u2850:
  9162  0F93                     l5049:
  9163  0F93  0828               	movf	strncmp@l^(0+128),w
  9164  0F94  0086               	movwf	6
  9165  0F95  3001               	movlw	1	; select bank2/3
  9166  0F96  0087               	movwf	7
  9167  0F97  0826               	movf	strncmp@r^(0+128),w
  9168  0F98  0084               	movwf	4
  9169  0F99  0827               	movf	(strncmp@r+1)^(0+128),w
  9170  0F9A  0085               	movwf	5
  9171  0F9B  0800               	movf	0,w	;code access
  9172  0F9C  0201               	subwf	1,w
  9173  0F9D  00A0               	movwf	?_strncmp^(0+128)
  9174  0F9E  01A1               	clrf	(?_strncmp^(0+128)+1)
  9175  0F9F  1C03               	skipc
  9176  0FA0  03A1               	decf	(?_strncmp+1)^(0+128),f
  9177  0FA1                     l2040:
  9178  0FA1  0008               	return
  9179  0FA2                     __end_of_strncmp:
  9180                           
  9181                           	psect	text3
  9182  0937                     __ptext3:	
  9183 ;; *************** function _strlen *****************
  9184 ;; Defined at:
  9185 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  9186 ;; Parameters:    Size  Location     Type
  9187 ;;  s               2    0[BANK1 ] PTR const unsigned char 
  9188 ;;		 -> dbuf(32), STR_19(3), STR_17(8), STR_15(7), 
  9189 ;;		 -> STR_13(8), STR_11(7), STR_9(8), STR_7(7), 
  9190 ;;		 -> STR_5(8), STR_3(7), 
  9191 ;; Auto vars:     Size  Location     Type
  9192 ;;  a               2    3[BANK1 ] PTR const unsigned char 
  9193 ;;		 -> dbuf(32), STR_19(3), STR_17(8), STR_15(7), 
  9194 ;;		 -> STR_13(8), STR_11(7), STR_9(8), STR_7(7), 
  9195 ;;		 -> STR_5(8), STR_3(7), 
  9196 ;; Return value:  Size  Location     Type
  9197 ;;                  2    0[BANK1 ] unsigned int 
  9198 ;; Registers used:
  9199 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9200 ;; Tracked objects:
  9201 ;;		On entry : 0/0
  9202 ;;		On exit  : 0/0
  9203 ;;		Unchanged: 0/0
  9204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9205 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9206 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9207 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9208 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  9209 ;;Total ram usage:        5 bytes
  9210 ;; Hardware stack levels used: 1
  9211 ;; Hardware stack levels required when called: 10
  9212 ;; This function calls:
  9213 ;;		Nothing
  9214 ;; This function is called by:
  9215 ;;		_strstr
  9216 ;; This function uses a non-reentrant model
  9217 ;;
  9218                           
  9219                           
  9220                           ;psect for function _strlen
  9221  0937                     _strlen:
  9222  0937                     l5017:	
  9223                           ;incstack = 0
  9224                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  9225                           
  9226  0937  0021               	movlb	1	; select bank1
  9227  0938  0821               	movf	(strlen@s+1)^(0+128),w
  9228  0939  00A4               	movwf	(strlen@a+1)^(0+128)
  9229  093A  0820               	movf	strlen@s^(0+128),w
  9230  093B  00A3               	movwf	strlen@a^(0+128)
  9231  093C  2941               	goto	l5021
  9232  093D                     l5019:
  9233  093D  3001               	movlw	1
  9234  093E  07A0               	addwf	strlen@s^(0+128),f
  9235  093F  3000               	movlw	0
  9236  0940  3DA1               	addwfc	(strlen@s+1)^(0+128),f
  9237  0941                     l5021:
  9238  0941  0820               	movf	strlen@s^(0+128),w
  9239  0942  0084               	movwf	4
  9240  0943  0821               	movf	(strlen@s+1)^(0+128),w
  9241  0944  0085               	movwf	5
  9242  0945  0012               	moviw fsr0++
  9243  0946  1D03               	btfss	3,2
  9244  0947  2949               	goto	u2801
  9245  0948  294A               	goto	u2800
  9246  0949                     u2801:
  9247  0949  293D               	goto	l5019
  9248  094A                     u2800:
  9249  094A                     l5023:
  9250  094A  0823               	movf	strlen@a^(0+128),w
  9251  094B  0220               	subwf	strlen@s^(0+128),w
  9252  094C  00A0               	movwf	?_strlen^(0+128)
  9253  094D  0824               	movf	(strlen@a+1)^(0+128),w
  9254  094E  3B21               	subwfb	(strlen@s+1)^(0+128),w
  9255  094F  00A1               	movwf	(?_strlen+1)^(0+128)
  9256  0950                     l2014:
  9257  0950  0008               	return
  9258  0951                     __end_of_strlen:
  9259                           
  9260                           	psect	text4
  9261  091D                     __ptext4:	
  9262 ;; *************** function _strchr *****************
  9263 ;; Defined at:
  9264 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strchr.c"
  9265 ;; Parameters:    Size  Location     Type
  9266 ;;  s               1    wreg     PTR const unsigned char 
  9267 ;;		 -> buffer(40), NULL(0), 
  9268 ;;  c               2    0[BANK1 ] int 
  9269 ;; Auto vars:     Size  Location     Type
  9270 ;;  s               1    2[BANK1 ] PTR const unsigned char 
  9271 ;;		 -> buffer(40), NULL(0), 
  9272 ;; Return value:  Size  Location     Type
  9273 ;;                  1    wreg      PTR unsigned char 
  9274 ;; Registers used:
  9275 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9276 ;; Tracked objects:
  9277 ;;		On entry : 0/0
  9278 ;;		On exit  : 0/0
  9279 ;;		Unchanged: 0/0
  9280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9281 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9282 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9284 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9285 ;;Total ram usage:        3 bytes
  9286 ;; Hardware stack levels used: 1
  9287 ;; Hardware stack levels required when called: 10
  9288 ;; This function calls:
  9289 ;;		Nothing
  9290 ;; This function is called by:
  9291 ;;		_strstr
  9292 ;; This function uses a non-reentrant model
  9293 ;;
  9294                           
  9295                           
  9296                           ;psect for function _strchr
  9297  091D                     _strchr:
  9298                           
  9299                           ;incstack = 0
  9300                           ; Regs used in _strchr: [wreg+fsr1l+fsr1h+status,2+status,0]
  9301                           ;strchr@s stored from wreg
  9302  091D  0021               	movlb	1	; select bank1
  9303  091E  00A2               	movwf	strchr@s^(0+128)
  9304  091F                     l2033:
  9305  091F                     l5053:
  9306  091F  0822               	movf	strchr@s^(0+128),w
  9307  0920  0086               	movwf	6
  9308  0921  3001               	movlw	1	; select bank2/3
  9309  0922  0087               	movwf	7
  9310  0923  0801               	movf	1,w
  9311  0924  0620               	xorwf	strchr@c^(0+128),w
  9312  0925  1D03               	skipz
  9313  0926  2928               	goto	u2861
  9314  0927  2929               	goto	u2860
  9315  0928                     u2861:
  9316  0928  292B               	goto	l5059
  9317  0929                     u2860:
  9318  0929                     l5055:
  9319  0929  0822               	movf	strchr@s^(0+128),w
  9320  092A  2936               	goto	l2035
  9321  092B                     l5059:
  9322  092B  0822               	movf	strchr@s^(0+128),w
  9323  092C  0086               	movwf	6
  9324  092D  3001               	movlw	1	; select bank2/3
  9325  092E  0087               	movwf	7
  9326  092F  0AA2               	incf	strchr@s^(0+128),f
  9327  0930  0801               	movf	1,w
  9328  0931  1D03               	btfss	3,2
  9329  0932  2934               	goto	u2871
  9330  0933  2935               	goto	u2870
  9331  0934                     u2871:
  9332  0934  291F               	goto	l2033
  9333  0935                     u2870:
  9334  0935                     l5061:
  9335  0935  3000               	movlw	0
  9336  0936                     l2035:
  9337  0936  0008               	return
  9338  0937                     __end_of_strchr:
  9339                           
  9340                           	psect	text5
  9341  0E3C                     __ptext5:	
  9342 ;; *************** function _lcd_puts *****************
  9343 ;; Defined at:
  9344 ;;		line 225 in file "LCD_i2c.c"
  9345 ;; Parameters:    Size  Location     Type
  9346 ;;  dato            2   38[BANK1 ] PTR unsigned char 
  9347 ;;		 -> STR_1(5), 
  9348 ;; Auto vars:     Size  Location     Type
  9349 ;;		None
  9350 ;; Return value:  Size  Location     Type
  9351 ;;                  1    wreg      void 
  9352 ;; Registers used:
  9353 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9354 ;; Tracked objects:
  9355 ;;		On entry : 0/0
  9356 ;;		On exit  : 0/0
  9357 ;;		Unchanged: 0/0
  9358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9359 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9361 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9362 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9363 ;;Total ram usage:        4 bytes
  9364 ;; Hardware stack levels used: 1
  9365 ;; Hardware stack levels required when called: 23
  9366 ;; This function calls:
  9367 ;;		_lcd_gotoxy
  9368 ;;		_lcd_send_byte
  9369 ;; This function is called by:
  9370 ;;		_main
  9371 ;; This function uses a non-reentrant model
  9372 ;;
  9373                           
  9374                           
  9375                           ;psect for function _lcd_puts
  9376  0E3C                     _lcd_puts:
  9377  0E3C                     l5169:	
  9378                           ;incstack = 0
  9379 ;; hardware stack exceeded
  9380                           ; Regs used in _lcd_puts: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9381                           
  9382                           
  9383                           ;LCD_i2c.c: 226:    while (*dato){
  9384  0E3C  2E89               	goto	l5191
  9385  0E3D                     l5171:
  9386                           
  9387                           ;LCD_i2c.c: 231:             lcd_send_byte(0,1);
  9388  0E3D  01BD               	clrf	lcd_send_byte@n^(0+128)
  9389  0E3E  0ABD               	incf	lcd_send_byte@n^(0+128),f
  9390  0E3F  3000               	movlw	0
  9391  0E40  3189  216C  318E   	fcall	_lcd_send_byte
  9392  0E43                     l5173:
  9393                           
  9394                           ;LCD_i2c.c: 232:             _delay((unsigned long)((2)*(8000000/4000.0)));
  9395  0E43  3006               	movlw	6
  9396  0E44  0021               	movlb	1	; select bank1
  9397  0E45  00C8               	movwf	??_lcd_puts^(0+128)
  9398  0E46  3030               	movlw	48
  9399  0E47                     u3527:
  9400  0E47  0B89               	decfsz	9,f
  9401  0E48  2E47               	goto	u3527
  9402  0E49  0BC8               	decfsz	??_lcd_puts^(0+128),f
  9403  0E4A  2E47               	goto	u3527
  9404  0E4B  0000               	nop
  9405  0E4C                     l5175:
  9406                           
  9407                           ;LCD_i2c.c: 233:             g_LcdX = 0;
  9408  0E4C  0021               	movlb	1	; select bank1
  9409  0E4D  01E1               	clrf	_g_LcdX^(0+128)
  9410  0E4E                     l5177:
  9411                           
  9412                           ;LCD_i2c.c: 234:             g_LcdY = 0;
  9413  0E4E  01E0               	clrf	_g_LcdY^(0+128)
  9414  0E4F                     l5179:
  9415                           
  9416                           ;LCD_i2c.c: 235:             _delay((unsigned long)((2)*(8000000/4000.0)));
  9417  0E4F  3006               	movlw	6
  9418  0E50  0021               	movlb	1	; select bank1
  9419  0E51  00C8               	movwf	??_lcd_puts^(0+128)
  9420  0E52  3030               	movlw	48
  9421  0E53                     u3537:
  9422  0E53  0B89               	decfsz	9,f
  9423  0E54  2E53               	goto	u3537
  9424  0E55  0BC8               	decfsz	??_lcd_puts^(0+128),f
  9425  0E56  2E53               	goto	u3537
  9426  0E57  0000               	nop
  9427                           
  9428                           ;LCD_i2c.c: 236:             break;
  9429  0E58  2E84               	goto	l5189
  9430  0E59                     l5181:
  9431                           
  9432                           ;LCD_i2c.c: 238:             lcd_gotoxy(1, g_LcdY+2);
  9433  0E59  0860               	movf	_g_LcdY^(0+128),w
  9434  0E5A  3E02               	addlw	2
  9435  0E5B  00C8               	movwf	??_lcd_puts^(0+128)
  9436  0E5C  0848               	movf	??_lcd_puts^(0+128),w
  9437  0E5D  00C1               	movwf	lcd_gotoxy@y^(0+128)
  9438  0E5E  3001               	movlw	1
  9439  0E5F  318D  255E  318E   	fcall	_lcd_gotoxy
  9440                           
  9441                           ;LCD_i2c.c: 239:             break;
  9442  0E62  2E84               	goto	l5189
  9443  0E63                     l5183:
  9444                           
  9445                           ;LCD_i2c.c: 241:             lcd_send_byte(1,*dato);
  9446  0E63  0846               	movf	lcd_puts@dato^(0+128),w
  9447  0E64  0084               	movwf	4
  9448  0E65  0847               	movf	(lcd_puts@dato+1)^(0+128),w
  9449  0E66  0085               	movwf	5
  9450  0E67  0800               	movf	0,w	;code access
  9451  0E68  00C8               	movwf	??_lcd_puts^(0+128)
  9452  0E69  0848               	movf	??_lcd_puts^(0+128),w
  9453  0E6A  00BD               	movwf	lcd_send_byte@n^(0+128)
  9454  0E6B  3001               	movlw	1
  9455  0E6C  3189  216C  318E   	fcall	_lcd_send_byte
  9456                           
  9457                           ;LCD_i2c.c: 242:             break;
  9458  0E6F  2E84               	goto	l5189
  9459  0E70                     l5187:
  9460  0E70  0846               	movf	lcd_puts@dato^(0+128),w
  9461  0E71  0084               	movwf	4
  9462  0E72  0847               	movf	(lcd_puts@dato+1)^(0+128),w
  9463  0E73  0085               	movwf	5
  9464  0E74  0800               	movf	0,w	;code access
  9465  0E75  00C8               	movwf	??_lcd_puts^(0+128)
  9466  0E76  01C9               	clrf	(??_lcd_puts^(0+128)+1)
  9467                           
  9468                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9469                           ; Switch size 1, requested type "simple"
  9470                           ; Number of cases is 1, Range of values is 0 to 0
  9471                           ; switch strategies available:
  9472                           ; Name         Instructions Cycles
  9473                           ; simple_byte            4     3 (average)
  9474                           ; direct_byte            8     6 (fixed)
  9475                           ; jumptable            260     6 (fixed)
  9476                           ;	Chosen strategy is simple_byte
  9477  0E77  0849               	movf	(??_lcd_puts+1)^(0+128),w
  9478  0E78  3A00               	xorlw	0	; case 0
  9479  0E79  1903               	skipnz
  9480  0E7A  2E7C               	goto	l5821
  9481  0E7B  2E63               	goto	l5183
  9482  0E7C                     l5821:
  9483                           
  9484                           ; Switch size 1, requested type "simple"
  9485                           ; Number of cases is 2, Range of values is 10 to 12
  9486                           ; switch strategies available:
  9487                           ; Name         Instructions Cycles
  9488                           ; simple_byte            7     4 (average)
  9489                           ; direct_byte           15     9 (fixed)
  9490                           ; jumptable            263     9 (fixed)
  9491                           ;	Chosen strategy is simple_byte
  9492  0E7C  0848               	movf	??_lcd_puts^(0+128),w
  9493  0E7D  3A0A               	xorlw	10	; case 10
  9494  0E7E  1903               	skipnz
  9495  0E7F  2E59               	goto	l5181
  9496  0E80  3A06               	xorlw	6	; case 12
  9497  0E81  1903               	skipnz
  9498  0E82  2E3D               	goto	l5171
  9499  0E83  2E63               	goto	l5183
  9500  0E84                     l5189:
  9501                           
  9502                           ;LCD_i2c.c: 246:       dato++;
  9503  0E84  3001               	movlw	1
  9504  0E85  0021               	movlb	1	; select bank1
  9505  0E86  07C6               	addwf	lcd_puts@dato^(0+128),f
  9506  0E87  3000               	movlw	0
  9507  0E88  3DC7               	addwfc	(lcd_puts@dato+1)^(0+128),f
  9508  0E89                     l5191:
  9509                           
  9510                           ;LCD_i2c.c: 226:    while (*dato){
  9511  0E89  0021               	movlb	1	; select bank1
  9512  0E8A  0846               	movf	lcd_puts@dato^(0+128),w
  9513  0E8B  0084               	movwf	4
  9514  0E8C  0847               	movf	(lcd_puts@dato+1)^(0+128),w
  9515  0E8D  0085               	movwf	5
  9516  0E8E  0012               	moviw fsr0++
  9517  0E8F  1D03               	btfss	3,2
  9518  0E90  2E92               	goto	u2961
  9519  0E91  2E93               	goto	u2960
  9520  0E92                     u2961:
  9521  0E92  2E70               	goto	l5187
  9522  0E93                     u2960:
  9523  0E93                     l1038:
  9524  0E93  0008               	return
  9525  0E94                     __end_of_lcd_puts:
  9526                           
  9527                           	psect	text6
  9528  0D5E                     __ptext6:	
  9529 ;; *************** function _lcd_gotoxy *****************
  9530 ;; Defined at:
  9531 ;;		line 177 in file "LCD_i2c.c"
  9532 ;; Parameters:    Size  Location     Type
  9533 ;;  x               1    wreg     unsigned char 
  9534 ;;  y               1   33[BANK1 ] unsigned char 
  9535 ;; Auto vars:     Size  Location     Type
  9536 ;;  x               1   36[BANK1 ] unsigned char 
  9537 ;;  address         1   37[BANK1 ] unsigned char 
  9538 ;; Return value:  Size  Location     Type
  9539 ;;                  1    wreg      void 
  9540 ;; Registers used:
  9541 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9542 ;; Tracked objects:
  9543 ;;		On entry : 0/0
  9544 ;;		On exit  : 0/0
  9545 ;;		Unchanged: 0/0
  9546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9547 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9548 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9549 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9550 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  9551 ;;Total ram usage:        5 bytes
  9552 ;; Hardware stack levels used: 1
  9553 ;; Hardware stack levels required when called: 22
  9554 ;; This function calls:
  9555 ;;		_lcd_send_byte
  9556 ;; This function is called by:
  9557 ;;		_main
  9558 ;;		_lcd_puts
  9559 ;;		_lcd_putc
  9560 ;; This function uses a non-reentrant model
  9561 ;;
  9562                           
  9563                           
  9564                           ;psect for function _lcd_gotoxy
  9565  0D5E                     _lcd_gotoxy:
  9566                           
  9567                           ;incstack = 0
  9568 ;; hardware stack exceeded
  9569                           ; Regs used in _lcd_gotoxy: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9570                           ;lcd_gotoxy@x stored from wreg
  9571  0D5E  0021               	movlb	1	; select bank1
  9572  0D5F  00C4               	movwf	lcd_gotoxy@x^(0+128)
  9573  0D60                     l4891:
  9574                           
  9575                           ;LCD_i2c.c: 177: void lcd_gotoxy(int8 x, int8 y);LCD_i2c.c: 178: {;LCD_i2c.c: 179:    in
      +                          t8 address;;LCD_i2c.c: 181:    switch(y)
  9576  0D60  2D72               	goto	l4905
  9577  0D61                     l4893:
  9578                           
  9579                           ;LCD_i2c.c: 184:          address = 0x00;
  9580  0D61  01C5               	clrf	lcd_gotoxy@address^(0+128)
  9581                           
  9582                           ;LCD_i2c.c: 185:          break;
  9583  0D62  2D88               	goto	l4907
  9584  0D63                     l4895:
  9585                           
  9586                           ;LCD_i2c.c: 187:          address = 0x40;
  9587  0D63  3040               	movlw	64
  9588  0D64  00C2               	movwf	??_lcd_gotoxy^(0+128)
  9589  0D65  0842               	movf	??_lcd_gotoxy^(0+128),w
  9590  0D66  00C5               	movwf	lcd_gotoxy@address^(0+128)
  9591                           
  9592                           ;LCD_i2c.c: 188:          break;
  9593  0D67  2D88               	goto	l4907
  9594  0D68                     l4897:
  9595                           
  9596                           ;LCD_i2c.c: 190:          address = 0x14;
  9597  0D68  3014               	movlw	20
  9598  0D69  00C2               	movwf	??_lcd_gotoxy^(0+128)
  9599  0D6A  0842               	movf	??_lcd_gotoxy^(0+128),w
  9600  0D6B  00C5               	movwf	lcd_gotoxy@address^(0+128)
  9601                           
  9602                           ;LCD_i2c.c: 191:          break;
  9603  0D6C  2D88               	goto	l4907
  9604  0D6D                     l4899:
  9605                           
  9606                           ;LCD_i2c.c: 193:          address = 0x54;
  9607  0D6D  3054               	movlw	84
  9608  0D6E  00C2               	movwf	??_lcd_gotoxy^(0+128)
  9609  0D6F  0842               	movf	??_lcd_gotoxy^(0+128),w
  9610  0D70  00C5               	movwf	lcd_gotoxy@address^(0+128)
  9611                           
  9612                           ;LCD_i2c.c: 194:          break;
  9613  0D71  2D88               	goto	l4907
  9614  0D72                     l4905:
  9615  0D72  0841               	movf	lcd_gotoxy@y^(0+128),w
  9616  0D73  00C2               	movwf	??_lcd_gotoxy^(0+128)
  9617  0D74  01C3               	clrf	(??_lcd_gotoxy^(0+128)+1)
  9618                           
  9619                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9620                           ; Switch size 1, requested type "simple"
  9621                           ; Number of cases is 1, Range of values is 0 to 0
  9622                           ; switch strategies available:
  9623                           ; Name         Instructions Cycles
  9624                           ; simple_byte            4     3 (average)
  9625                           ; direct_byte            8     6 (fixed)
  9626                           ; jumptable            260     6 (fixed)
  9627                           ;	Chosen strategy is simple_byte
  9628  0D75  0843               	movf	(??_lcd_gotoxy+1)^(0+128),w
  9629  0D76  3A00               	xorlw	0	; case 0
  9630  0D77  1903               	skipnz
  9631  0D78  2D7A               	goto	l5823
  9632  0D79  2D61               	goto	l4893
  9633  0D7A                     l5823:
  9634                           
  9635                           ; Switch size 1, requested type "simple"
  9636                           ; Number of cases is 4, Range of values is 1 to 4
  9637                           ; switch strategies available:
  9638                           ; Name         Instructions Cycles
  9639                           ; simple_byte           13     7 (average)
  9640                           ; direct_byte           17     9 (fixed)
  9641                           ; jumptable            263     9 (fixed)
  9642                           ;	Chosen strategy is simple_byte
  9643  0D7A  0842               	movf	??_lcd_gotoxy^(0+128),w
  9644  0D7B  3A01               	xorlw	1	; case 1
  9645  0D7C  1903               	skipnz
  9646  0D7D  2D61               	goto	l4893
  9647  0D7E  3A03               	xorlw	3	; case 2
  9648  0D7F  1903               	skipnz
  9649  0D80  2D63               	goto	l4895
  9650  0D81  3A01               	xorlw	1	; case 3
  9651  0D82  1903               	skipnz
  9652  0D83  2D68               	goto	l4897
  9653  0D84  3A07               	xorlw	7	; case 4
  9654  0D85  1903               	skipnz
  9655  0D86  2D6D               	goto	l4899
  9656  0D87  2D61               	goto	l4893
  9657  0D88                     l4907:
  9658                           
  9659                           ;LCD_i2c.c: 199:    address += x-1;
  9660  0D88  0844               	movf	lcd_gotoxy@x^(0+128),w
  9661  0D89  3EFF               	addlw	255
  9662  0D8A  00C2               	movwf	??_lcd_gotoxy^(0+128)
  9663  0D8B  0842               	movf	??_lcd_gotoxy^(0+128),w
  9664  0D8C  07C5               	addwf	lcd_gotoxy@address^(0+128),f
  9665  0D8D                     l4909:
  9666                           
  9667                           ;LCD_i2c.c: 200:    lcd_send_byte(0, 0x80 | address);
  9668  0D8D  0845               	movf	lcd_gotoxy@address^(0+128),w
  9669  0D8E  3880               	iorlw	128
  9670  0D8F  00C2               	movwf	??_lcd_gotoxy^(0+128)
  9671  0D90  0842               	movf	??_lcd_gotoxy^(0+128),w
  9672  0D91  00BD               	movwf	lcd_send_byte@n^(0+128)
  9673  0D92  3000               	movlw	0
  9674  0D93  3189  216C  318D   	fcall	_lcd_send_byte
  9675  0D96                     l4911:
  9676                           
  9677                           ;LCD_i2c.c: 202:    g_LcdX = x - 1;
  9678  0D96  0021               	movlb	1	; select bank1
  9679  0D97  0844               	movf	lcd_gotoxy@x^(0+128),w
  9680  0D98  3EFF               	addlw	255
  9681  0D99  00C2               	movwf	??_lcd_gotoxy^(0+128)
  9682  0D9A  0842               	movf	??_lcd_gotoxy^(0+128),w
  9683  0D9B  00E1               	movwf	_g_LcdX^(0+128)
  9684  0D9C                     l4913:
  9685                           
  9686                           ;LCD_i2c.c: 203:    g_LcdY = y - 1;
  9687  0D9C  0841               	movf	lcd_gotoxy@y^(0+128),w
  9688  0D9D  3EFF               	addlw	255
  9689  0D9E  00C2               	movwf	??_lcd_gotoxy^(0+128)
  9690  0D9F  0842               	movf	??_lcd_gotoxy^(0+128),w
  9691  0DA0  00E0               	movwf	_g_LcdY^(0+128)
  9692  0DA1                     l1019:
  9693  0DA1  0008               	return
  9694  0DA2                     __end_of_lcd_gotoxy:
  9695                           
  9696                           	psect	text7
  9697  0FA2                     __ptext7:	
  9698 ;; *************** function _lcd_init *****************
  9699 ;; Defined at:
  9700 ;;		line 140 in file "LCD_i2c.c"
  9701 ;; Parameters:    Size  Location     Type
  9702 ;;		None
  9703 ;; Auto vars:     Size  Location     Type
  9704 ;;  i               1   34[BANK1 ] unsigned char 
  9705 ;; Return value:  Size  Location     Type
  9706 ;;                  1    wreg      void 
  9707 ;; Registers used:
  9708 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9709 ;; Tracked objects:
  9710 ;;		On entry : 0/0
  9711 ;;		On exit  : 0/0
  9712 ;;		Unchanged: 0/0
  9713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9715 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9716 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9717 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9718 ;;Total ram usage:        2 bytes
  9719 ;; Hardware stack levels used: 1
  9720 ;; Hardware stack levels required when called: 22
  9721 ;; This function calls:
  9722 ;;		_I2C1_Write1ByteRegister
  9723 ;;		_Send_D7_D4
  9724 ;;		_lcd_send_byte
  9725 ;; This function is called by:
  9726 ;;		_main
  9727 ;; This function uses a non-reentrant model
  9728 ;;
  9729                           
  9730                           
  9731                           ;psect for function _lcd_init
  9732  0FA2                     _lcd_init:
  9733  0FA2                     l5133:	
  9734                           ;incstack = 0
  9735 ;; hardware stack exceeded
  9736                           ; Regs used in _lcd_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9737                           
  9738                           
  9739                           ;LCD_i2c.c: 141:    int8 i;;LCD_i2c.c: 147:    I2C1_Write1ByteRegister(56|(7),0,0);
  9740  0FA2  0021               	movlb	1	; select bank1
  9741  0FA3  01B3               	clrf	I2C1_Write1ByteRegister@reg^(0+128)
  9742  0FA4  01B4               	clrf	I2C1_Write1ByteRegister@data^(0+128)
  9743  0FA5  303F               	movlw	63
  9744  0FA6  318B  23EC  318F   	fcall	_I2C1_Write1ByteRegister
  9745  0FA9                     l5135:
  9746                           
  9747                           ;LCD_i2c.c: 149:    _delay((unsigned long)((35)*(8000000/4000.0)));
  9748  0FA9  305B               	movlw	91
  9749  0FAA  0021               	movlb	1	; select bank1
  9750  0FAB  00C1               	movwf	??_lcd_init^(0+128)
  9751  0FAC  30E7               	movlw	231
  9752  0FAD                     u3547:
  9753  0FAD  0B89               	decfsz	9,f
  9754  0FAE  2FAD               	goto	u3547
  9755  0FAF  0BC1               	decfsz	??_lcd_init^(0+128),f
  9756  0FB0  2FAD               	goto	u3547
  9757  0FB1  3200               	nop2
  9758  0FB2                     l5137:
  9759                           
  9760                           ;LCD_i2c.c: 151:    for(i=0 ;i < 3; i++){
  9761  0FB2  0021               	movlb	1	; select bank1
  9762  0FB3  01C2               	clrf	lcd_init@i^(0+128)
  9763  0FB4                     l5143:
  9764                           
  9765                           ;LCD_i2c.c: 152:       Send_D7_D4(0,0x03);
  9766  0FB4  3003               	movlw	3
  9767  0FB5  00C1               	movwf	??_lcd_init^(0+128)
  9768  0FB6  0841               	movf	??_lcd_init^(0+128),w
  9769  0FB7  00B9               	movwf	Send_D7_D4@nibble^(0+128)
  9770  0FB8  3000               	movlw	0
  9771  0FB9  3187  278F  318F   	fcall	_Send_D7_D4
  9772  0FBC                     l5145:
  9773                           
  9774                           ;LCD_i2c.c: 153:       _delay((unsigned long)((5)*(8000000/4000.0)));
  9775  0FBC  300D               	movlw	13
  9776  0FBD  0021               	movlb	1	; select bank1
  9777  0FBE  00C1               	movwf	??_lcd_init^(0+128)
  9778  0FBF  30FB               	movlw	251
  9779  0FC0                     u3557:
  9780  0FC0  0B89               	decfsz	9,f
  9781  0FC1  2FC0               	goto	u3557
  9782  0FC2  0BC1               	decfsz	??_lcd_init^(0+128),f
  9783  0FC3  2FC0               	goto	u3557
  9784  0FC4  3200               	nop2
  9785  0FC5                     l5147:
  9786                           
  9787                           ;LCD_i2c.c: 154:    }
  9788  0FC5  3001               	movlw	1
  9789  0FC6  0021               	movlb	1	; select bank1
  9790  0FC7  00C1               	movwf	??_lcd_init^(0+128)
  9791  0FC8  0841               	movf	??_lcd_init^(0+128),w
  9792  0FC9  07C2               	addwf	lcd_init@i^(0+128),f
  9793  0FCA                     l5149:
  9794  0FCA  3003               	movlw	3
  9795  0FCB  0242               	subwf	lcd_init@i^(0+128),w
  9796  0FCC  1C03               	skipc
  9797  0FCD  2FCF               	goto	u2941
  9798  0FCE  2FD0               	goto	u2940
  9799  0FCF                     u2941:
  9800  0FCF  2FB4               	goto	l5143
  9801  0FD0                     u2940:
  9802  0FD0                     l5151:
  9803                           
  9804                           ;LCD_i2c.c: 155:     Send_D7_D4(0,0x02);
  9805  0FD0  3002               	movlw	2
  9806  0FD1  00C1               	movwf	??_lcd_init^(0+128)
  9807  0FD2  0841               	movf	??_lcd_init^(0+128),w
  9808  0FD3  00B9               	movwf	Send_D7_D4@nibble^(0+128)
  9809  0FD4  3000               	movlw	0
  9810  0FD5  3187  278F  318F   	fcall	_Send_D7_D4
  9811  0FD8                     l5153:
  9812                           
  9813                           ;LCD_i2c.c: 168:    for(i=0; i < sizeof(LCD_INIT_STRING); i++)
  9814  0FD8  0021               	movlb	1	; select bank1
  9815  0FD9  01C2               	clrf	lcd_init@i^(0+128)
  9816  0FDA                     l5159:
  9817                           
  9818                           ;LCD_i2c.c: 169:    {;LCD_i2c.c: 170:       lcd_send_byte(0, LCD_INIT_STRING[i]);
  9819  0FDA  0842               	movf	lcd_init@i^(0+128),w
  9820  0FDB  3E48               	addlw	low (_LCD_INIT_STRING| (0+32768))
  9821  0FDC  0084               	movwf	4
  9822  0FDD  3098               	movlw	high (_LCD_INIT_STRING| (0+32768))
  9823  0FDE  1803               	skipnc
  9824  0FDF  3E01               	addlw	1
  9825  0FE0  0085               	movwf	5
  9826  0FE1  0800               	movf	0,w	;code access
  9827  0FE2  00C1               	movwf	??_lcd_init^(0+128)
  9828  0FE3  0841               	movf	??_lcd_init^(0+128),w
  9829  0FE4  00BD               	movwf	lcd_send_byte@n^(0+128)
  9830  0FE5  3000               	movlw	0
  9831  0FE6  3189  216C  318F   	fcall	_lcd_send_byte
  9832  0FE9                     l5161:
  9833                           
  9834                           ;LCD_i2c.c: 171:       _delay((unsigned long)((5)*(8000000/4000.0)));
  9835  0FE9  300D               	movlw	13
  9836  0FEA  0021               	movlb	1	; select bank1
  9837  0FEB  00C1               	movwf	??_lcd_init^(0+128)
  9838  0FEC  30FB               	movlw	251
  9839  0FED                     u3567:
  9840  0FED  0B89               	decfsz	9,f
  9841  0FEE  2FED               	goto	u3567
  9842  0FEF  0BC1               	decfsz	??_lcd_init^(0+128),f
  9843  0FF0  2FED               	goto	u3567
  9844  0FF1  3200               	nop2
  9845  0FF2                     l5163:
  9846                           
  9847                           ;LCD_i2c.c: 172:    }
  9848  0FF2  3001               	movlw	1
  9849  0FF3  0021               	movlb	1	; select bank1
  9850  0FF4  00C1               	movwf	??_lcd_init^(0+128)
  9851  0FF5  0841               	movf	??_lcd_init^(0+128),w
  9852  0FF6  07C2               	addwf	lcd_init@i^(0+128),f
  9853  0FF7                     l5165:
  9854  0FF7  3004               	movlw	4
  9855  0FF8  0242               	subwf	lcd_init@i^(0+128),w
  9856  0FF9  1C03               	skipc
  9857  0FFA  2FFC               	goto	u2951
  9858  0FFB  2FFD               	goto	u2950
  9859  0FFC                     u2951:
  9860  0FFC  2FDA               	goto	l5159
  9861  0FFD                     u2950:
  9862  0FFD                     l5167:
  9863                           
  9864                           ;LCD_i2c.c: 173:    g_LcdX = 0;
  9865  0FFD  01E1               	clrf	_g_LcdX^(0+128)
  9866                           
  9867                           ;LCD_i2c.c: 174:    g_LcdY = 0;
  9868  0FFE  01E0               	clrf	_g_LcdY^(0+128)
  9869  0FFF                     l1009:
  9870  0FFF  0008               	return
  9871  1000                     __end_of_lcd_init:
  9872                           
  9873                           	psect	text8
  9874  096C                     __ptext8:	
  9875 ;; *************** function _lcd_send_byte *****************
  9876 ;; Defined at:
  9877 ;;		line 134 in file "LCD_i2c.c"
  9878 ;; Parameters:    Size  Location     Type
  9879 ;;  address         1    wreg     unsigned char 
  9880 ;;  n               1   29[BANK1 ] unsigned char 
  9881 ;; Auto vars:     Size  Location     Type
  9882 ;;  address         1   32[BANK1 ] unsigned char 
  9883 ;; Return value:  Size  Location     Type
  9884 ;;                  1    wreg      void 
  9885 ;; Registers used:
  9886 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9887 ;; Tracked objects:
  9888 ;;		On entry : 0/0
  9889 ;;		On exit  : 0/0
  9890 ;;		Unchanged: 0/0
  9891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9892 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9893 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9894 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9895 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9896 ;;Total ram usage:        4 bytes
  9897 ;; Hardware stack levels used: 1
  9898 ;; Hardware stack levels required when called: 21
  9899 ;; This function calls:
  9900 ;;		_Send_D7_D4
  9901 ;; This function is called by:
  9902 ;;		_lcd_init
  9903 ;;		_lcd_gotoxy
  9904 ;;		_lcd_puts
  9905 ;;		_lcd_putc
  9906 ;;		_Clear_LCD
  9907 ;;		_CGRAM
  9908 ;;		_CGRAM_x
  9909 ;; This function uses a non-reentrant model
  9910 ;;
  9911                           
  9912                           
  9913                           ;psect for function _lcd_send_byte
  9914  096C                     _lcd_send_byte:
  9915                           
  9916                           ;incstack = 0
  9917 ;; hardware stack exceeded
  9918                           ; Regs used in _lcd_send_byte: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9919                           ;lcd_send_byte@address stored from wreg
  9920  096C  0021               	movlb	1	; select bank1
  9921  096D  00C0               	movwf	lcd_send_byte@address^(0+128)
  9922  096E                     l4687:
  9923                           
  9924                           ;LCD_i2c.c: 134: void lcd_send_byte(int8 address, int8 n);LCD_i2c.c: 135: {;LCD_i2c.c: 1
      +                          36:    Send_D7_D4(address,n >> 4);
  9925  096E  083D               	movf	lcd_send_byte@n^(0+128),w
  9926  096F  00BE               	movwf	??_lcd_send_byte^(0+128)
  9927  0970  3004               	movlw	4
  9928  0971                     u2505:
  9929  0971  36BE               	lsrf	??_lcd_send_byte^(0+128),f
  9930  0972  0B89               	decfsz	9,f
  9931  0973  2971               	goto	u2505
  9932  0974  083E               	movf	??_lcd_send_byte^(0+128),w
  9933  0975  00BF               	movwf	(??_lcd_send_byte+1)^(0+128)
  9934  0976  083F               	movf	(??_lcd_send_byte+1)^(0+128),w
  9935  0977  00B9               	movwf	Send_D7_D4@nibble^(0+128)
  9936  0978  0840               	movf	lcd_send_byte@address^(0+128),w
  9937  0979  3187  278F  3189   	fcall	_Send_D7_D4
  9938                           
  9939                           ;LCD_i2c.c: 137:    Send_D7_D4(address,n & 0xf);
  9940  097C  0021               	movlb	1	; select bank1
  9941  097D  083D               	movf	lcd_send_byte@n^(0+128),w
  9942  097E  390F               	andlw	15
  9943  097F  00BE               	movwf	??_lcd_send_byte^(0+128)
  9944  0980  083E               	movf	??_lcd_send_byte^(0+128),w
  9945  0981  00B9               	movwf	Send_D7_D4@nibble^(0+128)
  9946  0982  0840               	movf	lcd_send_byte@address^(0+128),w
  9947  0983  3187  278F  3189   	fcall	_Send_D7_D4
  9948  0986                     l1002:
  9949  0986  0008               	return
  9950  0987                     __end_of_lcd_send_byte:
  9951                           
  9952                           	psect	text9
  9953  078F                     __ptext9:	
  9954 ;; *************** function _Send_D7_D4 *****************
  9955 ;; Defined at:
  9956 ;;		line 114 in file "LCD_i2c.c"
  9957 ;; Parameters:    Size  Location     Type
  9958 ;;  address         1    wreg     unsigned char 
  9959 ;;  nibble          1   25[BANK1 ] unsigned char 
  9960 ;; Auto vars:     Size  Location     Type
  9961 ;;  address         1   27[BANK1 ] unsigned char 
  9962 ;;  datos           1   28[BANK1 ] unsigned char 
  9963 ;; Return value:  Size  Location     Type
  9964 ;;                  1    wreg      void 
  9965 ;; Registers used:
  9966 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9967 ;; Tracked objects:
  9968 ;;		On entry : 0/0
  9969 ;;		On exit  : 0/0
  9970 ;;		Unchanged: 0/0
  9971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9972 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9973 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9974 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9975 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9976 ;;Total ram usage:        4 bytes
  9977 ;; Hardware stack levels used: 1
  9978 ;; Hardware stack levels required when called: 20
  9979 ;; This function calls:
  9980 ;;		_Write_PCF
  9981 ;; This function is called by:
  9982 ;;		_lcd_send_byte
  9983 ;;		_lcd_init
  9984 ;; This function uses a non-reentrant model
  9985 ;;
  9986                           
  9987                           
  9988                           ;psect for function _Send_D7_D4
  9989  078F                     _Send_D7_D4:
  9990                           
  9991                           ;incstack = 0
  9992 ;; hardware stack exceeded
  9993                           ; Regs used in _Send_D7_D4: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9994                           ;Send_D7_D4@address stored from wreg
  9995  078F  0021               	movlb	1	; select bank1
  9996  0790  00BB               	movwf	Send_D7_D4@address^(0+128)
  9997  0791                     l4569:
  9998                           
  9999                           ;LCD_i2c.c: 114: void Send_D7_D4(int8 address,int8 nibble);LCD_i2c.c: 115: {;LCD_i2c.c: 
      +                          116:    char datos=0;
 10000  0791  01BC               	clrf	Send_D7_D4@datos^(0+128)
 10001  0792                     l4571:
 10002                           
 10003                           ;LCD_i2c.c: 118:    if((nibble & 1)==1) datos= datos|16; else datos = datos&~16;
 10004  0792  1C39               	btfss	Send_D7_D4@nibble^(0+128),0
 10005  0793  2F95               	goto	u2281
 10006  0794  2F96               	goto	u2280
 10007  0795                     u2281:
 10008  0795  2F9C               	goto	l4575
 10009  0796                     u2280:
 10010  0796                     l4573:
 10011  0796  083C               	movf	Send_D7_D4@datos^(0+128),w
 10012  0797  3810               	iorlw	16
 10013  0798  00BA               	movwf	??_Send_D7_D4^(0+128)
 10014  0799  083A               	movf	??_Send_D7_D4^(0+128),w
 10015  079A  00BC               	movwf	Send_D7_D4@datos^(0+128)
 10016  079B  2FA1               	goto	l4577
 10017  079C                     l4575:
 10018  079C  083C               	movf	Send_D7_D4@datos^(0+128),w
 10019  079D  39EF               	andlw	239
 10020  079E  00BA               	movwf	??_Send_D7_D4^(0+128)
 10021  079F  083A               	movf	??_Send_D7_D4^(0+128),w
 10022  07A0  00BC               	movwf	Send_D7_D4@datos^(0+128)
 10023  07A1                     l4577:
 10024                           
 10025                           ;LCD_i2c.c: 119:    if((nibble & 2)==2) datos= datos|32; else datos = datos&~32;
 10026  07A1  1CB9               	btfss	Send_D7_D4@nibble^(0+128),1
 10027  07A2  2FA4               	goto	u2291
 10028  07A3  2FA5               	goto	u2290
 10029  07A4                     u2291:
 10030  07A4  2FAB               	goto	l4581
 10031  07A5                     u2290:
 10032  07A5                     l4579:
 10033  07A5  083C               	movf	Send_D7_D4@datos^(0+128),w
 10034  07A6  3820               	iorlw	32
 10035  07A7  00BA               	movwf	??_Send_D7_D4^(0+128)
 10036  07A8  083A               	movf	??_Send_D7_D4^(0+128),w
 10037  07A9  00BC               	movwf	Send_D7_D4@datos^(0+128)
 10038  07AA  2FB0               	goto	l4583
 10039  07AB                     l4581:
 10040  07AB  083C               	movf	Send_D7_D4@datos^(0+128),w
 10041  07AC  39DF               	andlw	223
 10042  07AD  00BA               	movwf	??_Send_D7_D4^(0+128)
 10043  07AE  083A               	movf	??_Send_D7_D4^(0+128),w
 10044  07AF  00BC               	movwf	Send_D7_D4@datos^(0+128)
 10045  07B0                     l4583:
 10046                           
 10047                           ;LCD_i2c.c: 120:    if((nibble & 4)==4) datos= datos|64; else datos = datos&~64;
 10048  07B0  1D39               	btfss	Send_D7_D4@nibble^(0+128),2
 10049  07B1  2FB3               	goto	u2301
 10050  07B2  2FB4               	goto	u2300
 10051  07B3                     u2301:
 10052  07B3  2FBA               	goto	l4587
 10053  07B4                     u2300:
 10054  07B4                     l4585:
 10055  07B4  083C               	movf	Send_D7_D4@datos^(0+128),w
 10056  07B5  3840               	iorlw	64
 10057  07B6  00BA               	movwf	??_Send_D7_D4^(0+128)
 10058  07B7  083A               	movf	??_Send_D7_D4^(0+128),w
 10059  07B8  00BC               	movwf	Send_D7_D4@datos^(0+128)
 10060  07B9  2FBF               	goto	l4589
 10061  07BA                     l4587:
 10062  07BA  083C               	movf	Send_D7_D4@datos^(0+128),w
 10063  07BB  39BF               	andlw	191
 10064  07BC  00BA               	movwf	??_Send_D7_D4^(0+128)
 10065  07BD  083A               	movf	??_Send_D7_D4^(0+128),w
 10066  07BE  00BC               	movwf	Send_D7_D4@datos^(0+128)
 10067  07BF                     l4589:
 10068                           
 10069                           ;LCD_i2c.c: 121:    if((nibble & 8)==8) datos= datos|128; else datos = datos&~128;
 10070  07BF  1DB9               	btfss	Send_D7_D4@nibble^(0+128),3
 10071  07C0  2FC2               	goto	u2311
 10072  07C1  2FC3               	goto	u2310
 10073  07C2                     u2311:
 10074  07C2  2FC9               	goto	l4593
 10075  07C3                     u2310:
 10076  07C3                     l4591:
 10077  07C3  083C               	movf	Send_D7_D4@datos^(0+128),w
 10078  07C4  3880               	iorlw	128
 10079  07C5  00BA               	movwf	??_Send_D7_D4^(0+128)
 10080  07C6  083A               	movf	??_Send_D7_D4^(0+128),w
 10081  07C7  00BC               	movwf	Send_D7_D4@datos^(0+128)
 10082  07C8  2FCE               	goto	l4595
 10083  07C9                     l4593:
 10084  07C9  083C               	movf	Send_D7_D4@datos^(0+128),w
 10085  07CA  397F               	andlw	127
 10086  07CB  00BA               	movwf	??_Send_D7_D4^(0+128)
 10087  07CC  083A               	movf	??_Send_D7_D4^(0+128),w
 10088  07CD  00BC               	movwf	Send_D7_D4@datos^(0+128)
 10089  07CE                     l4595:
 10090                           
 10091                           ;LCD_i2c.c: 122:       _delay((unsigned long)((60)*(8000000/4000000.0)));
 10092  07CE  3028               	movlw	40
 10093  07CF                     u3577:
 10094  07CF  0B89               	decfsz	9,f
 10095  07D0  2FCF               	goto	u3577
 10096  07D1                     l4597:
 10097                           
 10098                           ;LCD_i2c.c: 123:    if(address)
 10099  07D1  0021               	movlb	1	; select bank1
 10100  07D2  083B               	movf	Send_D7_D4@address^(0+128),w
 10101  07D3  1903               	btfsc	3,2
 10102  07D4  2FD6               	goto	u2321
 10103  07D5  2FD7               	goto	u2320
 10104  07D6                     u2321:
 10105  07D6  2FDD               	goto	l4601
 10106  07D7                     u2320:
 10107  07D7                     l4599:
 10108                           
 10109                           ;LCD_i2c.c: 124:       datos= datos |1;
 10110  07D7  083C               	movf	Send_D7_D4@datos^(0+128),w
 10111  07D8  3801               	iorlw	1
 10112  07D9  00BA               	movwf	??_Send_D7_D4^(0+128)
 10113  07DA  083A               	movf	??_Send_D7_D4^(0+128),w
 10114  07DB  00BC               	movwf	Send_D7_D4@datos^(0+128)
 10115  07DC  2FE2               	goto	l4603
 10116  07DD                     l4601:
 10117                           
 10118                           ;LCD_i2c.c: 126:      datos = datos &~1;
 10119  07DD  083C               	movf	Send_D7_D4@datos^(0+128),w
 10120  07DE  39FE               	andlw	254
 10121  07DF  00BA               	movwf	??_Send_D7_D4^(0+128)
 10122  07E0  083A               	movf	??_Send_D7_D4^(0+128),w
 10123  07E1  00BC               	movwf	Send_D7_D4@datos^(0+128)
 10124  07E2                     l4603:
 10125                           
 10126                           ;LCD_i2c.c: 129:    Write_PCF( datos | 4);
 10127  07E2  083C               	movf	Send_D7_D4@datos^(0+128),w
 10128  07E3  3804               	iorlw	4
 10129  07E4  3197  27B3  3187   	fcall	_Write_PCF
 10130  07E7                     l4605:
 10131                           
 10132                           ;LCD_i2c.c: 130:    _delay((unsigned long)((2)*(8000000/4000000.0)));
 10133  07E7  3200               	nop2	;2 cycle nop
 10134  07E8  3200               	nop2	;2 cycle nop
 10135  07E9                     l4607:
 10136                           
 10137                           ;LCD_i2c.c: 131:    Write_PCF( datos & ~4);
 10138  07E9  0021               	movlb	1	; select bank1
 10139  07EA  083C               	movf	Send_D7_D4@datos^(0+128),w
 10140  07EB  39FB               	andlw	251
 10141  07EC  3197  27B3  3187   	fcall	_Write_PCF
 10142  07EF                     l999:
 10143  07EF  0008               	return
 10144  07F0                     __end_of_Send_D7_D4:
 10145                           
 10146                           	psect	text10
 10147  17B3                     __ptext10:	
 10148 ;; *************** function _Write_PCF *****************
 10149 ;; Defined at:
 10150 ;;		line 104 in file "LCD_i2c.c"
 10151 ;; Parameters:    Size  Location     Type
 10152 ;;  dato            1    wreg     unsigned char 
 10153 ;; Auto vars:     Size  Location     Type
 10154 ;;  dato            1   24[BANK1 ] unsigned char 
 10155 ;; Return value:  Size  Location     Type
 10156 ;;                  1    wreg      void 
 10157 ;; Registers used:
 10158 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10159 ;; Tracked objects:
 10160 ;;		On entry : 0/0
 10161 ;;		On exit  : 0/0
 10162 ;;		Unchanged: 0/0
 10163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10165 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10166 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10167 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10168 ;;Total ram usage:        2 bytes
 10169 ;; Hardware stack levels used: 1
 10170 ;; Hardware stack levels required when called: 19
 10171 ;; This function calls:
 10172 ;;		_I2C1_Write1ByteRegister
 10173 ;; This function is called by:
 10174 ;;		_Send_D7_D4
 10175 ;; This function uses a non-reentrant model
 10176 ;;
 10177                           
 10178                           
 10179                           ;psect for function _Write_PCF
 10180  17B3                     _Write_PCF:
 10181                           
 10182                           ;incstack = 0
 10183 ;; hardware stack exceeded
 10184                           ; Regs used in _Write_PCF: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10185                           ;Write_PCF@dato stored from wreg
 10186  17B3  0021               	movlb	1	; select bank1
 10187  17B4  00B8               	movwf	Write_PCF@dato^(0+128)
 10188  17B5                     l4473:
 10189                           
 10190                           ;LCD_i2c.c: 111:    I2C1_Write1ByteRegister( 56|(7),0,(dato|8) );
 10191  17B5  01B3               	clrf	I2C1_Write1ByteRegister@reg^(0+128)
 10192  17B6  0838               	movf	Write_PCF@dato^(0+128),w
 10193  17B7  3808               	iorlw	8
 10194  17B8  00B7               	movwf	??_Write_PCF^(0+128)
 10195  17B9  0837               	movf	??_Write_PCF^(0+128),w
 10196  17BA  00B4               	movwf	I2C1_Write1ByteRegister@data^(0+128)
 10197  17BB  303F               	movlw	63
 10198  17BC  318B  23EC  3197   	fcall	_I2C1_Write1ByteRegister
 10199  17BF                     l986:
 10200  17BF  0008               	return
 10201  17C0                     __end_of_Write_PCF:
 10202                           
 10203                           	psect	text11
 10204  0BEC                     __ptext11:	
 10205 ;; *************** function _I2C1_Write1ByteRegister *****************
 10206 ;; Defined at:
 10207 ;;		line 91 in file "mcc_generated_files/examples/i2c1_master_example.c"
 10208 ;; Parameters:    Size  Location     Type
 10209 ;;  address         1    wreg     unsigned char 
 10210 ;;  reg             1   19[BANK1 ] unsigned char 
 10211 ;;  data            1   20[BANK1 ] unsigned char 
 10212 ;; Auto vars:     Size  Location     Type
 10213 ;;  address         1   22[BANK1 ] unsigned char 
 10214 ;; Return value:  Size  Location     Type
 10215 ;;                  1    wreg      void 
 10216 ;; Registers used:
 10217 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10218 ;; Tracked objects:
 10219 ;;		On entry : 0/0
 10220 ;;		On exit  : 0/0
 10221 ;;		Unchanged: 0/0
 10222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10223 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10224 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10225 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10226 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10227 ;;Total ram usage:        4 bytes
 10228 ;; Hardware stack levels used: 1
 10229 ;; Hardware stack levels required when called: 18
 10230 ;; This function calls:
 10231 ;;		_I2C1_Close
 10232 ;;		_I2C1_MasterWrite
 10233 ;;		_I2C1_Open
 10234 ;;		_I2C1_SetAddressNackCallback
 10235 ;;		_I2C1_SetBuffer
 10236 ;;		_I2C1_SetDataCompleteCallback
 10237 ;; This function is called by:
 10238 ;;		_Write_PCF
 10239 ;;		_lcd_init
 10240 ;; This function uses a non-reentrant model
 10241 ;;
 10242                           
 10243                           
 10244                           ;psect for function _I2C1_Write1ByteRegister
 10245  0BEC                     _I2C1_Write1ByteRegister:
 10246                           
 10247                           ;incstack = 0
 10248 ;; hardware stack exceeded
 10249                           ; Regs used in _I2C1_Write1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10250                           ;I2C1_Write1ByteRegister@address stored from wreg
 10251  0BEC  0021               	movlb	1	; select bank1
 10252  0BED  00B6               	movwf	I2C1_Write1ByteRegister@address^(0+128)
 10253  0BEE                     l4441:
 10254  0BEE                     l4443:	
 10255                           ;mcc_generated_files/examples/i2c1_master_example.c: 91: void I2C1_Write1ByteRegister(i2
      +                          c1_address_t address, uint8_t reg, uint8_t data);mcc_generated_files/examples/i2c1_maste
      +                          r_example.c: 92: {;mcc_generated_files/examples/i2c1_master_example.c: 93:     while(!I2
      +                          C1_Open(address));
 10256                           
 10257  0BEE  0021               	movlb	1	; select bank1
 10258  0BEF  0836               	movf	I2C1_Write1ByteRegister@address^(0+128),w
 10259  0BF0  318C  24D9  318B   	fcall	_I2C1_Open
 10260  0BF3  3A00               	xorlw	0
 10261  0BF4  1903               	skipnz
 10262  0BF5  2BF7               	goto	u1981
 10263  0BF6  2BF8               	goto	u1980
 10264  0BF7                     u1981:
 10265  0BF7  2BEE               	goto	l4443
 10266  0BF8                     u1980:
 10267  0BF8                     l4445:
 10268                           
 10269                           ;mcc_generated_files/examples/i2c1_master_example.c: 94:     I2C1_SetDataCompleteCallbac
      +                          k(wr1RegCompleteHandler,&data);
 10270  0BF8  3047               	movlw	low _wr1RegCompleteHandler
 10271  0BF9  0021               	movlb	1	; select bank1
 10272  0BFA  00A5               	movwf	I2C1_SetDataCompleteCallback@cb^(0+128)
 10273  0BFB  3008               	movlw	high _wr1RegCompleteHandler
 10274  0BFC  00A6               	movwf	(I2C1_SetDataCompleteCallback@cb^(0+128)+1)
 10275  0BFD  30B4               	movlw	(low (I2C1_Write1ByteRegister@data| 0))& (0+255)
 10276  0BFE  00B5               	movwf	??_I2C1_Write1ByteRegister^(0+128)
 10277  0BFF  0835               	movf	??_I2C1_Write1ByteRegister^(0+128),w
 10278  0C00  00A7               	movwf	I2C1_SetDataCompleteCallback@ptr^(0+128)
 10279  0C01  3197  27CE  318B   	fcall	_I2C1_SetDataCompleteCallback
 10280  0C04                     l4447:
 10281                           
 10282                           ;mcc_generated_files/examples/i2c1_master_example.c: 95:     I2C1_SetBuffer(&reg,1);
 10283  0C04  3001               	movlw	1
 10284  0C05  0021               	movlb	1	; select bank1
 10285  0C06  00A0               	movwf	I2C1_SetBuffer@bufferSize^(0+128)
 10286  0C07  3000               	movlw	0
 10287  0C08  00A1               	movwf	(I2C1_SetBuffer@bufferSize^(0+128)+1)
 10288  0C09  30B3               	movlw	(low (I2C1_Write1ByteRegister@reg| 0))& (0+255)
 10289  0C0A  3188  206F  318B   	fcall	_I2C1_SetBuffer
 10290  0C0D                     l4449:
 10291                           
 10292                           ;mcc_generated_files/examples/i2c1_master_example.c: 96:     I2C1_SetAddressNackCallback
      +                          (((void*)0),((void*)0));
 10293  0C0D  3000               	movlw	0
 10294  0C0E  0021               	movlb	1	; select bank1
 10295  0C0F  00A5               	movwf	I2C1_SetAddressNackCallback@cb^(0+128)
 10296  0C10  00A6               	movwf	(I2C1_SetAddressNackCallback@cb+1)^(0+128)
 10297  0C11  01A7               	clrf	I2C1_SetAddressNackCallback@ptr^(0+128)
 10298  0C12  3188  2000  318B   	fcall	_I2C1_SetAddressNackCallback
 10299  0C15                     l4451:
 10300                           
 10301                           ;mcc_generated_files/examples/i2c1_master_example.c: 97:     I2C1_MasterWrite();
 10302  0C15  3197  2709  318B   	fcall	_I2C1_MasterWrite
 10303  0C18                     l4453:	
 10304                           ;mcc_generated_files/examples/i2c1_master_example.c: 98:     while(I2C1_BUSY == I2C1_Clo
      +                          se());
 10305                           
 10306  0C18  3189  21C3  318B   	fcall	_I2C1_Close
 10307  0C1B  3A01               	xorlw	1
 10308  0C1C  1903               	skipnz
 10309  0C1D  2C1F               	goto	u1991
 10310  0C1E  2C20               	goto	u1990
 10311  0C1F                     u1991:
 10312  0C1F  2C18               	goto	l4453
 10313  0C20                     u1990:
 10314  0C20                     l51:
 10315  0C20  0008               	return
 10316  0C21                     __end_of_I2C1_Write1ByteRegister:
 10317                           
 10318                           	psect	text12
 10319  0800                     __ptext12:	
 10320 ;; *************** function _I2C1_SetAddressNackCallback *****************
 10321 ;; Defined at:
 10322 ;;		line 283 in file "mcc_generated_files/i2c1_master.c"
 10323 ;; Parameters:    Size  Location     Type
 10324 ;;  cb              2    5[BANK1 ] PTR FTN(PTR void ,)enum 
 10325 ;;		 -> Absolute function(1), 
 10326 ;;  ptr             1    7[BANK1 ] PTR void 
 10327 ;;		 -> NULL(0), 
 10328 ;; Auto vars:     Size  Location     Type
 10329 ;;		None
 10330 ;; Return value:  Size  Location     Type
 10331 ;;                  1    wreg      void 
 10332 ;; Registers used:
 10333 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10334 ;; Tracked objects:
 10335 ;;		On entry : 0/0
 10336 ;;		On exit  : 0/0
 10337 ;;		Unchanged: 0/0
 10338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10339 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10341 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10342 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10343 ;;Total ram usage:        4 bytes
 10344 ;; Hardware stack levels used: 1
 10345 ;; Hardware stack levels required when called: 11
 10346 ;; This function calls:
 10347 ;;		_I2C1_SetCallback
 10348 ;; This function is called by:
 10349 ;;		_I2C1_Write1ByteRegister
 10350 ;;		_I2C1_Read1ByteRegister
 10351 ;;		_I2C1_Read2ByteRegister
 10352 ;;		_I2C1_Write2ByteRegister
 10353 ;;		_I2C1_WriteNBytes
 10354 ;;		_I2C1_ReadDataBlock
 10355 ;; This function uses a non-reentrant model
 10356 ;;
 10357                           
 10358                           
 10359                           ;psect for function _I2C1_SetAddressNackCallback
 10360  0800                     _I2C1_SetAddressNackCallback:
 10361  0800                     l4403:	
 10362                           ;incstack = 0
 10363 ;; hardware stack exceeded
 10364                           ; Regs used in _I2C1_SetAddressNackCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 10365                           
 10366                           
 10367                           ;mcc_generated_files/i2c1_master.c: 283: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 284: {;mcc_generated_files/i2c1_mast
      +                          er.c: 285:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 10368  0800  0021               	movlb	1	; select bank1
 10369  0801  0826               	movf	(I2C1_SetAddressNackCallback@cb+1)^(0+128),w
 10370  0802  00A1               	movwf	(I2C1_SetCallback@cb+1)^(0+128)
 10371  0803  0825               	movf	I2C1_SetAddressNackCallback@cb^(0+128),w
 10372  0804  00A0               	movwf	I2C1_SetCallback@cb^(0+128)
 10373  0805  0827               	movf	I2C1_SetAddressNackCallback@ptr^(0+128),w
 10374  0806  00A8               	movwf	??_I2C1_SetAddressNackCallback^(0+128)
 10375  0807  0828               	movf	??_I2C1_SetAddressNackCallback^(0+128),w
 10376  0808  00A2               	movwf	I2C1_SetCallback@ptr^(0+128)
 10377  0809  3002               	movlw	2
 10378  080A  318A  22A0  3188   	fcall	_I2C1_SetCallback
 10379  080D                     l514:
 10380  080D  0008               	return
 10381  080E                     __end_of_I2C1_SetAddressNackCallback:
 10382                           
 10383                           	psect	text13
 10384  0CD9                     __ptext13:	
 10385 ;; *************** function _I2C1_Open *****************
 10386 ;; Defined at:
 10387 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
 10388 ;; Parameters:    Size  Location     Type
 10389 ;;  address         1    wreg     unsigned char 
 10390 ;; Auto vars:     Size  Location     Type
 10391 ;;  address         1    1[BANK1 ] unsigned char 
 10392 ;;  returnValue     1    2[BANK1 ] enum E355
 10393 ;; Return value:  Size  Location     Type
 10394 ;;                  1    wreg      enum E355
 10395 ;; Registers used:
 10396 ;;		wreg, status,2, status,0, pclath, cstack
 10397 ;; Tracked objects:
 10398 ;;		On entry : 0/0
 10399 ;;		On exit  : 0/0
 10400 ;;		Unchanged: 0/0
 10401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10403 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10404 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10405 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10406 ;;Total ram usage:        3 bytes
 10407 ;; Hardware stack levels used: 1
 10408 ;; Hardware stack levels required when called: 11
 10409 ;; This function calls:
 10410 ;;		_I2C1_MasterClearIrq
 10411 ;;		_I2C1_MasterOpen
 10412 ;; This function is called by:
 10413 ;;		_I2C1_Write1ByteRegister
 10414 ;;		_I2C1_Read1ByteRegister
 10415 ;;		_I2C1_Read2ByteRegister
 10416 ;;		_I2C1_Write2ByteRegister
 10417 ;;		_I2C1_WriteNBytes
 10418 ;;		_I2C1_ReadNBytes
 10419 ;;		_I2C1_ReadDataBlock
 10420 ;; This function uses a non-reentrant model
 10421 ;;
 10422                           
 10423                           
 10424                           ;psect for function _I2C1_Open
 10425  0CD9                     _I2C1_Open:
 10426                           
 10427                           ;incstack = 0
 10428 ;; hardware stack exceeded
 10429                           ; Regs used in _I2C1_Open: [wreg+status,2+status,0+pclath+cstack]
 10430                           ;I2C1_Open@address stored from wreg
 10431  0CD9  0021               	movlb	1	; select bank1
 10432  0CDA  00A1               	movwf	I2C1_Open@address^(0+128)
 10433  0CDB                     l4371:
 10434                           
 10435                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 10436  0CDB  01A2               	clrf	I2C1_Open@returnValue^(0+128)
 10437  0CDC  0AA2               	incf	I2C1_Open@returnValue^(0+128),f
 10438                           
 10439                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
 10440  0CDD  0022               	movlb	2	; select bank2
 10441  0CDE  193C               	btfsc	(_I2C1_Status^(0+256)+28),2
 10442  0CDF  2CE1               	goto	u1921
 10443  0CE0  2CE2               	goto	u1920
 10444  0CE1                     u1921:
 10445  0CE1  2D17               	goto	l481
 10446  0CE2                     u1920:
 10447  0CE2                     l4373:
 10448                           
 10449                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
 10450  0CE2  0021               	movlb	1	; select bank1
 10451  0CE3  0821               	movf	I2C1_Open@address^(0+128),w
 10452  0CE4  00A0               	movwf	??_I2C1_Open^(0+128)
 10453  0CE5  0820               	movf	??_I2C1_Open^(0+128),w
 10454  0CE6  0022               	movlb	2	; select bank2
 10455  0CE7  00B6               	movwf	(_I2C1_Status^(0+256)+22)
 10456  0CE8                     l4375:
 10457                           
 10458                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
 10459  0CE8  10BC               	bcf	(_I2C1_Status^(0+256)+28),1
 10460  0CE9                     l4377:
 10461                           
 10462                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
 10463  0CE9  153C               	bsf	(_I2C1_Status^(0+256)+28),2
 10464  0CEA                     l4379:
 10465                           
 10466                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
 10467  0CEA  103C               	bcf	(_I2C1_Status^(0+256)+28),0
 10468                           
 10469                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
 10470  0CEB  300E               	movlw	14
 10471  0CEC  0021               	movlb	1	; select bank1
 10472  0CED  00A0               	movwf	??_I2C1_Open^(0+128)
 10473  0CEE  0820               	movf	??_I2C1_Open^(0+128),w
 10474  0CEF  0022               	movlb	2	; select bank2
 10475  0CF0  00BA               	movwf	(_I2C1_Status^(0+256)+26)
 10476                           
 10477                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
 10478  0CF1  30F4               	movlw	244
 10479  0CF2  00B4               	movwf	(_I2C1_Status^(0+256)+20)
 10480  0CF3  3001               	movlw	1
 10481  0CF4  00B5               	movwf	(_I2C1_Status^(0+256)+21)
 10482  0CF5                     l4381:
 10483                           
 10484                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
 10485  0CF5  15BC               	bsf	(_I2C1_Status^(0+256)+28),3
 10486                           
 10487                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 10488  0CF6  30A9               	movlw	low _I2C1_CallbackReturnStop
 10489  0CF7  00A0               	movwf	_I2C1_Status^(0+256)
 10490  0CF8  3016               	movlw	high _I2C1_CallbackReturnStop
 10491  0CF9  00A1               	movwf	(_I2C1_Status^(0+256)+1)
 10492  0CFA                     l4383:
 10493                           
 10494                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 10495  0CFA  01AC               	clrf	(low ((_I2C1_Status| (0+256)+12)))^0
 10496  0CFB                     l4385:
 10497                           
 10498                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 10499  0CFB  30A9               	movlw	low _I2C1_CallbackReturnStop
 10500  0CFC  00A2               	movwf	(low ((_I2C1_Status| (0+256)+2)))^0
 10501  0CFD  3016               	movlw	high _I2C1_CallbackReturnStop
 10502  0CFE  00A3               	movwf	((low ((_I2C1_Status| (0+256)+2)))^0+1)
 10503                           
 10504                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 10505  0CFF  01AD               	clrf	(low ((_I2C1_Status| (0+256)+13)))^0
 10506  0D00                     l4387:
 10507                           
 10508                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 10509  0D00  30A9               	movlw	low _I2C1_CallbackReturnStop
 10510  0D01  00A4               	movwf	(low ((_I2C1_Status| (0+256)+4)))^0
 10511  0D02  3016               	movlw	high _I2C1_CallbackReturnStop
 10512  0D03  00A5               	movwf	((low ((_I2C1_Status| (0+256)+4)))^0+1)
 10513  0D04                     l4389:
 10514                           
 10515                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 10516  0D04  01AE               	clrf	(low ((_I2C1_Status| (0+256)+14)))^0
 10517                           
 10518                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 10519  0D05  30A9               	movlw	low _I2C1_CallbackReturnStop
 10520  0D06  00A6               	movwf	(low ((_I2C1_Status| (0+256)+6)))^0
 10521  0D07  3016               	movlw	high _I2C1_CallbackReturnStop
 10522  0D08  00A7               	movwf	((low ((_I2C1_Status| (0+256)+6)))^0+1)
 10523  0D09                     l4391:
 10524                           
 10525                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 10526  0D09  01AF               	clrf	(low ((_I2C1_Status| (0+256)+15)))^0
 10527  0D0A                     l4393:
 10528                           
 10529                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 10530  0D0A  30AB               	movlw	low _I2C1_CallbackReturnReset
 10531  0D0B  00A8               	movwf	(low ((_I2C1_Status| (0+256)+8)))^0
 10532  0D0C  3016               	movlw	high _I2C1_CallbackReturnReset
 10533  0D0D  00A9               	movwf	((low ((_I2C1_Status| (0+256)+8)))^0+1)
 10534                           
 10535                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 10536  0D0E  01B0               	clrf	(low ((_I2C1_Status| (0+256)+16)))^0
 10537  0D0F                     l4395:
 10538                           
 10539                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_MasterClearIrq();
 10540  0D0F  3196  26AD  318C   	fcall	_I2C1_MasterClearIrq
 10541  0D12                     l4397:
 10542                           
 10543                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterOpen();
 10544  0D12  3197  27A6  318C   	fcall	_I2C1_MasterOpen
 10545  0D15                     l4399:
 10546                           
 10547                           ;mcc_generated_files/i2c1_master.c: 204:         returnValue = I2C1_NOERR;
 10548  0D15  0021               	movlb	1	; select bank1
 10549  0D16  01A2               	clrf	I2C1_Open@returnValue^(0+128)
 10550  0D17                     l481:	
 10551                           ;mcc_generated_files/i2c1_master.c: 205:     }
 10552                           
 10553                           
 10554                           ;mcc_generated_files/i2c1_master.c: 206:     return returnValue;
 10555  0D17  0021               	movlb	1	; select bank1
 10556  0D18  0822               	movf	I2C1_Open@returnValue^(0+128),w
 10557  0D19                     l482:
 10558  0D19  0008               	return
 10559  0D1A                     __end_of_I2C1_Open:
 10560                           
 10561                           	psect	text14
 10562  17A6                     __ptext14:	
 10563 ;; *************** function _I2C1_MasterOpen *****************
 10564 ;; Defined at:
 10565 ;;		line 543 in file "mcc_generated_files/i2c1_master.c"
 10566 ;; Parameters:    Size  Location     Type
 10567 ;;		None
 10568 ;; Auto vars:     Size  Location     Type
 10569 ;;		None
 10570 ;; Return value:  Size  Location     Type
 10571 ;;                  1    wreg      _Bool 
 10572 ;; Registers used:
 10573 ;;		wreg, status,2
 10574 ;; Tracked objects:
 10575 ;;		On entry : 0/0
 10576 ;;		On exit  : 0/0
 10577 ;;		Unchanged: 0/0
 10578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10583 ;;Total ram usage:        0 bytes
 10584 ;; Hardware stack levels used: 1
 10585 ;; Hardware stack levels required when called: 10
 10586 ;; This function calls:
 10587 ;;		Nothing
 10588 ;; This function is called by:
 10589 ;;		_I2C1_Open
 10590 ;; This function uses a non-reentrant model
 10591 ;;
 10592                           
 10593                           
 10594                           ;psect for function _I2C1_MasterOpen
 10595  17A6                     _I2C1_MasterOpen:
 10596  17A6                     l4333:	
 10597                           ;incstack = 0
 10598 ;; hardware stack exceeded
 10599                           ; Regs used in _I2C1_MasterOpen: [wreg+status,2]
 10600                           
 10601                           
 10602                           ;mcc_generated_files/i2c1_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 10603  17A6  0023               	movlb	3	; select bank3
 10604  17A7  1A90               	btfsc	16,5	;volatile
 10605  17A8  2FAA               	goto	u1891
 10606  17A9  2FAB               	goto	u1890
 10607  17AA                     u1891:
 10608  17AA  2FB2               	goto	l647
 10609  17AB                     u1890:
 10610  17AB                     l4335:
 10611                           
 10612                           ;mcc_generated_files/i2c1_master.c: 546:     {;mcc_generated_files/i2c1_master.c: 547:  
      +                                 SSP1STAT = 0x00;
 10613  17AB  018F               	clrf	15	;volatile
 10614  17AC                     l4337:
 10615                           
 10616                           ;mcc_generated_files/i2c1_master.c: 548:         SSP1CON1 = 0x08;
 10617  17AC  3008               	movlw	8
 10618  17AD  0090               	movwf	16	;volatile
 10619  17AE                     l4339:
 10620                           
 10621                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON2 = 0x00;
 10622  17AE  0191               	clrf	17	;volatile
 10623                           
 10624                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1ADD = 0x04;
 10625  17AF  3004               	movlw	4
 10626  17B0  008D               	movwf	13	;volatile
 10627  17B1                     l4341:
 10628                           
 10629                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 10630  17B1  1690               	bsf	16,5	;volatile
 10631  17B2                     l647:
 10632  17B2  0008               	return
 10633  17B3                     __end_of_I2C1_MasterOpen:
 10634                           
 10635                           	psect	text15
 10636  1709                     __ptext15:	
 10637 ;; *************** function _I2C1_MasterWrite *****************
 10638 ;; Defined at:
 10639 ;;		line 251 in file "mcc_generated_files/i2c1_master.c"
 10640 ;; Parameters:    Size  Location     Type
 10641 ;;		None
 10642 ;; Auto vars:     Size  Location     Type
 10643 ;;		None
 10644 ;; Return value:  Size  Location     Type
 10645 ;;                  1    wreg      enum E355
 10646 ;; Registers used:
 10647 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10648 ;; Tracked objects:
 10649 ;;		On entry : 0/0
 10650 ;;		On exit  : 0/0
 10651 ;;		Unchanged: 0/0
 10652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10657 ;;Total ram usage:        0 bytes
 10658 ;; Hardware stack levels used: 1
 10659 ;; Hardware stack levels required when called: 17
 10660 ;; This function calls:
 10661 ;;		_I2C1_MasterOperation
 10662 ;; This function is called by:
 10663 ;;		_I2C1_Write1ByteRegister
 10664 ;;		_I2C1_Read1ByteRegister
 10665 ;;		_I2C1_Read2ByteRegister
 10666 ;;		_I2C1_Write2ByteRegister
 10667 ;;		_I2C1_WriteNBytes
 10668 ;;		_I2C1_ReadDataBlock
 10669 ;; This function uses a non-reentrant model
 10670 ;;
 10671                           
 10672                           
 10673                           ;psect for function _I2C1_MasterWrite
 10674  1709                     _I2C1_MasterWrite:
 10675  1709                     l4405:	
 10676                           ;incstack = 0
 10677 ;; hardware stack exceeded
 10678                           ; Regs used in _I2C1_MasterWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10679                           
 10680                           
 10681                           ;mcc_generated_files/i2c1_master.c: 253:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 10682  1709  3000               	movlw	0
 10683  170A  318A  2229  3197   	fcall	_I2C1_MasterOperation
 10684  170D                     l498:
 10685  170D  0008               	return
 10686  170E                     __end_of_I2C1_MasterWrite:
 10687                           
 10688                           	psect	text16
 10689  0A29                     __ptext16:	
 10690 ;; *************** function _I2C1_MasterOperation *****************
 10691 ;; Defined at:
 10692 ;;		line 224 in file "mcc_generated_files/i2c1_master.c"
 10693 ;; Parameters:    Size  Location     Type
 10694 ;;  read            1    wreg     _Bool 
 10695 ;; Auto vars:     Size  Location     Type
 10696 ;;  read            1   17[BANK1 ] _Bool 
 10697 ;;  returnValue     1   18[BANK1 ] enum E355
 10698 ;; Return value:  Size  Location     Type
 10699 ;;                  1    wreg      enum E355
 10700 ;; Registers used:
 10701 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10702 ;; Tracked objects:
 10703 ;;		On entry : 0/0
 10704 ;;		On exit  : 0/0
 10705 ;;		Unchanged: 0/0
 10706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10708 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10709 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10710 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10711 ;;Total ram usage:        3 bytes
 10712 ;; Hardware stack levels used: 1
 10713 ;; Hardware stack levels required when called: 16
 10714 ;; This function calls:
 10715 ;;		_I2C1_MasterStart
 10716 ;;		_I2C1_Poller
 10717 ;; This function is called by:
 10718 ;;		_I2C1_MasterWrite
 10719 ;;		_I2C1_MasterRead
 10720 ;; This function uses a non-reentrant model
 10721 ;;
 10722                           
 10723                           
 10724                           ;psect for function _I2C1_MasterOperation
 10725  0A29                     _I2C1_MasterOperation:
 10726                           
 10727                           ;incstack = 0
 10728 ;; hardware stack exceeded
 10729                           ; Regs used in _I2C1_MasterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10730                           ;I2C1_MasterOperation@read stored from wreg
 10731  0A29  0021               	movlb	1	; select bank1
 10732  0A2A  00B1               	movwf	I2C1_MasterOperation@read^(0+128)
 10733  0A2B                     l4349:
 10734                           
 10735                           ;mcc_generated_files/i2c1_master.c: 224: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 225: {;mcc_generated_files/i2c1_master.c: 226:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 10736  0A2B  01B2               	clrf	I2C1_MasterOperation@returnValue^(0+128)
 10737  0A2C  0AB2               	incf	I2C1_MasterOperation@returnValue^(0+128),f
 10738                           
 10739                           ;mcc_generated_files/i2c1_master.c: 227:     if(!I2C1_Status.busy)
 10740  0A2D  0022               	movlb	2	; select bank2
 10741  0A2E  18BC               	btfsc	(_I2C1_Status^(0+256)+28),1
 10742  0A2F  2A31               	goto	u1901
 10743  0A30  2A32               	goto	u1900
 10744  0A31                     u1901:
 10745  0A31  2A49               	goto	l4365
 10746  0A32                     u1900:
 10747  0A32                     l4351:
 10748                           
 10749                           ;mcc_generated_files/i2c1_master.c: 228:     {;mcc_generated_files/i2c1_master.c: 229:  
      +                                 I2C1_Status.busy = 1;
 10750  0A32  14BC               	bsf	(_I2C1_Status^(0+256)+28),1
 10751  0A33                     l4353:
 10752                           
 10753                           ;mcc_generated_files/i2c1_master.c: 230:         returnValue = I2C1_NOERR;
 10754  0A33  0021               	movlb	1	; select bank1
 10755  0A34  01B2               	clrf	I2C1_MasterOperation@returnValue^(0+128)
 10756  0A35                     l4355:
 10757                           
 10758                           ;mcc_generated_files/i2c1_master.c: 232:         if(read)
 10759  0A35  0831               	movf	I2C1_MasterOperation@read^(0+128),w
 10760  0A36  1903               	btfsc	3,2
 10761  0A37  2A39               	goto	u1911
 10762  0A38  2A3A               	goto	u1910
 10763  0A39                     u1911:
 10764  0A39  2A3E               	goto	l4359
 10765  0A3A                     u1910:
 10766  0A3A                     l4357:
 10767                           
 10768                           ;mcc_generated_files/i2c1_master.c: 233:         {;mcc_generated_files/i2c1_master.c: 23
      +                          4:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 10769  0A3A  0022               	movlb	2	; select bank2
 10770  0A3B  01BA               	clrf	(_I2C1_Status^(0+256)+26)
 10771  0A3C  0ABA               	incf	(_I2C1_Status^(0+256)+26),f
 10772                           
 10773                           ;mcc_generated_files/i2c1_master.c: 235:         }
 10774  0A3D  2A43               	goto	l4361
 10775  0A3E                     l4359:
 10776                           
 10777                           ;mcc_generated_files/i2c1_master.c: 237:         {;mcc_generated_files/i2c1_master.c: 23
      +                          8:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 10778  0A3E  3002               	movlw	2
 10779  0A3F  00B0               	movwf	??_I2C1_MasterOperation^(0+128)
 10780  0A40  0830               	movf	??_I2C1_MasterOperation^(0+128),w
 10781  0A41  0022               	movlb	2	; select bank2
 10782  0A42  00BA               	movwf	(_I2C1_Status^(0+256)+26)
 10783  0A43                     l4361:
 10784                           
 10785                           ;mcc_generated_files/i2c1_master.c: 240:         I2C1_MasterStart();
 10786  0A43  3196  26B6  318A   	fcall	_I2C1_MasterStart
 10787  0A46                     l4363:
 10788                           
 10789                           ;mcc_generated_files/i2c1_master.c: 241:         I2C1_Poller();
 10790  0A46  3197  2799  318A   	fcall	_I2C1_Poller
 10791  0A49                     l4365:
 10792                           
 10793                           ;mcc_generated_files/i2c1_master.c: 243:     return returnValue;
 10794  0A49  0021               	movlb	1	; select bank1
 10795  0A4A  0832               	movf	I2C1_MasterOperation@returnValue^(0+128),w
 10796  0A4B                     l492:
 10797  0A4B  0008               	return
 10798  0A4C                     __end_of_I2C1_MasterOperation:
 10799                           
 10800                           	psect	text17
 10801  1799                     __ptext17:	
 10802 ;; *************** function _I2C1_Poller *****************
 10803 ;; Defined at:
 10804 ;;		line 312 in file "mcc_generated_files/i2c1_master.c"
 10805 ;; Parameters:    Size  Location     Type
 10806 ;;		None
 10807 ;; Auto vars:     Size  Location     Type
 10808 ;;		None
 10809 ;; Return value:  Size  Location     Type
 10810 ;;                  1    wreg      void 
 10811 ;; Registers used:
 10812 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10813 ;; Tracked objects:
 10814 ;;		On entry : 0/0
 10815 ;;		On exit  : 0/0
 10816 ;;		Unchanged: 0/0
 10817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10822 ;;Total ram usage:        0 bytes
 10823 ;; Hardware stack levels used: 1
 10824 ;; Hardware stack levels required when called: 15
 10825 ;; This function calls:
 10826 ;;		_I2C1_MasterFsm
 10827 ;;		_I2C1_MasterWaitForEvent
 10828 ;; This function is called by:
 10829 ;;		_I2C1_MasterOperation
 10830 ;; This function uses a non-reentrant model
 10831 ;;
 10832                           
 10833                           
 10834                           ;psect for function _I2C1_Poller
 10835  1799                     _I2C1_Poller:
 10836  1799                     l4307:	
 10837                           ;incstack = 0
 10838 ;; hardware stack exceeded
 10839                           ; Regs used in _I2C1_Poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10840                           
 10841                           
 10842                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 10843  1799  2FA0               	goto	l4313
 10844  179A                     l4309:
 10845                           
 10846                           ;mcc_generated_files/i2c1_master.c: 315:     {;mcc_generated_files/i2c1_master.c: 316:  
      +                                 I2C1_MasterWaitForEvent();
 10847  179A  3197  272C  3197   	fcall	_I2C1_MasterWaitForEvent
 10848  179D                     l4311:
 10849                           
 10850                           ;mcc_generated_files/i2c1_master.c: 317:         I2C1_MasterFsm();
 10851  179D  318A  22F7  3197   	fcall	_I2C1_MasterFsm
 10852  17A0                     l4313:
 10853                           
 10854                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 10855  17A0  0022               	movlb	2	; select bank2
 10856  17A1  18BC               	btfsc	(_I2C1_Status^(0+256)+28),1
 10857  17A2  2FA4               	goto	u1851
 10858  17A3  2FA5               	goto	u1850
 10859  17A4                     u1851:
 10860  17A4  2F9A               	goto	l4309
 10861  17A5                     u1850:
 10862  17A5                     l531:
 10863  17A5  0008               	return
 10864  17A6                     __end_of_I2C1_Poller:
 10865                           
 10866                           	psect	text18
 10867  172C                     __ptext18:	
 10868 ;; *************** function _I2C1_MasterWaitForEvent *****************
 10869 ;; Defined at:
 10870 ;;		line 650 in file "mcc_generated_files/i2c1_master.c"
 10871 ;; Parameters:    Size  Location     Type
 10872 ;;		None
 10873 ;; Auto vars:     Size  Location     Type
 10874 ;;		None
 10875 ;; Return value:  Size  Location     Type
 10876 ;;                  1    wreg      void 
 10877 ;; Registers used:
 10878 ;;		None
 10879 ;; Tracked objects:
 10880 ;;		On entry : 0/0
 10881 ;;		On exit  : 0/0
 10882 ;;		Unchanged: 0/0
 10883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10888 ;;Total ram usage:        0 bytes
 10889 ;; Hardware stack levels used: 1
 10890 ;; Hardware stack levels required when called: 10
 10891 ;; This function calls:
 10892 ;;		Nothing
 10893 ;; This function is called by:
 10894 ;;		_I2C1_Poller
 10895 ;; This function uses a non-reentrant model
 10896 ;;
 10897                           
 10898                           
 10899                           ;psect for function _I2C1_MasterWaitForEvent
 10900  172C                     _I2C1_MasterWaitForEvent:
 10901  172C                     l704:	
 10902                           ;incstack = 0
 10903 ;; hardware stack exceeded
 10904                           ; Regs used in _I2C1_MasterWaitForEvent: []
 10905                           ;mcc_generated_files/i2c1_master.c: 652:     while(1)
 10906                           
 10907                           
 10908                           ;mcc_generated_files/i2c1_master.c: 653:     {;mcc_generated_files/i2c1_master.c: 654:  
      +                                 if(PIR3bits.SSP1IF)
 10909  172C  002E               	movlb	14	; select bank14
 10910  172D  1C0F               	btfss	15,0	;volatile
 10911  172E  2F30               	goto	u1821
 10912  172F  2F31               	goto	u1820
 10913  1730                     u1821:
 10914  1730  2F2C               	goto	l704
 10915  1731                     u1820:
 10916  1731                     l708:
 10917  1731  0008               	return
 10918  1732                     __end_of_I2C1_MasterWaitForEvent:
 10919                           
 10920                           	psect	text19
 10921  0AF7                     __ptext19:	
 10922 ;; *************** function _I2C1_MasterFsm *****************
 10923 ;; Defined at:
 10924 ;;		line 321 in file "mcc_generated_files/i2c1_master.c"
 10925 ;; Parameters:    Size  Location     Type
 10926 ;;		None
 10927 ;; Auto vars:     Size  Location     Type
 10928 ;;		None
 10929 ;; Return value:  Size  Location     Type
 10930 ;;                  1    wreg      void 
 10931 ;; Registers used:
 10932 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10933 ;; Tracked objects:
 10934 ;;		On entry : 0/0
 10935 ;;		On exit  : 0/0
 10936 ;;		Unchanged: 0/0
 10937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10940 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10941 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10942 ;;Total ram usage:        3 bytes
 10943 ;; Hardware stack levels used: 1
 10944 ;; Hardware stack levels required when called: 14
 10945 ;; This function calls:
 10946 ;;		_I2C1_DO_ADDRESS_NACK
 10947 ;;		_I2C1_DO_IDLE
 10948 ;;		_I2C1_DO_RCEN
 10949 ;;		_I2C1_DO_RESET
 10950 ;;		_I2C1_DO_RX
 10951 ;;		_I2C1_DO_RX_ACK
 10952 ;;		_I2C1_DO_RX_NACK_RESTART
 10953 ;;		_I2C1_DO_RX_NACK_STOP
 10954 ;;		_I2C1_DO_SEND_ADR_READ
 10955 ;;		_I2C1_DO_SEND_ADR_WRITE
 10956 ;;		_I2C1_DO_SEND_RESTART
 10957 ;;		_I2C1_DO_SEND_RESTART_READ
 10958 ;;		_I2C1_DO_SEND_RESTART_WRITE
 10959 ;;		_I2C1_DO_SEND_STOP
 10960 ;;		_I2C1_DO_TX
 10961 ;;		_I2C1_DO_TX_EMPTY
 10962 ;;		_I2C1_MasterClearIrq
 10963 ;;		_I2C1_MasterIsNack
 10964 ;; This function is called by:
 10965 ;;		_I2C1_Poller
 10966 ;; This function uses a non-reentrant model
 10967 ;;
 10968                           
 10969                           
 10970                           ;psect for function _I2C1_MasterFsm
 10971  0AF7                     _I2C1_MasterFsm:
 10972  0AF7                     l4295:	
 10973                           ;incstack = 0
 10974 ;; hardware stack exceeded
 10975                           ; Regs used in _I2C1_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10976                           
 10977                           
 10978                           ;mcc_generated_files/i2c1_master.c: 323:     I2C1_MasterClearIrq();
 10979  0AF7  3196  26AD  318A   	fcall	_I2C1_MasterClearIrq
 10980  0AFA                     l4297:
 10981                           
 10982                           ;mcc_generated_files/i2c1_master.c: 325:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 10983  0AFA  0022               	movlb	2	; select bank2
 10984  0AFB  1C3C               	btfss	(_I2C1_Status^(0+256)+28),0
 10985  0AFC  2AFE               	goto	u1831
 10986  0AFD  2AFF               	goto	u1830
 10987  0AFE                     u1831:
 10988  0AFE  2B0D               	goto	l4303
 10989  0AFF                     u1830:
 10990  0AFF                     l4299:
 10991  0AFF  3197  2726  318A   	fcall	_I2C1_MasterIsNack
 10992  0B02  3A00               	xorlw	0
 10993  0B03  1903               	skipnz
 10994  0B04  2B06               	goto	u1841
 10995  0B05  2B07               	goto	u1840
 10996  0B06                     u1841:
 10997  0B06  2B0D               	goto	l4303
 10998  0B07                     u1840:
 10999  0B07                     l4301:
 11000                           
 11001                           ;mcc_generated_files/i2c1_master.c: 326:     {;mcc_generated_files/i2c1_master.c: 327:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 11002  0B07  300F               	movlw	15
 11003  0B08  0021               	movlb	1	; select bank1
 11004  0B09  00AD               	movwf	??_I2C1_MasterFsm^(0+128)
 11005  0B0A  082D               	movf	??_I2C1_MasterFsm^(0+128),w
 11006  0B0B  0022               	movlb	2	; select bank2
 11007  0B0C  00BA               	movwf	(_I2C1_Status^(0+256)+26)
 11008  0B0D                     l4303:
 11009                           
 11010                           ;mcc_generated_files/i2c1_master.c: 329:     I2C1_Status.state = i2c1_fsmStateTable[I2C1
      +                          _Status.state]();
 11011  0B0D  0022               	movlb	2	; select bank2
 11012  0B0E  083A               	movf	(_I2C1_Status^(0+256)+26),w
 11013  0B0F  0021               	movlb	1	; select bank1
 11014  0B10  00AD               	movwf	??_I2C1_MasterFsm^(0+128)
 11015  0B11  01AE               	clrf	(??_I2C1_MasterFsm^(0+128)+1)
 11016  0B12  35AD               	lslf	??_I2C1_MasterFsm^(0+128),f
 11017  0B13  0DAE               	rlf	(??_I2C1_MasterFsm^(0+128)+1),f
 11018  0B14  3000               	movlw	low (_i2c1_fsmStateTable| (0+32768))
 11019  0B15  072D               	addwf	??_I2C1_MasterFsm^(0+128),w
 11020  0B16  0084               	movwf	4
 11021  0B17  3090               	movlw	high (_i2c1_fsmStateTable| (0+32768))
 11022  0B18  3D2E               	addwfc	(??_I2C1_MasterFsm+1)^(0+128),w
 11023  0B19  0085               	movwf	5
 11024  0B1A  3F01               	moviw [1]fsr0
 11025  0B1B  008A               	movwf	10
 11026  0B1C  3F00               	moviw [0]fsr0
 11027  0B1D  000A               	callw
 11028  0B1E  318A               	pagesel	$
 11029  0B1F  0021               	movlb	1	; select bank1
 11030  0B20  00AF               	movwf	(??_I2C1_MasterFsm+2)^(0+128)
 11031  0B21  082F               	movf	(??_I2C1_MasterFsm+2)^(0+128),w
 11032  0B22  0022               	movlb	2	; select bank2
 11033  0B23  00BA               	movwf	(_I2C1_Status^(0+256)+26)
 11034  0B24                     l535:
 11035  0B24  0008               	return
 11036  0B25                     __end_of_I2C1_MasterFsm:
 11037                           
 11038                           	psect	text20
 11039  0B56                     __ptext20:	
 11040 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 11041 ;; Defined at:
 11042 ;;		line 500 in file "mcc_generated_files/i2c1_master.c"
 11043 ;; Parameters:    Size  Location     Type
 11044 ;;		None
 11045 ;; Auto vars:     Size  Location     Type
 11046 ;;		None
 11047 ;; Return value:  Size  Location     Type
 11048 ;;                  1    wreg      enum E12076
 11049 ;; Registers used:
 11050 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11051 ;; Tracked objects:
 11052 ;;		On entry : 0/0
 11053 ;;		On exit  : 0/0
 11054 ;;		Unchanged: 0/0
 11055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11058 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11059 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11060 ;;Total ram usage:        3 bytes
 11061 ;; Hardware stack levels used: 1
 11062 ;; Hardware stack levels required when called: 13
 11063 ;; This function calls:
 11064 ;;		Absolute function
 11065 ;;		_I2C1_CallbackReturnReset
 11066 ;;		_I2C1_CallbackReturnStop
 11067 ;;		_I2C1_DO_SEND_RESTART
 11068 ;;		_I2C1_DO_SEND_STOP
 11069 ;;		_rd1RegCompleteHandler
 11070 ;;		_rd2RegCompleteHandler
 11071 ;;		_rdBlkRegCompleteHandler
 11072 ;;		_wr1RegCompleteHandler
 11073 ;;		_wr2RegCompleteHandler
 11074 ;; This function is called by:
 11075 ;;		_I2C1_MasterFsm
 11076 ;; This function uses a non-reentrant model
 11077 ;;
 11078                           
 11079                           
 11080                           ;psect for function _I2C1_DO_ADDRESS_NACK
 11081  0B56                     _I2C1_DO_ADDRESS_NACK:
 11082  0B56                     l4271:	
 11083                           ;incstack = 0
 11084 ;; hardware stack exceeded
 11085                           ; Regs used in _I2C1_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11086                           
 11087                           
 11088                           ;mcc_generated_files/i2c1_master.c: 502:     I2C1_Status.addressNackCheck = 0;
 11089  0B56  0022               	movlb	2	; select bank2
 11090  0B57  103C               	bcf	(_I2C1_Status^(0+256)+28),0
 11091  0B58                     l4273:
 11092                           
 11093                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.error = I2C1_FAIL;
 11094  0B58  3002               	movlw	2
 11095  0B59  0021               	movlb	1	; select bank1
 11096  0B5A  00AA               	movwf	??_I2C1_DO_ADDRESS_NACK^(0+128)
 11097  0B5B  082A               	movf	??_I2C1_DO_ADDRESS_NACK^(0+128),w
 11098  0B5C  0022               	movlb	2	; select bank2
 11099  0B5D  00BB               	movwf	(_I2C1_Status^(0+256)+27)
 11100                           
 11101                           ;mcc_generated_files/i2c1_master.c: 504:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 11102  0B5E  2B67               	goto	l4285
 11103  0B5F                     l4275:
 11104                           
 11105                           ;mcc_generated_files/i2c1_master.c: 508:             return I2C1_DO_SEND_RESTART();
 11106  0B5F  3196  26EB  318B   	fcall	_I2C1_DO_SEND_RESTART
 11107  0B62  2B86               	goto	l626
 11108  0B63                     l4279:
 11109                           
 11110                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_STOP();
 11111  0B63  3196  26F0  318B   	fcall	_I2C1_DO_SEND_STOP
 11112  0B66  2B86               	goto	l626
 11113  0B67                     l4285:
 11114  0B67  082E               	movf	(low ((_I2C1_Status| (0+256)+14)))^0,w
 11115  0B68  0021               	movlb	1	; select bank1
 11116  0B69  00AA               	movwf	??_I2C1_DO_ADDRESS_NACK^(0+128)
 11117  0B6A  082A               	movf	??_I2C1_DO_ADDRESS_NACK^(0+128),w
 11118  0B6B  00A9               	movwf	I2C1_CallbackReturnReset@funPtr^(0+128)
 11119  0B6C  3004               	movlw	4
 11120  0B6D  3E20               	addlw	(low (_I2C1_Status| (0+256)))& (0+255)
 11121  0B6E  0086               	movwf	6
 11122  0B6F  3001               	movlw	1	; select bank2/3
 11123  0B70  0087               	movwf	7
 11124  0B71  3F41               	moviw [1]fsr1
 11125  0B72  008A               	movwf	10
 11126  0B73  3F40               	moviw [0]fsr1
 11127  0B74  000A               	callw
 11128  0B75  318B               	pagesel	$
 11129  0B76  0021               	movlb	1	; select bank1
 11130  0B77  00AB               	movwf	(??_I2C1_DO_ADDRESS_NACK+1)^(0+128)
 11131  0B78  01AC               	clrf	((??_I2C1_DO_ADDRESS_NACK+1)^(0+128)+1)
 11132                           
 11133                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11134                           ; Switch size 1, requested type "simple"
 11135                           ; Number of cases is 1, Range of values is 0 to 0
 11136                           ; switch strategies available:
 11137                           ; Name         Instructions Cycles
 11138                           ; simple_byte            4     3 (average)
 11139                           ; direct_byte            8     6 (fixed)
 11140                           ; jumptable            260     6 (fixed)
 11141                           ;	Chosen strategy is simple_byte
 11142  0B79  082C               	movf	(??_I2C1_DO_ADDRESS_NACK+2)^(0+128),w
 11143  0B7A  3A00               	xorlw	0	; case 0
 11144  0B7B  1903               	skipnz
 11145  0B7C  2B7E               	goto	l5825
 11146  0B7D  2B63               	goto	l4279
 11147  0B7E                     l5825:
 11148                           
 11149                           ; Switch size 1, requested type "simple"
 11150                           ; Number of cases is 2, Range of values is 2 to 3
 11151                           ; switch strategies available:
 11152                           ; Name         Instructions Cycles
 11153                           ; simple_byte            7     4 (average)
 11154                           ; direct_byte           13     9 (fixed)
 11155                           ; jumptable            263     9 (fixed)
 11156                           ;	Chosen strategy is simple_byte
 11157  0B7E  082B               	movf	(??_I2C1_DO_ADDRESS_NACK+1)^(0+128),w
 11158  0B7F  3A02               	xorlw	2	; case 2
 11159  0B80  1903               	skipnz
 11160  0B81  2B5F               	goto	l4275
 11161  0B82  3A01               	xorlw	1	; case 3
 11162  0B83  1903               	skipnz
 11163  0B84  2B5F               	goto	l4275
 11164  0B85  2B63               	goto	l4279
 11165  0B86                     l626:
 11166  0B86  0008               	return
 11167  0B87                     __end_of_I2C1_DO_ADDRESS_NACK:
 11168                           
 11169                           	psect	text21
 11170  1704                     __ptext21:	
 11171 ;; *************** function _I2C1_DO_RESET *****************
 11172 ;; Defined at:
 11173 ;;		line 494 in file "mcc_generated_files/i2c1_master.c"
 11174 ;; Parameters:    Size  Location     Type
 11175 ;;		None
 11176 ;; Auto vars:     Size  Location     Type
 11177 ;;		None
 11178 ;; Return value:  Size  Location     Type
 11179 ;;                  1    wreg      enum E12076
 11180 ;; Registers used:
 11181 ;;		wreg, status,2
 11182 ;; Tracked objects:
 11183 ;;		On entry : 0/0
 11184 ;;		On exit  : 0/0
 11185 ;;		Unchanged: 0/0
 11186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11191 ;;Total ram usage:        0 bytes
 11192 ;; Hardware stack levels used: 1
 11193 ;; Hardware stack levels required when called: 10
 11194 ;; This function calls:
 11195 ;;		Nothing
 11196 ;; This function is called by:
 11197 ;;		_I2C1_MasterFsm
 11198 ;; This function uses a non-reentrant model
 11199 ;;
 11200                           
 11201                           
 11202                           ;psect for function _I2C1_DO_RESET
 11203  1704                     _I2C1_DO_RESET:
 11204  1704                     l4263:	
 11205                           ;incstack = 0
 11206 ;; hardware stack exceeded
 11207                           ; Regs used in _I2C1_DO_RESET: [wreg+status,2]
 11208                           
 11209                           
 11210                           ;mcc_generated_files/i2c1_master.c: 496:     I2C1_Status.busy = 0;
 11211  1704  0022               	movlb	2	; select bank2
 11212  1705  10BC               	bcf	(_I2C1_Status^(0+256)+28),1
 11213  1706                     l4265:
 11214                           
 11215                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.error = I2C1_NOERR;
 11216  1706  01BB               	clrf	(_I2C1_Status^(0+256)+27)
 11217  1707                     l4267:
 11218                           
 11219                           ;mcc_generated_files/i2c1_master.c: 498:     return I2C1_RESET;
 11220  1707  300E               	movlw	14
 11221  1708                     l620:
 11222  1708  0008               	return
 11223  1709                     __end_of_I2C1_DO_RESET:
 11224                           
 11225                           	psect	text22
 11226  16FF                     __ptext22:	
 11227 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 11228 ;; Defined at:
 11229 ;;		line 488 in file "mcc_generated_files/i2c1_master.c"
 11230 ;; Parameters:    Size  Location     Type
 11231 ;;		None
 11232 ;; Auto vars:     Size  Location     Type
 11233 ;;		None
 11234 ;; Return value:  Size  Location     Type
 11235 ;;                  1    wreg      enum E12076
 11236 ;; Registers used:
 11237 ;;		wreg, status,2, status,0, pclath, cstack
 11238 ;; Tracked objects:
 11239 ;;		On entry : 0/0
 11240 ;;		On exit  : 0/0
 11241 ;;		Unchanged: 0/0
 11242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11247 ;;Total ram usage:        0 bytes
 11248 ;; Hardware stack levels used: 1
 11249 ;; Hardware stack levels required when called: 11
 11250 ;; This function calls:
 11251 ;;		_I2C1_MasterSendNack
 11252 ;; This function is called by:
 11253 ;;		_I2C1_DO_RX
 11254 ;;		_I2C1_MasterFsm
 11255 ;; This function uses a non-reentrant model
 11256 ;;
 11257                           
 11258                           
 11259                           ;psect for function _I2C1_DO_RX_NACK_RESTART
 11260  16FF                     _I2C1_DO_RX_NACK_RESTART:
 11261  16FF                     l4099:	
 11262                           ;incstack = 0
 11263 ;; hardware stack exceeded
 11264                           ; Regs used in _I2C1_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 11265                           
 11266                           
 11267                           ;mcc_generated_files/i2c1_master.c: 490:     I2C1_MasterSendNack();
 11268  16FF  3196  26D4  3196   	fcall	_I2C1_MasterSendNack
 11269  1702                     l4101:
 11270                           
 11271                           ;mcc_generated_files/i2c1_master.c: 491:     return I2C1_SEND_RESTART;
 11272  1702  3009               	movlw	9
 11273  1703                     l617:
 11274  1703  0008               	return
 11275  1704                     __end_of_I2C1_DO_RX_NACK_RESTART:
 11276                           
 11277                           	psect	text23
 11278  16FA                     __ptext23:	
 11279 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 11280 ;; Defined at:
 11281 ;;		line 482 in file "mcc_generated_files/i2c1_master.c"
 11282 ;; Parameters:    Size  Location     Type
 11283 ;;		None
 11284 ;; Auto vars:     Size  Location     Type
 11285 ;;		None
 11286 ;; Return value:  Size  Location     Type
 11287 ;;                  1    wreg      enum E12076
 11288 ;; Registers used:
 11289 ;;		wreg, status,2, status,0, pclath, cstack
 11290 ;; Tracked objects:
 11291 ;;		On entry : 0/0
 11292 ;;		On exit  : 0/0
 11293 ;;		Unchanged: 0/0
 11294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11299 ;;Total ram usage:        0 bytes
 11300 ;; Hardware stack levels used: 1
 11301 ;; Hardware stack levels required when called: 11
 11302 ;; This function calls:
 11303 ;;		_I2C1_MasterSendNack
 11304 ;; This function is called by:
 11305 ;;		_I2C1_DO_RX
 11306 ;;		_I2C1_MasterFsm
 11307 ;; This function uses a non-reentrant model
 11308 ;;
 11309                           
 11310                           
 11311                           ;psect for function _I2C1_DO_RX_NACK_STOP
 11312  16FA                     _I2C1_DO_RX_NACK_STOP:
 11313  16FA                     l4105:	
 11314                           ;incstack = 0
 11315 ;; hardware stack exceeded
 11316                           ; Regs used in _I2C1_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 11317                           
 11318                           
 11319                           ;mcc_generated_files/i2c1_master.c: 484:     I2C1_MasterSendNack();
 11320  16FA  3196  26D4  3196   	fcall	_I2C1_MasterSendNack
 11321  16FD                     l4107:
 11322                           
 11323                           ;mcc_generated_files/i2c1_master.c: 485:     return I2C1_SEND_STOP;
 11324  16FD  300A               	movlw	10
 11325  16FE                     l614:
 11326  16FE  0008               	return
 11327  16FF                     __end_of_I2C1_DO_RX_NACK_STOP:
 11328                           
 11329                           	psect	text24
 11330  16F5                     __ptext24:	
 11331 ;; *************** function _I2C1_DO_RX_ACK *****************
 11332 ;; Defined at:
 11333 ;;		line 475 in file "mcc_generated_files/i2c1_master.c"
 11334 ;; Parameters:    Size  Location     Type
 11335 ;;		None
 11336 ;; Auto vars:     Size  Location     Type
 11337 ;;		None
 11338 ;; Return value:  Size  Location     Type
 11339 ;;                  1    wreg      enum E12076
 11340 ;; Registers used:
 11341 ;;		wreg, status,2, status,0, pclath, cstack
 11342 ;; Tracked objects:
 11343 ;;		On entry : 0/0
 11344 ;;		On exit  : 0/0
 11345 ;;		Unchanged: 0/0
 11346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11351 ;;Total ram usage:        0 bytes
 11352 ;; Hardware stack levels used: 1
 11353 ;; Hardware stack levels required when called: 11
 11354 ;; This function calls:
 11355 ;;		_I2C1_MasterSendAck
 11356 ;; This function is called by:
 11357 ;;		_I2C1_MasterFsm
 11358 ;; This function uses a non-reentrant model
 11359 ;;
 11360                           
 11361                           
 11362                           ;psect for function _I2C1_DO_RX_ACK
 11363  16F5                     _I2C1_DO_RX_ACK:
 11364  16F5                     l4257:	
 11365                           ;incstack = 0
 11366 ;; hardware stack exceeded
 11367                           ; Regs used in _I2C1_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
 11368                           
 11369                           
 11370                           ;mcc_generated_files/i2c1_master.c: 477:     I2C1_MasterSendAck();
 11371  16F5  3196  26D8  3196   	fcall	_I2C1_MasterSendAck
 11372  16F8                     l4259:
 11373                           
 11374                           ;mcc_generated_files/i2c1_master.c: 478:     return I2C1_RCEN;
 11375  16F8  3005               	movlw	5
 11376  16F9                     l611:
 11377  16F9  0008               	return
 11378  16FA                     __end_of_I2C1_DO_RX_ACK:
 11379                           
 11380                           	psect	text25
 11381  16F0                     __ptext25:	
 11382 ;; *************** function _I2C1_DO_SEND_STOP *****************
 11383 ;; Defined at:
 11384 ;;		line 469 in file "mcc_generated_files/i2c1_master.c"
 11385 ;; Parameters:    Size  Location     Type
 11386 ;;		None
 11387 ;; Auto vars:     Size  Location     Type
 11388 ;;		None
 11389 ;; Return value:  Size  Location     Type
 11390 ;;                  1    wreg      enum E12076
 11391 ;; Registers used:
 11392 ;;		wreg, status,2, status,0, pclath, cstack
 11393 ;; Tracked objects:
 11394 ;;		On entry : 0/0
 11395 ;;		On exit  : 0/0
 11396 ;;		Unchanged: 0/0
 11397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11402 ;;Total ram usage:        0 bytes
 11403 ;; Hardware stack levels used: 1
 11404 ;; Hardware stack levels required when called: 11
 11405 ;; This function calls:
 11406 ;;		_I2C1_MasterStop
 11407 ;; This function is called by:
 11408 ;;		_I2C1_DO_TX
 11409 ;;		_I2C1_DO_TX_EMPTY
 11410 ;;		_I2C1_DO_ADDRESS_NACK
 11411 ;;		_I2C1_MasterFsm
 11412 ;; This function uses a non-reentrant model
 11413 ;;
 11414                           
 11415                           
 11416                           ;psect for function _I2C1_DO_SEND_STOP
 11417  16F0                     _I2C1_DO_SEND_STOP:
 11418  16F0                     l4087:	
 11419                           ;incstack = 0
 11420 ;; hardware stack exceeded
 11421                           ; Regs used in _I2C1_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 11422                           
 11423                           
 11424                           ;mcc_generated_files/i2c1_master.c: 471:     I2C1_MasterStop();
 11425  16F0  3196  26BC  3196   	fcall	_I2C1_MasterStop
 11426  16F3                     l4089:
 11427                           
 11428                           ;mcc_generated_files/i2c1_master.c: 472:     return I2C1_IDLE;
 11429  16F3  3000               	movlw	0
 11430  16F4                     l608:
 11431  16F4  0008               	return
 11432  16F5                     __end_of_I2C1_DO_SEND_STOP:
 11433                           
 11434                           	psect	text26
 11435  16EB                     __ptext26:	
 11436 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 11437 ;; Defined at:
 11438 ;;		line 463 in file "mcc_generated_files/i2c1_master.c"
 11439 ;; Parameters:    Size  Location     Type
 11440 ;;		None
 11441 ;; Auto vars:     Size  Location     Type
 11442 ;;		None
 11443 ;; Return value:  Size  Location     Type
 11444 ;;                  1    wreg      enum E12076
 11445 ;; Registers used:
 11446 ;;		wreg, status,2, status,0, pclath, cstack
 11447 ;; Tracked objects:
 11448 ;;		On entry : 0/0
 11449 ;;		On exit  : 0/0
 11450 ;;		Unchanged: 0/0
 11451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11456 ;;Total ram usage:        0 bytes
 11457 ;; Hardware stack levels used: 1
 11458 ;; Hardware stack levels required when called: 11
 11459 ;; This function calls:
 11460 ;;		_I2C1_MasterEnableRestart
 11461 ;; This function is called by:
 11462 ;;		_I2C1_DO_TX_EMPTY
 11463 ;;		_I2C1_DO_ADDRESS_NACK
 11464 ;;		_I2C1_MasterFsm
 11465 ;; This function uses a non-reentrant model
 11466 ;;
 11467                           
 11468                           
 11469                           ;psect for function _I2C1_DO_SEND_RESTART
 11470  16EB                     _I2C1_DO_SEND_RESTART:
 11471  16EB                     l4113:	
 11472                           ;incstack = 0
 11473 ;; hardware stack exceeded
 11474                           ; Regs used in _I2C1_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 11475                           
 11476                           
 11477                           ;mcc_generated_files/i2c1_master.c: 465:     I2C1_MasterEnableRestart();
 11478  16EB  3196  26B9  3196   	fcall	_I2C1_MasterEnableRestart
 11479  16EE                     l4115:
 11480                           
 11481                           ;mcc_generated_files/i2c1_master.c: 466:     return I2C1_SEND_ADR_READ;
 11482  16EE  3001               	movlw	1
 11483  16EF                     l605:
 11484  16EF  0008               	return
 11485  16F0                     __end_of_I2C1_DO_SEND_RESTART:
 11486                           
 11487                           	psect	text27
 11488  16E6                     __ptext27:	
 11489 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 11490 ;; Defined at:
 11491 ;;		line 456 in file "mcc_generated_files/i2c1_master.c"
 11492 ;; Parameters:    Size  Location     Type
 11493 ;;		None
 11494 ;; Auto vars:     Size  Location     Type
 11495 ;;		None
 11496 ;; Return value:  Size  Location     Type
 11497 ;;                  1    wreg      enum E12076
 11498 ;; Registers used:
 11499 ;;		wreg, status,2, status,0, pclath, cstack
 11500 ;; Tracked objects:
 11501 ;;		On entry : 0/0
 11502 ;;		On exit  : 0/0
 11503 ;;		Unchanged: 0/0
 11504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11509 ;;Total ram usage:        0 bytes
 11510 ;; Hardware stack levels used: 1
 11511 ;; Hardware stack levels required when called: 11
 11512 ;; This function calls:
 11513 ;;		_I2C1_MasterEnableRestart
 11514 ;; This function is called by:
 11515 ;;		_I2C1_DO_TX
 11516 ;;		_I2C1_MasterFsm
 11517 ;; This function uses a non-reentrant model
 11518 ;;
 11519                           
 11520                           
 11521                           ;psect for function _I2C1_DO_SEND_RESTART_WRITE
 11522  16E6                     _I2C1_DO_SEND_RESTART_WRITE:
 11523  16E6                     l4081:	
 11524                           ;incstack = 0
 11525 ;; hardware stack exceeded
 11526                           ; Regs used in _I2C1_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 11527                           
 11528                           
 11529                           ;mcc_generated_files/i2c1_master.c: 458:     I2C1_MasterEnableRestart();
 11530  16E6  3196  26B9  3196   	fcall	_I2C1_MasterEnableRestart
 11531  16E9                     l4083:
 11532                           
 11533                           ;mcc_generated_files/i2c1_master.c: 459:     return I2C1_SEND_ADR_WRITE;
 11534  16E9  3002               	movlw	2
 11535  16EA                     l602:
 11536  16EA  0008               	return
 11537  16EB                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 11538                           
 11539                           	psect	text28
 11540  16E1                     __ptext28:	
 11541 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 11542 ;; Defined at:
 11543 ;;		line 450 in file "mcc_generated_files/i2c1_master.c"
 11544 ;; Parameters:    Size  Location     Type
 11545 ;;		None
 11546 ;; Auto vars:     Size  Location     Type
 11547 ;;		None
 11548 ;; Return value:  Size  Location     Type
 11549 ;;                  1    wreg      enum E12076
 11550 ;; Registers used:
 11551 ;;		wreg, status,2, status,0, pclath, cstack
 11552 ;; Tracked objects:
 11553 ;;		On entry : 0/0
 11554 ;;		On exit  : 0/0
 11555 ;;		Unchanged: 0/0
 11556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11561 ;;Total ram usage:        0 bytes
 11562 ;; Hardware stack levels used: 1
 11563 ;; Hardware stack levels required when called: 11
 11564 ;; This function calls:
 11565 ;;		_I2C1_MasterEnableRestart
 11566 ;; This function is called by:
 11567 ;;		_I2C1_DO_TX
 11568 ;;		_I2C1_MasterFsm
 11569 ;; This function uses a non-reentrant model
 11570 ;;
 11571                           
 11572                           
 11573                           ;psect for function _I2C1_DO_SEND_RESTART_READ
 11574  16E1                     _I2C1_DO_SEND_RESTART_READ:
 11575  16E1                     l4075:	
 11576                           ;incstack = 0
 11577 ;; hardware stack exceeded
 11578                           ; Regs used in _I2C1_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 11579                           
 11580                           
 11581                           ;mcc_generated_files/i2c1_master.c: 452:     I2C1_MasterEnableRestart();
 11582  16E1  3196  26B9  3196   	fcall	_I2C1_MasterEnableRestart
 11583  16E4                     l4077:
 11584                           
 11585                           ;mcc_generated_files/i2c1_master.c: 453:     return I2C1_SEND_ADR_READ;
 11586  16E4  3001               	movlw	1
 11587  16E5                     l599:
 11588  16E5  0008               	return
 11589  16E6                     __end_of_I2C1_DO_SEND_RESTART_READ:
 11590                           
 11591                           	psect	text29
 11592  1738                     __ptext29:	
 11593 ;; *************** function _I2C1_DO_RCEN *****************
 11594 ;; Defined at:
 11595 ;;		line 402 in file "mcc_generated_files/i2c1_master.c"
 11596 ;; Parameters:    Size  Location     Type
 11597 ;;		None
 11598 ;; Auto vars:     Size  Location     Type
 11599 ;;		None
 11600 ;; Return value:  Size  Location     Type
 11601 ;;                  1    wreg      enum E12076
 11602 ;; Registers used:
 11603 ;;		wreg, status,2, status,0, pclath, cstack
 11604 ;; Tracked objects:
 11605 ;;		On entry : 0/0
 11606 ;;		On exit  : 0/0
 11607 ;;		Unchanged: 0/0
 11608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11613 ;;Total ram usage:        0 bytes
 11614 ;; Hardware stack levels used: 1
 11615 ;; Hardware stack levels required when called: 11
 11616 ;; This function calls:
 11617 ;;		_I2C1_MasterStartRx
 11618 ;; This function is called by:
 11619 ;;		_I2C1_MasterFsm
 11620 ;; This function uses a non-reentrant model
 11621 ;;
 11622                           
 11623                           
 11624                           ;psect for function _I2C1_DO_RCEN
 11625  1738                     _I2C1_DO_RCEN:
 11626  1738                     l4223:	
 11627                           ;incstack = 0
 11628 ;; hardware stack exceeded
 11629                           ; Regs used in _I2C1_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
 11630                           
 11631                           
 11632                           ;mcc_generated_files/i2c1_master.c: 404:     I2C1_Status.addressNackCheck = 0;
 11633  1738  0022               	movlb	2	; select bank2
 11634  1739  103C               	bcf	(_I2C1_Status^(0+256)+28),0
 11635  173A                     l4225:
 11636                           
 11637                           ;mcc_generated_files/i2c1_master.c: 405:     I2C1_MasterStartRx();
 11638  173A  3196  26BF  3197   	fcall	_I2C1_MasterStartRx
 11639  173D                     l4227:
 11640                           
 11641                           ;mcc_generated_files/i2c1_master.c: 406:     return I2C1_RX;
 11642  173D  3004               	movlw	4
 11643  173E                     l575:
 11644  173E  0008               	return
 11645  173F                     __end_of_I2C1_DO_RCEN:
 11646                           
 11647                           	psect	text30
 11648  0DA2                     __ptext30:	
 11649 ;; *************** function _I2C1_DO_RX *****************
 11650 ;; Defined at:
 11651 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 11652 ;; Parameters:    Size  Location     Type
 11653 ;;		None
 11654 ;; Auto vars:     Size  Location     Type
 11655 ;;		None
 11656 ;; Return value:  Size  Location     Type
 11657 ;;                  1    wreg      enum E12076
 11658 ;; Registers used:
 11659 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11660 ;; Tracked objects:
 11661 ;;		On entry : 0/0
 11662 ;;		On exit  : 0/0
 11663 ;;		Unchanged: 0/0
 11664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11667 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11668 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11669 ;;Total ram usage:        3 bytes
 11670 ;; Hardware stack levels used: 1
 11671 ;; Hardware stack levels required when called: 13
 11672 ;; This function calls:
 11673 ;;		Absolute function
 11674 ;;		_I2C1_CallbackReturnReset
 11675 ;;		_I2C1_CallbackReturnStop
 11676 ;;		_I2C1_DO_RX_NACK_RESTART
 11677 ;;		_I2C1_DO_RX_NACK_STOP
 11678 ;;		_I2C1_MasterGetRxData
 11679 ;;		_I2C1_MasterSendAck
 11680 ;;		_rd1RegCompleteHandler
 11681 ;;		_rd2RegCompleteHandler
 11682 ;;		_rdBlkRegCompleteHandler
 11683 ;;		_wr1RegCompleteHandler
 11684 ;;		_wr2RegCompleteHandler
 11685 ;; This function is called by:
 11686 ;;		_I2C1_MasterFsm
 11687 ;; This function uses a non-reentrant model
 11688 ;;
 11689                           
 11690                           
 11691                           ;psect for function _I2C1_DO_RX
 11692  0DA2                     _I2C1_DO_RX:
 11693  0DA2                     l4191:	
 11694                           ;incstack = 0
 11695 ;; hardware stack exceeded
 11696                           ; Regs used in _I2C1_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11697                           
 11698                           
 11699                           ;mcc_generated_files/i2c1_master.c: 380:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 11700  0DA2  3196  26C2  318D   	fcall	_I2C1_MasterGetRxData
 11701  0DA5  0021               	movlb	1	; select bank1
 11702  0DA6  00AA               	movwf	??_I2C1_DO_RX^(0+128)
 11703  0DA7  0022               	movlb	2	; select bank2
 11704  0DA8  0837               	movf	(low ((_I2C1_Status| (0+256)+23)))^0,w
 11705  0DA9  0086               	movwf	6
 11706  0DAA  0187               	clrf	7
 11707  0DAB  0021               	movlb	1	; select bank1
 11708  0DAC  082A               	movf	??_I2C1_DO_RX^(0+128),w
 11709  0DAD  0081               	movwf	1
 11710  0DAE                     l4193:
 11711  0DAE  3001               	movlw	1
 11712  0DAF  00AA               	movwf	??_I2C1_DO_RX^(0+128)
 11713  0DB0  082A               	movf	??_I2C1_DO_RX^(0+128),w
 11714  0DB1  0022               	movlb	2	; select bank2
 11715  0DB2  07B7               	addwf	(low ((_I2C1_Status| (0+256)+23)))^0,f
 11716  0DB3                     l4195:
 11717                           
 11718                           ;mcc_generated_files/i2c1_master.c: 381:     if(--I2C1_Status.data_length)
 11719  0DB3  3001               	movlw	1
 11720  0DB4  02B8               	subwf	(_I2C1_Status^(0+256)+24),f
 11721  0DB5  3000               	movlw	0
 11722  0DB6  3BB9               	subwfb	((_I2C1_Status+1)^(0+256)+24),f
 11723  0DB7  0838               	movf	(_I2C1_Status^(0+256)+24),w
 11724  0DB8  0439               	iorwf	((_I2C1_Status+1)^(0+256)+24),w
 11725  0DB9  1903               	btfsc	3,2
 11726  0DBA  2DBC               	goto	u1811
 11727  0DBB  2DBD               	goto	u1810
 11728  0DBC                     u1811:
 11729  0DBC  2DC2               	goto	l563
 11730  0DBD                     u1810:
 11731  0DBD                     l4197:
 11732                           
 11733                           ;mcc_generated_files/i2c1_master.c: 382:     {;mcc_generated_files/i2c1_master.c: 383:  
      +                                 I2C1_MasterSendAck();
 11734  0DBD  3196  26D8  318D   	fcall	_I2C1_MasterSendAck
 11735  0DC0                     l4199:
 11736                           
 11737                           ;mcc_generated_files/i2c1_master.c: 384:         return I2C1_RCEN;
 11738  0DC0  3005               	movlw	5
 11739  0DC1  2DED               	goto	l564
 11740  0DC2                     l563:	
 11741                           ;mcc_generated_files/i2c1_master.c: 386:     else
 11742                           
 11743                           
 11744                           ;mcc_generated_files/i2c1_master.c: 387:     {;mcc_generated_files/i2c1_master.c: 388:  
      +                                 I2C1_Status.bufferFree = 1;
 11745  0DC2  15BC               	bsf	(_I2C1_Status^(0+256)+28),3
 11746                           
 11747                           ;mcc_generated_files/i2c1_master.c: 389:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 11748  0DC3  2DCC               	goto	l4215
 11749  0DC4                     l4205:
 11750                           
 11751                           ;mcc_generated_files/i2c1_master.c: 393:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 11752  0DC4  3196  26FF  318D   	fcall	_I2C1_DO_RX_NACK_RESTART
 11753  0DC7  2DED               	goto	l564
 11754  0DC8                     l4209:
 11755                           
 11756                           ;mcc_generated_files/i2c1_master.c: 397:                 return I2C1_DO_RX_NACK_STOP();
 11757  0DC8  3196  26FA  318D   	fcall	_I2C1_DO_RX_NACK_STOP
 11758  0DCB  2DED               	goto	l564
 11759  0DCC                     l4215:
 11760  0DCC  082C               	movf	(low ((_I2C1_Status| (0+256)+12)))^0,w
 11761  0DCD  0021               	movlb	1	; select bank1
 11762  0DCE  00AA               	movwf	??_I2C1_DO_RX^(0+128)
 11763  0DCF  082A               	movf	??_I2C1_DO_RX^(0+128),w
 11764  0DD0  00A9               	movwf	I2C1_CallbackReturnReset@funPtr^(0+128)
 11765  0DD1  0022               	movlb	2	; select bank2
 11766  0DD2  0821               	movf	(_I2C1_Status+1)^(0+256),w
 11767  0DD3  008A               	movwf	10
 11768  0DD4  0820               	movf	_I2C1_Status^(0+256),w
 11769  0DD5  000A               	callw
 11770  0DD6  318D               	pagesel	$
 11771  0DD7  0021               	movlb	1	; select bank1
 11772  0DD8  00AB               	movwf	(??_I2C1_DO_RX+1)^(0+128)
 11773  0DD9  01AC               	clrf	((??_I2C1_DO_RX+1)^(0+128)+1)
 11774                           
 11775                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11776                           ; Switch size 1, requested type "simple"
 11777                           ; Number of cases is 1, Range of values is 0 to 0
 11778                           ; switch strategies available:
 11779                           ; Name         Instructions Cycles
 11780                           ; simple_byte            4     3 (average)
 11781                           ; direct_byte            8     6 (fixed)
 11782                           ; jumptable            260     6 (fixed)
 11783                           ;	Chosen strategy is simple_byte
 11784  0DDA  082C               	movf	(??_I2C1_DO_RX+2)^(0+128),w
 11785  0DDB  3A00               	xorlw	0	; case 0
 11786  0DDC  1903               	skipnz
 11787  0DDD  2DDF               	goto	l5827
 11788  0DDE  2DC8               	goto	l4209
 11789  0DDF                     l5827:
 11790                           
 11791                           ; Switch size 1, requested type "simple"
 11792                           ; Number of cases is 4, Range of values is 1 to 4
 11793                           ; switch strategies available:
 11794                           ; Name         Instructions Cycles
 11795                           ; simple_byte           13     7 (average)
 11796                           ; direct_byte           17     9 (fixed)
 11797                           ; jumptable            263     9 (fixed)
 11798                           ;	Chosen strategy is simple_byte
 11799  0DDF  082B               	movf	(??_I2C1_DO_RX+1)^(0+128),w
 11800  0DE0  3A01               	xorlw	1	; case 1
 11801  0DE1  1903               	skipnz
 11802  0DE2  2DC8               	goto	l4209
 11803  0DE3  3A03               	xorlw	3	; case 2
 11804  0DE4  1903               	skipnz
 11805  0DE5  2DC4               	goto	l4205
 11806  0DE6  3A01               	xorlw	1	; case 3
 11807  0DE7  1903               	skipnz
 11808  0DE8  2DC4               	goto	l4205
 11809  0DE9  3A07               	xorlw	7	; case 4
 11810  0DEA  1903               	skipnz
 11811  0DEB  2DC8               	goto	l4209
 11812  0DEC  2DC8               	goto	l4209
 11813  0DED                     l564:
 11814  0DED  0008               	return
 11815  0DEE                     __end_of_I2C1_DO_RX:
 11816                           
 11817                           	psect	text31
 11818  0EED                     __ptext31:	
 11819 ;; *************** function _I2C1_DO_TX *****************
 11820 ;; Defined at:
 11821 ;;		line 354 in file "mcc_generated_files/i2c1_master.c"
 11822 ;; Parameters:    Size  Location     Type
 11823 ;;		None
 11824 ;; Auto vars:     Size  Location     Type
 11825 ;;		None
 11826 ;; Return value:  Size  Location     Type
 11827 ;;                  1    wreg      enum E12076
 11828 ;; Registers used:
 11829 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11830 ;; Tracked objects:
 11831 ;;		On entry : 0/0
 11832 ;;		On exit  : 0/0
 11833 ;;		Unchanged: 0/0
 11834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11837 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11838 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11839 ;;Total ram usage:        3 bytes
 11840 ;; Hardware stack levels used: 1
 11841 ;; Hardware stack levels required when called: 13
 11842 ;; This function calls:
 11843 ;;		Absolute function
 11844 ;;		_I2C1_CallbackReturnReset
 11845 ;;		_I2C1_CallbackReturnStop
 11846 ;;		_I2C1_DO_SEND_RESTART_READ
 11847 ;;		_I2C1_DO_SEND_RESTART_WRITE
 11848 ;;		_I2C1_DO_SEND_STOP
 11849 ;;		_I2C1_MasterIsNack
 11850 ;;		_I2C1_MasterSendTxData
 11851 ;;		_rd1RegCompleteHandler
 11852 ;;		_rd2RegCompleteHandler
 11853 ;;		_rdBlkRegCompleteHandler
 11854 ;;		_wr1RegCompleteHandler
 11855 ;;		_wr2RegCompleteHandler
 11856 ;; This function is called by:
 11857 ;;		_I2C1_MasterFsm
 11858 ;; This function uses a non-reentrant model
 11859 ;;
 11860                           
 11861                           
 11862                           ;psect for function _I2C1_DO_TX
 11863  0EED                     _I2C1_DO_TX:
 11864  0EED                     l4155:	
 11865                           ;incstack = 0
 11866 ;; hardware stack exceeded
 11867                           ; Regs used in _I2C1_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11868                           
 11869                           
 11870                           ;mcc_generated_files/i2c1_master.c: 356:     if(I2C1_MasterIsNack())
 11871  0EED  3197  2726  318E   	fcall	_I2C1_MasterIsNack
 11872  0EF0  3A00               	xorlw	0
 11873  0EF1  1903               	skipnz
 11874  0EF2  2EF4               	goto	u1791
 11875  0EF3  2EF5               	goto	u1790
 11876  0EF4                     u1791:
 11877  0EF4  2F28               	goto	l547
 11878  0EF5                     u1790:
 11879  0EF5  2F02               	goto	l4173
 11880  0EF6                     l4159:
 11881                           
 11882                           ;mcc_generated_files/i2c1_master.c: 361:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 11883  0EF6  3196  26E1  318E   	fcall	_I2C1_DO_SEND_RESTART_READ
 11884  0EF9  2F45               	goto	l550
 11885  0EFA                     l4163:
 11886                           
 11887                           ;mcc_generated_files/i2c1_master.c: 363:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 11888  0EFA  3196  26E6  318E   	fcall	_I2C1_DO_SEND_RESTART_WRITE
 11889  0EFD  2F45               	goto	l550
 11890  0EFE                     l4167:
 11891                           
 11892                           ;mcc_generated_files/i2c1_master.c: 367:                 return I2C1_DO_SEND_STOP();
 11893  0EFE  3196  26F0  318E   	fcall	_I2C1_DO_SEND_STOP
 11894  0F01  2F45               	goto	l550
 11895  0F02                     l4173:
 11896  0F02  0022               	movlb	2	; select bank2
 11897  0F03  082F               	movf	(low ((_I2C1_Status| (0+256)+15)))^0,w
 11898  0F04  0021               	movlb	1	; select bank1
 11899  0F05  00AA               	movwf	??_I2C1_DO_TX^(0+128)
 11900  0F06  082A               	movf	??_I2C1_DO_TX^(0+128),w
 11901  0F07  00A9               	movwf	I2C1_CallbackReturnReset@funPtr^(0+128)
 11902  0F08  3006               	movlw	6
 11903  0F09  3E20               	addlw	(low (_I2C1_Status| (0+256)))& (0+255)
 11904  0F0A  0086               	movwf	6
 11905  0F0B  3001               	movlw	1	; select bank2/3
 11906  0F0C  0087               	movwf	7
 11907  0F0D  3F41               	moviw [1]fsr1
 11908  0F0E  008A               	movwf	10
 11909  0F0F  3F40               	moviw [0]fsr1
 11910  0F10  000A               	callw
 11911  0F11  318E               	pagesel	$
 11912  0F12  0021               	movlb	1	; select bank1
 11913  0F13  00AB               	movwf	(??_I2C1_DO_TX+1)^(0+128)
 11914  0F14  01AC               	clrf	((??_I2C1_DO_TX+1)^(0+128)+1)
 11915                           
 11916                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11917                           ; Switch size 1, requested type "simple"
 11918                           ; Number of cases is 1, Range of values is 0 to 0
 11919                           ; switch strategies available:
 11920                           ; Name         Instructions Cycles
 11921                           ; simple_byte            4     3 (average)
 11922                           ; direct_byte            8     6 (fixed)
 11923                           ; jumptable            260     6 (fixed)
 11924                           ;	Chosen strategy is simple_byte
 11925  0F15  082C               	movf	(??_I2C1_DO_TX+2)^(0+128),w
 11926  0F16  3A00               	xorlw	0	; case 0
 11927  0F17  1903               	skipnz
 11928  0F18  2F1A               	goto	l5829
 11929  0F19  2EFE               	goto	l4167
 11930  0F1A                     l5829:
 11931                           
 11932                           ; Switch size 1, requested type "simple"
 11933                           ; Number of cases is 4, Range of values is 1 to 4
 11934                           ; switch strategies available:
 11935                           ; Name         Instructions Cycles
 11936                           ; simple_byte           13     7 (average)
 11937                           ; direct_byte           17     9 (fixed)
 11938                           ; jumptable            263     9 (fixed)
 11939                           ;	Chosen strategy is simple_byte
 11940  0F1A  082B               	movf	(??_I2C1_DO_TX+1)^(0+128),w
 11941  0F1B  3A01               	xorlw	1	; case 1
 11942  0F1C  1903               	skipnz
 11943  0F1D  2EFE               	goto	l4167
 11944  0F1E  3A03               	xorlw	3	; case 2
 11945  0F1F  1903               	skipnz
 11946  0F20  2EF6               	goto	l4159
 11947  0F21  3A01               	xorlw	1	; case 3
 11948  0F22  1903               	skipnz
 11949  0F23  2EFA               	goto	l4163
 11950  0F24  3A07               	xorlw	7	; case 4
 11951  0F25  1903               	skipnz
 11952  0F26  2EFE               	goto	l4167
 11953  0F27  2EFE               	goto	l4167
 11954  0F28                     l547:	
 11955                           ;mcc_generated_files/i2c1_master.c: 370:     else
 11956                           
 11957                           
 11958                           ;mcc_generated_files/i2c1_master.c: 371:     {;mcc_generated_files/i2c1_master.c: 372:  
      +                                 I2C1_Status.addressNackCheck = 0;
 11959  0F28  0022               	movlb	2	; select bank2
 11960  0F29  103C               	bcf	(_I2C1_Status^(0+256)+28),0
 11961  0F2A                     l4175:
 11962                           
 11963                           ;mcc_generated_files/i2c1_master.c: 373:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 11964  0F2A  3017               	movlw	23
 11965  0F2B  3E20               	addlw	(low (_I2C1_Status| (0+256)))& (0+255)
 11966  0F2C  0086               	movwf	6
 11967  0F2D  3001               	movlw	1	; select bank2/3
 11968  0F2E  0087               	movwf	7
 11969  0F2F  3F40               	moviw [0]fsr1
 11970  0F30  0084               	movwf	4
 11971  0F31  0185               	clrf	5
 11972  0F32  0A81               	incf	1,f
 11973  0F33  0800               	movf	0,w
 11974  0F34  3197  2720  318E   	fcall	_I2C1_MasterSendTxData
 11975  0F37                     l4177:
 11976                           
 11977                           ;mcc_generated_files/i2c1_master.c: 374:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 11978  0F37  3001               	movlw	1
 11979  0F38  0022               	movlb	2	; select bank2
 11980  0F39  02B8               	subwf	(_I2C1_Status^(0+256)+24),f
 11981  0F3A  3000               	movlw	0
 11982  0F3B  3BB9               	subwfb	((_I2C1_Status+1)^(0+256)+24),f
 11983  0F3C  0838               	movf	(_I2C1_Status^(0+256)+24),w
 11984  0F3D  0439               	iorwf	((_I2C1_Status+1)^(0+256)+24),w
 11985  0F3E  1D03               	btfss	3,2
 11986  0F3F  2F41               	goto	u1801
 11987  0F40  2F42               	goto	u1800
 11988  0F41                     u1801:
 11989  0F41  2F44               	goto	l4181
 11990  0F42                     u1800:
 11991  0F42                     l4179:
 11992  0F42  3006               	movlw	6
 11993  0F43  2F45               	goto	l550
 11994  0F44                     l4181:
 11995  0F44  3003               	movlw	3
 11996  0F45                     l550:
 11997  0F45  0008               	return
 11998  0F46                     __end_of_I2C1_DO_TX:
 11999                           
 12000                           	psect	text32
 12001  1747                     __ptext32:	
 12002 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 12003 ;; Defined at:
 12004 ;;		line 347 in file "mcc_generated_files/i2c1_master.c"
 12005 ;; Parameters:    Size  Location     Type
 12006 ;;		None
 12007 ;; Auto vars:     Size  Location     Type
 12008 ;;		None
 12009 ;; Return value:  Size  Location     Type
 12010 ;;                  1    wreg      enum E12076
 12011 ;; Registers used:
 12012 ;;		wreg, status,2, status,0, pclath, cstack
 12013 ;; Tracked objects:
 12014 ;;		On entry : 0/0
 12015 ;;		On exit  : 0/0
 12016 ;;		Unchanged: 0/0
 12017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12022 ;;Total ram usage:        0 bytes
 12023 ;; Hardware stack levels used: 1
 12024 ;; Hardware stack levels required when called: 11
 12025 ;; This function calls:
 12026 ;;		_I2C1_MasterSendTxData
 12027 ;; This function is called by:
 12028 ;;		_I2C1_MasterFsm
 12029 ;; This function uses a non-reentrant model
 12030 ;;
 12031                           
 12032                           
 12033                           ;psect for function _I2C1_DO_SEND_ADR_WRITE
 12034  1747                     _I2C1_DO_SEND_ADR_WRITE:
 12035  1747                     l4147:	
 12036                           ;incstack = 0
 12037 ;; hardware stack exceeded
 12038                           ; Regs used in _I2C1_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 12039                           
 12040                           
 12041                           ;mcc_generated_files/i2c1_master.c: 349:     I2C1_Status.addressNackCheck = 1;
 12042  1747  0022               	movlb	2	; select bank2
 12043  1748  143C               	bsf	(_I2C1_Status^(0+256)+28),0
 12044  1749                     l4149:
 12045                           
 12046                           ;mcc_generated_files/i2c1_master.c: 350:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1));
 12047  1749  3536               	lslf	(_I2C1_Status^(0+256)+22),w
 12048  174A  3197  2720  3197   	fcall	_I2C1_MasterSendTxData
 12049  174D                     l4151:
 12050                           
 12051                           ;mcc_generated_files/i2c1_master.c: 351:     return I2C1_TX;
 12052  174D  3003               	movlw	3
 12053  174E                     l544:
 12054  174E  0008               	return
 12055  174F                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 12056                           
 12057                           	psect	text33
 12058  1785                     __ptext33:	
 12059 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 12060 ;; Defined at:
 12061 ;;		line 340 in file "mcc_generated_files/i2c1_master.c"
 12062 ;; Parameters:    Size  Location     Type
 12063 ;;		None
 12064 ;; Auto vars:     Size  Location     Type
 12065 ;;		None
 12066 ;; Return value:  Size  Location     Type
 12067 ;;                  1    wreg      enum E12076
 12068 ;; Registers used:
 12069 ;;		wreg, status,2, status,0, pclath, cstack
 12070 ;; Tracked objects:
 12071 ;;		On entry : 0/0
 12072 ;;		On exit  : 0/0
 12073 ;;		Unchanged: 0/0
 12074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12079 ;;Total ram usage:        0 bytes
 12080 ;; Hardware stack levels used: 1
 12081 ;; Hardware stack levels required when called: 11
 12082 ;; This function calls:
 12083 ;;		_I2C1_MasterSendTxData
 12084 ;; This function is called by:
 12085 ;;		_I2C1_MasterFsm
 12086 ;; This function uses a non-reentrant model
 12087 ;;
 12088                           
 12089                           
 12090                           ;psect for function _I2C1_DO_SEND_ADR_READ
 12091  1785                     _I2C1_DO_SEND_ADR_READ:
 12092  1785                     l4139:	
 12093                           ;incstack = 0
 12094 ;; hardware stack exceeded
 12095                           ; Regs used in _I2C1_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 12096                           
 12097                           
 12098                           ;mcc_generated_files/i2c1_master.c: 342:     I2C1_Status.addressNackCheck = 1;
 12099  1785  0022               	movlb	2	; select bank2
 12100  1786  143C               	bsf	(_I2C1_Status^(0+256)+28),0
 12101  1787                     l4141:
 12102                           
 12103                           ;mcc_generated_files/i2c1_master.c: 343:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1 | 1));
 12104  1787  1403               	setc
 12105  1788  0D36               	rlf	(_I2C1_Status^(0+256)+22),w
 12106  1789  3197  2720  3197   	fcall	_I2C1_MasterSendTxData
 12107  178C                     l4143:
 12108                           
 12109                           ;mcc_generated_files/i2c1_master.c: 344:     return I2C1_RCEN;
 12110  178C  3005               	movlw	5
 12111  178D                     l541:
 12112  178D  0008               	return
 12113  178E                     __end_of_I2C1_DO_SEND_ADR_READ:
 12114                           
 12115                           	psect	text34
 12116  16DC                     __ptext34:	
 12117 ;; *************** function _I2C1_DO_IDLE *****************
 12118 ;; Defined at:
 12119 ;;		line 333 in file "mcc_generated_files/i2c1_master.c"
 12120 ;; Parameters:    Size  Location     Type
 12121 ;;		None
 12122 ;; Auto vars:     Size  Location     Type
 12123 ;;		None
 12124 ;; Return value:  Size  Location     Type
 12125 ;;                  1    wreg      enum E12076
 12126 ;; Registers used:
 12127 ;;		wreg, status,2
 12128 ;; Tracked objects:
 12129 ;;		On entry : 0/0
 12130 ;;		On exit  : 0/0
 12131 ;;		Unchanged: 0/0
 12132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12137 ;;Total ram usage:        0 bytes
 12138 ;; Hardware stack levels used: 1
 12139 ;; Hardware stack levels required when called: 10
 12140 ;; This function calls:
 12141 ;;		Nothing
 12142 ;; This function is called by:
 12143 ;;		_I2C1_MasterFsm
 12144 ;; This function uses a non-reentrant model
 12145 ;;
 12146                           
 12147                           
 12148                           ;psect for function _I2C1_DO_IDLE
 12149  16DC                     _I2C1_DO_IDLE:
 12150  16DC                     l4131:	
 12151                           ;incstack = 0
 12152 ;; hardware stack exceeded
 12153                           ; Regs used in _I2C1_DO_IDLE: [wreg+status,2]
 12154                           
 12155                           
 12156                           ;mcc_generated_files/i2c1_master.c: 335:     I2C1_Status.busy = 0;
 12157  16DC  0022               	movlb	2	; select bank2
 12158  16DD  10BC               	bcf	(_I2C1_Status^(0+256)+28),1
 12159  16DE                     l4133:
 12160                           
 12161                           ;mcc_generated_files/i2c1_master.c: 336:     I2C1_Status.error = I2C1_NOERR;
 12162  16DE  01BB               	clrf	(_I2C1_Status^(0+256)+27)
 12163  16DF                     l4135:
 12164                           
 12165                           ;mcc_generated_files/i2c1_master.c: 337:     return I2C1_RESET;
 12166  16DF  300E               	movlw	14
 12167  16E0                     l538:
 12168  16E0  0008               	return
 12169  16E1                     __end_of_I2C1_DO_IDLE:
 12170                           
 12171                           	psect	text35
 12172  0B87                     __ptext35:	
 12173 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 12174 ;; Defined at:
 12175 ;;		line 409 in file "mcc_generated_files/i2c1_master.c"
 12176 ;; Parameters:    Size  Location     Type
 12177 ;;		None
 12178 ;; Auto vars:     Size  Location     Type
 12179 ;;		None
 12180 ;; Return value:  Size  Location     Type
 12181 ;;                  1    wreg      enum E12076
 12182 ;; Registers used:
 12183 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12184 ;; Tracked objects:
 12185 ;;		On entry : 0/0
 12186 ;;		On exit  : 0/0
 12187 ;;		Unchanged: 0/0
 12188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12191 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 12192 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 12193 ;;Total ram usage:        3 bytes
 12194 ;; Hardware stack levels used: 1
 12195 ;; Hardware stack levels required when called: 13
 12196 ;; This function calls:
 12197 ;;		Absolute function
 12198 ;;		_I2C1_CallbackReturnReset
 12199 ;;		_I2C1_CallbackReturnStop
 12200 ;;		_I2C1_DO_SEND_RESTART
 12201 ;;		_I2C1_DO_SEND_STOP
 12202 ;;		_I2C1_MasterSetIrq
 12203 ;;		_rd1RegCompleteHandler
 12204 ;;		_rd2RegCompleteHandler
 12205 ;;		_rdBlkRegCompleteHandler
 12206 ;;		_wr1RegCompleteHandler
 12207 ;;		_wr2RegCompleteHandler
 12208 ;; This function is called by:
 12209 ;;		_I2C1_MasterFsm
 12210 ;; This function uses a non-reentrant model
 12211 ;;
 12212                           
 12213                           
 12214                           ;psect for function _I2C1_DO_TX_EMPTY
 12215  0B87                     _I2C1_DO_TX_EMPTY:
 12216  0B87                     l4231:	
 12217                           ;incstack = 0
 12218 ;; hardware stack exceeded
 12219                           ; Regs used in _I2C1_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12220                           
 12221                           
 12222                           ;mcc_generated_files/i2c1_master.c: 411:     I2C1_Status.bufferFree = 1;
 12223  0B87  0022               	movlb	2	; select bank2
 12224  0B88  15BC               	bsf	(_I2C1_Status^(0+256)+28),3
 12225                           
 12226                           ;mcc_generated_files/i2c1_master.c: 412:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 12227  0B89  2B97               	goto	l4249
 12228  0B8A                     l4233:
 12229                           
 12230                           ;mcc_generated_files/i2c1_master.c: 416:             return I2C1_DO_SEND_RESTART();
 12231  0B8A  3196  26EB  318B   	fcall	_I2C1_DO_SEND_RESTART
 12232  0B8D  2BB8               	goto	l581
 12233  0B8E                     l4237:
 12234                           
 12235                           ;mcc_generated_files/i2c1_master.c: 418:             I2C1_MasterSetIrq();
 12236  0B8E  3196  26C5  318B   	fcall	_I2C1_MasterSetIrq
 12237  0B91                     l4239:
 12238                           
 12239                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_TX;
 12240  0B91  3003               	movlw	3
 12241  0B92  2BB8               	goto	l581
 12242  0B93                     l4243:
 12243                           
 12244                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_DO_SEND_STOP();
 12245  0B93  3196  26F0  318B   	fcall	_I2C1_DO_SEND_STOP
 12246  0B96  2BB8               	goto	l581
 12247  0B97                     l4249:
 12248  0B97  082C               	movf	(low ((_I2C1_Status| (0+256)+12)))^0,w
 12249  0B98  0021               	movlb	1	; select bank1
 12250  0B99  00AA               	movwf	??_I2C1_DO_TX_EMPTY^(0+128)
 12251  0B9A  082A               	movf	??_I2C1_DO_TX_EMPTY^(0+128),w
 12252  0B9B  00A9               	movwf	I2C1_CallbackReturnReset@funPtr^(0+128)
 12253  0B9C  0022               	movlb	2	; select bank2
 12254  0B9D  0821               	movf	(_I2C1_Status+1)^(0+256),w
 12255  0B9E  008A               	movwf	10
 12256  0B9F  0820               	movf	_I2C1_Status^(0+256),w
 12257  0BA0  000A               	callw
 12258  0BA1  318B               	pagesel	$
 12259  0BA2  0021               	movlb	1	; select bank1
 12260  0BA3  00AB               	movwf	(??_I2C1_DO_TX_EMPTY+1)^(0+128)
 12261  0BA4  01AC               	clrf	((??_I2C1_DO_TX_EMPTY+1)^(0+128)+1)
 12262                           
 12263                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12264                           ; Switch size 1, requested type "simple"
 12265                           ; Number of cases is 1, Range of values is 0 to 0
 12266                           ; switch strategies available:
 12267                           ; Name         Instructions Cycles
 12268                           ; simple_byte            4     3 (average)
 12269                           ; direct_byte            8     6 (fixed)
 12270                           ; jumptable            260     6 (fixed)
 12271                           ;	Chosen strategy is simple_byte
 12272  0BA5  082C               	movf	(??_I2C1_DO_TX_EMPTY+2)^(0+128),w
 12273  0BA6  3A00               	xorlw	0	; case 0
 12274  0BA7  1903               	skipnz
 12275  0BA8  2BAA               	goto	l5831
 12276  0BA9  2B93               	goto	l4243
 12277  0BAA                     l5831:
 12278                           
 12279                           ; Switch size 1, requested type "simple"
 12280                           ; Number of cases is 4, Range of values is 1 to 4
 12281                           ; switch strategies available:
 12282                           ; Name         Instructions Cycles
 12283                           ; simple_byte           13     7 (average)
 12284                           ; direct_byte           17     9 (fixed)
 12285                           ; jumptable            263     9 (fixed)
 12286                           ;	Chosen strategy is simple_byte
 12287  0BAA  082B               	movf	(??_I2C1_DO_TX_EMPTY+1)^(0+128),w
 12288  0BAB  3A01               	xorlw	1	; case 1
 12289  0BAC  1903               	skipnz
 12290  0BAD  2B93               	goto	l4243
 12291  0BAE  3A03               	xorlw	3	; case 2
 12292  0BAF  1903               	skipnz
 12293  0BB0  2B8A               	goto	l4233
 12294  0BB1  3A01               	xorlw	1	; case 3
 12295  0BB2  1903               	skipnz
 12296  0BB3  2B8A               	goto	l4233
 12297  0BB4  3A07               	xorlw	7	; case 4
 12298  0BB5  1903               	skipnz
 12299  0BB6  2B8E               	goto	l4237
 12300  0BB7  2B93               	goto	l4243
 12301  0BB8                     l581:
 12302  0BB8  0008               	return
 12303  0BB9                     __end_of_I2C1_DO_TX_EMPTY:
 12304                           
 12305                           	psect	text36
 12306  16C5                     __ptext36:	
 12307 ;; *************** function _I2C1_MasterSetIrq *****************
 12308 ;; Defined at:
 12309 ;;		line 645 in file "mcc_generated_files/i2c1_master.c"
 12310 ;; Parameters:    Size  Location     Type
 12311 ;;		None
 12312 ;; Auto vars:     Size  Location     Type
 12313 ;;		None
 12314 ;; Return value:  Size  Location     Type
 12315 ;;                  1    wreg      void 
 12316 ;; Registers used:
 12317 ;;		None
 12318 ;; Tracked objects:
 12319 ;;		On entry : 0/0
 12320 ;;		On exit  : 0/0
 12321 ;;		Unchanged: 0/0
 12322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12327 ;;Total ram usage:        0 bytes
 12328 ;; Hardware stack levels used: 1
 12329 ;; Hardware stack levels required when called: 10
 12330 ;; This function calls:
 12331 ;;		Nothing
 12332 ;; This function is called by:
 12333 ;;		_I2C1_DO_TX_EMPTY
 12334 ;; This function uses a non-reentrant model
 12335 ;;
 12336                           
 12337                           
 12338                           ;psect for function _I2C1_MasterSetIrq
 12339  16C5                     _I2C1_MasterSetIrq:
 12340  16C5                     l4119:	
 12341                           ;incstack = 0
 12342 ;; hardware stack exceeded
 12343                           ; Regs used in _I2C1_MasterSetIrq: []
 12344                           
 12345                           
 12346                           ;mcc_generated_files/i2c1_master.c: 647:     PIR3bits.SSP1IF = 1;
 12347  16C5  002E               	movlb	14	; select bank14
 12348  16C6  140F               	bsf	15,0	;volatile
 12349  16C7                     l701:
 12350  16C7  0008               	return
 12351  16C8                     __end_of_I2C1_MasterSetIrq:
 12352                           
 12353                           	psect	text37
 12354  1726                     __ptext37:	
 12355 ;; *************** function _I2C1_MasterIsNack *****************
 12356 ;; Defined at:
 12357 ;;		line 598 in file "mcc_generated_files/i2c1_master.c"
 12358 ;; Parameters:    Size  Location     Type
 12359 ;;		None
 12360 ;; Auto vars:     Size  Location     Type
 12361 ;;		None
 12362 ;; Return value:  Size  Location     Type
 12363 ;;                  1    wreg      _Bool 
 12364 ;; Registers used:
 12365 ;;		wreg, status,2, status,0
 12366 ;; Tracked objects:
 12367 ;;		On entry : 0/0
 12368 ;;		On exit  : 0/0
 12369 ;;		Unchanged: 0/0
 12370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12375 ;;Total ram usage:        0 bytes
 12376 ;; Hardware stack levels used: 1
 12377 ;; Hardware stack levels required when called: 10
 12378 ;; This function calls:
 12379 ;;		Nothing
 12380 ;; This function is called by:
 12381 ;;		_I2C1_MasterFsm
 12382 ;;		_I2C1_DO_TX
 12383 ;; This function uses a non-reentrant model
 12384 ;;
 12385                           
 12386                           
 12387                           ;psect for function _I2C1_MasterIsNack
 12388  1726                     _I2C1_MasterIsNack:
 12389  1726                     l4069:	
 12390                           ;incstack = 0
 12391 ;; hardware stack exceeded
 12392                           ; Regs used in _I2C1_MasterIsNack: [wreg+status,2+status,0]
 12393                           
 12394                           
 12395                           ;mcc_generated_files/i2c1_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 12396  1726  0023               	movlb	3	; select bank3
 12397  1727  0E11               	swapf	17,w	;volatile
 12398  1728  0C89               	rrf	9,f
 12399  1729  0C89               	rrf	9,f
 12400  172A  3901               	andlw	1
 12401  172B                     l674:
 12402  172B  0008               	return
 12403  172C                     __end_of_I2C1_MasterIsNack:
 12404                           
 12405                           	psect	text38
 12406  1720                     __ptext38:	
 12407 ;; *************** function _I2C1_MasterSendTxData *****************
 12408 ;; Defined at:
 12409 ;;		line 568 in file "mcc_generated_files/i2c1_master.c"
 12410 ;; Parameters:    Size  Location     Type
 12411 ;;  data            1    wreg     unsigned char 
 12412 ;; Auto vars:     Size  Location     Type
 12413 ;;  data            1    0[BANK1 ] unsigned char 
 12414 ;; Return value:  Size  Location     Type
 12415 ;;                  1    wreg      void 
 12416 ;; Registers used:
 12417 ;;		wreg
 12418 ;; Tracked objects:
 12419 ;;		On entry : 0/0
 12420 ;;		On exit  : 0/0
 12421 ;;		Unchanged: 0/0
 12422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12424 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12426 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12427 ;;Total ram usage:        1 bytes
 12428 ;; Hardware stack levels used: 1
 12429 ;; Hardware stack levels required when called: 10
 12430 ;; This function calls:
 12431 ;;		Nothing
 12432 ;; This function is called by:
 12433 ;;		_I2C1_DO_SEND_ADR_READ
 12434 ;;		_I2C1_DO_SEND_ADR_WRITE
 12435 ;;		_I2C1_DO_TX
 12436 ;; This function uses a non-reentrant model
 12437 ;;
 12438                           
 12439                           
 12440                           ;psect for function _I2C1_MasterSendTxData
 12441  1720                     _I2C1_MasterSendTxData:
 12442                           
 12443                           ;incstack = 0
 12444 ;; hardware stack exceeded
 12445                           ; Regs used in _I2C1_MasterSendTxData: [wreg]
 12446                           ;I2C1_MasterSendTxData@data stored from wreg
 12447  1720  0021               	movlb	1	; select bank1
 12448  1721  00A0               	movwf	I2C1_MasterSendTxData@data^(0+128)
 12449  1722                     l4073:
 12450                           
 12451                           ;mcc_generated_files/i2c1_master.c: 568: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 569: {;mcc_generated_files/i
      +                          2c1_master.c: 570:     SSP1BUF = data;
 12452  1722  0820               	movf	I2C1_MasterSendTxData@data^(0+128),w
 12453  1723  0023               	movlb	3	; select bank3
 12454  1724  008C               	movwf	12	;volatile
 12455  1725                     l656:
 12456  1725  0008               	return
 12457  1726                     __end_of_I2C1_MasterSendTxData:
 12458                           
 12459                           	psect	text39
 12460  16D8                     __ptext39:	
 12461 ;; *************** function _I2C1_MasterSendAck *****************
 12462 ;; Defined at:
 12463 ;;		line 603 in file "mcc_generated_files/i2c1_master.c"
 12464 ;; Parameters:    Size  Location     Type
 12465 ;;		None
 12466 ;; Auto vars:     Size  Location     Type
 12467 ;;		None
 12468 ;; Return value:  Size  Location     Type
 12469 ;;                  1    wreg      void 
 12470 ;; Registers used:
 12471 ;;		None
 12472 ;; Tracked objects:
 12473 ;;		On entry : 0/0
 12474 ;;		On exit  : 0/0
 12475 ;;		Unchanged: 0/0
 12476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12481 ;;Total ram usage:        0 bytes
 12482 ;; Hardware stack levels used: 1
 12483 ;; Hardware stack levels required when called: 10
 12484 ;; This function calls:
 12485 ;;		Nothing
 12486 ;; This function is called by:
 12487 ;;		_I2C1_DO_RX
 12488 ;;		_I2C1_DO_RX_ACK
 12489 ;; This function uses a non-reentrant model
 12490 ;;
 12491                           
 12492                           
 12493                           ;psect for function _I2C1_MasterSendAck
 12494  16D8                     _I2C1_MasterSendAck:
 12495  16D8                     l4097:	
 12496                           ;incstack = 0
 12497 ;; hardware stack exceeded
 12498                           ; Regs used in _I2C1_MasterSendAck: []
 12499                           
 12500                           
 12501                           ;mcc_generated_files/i2c1_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 12502  16D8  0023               	movlb	3	; select bank3
 12503  16D9  1291               	bcf	17,5	;volatile
 12504                           
 12505                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 12506  16DA  1611               	bsf	17,4	;volatile
 12507  16DB                     l677:
 12508  16DB  0008               	return
 12509  16DC                     __end_of_I2C1_MasterSendAck:
 12510                           
 12511                           	psect	text40
 12512  16C2                     __ptext40:	
 12513 ;; *************** function _I2C1_MasterGetRxData *****************
 12514 ;; Defined at:
 12515 ;;		line 563 in file "mcc_generated_files/i2c1_master.c"
 12516 ;; Parameters:    Size  Location     Type
 12517 ;;		None
 12518 ;; Auto vars:     Size  Location     Type
 12519 ;;		None
 12520 ;; Return value:  Size  Location     Type
 12521 ;;                  1    wreg      unsigned char 
 12522 ;; Registers used:
 12523 ;;		wreg
 12524 ;; Tracked objects:
 12525 ;;		On entry : 0/0
 12526 ;;		On exit  : 0/0
 12527 ;;		Unchanged: 0/0
 12528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12533 ;;Total ram usage:        0 bytes
 12534 ;; Hardware stack levels used: 1
 12535 ;; Hardware stack levels required when called: 10
 12536 ;; This function calls:
 12537 ;;		Nothing
 12538 ;; This function is called by:
 12539 ;;		_I2C1_DO_RX
 12540 ;; This function uses a non-reentrant model
 12541 ;;
 12542                           
 12543                           
 12544                           ;psect for function _I2C1_MasterGetRxData
 12545  16C2                     _I2C1_MasterGetRxData:
 12546  16C2                     l4093:	
 12547                           ;incstack = 0
 12548 ;; hardware stack exceeded
 12549                           ; Regs used in _I2C1_MasterGetRxData: [wreg]
 12550                           
 12551                           
 12552                           ;mcc_generated_files/i2c1_master.c: 565:     return SSP1BUF;
 12553  16C2  0023               	movlb	3	; select bank3
 12554  16C3  080C               	movf	12,w	;volatile
 12555  16C4                     l653:
 12556  16C4  0008               	return
 12557  16C5                     __end_of_I2C1_MasterGetRxData:
 12558                           
 12559                           	psect	text41
 12560  16D4                     __ptext41:	
 12561 ;; *************** function _I2C1_MasterSendNack *****************
 12562 ;; Defined at:
 12563 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 12564 ;; Parameters:    Size  Location     Type
 12565 ;;		None
 12566 ;; Auto vars:     Size  Location     Type
 12567 ;;		None
 12568 ;; Return value:  Size  Location     Type
 12569 ;;                  1    wreg      void 
 12570 ;; Registers used:
 12571 ;;		None
 12572 ;; Tracked objects:
 12573 ;;		On entry : 0/0
 12574 ;;		On exit  : 0/0
 12575 ;;		Unchanged: 0/0
 12576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12581 ;;Total ram usage:        0 bytes
 12582 ;; Hardware stack levels used: 1
 12583 ;; Hardware stack levels required when called: 10
 12584 ;; This function calls:
 12585 ;;		Nothing
 12586 ;; This function is called by:
 12587 ;;		_I2C1_DO_RX_NACK_STOP
 12588 ;;		_I2C1_DO_RX_NACK_RESTART
 12589 ;; This function uses a non-reentrant model
 12590 ;;
 12591                           
 12592                           
 12593                           ;psect for function _I2C1_MasterSendNack
 12594  16D4                     _I2C1_MasterSendNack:
 12595  16D4                     l4029:	
 12596                           ;incstack = 0
 12597 ;; hardware stack exceeded
 12598                           ; Regs used in _I2C1_MasterSendNack: []
 12599                           
 12600                           
 12601                           ;mcc_generated_files/i2c1_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 12602  16D4  0023               	movlb	3	; select bank3
 12603  16D5  1691               	bsf	17,5	;volatile
 12604                           
 12605                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 12606  16D6  1611               	bsf	17,4	;volatile
 12607  16D7                     l680:
 12608  16D7  0008               	return
 12609  16D8                     __end_of_I2C1_MasterSendNack:
 12610                           
 12611                           	psect	text42
 12612  16BF                     __ptext42:	
 12613 ;; *************** function _I2C1_MasterStartRx *****************
 12614 ;; Defined at:
 12615 ;;		line 583 in file "mcc_generated_files/i2c1_master.c"
 12616 ;; Parameters:    Size  Location     Type
 12617 ;;		None
 12618 ;; Auto vars:     Size  Location     Type
 12619 ;;		None
 12620 ;; Return value:  Size  Location     Type
 12621 ;;                  1    wreg      void 
 12622 ;; Registers used:
 12623 ;;		None
 12624 ;; Tracked objects:
 12625 ;;		On entry : 0/0
 12626 ;;		On exit  : 0/0
 12627 ;;		Unchanged: 0/0
 12628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12633 ;;Total ram usage:        0 bytes
 12634 ;; Hardware stack levels used: 1
 12635 ;; Hardware stack levels required when called: 10
 12636 ;; This function calls:
 12637 ;;		Nothing
 12638 ;; This function is called by:
 12639 ;;		_I2C1_DO_RCEN
 12640 ;; This function uses a non-reentrant model
 12641 ;;
 12642                           
 12643                           
 12644                           ;psect for function _I2C1_MasterStartRx
 12645  16BF                     _I2C1_MasterStartRx:
 12646  16BF                     l4111:	
 12647                           ;incstack = 0
 12648 ;; hardware stack exceeded
 12649                           ; Regs used in _I2C1_MasterStartRx: []
 12650                           
 12651                           
 12652                           ;mcc_generated_files/i2c1_master.c: 585:     SSP1CON2bits.RCEN = 1;
 12653  16BF  0023               	movlb	3	; select bank3
 12654  16C0  1591               	bsf	17,3	;volatile
 12655  16C1                     l665:
 12656  16C1  0008               	return
 12657  16C2                     __end_of_I2C1_MasterStartRx:
 12658                           
 12659                           	psect	text43
 12660  16AB                     __ptext43:	
 12661 ;; *************** function _I2C1_CallbackReturnReset *****************
 12662 ;; Defined at:
 12663 ;;		line 525 in file "mcc_generated_files/i2c1_master.c"
 12664 ;; Parameters:    Size  Location     Type
 12665 ;;  funPtr          1    9[BANK1 ] PTR void 
 12666 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 12667 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 12668 ;; Auto vars:     Size  Location     Type
 12669 ;;		None
 12670 ;; Return value:  Size  Location     Type
 12671 ;;                  1    wreg      enum E360
 12672 ;; Registers used:
 12673 ;;		wreg
 12674 ;; Tracked objects:
 12675 ;;		On entry : 0/0
 12676 ;;		On exit  : 0/0
 12677 ;;		Unchanged: 0/0
 12678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12679 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12682 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12683 ;;Total ram usage:        1 bytes
 12684 ;; Hardware stack levels used: 1
 12685 ;; Hardware stack levels required when called: 10
 12686 ;; This function calls:
 12687 ;;		Nothing
 12688 ;; This function is called by:
 12689 ;;		_I2C1_Open
 12690 ;;		_I2C1_DO_TX
 12691 ;;		_I2C1_DO_RX
 12692 ;;		_I2C1_DO_TX_EMPTY
 12693 ;;		_I2C1_DO_ADDRESS_NACK
 12694 ;;		_I2C1_DO_RX_EMPTY
 12695 ;; This function uses a non-reentrant model
 12696 ;;
 12697                           
 12698                           
 12699                           ;psect for function _I2C1_CallbackReturnReset
 12700  16AB                     _I2C1_CallbackReturnReset:
 12701  16AB                     l4125:	
 12702                           ;incstack = 0
 12703 ;; hardware stack exceeded
 12704                           ; Regs used in _I2C1_CallbackReturnReset: [wreg]
 12705                           
 12706                           
 12707                           ;mcc_generated_files/i2c1_master.c: 525: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 526: {;mcc_generated_files/i2c1_master.c: 5
      +                          27:     return I2C1_RESET_LINK;
 12708  16AB  3005               	movlw	5
 12709  16AC                     l637:
 12710  16AC  0008               	return
 12711  16AD                     __end_of_I2C1_CallbackReturnReset:
 12712                           
 12713                           	psect	text44
 12714  16A9                     __ptext44:	
 12715 ;; *************** function _I2C1_CallbackReturnStop *****************
 12716 ;; Defined at:
 12717 ;;		line 520 in file "mcc_generated_files/i2c1_master.c"
 12718 ;; Parameters:    Size  Location     Type
 12719 ;;  funPtr          1    9[BANK1 ] PTR void 
 12720 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 12721 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 12722 ;; Auto vars:     Size  Location     Type
 12723 ;;		None
 12724 ;; Return value:  Size  Location     Type
 12725 ;;                  1    wreg      enum E360
 12726 ;; Registers used:
 12727 ;;		wreg
 12728 ;; Tracked objects:
 12729 ;;		On entry : 0/0
 12730 ;;		On exit  : 0/0
 12731 ;;		Unchanged: 0/0
 12732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12733 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12736 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12737 ;;Total ram usage:        1 bytes
 12738 ;; Hardware stack levels used: 1
 12739 ;; Hardware stack levels required when called: 10
 12740 ;; This function calls:
 12741 ;;		Nothing
 12742 ;; This function is called by:
 12743 ;;		_I2C1_Open
 12744 ;;		_I2C1_SetCallback
 12745 ;;		_I2C1_DO_TX
 12746 ;;		_I2C1_DO_RX
 12747 ;;		_I2C1_DO_TX_EMPTY
 12748 ;;		_I2C1_DO_ADDRESS_NACK
 12749 ;;		_I2C1_DO_RX_EMPTY
 12750 ;; This function uses a non-reentrant model
 12751 ;;
 12752                           
 12753                           
 12754                           ;psect for function _I2C1_CallbackReturnStop
 12755  16A9                     _I2C1_CallbackReturnStop:
 12756  16A9                     l4121:	
 12757                           ;incstack = 0
 12758 ;; hardware stack exceeded
 12759                           ; Regs used in _I2C1_CallbackReturnStop: [wreg]
 12760                           
 12761                           
 12762                           ;mcc_generated_files/i2c1_master.c: 520: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 521: {;mcc_generated_files/i2c1_master.c: 52
      +                          2:     return I2C1_STOP;
 12763  16A9  3001               	movlw	1
 12764  16AA                     l634:
 12765  16AA  0008               	return
 12766  16AB                     __end_of_I2C1_CallbackReturnStop:
 12767                           
 12768                           	psect	text45
 12769  0903                     __ptext45:	
 12770 ;; *************** function _rdBlkRegCompleteHandler *****************
 12771 ;; Defined at:
 12772 ;;		line 170 in file "mcc_generated_files/examples/i2c1_master_example.c"
 12773 ;; Parameters:    Size  Location     Type
 12774 ;;  ptr             1    9[BANK1 ] PTR void 
 12775 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 12776 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 12777 ;; Auto vars:     Size  Location     Type
 12778 ;;		None
 12779 ;; Return value:  Size  Location     Type
 12780 ;;                  1    wreg      enum E360
 12781 ;; Registers used:
 12782 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12783 ;; Tracked objects:
 12784 ;;		On entry : 0/0
 12785 ;;		On exit  : 0/0
 12786 ;;		Unchanged: 0/0
 12787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12788 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12791 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12792 ;;Total ram usage:        1 bytes
 12793 ;; Hardware stack levels used: 1
 12794 ;; Hardware stack levels required when called: 12
 12795 ;; This function calls:
 12796 ;;		_I2C1_SetBuffer
 12797 ;;		_I2C1_SetDataCompleteCallback
 12798 ;; This function is called by:
 12799 ;;		_I2C1_ReadDataBlock
 12800 ;;		_I2C1_DO_TX
 12801 ;;		_I2C1_DO_RX
 12802 ;;		_I2C1_DO_TX_EMPTY
 12803 ;;		_I2C1_DO_ADDRESS_NACK
 12804 ;;		_I2C1_DO_RX_EMPTY
 12805 ;; This function uses a non-reentrant model
 12806 ;;
 12807                           
 12808                           
 12809                           ;psect for function _rdBlkRegCompleteHandler
 12810  0903                     _rdBlkRegCompleteHandler:
 12811  0903                     l4063:	
 12812                           ;incstack = 0
 12813 ;; hardware stack exceeded
 12814                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 12815                           
 12816                           
 12817                           ;mcc_generated_files/examples/i2c1_master_example.c: 170: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 171: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 12818  0903  0021               	movlb	1	; select bank1
 12819  0904  0829               	movf	rdBlkRegCompleteHandler@ptr^(0+128),w
 12820  0905  0086               	movwf	6
 12821  0906  0187               	clrf	7
 12822  0907  3F40               	moviw [0]fsr1
 12823  0908  00A0               	movwf	I2C1_SetBuffer@bufferSize^(0+128)
 12824  0909  3F41               	moviw [1]fsr1
 12825  090A  00A1               	movwf	(I2C1_SetBuffer@bufferSize+1)^(0+128)
 12826  090B  0829               	movf	rdBlkRegCompleteHandler@ptr^(0+128),w
 12827  090C  3E02               	addlw	2
 12828  090D  0086               	movwf	6
 12829  090E  0187               	clrf	7
 12830  090F  0801               	movf	1,w
 12831  0910  3188  206F  3189   	fcall	_I2C1_SetBuffer
 12832                           
 12833                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 12834  0913  3000               	movlw	0
 12835  0914  0021               	movlb	1	; select bank1
 12836  0915  00A5               	movwf	I2C1_SetDataCompleteCallback@cb^(0+128)
 12837  0916  00A6               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^(0+128)
 12838  0917  01A7               	clrf	I2C1_SetDataCompleteCallback@ptr^(0+128)
 12839  0918  3197  27CE  3189   	fcall	_I2C1_SetDataCompleteCallback
 12840  091B                     l4065:
 12841                           
 12842                           ;mcc_generated_files/examples/i2c1_master_example.c: 174:     return I2C1_RESTART_READ;
 12843  091B  3002               	movlw	2
 12844  091C                     l102:
 12845  091C  0008               	return
 12846  091D                     __end_of_rdBlkRegCompleteHandler:
 12847                           
 12848                           	psect	text46
 12849  0847                     __ptext46:	
 12850 ;; *************** function _wr1RegCompleteHandler *****************
 12851 ;; Defined at:
 12852 ;;		line 156 in file "mcc_generated_files/examples/i2c1_master_example.c"
 12853 ;; Parameters:    Size  Location     Type
 12854 ;;  ptr             1    9[BANK1 ] PTR void 
 12855 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 12856 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 12857 ;; Auto vars:     Size  Location     Type
 12858 ;;		None
 12859 ;; Return value:  Size  Location     Type
 12860 ;;                  1    wreg      enum E360
 12861 ;; Registers used:
 12862 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12863 ;; Tracked objects:
 12864 ;;		On entry : 0/0
 12865 ;;		On exit  : 0/0
 12866 ;;		Unchanged: 0/0
 12867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12868 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12871 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12872 ;;Total ram usage:        1 bytes
 12873 ;; Hardware stack levels used: 1
 12874 ;; Hardware stack levels required when called: 12
 12875 ;; This function calls:
 12876 ;;		_I2C1_SetBuffer
 12877 ;;		_I2C1_SetDataCompleteCallback
 12878 ;; This function is called by:
 12879 ;;		_I2C1_Write1ByteRegister
 12880 ;;		_I2C1_DO_TX
 12881 ;;		_I2C1_DO_RX
 12882 ;;		_I2C1_DO_TX_EMPTY
 12883 ;;		_I2C1_DO_ADDRESS_NACK
 12884 ;;		_I2C1_DO_RX_EMPTY
 12885 ;; This function uses a non-reentrant model
 12886 ;;
 12887                           
 12888                           
 12889                           ;psect for function _wr1RegCompleteHandler
 12890  0847                     _wr1RegCompleteHandler:
 12891  0847                     l4047:	
 12892                           ;incstack = 0
 12893 ;; hardware stack exceeded
 12894                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 12895                           
 12896                           
 12897                           ;mcc_generated_files/examples/i2c1_master_example.c: 156: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 157: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetBuffer(ptr,1);
 12898  0847  3001               	movlw	1
 12899  0848  0021               	movlb	1	; select bank1
 12900  0849  00A0               	movwf	I2C1_SetBuffer@bufferSize^(0+128)
 12901  084A  3000               	movlw	0
 12902  084B  00A1               	movwf	(I2C1_SetBuffer@bufferSize^(0+128)+1)
 12903  084C  0829               	movf	wr1RegCompleteHandler@ptr^(0+128),w
 12904  084D  3188  206F  3188   	fcall	_I2C1_SetBuffer
 12905  0850                     l4049:
 12906                           
 12907                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 12908  0850  3000               	movlw	0
 12909  0851  0021               	movlb	1	; select bank1
 12910  0852  00A5               	movwf	I2C1_SetDataCompleteCallback@cb^(0+128)
 12911  0853  00A6               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^(0+128)
 12912  0854  01A7               	clrf	I2C1_SetDataCompleteCallback@ptr^(0+128)
 12913  0855  3197  27CE  3188   	fcall	_I2C1_SetDataCompleteCallback
 12914  0858                     l4051:
 12915                           
 12916                           ;mcc_generated_files/examples/i2c1_master_example.c: 160:     return I2C1_CONTINUE;
 12917  0858  3004               	movlw	4
 12918  0859                     l96:
 12919  0859  0008               	return
 12920  085A                     __end_of_wr1RegCompleteHandler:
 12921                           
 12922                           	psect	text47
 12923  0834                     __ptext47:	
 12924 ;; *************** function _rd2RegCompleteHandler *****************
 12925 ;; Defined at:
 12926 ;;		line 149 in file "mcc_generated_files/examples/i2c1_master_example.c"
 12927 ;; Parameters:    Size  Location     Type
 12928 ;;  ptr             1    9[BANK1 ] PTR void 
 12929 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 12930 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 12931 ;; Auto vars:     Size  Location     Type
 12932 ;;		None
 12933 ;; Return value:  Size  Location     Type
 12934 ;;                  1    wreg      enum E360
 12935 ;; Registers used:
 12936 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12937 ;; Tracked objects:
 12938 ;;		On entry : 0/0
 12939 ;;		On exit  : 0/0
 12940 ;;		Unchanged: 0/0
 12941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12942 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12945 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12946 ;;Total ram usage:        1 bytes
 12947 ;; Hardware stack levels used: 1
 12948 ;; Hardware stack levels required when called: 12
 12949 ;; This function calls:
 12950 ;;		_I2C1_SetBuffer
 12951 ;;		_I2C1_SetDataCompleteCallback
 12952 ;; This function is called by:
 12953 ;;		_I2C1_Read2ByteRegister
 12954 ;;		_I2C1_DO_TX
 12955 ;;		_I2C1_DO_RX
 12956 ;;		_I2C1_DO_TX_EMPTY
 12957 ;;		_I2C1_DO_ADDRESS_NACK
 12958 ;;		_I2C1_DO_RX_EMPTY
 12959 ;; This function uses a non-reentrant model
 12960 ;;
 12961                           
 12962                           
 12963                           ;psect for function _rd2RegCompleteHandler
 12964  0834                     _rd2RegCompleteHandler:
 12965  0834                     l4039:	
 12966                           ;incstack = 0
 12967 ;; hardware stack exceeded
 12968                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 12969                           
 12970                           
 12971                           ;mcc_generated_files/examples/i2c1_master_example.c: 149: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 150: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetBuffer(ptr,2);
 12972  0834  3002               	movlw	2
 12973  0835  0021               	movlb	1	; select bank1
 12974  0836  00A0               	movwf	I2C1_SetBuffer@bufferSize^(0+128)
 12975  0837  3000               	movlw	0
 12976  0838  00A1               	movwf	(I2C1_SetBuffer@bufferSize^(0+128)+1)
 12977  0839  0829               	movf	rd2RegCompleteHandler@ptr^(0+128),w
 12978  083A  3188  206F  3188   	fcall	_I2C1_SetBuffer
 12979  083D                     l4041:
 12980                           
 12981                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 12982  083D  3000               	movlw	0
 12983  083E  0021               	movlb	1	; select bank1
 12984  083F  00A5               	movwf	I2C1_SetDataCompleteCallback@cb^(0+128)
 12985  0840  00A6               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^(0+128)
 12986  0841  01A7               	clrf	I2C1_SetDataCompleteCallback@ptr^(0+128)
 12987  0842  3197  27CE  3188   	fcall	_I2C1_SetDataCompleteCallback
 12988  0845                     l4043:
 12989                           
 12990                           ;mcc_generated_files/examples/i2c1_master_example.c: 153:     return I2C1_RESTART_READ;
 12991  0845  3002               	movlw	2
 12992  0846                     l93:
 12993  0846  0008               	return
 12994  0847                     __end_of_rd2RegCompleteHandler:
 12995                           
 12996                           	psect	text48
 12997  0821                     __ptext48:	
 12998 ;; *************** function _rd1RegCompleteHandler *****************
 12999 ;; Defined at:
 13000 ;;		line 142 in file "mcc_generated_files/examples/i2c1_master_example.c"
 13001 ;; Parameters:    Size  Location     Type
 13002 ;;  ptr             1    9[BANK1 ] PTR void 
 13003 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 13004 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 13005 ;; Auto vars:     Size  Location     Type
 13006 ;;		None
 13007 ;; Return value:  Size  Location     Type
 13008 ;;                  1    wreg      enum E360
 13009 ;; Registers used:
 13010 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13011 ;; Tracked objects:
 13012 ;;		On entry : 0/0
 13013 ;;		On exit  : 0/0
 13014 ;;		Unchanged: 0/0
 13015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13016 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13019 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13020 ;;Total ram usage:        1 bytes
 13021 ;; Hardware stack levels used: 1
 13022 ;; Hardware stack levels required when called: 12
 13023 ;; This function calls:
 13024 ;;		_I2C1_SetBuffer
 13025 ;;		_I2C1_SetDataCompleteCallback
 13026 ;; This function is called by:
 13027 ;;		_I2C1_Read1ByteRegister
 13028 ;;		_I2C1_DO_TX
 13029 ;;		_I2C1_DO_RX
 13030 ;;		_I2C1_DO_TX_EMPTY
 13031 ;;		_I2C1_DO_ADDRESS_NACK
 13032 ;;		_I2C1_DO_RX_EMPTY
 13033 ;; This function uses a non-reentrant model
 13034 ;;
 13035                           
 13036                           
 13037                           ;psect for function _rd1RegCompleteHandler
 13038  0821                     _rd1RegCompleteHandler:
 13039  0821                     l4031:	
 13040                           ;incstack = 0
 13041 ;; hardware stack exceeded
 13042                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 13043                           
 13044                           
 13045                           ;mcc_generated_files/examples/i2c1_master_example.c: 142: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 143: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 144:     I2C1_SetBuffer(ptr,1);
 13046  0821  3001               	movlw	1
 13047  0822  0021               	movlb	1	; select bank1
 13048  0823  00A0               	movwf	I2C1_SetBuffer@bufferSize^(0+128)
 13049  0824  3000               	movlw	0
 13050  0825  00A1               	movwf	(I2C1_SetBuffer@bufferSize^(0+128)+1)
 13051  0826  0829               	movf	rd1RegCompleteHandler@ptr^(0+128),w
 13052  0827  3188  206F  3188   	fcall	_I2C1_SetBuffer
 13053  082A                     l4033:
 13054                           
 13055                           ;mcc_generated_files/examples/i2c1_master_example.c: 145:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 13056  082A  3000               	movlw	0
 13057  082B  0021               	movlb	1	; select bank1
 13058  082C  00A5               	movwf	I2C1_SetDataCompleteCallback@cb^(0+128)
 13059  082D  00A6               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^(0+128)
 13060  082E  01A7               	clrf	I2C1_SetDataCompleteCallback@ptr^(0+128)
 13061  082F  3197  27CE  3188   	fcall	_I2C1_SetDataCompleteCallback
 13062  0832                     l4035:
 13063                           
 13064                           ;mcc_generated_files/examples/i2c1_master_example.c: 146:     return I2C1_RESTART_READ;
 13065  0832  3002               	movlw	2
 13066  0833                     l90:
 13067  0833  0008               	return
 13068  0834                     __end_of_rd1RegCompleteHandler:
 13069                           
 13070                           	psect	text49
 13071  080E                     __ptext49:	
 13072 ;; *************** function _wr2RegCompleteHandler *****************
 13073 ;; Defined at:
 13074 ;;		line 163 in file "mcc_generated_files/examples/i2c1_master_example.c"
 13075 ;; Parameters:    Size  Location     Type
 13076 ;;  ptr             1    9[BANK1 ] PTR void 
 13077 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 13078 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 13079 ;; Auto vars:     Size  Location     Type
 13080 ;;		None
 13081 ;; Return value:  Size  Location     Type
 13082 ;;                  1    wreg      enum E360
 13083 ;; Registers used:
 13084 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13085 ;; Tracked objects:
 13086 ;;		On entry : 0/0
 13087 ;;		On exit  : 0/0
 13088 ;;		Unchanged: 0/0
 13089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13090 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13093 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13094 ;;Total ram usage:        1 bytes
 13095 ;; Hardware stack levels used: 1
 13096 ;; Hardware stack levels required when called: 12
 13097 ;; This function calls:
 13098 ;;		_I2C1_SetBuffer
 13099 ;;		_I2C1_SetDataCompleteCallback
 13100 ;; This function is called by:
 13101 ;;		_I2C1_Write2ByteRegister
 13102 ;;		_I2C1_DO_TX
 13103 ;;		_I2C1_DO_RX
 13104 ;;		_I2C1_DO_TX_EMPTY
 13105 ;;		_I2C1_DO_ADDRESS_NACK
 13106 ;;		_I2C1_DO_RX_EMPTY
 13107 ;; This function uses a non-reentrant model
 13108 ;;
 13109                           
 13110                           
 13111                           ;psect for function _wr2RegCompleteHandler
 13112  080E                     _wr2RegCompleteHandler:
 13113  080E                     l4055:	
 13114                           ;incstack = 0
 13115 ;; hardware stack exceeded
 13116                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 13117                           
 13118                           
 13119                           ;mcc_generated_files/examples/i2c1_master_example.c: 163: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 164: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetBuffer(ptr,2);
 13120  080E  3002               	movlw	2
 13121  080F  0021               	movlb	1	; select bank1
 13122  0810  00A0               	movwf	I2C1_SetBuffer@bufferSize^(0+128)
 13123  0811  3000               	movlw	0
 13124  0812  00A1               	movwf	(I2C1_SetBuffer@bufferSize^(0+128)+1)
 13125  0813  0829               	movf	wr2RegCompleteHandler@ptr^(0+128),w
 13126  0814  3188  206F  3188   	fcall	_I2C1_SetBuffer
 13127  0817                     l4057:
 13128                           
 13129                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 13130  0817  3000               	movlw	0
 13131  0818  0021               	movlb	1	; select bank1
 13132  0819  00A5               	movwf	I2C1_SetDataCompleteCallback@cb^(0+128)
 13133  081A  00A6               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^(0+128)
 13134  081B  01A7               	clrf	I2C1_SetDataCompleteCallback@ptr^(0+128)
 13135  081C  3197  27CE  3188   	fcall	_I2C1_SetDataCompleteCallback
 13136  081F                     l4059:
 13137                           
 13138                           ;mcc_generated_files/examples/i2c1_master_example.c: 167:     return I2C1_CONTINUE;
 13139  081F  3004               	movlw	4
 13140  0820                     l99:
 13141  0820  0008               	return
 13142  0821                     __end_of_wr2RegCompleteHandler:
 13143                           
 13144                           	psect	text50
 13145  17CE                     __ptext50:	
 13146 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 13147 ;; Defined at:
 13148 ;;		line 273 in file "mcc_generated_files/i2c1_master.c"
 13149 ;; Parameters:    Size  Location     Type
 13150 ;;  cb              2    5[BANK1 ] PTR FTN(PTR void ,)enum 
 13151 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 13152 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 13153 ;;  ptr             1    7[BANK1 ] PTR void 
 13154 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 13155 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 13156 ;; Auto vars:     Size  Location     Type
 13157 ;;		None
 13158 ;; Return value:  Size  Location     Type
 13159 ;;                  1    wreg      void 
 13160 ;; Registers used:
 13161 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13162 ;; Tracked objects:
 13163 ;;		On entry : 0/0
 13164 ;;		On exit  : 0/0
 13165 ;;		Unchanged: 0/0
 13166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13167 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13169 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13170 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13171 ;;Total ram usage:        4 bytes
 13172 ;; Hardware stack levels used: 1
 13173 ;; Hardware stack levels required when called: 11
 13174 ;; This function calls:
 13175 ;;		_I2C1_SetCallback
 13176 ;; This function is called by:
 13177 ;;		_I2C1_Write1ByteRegister
 13178 ;;		_rd1RegCompleteHandler
 13179 ;;		_rd2RegCompleteHandler
 13180 ;;		_wr1RegCompleteHandler
 13181 ;;		_wr2RegCompleteHandler
 13182 ;;		_rdBlkRegCompleteHandler
 13183 ;;		_I2C1_Read1ByteRegister
 13184 ;;		_I2C1_Read2ByteRegister
 13185 ;;		_I2C1_Write2ByteRegister
 13186 ;;		_I2C1_ReadDataBlock
 13187 ;; This function uses a non-reentrant model
 13188 ;;
 13189                           
 13190                           
 13191                           ;psect for function _I2C1_SetDataCompleteCallback
 13192  17CE                     _I2C1_SetDataCompleteCallback:
 13193  17CE                     l4017:	
 13194                           ;incstack = 0
 13195 ;; hardware stack exceeded
 13196                           ; Regs used in _I2C1_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 13197                           
 13198                           
 13199                           ;mcc_generated_files/i2c1_master.c: 273: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 274: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 275:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 13200  17CE  0021               	movlb	1	; select bank1
 13201  17CF  0826               	movf	(I2C1_SetDataCompleteCallback@cb+1)^(0+128),w
 13202  17D0  00A1               	movwf	(I2C1_SetCallback@cb+1)^(0+128)
 13203  17D1  0825               	movf	I2C1_SetDataCompleteCallback@cb^(0+128),w
 13204  17D2  00A0               	movwf	I2C1_SetCallback@cb^(0+128)
 13205  17D3  0827               	movf	I2C1_SetDataCompleteCallback@ptr^(0+128),w
 13206  17D4  00A8               	movwf	??_I2C1_SetDataCompleteCallback^(0+128)
 13207  17D5  0828               	movf	??_I2C1_SetDataCompleteCallback^(0+128),w
 13208  17D6  00A2               	movwf	I2C1_SetCallback@ptr^(0+128)
 13209  17D7  3000               	movlw	0
 13210  17D8  318A  22A0  3197   	fcall	_I2C1_SetCallback
 13211  17DB                     l508:
 13212  17DB  0008               	return
 13213  17DC                     __end_of_I2C1_SetDataCompleteCallback:
 13214                           
 13215                           	psect	text51
 13216  0AA0                     __ptext51:	
 13217 ;; *************** function _I2C1_SetCallback *****************
 13218 ;; Defined at:
 13219 ;;		line 298 in file "mcc_generated_files/i2c1_master.c"
 13220 ;; Parameters:    Size  Location     Type
 13221 ;;  idx             1    wreg     enum E12094
 13222 ;;  cb              2    0[BANK1 ] PTR FTN(PTR void ,)enum 
 13223 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 13224 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 13225 ;;  ptr             1    2[BANK1 ] PTR void 
 13226 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 13227 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 13228 ;; Auto vars:     Size  Location     Type
 13229 ;;  idx             1    4[BANK1 ] enum E12094
 13230 ;; Return value:  Size  Location     Type
 13231 ;;                  1    wreg      void 
 13232 ;; Registers used:
 13233 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13234 ;; Tracked objects:
 13235 ;;		On entry : 0/0
 13236 ;;		On exit  : 0/0
 13237 ;;		Unchanged: 0/0
 13238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13239 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13240 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13241 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13242 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 13243 ;;Total ram usage:        5 bytes
 13244 ;; Hardware stack levels used: 1
 13245 ;; Hardware stack levels required when called: 10
 13246 ;; This function calls:
 13247 ;;		Nothing
 13248 ;; This function is called by:
 13249 ;;		_I2C1_SetDataCompleteCallback
 13250 ;;		_I2C1_SetAddressNackCallback
 13251 ;;		_I2C1_SetWriteCollisionCallback
 13252 ;;		_I2C1_SetDataNackCallback
 13253 ;;		_I2C1_SetTimeoutCallback
 13254 ;; This function uses a non-reentrant model
 13255 ;;
 13256                           
 13257                           
 13258                           ;psect for function _I2C1_SetCallback
 13259  0AA0                     _I2C1_SetCallback:
 13260                           
 13261                           ;incstack = 0
 13262 ;; hardware stack exceeded
 13263                           ; Regs used in _I2C1_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
 13264                           ;I2C1_SetCallback@idx stored from wreg
 13265  0AA0  0021               	movlb	1	; select bank1
 13266  0AA1  00A4               	movwf	I2C1_SetCallback@idx^(0+128)
 13267  0AA2                     l4011:
 13268                           
 13269                           ;mcc_generated_files/i2c1_master.c: 298: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 299: {;mcc_gen
      +                          erated_files/i2c1_master.c: 300:     if(cb)
 13270  0AA2  0820               	movf	I2C1_SetCallback@cb^(0+128),w
 13271  0AA3  0421               	iorwf	(I2C1_SetCallback@cb+1)^(0+128),w
 13272  0AA4  1903               	btfsc	3,2
 13273  0AA5  2AA7               	goto	u1771
 13274  0AA6  2AA8               	goto	u1770
 13275  0AA7                     u1771:
 13276  0AA7  2ABB               	goto	l4015
 13277  0AA8                     u1770:
 13278  0AA8                     l4013:
 13279                           
 13280                           ;mcc_generated_files/i2c1_master.c: 301:     {;mcc_generated_files/i2c1_master.c: 302:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 13281  0AA8  3524               	lslf	I2C1_SetCallback@idx^(0+128),w
 13282  0AA9  3E20               	addlw	(low (_I2C1_Status| (0+256)))& (0+255)
 13283  0AAA  0086               	movwf	6
 13284  0AAB  3001               	movlw	1	; select bank2/3
 13285  0AAC  0087               	movwf	7
 13286  0AAD  0820               	movf	I2C1_SetCallback@cb^(0+128),w
 13287  0AAE  3FC0               	movwi [0]fsr1
 13288  0AAF  0821               	movf	(I2C1_SetCallback@cb+1)^(0+128),w
 13289  0AB0  3FC1               	movwi [1]fsr1
 13290                           
 13291                           ;mcc_generated_files/i2c1_master.c: 303:         I2C1_Status.callbackPayload[idx] = ptr;
 13292  0AB1  0822               	movf	I2C1_SetCallback@ptr^(0+128),w
 13293  0AB2  00A3               	movwf	??_I2C1_SetCallback^(0+128)
 13294  0AB3  0824               	movf	I2C1_SetCallback@idx^(0+128),w
 13295  0AB4  3E2C               	addlw	(low ((_I2C1_Status| (0+256)+12)))& (0+255)
 13296  0AB5  0086               	movwf	6
 13297  0AB6  3001               	movlw	1	; select bank2/3
 13298  0AB7  0087               	movwf	7
 13299  0AB8  0823               	movf	??_I2C1_SetCallback^(0+128),w
 13300  0AB9  0081               	movwf	1
 13301                           
 13302                           ;mcc_generated_files/i2c1_master.c: 304:     }
 13303  0ABA  2ACA               	goto	l525
 13304  0ABB                     l4015:
 13305                           
 13306                           ;mcc_generated_files/i2c1_master.c: 306:     {;mcc_generated_files/i2c1_master.c: 307:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 13307  0ABB  3524               	lslf	I2C1_SetCallback@idx^(0+128),w
 13308  0ABC  3E20               	addlw	(low (_I2C1_Status| (0+256)))& (0+255)
 13309  0ABD  0086               	movwf	6
 13310  0ABE  3001               	movlw	1	; select bank2/3
 13311  0ABF  0087               	movwf	7
 13312  0AC0  30A9               	movlw	low _I2C1_CallbackReturnStop
 13313  0AC1  3FC0               	movwi [0]fsr1
 13314  0AC2  3016               	movlw	high _I2C1_CallbackReturnStop
 13315  0AC3  3FC1               	movwi [1]fsr1
 13316                           
 13317                           ;mcc_generated_files/i2c1_master.c: 308:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 13318  0AC4  0824               	movf	I2C1_SetCallback@idx^(0+128),w
 13319  0AC5  3E2C               	addlw	(low ((_I2C1_Status| (0+256)+12)))& (0+255)
 13320  0AC6  0086               	movwf	6
 13321  0AC7  3001               	movlw	1	; select bank2/3
 13322  0AC8  0087               	movwf	7
 13323  0AC9  0181               	clrf	1
 13324  0ACA                     l525:
 13325  0ACA  0008               	return
 13326  0ACB                     __end_of_I2C1_SetCallback:
 13327                           
 13328                           	psect	text52
 13329  086F                     __ptext52:	
 13330 ;; *************** function _I2C1_SetBuffer *****************
 13331 ;; Defined at:
 13332 ;;		line 263 in file "mcc_generated_files/i2c1_master.c"
 13333 ;; Parameters:    Size  Location     Type
 13334 ;;  buffer          1    wreg     PTR void 
 13335 ;;		 -> I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteReg
      +ister@data(2), 
 13336 ;;		 -> I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRe
      +gister@returnValue(2), 
 13337 ;;		 -> NULL(0), I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), 
 13338 ;;  bufferSize      2    0[BANK1 ] unsigned int 
 13339 ;; Auto vars:     Size  Location     Type
 13340 ;;  buffer          1    3[BANK1 ] PTR void 
 13341 ;;		 -> I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteReg
      +ister@data(2), 
 13342 ;;		 -> I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRe
      +gister@returnValue(2), 
 13343 ;;		 -> NULL(0), I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), 
 13344 ;; Return value:  Size  Location     Type
 13345 ;;                  1    wreg      void 
 13346 ;; Registers used:
 13347 ;;		wreg
 13348 ;; Tracked objects:
 13349 ;;		On entry : 0/0
 13350 ;;		On exit  : 0/0
 13351 ;;		Unchanged: 0/0
 13352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13353 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13354 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13355 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13356 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13357 ;;Total ram usage:        4 bytes
 13358 ;; Hardware stack levels used: 1
 13359 ;; Hardware stack levels required when called: 10
 13360 ;; This function calls:
 13361 ;;		Nothing
 13362 ;; This function is called by:
 13363 ;;		_I2C1_Write1ByteRegister
 13364 ;;		_rd1RegCompleteHandler
 13365 ;;		_rd2RegCompleteHandler
 13366 ;;		_wr1RegCompleteHandler
 13367 ;;		_wr2RegCompleteHandler
 13368 ;;		_rdBlkRegCompleteHandler
 13369 ;;		_I2C1_Read1ByteRegister
 13370 ;;		_I2C1_Read2ByteRegister
 13371 ;;		_I2C1_Write2ByteRegister
 13372 ;;		_I2C1_WriteNBytes
 13373 ;;		_I2C1_ReadNBytes
 13374 ;;		_I2C1_ReadDataBlock
 13375 ;; This function uses a non-reentrant model
 13376 ;;
 13377                           
 13378                           
 13379                           ;psect for function _I2C1_SetBuffer
 13380  086F                     _I2C1_SetBuffer:
 13381                           
 13382                           ;incstack = 0
 13383                           ; Regs used in _I2C1_SetBuffer: [wreg]
 13384                           ;I2C1_SetBuffer@buffer stored from wreg
 13385  086F  0021               	movlb	1	; select bank1
 13386  0870  00A3               	movwf	I2C1_SetBuffer@buffer^(0+128)
 13387  0871                     l4019:
 13388                           
 13389                           ;mcc_generated_files/i2c1_master.c: 263: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 264: {;mcc_generated_files/i2c1_master.c: 265: 
      +                              if(I2C1_Status.bufferFree)
 13390  0871  0022               	movlb	2	; select bank2
 13391  0872  1DBC               	btfss	(_I2C1_Status^(0+256)+28),3
 13392  0873  2875               	goto	u1781
 13393  0874  2876               	goto	u1780
 13394  0875                     u1781:
 13395  0875  2885               	goto	l505
 13396  0876                     u1780:
 13397  0876                     l4021:
 13398                           
 13399                           ;mcc_generated_files/i2c1_master.c: 266:     {;mcc_generated_files/i2c1_master.c: 267:  
      +                                 I2C1_Status.data_ptr = buffer;
 13400  0876  0021               	movlb	1	; select bank1
 13401  0877  0823               	movf	I2C1_SetBuffer@buffer^(0+128),w
 13402  0878  00A2               	movwf	??_I2C1_SetBuffer^(0+128)
 13403  0879  0822               	movf	??_I2C1_SetBuffer^(0+128),w
 13404  087A  0022               	movlb	2	; select bank2
 13405  087B  00B7               	movwf	(low ((_I2C1_Status| (0+256)+23)))^0
 13406                           
 13407                           ;mcc_generated_files/i2c1_master.c: 268:         I2C1_Status.data_length = bufferSize;
 13408  087C  0021               	movlb	1	; select bank1
 13409  087D  0821               	movf	(I2C1_SetBuffer@bufferSize+1)^(0+128),w
 13410  087E  0022               	movlb	2	; select bank2
 13411  087F  00B9               	movwf	((_I2C1_Status+1)^(0+256)+24)
 13412  0880  0021               	movlb	1	; select bank1
 13413  0881  0820               	movf	I2C1_SetBuffer@bufferSize^(0+128),w
 13414  0882  0022               	movlb	2	; select bank2
 13415  0883  00B8               	movwf	(_I2C1_Status^(0+256)+24)
 13416  0884                     l4023:
 13417                           
 13418                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.bufferFree = 0;
 13419  0884  11BC               	bcf	(_I2C1_Status^(0+256)+28),3
 13420  0885                     l505:
 13421  0885  0008               	return
 13422  0886                     __end_of_I2C1_SetBuffer:
 13423                           
 13424                           	psect	text53
 13425  16BC                     __ptext53:	
 13426 ;; *************** function _I2C1_MasterStop *****************
 13427 ;; Defined at:
 13428 ;;		line 593 in file "mcc_generated_files/i2c1_master.c"
 13429 ;; Parameters:    Size  Location     Type
 13430 ;;		None
 13431 ;; Auto vars:     Size  Location     Type
 13432 ;;		None
 13433 ;; Return value:  Size  Location     Type
 13434 ;;                  1    wreg      void 
 13435 ;; Registers used:
 13436 ;;		None
 13437 ;; Tracked objects:
 13438 ;;		On entry : 0/0
 13439 ;;		On exit  : 0/0
 13440 ;;		Unchanged: 0/0
 13441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13446 ;;Total ram usage:        0 bytes
 13447 ;; Hardware stack levels used: 1
 13448 ;; Hardware stack levels required when called: 10
 13449 ;; This function calls:
 13450 ;;		Nothing
 13451 ;; This function is called by:
 13452 ;;		_I2C1_DO_SEND_STOP
 13453 ;; This function uses a non-reentrant model
 13454 ;;
 13455                           
 13456                           
 13457                           ;psect for function _I2C1_MasterStop
 13458  16BC                     _I2C1_MasterStop:
 13459  16BC                     l4027:	
 13460                           ;incstack = 0
 13461 ;; hardware stack exceeded
 13462                           ; Regs used in _I2C1_MasterStop: []
 13463                           
 13464                           
 13465                           ;mcc_generated_files/i2c1_master.c: 595:     SSP1CON2bits.PEN = 1;
 13466  16BC  0023               	movlb	3	; select bank3
 13467  16BD  1511               	bsf	17,2	;volatile
 13468  16BE                     l671:
 13469  16BE  0008               	return
 13470  16BF                     __end_of_I2C1_MasterStop:
 13471                           
 13472                           	psect	text54
 13473  16B9                     __ptext54:	
 13474 ;; *************** function _I2C1_MasterEnableRestart *****************
 13475 ;; Defined at:
 13476 ;;		line 573 in file "mcc_generated_files/i2c1_master.c"
 13477 ;; Parameters:    Size  Location     Type
 13478 ;;		None
 13479 ;; Auto vars:     Size  Location     Type
 13480 ;;		None
 13481 ;; Return value:  Size  Location     Type
 13482 ;;                  1    wreg      void 
 13483 ;; Registers used:
 13484 ;;		None
 13485 ;; Tracked objects:
 13486 ;;		On entry : 0/0
 13487 ;;		On exit  : 0/0
 13488 ;;		Unchanged: 0/0
 13489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13494 ;;Total ram usage:        0 bytes
 13495 ;; Hardware stack levels used: 1
 13496 ;; Hardware stack levels required when called: 10
 13497 ;; This function calls:
 13498 ;;		Nothing
 13499 ;; This function is called by:
 13500 ;;		_I2C1_DO_SEND_RESTART_READ
 13501 ;;		_I2C1_DO_SEND_RESTART_WRITE
 13502 ;;		_I2C1_DO_SEND_RESTART
 13503 ;;		_I2C1_DO_RX_EMPTY
 13504 ;; This function uses a non-reentrant model
 13505 ;;
 13506                           
 13507                           
 13508                           ;psect for function _I2C1_MasterEnableRestart
 13509  16B9                     _I2C1_MasterEnableRestart:
 13510  16B9                     l4025:	
 13511                           ;incstack = 0
 13512 ;; hardware stack exceeded
 13513                           ; Regs used in _I2C1_MasterEnableRestart: []
 13514                           
 13515                           
 13516                           ;mcc_generated_files/i2c1_master.c: 575:     SSP1CON2bits.RSEN = 1;
 13517  16B9  0023               	movlb	3	; select bank3
 13518  16BA  1491               	bsf	17,1	;volatile
 13519  16BB                     l659:
 13520  16BB  0008               	return
 13521  16BC                     __end_of_I2C1_MasterEnableRestart:
 13522                           
 13523                           	psect	text55
 13524  16B6                     __ptext55:	
 13525 ;; *************** function _I2C1_MasterStart *****************
 13526 ;; Defined at:
 13527 ;;		line 588 in file "mcc_generated_files/i2c1_master.c"
 13528 ;; Parameters:    Size  Location     Type
 13529 ;;		None
 13530 ;; Auto vars:     Size  Location     Type
 13531 ;;		None
 13532 ;; Return value:  Size  Location     Type
 13533 ;;                  1    wreg      void 
 13534 ;; Registers used:
 13535 ;;		None
 13536 ;; Tracked objects:
 13537 ;;		On entry : 0/0
 13538 ;;		On exit  : 0/0
 13539 ;;		Unchanged: 0/0
 13540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13545 ;;Total ram usage:        0 bytes
 13546 ;; Hardware stack levels used: 1
 13547 ;; Hardware stack levels required when called: 10
 13548 ;; This function calls:
 13549 ;;		Nothing
 13550 ;; This function is called by:
 13551 ;;		_I2C1_MasterOperation
 13552 ;; This function uses a non-reentrant model
 13553 ;;
 13554                           
 13555                           
 13556                           ;psect for function _I2C1_MasterStart
 13557  16B6                     _I2C1_MasterStart:
 13558  16B6                     l4305:	
 13559                           ;incstack = 0
 13560 ;; hardware stack exceeded
 13561                           ; Regs used in _I2C1_MasterStart: []
 13562                           
 13563                           
 13564                           ;mcc_generated_files/i2c1_master.c: 590:     SSP1CON2bits.SEN = 1;
 13565  16B6  0023               	movlb	3	; select bank3
 13566  16B7  1411               	bsf	17,0	;volatile
 13567  16B8                     l668:
 13568  16B8  0008               	return
 13569  16B9                     __end_of_I2C1_MasterStart:
 13570                           
 13571                           	psect	text56
 13572  09C3                     __ptext56:	
 13573 ;; *************** function _I2C1_Close *****************
 13574 ;; Defined at:
 13575 ;;		line 209 in file "mcc_generated_files/i2c1_master.c"
 13576 ;; Parameters:    Size  Location     Type
 13577 ;;		None
 13578 ;; Auto vars:     Size  Location     Type
 13579 ;;  returnValue     1    1[BANK1 ] enum E355
 13580 ;; Return value:  Size  Location     Type
 13581 ;;                  1    wreg      enum E355
 13582 ;; Registers used:
 13583 ;;		wreg, status,2, status,0, pclath, cstack
 13584 ;; Tracked objects:
 13585 ;;		On entry : 0/0
 13586 ;;		On exit  : 0/0
 13587 ;;		Unchanged: 0/0
 13588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13590 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13591 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13592 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13593 ;;Total ram usage:        2 bytes
 13594 ;; Hardware stack levels used: 1
 13595 ;; Hardware stack levels required when called: 11
 13596 ;; This function calls:
 13597 ;;		_I2C1_MasterClearIrq
 13598 ;;		_I2C1_MasterClose
 13599 ;;		_I2C1_MasterDisableIrq
 13600 ;; This function is called by:
 13601 ;;		_I2C1_Write1ByteRegister
 13602 ;;		_I2C1_Read1ByteRegister
 13603 ;;		_I2C1_Read2ByteRegister
 13604 ;;		_I2C1_Write2ByteRegister
 13605 ;;		_I2C1_WriteNBytes
 13606 ;;		_I2C1_ReadNBytes
 13607 ;;		_I2C1_ReadDataBlock
 13608 ;; This function uses a non-reentrant model
 13609 ;;
 13610                           
 13611                           
 13612                           ;psect for function _I2C1_Close
 13613  09C3                     _I2C1_Close:
 13614  09C3                     l4409:	
 13615                           ;incstack = 0
 13616 ;; hardware stack exceeded
 13617                           ; Regs used in _I2C1_Close: [wreg+status,2+status,0+pclath+cstack]
 13618                           
 13619                           
 13620                           ;mcc_generated_files/i2c1_master.c: 211:     i2c1_error_t returnValue = I2C1_BUSY;
 13621  09C3  0021               	movlb	1	; select bank1
 13622  09C4  01A1               	clrf	I2C1_Close@returnValue^(0+128)
 13623  09C5  0AA1               	incf	I2C1_Close@returnValue^(0+128),f
 13624                           
 13625                           ;mcc_generated_files/i2c1_master.c: 212:     if(!I2C1_Status.busy)
 13626  09C6  0022               	movlb	2	; select bank2
 13627  09C7  18BC               	btfsc	(_I2C1_Status^(0+256)+28),1
 13628  09C8  29CA               	goto	u1931
 13629  09C9  29CB               	goto	u1930
 13630  09CA                     u1931:
 13631  09CA  29E1               	goto	l4423
 13632  09CB                     u1930:
 13633  09CB                     l4411:
 13634                           
 13635                           ;mcc_generated_files/i2c1_master.c: 213:     {;mcc_generated_files/i2c1_master.c: 214:  
      +                                 I2C1_Status.inUse = 0;
 13636  09CB  113C               	bcf	(_I2C1_Status^(0+256)+28),2
 13637  09CC                     l4413:
 13638                           
 13639                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.address = 0xff;
 13640  09CC  30FF               	movlw	255
 13641  09CD  0021               	movlb	1	; select bank1
 13642  09CE  00A0               	movwf	??_I2C1_Close^(0+128)
 13643  09CF  0820               	movf	??_I2C1_Close^(0+128),w
 13644  09D0  0022               	movlb	2	; select bank2
 13645  09D1  00B6               	movwf	(_I2C1_Status^(0+256)+22)
 13646  09D2                     l4415:
 13647                           
 13648                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_MasterClearIrq();
 13649  09D2  3196  26AD  3189   	fcall	_I2C1_MasterClearIrq
 13650  09D5                     l4417:
 13651                           
 13652                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_MasterDisableIrq();
 13653  09D5  3196  26B3  3189   	fcall	_I2C1_MasterDisableIrq
 13654  09D8                     l4419:
 13655                           
 13656                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClose();
 13657  09D8  3196  26B0  3189   	fcall	_I2C1_MasterClose
 13658  09DB                     l4421:
 13659                           
 13660                           ;mcc_generated_files/i2c1_master.c: 219:         returnValue = I2C1_Status.error;
 13661  09DB  0022               	movlb	2	; select bank2
 13662  09DC  083B               	movf	(_I2C1_Status^(0+256)+27),w
 13663  09DD  0021               	movlb	1	; select bank1
 13664  09DE  00A0               	movwf	??_I2C1_Close^(0+128)
 13665  09DF  0820               	movf	??_I2C1_Close^(0+128),w
 13666  09E0  00A1               	movwf	I2C1_Close@returnValue^(0+128)
 13667  09E1                     l4423:
 13668                           
 13669                           ;mcc_generated_files/i2c1_master.c: 221:     return returnValue;
 13670  09E1  0021               	movlb	1	; select bank1
 13671  09E2  0821               	movf	I2C1_Close@returnValue^(0+128),w
 13672  09E3                     l486:
 13673  09E3  0008               	return
 13674  09E4                     __end_of_I2C1_Close:
 13675                           
 13676                           	psect	text57
 13677  16B3                     __ptext57:	
 13678 ;; *************** function _I2C1_MasterDisableIrq *****************
 13679 ;; Defined at:
 13680 ;;		line 635 in file "mcc_generated_files/i2c1_master.c"
 13681 ;; Parameters:    Size  Location     Type
 13682 ;;		None
 13683 ;; Auto vars:     Size  Location     Type
 13684 ;;		None
 13685 ;; Return value:  Size  Location     Type
 13686 ;;                  1    wreg      void 
 13687 ;; Registers used:
 13688 ;;		None
 13689 ;; Tracked objects:
 13690 ;;		On entry : 0/0
 13691 ;;		On exit  : 0/0
 13692 ;;		Unchanged: 0/0
 13693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13698 ;;Total ram usage:        0 bytes
 13699 ;; Hardware stack levels used: 1
 13700 ;; Hardware stack levels required when called: 10
 13701 ;; This function calls:
 13702 ;;		Nothing
 13703 ;; This function is called by:
 13704 ;;		_I2C1_Close
 13705 ;;		_I2C1_SetTimeOut
 13706 ;; This function uses a non-reentrant model
 13707 ;;
 13708                           
 13709                           
 13710                           ;psect for function _I2C1_MasterDisableIrq
 13711  16B3                     _I2C1_MasterDisableIrq:
 13712  16B3                     l4345:	
 13713                           ;incstack = 0
 13714 ;; hardware stack exceeded
 13715                           ; Regs used in _I2C1_MasterDisableIrq: []
 13716                           
 13717                           
 13718                           ;mcc_generated_files/i2c1_master.c: 637:     PIE3bits.SSP1IE = 0;
 13719  16B3  002E               	movlb	14	; select bank14
 13720  16B4  1019               	bcf	25,0	;volatile
 13721  16B5                     l695:
 13722  16B5  0008               	return
 13723  16B6                     __end_of_I2C1_MasterDisableIrq:
 13724                           
 13725                           	psect	text58
 13726  16B0                     __ptext58:	
 13727 ;; *************** function _I2C1_MasterClose *****************
 13728 ;; Defined at:
 13729 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 13730 ;; Parameters:    Size  Location     Type
 13731 ;;		None
 13732 ;; Auto vars:     Size  Location     Type
 13733 ;;		None
 13734 ;; Return value:  Size  Location     Type
 13735 ;;                  1    wreg      void 
 13736 ;; Registers used:
 13737 ;;		None
 13738 ;; Tracked objects:
 13739 ;;		On entry : 0/0
 13740 ;;		On exit  : 0/0
 13741 ;;		Unchanged: 0/0
 13742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13747 ;;Total ram usage:        0 bytes
 13748 ;; Hardware stack levels used: 1
 13749 ;; Hardware stack levels required when called: 10
 13750 ;; This function calls:
 13751 ;;		Nothing
 13752 ;; This function is called by:
 13753 ;;		_I2C1_Close
 13754 ;; This function uses a non-reentrant model
 13755 ;;
 13756                           
 13757                           
 13758                           ;psect for function _I2C1_MasterClose
 13759  16B0                     _I2C1_MasterClose:
 13760  16B0                     l4347:	
 13761                           ;incstack = 0
 13762 ;; hardware stack exceeded
 13763                           ; Regs used in _I2C1_MasterClose: []
 13764                           
 13765                           
 13766                           ;mcc_generated_files/i2c1_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 13767  16B0  0023               	movlb	3	; select bank3
 13768  16B1  1290               	bcf	16,5	;volatile
 13769  16B2                     l650:
 13770  16B2  0008               	return
 13771  16B3                     __end_of_I2C1_MasterClose:
 13772                           
 13773                           	psect	text59
 13774  16AD                     __ptext59:	
 13775 ;; *************** function _I2C1_MasterClearIrq *****************
 13776 ;; Defined at:
 13777 ;;		line 640 in file "mcc_generated_files/i2c1_master.c"
 13778 ;; Parameters:    Size  Location     Type
 13779 ;;		None
 13780 ;; Auto vars:     Size  Location     Type
 13781 ;;		None
 13782 ;; Return value:  Size  Location     Type
 13783 ;;                  1    wreg      void 
 13784 ;; Registers used:
 13785 ;;		None
 13786 ;; Tracked objects:
 13787 ;;		On entry : 0/0
 13788 ;;		On exit  : 0/0
 13789 ;;		Unchanged: 0/0
 13790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13795 ;;Total ram usage:        0 bytes
 13796 ;; Hardware stack levels used: 1
 13797 ;; Hardware stack levels required when called: 10
 13798 ;; This function calls:
 13799 ;;		Nothing
 13800 ;; This function is called by:
 13801 ;;		_I2C1_Open
 13802 ;;		_I2C1_Close
 13803 ;;		_I2C1_MasterFsm
 13804 ;; This function uses a non-reentrant model
 13805 ;;
 13806                           
 13807                           
 13808                           ;psect for function _I2C1_MasterClearIrq
 13809  16AD                     _I2C1_MasterClearIrq:
 13810  16AD                     l4129:	
 13811                           ;incstack = 0
 13812 ;; hardware stack exceeded
 13813                           ; Regs used in _I2C1_MasterClearIrq: []
 13814                           
 13815                           
 13816                           ;mcc_generated_files/i2c1_master.c: 642:     PIR3bits.SSP1IF = 0;
 13817  16AD  002E               	movlb	14	; select bank14
 13818  16AE  100F               	bcf	15,0	;volatile
 13819  16AF                     l698:
 13820  16AF  0008               	return
 13821  16B0                     __end_of_I2C1_MasterClearIrq:
 13822                           
 13823                           	psect	text60
 13824  05EF                     __ptext60:	
 13825 ;; *************** function _atoi *****************
 13826 ;; Defined at:
 13827 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
 13828 ;; Parameters:    Size  Location     Type
 13829 ;;  s               1    wreg     PTR const unsigned char 
 13830 ;;		 -> buffer2(20), 
 13831 ;; Auto vars:     Size  Location     Type
 13832 ;;  s               1   21[BANK1 ] PTR const unsigned char 
 13833 ;;		 -> buffer2(20), 
 13834 ;;  n               2   19[BANK1 ] int 
 13835 ;;  neg             2   12[BANK1 ] int 
 13836 ;; Return value:  Size  Location     Type
 13837 ;;                  2    6[BANK1 ] int 
 13838 ;; Registers used:
 13839 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13840 ;; Tracked objects:
 13841 ;;		On entry : 0/0
 13842 ;;		On exit  : 0/0
 13843 ;;		Unchanged: 0/0
 13844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13845 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13846 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 13847 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13848 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
 13849 ;;Total ram usage:       16 bytes
 13850 ;; Hardware stack levels used: 1
 13851 ;; Hardware stack levels required when called: 11
 13852 ;; This function calls:
 13853 ;;		___wmul
 13854 ;;		_isdigit
 13855 ;;		_isspace
 13856 ;; This function is called by:
 13857 ;;		_main
 13858 ;; This function uses a non-reentrant model
 13859 ;;
 13860                           
 13861                           
 13862                           ;psect for function _atoi
 13863  05EF                     _atoi:
 13864                           
 13865                           ;incstack = 0
 13866                           ; Regs used in _atoi: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13867                           ;atoi@s stored from wreg
 13868  05EF  0021               	movlb	1	; select bank1
 13869  05F0  00B5               	movwf	atoi@s^(0+128)
 13870  05F1                     l5219:
 13871  05F1  01B3               	clrf	atoi@n^(0+128)
 13872  05F2  01B4               	clrf	(atoi@n+1)^(0+128)
 13873  05F3  01AC               	clrf	atoi@neg^(0+128)
 13874  05F4  01AD               	clrf	(atoi@neg+1)^(0+128)
 13875  05F5  2DFA               	goto	l5223
 13876  05F6                     l5221:
 13877  05F6  3001               	movlw	1
 13878  05F7  00A8               	movwf	??_atoi^(0+128)
 13879  05F8  0828               	movf	??_atoi^(0+128),w
 13880  05F9  07B5               	addwf	atoi@s^(0+128),f
 13881  05FA                     l5223:
 13882  05FA  01B2               	clrf	_atoi$2768^(0+128)
 13883  05FB  0AB2               	incf	_atoi$2768^(0+128),f
 13884  05FC                     l5225:
 13885  05FC  0835               	movf	atoi@s^(0+128),w
 13886  05FD  0086               	movwf	6
 13887  05FE  3001               	movlw	1	; select bank2/3
 13888  05FF  0087               	movwf	7
 13889  0600  3020               	movlw	32
 13890  0601  0601               	xorwf	1,w
 13891  0602  1903               	btfsc	3,2
 13892  0603  2E05               	goto	u3011
 13893  0604  2E06               	goto	u3010
 13894  0605                     u3011:
 13895  0605  2E1B               	goto	l5231
 13896  0606                     u3010:
 13897  0606                     l5227:
 13898  0606  0835               	movf	atoi@s^(0+128),w
 13899  0607  0086               	movwf	6
 13900  0608  3001               	movlw	1	; select bank2/3
 13901  0609  0087               	movwf	7
 13902  060A  0801               	movf	1,w
 13903  060B  3EF7               	addlw	247
 13904  060C  00A8               	movwf	??_atoi^(0+128)
 13905  060D  30FF               	movlw	255
 13906  060E  1803               	skipnc
 13907  060F  3000               	movlw	0
 13908  0610  00A9               	movwf	(??_atoi^(0+128)+1)
 13909  0611  3000               	movlw	0
 13910  0612  0229               	subwf	(??_atoi+1)^(0+128),w
 13911  0613  3005               	movlw	5
 13912  0614  1903               	skipnz
 13913  0615  0228               	subwf	??_atoi^(0+128),w
 13914  0616  1C03               	skipc
 13915  0617  2E19               	goto	u3021
 13916  0618  2E1A               	goto	u3020
 13917  0619                     u3021:
 13918  0619  2E1B               	goto	l5231
 13919  061A                     u3020:
 13920  061A                     l5229:
 13921  061A  01B2               	clrf	_atoi$2768^(0+128)
 13922  061B                     l5231:
 13923  061B  0832               	movf	_atoi$2768^(0+128),w
 13924  061C  00A8               	movwf	??_atoi^(0+128)
 13925  061D  01A9               	clrf	(??_atoi^(0+128)+1)
 13926  061E  0828               	movf	??_atoi^(0+128),w
 13927  061F  00AE               	movwf	_atoi$2767^(0+128)
 13928  0620  0829               	movf	(??_atoi+1)^(0+128),w
 13929  0621  00AF               	movwf	(_atoi$2767+1)^(0+128)
 13930  0622                     l5235:
 13931  0622  082E               	movf	_atoi$2767^(0+128),w
 13932  0623  042F               	iorwf	(_atoi$2767+1)^(0+128),w
 13933  0624  1D03               	btfss	3,2
 13934  0625  2E27               	goto	u3031
 13935  0626  2E28               	goto	u3030
 13936  0627                     u3031:
 13937  0627  2DF6               	goto	l5221
 13938  0628                     u3030:
 13939  0628  2E32               	goto	l5241
 13940  0629                     l5237:
 13941  0629  3001               	movlw	1
 13942  062A  00AC               	movwf	atoi@neg^(0+128)
 13943  062B  3000               	movlw	0
 13944  062C  00AD               	movwf	(atoi@neg^(0+128)+1)
 13945  062D                     l5239:
 13946  062D  3001               	movlw	1
 13947  062E  00A8               	movwf	??_atoi^(0+128)
 13948  062F  0828               	movf	??_atoi^(0+128),w
 13949  0630  07B5               	addwf	atoi@s^(0+128),f
 13950  0631  2E64               	goto	l5247
 13951  0632                     l5241:
 13952  0632  0835               	movf	atoi@s^(0+128),w
 13953  0633  0086               	movwf	6
 13954  0634  3001               	movlw	1	; select bank2/3
 13955  0635  0087               	movwf	7
 13956  0636  0801               	movf	1,w
 13957  0637  00A8               	movwf	??_atoi^(0+128)
 13958  0638  01A9               	clrf	(??_atoi^(0+128)+1)
 13959                           
 13960                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13961                           ; Switch size 1, requested type "simple"
 13962                           ; Number of cases is 1, Range of values is 0 to 0
 13963                           ; switch strategies available:
 13964                           ; Name         Instructions Cycles
 13965                           ; simple_byte            4     3 (average)
 13966                           ; direct_byte            8     6 (fixed)
 13967                           ; jumptable            260     6 (fixed)
 13968                           ;	Chosen strategy is simple_byte
 13969  0639  0829               	movf	(??_atoi+1)^(0+128),w
 13970  063A  3A00               	xorlw	0	; case 0
 13971  063B  1903               	skipnz
 13972  063C  2E3E               	goto	l5833
 13973  063D  2E64               	goto	l5247
 13974  063E                     l5833:
 13975                           
 13976                           ; Switch size 1, requested type "simple"
 13977                           ; Number of cases is 2, Range of values is 43 to 45
 13978                           ; switch strategies available:
 13979                           ; Name         Instructions Cycles
 13980                           ; simple_byte            7     4 (average)
 13981                           ; direct_byte           15     9 (fixed)
 13982                           ; jumptable            263     9 (fixed)
 13983                           ;	Chosen strategy is simple_byte
 13984  063E  0828               	movf	??_atoi^(0+128),w
 13985  063F  3A2B               	xorlw	43	; case 43
 13986  0640  1903               	skipnz
 13987  0641  2E2D               	goto	l5239
 13988  0642  3A06               	xorlw	6	; case 45
 13989  0643  1903               	skipnz
 13990  0644  2E29               	goto	l5237
 13991  0645  2E64               	goto	l5247
 13992  0646                     l5243:
 13993  0646  0835               	movf	atoi@s^(0+128),w
 13994  0647  0086               	movwf	6
 13995  0648  3001               	movlw	1	; select bank2/3
 13996  0649  0087               	movwf	7
 13997  064A  0834               	movf	(atoi@n+1)^(0+128),w
 13998  064B  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 13999  064C  0833               	movf	atoi@n^(0+128),w
 14000  064D  00A0               	movwf	___wmul@multiplier^(0+128)
 14001  064E  300A               	movlw	10
 14002  064F  00A2               	movwf	___wmul@multiplicand^(0+128)
 14003  0650  3000               	movlw	0
 14004  0651  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 14005  0652  3189  21A3  3185   	fcall	___wmul
 14006  0655  0021               	movlb	1	; select bank1
 14007  0656  0821               	movf	(?___wmul+1)^(0+128),w
 14008  0657  00A9               	movwf	(??_atoi^(0+128)+1)
 14009  0658  0801               	movf	1,w
 14010  0659  0220               	subwf	?___wmul^(0+128),w
 14011  065A  00A8               	movwf	??_atoi^(0+128)
 14012  065B  1C03               	skipc
 14013  065C  03A9               	decf	(??_atoi^(0+128)+1),f
 14014  065D  0828               	movf	??_atoi^(0+128),w
 14015  065E  3E30               	addlw	48
 14016  065F  00B3               	movwf	atoi@n^(0+128)
 14017  0660  3000               	movlw	0
 14018  0661  3D29               	addwfc	(??_atoi+1)^(0+128),w
 14019  0662  00B4               	movwf	(atoi@n+1)^(0+128)
 14020  0663  2E2D               	goto	l5239
 14021  0664                     l5247:
 14022  0664  0835               	movf	atoi@s^(0+128),w
 14023  0665  0086               	movwf	6
 14024  0666  3001               	movlw	1	; select bank2/3
 14025  0667  0087               	movwf	7
 14026  0668  0801               	movf	1,w
 14027  0669  3ED0               	addlw	208
 14028  066A  00A8               	movwf	??_atoi^(0+128)
 14029  066B  30FF               	movlw	255
 14030  066C  1803               	skipnc
 14031  066D  3000               	movlw	0
 14032  066E  00A9               	movwf	(??_atoi^(0+128)+1)
 14033  066F  3000               	movlw	0
 14034  0670  0229               	subwf	(??_atoi+1)^(0+128),w
 14035  0671  300A               	movlw	10
 14036  0672  1903               	skipnz
 14037  0673  0228               	subwf	??_atoi^(0+128),w
 14038  0674  1C03               	skipc
 14039  0675  2E77               	goto	u3041
 14040  0676  2E79               	goto	u3040
 14041  0677                     u3041:
 14042  0677  3001               	movlw	1
 14043  0678  2E7A               	goto	u3050
 14044  0679                     u3040:
 14045  0679  3000               	movlw	0
 14046  067A                     u3050:
 14047  067A  00AA               	movwf	(??_atoi+2)^(0+128)
 14048  067B  01AB               	clrf	((??_atoi+2)^(0+128)+1)
 14049  067C  082A               	movf	(??_atoi+2)^(0+128),w
 14050  067D  00B0               	movwf	_atoi$2769^(0+128)
 14051  067E  082B               	movf	(??_atoi+3)^(0+128),w
 14052  067F  00B1               	movwf	(_atoi$2769+1)^(0+128)
 14053  0680                     l5251:
 14054  0680  0830               	movf	_atoi$2769^(0+128),w
 14055  0681  0431               	iorwf	(_atoi$2769+1)^(0+128),w
 14056  0682  1D03               	btfss	3,2
 14057  0683  2E85               	goto	u3061
 14058  0684  2E86               	goto	u3060
 14059  0685                     u3061:
 14060  0685  2E46               	goto	l5243
 14061  0686                     u3060:
 14062  0686                     l5253:
 14063  0686  082C               	movf	atoi@neg^(0+128),w
 14064  0687  042D               	iorwf	(atoi@neg+1)^(0+128),w
 14065  0688  1D03               	btfss	3,2
 14066  0689  2E8B               	goto	u3071
 14067  068A  2E8C               	goto	u3070
 14068  068B                     u3071:
 14069  068B  2E98               	goto	l5257
 14070  068C                     u3070:
 14071  068C                     l5255:
 14072  068C  0933               	comf	atoi@n^(0+128),w
 14073  068D  00A8               	movwf	??_atoi^(0+128)
 14074  068E  0934               	comf	(atoi@n+1)^(0+128),w
 14075  068F  00A9               	movwf	(??_atoi^(0+128)+1)
 14076  0690  0AA8               	incf	??_atoi^(0+128),f
 14077  0691  1903               	skipnz
 14078  0692  0AA9               	incf	(??_atoi^(0+128)+1),f
 14079  0693  0828               	movf	??_atoi^(0+128),w
 14080  0694  00A6               	movwf	?_atoi^(0+128)
 14081  0695  0829               	movf	(??_atoi+1)^(0+128),w
 14082  0696  00A7               	movwf	(?_atoi+1)^(0+128)
 14083  0697  2E9C               	goto	l1888
 14084  0698                     l5257:
 14085  0698  0834               	movf	(atoi@n+1)^(0+128),w
 14086  0699  00A7               	movwf	(?_atoi+1)^(0+128)
 14087  069A  0833               	movf	atoi@n^(0+128),w
 14088  069B  00A6               	movwf	?_atoi^(0+128)
 14089  069C                     l1888:
 14090  069C  0008               	return
 14091  069D                     __end_of_atoi:
 14092                           
 14093                           	psect	text61
 14094  09E4                     __ptext61:	
 14095 ;; *************** function _isspace *****************
 14096 ;; Defined at:
 14097 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
 14098 ;; Parameters:    Size  Location     Type
 14099 ;;  c               2    0[BANK1 ] int 
 14100 ;; Auto vars:     Size  Location     Type
 14101 ;;		None
 14102 ;; Return value:  Size  Location     Type
 14103 ;;                  2    0[BANK1 ] int 
 14104 ;; Registers used:
 14105 ;;		wreg, status,2, status,0
 14106 ;; Tracked objects:
 14107 ;;		On entry : 0/0
 14108 ;;		On exit  : 0/0
 14109 ;;		Unchanged: 0/0
 14110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14111 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14112 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14113 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14114 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 14115 ;;Total ram usage:        5 bytes
 14116 ;; Hardware stack levels used: 1
 14117 ;; Hardware stack levels required when called: 10
 14118 ;; This function calls:
 14119 ;;		Nothing
 14120 ;; This function is called by:
 14121 ;;		_atoi
 14122 ;; This function uses a non-reentrant model
 14123 ;;
 14124                           
 14125                           
 14126                           ;psect for function _isspace
 14127  09E4                     _isspace:
 14128  09E4                     l4989:	
 14129                           ;incstack = 0
 14130                           ; Regs used in _isspace: [wreg+status,2+status,0]
 14131                           
 14132  09E4  0021               	movlb	1	; select bank1
 14133  09E5  01A4               	clrf	_isspace$2785^(0+128)
 14134  09E6  0AA4               	incf	_isspace$2785^(0+128),f
 14135  09E7                     l4991:
 14136  09E7  3020               	movlw	32
 14137  09E8  0620               	xorwf	isspace@c^(0+128),w
 14138  09E9  0421               	iorwf	(isspace@c+1)^(0+128),w
 14139  09EA  1903               	btfsc	3,2
 14140  09EB  29ED               	goto	u2751
 14141  09EC  29EE               	goto	u2750
 14142  09ED                     u2751:
 14143  09ED  29FE               	goto	l4997
 14144  09EE                     u2750:
 14145  09EE                     l4993:
 14146  09EE  0820               	movf	isspace@c^(0+128),w
 14147  09EF  3EF7               	addlw	247
 14148  09F0  00A2               	movwf	??_isspace^(0+128)
 14149  09F1  30FF               	movlw	255
 14150  09F2  3D21               	addwfc	(isspace@c+1)^(0+128),w
 14151  09F3  00A3               	movwf	(??_isspace+1)^(0+128)
 14152  09F4  3000               	movlw	0
 14153  09F5  0223               	subwf	(??_isspace+1)^(0+128),w
 14154  09F6  3005               	movlw	5
 14155  09F7  1903               	skipnz
 14156  09F8  0222               	subwf	??_isspace^(0+128),w
 14157  09F9  1C03               	skipc
 14158  09FA  29FC               	goto	u2761
 14159  09FB  29FD               	goto	u2760
 14160  09FC                     u2761:
 14161  09FC  29FE               	goto	l4997
 14162  09FD                     u2760:
 14163  09FD                     l4995:
 14164  09FD  01A4               	clrf	_isspace$2785^(0+128)
 14165  09FE                     l4997:
 14166  09FE  0824               	movf	_isspace$2785^(0+128),w
 14167  09FF  00A2               	movwf	??_isspace^(0+128)
 14168  0A00  01A3               	clrf	(??_isspace^(0+128)+1)
 14169  0A01  0822               	movf	??_isspace^(0+128),w
 14170  0A02  00A0               	movwf	?_isspace^(0+128)
 14171  0A03  0823               	movf	(??_isspace+1)^(0+128),w
 14172  0A04  00A1               	movwf	(?_isspace+1)^(0+128)
 14173  0A05                     l1899:
 14174  0A05  0008               	return
 14175  0A06                     __end_of_isspace:
 14176                           
 14177                           	psect	text62
 14178  08D0                     __ptext62:	
 14179 ;; *************** function _isdigit *****************
 14180 ;; Defined at:
 14181 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
 14182 ;; Parameters:    Size  Location     Type
 14183 ;;  c               2    0[BANK1 ] int 
 14184 ;; Auto vars:     Size  Location     Type
 14185 ;;		None
 14186 ;; Return value:  Size  Location     Type
 14187 ;;                  2    0[BANK1 ] int 
 14188 ;; Registers used:
 14189 ;;		wreg, status,2, status,0
 14190 ;; Tracked objects:
 14191 ;;		On entry : 0/0
 14192 ;;		On exit  : 0/0
 14193 ;;		Unchanged: 0/0
 14194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14195 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14197 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14198 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 14199 ;;Total ram usage:        6 bytes
 14200 ;; Hardware stack levels used: 1
 14201 ;; Hardware stack levels required when called: 10
 14202 ;; This function calls:
 14203 ;;		Nothing
 14204 ;; This function is called by:
 14205 ;;		_atoi
 14206 ;; This function uses a non-reentrant model
 14207 ;;
 14208                           
 14209                           
 14210                           ;psect for function _isdigit
 14211  08D0                     _isdigit:
 14212  08D0                     l5001:	
 14213                           ;incstack = 0
 14214                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 14215                           
 14216  08D0  0021               	movlb	1	; select bank1
 14217  08D1  0820               	movf	isdigit@c^(0+128),w
 14218  08D2  3ED0               	addlw	208
 14219  08D3  00A2               	movwf	??_isdigit^(0+128)
 14220  08D4  30FF               	movlw	255
 14221  08D5  3D21               	addwfc	(isdigit@c+1)^(0+128),w
 14222  08D6  00A3               	movwf	(??_isdigit+1)^(0+128)
 14223  08D7  3000               	movlw	0
 14224  08D8  0223               	subwf	(??_isdigit+1)^(0+128),w
 14225  08D9  300A               	movlw	10
 14226  08DA  1903               	skipnz
 14227  08DB  0222               	subwf	??_isdigit^(0+128),w
 14228  08DC  1C03               	skipc
 14229  08DD  28DF               	goto	u2771
 14230  08DE  28E1               	goto	u2770
 14231  08DF                     u2771:
 14232  08DF  3001               	movlw	1
 14233  08E0  28E2               	goto	u2780
 14234  08E1                     u2770:
 14235  08E1  3000               	movlw	0
 14236  08E2                     u2780:
 14237  08E2  00A4               	movwf	(??_isdigit+2)^(0+128)
 14238  08E3  01A5               	clrf	((??_isdigit+2)^(0+128)+1)
 14239  08E4  0824               	movf	(??_isdigit+2)^(0+128),w
 14240  08E5  00A0               	movwf	?_isdigit^(0+128)
 14241  08E6  0825               	movf	(??_isdigit+3)^(0+128),w
 14242  08E7  00A1               	movwf	(?_isdigit+1)^(0+128)
 14243  08E8                     l1891:
 14244  08E8  0008               	return
 14245  08E9                     __end_of_isdigit:
 14246                           
 14247                           	psect	text63
 14248  09A3                     __ptext63:	
 14249 ;; *************** function ___wmul *****************
 14250 ;; Defined at:
 14251 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 14252 ;; Parameters:    Size  Location     Type
 14253 ;;  multiplier      2    0[BANK1 ] unsigned int 
 14254 ;;  multiplicand    2    2[BANK1 ] unsigned int 
 14255 ;; Auto vars:     Size  Location     Type
 14256 ;;  product         2    4[BANK1 ] unsigned int 
 14257 ;; Return value:  Size  Location     Type
 14258 ;;                  2    0[BANK1 ] unsigned int 
 14259 ;; Registers used:
 14260 ;;		wreg, status,2, status,0
 14261 ;; Tracked objects:
 14262 ;;		On entry : 0/0
 14263 ;;		On exit  : 0/0
 14264 ;;		Unchanged: 0/0
 14265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14266 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14267 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14269 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 14270 ;;Total ram usage:        6 bytes
 14271 ;; Hardware stack levels used: 1
 14272 ;; Hardware stack levels required when called: 10
 14273 ;; This function calls:
 14274 ;;		Nothing
 14275 ;; This function is called by:
 14276 ;;		_atoi
 14277 ;; This function uses a non-reentrant model
 14278 ;;
 14279                           
 14280                           
 14281                           ;psect for function ___wmul
 14282  09A3                     ___wmul:
 14283  09A3                     l4921:	
 14284                           ;incstack = 0
 14285                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 14286                           
 14287  09A3  0021               	movlb	1	; select bank1
 14288  09A4  01A4               	clrf	___wmul@product^(0+128)
 14289  09A5  01A5               	clrf	(___wmul@product+1)^(0+128)
 14290  09A6                     l4923:
 14291  09A6  1C20               	btfss	___wmul@multiplier^(0+128),0
 14292  09A7  29A9               	goto	u2571
 14293  09A8  29AA               	goto	u2570
 14294  09A9                     u2571:
 14295  09A9  29AE               	goto	l1401
 14296  09AA                     u2570:
 14297  09AA                     l4925:
 14298  09AA  0822               	movf	___wmul@multiplicand^(0+128),w
 14299  09AB  07A4               	addwf	___wmul@product^(0+128),f
 14300  09AC  0823               	movf	(___wmul@multiplicand+1)^(0+128),w
 14301  09AD  3DA5               	addwfc	(___wmul@product+1)^(0+128),f
 14302  09AE                     l1401:
 14303  09AE  3001               	movlw	1
 14304  09AF                     u2585:
 14305  09AF  35A2               	lslf	___wmul@multiplicand^(0+128),f
 14306  09B0  0DA3               	rlf	(___wmul@multiplicand+1)^(0+128),f
 14307  09B1  0B89               	decfsz	9,f
 14308  09B2  29AF               	goto	u2585
 14309  09B3                     l4927:
 14310  09B3  3001               	movlw	1
 14311  09B4                     u2595:
 14312  09B4  36A1               	lsrf	(___wmul@multiplier+1)^(0+128),f
 14313  09B5  0CA0               	rrf	___wmul@multiplier^(0+128),f
 14314  09B6  0B89               	decfsz	9,f
 14315  09B7  29B4               	goto	u2595
 14316  09B8                     l4929:
 14317  09B8  0820               	movf	___wmul@multiplier^(0+128),w
 14318  09B9  0421               	iorwf	(___wmul@multiplier+1)^(0+128),w
 14319  09BA  1D03               	btfss	3,2
 14320  09BB  29BD               	goto	u2601
 14321  09BC  29BE               	goto	u2600
 14322  09BD                     u2601:
 14323  09BD  29A6               	goto	l4923
 14324  09BE                     u2600:
 14325  09BE                     l4931:
 14326  09BE  0825               	movf	(___wmul@product+1)^(0+128),w
 14327  09BF  00A1               	movwf	(?___wmul+1)^(0+128)
 14328  09C0  0824               	movf	___wmul@product^(0+128),w
 14329  09C1  00A0               	movwf	?___wmul^(0+128)
 14330  09C2                     l1403:
 14331  09C2  0008               	return
 14332  09C3                     __end_of___wmul:
 14333                           
 14334                           	psect	text64
 14335  0987                     __ptext64:	
 14336 ;; *************** function _SYSTEM_Initialize *****************
 14337 ;; Defined at:
 14338 ;;		line 50 in file "mcc_generated_files/mcc.c"
 14339 ;; Parameters:    Size  Location     Type
 14340 ;;		None
 14341 ;; Auto vars:     Size  Location     Type
 14342 ;;		None
 14343 ;; Return value:  Size  Location     Type
 14344 ;;                  1    wreg      void 
 14345 ;; Registers used:
 14346 ;;		wreg, status,2, status,0, pclath, cstack
 14347 ;; Tracked objects:
 14348 ;;		On entry : 0/0
 14349 ;;		On exit  : 0/0
 14350 ;;		Unchanged: 0/0
 14351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14356 ;;Total ram usage:        0 bytes
 14357 ;; Hardware stack levels used: 1
 14358 ;; Hardware stack levels required when called: 12
 14359 ;; This function calls:
 14360 ;;		_ADCC_Initialize
 14361 ;;		_EUSART_Initialize
 14362 ;;		_I2C1_Initialize
 14363 ;;		_OSCILLATOR_Initialize
 14364 ;;		_PIN_MANAGER_Initialize
 14365 ;;		_PMD_Initialize
 14366 ;;		_PWM5_Initialize
 14367 ;;		_TMR0_Initialize
 14368 ;;		_TMR2_Initialize
 14369 ;; This function is called by:
 14370 ;;		_main
 14371 ;; This function uses a non-reentrant model
 14372 ;;
 14373                           
 14374                           
 14375                           ;psect for function _SYSTEM_Initialize
 14376  0987                     _SYSTEM_Initialize:
 14377  0987                     l5079:	
 14378                           ;incstack = 0
 14379                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 14380                           
 14381                           
 14382                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 14383  0987  3197  273F  3189   	fcall	_PMD_Initialize
 14384  098A                     l5081:
 14385                           
 14386                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
 14387  098A  3197  2773  3189   	fcall	_I2C1_Initialize
 14388  098D                     l5083:
 14389                           
 14390                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 14391  098D  318C  2421  3189   	fcall	_PIN_MANAGER_Initialize
 14392  0990                     l5085:
 14393                           
 14394                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 14395  0990  3197  277C  3189   	fcall	_OSCILLATOR_Initialize
 14396  0993                     l5087:
 14397                           
 14398                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 14399  0993  3188  2086  3189   	fcall	_ADCC_Initialize
 14400  0996                     l5089:
 14401                           
 14402                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
 14403  0996  3197  27C0  3189   	fcall	_TMR2_Initialize
 14404  0999                     l5091:
 14405                           
 14406                           ;mcc_generated_files/mcc.c: 58:     PWM5_Initialize();
 14407  0999  3197  278E  3189   	fcall	_PWM5_Initialize
 14408  099C                     l5093:
 14409                           
 14410                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
 14411  099C  3188  205A  3189   	fcall	_TMR0_Initialize
 14412  099F                     l5095:
 14413                           
 14414                           ;mcc_generated_files/mcc.c: 60:     EUSART_Initialize();
 14415  099F  318D  251A  3189   	fcall	_EUSART_Initialize
 14416  09A2                     l367:
 14417  09A2  0008               	return
 14418  09A3                     __end_of_SYSTEM_Initialize:
 14419                           
 14420                           	psect	text65
 14421  17C0                     __ptext65:	
 14422 ;; *************** function _TMR2_Initialize *****************
 14423 ;; Defined at:
 14424 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 14425 ;; Parameters:    Size  Location     Type
 14426 ;;		None
 14427 ;; Auto vars:     Size  Location     Type
 14428 ;;		None
 14429 ;; Return value:  Size  Location     Type
 14430 ;;                  1    wreg      void 
 14431 ;; Registers used:
 14432 ;;		wreg, status,2
 14433 ;; Tracked objects:
 14434 ;;		On entry : 0/0
 14435 ;;		On exit  : 0/0
 14436 ;;		Unchanged: 0/0
 14437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14442 ;;Total ram usage:        0 bytes
 14443 ;; Hardware stack levels used: 1
 14444 ;; Hardware stack levels required when called: 10
 14445 ;; This function calls:
 14446 ;;		Nothing
 14447 ;; This function is called by:
 14448 ;;		_SYSTEM_Initialize
 14449 ;; This function uses a non-reentrant model
 14450 ;;
 14451                           
 14452                           
 14453                           ;psect for function _TMR2_Initialize
 14454  17C0                     _TMR2_Initialize:
 14455  17C0                     l4801:	
 14456                           ;incstack = 0
 14457                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 14458                           
 14459                           
 14460                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 14461  17C0  3001               	movlw	1
 14462  17C1  0025               	movlb	5	; select bank5
 14463  17C2  0090               	movwf	16	;volatile
 14464  17C3                     l4803:
 14465                           
 14466                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 14467  17C3  018F               	clrf	15	;volatile
 14468  17C4                     l4805:
 14469                           
 14470                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 14471  17C4  0191               	clrf	17	;volatile
 14472                           
 14473                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x0F;
 14474  17C5  300F               	movlw	15
 14475  17C6  008D               	movwf	13	;volatile
 14476  17C7                     l4807:
 14477                           
 14478                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 14479  17C7  018C               	clrf	12	;volatile
 14480  17C8                     l4809:
 14481                           
 14482                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 14483  17C8  002E               	movlb	14	; select bank14
 14484  17C9  1090               	bcf	16,1	;volatile
 14485  17CA                     l4811:
 14486                           
 14487                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xF0;
 14488  17CA  30F0               	movlw	240
 14489  17CB  0025               	movlb	5	; select bank5
 14490  17CC  008E               	movwf	14	;volatile
 14491  17CD                     l1074:
 14492  17CD  0008               	return
 14493  17CE                     __end_of_TMR2_Initialize:
 14494                           
 14495                           	psect	text66
 14496  085A                     __ptext66:	
 14497 ;; *************** function _TMR0_Initialize *****************
 14498 ;; Defined at:
 14499 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 14500 ;; Parameters:    Size  Location     Type
 14501 ;;		None
 14502 ;; Auto vars:     Size  Location     Type
 14503 ;;		None
 14504 ;; Return value:  Size  Location     Type
 14505 ;;                  1    wreg      void 
 14506 ;; Registers used:
 14507 ;;		wreg, status,2, status,0, pclath, cstack
 14508 ;; Tracked objects:
 14509 ;;		On entry : 0/0
 14510 ;;		On exit  : 0/0
 14511 ;;		Unchanged: 0/0
 14512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14517 ;;Total ram usage:        0 bytes
 14518 ;; Hardware stack levels used: 1
 14519 ;; Hardware stack levels required when called: 11
 14520 ;; This function calls:
 14521 ;;		_TMR0_SetInterruptHandler
 14522 ;; This function is called by:
 14523 ;;		_SYSTEM_Initialize
 14524 ;; This function uses a non-reentrant model
 14525 ;;
 14526                           
 14527                           
 14528                           ;psect for function _TMR0_Initialize
 14529  085A                     _TMR0_Initialize:
 14530  085A                     l4821:	
 14531                           ;incstack = 0
 14532                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 14533                           
 14534                           
 14535                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x6F;
 14536  085A  306F               	movlw	111
 14537  085B  0020               	movlb	0	; select bank0
 14538  085C  009F               	movwf	31	;volatile
 14539                           
 14540                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0x30;
 14541  085D  3030               	movlw	48
 14542  085E  009D               	movwf	29	;volatile
 14543  085F                     l4823:
 14544                           
 14545                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
 14546  085F  019C               	clrf	28	;volatile
 14547  0860                     l4825:
 14548                           
 14549                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
 14550  0860  002E               	movlb	14	; select bank14
 14551  0861  128C               	bcf	12,5	;volatile
 14552  0862                     l4827:
 14553                           
 14554                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
 14555  0862  1696               	bsf	22,5	;volatile
 14556  0863                     l4829:
 14557                           
 14558                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 14559  0863  30FF               	movlw	low _TMR0_DefaultInterruptHandler
 14560  0864  0021               	movlb	1	; select bank1
 14561  0865  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
 14562  0866  3007               	movlw	high _TMR0_DefaultInterruptHandler
 14563  0867  00A1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
 14564  0868  3197  271A  3188   	fcall	_TMR0_SetInterruptHandler
 14565  086B                     l4831:
 14566                           
 14567                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
 14568  086B  3080               	movlw	128
 14569  086C  0020               	movlb	0	; select bank0
 14570  086D  009E               	movwf	30	;volatile
 14571  086E                     l1203:
 14572  086E  0008               	return
 14573  086F                     __end_of_TMR0_Initialize:
 14574                           
 14575                           	psect	text67
 14576  171A                     __ptext67:	
 14577 ;; *************** function _TMR0_SetInterruptHandler *****************
 14578 ;; Defined at:
 14579 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 14580 ;; Parameters:    Size  Location     Type
 14581 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 14582 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 14583 ;; Auto vars:     Size  Location     Type
 14584 ;;		None
 14585 ;; Return value:  Size  Location     Type
 14586 ;;                  1    wreg      void 
 14587 ;; Registers used:
 14588 ;;		wreg
 14589 ;; Tracked objects:
 14590 ;;		On entry : 0/0
 14591 ;;		On exit  : 0/0
 14592 ;;		Unchanged: 0/0
 14593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14594 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14597 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14598 ;;Total ram usage:        2 bytes
 14599 ;; Hardware stack levels used: 1
 14600 ;; Hardware stack levels required when called: 10
 14601 ;; This function calls:
 14602 ;;		Nothing
 14603 ;; This function is called by:
 14604 ;;		_TMR0_Initialize
 14605 ;; This function uses a non-reentrant model
 14606 ;;
 14607                           
 14608                           
 14609                           ;psect for function _TMR0_SetInterruptHandler
 14610  171A                     _TMR0_SetInterruptHandler:
 14611  171A                     l4689:	
 14612                           ;incstack = 0
 14613                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 14614                           
 14615                           
 14616                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 14617  171A  0021               	movlb	1	; select bank1
 14618  171B  0821               	movf	(TMR0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 14619  171C  00E9               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
 14620  171D  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler^(0+128),w
 14621  171E  00E8               	movwf	_TMR0_InterruptHandler^(0+128)
 14622  171F                     l1225:
 14623  171F  0008               	return
 14624  1720                     __end_of_TMR0_SetInterruptHandler:
 14625                           
 14626                           	psect	text68
 14627  178E                     __ptext68:	
 14628 ;; *************** function _PWM5_Initialize *****************
 14629 ;; Defined at:
 14630 ;;		line 64 in file "mcc_generated_files/pwm5.c"
 14631 ;; Parameters:    Size  Location     Type
 14632 ;;		None
 14633 ;; Auto vars:     Size  Location     Type
 14634 ;;		None
 14635 ;; Return value:  Size  Location     Type
 14636 ;;                  1    wreg      void 
 14637 ;; Registers used:
 14638 ;;		wreg, status,2, status,0
 14639 ;; Tracked objects:
 14640 ;;		On entry : 0/0
 14641 ;;		On exit  : 0/0
 14642 ;;		Unchanged: 0/0
 14643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14648 ;;Total ram usage:        0 bytes
 14649 ;; Hardware stack levels used: 1
 14650 ;; Hardware stack levels required when called: 10
 14651 ;; This function calls:
 14652 ;;		Nothing
 14653 ;; This function is called by:
 14654 ;;		_SYSTEM_Initialize
 14655 ;; This function uses a non-reentrant model
 14656 ;;
 14657                           
 14658                           
 14659                           ;psect for function _PWM5_Initialize
 14660  178E                     _PWM5_Initialize:
 14661  178E                     l4813:	
 14662                           ;incstack = 0
 14663                           ; Regs used in _PWM5_Initialize: [wreg+status,2+status,0]
 14664                           
 14665                           
 14666                           ;mcc_generated_files/pwm5.c: 69:  CCP5CON = 0x8F;
 14667  178E  308F               	movlw	143
 14668  178F  0026               	movlb	6	; select bank6
 14669  1790  009E               	movwf	30	;volatile
 14670  1791                     l4815:
 14671                           
 14672                           ;mcc_generated_files/pwm5.c: 72:  CCPR5H = 0x00;
 14673  1791  019D               	clrf	29	;volatile
 14674  1792                     l4817:
 14675                           
 14676                           ;mcc_generated_files/pwm5.c: 75:  CCPR5L = 0x00;
 14677  1792  019C               	clrf	28	;volatile
 14678  1793                     l4819:
 14679                           
 14680                           ;mcc_generated_files/pwm5.c: 78:  CCPTMRS1bits.C5TSEL = 0x1;
 14681  1793  0024               	movlb	4	; select bank4
 14682  1794  081F               	movf	31,w	;volatile
 14683  1795  39FC               	andlw	-4
 14684  1796  3801               	iorlw	1
 14685  1797  009F               	movwf	31	;volatile
 14686  1798                     l1241:
 14687  1798  0008               	return
 14688  1799                     __end_of_PWM5_Initialize:
 14689                           
 14690                           	psect	text69
 14691  173F                     __ptext69:	
 14692 ;; *************** function _PMD_Initialize *****************
 14693 ;; Defined at:
 14694 ;;		line 77 in file "mcc_generated_files/mcc.c"
 14695 ;; Parameters:    Size  Location     Type
 14696 ;;		None
 14697 ;; Auto vars:     Size  Location     Type
 14698 ;;		None
 14699 ;; Return value:  Size  Location     Type
 14700 ;;                  1    wreg      void 
 14701 ;; Registers used:
 14702 ;;		status,2
 14703 ;; Tracked objects:
 14704 ;;		On entry : 0/0
 14705 ;;		On exit  : 0/0
 14706 ;;		Unchanged: 0/0
 14707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14712 ;;Total ram usage:        0 bytes
 14713 ;; Hardware stack levels used: 1
 14714 ;; Hardware stack levels required when called: 10
 14715 ;; This function calls:
 14716 ;;		Nothing
 14717 ;; This function is called by:
 14718 ;;		_SYSTEM_Initialize
 14719 ;; This function uses a non-reentrant model
 14720 ;;
 14721                           
 14722                           
 14723                           ;psect for function _PMD_Initialize
 14724  173F                     _PMD_Initialize:
 14725  173F                     l4783:	
 14726                           ;incstack = 0
 14727                           ; Regs used in _PMD_Initialize: [status,2]
 14728                           
 14729                           
 14730                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
 14731  173F  002F               	movlb	15	; select bank15
 14732  1740  0196               	clrf	22	;volatile
 14733                           
 14734                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
 14735  1741  0197               	clrf	23	;volatile
 14736                           
 14737                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
 14738  1742  0198               	clrf	24	;volatile
 14739                           
 14740                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
 14741  1743  0199               	clrf	25	;volatile
 14742                           
 14743                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
 14744  1744  019A               	clrf	26	;volatile
 14745                           
 14746                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
 14747  1745  019B               	clrf	27	;volatile
 14748  1746                     l373:
 14749  1746  0008               	return
 14750  1747                     __end_of_PMD_Initialize:
 14751                           
 14752                           	psect	text70
 14753  0C21                     __ptext70:	
 14754 ;; *************** function _PIN_MANAGER_Initialize *****************
 14755 ;; Defined at:
 14756 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 14757 ;; Parameters:    Size  Location     Type
 14758 ;;		None
 14759 ;; Auto vars:     Size  Location     Type
 14760 ;;		None
 14761 ;; Return value:  Size  Location     Type
 14762 ;;                  1    wreg      void 
 14763 ;; Registers used:
 14764 ;;		wreg, status,2
 14765 ;; Tracked objects:
 14766 ;;		On entry : 0/0
 14767 ;;		On exit  : 0/0
 14768 ;;		Unchanged: 0/0
 14769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14774 ;;Total ram usage:        0 bytes
 14775 ;; Hardware stack levels used: 1
 14776 ;; Hardware stack levels required when called: 10
 14777 ;; This function calls:
 14778 ;;		Nothing
 14779 ;; This function is called by:
 14780 ;;		_SYSTEM_Initialize
 14781 ;; This function uses a non-reentrant model
 14782 ;;
 14783                           
 14784                           
 14785                           ;psect for function _PIN_MANAGER_Initialize
 14786  0C21                     _PIN_MANAGER_Initialize:
 14787  0C21                     l4741:	
 14788                           ;incstack = 0
 14789                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 14790                           
 14791                           
 14792                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 14793  0C21  0020               	movlb	0	; select bank0
 14794  0C22  0196               	clrf	22	;volatile
 14795                           
 14796                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 14797  0C23  0197               	clrf	23	;volatile
 14798                           
 14799                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 14800  0C24  0198               	clrf	24	;volatile
 14801  0C25                     l4743:
 14802                           
 14803                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xF0;
 14804  0C25  30F0               	movlw	240
 14805  0C26  0091               	movwf	17	;volatile
 14806  0C27                     l4745:
 14807                           
 14808                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
 14809  0C27  30FF               	movlw	255
 14810  0C28  0092               	movwf	18	;volatile
 14811  0C29                     l4747:
 14812                           
 14813                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x7E;
 14814  0C29  307E               	movlw	126
 14815  0C2A  0093               	movwf	19	;volatile
 14816  0C2B                     l4749:
 14817                           
 14818                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xA5;
 14819  0C2B  30A5               	movlw	165
 14820  0C2C  003E               	movlb	30	; select bank30
 14821  0C2D  00CE               	movwf	78	;volatile
 14822  0C2E                     l4751:
 14823                           
 14824                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xFF;
 14825  0C2E  30FF               	movlw	255
 14826  0C2F  00C3               	movwf	67	;volatile
 14827  0C30                     l4753:
 14828                           
 14829                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0xD0;
 14830  0C30  30D0               	movlw	208
 14831  0C31  00B8               	movwf	56	;volatile
 14832                           
 14833                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
 14834  0C32  01E5               	clrf	101	;volatile
 14835                           
 14836                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
 14837  0C33  01C4               	clrf	68	;volatile
 14838                           
 14839                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
 14840  0C34  01B9               	clrf	57	;volatile
 14841                           
 14842                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x00;
 14843  0C35  01CF               	clrf	79	;volatile
 14844                           
 14845                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
 14846  0C36  01BA               	clrf	58	;volatile
 14847                           
 14848                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
 14849  0C37  01C5               	clrf	69	;volatile
 14850                           
 14851                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
 14852  0C38  01D0               	clrf	80	;volatile
 14853  0C39                     l4755:
 14854                           
 14855                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0xFF;
 14856  0C39  30FF               	movlw	255
 14857  0C3A  00BB               	movwf	59	;volatile
 14858  0C3B                     l4757:
 14859                           
 14860                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xFF;
 14861  0C3B  30FF               	movlw	255
 14862  0C3C  00C6               	movwf	70	;volatile
 14863  0C3D                     l4759:
 14864                           
 14865                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
 14866  0C3D  30FF               	movlw	255
 14867  0C3E  00D1               	movwf	81	;volatile
 14868  0C3F                     l4761:
 14869                           
 14870                           ;mcc_generated_files/pin_manager.c: 103:     INLVLA = 0xFF;
 14871  0C3F  30FF               	movlw	255
 14872  0C40  00BC               	movwf	60	;volatile
 14873  0C41                     l4763:
 14874                           
 14875                           ;mcc_generated_files/pin_manager.c: 104:     INLVLB = 0xFF;
 14876  0C41  30FF               	movlw	255
 14877  0C42  00C7               	movwf	71	;volatile
 14878  0C43                     l4765:
 14879                           
 14880                           ;mcc_generated_files/pin_manager.c: 105:     INLVLC = 0xFF;
 14881  0C43  30FF               	movlw	255
 14882  0C44  00D2               	movwf	82	;volatile
 14883  0C45                     l4767:
 14884                           
 14885                           ;mcc_generated_files/pin_manager.c: 106:     INLVLE = 0x08;
 14886  0C45  3008               	movlw	8
 14887  0C46  00E8               	movwf	104	;volatile
 14888  0C47                     l4769:
 14889                           
 14890                           ;mcc_generated_files/pin_manager.c: 115:     RC0PPS = 0x10;
 14891  0C47  3010               	movlw	16
 14892  0C48  00A0               	movwf	32	;volatile
 14893  0C49                     l4771:
 14894                           
 14895                           ;mcc_generated_files/pin_manager.c: 116:     RXPPS = 0x11;
 14896  0C49  3011               	movlw	17
 14897  0C4A  003D               	movlb	29	; select bank29
 14898  0C4B  00CB               	movwf	75	;volatile
 14899  0C4C                     l4773:
 14900                           
 14901                           ;mcc_generated_files/pin_manager.c: 117:     SSP1CLKPPS = 0x14;
 14902  0C4C  3014               	movlw	20
 14903  0C4D  00C5               	movwf	69	;volatile
 14904  0C4E                     l4775:
 14905                           
 14906                           ;mcc_generated_files/pin_manager.c: 118:     RC3PPS = 0x15;
 14907  0C4E  3015               	movlw	21
 14908  0C4F  003E               	movlb	30	; select bank30
 14909  0C50  00A3               	movwf	35	;volatile
 14910  0C51                     l4777:
 14911                           
 14912                           ;mcc_generated_files/pin_manager.c: 119:     RC4PPS = 0x14;
 14913  0C51  3014               	movlw	20
 14914  0C52  00A4               	movwf	36	;volatile
 14915  0C53                     l4779:
 14916                           
 14917                           ;mcc_generated_files/pin_manager.c: 120:     RC7PPS = 0x0D;
 14918  0C53  300D               	movlw	13
 14919  0C54  00A7               	movwf	39	;volatile
 14920  0C55                     l4781:
 14921                           
 14922                           ;mcc_generated_files/pin_manager.c: 121:     SSP1DATPPS = 0x13;
 14923  0C55  3013               	movlw	19
 14924  0C56  003D               	movlb	29	; select bank29
 14925  0C57  00C6               	movwf	70	;volatile
 14926  0C58                     l321:
 14927  0C58  0008               	return
 14928  0C59                     __end_of_PIN_MANAGER_Initialize:
 14929                           
 14930                           	psect	text71
 14931  177C                     __ptext71:	
 14932 ;; *************** function _OSCILLATOR_Initialize *****************
 14933 ;; Defined at:
 14934 ;;		line 63 in file "mcc_generated_files/mcc.c"
 14935 ;; Parameters:    Size  Location     Type
 14936 ;;		None
 14937 ;; Auto vars:     Size  Location     Type
 14938 ;;		None
 14939 ;; Return value:  Size  Location     Type
 14940 ;;                  1    wreg      void 
 14941 ;; Registers used:
 14942 ;;		wreg, status,2
 14943 ;; Tracked objects:
 14944 ;;		On entry : 0/0
 14945 ;;		On exit  : 0/0
 14946 ;;		Unchanged: 0/0
 14947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14952 ;;Total ram usage:        0 bytes
 14953 ;; Hardware stack levels used: 1
 14954 ;; Hardware stack levels required when called: 10
 14955 ;; This function calls:
 14956 ;;		Nothing
 14957 ;; This function is called by:
 14958 ;;		_SYSTEM_Initialize
 14959 ;; This function uses a non-reentrant model
 14960 ;;
 14961                           
 14962                           
 14963                           ;psect for function _OSCILLATOR_Initialize
 14964  177C                     _OSCILLATOR_Initialize:
 14965  177C                     l4793:	
 14966                           ;incstack = 0
 14967                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 14968                           
 14969                           
 14970                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x60;
 14971  177C  3060               	movlw	96
 14972  177D  0031               	movlb	17	; select bank17
 14973  177E  008D               	movwf	13	;volatile
 14974  177F                     l4795:
 14975                           
 14976                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
 14977  177F  018F               	clrf	15	;volatile
 14978  1780                     l4797:
 14979                           
 14980                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
 14981  1780  0191               	clrf	17	;volatile
 14982                           
 14983                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x03;
 14984  1781  3003               	movlw	3
 14985  1782  0093               	movwf	19	;volatile
 14986  1783                     l4799:
 14987                           
 14988                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
 14989  1783  0192               	clrf	18	;volatile
 14990  1784                     l370:
 14991  1784  0008               	return
 14992  1785                     __end_of_OSCILLATOR_Initialize:
 14993                           
 14994                           	psect	text72
 14995  1773                     __ptext72:	
 14996 ;; *************** function _I2C1_Initialize *****************
 14997 ;; Defined at:
 14998 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 14999 ;; Parameters:    Size  Location     Type
 15000 ;;		None
 15001 ;; Auto vars:     Size  Location     Type
 15002 ;;		None
 15003 ;; Return value:  Size  Location     Type
 15004 ;;                  1    wreg      void 
 15005 ;; Registers used:
 15006 ;;		wreg, status,2
 15007 ;; Tracked objects:
 15008 ;;		On entry : 0/0
 15009 ;;		On exit  : 0/0
 15010 ;;		Unchanged: 0/0
 15011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15016 ;;Total ram usage:        0 bytes
 15017 ;; Hardware stack levels used: 1
 15018 ;; Hardware stack levels required when called: 10
 15019 ;; This function calls:
 15020 ;;		Nothing
 15021 ;; This function is called by:
 15022 ;;		_SYSTEM_Initialize
 15023 ;; This function uses a non-reentrant model
 15024 ;;
 15025                           
 15026                           
 15027                           ;psect for function _I2C1_Initialize
 15028  1773                     _I2C1_Initialize:
 15029  1773                     l4785:	
 15030                           ;incstack = 0
 15031                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 15032                           
 15033                           
 15034                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x00;
 15035  1773  0023               	movlb	3	; select bank3
 15036  1774  018F               	clrf	15	;volatile
 15037  1775                     l4787:
 15038                           
 15039                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 15040  1775  3008               	movlw	8
 15041  1776  0090               	movwf	16	;volatile
 15042  1777                     l4789:
 15043                           
 15044                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 15045  1777  0191               	clrf	17	;volatile
 15046                           
 15047                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x04;
 15048  1778  3004               	movlw	4
 15049  1779  008D               	movwf	13	;volatile
 15050  177A                     l4791:
 15051                           
 15052                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 15053  177A  1290               	bcf	16,5	;volatile
 15054  177B                     l478:
 15055  177B  0008               	return
 15056  177C                     __end_of_I2C1_Initialize:
 15057                           
 15058                           	psect	text73
 15059  0D1A                     __ptext73:	
 15060 ;; *************** function _EUSART_Initialize *****************
 15061 ;; Defined at:
 15062 ;;		line 88 in file "mcc_generated_files/eusart.c"
 15063 ;; Parameters:    Size  Location     Type
 15064 ;;		None
 15065 ;; Auto vars:     Size  Location     Type
 15066 ;;		None
 15067 ;; Return value:  Size  Location     Type
 15068 ;;                  1    wreg      void 
 15069 ;; Registers used:
 15070 ;;		wreg, status,2, status,0, pclath, cstack
 15071 ;; Tracked objects:
 15072 ;;		On entry : 0/0
 15073 ;;		On exit  : 0/0
 15074 ;;		Unchanged: 0/0
 15075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15078 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15079 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15080 ;;Total ram usage:        1 bytes
 15081 ;; Hardware stack levels used: 1
 15082 ;; Hardware stack levels required when called: 11
 15083 ;; This function calls:
 15084 ;;		_EUSART_SetErrorHandler
 15085 ;;		_EUSART_SetFramingErrorHandler
 15086 ;;		_EUSART_SetOverrunErrorHandler
 15087 ;;		_EUSART_SetRxInterruptHandler
 15088 ;;		_EUSART_SetTxInterruptHandler
 15089 ;; This function is called by:
 15090 ;;		_SYSTEM_Initialize
 15091 ;; This function uses a non-reentrant model
 15092 ;;
 15093                           
 15094                           
 15095                           ;psect for function _EUSART_Initialize
 15096  0D1A                     _EUSART_Initialize:
 15097  0D1A                     l4833:	
 15098                           ;incstack = 0
 15099                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15100                           
 15101                           
 15102                           ;mcc_generated_files/eusart.c: 91:     PIE3bits.RCIE = 0;
 15103  0D1A  002E               	movlb	14	; select bank14
 15104  0D1B  1299               	bcf	25,5	;volatile
 15105  0D1C                     l4835:
 15106                           
 15107                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
 15108  0D1C  3098               	movlw	low _EUSART_Receive_ISR
 15109  0D1D  0021               	movlb	1	; select bank1
 15110  0D1E  00A0               	movwf	EUSART_SetRxInterruptHandler@interruptHandler^(0+128)
 15111  0D1F  300C               	movlw	high _EUSART_Receive_ISR
 15112  0D20  00A1               	movwf	(EUSART_SetRxInterruptHandler@interruptHandler^(0+128)+1)
 15113  0D21  3197  276A  318D   	fcall	_EUSART_SetRxInterruptHandler
 15114  0D24                     l4837:
 15115                           
 15116                           ;mcc_generated_files/eusart.c: 93:     PIE3bits.TXIE = 0;
 15117  0D24  002E               	movlb	14	; select bank14
 15118  0D25  1219               	bcf	25,4	;volatile
 15119                           
 15120                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
 15121  0D26  3006               	movlw	low _EUSART_Transmit_ISR
 15122  0D27  0021               	movlb	1	; select bank1
 15123  0D28  00A0               	movwf	EUSART_SetTxInterruptHandler@interruptHandler^(0+128)
 15124  0D29  300A               	movlw	high _EUSART_Transmit_ISR
 15125  0D2A  00A1               	movwf	(EUSART_SetTxInterruptHandler@interruptHandler^(0+128)+1)
 15126  0D2B  3197  2714  318D   	fcall	_EUSART_SetTxInterruptHandler
 15127  0D2E                     l4839:
 15128                           
 15129                           ;mcc_generated_files/eusart.c: 98:     BAUD1CON = 0x08;
 15130  0D2E  3008               	movlw	8
 15131  0D2F  0022               	movlb	2	; select bank2
 15132  0D30  009F               	movwf	31	;volatile
 15133  0D31                     l4841:
 15134                           
 15135                           ;mcc_generated_files/eusart.c: 101:     RC1STA = 0x90;
 15136  0D31  3090               	movlw	144
 15137  0D32  009D               	movwf	29	;volatile
 15138  0D33                     l4843:
 15139                           
 15140                           ;mcc_generated_files/eusart.c: 104:     TX1STA = 0x24;
 15141  0D33  3024               	movlw	36
 15142  0D34  009E               	movwf	30	;volatile
 15143  0D35                     l4845:
 15144                           
 15145                           ;mcc_generated_files/eusart.c: 107:     SP1BRGL = 0xCF;
 15146  0D35  30CF               	movlw	207
 15147  0D36  009B               	movwf	27	;volatile
 15148  0D37                     l4847:
 15149                           
 15150                           ;mcc_generated_files/eusart.c: 110:     SP1BRGH = 0x00;
 15151  0D37  019C               	clrf	28	;volatile
 15152  0D38                     l4849:
 15153                           
 15154                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
 15155  0D38  30A8               	movlw	low _EUSART_DefaultFramingErrorHandler
 15156  0D39  0021               	movlb	1	; select bank1
 15157  0D3A  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128)
 15158  0D3B  3016               	movlw	high _EUSART_DefaultFramingErrorHandler
 15159  0D3C  00A1               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler^(0+128)+1)
 15160  0D3D  3197  2758  318D   	fcall	_EUSART_SetFramingErrorHandler
 15161  0D40                     l4851:
 15162                           
 15163                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
 15164  0D40  30CC               	movlw	low _EUSART_DefaultOverrunErrorHandler
 15165  0D41  0021               	movlb	1	; select bank1
 15166  0D42  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)
 15167  0D43  3016               	movlw	high _EUSART_DefaultOverrunErrorHandler
 15168  0D44  00A1               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
 15169  0D45  3197  2761  318D   	fcall	_EUSART_SetOverrunErrorHandler
 15170  0D48                     l4853:
 15171                           
 15172                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
 15173  0D48  30C8               	movlw	low _EUSART_DefaultErrorHandler
 15174  0D49  0021               	movlb	1	; select bank1
 15175  0D4A  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler^(0+128)
 15176  0D4B  3016               	movlw	high _EUSART_DefaultErrorHandler
 15177  0D4C  00A1               	movwf	(EUSART_SetErrorHandler@interruptHandler^(0+128)+1)
 15178  0D4D  3197  274F  318D   	fcall	_EUSART_SetErrorHandler
 15179                           
 15180                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
 15181  0D50  0021               	movlb	1	; select bank1
 15182  0D51  01E2               	clrf	_eusartRxLastError^(0+128)	;volatile
 15183                           
 15184                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
 15185  0D52  01E7               	clrf	_eusartTxHead^(0+128)	;volatile
 15186                           
 15187                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
 15188  0D53  01E6               	clrf	_eusartTxTail^(0+128)	;volatile
 15189  0D54                     l4855:
 15190                           
 15191                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
 15192  0D54  3008               	movlw	8
 15193  0D55  00A2               	movwf	??_EUSART_Initialize^(0+128)
 15194  0D56  0822               	movf	??_EUSART_Initialize^(0+128),w
 15195  0D57  00EC               	movwf	_eusartTxBufferRemaining^(0+128)	;volatile
 15196  0D58                     l4857:
 15197                           
 15198                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
 15199  0D58  01E5               	clrf	_eusartRxHead^(0+128)	;volatile
 15200  0D59                     l4859:
 15201                           
 15202                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
 15203  0D59  01E4               	clrf	_eusartRxTail^(0+128)	;volatile
 15204  0D5A                     l4861:
 15205                           
 15206                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
 15207  0D5A  01E3               	clrf	_eusartRxCount^(0+128)	;volatile
 15208  0D5B                     l4863:
 15209                           
 15210                           ;mcc_generated_files/eusart.c: 129:     PIE3bits.RCIE = 1;
 15211  0D5B  002E               	movlb	14	; select bank14
 15212  0D5C  1699               	bsf	25,5	;volatile
 15213  0D5D                     l783:
 15214  0D5D  0008               	return
 15215  0D5E                     __end_of_EUSART_Initialize:
 15216                           
 15217                           	psect	text74
 15218  1714                     __ptext74:	
 15219 ;; *************** function _EUSART_SetTxInterruptHandler *****************
 15220 ;; Defined at:
 15221 ;;		line 285 in file "mcc_generated_files/eusart.c"
 15222 ;; Parameters:    Size  Location     Type
 15223 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
 15224 ;;		 -> EUSART_Transmit_ISR(1), 
 15225 ;; Auto vars:     Size  Location     Type
 15226 ;;		None
 15227 ;; Return value:  Size  Location     Type
 15228 ;;                  1    wreg      void 
 15229 ;; Registers used:
 15230 ;;		wreg
 15231 ;; Tracked objects:
 15232 ;;		On entry : 0/0
 15233 ;;		On exit  : 0/0
 15234 ;;		Unchanged: 0/0
 15235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15236 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15239 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15240 ;;Total ram usage:        2 bytes
 15241 ;; Hardware stack levels used: 1
 15242 ;; Hardware stack levels required when called: 10
 15243 ;; This function calls:
 15244 ;;		Nothing
 15245 ;; This function is called by:
 15246 ;;		_EUSART_Initialize
 15247 ;; This function uses a non-reentrant model
 15248 ;;
 15249                           
 15250                           
 15251                           ;psect for function _EUSART_SetTxInterruptHandler
 15252  1714                     _EUSART_SetTxInterruptHandler:
 15253  1714                     l4669:	
 15254                           ;incstack = 0
 15255                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
 15256                           
 15257                           
 15258                           ;mcc_generated_files/eusart.c: 286:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
 15259  1714  0021               	movlb	1	; select bank1
 15260  1715  0821               	movf	(EUSART_SetTxInterruptHandler@interruptHandler+1)^(0+128),w
 15261  1716  00EB               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128)
 15262  1717  0820               	movf	EUSART_SetTxInterruptHandler@interruptHandler^(0+128),w
 15263  1718  00EA               	movwf	_EUSART_TxDefaultInterruptHandler^(0+128)
 15264  1719                     l855:
 15265  1719  0008               	return
 15266  171A                     __end_of_EUSART_SetTxInterruptHandler:
 15267                           
 15268                           	psect	text75
 15269  176A                     __ptext75:	
 15270 ;; *************** function _EUSART_SetRxInterruptHandler *****************
 15271 ;; Defined at:
 15272 ;;		line 289 in file "mcc_generated_files/eusart.c"
 15273 ;; Parameters:    Size  Location     Type
 15274 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
 15275 ;;		 -> EUSART_Receive_ISR(1), 
 15276 ;; Auto vars:     Size  Location     Type
 15277 ;;		None
 15278 ;; Return value:  Size  Location     Type
 15279 ;;                  1    wreg      void 
 15280 ;; Registers used:
 15281 ;;		wreg
 15282 ;; Tracked objects:
 15283 ;;		On entry : 0/0
 15284 ;;		On exit  : 0/0
 15285 ;;		Unchanged: 0/0
 15286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15287 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15290 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15291 ;;Total ram usage:        2 bytes
 15292 ;; Hardware stack levels used: 1
 15293 ;; Hardware stack levels required when called: 10
 15294 ;; This function calls:
 15295 ;;		Nothing
 15296 ;; This function is called by:
 15297 ;;		_EUSART_Initialize
 15298 ;; This function uses a non-reentrant model
 15299 ;;
 15300                           
 15301                           
 15302                           ;psect for function _EUSART_SetRxInterruptHandler
 15303  176A                     _EUSART_SetRxInterruptHandler:
 15304  176A                     l4667:	
 15305                           ;incstack = 0
 15306                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
 15307                           
 15308                           
 15309                           ;mcc_generated_files/eusart.c: 290:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
 15310  176A  0021               	movlb	1	; select bank1
 15311  176B  0821               	movf	(EUSART_SetRxInterruptHandler@interruptHandler+1)^(0+128),w
 15312  176C  0022               	movlb	2	; select bank2
 15313  176D  00DC               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+256)
 15314  176E  0021               	movlb	1	; select bank1
 15315  176F  0820               	movf	EUSART_SetRxInterruptHandler@interruptHandler^(0+128),w
 15316  1770  0022               	movlb	2	; select bank2
 15317  1771  00DB               	movwf	_EUSART_RxDefaultInterruptHandler^(0+256)
 15318  1772                     l858:
 15319  1772  0008               	return
 15320  1773                     __end_of_EUSART_SetRxInterruptHandler:
 15321                           
 15322                           	psect	text76
 15323  1761                     __ptext76:	
 15324 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
 15325 ;; Defined at:
 15326 ;;		line 277 in file "mcc_generated_files/eusart.c"
 15327 ;; Parameters:    Size  Location     Type
 15328 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
 15329 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
 15330 ;; Auto vars:     Size  Location     Type
 15331 ;;		None
 15332 ;; Return value:  Size  Location     Type
 15333 ;;                  1    wreg      void 
 15334 ;; Registers used:
 15335 ;;		wreg
 15336 ;; Tracked objects:
 15337 ;;		On entry : 0/0
 15338 ;;		On exit  : 0/0
 15339 ;;		Unchanged: 0/0
 15340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15341 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15344 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15345 ;;Total ram usage:        2 bytes
 15346 ;; Hardware stack levels used: 1
 15347 ;; Hardware stack levels required when called: 10
 15348 ;; This function calls:
 15349 ;;		Nothing
 15350 ;; This function is called by:
 15351 ;;		_EUSART_Initialize
 15352 ;; This function uses a non-reentrant model
 15353 ;;
 15354                           
 15355                           
 15356                           ;psect for function _EUSART_SetOverrunErrorHandler
 15357  1761                     _EUSART_SetOverrunErrorHandler:
 15358  1761                     l4673:	
 15359                           ;incstack = 0
 15360                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
 15361                           
 15362                           
 15363                           ;mcc_generated_files/eusart.c: 278:     EUSART_OverrunErrorHandler = interruptHandler;
 15364  1761  0021               	movlb	1	; select bank1
 15365  1762  0821               	movf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
 15366  1763  0022               	movlb	2	; select bank2
 15367  1764  00D8               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
 15368  1765  0021               	movlb	1	; select bank1
 15369  1766  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128),w
 15370  1767  0022               	movlb	2	; select bank2
 15371  1768  00D7               	movwf	_EUSART_OverrunErrorHandler^(0+256)
 15372  1769                     l849:
 15373  1769  0008               	return
 15374  176A                     __end_of_EUSART_SetOverrunErrorHandler:
 15375                           
 15376                           	psect	text77
 15377  1758                     __ptext77:	
 15378 ;; *************** function _EUSART_SetFramingErrorHandler *****************
 15379 ;; Defined at:
 15380 ;;		line 273 in file "mcc_generated_files/eusart.c"
 15381 ;; Parameters:    Size  Location     Type
 15382 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
 15383 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
 15384 ;; Auto vars:     Size  Location     Type
 15385 ;;		None
 15386 ;; Return value:  Size  Location     Type
 15387 ;;                  1    wreg      void 
 15388 ;; Registers used:
 15389 ;;		wreg
 15390 ;; Tracked objects:
 15391 ;;		On entry : 0/0
 15392 ;;		On exit  : 0/0
 15393 ;;		Unchanged: 0/0
 15394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15395 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15398 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15399 ;;Total ram usage:        2 bytes
 15400 ;; Hardware stack levels used: 1
 15401 ;; Hardware stack levels required when called: 10
 15402 ;; This function calls:
 15403 ;;		Nothing
 15404 ;; This function is called by:
 15405 ;;		_EUSART_Initialize
 15406 ;; This function uses a non-reentrant model
 15407 ;;
 15408                           
 15409                           
 15410                           ;psect for function _EUSART_SetFramingErrorHandler
 15411  1758                     _EUSART_SetFramingErrorHandler:
 15412  1758                     l4671:	
 15413                           ;incstack = 0
 15414                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
 15415                           
 15416                           
 15417                           ;mcc_generated_files/eusart.c: 274:     EUSART_FramingErrorHandler = interruptHandler;
 15418  1758  0021               	movlb	1	; select bank1
 15419  1759  0821               	movf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
 15420  175A  0022               	movlb	2	; select bank2
 15421  175B  00DA               	movwf	(_EUSART_FramingErrorHandler+1)^(0+256)
 15422  175C  0021               	movlb	1	; select bank1
 15423  175D  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128),w
 15424  175E  0022               	movlb	2	; select bank2
 15425  175F  00D9               	movwf	_EUSART_FramingErrorHandler^(0+256)
 15426  1760                     l846:
 15427  1760  0008               	return
 15428  1761                     __end_of_EUSART_SetFramingErrorHandler:
 15429                           
 15430                           	psect	text78
 15431  174F                     __ptext78:	
 15432 ;; *************** function _EUSART_SetErrorHandler *****************
 15433 ;; Defined at:
 15434 ;;		line 281 in file "mcc_generated_files/eusart.c"
 15435 ;; Parameters:    Size  Location     Type
 15436 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
 15437 ;;		 -> EUSART_DefaultErrorHandler(1), 
 15438 ;; Auto vars:     Size  Location     Type
 15439 ;;		None
 15440 ;; Return value:  Size  Location     Type
 15441 ;;                  1    wreg      void 
 15442 ;; Registers used:
 15443 ;;		wreg
 15444 ;; Tracked objects:
 15445 ;;		On entry : 0/0
 15446 ;;		On exit  : 0/0
 15447 ;;		Unchanged: 0/0
 15448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15449 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15452 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15453 ;;Total ram usage:        2 bytes
 15454 ;; Hardware stack levels used: 1
 15455 ;; Hardware stack levels required when called: 10
 15456 ;; This function calls:
 15457 ;;		Nothing
 15458 ;; This function is called by:
 15459 ;;		_EUSART_Initialize
 15460 ;; This function uses a non-reentrant model
 15461 ;;
 15462                           
 15463                           
 15464                           ;psect for function _EUSART_SetErrorHandler
 15465  174F                     _EUSART_SetErrorHandler:
 15466  174F                     l4675:	
 15467                           ;incstack = 0
 15468                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
 15469                           
 15470                           
 15471                           ;mcc_generated_files/eusart.c: 282:     EUSART_ErrorHandler = interruptHandler;
 15472  174F  0021               	movlb	1	; select bank1
 15473  1750  0821               	movf	(EUSART_SetErrorHandler@interruptHandler+1)^(0+128),w
 15474  1751  0022               	movlb	2	; select bank2
 15475  1752  00D6               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
 15476  1753  0021               	movlb	1	; select bank1
 15477  1754  0820               	movf	EUSART_SetErrorHandler@interruptHandler^(0+128),w
 15478  1755  0022               	movlb	2	; select bank2
 15479  1756  00D5               	movwf	_EUSART_ErrorHandler^(0+256)
 15480  1757                     l852:
 15481  1757  0008               	return
 15482  1758                     __end_of_EUSART_SetErrorHandler:
 15483                           
 15484                           	psect	text79
 15485  0886                     __ptext79:	
 15486 ;; *************** function _ADCC_Initialize *****************
 15487 ;; Defined at:
 15488 ;;		line 63 in file "mcc_generated_files/adcc.c"
 15489 ;; Parameters:    Size  Location     Type
 15490 ;;		None
 15491 ;; Auto vars:     Size  Location     Type
 15492 ;;		None
 15493 ;; Return value:  Size  Location     Type
 15494 ;;                  1    wreg      void 
 15495 ;; Registers used:
 15496 ;;		wreg, status,2
 15497 ;; Tracked objects:
 15498 ;;		On entry : 0/0
 15499 ;;		On exit  : 0/0
 15500 ;;		Unchanged: 0/0
 15501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15506 ;;Total ram usage:        0 bytes
 15507 ;; Hardware stack levels used: 1
 15508 ;; Hardware stack levels required when called: 10
 15509 ;; This function calls:
 15510 ;;		Nothing
 15511 ;; This function is called by:
 15512 ;;		_SYSTEM_Initialize
 15513 ;; This function uses a non-reentrant model
 15514 ;;
 15515                           
 15516                           
 15517                           ;psect for function _ADCC_Initialize
 15518  0886                     _ADCC_Initialize:
 15519  0886                     l4735:	
 15520                           ;incstack = 0
 15521                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 15522                           
 15523                           
 15524                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
 15525  0886  0022               	movlb	2	; select bank2
 15526  0887  018E               	clrf	14	;volatile
 15527                           
 15528                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
 15529  0888  018F               	clrf	15	;volatile
 15530                           
 15531                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
 15532  0889  0190               	clrf	16	;volatile
 15533                           
 15534                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
 15535  088A  0191               	clrf	17	;volatile
 15536                           
 15537                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
 15538  088B  0192               	clrf	18	;volatile
 15539                           
 15540                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
 15541  088C  0193               	clrf	19	;volatile
 15542                           
 15543                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
 15544  088D  018D               	clrf	13	;volatile
 15545                           
 15546                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
 15547  088E  0021               	movlb	1	; select bank1
 15548  088F  019E               	clrf	30	;volatile
 15549                           
 15550                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
 15551  0890  019B               	clrf	27	;volatile
 15552                           
 15553                           ;mcc_generated_files/adcc.c: 85:     ADPRE = 0x00;
 15554  0891  019C               	clrf	28	;volatile
 15555                           
 15556                           ;mcc_generated_files/adcc.c: 87:     ADCON1 = 0x00;
 15557  0892  0194               	clrf	20	;volatile
 15558                           
 15559                           ;mcc_generated_files/adcc.c: 89:     ADCON2 = 0x00;
 15560  0893  0195               	clrf	21	;volatile
 15561                           
 15562                           ;mcc_generated_files/adcc.c: 91:     ADCON3 = 0x00;
 15563  0894  0196               	clrf	22	;volatile
 15564                           
 15565                           ;mcc_generated_files/adcc.c: 93:     ADSTAT = 0x00;
 15566  0895  0197               	clrf	23	;volatile
 15567                           
 15568                           ;mcc_generated_files/adcc.c: 95:     ADREF = 0x00;
 15569  0896  019A               	clrf	26	;volatile
 15570                           
 15571                           ;mcc_generated_files/adcc.c: 97:     ADACT = 0x00;
 15572  0897  0199               	clrf	25	;volatile
 15573  0898                     l4737:
 15574                           
 15575                           ;mcc_generated_files/adcc.c: 99:     ADCLK = 0x03;
 15576  0898  3003               	movlw	3
 15577  0899  0098               	movwf	24	;volatile
 15578  089A                     l4739:
 15579                           
 15580                           ;mcc_generated_files/adcc.c: 101:     ADCON0 = 0x84;
 15581  089A  3084               	movlw	132
 15582  089B  0093               	movwf	19	;volatile
 15583                           
 15584                           ;mcc_generated_files/adcc.c: 103:     ADACQ = 0x00;
 15585  089C  019D               	clrf	29	;volatile
 15586  089D                     l177:
 15587  089D  0008               	return
 15588  089E                     __end_of_ADCC_Initialize:
 15589                           
 15590                           	psect	text80
 15591  08B7                     __ptext80:	
 15592 ;; *************** function _PWM5_LoadDutyValue *****************
 15593 ;; Defined at:
 15594 ;;		line 82 in file "mcc_generated_files/pwm5.c"
 15595 ;; Parameters:    Size  Location     Type
 15596 ;;  dutyValue       2    0[BANK1 ] unsigned short 
 15597 ;; Auto vars:     Size  Location     Type
 15598 ;;		None
 15599 ;; Return value:  Size  Location     Type
 15600 ;;                  1    wreg      void 
 15601 ;; Registers used:
 15602 ;;		wreg, status,2
 15603 ;; Tracked objects:
 15604 ;;		On entry : 0/0
 15605 ;;		On exit  : 0/0
 15606 ;;		Unchanged: 0/0
 15607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15608 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15611 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15612 ;;Total ram usage:        2 bytes
 15613 ;; Hardware stack levels used: 1
 15614 ;; Hardware stack levels required when called: 10
 15615 ;; This function calls:
 15616 ;;		Nothing
 15617 ;; This function is called by:
 15618 ;;		_main
 15619 ;; This function uses a non-reentrant model
 15620 ;;
 15621                           
 15622                           
 15623                           ;psect for function _PWM5_LoadDutyValue
 15624  08B7                     _PWM5_LoadDutyValue:
 15625  08B7                     l5265:	
 15626                           ;incstack = 0
 15627                           ; Regs used in _PWM5_LoadDutyValue: [wreg+status,2]
 15628                           
 15629                           
 15630                           ;mcc_generated_files/pwm5.c: 82: void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm5.c: 83: {;mcc_generated_files/pwm5.c: 84:     dutyValue &= 0x03FF;
 15631  08B7  30FF               	movlw	255
 15632  08B8  0021               	movlb	1	; select bank1
 15633  08B9  05A0               	andwf	PWM5_LoadDutyValue@dutyValue^(0+128),f
 15634  08BA  3003               	movlw	3
 15635  08BB  05A1               	andwf	(PWM5_LoadDutyValue@dutyValue+1)^(0+128),f
 15636  08BC                     l5267:
 15637                           
 15638                           ;mcc_generated_files/pwm5.c: 87:     if(CCP5CONbits.CCP5FMT)
 15639  08BC  0026               	movlb	6	; select bank6
 15640  08BD  1E1E               	btfss	30,4	;volatile
 15641  08BE  28C0               	goto	u3081
 15642  08BF  28C1               	goto	u3080
 15643  08C0                     u3081:
 15644  08C0  28C7               	goto	l5271
 15645  08C1                     u3080:
 15646  08C1                     l5269:
 15647                           
 15648                           ;mcc_generated_files/pwm5.c: 88:     {;mcc_generated_files/pwm5.c: 89:         dutyValue
      +                           <<= 6;
 15649  08C1  3006               	movlw	6
 15650  08C2  0021               	movlb	1	; select bank1
 15651  08C3                     u3095:
 15652  08C3  35A0               	lslf	PWM5_LoadDutyValue@dutyValue^(0+128),f
 15653  08C4  0DA1               	rlf	(PWM5_LoadDutyValue@dutyValue+1)^(0+128),f
 15654  08C5  0B89               	decfsz	9,f
 15655  08C6  28C3               	goto	u3095
 15656  08C7                     l5271:
 15657                           
 15658                           ;mcc_generated_files/pwm5.c: 90:         CCPR5H = dutyValue >> 8;
 15659  08C7  0021               	movlb	1	; select bank1
 15660  08C8  0821               	movf	(PWM5_LoadDutyValue@dutyValue+1)^(0+128),w
 15661  08C9  0026               	movlb	6	; select bank6
 15662  08CA  009D               	movwf	29	;volatile
 15663  08CB                     l5273:
 15664                           
 15665                           ;mcc_generated_files/pwm5.c: 91:         CCPR5L = dutyValue;
 15666  08CB  0021               	movlb	1	; select bank1
 15667  08CC  0820               	movf	PWM5_LoadDutyValue@dutyValue^(0+128),w
 15668  08CD  0026               	movlb	6	; select bank6
 15669  08CE  009C               	movwf	28	;volatile
 15670  08CF                     l1246:	
 15671                           ;mcc_generated_files/pwm5.c: 92:     }
 15672                           
 15673  08CF  0008               	return
 15674  08D0                     __end_of_PWM5_LoadDutyValue:
 15675                           
 15676                           	psect	intentry
 15677  0004                     __pintentry:	
 15678 ;; *************** function _INTERRUPT_InterruptManager *****************
 15679 ;; Defined at:
 15680 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
 15681 ;; Parameters:    Size  Location     Type
 15682 ;;		None
 15683 ;; Auto vars:     Size  Location     Type
 15684 ;;		None
 15685 ;; Return value:  Size  Location     Type
 15686 ;;                  1    wreg      void 
 15687 ;; Registers used:
 15688 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15689 ;; Tracked objects:
 15690 ;;		On entry : 0/0
 15691 ;;		On exit  : 0/0
 15692 ;;		Unchanged: 0/0
 15693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15696 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15697 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15698 ;;Total ram usage:        2 bytes
 15699 ;; Hardware stack levels used: 1
 15700 ;; Hardware stack levels required when called: 9
 15701 ;; This function calls:
 15702 ;;		Absolute function
 15703 ;;		_ADCC_GetSingleConversion
 15704 ;;		_EUSART_Receive_ISR
 15705 ;;		_EUSART_Transmit_ISR
 15706 ;;		_TMR0_ISR
 15707 ;;		_getch
 15708 ;;		_map
 15709 ;;		_printf
 15710 ;; This function is called by:
 15711 ;;		Interrupt level 1
 15712 ;; This function uses a non-reentrant model
 15713 ;;
 15714                           
 15715  0004                     _INTERRUPT_InterruptManager:
 15716                           
 15717                           ;incstack = 0
 15718 ;; hardware stack exceeded
 15719  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 15720                           
 15721                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15722  0005  3180               	pagesel	$
 15723  0006                     i1l5591:
 15724                           
 15725                           ;mcc_generated_files/interrupt_manager.c: 60:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 15726  0006  002E               	movlb	14	; select bank14
 15727  0007  1E96               	btfss	22,5	;volatile
 15728  0008  280A               	goto	u344_21
 15729  0009  280B               	goto	u344_20
 15730  000A                     u344_21:
 15731  000A  285B               	goto	i1l1170
 15732  000B                     u344_20:
 15733  000B                     i1l5593:
 15734  000B  1E8C               	btfss	12,5	;volatile
 15735  000C  280E               	goto	u345_21
 15736  000D  280F               	goto	u345_20
 15737  000E                     u345_21:
 15738  000E  285B               	goto	i1l1170
 15739  000F                     u345_20:
 15740  000F                     i1l5595:
 15741                           
 15742                           ;mcc_generated_files/interrupt_manager.c: 61:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 62:         ADCC = ADCC_GetSingleConversion(POT);
 15743  000F  3004               	movlw	4
 15744  0010  3197  27DC  3180   	fcall	_ADCC_GetSingleConversion
 15745  0013  0871               	movf	?_ADCC_GetSingleConversion+1,w
 15746  0014  0021               	movlb	1	; select bank1
 15747  0015  00D9               	movwf	(_ADCC+1)^(0+128)
 15748  0016  0870               	movf	?_ADCC_GetSingleConversion,w
 15749  0017  00D8               	movwf	_ADCC^(0+128)
 15750  0018                     i1l5597:
 15751                           
 15752                           ;mcc_generated_files/interrupt_manager.c: 63:         c = map(ADCC, 0, 1023, 0, 100);
 15753  0018  0858               	movf	_ADCC^(0+128),w
 15754  0019  0020               	movlb	0	; select bank0
 15755  001A  00AE               	movwf	map@x
 15756  001B  0021               	movlb	1	; select bank1
 15757  001C  0859               	movf	(_ADCC+1)^(0+128),w
 15758  001D  0020               	movlb	0	; select bank0
 15759  001E  00AF               	movwf	map@x+1
 15760  001F  01B0               	clrf	map@x+2
 15761  0020  01B1               	clrf	map@x+3
 15762  0021  3000               	movlw	0
 15763  0022  00B5               	movwf	map@in_min+3
 15764  0023  3000               	movlw	0
 15765  0024  00B4               	movwf	map@in_min+2
 15766  0025  3000               	movlw	0
 15767  0026  00B3               	movwf	map@in_min+1
 15768  0027  3000               	movlw	0
 15769  0028  00B2               	movwf	map@in_min
 15770  0029  3000               	movlw	0
 15771  002A  00B9               	movwf	map@in_max+3
 15772  002B  3000               	movlw	0
 15773  002C  00B8               	movwf	map@in_max+2
 15774  002D  3003               	movlw	3
 15775  002E  00B7               	movwf	map@in_max+1
 15776  002F  30FF               	movlw	255
 15777  0030  00B6               	movwf	map@in_max
 15778  0031  3000               	movlw	0
 15779  0032  00BD               	movwf	map@out_min+3
 15780  0033  3000               	movlw	0
 15781  0034  00BC               	movwf	map@out_min+2
 15782  0035  3000               	movlw	0
 15783  0036  00BB               	movwf	map@out_min+1
 15784  0037  3000               	movlw	0
 15785  0038  00BA               	movwf	map@out_min
 15786  0039  3000               	movlw	0
 15787  003A  00C1               	movwf	map@out_max+3
 15788  003B  3000               	movlw	0
 15789  003C  00C0               	movwf	map@out_max+2
 15790  003D  3000               	movlw	0
 15791  003E  00BF               	movwf	map@out_max+1
 15792  003F  3064               	movlw	100
 15793  0040  00BE               	movwf	map@out_max
 15794  0041  3187  272D  3180   	fcall	_map
 15795  0044  0020               	movlb	0	; select bank0
 15796  0045  082E               	movf	?_map,w
 15797  0046  00EB               	movwf	??_INTERRUPT_InterruptManager
 15798  0047  086B               	movf	??_INTERRUPT_InterruptManager,w
 15799  0048  00EF               	movwf	_c
 15800  0049                     i1l5599:
 15801                           
 15802                           ;mcc_generated_files/interrupt_manager.c: 64:         printf("#A%i\n\r",c);
 15803  0049  3020               	movlw	low (STR_20| (0+32768))
 15804  004A  00E6               	movwf	printf@fmt
 15805  004B  3098               	movlw	high (STR_20| (0+32768))
 15806  004C  00E7               	movwf	printf@fmt+1
 15807  004D  086F               	movf	_c,w
 15808  004E  00EB               	movwf	??_INTERRUPT_InterruptManager
 15809  004F  01EC               	clrf	??_INTERRUPT_InterruptManager+1
 15810  0050  086B               	movf	??_INTERRUPT_InterruptManager,w
 15811  0051  00E8               	movwf	?_printf+2
 15812  0052  086C               	movf	??_INTERRUPT_InterruptManager+1,w
 15813  0053  00E9               	movwf	?_printf+3
 15814  0054  3197  27EE  3180   	fcall	_printf
 15815  0057                     i1l5601:
 15816                           
 15817                           ;mcc_generated_files/interrupt_manager.c: 65:         TMR0_ISR();
 15818  0057  3187  27F0  3180   	fcall	_TMR0_ISR
 15819                           
 15820                           ;mcc_generated_files/interrupt_manager.c: 67:     }
 15821  005A  289D               	goto	i1l1180
 15822  005B                     i1l1170:	
 15823                           ;mcc_generated_files/interrupt_manager.c: 68:     else if(INTCONbits.PEIE == 1)
 15824                           
 15825  005B  1F0B               	btfss	11,6	;volatile
 15826  005C  285E               	goto	u346_21
 15827  005D  285F               	goto	u346_20
 15828  005E                     u346_21:
 15829  005E  289D               	goto	i1l1180
 15830  005F                     u346_20:
 15831  005F                     i1l5603:
 15832                           
 15833                           ;mcc_generated_files/interrupt_manager.c: 69:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 70:         if(PIE3bits.TXIE == 1 && PIR3bits.TXIF == 1)
 15834  005F  1E19               	btfss	25,4	;volatile
 15835  0060  2862               	goto	u347_21
 15836  0061  2863               	goto	u347_20
 15837  0062                     u347_21:
 15838  0062  286E               	goto	i1l1173
 15839  0063                     u347_20:
 15840  0063                     i1l5605:
 15841  0063  1E0F               	btfss	15,4	;volatile
 15842  0064  2866               	goto	u348_21
 15843  0065  2867               	goto	u348_20
 15844  0066                     u348_21:
 15845  0066  286E               	goto	i1l1173
 15846  0067                     u348_20:
 15847  0067                     i1l5607:
 15848                           
 15849                           ;mcc_generated_files/interrupt_manager.c: 71:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 72:             EUSART_TxDefaultInterruptHandler();
 15850  0067  0021               	movlb	1	; select bank1
 15851  0068  086B               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128),w
 15852  0069  008A               	movwf	10
 15853  006A  086A               	movf	_EUSART_TxDefaultInterruptHandler^(0+128),w
 15854  006B  000A               	callw
 15855  006C  3180               	pagesel	$
 15856                           
 15857                           ;mcc_generated_files/interrupt_manager.c: 73:         }
 15858  006D  289D               	goto	i1l1180
 15859  006E                     i1l1173:	
 15860                           ;mcc_generated_files/interrupt_manager.c: 74:         else if(PIE3bits.RCIE == 1 && PIR3
      +                          bits.RCIF == 1)
 15861                           
 15862  006E  1E99               	btfss	25,5	;volatile
 15863  006F  2871               	goto	u349_21
 15864  0070  2872               	goto	u349_20
 15865  0071                     u349_21:
 15866  0071  289D               	goto	i1l1179
 15867  0072                     u349_20:
 15868  0072                     i1l5609:
 15869  0072  1E8F               	btfss	15,5	;volatile
 15870  0073  2875               	goto	u350_21
 15871  0074  2876               	goto	u350_20
 15872  0075                     u350_21:
 15873  0075  289D               	goto	i1l1179
 15874  0076                     u350_20:
 15875  0076                     i1l5611:
 15876                           
 15877                           ;mcc_generated_files/interrupt_manager.c: 75:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 76:             EUSART_RxDefaultInterruptHandler();
 15878  0076  0022               	movlb	2	; select bank2
 15879  0077  085C               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+256),w
 15880  0078  008A               	movwf	10
 15881  0079  085B               	movf	_EUSART_RxDefaultInterruptHandler^(0+256),w
 15882  007A  000A               	callw
 15883  007B  3180               	pagesel	$
 15884                           
 15885                           ;mcc_generated_files/interrupt_manager.c: 77:             c = getch();
 15886  007C  3196  26D0  3180   	fcall	_getch
 15887  007F  0020               	movlb	0	; select bank0
 15888  0080  00EB               	movwf	??_INTERRUPT_InterruptManager
 15889  0081  086B               	movf	??_INTERRUPT_InterruptManager,w
 15890  0082  00EF               	movwf	_c
 15891  0083                     i1l5613:
 15892                           
 15893                           ;mcc_generated_files/interrupt_manager.c: 78:                 if (c != 13){
 15894  0083  300D               	movlw	13
 15895  0084  066F               	xorwf	_c,w
 15896  0085  1903               	btfsc	3,2
 15897  0086  2888               	goto	u351_21
 15898  0087  2889               	goto	u351_20
 15899  0088                     u351_21:
 15900  0088  289A               	goto	i1l5619
 15901  0089                     u351_20:
 15902  0089                     i1l5615:
 15903                           
 15904                           ;mcc_generated_files/interrupt_manager.c: 79:                     buffer[i] = c;
 15905  0089  086F               	movf	_c,w
 15906  008A  00EB               	movwf	??_INTERRUPT_InterruptManager
 15907  008B  0021               	movlb	1	; select bank1
 15908  008C  085B               	movf	_i^(0+128),w
 15909  008D  3EB4               	addlw	(low (_buffer| (0+256)))& (0+255)
 15910  008E  0086               	movwf	6
 15911  008F  3001               	movlw	1	; select bank3/4
 15912  0090  0087               	movwf	7
 15913  0091  0020               	movlb	0	; select bank0
 15914  0092  086B               	movf	??_INTERRUPT_InterruptManager,w
 15915  0093  0081               	movwf	1
 15916  0094                     i1l5617:
 15917                           
 15918                           ;mcc_generated_files/interrupt_manager.c: 80:                     i++;
 15919  0094  3001               	movlw	1
 15920  0095  00EB               	movwf	??_INTERRUPT_InterruptManager
 15921  0096  086B               	movf	??_INTERRUPT_InterruptManager,w
 15922  0097  0021               	movlb	1	; select bank1
 15923  0098  07DB               	addwf	_i^(0+128),f
 15924                           
 15925                           ;mcc_generated_files/interrupt_manager.c: 81:                 }else{
 15926  0099  289D               	goto	i1l1180
 15927  009A                     i1l5619:
 15928                           
 15929                           ;mcc_generated_files/interrupt_manager.c: 82:                     i=0;
 15930  009A  0021               	movlb	1	; select bank1
 15931  009B  01DB               	clrf	_i^(0+128)
 15932  009C  289D               	goto	i1l1180
 15933  009D                     i1l1179:	
 15934                           ;mcc_generated_files/interrupt_manager.c: 91:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 93:     }
 15935                           
 15936  009D                     i1l1180:
 15937  009D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 15938  009E  0009               	retfie
 15939  009F                     __end_of_INTERRUPT_InterruptManager:
 15940                           
 15941                           	psect	text82
 15942  17EE                     __ptext82:	
 15943 ;; *************** function _printf *****************
 15944 ;; Defined at:
 15945 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
 15946 ;; Parameters:    Size  Location     Type
 15947 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
 15948 ;;		 -> STR_20(7), 
 15949 ;; Auto vars:     Size  Location     Type
 15950 ;;  ret             2    0        int 
 15951 ;;  ap              1   74[BANK0 ] PTR void [1]
 15952 ;;		 -> ?_printf(2), 
 15953 ;; Return value:  Size  Location     Type
 15954 ;;                  2   70[BANK0 ] int 
 15955 ;; Registers used:
 15956 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15957 ;; Tracked objects:
 15958 ;;		On entry : 0/0
 15959 ;;		On exit  : 0/0
 15960 ;;		Unchanged: 0/0
 15961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15962 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15963 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15964 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15965 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15966 ;;Total ram usage:        6 bytes
 15967 ;; Hardware stack levels used: 1
 15968 ;; Hardware stack levels required when called: 8
 15969 ;; This function calls:
 15970 ;;		_vfprintf
 15971 ;; This function is called by:
 15972 ;;		_INTERRUPT_InterruptManager
 15973 ;; This function uses a non-reentrant model
 15974 ;;
 15975                           
 15976                           
 15977                           ;psect for function _printf
 15978  17EE                     _printf:
 15979  17EE                     i1l5283:	
 15980                           ;incstack = 0
 15981 ;; hardware stack exceeded
 15982                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15983                           
 15984  17EE  3068               	movlw	(low ((?_printf| 0+2)))& (0+255)
 15985  17EF  00FD               	movwf	??_printf
 15986  17F0  087D               	movf	??_printf,w
 15987  17F1  0020               	movlb	0	; select bank0
 15988  17F2  00EA               	movwf	printf@ap
 15989  17F3                     i1l5285:
 15990  17F3  0867               	movf	printf@fmt+1,w
 15991  17F4  00DF               	movwf	vfprintf@fmt+1
 15992  17F5  0866               	movf	printf@fmt,w
 15993  17F6  00DE               	movwf	vfprintf@fmt
 15994  17F7  306A               	movlw	(low (printf@ap| 0))& (0+255)
 15995  17F8  00FD               	movwf	??_printf
 15996  17F9  087D               	movf	??_printf,w
 15997  17FA  00E0               	movwf	vfprintf@ap
 15998  17FB  3000               	movlw	0
 15999  17FC  318B  2325  3197   	fcall	_vfprintf
 16000  17FF                     i1l1909:
 16001  17FF  0008               	return
 16002  1800                     __end_of_printf:
 16003                           
 16004                           	psect	text83
 16005  0B25                     __ptext83:	
 16006 ;; *************** function _vfprintf *****************
 16007 ;; Defined at:
 16008 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 16009 ;; Parameters:    Size  Location     Type
 16010 ;;  fp              1    wreg     PTR struct _IO_FILE
 16011 ;;		 -> NULL(0), 
 16012 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
 16013 ;;		 -> STR_20(7), 
 16014 ;;  ap              1   64[BANK0 ] PTR PTR void 
 16015 ;;		 -> printf@ap(1), 
 16016 ;; Auto vars:     Size  Location     Type
 16017 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
 16018 ;;		 -> NULL(0), 
 16019 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
 16020 ;;		 -> STR_20(7), 
 16021 ;; Return value:  Size  Location     Type
 16022 ;;                  2   62[BANK0 ] int 
 16023 ;; Registers used:
 16024 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16025 ;; Tracked objects:
 16026 ;;		On entry : 0/0
 16027 ;;		On exit  : 0/0
 16028 ;;		Unchanged: 0/0
 16029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16030 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16031 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16032 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16033 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16034 ;;Total ram usage:        8 bytes
 16035 ;; Hardware stack levels used: 1
 16036 ;; Hardware stack levels required when called: 7
 16037 ;; This function calls:
 16038 ;;		_vfpfcnvrt
 16039 ;; This function is called by:
 16040 ;;		_printf
 16041 ;; This function uses a non-reentrant model
 16042 ;;
 16043                           
 16044                           
 16045                           ;psect for function _vfprintf
 16046  0B25                     _vfprintf:
 16047                           
 16048                           ;incstack = 0
 16049 ;; hardware stack exceeded
 16050                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16051                           ;vfprintf@fp stored from wreg
 16052  0B25  0020               	movlb	0	; select bank0
 16053  0B26  00E3               	movwf	vfprintf@fp
 16054  0B27                     i1l5005:
 16055                           
 16056                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
 16057  0B27  085F               	movf	vfprintf@fmt+1,w
 16058  0B28  00E5               	movwf	vfprintf@cfmt+1
 16059  0B29  085E               	movf	vfprintf@fmt,w
 16060  0B2A  00E4               	movwf	vfprintf@cfmt
 16061  0B2B                     i1l5007:
 16062                           
 16063                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
 16064  0B2B  0021               	movlb	1	; select bank1
 16065  0B2C  01D0               	clrf	_nout^(0+128)
 16066  0B2D  01D1               	clrf	(_nout+1)^(0+128)
 16067                           
 16068                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 16069  0B2E  2B43               	goto	i1l5011
 16070  0B2F                     i1l5009:
 16071                           
 16072                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
 16073  0B2F  3064               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 16074  0B30  00E1               	movwf	??_vfprintf
 16075  0B31  0861               	movf	??_vfprintf,w
 16076  0B32  00CE               	movwf	vfpfcnvrt@fmt
 16077  0B33  0860               	movf	vfprintf@ap,w
 16078  0B34  00E2               	movwf	??_vfprintf+1
 16079  0B35  0862               	movf	??_vfprintf+1,w
 16080  0B36  00CF               	movwf	vfpfcnvrt@ap
 16081  0B37  0863               	movf	vfprintf@fp,w
 16082  0B38  3185  2512  318B   	fcall	_vfpfcnvrt
 16083  0B3B  0020               	movlb	0	; select bank0
 16084  0B3C  084E               	movf	?_vfpfcnvrt,w
 16085  0B3D  0021               	movlb	1	; select bank1
 16086  0B3E  07D0               	addwf	_nout^(0+128),f
 16087  0B3F  0020               	movlb	0	; select bank0
 16088  0B40  084F               	movf	?_vfpfcnvrt+1,w
 16089  0B41  0021               	movlb	1	; select bank1
 16090  0B42  3DD1               	addwfc	(_nout+1)^(0+128),f
 16091  0B43                     i1l5011:
 16092                           
 16093                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 16094  0B43  0020               	movlb	0	; select bank0
 16095  0B44  0864               	movf	vfprintf@cfmt,w
 16096  0B45  0084               	movwf	4
 16097  0B46  0865               	movf	vfprintf@cfmt+1,w
 16098  0B47  0085               	movwf	5
 16099  0B48  0012               	moviw fsr0++
 16100  0B49  1D03               	btfss	3,2
 16101  0B4A  2B4C               	goto	u279_21
 16102  0B4B  2B4D               	goto	u279_20
 16103  0B4C                     u279_21:
 16104  0B4C  2B2F               	goto	i1l5009
 16105  0B4D                     u279_20:
 16106  0B4D                     i1l5013:
 16107                           
 16108                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
 16109  0B4D  0021               	movlb	1	; select bank1
 16110  0B4E  0851               	movf	(_nout+1)^(0+128),w
 16111  0B4F  0020               	movlb	0	; select bank0
 16112  0B50  00DF               	movwf	?_vfprintf+1
 16113  0B51  0021               	movlb	1	; select bank1
 16114  0B52  0850               	movf	_nout^(0+128),w
 16115  0B53  0020               	movlb	0	; select bank0
 16116  0B54  00DE               	movwf	?_vfprintf
 16117  0B55                     i1l1981:
 16118  0B55  0008               	return
 16119  0B56                     __end_of_vfprintf:
 16120                           
 16121                           	psect	text84
 16122  0512                     __ptext84:	
 16123 ;; *************** function _vfpfcnvrt *****************
 16124 ;; Defined at:
 16125 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 16126 ;; Parameters:    Size  Location     Type
 16127 ;;  fp              1    wreg     PTR struct _IO_FILE
 16128 ;;		 -> NULL(0), 
 16129 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
 16130 ;;		 -> vfprintf@cfmt(2), 
 16131 ;;  ap              1   47[BANK0 ] PTR PTR void 
 16132 ;;		 -> printf@ap(1), 
 16133 ;; Auto vars:     Size  Location     Type
 16134 ;;  fp              1   61[BANK0 ] PTR struct _IO_FILE
 16135 ;;		 -> NULL(0), 
 16136 ;;  ll              8   53[BANK0 ] long long 
 16137 ;;  llu             8    0        unsigned long long 
 16138 ;;  f               4    0        unsigned long long 
 16139 ;;  ct              3    0        unsigned char [3]
 16140 ;;  vp              2    0        PTR void 
 16141 ;;  i               2    0        int 
 16142 ;;  done            2    0        int 
 16143 ;;  cp              2    0        PTR unsigned char 
 16144 ;;  c               1    0        unsigned char 
 16145 ;; Return value:  Size  Location     Type
 16146 ;;                  2   46[BANK0 ] int 
 16147 ;; Registers used:
 16148 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16149 ;; Tracked objects:
 16150 ;;		On entry : 0/0
 16151 ;;		On exit  : 0/0
 16152 ;;		Unchanged: 0/0
 16153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16154 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16155 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16156 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16157 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16158 ;;Total ram usage:       16 bytes
 16159 ;; Hardware stack levels used: 1
 16160 ;; Hardware stack levels required when called: 6
 16161 ;; This function calls:
 16162 ;;		_dtoa
 16163 ;;		_fputc
 16164 ;; This function is called by:
 16165 ;;		_vfprintf
 16166 ;; This function uses a non-reentrant model
 16167 ;;
 16168                           
 16169                           
 16170                           ;psect for function _vfpfcnvrt
 16171  0512                     _vfpfcnvrt:
 16172                           
 16173                           ;incstack = 0
 16174 ;; hardware stack exceeded
 16175                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16176                           ;vfpfcnvrt@fp stored from wreg
 16177  0512  0020               	movlb	0	; select bank0
 16178  0513  00DD               	movwf	vfpfcnvrt@fp
 16179  0514                     i1l4691:
 16180                           
 16181                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
 16182  0514  084E               	movf	vfpfcnvrt@fmt,w
 16183  0515  0086               	movwf	6
 16184  0516  0187               	clrf	7
 16185  0517  3F40               	moviw [0]fsr1
 16186  0518  00D0               	movwf	??_vfpfcnvrt
 16187  0519  3F41               	moviw [1]fsr1
 16188  051A  00D1               	movwf	??_vfpfcnvrt+1
 16189  051B  0850               	movf	??_vfpfcnvrt,w
 16190  051C  0084               	movwf	4
 16191  051D  0851               	movf	??_vfpfcnvrt+1,w
 16192  051E  0085               	movwf	5
 16193  051F  0012               	moviw fsr0++
 16194  0520  3A25               	xorlw	37
 16195  0521  1D03               	btfss	3,2
 16196  0522  2D24               	goto	u251_21
 16197  0523  2D25               	goto	u251_20
 16198  0524                     u251_21:
 16199  0524  2DCB               	goto	i1l4727
 16200  0525                     u251_20:
 16201  0525                     i1l4693:
 16202                           
 16203                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
 16204  0525  084E               	movf	vfpfcnvrt@fmt,w
 16205  0526  0086               	movwf	6
 16206  0527  0187               	clrf	7
 16207  0528  3001               	movlw	1
 16208  0529  0781               	addwf	1,f
 16209  052A  3141               	addfsr 1,1
 16210  052B  1803               	skipnc
 16211  052C  0A81               	incf	1,f
 16212  052D                     i1l4695:
 16213                           
 16214                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
 16215  052D  0021               	movlb	1	; select bank1
 16216  052E  01D2               	clrf	_width^(0+128)
 16217  052F  01D3               	clrf	(_width+1)^(0+128)
 16218  0530  0020               	movlb	0	; select bank0
 16219  0531  01ED               	clrf	_flags
 16220  0532  01EE               	clrf	_flags+1
 16221  0533                     i1l4697:
 16222                           
 16223                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
 16224  0533  30FF               	movlw	255
 16225  0534  0021               	movlb	1	; select bank1
 16226  0535  00D4               	movwf	_prec^(0+128)
 16227  0536  30FF               	movlw	255
 16228  0537  00D5               	movwf	(_prec^(0+128)+1)
 16229  0538                     i1l4699:
 16230                           
 16231                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 16232  0538  0020               	movlb	0	; select bank0
 16233  0539  084E               	movf	vfpfcnvrt@fmt,w
 16234  053A  0086               	movwf	6
 16235  053B  0187               	clrf	7
 16236  053C  3F40               	moviw [0]fsr1
 16237  053D  00D0               	movwf	??_vfpfcnvrt
 16238  053E  3F41               	moviw [1]fsr1
 16239  053F  00D1               	movwf	??_vfpfcnvrt+1
 16240  0540  0850               	movf	??_vfpfcnvrt,w
 16241  0541  0084               	movwf	4
 16242  0542  0851               	movf	??_vfpfcnvrt+1,w
 16243  0543  0085               	movwf	5
 16244  0544  0012               	moviw fsr0++
 16245  0545  3A64               	xorlw	100
 16246  0546  1903               	btfsc	3,2
 16247  0547  2D49               	goto	u252_21
 16248  0548  2D4A               	goto	u252_20
 16249  0549                     u252_21:
 16250  0549  2D5B               	goto	i1l4703
 16251  054A                     u252_20:
 16252  054A                     i1l4701:
 16253  054A  084E               	movf	vfpfcnvrt@fmt,w
 16254  054B  0086               	movwf	6
 16255  054C  0187               	clrf	7
 16256  054D  3F40               	moviw [0]fsr1
 16257  054E  00D0               	movwf	??_vfpfcnvrt
 16258  054F  3F41               	moviw [1]fsr1
 16259  0550  00D1               	movwf	??_vfpfcnvrt+1
 16260  0551  0850               	movf	??_vfpfcnvrt,w
 16261  0552  0084               	movwf	4
 16262  0553  0851               	movf	??_vfpfcnvrt+1,w
 16263  0554  0085               	movwf	5
 16264  0555  0012               	moviw fsr0++
 16265  0556  3A69               	xorlw	105
 16266  0557  1D03               	btfss	3,2
 16267  0558  2D5A               	goto	u253_21
 16268  0559  2D5B               	goto	u253_20
 16269  055A                     u253_21:
 16270  055A  2D96               	goto	i1l4711
 16271  055B                     u253_20:
 16272  055B                     i1l4703:
 16273                           
 16274                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
 16275  055B  084E               	movf	vfpfcnvrt@fmt,w
 16276  055C  0086               	movwf	6
 16277  055D  0187               	clrf	7
 16278  055E  3001               	movlw	1
 16279  055F  0781               	addwf	1,f
 16280  0560  3141               	addfsr 1,1
 16281  0561  1803               	skipnc
 16282  0562  0A81               	incf	1,f
 16283  0563                     i1l4705:
 16284                           
 16285                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 16286  0563  084F               	movf	vfpfcnvrt@ap,w
 16287  0564  0086               	movwf	6
 16288  0565  0187               	clrf	7
 16289  0566  0801               	movf	1,w
 16290  0567  0084               	movwf	4
 16291  0568  0185               	clrf	5
 16292  0569  3002               	movlw	2
 16293  056A  0781               	addwf	1,f
 16294  056B  3F00               	moviw [0]fsr0
 16295  056C  00D0               	movwf	??_vfpfcnvrt
 16296  056D  3F01               	moviw [1]fsr0
 16297  056E  00D1               	movwf	??_vfpfcnvrt+1
 16298  056F  0850               	movf	??_vfpfcnvrt,w
 16299  0570  00D5               	movwf	vfpfcnvrt@ll
 16300  0571  0851               	movf	??_vfpfcnvrt+1,w
 16301  0572  00D6               	movwf	vfpfcnvrt@ll+1
 16302  0573  0D89               	rlf	9,f
 16303  0574  3B89               	subwfb	9,f
 16304  0575  0989               	comf	9,f
 16305  0576  00D7               	movwf	vfpfcnvrt@ll+2
 16306  0577  00D8               	movwf	vfpfcnvrt@ll+3
 16307  0578  00D9               	movwf	vfpfcnvrt@ll+4
 16308  0579  00DA               	movwf	vfpfcnvrt@ll+5
 16309  057A  00DB               	movwf	vfpfcnvrt@ll+6
 16310  057B  00DC               	movwf	vfpfcnvrt@ll+7
 16311  057C                     i1l4707:
 16312                           
 16313                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
 16314  057C  0855               	movf	vfpfcnvrt@ll,w
 16315  057D  00B0               	movwf	dtoa@d
 16316  057E  0856               	movf	vfpfcnvrt@ll+1,w
 16317  057F  00B1               	movwf	dtoa@d+1
 16318  0580  0857               	movf	vfpfcnvrt@ll+2,w
 16319  0581  00B2               	movwf	dtoa@d+2
 16320  0582  0858               	movf	vfpfcnvrt@ll+3,w
 16321  0583  00B3               	movwf	dtoa@d+3
 16322  0584  0859               	movf	vfpfcnvrt@ll+4,w
 16323  0585  00B4               	movwf	dtoa@d+4
 16324  0586  085A               	movf	vfpfcnvrt@ll+5,w
 16325  0587  00B5               	movwf	dtoa@d+5
 16326  0588  085B               	movf	vfpfcnvrt@ll+6,w
 16327  0589  00B6               	movwf	dtoa@d+6
 16328  058A  085C               	movf	vfpfcnvrt@ll+7,w
 16329  058B  00B7               	movwf	dtoa@d+7
 16330  058C  085D               	movf	vfpfcnvrt@fp,w
 16331  058D  3180  20D2  3185   	fcall	_dtoa
 16332  0590  0020               	movlb	0	; select bank0
 16333  0591  0831               	movf	?_dtoa+1,w
 16334  0592  00CF               	movwf	?_vfpfcnvrt+1
 16335  0593  0830               	movf	?_dtoa,w
 16336  0594  00CE               	movwf	?_vfpfcnvrt
 16337  0595  2DEE               	goto	i1l1974
 16338  0596                     i1l4711:
 16339                           
 16340                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
 16341  0596  084E               	movf	vfpfcnvrt@fmt,w
 16342  0597  0086               	movwf	6
 16343  0598  0187               	clrf	7
 16344  0599  3F40               	moviw [0]fsr1
 16345  059A  00D0               	movwf	??_vfpfcnvrt
 16346  059B  3F41               	moviw [1]fsr1
 16347  059C  00D1               	movwf	??_vfpfcnvrt+1
 16348  059D  0850               	movf	??_vfpfcnvrt,w
 16349  059E  0084               	movwf	4
 16350  059F  0851               	movf	??_vfpfcnvrt+1,w
 16351  05A0  0085               	movwf	5
 16352  05A1  0012               	moviw fsr0++
 16353  05A2  3A25               	xorlw	37
 16354  05A3  1D03               	btfss	3,2
 16355  05A4  2DA6               	goto	u254_21
 16356  05A5  2DA7               	goto	u254_20
 16357  05A6                     u254_21:
 16358  05A6  2DC0               	goto	i1l4721
 16359  05A7                     u254_20:
 16360  05A7                     i1l4713:
 16361                           
 16362                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
 16363  05A7  084E               	movf	vfpfcnvrt@fmt,w
 16364  05A8  0086               	movwf	6
 16365  05A9  0187               	clrf	7
 16366  05AA  3001               	movlw	1
 16367  05AB  0781               	addwf	1,f
 16368  05AC  3141               	addfsr 1,1
 16369  05AD  1803               	skipnc
 16370  05AE  0A81               	incf	1,f
 16371  05AF                     i1l4715:
 16372                           
 16373                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
 16374  05AF  3025               	movlw	37
 16375  05B0  00F3               	movwf	fputc@c
 16376  05B1  3000               	movlw	0
 16377  05B2  00F4               	movwf	fputc@c+1
 16378  05B3  085D               	movf	vfpfcnvrt@fp,w
 16379  05B4  00D0               	movwf	??_vfpfcnvrt
 16380  05B5  0850               	movf	??_vfpfcnvrt,w
 16381  05B6  00F5               	movwf	fputc@fp
 16382  05B7  318C  2459  3185   	fcall	_fputc
 16383  05BA                     i1l4717:
 16384                           
 16385                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
 16386  05BA  3001               	movlw	1
 16387  05BB  0020               	movlb	0	; select bank0
 16388  05BC  00CE               	movwf	?_vfpfcnvrt
 16389  05BD  3000               	movlw	0
 16390  05BE  00CF               	movwf	?_vfpfcnvrt+1
 16391  05BF  2DEE               	goto	i1l1974
 16392  05C0                     i1l4721:
 16393                           
 16394                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
 16395  05C0  084E               	movf	vfpfcnvrt@fmt,w
 16396  05C1  0086               	movwf	6
 16397  05C2  0187               	clrf	7
 16398  05C3  3001               	movlw	1
 16399  05C4  0781               	addwf	1,f
 16400  05C5  3141               	addfsr 1,1
 16401  05C6  1803               	skipnc
 16402  05C7  0A81               	incf	1,f
 16403  05C8                     i1l4723:
 16404                           
 16405                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
 16406  05C8  01CE               	clrf	?_vfpfcnvrt
 16407  05C9  01CF               	clrf	?_vfpfcnvrt+1
 16408  05CA  2DEE               	goto	i1l1974
 16409  05CB                     i1l4727:
 16410                           
 16411                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
 16412  05CB  084E               	movf	vfpfcnvrt@fmt,w
 16413  05CC  0086               	movwf	6
 16414  05CD  0187               	clrf	7
 16415  05CE  3F40               	moviw [0]fsr1
 16416  05CF  00D0               	movwf	??_vfpfcnvrt
 16417  05D0  3F41               	moviw [1]fsr1
 16418  05D1  00D1               	movwf	??_vfpfcnvrt+1
 16419  05D2  0850               	movf	??_vfpfcnvrt,w
 16420  05D3  0084               	movwf	4
 16421  05D4  0851               	movf	??_vfpfcnvrt+1,w
 16422  05D5  0085               	movwf	5
 16423  05D6  0800               	movf	0,w	;code access
 16424  05D7  00D2               	movwf	??_vfpfcnvrt+2
 16425  05D8  01D3               	clrf	??_vfpfcnvrt+3
 16426  05D9  0852               	movf	??_vfpfcnvrt+2,w
 16427  05DA  00F3               	movwf	fputc@c
 16428  05DB  0853               	movf	??_vfpfcnvrt+3,w
 16429  05DC  00F4               	movwf	fputc@c+1
 16430  05DD  085D               	movf	vfpfcnvrt@fp,w
 16431  05DE  00D4               	movwf	??_vfpfcnvrt+4
 16432  05DF  0854               	movf	??_vfpfcnvrt+4,w
 16433  05E0  00F5               	movwf	fputc@fp
 16434  05E1  318C  2459  3185   	fcall	_fputc
 16435  05E4                     i1l4729:
 16436                           
 16437                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
 16438  05E4  0020               	movlb	0	; select bank0
 16439  05E5  084E               	movf	vfpfcnvrt@fmt,w
 16440  05E6  0086               	movwf	6
 16441  05E7  0187               	clrf	7
 16442  05E8  3001               	movlw	1
 16443  05E9  0781               	addwf	1,f
 16444  05EA  3141               	addfsr 1,1
 16445  05EB  1803               	skipnc
 16446  05EC  0A81               	incf	1,f
 16447  05ED  2DBA               	goto	i1l4717
 16448  05EE                     i1l1974:
 16449  05EE  0008               	return
 16450  05EF                     __end_of_vfpfcnvrt:
 16451                           
 16452                           	psect	text85
 16453  00D2                     __ptext85:	
 16454 ;; *************** function _dtoa *****************
 16455 ;; Defined at:
 16456 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 16457 ;; Parameters:    Size  Location     Type
 16458 ;;  fp              1    wreg     PTR struct _IO_FILE
 16459 ;;		 -> NULL(0), 
 16460 ;;  d               8   16[BANK0 ] long long 
 16461 ;; Auto vars:     Size  Location     Type
 16462 ;;  fp              1   31[BANK0 ] PTR struct _IO_FILE
 16463 ;;		 -> NULL(0), 
 16464 ;;  n               8   36[BANK0 ] long long 
 16465 ;;  i               2   44[BANK0 ] int 
 16466 ;;  s               2   34[BANK0 ] int 
 16467 ;;  w               2   32[BANK0 ] int 
 16468 ;;  p               2   29[BANK0 ] int 
 16469 ;; Return value:  Size  Location     Type
 16470 ;;                  2   16[BANK0 ] int 
 16471 ;; Registers used:
 16472 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16473 ;; Tracked objects:
 16474 ;;		On entry : 0/0
 16475 ;;		On exit  : 0/0
 16476 ;;		Unchanged: 0/0
 16477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16478 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16479 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16480 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16481 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16482 ;;Total ram usage:       30 bytes
 16483 ;; Hardware stack levels used: 1
 16484 ;; Hardware stack levels required when called: 5
 16485 ;; This function calls:
 16486 ;;		___aodiv
 16487 ;;		___aomod
 16488 ;;		_abs
 16489 ;;		_pad
 16490 ;; This function is called by:
 16491 ;;		_vfpfcnvrt
 16492 ;; This function uses a non-reentrant model
 16493 ;;
 16494                           
 16495                           
 16496                           ;psect for function _dtoa
 16497  00D2                     _dtoa:
 16498                           
 16499                           ;incstack = 0
 16500 ;; hardware stack exceeded
 16501                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16502                           ;dtoa@fp stored from wreg
 16503  00D2  0020               	movlb	0	; select bank0
 16504  00D3  00BF               	movwf	dtoa@fp
 16505  00D4                     i1l4609:
 16506                           
 16507                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
 16508  00D4  0830               	movf	dtoa@d,w
 16509  00D5  00C4               	movwf	dtoa@n
 16510  00D6  0831               	movf	dtoa@d+1,w
 16511  00D7  00C5               	movwf	dtoa@n+1
 16512  00D8  0832               	movf	dtoa@d+2,w
 16513  00D9  00C6               	movwf	dtoa@n+2
 16514  00DA  0833               	movf	dtoa@d+3,w
 16515  00DB  00C7               	movwf	dtoa@n+3
 16516  00DC  0834               	movf	dtoa@d+4,w
 16517  00DD  00C8               	movwf	dtoa@n+4
 16518  00DE  0835               	movf	dtoa@d+5,w
 16519  00DF  00C9               	movwf	dtoa@n+5
 16520  00E0  0836               	movf	dtoa@d+6,w
 16521  00E1  00CA               	movwf	dtoa@n+6
 16522  00E2  0837               	movf	dtoa@d+7,w
 16523  00E3  00CB               	movwf	dtoa@n+7
 16524  00E4                     i1l4611:
 16525                           
 16526                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
 16527  00E4  3044               	movlw	low dtoa@n
 16528  00E5  0086               	movwf	6
 16529  00E6  3000               	movlw	high dtoa@n
 16530  00E7  0087               	movwf	7
 16531  00E8  3F47               	moviw [7]fsr1
 16532  00E9  00B8               	movwf	??_dtoa
 16533  00EA  1BB8               	btfsc	??_dtoa,7
 16534  00EB  28ED               	goto	u233_21
 16535  00EC  28EF               	goto	u233_20
 16536  00ED                     u233_21:
 16537  00ED  3001               	movlw	1
 16538  00EE  28F0               	goto	u234_20
 16539  00EF                     u233_20:
 16540  00EF  3000               	movlw	0
 16541  00F0                     u234_20:
 16542  00F0  0020               	movlb	0	; select bank0
 16543  00F1  00B9               	movwf	??_dtoa+1
 16544  00F2  01BA               	clrf	??_dtoa+2
 16545  00F3  0839               	movf	??_dtoa+1,w
 16546  00F4  00C2               	movwf	dtoa@s
 16547  00F5  083A               	movf	??_dtoa+2,w
 16548  00F6  00C3               	movwf	dtoa@s+1
 16549  00F7                     i1l4613:
 16550                           
 16551                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
 16552  00F7  0842               	movf	dtoa@s,w
 16553  00F8  0443               	iorwf	dtoa@s+1,w
 16554  00F9  1903               	btfsc	3,2
 16555  00FA  28FC               	goto	u235_21
 16556  00FB  28FD               	goto	u235_20
 16557  00FC                     u235_21:
 16558  00FC  291B               	goto	i1l1944
 16559  00FD                     u235_20:
 16560  00FD                     i1l4615:
 16561                           
 16562                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
 16563  00FD  09C4               	comf	dtoa@n,f
 16564  00FE  09C5               	comf	dtoa@n+1,f
 16565  00FF  09C6               	comf	dtoa@n+2,f
 16566  0100  09C7               	comf	dtoa@n+3,f
 16567  0101  09C8               	comf	dtoa@n+4,f
 16568  0102  09C9               	comf	dtoa@n+5,f
 16569  0103  09CA               	comf	dtoa@n+6,f
 16570  0104  09CB               	comf	dtoa@n+7,f
 16571  0105  0AC4               	incf	dtoa@n,f
 16572  0106  1D03               	skipz
 16573  0107  291B               	goto	u236_2lld
 16574  0108  0AC5               	incf	dtoa@n+1,f
 16575  0109  1D03               	skipz
 16576  010A  291B               	goto	u236_2lld
 16577  010B  0AC6               	incf	dtoa@n+2,f
 16578  010C  1D03               	skipz
 16579  010D  291B               	goto	u236_2lld
 16580  010E  0AC7               	incf	dtoa@n+3,f
 16581  010F  1D03               	skipz
 16582  0110  291B               	goto	u236_2lld
 16583  0111  0AC8               	incf	dtoa@n+4,f
 16584  0112  1D03               	skipz
 16585  0113  291B               	goto	u236_2lld
 16586  0114  0AC9               	incf	dtoa@n+5,f
 16587  0115  1D03               	skipz
 16588  0116  291B               	goto	u236_2lld
 16589  0117  0ACA               	incf	dtoa@n+6,f
 16590  0118  1D03               	skipz
 16591  0119  291B               	goto	u236_2lld
 16592  011A  0ACB               	incf	dtoa@n+7,f
 16593  011B                     u236_2lld:
 16594  011B                     i1l1944:	
 16595                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 297:     }
 16596                           
 16597                           
 16598                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
 16599  011B  0021               	movlb	1	; select bank1
 16600  011C  1BD5               	btfsc	(_prec+1)^(0+128),7
 16601  011D  291F               	goto	u237_21
 16602  011E  2920               	goto	u237_20
 16603  011F                     u237_21:
 16604  011F  2925               	goto	i1l1945
 16605  0120                     u237_20:
 16606  0120                     i1l4617:
 16607                           
 16608                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
 16609  0120  30FD               	movlw	253
 16610  0121  0020               	movlb	0	; select bank0
 16611  0122  05ED               	andwf	_flags,f
 16612  0123  30FF               	movlw	255
 16613  0124  05EE               	andwf	_flags+1,f
 16614  0125                     i1l1945:	
 16615                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 302:     }
 16616                           
 16617                           
 16618                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
 16619  0125  0021               	movlb	1	; select bank1
 16620  0126  0855               	movf	(_prec+1)^(0+128),w
 16621  0127  3A80               	xorlw	128
 16622  0128  0020               	movlb	0	; select bank0
 16623  0129  00B8               	movwf	??_dtoa
 16624  012A  3080               	movlw	128
 16625  012B  0238               	subwf	??_dtoa,w
 16626  012C  1D03               	skipz
 16627  012D  2931               	goto	u238_25
 16628  012E  3001               	movlw	1
 16629  012F  0021               	movlb	1	; select bank1
 16630  0130  0254               	subwf	_prec^(0+128),w
 16631  0131                     u238_25:
 16632  0131  1803               	skipnc
 16633  0132  2934               	goto	u238_21
 16634  0133  2935               	goto	u238_20
 16635  0134                     u238_21:
 16636  0134  293B               	goto	i1l4621
 16637  0135                     u238_20:
 16638  0135                     i1l4619:
 16639  0135  3001               	movlw	1
 16640  0136  0020               	movlb	0	; select bank0
 16641  0137  00BD               	movwf	dtoa@p
 16642  0138  3000               	movlw	0
 16643  0139  00BE               	movwf	dtoa@p+1
 16644  013A  2943               	goto	i1l1949
 16645  013B                     i1l4621:
 16646  013B  0021               	movlb	1	; select bank1
 16647  013C  0855               	movf	(_prec+1)^(0+128),w
 16648  013D  0020               	movlb	0	; select bank0
 16649  013E  00BE               	movwf	dtoa@p+1
 16650  013F  0021               	movlb	1	; select bank1
 16651  0140  0854               	movf	_prec^(0+128),w
 16652  0141  0020               	movlb	0	; select bank0
 16653  0142  00BD               	movwf	dtoa@p
 16654  0143                     i1l1949:
 16655                           
 16656                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
 16657  0143  0021               	movlb	1	; select bank1
 16658  0144  0853               	movf	(_width+1)^(0+128),w
 16659  0145  0020               	movlb	0	; select bank0
 16660  0146  00C1               	movwf	dtoa@w+1
 16661  0147  0021               	movlb	1	; select bank1
 16662  0148  0852               	movf	_width^(0+128),w
 16663  0149  0020               	movlb	0	; select bank0
 16664  014A  00C0               	movwf	dtoa@w
 16665  014B                     i1l4623:
 16666                           
 16667                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
 16668  014B  0842               	movf	dtoa@s,w
 16669  014C  0443               	iorwf	dtoa@s+1,w
 16670  014D  1D03               	btfss	3,2
 16671  014E  2950               	goto	u239_21
 16672  014F  2951               	goto	u239_20
 16673  0150                     u239_21:
 16674  0150  2955               	goto	i1l4627
 16675  0151                     u239_20:
 16676  0151                     i1l4625:
 16677  0151  1D6D               	btfss	_flags,2
 16678  0152  2954               	goto	u240_21
 16679  0153  2955               	goto	u240_20
 16680  0154                     u240_21:
 16681  0154  2959               	goto	i1l1950
 16682  0155                     u240_20:
 16683  0155                     i1l4627:
 16684                           
 16685                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
 16686  0155  30FF               	movlw	255
 16687  0156  07C0               	addwf	dtoa@w,f
 16688  0157  30FF               	movlw	255
 16689  0158  3DC1               	addwfc	dtoa@w+1,f
 16690  0159                     i1l1950:	
 16691                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 307:     }
 16692                           
 16693                           
 16694                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
 16695  0159  301F               	movlw	31
 16696  015A  00CC               	movwf	dtoa@i
 16697  015B  3000               	movlw	0
 16698  015C  00CD               	movwf	dtoa@i+1
 16699  015D                     i1l4629:
 16700                           
 16701                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
 16702  015D  0024               	movlb	4	; select bank4
 16703  015E  01BF               	clrf	(_dbuf^(0+512)+31)
 16704                           
 16705                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16706  015F  29C9               	goto	i1l1953
 16707  0160                     i1l4631:
 16708                           
 16709                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
 16710  0160  30FF               	movlw	255
 16711  0161  0020               	movlb	0	; select bank0
 16712  0162  07CC               	addwf	dtoa@i,f
 16713  0163  30FF               	movlw	255
 16714  0164  3DCD               	addwfc	dtoa@i+1,f
 16715  0165                     i1l4633:
 16716                           
 16717                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
 16718  0165  300A               	movlw	10
 16719  0166  00A0               	movwf	___aomod@divisor
 16720  0167  01A1               	clrf	___aomod@divisor+1
 16721  0168  01A2               	clrf	___aomod@divisor+2
 16722  0169  01A3               	clrf	___aomod@divisor+3
 16723  016A  01A4               	clrf	___aomod@divisor+4
 16724  016B  01A5               	clrf	___aomod@divisor+5
 16725  016C  01A6               	clrf	___aomod@divisor+6
 16726  016D  01A7               	clrf	___aomod@divisor+7
 16727  016E  0844               	movf	dtoa@n,w
 16728  016F  00A8               	movwf	___aomod@dividend
 16729  0170  0845               	movf	dtoa@n+1,w
 16730  0171  00A9               	movwf	___aomod@dividend+1
 16731  0172  0846               	movf	dtoa@n+2,w
 16732  0173  00AA               	movwf	___aomod@dividend+2
 16733  0174  0847               	movf	dtoa@n+3,w
 16734  0175  00AB               	movwf	___aomod@dividend+3
 16735  0176  0848               	movf	dtoa@n+4,w
 16736  0177  00AC               	movwf	___aomod@dividend+4
 16737  0178  0849               	movf	dtoa@n+5,w
 16738  0179  00AD               	movwf	___aomod@dividend+5
 16739  017A  084A               	movf	dtoa@n+6,w
 16740  017B  00AE               	movwf	___aomod@dividend+6
 16741  017C  084B               	movf	dtoa@n+7,w
 16742  017D  00AF               	movwf	___aomod@dividend+7
 16743  017E  3183  233F  3180   	fcall	___aomod
 16744  0181  0020               	movlb	0	; select bank0
 16745  0182  0821               	movf	?___aomod+1,w
 16746  0183  00F4               	movwf	abs@a+1
 16747  0184  0820               	movf	?___aomod,w
 16748  0185  00F3               	movwf	abs@a
 16749  0186  3188  20E9  3180   	fcall	_abs
 16750  0189  0873               	movf	?_abs,w
 16751  018A  3E30               	addlw	48
 16752  018B  0020               	movlb	0	; select bank0
 16753  018C  00B8               	movwf	??_dtoa
 16754  018D  084C               	movf	dtoa@i,w
 16755  018E  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 16756  018F  0086               	movwf	6
 16757  0190  3002               	movlw	2	; select bank4/5
 16758  0191  0087               	movwf	7
 16759  0192  0838               	movf	??_dtoa,w
 16760  0193  0081               	movwf	1
 16761  0194                     i1l4635:
 16762                           
 16763                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
 16764  0194  30FF               	movlw	255
 16765  0195  07BD               	addwf	dtoa@p,f
 16766  0196  30FF               	movlw	255
 16767  0197  3DBE               	addwfc	dtoa@p+1,f
 16768  0198                     i1l4637:
 16769                           
 16770                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
 16771  0198  30FF               	movlw	255
 16772  0199  07C0               	addwf	dtoa@w,f
 16773  019A  30FF               	movlw	255
 16774  019B  3DC1               	addwfc	dtoa@w+1,f
 16775  019C                     i1l4639:
 16776                           
 16777                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
 16778  019C  300A               	movlw	10
 16779  019D  00A0               	movwf	___aodiv@divisor
 16780  019E  01A1               	clrf	___aodiv@divisor+1
 16781  019F  01A2               	clrf	___aodiv@divisor+2
 16782  01A0  01A3               	clrf	___aodiv@divisor+3
 16783  01A1  01A4               	clrf	___aodiv@divisor+4
 16784  01A2  01A5               	clrf	___aodiv@divisor+5
 16785  01A3  01A6               	clrf	___aodiv@divisor+6
 16786  01A4  01A7               	clrf	___aodiv@divisor+7
 16787  01A5  0844               	movf	dtoa@n,w
 16788  01A6  00A8               	movwf	___aodiv@dividend
 16789  01A7  0845               	movf	dtoa@n+1,w
 16790  01A8  00A9               	movwf	___aodiv@dividend+1
 16791  01A9  0846               	movf	dtoa@n+2,w
 16792  01AA  00AA               	movwf	___aodiv@dividend+2
 16793  01AB  0847               	movf	dtoa@n+3,w
 16794  01AC  00AB               	movwf	___aodiv@dividend+3
 16795  01AD  0848               	movf	dtoa@n+4,w
 16796  01AE  00AC               	movwf	___aodiv@dividend+4
 16797  01AF  0849               	movf	dtoa@n+5,w
 16798  01B0  00AD               	movwf	___aodiv@dividend+5
 16799  01B1  084A               	movf	dtoa@n+6,w
 16800  01B2  00AE               	movwf	___aodiv@dividend+6
 16801  01B3  084B               	movf	dtoa@n+7,w
 16802  01B4  00AF               	movwf	___aodiv@dividend+7
 16803  01B5  3182  223E  3180   	fcall	___aodiv
 16804  01B8  0020               	movlb	0	; select bank0
 16805  01B9  0820               	movf	?___aodiv,w
 16806  01BA  00C4               	movwf	dtoa@n
 16807  01BB  0821               	movf	?___aodiv+1,w
 16808  01BC  00C5               	movwf	dtoa@n+1
 16809  01BD  0822               	movf	?___aodiv+2,w
 16810  01BE  00C6               	movwf	dtoa@n+2
 16811  01BF  0823               	movf	?___aodiv+3,w
 16812  01C0  00C7               	movwf	dtoa@n+3
 16813  01C1  0824               	movf	?___aodiv+4,w
 16814  01C2  00C8               	movwf	dtoa@n+4
 16815  01C3  0825               	movf	?___aodiv+5,w
 16816  01C4  00C9               	movwf	dtoa@n+5
 16817  01C5  0826               	movf	?___aodiv+6,w
 16818  01C6  00CA               	movwf	dtoa@n+6
 16819  01C7  0827               	movf	?___aodiv+7,w
 16820  01C8  00CB               	movwf	dtoa@n+7
 16821  01C9                     i1l1953:	
 16822                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 318:     }
 16823                           
 16824                           
 16825                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16826  01C9  0020               	movlb	0	; select bank0
 16827  01CA  084D               	movf	dtoa@i+1,w
 16828  01CB  3A80               	xorlw	128
 16829  01CC  00B8               	movwf	??_dtoa
 16830  01CD  3080               	movlw	128
 16831  01CE  0238               	subwf	??_dtoa,w
 16832  01CF  1D03               	skipz
 16833  01D0  29D3               	goto	u241_25
 16834  01D1  3001               	movlw	1
 16835  01D2  024C               	subwf	dtoa@i,w
 16836  01D3                     u241_25:
 16837  01D3  1C03               	skipc
 16838  01D4  29D6               	goto	u241_21
 16839  01D5  29D7               	goto	u241_20
 16840  01D6                     u241_21:
 16841  01D6  2A04               	goto	i1l4649
 16842  01D7                     u241_20:
 16843  01D7                     i1l4641:
 16844  01D7  0020               	movlb	0	; select bank0
 16845  01D8  0844               	movf	dtoa@n,w
 16846  01D9  0445               	iorwf	dtoa@n+1,w
 16847  01DA  0446               	iorwf	dtoa@n+2,w
 16848  01DB  0447               	iorwf	dtoa@n+3,w
 16849  01DC  0448               	iorwf	dtoa@n+4,w
 16850  01DD  0449               	iorwf	dtoa@n+5,w
 16851  01DE  044A               	iorwf	dtoa@n+6,w
 16852  01DF  044B               	iorwf	dtoa@n+7,w
 16853  01E0  1D03               	skipz
 16854  01E1  29E3               	goto	u242_21
 16855  01E2  29E4               	goto	u242_20
 16856  01E3                     u242_21:
 16857  01E3  2960               	goto	i1l4631
 16858  01E4                     u242_20:
 16859  01E4                     i1l4643:
 16860  01E4  083E               	movf	dtoa@p+1,w
 16861  01E5  3A80               	xorlw	128
 16862  01E6  00B8               	movwf	??_dtoa
 16863  01E7  3080               	movlw	128
 16864  01E8  0238               	subwf	??_dtoa,w
 16865  01E9  1D03               	skipz
 16866  01EA  29ED               	goto	u243_25
 16867  01EB  3001               	movlw	1
 16868  01EC  023D               	subwf	dtoa@p,w
 16869  01ED                     u243_25:
 16870  01ED  1803               	skipnc
 16871  01EE  29F0               	goto	u243_21
 16872  01EF  29F1               	goto	u243_20
 16873  01F0                     u243_21:
 16874  01F0  2960               	goto	i1l4631
 16875  01F1                     u243_20:
 16876  01F1                     i1l4645:
 16877  01F1  0020               	movlb	0	; select bank0
 16878  01F2  0841               	movf	dtoa@w+1,w
 16879  01F3  3A80               	xorlw	128
 16880  01F4  00B8               	movwf	??_dtoa
 16881  01F5  3080               	movlw	128
 16882  01F6  0238               	subwf	??_dtoa,w
 16883  01F7  1D03               	skipz
 16884  01F8  29FB               	goto	u244_25
 16885  01F9  3001               	movlw	1
 16886  01FA  0240               	subwf	dtoa@w,w
 16887  01FB                     u244_25:
 16888  01FB  1C03               	skipc
 16889  01FC  29FE               	goto	u244_21
 16890  01FD  29FF               	goto	u244_20
 16891  01FE                     u244_21:
 16892  01FE  2A04               	goto	i1l4649
 16893  01FF                     u244_20:
 16894  01FF                     i1l4647:
 16895  01FF  0020               	movlb	0	; select bank0
 16896  0200  18ED               	btfsc	_flags,1
 16897  0201  2A03               	goto	u245_21
 16898  0202  2A04               	goto	u245_20
 16899  0203                     u245_21:
 16900  0203  2960               	goto	i1l4631
 16901  0204                     u245_20:
 16902  0204                     i1l4649:
 16903                           
 16904                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
 16905  0204  0020               	movlb	0	; select bank0
 16906  0205  0842               	movf	dtoa@s,w
 16907  0206  0443               	iorwf	dtoa@s+1,w
 16908  0207  1D03               	btfss	3,2
 16909  0208  2A0A               	goto	u246_21
 16910  0209  2A0B               	goto	u246_20
 16911  020A                     u246_21:
 16912  020A  2A0F               	goto	i1l4653
 16913  020B                     u246_20:
 16914  020B                     i1l4651:
 16915  020B  1D6D               	btfss	_flags,2
 16916  020C  2A0E               	goto	u247_21
 16917  020D  2A0F               	goto	u247_20
 16918  020E                     u247_21:
 16919  020E  2A2B               	goto	i1l4663
 16920  020F                     u247_20:
 16921  020F                     i1l4653:
 16922                           
 16923                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
 16924  020F  30FF               	movlw	255
 16925  0210  07CC               	addwf	dtoa@i,f
 16926  0211  30FF               	movlw	255
 16927  0212  3DCD               	addwfc	dtoa@i+1,f
 16928  0213                     i1l4655:
 16929                           
 16930                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
 16931  0213  0842               	movf	dtoa@s,w
 16932  0214  0443               	iorwf	dtoa@s+1,w
 16933  0215  1D03               	btfss	3,2
 16934  0216  2A18               	goto	u248_21
 16935  0217  2A19               	goto	u248_20
 16936  0218                     u248_21:
 16937  0218  2A1E               	goto	i1l4659
 16938  0219                     u248_20:
 16939  0219                     i1l4657:
 16940  0219  302B               	movlw	43
 16941  021A  00BB               	movwf	_dtoa$2856
 16942  021B  3000               	movlw	0
 16943  021C  00BC               	movwf	_dtoa$2856+1
 16944  021D  2A22               	goto	i1l4661
 16945  021E                     i1l4659:
 16946  021E  302D               	movlw	45
 16947  021F  00BB               	movwf	_dtoa$2856
 16948  0220  3000               	movlw	0
 16949  0221  00BC               	movwf	_dtoa$2856+1
 16950  0222                     i1l4661:
 16951  0222  083B               	movf	_dtoa$2856,w
 16952  0223  00B8               	movwf	??_dtoa
 16953  0224  084C               	movf	dtoa@i,w
 16954  0225  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 16955  0226  0086               	movwf	6
 16956  0227  3002               	movlw	2	; select bank4/5
 16957  0228  0087               	movwf	7
 16958  0229  0838               	movf	??_dtoa,w
 16959  022A  0081               	movwf	1
 16960  022B                     i1l4663:
 16961                           
 16962                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
 16963  022B  084C               	movf	dtoa@i,w
 16964  022C  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 16965  022D  00B8               	movwf	??_dtoa
 16966  022E  0838               	movf	??_dtoa,w
 16967  022F  00A7               	movwf	pad@buf
 16968  0230  0841               	movf	dtoa@w+1,w
 16969  0231  00A9               	movwf	pad@p+1
 16970  0232  0840               	movf	dtoa@w,w
 16971  0233  00A8               	movwf	pad@p
 16972  0234  083F               	movf	dtoa@fp,w
 16973  0235  318E  2694  3180   	fcall	_pad
 16974  0238  0020               	movlb	0	; select bank0
 16975  0239  0828               	movf	?_pad+1,w
 16976  023A  00B1               	movwf	?_dtoa+1
 16977  023B  0827               	movf	?_pad,w
 16978  023C  00B0               	movwf	?_dtoa
 16979  023D                     i1l1967:
 16980  023D  0008               	return
 16981  023E                     __end_of_dtoa:
 16982                           
 16983                           	psect	text86
 16984  0E94                     __ptext86:	
 16985 ;; *************** function _pad *****************
 16986 ;; Defined at:
 16987 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 16988 ;; Parameters:    Size  Location     Type
 16989 ;;  fp              1    wreg     PTR struct _IO_FILE
 16990 ;;		 -> NULL(0), 
 16991 ;;  buf             1    7[BANK0 ] PTR unsigned char 
 16992 ;;		 -> dbuf(32), 
 16993 ;;  p               2    8[BANK0 ] int 
 16994 ;; Auto vars:     Size  Location     Type
 16995 ;;  fp              1   14[BANK0 ] PTR struct _IO_FILE
 16996 ;;		 -> NULL(0), 
 16997 ;;  w               2   12[BANK0 ] int 
 16998 ;;  i               2   10[BANK0 ] int 
 16999 ;; Return value:  Size  Location     Type
 17000 ;;                  2    7[BANK0 ] int 
 17001 ;; Registers used:
 17002 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17003 ;; Tracked objects:
 17004 ;;		On entry : 0/0
 17005 ;;		On exit  : 0/0
 17006 ;;		Unchanged: 0/0
 17007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17008 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17009 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17010 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17011 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17012 ;;Total ram usage:        9 bytes
 17013 ;; Hardware stack levels used: 1
 17014 ;; Hardware stack levels required when called: 4
 17015 ;; This function calls:
 17016 ;;		_fputc
 17017 ;;		_fputs
 17018 ;;		i1_strlen
 17019 ;; This function is called by:
 17020 ;;		_dtoa
 17021 ;; This function uses a non-reentrant model
 17022 ;;
 17023                           
 17024                           
 17025                           ;psect for function _pad
 17026  0E94                     _pad:
 17027                           
 17028                           ;incstack = 0
 17029 ;; hardware stack exceeded
 17030                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17031                           ;pad@fp stored from wreg
 17032  0E94  0020               	movlb	0	; select bank0
 17033  0E95  00AE               	movwf	pad@fp
 17034  0E96                     i1l4543:
 17035                           
 17036                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 17037  0E96  1C6D               	btfss	_flags,0
 17038  0E97  2E99               	goto	u223_21
 17039  0E98  2E9A               	goto	u223_20
 17040  0E99                     u223_21:
 17041  0E99  2EA2               	goto	i1l4547
 17042  0E9A                     u223_20:
 17043  0E9A                     i1l4545:
 17044                           
 17045                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 17046  0E9A  082E               	movf	pad@fp,w
 17047  0E9B  00FC               	movwf	??_pad
 17048  0E9C  087C               	movf	??_pad,w
 17049  0E9D  00FB               	movwf	fputs@fp
 17050  0E9E  0827               	movf	pad@buf,w
 17051  0E9F  318A  224C  318E   	fcall	_fputs
 17052  0EA2                     i1l4547:
 17053                           
 17054                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 17055  0EA2  0020               	movlb	0	; select bank0
 17056  0EA3  1BA9               	btfsc	pad@p+1,7
 17057  0EA4  2EA6               	goto	u224_21
 17058  0EA5  2EA7               	goto	u224_20
 17059  0EA6                     u224_21:
 17060  0EA6  2EAC               	goto	i1l4551
 17061  0EA7                     u224_20:
 17062  0EA7                     i1l4549:
 17063  0EA7  0829               	movf	pad@p+1,w
 17064  0EA8  00AD               	movwf	pad@w+1
 17065  0EA9  0828               	movf	pad@p,w
 17066  0EAA  00AC               	movwf	pad@w
 17067  0EAB  2EAE               	goto	i1l1936
 17068  0EAC                     i1l4551:
 17069  0EAC  01AC               	clrf	pad@w
 17070  0EAD  01AD               	clrf	pad@w+1
 17071  0EAE                     i1l1936:
 17072                           
 17073                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 17074  0EAE  01AA               	clrf	pad@i
 17075  0EAF  01AB               	clrf	pad@i+1
 17076                           
 17077                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 17078  0EB0  2EC2               	goto	i1l4557
 17079  0EB1                     i1l4553:
 17080                           
 17081                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 17082  0EB1  3020               	movlw	32
 17083  0EB2  00F3               	movwf	fputc@c
 17084  0EB3  3000               	movlw	0
 17085  0EB4  00F4               	movwf	fputc@c+1
 17086  0EB5  0020               	movlb	0	; select bank0
 17087  0EB6  082E               	movf	pad@fp,w
 17088  0EB7  00FC               	movwf	??_pad
 17089  0EB8  087C               	movf	??_pad,w
 17090  0EB9  00F5               	movwf	fputc@fp
 17091  0EBA  318C  2459  318E   	fcall	_fputc
 17092  0EBD                     i1l4555:
 17093                           
 17094                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
 17095  0EBD  3001               	movlw	1
 17096  0EBE  0020               	movlb	0	; select bank0
 17097  0EBF  07AA               	addwf	pad@i,f
 17098  0EC0  3000               	movlw	0
 17099  0EC1  3DAB               	addwfc	pad@i+1,f
 17100  0EC2                     i1l4557:
 17101                           
 17102                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 17103  0EC2  082B               	movf	pad@i+1,w
 17104  0EC3  3A80               	xorlw	128
 17105  0EC4  00FC               	movwf	??_pad
 17106  0EC5  082D               	movf	pad@w+1,w
 17107  0EC6  3A80               	xorlw	128
 17108  0EC7  027C               	subwf	??_pad,w
 17109  0EC8  1D03               	skipz
 17110  0EC9  2ECC               	goto	u225_25
 17111  0ECA  082C               	movf	pad@w,w
 17112  0ECB  022A               	subwf	pad@i,w
 17113  0ECC                     u225_25:
 17114  0ECC  1C03               	skipc
 17115  0ECD  2ECF               	goto	u225_21
 17116  0ECE  2ED0               	goto	u225_20
 17117  0ECF                     u225_21:
 17118  0ECF  2EB1               	goto	i1l4553
 17119  0ED0                     u225_20:
 17120  0ED0                     i1l1939:
 17121                           
 17122                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 17123  0ED0  0020               	movlb	0	; select bank0
 17124  0ED1  186D               	btfsc	_flags,0
 17125  0ED2  2ED4               	goto	u226_21
 17126  0ED3  2ED5               	goto	u226_20
 17127  0ED4                     u226_21:
 17128  0ED4  2EDD               	goto	i1l4561
 17129  0ED5                     u226_20:
 17130  0ED5                     i1l4559:
 17131                           
 17132                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 17133  0ED5  082E               	movf	pad@fp,w
 17134  0ED6  00FC               	movwf	??_pad
 17135  0ED7  087C               	movf	??_pad,w
 17136  0ED8  00FB               	movwf	fputs@fp
 17137  0ED9  0827               	movf	pad@buf,w
 17138  0EDA  318A  224C  318E   	fcall	_fputs
 17139  0EDD                     i1l4561:
 17140                           
 17141                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 17142  0EDD  0020               	movlb	0	; select bank0
 17143  0EDE  0827               	movf	pad@buf,w
 17144  0EDF  00F0               	movwf	i1strlen@s
 17145  0EE0  3002               	movlw	2
 17146  0EE1  00F1               	movwf	i1strlen@s+1
 17147  0EE2  3188  209E  318E   	fcall	i1_strlen
 17148  0EE5  0020               	movlb	0	; select bank0
 17149  0EE6  082C               	movf	pad@w,w
 17150  0EE7  0770               	addwf	?i1_strlen,w
 17151  0EE8  00A7               	movwf	?_pad
 17152  0EE9  082D               	movf	pad@w+1,w
 17153  0EEA  3D71               	addwfc	?i1_strlen+1,w
 17154  0EEB  00A8               	movwf	?_pad+1
 17155  0EEC                     i1l1941:
 17156  0EEC  0008               	return
 17157  0EED                     __end_of_pad:
 17158                           
 17159                           	psect	text87
 17160  089E                     __ptext87:	
 17161 ;; *************** function i1_strlen *****************
 17162 ;; Defined at:
 17163 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
 17164 ;; Parameters:    Size  Location     Type
 17165 ;;  s               2    0[COMMON] PTR const unsigned char 
 17166 ;;		 -> dbuf(32), STR_19(3), STR_17(8), STR_15(7), 
 17167 ;;		 -> STR_13(8), STR_11(7), STR_9(8), STR_7(7), 
 17168 ;;		 -> STR_5(8), STR_3(7), 
 17169 ;; Auto vars:     Size  Location     Type
 17170 ;;  a               2    3[COMMON] PTR const unsigned char 
 17171 ;;		 -> dbuf(32), STR_19(3), STR_17(8), STR_15(7), 
 17172 ;;		 -> STR_13(8), STR_11(7), STR_9(8), STR_7(7), 
 17173 ;;		 -> STR_5(8), STR_3(7), 
 17174 ;; Return value:  Size  Location     Type
 17175 ;;                  2    0[COMMON] unsigned int 
 17176 ;; Registers used:
 17177 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 17178 ;; Tracked objects:
 17179 ;;		On entry : 0/0
 17180 ;;		On exit  : 0/0
 17181 ;;		Unchanged: 0/0
 17182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17183 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17184 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17185 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17186 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17187 ;;Total ram usage:        5 bytes
 17188 ;; Hardware stack levels used: 1
 17189 ;; This function calls:
 17190 ;;		Nothing
 17191 ;; This function is called by:
 17192 ;;		_pad
 17193 ;; This function uses a non-reentrant model
 17194 ;;
 17195                           
 17196                           
 17197                           ;psect for function i1_strlen
 17198  089E                     i1_strlen:
 17199  089E                     i1l4463:	
 17200                           ;incstack = 0
 17201 ;; hardware stack exceeded
 17202                           ; Regs used in i1_strlen: [wreg-fsr0h+status,2+status,0]
 17203                           
 17204  089E  0871               	movf	i1strlen@s+1,w
 17205  089F  00F4               	movwf	i1strlen@a+1
 17206  08A0  0870               	movf	i1strlen@s,w
 17207  08A1  00F3               	movwf	i1strlen@a
 17208  08A2  28A7               	goto	i1l4467
 17209  08A3                     i1l4465:
 17210  08A3  3001               	movlw	1
 17211  08A4  07F0               	addwf	i1strlen@s,f
 17212  08A5  3000               	movlw	0
 17213  08A6  3DF1               	addwfc	i1strlen@s+1,f
 17214  08A7                     i1l4467:
 17215  08A7  0870               	movf	i1strlen@s,w
 17216  08A8  0084               	movwf	4
 17217  08A9  0871               	movf	i1strlen@s+1,w
 17218  08AA  0085               	movwf	5
 17219  08AB  0012               	moviw fsr0++
 17220  08AC  1D03               	btfss	3,2
 17221  08AD  28AF               	goto	u201_21
 17222  08AE  28B0               	goto	u201_20
 17223  08AF                     u201_21:
 17224  08AF  28A3               	goto	i1l4465
 17225  08B0                     u201_20:
 17226  08B0                     i1l4469:
 17227  08B0  0873               	movf	i1strlen@a,w
 17228  08B1  0270               	subwf	i1strlen@s,w
 17229  08B2  00F0               	movwf	?i1_strlen
 17230  08B3  0874               	movf	i1strlen@a+1,w
 17231  08B4  3B71               	subwfb	i1strlen@s+1,w
 17232  08B5  00F1               	movwf	?i1_strlen+1
 17233  08B6                     i1l2014:
 17234  08B6  0008               	return
 17235  08B7                     __end_ofi1_strlen:
 17236                           
 17237                           	psect	text88
 17238  0A4C                     __ptext88:	
 17239 ;; *************** function _fputs *****************
 17240 ;; Defined at:
 17241 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
 17242 ;; Parameters:    Size  Location     Type
 17243 ;;  s               1    wreg     PTR const unsigned char 
 17244 ;;		 -> dbuf(32), 
 17245 ;;  fp              1   11[COMMON] PTR struct _IO_FILE
 17246 ;;		 -> NULL(0), 
 17247 ;; Auto vars:     Size  Location     Type
 17248 ;;  s               1    6[BANK0 ] PTR const unsigned char 
 17249 ;;		 -> dbuf(32), 
 17250 ;;  i               2    4[BANK0 ] int 
 17251 ;;  c               1    3[BANK0 ] unsigned char 
 17252 ;; Return value:  Size  Location     Type
 17253 ;;                  2   11[COMMON] int 
 17254 ;; Registers used:
 17255 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17256 ;; Tracked objects:
 17257 ;;		On entry : 0/0
 17258 ;;		On exit  : 0/0
 17259 ;;		Unchanged: 0/0
 17260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17261 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17262 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17263 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17264 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17265 ;;Total ram usage:        8 bytes
 17266 ;; Hardware stack levels used: 1
 17267 ;; Hardware stack levels required when called: 3
 17268 ;; This function calls:
 17269 ;;		_fputc
 17270 ;; This function is called by:
 17271 ;;		_pad
 17272 ;; This function uses a non-reentrant model
 17273 ;;
 17274                           
 17275                           
 17276                           ;psect for function _fputs
 17277  0A4C                     _fputs:
 17278                           
 17279                           ;incstack = 0
 17280 ;; hardware stack exceeded
 17281                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17282                           ;fputs@s stored from wreg
 17283  0A4C  0020               	movlb	0	; select bank0
 17284  0A4D  00A6               	movwf	fputs@s
 17285  0A4E                     i1l4455:
 17286  0A4E  01A4               	clrf	fputs@i
 17287  0A4F  01A5               	clrf	fputs@i+1
 17288  0A50  2A64               	goto	i1l4461
 17289  0A51                     i1l4457:
 17290  0A51  0823               	movf	fputs@c,w
 17291  0A52  00A0               	movwf	??_fputs
 17292  0A53  01A1               	clrf	??_fputs+1
 17293  0A54  0820               	movf	??_fputs,w
 17294  0A55  00F3               	movwf	fputc@c
 17295  0A56  0821               	movf	??_fputs+1,w
 17296  0A57  00F4               	movwf	fputc@c+1
 17297  0A58  087B               	movf	fputs@fp,w
 17298  0A59  00A2               	movwf	??_fputs+2
 17299  0A5A  0822               	movf	??_fputs+2,w
 17300  0A5B  00F5               	movwf	fputc@fp
 17301  0A5C  318C  2459  318A   	fcall	_fputc
 17302  0A5F                     i1l4459:
 17303  0A5F  3001               	movlw	1
 17304  0A60  0020               	movlb	0	; select bank0
 17305  0A61  07A4               	addwf	fputs@i,f
 17306  0A62  3000               	movlw	0
 17307  0A63  3DA5               	addwfc	fputs@i+1,f
 17308  0A64                     i1l4461:
 17309  0A64  0824               	movf	fputs@i,w
 17310  0A65  0726               	addwf	fputs@s,w
 17311  0A66  00A0               	movwf	??_fputs
 17312  0A67  0820               	movf	??_fputs,w
 17313  0A68  0086               	movwf	6
 17314  0A69  3002               	movlw	2	; select bank4/5
 17315  0A6A  0087               	movwf	7
 17316  0A6B  0801               	movf	1,w
 17317  0A6C  00A1               	movwf	??_fputs+1
 17318  0A6D  0821               	movf	??_fputs+1,w
 17319  0A6E  00A3               	movwf	fputs@c
 17320  0A6F  0823               	movf	fputs@c,w
 17321  0A70  1D03               	btfss	3,2
 17322  0A71  2A73               	goto	u200_21
 17323  0A72  2A74               	goto	u200_20
 17324  0A73                     u200_21:
 17325  0A73  2A51               	goto	i1l4457
 17326  0A74                     u200_20:
 17327  0A74                     i1l2008:
 17328  0A74  0008               	return
 17329  0A75                     __end_of_fputs:
 17330                           
 17331                           	psect	text89
 17332  0C59                     __ptext89:	
 17333 ;; *************** function _fputc *****************
 17334 ;; Defined at:
 17335 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
 17336 ;; Parameters:    Size  Location     Type
 17337 ;;  c               2    3[COMMON] int 
 17338 ;;  fp              1    5[COMMON] PTR struct _IO_FILE
 17339 ;;		 -> NULL(0), 
 17340 ;; Auto vars:     Size  Location     Type
 17341 ;;		None
 17342 ;; Return value:  Size  Location     Type
 17343 ;;                  2    3[COMMON] int 
 17344 ;; Registers used:
 17345 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17346 ;; Tracked objects:
 17347 ;;		On entry : 0/0
 17348 ;;		On exit  : 0/0
 17349 ;;		Unchanged: 0/0
 17350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17351 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17353 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17354 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17355 ;;Total ram usage:        8 bytes
 17356 ;; Hardware stack levels used: 1
 17357 ;; Hardware stack levels required when called: 2
 17358 ;; This function calls:
 17359 ;;		_putch
 17360 ;; This function is called by:
 17361 ;;		_pad
 17362 ;;		_vfpfcnvrt
 17363 ;;		_fputs
 17364 ;; This function uses a non-reentrant model
 17365 ;;
 17366                           
 17367                           
 17368                           ;psect for function _fputc
 17369  0C59                     _fputc:
 17370  0C59                     i1l4427:	
 17371                           ;incstack = 0
 17372 ;; hardware stack exceeded
 17373                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17374                           
 17375  0C59  0875               	movf	fputc@fp,w
 17376  0C5A  1903               	btfsc	3,2
 17377  0C5B  2C5D               	goto	u194_21
 17378  0C5C  2C5E               	goto	u194_20
 17379  0C5D                     u194_21:
 17380  0C5D  2C63               	goto	i1l4431
 17381  0C5E                     u194_20:
 17382  0C5E                     i1l4429:
 17383  0C5E  0875               	movf	fputc@fp,w
 17384  0C5F  1D03               	btfss	3,2
 17385  0C60  2C62               	goto	u195_21
 17386  0C61  2C63               	goto	u195_20
 17387  0C62                     u195_21:
 17388  0C62  2C68               	goto	i1l4433
 17389  0C63                     u195_20:
 17390  0C63                     i1l4431:
 17391  0C63  0873               	movf	fputc@c,w
 17392  0C64  3197  270E  318C   	fcall	_putch
 17393  0C67  2C97               	goto	i1l2000
 17394  0C68                     i1l4433:
 17395  0C68  0875               	movf	fputc@fp,w
 17396  0C69  3E03               	addlw	3
 17397  0C6A  0086               	movwf	6
 17398  0C6B  0187               	clrf	7
 17399  0C6C  0016               	moviw fsr1++
 17400  0C6D  0401               	iorwf	1,w
 17401  0C6E  1903               	btfsc	3,2
 17402  0C6F  2C71               	goto	u196_21
 17403  0C70  2C72               	goto	u196_20
 17404  0C71                     u196_21:
 17405  0C71  2C8F               	goto	i1l4437
 17406  0C72                     u196_20:
 17407  0C72                     i1l4435:
 17408  0C72  0875               	movf	fputc@fp,w
 17409  0C73  3E03               	addlw	3
 17410  0C74  0086               	movwf	6
 17411  0C75  0187               	clrf	7
 17412  0C76  3F40               	moviw [0]fsr1
 17413  0C77  00F6               	movwf	??_fputc
 17414  0C78  3F41               	moviw [1]fsr1
 17415  0C79  00F7               	movwf	??_fputc+1
 17416  0C7A  0A75               	incf	fputc@fp,w
 17417  0C7B  0086               	movwf	6
 17418  0C7C  0187               	clrf	7
 17419  0C7D  3F40               	moviw [0]fsr1
 17420  0C7E  00F8               	movwf	??_fputc+2
 17421  0C7F  3F41               	moviw [1]fsr1
 17422  0C80  00F9               	movwf	??_fputc+3
 17423  0C81  0879               	movf	??_fputc+3,w
 17424  0C82  3A80               	xorlw	128
 17425  0C83  00FA               	movwf	??_fputc+4
 17426  0C84  0877               	movf	??_fputc+1,w
 17427  0C85  3A80               	xorlw	128
 17428  0C86  027A               	subwf	??_fputc+4,w
 17429  0C87  1D03               	skipz
 17430  0C88  2C8B               	goto	u197_25
 17431  0C89  0876               	movf	??_fputc,w
 17432  0C8A  0278               	subwf	??_fputc+2,w
 17433  0C8B                     u197_25:
 17434  0C8B  1803               	skipnc
 17435  0C8C  2C8E               	goto	u197_21
 17436  0C8D  2C8F               	goto	u197_20
 17437  0C8E                     u197_21:
 17438  0C8E  2C97               	goto	i1l2000
 17439  0C8F                     u197_20:
 17440  0C8F                     i1l4437:
 17441  0C8F  0A75               	incf	fputc@fp,w
 17442  0C90  0086               	movwf	6
 17443  0C91  0187               	clrf	7
 17444  0C92  3001               	movlw	1
 17445  0C93  0781               	addwf	1,f
 17446  0C94  3141               	addfsr 1,1
 17447  0C95  1803               	skipnc
 17448  0C96  0A81               	incf	1,f
 17449  0C97                     i1l2000:
 17450  0C97  0008               	return
 17451  0C98                     __end_of_fputc:
 17452                           
 17453                           	psect	text90
 17454  170E                     __ptext90:	
 17455 ;; *************** function _putch *****************
 17456 ;; Defined at:
 17457 ;;		line 201 in file "mcc_generated_files/eusart.c"
 17458 ;; Parameters:    Size  Location     Type
 17459 ;;  txData          1    wreg     unsigned char 
 17460 ;; Auto vars:     Size  Location     Type
 17461 ;;  txData          1    2[COMMON] unsigned char 
 17462 ;; Return value:  Size  Location     Type
 17463 ;;                  1    wreg      void 
 17464 ;; Registers used:
 17465 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17466 ;; Tracked objects:
 17467 ;;		On entry : 0/0
 17468 ;;		On exit  : 0/0
 17469 ;;		Unchanged: 0/0
 17470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17472 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17474 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17475 ;;Total ram usage:        1 bytes
 17476 ;; Hardware stack levels used: 1
 17477 ;; Hardware stack levels required when called: 1
 17478 ;; This function calls:
 17479 ;;		_EUSART_Write
 17480 ;; This function is called by:
 17481 ;;		_fputc
 17482 ;; This function uses a non-reentrant model
 17483 ;;
 17484                           
 17485                           
 17486                           ;psect for function _putch
 17487  170E                     _putch:
 17488                           
 17489                           ;incstack = 0
 17490 ;; hardware stack exceeded
 17491                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17492                           ;putch@txData stored from wreg
 17493  170E  00F2               	movwf	putch@txData
 17494  170F                     i1l4369:
 17495                           
 17496                           ;mcc_generated_files/eusart.c: 201: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 202: {;mcc_generated_files/eusart.c: 203:     EUSART_Write(txData);
 17497  170F  0872               	movf	putch@txData,w
 17498  1710  318A  2275  3197   	fcall	_EUSART_Write
 17499  1713                     i1l817:
 17500  1713  0008               	return
 17501  1714                     __end_of_putch:
 17502                           
 17503                           	psect	text91
 17504  0A75                     __ptext91:	
 17505 ;; *************** function _EUSART_Write *****************
 17506 ;; Defined at:
 17507 ;;		line 173 in file "mcc_generated_files/eusart.c"
 17508 ;; Parameters:    Size  Location     Type
 17509 ;;  txData          1    wreg     unsigned char 
 17510 ;; Auto vars:     Size  Location     Type
 17511 ;;  txData          1    1[COMMON] unsigned char 
 17512 ;; Return value:  Size  Location     Type
 17513 ;;                  1    wreg      void 
 17514 ;; Registers used:
 17515 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17516 ;; Tracked objects:
 17517 ;;		On entry : 0/0
 17518 ;;		On exit  : 0/0
 17519 ;;		Unchanged: 0/0
 17520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17522 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17523 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17524 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17525 ;;Total ram usage:        2 bytes
 17526 ;; Hardware stack levels used: 1
 17527 ;; This function calls:
 17528 ;;		Nothing
 17529 ;; This function is called by:
 17530 ;;		_putch
 17531 ;; This function uses a non-reentrant model
 17532 ;;
 17533                           
 17534                           
 17535                           ;psect for function _EUSART_Write
 17536  0A75                     _EUSART_Write:
 17537                           
 17538                           ;incstack = 0
 17539 ;; hardware stack exceeded
 17540                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 17541                           ;EUSART_Write@txData stored from wreg
 17542  0A75  00F1               	movwf	EUSART_Write@txData
 17543  0A76                     i1l4315:
 17544  0A76                     i1l4317:	
 17545                           ;mcc_generated_files/eusart.c: 173: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 174: {;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemai
      +                          ning)
 17546                           
 17547                           
 17548                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
 17549  0A76  0021               	movlb	1	; select bank1
 17550  0A77  086C               	movf	_eusartTxBufferRemaining^(0+128),w	;volatile
 17551  0A78  1903               	btfsc	3,2
 17552  0A79  2A7B               	goto	u186_21
 17553  0A7A  2A7C               	goto	u186_20
 17554  0A7B                     u186_21:
 17555  0A7B  2A76               	goto	i1l4317
 17556  0A7C                     u186_20:
 17557  0A7C                     i1l807:
 17558                           
 17559                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE3bits.TXIE)
 17560  0A7C  002E               	movlb	14	; select bank14
 17561  0A7D  1A19               	btfsc	25,4	;volatile
 17562  0A7E  2A80               	goto	u187_21
 17563  0A7F  2A81               	goto	u187_20
 17564  0A80                     u187_21:
 17565  0A80  2A85               	goto	i1l808
 17566  0A81                     u187_20:
 17567  0A81                     i1l4319:
 17568                           
 17569                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TX1
      +                          REG = txData;
 17570  0A81  0871               	movf	EUSART_Write@txData,w
 17571  0A82  0022               	movlb	2	; select bank2
 17572  0A83  009A               	movwf	26	;volatile
 17573                           
 17574                           ;mcc_generated_files/eusart.c: 182:     }
 17575  0A84  2A9D               	goto	i1l4331
 17576  0A85                     i1l808:	
 17577                           ;mcc_generated_files/eusart.c: 183:     else
 17578                           
 17579                           
 17580                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          3bits.TXIE = 0;
 17581  0A85  1219               	bcf	25,4	;volatile
 17582  0A86                     i1l4321:
 17583                           
 17584                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
 17585  0A86  0871               	movf	EUSART_Write@txData,w
 17586  0A87  00F0               	movwf	??_EUSART_Write
 17587  0A88  0021               	movlb	1	; select bank1
 17588  0A89  0867               	movf	_eusartTxHead^(0+128),w
 17589  0A8A  3E4D               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 17590  0A8B  0086               	movwf	6
 17591  0A8C  3001               	movlw	1	; select bank2/3
 17592  0A8D  0087               	movwf	7
 17593  0A8E  0870               	movf	??_EUSART_Write,w
 17594  0A8F  0081               	movwf	1
 17595  0A90                     i1l4323:
 17596  0A90  3001               	movlw	1
 17597  0A91  00F0               	movwf	??_EUSART_Write
 17598  0A92  0870               	movf	??_EUSART_Write,w
 17599  0A93  07E7               	addwf	_eusartTxHead^(0+128),f	;volatile
 17600  0A94                     i1l4325:
 17601                           
 17602                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
 17603  0A94  3008               	movlw	8
 17604  0A95  0267               	subwf	_eusartTxHead^(0+128),w	;volatile
 17605  0A96  1C03               	skipc
 17606  0A97  2A99               	goto	u188_21
 17607  0A98  2A9A               	goto	u188_20
 17608  0A99                     u188_21:
 17609  0A99  2A9B               	goto	i1l4329
 17610  0A9A                     u188_20:
 17611  0A9A                     i1l4327:
 17612                           
 17613                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
 17614  0A9A  01E7               	clrf	_eusartTxHead^(0+128)	;volatile
 17615  0A9B                     i1l4329:
 17616                           
 17617                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
 17618  0A9B  3001               	movlw	1
 17619  0A9C  02EC               	subwf	_eusartTxBufferRemaining^(0+128),f	;volatile
 17620  0A9D                     i1l4331:
 17621                           
 17622                           ;mcc_generated_files/eusart.c: 193:     PIE3bits.TXIE = 1;
 17623  0A9D  002E               	movlb	14	; select bank14
 17624  0A9E  1619               	bsf	25,4	;volatile
 17625  0A9F                     i1l811:
 17626  0A9F  0008               	return
 17627  0AA0                     __end_of_EUSART_Write:
 17628                           
 17629                           	psect	text92
 17630  08E9                     __ptext92:	
 17631 ;; *************** function _abs *****************
 17632 ;; Defined at:
 17633 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
 17634 ;; Parameters:    Size  Location     Type
 17635 ;;  a               2    3[COMMON] int 
 17636 ;; Auto vars:     Size  Location     Type
 17637 ;;		None
 17638 ;; Return value:  Size  Location     Type
 17639 ;;                  2    3[COMMON] int 
 17640 ;; Registers used:
 17641 ;;		wreg, status,2, status,0
 17642 ;; Tracked objects:
 17643 ;;		On entry : 0/0
 17644 ;;		On exit  : 0/0
 17645 ;;		Unchanged: 0/0
 17646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17647 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17649 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17650 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17651 ;;Total ram usage:        4 bytes
 17652 ;; Hardware stack levels used: 1
 17653 ;; This function calls:
 17654 ;;		Nothing
 17655 ;; This function is called by:
 17656 ;;		_dtoa
 17657 ;; This function uses a non-reentrant model
 17658 ;;
 17659                           
 17660                           
 17661                           ;psect for function _abs
 17662  08E9                     _abs:
 17663  08E9                     i1l4565:	
 17664                           ;incstack = 0
 17665 ;; hardware stack exceeded
 17666                           ; Regs used in _abs: [wreg+status,2+status,0]
 17667                           
 17668  08E9  0874               	movf	abs@a+1,w
 17669  08EA  3A80               	xorlw	128
 17670  08EB  00F5               	movwf	??_abs
 17671  08EC  3080               	movlw	128
 17672  08ED  0275               	subwf	??_abs,w
 17673  08EE  1D03               	skipz
 17674  08EF  28F2               	goto	u227_25
 17675  08F0  3001               	movlw	1
 17676  08F1  0273               	subwf	abs@a,w
 17677  08F2                     u227_25:
 17678  08F2  1803               	skipnc
 17679  08F3  28F5               	goto	u227_21
 17680  08F4  28F6               	goto	u227_20
 17681  08F5                     u227_21:
 17682  08F5  2902               	goto	i1l1985
 17683  08F6                     u227_20:
 17684  08F6                     i1l4567:
 17685  08F6  0973               	comf	abs@a,w
 17686  08F7  00F5               	movwf	??_abs
 17687  08F8  0974               	comf	abs@a+1,w
 17688  08F9  00F6               	movwf	??_abs+1
 17689  08FA  0AF5               	incf	??_abs,f
 17690  08FB  1903               	skipnz
 17691  08FC  0AF6               	incf	??_abs+1,f
 17692  08FD  0875               	movf	??_abs,w
 17693  08FE  00F3               	movwf	?_abs
 17694  08FF  0876               	movf	??_abs+1,w
 17695  0900  00F4               	movwf	?_abs+1
 17696  0901  2902               	goto	i1l1988
 17697  0902                     i1l1985:
 17698  0902                     i1l1988:
 17699  0902  0008               	return
 17700  0903                     __end_of_abs:
 17701                           
 17702                           	psect	text93
 17703  033F                     __ptext93:	
 17704 ;; *************** function ___aomod *****************
 17705 ;; Defined at:
 17706 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
 17707 ;; Parameters:    Size  Location     Type
 17708 ;;  divisor         8    0[BANK0 ] long long 
 17709 ;;  dividend        8    8[BANK0 ] long long 
 17710 ;; Auto vars:     Size  Location     Type
 17711 ;;  sign            1    2[COMMON] unsigned char 
 17712 ;;  counter         1    1[COMMON] unsigned char 
 17713 ;; Return value:  Size  Location     Type
 17714 ;;                  8    0[BANK0 ] long long 
 17715 ;; Registers used:
 17716 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17717 ;; Tracked objects:
 17718 ;;		On entry : 0/0
 17719 ;;		On exit  : 0/0
 17720 ;;		Unchanged: 0/0
 17721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17722 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17723 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17724 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17725 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17726 ;;Total ram usage:       19 bytes
 17727 ;; Hardware stack levels used: 1
 17728 ;; This function calls:
 17729 ;;		Nothing
 17730 ;; This function is called by:
 17731 ;;		_dtoa
 17732 ;; This function uses a non-reentrant model
 17733 ;;
 17734                           
 17735                           
 17736                           ;psect for function ___aomod
 17737  033F                     ___aomod:
 17738  033F                     i1l4513:	
 17739                           ;incstack = 0
 17740 ;; hardware stack exceeded
 17741                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
 17742                           
 17743  033F  01F2               	clrf	___aomod@sign
 17744  0340                     i1l4515:
 17745  0340  3028               	movlw	low ___aomod@dividend
 17746  0341  0086               	movwf	6
 17747  0342  3000               	movlw	high ___aomod@dividend
 17748  0343  0087               	movwf	7
 17749  0344  3F47               	moviw [7]fsr1
 17750  0345  00F0               	movwf	??___aomod
 17751  0346  1FF0               	btfss	??___aomod,7
 17752  0347  2B49               	goto	u213_21
 17753  0348  2B4A               	goto	u213_20
 17754  0349                     u213_21:
 17755  0349  2B6B               	goto	i1l4519
 17756  034A                     u213_20:
 17757  034A                     i1l4517:
 17758  034A  0020               	movlb	0	; select bank0
 17759  034B  09A8               	comf	___aomod@dividend,f
 17760  034C  09A9               	comf	___aomod@dividend+1,f
 17761  034D  09AA               	comf	___aomod@dividend+2,f
 17762  034E  09AB               	comf	___aomod@dividend+3,f
 17763  034F  09AC               	comf	___aomod@dividend+4,f
 17764  0350  09AD               	comf	___aomod@dividend+5,f
 17765  0351  09AE               	comf	___aomod@dividend+6,f
 17766  0352  09AF               	comf	___aomod@dividend+7,f
 17767  0353  0AA8               	incf	___aomod@dividend,f
 17768  0354  1D03               	skipz
 17769  0355  2B69               	goto	u214_2lld
 17770  0356  0AA9               	incf	___aomod@dividend+1,f
 17771  0357  1D03               	skipz
 17772  0358  2B69               	goto	u214_2lld
 17773  0359  0AAA               	incf	___aomod@dividend+2,f
 17774  035A  1D03               	skipz
 17775  035B  2B69               	goto	u214_2lld
 17776  035C  0AAB               	incf	___aomod@dividend+3,f
 17777  035D  1D03               	skipz
 17778  035E  2B69               	goto	u214_2lld
 17779  035F  0AAC               	incf	___aomod@dividend+4,f
 17780  0360  1D03               	skipz
 17781  0361  2B69               	goto	u214_2lld
 17782  0362  0AAD               	incf	___aomod@dividend+5,f
 17783  0363  1D03               	skipz
 17784  0364  2B69               	goto	u214_2lld
 17785  0365  0AAE               	incf	___aomod@dividend+6,f
 17786  0366  1D03               	skipz
 17787  0367  2B69               	goto	u214_2lld
 17788  0368  0AAF               	incf	___aomod@dividend+7,f
 17789  0369                     u214_2lld:
 17790  0369  01F2               	clrf	___aomod@sign
 17791  036A  0AF2               	incf	___aomod@sign,f
 17792  036B                     i1l4519:
 17793  036B  3020               	movlw	low ___aomod@divisor
 17794  036C  0086               	movwf	6
 17795  036D  3000               	movlw	high ___aomod@divisor
 17796  036E  0087               	movwf	7
 17797  036F  3F47               	moviw [7]fsr1
 17798  0370  00F0               	movwf	??___aomod
 17799  0371  1FF0               	btfss	??___aomod,7
 17800  0372  2B74               	goto	u215_21
 17801  0373  2B75               	goto	u215_20
 17802  0374                     u215_21:
 17803  0374  2B94               	goto	i1l4523
 17804  0375                     u215_20:
 17805  0375                     i1l4521:
 17806  0375  0020               	movlb	0	; select bank0
 17807  0376  09A0               	comf	___aomod@divisor,f
 17808  0377  09A1               	comf	___aomod@divisor+1,f
 17809  0378  09A2               	comf	___aomod@divisor+2,f
 17810  0379  09A3               	comf	___aomod@divisor+3,f
 17811  037A  09A4               	comf	___aomod@divisor+4,f
 17812  037B  09A5               	comf	___aomod@divisor+5,f
 17813  037C  09A6               	comf	___aomod@divisor+6,f
 17814  037D  09A7               	comf	___aomod@divisor+7,f
 17815  037E  0AA0               	incf	___aomod@divisor,f
 17816  037F  1D03               	skipz
 17817  0380  2B94               	goto	u216_2lld
 17818  0381  0AA1               	incf	___aomod@divisor+1,f
 17819  0382  1D03               	skipz
 17820  0383  2B94               	goto	u216_2lld
 17821  0384  0AA2               	incf	___aomod@divisor+2,f
 17822  0385  1D03               	skipz
 17823  0386  2B94               	goto	u216_2lld
 17824  0387  0AA3               	incf	___aomod@divisor+3,f
 17825  0388  1D03               	skipz
 17826  0389  2B94               	goto	u216_2lld
 17827  038A  0AA4               	incf	___aomod@divisor+4,f
 17828  038B  1D03               	skipz
 17829  038C  2B94               	goto	u216_2lld
 17830  038D  0AA5               	incf	___aomod@divisor+5,f
 17831  038E  1D03               	skipz
 17832  038F  2B94               	goto	u216_2lld
 17833  0390  0AA6               	incf	___aomod@divisor+6,f
 17834  0391  1D03               	skipz
 17835  0392  2B94               	goto	u216_2lld
 17836  0393  0AA7               	incf	___aomod@divisor+7,f
 17837  0394                     u216_2lld:
 17838  0394                     i1l4523:
 17839  0394  0020               	movlb	0	; select bank0
 17840  0395  0820               	movf	___aomod@divisor,w
 17841  0396  0421               	iorwf	___aomod@divisor+1,w
 17842  0397  0422               	iorwf	___aomod@divisor+2,w
 17843  0398  0423               	iorwf	___aomod@divisor+3,w
 17844  0399  0424               	iorwf	___aomod@divisor+4,w
 17845  039A  0425               	iorwf	___aomod@divisor+5,w
 17846  039B  0426               	iorwf	___aomod@divisor+6,w
 17847  039C  0427               	iorwf	___aomod@divisor+7,w
 17848  039D  1903               	skipnz
 17849  039E  2BA0               	goto	u217_21
 17850  039F  2BA1               	goto	u217_20
 17851  03A0                     u217_21:
 17852  03A0  2BF4               	goto	i1l4539
 17853  03A1                     u217_20:
 17854  03A1                     i1l4525:
 17855  03A1  01F1               	clrf	___aomod@counter
 17856  03A2  0AF1               	incf	___aomod@counter,f
 17857  03A3  2BB0               	goto	i1l4531
 17858  03A4                     i1l4527:
 17859  03A4  35A0               	lslf	___aomod@divisor,f
 17860  03A5  0DA1               	rlf	___aomod@divisor+1,f
 17861  03A6  0DA2               	rlf	___aomod@divisor+2,f
 17862  03A7  0DA3               	rlf	___aomod@divisor+3,f
 17863  03A8  0DA4               	rlf	___aomod@divisor+4,f
 17864  03A9  0DA5               	rlf	___aomod@divisor+5,f
 17865  03AA  0DA6               	rlf	___aomod@divisor+6,f
 17866  03AB  0DA7               	rlf	___aomod@divisor+7,f
 17867  03AC                     i1l4529:
 17868  03AC  3001               	movlw	1
 17869  03AD  00F0               	movwf	??___aomod
 17870  03AE  0870               	movf	??___aomod,w
 17871  03AF  07F1               	addwf	___aomod@counter,f
 17872  03B0                     i1l4531:
 17873  03B0  1FA7               	btfss	___aomod@divisor+7,7
 17874  03B1  2BB3               	goto	u218_21
 17875  03B2  2BB4               	goto	u218_20
 17876  03B3                     u218_21:
 17877  03B3  2BA4               	goto	i1l4527
 17878  03B4                     u218_20:
 17879  03B4                     i1l4533:
 17880  03B4  0827               	movf	___aomod@divisor+7,w
 17881  03B5  022F               	subwf	___aomod@dividend+7,w
 17882  03B6  1D03               	skipz
 17883  03B7  2BD2               	goto	u219_25
 17884  03B8  0826               	movf	___aomod@divisor+6,w
 17885  03B9  022E               	subwf	___aomod@dividend+6,w
 17886  03BA  1D03               	skipz
 17887  03BB  2BD2               	goto	u219_25
 17888  03BC  0825               	movf	___aomod@divisor+5,w
 17889  03BD  022D               	subwf	___aomod@dividend+5,w
 17890  03BE  1D03               	skipz
 17891  03BF  2BD2               	goto	u219_25
 17892  03C0  0824               	movf	___aomod@divisor+4,w
 17893  03C1  022C               	subwf	___aomod@dividend+4,w
 17894  03C2  1D03               	skipz
 17895  03C3  2BD2               	goto	u219_25
 17896  03C4  0823               	movf	___aomod@divisor+3,w
 17897  03C5  022B               	subwf	___aomod@dividend+3,w
 17898  03C6  1D03               	skipz
 17899  03C7  2BD2               	goto	u219_25
 17900  03C8  0822               	movf	___aomod@divisor+2,w
 17901  03C9  022A               	subwf	___aomod@dividend+2,w
 17902  03CA  1D03               	skipz
 17903  03CB  2BD2               	goto	u219_25
 17904  03CC  0821               	movf	___aomod@divisor+1,w
 17905  03CD  0229               	subwf	___aomod@dividend+1,w
 17906  03CE  1D03               	skipz
 17907  03CF  2BD2               	goto	u219_25
 17908  03D0  0820               	movf	___aomod@divisor,w
 17909  03D1  0228               	subwf	___aomod@dividend,w
 17910  03D2                     u219_25:
 17911  03D2  1C03               	skipc
 17912  03D3  2BD5               	goto	u219_21
 17913  03D4  2BD6               	goto	u219_20
 17914  03D5                     u219_21:
 17915  03D5  2BE6               	goto	i1l4537
 17916  03D6                     u219_20:
 17917  03D6                     i1l4535:
 17918  03D6  0820               	movf	___aomod@divisor,w
 17919  03D7  02A8               	subwf	___aomod@dividend,f
 17920  03D8  0821               	movf	___aomod@divisor+1,w
 17921  03D9  3BA9               	subwfb	___aomod@dividend+1,f
 17922  03DA  0822               	movf	___aomod@divisor+2,w
 17923  03DB  3BAA               	subwfb	___aomod@dividend+2,f
 17924  03DC  0823               	movf	___aomod@divisor+3,w
 17925  03DD  3BAB               	subwfb	___aomod@dividend+3,f
 17926  03DE  0824               	movf	___aomod@divisor+4,w
 17927  03DF  3BAC               	subwfb	___aomod@dividend+4,f
 17928  03E0  0825               	movf	___aomod@divisor+5,w
 17929  03E1  3BAD               	subwfb	___aomod@dividend+5,f
 17930  03E2  0826               	movf	___aomod@divisor+6,w
 17931  03E3  3BAE               	subwfb	___aomod@dividend+6,f
 17932  03E4  0827               	movf	___aomod@divisor+7,w
 17933  03E5  3BAF               	subwfb	___aomod@dividend+7,f
 17934  03E6                     i1l4537:
 17935  03E6  36A7               	lsrf	___aomod@divisor+7,f
 17936  03E7  0CA6               	rrf	___aomod@divisor+6,f
 17937  03E8  0CA5               	rrf	___aomod@divisor+5,f
 17938  03E9  0CA4               	rrf	___aomod@divisor+4,f
 17939  03EA  0CA3               	rrf	___aomod@divisor+3,f
 17940  03EB  0CA2               	rrf	___aomod@divisor+2,f
 17941  03EC  0CA1               	rrf	___aomod@divisor+1,f
 17942  03ED  0CA0               	rrf	___aomod@divisor,f
 17943  03EE  3001               	movlw	1
 17944  03EF  02F1               	subwf	___aomod@counter,f
 17945  03F0  1D03               	btfss	3,2
 17946  03F1  2BF3               	goto	u220_21
 17947  03F2  2BF4               	goto	u220_20
 17948  03F3                     u220_21:
 17949  03F3  2BB4               	goto	i1l4533
 17950  03F4                     u220_20:
 17951  03F4                     i1l4539:
 17952  03F4  0872               	movf	___aomod@sign,w
 17953  03F5  1903               	btfsc	3,2
 17954  03F6  2BF8               	goto	u221_21
 17955  03F7  2BF9               	goto	u221_20
 17956  03F8                     u221_21:
 17957  03F8  2C17               	goto	i1l1514
 17958  03F9                     u221_20:
 17959  03F9                     i1l4541:
 17960  03F9  09A8               	comf	___aomod@dividend,f
 17961  03FA  09A9               	comf	___aomod@dividend+1,f
 17962  03FB  09AA               	comf	___aomod@dividend+2,f
 17963  03FC  09AB               	comf	___aomod@dividend+3,f
 17964  03FD  09AC               	comf	___aomod@dividend+4,f
 17965  03FE  09AD               	comf	___aomod@dividend+5,f
 17966  03FF  09AE               	comf	___aomod@dividend+6,f
 17967  0400  09AF               	comf	___aomod@dividend+7,f
 17968  0401  0AA8               	incf	___aomod@dividend,f
 17969  0402  1D03               	skipz
 17970  0403  2C17               	goto	u222_2lld
 17971  0404  0AA9               	incf	___aomod@dividend+1,f
 17972  0405  1D03               	skipz
 17973  0406  2C17               	goto	u222_2lld
 17974  0407  0AAA               	incf	___aomod@dividend+2,f
 17975  0408  1D03               	skipz
 17976  0409  2C17               	goto	u222_2lld
 17977  040A  0AAB               	incf	___aomod@dividend+3,f
 17978  040B  1D03               	skipz
 17979  040C  2C17               	goto	u222_2lld
 17980  040D  0AAC               	incf	___aomod@dividend+4,f
 17981  040E  1D03               	skipz
 17982  040F  2C17               	goto	u222_2lld
 17983  0410  0AAD               	incf	___aomod@dividend+5,f
 17984  0411  1D03               	skipz
 17985  0412  2C17               	goto	u222_2lld
 17986  0413  0AAE               	incf	___aomod@dividend+6,f
 17987  0414  1D03               	skipz
 17988  0415  2C17               	goto	u222_2lld
 17989  0416  0AAF               	incf	___aomod@dividend+7,f
 17990  0417                     u222_2lld:
 17991  0417                     i1l1514:
 17992  0417  0020               	movlb	0	; select bank0
 17993  0418  0828               	movf	___aomod@dividend,w
 17994  0419  00A0               	movwf	?___aomod
 17995  041A  0829               	movf	___aomod@dividend+1,w
 17996  041B  00A1               	movwf	?___aomod+1
 17997  041C  082A               	movf	___aomod@dividend+2,w
 17998  041D  00A2               	movwf	?___aomod+2
 17999  041E  082B               	movf	___aomod@dividend+3,w
 18000  041F  00A3               	movwf	?___aomod+3
 18001  0420  082C               	movf	___aomod@dividend+4,w
 18002  0421  00A4               	movwf	?___aomod+4
 18003  0422  082D               	movf	___aomod@dividend+5,w
 18004  0423  00A5               	movwf	?___aomod+5
 18005  0424  082E               	movf	___aomod@dividend+6,w
 18006  0425  00A6               	movwf	?___aomod+6
 18007  0426  082F               	movf	___aomod@dividend+7,w
 18008  0427  00A7               	movwf	?___aomod+7
 18009  0428                     i1l1515:
 18010  0428  0008               	return
 18011  0429                     __end_of___aomod:
 18012                           
 18013                           	psect	text94
 18014  023E                     __ptext94:	
 18015 ;; *************** function ___aodiv *****************
 18016 ;; Defined at:
 18017 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
 18018 ;; Parameters:    Size  Location     Type
 18019 ;;  divisor         8    0[BANK0 ] long long 
 18020 ;;  dividend        8    8[BANK0 ] long long 
 18021 ;; Auto vars:     Size  Location     Type
 18022 ;;  quotient        8    3[COMMON] long long 
 18023 ;;  sign            1    2[COMMON] unsigned char 
 18024 ;;  counter         1    1[COMMON] unsigned char 
 18025 ;; Return value:  Size  Location     Type
 18026 ;;                  8    0[BANK0 ] long long 
 18027 ;; Registers used:
 18028 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18029 ;; Tracked objects:
 18030 ;;		On entry : 0/0
 18031 ;;		On exit  : 0/0
 18032 ;;		Unchanged: 0/0
 18033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18034 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18035 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18036 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18037 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18038 ;;Total ram usage:       27 bytes
 18039 ;; Hardware stack levels used: 1
 18040 ;; This function calls:
 18041 ;;		Nothing
 18042 ;; This function is called by:
 18043 ;;		_dtoa
 18044 ;; This function uses a non-reentrant model
 18045 ;;
 18046                           
 18047                           
 18048                           ;psect for function ___aodiv
 18049  023E                     ___aodiv:
 18050  023E                     i1l4475:	
 18051                           ;incstack = 0
 18052 ;; hardware stack exceeded
 18053                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
 18054                           
 18055  023E  01F2               	clrf	___aodiv@sign
 18056  023F                     i1l4477:
 18057  023F  3020               	movlw	low ___aodiv@divisor
 18058  0240  0086               	movwf	6
 18059  0241  3000               	movlw	high ___aodiv@divisor
 18060  0242  0087               	movwf	7
 18061  0243  3F47               	moviw [7]fsr1
 18062  0244  00F0               	movwf	??___aodiv
 18063  0245  1FF0               	btfss	??___aodiv,7
 18064  0246  2A48               	goto	u202_21
 18065  0247  2A49               	goto	u202_20
 18066  0248                     u202_21:
 18067  0248  2A6A               	goto	i1l4481
 18068  0249                     u202_20:
 18069  0249                     i1l4479:
 18070  0249  0020               	movlb	0	; select bank0
 18071  024A  09A0               	comf	___aodiv@divisor,f
 18072  024B  09A1               	comf	___aodiv@divisor+1,f
 18073  024C  09A2               	comf	___aodiv@divisor+2,f
 18074  024D  09A3               	comf	___aodiv@divisor+3,f
 18075  024E  09A4               	comf	___aodiv@divisor+4,f
 18076  024F  09A5               	comf	___aodiv@divisor+5,f
 18077  0250  09A6               	comf	___aodiv@divisor+6,f
 18078  0251  09A7               	comf	___aodiv@divisor+7,f
 18079  0252  0AA0               	incf	___aodiv@divisor,f
 18080  0253  1D03               	skipz
 18081  0254  2A68               	goto	u203_2lld
 18082  0255  0AA1               	incf	___aodiv@divisor+1,f
 18083  0256  1D03               	skipz
 18084  0257  2A68               	goto	u203_2lld
 18085  0258  0AA2               	incf	___aodiv@divisor+2,f
 18086  0259  1D03               	skipz
 18087  025A  2A68               	goto	u203_2lld
 18088  025B  0AA3               	incf	___aodiv@divisor+3,f
 18089  025C  1D03               	skipz
 18090  025D  2A68               	goto	u203_2lld
 18091  025E  0AA4               	incf	___aodiv@divisor+4,f
 18092  025F  1D03               	skipz
 18093  0260  2A68               	goto	u203_2lld
 18094  0261  0AA5               	incf	___aodiv@divisor+5,f
 18095  0262  1D03               	skipz
 18096  0263  2A68               	goto	u203_2lld
 18097  0264  0AA6               	incf	___aodiv@divisor+6,f
 18098  0265  1D03               	skipz
 18099  0266  2A68               	goto	u203_2lld
 18100  0267  0AA7               	incf	___aodiv@divisor+7,f
 18101  0268                     u203_2lld:
 18102  0268  01F2               	clrf	___aodiv@sign
 18103  0269  0AF2               	incf	___aodiv@sign,f
 18104  026A                     i1l4481:
 18105  026A  3028               	movlw	low ___aodiv@dividend
 18106  026B  0086               	movwf	6
 18107  026C  3000               	movlw	high ___aodiv@dividend
 18108  026D  0087               	movwf	7
 18109  026E  3F47               	moviw [7]fsr1
 18110  026F  00F0               	movwf	??___aodiv
 18111  0270  1FF0               	btfss	??___aodiv,7
 18112  0271  2A73               	goto	u204_21
 18113  0272  2A74               	goto	u204_20
 18114  0273                     u204_21:
 18115  0273  2A97               	goto	i1l4487
 18116  0274                     u204_20:
 18117  0274                     i1l4483:
 18118  0274  0020               	movlb	0	; select bank0
 18119  0275  09A8               	comf	___aodiv@dividend,f
 18120  0276  09A9               	comf	___aodiv@dividend+1,f
 18121  0277  09AA               	comf	___aodiv@dividend+2,f
 18122  0278  09AB               	comf	___aodiv@dividend+3,f
 18123  0279  09AC               	comf	___aodiv@dividend+4,f
 18124  027A  09AD               	comf	___aodiv@dividend+5,f
 18125  027B  09AE               	comf	___aodiv@dividend+6,f
 18126  027C  09AF               	comf	___aodiv@dividend+7,f
 18127  027D  0AA8               	incf	___aodiv@dividend,f
 18128  027E  1D03               	skipz
 18129  027F  2A93               	goto	u205_2lld
 18130  0280  0AA9               	incf	___aodiv@dividend+1,f
 18131  0281  1D03               	skipz
 18132  0282  2A93               	goto	u205_2lld
 18133  0283  0AAA               	incf	___aodiv@dividend+2,f
 18134  0284  1D03               	skipz
 18135  0285  2A93               	goto	u205_2lld
 18136  0286  0AAB               	incf	___aodiv@dividend+3,f
 18137  0287  1D03               	skipz
 18138  0288  2A93               	goto	u205_2lld
 18139  0289  0AAC               	incf	___aodiv@dividend+4,f
 18140  028A  1D03               	skipz
 18141  028B  2A93               	goto	u205_2lld
 18142  028C  0AAD               	incf	___aodiv@dividend+5,f
 18143  028D  1D03               	skipz
 18144  028E  2A93               	goto	u205_2lld
 18145  028F  0AAE               	incf	___aodiv@dividend+6,f
 18146  0290  1D03               	skipz
 18147  0291  2A93               	goto	u205_2lld
 18148  0292  0AAF               	incf	___aodiv@dividend+7,f
 18149  0293                     u205_2lld:
 18150  0293                     i1l4485:
 18151  0293  3001               	movlw	1
 18152  0294  00F0               	movwf	??___aodiv
 18153  0295  0870               	movf	??___aodiv,w
 18154  0296  06F2               	xorwf	___aodiv@sign,f
 18155  0297                     i1l4487:
 18156  0297  3073               	movlw	low ___aodiv@quotient
 18157  0298  0086               	movwf	6
 18158  0299  3000               	movlw	high ___aodiv@quotient
 18159  029A  0087               	movwf	7
 18160  029B  3008               	movlw	8
 18161  029C  00F0               	movwf	??___aodiv
 18162  029D  3000               	movlw	0
 18163  029E                     u206_20:
 18164  029E  001E               	movwi fsr1++
 18165  029F  0BF0               	decfsz	??___aodiv,f
 18166  02A0  2A9E               	goto	u206_20
 18167  02A1                     i1l4489:
 18168  02A1  0020               	movlb	0	; select bank0
 18169  02A2  0820               	movf	___aodiv@divisor,w
 18170  02A3  0421               	iorwf	___aodiv@divisor+1,w
 18171  02A4  0422               	iorwf	___aodiv@divisor+2,w
 18172  02A5  0423               	iorwf	___aodiv@divisor+3,w
 18173  02A6  0424               	iorwf	___aodiv@divisor+4,w
 18174  02A7  0425               	iorwf	___aodiv@divisor+5,w
 18175  02A8  0426               	iorwf	___aodiv@divisor+6,w
 18176  02A9  0427               	iorwf	___aodiv@divisor+7,w
 18177  02AA  1903               	skipnz
 18178  02AB  2AAD               	goto	u207_21
 18179  02AC  2AAE               	goto	u207_20
 18180  02AD                     u207_21:
 18181  02AD  2B0A               	goto	i1l4509
 18182  02AE                     u207_20:
 18183  02AE                     i1l4491:
 18184  02AE  01F1               	clrf	___aodiv@counter
 18185  02AF  0AF1               	incf	___aodiv@counter,f
 18186  02B0  2ABD               	goto	i1l4497
 18187  02B1                     i1l4493:
 18188  02B1  35A0               	lslf	___aodiv@divisor,f
 18189  02B2  0DA1               	rlf	___aodiv@divisor+1,f
 18190  02B3  0DA2               	rlf	___aodiv@divisor+2,f
 18191  02B4  0DA3               	rlf	___aodiv@divisor+3,f
 18192  02B5  0DA4               	rlf	___aodiv@divisor+4,f
 18193  02B6  0DA5               	rlf	___aodiv@divisor+5,f
 18194  02B7  0DA6               	rlf	___aodiv@divisor+6,f
 18195  02B8  0DA7               	rlf	___aodiv@divisor+7,f
 18196  02B9                     i1l4495:
 18197  02B9  3001               	movlw	1
 18198  02BA  00F0               	movwf	??___aodiv
 18199  02BB  0870               	movf	??___aodiv,w
 18200  02BC  07F1               	addwf	___aodiv@counter,f
 18201  02BD                     i1l4497:
 18202  02BD  1FA7               	btfss	___aodiv@divisor+7,7
 18203  02BE  2AC0               	goto	u208_21
 18204  02BF  2AC1               	goto	u208_20
 18205  02C0                     u208_21:
 18206  02C0  2AB1               	goto	i1l4493
 18207  02C1                     u208_20:
 18208  02C1                     i1l4499:
 18209  02C1  35F3               	lslf	___aodiv@quotient,f
 18210  02C2  0DF4               	rlf	___aodiv@quotient+1,f
 18211  02C3  0DF5               	rlf	___aodiv@quotient+2,f
 18212  02C4  0DF6               	rlf	___aodiv@quotient+3,f
 18213  02C5  0DF7               	rlf	___aodiv@quotient+4,f
 18214  02C6  0DF8               	rlf	___aodiv@quotient+5,f
 18215  02C7  0DF9               	rlf	___aodiv@quotient+6,f
 18216  02C8  0DFA               	rlf	___aodiv@quotient+7,f
 18217  02C9                     i1l4501:
 18218  02C9  0827               	movf	___aodiv@divisor+7,w
 18219  02CA  022F               	subwf	___aodiv@dividend+7,w
 18220  02CB  1D03               	skipz
 18221  02CC  2AE7               	goto	u209_25
 18222  02CD  0826               	movf	___aodiv@divisor+6,w
 18223  02CE  022E               	subwf	___aodiv@dividend+6,w
 18224  02CF  1D03               	skipz
 18225  02D0  2AE7               	goto	u209_25
 18226  02D1  0825               	movf	___aodiv@divisor+5,w
 18227  02D2  022D               	subwf	___aodiv@dividend+5,w
 18228  02D3  1D03               	skipz
 18229  02D4  2AE7               	goto	u209_25
 18230  02D5  0824               	movf	___aodiv@divisor+4,w
 18231  02D6  022C               	subwf	___aodiv@dividend+4,w
 18232  02D7  1D03               	skipz
 18233  02D8  2AE7               	goto	u209_25
 18234  02D9  0823               	movf	___aodiv@divisor+3,w
 18235  02DA  022B               	subwf	___aodiv@dividend+3,w
 18236  02DB  1D03               	skipz
 18237  02DC  2AE7               	goto	u209_25
 18238  02DD  0822               	movf	___aodiv@divisor+2,w
 18239  02DE  022A               	subwf	___aodiv@dividend+2,w
 18240  02DF  1D03               	skipz
 18241  02E0  2AE7               	goto	u209_25
 18242  02E1  0821               	movf	___aodiv@divisor+1,w
 18243  02E2  0229               	subwf	___aodiv@dividend+1,w
 18244  02E3  1D03               	skipz
 18245  02E4  2AE7               	goto	u209_25
 18246  02E5  0820               	movf	___aodiv@divisor,w
 18247  02E6  0228               	subwf	___aodiv@dividend,w
 18248  02E7                     u209_25:
 18249  02E7  1C03               	skipc
 18250  02E8  2AEA               	goto	u209_21
 18251  02E9  2AEB               	goto	u209_20
 18252  02EA                     u209_21:
 18253  02EA  2AFC               	goto	i1l4507
 18254  02EB                     u209_20:
 18255  02EB                     i1l4503:
 18256  02EB  0820               	movf	___aodiv@divisor,w
 18257  02EC  02A8               	subwf	___aodiv@dividend,f
 18258  02ED  0821               	movf	___aodiv@divisor+1,w
 18259  02EE  3BA9               	subwfb	___aodiv@dividend+1,f
 18260  02EF  0822               	movf	___aodiv@divisor+2,w
 18261  02F0  3BAA               	subwfb	___aodiv@dividend+2,f
 18262  02F1  0823               	movf	___aodiv@divisor+3,w
 18263  02F2  3BAB               	subwfb	___aodiv@dividend+3,f
 18264  02F3  0824               	movf	___aodiv@divisor+4,w
 18265  02F4  3BAC               	subwfb	___aodiv@dividend+4,f
 18266  02F5  0825               	movf	___aodiv@divisor+5,w
 18267  02F6  3BAD               	subwfb	___aodiv@dividend+5,f
 18268  02F7  0826               	movf	___aodiv@divisor+6,w
 18269  02F8  3BAE               	subwfb	___aodiv@dividend+6,f
 18270  02F9  0827               	movf	___aodiv@divisor+7,w
 18271  02FA  3BAF               	subwfb	___aodiv@dividend+7,f
 18272  02FB                     i1l4505:
 18273  02FB  1473               	bsf	___aodiv@quotient,0
 18274  02FC                     i1l4507:
 18275  02FC  36A7               	lsrf	___aodiv@divisor+7,f
 18276  02FD  0CA6               	rrf	___aodiv@divisor+6,f
 18277  02FE  0CA5               	rrf	___aodiv@divisor+5,f
 18278  02FF  0CA4               	rrf	___aodiv@divisor+4,f
 18279  0300  0CA3               	rrf	___aodiv@divisor+3,f
 18280  0301  0CA2               	rrf	___aodiv@divisor+2,f
 18281  0302  0CA1               	rrf	___aodiv@divisor+1,f
 18282  0303  0CA0               	rrf	___aodiv@divisor,f
 18283  0304  3001               	movlw	1
 18284  0305  02F1               	subwf	___aodiv@counter,f
 18285  0306  1D03               	btfss	3,2
 18286  0307  2B09               	goto	u210_21
 18287  0308  2B0A               	goto	u210_20
 18288  0309                     u210_21:
 18289  0309  2AC1               	goto	i1l4499
 18290  030A                     u210_20:
 18291  030A                     i1l4509:
 18292  030A  0872               	movf	___aodiv@sign,w
 18293  030B  1903               	btfsc	3,2
 18294  030C  2B0E               	goto	u211_21
 18295  030D  2B0F               	goto	u211_20
 18296  030E                     u211_21:
 18297  030E  2B2D               	goto	i1l1501
 18298  030F                     u211_20:
 18299  030F                     i1l4511:
 18300  030F  09F3               	comf	___aodiv@quotient,f
 18301  0310  09F4               	comf	___aodiv@quotient+1,f
 18302  0311  09F5               	comf	___aodiv@quotient+2,f
 18303  0312  09F6               	comf	___aodiv@quotient+3,f
 18304  0313  09F7               	comf	___aodiv@quotient+4,f
 18305  0314  09F8               	comf	___aodiv@quotient+5,f
 18306  0315  09F9               	comf	___aodiv@quotient+6,f
 18307  0316  09FA               	comf	___aodiv@quotient+7,f
 18308  0317  0AF3               	incf	___aodiv@quotient,f
 18309  0318  1D03               	skipz
 18310  0319  2B2D               	goto	u212_2lld
 18311  031A  0AF4               	incf	___aodiv@quotient+1,f
 18312  031B  1D03               	skipz
 18313  031C  2B2D               	goto	u212_2lld
 18314  031D  0AF5               	incf	___aodiv@quotient+2,f
 18315  031E  1D03               	skipz
 18316  031F  2B2D               	goto	u212_2lld
 18317  0320  0AF6               	incf	___aodiv@quotient+3,f
 18318  0321  1D03               	skipz
 18319  0322  2B2D               	goto	u212_2lld
 18320  0323  0AF7               	incf	___aodiv@quotient+4,f
 18321  0324  1D03               	skipz
 18322  0325  2B2D               	goto	u212_2lld
 18323  0326  0AF8               	incf	___aodiv@quotient+5,f
 18324  0327  1D03               	skipz
 18325  0328  2B2D               	goto	u212_2lld
 18326  0329  0AF9               	incf	___aodiv@quotient+6,f
 18327  032A  1D03               	skipz
 18328  032B  2B2D               	goto	u212_2lld
 18329  032C  0AFA               	incf	___aodiv@quotient+7,f
 18330  032D                     u212_2lld:
 18331  032D                     i1l1501:
 18332  032D  0873               	movf	___aodiv@quotient,w
 18333  032E  0020               	movlb	0	; select bank0
 18334  032F  00A0               	movwf	?___aodiv
 18335  0330  0874               	movf	___aodiv@quotient+1,w
 18336  0331  00A1               	movwf	?___aodiv+1
 18337  0332  0875               	movf	___aodiv@quotient+2,w
 18338  0333  00A2               	movwf	?___aodiv+2
 18339  0334  0876               	movf	___aodiv@quotient+3,w
 18340  0335  00A3               	movwf	?___aodiv+3
 18341  0336  0877               	movf	___aodiv@quotient+4,w
 18342  0337  00A4               	movwf	?___aodiv+4
 18343  0338  0878               	movf	___aodiv@quotient+5,w
 18344  0339  00A5               	movwf	?___aodiv+5
 18345  033A  0879               	movf	___aodiv@quotient+6,w
 18346  033B  00A6               	movwf	?___aodiv+6
 18347  033C  087A               	movf	___aodiv@quotient+7,w
 18348  033D  00A7               	movwf	?___aodiv+7
 18349  033E                     i1l1502:
 18350  033E  0008               	return
 18351  033F                     __end_of___aodiv:
 18352                           
 18353                           	psect	text95
 18354  072D                     __ptext95:	
 18355 ;; *************** function _map *****************
 18356 ;; Defined at:
 18357 ;;		line 53 in file "mcc_generated_files/interrupt_manager.c"
 18358 ;; Parameters:    Size  Location     Type
 18359 ;;  x               4   14[BANK0 ] long 
 18360 ;;  in_min          4   18[BANK0 ] long 
 18361 ;;  in_max          4   22[BANK0 ] long 
 18362 ;;  out_min         4   26[BANK0 ] long 
 18363 ;;  out_max         4   30[BANK0 ] long 
 18364 ;; Auto vars:     Size  Location     Type
 18365 ;;		None
 18366 ;; Return value:  Size  Location     Type
 18367 ;;                  4   14[BANK0 ] long 
 18368 ;; Registers used:
 18369 ;;		wreg, status,2, status,0, pclath, cstack
 18370 ;; Tracked objects:
 18371 ;;		On entry : 0/0
 18372 ;;		On exit  : 0/0
 18373 ;;		Unchanged: 0/0
 18374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18375 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18377 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18378 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18379 ;;Total ram usage:       36 bytes
 18380 ;; Hardware stack levels used: 1
 18381 ;; Hardware stack levels required when called: 1
 18382 ;; This function calls:
 18383 ;;		___aldiv
 18384 ;;		___lmul
 18385 ;; This function is called by:
 18386 ;;		_INTERRUPT_InterruptManager
 18387 ;; This function uses a non-reentrant model
 18388 ;;
 18389                           
 18390                           
 18391                           ;psect for function _map
 18392  072D                     _map:
 18393  072D                     i1l5279:	
 18394                           ;incstack = 0
 18395 ;; hardware stack exceeded
 18396                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
 18397                           
 18398                           
 18399                           ;mcc_generated_files/interrupt_manager.c: 54:     return (x - in_min) * (out_max - out_m
      +                          in) / (in_max - in_min) + out_min;
 18400  072D  0020               	movlb	0	; select bank0
 18401  072E  0832               	movf	map@in_min,w
 18402  072F  0236               	subwf	map@in_max,w
 18403  0730  00C2               	movwf	??_map
 18404  0731  0833               	movf	map@in_min+1,w
 18405  0732  3B37               	subwfb	map@in_max+1,w
 18406  0733  00C3               	movwf	??_map+1
 18407  0734  0834               	movf	map@in_min+2,w
 18408  0735  3B38               	subwfb	map@in_max+2,w
 18409  0736  00C4               	movwf	??_map+2
 18410  0737  0835               	movf	map@in_min+3,w
 18411  0738  3B39               	subwfb	map@in_max+3,w
 18412  0739  00C5               	movwf	??_map+3
 18413  073A  0845               	movf	??_map+3,w
 18414  073B  00A3               	movwf	___aldiv@divisor+3
 18415  073C  0844               	movf	??_map+2,w
 18416  073D  00A2               	movwf	___aldiv@divisor+2
 18417  073E  0843               	movf	??_map+1,w
 18418  073F  00A1               	movwf	___aldiv@divisor+1
 18419  0740  0842               	movf	??_map,w
 18420  0741  00A0               	movwf	___aldiv@divisor
 18421  0742  0832               	movf	map@in_min,w
 18422  0743  022E               	subwf	map@x,w
 18423  0744  00C6               	movwf	??_map+4
 18424  0745  0833               	movf	map@in_min+1,w
 18425  0746  3B2F               	subwfb	map@x+1,w
 18426  0747  00C7               	movwf	??_map+5
 18427  0748  0834               	movf	map@in_min+2,w
 18428  0749  3B30               	subwfb	map@x+2,w
 18429  074A  00C8               	movwf	??_map+6
 18430  074B  0835               	movf	map@in_min+3,w
 18431  074C  3B31               	subwfb	map@x+3,w
 18432  074D  00C9               	movwf	??_map+7
 18433  074E  0849               	movf	??_map+7,w
 18434  074F  00F3               	movwf	___lmul@multiplier+3
 18435  0750  0848               	movf	??_map+6,w
 18436  0751  00F2               	movwf	___lmul@multiplier+2
 18437  0752  0847               	movf	??_map+5,w
 18438  0753  00F1               	movwf	___lmul@multiplier+1
 18439  0754  0846               	movf	??_map+4,w
 18440  0755  00F0               	movwf	___lmul@multiplier
 18441  0756  083A               	movf	map@out_min,w
 18442  0757  023E               	subwf	map@out_max,w
 18443  0758  00CA               	movwf	??_map+8
 18444  0759  083B               	movf	map@out_min+1,w
 18445  075A  3B3F               	subwfb	map@out_max+1,w
 18446  075B  00CB               	movwf	??_map+9
 18447  075C  083C               	movf	map@out_min+2,w
 18448  075D  3B40               	subwfb	map@out_max+2,w
 18449  075E  00CC               	movwf	??_map+10
 18450  075F  083D               	movf	map@out_min+3,w
 18451  0760  3B41               	subwfb	map@out_max+3,w
 18452  0761  00CD               	movwf	??_map+11
 18453  0762  084D               	movf	??_map+11,w
 18454  0763  00F7               	movwf	___lmul@multiplicand+3
 18455  0764  084C               	movf	??_map+10,w
 18456  0765  00F6               	movwf	___lmul@multiplicand+2
 18457  0766  084B               	movf	??_map+9,w
 18458  0767  00F5               	movwf	___lmul@multiplicand+1
 18459  0768  084A               	movf	??_map+8,w
 18460  0769  00F4               	movwf	___lmul@multiplicand
 18461  076A  318B  23B9  3187   	fcall	___lmul
 18462  076D  0873               	movf	?___lmul+3,w
 18463  076E  0020               	movlb	0	; select bank0
 18464  076F  00A7               	movwf	___aldiv@dividend+3
 18465  0770  0872               	movf	?___lmul+2,w
 18466  0771  00A6               	movwf	___aldiv@dividend+2
 18467  0772  0871               	movf	?___lmul+1,w
 18468  0773  00A5               	movwf	___aldiv@dividend+1
 18469  0774  0870               	movf	?___lmul,w
 18470  0775  00A4               	movwf	___aldiv@dividend
 18471  0776  3186  269D  3187   	fcall	___aldiv
 18472  0779  0020               	movlb	0	; select bank0
 18473  077A  0820               	movf	?___aldiv,w
 18474  077B  073A               	addwf	map@out_min,w
 18475  077C  00CE               	movwf	??_map+12
 18476  077D  0821               	movf	?___aldiv+1,w
 18477  077E  3D3B               	addwfc	map@out_min+1,w
 18478  077F  00CF               	movwf	??_map+13
 18479  0780  0822               	movf	?___aldiv+2,w
 18480  0781  3D3C               	addwfc	map@out_min+2,w
 18481  0782  00D0               	movwf	??_map+14
 18482  0783  0823               	movf	?___aldiv+3,w
 18483  0784  3D3D               	addwfc	map@out_min+3,w
 18484  0785  00D1               	movwf	??_map+15
 18485  0786  0851               	movf	??_map+15,w
 18486  0787  00B1               	movwf	?_map+3
 18487  0788  0850               	movf	??_map+14,w
 18488  0789  00B0               	movwf	?_map+2
 18489  078A  084F               	movf	??_map+13,w
 18490  078B  00AF               	movwf	?_map+1
 18491  078C  084E               	movf	??_map+12,w
 18492  078D  00AE               	movwf	?_map
 18493  078E                     i1l1165:
 18494  078E  0008               	return
 18495  078F                     __end_of_map:
 18496                           
 18497                           	psect	text96
 18498  0BB9                     __ptext96:	
 18499 ;; *************** function ___lmul *****************
 18500 ;; Defined at:
 18501 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul32.c"
 18502 ;; Parameters:    Size  Location     Type
 18503 ;;  multiplier      4    0[COMMON] unsigned long 
 18504 ;;  multiplicand    4    4[COMMON] unsigned long 
 18505 ;; Auto vars:     Size  Location     Type
 18506 ;;  product         4    8[COMMON] unsigned long 
 18507 ;; Return value:  Size  Location     Type
 18508 ;;                  4    0[COMMON] unsigned long 
 18509 ;; Registers used:
 18510 ;;		wreg, status,2, status,0
 18511 ;; Tracked objects:
 18512 ;;		On entry : 0/0
 18513 ;;		On exit  : 0/0
 18514 ;;		Unchanged: 0/0
 18515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18516 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18517 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18519 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18520 ;;Total ram usage:       12 bytes
 18521 ;; Hardware stack levels used: 1
 18522 ;; This function calls:
 18523 ;;		Nothing
 18524 ;; This function is called by:
 18525 ;;		_map
 18526 ;; This function uses a non-reentrant model
 18527 ;;
 18528                           
 18529                           
 18530                           ;psect for function ___lmul
 18531  0BB9                     ___lmul:
 18532  0BB9                     i1l4935:	
 18533                           ;incstack = 0
 18534 ;; hardware stack exceeded
 18535                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 18536                           
 18537  0BB9  3000               	movlw	0
 18538  0BBA  00FB               	movwf	___lmul@product+3
 18539  0BBB  3000               	movlw	0
 18540  0BBC  00FA               	movwf	___lmul@product+2
 18541  0BBD  3000               	movlw	0
 18542  0BBE  00F9               	movwf	___lmul@product+1
 18543  0BBF  3000               	movlw	0
 18544  0BC0  00F8               	movwf	___lmul@product
 18545  0BC1                     i1l4937:
 18546  0BC1  1C70               	btfss	___lmul@multiplier,0
 18547  0BC2  2BC4               	goto	u261_21
 18548  0BC3  2BC5               	goto	u261_20
 18549  0BC4                     u261_21:
 18550  0BC4  2BCD               	goto	i1l4941
 18551  0BC5                     u261_20:
 18552  0BC5                     i1l4939:
 18553  0BC5  0874               	movf	___lmul@multiplicand,w
 18554  0BC6  07F8               	addwf	___lmul@product,f
 18555  0BC7  0875               	movf	___lmul@multiplicand+1,w
 18556  0BC8  3DF9               	addwfc	___lmul@product+1,f
 18557  0BC9  0876               	movf	___lmul@multiplicand+2,w
 18558  0BCA  3DFA               	addwfc	___lmul@product+2,f
 18559  0BCB  0877               	movf	___lmul@multiplicand+3,w
 18560  0BCC  3DFB               	addwfc	___lmul@product+3,f
 18561  0BCD                     i1l4941:
 18562  0BCD  3001               	movlw	1
 18563  0BCE                     u262_25:
 18564  0BCE  35F4               	lslf	___lmul@multiplicand,f
 18565  0BCF  0DF5               	rlf	___lmul@multiplicand+1,f
 18566  0BD0  0DF6               	rlf	___lmul@multiplicand+2,f
 18567  0BD1  0DF7               	rlf	___lmul@multiplicand+3,f
 18568  0BD2  0B89               	decfsz	9,f
 18569  0BD3  2BCE               	goto	u262_25
 18570  0BD4                     i1l4943:
 18571  0BD4  3001               	movlw	1
 18572  0BD5                     u263_25:
 18573  0BD5  36F3               	lsrf	___lmul@multiplier+3,f
 18574  0BD6  0CF2               	rrf	___lmul@multiplier+2,f
 18575  0BD7  0CF1               	rrf	___lmul@multiplier+1,f
 18576  0BD8  0CF0               	rrf	___lmul@multiplier,f
 18577  0BD9  0B89               	decfsz	9,f
 18578  0BDA  2BD5               	goto	u263_25
 18579  0BDB  0873               	movf	___lmul@multiplier+3,w
 18580  0BDC  0472               	iorwf	___lmul@multiplier+2,w
 18581  0BDD  0471               	iorwf	___lmul@multiplier+1,w
 18582  0BDE  0470               	iorwf	___lmul@multiplier,w
 18583  0BDF  1D03               	skipz
 18584  0BE0  2BE2               	goto	u264_21
 18585  0BE1  2BE3               	goto	u264_20
 18586  0BE2                     u264_21:
 18587  0BE2  2BC1               	goto	i1l4937
 18588  0BE3                     u264_20:
 18589  0BE3                     i1l4945:
 18590  0BE3  087B               	movf	___lmul@product+3,w
 18591  0BE4  00F3               	movwf	?___lmul+3
 18592  0BE5  087A               	movf	___lmul@product+2,w
 18593  0BE6  00F2               	movwf	?___lmul+2
 18594  0BE7  0879               	movf	___lmul@product+1,w
 18595  0BE8  00F1               	movwf	?___lmul+1
 18596  0BE9  0878               	movf	___lmul@product,w
 18597  0BEA  00F0               	movwf	?___lmul
 18598  0BEB                     i1l1415:
 18599  0BEB  0008               	return
 18600  0BEC                     __end_of___lmul:
 18601                           
 18602                           	psect	text97
 18603  069D                     __ptext97:	
 18604 ;; *************** function ___aldiv *****************
 18605 ;; Defined at:
 18606 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
 18607 ;; Parameters:    Size  Location     Type
 18608 ;;  divisor         4    0[BANK0 ] long 
 18609 ;;  dividend        4    4[BANK0 ] long 
 18610 ;; Auto vars:     Size  Location     Type
 18611 ;;  quotient        4   10[BANK0 ] long 
 18612 ;;  sign            1    9[BANK0 ] unsigned char 
 18613 ;;  counter         1    8[BANK0 ] unsigned char 
 18614 ;; Return value:  Size  Location     Type
 18615 ;;                  4    0[BANK0 ] long 
 18616 ;; Registers used:
 18617 ;;		wreg, status,2, status,0
 18618 ;; Tracked objects:
 18619 ;;		On entry : 0/0
 18620 ;;		On exit  : 0/0
 18621 ;;		Unchanged: 0/0
 18622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18623 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18624 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18625 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18626 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18627 ;;Total ram usage:       15 bytes
 18628 ;; Hardware stack levels used: 1
 18629 ;; This function calls:
 18630 ;;		Nothing
 18631 ;; This function is called by:
 18632 ;;		_map
 18633 ;; This function uses a non-reentrant model
 18634 ;;
 18635                           
 18636                           
 18637                           ;psect for function ___aldiv
 18638  069D                     ___aldiv:
 18639  069D                     i1l4949:	
 18640                           ;incstack = 0
 18641 ;; hardware stack exceeded
 18642                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 18643                           
 18644  069D  0020               	movlb	0	; select bank0
 18645  069E  01A9               	clrf	___aldiv@sign
 18646  069F                     i1l4951:
 18647  069F  1FA3               	btfss	___aldiv@divisor+3,7
 18648  06A0  2EA2               	goto	u265_21
 18649  06A1  2EA3               	goto	u265_20
 18650  06A2                     u265_21:
 18651  06A2  2EB0               	goto	i1l1466
 18652  06A3                     u265_20:
 18653  06A3                     i1l4953:
 18654  06A3  09A0               	comf	___aldiv@divisor,f
 18655  06A4  09A1               	comf	___aldiv@divisor+1,f
 18656  06A5  09A2               	comf	___aldiv@divisor+2,f
 18657  06A6  09A3               	comf	___aldiv@divisor+3,f
 18658  06A7  0AA0               	incf	___aldiv@divisor,f
 18659  06A8  1903               	skipnz
 18660  06A9  0AA1               	incf	___aldiv@divisor+1,f
 18661  06AA  1903               	skipnz
 18662  06AB  0AA2               	incf	___aldiv@divisor+2,f
 18663  06AC  1903               	skipnz
 18664  06AD  0AA3               	incf	___aldiv@divisor+3,f
 18665  06AE  01A9               	clrf	___aldiv@sign
 18666  06AF  0AA9               	incf	___aldiv@sign,f
 18667  06B0                     i1l1466:
 18668  06B0  1FA7               	btfss	___aldiv@dividend+3,7
 18669  06B1  2EB3               	goto	u266_21
 18670  06B2  2EB4               	goto	u266_20
 18671  06B3                     u266_21:
 18672  06B3  2EC3               	goto	i1l4959
 18673  06B4                     u266_20:
 18674  06B4                     i1l4955:
 18675  06B4  09A4               	comf	___aldiv@dividend,f
 18676  06B5  09A5               	comf	___aldiv@dividend+1,f
 18677  06B6  09A6               	comf	___aldiv@dividend+2,f
 18678  06B7  09A7               	comf	___aldiv@dividend+3,f
 18679  06B8  0AA4               	incf	___aldiv@dividend,f
 18680  06B9  1903               	skipnz
 18681  06BA  0AA5               	incf	___aldiv@dividend+1,f
 18682  06BB  1903               	skipnz
 18683  06BC  0AA6               	incf	___aldiv@dividend+2,f
 18684  06BD  1903               	skipnz
 18685  06BE  0AA7               	incf	___aldiv@dividend+3,f
 18686  06BF                     i1l4957:
 18687  06BF  3001               	movlw	1
 18688  06C0  00FC               	movwf	??___aldiv
 18689  06C1  087C               	movf	??___aldiv,w
 18690  06C2  06A9               	xorwf	___aldiv@sign,f
 18691  06C3                     i1l4959:
 18692  06C3  3000               	movlw	0
 18693  06C4  00AD               	movwf	___aldiv@quotient+3
 18694  06C5  3000               	movlw	0
 18695  06C6  00AC               	movwf	___aldiv@quotient+2
 18696  06C7  3000               	movlw	0
 18697  06C8  00AB               	movwf	___aldiv@quotient+1
 18698  06C9  3000               	movlw	0
 18699  06CA  00AA               	movwf	___aldiv@quotient
 18700  06CB                     i1l4961:
 18701  06CB  0823               	movf	___aldiv@divisor+3,w
 18702  06CC  0422               	iorwf	___aldiv@divisor+2,w
 18703  06CD  0421               	iorwf	___aldiv@divisor+1,w
 18704  06CE  0420               	iorwf	___aldiv@divisor,w
 18705  06CF  1903               	skipnz
 18706  06D0  2ED2               	goto	u267_21
 18707  06D1  2ED3               	goto	u267_20
 18708  06D2                     u267_21:
 18709  06D2  2F14               	goto	i1l4981
 18710  06D3                     u267_20:
 18711  06D3                     i1l4963:
 18712  06D3  01A8               	clrf	___aldiv@counter
 18713  06D4  0AA8               	incf	___aldiv@counter,f
 18714  06D5  2EE1               	goto	i1l4967
 18715  06D6                     i1l4965:
 18716  06D6  3001               	movlw	1
 18717  06D7                     u268_25:
 18718  06D7  35A0               	lslf	___aldiv@divisor,f
 18719  06D8  0DA1               	rlf	___aldiv@divisor+1,f
 18720  06D9  0DA2               	rlf	___aldiv@divisor+2,f
 18721  06DA  0DA3               	rlf	___aldiv@divisor+3,f
 18722  06DB  0B89               	decfsz	9,f
 18723  06DC  2ED7               	goto	u268_25
 18724  06DD  3001               	movlw	1
 18725  06DE  00FC               	movwf	??___aldiv
 18726  06DF  087C               	movf	??___aldiv,w
 18727  06E0  07A8               	addwf	___aldiv@counter,f
 18728  06E1                     i1l4967:
 18729  06E1  1FA3               	btfss	___aldiv@divisor+3,7
 18730  06E2  2EE4               	goto	u269_21
 18731  06E3  2EE5               	goto	u269_20
 18732  06E4                     u269_21:
 18733  06E4  2ED6               	goto	i1l4965
 18734  06E5                     u269_20:
 18735  06E5                     i1l4969:
 18736  06E5  3001               	movlw	1
 18737  06E6                     u270_25:
 18738  06E6  35AA               	lslf	___aldiv@quotient,f
 18739  06E7  0DAB               	rlf	___aldiv@quotient+1,f
 18740  06E8  0DAC               	rlf	___aldiv@quotient+2,f
 18741  06E9  0DAD               	rlf	___aldiv@quotient+3,f
 18742  06EA  0B89               	decfsz	9,f
 18743  06EB  2EE6               	goto	u270_25
 18744  06EC                     i1l4971:
 18745  06EC  0823               	movf	___aldiv@divisor+3,w
 18746  06ED  0227               	subwf	___aldiv@dividend+3,w
 18747  06EE  1D03               	skipz
 18748  06EF  2EFA               	goto	u271_25
 18749  06F0  0822               	movf	___aldiv@divisor+2,w
 18750  06F1  0226               	subwf	___aldiv@dividend+2,w
 18751  06F2  1D03               	skipz
 18752  06F3  2EFA               	goto	u271_25
 18753  06F4  0821               	movf	___aldiv@divisor+1,w
 18754  06F5  0225               	subwf	___aldiv@dividend+1,w
 18755  06F6  1D03               	skipz
 18756  06F7  2EFA               	goto	u271_25
 18757  06F8  0820               	movf	___aldiv@divisor,w
 18758  06F9  0224               	subwf	___aldiv@dividend,w
 18759  06FA                     u271_25:
 18760  06FA  1C03               	skipc
 18761  06FB  2EFD               	goto	u271_21
 18762  06FC  2EFE               	goto	u271_20
 18763  06FD                     u271_21:
 18764  06FD  2F07               	goto	i1l4977
 18765  06FE                     u271_20:
 18766  06FE                     i1l4973:
 18767  06FE  0820               	movf	___aldiv@divisor,w
 18768  06FF  02A4               	subwf	___aldiv@dividend,f
 18769  0700  0821               	movf	___aldiv@divisor+1,w
 18770  0701  3BA5               	subwfb	___aldiv@dividend+1,f
 18771  0702  0822               	movf	___aldiv@divisor+2,w
 18772  0703  3BA6               	subwfb	___aldiv@dividend+2,f
 18773  0704  0823               	movf	___aldiv@divisor+3,w
 18774  0705  3BA7               	subwfb	___aldiv@dividend+3,f
 18775  0706                     i1l4975:
 18776  0706  142A               	bsf	___aldiv@quotient,0
 18777  0707                     i1l4977:
 18778  0707  3001               	movlw	1
 18779  0708                     u272_25:
 18780  0708  36A3               	lsrf	___aldiv@divisor+3,f
 18781  0709  0CA2               	rrf	___aldiv@divisor+2,f
 18782  070A  0CA1               	rrf	___aldiv@divisor+1,f
 18783  070B  0CA0               	rrf	___aldiv@divisor,f
 18784  070C  0B89               	decfsz	9,f
 18785  070D  2F08               	goto	u272_25
 18786  070E                     i1l4979:
 18787  070E  3001               	movlw	1
 18788  070F  02A8               	subwf	___aldiv@counter,f
 18789  0710  1D03               	btfss	3,2
 18790  0711  2F13               	goto	u273_21
 18791  0712  2F14               	goto	u273_20
 18792  0713                     u273_21:
 18793  0713  2EE5               	goto	i1l4969
 18794  0714                     u273_20:
 18795  0714                     i1l4981:
 18796  0714  0829               	movf	___aldiv@sign,w
 18797  0715  1903               	btfsc	3,2
 18798  0716  2F18               	goto	u274_21
 18799  0717  2F19               	goto	u274_20
 18800  0718                     u274_21:
 18801  0718  2F24               	goto	i1l4985
 18802  0719                     u274_20:
 18803  0719                     i1l4983:
 18804  0719  09AA               	comf	___aldiv@quotient,f
 18805  071A  09AB               	comf	___aldiv@quotient+1,f
 18806  071B  09AC               	comf	___aldiv@quotient+2,f
 18807  071C  09AD               	comf	___aldiv@quotient+3,f
 18808  071D  0AAA               	incf	___aldiv@quotient,f
 18809  071E  1903               	skipnz
 18810  071F  0AAB               	incf	___aldiv@quotient+1,f
 18811  0720  1903               	skipnz
 18812  0721  0AAC               	incf	___aldiv@quotient+2,f
 18813  0722  1903               	skipnz
 18814  0723  0AAD               	incf	___aldiv@quotient+3,f
 18815  0724                     i1l4985:
 18816  0724  082D               	movf	___aldiv@quotient+3,w
 18817  0725  00A3               	movwf	?___aldiv+3
 18818  0726  082C               	movf	___aldiv@quotient+2,w
 18819  0727  00A2               	movwf	?___aldiv+2
 18820  0728  082B               	movf	___aldiv@quotient+1,w
 18821  0729  00A1               	movwf	?___aldiv+1
 18822  072A  082A               	movf	___aldiv@quotient,w
 18823  072B  00A0               	movwf	?___aldiv
 18824  072C                     i1l1476:
 18825  072C  0008               	return
 18826  072D                     __end_of___aldiv:
 18827                           
 18828                           	psect	text98
 18829  16D0                     __ptext98:	
 18830 ;; *************** function _getch *****************
 18831 ;; Defined at:
 18832 ;;		line 196 in file "mcc_generated_files/eusart.c"
 18833 ;; Parameters:    Size  Location     Type
 18834 ;;		None
 18835 ;; Auto vars:     Size  Location     Type
 18836 ;;		None
 18837 ;; Return value:  Size  Location     Type
 18838 ;;                  1    wreg      unsigned char 
 18839 ;; Registers used:
 18840 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18841 ;; Tracked objects:
 18842 ;;		On entry : 0/0
 18843 ;;		On exit  : 0/0
 18844 ;;		Unchanged: 0/0
 18845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18850 ;;Total ram usage:        0 bytes
 18851 ;; Hardware stack levels used: 1
 18852 ;; Hardware stack levels required when called: 1
 18853 ;; This function calls:
 18854 ;;		_EUSART_Read
 18855 ;; This function is called by:
 18856 ;;		_INTERRUPT_InterruptManager
 18857 ;; This function uses a non-reentrant model
 18858 ;;
 18859                           
 18860                           
 18861                           ;psect for function _getch
 18862  16D0                     _getch:
 18863  16D0                     i1l5097:	
 18864                           ;incstack = 0
 18865 ;; hardware stack exceeded
 18866                           ; Regs used in _getch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18867                           
 18868                           
 18869                           ;mcc_generated_files/eusart.c: 198:     return EUSART_Read();
 18870  16D0  318A  22CB  3196   	fcall	_EUSART_Read
 18871  16D3                     i1l814:
 18872  16D3  0008               	return
 18873  16D4                     __end_of_getch:
 18874                           
 18875                           	psect	text99
 18876  0ACB                     __ptext99:	
 18877 ;; *************** function _EUSART_Read *****************
 18878 ;; Defined at:
 18879 ;;		line 151 in file "mcc_generated_files/eusart.c"
 18880 ;; Parameters:    Size  Location     Type
 18881 ;;		None
 18882 ;; Auto vars:     Size  Location     Type
 18883 ;;  readValue       1    1[COMMON] unsigned char 
 18884 ;; Return value:  Size  Location     Type
 18885 ;;                  1    wreg      unsigned char 
 18886 ;; Registers used:
 18887 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18888 ;; Tracked objects:
 18889 ;;		On entry : 0/0
 18890 ;;		On exit  : 0/0
 18891 ;;		Unchanged: 0/0
 18892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18894 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18895 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18896 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18897 ;;Total ram usage:        2 bytes
 18898 ;; Hardware stack levels used: 1
 18899 ;; This function calls:
 18900 ;;		Nothing
 18901 ;; This function is called by:
 18902 ;;		_getch
 18903 ;; This function uses a non-reentrant model
 18904 ;;
 18905                           
 18906                           
 18907                           ;psect for function _EUSART_Read
 18908  0ACB                     _EUSART_Read:
 18909  0ACB                     i1l4865:	
 18910                           ;incstack = 0
 18911 ;; hardware stack exceeded
 18912                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 18913                           
 18914  0ACB                     i1l4867:	
 18915                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
 18916                           
 18917                           
 18918                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
 18919  0ACB  0021               	movlb	1	; select bank1
 18920  0ACC  0863               	movf	_eusartRxCount^(0+128),w	;volatile
 18921  0ACD  1903               	btfsc	3,2
 18922  0ACE  2AD0               	goto	u255_21
 18923  0ACF  2AD1               	goto	u255_20
 18924  0AD0                     u255_21:
 18925  0AD0  2ACB               	goto	i1l4867
 18926  0AD1                     u255_20:
 18927  0AD1                     i1l4869:
 18928                           
 18929                           ;mcc_generated_files/eusart.c: 159:     eusartRxLastError = eusartRxStatusBuffer[eusartR
      +                          xTail];
 18930  0AD1  0864               	movf	_eusartRxTail^(0+128),w	;volatile
 18931  0AD2  3E3D               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 18932  0AD3  0086               	movwf	6
 18933  0AD4  3001               	movlw	1	; select bank2/3
 18934  0AD5  0087               	movwf	7
 18935  0AD6  0801               	movf	1,w
 18936  0AD7  00F0               	movwf	??_EUSART_Read
 18937  0AD8  0870               	movf	??_EUSART_Read,w
 18938  0AD9  00E2               	movwf	_eusartRxLastError^(0+128)	;volatile
 18939                           
 18940                           ;mcc_generated_files/eusart.c: 161:     readValue = eusartRxBuffer[eusartRxTail++];
 18941  0ADA  0864               	movf	_eusartRxTail^(0+128),w
 18942  0ADB  3E45               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 18943  0ADC  0086               	movwf	6
 18944  0ADD  3001               	movlw	1	; select bank2/3
 18945  0ADE  0087               	movwf	7
 18946  0ADF  0801               	movf	1,w
 18947  0AE0  00F0               	movwf	??_EUSART_Read
 18948  0AE1  0870               	movf	??_EUSART_Read,w
 18949  0AE2  00F1               	movwf	EUSART_Read@readValue
 18950  0AE3                     i1l4871:
 18951  0AE3  3001               	movlw	1
 18952  0AE4  00F0               	movwf	??_EUSART_Read
 18953  0AE5  0870               	movf	??_EUSART_Read,w
 18954  0AE6  07E4               	addwf	_eusartRxTail^(0+128),f	;volatile
 18955  0AE7                     i1l4873:
 18956                           
 18957                           ;mcc_generated_files/eusart.c: 162:     if(sizeof(eusartRxBuffer) <= eusartRxTail)
 18958  0AE7  3008               	movlw	8
 18959  0AE8  0264               	subwf	_eusartRxTail^(0+128),w	;volatile
 18960  0AE9  1C03               	skipc
 18961  0AEA  2AEC               	goto	u256_21
 18962  0AEB  2AED               	goto	u256_20
 18963  0AEC                     u256_21:
 18964  0AEC  2AEE               	goto	i1l4877
 18965  0AED                     u256_20:
 18966  0AED                     i1l4875:
 18967                           
 18968                           ;mcc_generated_files/eusart.c: 163:     {;mcc_generated_files/eusart.c: 164:         eus
      +                          artRxTail = 0;
 18969  0AED  01E4               	clrf	_eusartRxTail^(0+128)	;volatile
 18970  0AEE                     i1l4877:
 18971                           
 18972                           ;mcc_generated_files/eusart.c: 166:     PIE3bits.RCIE = 0;
 18973  0AEE  002E               	movlb	14	; select bank14
 18974  0AEF  1299               	bcf	25,5	;volatile
 18975  0AF0                     i1l4879:
 18976                           
 18977                           ;mcc_generated_files/eusart.c: 167:     eusartRxCount--;
 18978  0AF0  3001               	movlw	1
 18979  0AF1  0021               	movlb	1	; select bank1
 18980  0AF2  02E3               	subwf	_eusartRxCount^(0+128),f	;volatile
 18981  0AF3                     i1l4881:
 18982                           
 18983                           ;mcc_generated_files/eusart.c: 168:     PIE3bits.RCIE = 1;
 18984  0AF3  002E               	movlb	14	; select bank14
 18985  0AF4  1699               	bsf	25,5	;volatile
 18986  0AF5                     i1l4883:
 18987                           
 18988                           ;mcc_generated_files/eusart.c: 170:     return readValue;
 18989  0AF5  0871               	movf	EUSART_Read@readValue,w
 18990  0AF6                     i1l802:
 18991  0AF6  0008               	return
 18992  0AF7                     __end_of_EUSART_Read:
 18993                           
 18994                           	psect	text100
 18995  07F0                     __ptext100:	
 18996 ;; *************** function _TMR0_ISR *****************
 18997 ;; Defined at:
 18998 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 18999 ;; Parameters:    Size  Location     Type
 19000 ;;		None
 19001 ;; Auto vars:     Size  Location     Type
 19002 ;;		None
 19003 ;; Return value:  Size  Location     Type
 19004 ;;                  1    wreg      void 
 19005 ;; Registers used:
 19006 ;;		wreg, status,2, status,0, pclath, cstack
 19007 ;; Tracked objects:
 19008 ;;		On entry : 0/0
 19009 ;;		On exit  : 0/0
 19010 ;;		Unchanged: 0/0
 19011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19016 ;;Total ram usage:        0 bytes
 19017 ;; Hardware stack levels used: 1
 19018 ;; Hardware stack levels required when called: 1
 19019 ;; This function calls:
 19020 ;;		Absolute function
 19021 ;;		_TMR0_DefaultInterruptHandler
 19022 ;; This function is called by:
 19023 ;;		_INTERRUPT_InterruptManager
 19024 ;; This function uses a non-reentrant model
 19025 ;;
 19026                           
 19027                           
 19028                           ;psect for function _TMR0_ISR
 19029  07F0                     _TMR0_ISR:
 19030  07F0                     i1l5289:	
 19031                           ;incstack = 0
 19032 ;; hardware stack exceeded
 19033                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 19034                           
 19035                           
 19036                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 19037  07F0  002E               	movlb	14	; select bank14
 19038  07F1  128C               	bcf	12,5	;volatile
 19039  07F2                     i1l5291:
 19040                           
 19041                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 19042  07F2  0021               	movlb	1	; select bank1
 19043  07F3  0868               	movf	_TMR0_InterruptHandler^(0+128),w
 19044  07F4  0469               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
 19045  07F5  1903               	btfsc	3,2
 19046  07F6  2FF8               	goto	u310_21
 19047  07F7  2FF9               	goto	u310_20
 19048  07F8                     u310_21:
 19049  07F8  2FFE               	goto	i1l1222
 19050  07F9                     u310_20:
 19051  07F9                     i1l5293:
 19052                           
 19053                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 19054  07F9  0869               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
 19055  07FA  008A               	movwf	10
 19056  07FB  0868               	movf	_TMR0_InterruptHandler^(0+128),w
 19057  07FC  000A               	callw
 19058  07FD  3187               	pagesel	$
 19059  07FE                     i1l1222:
 19060  07FE  0008               	return
 19061  07FF                     __end_of_TMR0_ISR:
 19062                           
 19063                           	psect	text101
 19064  07FF                     __ptext101:	
 19065 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 19066 ;; Defined at:
 19067 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 19068 ;; Parameters:    Size  Location     Type
 19069 ;;		None
 19070 ;; Auto vars:     Size  Location     Type
 19071 ;;		None
 19072 ;; Return value:  Size  Location     Type
 19073 ;;                  1    wreg      void 
 19074 ;; Registers used:
 19075 ;;		None
 19076 ;; Tracked objects:
 19077 ;;		On entry : 0/0
 19078 ;;		On exit  : 0/0
 19079 ;;		Unchanged: 0/0
 19080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19085 ;;Total ram usage:        0 bytes
 19086 ;; Hardware stack levels used: 1
 19087 ;; This function calls:
 19088 ;;		Nothing
 19089 ;; This function is called by:
 19090 ;;		_TMR0_Initialize
 19091 ;;		_TMR0_ISR
 19092 ;; This function uses a non-reentrant model
 19093 ;;
 19094                           
 19095                           
 19096                           ;psect for function _TMR0_DefaultInterruptHandler
 19097  07FF                     _TMR0_DefaultInterruptHandler:
 19098  07FF                     i1l1228:	
 19099                           ;incstack = 0
 19100 ;; hardware stack exceeded
 19101                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 19102                           
 19103  07FF  0008               	return
 19104  0800                     __end_of_TMR0_DefaultInterruptHandler:
 19105                           
 19106                           	psect	text102
 19107  0A06                     __ptext102:	
 19108 ;; *************** function _EUSART_Transmit_ISR *****************
 19109 ;; Defined at:
 19110 ;;		line 206 in file "mcc_generated_files/eusart.c"
 19111 ;; Parameters:    Size  Location     Type
 19112 ;;		None
 19113 ;; Auto vars:     Size  Location     Type
 19114 ;;		None
 19115 ;; Return value:  Size  Location     Type
 19116 ;;                  1    wreg      void 
 19117 ;; Registers used:
 19118 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19119 ;; Tracked objects:
 19120 ;;		On entry : 0/0
 19121 ;;		On exit  : 0/0
 19122 ;;		Unchanged: 0/0
 19123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19126 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19127 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19128 ;;Total ram usage:        1 bytes
 19129 ;; Hardware stack levels used: 1
 19130 ;; This function calls:
 19131 ;;		Nothing
 19132 ;; This function is called by:
 19133 ;;		_EUSART_Initialize
 19134 ;;		_INTERRUPT_InterruptManager
 19135 ;; This function uses a non-reentrant model
 19136 ;;
 19137                           
 19138                           
 19139                           ;psect for function _EUSART_Transmit_ISR
 19140  0A06                     _EUSART_Transmit_ISR:
 19141  0A06                     i1l5101:	
 19142                           ;incstack = 0
 19143                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 19144                           
 19145                           
 19146                           ;mcc_generated_files/eusart.c: 210:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
 19147  0A06  3008               	movlw	8
 19148  0A07  0021               	movlb	1	; select bank1
 19149  0A08  026C               	subwf	_eusartTxBufferRemaining^(0+128),w	;volatile
 19150  0A09  1803               	skipnc
 19151  0A0A  2A0C               	goto	u289_21
 19152  0A0B  2A0D               	goto	u289_20
 19153  0A0C                     u289_21:
 19154  0A0C  2A26               	goto	i1l820
 19155  0A0D                     u289_20:
 19156  0A0D                     i1l5103:
 19157                           
 19158                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         TX1
      +                          REG = eusartTxBuffer[eusartTxTail++];
 19159  0A0D  0866               	movf	_eusartTxTail^(0+128),w
 19160  0A0E  3E4D               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 19161  0A0F  0086               	movwf	6
 19162  0A10  3001               	movlw	1	; select bank2/3
 19163  0A11  0087               	movwf	7
 19164  0A12  0801               	movf	1,w
 19165  0A13  0022               	movlb	2	; select bank2
 19166  0A14  009A               	movwf	26	;volatile
 19167  0A15                     i1l5105:
 19168  0A15  3001               	movlw	1
 19169  0A16  00F0               	movwf	??_EUSART_Transmit_ISR
 19170  0A17  0870               	movf	??_EUSART_Transmit_ISR,w
 19171  0A18  0021               	movlb	1	; select bank1
 19172  0A19  07E6               	addwf	_eusartTxTail^(0+128),f	;volatile
 19173  0A1A                     i1l5107:
 19174                           
 19175                           ;mcc_generated_files/eusart.c: 213:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 19176  0A1A  3008               	movlw	8
 19177  0A1B  0266               	subwf	_eusartTxTail^(0+128),w	;volatile
 19178  0A1C  1C03               	skipc
 19179  0A1D  2A1F               	goto	u290_21
 19180  0A1E  2A20               	goto	u290_20
 19181  0A1F                     u290_21:
 19182  0A1F  2A21               	goto	i1l5111
 19183  0A20                     u290_20:
 19184  0A20                     i1l5109:
 19185                           
 19186                           ;mcc_generated_files/eusart.c: 214:         {;mcc_generated_files/eusart.c: 215:        
      +                               eusartTxTail = 0;
 19187  0A20  01E6               	clrf	_eusartTxTail^(0+128)	;volatile
 19188  0A21                     i1l5111:
 19189                           
 19190                           ;mcc_generated_files/eusart.c: 217:         eusartTxBufferRemaining++;
 19191  0A21  3001               	movlw	1
 19192  0A22  00F0               	movwf	??_EUSART_Transmit_ISR
 19193  0A23  0870               	movf	??_EUSART_Transmit_ISR,w
 19194  0A24  07EC               	addwf	_eusartTxBufferRemaining^(0+128),f	;volatile
 19195                           
 19196                           ;mcc_generated_files/eusart.c: 218:     }
 19197  0A25  2A28               	goto	i1l823
 19198  0A26                     i1l820:	
 19199                           ;mcc_generated_files/eusart.c: 219:     else
 19200                           
 19201                           
 19202                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:         PIE
      +                          3bits.TXIE = 0;
 19203  0A26  002E               	movlb	14	; select bank14
 19204  0A27  1219               	bcf	25,4	;volatile
 19205  0A28                     i1l823:
 19206  0A28  0008               	return
 19207  0A29                     __end_of_EUSART_Transmit_ISR:
 19208                           
 19209                           	psect	text103
 19210  0C98                     __ptext103:	
 19211 ;; *************** function _EUSART_Receive_ISR *****************
 19212 ;; Defined at:
 19213 ;;		line 225 in file "mcc_generated_files/eusart.c"
 19214 ;; Parameters:    Size  Location     Type
 19215 ;;		None
 19216 ;; Auto vars:     Size  Location     Type
 19217 ;;		None
 19218 ;; Return value:  Size  Location     Type
 19219 ;;                  1    wreg      void 
 19220 ;; Registers used:
 19221 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19222 ;; Tracked objects:
 19223 ;;		On entry : 0/0
 19224 ;;		On exit  : 0/0
 19225 ;;		Unchanged: 0/0
 19226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19231 ;;Total ram usage:        0 bytes
 19232 ;; Hardware stack levels used: 1
 19233 ;; Hardware stack levels required when called: 2
 19234 ;; This function calls:
 19235 ;;		Absolute function
 19236 ;;		_EUSART_DefaultErrorHandler
 19237 ;;		_EUSART_DefaultFramingErrorHandler
 19238 ;;		_EUSART_DefaultOverrunErrorHandler
 19239 ;;		_EUSART_RxDataHandler
 19240 ;; This function is called by:
 19241 ;;		_EUSART_Initialize
 19242 ;;		_INTERRUPT_InterruptManager
 19243 ;; This function uses a non-reentrant model
 19244 ;;
 19245                           
 19246                           
 19247                           ;psect for function _EUSART_Receive_ISR
 19248  0C98                     _EUSART_Receive_ISR:
 19249  0C98                     i1l5113:	
 19250                           ;incstack = 0
 19251 ;; hardware stack exceeded
 19252                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19253                           
 19254                           
 19255                           ;mcc_generated_files/eusart.c: 228:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 19256  0C98  0021               	movlb	1	; select bank1
 19257  0C99  0865               	movf	_eusartRxHead^(0+128),w	;volatile
 19258  0C9A  3E3D               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 19259  0C9B  0086               	movwf	6
 19260  0C9C  3001               	movlw	1	; select bank2/3
 19261  0C9D  0087               	movwf	7
 19262  0C9E  0181               	clrf	1
 19263  0C9F                     i1l5115:
 19264                           
 19265                           ;mcc_generated_files/eusart.c: 230:     if(RC1STAbits.FERR){
 19266  0C9F  0022               	movlb	2	; select bank2
 19267  0CA0  1D1D               	btfss	29,2	;volatile
 19268  0CA1  2CA3               	goto	u291_21
 19269  0CA2  2CA4               	goto	u291_20
 19270  0CA3                     u291_21:
 19271  0CA3  2CB1               	goto	i1l5121
 19272  0CA4                     u291_20:
 19273  0CA4                     i1l5117:
 19274                           
 19275                           ;mcc_generated_files/eusart.c: 231:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 19276  0CA4  0021               	movlb	1	; select bank1
 19277  0CA5  0865               	movf	_eusartRxHead^(0+128),w	;volatile
 19278  0CA6  3E3D               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 19279  0CA7  0086               	movwf	6
 19280  0CA8  3001               	movlw	1	; select bank2/3
 19281  0CA9  0087               	movwf	7
 19282  0CAA  1481               	bsf	1,1
 19283  0CAB                     i1l5119:
 19284                           
 19285                           ;mcc_generated_files/eusart.c: 232:         EUSART_FramingErrorHandler();
 19286  0CAB  0022               	movlb	2	; select bank2
 19287  0CAC  085A               	movf	(_EUSART_FramingErrorHandler+1)^(0+256),w
 19288  0CAD  008A               	movwf	10
 19289  0CAE  0859               	movf	_EUSART_FramingErrorHandler^(0+256),w
 19290  0CAF  000A               	callw
 19291  0CB0  318C               	pagesel	$
 19292  0CB1                     i1l5121:
 19293                           
 19294                           ;mcc_generated_files/eusart.c: 235:     if(RC1STAbits.OERR){
 19295  0CB1  0022               	movlb	2	; select bank2
 19296  0CB2  1C9D               	btfss	29,1	;volatile
 19297  0CB3  2CB5               	goto	u292_21
 19298  0CB4  2CB6               	goto	u292_20
 19299  0CB5                     u292_21:
 19300  0CB5  2CC3               	goto	i1l5127
 19301  0CB6                     u292_20:
 19302  0CB6                     i1l5123:
 19303                           
 19304                           ;mcc_generated_files/eusart.c: 236:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 19305  0CB6  0021               	movlb	1	; select bank1
 19306  0CB7  0865               	movf	_eusartRxHead^(0+128),w	;volatile
 19307  0CB8  3E3D               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 19308  0CB9  0086               	movwf	6
 19309  0CBA  3001               	movlw	1	; select bank2/3
 19310  0CBB  0087               	movwf	7
 19311  0CBC  1501               	bsf	1,2
 19312  0CBD                     i1l5125:
 19313                           
 19314                           ;mcc_generated_files/eusart.c: 237:         EUSART_OverrunErrorHandler();
 19315  0CBD  0022               	movlb	2	; select bank2
 19316  0CBE  0858               	movf	(_EUSART_OverrunErrorHandler+1)^(0+256),w
 19317  0CBF  008A               	movwf	10
 19318  0CC0  0857               	movf	_EUSART_OverrunErrorHandler^(0+256),w
 19319  0CC1  000A               	callw
 19320  0CC2  318C               	pagesel	$
 19321  0CC3                     i1l5127:
 19322                           
 19323                           ;mcc_generated_files/eusart.c: 240:     if(eusartRxStatusBuffer[eusartRxHead].status){
 19324  0CC3  0021               	movlb	1	; select bank1
 19325  0CC4  0865               	movf	_eusartRxHead^(0+128),w	;volatile
 19326  0CC5  3E3D               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 19327  0CC6  0086               	movwf	6
 19328  0CC7  3001               	movlw	1	; select bank2/3
 19329  0CC8  0087               	movwf	7
 19330  0CC9  0801               	movf	1,w
 19331  0CCA  1903               	btfsc	3,2
 19332  0CCB  2CCD               	goto	u293_21
 19333  0CCC  2CCE               	goto	u293_20
 19334  0CCD                     u293_21:
 19335  0CCD  2CD5               	goto	i1l5131
 19336  0CCE                     u293_20:
 19337  0CCE                     i1l5129:
 19338                           
 19339                           ;mcc_generated_files/eusart.c: 241:         EUSART_ErrorHandler();
 19340  0CCE  0022               	movlb	2	; select bank2
 19341  0CCF  0856               	movf	(_EUSART_ErrorHandler+1)^(0+256),w
 19342  0CD0  008A               	movwf	10
 19343  0CD1  0855               	movf	_EUSART_ErrorHandler^(0+256),w
 19344  0CD2  000A               	callw
 19345  0CD3  318C               	pagesel	$
 19346                           
 19347                           ;mcc_generated_files/eusart.c: 242:     } else {
 19348  0CD4  2CD8               	goto	i1l830
 19349  0CD5                     i1l5131:
 19350                           
 19351                           ;mcc_generated_files/eusart.c: 243:         EUSART_RxDataHandler();
 19352  0CD5  3189  2151  318C   	fcall	_EUSART_RxDataHandler
 19353  0CD8                     i1l830:
 19354  0CD8  0008               	return
 19355  0CD9                     __end_of_EUSART_Receive_ISR:
 19356                           
 19357                           	psect	text104
 19358  16CC                     __ptext104:	
 19359 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 19360 ;; Defined at:
 19361 ;;		line 261 in file "mcc_generated_files/eusart.c"
 19362 ;; Parameters:    Size  Location     Type
 19363 ;;		None
 19364 ;; Auto vars:     Size  Location     Type
 19365 ;;		None
 19366 ;; Return value:  Size  Location     Type
 19367 ;;                  1    wreg      void 
 19368 ;; Registers used:
 19369 ;;		None
 19370 ;; Tracked objects:
 19371 ;;		On entry : 0/0
 19372 ;;		On exit  : 0/0
 19373 ;;		Unchanged: 0/0
 19374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19379 ;;Total ram usage:        0 bytes
 19380 ;; Hardware stack levels used: 1
 19381 ;; This function calls:
 19382 ;;		Nothing
 19383 ;; This function is called by:
 19384 ;;		_EUSART_Initialize
 19385 ;;		_EUSART_Receive_ISR
 19386 ;; This function uses a non-reentrant model
 19387 ;;
 19388                           
 19389                           
 19390                           ;psect for function _EUSART_DefaultOverrunErrorHandler
 19391  16CC                     _EUSART_DefaultOverrunErrorHandler:
 19392  16CC                     i1l4887:	
 19393                           ;incstack = 0
 19394 ;; hardware stack exceeded
 19395                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
 19396                           
 19397                           
 19398                           ;mcc_generated_files/eusart.c: 264:     RC1STAbits.CREN = 0;
 19399  16CC  0022               	movlb	2	; select bank2
 19400  16CD  121D               	bcf	29,4	;volatile
 19401                           
 19402                           ;mcc_generated_files/eusart.c: 265:     RC1STAbits.CREN = 1;
 19403  16CE  161D               	bsf	29,4	;volatile
 19404  16CF                     i1l840:
 19405  16CF  0008               	return
 19406  16D0                     __end_of_EUSART_DefaultOverrunErrorHandler:
 19407                           
 19408                           	psect	text105
 19409  16A8                     __ptext105:	
 19410 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 19411 ;; Defined at:
 19412 ;;		line 259 in file "mcc_generated_files/eusart.c"
 19413 ;; Parameters:    Size  Location     Type
 19414 ;;		None
 19415 ;; Auto vars:     Size  Location     Type
 19416 ;;		None
 19417 ;; Return value:  Size  Location     Type
 19418 ;;                  1    wreg      void 
 19419 ;; Registers used:
 19420 ;;		None
 19421 ;; Tracked objects:
 19422 ;;		On entry : 0/0
 19423 ;;		On exit  : 0/0
 19424 ;;		Unchanged: 0/0
 19425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19430 ;;Total ram usage:        0 bytes
 19431 ;; Hardware stack levels used: 1
 19432 ;; This function calls:
 19433 ;;		Nothing
 19434 ;; This function is called by:
 19435 ;;		_EUSART_Initialize
 19436 ;;		_EUSART_Receive_ISR
 19437 ;; This function uses a non-reentrant model
 19438 ;;
 19439                           
 19440                           
 19441                           ;psect for function _EUSART_DefaultFramingErrorHandler
 19442  16A8                     _EUSART_DefaultFramingErrorHandler:
 19443  16A8                     i1l837:	
 19444                           ;incstack = 0
 19445 ;; hardware stack exceeded
 19446                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
 19447                           
 19448  16A8  0008               	return
 19449  16A9                     __end_of_EUSART_DefaultFramingErrorHandler:
 19450                           
 19451                           	psect	text106
 19452  16C8                     __ptext106:	
 19453 ;; *************** function _EUSART_DefaultErrorHandler *****************
 19454 ;; Defined at:
 19455 ;;		line 269 in file "mcc_generated_files/eusart.c"
 19456 ;; Parameters:    Size  Location     Type
 19457 ;;		None
 19458 ;; Auto vars:     Size  Location     Type
 19459 ;;		None
 19460 ;; Return value:  Size  Location     Type
 19461 ;;                  1    wreg      void 
 19462 ;; Registers used:
 19463 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19464 ;; Tracked objects:
 19465 ;;		On entry : 0/0
 19466 ;;		On exit  : 0/0
 19467 ;;		Unchanged: 0/0
 19468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19473 ;;Total ram usage:        0 bytes
 19474 ;; Hardware stack levels used: 1
 19475 ;; Hardware stack levels required when called: 1
 19476 ;; This function calls:
 19477 ;;		_EUSART_RxDataHandler
 19478 ;; This function is called by:
 19479 ;;		_EUSART_Initialize
 19480 ;;		_EUSART_Receive_ISR
 19481 ;; This function uses a non-reentrant model
 19482 ;;
 19483                           
 19484                           
 19485                           ;psect for function _EUSART_DefaultErrorHandler
 19486  16C8                     _EUSART_DefaultErrorHandler:
 19487  16C8                     i1l4889:	
 19488                           ;incstack = 0
 19489 ;; hardware stack exceeded
 19490                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 19491                           
 19492                           
 19493                           ;mcc_generated_files/eusart.c: 270:     EUSART_RxDataHandler();
 19494  16C8  3189  2151  3196   	fcall	_EUSART_RxDataHandler
 19495  16CB                     i1l843:
 19496  16CB  0008               	return
 19497  16CC                     __end_of_EUSART_DefaultErrorHandler:
 19498                           
 19499                           	psect	text107
 19500  0951                     __ptext107:	
 19501 ;; *************** function _EUSART_RxDataHandler *****************
 19502 ;; Defined at:
 19503 ;;		line 249 in file "mcc_generated_files/eusart.c"
 19504 ;; Parameters:    Size  Location     Type
 19505 ;;		None
 19506 ;; Auto vars:     Size  Location     Type
 19507 ;;		None
 19508 ;; Return value:  Size  Location     Type
 19509 ;;                  1    wreg      void 
 19510 ;; Registers used:
 19511 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19512 ;; Tracked objects:
 19513 ;;		On entry : 0/0
 19514 ;;		On exit  : 0/0
 19515 ;;		Unchanged: 0/0
 19516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19519 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19520 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19521 ;;Total ram usage:        1 bytes
 19522 ;; Hardware stack levels used: 1
 19523 ;; This function calls:
 19524 ;;		Nothing
 19525 ;; This function is called by:
 19526 ;;		_EUSART_Receive_ISR
 19527 ;;		_EUSART_DefaultErrorHandler
 19528 ;; This function uses a non-reentrant model
 19529 ;;
 19530                           
 19531                           
 19532                           ;psect for function _EUSART_RxDataHandler
 19533  0951                     _EUSART_RxDataHandler:
 19534  0951                     i1l4677:	
 19535                           ;incstack = 0
 19536 ;; hardware stack exceeded
 19537                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 19538                           
 19539                           
 19540                           ;mcc_generated_files/eusart.c: 251:     eusartRxBuffer[eusartRxHead++] = RC1REG;
 19541  0951  0022               	movlb	2	; select bank2
 19542  0952  0819               	movf	25,w	;volatile
 19543  0953  00F0               	movwf	??_EUSART_RxDataHandler
 19544  0954  0021               	movlb	1	; select bank1
 19545  0955  0865               	movf	_eusartRxHead^(0+128),w
 19546  0956  3E45               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 19547  0957  0086               	movwf	6
 19548  0958  3001               	movlw	1	; select bank2/3
 19549  0959  0087               	movwf	7
 19550  095A  0870               	movf	??_EUSART_RxDataHandler,w
 19551  095B  0081               	movwf	1
 19552  095C                     i1l4679:
 19553  095C  3001               	movlw	1
 19554  095D  00F0               	movwf	??_EUSART_RxDataHandler
 19555  095E  0870               	movf	??_EUSART_RxDataHandler,w
 19556  095F  07E5               	addwf	_eusartRxHead^(0+128),f	;volatile
 19557  0960                     i1l4681:
 19558                           
 19559                           ;mcc_generated_files/eusart.c: 252:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 19560  0960  3008               	movlw	8
 19561  0961  0265               	subwf	_eusartRxHead^(0+128),w	;volatile
 19562  0962  1C03               	skipc
 19563  0963  2965               	goto	u249_21
 19564  0964  2966               	goto	u249_20
 19565  0965                     u249_21:
 19566  0965  2967               	goto	i1l4685
 19567  0966                     u249_20:
 19568  0966                     i1l4683:
 19569                           
 19570                           ;mcc_generated_files/eusart.c: 253:     {;mcc_generated_files/eusart.c: 254:         eus
      +                          artRxHead = 0;
 19571  0966  01E5               	clrf	_eusartRxHead^(0+128)	;volatile
 19572  0967                     i1l4685:
 19573                           
 19574                           ;mcc_generated_files/eusart.c: 256:     eusartRxCount++;
 19575  0967  3001               	movlw	1
 19576  0968  00F0               	movwf	??_EUSART_RxDataHandler
 19577  0969  0870               	movf	??_EUSART_RxDataHandler,w
 19578  096A  07E3               	addwf	_eusartRxCount^(0+128),f	;volatile
 19579  096B                     i1l834:
 19580  096B  0008               	return
 19581  096C                     __end_of_EUSART_RxDataHandler:
 19582                           
 19583                           	psect	text108
 19584  17DC                     __ptext108:	
 19585 ;; *************** function _ADCC_GetSingleConversion *****************
 19586 ;; Defined at:
 19587 ;;		line 132 in file "mcc_generated_files/adcc.c"
 19588 ;; Parameters:    Size  Location     Type
 19589 ;;  channel         1    wreg     enum E11687
 19590 ;; Auto vars:     Size  Location     Type
 19591 ;;  channel         1    2[COMMON] enum E11687
 19592 ;; Return value:  Size  Location     Type
 19593 ;;                  2    0[COMMON] unsigned short 
 19594 ;; Registers used:
 19595 ;;		wreg
 19596 ;; Tracked objects:
 19597 ;;		On entry : 0/0
 19598 ;;		On exit  : 0/0
 19599 ;;		Unchanged: 0/0
 19600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19601 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19602 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19604 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19605 ;;Total ram usage:        3 bytes
 19606 ;; Hardware stack levels used: 1
 19607 ;; This function calls:
 19608 ;;		Nothing
 19609 ;; This function is called by:
 19610 ;;		_INTERRUPT_InterruptManager
 19611 ;; This function uses a non-reentrant model
 19612 ;;
 19613                           
 19614                           
 19615                           ;psect for function _ADCC_GetSingleConversion
 19616  17DC                     _ADCC_GetSingleConversion:
 19617                           
 19618                           ;incstack = 0
 19619                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 19620                           ;ADCC_GetSingleConversion@channel stored from wreg
 19621  17DC  00F2               	movwf	ADCC_GetSingleConversion@channel
 19622  17DD                     i1l5065:
 19623                           
 19624                           ;mcc_generated_files/adcc.c: 132: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 133: {;mcc_generated_files/adcc.c: 135:     ADPCH = 
      +                          channel;
 19625  17DD  0872               	movf	ADCC_GetSingleConversion@channel,w
 19626  17DE  0021               	movlb	1	; select bank1
 19627  17DF  009E               	movwf	30	;volatile
 19628  17E0                     i1l5067:
 19629                           
 19630                           ;mcc_generated_files/adcc.c: 138:     ADCON0bits.ADON = 1;
 19631  17E0  1793               	bsf	19,7	;volatile
 19632  17E1                     i1l5069:
 19633                           
 19634                           ;mcc_generated_files/adcc.c: 141:     ADCON0bits.ADCONT = 0;
 19635  17E1  1313               	bcf	19,6	;volatile
 19636  17E2                     i1l5071:
 19637                           
 19638                           ;mcc_generated_files/adcc.c: 144:     ADCON0bits.ADGO = 1;
 19639  17E2  1413               	bsf	19,0	;volatile
 19640  17E3                     i1l5073:
 19641                           
 19642                           ;mcc_generated_files/adcc.c: 147:     __nop();
 19643  17E3  0000               	nop
 19644  17E4                     i1l189:	
 19645                           ;mcc_generated_files/adcc.c: 151:     {;mcc_generated_files/adcc.c: 152:     }
 19646                           
 19647                           
 19648                           ;mcc_generated_files/adcc.c: 150:     while (ADCON0bits.ADGO)
 19649  17E4  0021               	movlb	1	; select bank1
 19650  17E5  1813               	btfsc	19,0	;volatile
 19651  17E6  2FE8               	goto	u288_21
 19652  17E7  2FE9               	goto	u288_20
 19653  17E8                     u288_21:
 19654  17E8  2FE4               	goto	i1l189
 19655  17E9                     u288_20:
 19656  17E9                     i1l5075:
 19657                           
 19658                           ;mcc_generated_files/adcc.c: 156:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 19659  17E9  080D               	movf	13,w	;volatile
 19660  17EA  00F1               	movwf	?_ADCC_GetSingleConversion+1
 19661  17EB  080C               	movf	12,w	;volatile
 19662  17EC  00F0               	movwf	?_ADCC_GetSingleConversion
 19663  17ED                     i1l192:
 19664  17ED  0008               	return
 19665  17EE                     __end_of_ADCC_GetSingleConversion:
 19666  007E                     btemp	set	126	;btemp
 19667  007E                     int$flags	set	126
 19668  007E                     wtemp0	set	126
 19669                           
 19670                           	psect	config
 19671                           
 19672                           ;Config register CONFIG1 @ 0x8007
 19673                           ;	External Oscillator mode selection bits
 19674                           ;	FEXTOSC = OFF, Oscillator not enabled
 19675                           ;	Power-up default value for COSC bits
 19676                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 19677                           ;	Clock Out Enable bit
 19678                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 19679                           ;	Clock Switch Enable bit
 19680                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 19681                           ;	Fail-Safe Clock Monitor Enable bit
 19682                           ;	FCMEN = ON, FSCM timer enabled
 19683  8007                     	org	32775
 19684  8007  3FEC               	dw	16364
 19685                           
 19686                           ;Config register CONFIG2 @ 0x8008
 19687                           ;	Master Clear Enable bit
 19688                           ;	MCLRE = ON, MCLR pin is Master Clear function
 19689                           ;	Power-up Timer Enable bit
 19690                           ;	PWRTE = OFF, PWRT disabled
 19691                           ;	Low-Power BOR enable bit
 19692                           ;	LPBOREN = OFF, ULPBOR disabled
 19693                           ;	Brown-out reset enable bits
 19694                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 19695                           ;	Brown-out Reset Voltage Selection
 19696                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 19697                           ;	Zero-cross detect disable
 19698                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 19699                           ;	Peripheral Pin Select one-way control
 19700                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 19701                           ;	Stack Overflow/Underflow Reset Enable bit
 19702                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 19703                           ;	Background Debugger
 19704                           ;	DEBUG = OFF, Background Debugger disabled
 19705  8008                     	org	32776
 19706  8008  3FFF               	dw	16383
 19707                           
 19708                           ;Config register CONFIG3 @ 0x8009
 19709                           ;	WDT Period Select bits
 19710                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 19711                           ;	WDT operating mode
 19712                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 19713                           ;	WDT Window Select bits
 19714                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 19715                           ;	WDT input clock selector
 19716                           ;	WDTCCS = SC, Software Control
 19717  8009                     	org	32777
 19718  8009  3F9F               	dw	16287
 19719                           
 19720                           ;Config register CONFIG4 @ 0x800A
 19721                           ;	UserNVM self-write protection bits
 19722                           ;	WRT = OFF, Write protection off
 19723                           ;	Scanner Enable bit
 19724                           ;	SCANE = available, Scanner module is available for use
 19725                           ;	Low Voltage Programming Enable bit
 19726                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 19727  800A                     	org	32778
 19728  800A  3FFF               	dw	16383
 19729                           
 19730                           ;Config register CONFIG5 @ 0x800B
 19731                           ;	UserNVM Program memory code protection bit
 19732                           ;	CP = OFF, Program Memory code protection disabled
 19733                           ;	DataNVM code protection bit
 19734                           ;	CPD = OFF, Data EEPROM code protection disabled
 19735  800B                     	org	32779
 19736  800B  3FFF               	dw	16383

Data Sizes:
    Strings     75
    Constant    36
    Data        2
    BSS         197
    Persistent  45
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     77      80
    BANK1            80     43      79
    BANK2            80      0      61
    BANK3            80      0      80
    BANK4            80      0      32
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_DO_TX$3343$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK1[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_DO_TX$3348	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK1[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_DO_TX$3343	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C1_MasterFsm$3342	const PTR FTN()enum E12076 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK1[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK1[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK1[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK1[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK1[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S578$0$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK1[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_19(CODE[3]), STR_17(CODE[8]), STR_15(CODE[7]), STR_13(CODE[8]), 
		 -> STR_11(CODE[7]), STR_9(CODE[8]), STR_7(CODE[7]), STR_5(CODE[8]), 
		 -> STR_3(CODE[7]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_19(CODE[3]), STR_17(CODE[8]), STR_15(CODE[7]), STR_13(CODE[8]), 
		 -> STR_11(CODE[7]), STR_9(CODE[8]), STR_7(CODE[7]), STR_5(CODE[8]), 
		 -> STR_3(CODE[7]), 

    strncmp@_l	PTR const unsigned char  size(1) Largest target is 40
		 -> buffer(BANK3[40]), NULL(NULL[0]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 40
		 -> buffer(BANK3[40]), NULL(NULL[0]), 

    strchr@s	PTR const unsigned char  size(1) Largest target is 40
		 -> buffer(BANK3[40]), NULL(NULL[0]), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 40
		 -> buffer(BANK3[40]), NULL(NULL[0]), 

    strstr@h	PTR const unsigned char  size(1) Largest target is 40
		 -> buffer(BANK3[40]), NULL(NULL[0]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_19(CODE[3]), STR_17(CODE[8]), STR_15(CODE[7]), STR_13(CODE[8]), 
		 -> STR_11(CODE[7]), STR_9(CODE[8]), STR_7(CODE[7]), STR_5(CODE[8]), 
		 -> STR_3(CODE[7]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK4[32]), STR_19(CODE[3]), STR_17(CODE[8]), STR_15(CODE[7]), 
		 -> STR_13(CODE[8]), STR_11(CODE[7]), STR_9(CODE[8]), STR_7(CODE[7]), 
		 -> STR_5(CODE[8]), STR_3(CODE[7]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK4[32]), STR_19(CODE[3]), STR_17(CODE[8]), STR_15(CODE[7]), 
		 -> STR_13(CODE[8]), STR_11(CODE[7]), STR_9(CODE[8]), STR_7(CODE[7]), 
		 -> STR_5(CODE[8]), STR_3(CODE[7]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S2793_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_20(CODE[7]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 7
		 -> STR_20(CODE[7]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_20(CODE[7]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 20
		 -> buffer2(BANK3[20]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    lcd_puts@dato	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    sp__strstr	PTR unsigned char  size(1) Largest target is 40
		 -> buffer(BANK3[40]), NULL(NULL[0]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), Absolute function(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), Absolute function(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    I2C1_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK1[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK1[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C1_SetBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(BANK1[1]), I2C1_Write1ByteRegister@data(BANK1[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S578$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(BANK1[1]), I2C1_Write1ByteRegister@data(BANK1[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(BANK1[1]), I2C1_Write1ByteRegister@data(BANK1[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S578$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK1[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK1[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S578$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    i2c1_fsmStateTable	const PTR FTN()enum E12076[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK1[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK1[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK1[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK1[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK1[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S94$data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_printf
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___aomod
    _map->___aldiv
    ___aldiv->___lmul
    _getch->_EUSART_Read
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INTERRUPT_InterruptManager->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod
    _map->___aldiv

Critical Paths under _main in BANK1

    _main->_lcd_puts
    _strstr->_strncmp
    _lcd_puts->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_init->_lcd_send_byte
    _lcd_send_byte->_Send_D7_D4
    _Send_D7_D4->_Write_PCF
    _Write_PCF->_I2C1_Write1ByteRegister
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_Poller->_I2C1_MasterFsm
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback
    _atoi->___wmul
    _atoi->_isdigit
    _SYSTEM_Initialize->_EUSART_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  518922
                                             42 BANK1      1     1      0
                 _PWM5_LoadDutyValue
                  _SYSTEM_Initialize
                               _atoi
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_puts
                             _strstr
 ---------------------------------------------------------------------------------
 (1) _strstr                                               8     6      2    2026
                                              9 BANK1      8     6      2
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                              9     5      4     410
                                              0 BANK1      9     5      4
 ---------------------------------------------------------------------------------
 (2) _strlen                                               5     3      2     216
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (2) _strchr                                               3     1      2     197
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             4     2      2  172349
                                             38 BANK1      4     2      2
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoxy                                           5     4      1   86275
                                             33 BANK1      5     4      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0  255652
                                             33 BANK1      2     2      0
            _I2C1_Write1ByteRegister
                         _Send_D7_D4
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_send_byte                                        4     3      1   85931
                                             29 BANK1      4     3      1
                         _Send_D7_D4
 ---------------------------------------------------------------------------------
 (3) _Send_D7_D4                                           4     3      1   85159
                                             25 BANK1      4     3      1
                          _Write_PCF
 ---------------------------------------------------------------------------------
 (4) _Write_PCF                                            2     2      0   84470
                                             23 BANK1      2     2      0
            _I2C1_Write1ByteRegister
 ---------------------------------------------------------------------------------
 (5) _I2C1_Write1ByteRegister                              4     2      2   84448
                                             19 BANK1      4     2      2
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetAddressNackCallback                          4     1      3    1870
                                              5 BANK1      4     1      3
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_Open                                            3     3      0      46
                                              0 BANK1      3     3      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterWrite                                     0     0      0   78300
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOperation                                 3     3      0   78300
                                             16 BANK1      3     3      0
                   _I2C1_MasterStart
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (8) _I2C1_Poller                                          0     0      0   78254
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterFsm                                       3     3      0   78254
                                             13 BANK1      3     3      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                _I2C1_MasterClearIrq
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX_EMPTY                                    3     3      0   19547
                                             10 BANK1      3     3      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSetIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX                                          3     3      0   19569
                                             10 BANK1      3     3      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterIsNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_WRITE                          0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_READ                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_ADR_WRITE                              0     0      0      22
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_ADR_READ                               0     0      0      22
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendTxData                               1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_ACK                                      0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX                                          3     3      0   19547
                                             10 BANK1      3     3      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_STOP                                0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_RESTART                             0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RESET                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RCEN                                        0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterStartRx                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_IDLE                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_ADDRESS_NACK                                3     3      0   19547
                                             10 BANK1      3     3      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler                               1     0      1    3852
                                              9 BANK1      1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler                               1     0      1    3852
                                              9 BANK1      1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler                             1     0      1    3874
                                              9 BANK1      1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler                               1     0      1    3852
                                              9 BANK1      1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler                               1     0      1    3852
                                              9 BANK1      1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetDataCompleteCallback                         4     1      3    2478
                                              5 BANK1      4     1      3
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (7) _I2C1_SetCallback                                     5     2      3     914
                                              0 BANK1      5     2      3
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetBuffer                                       4     2      2    1352
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_STOP                                   0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART                                0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnStop                             1     0      1       0
                                              9 BANK1      1     0      1
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnReset                            1     0      1     265
                                              9 BANK1      1     0      1
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_Close                                           2     2      0      24
                                              0 BANK1      2     2      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _atoi                                                16    14      2    1866
                                              6 BANK1     16    14      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (2) _isspace                                              5     3      2     207
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              6     4      2     161
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1144
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     588
                    _ADCC_Initialize
                  _EUSART_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     490
                                              2 BANK1      1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM5_LoadDutyValue                                   2     0      2     166
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INTERRUPT_InterruptManager                          2     2      0    7271
                                             75 BANK0      2     2      0
                   Absolute function *
           _ADCC_GetSingleConversion
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                           _TMR0_ISR
                              _getch
                                _map
                             _printf
 ---------------------------------------------------------------------------------
 (16) _printf                                              8     4      4    5995
                                             13 COMMON     1     1      0
                                             70 BANK0      5     1      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (17) _vfprintf                                            8     5      3    5865
                                             62 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (18) _vfpfcnvrt                                          40    38      2    5537
                                             46 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (19) _dtoa                                               30    22      8    4170
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (20) _pad                                                 9     6      3    2547
                                             12 COMMON     1     1      0
                                              7 BANK0      8     5      3
                              _fputc
                              _fputs
                           i1_strlen
 ---------------------------------------------------------------------------------
 (21) i1_strlen                                            5     3      2     116
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (21) _fputs                                               8     7      1    1149
                                             11 COMMON     1     0      1
                                              0 BANK0      7     7      0
                              _fputc
 ---------------------------------------------------------------------------------
 (19) _fputc                                               8     5      3     834
                                              3 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (20) _putch                                               1     1      0      66
                                              2 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (21) _EUSART_Write                                        2     2      0      44
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (20) _abs                                                 4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (20) ___aomod                                            19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (20) ___aodiv                                            27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (16) _map                                                36    16     20    1230
                                             14 BANK0     36    16     20
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (17) ___lmul                                             12     4      8     244
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (17) ___aldiv                                            15     7      8     452
                                             12 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (16) _getch                                               0     0      0      24
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (17) _EUSART_Read                                         2     2      0      24
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (16) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (16) _EUSART_Receive_ISR                                  0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (17) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (17) _EUSART_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 (16) _ADCC_GetSingleConversion                            3     1      2      22
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 21
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM5_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
   _atoi
     ___wmul
     _isdigit
     _isspace
   _lcd_gotoxy
     _lcd_send_byte
       _Send_D7_D4
         _Write_PCF
           _I2C1_Write1ByteRegister
             _I2C1_Close
               _I2C1_MasterClearIrq
               _I2C1_MasterClose
               _I2C1_MasterDisableIrq
             _I2C1_MasterWrite
               _I2C1_MasterOperation
                 _I2C1_MasterStart
                 _I2C1_Poller
                   _I2C1_MasterFsm
                     _I2C1_DO_ADDRESS_NACK *
                       Absolute function(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART *
                         _I2C1_MasterEnableRestart
                       _I2C1_DO_SEND_STOP *
                         _I2C1_MasterStop
                       _rd1RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                           _I2C1_SetCallback
                       _rd2RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rdBlkRegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr1RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr2RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                     _I2C1_DO_IDLE *
                     _I2C1_DO_RCEN *
                       _I2C1_MasterStartRx
                     _I2C1_DO_RESET *
                     _I2C1_DO_RX *
                       Absolute function(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_RX_NACK_RESTART *
                         _I2C1_MasterSendNack
                       _I2C1_DO_RX_NACK_STOP *
                         _I2C1_MasterSendNack
                       _I2C1_MasterGetRxData *
                       _I2C1_MasterSendAck *
                       _rd1RegCompleteHandler *
                       _rd2RegCompleteHandler *
                       _rdBlkRegCompleteHandler *
                       _wr1RegCompleteHandler *
                       _wr2RegCompleteHandler *
                     _I2C1_DO_RX_ACK *
                       _I2C1_MasterSendAck
                     _I2C1_DO_RX_NACK_RESTART *
                     _I2C1_DO_RX_NACK_STOP *
                     _I2C1_DO_SEND_ADR_READ *
                       _I2C1_MasterSendTxData
                     _I2C1_DO_SEND_ADR_WRITE *
                       _I2C1_MasterSendTxData
                     _I2C1_DO_SEND_RESTART *
                     _I2C1_DO_SEND_RESTART_READ *
                       _I2C1_MasterEnableRestart
                     _I2C1_DO_SEND_RESTART_WRITE *
                       _I2C1_MasterEnableRestart
                     _I2C1_DO_SEND_STOP *
                     _I2C1_DO_TX *
                       Absolute function(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART_READ *
                       _I2C1_DO_SEND_RESTART_WRITE *
                       _I2C1_DO_SEND_STOP *
                       _I2C1_MasterIsNack *
                       _I2C1_MasterSendTxData *
                       _rd1RegCompleteHandler *
                       _rd2RegCompleteHandler *
                       _rdBlkRegCompleteHandler *
                       _wr1RegCompleteHandler *
                       _wr2RegCompleteHandler *
                     _I2C1_DO_TX_EMPTY *
                       Absolute function(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART *
                       _I2C1_DO_SEND_STOP *
                       _I2C1_MasterSetIrq *
                       _rd1RegCompleteHandler *
                       _rd2RegCompleteHandler *
                       _rdBlkRegCompleteHandler *
                       _wr1RegCompleteHandler *
                       _wr2RegCompleteHandler *
                     _I2C1_MasterClearIrq *
                     _I2C1_MasterIsNack *
                   _I2C1_MasterWaitForEvent
             _I2C1_Open
               _I2C1_MasterClearIrq
               _I2C1_MasterOpen
             _I2C1_SetAddressNackCallback
               _I2C1_SetCallback
             _I2C1_SetBuffer
             _I2C1_SetDataCompleteCallback
   _lcd_init
     _I2C1_Write1ByteRegister
     _Send_D7_D4
     _lcd_send_byte
   _lcd_puts
     _lcd_gotoxy
     _lcd_send_byte
   _strstr
     _strchr
     _strlen
     _strncmp

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADCC_GetSingleConversion *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
   _getch *
     _EUSART_Read
   _map *
     ___aldiv
       ___lmul (ARG)
     ___lmul
   _printf *
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
             i1_strlen
         _fputc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4D      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     2B      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      3D       9       76.2%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      50      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      20      13       40.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     15A      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     15A      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Aug 17 13:22:00 2021

                ?_EUSART_SetRxInterruptHandler 00A0                                              _c 006F  
                                            _h 00DE                                              _i 00DB  
                                            _j 00EE                                              _k 00ED  
                                            _t 00DF                              Send_D7_D4@address 00BB  
                             Send_D7_D4@nibble 00B9                                             l51 0C20  
                                           l90 0833                                             l93 0846  
                                           l96 0859                                             l99 0820  
                               ?_lcd_send_byte 00BD                            ___wmul@multiplicand 00A2  
                                          l102 091C                                            l321 0C58  
                                          l177 089D                                            l505 0885  
                                          l370 1784                                            l602 16EA  
                                          l514 080D                                            l611 16F9  
                                          l531 17A5                                            l508 17DB  
                                          l620 1708                                            l373 1746  
                                          l525 0ACA                                            l701 16C7  
                                          l541 178D                                            l605 16EF  
                                          l550 0F45                                            l614 16FE  
                                          l367 09A2                                            l535 0B24  
                                          l544 174E                                            l608 16F4  
                                          l704 172C                                            l617 1703  
                                          l481 0D17                                            l650 16B2  
                                          l634 16AA                                            l538 16E0  
                                          l626 0B86                                            l482 0D19  
                                          l547 0F28                                            l563 0DC2  
                                          l564 0DED                                            l708 1731  
                                          l492 0A4B                                            l637 16AC  
                                          l653 16C4                                            l581 0BB8  
                                          l478 177B                                            l486 09E3  
                                          l671 16BE                                            l575 173E  
                                          l647 17B2                                            l680 16D7  
                                          l656 1725                                            l665 16C1  
                                          l674 172B                                            l498 170D  
                                          l659 16BB                                            l923 04CA  
                                          l852 1757                                            l668 16B8  
                                          l677 16DB                                            l846 1760  
                                          l855 1719                                            l783 0D5D  
                                          l695 16B5                                            l599 16E5  
                                          l849 1769                                            l858 1772  
                                          l698 16AF                                            l986 17BF  
                                          l999 07EF                                            _PR2 028D  
                        ?_I2C1_MasterOperation 0070                                            _abs 08E9  
                       ??_EUSART_RxDataHandler 0070                                            _pad 0E94  
                                          _map 072D                 ?_EUSART_SetFramingErrorHandler 00A0  
                      __size_of_PMD_Initialize 0008                                _TMR2_Initialize 17C0  
                                          wreg 0009                         ?_I2C1_MasterSendTxData 0070  
            __size_of_I2C1_MasterEnableRestart 0003                           _I2C1_DO_RX_NACK_STOP 16FA  
                    ?_I2C1_MasterEnableRestart 0070                                    lcd_gotoxy@x 00C4  
                                  lcd_gotoxy@y 00C1                           I2C1_SetBuffer@buffer 00A3  
                                 ?_EUSART_Read 0070                                           l1002 0986  
                                         l1009 0FFF                                           l1203 086E  
                                         l1019 0DA1                                           ?_abs 0073  
                      ??_rd2RegCompleteHandler 00AA                                           l1038 0E93  
                                         l2014 0950                                           l2040 0FA1  
                                         l1241 1798                                           l1225 171F  
                                         l1401 09AE                                           l2033 091F  
                                         l1074 17CD                                           l1403 09C2  
                                         l2035 0936                                           l2027 0E3B  
                                         l1246 08CF                                           l4011 0AA2  
                                         l4021 0876                                           l4013 0AA8  
                                         l4101 1702                                           l4023 0884  
                                         l4015 0ABB                                           l4031 0821  
                                         l4111 16BF                                           l5001 08D0  
                                         l4025 16B9                                           l4017 17CE  
                                         l4033 082A                                           l4041 083D  
                                         l4121 16A9                                           l4113 16EB  
                                         l4105 16FA                                           l4027 16BC  
                                         l4019 0871                                           l4035 0832  
                                         l4043 0845                                           l4051 0858  
                                         l4131 16DC                                           l4115 16EE  
                                         l4107 16FD                                           l4125 16AB  
                                         l4029 16D4                                           l4133 16DE  
                                         l4141 1787                                           l4205 0DC4  
                                         l4301 0B07                                           l5021 0941  
                                         l4055 080E                                           l4039 0834  
                                         l4047 0847                                           l4063 0903  
                                         l4119 16C5                                           l4231 0B87  
                                         l4135 16DF                                           l4143 178C  
                                         l4151 174D                                           l4215 0DCC  
                                         l4223 1738                                           l4303 0B0D  
                                         l4311 179D                                           l5023 094A  
                                         l5031 0F5C                                           l4129 16AD  
                                         l4305 16B6                                           l4057 0817  
                                         l4049 0850                                           l4065 091B  
                                         l4073 1722                                           l4233 0B8A  
                                         l4209 0DC8                                           l4225 173A  
                                         l4081 16E6                                           l4313 17A0  
                                         l5017 0937                                           l5041 0F6B  
                                         l5201 0DF6                                           l4411 09CB  
                                         l4059 081F                                           l4243 0B93  
                                         l4139 1785                                           l4147 1747  
                                         l4163 0EFA                                           l4155 0EED  
                                         l4227 173D                                           l4075 16E1  
                                         l4083 16E9                                           l4307 1799  
                                         l4403 0800                                           l5019 093D  
                                         l5043 0F74                                           l5035 0F5F  
                                         l5027 0F48                                           l5203 0E03  
                                         l5211 0E2C                                           l5221 05F6  
                                         l4421 09DB                                           l4413 09CC  
                                         l4093 16C2                                           l4069 1726  
                                         l4237 0B8E                                           l4149 1749  
                                         l4181 0F44                                           l4173 0F02  
                                         l4077 16E4                                           l4309 179A  
                                         l4405 1709                                           l4341 17B1  
                                         l4333 17A6                                           l5133 0FA2  
                                         l5061 0935                                           l5053 091F  
                                         l5045 0F7D                                           l5037 0F63  
                                         l5029 0F50                                           l5213 0E31  
                                         l5205 0E16                                           l5231 061B  
                                         l5223 05FA                                           l4415 09D2  
                                         l4423 09E1                                           l4239 0B91  
                                         l4175 0F2A                                           l4167 0EFE  
                                         l4159 0EF6                                           l4191 0DA2  
                                         l4087 16F0                                           l4263 1704  
                                         l4271 0B56                                           l4351 0A32  
                                         l4335 17AB                                           l5151 0FD0  
                                         l5143 0FB4                                           l5135 0FA9  
                                         l5055 0929                                           l5047 0F83  
                                         l5039 0F67                                           l5215 0E3A  
                                         l5081 098A                                           l5241 0632  
                                         l5225 05FC                                           l4345 16B3  
                                         l4417 09D5                                           l4409 09C3  
                                         l4097 16D8                                           l4249 0B97  
                                         l4177 0F37                                           l4193 0DAE  
                                         l4089 16F3                                           l4257 16F5  
                                         l4265 1706                                           l4273 0B58  
                                         l4361 0A43                                           l4353 0A33  
                                         l4337 17AC                                           l4441 0BEE  
                                         l4601 07DD                                           l5161 0FE9  
                                         l5153 0FD8                                           l5145 0FBC  
                                         l5137 0FB2                                           l5049 0F93  
                                         l5209 0E18                                           l5091 0999  
                                         l5083 098D                                           l1891 08E8  
                                         l5251 0680                                           l5243 0646  
                                         l5235 0622                                           l5227 0606  
                                         l5219 05F1                                           l4347 16B0  
                                         l4419 09D8                                           l4179 0F42  
                                         l4195 0DB3                                           l4259 16F8  
                                         l4099 16FF                                           l4267 1707  
                                         l4275 0B5F                                           l4363 0A46  
                                         l4355 0A35                                           l4339 17AE  
                                         l4371 0CDB                                           l4451 0C15  
                                         l4443 0BEE                                           l4603 07E2  
                                         l5163 0FF2                                           l5147 0FC5  
                                         l5171 0E3D                                           l5059 092B  
                                         l5093 099C                                           l5085 0990  
                                         l5253 0686                                           l5237 0629  
                                         l5229 061A                                           l4197 0DBD  
                                         l4285 0B67                                           l4357 0A3A  
                                         l4365 0A49                                           l4349 0A2B  
                                         l4381 0CF5                                           l4373 0CE2  
                                         l4453 0C18                                           l4445 0BF8  
                                         l4605 07E7                                           l5165 0FF7  
                                         l5149 0FCA                                           l5181 0E59  
                                         l5173 0E43                                           ?_map 002E  
                                         ?_pad 0027                                           l5271 08C7  
                                         l5095 099F                                           l5087 0993  
                                         l5079 0987                                           l5255 068C  
                                         l5247 0664                                           l5239 062D  
                                         l4199 0DC0                                           l4279 0B63  
                                         l4295 0AF7                                           l4359 0A3E  
                                         l4391 0D09                                           l4383 0CFA  
                                         l4375 0CE8                                           l4447 0C04  
                                         l4607 07E9                                           l5167 0FFD  
                                         l5159 0FDA                                           l5183 0E63  
                                         l5175 0E4C                                           l5191 0E89  
                                         l5431 042E                                           l1888 069C  
                                         l5273 08CB                                           l5265 08B7  
                                         l4801 17C0                                           l5089 0996  
                                         l5257 0698                                           l4297 0AFA  
                                         l4393 0D0A                                           l4385 0CFB  
                                         l4377 0CE9                                           l4449 0C0D  
                                         l4473 17B5                                           l5177 0E4E  
                                         l5169 0E3C                                           l5441 0453  
                                         l5433 0431                                           l5425 0429  
                                         _ADCC 00D8                                           l5267 08BC  
                                         l4811 17CA                                           l4803 17C3  
                                         l1899 0A05                                           l4299 0AFF  
                                         l4395 0D0F                                           l4387 0D00  
                                         l4379 0CEA                                           l4571 0792  
                                         l5187 0E70                                           l5179 0E4F  
                                         l5451 0483                                           l5443 0461  
                                         l5435 043A                                           l5427 042C  
                                         l5269 08C1                                           l4741 0C21  
                                         l4813 178E                                           l4821 085A  
                                         l4805 17C4                                           l4397 0D12  
                                         l4389 0D04                                           l4581 07AB  
                                         l4573 0796                                           l5189 0E84  
                                         l5461 04A8                                           l5453 0486  
                                         l5445 0464                                           l5437 0442  
                                         l5429 042D                                           l4735 0886  
                                         l4671 1758                                           l4751 0C2E  
                                         l4743 0C25                                           l4815 1791  
                                         l4831 086B                                           l4823 085F  
                                         l4807 17C7                                           l4399 0D15  
                                         l4591 07C3                                           l4583 07B0  
                                         l4575 079C                                           l4911 0D96  
                                         l5199 0DF0                                           l5471 04D8  
                                         l5463 04B6                                           l5455 0494  
                                         l5447 0472                                           l5439 0450  
                                         l4737 0898                                           l4673 1761  
                                         l4841 0D31                                           l4833 0D1A  
                                         l4761 0C3F                                           l4753 0C30  
                                         l4745 0C27                                           l4817 1792  
                                         l4825 0860                                           l4809 17C8  
                                         l4921 09A3                                           l4593 07C9  
                                         l4585 07B4                                           l4577 07A1  
                                         l4569 0791                                           l4913 0D9C  
                                         l4905 0D72                                           l5481 04FF  
                                         l5473 04E7                                           l5465 04B9  
                                         l5457 0497                                           l5449 0475  
                                         l4739 089A                                           l4675 174F  
                                         l4667 176A                                           l4851 0D40  
                                         l4843 0D33                                           l4835 0D1C  
                                         l4771 0C49                                           l4763 0C41  
                                         l4755 0C39                                           l4747 0C29  
                                         l4819 1793                                           l4827 0862  
                                         l4931 09BE                                           l4923 09A6  
                                         l4595 07CE                                           l4587 07BA  
                                         l4579 07A5                                           l4907 0D88  
                                         l5483 0508                                           l5475 04EB  
                                         l5467 04C7                                           l5459 04A5  
                                         l4669 1714                                           l4861 0D5A  
                                         l4853 0D48                                           l4845 0D35  
                                         l4837 0D24                                           l4781 0C55  
                                         l4773 0C4C                                           l4765 0C43  
                                         l4757 0C3B                                           l4749 0C2B  
                                         l4829 0863                                           l4925 09AA  
                                         l4597 07D1                                           l4589 07BF  
                                         l4909 0D8D                                           l5821 0E7C  
                                         l5477 04F5                                           l5469 04CA  
                                         l4863 0D5B                                           l4855 0D54  
                                         l4847 0D37                                           l4839 0D2E  
                                         l4791 177A                                           l4775 0C4E  
                                         l4767 0C45                                           l4759 0C3D  
                                         l4783 173F                                           l4927 09B3  
                                         l5831 0BAA                                           l4599 07D7  
                                         l4687 096E                                           l5823 0D7A  
                                         l5479 04FB                                           l4857 0D58  
                                         l4849 0D38                                           l4785 1773  
                                         l4793 177C                                           l4777 0C51  
                                         l4769 0C47                                           l4689 171A  
                                         l4929 09B8                                           l5833 063E  
                                         l5825 0B7E                                           l4859 0D59  
                                         l4787 1775                                           l4795 177F  
                                         l4779 0C53                                           l5827 0DDF  
                                         l4891 0D60                                           l4789 1777  
                                         l4797 1780                                           l5829 0F1A  
                                         l4893 0D61                                           l4799 1783  
                                         l4991 09E7                                           l4895 0D63  
                                         l4993 09EE                                           l4897 0D68  
                                         l4995 09FD                                           l4899 0D6D  
                                         l4997 09FE                                           l4989 09E4  
                                         STR_1 1843                                           STR_2 1827  
                                         STR_3 1827                                           STR_4 1800  
                                         STR_5 1800                                           STR_6 182E  
                                         STR_7 182E                                           STR_8 1808  
                                         STR_9 1808                                           u3000 0E3A  
                                         u3001 0E39                                           u3010 0606  
                                         u3011 0605                                           u3020 061A  
                                         u2300 07B4                                           u3021 0619  
                                         u2301 07B3                                           _LATA 0016  
                                         u3030 0628                                           u2310 07C3  
                                         _LATB 0017                                           u3031 0627  
                                         u2311 07C2                                           _LATC 0018  
                                         u3040 0679                                           u2320 07D7  
                                         u3041 0677                                           u2321 07D6  
                                         u3050 067A                                           u3060 0686  
                                         u3300 04B6                                           u3061 0685  
                                         u3301 04B5                                           u3070 068C  
                                         u3310 04C7                                           u3071 068B  
                                         u3311 04C6                                           u3080 08C1  
                                         u2600 09BE                                           u1800 0F42  
                                         u2280 0796                                           u3320 04D8  
                                         u3240 0450                                           u3081 08C0  
                                         u2601 09BD                                           u1801 0F41  
                                         u2281 0795                                           u2505 0971  
                                         u3321 04D7                                           u3241 044F  
                                         u1810 0DBD                                           u2290 07A5  
                                         u3330 04F5                                           u3250 0461  
                                         _T2PR 028D                                           u1811 0DBC  
                                         u2291 07A4                                           u3331 04F4  
                                         u3251 0460                                           u1820 1731  
                                         u1900 0A32                                           u3260 0472  
                                         u1821 1730                                           u1901 0A31  
                                         u3261 0471                                           u1830 0AFF  
                                         u1910 0A3A                                           u3270 0483  
                                         u3095 08C3                                           u1831 0AFE  
                                         u1911 0A39                                           u3271 0482  
                                         u1840 0B07                                           u1920 0CE2  
                                         u2800 094A                                           u3280 0494  
                                         u1841 0B06                                           u1921 0CE1  
                                         u2801 0949                                           u3281 0493  
                                         u2570 09AA                                           u1930 09CB  
                                         u1770 0AA8                                           u1850 17A5  
                                         u2810 0F5C                                           u3290 04A5  
                                         u2571 09A9                                           u1931 09CA  
                                         u1771 0AA7                                           u1851 17A4  
                                         u2811 0F5B                                           u3291 04A4  
                                         u1780 0876                                           u2820 0F74  
                                         u1781 0875                                           u2821 0F73  
                                         u2750 09EE                                           u1790 0EF5  
                                         u2830 0F7D                                           u2751 09ED  
                                         u1791 0EF4                                           u3527 0E47  
                                         u2831 0F7C                                           u2760 09FD  
                                         u2840 0F83                                           u2585 09AF  
                                         u2761 09FC                                           u3537 0E53  
                                         u2841 0F82                                           u2770 08E1  
                                         u1890 17AB                                           u2850 0F93  
                                         u2595 09B4                                           u2771 08DF  
                                         u1891 17AA                                           u3547 0FAD  
                                         u2851 0F92                                           u2780 08E2  
                                         u1980 0BF8                                           u2940 0FD0  
                                         u2860 0929                                           _PMD0 0796  
                                         u1981 0BF7                                           u2941 0FCF  
                                         u3557 0FC0                                           u2861 0928  
                                         _PMD1 0797                                           u1990 0C20  
                                         u2950 0FFD                                           u2870 0935  
                                         _PMD2 0798                                           u1991 0C1F  
                                         u2951 0FFC                                           u3567 0FED  
                                         u2871 0934                                           _PMD3 0799  
                                         u2960 0E93                                           _PMD4 079A  
                                         u3577 07CF                                           u2961 0E92  
                                         _PMD5 079B                                           u2970 0DF6  
                                         u2971 0DF5                                           u2980 0E16  
                                         u2981 0E15                                           u2990 0E31  
                                         u2991 0E30                                           _TMR2 028C  
                                         _WPUA 0F39                                           _WPUB 0F44  
                                         _WPUC 0F4F                                           _WPUE 0F65  
                      ??_wr2RegCompleteHandler 00AA                               ??_I2C1_MasterFsm 00AD  
             __size_of_I2C1_DO_RX_NACK_RESTART 0005                      ??_I2C1_CallbackReturnStop 00AA  
                                         abs@a 0073                                           _dbuf 0220  
                                         _atoi 05EF                                           _main 0429  
                                         _dtoa 00D2                                           _duty 00D6  
                                         _prec 00D4                                           _nout 00D0  
                                         pad@i 002A                                           pad@p 0028  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         pad@w 002C                                           map@x 002E  
                                         btemp 007E                                           start 009F  
                             ??_I2C1_SetBuffer 00A2                                _PWM5_Initialize 178E  
                   __end_of_PWM5_LoadDutyValue 08D0               __size_of_rdBlkRegCompleteHandler 001A  
                I2C1_CallbackReturnStop@funPtr 00A9                                          ??_abs 0075  
                                        ??_map 0042                                          ??_pad 007C  
                      __end_of_TMR0_Initialize 086F                 ??_TMR0_DefaultInterruptHandler 0070  
                                ?_EUSART_Write 0070                 __size_of_OSCILLATOR_Initialize 0009  
                __end_of_OSCILLATOR_Initialize 1785                                __end_of___aldiv 072D  
                              __end_of___aodiv 033F                                          _ADACQ 009D  
                            __end_of_I2C1_Open 0D1A                                          _ADCAP 009B  
                                        _ADACT 0099                                          ?_atoi 00A6  
                                        ?_main 0070                                          ?_dtoa 0030  
                                        _ADCLK 0098                                __end_of___aomod 0429  
                                        _ADCNT 010C                                          _ADPCH 009E  
                                        _ADREF 009A                                          _ADPRE 009C  
                                        STR_10 1835                                          STR_11 1835  
                                        STR_20 1820                                          STR_12 1810  
                                        STR_13 1810                                          STR_14 183C  
                                        STR_15 183C                                          STR_16 1818  
                                        STR_17 1818                                          STR_18 184C  
                                        STR_19 184C                                          _ADRPT 010D  
                                        _T2CON 028E                                          _T2HLT 028F  
                                        _T2TMR 028C                                          _T2RST 0291  
                                        i1l192 17ED                                          i1l189 17E4  
                                        i1l802 0AF6                                          i1l811 0A9F  
                                        i1l820 0A26                                          i1l830 0CD8  
                                        i1l814 16D3                                          i1l823 0A28  
                                        i1l807 0A7C                                          i1l840 16CF  
                                        i1l808 0A85                                          i1l817 1713  
                                        i1l834 096B                                          i1l843 16CB  
                                        i1l837 16A8                     __end_of_i2c1_fsmStateTable 1020  
                                        _OSCEN 0891                                   vfpfcnvrt@fmt 004E  
                                        _TMR0H 001D                                          _TMR0L 001C  
                                        _TRISA 0011                                          _TRISB 0012  
                                        _TRISC 0013                         ??_I2C1_MasterGetRxData 00A0  
                                        _RXPPS 0ECB                          ?_I2C1_DO_RX_NACK_STOP 0070  
            __size_of_TMR0_SetInterruptHandler 0006                            ___lmul@multiplicand 0074  
                    ?_TMR0_SetInterruptHandler 00A0                     ??_I2C1_CallbackReturnReset 00AA  
                            ??_I2C1_MasterOpen 00A0                              ??_I2C1_MasterStop 00A0  
                            ??_I2C1_Initialize 00A0                               __end_of_TMR0_ISR 07FF  
                                        _flags 006D                                          _getch 16D0  
                                        _fputc 0C59                                          _fputs 0A4C  
                              __end_of_isdigit 08E9                                          _temph 00DD  
                                        _templ 00DC                                          atoi@n 00B3  
                                        pad@fp 002E                                          atoi@s 00B5  
                                        _width 00D2                                          _putch 170E  
                                        dtoa@d 0030                                          dtoa@i 004C  
                                 lcd_puts@dato 00C6                                          dtoa@n 0044  
                                        dtoa@p 003D                                          dtoa@s 0042  
                                        dtoa@w 0040                                __end_of_isspace 0A06  
                                        pclath 000A                                          status 0003  
                  __size_of_I2C1_MasterSendAck 0004                                          wtemp0 007E  
                                 ??_I2C1_DO_RX 00AA                                   ??_I2C1_DO_TX 00AA  
                              __end_of_strncmp 0FA2                         ??_I2C1_DO_ADDRESS_NACK 00AA  
                                 ??_I2C1_Close 00A0                    __size_of_I2C1_MasterStartRx 0003  
                             __end_ofi1_strlen 08B7                                __initialization 00A1  
                                 __end_of_atoi 069D                                   __end_of_main 0512  
                                 __end_of_dtoa 023E                                ??_lcd_send_byte 00BE  
                               ??_EUSART_Write 0070                        __end_of_TMR2_Initialize 17CE  
                  ?_INTERRUPT_InterruptManager 0070                 ??_EUSART_SetRxInterruptHandler 00A2  
                                       ??_atoi 00A8                         ??_I2C1_MasterOperation 00B0  
                                       ??_main 00CA                                         ??_dtoa 0038  
                __size_of_I2C1_DO_SEND_RESTART 0005                             __end_of_I2C1_DO_RX 0DEE  
                                   _Send_D7_D4 078F                             __end_of_I2C1_DO_TX 0F46  
                           __end_of_I2C1_Close 09E4                                         _ADACCH 0091  
                                       _ADACCL 0090      __end_of_EUSART_DefaultFramingErrorHandler 16A9  
   __size_of_EUSART_DefaultFramingErrorHandler 0001            ??_EUSART_DefaultFramingErrorHandler 0070  
           ?_EUSART_DefaultFramingErrorHandler 0070              _EUSART_DefaultFramingErrorHandler 16A8  
                                       ?_getch 0070                                         _ADCON0 0093  
                                       _ADCON1 0094                                         _ADCON2 0095  
                                       _ADCON3 0096                     _EUSART_OverrunErrorHandler 0157  
                                       _ADERRH 0117                                         _ADERRL 0116  
                                       ?_fputc 0073                                         _ADLTHH 010F  
                                       _ADLTHL 010E                                         ?_fputs 007B  
                                       _ADRESH 008D                                         _ADRESL 008C  
                                       _CCPR5H 031D                                         _CCPR5L 031C  
                                       _ADSTAT 0097                                         _ADUTHH 0111  
                                       _ADUTHL 0110                                         _ANSELA 0F38  
                                       ?_putch 0070                                         _ANSELB 0F43  
                                       _ANSELC 0F4E                                         _T0CON0 001E  
                                       _T0CON1 001F                                         _RC1REG 0119  
                                       _RC0PPS 0F20                                         _RC1STA 011D  
                                       _RC3PPS 0F23                                         i1l2000 0C97  
                                       _RC4PPS 0F24                                         i1l1222 07FE  
                                       i1l2014 08B6                                         i1l2008 0A74  
                                       i1l1170 005B                                         i1l1228 07FF  
                                       i1l1180 009D                                         i1l1165 078E  
                                       i1l1501 032D                                         i1l1173 006E  
                                       i1l1502 033E                                         i1l1415 0BEB  
                                       u200_20 0A74                                         u200_21 0A73  
                                       _ODCONA 0F3A                                         i1l1514 0417  
                                       _ODCONB 0F45                                         i1l1515 0428  
                                       i1l1179 009D                                         _ODCONC 0F50  
                                       u201_20 08B0                                         u201_21 08AF  
                                       i1l1466 06B0                                         i1l5011 0B43  
                                       _RC7PPS 0F27                                         i1l1476 072C  
                                       i1l5101 0A06                                         i1l5013 0B4D  
                                       i1l5005 0B27                                         i1l5111 0A21  
                                       i1l5103 0A0D                                         i1l5007 0B2B  
                                       u210_20 030A                                         u202_20 0249  
                                       i1l5121 0CB1                                         i1l5113 0C98  
                                       i1l5105 0A15                                         u210_21 0309  
                                       u202_21 0248                                         i1l4321 0A86  
                                       i1l5009 0B2F                                         i1l5131 0CD5  
                                       i1l5123 0CB6                                         i1l5115 0C9F  
                                       i1l5107 0A1A                                         i1l4323 0A90  
                                       i1l4331 0A9D                                         i1l4315 0A76  
                      __end_of_PWM5_Initialize 1799                                         i1l5125 0CBD  
                                       i1l5117 0CA4                                         i1l5109 0A20  
                                       i1l4501 02C9                                         i1l4325 0A94  
                                       i1l4317 0A76                                         i1l1941 0EEC  
                                       i1l1909 17FF                                         i1l1950 0159  
                                       i1l5071 17E2                                         i1l5127 0CC3  
                                       i1l5119 0CAB                                         i1l4511 030F  
                                       i1l4503 02EB                                         i1l4327 0A9A  
                                       i1l4319 0A81                                         i1l4431 0C63  
                                       u211_20 030F                                         i1l1936 0EAE  
                                       i1l1944 011B                                         i1l5073 17E3  
                                       i1l5065 17DD                                         i1l5129 0CCE  
                                       u211_21 030E                                         i1l4505 02FB  
                                       i1l4521 0375                                         i1l4513 033F  
                                       i1l4329 0A9B                                         i1l4433 0C68  
                                       i1l1953 01C9                                         i1l1945 0125  
                                       i1l5075 17E9                                         i1l5067 17E0  
                                       i1l4507 02FC                                         i1l4531 03B0  
                                       i1l4523 0394                                         i1l4515 0340  
                                       i1l4435 0C72                                         i1l4427 0C59  
                                       i1l1939 0ED0                                         i1l4611 00E4  
                                       i1l5069 17E1                                         i1l4509 030A  
                                       i1l4541 03F9                                         i1l4533 03B4  
                                       i1l4525 03A1                                         i1l4517 034A  
                                       i1l4437 0C8F                                         i1l4429 0C5E  
                                       i1l4461 0A64                                         i1l1949 0143  
                                       i1l4621 013B                                         i1l4613 00F7  
                                       i1l4701 054A                                         i1l1981 0B55  
                                       i1l1974 05EE                                         i1l4535 03D6  
                                       i1l4527 03A4                                         i1l4519 036B  
                                       i1l4455 0A4E                                         i1l4463 089E  
                                       i1l4551 0EAC                                         i1l4543 0E96  
                                       i1l1967 023D                                         i1l4631 0160  
                                       i1l4623 014B                                         i1l4615 00FD  
                                       i1l4711 0596                                         i1l4703 055B  
                                       u204_20 0274                                         u220_20 03F4  
                                       i1l5097 16D0                                         u204_21 0273  
                                       i1l4481 026A                                         u220_21 03F3  
                                       i1l4537 03E6                                         i1l4529 03AC  
                                       i1l1985 0902                                         i1l4369 170F  
                                       i1l4457 0A51                                         i1l4465 08A3  
                                       i1l4561 0EDD                                         i1l4553 0EB1  
                                       i1l4545 0E9A                                         i1l4641 01D7  
                                       i1l4633 0165                                         i1l4625 0151  
                                       i1l4617 0120                                         i1l4609 00D4  
                                       i1l4713 05A7                                         i1l4721 05C0  
                                       i1l4705 0563                                         i1l5601 0057  
                                       i1l5291 07F2                                         i1l4491 02AE  
                                       i1l4483 0274                                         i1l4475 023E  
                                       i1l4539 03F4                                         i1l4459 0A5F  
                                       i1l4467 08A7                                         i1l4555 0EBD  
                                       i1l4547 0EA2                                         i1l4651 020B  
                                       i1l4643 01E4                                         i1l4635 0194  
                                       i1l4627 0155                                         i1l4619 0135  
                                       i1l4723 05C8                                         i1l4715 05AF  
                                       i1l4707 057C                                         i1l5283 17EE  
                                       i1l5611 0076                                         i1l5603 005F  
                                       i1l1988 0902                                         i1l5293 07F9  
                                       i1l4493 02B1                                         i1l4485 0293  
                                       i1l4477 023F                                         i1l4565 08E9  
                                       i1l4469 08B0                                         i1l4557 0EC2  
                                       i1l4549 0EA7                                         i1l4661 0222  
                                       i1l4653 020F                                         i1l4645 01F1  
                                       i1l4637 0198                                         i1l4629 015D  
                                       i1l4717 05BA                                         i1l5285 17F3  
                                       i1l5613 0083                                         i1l5605 0063  
                                       i1l5279 072D                                         i1l4495 02B9  
                                       i1l4487 0297                                         i1l4479 0249  
                                       i1l4567 08F6                                         i1l4559 0ED5  
                                       i1l4655 0213                                         i1l4663 022B  
                                       i1l4647 01FF                                         i1l4639 019C  
                                       i1l4727 05CB                                         i1l5615 0089  
                                       i1l5607 0067                                         u221_20 03F9  
                                       u213_20 034A                                         i1l4681 0960  
                                       i1l5289 07F0                                         i1l4497 02BD  
                                       i1l4489 02A1                                         u221_21 03F8  
                                       u213_21 0349                                         i1l4657 0219  
                                       i1l4649 0204                                         i1l4729 05E4  
                                       i1l5617 0094                                         i1l5609 0072  
                                       i1l4683 0966                                         i1l4499 02C1  
                                       i1l4659 021E                                         i1l4691 0514  
                                       i1l5619 009A           __size_of_I2C1_SetAddressNackCallback 000E  
                                       i1l4685 0967                                         i1l4677 0951  
                                       i1l4941 0BCD                                         i1l4693 0525  
                                       i1l4679 095C                                         i1l4871 0AE3  
                                       i1l4951 069F                                         i1l4943 0BD4  
                                       i1l4935 0BB9                                         i1l4695 052D  
                                       i1l5591 0006                                         u310_20 07F9  
                                       u206_20 029E                                         u310_21 07F8  
                                       i1l4881 0AF3                                         i1l4873 0AE7  
                                       i1l4865 0ACB                                         i1l4961 06CB  
                                       i1l4953 06A3                                         i1l4945 0BE3  
                                       i1l4937 0BC1                                         i1l4697 0533  
                                       i1l5593 000B                                         i1l4883 0AF5  
                                       i1l4875 0AED                                         i1l4867 0ACB  
                                       i1l4971 06EC                                         i1l4963 06D3  
                                       i1l4955 06B4                                         i1l4939 0BC5  
                                       i1l4699 0538                                         i1l5595 000F  
                                       i1l4877 0AEE                                         i1l4869 0AD1  
                                       i1l4973 06FE                                         i1l4965 06D6  
                                       i1l4981 0714                                         i1l4957 06BF  
                                       i1l4949 069D                                         i1l5597 0018  
                                       i1l4887 16CC                                         i1l4879 0AF0  
                                       i1l4983 0719                                         i1l4975 0706  
                                       i1l4967 06E1                                         i1l4959 06C3  
                                       i1l5599 0049                                         u207_20 02AE  
                                       u215_20 0375                                         u223_20 0E9A  
                                       i1l4889 16C8                                         i1l4985 0724  
                                       i1l4977 0707                                         i1l4969 06E5  
                                       u207_21 02AD                                         u215_21 0374  
                                       u223_21 0E99                                         i1l4979 070E  
                                       u208_20 02C1                                         u224_20 0EA7  
                                       u240_20 0155                                         u208_21 02C0  
                                       u224_21 0EA6                                         u240_21 0154  
                                       _INLVLA 0F3C                                         _INLVLB 0F47  
                                       _INLVLC 0F52                                         _INLVLE 0F68  
                                       u209_20 02EB                                         u217_20 03A1  
                                       u225_20 0ED0                                         u241_20 01D7  
                                       u233_20 00EF                                         u209_21 02EA  
                                       u217_21 03A0                                         u225_21 0ECF  
                                       u241_21 01D6                                         u233_21 00ED  
                                       u209_25 02E7                                         u225_25 0ECC  
                                       u241_25 01D3                                         u218_20 03B4  
                                       u226_20 0ED5                                         u242_20 01E4  
                                       u234_20 00F0                                         u218_21 03B3  
                                       u226_21 0ED4                                         u242_21 01E3  
                                       u219_20 03D6                                         u227_20 08F6  
                                       u243_20 01F1                                         u235_20 00FD  
                                       u251_20 0525                                         u219_21 03D5  
                                       u227_21 08F5                                         u243_21 01F0  
                                       u235_21 00FC                                         u251_21 0524  
                                       u219_25 03D2                                         u227_25 08F2  
                                       u243_25 01ED                                         u244_20 01FF  
                                       u252_20 054A                                         u244_21 01FE  
                                       u252_21 0549                                         u244_25 01FB  
                                       u261_20 0BC5                                         u245_20 0204  
                                       u237_20 0120                                         u253_20 055B  
                                       u261_21 0BC4                                         u245_21 0203  
                                       u237_21 011F                                         u253_21 055A  
                                       u246_20 020B                                         u238_20 0135  
                                       u254_20 05A7                                         u350_20 0076  
                                       u246_21 020A                                         u238_21 0134  
                                       u254_21 05A6                                         u350_21 0075  
                                       u270_25 06E6                                         u262_25 0BCE  
                                       u238_25 0131                                         u255_20 0AD1  
                                       u271_20 06FE                                         u247_20 020F  
                                       u239_20 0151                                         u351_20 0089  
                                       u255_21 0AD0                                         u271_21 06FD  
                                       u247_21 020E                                         u239_21 0150  
                                       u351_21 0088                                         u271_25 06FA  
                                       u263_25 0BD5                                         u256_20 0AED  
                                       u264_20 0BE3                                         u248_20 0219  
                                       u344_20 000B                                         u256_21 0AEC  
                                       u264_21 0BE2                                         u248_21 0218  
                                       u344_21 000A                                         u272_25 0708  
                                       u249_20 0966                                         u273_20 0714  
                                       u265_20 06A3                                         u345_20 000F  
                                       u249_21 0965                                         u273_21 0713  
                                       u265_21 06A2                                         u345_21 000E  
                                       u290_20 0A20                                         u274_20 0719  
                                       u266_20 06B4                                         u186_20 0A7C  
                                       u194_20 0C5E                                         u346_20 005F  
                                       u290_21 0A1F                                         u274_21 0718  
                                       u266_21 06B3                                         u186_21 0A7B  
                                       u194_21 0C5D                                         u346_21 005E  
                                       u291_20 0CA4                                         u267_20 06D3  
                                       u187_20 0A81                                         u195_20 0C63  
                                       u347_20 0063                                         u291_21 0CA3  
                                       u267_21 06D2                                         u187_21 0A80  
                                       u195_21 0C62                                         u347_21 0062  
                                       u292_20 0CB6                                         u188_20 0A9A  
                                       u196_20 0C72                                         u348_20 0067  
                                       u292_21 0CB5                                         u188_21 0A99  
                                       u196_21 0C71                                         u348_21 0066  
                                       u268_25 06D7                                         u293_20 0CCE  
                                       u269_20 06E5                                         u197_20 0C8F  
                                       u349_20 0072                                         u293_21 0CCD  
                                       u269_21 06E4                                         u197_21 0C8E  
                                       u349_21 0071                                         u197_25 0C8B  
                                       u279_20 0B4D                                         u279_21 0B4C  
                                       u288_20 17E9                                         u288_21 17E8  
                                       u289_20 0A0D                                         u289_21 0A0C  
                                       _OSCFRQ 0893                                         _TX1REG 011A  
                                       _TX1STA 011E                              ?_I2C1_MasterClose 0070  
                      ??_I2C1_MasterDisableIrq 00A0                              ?_I2C1_MasterStart 0070  
                            ?_I2C1_MasterWrite 0070                       ?_I2C1_MasterWaitForEvent 0070  
                           ??_I2C1_MasterClose 00A0                               _I2C1_DO_TX_EMPTY 0B87  
                           ??_I2C1_MasterStart 00A0                             ??_I2C1_MasterWrite 00B3  
                                 _CCPTMRS1bits 021F                                   vfprintf@cfmt 0064  
                             __end_of_lcd_init 1000                       ?_I2C1_Write1ByteRegister 00B3  
                                       _g_LcdX 00E1                                         _g_LcdY 00E0  
                             __end_of_lcd_puts 0E94                                         ___lmul 0BB9  
                                    ??___aldiv 007C                                      ??___aodiv 0070  
                                    ??___aomod 0070                                         ___wmul 09A3  
                                       _buffer 01B4                            _EUSART_Transmit_ISR 0A06  
                 __size_of_I2C1_MasterClearIrq 0003                               ?_TMR0_Initialize 0070  
                                       _printf 17EE                                         pad@buf 0027  
                                       dtoa@fp 003F                                         _strchr 091D  
                     ??_I2C1_DO_SEND_ADR_WRITE 00A1                                         _strlen 0937  
                                       _strstr 0DEE                              ?_I2C1_SetCallback 00A0  
                       ??_I2C1_DO_RX_NACK_STOP 00A0                                _ADCC_Initialize 0886  
                        _I2C1_DO_SEND_ADR_READ 1785                                         fputc@c 0073  
                               _PMD_Initialize 173F                                         fputs@c 0023  
                                       fputs@i 0024                                         fputs@s 0026  
                                    ??_isdigit 00A2                  ?_I2C1_SetDataCompleteCallback 00A5  
                           ??_I2C1_SetCallback 00A3                                      ??_isspace 00A2  
            __size_of_ADCC_GetSingleConversion 0012                               __end_of_vfprintf 0B56  
                    ?_ADCC_GetSingleConversion 0070       TMR0_SetInterruptHandler@InterruptHandler 00A0  
                 __size_of_I2C1_MasterSendNack 0004                                      ??_strncmp 00A4  
                         ?_EUSART_Transmit_ISR 0070                        _I2C1_DO_RX_NACK_RESTART 16FF  
                         __size_of_EUSART_Read 002C                              _SYSTEM_Initialize 0987  
               I2C1_SetDataCompleteCallback@cb 00A5                        __end_of__initialization 00CE  
                           __size_of_Write_PCF 000D                I2C1_MasterOperation@returnValue 00B2  
                           ?_SYSTEM_Initialize 0070                                  ??_I2C1_Poller 00B0  
         __end_of_EUSART_SetTxInterruptHandler 171A          __size_of_EUSART_SetTxInterruptHandler 0006  
                 _EUSART_SetTxInterruptHandler 1714                        _rdBlkRegCompleteHandler 0903  
                               __pcstackCOMMON 0070                                   __pidataBANK1 0002  
                          ??_SYSTEM_Initialize 00A3               __end_of_I2C1_MasterEnableRestart 16BC  
                                    ?_TMR0_ISR 0070                                  __end_of_getch 16D4  
                                __end_of_fputc 0C98                                  __end_of_fputs 0A75  
                                __end_of_putch 1714                               ?_TMR2_Initialize 0070  
                       __end_of_PMD_Initialize 1747                   ??_I2C1_DO_SEND_RESTART_WRITE 00A0  
                      ??_I2C1_MasterSendTxData 00A0                           _eusartRxStatusBuffer 013D  
                                  ?_Send_D7_D4 00B9                          __end_of_I2C1_DO_RESET 1709  
              ??_EUSART_SetOverrunErrorHandler 00A2                                      ?i1_strlen 0070  
                            lcd_gotoxy@address 00C5                                        ??_getch 0072  
                                      ??_fputc 0076                      __end_of_SYSTEM_Initialize 09A3  
                                      ??_fputs 0020                          ??_EUSART_Transmit_ISR 0070  
                                      ??_putch 0072                                     __pbssBANK0 006D  
                                   __pbssBANK1 00CB                                     __pbssBANK2 0120  
                                   __pbssBANK3 01A0                                     __pbssBANK4 0220  
              __end_of_I2C1_MasterWaitForEvent 1732                           __end_of_EUSART_Write 0AA0  
                             ?_PWM5_Initialize 0070                 __size_of_rd2RegCompleteHandler 0013  
                __end_of_rd2RegCompleteHandler 0847                           I2C1_Open@returnValue 00A2  
               __size_of_wr2RegCompleteHandler 0013                  __end_of_wr2RegCompleteHandler 0821  
              __end_of_I2C1_Write1ByteRegister 0C21                    __size_of_EUSART_Receive_ISR 0041  
                        _rd1RegCompleteHandler 0821                              _I2C1_DO_SEND_STOP 16F0  
                        _wr1RegCompleteHandler 0847            __size_of_I2C1_DO_SEND_RESTART_WRITE 0005  
                                   __pmaintext 0429                       rd1RegCompleteHandler@ptr 00A9  
                               lcd_send_byte@n 00BD                  ?_EUSART_SetTxInterruptHandler 00A0  
             _EUSART_TxDefaultInterruptHandler 00EA               __end_of_TMR0_SetInterruptHandler 1720  
                                      ?___lmul 0070                             ?_I2C1_DO_SEND_STOP 0070  
                                      ?___wmul 00A0                                     ??_TMR0_ISR 0070  
                      __end_of_ADCC_Initialize 089E                                _I2C1_MasterOpen 17A6  
                                   __pintentry 0004                                _I2C1_MasterStop 16BC  
                              _I2C1_Initialize 1773                            __end_of_I2C1_Poller 17A6  
                                      _ADFLTRH 0115                                        _CCP5CON 031E  
                                      _ADFLTRL 0114                                 ___lmul@product 0078  
                                      _ADPREVH 008F                                        _ADPREVL 008E  
                      __size_of_I2C1_DO_RX_ACK 0005                                        _ADSTPTH 0113  
                                      _ADSTPTL 0112                   ??_EUSART_DefaultErrorHandler 0071  
                                      ?_printf 0066                                ?_PMD_Initialize 0070  
                       ?_I2C1_DO_SEND_ADR_READ 0070                                        ?_strchr 00A0  
                          ??_I2C1_DO_SEND_STOP 00A0                                        ?_strlen 00A0  
                                      ?_strstr 00A9                              __end_of_Write_PCF 17C0  
              __size_of_I2C1_DO_SEND_ADR_WRITE 0008                                  _eusartRxCount 00E3  
                           _PWM5_LoadDutyValue 08B7                              _I2C1_MasterIsNack 1726  
                                      _SP1BRGH 011C                                        _SP1BRGL 011B  
                                      _OSCCON1 088D                                        _OSCCON3 088F  
                                    _I2C1_Open 0CD9                             __size_of_vfpfcnvrt 00DD  
                    ??_I2C1_DO_RX_NACK_RESTART 00A0                  __size_of_EUSART_RxDataHandler 001B  
                                   _lcd_gotoxy 0D5E                                        _OSCTUNE 0892  
                                   ??i1_strlen 0072                              _I2C1_MasterSetIrq 16C5  
           __size_of_I2C1_DO_SEND_RESTART_READ 0005                                        _SSP1ADD 018D  
                                      _SLRCONA 0F3B                                        _SLRCONB 0F46  
                                      _SLRCONC 0F51                                        _SSP1BUF 018C  
                           ?_I2C1_MasterIsNack 0070                     ?_I2C1_DO_SEND_RESTART_READ 0070  
                     ??_EUSART_SetErrorHandler 00A2                                      ?_lcd_init 0070  
               ??_I2C1_SetDataCompleteCallback 00A8                                      ?_lcd_puts 00C6  
                           ?_I2C1_MasterSetIrq 0070                            ?_PWM5_LoadDutyValue 00A0  
                           _i2c1_fsmStateTable 1000                            ??_I2C1_MasterIsNack 00A0  
                    __end_of_I2C1_DO_SEND_STOP 16F5                      ??_rdBlkRegCompleteHandler 00AA  
                           I2C1_SetCallback@cb 00A0                            ??_I2C1_MasterSetIrq 00A0  
          __size_of_EUSART_DefaultErrorHandler 0004                            __size_of_Send_D7_D4 0061  
                                      ___aldiv 069D                                        ___aodiv 023E  
                                      ___aomod 033F                                __size_of___lmul 0033  
                              __size_of___wmul 0020                                      ?_vfprintf 005E  
                         ??_PWM5_LoadDutyValue 00A2                                  ?_I2C1_DO_IDLE 0070  
                                ?_I2C1_DO_RCEN 0070                                        _dht_dat 00CB  
                                      __ptext1 0DEE                                        __ptext2 0F46  
                                      __ptext3 0937                                        __ptext4 091D  
                                      __ptext5 0E3C                                        __ptext6 0D5E  
                                      __ptext7 0FA2                                        __ptext8 096C  
                                      __ptext9 078F                                        _buffer2 01DC  
                                      _buffer3 01A0                       _I2C1_MasterEnableRestart 16B9  
                              __size_of_printf 0012                      __end_of_I2C1_MasterIsNack 172C  
                 ?_I2C1_SetAddressNackCallback 00A5                                __size_of_strchr 001A  
                              __size_of_strlen 001A                                __size_of_strstr 004E  
                        _OSCILLATOR_Initialize 177C                                      _T2CONbits 028E  
                                 __size_of_abs 001A                                   __size_of_map 0062  
                                 __size_of_pad 0059                                        _isdigit 08D0  
                    __end_of_I2C1_MasterSetIrq 16C8                       __end_of_I2C1_DO_TX_EMPTY 0BB9  
                             ___aldiv@dividend 0024                       ??_PIN_MANAGER_Initialize 00A0  
                                      _isspace 09E4                                      _T2HLTbits 028F  
                     wr1RegCompleteHandler@ptr 00A9                                     ?_I2C1_Open 0070  
                __size_of_I2C1_MasterGetRxData 0003                                        atoi@neg 00AC  
                     ?_I2C1_CallbackReturnStop 00A9                     __size_of_SYSTEM_Initialize 001C  
                                      clrloop0 1733                                     ??_lcd_init 00C1  
                                      _strncmp 0F46                                     ??_lcd_puts 00C8  
            __end_of_I2C1_DO_SEND_RESTART_READ 16E6                           end_of_initialization 00CE  
                   __end_of_I2C1_MasterSendAck 16DC                                      _T2RSTbits 0291  
                          _I2C1_MasterClearIrq 16AD          __end_of_EUSART_SetOverrunErrorHandler 176A  
       __size_of_EUSART_SetOverrunErrorHandler 0009                  _EUSART_SetOverrunErrorHandler 1761  
                         lcd_send_byte@address 00C0                                        fputc@fp 0075  
                   __end_of_I2C1_MasterStartRx 16C2                                        fputs@fp 007B  
                       ?_rd1RegCompleteHandler 00A9                         _I2C1_DO_SEND_ADR_WRITE 1747  
                 __end_of_I2C1_DO_SEND_RESTART 16F0                              _EUSART_Initialize 0D1A  
                      __end_of_I2C1_MasterOpen 17B3                         ?_wr1RegCompleteHandler 00A9  
                      __end_of_I2C1_MasterStop 16BF                        __end_of_I2C1_Initialize 177C  
            __size_of_I2C1_CallbackReturnReset 0002                                    _I2C1_Poller 1799  
               __size_of_I2C1_MasterDisableIrq 0003                      ?_I2C1_CallbackReturnReset 00A9  
                __end_of_I2C1_MasterDisableIrq 16B6                                    _I2C1_Status 0120  
                __size_of_I2C1_DO_ADDRESS_NACK 0031                             ?_EUSART_Initialize 0070  
                            __end_of_vfpfcnvrt 05EF                               ___aldiv@quotient 002A  
                      __size_of_I2C1_MasterFsm 002E                            _I2C1_MasterSendNack 16D4  
          __end_of_I2C1_SetAddressNackCallback 080E                    _I2C1_SetAddressNackCallback 0800  
                             ?_ADCC_Initialize 0070                                     ??_vfprintf 0061  
             __end_of_ADCC_GetSingleConversion 17EE                           ?_I2C1_MasterClearIrq 0070  
                        __end_of_lcd_send_byte 0987                                 ??_I2C1_DO_IDLE 00A0  
                                      strchr@c 00A0                                        strchr@s 00A2  
                               ??_I2C1_DO_RCEN 00A0             __end_of_I2C1_DO_SEND_RESTART_WRITE 16EB  
                   _I2C1_DO_SEND_RESTART_WRITE 16E6                                        strlen@a 00A3  
                                      strlen@s 00A0                      __size_of_I2C1_MasterClose 0003  
                          ??_EUSART_Initialize 00A2                 ??_EUSART_SetTxInterruptHandler 00A2  
                                      strstr@h 00B0                       _TMR0_SetInterruptHandler 171A  
                                      strstr@n 00A9                                      _PORTBbits 000D  
                      __size_of_I2C1_SetBuffer 0017                __end_of_rdBlkRegCompleteHandler 091D  
             __size_of_I2C1_MasterWaitForEvent 0006                      __size_of_I2C1_MasterStart 0003  
                    __size_of_I2C1_MasterWrite 0005                  __size_of_I2C1_MasterOperation 0023  
                ??_I2C1_SetAddressNackCallback 00A8               __size_of_I2C1_Write1ByteRegister 0035  
                                    _TRISBbits 0012                I2C1_SetDataCompleteCallback@ptr 00A7  
                                  ?_lcd_gotoxy 00C1                          __size_of_EUSART_Write 002B  
                  I2C1_Write1ByteRegister@data 00B4                                Send_D7_D4@datos 00BC  
               I2C1_CallbackReturnReset@funPtr 00A9                           ?_I2C1_MasterSendNack 0070  
                              _LCD_INIT_STRING 1848                __size_of_EUSART_SetErrorHandler 0009  
                                   map@out_max 003E                                     map@out_min 003A  
                    __end_of_EUSART_Initialize 0D5E                      __size_of_I2C1_SetCallback 002B  
                   rdBlkRegCompleteHandler@ptr 00A9                     __size_of_I2C1_DO_SEND_STOP 0005  
                                  _CCP5CONbits 031E                          ??_I2C1_MasterClearIrq 00A0  
                               __end_of___lmul 0BEC             __end_of_EUSART_DefaultErrorHandler 16CC  
                   _EUSART_DefaultErrorHandler 16C8                                    vfpfcnvrt@ap 004F  
                                  vfpfcnvrt@fp 005D                                    vfpfcnvrt@ll 0055  
                               __end_of___wmul 09C3                                 _I2C1_DO_RX_ACK 16F5  
                                 _EUSART_Write 0A75                              __size_of_TMR0_ISR 000F  
                       ?_OSCILLATOR_Initialize 0070                                      _GlobalErr 00DA  
                   __size_of_I2C1_MasterIsNack 0006                __end_of_I2C1_CallbackReturnStop 16AB  
                               __end_of_printf 1800                 __size_of_I2C1_MasterSendTxData 0006  
                __end_of_I2C1_MasterSendTxData 1726                     __size_of_I2C1_MasterSetIrq 0003  
                               __end_of_strchr 0937                                 __end_of_strlen 0951  
                                 ??_Send_D7_D4 00BA                                 __end_of_strstr 0E3C  
                          start_initialization 00A1                                    ??_I2C1_Open 00A0  
                __size_of_I2C1_DO_RX_NACK_STOP 0005                       __size_of_TMR0_Initialize 0015  
              __size_of_PIN_MANAGER_Initialize 0038                                    __end_of_abs 0903  
                                  __end_of_map 078F                                    __end_of_pad 0EED  
                                ??_EUSART_Read 0070                          ??_I2C1_MasterSendNack 00A0  
 EUSART_SetRxInterruptHandler@interruptHandler 00A0   EUSART_SetTxInterruptHandler@interruptHandler 00A0  
                                  putch@txData 0072                                      i1strlen@a 0073  
                                    i1strlen@s 0070                              __size_ofi1_strlen 0019  
                     I2C1_SetBuffer@bufferSize 00A0                               ?_I2C1_MasterOpen 0070  
                             ?_I2C1_MasterStop 0070                 I2C1_Write1ByteRegister@address 00B6  
                             ?_I2C1_Initialize 0070                 ?_EUSART_SetOverrunErrorHandler 00A0  
                                Write_PCF@dato 00B8                                    vfprintf@fmt 005E  
                   _EUSART_FramingErrorHandler 0159                               ??_PMD_Initialize 00A0  
                           __end_of_Send_D7_D4 07F0                                       ??___lmul 0078  
                          __size_of_lcd_gotoxy 0044                         __end_of_I2C1_DO_RX_ACK 16FA  
                                     ??___wmul 00A4                         _EUSART_SetErrorHandler 174F  
                      ??_I2C1_DO_SEND_ADR_READ 00A0                                    __pdataBANK1 00ED  
                                     ??_printf 007D                                       ??_strchr 00A2  
                                     ??_strlen 00A2                               I2C1_Open@address 00A1  
                                     ??_strstr 00AB                        __end_of_LCD_INIT_STRING 184C  
                     _ADCC_GetSingleConversion 17DC                    __end_of_EUSART_Transmit_ISR 0A29  
                  PWM5_LoadDutyValue@dutyValue 00A0                           _I2C1_DO_SEND_RESTART 16EB  
                                    ___latbits 0002                                  __pcstackBANK0 0020  
                                __pcstackBANK1 00A0                               ___aodiv@dividend 0028  
                     __size_of_TMR2_Initialize 000E                                      _Write_PCF 17B3  
                  ??_I2C1_DO_SEND_RESTART_READ 00A0                     __end_of_EUSART_Receive_ISR 0CD9  
                         __end_of_I2C1_DO_IDLE 16E1                           __end_of_I2C1_DO_RCEN 173F  
                   __size_of_EUSART_Initialize 0044                              __size_of_lcd_init 005E  
                            __size_of_lcd_puts 0058               _EUSART_RxDefaultInterruptHandler 015B  
                I2C1_SetAddressNackCallback@cb 00A5                            __end_of_EUSART_Read 0AF7  
                                    _atoi$2767 00AE                                      _atoi$2768 00B2  
                                    _atoi$2769 00B0                          _TMR0_InterruptHandler 00E8  
                                    __pnvBANK1 00E8                                      __pnvBANK2 0155  
                        _rd2RegCompleteHandler 0834                   __end_of_EUSART_RxDataHandler 096C  
                       _PIN_MANAGER_Initialize 0C21                          _wr2RegCompleteHandler 080E  
                                    _dtoa$2856 003B                     ??_I2C1_MasterEnableRestart 00A0  
                     __size_of_PWM5_Initialize 000B                           EUSART_Read@readValue 0071  
                     rd2RegCompleteHandler@ptr 00A9                                 _I2C1_MasterFsm 0AF7  
                                     ?___aldiv 0020                ADCC_GetSingleConversion@channel 0072  
                       __size_of_I2C1_DO_RESET 0005                                       ?___aodiv 0020  
                                     ?___aomod 0020                                ?_I2C1_DO_RX_ACK 0070  
                                    __ptext100 07F0                                      __ptext101 07FF  
                                    __ptext102 0A06                               ___aodiv@quotient 0073  
                                    __ptext103 0C98                                      __ptext104 16CC  
                                    __ptext105 16A8                                      __ptext106 16C8  
                                    __ptext107 0951                                      __ptext108 17DC  
                                 _eusartRxHead 00E5                                   _eusartTxHead 00E7  
                                 _eusartRxTail 00E4                                   _eusartTxTail 00E6  
                      _I2C1_MasterWaitForEvent 172C                               _I2C1_MasterClose 16B0  
                               _I2C1_SetBuffer 086F                   ??_INTERRUPT_InterruptManager 006B  
                             _I2C1_MasterStart 16B6                              __size_of_vfprintf 0031  
                             _I2C1_MasterWrite 1709                        _eusartTxBufferRemaining 00EC  
                                     _BAUD1CON 011F                        _I2C1_Write1ByteRegister 0BEC  
                        ?_I2C1_DO_SEND_RESTART 0070                                       ?_isdigit 00A0  
                                     ?_isspace 00A0                              ?_I2C1_DO_TX_EMPTY 0070  
                                   ?_Write_PCF 0070               __end_of_I2C1_CallbackReturnReset 16AD  
                           ??_I2C1_DO_TX_EMPTY 00AA                                 __size_of_getch 0004  
                               __size_of_fputc 003F                                       _T2CLKCON 0290  
                               __size_of_fputs 0029                        ??_rd1RegCompleteHandler 00AA  
                                     ?_strncmp 00A0                        ?_I2C1_DO_SEND_ADR_WRITE 0070  
                    I2C1_MasterSendTxData@data 00A0                                 __size_of_putch 0006  
                               _eusartRxBuffer 0145                        ??_wr1RegCompleteHandler 00AA  
                              ___aldiv@divisor 0020                              ??_TMR0_Initialize 00A2  
                               _eusartTxBuffer 014D                               _I2C1_SetCallback 0AA0  
                              ___aldiv@counter 0028                                 ___wmul@product 00A4  
                                     _LATAbits 0016         EUSART_SetErrorHandler@interruptHandler 00A0  
                                     _LATBbits 0017                                     _I2C1_DO_RX 0DA2  
                                   _I2C1_DO_TX 0EED                                      clear_ram0 1732  
                                     u203_2lld 0268                                       u212_2lld 032D  
                                     _PIE0bits 0716                                       u205_2lld 0293  
                                     _PIE3bits 0719                                       u222_2lld 0417  
                                     u214_2lld 0369                              _eusartRxLastError 00E2  
                                     u216_2lld 0394                                     _I2C1_Close 09C3  
                                 ?_I2C1_Poller 0070                                       u236_2lld 011B  
                       __end_of_I2C1_MasterFsm 0B25            __size_of_INTERRUPT_InterruptManager 009B  
                 __end_of_I2C1_MasterGetRxData 16C5                     ??_TMR0_SetInterruptHandler 00A2  
                                     _PIR0bits 070C               __size_of_I2C1_CallbackReturnStop 0002  
              ??_EUSART_SetFramingErrorHandler 00A2                                       _PIR3bits 070F  
                                     _PIR4bits 0710                             _I2C1_MasterSendAck 16D8  
                    _I2C1_DO_SEND_RESTART_READ 16E1                                       _SSP1CON1 0190  
                                     _SSP1CON2 0191                                       _TMR0_ISR 07F0  
    __end_of_EUSART_DefaultOverrunErrorHandler 16D0     __size_of_EUSART_DefaultOverrunErrorHandler 0004  
          ??_EUSART_DefaultOverrunErrorHandler 0070             ?_EUSART_DefaultOverrunErrorHandler 0070  
            _EUSART_DefaultOverrunErrorHandler 16CC                         __end_of_I2C1_SetBuffer 0886  
                                     _SSP1STAT 018F           __end_of_I2C1_SetDataCompleteCallback 17DC  
        __size_of_I2C1_SetDataCompleteCallback 000E                   _I2C1_SetDataCompleteCallback 17CE  
                           _I2C1_MasterStartRx 16BF                    __size_of_PWM5_LoadDutyValue 0019  
                                    _vfpfcnvrt 0512                    ?_I2C1_DO_SEND_RESTART_WRITE 0070  
                                    map@in_max 0036                                      map@in_min 0032  
                   I2C1_Write1ByteRegister@reg 00B3                            ?_I2C1_MasterSendAck 0070  
                                   _ADCON0bits 0093                                     _ADCON1bits 0094  
                                   _ADCON2bits 0095                                     _ADCON3bits 0096  
                            ___wmul@multiplier 00A0                       ?_I2C1_DO_RX_NACK_RESTART 0070  
                                    lcd_init@i 00C2                            ?_I2C1_MasterStartRx 0070  
                 __end_of_I2C1_DO_ADDRESS_NACK 0B87                                   ??_lcd_gotoxy 00C2  
                     wr2RegCompleteHandler@ptr 00A9                                   _isspace$2785 00A4  
                                     i1_strlen 089E                 __end_of_I2C1_DO_SEND_ADR_WRITE 174F  
                                _I2C1_DO_RESET 1704                                    _EUSART_Read 0ACB  
                            ___lmul@multiplier 0070                          I2C1_Close@returnValue 00A1  
                     ?_rdBlkRegCompleteHandler 00A9                            I2C1_SetCallback@idx 00A4  
                          I2C1_SetCallback@ptr 00A2                           ??_I2C1_MasterSendAck 00A0  
                            ??_TMR2_Initialize 00A0                         ?_rd2RegCompleteHandler 00A9  
                 __end_of_I2C1_MasterOperation 0A4C                         ?_wr2RegCompleteHandler 00A9  
                         ??_I2C1_MasterStartRx 00A0                                     _ADSTATbits 0097  
                              ?_I2C1_MasterFsm 0070                                     vfprintf@ap 0060  
                                   vfprintf@fp 0063                      ??_I2C1_MasterWaitForEvent 00A0  
                        _I2C1_MasterDisableIrq 16B3                             __end_of_lcd_gotoxy 0DA2  
                      ??_OSCILLATOR_Initialize 00A0                            _EUSART_ErrorHandler 0155  
                              ?_I2C1_SetBuffer 00A0                               __size_of___aldiv 0090  
                             __size_of___aodiv 0101                               __size_of___aomod 00EA  
                  ?_EUSART_DefaultErrorHandler 0070                                     ?_vfpfcnvrt 004E  
                    ??_I2C1_Write1ByteRegister 00B5                                ___aodiv@divisor 0020  
                            ??_PWM5_Initialize 00A0                                ___aodiv@counter 0071  
                       ??_I2C1_DO_SEND_RESTART 00A0                                     _ANSELBbits 0F43  
                                   _T0CON0bits 001E                       __size_of_ADCC_Initialize 0018  
                             __size_of_isdigit 0019                                 ?_I2C1_DO_RESET 0070  
                         _EUSART_RxDataHandler 0951                          __size_of_I2C1_DO_IDLE 0005  
                                  ??_Write_PCF 00B7                          __size_of_I2C1_DO_RCEN 0007  
                             __size_of_isspace 0022                                       __ptext10 17B3  
                                     __ptext11 0BEC                                       __ptext20 0B56  
                                     __ptext12 0800                                       __ptext21 1704  
                                     __ptext13 0CD9                                       __ptext30 0DA2  
                                     __ptext22 16FF                                       __ptext14 17A6  
                                     __ptext31 0EED                                       __ptext23 16FA  
                                     __ptext15 1709                                       __ptext40 16C2  
                                     __ptext32 1747                                       __ptext24 16F5  
                                     __ptext16 0A29                                       __ptext41 16D4  
                                     __ptext33 1785                                       __ptext25 16F0  
                                     __ptext17 1799                                       __ptext50 17CE  
                                     __ptext42 16BF                                       __ptext34 16DC  
                                     __ptext26 16EB                                       __ptext18 172C  
                                     __ptext51 0AA0                                       __ptext43 16AB  
                                     __ptext35 0B87                                       __ptext27 16E6  
                                     __ptext19 0AF7                                       __ptext60 05EF  
                                     __ptext52 086F                                       __ptext44 16A9  
                                     __ptext36 16C5                                       __ptext28 16E1  
                                     __ptext61 09E4                                       __ptext53 16BC  
                                     __ptext45 0903                                       __ptext37 1726  
                                     __ptext29 1738                                       __ptext70 0C21  
                                     __ptext62 08D0                                       __ptext54 16B9  
                                     __ptext46 0847                                       __ptext38 1720  
                                     __ptext71 177C                                       __ptext63 09A3  
                                     __ptext55 16B6                                       __ptext47 0834  
                                     __ptext39 16D8                                       __ptext80 08B7  
                                     __ptext72 1773                                       __ptext64 0987  
                                     __ptext56 09C3                                       __ptext48 0821  
                                     __ptext73 0D1A                                       __ptext65 17C0  
                                     __ptext57 16B3                                       __ptext49 080E  
                                     __ptext90 170E                                       __ptext82 17EE  
                                     __ptext74 1714                                       __ptext66 085A  
                                     __ptext58 16B0                                       __ptext91 0A75  
                                     __ptext83 0B25                                       __ptext75 176A  
                                     __ptext67 171A                                       __ptext59 16AD  
                                     __ptext92 08E9                                       __ptext84 0512  
                                     __ptext76 1761                                       __ptext68 178E  
                                     __ptext93 033F                                       __ptext85 00D2  
                                     __ptext77 1758                                       __ptext69 173F  
                                     __ptext94 023E                                       __ptext86 0E94  
                                     __ptext78 174F                                       __ptext95 072D  
                                     __ptext87 089E                                       __ptext79 0886  
                                     __ptext96 0BB9                                       __ptext88 0A4C  
                                     __ptext97 069D                                       __ptext89 0C59  
                                     __ptext98 16D0                                       __ptext99 0ACB  
                                 _SSP1CON1bits 0190                                   _SSP1CON2bits 0191  
                                     _lcd_init 0FA2                                       _lcd_puts 0E3C  
                             __size_of_strncmp 005C                         __size_of_lcd_send_byte 001B  
                     _I2C1_CallbackReturnReset 16AB                                  __size_of_atoi 00AE  
                                __size_of_main 00E9                                  __size_of_dtoa 016C  
                                  ?_I2C1_DO_RX 0070                                    ?_I2C1_DO_TX 0070  
         __end_of_TMR0_DefaultInterruptHandler 0800          __size_of_TMR0_DefaultInterruptHandler 0001  
                 _TMR0_DefaultInterruptHandler 07FF                    __end_of_I2C1_MasterClearIrq 16B0  
                 __end_of_I2C1_DO_RX_NACK_STOP 16FF                                    ?_I2C1_Close 0070  
                      ?_EUSART_SetErrorHandler 00A0                                     _RC1STAbits 011D  
EUSART_SetOverrunErrorHandler@interruptHandler 00A0                     ??_ADCC_GetSingleConversion 0072  
                                     int$flags 007E                __end_of_I2C1_DO_RX_NACK_RESTART 1704  
                     I2C1_MasterOperation@read 00B1                                       _vfprintf 0B25  
           __end_of_INTERRUPT_InterruptManager 009F                     _INTERRUPT_InterruptManager 0004  
                                    printf@fmt 0066          __end_of_EUSART_SetFramingErrorHandler 1761  
       __size_of_EUSART_SetFramingErrorHandler 0009                  _EUSART_SetFramingErrorHandler 1758  
                                 _SSP1STATbits 018F                 __size_of_I2C1_DO_SEND_ADR_READ 0009  
                __end_of_I2C1_DO_SEND_ADR_READ 178E                                   _I2C1_DO_IDLE 16DC  
                                 _I2C1_DO_RCEN 1738                               ___aomod@dividend 0028  
                  __end_of_I2C1_MasterSendNack 16D8                                     _INTCONbits 000B  
                        ?_EUSART_RxDataHandler 0070                 I2C1_SetAddressNackCallback@ptr 00A7  
                               __pstringtext10 1835                                 __pstringtext11 183C  
                               __pstringtext12 1843                                 __pstringtext13 184C  
                               __pstringtext14 0000                           _I2C1_MasterGetRxData 16C2  
                        _I2C1_MasterSendTxData 1720                                       isdigit@c 00A0  
                                     intlevel1 0000                       __end_of_I2C1_MasterClose 16B3  
                                     isspace@c 00A0                        ?_PIN_MANAGER_Initialize 0070  
                     __end_of_I2C1_MasterStart 16B9                       __end_of_I2C1_MasterWrite 170E  
               __end_of_EUSART_SetErrorHandler 1758                               ??_I2C1_DO_RX_ACK 00A0  
                      _I2C1_CallbackReturnStop 16A9                                      strncmp@_l 00A5  
                                    strncmp@_r 00A0           __end_of_EUSART_SetRxInterruptHandler 1773  
        __size_of_EUSART_SetRxInterruptHandler 0009                   _EUSART_SetRxInterruptHandler 176A  
                ?_TMR0_DefaultInterruptHandler 0070                           _I2C1_DO_ADDRESS_NACK 0B56  
                       ?_I2C1_MasterDisableIrq 0070                           __size_of_I2C1_Poller 000D  
                                     printf@ap 006A                             _EUSART_Receive_ISR 0C98  
EUSART_SetFramingErrorHandler@interruptHandler 00A0                                ___aomod@divisor 0020  
                                  ??_vfpfcnvrt 0050                                ___aomod@counter 0071  
                     __size_of_I2C1_MasterOpen 000D                       __size_of_I2C1_MasterStop 0003  
                                _lcd_send_byte 096C                       __size_of_I2C1_Initialize 0009  
                                __pstringtext1 1000                                  __pstringtext2 1848  
                                __pstringtext3 1800                                  __pstringtext4 1808  
                                __pstringtext5 1810                                  __pstringtext6 1818  
                                __pstringtext7 1820                                  __pstringtext8 1827  
                                __pstringtext9 182E                       __end_of_I2C1_SetCallback 0ACB  
                          ?_EUSART_Receive_ISR 0070                                     _SSP1DATPPS 0EC6  
                                   _SSP1CLKPPS 0EC5                            __size_of_I2C1_DO_RX 004C  
                          __size_of_I2C1_DO_TX 0059                                ??_I2C1_DO_RESET 00A0  
                         _I2C1_MasterOperation 0A29                                _TMR0_Initialize 085A  
                                     strncmp@l 00A8                                       strncmp@n 00A2  
                                     strncmp@r 00A6                            __size_of_I2C1_Close 0021  
                                 ___aldiv@sign 0029                          ?_I2C1_MasterGetRxData 0070  
                                     strstr@nl 00AE                                     _TX1STAbits 011E  
                           EUSART_Write@txData 0071                   __size_of_EUSART_Transmit_ISR 0023  
                                 ___aodiv@sign 0072                 __end_of_PIN_MANAGER_Initialize 0C59  
                            ??_ADCC_Initialize 00A0                 __size_of_rd1RegCompleteHandler 0013  
                __end_of_rd1RegCompleteHandler 0834                             __size_of_I2C1_Open 0041  
               __size_of_wr1RegCompleteHandler 0013                           ??_EUSART_Receive_ISR 0071  
                __end_of_wr1RegCompleteHandler 085A                                   ___aomod@sign 0072  
                    __size_of_I2C1_DO_TX_EMPTY 0032                          ?_I2C1_DO_ADDRESS_NACK 0070  
