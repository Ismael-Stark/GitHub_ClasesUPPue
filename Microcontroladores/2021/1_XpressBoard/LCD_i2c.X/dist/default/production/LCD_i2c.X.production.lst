

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Mar 16 20:16:54 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16LF18855
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    51                           	dabs	1,0x7E,2
    52  0000                     
    53                           ; Version 2.30
    54                           ; Generated 15/09/2020 GMT
    55                           ; 
    56                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution. Publication is not required when
    70                           ;        this file is used in an embedded application.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC16LF18855 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     	;# 
    89  0001                     	;# 
    90  0002                     	;# 
    91  0003                     	;# 
    92  0004                     	;# 
    93  0005                     	;# 
    94  0006                     	;# 
    95  0007                     	;# 
    96  0008                     	;# 
    97  0009                     	;# 
    98  000A                     	;# 
    99  000B                     	;# 
   100  000C                     	;# 
   101  000D                     	;# 
   102  000E                     	;# 
   103  0010                     	;# 
   104  0011                     	;# 
   105  0012                     	;# 
   106  0013                     	;# 
   107  0016                     	;# 
   108  0017                     	;# 
   109  0018                     	;# 
   110  001C                     	;# 
   111  001C                     	;# 
   112  001D                     	;# 
   113  001D                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  008C                     	;# 
   117  008C                     	;# 
   118  008D                     	;# 
   119  008E                     	;# 
   120  008E                     	;# 
   121  008F                     	;# 
   122  0090                     	;# 
   123  0090                     	;# 
   124  0091                     	;# 
   125  0093                     	;# 
   126  0094                     	;# 
   127  0095                     	;# 
   128  0096                     	;# 
   129  0097                     	;# 
   130  0098                     	;# 
   131  0099                     	;# 
   132  009A                     	;# 
   133  009B                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009E                     	;# 
   137  010C                     	;# 
   138  010D                     	;# 
   139  010E                     	;# 
   140  010E                     	;# 
   141  010F                     	;# 
   142  0110                     	;# 
   143  0110                     	;# 
   144  0111                     	;# 
   145  0112                     	;# 
   146  0112                     	;# 
   147  0113                     	;# 
   148  0114                     	;# 
   149  0114                     	;# 
   150  0115                     	;# 
   151  0116                     	;# 
   152  0116                     	;# 
   153  0117                     	;# 
   154  0119                     	;# 
   155  0119                     	;# 
   156  0119                     	;# 
   157  011A                     	;# 
   158  011A                     	;# 
   159  011A                     	;# 
   160  011B                     	;# 
   161  011B                     	;# 
   162  011B                     	;# 
   163  011B                     	;# 
   164  011B                     	;# 
   165  011C                     	;# 
   166  011C                     	;# 
   167  011C                     	;# 
   168  011D                     	;# 
   169  011D                     	;# 
   170  011D                     	;# 
   171  011E                     	;# 
   172  011E                     	;# 
   173  011E                     	;# 
   174  011F                     	;# 
   175  011F                     	;# 
   176  011F                     	;# 
   177  011F                     	;# 
   178  011F                     	;# 
   179  018C                     	;# 
   180  018D                     	;# 
   181  018E                     	;# 
   182  018F                     	;# 
   183  0190                     	;# 
   184  0191                     	;# 
   185  0192                     	;# 
   186  0196                     	;# 
   187  0197                     	;# 
   188  0198                     	;# 
   189  0199                     	;# 
   190  019A                     	;# 
   191  019B                     	;# 
   192  019C                     	;# 
   193  020C                     	;# 
   194  020C                     	;# 
   195  020D                     	;# 
   196  020E                     	;# 
   197  020F                     	;# 
   198  020F                     	;# 
   199  0210                     	;# 
   200  0210                     	;# 
   201  0211                     	;# 
   202  0211                     	;# 
   203  0212                     	;# 
   204  0212                     	;# 
   205  0213                     	;# 
   206  0214                     	;# 
   207  0215                     	;# 
   208  0215                     	;# 
   209  0216                     	;# 
   210  0216                     	;# 
   211  0217                     	;# 
   212  0217                     	;# 
   213  0218                     	;# 
   214  0218                     	;# 
   215  0219                     	;# 
   216  021A                     	;# 
   217  021B                     	;# 
   218  021B                     	;# 
   219  021C                     	;# 
   220  021C                     	;# 
   221  021D                     	;# 
   222  021D                     	;# 
   223  021E                     	;# 
   224  021F                     	;# 
   225  028C                     	;# 
   226  028C                     	;# 
   227  028D                     	;# 
   228  028D                     	;# 
   229  028E                     	;# 
   230  028F                     	;# 
   231  0290                     	;# 
   232  0290                     	;# 
   233  0291                     	;# 
   234  0292                     	;# 
   235  0292                     	;# 
   236  0293                     	;# 
   237  0293                     	;# 
   238  0294                     	;# 
   239  0295                     	;# 
   240  0296                     	;# 
   241  0296                     	;# 
   242  0297                     	;# 
   243  0298                     	;# 
   244  0298                     	;# 
   245  0299                     	;# 
   246  0299                     	;# 
   247  029A                     	;# 
   248  029B                     	;# 
   249  029C                     	;# 
   250  029C                     	;# 
   251  029D                     	;# 
   252  030C                     	;# 
   253  030C                     	;# 
   254  030D                     	;# 
   255  030E                     	;# 
   256  030F                     	;# 
   257  0310                     	;# 
   258  0310                     	;# 
   259  0311                     	;# 
   260  0312                     	;# 
   261  0313                     	;# 
   262  0314                     	;# 
   263  0314                     	;# 
   264  0315                     	;# 
   265  0316                     	;# 
   266  0317                     	;# 
   267  0318                     	;# 
   268  0318                     	;# 
   269  0319                     	;# 
   270  031A                     	;# 
   271  031B                     	;# 
   272  031C                     	;# 
   273  031C                     	;# 
   274  031D                     	;# 
   275  031E                     	;# 
   276  031F                     	;# 
   277  038C                     	;# 
   278  038C                     	;# 
   279  038D                     	;# 
   280  038E                     	;# 
   281  0390                     	;# 
   282  0390                     	;# 
   283  0391                     	;# 
   284  0392                     	;# 
   285  040C                     	;# 
   286  040D                     	;# 
   287  040E                     	;# 
   288  040F                     	;# 
   289  0410                     	;# 
   290  0411                     	;# 
   291  0416                     	;# 
   292  0416                     	;# 
   293  0417                     	;# 
   294  0418                     	;# 
   295  0418                     	;# 
   296  0419                     	;# 
   297  041A                     	;# 
   298  041A                     	;# 
   299  041B                     	;# 
   300  041C                     	;# 
   301  041C                     	;# 
   302  041D                     	;# 
   303  041E                     	;# 
   304  041F                     	;# 
   305  048C                     	;# 
   306  048C                     	;# 
   307  048D                     	;# 
   308  048E                     	;# 
   309  048F                     	;# 
   310  048F                     	;# 
   311  0490                     	;# 
   312  0491                     	;# 
   313  0492                     	;# 
   314  0492                     	;# 
   315  0493                     	;# 
   316  0494                     	;# 
   317  0495                     	;# 
   318  0495                     	;# 
   319  0496                     	;# 
   320  0497                     	;# 
   321  0498                     	;# 
   322  0499                     	;# 
   323  049A                     	;# 
   324  049B                     	;# 
   325  049C                     	;# 
   326  049D                     	;# 
   327  050C                     	;# 
   328  050C                     	;# 
   329  050D                     	;# 
   330  050E                     	;# 
   331  050F                     	;# 
   332  050F                     	;# 
   333  0510                     	;# 
   334  0511                     	;# 
   335  0512                     	;# 
   336  0512                     	;# 
   337  0513                     	;# 
   338  0514                     	;# 
   339  0515                     	;# 
   340  0515                     	;# 
   341  0516                     	;# 
   342  0517                     	;# 
   343  0518                     	;# 
   344  0519                     	;# 
   345  051A                     	;# 
   346  051B                     	;# 
   347  051C                     	;# 
   348  051D                     	;# 
   349  058C                     	;# 
   350  058C                     	;# 
   351  058D                     	;# 
   352  058E                     	;# 
   353  058F                     	;# 
   354  058F                     	;# 
   355  0590                     	;# 
   356  0591                     	;# 
   357  0592                     	;# 
   358  0593                     	;# 
   359  060C                     	;# 
   360  060D                     	;# 
   361  060E                     	;# 
   362  060F                     	;# 
   363  0610                     	;# 
   364  0611                     	;# 
   365  0612                     	;# 
   366  0613                     	;# 
   367  0614                     	;# 
   368  0616                     	;# 
   369  0617                     	;# 
   370  0618                     	;# 
   371  0619                     	;# 
   372  061A                     	;# 
   373  061B                     	;# 
   374  061C                     	;# 
   375  061D                     	;# 
   376  061E                     	;# 
   377  068C                     	;# 
   378  068D                     	;# 
   379  068E                     	;# 
   380  068F                     	;# 
   381  0690                     	;# 
   382  0691                     	;# 
   383  0692                     	;# 
   384  0693                     	;# 
   385  0694                     	;# 
   386  070C                     	;# 
   387  070D                     	;# 
   388  070E                     	;# 
   389  070F                     	;# 
   390  0710                     	;# 
   391  0711                     	;# 
   392  0712                     	;# 
   393  0713                     	;# 
   394  0714                     	;# 
   395  0716                     	;# 
   396  0717                     	;# 
   397  0718                     	;# 
   398  0719                     	;# 
   399  071A                     	;# 
   400  071B                     	;# 
   401  071C                     	;# 
   402  071D                     	;# 
   403  071E                     	;# 
   404  0796                     	;# 
   405  0797                     	;# 
   406  0798                     	;# 
   407  0799                     	;# 
   408  079A                     	;# 
   409  079B                     	;# 
   410  080C                     	;# 
   411  080D                     	;# 
   412  080E                     	;# 
   413  080F                     	;# 
   414  0810                     	;# 
   415  0811                     	;# 
   416  0813                     	;# 
   417  0814                     	;# 
   418  081A                     	;# 
   419  081B                     	;# 
   420  081C                     	;# 
   421  081D                     	;# 
   422  081E                     	;# 
   423  081F                     	;# 
   424  088C                     	;# 
   425  088D                     	;# 
   426  088E                     	;# 
   427  088F                     	;# 
   428  0890                     	;# 
   429  0891                     	;# 
   430  0892                     	;# 
   431  0893                     	;# 
   432  0895                     	;# 
   433  0896                     	;# 
   434  0897                     	;# 
   435  0898                     	;# 
   436  0899                     	;# 
   437  089A                     	;# 
   438  089B                     	;# 
   439  090C                     	;# 
   440  090E                     	;# 
   441  090F                     	;# 
   442  091F                     	;# 
   443  091F                     	;# 
   444  098F                     	;# 
   445  098F                     	;# 
   446  0990                     	;# 
   447  0991                     	;# 
   448  0992                     	;# 
   449  0993                     	;# 
   450  0994                     	;# 
   451  0995                     	;# 
   452  0996                     	;# 
   453  0997                     	;# 
   454  0E0F                     	;# 
   455  0E10                     	;# 
   456  0E11                     	;# 
   457  0E12                     	;# 
   458  0E13                     	;# 
   459  0E14                     	;# 
   460  0E15                     	;# 
   461  0E16                     	;# 
   462  0E17                     	;# 
   463  0E18                     	;# 
   464  0E19                     	;# 
   465  0E1A                     	;# 
   466  0E1B                     	;# 
   467  0E1C                     	;# 
   468  0E1D                     	;# 
   469  0E1E                     	;# 
   470  0E1F                     	;# 
   471  0E20                     	;# 
   472  0E21                     	;# 
   473  0E22                     	;# 
   474  0E23                     	;# 
   475  0E24                     	;# 
   476  0E25                     	;# 
   477  0E26                     	;# 
   478  0E27                     	;# 
   479  0E28                     	;# 
   480  0E29                     	;# 
   481  0E2A                     	;# 
   482  0E2B                     	;# 
   483  0E2C                     	;# 
   484  0E2D                     	;# 
   485  0E2E                     	;# 
   486  0E2F                     	;# 
   487  0E30                     	;# 
   488  0E31                     	;# 
   489  0E32                     	;# 
   490  0E33                     	;# 
   491  0E34                     	;# 
   492  0E35                     	;# 
   493  0E36                     	;# 
   494  0E37                     	;# 
   495  0E8F                     	;# 
   496  0E90                     	;# 
   497  0E91                     	;# 
   498  0E92                     	;# 
   499  0E93                     	;# 
   500  0E94                     	;# 
   501  0E95                     	;# 
   502  0E96                     	;# 
   503  0E97                     	;# 
   504  0E9C                     	;# 
   505  0E9D                     	;# 
   506  0E9E                     	;# 
   507  0EA1                     	;# 
   508  0EA2                     	;# 
   509  0EA3                     	;# 
   510  0EA4                     	;# 
   511  0EA5                     	;# 
   512  0EA9                     	;# 
   513  0EAA                     	;# 
   514  0EAB                     	;# 
   515  0EAC                     	;# 
   516  0EB1                     	;# 
   517  0EB2                     	;# 
   518  0EB3                     	;# 
   519  0EB8                     	;# 
   520  0EB9                     	;# 
   521  0EBA                     	;# 
   522  0EBB                     	;# 
   523  0EBC                     	;# 
   524  0EBD                     	;# 
   525  0EBE                     	;# 
   526  0EC3                     	;# 
   527  0EC5                     	;# 
   528  0EC6                     	;# 
   529  0EC7                     	;# 
   530  0EC8                     	;# 
   531  0EC9                     	;# 
   532  0ECA                     	;# 
   533  0ECB                     	;# 
   534  0ECC                     	;# 
   535  0F10                     	;# 
   536  0F11                     	;# 
   537  0F12                     	;# 
   538  0F13                     	;# 
   539  0F14                     	;# 
   540  0F15                     	;# 
   541  0F16                     	;# 
   542  0F17                     	;# 
   543  0F18                     	;# 
   544  0F19                     	;# 
   545  0F1A                     	;# 
   546  0F1B                     	;# 
   547  0F1C                     	;# 
   548  0F1D                     	;# 
   549  0F1E                     	;# 
   550  0F1F                     	;# 
   551  0F20                     	;# 
   552  0F21                     	;# 
   553  0F22                     	;# 
   554  0F23                     	;# 
   555  0F24                     	;# 
   556  0F25                     	;# 
   557  0F26                     	;# 
   558  0F27                     	;# 
   559  0F38                     	;# 
   560  0F39                     	;# 
   561  0F3A                     	;# 
   562  0F3B                     	;# 
   563  0F3C                     	;# 
   564  0F3D                     	;# 
   565  0F3E                     	;# 
   566  0F3F                     	;# 
   567  0F40                     	;# 
   568  0F41                     	;# 
   569  0F43                     	;# 
   570  0F44                     	;# 
   571  0F45                     	;# 
   572  0F46                     	;# 
   573  0F47                     	;# 
   574  0F48                     	;# 
   575  0F49                     	;# 
   576  0F4A                     	;# 
   577  0F4B                     	;# 
   578  0F4C                     	;# 
   579  0F4E                     	;# 
   580  0F4F                     	;# 
   581  0F50                     	;# 
   582  0F51                     	;# 
   583  0F52                     	;# 
   584  0F53                     	;# 
   585  0F54                     	;# 
   586  0F55                     	;# 
   587  0F56                     	;# 
   588  0F57                     	;# 
   589  0F65                     	;# 
   590  0F68                     	;# 
   591  0F69                     	;# 
   592  0F6A                     	;# 
   593  0F6B                     	;# 
   594  0FE4                     	;# 
   595  0FE5                     	;# 
   596  0FE6                     	;# 
   597  0FE7                     	;# 
   598  0FE8                     	;# 
   599  0FE9                     	;# 
   600  0FEA                     	;# 
   601  0FEB                     	;# 
   602  0FED                     	;# 
   603  0FEE                     	;# 
   604  0FEF                     	;# 
   605  0000                     	;# 
   606  0001                     	;# 
   607  0002                     	;# 
   608  0003                     	;# 
   609  0004                     	;# 
   610  0005                     	;# 
   611  0006                     	;# 
   612  0007                     	;# 
   613  0008                     	;# 
   614  0009                     	;# 
   615  000A                     	;# 
   616  000B                     	;# 
   617  000C                     	;# 
   618  000D                     	;# 
   619  000E                     	;# 
   620  0010                     	;# 
   621  0011                     	;# 
   622  0012                     	;# 
   623  0013                     	;# 
   624  0016                     	;# 
   625  0017                     	;# 
   626  0018                     	;# 
   627  001C                     	;# 
   628  001C                     	;# 
   629  001D                     	;# 
   630  001D                     	;# 
   631  001E                     	;# 
   632  001F                     	;# 
   633  008C                     	;# 
   634  008C                     	;# 
   635  008D                     	;# 
   636  008E                     	;# 
   637  008E                     	;# 
   638  008F                     	;# 
   639  0090                     	;# 
   640  0090                     	;# 
   641  0091                     	;# 
   642  0093                     	;# 
   643  0094                     	;# 
   644  0095                     	;# 
   645  0096                     	;# 
   646  0097                     	;# 
   647  0098                     	;# 
   648  0099                     	;# 
   649  009A                     	;# 
   650  009B                     	;# 
   651  009C                     	;# 
   652  009D                     	;# 
   653  009E                     	;# 
   654  010C                     	;# 
   655  010D                     	;# 
   656  010E                     	;# 
   657  010E                     	;# 
   658  010F                     	;# 
   659  0110                     	;# 
   660  0110                     	;# 
   661  0111                     	;# 
   662  0112                     	;# 
   663  0112                     	;# 
   664  0113                     	;# 
   665  0114                     	;# 
   666  0114                     	;# 
   667  0115                     	;# 
   668  0116                     	;# 
   669  0116                     	;# 
   670  0117                     	;# 
   671  0119                     	;# 
   672  0119                     	;# 
   673  0119                     	;# 
   674  011A                     	;# 
   675  011A                     	;# 
   676  011A                     	;# 
   677  011B                     	;# 
   678  011B                     	;# 
   679  011B                     	;# 
   680  011B                     	;# 
   681  011B                     	;# 
   682  011C                     	;# 
   683  011C                     	;# 
   684  011C                     	;# 
   685  011D                     	;# 
   686  011D                     	;# 
   687  011D                     	;# 
   688  011E                     	;# 
   689  011E                     	;# 
   690  011E                     	;# 
   691  011F                     	;# 
   692  011F                     	;# 
   693  011F                     	;# 
   694  011F                     	;# 
   695  011F                     	;# 
   696  018C                     	;# 
   697  018D                     	;# 
   698  018E                     	;# 
   699  018F                     	;# 
   700  0190                     	;# 
   701  0191                     	;# 
   702  0192                     	;# 
   703  0196                     	;# 
   704  0197                     	;# 
   705  0198                     	;# 
   706  0199                     	;# 
   707  019A                     	;# 
   708  019B                     	;# 
   709  019C                     	;# 
   710  020C                     	;# 
   711  020C                     	;# 
   712  020D                     	;# 
   713  020E                     	;# 
   714  020F                     	;# 
   715  020F                     	;# 
   716  0210                     	;# 
   717  0210                     	;# 
   718  0211                     	;# 
   719  0211                     	;# 
   720  0212                     	;# 
   721  0212                     	;# 
   722  0213                     	;# 
   723  0214                     	;# 
   724  0215                     	;# 
   725  0215                     	;# 
   726  0216                     	;# 
   727  0216                     	;# 
   728  0217                     	;# 
   729  0217                     	;# 
   730  0218                     	;# 
   731  0218                     	;# 
   732  0219                     	;# 
   733  021A                     	;# 
   734  021B                     	;# 
   735  021B                     	;# 
   736  021C                     	;# 
   737  021C                     	;# 
   738  021D                     	;# 
   739  021D                     	;# 
   740  021E                     	;# 
   741  021F                     	;# 
   742  028C                     	;# 
   743  028C                     	;# 
   744  028D                     	;# 
   745  028D                     	;# 
   746  028E                     	;# 
   747  028F                     	;# 
   748  0290                     	;# 
   749  0290                     	;# 
   750  0291                     	;# 
   751  0292                     	;# 
   752  0292                     	;# 
   753  0293                     	;# 
   754  0293                     	;# 
   755  0294                     	;# 
   756  0295                     	;# 
   757  0296                     	;# 
   758  0296                     	;# 
   759  0297                     	;# 
   760  0298                     	;# 
   761  0298                     	;# 
   762  0299                     	;# 
   763  0299                     	;# 
   764  029A                     	;# 
   765  029B                     	;# 
   766  029C                     	;# 
   767  029C                     	;# 
   768  029D                     	;# 
   769  030C                     	;# 
   770  030C                     	;# 
   771  030D                     	;# 
   772  030E                     	;# 
   773  030F                     	;# 
   774  0310                     	;# 
   775  0310                     	;# 
   776  0311                     	;# 
   777  0312                     	;# 
   778  0313                     	;# 
   779  0314                     	;# 
   780  0314                     	;# 
   781  0315                     	;# 
   782  0316                     	;# 
   783  0317                     	;# 
   784  0318                     	;# 
   785  0318                     	;# 
   786  0319                     	;# 
   787  031A                     	;# 
   788  031B                     	;# 
   789  031C                     	;# 
   790  031C                     	;# 
   791  031D                     	;# 
   792  031E                     	;# 
   793  031F                     	;# 
   794  038C                     	;# 
   795  038C                     	;# 
   796  038D                     	;# 
   797  038E                     	;# 
   798  0390                     	;# 
   799  0390                     	;# 
   800  0391                     	;# 
   801  0392                     	;# 
   802  040C                     	;# 
   803  040D                     	;# 
   804  040E                     	;# 
   805  040F                     	;# 
   806  0410                     	;# 
   807  0411                     	;# 
   808  0416                     	;# 
   809  0416                     	;# 
   810  0417                     	;# 
   811  0418                     	;# 
   812  0418                     	;# 
   813  0419                     	;# 
   814  041A                     	;# 
   815  041A                     	;# 
   816  041B                     	;# 
   817  041C                     	;# 
   818  041C                     	;# 
   819  041D                     	;# 
   820  041E                     	;# 
   821  041F                     	;# 
   822  048C                     	;# 
   823  048C                     	;# 
   824  048D                     	;# 
   825  048E                     	;# 
   826  048F                     	;# 
   827  048F                     	;# 
   828  0490                     	;# 
   829  0491                     	;# 
   830  0492                     	;# 
   831  0492                     	;# 
   832  0493                     	;# 
   833  0494                     	;# 
   834  0495                     	;# 
   835  0495                     	;# 
   836  0496                     	;# 
   837  0497                     	;# 
   838  0498                     	;# 
   839  0499                     	;# 
   840  049A                     	;# 
   841  049B                     	;# 
   842  049C                     	;# 
   843  049D                     	;# 
   844  050C                     	;# 
   845  050C                     	;# 
   846  050D                     	;# 
   847  050E                     	;# 
   848  050F                     	;# 
   849  050F                     	;# 
   850  0510                     	;# 
   851  0511                     	;# 
   852  0512                     	;# 
   853  0512                     	;# 
   854  0513                     	;# 
   855  0514                     	;# 
   856  0515                     	;# 
   857  0515                     	;# 
   858  0516                     	;# 
   859  0517                     	;# 
   860  0518                     	;# 
   861  0519                     	;# 
   862  051A                     	;# 
   863  051B                     	;# 
   864  051C                     	;# 
   865  051D                     	;# 
   866  058C                     	;# 
   867  058C                     	;# 
   868  058D                     	;# 
   869  058E                     	;# 
   870  058F                     	;# 
   871  058F                     	;# 
   872  0590                     	;# 
   873  0591                     	;# 
   874  0592                     	;# 
   875  0593                     	;# 
   876  060C                     	;# 
   877  060D                     	;# 
   878  060E                     	;# 
   879  060F                     	;# 
   880  0610                     	;# 
   881  0611                     	;# 
   882  0612                     	;# 
   883  0613                     	;# 
   884  0614                     	;# 
   885  0616                     	;# 
   886  0617                     	;# 
   887  0618                     	;# 
   888  0619                     	;# 
   889  061A                     	;# 
   890  061B                     	;# 
   891  061C                     	;# 
   892  061D                     	;# 
   893  061E                     	;# 
   894  068C                     	;# 
   895  068D                     	;# 
   896  068E                     	;# 
   897  068F                     	;# 
   898  0690                     	;# 
   899  0691                     	;# 
   900  0692                     	;# 
   901  0693                     	;# 
   902  0694                     	;# 
   903  070C                     	;# 
   904  070D                     	;# 
   905  070E                     	;# 
   906  070F                     	;# 
   907  0710                     	;# 
   908  0711                     	;# 
   909  0712                     	;# 
   910  0713                     	;# 
   911  0714                     	;# 
   912  0716                     	;# 
   913  0717                     	;# 
   914  0718                     	;# 
   915  0719                     	;# 
   916  071A                     	;# 
   917  071B                     	;# 
   918  071C                     	;# 
   919  071D                     	;# 
   920  071E                     	;# 
   921  0796                     	;# 
   922  0797                     	;# 
   923  0798                     	;# 
   924  0799                     	;# 
   925  079A                     	;# 
   926  079B                     	;# 
   927  080C                     	;# 
   928  080D                     	;# 
   929  080E                     	;# 
   930  080F                     	;# 
   931  0810                     	;# 
   932  0811                     	;# 
   933  0813                     	;# 
   934  0814                     	;# 
   935  081A                     	;# 
   936  081B                     	;# 
   937  081C                     	;# 
   938  081D                     	;# 
   939  081E                     	;# 
   940  081F                     	;# 
   941  088C                     	;# 
   942  088D                     	;# 
   943  088E                     	;# 
   944  088F                     	;# 
   945  0890                     	;# 
   946  0891                     	;# 
   947  0892                     	;# 
   948  0893                     	;# 
   949  0895                     	;# 
   950  0896                     	;# 
   951  0897                     	;# 
   952  0898                     	;# 
   953  0899                     	;# 
   954  089A                     	;# 
   955  089B                     	;# 
   956  090C                     	;# 
   957  090E                     	;# 
   958  090F                     	;# 
   959  091F                     	;# 
   960  091F                     	;# 
   961  098F                     	;# 
   962  098F                     	;# 
   963  0990                     	;# 
   964  0991                     	;# 
   965  0992                     	;# 
   966  0993                     	;# 
   967  0994                     	;# 
   968  0995                     	;# 
   969  0996                     	;# 
   970  0997                     	;# 
   971  0E0F                     	;# 
   972  0E10                     	;# 
   973  0E11                     	;# 
   974  0E12                     	;# 
   975  0E13                     	;# 
   976  0E14                     	;# 
   977  0E15                     	;# 
   978  0E16                     	;# 
   979  0E17                     	;# 
   980  0E18                     	;# 
   981  0E19                     	;# 
   982  0E1A                     	;# 
   983  0E1B                     	;# 
   984  0E1C                     	;# 
   985  0E1D                     	;# 
   986  0E1E                     	;# 
   987  0E1F                     	;# 
   988  0E20                     	;# 
   989  0E21                     	;# 
   990  0E22                     	;# 
   991  0E23                     	;# 
   992  0E24                     	;# 
   993  0E25                     	;# 
   994  0E26                     	;# 
   995  0E27                     	;# 
   996  0E28                     	;# 
   997  0E29                     	;# 
   998  0E2A                     	;# 
   999  0E2B                     	;# 
  1000  0E2C                     	;# 
  1001  0E2D                     	;# 
  1002  0E2E                     	;# 
  1003  0E2F                     	;# 
  1004  0E30                     	;# 
  1005  0E31                     	;# 
  1006  0E32                     	;# 
  1007  0E33                     	;# 
  1008  0E34                     	;# 
  1009  0E35                     	;# 
  1010  0E36                     	;# 
  1011  0E37                     	;# 
  1012  0E8F                     	;# 
  1013  0E90                     	;# 
  1014  0E91                     	;# 
  1015  0E92                     	;# 
  1016  0E93                     	;# 
  1017  0E94                     	;# 
  1018  0E95                     	;# 
  1019  0E96                     	;# 
  1020  0E97                     	;# 
  1021  0E9C                     	;# 
  1022  0E9D                     	;# 
  1023  0E9E                     	;# 
  1024  0EA1                     	;# 
  1025  0EA2                     	;# 
  1026  0EA3                     	;# 
  1027  0EA4                     	;# 
  1028  0EA5                     	;# 
  1029  0EA9                     	;# 
  1030  0EAA                     	;# 
  1031  0EAB                     	;# 
  1032  0EAC                     	;# 
  1033  0EB1                     	;# 
  1034  0EB2                     	;# 
  1035  0EB3                     	;# 
  1036  0EB8                     	;# 
  1037  0EB9                     	;# 
  1038  0EBA                     	;# 
  1039  0EBB                     	;# 
  1040  0EBC                     	;# 
  1041  0EBD                     	;# 
  1042  0EBE                     	;# 
  1043  0EC3                     	;# 
  1044  0EC5                     	;# 
  1045  0EC6                     	;# 
  1046  0EC7                     	;# 
  1047  0EC8                     	;# 
  1048  0EC9                     	;# 
  1049  0ECA                     	;# 
  1050  0ECB                     	;# 
  1051  0ECC                     	;# 
  1052  0F10                     	;# 
  1053  0F11                     	;# 
  1054  0F12                     	;# 
  1055  0F13                     	;# 
  1056  0F14                     	;# 
  1057  0F15                     	;# 
  1058  0F16                     	;# 
  1059  0F17                     	;# 
  1060  0F18                     	;# 
  1061  0F19                     	;# 
  1062  0F1A                     	;# 
  1063  0F1B                     	;# 
  1064  0F1C                     	;# 
  1065  0F1D                     	;# 
  1066  0F1E                     	;# 
  1067  0F1F                     	;# 
  1068  0F20                     	;# 
  1069  0F21                     	;# 
  1070  0F22                     	;# 
  1071  0F23                     	;# 
  1072  0F24                     	;# 
  1073  0F25                     	;# 
  1074  0F26                     	;# 
  1075  0F27                     	;# 
  1076  0F38                     	;# 
  1077  0F39                     	;# 
  1078  0F3A                     	;# 
  1079  0F3B                     	;# 
  1080  0F3C                     	;# 
  1081  0F3D                     	;# 
  1082  0F3E                     	;# 
  1083  0F3F                     	;# 
  1084  0F40                     	;# 
  1085  0F41                     	;# 
  1086  0F43                     	;# 
  1087  0F44                     	;# 
  1088  0F45                     	;# 
  1089  0F46                     	;# 
  1090  0F47                     	;# 
  1091  0F48                     	;# 
  1092  0F49                     	;# 
  1093  0F4A                     	;# 
  1094  0F4B                     	;# 
  1095  0F4C                     	;# 
  1096  0F4E                     	;# 
  1097  0F4F                     	;# 
  1098  0F50                     	;# 
  1099  0F51                     	;# 
  1100  0F52                     	;# 
  1101  0F53                     	;# 
  1102  0F54                     	;# 
  1103  0F55                     	;# 
  1104  0F56                     	;# 
  1105  0F57                     	;# 
  1106  0F65                     	;# 
  1107  0F68                     	;# 
  1108  0F69                     	;# 
  1109  0F6A                     	;# 
  1110  0F6B                     	;# 
  1111  0FE4                     	;# 
  1112  0FE5                     	;# 
  1113  0FE6                     	;# 
  1114  0FE7                     	;# 
  1115  0FE8                     	;# 
  1116  0FE9                     	;# 
  1117  0FEA                     	;# 
  1118  0FEB                     	;# 
  1119  0FED                     	;# 
  1120  0FEE                     	;# 
  1121  0FEF                     	;# 
  1122  0000                     	;# 
  1123  0001                     	;# 
  1124  0002                     	;# 
  1125  0003                     	;# 
  1126  0004                     	;# 
  1127  0005                     	;# 
  1128  0006                     	;# 
  1129  0007                     	;# 
  1130  0008                     	;# 
  1131  0009                     	;# 
  1132  000A                     	;# 
  1133  000B                     	;# 
  1134  000C                     	;# 
  1135  000D                     	;# 
  1136  000E                     	;# 
  1137  0010                     	;# 
  1138  0011                     	;# 
  1139  0012                     	;# 
  1140  0013                     	;# 
  1141  0016                     	;# 
  1142  0017                     	;# 
  1143  0018                     	;# 
  1144  001C                     	;# 
  1145  001C                     	;# 
  1146  001D                     	;# 
  1147  001D                     	;# 
  1148  001E                     	;# 
  1149  001F                     	;# 
  1150  008C                     	;# 
  1151  008C                     	;# 
  1152  008D                     	;# 
  1153  008E                     	;# 
  1154  008E                     	;# 
  1155  008F                     	;# 
  1156  0090                     	;# 
  1157  0090                     	;# 
  1158  0091                     	;# 
  1159  0093                     	;# 
  1160  0094                     	;# 
  1161  0095                     	;# 
  1162  0096                     	;# 
  1163  0097                     	;# 
  1164  0098                     	;# 
  1165  0099                     	;# 
  1166  009A                     	;# 
  1167  009B                     	;# 
  1168  009C                     	;# 
  1169  009D                     	;# 
  1170  009E                     	;# 
  1171  010C                     	;# 
  1172  010D                     	;# 
  1173  010E                     	;# 
  1174  010E                     	;# 
  1175  010F                     	;# 
  1176  0110                     	;# 
  1177  0110                     	;# 
  1178  0111                     	;# 
  1179  0112                     	;# 
  1180  0112                     	;# 
  1181  0113                     	;# 
  1182  0114                     	;# 
  1183  0114                     	;# 
  1184  0115                     	;# 
  1185  0116                     	;# 
  1186  0116                     	;# 
  1187  0117                     	;# 
  1188  0119                     	;# 
  1189  0119                     	;# 
  1190  0119                     	;# 
  1191  011A                     	;# 
  1192  011A                     	;# 
  1193  011A                     	;# 
  1194  011B                     	;# 
  1195  011B                     	;# 
  1196  011B                     	;# 
  1197  011B                     	;# 
  1198  011B                     	;# 
  1199  011C                     	;# 
  1200  011C                     	;# 
  1201  011C                     	;# 
  1202  011D                     	;# 
  1203  011D                     	;# 
  1204  011D                     	;# 
  1205  011E                     	;# 
  1206  011E                     	;# 
  1207  011E                     	;# 
  1208  011F                     	;# 
  1209  011F                     	;# 
  1210  011F                     	;# 
  1211  011F                     	;# 
  1212  011F                     	;# 
  1213  018C                     	;# 
  1214  018D                     	;# 
  1215  018E                     	;# 
  1216  018F                     	;# 
  1217  0190                     	;# 
  1218  0191                     	;# 
  1219  0192                     	;# 
  1220  0196                     	;# 
  1221  0197                     	;# 
  1222  0198                     	;# 
  1223  0199                     	;# 
  1224  019A                     	;# 
  1225  019B                     	;# 
  1226  019C                     	;# 
  1227  020C                     	;# 
  1228  020C                     	;# 
  1229  020D                     	;# 
  1230  020E                     	;# 
  1231  020F                     	;# 
  1232  020F                     	;# 
  1233  0210                     	;# 
  1234  0210                     	;# 
  1235  0211                     	;# 
  1236  0211                     	;# 
  1237  0212                     	;# 
  1238  0212                     	;# 
  1239  0213                     	;# 
  1240  0214                     	;# 
  1241  0215                     	;# 
  1242  0215                     	;# 
  1243  0216                     	;# 
  1244  0216                     	;# 
  1245  0217                     	;# 
  1246  0217                     	;# 
  1247  0218                     	;# 
  1248  0218                     	;# 
  1249  0219                     	;# 
  1250  021A                     	;# 
  1251  021B                     	;# 
  1252  021B                     	;# 
  1253  021C                     	;# 
  1254  021C                     	;# 
  1255  021D                     	;# 
  1256  021D                     	;# 
  1257  021E                     	;# 
  1258  021F                     	;# 
  1259  028C                     	;# 
  1260  028C                     	;# 
  1261  028D                     	;# 
  1262  028D                     	;# 
  1263  028E                     	;# 
  1264  028F                     	;# 
  1265  0290                     	;# 
  1266  0290                     	;# 
  1267  0291                     	;# 
  1268  0292                     	;# 
  1269  0292                     	;# 
  1270  0293                     	;# 
  1271  0293                     	;# 
  1272  0294                     	;# 
  1273  0295                     	;# 
  1274  0296                     	;# 
  1275  0296                     	;# 
  1276  0297                     	;# 
  1277  0298                     	;# 
  1278  0298                     	;# 
  1279  0299                     	;# 
  1280  0299                     	;# 
  1281  029A                     	;# 
  1282  029B                     	;# 
  1283  029C                     	;# 
  1284  029C                     	;# 
  1285  029D                     	;# 
  1286  030C                     	;# 
  1287  030C                     	;# 
  1288  030D                     	;# 
  1289  030E                     	;# 
  1290  030F                     	;# 
  1291  0310                     	;# 
  1292  0310                     	;# 
  1293  0311                     	;# 
  1294  0312                     	;# 
  1295  0313                     	;# 
  1296  0314                     	;# 
  1297  0314                     	;# 
  1298  0315                     	;# 
  1299  0316                     	;# 
  1300  0317                     	;# 
  1301  0318                     	;# 
  1302  0318                     	;# 
  1303  0319                     	;# 
  1304  031A                     	;# 
  1305  031B                     	;# 
  1306  031C                     	;# 
  1307  031C                     	;# 
  1308  031D                     	;# 
  1309  031E                     	;# 
  1310  031F                     	;# 
  1311  038C                     	;# 
  1312  038C                     	;# 
  1313  038D                     	;# 
  1314  038E                     	;# 
  1315  0390                     	;# 
  1316  0390                     	;# 
  1317  0391                     	;# 
  1318  0392                     	;# 
  1319  040C                     	;# 
  1320  040D                     	;# 
  1321  040E                     	;# 
  1322  040F                     	;# 
  1323  0410                     	;# 
  1324  0411                     	;# 
  1325  0416                     	;# 
  1326  0416                     	;# 
  1327  0417                     	;# 
  1328  0418                     	;# 
  1329  0418                     	;# 
  1330  0419                     	;# 
  1331  041A                     	;# 
  1332  041A                     	;# 
  1333  041B                     	;# 
  1334  041C                     	;# 
  1335  041C                     	;# 
  1336  041D                     	;# 
  1337  041E                     	;# 
  1338  041F                     	;# 
  1339  048C                     	;# 
  1340  048C                     	;# 
  1341  048D                     	;# 
  1342  048E                     	;# 
  1343  048F                     	;# 
  1344  048F                     	;# 
  1345  0490                     	;# 
  1346  0491                     	;# 
  1347  0492                     	;# 
  1348  0492                     	;# 
  1349  0493                     	;# 
  1350  0494                     	;# 
  1351  0495                     	;# 
  1352  0495                     	;# 
  1353  0496                     	;# 
  1354  0497                     	;# 
  1355  0498                     	;# 
  1356  0499                     	;# 
  1357  049A                     	;# 
  1358  049B                     	;# 
  1359  049C                     	;# 
  1360  049D                     	;# 
  1361  050C                     	;# 
  1362  050C                     	;# 
  1363  050D                     	;# 
  1364  050E                     	;# 
  1365  050F                     	;# 
  1366  050F                     	;# 
  1367  0510                     	;# 
  1368  0511                     	;# 
  1369  0512                     	;# 
  1370  0512                     	;# 
  1371  0513                     	;# 
  1372  0514                     	;# 
  1373  0515                     	;# 
  1374  0515                     	;# 
  1375  0516                     	;# 
  1376  0517                     	;# 
  1377  0518                     	;# 
  1378  0519                     	;# 
  1379  051A                     	;# 
  1380  051B                     	;# 
  1381  051C                     	;# 
  1382  051D                     	;# 
  1383  058C                     	;# 
  1384  058C                     	;# 
  1385  058D                     	;# 
  1386  058E                     	;# 
  1387  058F                     	;# 
  1388  058F                     	;# 
  1389  0590                     	;# 
  1390  0591                     	;# 
  1391  0592                     	;# 
  1392  0593                     	;# 
  1393  060C                     	;# 
  1394  060D                     	;# 
  1395  060E                     	;# 
  1396  060F                     	;# 
  1397  0610                     	;# 
  1398  0611                     	;# 
  1399  0612                     	;# 
  1400  0613                     	;# 
  1401  0614                     	;# 
  1402  0616                     	;# 
  1403  0617                     	;# 
  1404  0618                     	;# 
  1405  0619                     	;# 
  1406  061A                     	;# 
  1407  061B                     	;# 
  1408  061C                     	;# 
  1409  061D                     	;# 
  1410  061E                     	;# 
  1411  068C                     	;# 
  1412  068D                     	;# 
  1413  068E                     	;# 
  1414  068F                     	;# 
  1415  0690                     	;# 
  1416  0691                     	;# 
  1417  0692                     	;# 
  1418  0693                     	;# 
  1419  0694                     	;# 
  1420  070C                     	;# 
  1421  070D                     	;# 
  1422  070E                     	;# 
  1423  070F                     	;# 
  1424  0710                     	;# 
  1425  0711                     	;# 
  1426  0712                     	;# 
  1427  0713                     	;# 
  1428  0714                     	;# 
  1429  0716                     	;# 
  1430  0717                     	;# 
  1431  0718                     	;# 
  1432  0719                     	;# 
  1433  071A                     	;# 
  1434  071B                     	;# 
  1435  071C                     	;# 
  1436  071D                     	;# 
  1437  071E                     	;# 
  1438  0796                     	;# 
  1439  0797                     	;# 
  1440  0798                     	;# 
  1441  0799                     	;# 
  1442  079A                     	;# 
  1443  079B                     	;# 
  1444  080C                     	;# 
  1445  080D                     	;# 
  1446  080E                     	;# 
  1447  080F                     	;# 
  1448  0810                     	;# 
  1449  0811                     	;# 
  1450  0813                     	;# 
  1451  0814                     	;# 
  1452  081A                     	;# 
  1453  081B                     	;# 
  1454  081C                     	;# 
  1455  081D                     	;# 
  1456  081E                     	;# 
  1457  081F                     	;# 
  1458  088C                     	;# 
  1459  088D                     	;# 
  1460  088E                     	;# 
  1461  088F                     	;# 
  1462  0890                     	;# 
  1463  0891                     	;# 
  1464  0892                     	;# 
  1465  0893                     	;# 
  1466  0895                     	;# 
  1467  0896                     	;# 
  1468  0897                     	;# 
  1469  0898                     	;# 
  1470  0899                     	;# 
  1471  089A                     	;# 
  1472  089B                     	;# 
  1473  090C                     	;# 
  1474  090E                     	;# 
  1475  090F                     	;# 
  1476  091F                     	;# 
  1477  091F                     	;# 
  1478  098F                     	;# 
  1479  098F                     	;# 
  1480  0990                     	;# 
  1481  0991                     	;# 
  1482  0992                     	;# 
  1483  0993                     	;# 
  1484  0994                     	;# 
  1485  0995                     	;# 
  1486  0996                     	;# 
  1487  0997                     	;# 
  1488  0E0F                     	;# 
  1489  0E10                     	;# 
  1490  0E11                     	;# 
  1491  0E12                     	;# 
  1492  0E13                     	;# 
  1493  0E14                     	;# 
  1494  0E15                     	;# 
  1495  0E16                     	;# 
  1496  0E17                     	;# 
  1497  0E18                     	;# 
  1498  0E19                     	;# 
  1499  0E1A                     	;# 
  1500  0E1B                     	;# 
  1501  0E1C                     	;# 
  1502  0E1D                     	;# 
  1503  0E1E                     	;# 
  1504  0E1F                     	;# 
  1505  0E20                     	;# 
  1506  0E21                     	;# 
  1507  0E22                     	;# 
  1508  0E23                     	;# 
  1509  0E24                     	;# 
  1510  0E25                     	;# 
  1511  0E26                     	;# 
  1512  0E27                     	;# 
  1513  0E28                     	;# 
  1514  0E29                     	;# 
  1515  0E2A                     	;# 
  1516  0E2B                     	;# 
  1517  0E2C                     	;# 
  1518  0E2D                     	;# 
  1519  0E2E                     	;# 
  1520  0E2F                     	;# 
  1521  0E30                     	;# 
  1522  0E31                     	;# 
  1523  0E32                     	;# 
  1524  0E33                     	;# 
  1525  0E34                     	;# 
  1526  0E35                     	;# 
  1527  0E36                     	;# 
  1528  0E37                     	;# 
  1529  0E8F                     	;# 
  1530  0E90                     	;# 
  1531  0E91                     	;# 
  1532  0E92                     	;# 
  1533  0E93                     	;# 
  1534  0E94                     	;# 
  1535  0E95                     	;# 
  1536  0E96                     	;# 
  1537  0E97                     	;# 
  1538  0E9C                     	;# 
  1539  0E9D                     	;# 
  1540  0E9E                     	;# 
  1541  0EA1                     	;# 
  1542  0EA2                     	;# 
  1543  0EA3                     	;# 
  1544  0EA4                     	;# 
  1545  0EA5                     	;# 
  1546  0EA9                     	;# 
  1547  0EAA                     	;# 
  1548  0EAB                     	;# 
  1549  0EAC                     	;# 
  1550  0EB1                     	;# 
  1551  0EB2                     	;# 
  1552  0EB3                     	;# 
  1553  0EB8                     	;# 
  1554  0EB9                     	;# 
  1555  0EBA                     	;# 
  1556  0EBB                     	;# 
  1557  0EBC                     	;# 
  1558  0EBD                     	;# 
  1559  0EBE                     	;# 
  1560  0EC3                     	;# 
  1561  0EC5                     	;# 
  1562  0EC6                     	;# 
  1563  0EC7                     	;# 
  1564  0EC8                     	;# 
  1565  0EC9                     	;# 
  1566  0ECA                     	;# 
  1567  0ECB                     	;# 
  1568  0ECC                     	;# 
  1569  0F10                     	;# 
  1570  0F11                     	;# 
  1571  0F12                     	;# 
  1572  0F13                     	;# 
  1573  0F14                     	;# 
  1574  0F15                     	;# 
  1575  0F16                     	;# 
  1576  0F17                     	;# 
  1577  0F18                     	;# 
  1578  0F19                     	;# 
  1579  0F1A                     	;# 
  1580  0F1B                     	;# 
  1581  0F1C                     	;# 
  1582  0F1D                     	;# 
  1583  0F1E                     	;# 
  1584  0F1F                     	;# 
  1585  0F20                     	;# 
  1586  0F21                     	;# 
  1587  0F22                     	;# 
  1588  0F23                     	;# 
  1589  0F24                     	;# 
  1590  0F25                     	;# 
  1591  0F26                     	;# 
  1592  0F27                     	;# 
  1593  0F38                     	;# 
  1594  0F39                     	;# 
  1595  0F3A                     	;# 
  1596  0F3B                     	;# 
  1597  0F3C                     	;# 
  1598  0F3D                     	;# 
  1599  0F3E                     	;# 
  1600  0F3F                     	;# 
  1601  0F40                     	;# 
  1602  0F41                     	;# 
  1603  0F43                     	;# 
  1604  0F44                     	;# 
  1605  0F45                     	;# 
  1606  0F46                     	;# 
  1607  0F47                     	;# 
  1608  0F48                     	;# 
  1609  0F49                     	;# 
  1610  0F4A                     	;# 
  1611  0F4B                     	;# 
  1612  0F4C                     	;# 
  1613  0F4E                     	;# 
  1614  0F4F                     	;# 
  1615  0F50                     	;# 
  1616  0F51                     	;# 
  1617  0F52                     	;# 
  1618  0F53                     	;# 
  1619  0F54                     	;# 
  1620  0F55                     	;# 
  1621  0F56                     	;# 
  1622  0F57                     	;# 
  1623  0F65                     	;# 
  1624  0F68                     	;# 
  1625  0F69                     	;# 
  1626  0F6A                     	;# 
  1627  0F6B                     	;# 
  1628  0FE4                     	;# 
  1629  0FE5                     	;# 
  1630  0FE6                     	;# 
  1631  0FE7                     	;# 
  1632  0FE8                     	;# 
  1633  0FE9                     	;# 
  1634  0FEA                     	;# 
  1635  0FEB                     	;# 
  1636  0FED                     	;# 
  1637  0FEE                     	;# 
  1638  0FEF                     	;# 
  1639  0000                     	;# 
  1640  0001                     	;# 
  1641  0002                     	;# 
  1642  0003                     	;# 
  1643  0004                     	;# 
  1644  0005                     	;# 
  1645  0006                     	;# 
  1646  0007                     	;# 
  1647  0008                     	;# 
  1648  0009                     	;# 
  1649  000A                     	;# 
  1650  000B                     	;# 
  1651  000C                     	;# 
  1652  000D                     	;# 
  1653  000E                     	;# 
  1654  0010                     	;# 
  1655  0011                     	;# 
  1656  0012                     	;# 
  1657  0013                     	;# 
  1658  0016                     	;# 
  1659  0017                     	;# 
  1660  0018                     	;# 
  1661  001C                     	;# 
  1662  001C                     	;# 
  1663  001D                     	;# 
  1664  001D                     	;# 
  1665  001E                     	;# 
  1666  001F                     	;# 
  1667  008C                     	;# 
  1668  008C                     	;# 
  1669  008D                     	;# 
  1670  008E                     	;# 
  1671  008E                     	;# 
  1672  008F                     	;# 
  1673  0090                     	;# 
  1674  0090                     	;# 
  1675  0091                     	;# 
  1676  0093                     	;# 
  1677  0094                     	;# 
  1678  0095                     	;# 
  1679  0096                     	;# 
  1680  0097                     	;# 
  1681  0098                     	;# 
  1682  0099                     	;# 
  1683  009A                     	;# 
  1684  009B                     	;# 
  1685  009C                     	;# 
  1686  009D                     	;# 
  1687  009E                     	;# 
  1688  010C                     	;# 
  1689  010D                     	;# 
  1690  010E                     	;# 
  1691  010E                     	;# 
  1692  010F                     	;# 
  1693  0110                     	;# 
  1694  0110                     	;# 
  1695  0111                     	;# 
  1696  0112                     	;# 
  1697  0112                     	;# 
  1698  0113                     	;# 
  1699  0114                     	;# 
  1700  0114                     	;# 
  1701  0115                     	;# 
  1702  0116                     	;# 
  1703  0116                     	;# 
  1704  0117                     	;# 
  1705  0119                     	;# 
  1706  0119                     	;# 
  1707  0119                     	;# 
  1708  011A                     	;# 
  1709  011A                     	;# 
  1710  011A                     	;# 
  1711  011B                     	;# 
  1712  011B                     	;# 
  1713  011B                     	;# 
  1714  011B                     	;# 
  1715  011B                     	;# 
  1716  011C                     	;# 
  1717  011C                     	;# 
  1718  011C                     	;# 
  1719  011D                     	;# 
  1720  011D                     	;# 
  1721  011D                     	;# 
  1722  011E                     	;# 
  1723  011E                     	;# 
  1724  011E                     	;# 
  1725  011F                     	;# 
  1726  011F                     	;# 
  1727  011F                     	;# 
  1728  011F                     	;# 
  1729  011F                     	;# 
  1730  018C                     	;# 
  1731  018D                     	;# 
  1732  018E                     	;# 
  1733  018F                     	;# 
  1734  0190                     	;# 
  1735  0191                     	;# 
  1736  0192                     	;# 
  1737  0196                     	;# 
  1738  0197                     	;# 
  1739  0198                     	;# 
  1740  0199                     	;# 
  1741  019A                     	;# 
  1742  019B                     	;# 
  1743  019C                     	;# 
  1744  020C                     	;# 
  1745  020C                     	;# 
  1746  020D                     	;# 
  1747  020E                     	;# 
  1748  020F                     	;# 
  1749  020F                     	;# 
  1750  0210                     	;# 
  1751  0210                     	;# 
  1752  0211                     	;# 
  1753  0211                     	;# 
  1754  0212                     	;# 
  1755  0212                     	;# 
  1756  0213                     	;# 
  1757  0214                     	;# 
  1758  0215                     	;# 
  1759  0215                     	;# 
  1760  0216                     	;# 
  1761  0216                     	;# 
  1762  0217                     	;# 
  1763  0217                     	;# 
  1764  0218                     	;# 
  1765  0218                     	;# 
  1766  0219                     	;# 
  1767  021A                     	;# 
  1768  021B                     	;# 
  1769  021B                     	;# 
  1770  021C                     	;# 
  1771  021C                     	;# 
  1772  021D                     	;# 
  1773  021D                     	;# 
  1774  021E                     	;# 
  1775  021F                     	;# 
  1776  028C                     	;# 
  1777  028C                     	;# 
  1778  028D                     	;# 
  1779  028D                     	;# 
  1780  028E                     	;# 
  1781  028F                     	;# 
  1782  0290                     	;# 
  1783  0290                     	;# 
  1784  0291                     	;# 
  1785  0292                     	;# 
  1786  0292                     	;# 
  1787  0293                     	;# 
  1788  0293                     	;# 
  1789  0294                     	;# 
  1790  0295                     	;# 
  1791  0296                     	;# 
  1792  0296                     	;# 
  1793  0297                     	;# 
  1794  0298                     	;# 
  1795  0298                     	;# 
  1796  0299                     	;# 
  1797  0299                     	;# 
  1798  029A                     	;# 
  1799  029B                     	;# 
  1800  029C                     	;# 
  1801  029C                     	;# 
  1802  029D                     	;# 
  1803  030C                     	;# 
  1804  030C                     	;# 
  1805  030D                     	;# 
  1806  030E                     	;# 
  1807  030F                     	;# 
  1808  0310                     	;# 
  1809  0310                     	;# 
  1810  0311                     	;# 
  1811  0312                     	;# 
  1812  0313                     	;# 
  1813  0314                     	;# 
  1814  0314                     	;# 
  1815  0315                     	;# 
  1816  0316                     	;# 
  1817  0317                     	;# 
  1818  0318                     	;# 
  1819  0318                     	;# 
  1820  0319                     	;# 
  1821  031A                     	;# 
  1822  031B                     	;# 
  1823  031C                     	;# 
  1824  031C                     	;# 
  1825  031D                     	;# 
  1826  031E                     	;# 
  1827  031F                     	;# 
  1828  038C                     	;# 
  1829  038C                     	;# 
  1830  038D                     	;# 
  1831  038E                     	;# 
  1832  0390                     	;# 
  1833  0390                     	;# 
  1834  0391                     	;# 
  1835  0392                     	;# 
  1836  040C                     	;# 
  1837  040D                     	;# 
  1838  040E                     	;# 
  1839  040F                     	;# 
  1840  0410                     	;# 
  1841  0411                     	;# 
  1842  0416                     	;# 
  1843  0416                     	;# 
  1844  0417                     	;# 
  1845  0418                     	;# 
  1846  0418                     	;# 
  1847  0419                     	;# 
  1848  041A                     	;# 
  1849  041A                     	;# 
  1850  041B                     	;# 
  1851  041C                     	;# 
  1852  041C                     	;# 
  1853  041D                     	;# 
  1854  041E                     	;# 
  1855  041F                     	;# 
  1856  048C                     	;# 
  1857  048C                     	;# 
  1858  048D                     	;# 
  1859  048E                     	;# 
  1860  048F                     	;# 
  1861  048F                     	;# 
  1862  0490                     	;# 
  1863  0491                     	;# 
  1864  0492                     	;# 
  1865  0492                     	;# 
  1866  0493                     	;# 
  1867  0494                     	;# 
  1868  0495                     	;# 
  1869  0495                     	;# 
  1870  0496                     	;# 
  1871  0497                     	;# 
  1872  0498                     	;# 
  1873  0499                     	;# 
  1874  049A                     	;# 
  1875  049B                     	;# 
  1876  049C                     	;# 
  1877  049D                     	;# 
  1878  050C                     	;# 
  1879  050C                     	;# 
  1880  050D                     	;# 
  1881  050E                     	;# 
  1882  050F                     	;# 
  1883  050F                     	;# 
  1884  0510                     	;# 
  1885  0511                     	;# 
  1886  0512                     	;# 
  1887  0512                     	;# 
  1888  0513                     	;# 
  1889  0514                     	;# 
  1890  0515                     	;# 
  1891  0515                     	;# 
  1892  0516                     	;# 
  1893  0517                     	;# 
  1894  0518                     	;# 
  1895  0519                     	;# 
  1896  051A                     	;# 
  1897  051B                     	;# 
  1898  051C                     	;# 
  1899  051D                     	;# 
  1900  058C                     	;# 
  1901  058C                     	;# 
  1902  058D                     	;# 
  1903  058E                     	;# 
  1904  058F                     	;# 
  1905  058F                     	;# 
  1906  0590                     	;# 
  1907  0591                     	;# 
  1908  0592                     	;# 
  1909  0593                     	;# 
  1910  060C                     	;# 
  1911  060D                     	;# 
  1912  060E                     	;# 
  1913  060F                     	;# 
  1914  0610                     	;# 
  1915  0611                     	;# 
  1916  0612                     	;# 
  1917  0613                     	;# 
  1918  0614                     	;# 
  1919  0616                     	;# 
  1920  0617                     	;# 
  1921  0618                     	;# 
  1922  0619                     	;# 
  1923  061A                     	;# 
  1924  061B                     	;# 
  1925  061C                     	;# 
  1926  061D                     	;# 
  1927  061E                     	;# 
  1928  068C                     	;# 
  1929  068D                     	;# 
  1930  068E                     	;# 
  1931  068F                     	;# 
  1932  0690                     	;# 
  1933  0691                     	;# 
  1934  0692                     	;# 
  1935  0693                     	;# 
  1936  0694                     	;# 
  1937  070C                     	;# 
  1938  070D                     	;# 
  1939  070E                     	;# 
  1940  070F                     	;# 
  1941  0710                     	;# 
  1942  0711                     	;# 
  1943  0712                     	;# 
  1944  0713                     	;# 
  1945  0714                     	;# 
  1946  0716                     	;# 
  1947  0717                     	;# 
  1948  0718                     	;# 
  1949  0719                     	;# 
  1950  071A                     	;# 
  1951  071B                     	;# 
  1952  071C                     	;# 
  1953  071D                     	;# 
  1954  071E                     	;# 
  1955  0796                     	;# 
  1956  0797                     	;# 
  1957  0798                     	;# 
  1958  0799                     	;# 
  1959  079A                     	;# 
  1960  079B                     	;# 
  1961  080C                     	;# 
  1962  080D                     	;# 
  1963  080E                     	;# 
  1964  080F                     	;# 
  1965  0810                     	;# 
  1966  0811                     	;# 
  1967  0813                     	;# 
  1968  0814                     	;# 
  1969  081A                     	;# 
  1970  081B                     	;# 
  1971  081C                     	;# 
  1972  081D                     	;# 
  1973  081E                     	;# 
  1974  081F                     	;# 
  1975  088C                     	;# 
  1976  088D                     	;# 
  1977  088E                     	;# 
  1978  088F                     	;# 
  1979  0890                     	;# 
  1980  0891                     	;# 
  1981  0892                     	;# 
  1982  0893                     	;# 
  1983  0895                     	;# 
  1984  0896                     	;# 
  1985  0897                     	;# 
  1986  0898                     	;# 
  1987  0899                     	;# 
  1988  089A                     	;# 
  1989  089B                     	;# 
  1990  090C                     	;# 
  1991  090E                     	;# 
  1992  090F                     	;# 
  1993  091F                     	;# 
  1994  091F                     	;# 
  1995  098F                     	;# 
  1996  098F                     	;# 
  1997  0990                     	;# 
  1998  0991                     	;# 
  1999  0992                     	;# 
  2000  0993                     	;# 
  2001  0994                     	;# 
  2002  0995                     	;# 
  2003  0996                     	;# 
  2004  0997                     	;# 
  2005  0E0F                     	;# 
  2006  0E10                     	;# 
  2007  0E11                     	;# 
  2008  0E12                     	;# 
  2009  0E13                     	;# 
  2010  0E14                     	;# 
  2011  0E15                     	;# 
  2012  0E16                     	;# 
  2013  0E17                     	;# 
  2014  0E18                     	;# 
  2015  0E19                     	;# 
  2016  0E1A                     	;# 
  2017  0E1B                     	;# 
  2018  0E1C                     	;# 
  2019  0E1D                     	;# 
  2020  0E1E                     	;# 
  2021  0E1F                     	;# 
  2022  0E20                     	;# 
  2023  0E21                     	;# 
  2024  0E22                     	;# 
  2025  0E23                     	;# 
  2026  0E24                     	;# 
  2027  0E25                     	;# 
  2028  0E26                     	;# 
  2029  0E27                     	;# 
  2030  0E28                     	;# 
  2031  0E29                     	;# 
  2032  0E2A                     	;# 
  2033  0E2B                     	;# 
  2034  0E2C                     	;# 
  2035  0E2D                     	;# 
  2036  0E2E                     	;# 
  2037  0E2F                     	;# 
  2038  0E30                     	;# 
  2039  0E31                     	;# 
  2040  0E32                     	;# 
  2041  0E33                     	;# 
  2042  0E34                     	;# 
  2043  0E35                     	;# 
  2044  0E36                     	;# 
  2045  0E37                     	;# 
  2046  0E8F                     	;# 
  2047  0E90                     	;# 
  2048  0E91                     	;# 
  2049  0E92                     	;# 
  2050  0E93                     	;# 
  2051  0E94                     	;# 
  2052  0E95                     	;# 
  2053  0E96                     	;# 
  2054  0E97                     	;# 
  2055  0E9C                     	;# 
  2056  0E9D                     	;# 
  2057  0E9E                     	;# 
  2058  0EA1                     	;# 
  2059  0EA2                     	;# 
  2060  0EA3                     	;# 
  2061  0EA4                     	;# 
  2062  0EA5                     	;# 
  2063  0EA9                     	;# 
  2064  0EAA                     	;# 
  2065  0EAB                     	;# 
  2066  0EAC                     	;# 
  2067  0EB1                     	;# 
  2068  0EB2                     	;# 
  2069  0EB3                     	;# 
  2070  0EB8                     	;# 
  2071  0EB9                     	;# 
  2072  0EBA                     	;# 
  2073  0EBB                     	;# 
  2074  0EBC                     	;# 
  2075  0EBD                     	;# 
  2076  0EBE                     	;# 
  2077  0EC3                     	;# 
  2078  0EC5                     	;# 
  2079  0EC6                     	;# 
  2080  0EC7                     	;# 
  2081  0EC8                     	;# 
  2082  0EC9                     	;# 
  2083  0ECA                     	;# 
  2084  0ECB                     	;# 
  2085  0ECC                     	;# 
  2086  0F10                     	;# 
  2087  0F11                     	;# 
  2088  0F12                     	;# 
  2089  0F13                     	;# 
  2090  0F14                     	;# 
  2091  0F15                     	;# 
  2092  0F16                     	;# 
  2093  0F17                     	;# 
  2094  0F18                     	;# 
  2095  0F19                     	;# 
  2096  0F1A                     	;# 
  2097  0F1B                     	;# 
  2098  0F1C                     	;# 
  2099  0F1D                     	;# 
  2100  0F1E                     	;# 
  2101  0F1F                     	;# 
  2102  0F20                     	;# 
  2103  0F21                     	;# 
  2104  0F22                     	;# 
  2105  0F23                     	;# 
  2106  0F24                     	;# 
  2107  0F25                     	;# 
  2108  0F26                     	;# 
  2109  0F27                     	;# 
  2110  0F38                     	;# 
  2111  0F39                     	;# 
  2112  0F3A                     	;# 
  2113  0F3B                     	;# 
  2114  0F3C                     	;# 
  2115  0F3D                     	;# 
  2116  0F3E                     	;# 
  2117  0F3F                     	;# 
  2118  0F40                     	;# 
  2119  0F41                     	;# 
  2120  0F43                     	;# 
  2121  0F44                     	;# 
  2122  0F45                     	;# 
  2123  0F46                     	;# 
  2124  0F47                     	;# 
  2125  0F48                     	;# 
  2126  0F49                     	;# 
  2127  0F4A                     	;# 
  2128  0F4B                     	;# 
  2129  0F4C                     	;# 
  2130  0F4E                     	;# 
  2131  0F4F                     	;# 
  2132  0F50                     	;# 
  2133  0F51                     	;# 
  2134  0F52                     	;# 
  2135  0F53                     	;# 
  2136  0F54                     	;# 
  2137  0F55                     	;# 
  2138  0F56                     	;# 
  2139  0F57                     	;# 
  2140  0F65                     	;# 
  2141  0F68                     	;# 
  2142  0F69                     	;# 
  2143  0F6A                     	;# 
  2144  0F6B                     	;# 
  2145  0FE4                     	;# 
  2146  0FE5                     	;# 
  2147  0FE6                     	;# 
  2148  0FE7                     	;# 
  2149  0FE8                     	;# 
  2150  0FE9                     	;# 
  2151  0FEA                     	;# 
  2152  0FEB                     	;# 
  2153  0FED                     	;# 
  2154  0FEE                     	;# 
  2155  0FEF                     	;# 
  2156  0000                     	;# 
  2157  0001                     	;# 
  2158  0002                     	;# 
  2159  0003                     	;# 
  2160  0004                     	;# 
  2161  0005                     	;# 
  2162  0006                     	;# 
  2163  0007                     	;# 
  2164  0008                     	;# 
  2165  0009                     	;# 
  2166  000A                     	;# 
  2167  000B                     	;# 
  2168  000C                     	;# 
  2169  000D                     	;# 
  2170  000E                     	;# 
  2171  0010                     	;# 
  2172  0011                     	;# 
  2173  0012                     	;# 
  2174  0013                     	;# 
  2175  0016                     	;# 
  2176  0017                     	;# 
  2177  0018                     	;# 
  2178  001C                     	;# 
  2179  001C                     	;# 
  2180  001D                     	;# 
  2181  001D                     	;# 
  2182  001E                     	;# 
  2183  001F                     	;# 
  2184  008C                     	;# 
  2185  008C                     	;# 
  2186  008D                     	;# 
  2187  008E                     	;# 
  2188  008E                     	;# 
  2189  008F                     	;# 
  2190  0090                     	;# 
  2191  0090                     	;# 
  2192  0091                     	;# 
  2193  0093                     	;# 
  2194  0094                     	;# 
  2195  0095                     	;# 
  2196  0096                     	;# 
  2197  0097                     	;# 
  2198  0098                     	;# 
  2199  0099                     	;# 
  2200  009A                     	;# 
  2201  009B                     	;# 
  2202  009C                     	;# 
  2203  009D                     	;# 
  2204  009E                     	;# 
  2205  010C                     	;# 
  2206  010D                     	;# 
  2207  010E                     	;# 
  2208  010E                     	;# 
  2209  010F                     	;# 
  2210  0110                     	;# 
  2211  0110                     	;# 
  2212  0111                     	;# 
  2213  0112                     	;# 
  2214  0112                     	;# 
  2215  0113                     	;# 
  2216  0114                     	;# 
  2217  0114                     	;# 
  2218  0115                     	;# 
  2219  0116                     	;# 
  2220  0116                     	;# 
  2221  0117                     	;# 
  2222  0119                     	;# 
  2223  0119                     	;# 
  2224  0119                     	;# 
  2225  011A                     	;# 
  2226  011A                     	;# 
  2227  011A                     	;# 
  2228  011B                     	;# 
  2229  011B                     	;# 
  2230  011B                     	;# 
  2231  011B                     	;# 
  2232  011B                     	;# 
  2233  011C                     	;# 
  2234  011C                     	;# 
  2235  011C                     	;# 
  2236  011D                     	;# 
  2237  011D                     	;# 
  2238  011D                     	;# 
  2239  011E                     	;# 
  2240  011E                     	;# 
  2241  011E                     	;# 
  2242  011F                     	;# 
  2243  011F                     	;# 
  2244  011F                     	;# 
  2245  011F                     	;# 
  2246  011F                     	;# 
  2247  018C                     	;# 
  2248  018D                     	;# 
  2249  018E                     	;# 
  2250  018F                     	;# 
  2251  0190                     	;# 
  2252  0191                     	;# 
  2253  0192                     	;# 
  2254  0196                     	;# 
  2255  0197                     	;# 
  2256  0198                     	;# 
  2257  0199                     	;# 
  2258  019A                     	;# 
  2259  019B                     	;# 
  2260  019C                     	;# 
  2261  020C                     	;# 
  2262  020C                     	;# 
  2263  020D                     	;# 
  2264  020E                     	;# 
  2265  020F                     	;# 
  2266  020F                     	;# 
  2267  0210                     	;# 
  2268  0210                     	;# 
  2269  0211                     	;# 
  2270  0211                     	;# 
  2271  0212                     	;# 
  2272  0212                     	;# 
  2273  0213                     	;# 
  2274  0214                     	;# 
  2275  0215                     	;# 
  2276  0215                     	;# 
  2277  0216                     	;# 
  2278  0216                     	;# 
  2279  0217                     	;# 
  2280  0217                     	;# 
  2281  0218                     	;# 
  2282  0218                     	;# 
  2283  0219                     	;# 
  2284  021A                     	;# 
  2285  021B                     	;# 
  2286  021B                     	;# 
  2287  021C                     	;# 
  2288  021C                     	;# 
  2289  021D                     	;# 
  2290  021D                     	;# 
  2291  021E                     	;# 
  2292  021F                     	;# 
  2293  028C                     	;# 
  2294  028C                     	;# 
  2295  028D                     	;# 
  2296  028D                     	;# 
  2297  028E                     	;# 
  2298  028F                     	;# 
  2299  0290                     	;# 
  2300  0290                     	;# 
  2301  0291                     	;# 
  2302  0292                     	;# 
  2303  0292                     	;# 
  2304  0293                     	;# 
  2305  0293                     	;# 
  2306  0294                     	;# 
  2307  0295                     	;# 
  2308  0296                     	;# 
  2309  0296                     	;# 
  2310  0297                     	;# 
  2311  0298                     	;# 
  2312  0298                     	;# 
  2313  0299                     	;# 
  2314  0299                     	;# 
  2315  029A                     	;# 
  2316  029B                     	;# 
  2317  029C                     	;# 
  2318  029C                     	;# 
  2319  029D                     	;# 
  2320  030C                     	;# 
  2321  030C                     	;# 
  2322  030D                     	;# 
  2323  030E                     	;# 
  2324  030F                     	;# 
  2325  0310                     	;# 
  2326  0310                     	;# 
  2327  0311                     	;# 
  2328  0312                     	;# 
  2329  0313                     	;# 
  2330  0314                     	;# 
  2331  0314                     	;# 
  2332  0315                     	;# 
  2333  0316                     	;# 
  2334  0317                     	;# 
  2335  0318                     	;# 
  2336  0318                     	;# 
  2337  0319                     	;# 
  2338  031A                     	;# 
  2339  031B                     	;# 
  2340  031C                     	;# 
  2341  031C                     	;# 
  2342  031D                     	;# 
  2343  031E                     	;# 
  2344  031F                     	;# 
  2345  038C                     	;# 
  2346  038C                     	;# 
  2347  038D                     	;# 
  2348  038E                     	;# 
  2349  0390                     	;# 
  2350  0390                     	;# 
  2351  0391                     	;# 
  2352  0392                     	;# 
  2353  040C                     	;# 
  2354  040D                     	;# 
  2355  040E                     	;# 
  2356  040F                     	;# 
  2357  0410                     	;# 
  2358  0411                     	;# 
  2359  0416                     	;# 
  2360  0416                     	;# 
  2361  0417                     	;# 
  2362  0418                     	;# 
  2363  0418                     	;# 
  2364  0419                     	;# 
  2365  041A                     	;# 
  2366  041A                     	;# 
  2367  041B                     	;# 
  2368  041C                     	;# 
  2369  041C                     	;# 
  2370  041D                     	;# 
  2371  041E                     	;# 
  2372  041F                     	;# 
  2373  048C                     	;# 
  2374  048C                     	;# 
  2375  048D                     	;# 
  2376  048E                     	;# 
  2377  048F                     	;# 
  2378  048F                     	;# 
  2379  0490                     	;# 
  2380  0491                     	;# 
  2381  0492                     	;# 
  2382  0492                     	;# 
  2383  0493                     	;# 
  2384  0494                     	;# 
  2385  0495                     	;# 
  2386  0495                     	;# 
  2387  0496                     	;# 
  2388  0497                     	;# 
  2389  0498                     	;# 
  2390  0499                     	;# 
  2391  049A                     	;# 
  2392  049B                     	;# 
  2393  049C                     	;# 
  2394  049D                     	;# 
  2395  050C                     	;# 
  2396  050C                     	;# 
  2397  050D                     	;# 
  2398  050E                     	;# 
  2399  050F                     	;# 
  2400  050F                     	;# 
  2401  0510                     	;# 
  2402  0511                     	;# 
  2403  0512                     	;# 
  2404  0512                     	;# 
  2405  0513                     	;# 
  2406  0514                     	;# 
  2407  0515                     	;# 
  2408  0515                     	;# 
  2409  0516                     	;# 
  2410  0517                     	;# 
  2411  0518                     	;# 
  2412  0519                     	;# 
  2413  051A                     	;# 
  2414  051B                     	;# 
  2415  051C                     	;# 
  2416  051D                     	;# 
  2417  058C                     	;# 
  2418  058C                     	;# 
  2419  058D                     	;# 
  2420  058E                     	;# 
  2421  058F                     	;# 
  2422  058F                     	;# 
  2423  0590                     	;# 
  2424  0591                     	;# 
  2425  0592                     	;# 
  2426  0593                     	;# 
  2427  060C                     	;# 
  2428  060D                     	;# 
  2429  060E                     	;# 
  2430  060F                     	;# 
  2431  0610                     	;# 
  2432  0611                     	;# 
  2433  0612                     	;# 
  2434  0613                     	;# 
  2435  0614                     	;# 
  2436  0616                     	;# 
  2437  0617                     	;# 
  2438  0618                     	;# 
  2439  0619                     	;# 
  2440  061A                     	;# 
  2441  061B                     	;# 
  2442  061C                     	;# 
  2443  061D                     	;# 
  2444  061E                     	;# 
  2445  068C                     	;# 
  2446  068D                     	;# 
  2447  068E                     	;# 
  2448  068F                     	;# 
  2449  0690                     	;# 
  2450  0691                     	;# 
  2451  0692                     	;# 
  2452  0693                     	;# 
  2453  0694                     	;# 
  2454  070C                     	;# 
  2455  070D                     	;# 
  2456  070E                     	;# 
  2457  070F                     	;# 
  2458  0710                     	;# 
  2459  0711                     	;# 
  2460  0712                     	;# 
  2461  0713                     	;# 
  2462  0714                     	;# 
  2463  0716                     	;# 
  2464  0717                     	;# 
  2465  0718                     	;# 
  2466  0719                     	;# 
  2467  071A                     	;# 
  2468  071B                     	;# 
  2469  071C                     	;# 
  2470  071D                     	;# 
  2471  071E                     	;# 
  2472  0796                     	;# 
  2473  0797                     	;# 
  2474  0798                     	;# 
  2475  0799                     	;# 
  2476  079A                     	;# 
  2477  079B                     	;# 
  2478  080C                     	;# 
  2479  080D                     	;# 
  2480  080E                     	;# 
  2481  080F                     	;# 
  2482  0810                     	;# 
  2483  0811                     	;# 
  2484  0813                     	;# 
  2485  0814                     	;# 
  2486  081A                     	;# 
  2487  081B                     	;# 
  2488  081C                     	;# 
  2489  081D                     	;# 
  2490  081E                     	;# 
  2491  081F                     	;# 
  2492  088C                     	;# 
  2493  088D                     	;# 
  2494  088E                     	;# 
  2495  088F                     	;# 
  2496  0890                     	;# 
  2497  0891                     	;# 
  2498  0892                     	;# 
  2499  0893                     	;# 
  2500  0895                     	;# 
  2501  0896                     	;# 
  2502  0897                     	;# 
  2503  0898                     	;# 
  2504  0899                     	;# 
  2505  089A                     	;# 
  2506  089B                     	;# 
  2507  090C                     	;# 
  2508  090E                     	;# 
  2509  090F                     	;# 
  2510  091F                     	;# 
  2511  091F                     	;# 
  2512  098F                     	;# 
  2513  098F                     	;# 
  2514  0990                     	;# 
  2515  0991                     	;# 
  2516  0992                     	;# 
  2517  0993                     	;# 
  2518  0994                     	;# 
  2519  0995                     	;# 
  2520  0996                     	;# 
  2521  0997                     	;# 
  2522  0E0F                     	;# 
  2523  0E10                     	;# 
  2524  0E11                     	;# 
  2525  0E12                     	;# 
  2526  0E13                     	;# 
  2527  0E14                     	;# 
  2528  0E15                     	;# 
  2529  0E16                     	;# 
  2530  0E17                     	;# 
  2531  0E18                     	;# 
  2532  0E19                     	;# 
  2533  0E1A                     	;# 
  2534  0E1B                     	;# 
  2535  0E1C                     	;# 
  2536  0E1D                     	;# 
  2537  0E1E                     	;# 
  2538  0E1F                     	;# 
  2539  0E20                     	;# 
  2540  0E21                     	;# 
  2541  0E22                     	;# 
  2542  0E23                     	;# 
  2543  0E24                     	;# 
  2544  0E25                     	;# 
  2545  0E26                     	;# 
  2546  0E27                     	;# 
  2547  0E28                     	;# 
  2548  0E29                     	;# 
  2549  0E2A                     	;# 
  2550  0E2B                     	;# 
  2551  0E2C                     	;# 
  2552  0E2D                     	;# 
  2553  0E2E                     	;# 
  2554  0E2F                     	;# 
  2555  0E30                     	;# 
  2556  0E31                     	;# 
  2557  0E32                     	;# 
  2558  0E33                     	;# 
  2559  0E34                     	;# 
  2560  0E35                     	;# 
  2561  0E36                     	;# 
  2562  0E37                     	;# 
  2563  0E8F                     	;# 
  2564  0E90                     	;# 
  2565  0E91                     	;# 
  2566  0E92                     	;# 
  2567  0E93                     	;# 
  2568  0E94                     	;# 
  2569  0E95                     	;# 
  2570  0E96                     	;# 
  2571  0E97                     	;# 
  2572  0E9C                     	;# 
  2573  0E9D                     	;# 
  2574  0E9E                     	;# 
  2575  0EA1                     	;# 
  2576  0EA2                     	;# 
  2577  0EA3                     	;# 
  2578  0EA4                     	;# 
  2579  0EA5                     	;# 
  2580  0EA9                     	;# 
  2581  0EAA                     	;# 
  2582  0EAB                     	;# 
  2583  0EAC                     	;# 
  2584  0EB1                     	;# 
  2585  0EB2                     	;# 
  2586  0EB3                     	;# 
  2587  0EB8                     	;# 
  2588  0EB9                     	;# 
  2589  0EBA                     	;# 
  2590  0EBB                     	;# 
  2591  0EBC                     	;# 
  2592  0EBD                     	;# 
  2593  0EBE                     	;# 
  2594  0EC3                     	;# 
  2595  0EC5                     	;# 
  2596  0EC6                     	;# 
  2597  0EC7                     	;# 
  2598  0EC8                     	;# 
  2599  0EC9                     	;# 
  2600  0ECA                     	;# 
  2601  0ECB                     	;# 
  2602  0ECC                     	;# 
  2603  0F10                     	;# 
  2604  0F11                     	;# 
  2605  0F12                     	;# 
  2606  0F13                     	;# 
  2607  0F14                     	;# 
  2608  0F15                     	;# 
  2609  0F16                     	;# 
  2610  0F17                     	;# 
  2611  0F18                     	;# 
  2612  0F19                     	;# 
  2613  0F1A                     	;# 
  2614  0F1B                     	;# 
  2615  0F1C                     	;# 
  2616  0F1D                     	;# 
  2617  0F1E                     	;# 
  2618  0F1F                     	;# 
  2619  0F20                     	;# 
  2620  0F21                     	;# 
  2621  0F22                     	;# 
  2622  0F23                     	;# 
  2623  0F24                     	;# 
  2624  0F25                     	;# 
  2625  0F26                     	;# 
  2626  0F27                     	;# 
  2627  0F38                     	;# 
  2628  0F39                     	;# 
  2629  0F3A                     	;# 
  2630  0F3B                     	;# 
  2631  0F3C                     	;# 
  2632  0F3D                     	;# 
  2633  0F3E                     	;# 
  2634  0F3F                     	;# 
  2635  0F40                     	;# 
  2636  0F41                     	;# 
  2637  0F43                     	;# 
  2638  0F44                     	;# 
  2639  0F45                     	;# 
  2640  0F46                     	;# 
  2641  0F47                     	;# 
  2642  0F48                     	;# 
  2643  0F49                     	;# 
  2644  0F4A                     	;# 
  2645  0F4B                     	;# 
  2646  0F4C                     	;# 
  2647  0F4E                     	;# 
  2648  0F4F                     	;# 
  2649  0F50                     	;# 
  2650  0F51                     	;# 
  2651  0F52                     	;# 
  2652  0F53                     	;# 
  2653  0F54                     	;# 
  2654  0F55                     	;# 
  2655  0F56                     	;# 
  2656  0F57                     	;# 
  2657  0F65                     	;# 
  2658  0F68                     	;# 
  2659  0F69                     	;# 
  2660  0F6A                     	;# 
  2661  0F6B                     	;# 
  2662  0FE4                     	;# 
  2663  0FE5                     	;# 
  2664  0FE6                     	;# 
  2665  0FE7                     	;# 
  2666  0FE8                     	;# 
  2667  0FE9                     	;# 
  2668  0FEA                     	;# 
  2669  0FEB                     	;# 
  2670  0FED                     	;# 
  2671  0FEE                     	;# 
  2672  0FEF                     	;# 
  2673  0000                     	;# 
  2674  0001                     	;# 
  2675  0002                     	;# 
  2676  0003                     	;# 
  2677  0004                     	;# 
  2678  0005                     	;# 
  2679  0006                     	;# 
  2680  0007                     	;# 
  2681  0008                     	;# 
  2682  0009                     	;# 
  2683  000A                     	;# 
  2684  000B                     	;# 
  2685  000C                     	;# 
  2686  000D                     	;# 
  2687  000E                     	;# 
  2688  0010                     	;# 
  2689  0011                     	;# 
  2690  0012                     	;# 
  2691  0013                     	;# 
  2692  0016                     	;# 
  2693  0017                     	;# 
  2694  0018                     	;# 
  2695  001C                     	;# 
  2696  001C                     	;# 
  2697  001D                     	;# 
  2698  001D                     	;# 
  2699  001E                     	;# 
  2700  001F                     	;# 
  2701  008C                     	;# 
  2702  008C                     	;# 
  2703  008D                     	;# 
  2704  008E                     	;# 
  2705  008E                     	;# 
  2706  008F                     	;# 
  2707  0090                     	;# 
  2708  0090                     	;# 
  2709  0091                     	;# 
  2710  0093                     	;# 
  2711  0094                     	;# 
  2712  0095                     	;# 
  2713  0096                     	;# 
  2714  0097                     	;# 
  2715  0098                     	;# 
  2716  0099                     	;# 
  2717  009A                     	;# 
  2718  009B                     	;# 
  2719  009C                     	;# 
  2720  009D                     	;# 
  2721  009E                     	;# 
  2722  010C                     	;# 
  2723  010D                     	;# 
  2724  010E                     	;# 
  2725  010E                     	;# 
  2726  010F                     	;# 
  2727  0110                     	;# 
  2728  0110                     	;# 
  2729  0111                     	;# 
  2730  0112                     	;# 
  2731  0112                     	;# 
  2732  0113                     	;# 
  2733  0114                     	;# 
  2734  0114                     	;# 
  2735  0115                     	;# 
  2736  0116                     	;# 
  2737  0116                     	;# 
  2738  0117                     	;# 
  2739  0119                     	;# 
  2740  0119                     	;# 
  2741  0119                     	;# 
  2742  011A                     	;# 
  2743  011A                     	;# 
  2744  011A                     	;# 
  2745  011B                     	;# 
  2746  011B                     	;# 
  2747  011B                     	;# 
  2748  011B                     	;# 
  2749  011B                     	;# 
  2750  011C                     	;# 
  2751  011C                     	;# 
  2752  011C                     	;# 
  2753  011D                     	;# 
  2754  011D                     	;# 
  2755  011D                     	;# 
  2756  011E                     	;# 
  2757  011E                     	;# 
  2758  011E                     	;# 
  2759  011F                     	;# 
  2760  011F                     	;# 
  2761  011F                     	;# 
  2762  011F                     	;# 
  2763  011F                     	;# 
  2764  018C                     	;# 
  2765  018D                     	;# 
  2766  018E                     	;# 
  2767  018F                     	;# 
  2768  0190                     	;# 
  2769  0191                     	;# 
  2770  0192                     	;# 
  2771  0196                     	;# 
  2772  0197                     	;# 
  2773  0198                     	;# 
  2774  0199                     	;# 
  2775  019A                     	;# 
  2776  019B                     	;# 
  2777  019C                     	;# 
  2778  020C                     	;# 
  2779  020C                     	;# 
  2780  020D                     	;# 
  2781  020E                     	;# 
  2782  020F                     	;# 
  2783  020F                     	;# 
  2784  0210                     	;# 
  2785  0210                     	;# 
  2786  0211                     	;# 
  2787  0211                     	;# 
  2788  0212                     	;# 
  2789  0212                     	;# 
  2790  0213                     	;# 
  2791  0214                     	;# 
  2792  0215                     	;# 
  2793  0215                     	;# 
  2794  0216                     	;# 
  2795  0216                     	;# 
  2796  0217                     	;# 
  2797  0217                     	;# 
  2798  0218                     	;# 
  2799  0218                     	;# 
  2800  0219                     	;# 
  2801  021A                     	;# 
  2802  021B                     	;# 
  2803  021B                     	;# 
  2804  021C                     	;# 
  2805  021C                     	;# 
  2806  021D                     	;# 
  2807  021D                     	;# 
  2808  021E                     	;# 
  2809  021F                     	;# 
  2810  028C                     	;# 
  2811  028C                     	;# 
  2812  028D                     	;# 
  2813  028D                     	;# 
  2814  028E                     	;# 
  2815  028F                     	;# 
  2816  0290                     	;# 
  2817  0290                     	;# 
  2818  0291                     	;# 
  2819  0292                     	;# 
  2820  0292                     	;# 
  2821  0293                     	;# 
  2822  0293                     	;# 
  2823  0294                     	;# 
  2824  0295                     	;# 
  2825  0296                     	;# 
  2826  0296                     	;# 
  2827  0297                     	;# 
  2828  0298                     	;# 
  2829  0298                     	;# 
  2830  0299                     	;# 
  2831  0299                     	;# 
  2832  029A                     	;# 
  2833  029B                     	;# 
  2834  029C                     	;# 
  2835  029C                     	;# 
  2836  029D                     	;# 
  2837  030C                     	;# 
  2838  030C                     	;# 
  2839  030D                     	;# 
  2840  030E                     	;# 
  2841  030F                     	;# 
  2842  0310                     	;# 
  2843  0310                     	;# 
  2844  0311                     	;# 
  2845  0312                     	;# 
  2846  0313                     	;# 
  2847  0314                     	;# 
  2848  0314                     	;# 
  2849  0315                     	;# 
  2850  0316                     	;# 
  2851  0317                     	;# 
  2852  0318                     	;# 
  2853  0318                     	;# 
  2854  0319                     	;# 
  2855  031A                     	;# 
  2856  031B                     	;# 
  2857  031C                     	;# 
  2858  031C                     	;# 
  2859  031D                     	;# 
  2860  031E                     	;# 
  2861  031F                     	;# 
  2862  038C                     	;# 
  2863  038C                     	;# 
  2864  038D                     	;# 
  2865  038E                     	;# 
  2866  0390                     	;# 
  2867  0390                     	;# 
  2868  0391                     	;# 
  2869  0392                     	;# 
  2870  040C                     	;# 
  2871  040D                     	;# 
  2872  040E                     	;# 
  2873  040F                     	;# 
  2874  0410                     	;# 
  2875  0411                     	;# 
  2876  0416                     	;# 
  2877  0416                     	;# 
  2878  0417                     	;# 
  2879  0418                     	;# 
  2880  0418                     	;# 
  2881  0419                     	;# 
  2882  041A                     	;# 
  2883  041A                     	;# 
  2884  041B                     	;# 
  2885  041C                     	;# 
  2886  041C                     	;# 
  2887  041D                     	;# 
  2888  041E                     	;# 
  2889  041F                     	;# 
  2890  048C                     	;# 
  2891  048C                     	;# 
  2892  048D                     	;# 
  2893  048E                     	;# 
  2894  048F                     	;# 
  2895  048F                     	;# 
  2896  0490                     	;# 
  2897  0491                     	;# 
  2898  0492                     	;# 
  2899  0492                     	;# 
  2900  0493                     	;# 
  2901  0494                     	;# 
  2902  0495                     	;# 
  2903  0495                     	;# 
  2904  0496                     	;# 
  2905  0497                     	;# 
  2906  0498                     	;# 
  2907  0499                     	;# 
  2908  049A                     	;# 
  2909  049B                     	;# 
  2910  049C                     	;# 
  2911  049D                     	;# 
  2912  050C                     	;# 
  2913  050C                     	;# 
  2914  050D                     	;# 
  2915  050E                     	;# 
  2916  050F                     	;# 
  2917  050F                     	;# 
  2918  0510                     	;# 
  2919  0511                     	;# 
  2920  0512                     	;# 
  2921  0512                     	;# 
  2922  0513                     	;# 
  2923  0514                     	;# 
  2924  0515                     	;# 
  2925  0515                     	;# 
  2926  0516                     	;# 
  2927  0517                     	;# 
  2928  0518                     	;# 
  2929  0519                     	;# 
  2930  051A                     	;# 
  2931  051B                     	;# 
  2932  051C                     	;# 
  2933  051D                     	;# 
  2934  058C                     	;# 
  2935  058C                     	;# 
  2936  058D                     	;# 
  2937  058E                     	;# 
  2938  058F                     	;# 
  2939  058F                     	;# 
  2940  0590                     	;# 
  2941  0591                     	;# 
  2942  0592                     	;# 
  2943  0593                     	;# 
  2944  060C                     	;# 
  2945  060D                     	;# 
  2946  060E                     	;# 
  2947  060F                     	;# 
  2948  0610                     	;# 
  2949  0611                     	;# 
  2950  0612                     	;# 
  2951  0613                     	;# 
  2952  0614                     	;# 
  2953  0616                     	;# 
  2954  0617                     	;# 
  2955  0618                     	;# 
  2956  0619                     	;# 
  2957  061A                     	;# 
  2958  061B                     	;# 
  2959  061C                     	;# 
  2960  061D                     	;# 
  2961  061E                     	;# 
  2962  068C                     	;# 
  2963  068D                     	;# 
  2964  068E                     	;# 
  2965  068F                     	;# 
  2966  0690                     	;# 
  2967  0691                     	;# 
  2968  0692                     	;# 
  2969  0693                     	;# 
  2970  0694                     	;# 
  2971  070C                     	;# 
  2972  070D                     	;# 
  2973  070E                     	;# 
  2974  070F                     	;# 
  2975  0710                     	;# 
  2976  0711                     	;# 
  2977  0712                     	;# 
  2978  0713                     	;# 
  2979  0714                     	;# 
  2980  0716                     	;# 
  2981  0717                     	;# 
  2982  0718                     	;# 
  2983  0719                     	;# 
  2984  071A                     	;# 
  2985  071B                     	;# 
  2986  071C                     	;# 
  2987  071D                     	;# 
  2988  071E                     	;# 
  2989  0796                     	;# 
  2990  0797                     	;# 
  2991  0798                     	;# 
  2992  0799                     	;# 
  2993  079A                     	;# 
  2994  079B                     	;# 
  2995  080C                     	;# 
  2996  080D                     	;# 
  2997  080E                     	;# 
  2998  080F                     	;# 
  2999  0810                     	;# 
  3000  0811                     	;# 
  3001  0813                     	;# 
  3002  0814                     	;# 
  3003  081A                     	;# 
  3004  081B                     	;# 
  3005  081C                     	;# 
  3006  081D                     	;# 
  3007  081E                     	;# 
  3008  081F                     	;# 
  3009  088C                     	;# 
  3010  088D                     	;# 
  3011  088E                     	;# 
  3012  088F                     	;# 
  3013  0890                     	;# 
  3014  0891                     	;# 
  3015  0892                     	;# 
  3016  0893                     	;# 
  3017  0895                     	;# 
  3018  0896                     	;# 
  3019  0897                     	;# 
  3020  0898                     	;# 
  3021  0899                     	;# 
  3022  089A                     	;# 
  3023  089B                     	;# 
  3024  090C                     	;# 
  3025  090E                     	;# 
  3026  090F                     	;# 
  3027  091F                     	;# 
  3028  091F                     	;# 
  3029  098F                     	;# 
  3030  098F                     	;# 
  3031  0990                     	;# 
  3032  0991                     	;# 
  3033  0992                     	;# 
  3034  0993                     	;# 
  3035  0994                     	;# 
  3036  0995                     	;# 
  3037  0996                     	;# 
  3038  0997                     	;# 
  3039  0E0F                     	;# 
  3040  0E10                     	;# 
  3041  0E11                     	;# 
  3042  0E12                     	;# 
  3043  0E13                     	;# 
  3044  0E14                     	;# 
  3045  0E15                     	;# 
  3046  0E16                     	;# 
  3047  0E17                     	;# 
  3048  0E18                     	;# 
  3049  0E19                     	;# 
  3050  0E1A                     	;# 
  3051  0E1B                     	;# 
  3052  0E1C                     	;# 
  3053  0E1D                     	;# 
  3054  0E1E                     	;# 
  3055  0E1F                     	;# 
  3056  0E20                     	;# 
  3057  0E21                     	;# 
  3058  0E22                     	;# 
  3059  0E23                     	;# 
  3060  0E24                     	;# 
  3061  0E25                     	;# 
  3062  0E26                     	;# 
  3063  0E27                     	;# 
  3064  0E28                     	;# 
  3065  0E29                     	;# 
  3066  0E2A                     	;# 
  3067  0E2B                     	;# 
  3068  0E2C                     	;# 
  3069  0E2D                     	;# 
  3070  0E2E                     	;# 
  3071  0E2F                     	;# 
  3072  0E30                     	;# 
  3073  0E31                     	;# 
  3074  0E32                     	;# 
  3075  0E33                     	;# 
  3076  0E34                     	;# 
  3077  0E35                     	;# 
  3078  0E36                     	;# 
  3079  0E37                     	;# 
  3080  0E8F                     	;# 
  3081  0E90                     	;# 
  3082  0E91                     	;# 
  3083  0E92                     	;# 
  3084  0E93                     	;# 
  3085  0E94                     	;# 
  3086  0E95                     	;# 
  3087  0E96                     	;# 
  3088  0E97                     	;# 
  3089  0E9C                     	;# 
  3090  0E9D                     	;# 
  3091  0E9E                     	;# 
  3092  0EA1                     	;# 
  3093  0EA2                     	;# 
  3094  0EA3                     	;# 
  3095  0EA4                     	;# 
  3096  0EA5                     	;# 
  3097  0EA9                     	;# 
  3098  0EAA                     	;# 
  3099  0EAB                     	;# 
  3100  0EAC                     	;# 
  3101  0EB1                     	;# 
  3102  0EB2                     	;# 
  3103  0EB3                     	;# 
  3104  0EB8                     	;# 
  3105  0EB9                     	;# 
  3106  0EBA                     	;# 
  3107  0EBB                     	;# 
  3108  0EBC                     	;# 
  3109  0EBD                     	;# 
  3110  0EBE                     	;# 
  3111  0EC3                     	;# 
  3112  0EC5                     	;# 
  3113  0EC6                     	;# 
  3114  0EC7                     	;# 
  3115  0EC8                     	;# 
  3116  0EC9                     	;# 
  3117  0ECA                     	;# 
  3118  0ECB                     	;# 
  3119  0ECC                     	;# 
  3120  0F10                     	;# 
  3121  0F11                     	;# 
  3122  0F12                     	;# 
  3123  0F13                     	;# 
  3124  0F14                     	;# 
  3125  0F15                     	;# 
  3126  0F16                     	;# 
  3127  0F17                     	;# 
  3128  0F18                     	;# 
  3129  0F19                     	;# 
  3130  0F1A                     	;# 
  3131  0F1B                     	;# 
  3132  0F1C                     	;# 
  3133  0F1D                     	;# 
  3134  0F1E                     	;# 
  3135  0F1F                     	;# 
  3136  0F20                     	;# 
  3137  0F21                     	;# 
  3138  0F22                     	;# 
  3139  0F23                     	;# 
  3140  0F24                     	;# 
  3141  0F25                     	;# 
  3142  0F26                     	;# 
  3143  0F27                     	;# 
  3144  0F38                     	;# 
  3145  0F39                     	;# 
  3146  0F3A                     	;# 
  3147  0F3B                     	;# 
  3148  0F3C                     	;# 
  3149  0F3D                     	;# 
  3150  0F3E                     	;# 
  3151  0F3F                     	;# 
  3152  0F40                     	;# 
  3153  0F41                     	;# 
  3154  0F43                     	;# 
  3155  0F44                     	;# 
  3156  0F45                     	;# 
  3157  0F46                     	;# 
  3158  0F47                     	;# 
  3159  0F48                     	;# 
  3160  0F49                     	;# 
  3161  0F4A                     	;# 
  3162  0F4B                     	;# 
  3163  0F4C                     	;# 
  3164  0F4E                     	;# 
  3165  0F4F                     	;# 
  3166  0F50                     	;# 
  3167  0F51                     	;# 
  3168  0F52                     	;# 
  3169  0F53                     	;# 
  3170  0F54                     	;# 
  3171  0F55                     	;# 
  3172  0F56                     	;# 
  3173  0F57                     	;# 
  3174  0F65                     	;# 
  3175  0F68                     	;# 
  3176  0F69                     	;# 
  3177  0F6A                     	;# 
  3178  0F6B                     	;# 
  3179  0FE4                     	;# 
  3180  0FE5                     	;# 
  3181  0FE6                     	;# 
  3182  0FE7                     	;# 
  3183  0FE8                     	;# 
  3184  0FE9                     	;# 
  3185  0FEA                     	;# 
  3186  0FEB                     	;# 
  3187  0FED                     	;# 
  3188  0FEE                     	;# 
  3189  0FEF                     	;# 
  3190                           
  3191                           	psect	stringtext1
  3192  0800                     __pstringtext1:
  3193  0800                     _LCD_INIT_STRING:
  3194  0800  3428               	retlw	40
  3195  0801  340C               	retlw	12
  3196  0802  3401               	retlw	1
  3197  0803  3406               	retlw	6
  3198  0804                     __end_of_LCD_INIT_STRING:
  3199  0013                     _TRISC	set	19
  3200  0012                     _TRISB	set	18
  3201  0011                     _TRISA	set	17
  3202  0018                     _LATC	set	24
  3203  0017                     _LATB	set	23
  3204  0016                     _LATA	set	22
  3205  00B0                     _LATA0	set	176
  3206  011A                     _TX1REG	set	282
  3207  0119                     _RC1REG	set	281
  3208  011B                     _SPBRGL	set	283
  3209  011C                     _SPBRGH	set	284
  3210  011E                     _TX1STAbits	set	286
  3211  011D                     _RC1STAbits	set	285
  3212  011F                     _BAUD1CONbits	set	287
  3213  018C                     _SSP1BUF	set	396
  3214  0191                     _SSP1CON2bits	set	401
  3215  018D                     _SSP1ADD	set	397
  3216  0192                     _SSP1CON3	set	402
  3217  0190                     _SSP1CON1	set	400
  3218  018F                     _SSP1STAT	set	399
  3219  070F                     _PIR3bits	set	1807
  3220  0893                     _OSCFRQbits	set	2195
  3221  088D                     _OSCCON1bits	set	2189
  3222  0ECB                     _RXPPS	set	3787
  3223  0EC6                     _SSP1DATPPS	set	3782
  3224  0EC5                     _SSP1CLKPPS	set	3781
  3225  0F20                     _RC0PPS	set	3872
  3226  0F24                     _RC4PPS	set	3876
  3227  0F23                     _RC3PPS	set	3875
  3228  0F4E                     _ANSELC	set	3918
  3229  0F43                     _ANSELB	set	3907
  3230  0F38                     _ANSELA	set	3896
  3231  0804                     STR_3:
  3232  0804  344C               	retlw	76	;'L'
  3233  0805  3461               	retlw	97	;'a'
  3234  0806  3420               	retlw	32	;' '
  3235  0807  3474               	retlw	116	;'t'
  3236  0808  3465               	retlw	101	;'e'
  3237  0809  346D               	retlw	109	;'m'
  3238  080A  3470               	retlw	112	;'p'
  3239  080B  3465               	retlw	101	;'e'
  3240  080C  3472               	retlw	114	;'r'
  3241  080D  3461               	retlw	97	;'a'
  3242  080E  3474               	retlw	116	;'t'
  3243  080F  3475               	retlw	117	;'u'
  3244  0810  3472               	retlw	114	;'r'
  3245  0811  3461               	retlw	97	;'a'
  3246  0812  3420               	retlw	32	;' '
  3247  0813  3465               	retlw	101	;'e'
  3248  0814  3473               	retlw	115	;'s'
  3249  0815  343A               	retlw	58	;':'
  3250  0816  3420               	retlw	32	;' '
  3251  0817  3425               	retlw	37	;'%'
  3252  0818  3464               	retlw	100	;'d'
  3253  0819  342E               	retlw	46	;'.'
  3254  081A  3425               	retlw	37	;'%'
  3255  081B  3464               	retlw	100	;'d'
  3256  081C  3420               	retlw	32	;' '
  3257  081D  3443               	retlw	67	;'C'
  3258  081E  340A               	retlw	10
  3259  081F  340D               	retlw	13
  3260  0820  3400               	retlw	0
  3261                           
  3262                           	psect	stringtext2
  3263  1000                     __pstringtext2:
  3264  1000                     STR_2:
  3265  1000  340C               	retlw	12
  3266  1001  3448               	retlw	72	;'H'
  3267  1002  346F               	retlw	111	;'o'
  3268  1003  346C               	retlw	108	;'l'
  3269  1004  3461               	retlw	97	;'a'
  3270  1005  340A               	retlw	10
  3271  1006  346D               	retlw	109	;'m'
  3272  1007  3475               	retlw	117	;'u'
  3273  1008  346E               	retlw	110	;'n'
  3274  1009  3464               	retlw	100	;'d'
  3275  100A  346F               	retlw	111	;'o'
  3276  100B  3420               	retlw	32	;' '
  3277  100C  346C               	retlw	108	;'l'
  3278  100D  3463               	retlw	99	;'c'
  3279  100E  3464               	retlw	100	;'d'
  3280  100F  340A               	retlw	10
  3281  1010  3432               	retlw	50	;'2'
  3282  1011  3430               	retlw	48	;'0'
  3283  1012  340A               	retlw	10
  3284  1013  3478               	retlw	120	;'x'
  3285  1014  3434               	retlw	52	;'4'
  3286  1015  3400               	retlw	0
  3287                           
  3288                           	psect	stringtext3
  3289  1016                     __pstringtext3:
  3290  1016                     STR_4:
  3291  1016  340C               	retlw	12
  3292  1017  344C               	retlw	76	;'L'
  3293  1018  3461               	retlw	97	;'a'
  3294  1019  3420               	retlw	32	;' '
  3295  101A  3474               	retlw	116	;'t'
  3296  101B  3465               	retlw	101	;'e'
  3297  101C  346D               	retlw	109	;'m'
  3298  101D  3470               	retlw	112	;'p'
  3299  101E  3420               	retlw	32	;' '
  3300  101F  3465               	retlw	101	;'e'
  3301  1020  3473               	retlw	115	;'s'
  3302  1021  343A               	retlw	58	;':'
  3303  1022  340A               	retlw	10
  3304  1023  3425               	retlw	37	;'%'
  3305  1024  3464               	retlw	100	;'d'
  3306  1025  342E               	retlw	46	;'.'
  3307  1026  3425               	retlw	37	;'%'
  3308  1027  3464               	retlw	100	;'d'
  3309  1028  3400               	retlw	0
  3310                           
  3311                           	psect	stringtext4
  3312  1029                     __pstringtext4:
  3313  1029                     STR_1:
  3314  1029  3448               	retlw	72	;'H'
  3315  102A  346F               	retlw	111	;'o'
  3316  102B  346C               	retlw	108	;'l'
  3317  102C  3461               	retlw	97	;'a'
  3318  102D  3420               	retlw	32	;' '
  3319  102E  346D               	retlw	109	;'m'
  3320  102F  3475               	retlw	117	;'u'
  3321  1030  346E               	retlw	110	;'n'
  3322  1031  3464               	retlw	100	;'d'
  3323  1032  346F               	retlw	111	;'o'
  3324  1033  3420               	retlw	32	;' '
  3325  1034  346C               	retlw	108	;'l'
  3326  1035  3463               	retlw	99	;'c'
  3327  1036  3464               	retlw	100	;'d'
  3328  1037  340A               	retlw	10
  3329  1038  340D               	retlw	13
  3330  1039  3400               	retlw	0
  3331                           
  3332                           	psect	stringtext5
  3333  0000                     __pstringtext5:
  3334                           
  3335                           	psect	cinit
  3336  07ED                     start_initialization:	
  3337                           ; #config settings
  3338                           
  3339  07ED                     __initialization:
  3340                           
  3341                           ; Clear objects allocated to BANK1
  3342  07ED  30C7               	movlw	low __pbssBANK1
  3343  07EE  0084               	movwf	4
  3344  07EF  3000               	movlw	high __pbssBANK1
  3345  07F0  0085               	movwf	5
  3346  07F1  300C               	movlw	12
  3347  07F2  318F  2735  3187   	fcall	clear_ram0
  3348                           
  3349                           ; Clear objects allocated to BANK2
  3350  07F5  3020               	movlw	low __pbssBANK2
  3351  07F6  0084               	movwf	4
  3352  07F7  3001               	movlw	high __pbssBANK2
  3353  07F8  0085               	movwf	5
  3354  07F9  3020               	movlw	32
  3355  07FA  318F  2735  3187   	fcall	clear_ram0
  3356  07FD                     end_of_initialization:	
  3357                           ;End of C runtime variable initialization code
  3358                           
  3359  07FD                     __end_of__initialization:
  3360  07FD  0020               	movlb	0
  3361  07FE  3183  2B0A         	ljmp	_main	;jump to C main() function
  3362                           
  3363                           	psect	bssBANK1
  3364  00C7                     __pbssBANK1:
  3365  00C7                     _nout:
  3366  00C7                     	ds	2
  3367  00C9                     _width:
  3368  00C9                     	ds	2
  3369  00CB                     _prec:
  3370  00CB                     	ds	2
  3371  00CD                     _flags:
  3372  00CD                     	ds	2
  3373  00CF                     _g_LcdY:
  3374  00CF                     	ds	1
  3375  00D0                     _g_LcdX:
  3376  00D0                     	ds	1
  3377  00D1                     _low_byte:
  3378  00D1                     	ds	1
  3379  00D2                     _high_byte:
  3380  00D2                     	ds	1
  3381                           
  3382                           	psect	bssBANK2
  3383  0120                     __pbssBANK2:
  3384  0120                     _dbuf:
  3385  0120                     	ds	32
  3386                           
  3387                           	psect	clrtext
  3388  0F35                     clear_ram0:	
  3389                           ;	Called with FSR0 containing the base address, and
  3390                           ;	WREG with the size to clear
  3391                           
  3392  0F35  0064               	clrwdt	;clear the watchdog before getting into this loop
  3393  0F36                     clrloop0:
  3394  0F36  0180               	clrf	0	;clear RAM location pointed to by FSR
  3395  0F37  3101               	addfsr 0,1
  3396  0F38  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3397  0F39  2F36               	goto	clrloop0	;have we reached the end yet?
  3398  0F3A  3400               	retlw	0	;all done for this memory range, return
  3399                           
  3400                           	psect	cstackBANK1
  3401  00A0                     __pcstackBANK1:
  3402  00A0                     sprintf@ap:
  3403                           
  3404                           ; 1 bytes @ 0x0
  3405  00A0                     	ds	1
  3406  00A1                     sprintf@s:
  3407                           
  3408                           ; 1 bytes @ 0x1
  3409  00A1                     	ds	1
  3410  00A2                     sprintf@f:
  3411                           
  3412                           ; 5 bytes @ 0x2
  3413  00A2                     	ds	5
  3414  00A7                     main@txt:
  3415                           
  3416                           ; 32 bytes @ 0x7
  3417  00A7                     	ds	32
  3418                           
  3419                           	psect	cstackCOMMON
  3420  0070                     __pcstackCOMMON:
  3421  0070                     ?_I2C_start:
  3422  0070                     ??_I2C_start:	
  3423                           ; 1 bytes @ 0x0
  3424                           
  3425  0070                     ?_I2C_write:	
  3426                           ; 1 bytes @ 0x0
  3427                           
  3428  0070                     ??_I2C_write:	
  3429                           ; 1 bytes @ 0x0
  3430                           
  3431  0070                     ?_I2C_restart:	
  3432                           ; 1 bytes @ 0x0
  3433                           
  3434  0070                     ??_I2C_restart:	
  3435                           ; 1 bytes @ 0x0
  3436                           
  3437  0070                     ?_I2C_read:	
  3438                           ; 1 bytes @ 0x0
  3439                           
  3440  0070                     ??_I2C_read:	
  3441                           ; 1 bytes @ 0x0
  3442                           
  3443  0070                     ?_I2C_nack:	
  3444                           ; 1 bytes @ 0x0
  3445                           
  3446  0070                     ??_I2C_nack:	
  3447                           ; 1 bytes @ 0x0
  3448                           
  3449  0070                     ?_I2C_stop:	
  3450                           ; 1 bytes @ 0x0
  3451                           
  3452  0070                     ??_I2C_stop:	
  3453                           ; 1 bytes @ 0x0
  3454                           
  3455  0070                     ?_SYSTEM_init:	
  3456                           ; 1 bytes @ 0x0
  3457                           
  3458  0070                     ??_SYSTEM_init:	
  3459                           ; 1 bytes @ 0x0
  3460                           
  3461  0070                     ?_lcd_init:	
  3462                           ; 1 bytes @ 0x0
  3463                           
  3464  0070                     ?_OSC_init:	
  3465                           ; 1 bytes @ 0x0
  3466                           
  3467  0070                     ??_OSC_init:	
  3468                           ; 1 bytes @ 0x0
  3469                           
  3470  0070                     ?_PIN_MANAGER_init:	
  3471                           ; 1 bytes @ 0x0
  3472                           
  3473  0070                     ??_PIN_MANAGER_init:	
  3474                           ; 1 bytes @ 0x0
  3475                           
  3476  0070                     ?_UART_init:	
  3477                           ; 1 bytes @ 0x0
  3478                           
  3479  0070                     ??_UART_init:	
  3480                           ; 1 bytes @ 0x0
  3481                           
  3482  0070                     ?_I2C_init:	
  3483                           ; 1 bytes @ 0x0
  3484                           
  3485  0070                     ??_I2C_init:	
  3486                           ; 1 bytes @ 0x0
  3487                           
  3488  0070                     ?_Leer_EMC1001:	
  3489                           ; 1 bytes @ 0x0
  3490                           
  3491  0070                     ?_main:	
  3492                           ; 1 bytes @ 0x0
  3493                           
  3494  0070                     ?_UART_write:	
  3495                           ; 1 bytes @ 0x0
  3496                           
  3497  0070                     ??_UART_write:	
  3498                           ; 1 bytes @ 0x0
  3499                           
  3500  0070                     ?_putch:	
  3501                           ; 1 bytes @ 0x0
  3502                           
  3503  0070                     ?_Write_PCF:	
  3504                           ; 1 bytes @ 0x0
  3505                           
  3506  0070                     ??___aodiv:	
  3507                           ; 1 bytes @ 0x0
  3508                           
  3509  0070                     ??___aomod:	
  3510                           ; 1 bytes @ 0x0
  3511                           
  3512  0070                     ?_strlen:	
  3513                           ; 1 bytes @ 0x0
  3514                           
  3515  0070                     ?___wmul:	
  3516                           ; 2 bytes @ 0x0
  3517                           
  3518  0070                     I2C_write@I2C_data:	
  3519                           ; 2 bytes @ 0x0
  3520                           
  3521  0070                     UART_write@txData:	
  3522                           ; 1 bytes @ 0x0
  3523                           
  3524  0070                     ___wmul@multiplier:	
  3525                           ; 1 bytes @ 0x0
  3526                           
  3527                           
  3528                           ; 2 bytes @ 0x0
  3529  0070                     	ds	1
  3530  0071                     ??_Leer_EMC1001:
  3531  0071                     ??_putch:	
  3532                           ; 1 bytes @ 0x1
  3533                           
  3534  0071                     ??_Write_PCF:	
  3535                           ; 1 bytes @ 0x1
  3536                           
  3537  0071                     putch@txData:	
  3538                           ; 1 bytes @ 0x1
  3539                           
  3540  0071                     Write_PCF@dato:	
  3541                           ; 1 bytes @ 0x1
  3542                           
  3543  0071                     ___aodiv@counter:	
  3544                           ; 1 bytes @ 0x1
  3545                           
  3546  0071                     ___aomod@counter:	
  3547                           ; 1 bytes @ 0x1
  3548                           
  3549                           
  3550                           ; 1 bytes @ 0x1
  3551  0071                     	ds	1
  3552  0072                     ??_strlen:
  3553  0072                     ?_Send_D7_D4:	
  3554                           ; 1 bytes @ 0x2
  3555                           
  3556  0072                     ?_fputc:	
  3557                           ; 1 bytes @ 0x2
  3558                           
  3559  0072                     Leer_EMC1001@add:	
  3560                           ; 2 bytes @ 0x2
  3561                           
  3562  0072                     Send_D7_D4@nibble:	
  3563                           ; 1 bytes @ 0x2
  3564                           
  3565  0072                     ___aodiv@sign:	
  3566                           ; 1 bytes @ 0x2
  3567                           
  3568  0072                     ___aomod@sign:	
  3569                           ; 1 bytes @ 0x2
  3570                           
  3571  0072                     ___wmul@multiplicand:	
  3572                           ; 1 bytes @ 0x2
  3573                           
  3574  0072                     fputc@c:	
  3575                           ; 2 bytes @ 0x2
  3576                           
  3577                           
  3578                           ; 2 bytes @ 0x2
  3579  0072                     	ds	1
  3580  0073                     ??_Send_D7_D4:
  3581  0073                     ?_abs:	
  3582                           ; 1 bytes @ 0x3
  3583                           
  3584  0073                     Leer_EMC1001@x:	
  3585                           ; 2 bytes @ 0x3
  3586                           
  3587  0073                     strlen@a:	
  3588                           ; 1 bytes @ 0x3
  3589                           
  3590  0073                     abs@a:	
  3591                           ; 1 bytes @ 0x3
  3592                           
  3593  0073                     ___aodiv@quotient:	
  3594                           ; 2 bytes @ 0x3
  3595                           
  3596                           
  3597                           ; 8 bytes @ 0x3
  3598  0073                     	ds	1
  3599  0074                     ??___wmul:
  3600  0074                     Send_D7_D4@address:	
  3601                           ; 1 bytes @ 0x4
  3602                           
  3603  0074                     fputc@fp:	
  3604                           ; 1 bytes @ 0x4
  3605                           
  3606  0074                     strlen@s:	
  3607                           ; 1 bytes @ 0x4
  3608                           
  3609  0074                     ___wmul@product:	
  3610                           ; 1 bytes @ 0x4
  3611                           
  3612                           
  3613                           ; 2 bytes @ 0x4
  3614  0074                     	ds	1
  3615  0075                     ??_fputc:
  3616  0075                     ??_abs:	
  3617                           ; 1 bytes @ 0x5
  3618                           
  3619  0075                     Send_D7_D4@datos:	
  3620                           ; 1 bytes @ 0x5
  3621                           
  3622                           
  3623                           ; 1 bytes @ 0x5
  3624  0075                     	ds	1
  3625  0076                     ?_lcd_send_byte:
  3626  0076                     lcd_send_byte@n:	
  3627                           ; 1 bytes @ 0x6
  3628                           
  3629                           
  3630                           ; 1 bytes @ 0x6
  3631  0076                     	ds	1
  3632  0077                     ??_lcd_send_byte:
  3633                           
  3634                           ; 1 bytes @ 0x7
  3635  0077                     	ds	2
  3636  0079                     lcd_send_byte@address:
  3637                           
  3638                           ; 1 bytes @ 0x9
  3639  0079                     	ds	1
  3640  007A                     ??_lcd_init:
  3641  007A                     ?_lcd_gotoxy:	
  3642                           ; 1 bytes @ 0xA
  3643                           
  3644  007A                     ?_fputs:	
  3645                           ; 1 bytes @ 0xA
  3646                           
  3647  007A                     lcd_gotoxy@y:	
  3648                           ; 2 bytes @ 0xA
  3649                           
  3650  007A                     fputs@fp:	
  3651                           ; 1 bytes @ 0xA
  3652                           
  3653                           
  3654                           ; 1 bytes @ 0xA
  3655  007A                     	ds	1
  3656  007B                     ??_fputs:
  3657  007B                     ??_lcd_gotoxy:	
  3658                           ; 1 bytes @ 0xB
  3659                           
  3660  007B                     lcd_init@i:	
  3661                           ; 1 bytes @ 0xB
  3662                           
  3663                           
  3664                           ; 1 bytes @ 0xB
  3665  007B                     	ds	3
  3666                           
  3667                           	psect	cstackBANK0
  3668  0020                     __pcstackBANK0:
  3669  0020                     ?___aodiv:
  3670  0020                     ?___aomod:	
  3671                           ; 8 bytes @ 0x0
  3672                           
  3673  0020                     lcd_gotoxy@x:	
  3674                           ; 8 bytes @ 0x0
  3675                           
  3676  0020                     fputs@c:	
  3677                           ; 1 bytes @ 0x0
  3678                           
  3679  0020                     ___aodiv@divisor:	
  3680                           ; 1 bytes @ 0x0
  3681                           
  3682  0020                     ___aomod@divisor:	
  3683                           ; 8 bytes @ 0x0
  3684                           
  3685                           
  3686                           ; 8 bytes @ 0x0
  3687  0020                     	ds	1
  3688  0021                     lcd_gotoxy@address:
  3689  0021                     fputs@i:	
  3690                           ; 1 bytes @ 0x1
  3691                           
  3692                           
  3693                           ; 2 bytes @ 0x1
  3694  0021                     	ds	1
  3695  0022                     ?_lcd_putchar:
  3696  0022                     lcd_putchar@dato:	
  3697                           ; 1 bytes @ 0x2
  3698                           
  3699                           
  3700                           ; 2 bytes @ 0x2
  3701  0022                     	ds	1
  3702  0023                     fputs@s:
  3703                           
  3704                           ; 1 bytes @ 0x3
  3705  0023                     	ds	1
  3706  0024                     ??_lcd_putchar:
  3707  0024                     ?_pad:	
  3708                           ; 1 bytes @ 0x4
  3709                           
  3710  0024                     pad@buf:	
  3711                           ; 2 bytes @ 0x4
  3712                           
  3713                           
  3714                           ; 1 bytes @ 0x4
  3715  0024                     	ds	1
  3716  0025                     pad@p:
  3717                           
  3718                           ; 2 bytes @ 0x5
  3719  0025                     	ds	2
  3720  0027                     ??_pad:
  3721                           
  3722                           ; 1 bytes @ 0x7
  3723  0027                     	ds	1
  3724  0028                     pad@i:
  3725  0028                     ___aodiv@dividend:	
  3726                           ; 2 bytes @ 0x8
  3727                           
  3728  0028                     ___aomod@dividend:	
  3729                           ; 8 bytes @ 0x8
  3730                           
  3731                           
  3732                           ; 8 bytes @ 0x8
  3733  0028                     	ds	2
  3734  002A                     pad@w:
  3735                           
  3736                           ; 2 bytes @ 0xA
  3737  002A                     	ds	2
  3738  002C                     pad@fp:
  3739                           
  3740                           ; 1 bytes @ 0xC
  3741  002C                     	ds	4
  3742  0030                     ?_dtoa:
  3743  0030                     dtoa@d:	
  3744                           ; 2 bytes @ 0x10
  3745                           
  3746                           
  3747                           ; 8 bytes @ 0x10
  3748  0030                     	ds	8
  3749  0038                     ??_dtoa:
  3750                           
  3751                           ; 1 bytes @ 0x18
  3752  0038                     	ds	3
  3753  003B                     _dtoa$953:
  3754                           
  3755                           ; 2 bytes @ 0x1B
  3756  003B                     	ds	2
  3757  003D                     dtoa@fp:
  3758                           
  3759                           ; 1 bytes @ 0x1D
  3760  003D                     	ds	1
  3761  003E                     dtoa@p:
  3762                           
  3763                           ; 2 bytes @ 0x1E
  3764  003E                     	ds	2
  3765  0040                     dtoa@w:
  3766                           
  3767                           ; 2 bytes @ 0x20
  3768  0040                     	ds	2
  3769  0042                     dtoa@s:
  3770                           
  3771                           ; 2 bytes @ 0x22
  3772  0042                     	ds	2
  3773  0044                     dtoa@n:
  3774                           
  3775                           ; 8 bytes @ 0x24
  3776  0044                     	ds	8
  3777  004C                     dtoa@i:
  3778                           
  3779                           ; 2 bytes @ 0x2C
  3780  004C                     	ds	2
  3781  004E                     ?_vfpfcnvrt:
  3782  004E                     vfpfcnvrt@fmt:	
  3783                           ; 2 bytes @ 0x2E
  3784                           
  3785                           
  3786                           ; 1 bytes @ 0x2E
  3787  004E                     	ds	1
  3788  004F                     vfpfcnvrt@ap:
  3789                           
  3790                           ; 1 bytes @ 0x2F
  3791  004F                     	ds	1
  3792  0050                     ??_vfpfcnvrt:
  3793                           
  3794                           ; 1 bytes @ 0x30
  3795  0050                     	ds	5
  3796  0055                     vfpfcnvrt@ll:
  3797                           
  3798                           ; 8 bytes @ 0x35
  3799  0055                     	ds	8
  3800  005D                     vfpfcnvrt@fp:
  3801                           
  3802                           ; 1 bytes @ 0x3D
  3803  005D                     	ds	1
  3804  005E                     ?_vfprintf:
  3805  005E                     vfprintf@fmt:	
  3806                           ; 2 bytes @ 0x3E
  3807                           
  3808                           
  3809                           ; 2 bytes @ 0x3E
  3810  005E                     	ds	2
  3811  0060                     vfprintf@ap:
  3812                           
  3813                           ; 1 bytes @ 0x40
  3814  0060                     	ds	1
  3815  0061                     ??_vfprintf:
  3816                           
  3817                           ; 1 bytes @ 0x41
  3818  0061                     	ds	2
  3819  0063                     vfprintf@fp:
  3820                           
  3821                           ; 1 bytes @ 0x43
  3822  0063                     	ds	1
  3823  0064                     vfprintf@cfmt:
  3824                           
  3825                           ; 2 bytes @ 0x44
  3826  0064                     	ds	2
  3827  0066                     ?_printf:
  3828  0066                     ?_sprintf:	
  3829                           ; 2 bytes @ 0x46
  3830                           
  3831  0066                     sprintf@fmt:	
  3832                           ; 2 bytes @ 0x46
  3833                           
  3834  0066                     printf@fmt:	
  3835                           ; 2 bytes @ 0x46
  3836                           
  3837                           
  3838                           ; 2 bytes @ 0x46
  3839  0066                     	ds	6
  3840  006C                     ??_printf:
  3841  006C                     ??_sprintf:	
  3842                           ; 1 bytes @ 0x4C
  3843                           
  3844                           
  3845                           ; 1 bytes @ 0x4C
  3846  006C                     	ds	1
  3847  006D                     printf@ap:
  3848                           
  3849                           ; 1 bytes @ 0x4D
  3850  006D                     	ds	1
  3851  006E                     ??_main:
  3852                           
  3853                           ; 1 bytes @ 0x4E
  3854  006E                     	ds	2
  3855                           
  3856                           	psect	maintext
  3857  030A                     __pmaintext:	
  3858 ;;
  3859 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3860 ;;
  3861 ;; *************** function _main *****************
  3862 ;; Defined at:
  3863 ;;		line 30 in file "Main_lcd_i2c.c"
  3864 ;; Parameters:    Size  Location     Type
  3865 ;;		None
  3866 ;; Auto vars:     Size  Location     Type
  3867 ;;  txt            32    7[BANK1 ] unsigned char [32]
  3868 ;; Return value:  Size  Location     Type
  3869 ;;                  1    wreg      void 
  3870 ;; Registers used:
  3871 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3872 ;; Tracked objects:
  3873 ;;		On entry : B1F/0
  3874 ;;		On exit  : 0/0
  3875 ;;		Unchanged: 0/0
  3876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3878 ;;      Locals:         0       0      32       0       0       0       0       0       0       0       0       0       
      +0       0
  3879 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3880 ;;      Totals:         0       2      32       0       0       0       0       0       0       0       0       0       
      +0       0
  3881 ;;Total ram usage:       34 bytes
  3882 ;; Hardware stack levels required when called: 9
  3883 ;; This function calls:
  3884 ;;		_Leer_EMC1001
  3885 ;;		_SYSTEM_init
  3886 ;;		___wmul
  3887 ;;		_lcd_init
  3888 ;;		_lcd_putchar
  3889 ;;		_printf
  3890 ;;		_sprintf
  3891 ;; This function is called by:
  3892 ;;		Startup code after reset
  3893 ;; This function uses a non-reentrant model
  3894 ;;
  3895                           
  3896                           
  3897                           ;psect for function _main
  3898  030A                     _main:
  3899  030A                     l2142:	
  3900                           ;incstack = 0
  3901                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3902                           
  3903                           
  3904                           ;Main_lcd_i2c.c: 31:     char txt[32];;Main_lcd_i2c.c: 32:     SYSTEM_init();
  3905  030A  3180  2005  3183   	fcall	_SYSTEM_init
  3906  030D                     l2144:
  3907                           
  3908                           ;Main_lcd_i2c.c: 33:     lcd_init();
  3909  030D  3182  2250  3183   	fcall	_lcd_init
  3910  0310                     l2146:
  3911                           
  3912                           ;Main_lcd_i2c.c: 34:     printf("Hola mundo lcd\n\r");
  3913  0310  3029               	movlw	low (STR_1| (0+32768))
  3914  0311  0020               	movlb	0	; select bank0
  3915  0312  00E6               	movwf	printf@fmt
  3916  0313  3090               	movlw	high (STR_1| (0+32768))
  3917  0314  00E7               	movwf	printf@fmt+1
  3918  0315  318F  27AC  3183   	fcall	_printf
  3919  0318                     l2148:
  3920                           
  3921                           ;Main_lcd_i2c.c: 35:     lcd_putchar("\fHola\nmundo lcd\n20\nx4");
  3922  0318  3000               	movlw	low (STR_2| (0+32768))
  3923  0319  0020               	movlb	0	; select bank0
  3924  031A  00A2               	movwf	lcd_putchar@dato
  3925  031B  3090               	movlw	high (STR_2| (0+32768))
  3926  031C  00A3               	movwf	lcd_putchar@dato+1
  3927  031D  3181  21F6  3183   	fcall	_lcd_putchar
  3928  0320                     l2150:
  3929                           
  3930                           ;Main_lcd_i2c.c: 36:     _delay((unsigned long)((500)*(8000000UL/4000.0)));
  3931  0320  3006               	movlw	6
  3932  0321  0020               	movlb	0	; select bank0
  3933  0322  00EF               	movwf	??_main+1
  3934  0323  3013               	movlw	19
  3935  0324  00EE               	movwf	??_main
  3936  0325  30AD               	movlw	173
  3937  0326                     u1567:
  3938  0326  0B89               	decfsz	9,f
  3939  0327  2B26               	goto	u1567
  3940  0328  0BEE               	decfsz	??_main,f
  3941  0329  2B26               	goto	u1567
  3942  032A  0BEF               	decfsz	??_main+1,f
  3943  032B  2B26               	goto	u1567
  3944  032C  3200               	nop2
  3945  032D                     l2152:
  3946                           
  3947                           ;Main_lcd_i2c.c: 39:         high_byte = Leer_EMC1001(0);
  3948  032D  3000               	movlw	0
  3949  032E  3180  2065  3183   	fcall	_Leer_EMC1001
  3950  0331  0020               	movlb	0	; select bank0
  3951  0332  00EE               	movwf	??_main
  3952  0333  086E               	movf	??_main,w
  3953  0334  0021               	movlb	1	; select bank1
  3954  0335  00D2               	movwf	_high_byte^(0+128)
  3955  0336                     l2154:
  3956                           
  3957                           ;Main_lcd_i2c.c: 40:         _delay((unsigned long)((10)*(8000000UL/4000.0)));
  3958  0336  301A               	movlw	26
  3959  0337  0020               	movlb	0	; select bank0
  3960  0338  00EE               	movwf	??_main
  3961  0339  30F8               	movlw	248
  3962  033A                     u1577:
  3963  033A  0B89               	decfsz	9,f
  3964  033B  2B3A               	goto	u1577
  3965  033C  0BEE               	decfsz	??_main,f
  3966  033D  2B3A               	goto	u1577
  3967  033E  0000               	nop
  3968  033F                     l2156:
  3969                           
  3970                           ;Main_lcd_i2c.c: 41:         low_byte = Leer_EMC1001(2);
  3971  033F  3002               	movlw	2
  3972  0340  3180  2065  3183   	fcall	_Leer_EMC1001
  3973  0343  0020               	movlb	0	; select bank0
  3974  0344  00EE               	movwf	??_main
  3975  0345  086E               	movf	??_main,w
  3976  0346  0021               	movlb	1	; select bank1
  3977  0347  00D1               	movwf	_low_byte^(0+128)
  3978  0348                     l2158:
  3979                           
  3980                           ;Main_lcd_i2c.c: 43:         low_byte = low_byte >> 6;
  3981  0348  0851               	movf	_low_byte^(0+128),w
  3982  0349  0020               	movlb	0	; select bank0
  3983  034A  00EE               	movwf	??_main
  3984  034B  3006               	movlw	6
  3985  034C                     u1535:
  3986  034C  36EE               	lsrf	??_main,f
  3987  034D  0B89               	decfsz	9,f
  3988  034E  2B4C               	goto	u1535
  3989  034F  086E               	movf	??_main,w
  3990  0350  00EF               	movwf	??_main+1
  3991  0351  086F               	movf	??_main+1,w
  3992  0352  0021               	movlb	1	; select bank1
  3993  0353  00D1               	movwf	_low_byte^(0+128)
  3994  0354                     l2160:
  3995                           
  3996                           ;Main_lcd_i2c.c: 44:         printf("La temperatura es: %d.%d C\n\r", high_byte, low_byt
      +                          e *25 );
  3997  0354  3004               	movlw	low (STR_3| (0+32768))
  3998  0355  0020               	movlb	0	; select bank0
  3999  0356  00E6               	movwf	printf@fmt
  4000  0357  3088               	movlw	high (STR_3| (0+32768))
  4001  0358  00E7               	movwf	printf@fmt+1
  4002  0359  0021               	movlb	1	; select bank1
  4003  035A  0852               	movf	_high_byte^(0+128),w
  4004  035B  0020               	movlb	0	; select bank0
  4005  035C  00E8               	movwf	?_printf+2
  4006  035D  01E9               	clrf	?_printf+3
  4007  035E  1BE8               	btfsc	?_printf+2,7
  4008  035F  03E9               	decf	?_printf+3,f
  4009  0360  0021               	movlb	1	; select bank1
  4010  0361  0851               	movf	_low_byte^(0+128),w
  4011  0362  0020               	movlb	0	; select bank0
  4012  0363  00EE               	movwf	??_main
  4013  0364  01EF               	clrf	??_main+1
  4014  0365  086E               	movf	??_main,w
  4015  0366  00F0               	movwf	___wmul@multiplier
  4016  0367  086F               	movf	??_main+1,w
  4017  0368  00F1               	movwf	___wmul@multiplier+1
  4018  0369  3019               	movlw	25
  4019  036A  00F2               	movwf	___wmul@multiplicand
  4020  036B  3000               	movlw	0
  4021  036C  00F3               	movwf	___wmul@multiplicand+1
  4022  036D  3180  2046  3183   	fcall	___wmul
  4023  0370  0871               	movf	?___wmul+1,w
  4024  0371  0020               	movlb	0	; select bank0
  4025  0372  00EB               	movwf	?_printf+5
  4026  0373  0870               	movf	?___wmul,w
  4027  0374  00EA               	movwf	?_printf+4
  4028  0375  318F  27AC  3183   	fcall	_printf
  4029  0378                     l2162:
  4030                           
  4031                           ;Main_lcd_i2c.c: 45:         LATA0 = !LATA0;
  4032  0378  3001               	movlw	1
  4033  0379  0020               	movlb	0	; select bank0
  4034  037A  0696               	xorwf	22,f
  4035  037B                     l2164:
  4036                           
  4037                           ;Main_lcd_i2c.c: 47:         sprintf(txt,"\fLa temp es:\n%d.%d", high_byte, low_byte *25
      +                          );
  4038  037B  3016               	movlw	low (STR_4| (0+32768))
  4039  037C  00E6               	movwf	sprintf@fmt
  4040  037D  3090               	movlw	high (STR_4| (0+32768))
  4041  037E  00E7               	movwf	sprintf@fmt+1
  4042  037F  0021               	movlb	1	; select bank1
  4043  0380  0852               	movf	_high_byte^(0+128),w
  4044  0381  0020               	movlb	0	; select bank0
  4045  0382  00E8               	movwf	?_sprintf+2
  4046  0383  01E9               	clrf	?_sprintf+3
  4047  0384  1BE8               	btfsc	?_sprintf+2,7
  4048  0385  03E9               	decf	?_sprintf+3,f
  4049  0386  0021               	movlb	1	; select bank1
  4050  0387  0851               	movf	_low_byte^(0+128),w
  4051  0388  0020               	movlb	0	; select bank0
  4052  0389  00EE               	movwf	??_main
  4053  038A  01EF               	clrf	??_main+1
  4054  038B  086E               	movf	??_main,w
  4055  038C  00F0               	movwf	___wmul@multiplier
  4056  038D  086F               	movf	??_main+1,w
  4057  038E  00F1               	movwf	___wmul@multiplier+1
  4058  038F  3019               	movlw	25
  4059  0390  00F2               	movwf	___wmul@multiplicand
  4060  0391  3000               	movlw	0
  4061  0392  00F3               	movwf	___wmul@multiplicand+1
  4062  0393  3180  2046  3183   	fcall	___wmul
  4063  0396  0871               	movf	?___wmul+1,w
  4064  0397  0020               	movlb	0	; select bank0
  4065  0398  00EB               	movwf	?_sprintf+5
  4066  0399  0870               	movf	?___wmul,w
  4067  039A  00EA               	movwf	?_sprintf+4
  4068  039B  30A7               	movlw	(low (main@txt| 0))& (0+255)
  4069  039C  3180  20AF  3183   	fcall	_sprintf
  4070  039F                     l2166:
  4071                           
  4072                           ;Main_lcd_i2c.c: 48:         lcd_putchar(txt);
  4073  039F  30A7               	movlw	low main@txt
  4074  03A0  0020               	movlb	0	; select bank0
  4075  03A1  00A2               	movwf	lcd_putchar@dato
  4076  03A2  3000               	movlw	high main@txt
  4077  03A3  00A3               	movwf	lcd_putchar@dato+1
  4078  03A4  3181  21F6  3183   	fcall	_lcd_putchar
  4079  03A7                     l2168:
  4080                           
  4081                           ;Main_lcd_i2c.c: 54:         _delay((unsigned long)((100)*(8000000UL/4000.0)));
  4082  03A7  3002               	movlw	2
  4083  03A8  0020               	movlb	0	; select bank0
  4084  03A9  00EF               	movwf	??_main+1
  4085  03AA  3004               	movlw	4
  4086  03AB  00EE               	movwf	??_main
  4087  03AC  30BA               	movlw	186
  4088  03AD                     u1587:
  4089  03AD  0B89               	decfsz	9,f
  4090  03AE  2BAD               	goto	u1587
  4091  03AF  0BEE               	decfsz	??_main,f
  4092  03B0  2BAD               	goto	u1587
  4093  03B1  0BEF               	decfsz	??_main+1,f
  4094  03B2  2BAD               	goto	u1587
  4095  03B3  0000               	nop
  4096  03B4  2B2D               	goto	l2152
  4097  03B5  3180  2802         	ljmp	start
  4098  03B7                     __end_of_main:
  4099                           
  4100                           	psect	text1
  4101  00AF                     __ptext1:	
  4102 ;; *************** function _sprintf *****************
  4103 ;; Defined at:
  4104 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  4105 ;; Parameters:    Size  Location     Type
  4106 ;;  s               1    wreg     PTR unsigned char 
  4107 ;;		 -> main@txt(32), 
  4108 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  4109 ;;		 -> STR_4(19), 
  4110 ;; Auto vars:     Size  Location     Type
  4111 ;;  s               1    1[BANK1 ] PTR unsigned char 
  4112 ;;		 -> main@txt(32), 
  4113 ;;  f               5    2[BANK1 ] struct _IO_FILE
  4114 ;;  ret             2    0        int 
  4115 ;;  ap              1    0[BANK1 ] PTR void [1]
  4116 ;;		 -> ?_printf(2), ?_sprintf(2), 
  4117 ;; Return value:  Size  Location     Type
  4118 ;;                  2   70[BANK0 ] int 
  4119 ;; Registers used:
  4120 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4121 ;; Tracked objects:
  4122 ;;		On entry : 0/0
  4123 ;;		On exit  : 0/0
  4124 ;;		Unchanged: 0/0
  4125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4126 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4127 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  4128 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4129 ;;      Totals:         0       7       7       0       0       0       0       0       0       0       0       0       
      +0       0
  4130 ;;Total ram usage:       14 bytes
  4131 ;; Hardware stack levels used: 1
  4132 ;; Hardware stack levels required when called: 8
  4133 ;; This function calls:
  4134 ;;		_vfprintf
  4135 ;; This function is called by:
  4136 ;;		_main
  4137 ;; This function uses a non-reentrant model
  4138 ;;
  4139                           
  4140                           
  4141                           ;psect for function _sprintf
  4142  00AF                     _sprintf:
  4143                           
  4144                           ;incstack = 0
  4145                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4146                           ;sprintf@s stored from wreg
  4147  00AF  0021               	movlb	1	; select bank1
  4148  00B0  00A1               	movwf	sprintf@s^(0+128)
  4149  00B1                     l2116:
  4150  00B1  3068               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  4151  00B2  0020               	movlb	0	; select bank0
  4152  00B3  00EC               	movwf	??_sprintf
  4153  00B4  086C               	movf	??_sprintf,w
  4154  00B5  0021               	movlb	1	; select bank1
  4155  00B6  00A0               	movwf	sprintf@ap^(0+128)
  4156  00B7  0821               	movf	sprintf@s^(0+128),w
  4157  00B8  0020               	movlb	0	; select bank0
  4158  00B9  00EC               	movwf	??_sprintf
  4159  00BA  086C               	movf	??_sprintf,w
  4160  00BB  0021               	movlb	1	; select bank1
  4161  00BC  00A2               	movwf	sprintf@f^(0+128)
  4162  00BD                     l2118:
  4163  00BD  01A3               	clrf	(sprintf@f^(0+128)+1)
  4164  00BE  01A4               	clrf	((sprintf@f+1)^(0+128)+1)
  4165  00BF                     l2120:
  4166  00BF  01A5               	clrf	(sprintf@f^(0+128)+3)
  4167  00C0  01A6               	clrf	((sprintf@f+1)^(0+128)+3)
  4168  00C1                     l2122:
  4169  00C1  0020               	movlb	0	; select bank0
  4170  00C2  0867               	movf	sprintf@fmt+1,w
  4171  00C3  00DF               	movwf	vfprintf@fmt+1
  4172  00C4  0866               	movf	sprintf@fmt,w
  4173  00C5  00DE               	movwf	vfprintf@fmt
  4174  00C6  30A0               	movlw	(low (sprintf@ap| 0))& (0+255)
  4175  00C7  00EC               	movwf	??_sprintf
  4176  00C8  086C               	movf	??_sprintf,w
  4177  00C9  00E0               	movwf	vfprintf@ap
  4178  00CA  30A2               	movlw	(low (sprintf@f| 0))& (0+255)
  4179  00CB  3180  20D8  3180   	fcall	_vfprintf
  4180  00CE                     l2124:
  4181  00CE  0021               	movlb	1	; select bank1
  4182  00CF  0823               	movf	(sprintf@f^(0+128)+1),w
  4183  00D0  0721               	addwf	sprintf@s^(0+128),w
  4184  00D1  0020               	movlb	0	; select bank0
  4185  00D2  00EC               	movwf	??_sprintf
  4186  00D3  086C               	movf	??_sprintf,w
  4187  00D4  0086               	movwf	6
  4188  00D5  0187               	clrf	7
  4189  00D6  0181               	clrf	1
  4190  00D7                     l882:
  4191  00D7  0008               	return
  4192  00D8                     __end_of_sprintf:
  4193                           
  4194                           	psect	text2
  4195  0FAC                     __ptext2:	
  4196 ;; *************** function _printf *****************
  4197 ;; Defined at:
  4198 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  4199 ;; Parameters:    Size  Location     Type
  4200 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  4201 ;;		 -> STR_3(29), STR_1(17), 
  4202 ;; Auto vars:     Size  Location     Type
  4203 ;;  ret             2    0        int 
  4204 ;;  ap              1   77[BANK0 ] PTR void [1]
  4205 ;;		 -> ?_printf(2), ?_sprintf(2), 
  4206 ;; Return value:  Size  Location     Type
  4207 ;;                  2   70[BANK0 ] int 
  4208 ;; Registers used:
  4209 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4210 ;; Tracked objects:
  4211 ;;		On entry : 0/0
  4212 ;;		On exit  : 0/0
  4213 ;;		Unchanged: 0/0
  4214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4215 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4216 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4217 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4218 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4219 ;;Total ram usage:        8 bytes
  4220 ;; Hardware stack levels used: 1
  4221 ;; Hardware stack levels required when called: 8
  4222 ;; This function calls:
  4223 ;;		_vfprintf
  4224 ;; This function is called by:
  4225 ;;		_main
  4226 ;; This function uses a non-reentrant model
  4227 ;;
  4228                           
  4229                           
  4230                           ;psect for function _printf
  4231  0FAC                     _printf:
  4232  0FAC                     l2082:	
  4233                           ;incstack = 0
  4234                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4235                           
  4236  0FAC  3068               	movlw	(low ((?_printf| 0+2)))& (0+255)
  4237  0FAD  0020               	movlb	0	; select bank0
  4238  0FAE  00EC               	movwf	??_printf
  4239  0FAF  086C               	movf	??_printf,w
  4240  0FB0  00ED               	movwf	printf@ap
  4241  0FB1                     l2084:
  4242  0FB1  0867               	movf	printf@fmt+1,w
  4243  0FB2  00DF               	movwf	vfprintf@fmt+1
  4244  0FB3  0866               	movf	printf@fmt,w
  4245  0FB4  00DE               	movwf	vfprintf@fmt
  4246  0FB5  306D               	movlw	(low (printf@ap| 0))& (0+255)
  4247  0FB6  00EC               	movwf	??_printf
  4248  0FB7  086C               	movf	??_printf,w
  4249  0FB8  00E0               	movwf	vfprintf@ap
  4250  0FB9  3000               	movlw	0
  4251  0FBA  3180  20D8  318F   	fcall	_vfprintf
  4252  0FBD                     l988:
  4253  0FBD  0008               	return
  4254  0FBE                     __end_of_printf:
  4255                           
  4256                           	psect	text3
  4257  00D8                     __ptext3:	
  4258 ;; *************** function _vfprintf *****************
  4259 ;; Defined at:
  4260 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4261 ;; Parameters:    Size  Location     Type
  4262 ;;  fp              1    wreg     PTR struct _IO_FILE
  4263 ;;		 -> NULL(0), sprintf@f(5), 
  4264 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  4265 ;;		 -> STR_4(19), STR_3(29), STR_1(17), 
  4266 ;;  ap              1   64[BANK0 ] PTR PTR void 
  4267 ;;		 -> printf@ap(1), sprintf@ap(1), 
  4268 ;; Auto vars:     Size  Location     Type
  4269 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
  4270 ;;		 -> NULL(0), sprintf@f(5), 
  4271 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
  4272 ;;		 -> STR_4(19), STR_3(29), STR_1(17), 
  4273 ;; Return value:  Size  Location     Type
  4274 ;;                  2   62[BANK0 ] int 
  4275 ;; Registers used:
  4276 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4277 ;; Tracked objects:
  4278 ;;		On entry : 0/0
  4279 ;;		On exit  : 0/0
  4280 ;;		Unchanged: 0/0
  4281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4282 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4283 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4284 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4285 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4286 ;;Total ram usage:        8 bytes
  4287 ;; Hardware stack levels used: 1
  4288 ;; Hardware stack levels required when called: 7
  4289 ;; This function calls:
  4290 ;;		_vfpfcnvrt
  4291 ;; This function is called by:
  4292 ;;		_sprintf
  4293 ;;		_printf
  4294 ;; This function uses a non-reentrant model
  4295 ;;
  4296                           
  4297                           
  4298                           ;psect for function _vfprintf
  4299  00D8                     _vfprintf:
  4300                           
  4301                           ;incstack = 0
  4302                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4303                           ;vfprintf@fp stored from wreg
  4304  00D8  0020               	movlb	0	; select bank0
  4305  00D9  00E3               	movwf	vfprintf@fp
  4306  00DA                     l2006:
  4307                           
  4308                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  4309  00DA  085F               	movf	vfprintf@fmt+1,w
  4310  00DB  00E5               	movwf	vfprintf@cfmt+1
  4311  00DC  085E               	movf	vfprintf@fmt,w
  4312  00DD  00E4               	movwf	vfprintf@cfmt
  4313  00DE                     l2008:
  4314                           
  4315                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  4316  00DE  0021               	movlb	1	; select bank1
  4317  00DF  01C7               	clrf	_nout^(0+128)
  4318  00E0  01C8               	clrf	(_nout+1)^(0+128)
  4319                           
  4320                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4321  00E1  28F6               	goto	l2012
  4322  00E2                     l2010:
  4323                           
  4324                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  4325  00E2  3064               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  4326  00E3  00E1               	movwf	??_vfprintf
  4327  00E4  0861               	movf	??_vfprintf,w
  4328  00E5  00CE               	movwf	vfpfcnvrt@fmt
  4329  00E6  0860               	movf	vfprintf@ap,w
  4330  00E7  00E2               	movwf	??_vfprintf+1
  4331  00E8  0862               	movf	??_vfprintf+1,w
  4332  00E9  00CF               	movwf	vfpfcnvrt@ap
  4333  00EA  0863               	movf	vfprintf@fp,w
  4334  00EB  3183  23B7  3180   	fcall	_vfpfcnvrt
  4335  00EE  0020               	movlb	0	; select bank0
  4336  00EF  084E               	movf	?_vfpfcnvrt,w
  4337  00F0  0021               	movlb	1	; select bank1
  4338  00F1  07C7               	addwf	_nout^(0+128),f
  4339  00F2  0020               	movlb	0	; select bank0
  4340  00F3  084F               	movf	?_vfpfcnvrt+1,w
  4341  00F4  0021               	movlb	1	; select bank1
  4342  00F5  3DC8               	addwfc	(_nout+1)^(0+128),f
  4343  00F6                     l2012:
  4344                           
  4345                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4346  00F6  0020               	movlb	0	; select bank0
  4347  00F7  0864               	movf	vfprintf@cfmt,w
  4348  00F8  0084               	movwf	4
  4349  00F9  0865               	movf	vfprintf@cfmt+1,w
  4350  00FA  0085               	movwf	5
  4351  00FB  0012               	moviw fsr0++
  4352  00FC  1D03               	btfss	3,2
  4353  00FD  28FF               	goto	u1451
  4354  00FE  2900               	goto	u1450
  4355  00FF                     u1451:
  4356  00FF  28E2               	goto	l2010
  4357  0100                     u1450:
  4358  0100                     l2014:
  4359                           
  4360                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  4361  0100  0021               	movlb	1	; select bank1
  4362  0101  0848               	movf	(_nout+1)^(0+128),w
  4363  0102  0020               	movlb	0	; select bank0
  4364  0103  00DF               	movwf	?_vfprintf+1
  4365  0104  0021               	movlb	1	; select bank1
  4366  0105  0847               	movf	_nout^(0+128),w
  4367  0106  0020               	movlb	0	; select bank0
  4368  0107  00DE               	movwf	?_vfprintf
  4369  0108                     l954:
  4370  0108  0008               	return
  4371  0109                     __end_of_vfprintf:
  4372                           
  4373                           	psect	text4
  4374  03B7                     __ptext4:	
  4375 ;; *************** function _vfpfcnvrt *****************
  4376 ;; Defined at:
  4377 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4378 ;; Parameters:    Size  Location     Type
  4379 ;;  fp              1    wreg     PTR struct _IO_FILE
  4380 ;;		 -> NULL(0), sprintf@f(5), 
  4381 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  4382 ;;		 -> vfprintf@cfmt(2), 
  4383 ;;  ap              1   47[BANK0 ] PTR PTR void 
  4384 ;;		 -> printf@ap(1), sprintf@ap(1), 
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;  fp              1   61[BANK0 ] PTR struct _IO_FILE
  4387 ;;		 -> NULL(0), sprintf@f(5), 
  4388 ;;  ll              8   53[BANK0 ] long long 
  4389 ;;  llu             8    0        unsigned long long 
  4390 ;;  f               4    0        unsigned long long 
  4391 ;;  ct              3    0        unsigned char [3]
  4392 ;;  vp              2    0        PTR void 
  4393 ;;  i               2    0        int 
  4394 ;;  done            2    0        int 
  4395 ;;  cp              2    0        PTR unsigned char 
  4396 ;;  c               1    0        unsigned char 
  4397 ;; Return value:  Size  Location     Type
  4398 ;;                  2   46[BANK0 ] int 
  4399 ;; Registers used:
  4400 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4401 ;; Tracked objects:
  4402 ;;		On entry : 0/0
  4403 ;;		On exit  : 0/0
  4404 ;;		Unchanged: 0/0
  4405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4406 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4407 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4408 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4409 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4410 ;;Total ram usage:       16 bytes
  4411 ;; Hardware stack levels used: 1
  4412 ;; Hardware stack levels required when called: 6
  4413 ;; This function calls:
  4414 ;;		_dtoa
  4415 ;;		_fputc
  4416 ;; This function is called by:
  4417 ;;		_vfprintf
  4418 ;; This function uses a non-reentrant model
  4419 ;;
  4420                           
  4421                           
  4422                           ;psect for function _vfpfcnvrt
  4423  03B7                     _vfpfcnvrt:
  4424                           
  4425                           ;incstack = 0
  4426                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4427                           ;vfpfcnvrt@fp stored from wreg
  4428  03B7  0020               	movlb	0	; select bank0
  4429  03B8  00DD               	movwf	vfpfcnvrt@fp
  4430  03B9                     l1874:
  4431                           
  4432                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  4433  03B9  084E               	movf	vfpfcnvrt@fmt,w
  4434  03BA  0086               	movwf	6
  4435  03BB  0187               	clrf	7
  4436  03BC  3F40               	moviw [0]fsr1
  4437  03BD  00D0               	movwf	??_vfpfcnvrt
  4438  03BE  3F41               	moviw [1]fsr1
  4439  03BF  00D1               	movwf	??_vfpfcnvrt+1
  4440  03C0  0850               	movf	??_vfpfcnvrt,w
  4441  03C1  0084               	movwf	4
  4442  03C2  0851               	movf	??_vfpfcnvrt+1,w
  4443  03C3  0085               	movwf	5
  4444  03C4  0012               	moviw fsr0++
  4445  03C5  3A25               	xorlw	37
  4446  03C6  1D03               	btfss	3,2
  4447  03C7  2BC9               	goto	u1381
  4448  03C8  2BCA               	goto	u1380
  4449  03C9                     u1381:
  4450  03C9  2C6E               	goto	l1910
  4451  03CA                     u1380:
  4452  03CA                     l1876:
  4453                           
  4454                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  4455  03CA  084E               	movf	vfpfcnvrt@fmt,w
  4456  03CB  0086               	movwf	6
  4457  03CC  0187               	clrf	7
  4458  03CD  3001               	movlw	1
  4459  03CE  0781               	addwf	1,f
  4460  03CF  3141               	addfsr 1,1
  4461  03D0  1803               	skipnc
  4462  03D1  0A81               	incf	1,f
  4463  03D2                     l1878:
  4464                           
  4465                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  4466  03D2  0021               	movlb	1	; select bank1
  4467  03D3  01C9               	clrf	_width^(0+128)
  4468  03D4  01CA               	clrf	(_width+1)^(0+128)
  4469  03D5  01CD               	clrf	_flags^(0+128)
  4470  03D6  01CE               	clrf	(_flags+1)^(0+128)
  4471  03D7                     l1880:
  4472                           
  4473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  4474  03D7  30FF               	movlw	255
  4475  03D8  00CB               	movwf	_prec^(0+128)
  4476  03D9  30FF               	movlw	255
  4477  03DA  00CC               	movwf	(_prec^(0+128)+1)
  4478  03DB                     l1882:
  4479                           
  4480                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4481  03DB  0020               	movlb	0	; select bank0
  4482  03DC  084E               	movf	vfpfcnvrt@fmt,w
  4483  03DD  0086               	movwf	6
  4484  03DE  0187               	clrf	7
  4485  03DF  3F40               	moviw [0]fsr1
  4486  03E0  00D0               	movwf	??_vfpfcnvrt
  4487  03E1  3F41               	moviw [1]fsr1
  4488  03E2  00D1               	movwf	??_vfpfcnvrt+1
  4489  03E3  0850               	movf	??_vfpfcnvrt,w
  4490  03E4  0084               	movwf	4
  4491  03E5  0851               	movf	??_vfpfcnvrt+1,w
  4492  03E6  0085               	movwf	5
  4493  03E7  0012               	moviw fsr0++
  4494  03E8  3A64               	xorlw	100
  4495  03E9  1903               	btfsc	3,2
  4496  03EA  2BEC               	goto	u1391
  4497  03EB  2BED               	goto	u1390
  4498  03EC                     u1391:
  4499  03EC  2BFE               	goto	l1886
  4500  03ED                     u1390:
  4501  03ED                     l1884:
  4502  03ED  084E               	movf	vfpfcnvrt@fmt,w
  4503  03EE  0086               	movwf	6
  4504  03EF  0187               	clrf	7
  4505  03F0  3F40               	moviw [0]fsr1
  4506  03F1  00D0               	movwf	??_vfpfcnvrt
  4507  03F2  3F41               	moviw [1]fsr1
  4508  03F3  00D1               	movwf	??_vfpfcnvrt+1
  4509  03F4  0850               	movf	??_vfpfcnvrt,w
  4510  03F5  0084               	movwf	4
  4511  03F6  0851               	movf	??_vfpfcnvrt+1,w
  4512  03F7  0085               	movwf	5
  4513  03F8  0012               	moviw fsr0++
  4514  03F9  3A69               	xorlw	105
  4515  03FA  1D03               	btfss	3,2
  4516  03FB  2BFD               	goto	u1401
  4517  03FC  2BFE               	goto	u1400
  4518  03FD                     u1401:
  4519  03FD  2C39               	goto	l1894
  4520  03FE                     u1400:
  4521  03FE                     l1886:
  4522                           
  4523                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  4524  03FE  084E               	movf	vfpfcnvrt@fmt,w
  4525  03FF  0086               	movwf	6
  4526  0400  0187               	clrf	7
  4527  0401  3001               	movlw	1
  4528  0402  0781               	addwf	1,f
  4529  0403  3141               	addfsr 1,1
  4530  0404  1803               	skipnc
  4531  0405  0A81               	incf	1,f
  4532  0406                     l1888:
  4533                           
  4534                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4535  0406  084F               	movf	vfpfcnvrt@ap,w
  4536  0407  0086               	movwf	6
  4537  0408  0187               	clrf	7
  4538  0409  0801               	movf	1,w
  4539  040A  0084               	movwf	4
  4540  040B  0185               	clrf	5
  4541  040C  3002               	movlw	2
  4542  040D  0781               	addwf	1,f
  4543  040E  3F00               	moviw [0]fsr0
  4544  040F  00D0               	movwf	??_vfpfcnvrt
  4545  0410  3F01               	moviw [1]fsr0
  4546  0411  00D1               	movwf	??_vfpfcnvrt+1
  4547  0412  0850               	movf	??_vfpfcnvrt,w
  4548  0413  00D5               	movwf	vfpfcnvrt@ll
  4549  0414  0851               	movf	??_vfpfcnvrt+1,w
  4550  0415  00D6               	movwf	vfpfcnvrt@ll+1
  4551  0416  0D89               	rlf	9,f
  4552  0417  3B89               	subwfb	9,f
  4553  0418  0989               	comf	9,f
  4554  0419  00D7               	movwf	vfpfcnvrt@ll+2
  4555  041A  00D8               	movwf	vfpfcnvrt@ll+3
  4556  041B  00D9               	movwf	vfpfcnvrt@ll+4
  4557  041C  00DA               	movwf	vfpfcnvrt@ll+5
  4558  041D  00DB               	movwf	vfpfcnvrt@ll+6
  4559  041E  00DC               	movwf	vfpfcnvrt@ll+7
  4560  041F                     l1890:
  4561                           
  4562                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  4563  041F  0855               	movf	vfpfcnvrt@ll,w
  4564  0420  00B0               	movwf	dtoa@d
  4565  0421  0856               	movf	vfpfcnvrt@ll+1,w
  4566  0422  00B1               	movwf	dtoa@d+1
  4567  0423  0857               	movf	vfpfcnvrt@ll+2,w
  4568  0424  00B2               	movwf	dtoa@d+2
  4569  0425  0858               	movf	vfpfcnvrt@ll+3,w
  4570  0426  00B3               	movwf	dtoa@d+3
  4571  0427  0859               	movf	vfpfcnvrt@ll+4,w
  4572  0428  00B4               	movwf	dtoa@d+4
  4573  0429  085A               	movf	vfpfcnvrt@ll+5,w
  4574  042A  00B5               	movwf	dtoa@d+5
  4575  042B  085B               	movf	vfpfcnvrt@ll+6,w
  4576  042C  00B6               	movwf	dtoa@d+6
  4577  042D  085C               	movf	vfpfcnvrt@ll+7,w
  4578  042E  00B7               	movwf	dtoa@d+7
  4579  042F  085D               	movf	vfpfcnvrt@fp,w
  4580  0430  3186  267D  3183   	fcall	_dtoa
  4581  0433  0020               	movlb	0	; select bank0
  4582  0434  0831               	movf	?_dtoa+1,w
  4583  0435  00CF               	movwf	?_vfpfcnvrt+1
  4584  0436  0830               	movf	?_dtoa,w
  4585  0437  00CE               	movwf	?_vfpfcnvrt
  4586  0438  2C91               	goto	l947
  4587  0439                     l1894:
  4588                           
  4589                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  4590  0439  084E               	movf	vfpfcnvrt@fmt,w
  4591  043A  0086               	movwf	6
  4592  043B  0187               	clrf	7
  4593  043C  3F40               	moviw [0]fsr1
  4594  043D  00D0               	movwf	??_vfpfcnvrt
  4595  043E  3F41               	moviw [1]fsr1
  4596  043F  00D1               	movwf	??_vfpfcnvrt+1
  4597  0440  0850               	movf	??_vfpfcnvrt,w
  4598  0441  0084               	movwf	4
  4599  0442  0851               	movf	??_vfpfcnvrt+1,w
  4600  0443  0085               	movwf	5
  4601  0444  0012               	moviw fsr0++
  4602  0445  3A25               	xorlw	37
  4603  0446  1D03               	btfss	3,2
  4604  0447  2C49               	goto	u1411
  4605  0448  2C4A               	goto	u1410
  4606  0449                     u1411:
  4607  0449  2C63               	goto	l1904
  4608  044A                     u1410:
  4609  044A                     l1896:
  4610                           
  4611                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  4612  044A  084E               	movf	vfpfcnvrt@fmt,w
  4613  044B  0086               	movwf	6
  4614  044C  0187               	clrf	7
  4615  044D  3001               	movlw	1
  4616  044E  0781               	addwf	1,f
  4617  044F  3141               	addfsr 1,1
  4618  0450  1803               	skipnc
  4619  0451  0A81               	incf	1,f
  4620  0452                     l1898:
  4621                           
  4622                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  4623  0452  3025               	movlw	37
  4624  0453  00F2               	movwf	fputc@c
  4625  0454  3000               	movlw	0
  4626  0455  00F3               	movwf	fputc@c+1
  4627  0456  085D               	movf	vfpfcnvrt@fp,w
  4628  0457  00D0               	movwf	??_vfpfcnvrt
  4629  0458  0850               	movf	??_vfpfcnvrt,w
  4630  0459  00F4               	movwf	fputc@fp
  4631  045A  3181  214E  3183   	fcall	_fputc
  4632  045D                     l1900:
  4633                           
  4634                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  4635  045D  3001               	movlw	1
  4636  045E  0020               	movlb	0	; select bank0
  4637  045F  00CE               	movwf	?_vfpfcnvrt
  4638  0460  3000               	movlw	0
  4639  0461  00CF               	movwf	?_vfpfcnvrt+1
  4640  0462  2C91               	goto	l947
  4641  0463                     l1904:
  4642                           
  4643                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  4644  0463  084E               	movf	vfpfcnvrt@fmt,w
  4645  0464  0086               	movwf	6
  4646  0465  0187               	clrf	7
  4647  0466  3001               	movlw	1
  4648  0467  0781               	addwf	1,f
  4649  0468  3141               	addfsr 1,1
  4650  0469  1803               	skipnc
  4651  046A  0A81               	incf	1,f
  4652  046B                     l1906:
  4653                           
  4654                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  4655  046B  01CE               	clrf	?_vfpfcnvrt
  4656  046C  01CF               	clrf	?_vfpfcnvrt+1
  4657  046D  2C91               	goto	l947
  4658  046E                     l1910:
  4659                           
  4660                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  4661  046E  084E               	movf	vfpfcnvrt@fmt,w
  4662  046F  0086               	movwf	6
  4663  0470  0187               	clrf	7
  4664  0471  3F40               	moviw [0]fsr1
  4665  0472  00D0               	movwf	??_vfpfcnvrt
  4666  0473  3F41               	moviw [1]fsr1
  4667  0474  00D1               	movwf	??_vfpfcnvrt+1
  4668  0475  0850               	movf	??_vfpfcnvrt,w
  4669  0476  0084               	movwf	4
  4670  0477  0851               	movf	??_vfpfcnvrt+1,w
  4671  0478  0085               	movwf	5
  4672  0479  0800               	movf	0,w	;code access
  4673  047A  00D2               	movwf	??_vfpfcnvrt+2
  4674  047B  01D3               	clrf	??_vfpfcnvrt+3
  4675  047C  0852               	movf	??_vfpfcnvrt+2,w
  4676  047D  00F2               	movwf	fputc@c
  4677  047E  0853               	movf	??_vfpfcnvrt+3,w
  4678  047F  00F3               	movwf	fputc@c+1
  4679  0480  085D               	movf	vfpfcnvrt@fp,w
  4680  0481  00D4               	movwf	??_vfpfcnvrt+4
  4681  0482  0854               	movf	??_vfpfcnvrt+4,w
  4682  0483  00F4               	movwf	fputc@fp
  4683  0484  3181  214E  3183   	fcall	_fputc
  4684  0487                     l1912:
  4685                           
  4686                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  4687  0487  0020               	movlb	0	; select bank0
  4688  0488  084E               	movf	vfpfcnvrt@fmt,w
  4689  0489  0086               	movwf	6
  4690  048A  0187               	clrf	7
  4691  048B  3001               	movlw	1
  4692  048C  0781               	addwf	1,f
  4693  048D  3141               	addfsr 1,1
  4694  048E  1803               	skipnc
  4695  048F  0A81               	incf	1,f
  4696  0490  2C5D               	goto	l1900
  4697  0491                     l947:
  4698  0491  0008               	return
  4699  0492                     __end_of_vfpfcnvrt:
  4700                           
  4701                           	psect	text5
  4702  067D                     __ptext5:	
  4703 ;; *************** function _dtoa *****************
  4704 ;; Defined at:
  4705 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4706 ;; Parameters:    Size  Location     Type
  4707 ;;  fp              1    wreg     PTR struct _IO_FILE
  4708 ;;		 -> NULL(0), sprintf@f(5), 
  4709 ;;  d               8   16[BANK0 ] long long 
  4710 ;; Auto vars:     Size  Location     Type
  4711 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  4712 ;;		 -> NULL(0), sprintf@f(5), 
  4713 ;;  n               8   36[BANK0 ] long long 
  4714 ;;  i               2   44[BANK0 ] int 
  4715 ;;  s               2   34[BANK0 ] int 
  4716 ;;  w               2   32[BANK0 ] int 
  4717 ;;  p               2   30[BANK0 ] int 
  4718 ;; Return value:  Size  Location     Type
  4719 ;;                  2   16[BANK0 ] int 
  4720 ;; Registers used:
  4721 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4722 ;; Tracked objects:
  4723 ;;		On entry : 0/0
  4724 ;;		On exit  : 0/0
  4725 ;;		Unchanged: 0/0
  4726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4727 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4728 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4729 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4730 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4731 ;;Total ram usage:       30 bytes
  4732 ;; Hardware stack levels used: 1
  4733 ;; Hardware stack levels required when called: 5
  4734 ;; This function calls:
  4735 ;;		___aodiv
  4736 ;;		___aomod
  4737 ;;		_abs
  4738 ;;		_pad
  4739 ;; This function is called by:
  4740 ;;		_vfpfcnvrt
  4741 ;; This function uses a non-reentrant model
  4742 ;;
  4743                           
  4744                           
  4745                           ;psect for function _dtoa
  4746  067D                     _dtoa:
  4747                           
  4748                           ;incstack = 0
  4749                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4750                           ;dtoa@fp stored from wreg
  4751  067D  0020               	movlb	0	; select bank0
  4752  067E  00BD               	movwf	dtoa@fp
  4753  067F                     l1814:
  4754                           
  4755                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  4756  067F  0830               	movf	dtoa@d,w
  4757  0680  00C4               	movwf	dtoa@n
  4758  0681  0831               	movf	dtoa@d+1,w
  4759  0682  00C5               	movwf	dtoa@n+1
  4760  0683  0832               	movf	dtoa@d+2,w
  4761  0684  00C6               	movwf	dtoa@n+2
  4762  0685  0833               	movf	dtoa@d+3,w
  4763  0686  00C7               	movwf	dtoa@n+3
  4764  0687  0834               	movf	dtoa@d+4,w
  4765  0688  00C8               	movwf	dtoa@n+4
  4766  0689  0835               	movf	dtoa@d+5,w
  4767  068A  00C9               	movwf	dtoa@n+5
  4768  068B  0836               	movf	dtoa@d+6,w
  4769  068C  00CA               	movwf	dtoa@n+6
  4770  068D  0837               	movf	dtoa@d+7,w
  4771  068E  00CB               	movwf	dtoa@n+7
  4772  068F                     l1816:
  4773                           
  4774                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  4775  068F  3044               	movlw	low dtoa@n
  4776  0690  0086               	movwf	6
  4777  0691  3000               	movlw	high dtoa@n
  4778  0692  0087               	movwf	7
  4779  0693  3F47               	moviw [7]fsr1
  4780  0694  00B8               	movwf	??_dtoa
  4781  0695  1BB8               	btfsc	??_dtoa,7
  4782  0696  2E98               	goto	u1211
  4783  0697  2E9A               	goto	u1210
  4784  0698                     u1211:
  4785  0698  3001               	movlw	1
  4786  0699  2E9B               	goto	u1220
  4787  069A                     u1210:
  4788  069A  3000               	movlw	0
  4789  069B                     u1220:
  4790  069B  0020               	movlb	0	; select bank0
  4791  069C  00B9               	movwf	??_dtoa+1
  4792  069D  01BA               	clrf	??_dtoa+2
  4793  069E  0839               	movf	??_dtoa+1,w
  4794  069F  00C2               	movwf	dtoa@s
  4795  06A0  083A               	movf	??_dtoa+2,w
  4796  06A1  00C3               	movwf	dtoa@s+1
  4797  06A2                     l1818:
  4798                           
  4799                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  4800  06A2  0842               	movf	dtoa@s,w
  4801  06A3  0443               	iorwf	dtoa@s+1,w
  4802  06A4  1903               	btfsc	3,2
  4803  06A5  2EA7               	goto	u1231
  4804  06A6  2EA8               	goto	u1230
  4805  06A7                     u1231:
  4806  06A7  2EC6               	goto	l917
  4807  06A8                     u1230:
  4808  06A8                     l1820:
  4809                           
  4810                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  4811  06A8  09C4               	comf	dtoa@n,f
  4812  06A9  09C5               	comf	dtoa@n+1,f
  4813  06AA  09C6               	comf	dtoa@n+2,f
  4814  06AB  09C7               	comf	dtoa@n+3,f
  4815  06AC  09C8               	comf	dtoa@n+4,f
  4816  06AD  09C9               	comf	dtoa@n+5,f
  4817  06AE  09CA               	comf	dtoa@n+6,f
  4818  06AF  09CB               	comf	dtoa@n+7,f
  4819  06B0  0AC4               	incf	dtoa@n,f
  4820  06B1  1D03               	skipz
  4821  06B2  2EC6               	goto	u124lld
  4822  06B3  0AC5               	incf	dtoa@n+1,f
  4823  06B4  1D03               	skipz
  4824  06B5  2EC6               	goto	u124lld
  4825  06B6  0AC6               	incf	dtoa@n+2,f
  4826  06B7  1D03               	skipz
  4827  06B8  2EC6               	goto	u124lld
  4828  06B9  0AC7               	incf	dtoa@n+3,f
  4829  06BA  1D03               	skipz
  4830  06BB  2EC6               	goto	u124lld
  4831  06BC  0AC8               	incf	dtoa@n+4,f
  4832  06BD  1D03               	skipz
  4833  06BE  2EC6               	goto	u124lld
  4834  06BF  0AC9               	incf	dtoa@n+5,f
  4835  06C0  1D03               	skipz
  4836  06C1  2EC6               	goto	u124lld
  4837  06C2  0ACA               	incf	dtoa@n+6,f
  4838  06C3  1D03               	skipz
  4839  06C4  2EC6               	goto	u124lld
  4840  06C5  0ACB               	incf	dtoa@n+7,f
  4841  06C6                     u124lld:
  4842  06C6                     l917:	
  4843                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 297:     }
  4844                           
  4845                           
  4846                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  4847  06C6  0021               	movlb	1	; select bank1
  4848  06C7  1BCC               	btfsc	(_prec+1)^(0+128),7
  4849  06C8  2ECA               	goto	u1251
  4850  06C9  2ECB               	goto	u1250
  4851  06CA                     u1251:
  4852  06CA  2ECF               	goto	l918
  4853  06CB                     u1250:
  4854  06CB                     l1822:
  4855                           
  4856                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  4857  06CB  30FD               	movlw	253
  4858  06CC  05CD               	andwf	_flags^(0+128),f
  4859  06CD  30FF               	movlw	255
  4860  06CE  05CE               	andwf	(_flags+1)^(0+128),f
  4861  06CF                     l918:	
  4862                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 302:     }
  4863                           
  4864                           
  4865                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  4866  06CF  084C               	movf	(_prec+1)^(0+128),w
  4867  06D0  3A80               	xorlw	128
  4868  06D1  0020               	movlb	0	; select bank0
  4869  06D2  00B8               	movwf	??_dtoa
  4870  06D3  3080               	movlw	128
  4871  06D4  0238               	subwf	??_dtoa,w
  4872  06D5  1D03               	skipz
  4873  06D6  2EDA               	goto	u1265
  4874  06D7  3001               	movlw	1
  4875  06D8  0021               	movlb	1	; select bank1
  4876  06D9  024B               	subwf	_prec^(0+128),w
  4877  06DA                     u1265:
  4878  06DA  1803               	skipnc
  4879  06DB  2EDD               	goto	u1261
  4880  06DC  2EDE               	goto	u1260
  4881  06DD                     u1261:
  4882  06DD  2EE4               	goto	l1826
  4883  06DE                     u1260:
  4884  06DE                     l1824:
  4885  06DE  3001               	movlw	1
  4886  06DF  0020               	movlb	0	; select bank0
  4887  06E0  00BE               	movwf	dtoa@p
  4888  06E1  3000               	movlw	0
  4889  06E2  00BF               	movwf	dtoa@p+1
  4890  06E3  2EEC               	goto	l922
  4891  06E4                     l1826:
  4892  06E4  0021               	movlb	1	; select bank1
  4893  06E5  084C               	movf	(_prec+1)^(0+128),w
  4894  06E6  0020               	movlb	0	; select bank0
  4895  06E7  00BF               	movwf	dtoa@p+1
  4896  06E8  0021               	movlb	1	; select bank1
  4897  06E9  084B               	movf	_prec^(0+128),w
  4898  06EA  0020               	movlb	0	; select bank0
  4899  06EB  00BE               	movwf	dtoa@p
  4900  06EC                     l922:
  4901                           
  4902                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  4903  06EC  0021               	movlb	1	; select bank1
  4904  06ED  084A               	movf	(_width+1)^(0+128),w
  4905  06EE  0020               	movlb	0	; select bank0
  4906  06EF  00C1               	movwf	dtoa@w+1
  4907  06F0  0021               	movlb	1	; select bank1
  4908  06F1  0849               	movf	_width^(0+128),w
  4909  06F2  0020               	movlb	0	; select bank0
  4910  06F3  00C0               	movwf	dtoa@w
  4911  06F4                     l1828:
  4912                           
  4913                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  4914  06F4  0842               	movf	dtoa@s,w
  4915  06F5  0443               	iorwf	dtoa@s+1,w
  4916  06F6  1D03               	btfss	3,2
  4917  06F7  2EF9               	goto	u1271
  4918  06F8  2EFA               	goto	u1270
  4919  06F9                     u1271:
  4920  06F9  2EFF               	goto	l1832
  4921  06FA                     u1270:
  4922  06FA                     l1830:
  4923  06FA  0021               	movlb	1	; select bank1
  4924  06FB  1D4D               	btfss	_flags^(0+128),2
  4925  06FC  2EFE               	goto	u1281
  4926  06FD  2EFF               	goto	u1280
  4927  06FE                     u1281:
  4928  06FE  2F04               	goto	l923
  4929  06FF                     u1280:
  4930  06FF                     l1832:
  4931                           
  4932                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  4933  06FF  30FF               	movlw	255
  4934  0700  0020               	movlb	0	; select bank0
  4935  0701  07C0               	addwf	dtoa@w,f
  4936  0702  30FF               	movlw	255
  4937  0703  3DC1               	addwfc	dtoa@w+1,f
  4938  0704                     l923:	
  4939                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 307:     }
  4940                           
  4941                           
  4942                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  4943  0704  301F               	movlw	31
  4944  0705  0020               	movlb	0	; select bank0
  4945  0706  00CC               	movwf	dtoa@i
  4946  0707  3000               	movlw	0
  4947  0708  00CD               	movwf	dtoa@i+1
  4948  0709                     l1834:
  4949                           
  4950                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  4951  0709  0022               	movlb	2	; select bank2
  4952  070A  01BF               	clrf	(_dbuf^(0+256)+31)
  4953                           
  4954                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4955  070B  2F75               	goto	l926
  4956  070C                     l1836:
  4957                           
  4958                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  4959  070C  30FF               	movlw	255
  4960  070D  0020               	movlb	0	; select bank0
  4961  070E  07CC               	addwf	dtoa@i,f
  4962  070F  30FF               	movlw	255
  4963  0710  3DCD               	addwfc	dtoa@i+1,f
  4964  0711                     l1838:
  4965                           
  4966                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  4967  0711  300A               	movlw	10
  4968  0712  00A0               	movwf	___aomod@divisor
  4969  0713  01A1               	clrf	___aomod@divisor+1
  4970  0714  01A2               	clrf	___aomod@divisor+2
  4971  0715  01A3               	clrf	___aomod@divisor+3
  4972  0716  01A4               	clrf	___aomod@divisor+4
  4973  0717  01A5               	clrf	___aomod@divisor+5
  4974  0718  01A6               	clrf	___aomod@divisor+6
  4975  0719  01A7               	clrf	___aomod@divisor+7
  4976  071A  0844               	movf	dtoa@n,w
  4977  071B  00A8               	movwf	___aomod@dividend
  4978  071C  0845               	movf	dtoa@n+1,w
  4979  071D  00A9               	movwf	___aomod@dividend+1
  4980  071E  0846               	movf	dtoa@n+2,w
  4981  071F  00AA               	movwf	___aomod@dividend+2
  4982  0720  0847               	movf	dtoa@n+3,w
  4983  0721  00AB               	movwf	___aomod@dividend+3
  4984  0722  0848               	movf	dtoa@n+4,w
  4985  0723  00AC               	movwf	___aomod@dividend+4
  4986  0724  0849               	movf	dtoa@n+5,w
  4987  0725  00AD               	movwf	___aomod@dividend+5
  4988  0726  084A               	movf	dtoa@n+6,w
  4989  0727  00AE               	movwf	___aomod@dividend+6
  4990  0728  084B               	movf	dtoa@n+7,w
  4991  0729  00AF               	movwf	___aomod@dividend+7
  4992  072A  3184  2492  3186   	fcall	___aomod
  4993  072D  0020               	movlb	0	; select bank0
  4994  072E  0821               	movf	?___aomod+1,w
  4995  072F  00F4               	movwf	abs@a+1
  4996  0730  0820               	movf	?___aomod,w
  4997  0731  00F3               	movwf	abs@a
  4998  0732  3180  2012  3186   	fcall	_abs
  4999  0735  0873               	movf	?_abs,w
  5000  0736  3E30               	addlw	48
  5001  0737  0020               	movlb	0	; select bank0
  5002  0738  00B8               	movwf	??_dtoa
  5003  0739  084C               	movf	dtoa@i,w
  5004  073A  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5005  073B  0086               	movwf	6
  5006  073C  3001               	movlw	1	; select bank2/3
  5007  073D  0087               	movwf	7
  5008  073E  0838               	movf	??_dtoa,w
  5009  073F  0081               	movwf	1
  5010  0740                     l1840:
  5011                           
  5012                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  5013  0740  30FF               	movlw	255
  5014  0741  07BE               	addwf	dtoa@p,f
  5015  0742  30FF               	movlw	255
  5016  0743  3DBF               	addwfc	dtoa@p+1,f
  5017  0744                     l1842:
  5018                           
  5019                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  5020  0744  30FF               	movlw	255
  5021  0745  07C0               	addwf	dtoa@w,f
  5022  0746  30FF               	movlw	255
  5023  0747  3DC1               	addwfc	dtoa@w+1,f
  5024  0748                     l1844:
  5025                           
  5026                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  5027  0748  300A               	movlw	10
  5028  0749  00A0               	movwf	___aodiv@divisor
  5029  074A  01A1               	clrf	___aodiv@divisor+1
  5030  074B  01A2               	clrf	___aodiv@divisor+2
  5031  074C  01A3               	clrf	___aodiv@divisor+3
  5032  074D  01A4               	clrf	___aodiv@divisor+4
  5033  074E  01A5               	clrf	___aodiv@divisor+5
  5034  074F  01A6               	clrf	___aodiv@divisor+6
  5035  0750  01A7               	clrf	___aodiv@divisor+7
  5036  0751  0844               	movf	dtoa@n,w
  5037  0752  00A8               	movwf	___aodiv@dividend
  5038  0753  0845               	movf	dtoa@n+1,w
  5039  0754  00A9               	movwf	___aodiv@dividend+1
  5040  0755  0846               	movf	dtoa@n+2,w
  5041  0756  00AA               	movwf	___aodiv@dividend+2
  5042  0757  0847               	movf	dtoa@n+3,w
  5043  0758  00AB               	movwf	___aodiv@dividend+3
  5044  0759  0848               	movf	dtoa@n+4,w
  5045  075A  00AC               	movwf	___aodiv@dividend+4
  5046  075B  0849               	movf	dtoa@n+5,w
  5047  075C  00AD               	movwf	___aodiv@dividend+5
  5048  075D  084A               	movf	dtoa@n+6,w
  5049  075E  00AE               	movwf	___aodiv@dividend+6
  5050  075F  084B               	movf	dtoa@n+7,w
  5051  0760  00AF               	movwf	___aodiv@dividend+7
  5052  0761  3185  257C  3186   	fcall	___aodiv
  5053  0764  0020               	movlb	0	; select bank0
  5054  0765  0820               	movf	?___aodiv,w
  5055  0766  00C4               	movwf	dtoa@n
  5056  0767  0821               	movf	?___aodiv+1,w
  5057  0768  00C5               	movwf	dtoa@n+1
  5058  0769  0822               	movf	?___aodiv+2,w
  5059  076A  00C6               	movwf	dtoa@n+2
  5060  076B  0823               	movf	?___aodiv+3,w
  5061  076C  00C7               	movwf	dtoa@n+3
  5062  076D  0824               	movf	?___aodiv+4,w
  5063  076E  00C8               	movwf	dtoa@n+4
  5064  076F  0825               	movf	?___aodiv+5,w
  5065  0770  00C9               	movwf	dtoa@n+5
  5066  0771  0826               	movf	?___aodiv+6,w
  5067  0772  00CA               	movwf	dtoa@n+6
  5068  0773  0827               	movf	?___aodiv+7,w
  5069  0774  00CB               	movwf	dtoa@n+7
  5070  0775                     l926:	
  5071                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 318:     }
  5072                           
  5073                           
  5074                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5075  0775  0020               	movlb	0	; select bank0
  5076  0776  084D               	movf	dtoa@i+1,w
  5077  0777  3A80               	xorlw	128
  5078  0778  00B8               	movwf	??_dtoa
  5079  0779  3080               	movlw	128
  5080  077A  0238               	subwf	??_dtoa,w
  5081  077B  1D03               	skipz
  5082  077C  2F7F               	goto	u1295
  5083  077D  3001               	movlw	1
  5084  077E  024C               	subwf	dtoa@i,w
  5085  077F                     u1295:
  5086  077F  1C03               	skipc
  5087  0780  2F82               	goto	u1291
  5088  0781  2F83               	goto	u1290
  5089  0782                     u1291:
  5090  0782  2FB0               	goto	l1854
  5091  0783                     u1290:
  5092  0783                     l1846:
  5093  0783  0020               	movlb	0	; select bank0
  5094  0784  0844               	movf	dtoa@n,w
  5095  0785  0445               	iorwf	dtoa@n+1,w
  5096  0786  0446               	iorwf	dtoa@n+2,w
  5097  0787  0447               	iorwf	dtoa@n+3,w
  5098  0788  0448               	iorwf	dtoa@n+4,w
  5099  0789  0449               	iorwf	dtoa@n+5,w
  5100  078A  044A               	iorwf	dtoa@n+6,w
  5101  078B  044B               	iorwf	dtoa@n+7,w
  5102  078C  1D03               	skipz
  5103  078D  2F8F               	goto	u1301
  5104  078E  2F90               	goto	u1300
  5105  078F                     u1301:
  5106  078F  2F0C               	goto	l1836
  5107  0790                     u1300:
  5108  0790                     l1848:
  5109  0790  083F               	movf	dtoa@p+1,w
  5110  0791  3A80               	xorlw	128
  5111  0792  00B8               	movwf	??_dtoa
  5112  0793  3080               	movlw	128
  5113  0794  0238               	subwf	??_dtoa,w
  5114  0795  1D03               	skipz
  5115  0796  2F99               	goto	u1315
  5116  0797  3001               	movlw	1
  5117  0798  023E               	subwf	dtoa@p,w
  5118  0799                     u1315:
  5119  0799  1803               	skipnc
  5120  079A  2F9C               	goto	u1311
  5121  079B  2F9D               	goto	u1310
  5122  079C                     u1311:
  5123  079C  2F0C               	goto	l1836
  5124  079D                     u1310:
  5125  079D                     l1850:
  5126  079D  0020               	movlb	0	; select bank0
  5127  079E  0841               	movf	dtoa@w+1,w
  5128  079F  3A80               	xorlw	128
  5129  07A0  00B8               	movwf	??_dtoa
  5130  07A1  3080               	movlw	128
  5131  07A2  0238               	subwf	??_dtoa,w
  5132  07A3  1D03               	skipz
  5133  07A4  2FA7               	goto	u1325
  5134  07A5  3001               	movlw	1
  5135  07A6  0240               	subwf	dtoa@w,w
  5136  07A7                     u1325:
  5137  07A7  1C03               	skipc
  5138  07A8  2FAA               	goto	u1321
  5139  07A9  2FAB               	goto	u1320
  5140  07AA                     u1321:
  5141  07AA  2FB0               	goto	l1854
  5142  07AB                     u1320:
  5143  07AB                     l1852:
  5144  07AB  0021               	movlb	1	; select bank1
  5145  07AC  18CD               	btfsc	_flags^(0+128),1
  5146  07AD  2FAF               	goto	u1331
  5147  07AE  2FB0               	goto	u1330
  5148  07AF                     u1331:
  5149  07AF  2F0C               	goto	l1836
  5150  07B0                     u1330:
  5151  07B0                     l1854:
  5152                           
  5153                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  5154  07B0  0020               	movlb	0	; select bank0
  5155  07B1  0842               	movf	dtoa@s,w
  5156  07B2  0443               	iorwf	dtoa@s+1,w
  5157  07B3  1D03               	btfss	3,2
  5158  07B4  2FB6               	goto	u1341
  5159  07B5  2FB7               	goto	u1340
  5160  07B6                     u1341:
  5161  07B6  2FBC               	goto	l1858
  5162  07B7                     u1340:
  5163  07B7                     l1856:
  5164  07B7  0021               	movlb	1	; select bank1
  5165  07B8  1D4D               	btfss	_flags^(0+128),2
  5166  07B9  2FBB               	goto	u1351
  5167  07BA  2FBC               	goto	u1350
  5168  07BB                     u1351:
  5169  07BB  2FD9               	goto	l1868
  5170  07BC                     u1350:
  5171  07BC                     l1858:
  5172                           
  5173                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  5174  07BC  30FF               	movlw	255
  5175  07BD  0020               	movlb	0	; select bank0
  5176  07BE  07CC               	addwf	dtoa@i,f
  5177  07BF  30FF               	movlw	255
  5178  07C0  3DCD               	addwfc	dtoa@i+1,f
  5179  07C1                     l1860:
  5180                           
  5181                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  5182  07C1  0842               	movf	dtoa@s,w
  5183  07C2  0443               	iorwf	dtoa@s+1,w
  5184  07C3  1D03               	btfss	3,2
  5185  07C4  2FC6               	goto	u1361
  5186  07C5  2FC7               	goto	u1360
  5187  07C6                     u1361:
  5188  07C6  2FCC               	goto	l1864
  5189  07C7                     u1360:
  5190  07C7                     l1862:
  5191  07C7  302B               	movlw	43
  5192  07C8  00BB               	movwf	_dtoa$953
  5193  07C9  3000               	movlw	0
  5194  07CA  00BC               	movwf	_dtoa$953+1
  5195  07CB  2FD0               	goto	l1866
  5196  07CC                     l1864:
  5197  07CC  302D               	movlw	45
  5198  07CD  00BB               	movwf	_dtoa$953
  5199  07CE  3000               	movlw	0
  5200  07CF  00BC               	movwf	_dtoa$953+1
  5201  07D0                     l1866:
  5202  07D0  083B               	movf	_dtoa$953,w
  5203  07D1  00B8               	movwf	??_dtoa
  5204  07D2  084C               	movf	dtoa@i,w
  5205  07D3  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5206  07D4  0086               	movwf	6
  5207  07D5  3001               	movlw	1	; select bank2/3
  5208  07D6  0087               	movwf	7
  5209  07D7  0838               	movf	??_dtoa,w
  5210  07D8  0081               	movwf	1
  5211  07D9                     l1868:
  5212                           
  5213                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  5214  07D9  0020               	movlb	0	; select bank0
  5215  07DA  084C               	movf	dtoa@i,w
  5216  07DB  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5217  07DC  00B8               	movwf	??_dtoa
  5218  07DD  0838               	movf	??_dtoa,w
  5219  07DE  00A4               	movwf	pad@buf
  5220  07DF  0841               	movf	dtoa@w+1,w
  5221  07E0  00A6               	movwf	pad@p+1
  5222  07E1  0840               	movf	dtoa@w,w
  5223  07E2  00A5               	movwf	pad@p
  5224  07E3  083D               	movf	dtoa@fp,w
  5225  07E4  3181  219D  3186   	fcall	_pad
  5226  07E7  0020               	movlb	0	; select bank0
  5227  07E8  0825               	movf	?_pad+1,w
  5228  07E9  00B1               	movwf	?_dtoa+1
  5229  07EA  0824               	movf	?_pad,w
  5230  07EB  00B0               	movwf	?_dtoa
  5231  07EC                     l940:
  5232  07EC  0008               	return
  5233  07ED                     __end_of_dtoa:
  5234                           
  5235                           	psect	text6
  5236  019D                     __ptext6:	
  5237 ;; *************** function _pad *****************
  5238 ;; Defined at:
  5239 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5240 ;; Parameters:    Size  Location     Type
  5241 ;;  fp              1    wreg     PTR struct _IO_FILE
  5242 ;;		 -> NULL(0), sprintf@f(5), 
  5243 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  5244 ;;		 -> dbuf(32), 
  5245 ;;  p               2    5[BANK0 ] int 
  5246 ;; Auto vars:     Size  Location     Type
  5247 ;;  fp              1   12[BANK0 ] PTR struct _IO_FILE
  5248 ;;		 -> NULL(0), sprintf@f(5), 
  5249 ;;  w               2   10[BANK0 ] int 
  5250 ;;  i               2    8[BANK0 ] int 
  5251 ;; Return value:  Size  Location     Type
  5252 ;;                  2    4[BANK0 ] int 
  5253 ;; Registers used:
  5254 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5255 ;; Tracked objects:
  5256 ;;		On entry : 0/0
  5257 ;;		On exit  : 0/0
  5258 ;;		Unchanged: 0/0
  5259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5260 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5261 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5262 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5263 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5264 ;;Total ram usage:        9 bytes
  5265 ;; Hardware stack levels used: 1
  5266 ;; Hardware stack levels required when called: 4
  5267 ;; This function calls:
  5268 ;;		_fputc
  5269 ;;		_fputs
  5270 ;;		_strlen
  5271 ;; This function is called by:
  5272 ;;		_dtoa
  5273 ;; This function uses a non-reentrant model
  5274 ;;
  5275                           
  5276                           
  5277                           ;psect for function _pad
  5278  019D                     _pad:
  5279                           
  5280                           ;incstack = 0
  5281                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5282                           ;pad@fp stored from wreg
  5283  019D  0020               	movlb	0	; select bank0
  5284  019E  00AC               	movwf	pad@fp
  5285  019F                     l1748:
  5286                           
  5287                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  5288  019F  0021               	movlb	1	; select bank1
  5289  01A0  1C4D               	btfss	_flags^(0+128),0
  5290  01A1  29A3               	goto	u1111
  5291  01A2  29A4               	goto	u1110
  5292  01A3                     u1111:
  5293  01A3  29AD               	goto	l1752
  5294  01A4                     u1110:
  5295  01A4                     l1750:
  5296                           
  5297                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  5298  01A4  0020               	movlb	0	; select bank0
  5299  01A5  082C               	movf	pad@fp,w
  5300  01A6  00A7               	movwf	??_pad
  5301  01A7  0827               	movf	??_pad,w
  5302  01A8  00FA               	movwf	fputs@fp
  5303  01A9  0824               	movf	pad@buf,w
  5304  01AA  3180  2086  3181   	fcall	_fputs
  5305  01AD                     l1752:
  5306                           
  5307                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  5308  01AD  0020               	movlb	0	; select bank0
  5309  01AE  1BA6               	btfsc	pad@p+1,7
  5310  01AF  29B1               	goto	u1121
  5311  01B0  29B2               	goto	u1120
  5312  01B1                     u1121:
  5313  01B1  29B7               	goto	l1756
  5314  01B2                     u1120:
  5315  01B2                     l1754:
  5316  01B2  0826               	movf	pad@p+1,w
  5317  01B3  00AB               	movwf	pad@w+1
  5318  01B4  0825               	movf	pad@p,w
  5319  01B5  00AA               	movwf	pad@w
  5320  01B6  29B9               	goto	l909
  5321  01B7                     l1756:
  5322  01B7  01AA               	clrf	pad@w
  5323  01B8  01AB               	clrf	pad@w+1
  5324  01B9                     l909:
  5325                           
  5326                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5327  01B9  01A8               	clrf	pad@i
  5328  01BA  01A9               	clrf	pad@i+1
  5329                           
  5330                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5331  01BB  29CD               	goto	l1762
  5332  01BC                     l1758:
  5333                           
  5334                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  5335  01BC  3020               	movlw	32
  5336  01BD  00F2               	movwf	fputc@c
  5337  01BE  3000               	movlw	0
  5338  01BF  00F3               	movwf	fputc@c+1
  5339  01C0  0020               	movlb	0	; select bank0
  5340  01C1  082C               	movf	pad@fp,w
  5341  01C2  00A7               	movwf	??_pad
  5342  01C3  0827               	movf	??_pad,w
  5343  01C4  00F4               	movwf	fputc@fp
  5344  01C5  3181  214E  3181   	fcall	_fputc
  5345  01C8                     l1760:
  5346                           
  5347                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5348  01C8  3001               	movlw	1
  5349  01C9  0020               	movlb	0	; select bank0
  5350  01CA  07A8               	addwf	pad@i,f
  5351  01CB  3000               	movlw	0
  5352  01CC  3DA9               	addwfc	pad@i+1,f
  5353  01CD                     l1762:
  5354                           
  5355                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5356  01CD  0829               	movf	pad@i+1,w
  5357  01CE  3A80               	xorlw	128
  5358  01CF  00A7               	movwf	??_pad
  5359  01D0  082B               	movf	pad@w+1,w
  5360  01D1  3A80               	xorlw	128
  5361  01D2  0227               	subwf	??_pad,w
  5362  01D3  1D03               	skipz
  5363  01D4  29D7               	goto	u1135
  5364  01D5  082A               	movf	pad@w,w
  5365  01D6  0228               	subwf	pad@i,w
  5366  01D7                     u1135:
  5367  01D7  1C03               	skipc
  5368  01D8  29DA               	goto	u1131
  5369  01D9  29DB               	goto	u1130
  5370  01DA                     u1131:
  5371  01DA  29BC               	goto	l1758
  5372  01DB                     u1130:
  5373  01DB                     l912:
  5374                           
  5375                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  5376  01DB  0021               	movlb	1	; select bank1
  5377  01DC  184D               	btfsc	_flags^(0+128),0
  5378  01DD  29DF               	goto	u1141
  5379  01DE  29E0               	goto	u1140
  5380  01DF                     u1141:
  5381  01DF  29E9               	goto	l1766
  5382  01E0                     u1140:
  5383  01E0                     l1764:
  5384                           
  5385                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  5386  01E0  0020               	movlb	0	; select bank0
  5387  01E1  082C               	movf	pad@fp,w
  5388  01E2  00A7               	movwf	??_pad
  5389  01E3  0827               	movf	??_pad,w
  5390  01E4  00FA               	movwf	fputs@fp
  5391  01E5  0824               	movf	pad@buf,w
  5392  01E6  3180  2086  3181   	fcall	_fputs
  5393  01E9                     l1766:
  5394                           
  5395                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  5396  01E9  0020               	movlb	0	; select bank0
  5397  01EA  0824               	movf	pad@buf,w
  5398  01EB  3180  202C  3181   	fcall	_strlen
  5399  01EE  0020               	movlb	0	; select bank0
  5400  01EF  082A               	movf	pad@w,w
  5401  01F0  0770               	addwf	?_strlen,w
  5402  01F1  00A4               	movwf	?_pad
  5403  01F2  082B               	movf	pad@w+1,w
  5404  01F3  3D71               	addwfc	?_strlen+1,w
  5405  01F4  00A5               	movwf	?_pad+1
  5406  01F5                     l914:
  5407  01F5  0008               	return
  5408  01F6                     __end_of_pad:
  5409                           
  5410                           	psect	text7
  5411  002C                     __ptext7:	
  5412 ;; *************** function _strlen *****************
  5413 ;; Defined at:
  5414 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  5415 ;; Parameters:    Size  Location     Type
  5416 ;;  s               1    wreg     PTR const unsigned char 
  5417 ;;		 -> dbuf(32), 
  5418 ;; Auto vars:     Size  Location     Type
  5419 ;;  s               1    4[COMMON] PTR const unsigned char 
  5420 ;;		 -> dbuf(32), 
  5421 ;;  a               1    3[COMMON] PTR const unsigned char 
  5422 ;;		 -> dbuf(32), 
  5423 ;; Return value:  Size  Location     Type
  5424 ;;                  2    0[COMMON] unsigned int 
  5425 ;; Registers used:
  5426 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5427 ;; Tracked objects:
  5428 ;;		On entry : 0/0
  5429 ;;		On exit  : 0/0
  5430 ;;		Unchanged: 0/0
  5431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5432 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5433 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5434 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5435 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5436 ;;Total ram usage:        5 bytes
  5437 ;; Hardware stack levels used: 1
  5438 ;; This function calls:
  5439 ;;		Nothing
  5440 ;; This function is called by:
  5441 ;;		_pad
  5442 ;; This function uses a non-reentrant model
  5443 ;;
  5444                           
  5445                           
  5446                           ;psect for function _strlen
  5447  002C                     _strlen:
  5448                           
  5449                           ;incstack = 0
  5450                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  5451                           ;strlen@s stored from wreg
  5452  002C  00F4               	movwf	strlen@s
  5453  002D                     l1664:
  5454  002D  0874               	movf	strlen@s,w
  5455  002E  00F2               	movwf	??_strlen
  5456  002F  0872               	movf	??_strlen,w
  5457  0030  00F3               	movwf	strlen@a
  5458  0031  2836               	goto	l1668
  5459  0032                     l1666:
  5460  0032  3001               	movlw	1
  5461  0033  00F2               	movwf	??_strlen
  5462  0034  0872               	movf	??_strlen,w
  5463  0035  07F4               	addwf	strlen@s,f
  5464  0036                     l1668:
  5465  0036  0874               	movf	strlen@s,w
  5466  0037  0086               	movwf	6
  5467  0038  3001               	movlw	1	; select bank2/3
  5468  0039  0087               	movwf	7
  5469  003A  0801               	movf	1,w
  5470  003B  1D03               	btfss	3,2
  5471  003C  283E               	goto	u891
  5472  003D  283F               	goto	u890
  5473  003E                     u891:
  5474  003E  2832               	goto	l1666
  5475  003F                     u890:
  5476  003F                     l1670:
  5477  003F  0873               	movf	strlen@a,w
  5478  0040  0274               	subwf	strlen@s,w
  5479  0041  00F0               	movwf	?_strlen
  5480  0042  01F1               	clrf	?_strlen+1
  5481  0043  1BF0               	btfsc	?_strlen,7
  5482  0044  03F1               	decf	?_strlen+1,f
  5483  0045                     l994:
  5484  0045  0008               	return
  5485  0046                     __end_of_strlen:
  5486                           
  5487                           	psect	text8
  5488  0086                     __ptext8:	
  5489 ;; *************** function _fputs *****************
  5490 ;; Defined at:
  5491 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  5492 ;; Parameters:    Size  Location     Type
  5493 ;;  s               1    wreg     PTR const unsigned char 
  5494 ;;		 -> dbuf(32), 
  5495 ;;  fp              1   10[COMMON] PTR struct _IO_FILE
  5496 ;;		 -> NULL(0), sprintf@f(5), 
  5497 ;; Auto vars:     Size  Location     Type
  5498 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  5499 ;;		 -> dbuf(32), 
  5500 ;;  i               2    1[BANK0 ] int 
  5501 ;;  c               1    0[BANK0 ] unsigned char 
  5502 ;; Return value:  Size  Location     Type
  5503 ;;                  2   10[COMMON] int 
  5504 ;; Registers used:
  5505 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5506 ;; Tracked objects:
  5507 ;;		On entry : 0/0
  5508 ;;		On exit  : 0/0
  5509 ;;		Unchanged: 0/0
  5510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5511 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5512 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5513 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5514 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5515 ;;Total ram usage:        8 bytes
  5516 ;; Hardware stack levels used: 1
  5517 ;; Hardware stack levels required when called: 3
  5518 ;; This function calls:
  5519 ;;		_fputc
  5520 ;; This function is called by:
  5521 ;;		_pad
  5522 ;; This function uses a non-reentrant model
  5523 ;;
  5524                           
  5525                           
  5526                           ;psect for function _fputs
  5527  0086                     _fputs:
  5528                           
  5529                           ;incstack = 0
  5530                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5531                           ;fputs@s stored from wreg
  5532  0086  0020               	movlb	0	; select bank0
  5533  0087  00A3               	movwf	fputs@s
  5534  0088                     l1656:
  5535  0088  01A1               	clrf	fputs@i
  5536  0089  01A2               	clrf	fputs@i+1
  5537  008A  289E               	goto	l1662
  5538  008B                     l1658:
  5539  008B  0820               	movf	fputs@c,w
  5540  008C  00FB               	movwf	??_fputs
  5541  008D  01FC               	clrf	??_fputs+1
  5542  008E  087B               	movf	??_fputs,w
  5543  008F  00F2               	movwf	fputc@c
  5544  0090  087C               	movf	??_fputs+1,w
  5545  0091  00F3               	movwf	fputc@c+1
  5546  0092  087A               	movf	fputs@fp,w
  5547  0093  00FD               	movwf	??_fputs+2
  5548  0094  087D               	movf	??_fputs+2,w
  5549  0095  00F4               	movwf	fputc@fp
  5550  0096  3181  214E  3180   	fcall	_fputc
  5551  0099                     l1660:
  5552  0099  3001               	movlw	1
  5553  009A  0020               	movlb	0	; select bank0
  5554  009B  07A1               	addwf	fputs@i,f
  5555  009C  3000               	movlw	0
  5556  009D  3DA2               	addwfc	fputs@i+1,f
  5557  009E                     l1662:
  5558  009E  0821               	movf	fputs@i,w
  5559  009F  0723               	addwf	fputs@s,w
  5560  00A0  00FB               	movwf	??_fputs
  5561  00A1  087B               	movf	??_fputs,w
  5562  00A2  0086               	movwf	6
  5563  00A3  3001               	movlw	1	; select bank2/3
  5564  00A4  0087               	movwf	7
  5565  00A5  0801               	movf	1,w
  5566  00A6  00FC               	movwf	??_fputs+1
  5567  00A7  087C               	movf	??_fputs+1,w
  5568  00A8  00A0               	movwf	fputs@c
  5569  00A9  0820               	movf	fputs@c,w
  5570  00AA  1D03               	btfss	3,2
  5571  00AB  28AD               	goto	u881
  5572  00AC  28AE               	goto	u880
  5573  00AD                     u881:
  5574  00AD  288B               	goto	l1658
  5575  00AE                     u880:
  5576  00AE                     l981:
  5577  00AE  0008               	return
  5578  00AF                     __end_of_fputs:
  5579                           
  5580                           	psect	text9
  5581  014E                     __ptext9:	
  5582 ;; *************** function _fputc *****************
  5583 ;; Defined at:
  5584 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  5585 ;; Parameters:    Size  Location     Type
  5586 ;;  c               2    2[COMMON] int 
  5587 ;;  fp              1    4[COMMON] PTR struct _IO_FILE
  5588 ;;		 -> NULL(0), sprintf@f(5), 
  5589 ;; Auto vars:     Size  Location     Type
  5590 ;;		None
  5591 ;; Return value:  Size  Location     Type
  5592 ;;                  2    2[COMMON] int 
  5593 ;; Registers used:
  5594 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5595 ;; Tracked objects:
  5596 ;;		On entry : 0/0
  5597 ;;		On exit  : 0/0
  5598 ;;		Unchanged: 0/0
  5599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5600 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5602 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5603 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5604 ;;Total ram usage:        8 bytes
  5605 ;; Hardware stack levels used: 1
  5606 ;; Hardware stack levels required when called: 2
  5607 ;; This function calls:
  5608 ;;		_putch
  5609 ;; This function is called by:
  5610 ;;		_pad
  5611 ;;		_vfpfcnvrt
  5612 ;;		_fputs
  5613 ;; This function uses a non-reentrant model
  5614 ;;
  5615                           
  5616                           
  5617                           ;psect for function _fputc
  5618  014E                     _fputc:
  5619  014E                     l1632:	
  5620                           ;incstack = 0
  5621                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5622                           
  5623  014E  0874               	movf	fputc@fp,w
  5624  014F  1903               	btfsc	3,2
  5625  0150  2952               	goto	u811
  5626  0151  2953               	goto	u810
  5627  0152                     u811:
  5628  0152  2958               	goto	l1636
  5629  0153                     u810:
  5630  0153                     l1634:
  5631  0153  0874               	movf	fputc@fp,w
  5632  0154  1D03               	btfss	3,2
  5633  0155  2957               	goto	u821
  5634  0156  2958               	goto	u820
  5635  0157                     u821:
  5636  0157  295D               	goto	l1638
  5637  0158                     u820:
  5638  0158                     l1636:
  5639  0158  0872               	movf	fputc@c,w
  5640  0159  318F  272F  3181   	fcall	_putch
  5641  015C  299C               	goto	l973
  5642  015D                     l1638:
  5643  015D  0874               	movf	fputc@fp,w
  5644  015E  3E03               	addlw	3
  5645  015F  0086               	movwf	6
  5646  0160  0187               	clrf	7
  5647  0161  0016               	moviw fsr1++
  5648  0162  0401               	iorwf	1,w
  5649  0163  1903               	btfsc	3,2
  5650  0164  2966               	goto	u831
  5651  0165  2967               	goto	u830
  5652  0166                     u831:
  5653  0166  2984               	goto	l1642
  5654  0167                     u830:
  5655  0167                     l1640:
  5656  0167  0874               	movf	fputc@fp,w
  5657  0168  3E03               	addlw	3
  5658  0169  0086               	movwf	6
  5659  016A  0187               	clrf	7
  5660  016B  3F40               	moviw [0]fsr1
  5661  016C  00F5               	movwf	??_fputc
  5662  016D  3F41               	moviw [1]fsr1
  5663  016E  00F6               	movwf	??_fputc+1
  5664  016F  0A74               	incf	fputc@fp,w
  5665  0170  0086               	movwf	6
  5666  0171  0187               	clrf	7
  5667  0172  3F40               	moviw [0]fsr1
  5668  0173  00F7               	movwf	??_fputc+2
  5669  0174  3F41               	moviw [1]fsr1
  5670  0175  00F8               	movwf	??_fputc+3
  5671  0176  0878               	movf	??_fputc+3,w
  5672  0177  3A80               	xorlw	128
  5673  0178  00F9               	movwf	??_fputc+4
  5674  0179  0876               	movf	??_fputc+1,w
  5675  017A  3A80               	xorlw	128
  5676  017B  0279               	subwf	??_fputc+4,w
  5677  017C  1D03               	skipz
  5678  017D  2980               	goto	u845
  5679  017E  0875               	movf	??_fputc,w
  5680  017F  0277               	subwf	??_fputc+2,w
  5681  0180                     u845:
  5682  0180  1803               	skipnc
  5683  0181  2983               	goto	u841
  5684  0182  2984               	goto	u840
  5685  0183                     u841:
  5686  0183  299C               	goto	l973
  5687  0184                     u840:
  5688  0184                     l1642:
  5689  0184  0872               	movf	fputc@c,w
  5690  0185  00F5               	movwf	??_fputc
  5691  0186  0874               	movf	fputc@fp,w
  5692  0187  0086               	movwf	6
  5693  0188  0187               	clrf	7
  5694  0189  0A74               	incf	fputc@fp,w
  5695  018A  0084               	movwf	4
  5696  018B  0185               	clrf	5
  5697  018C  0800               	movf	0,w
  5698  018D  0701               	addwf	1,w
  5699  018E  00F6               	movwf	??_fputc+1
  5700  018F  0876               	movf	??_fputc+1,w
  5701  0190  0086               	movwf	6
  5702  0191  0187               	clrf	7
  5703  0192  0875               	movf	??_fputc,w
  5704  0193  0081               	movwf	1
  5705  0194                     l1644:
  5706  0194  0A74               	incf	fputc@fp,w
  5707  0195  0086               	movwf	6
  5708  0196  0187               	clrf	7
  5709  0197  3001               	movlw	1
  5710  0198  0781               	addwf	1,f
  5711  0199  3141               	addfsr 1,1
  5712  019A  1803               	skipnc
  5713  019B  0A81               	incf	1,f
  5714  019C                     l973:
  5715  019C  0008               	return
  5716  019D                     __end_of_fputc:
  5717                           
  5718                           	psect	text10
  5719  0F2F                     __ptext10:	
  5720 ;; *************** function _putch *****************
  5721 ;; Defined at:
  5722 ;;		line 65 in file "UART.c"
  5723 ;; Parameters:    Size  Location     Type
  5724 ;;  txData          1    wreg     unsigned char 
  5725 ;; Auto vars:     Size  Location     Type
  5726 ;;  txData          1    1[COMMON] unsigned char 
  5727 ;; Return value:  Size  Location     Type
  5728 ;;                  1    wreg      void 
  5729 ;; Registers used:
  5730 ;;		wreg, status,2, status,0, pclath, cstack
  5731 ;; Tracked objects:
  5732 ;;		On entry : 0/0
  5733 ;;		On exit  : 0/0
  5734 ;;		Unchanged: 0/0
  5735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5737 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5739 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5740 ;;Total ram usage:        1 bytes
  5741 ;; Hardware stack levels used: 1
  5742 ;; Hardware stack levels required when called: 1
  5743 ;; This function calls:
  5744 ;;		_UART_write
  5745 ;; This function is called by:
  5746 ;;		_fputc
  5747 ;; This function uses a non-reentrant model
  5748 ;;
  5749                           
  5750                           
  5751                           ;psect for function _putch
  5752  0F2F                     _putch:
  5753                           
  5754                           ;incstack = 0
  5755                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  5756                           ;putch@txData stored from wreg
  5757  0F2F  00F1               	movwf	putch@txData
  5758  0F30                     l1630:
  5759                           
  5760                           ;UART.c: 65: void putch(char txData);UART.c: 66: {;UART.c: 67:     UART_write(txData);
  5761  0F30  0871               	movf	putch@txData,w
  5762  0F31  318F  2750  318F   	fcall	_UART_write
  5763  0F34                     l192:
  5764  0F34  0008               	return
  5765  0F35                     __end_of_putch:
  5766                           
  5767                           	psect	text11
  5768  0F50                     __ptext11:	
  5769 ;; *************** function _UART_write *****************
  5770 ;; Defined at:
  5771 ;;		line 50 in file "UART.c"
  5772 ;; Parameters:    Size  Location     Type
  5773 ;;  txData          1    wreg     unsigned char 
  5774 ;; Auto vars:     Size  Location     Type
  5775 ;;  txData          1    0[COMMON] unsigned char 
  5776 ;; Return value:  Size  Location     Type
  5777 ;;                  1    wreg      void 
  5778 ;; Registers used:
  5779 ;;		wreg
  5780 ;; Tracked objects:
  5781 ;;		On entry : 0/0
  5782 ;;		On exit  : 0/0
  5783 ;;		Unchanged: 0/0
  5784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5786 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5788 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5789 ;;Total ram usage:        1 bytes
  5790 ;; Hardware stack levels used: 1
  5791 ;; This function calls:
  5792 ;;		Nothing
  5793 ;; This function is called by:
  5794 ;;		_putch
  5795 ;;		_UART_write_text
  5796 ;; This function uses a non-reentrant model
  5797 ;;
  5798                           
  5799                           
  5800                           ;psect for function _UART_write
  5801  0F50                     _UART_write:
  5802                           
  5803                           ;incstack = 0
  5804                           ; Regs used in _UART_write: [wreg]
  5805                           ;UART_write@txData stored from wreg
  5806  0F50  00F0               	movwf	UART_write@txData
  5807  0F51                     l1626:
  5808  0F51                     l180:	
  5809                           ;UART.c: 50: void UART_write(uint8_t txData);UART.c: 51: {;UART.c: 52:     while(PIR3bit
      +                          s.TXIF==0);
  5810                           
  5811  0F51  002E               	movlb	14	; select bank14
  5812  0F52  1E0F               	btfss	15,4	;volatile
  5813  0F53  2F55               	goto	u801
  5814  0F54  2F56               	goto	u800
  5815  0F55                     u801:
  5816  0F55  2F51               	goto	l180
  5817  0F56                     u800:
  5818  0F56                     l1628:
  5819                           
  5820                           ;UART.c: 53:     TX1REG = txData;
  5821  0F56  0870               	movf	UART_write@txData,w
  5822  0F57  0022               	movlb	2	; select bank2
  5823  0F58  009A               	movwf	26	;volatile
  5824  0F59                     l183:
  5825  0F59  0008               	return
  5826  0F5A                     __end_of_UART_write:
  5827                           
  5828                           	psect	text12
  5829  0012                     __ptext12:	
  5830 ;; *************** function _abs *****************
  5831 ;; Defined at:
  5832 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  5833 ;; Parameters:    Size  Location     Type
  5834 ;;  a               2    3[COMMON] int 
  5835 ;; Auto vars:     Size  Location     Type
  5836 ;;		None
  5837 ;; Return value:  Size  Location     Type
  5838 ;;                  2    3[COMMON] int 
  5839 ;; Registers used:
  5840 ;;		wreg, status,2, status,0
  5841 ;; Tracked objects:
  5842 ;;		On entry : 0/0
  5843 ;;		On exit  : 0/0
  5844 ;;		Unchanged: 0/0
  5845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5846 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5848 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5849 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5850 ;;Total ram usage:        4 bytes
  5851 ;; Hardware stack levels used: 1
  5852 ;; This function calls:
  5853 ;;		Nothing
  5854 ;; This function is called by:
  5855 ;;		_dtoa
  5856 ;; This function uses a non-reentrant model
  5857 ;;
  5858                           
  5859                           
  5860                           ;psect for function _abs
  5861  0012                     _abs:
  5862  0012                     l1770:	
  5863                           ;incstack = 0
  5864                           ; Regs used in _abs: [wreg+status,2+status,0]
  5865                           
  5866  0012  0874               	movf	abs@a+1,w
  5867  0013  3A80               	xorlw	128
  5868  0014  00F5               	movwf	??_abs
  5869  0015  3080               	movlw	128
  5870  0016  0275               	subwf	??_abs,w
  5871  0017  1D03               	skipz
  5872  0018  281B               	goto	u1155
  5873  0019  3001               	movlw	1
  5874  001A  0273               	subwf	abs@a,w
  5875  001B                     u1155:
  5876  001B  1803               	skipnc
  5877  001C  281E               	goto	u1151
  5878  001D  281F               	goto	u1150
  5879  001E                     u1151:
  5880  001E  282B               	goto	l958
  5881  001F                     u1150:
  5882  001F                     l1772:
  5883  001F  0973               	comf	abs@a,w
  5884  0020  00F5               	movwf	??_abs
  5885  0021  0974               	comf	abs@a+1,w
  5886  0022  00F6               	movwf	??_abs+1
  5887  0023  0AF5               	incf	??_abs,f
  5888  0024  1903               	skipnz
  5889  0025  0AF6               	incf	??_abs+1,f
  5890  0026  0875               	movf	??_abs,w
  5891  0027  00F3               	movwf	?_abs
  5892  0028  0876               	movf	??_abs+1,w
  5893  0029  00F4               	movwf	?_abs+1
  5894  002A  282B               	goto	l961
  5895  002B                     l958:
  5896  002B                     l961:
  5897  002B  0008               	return
  5898  002C                     __end_of_abs:
  5899                           
  5900                           	psect	text13
  5901  0492                     __ptext13:	
  5902 ;; *************** function ___aomod *****************
  5903 ;; Defined at:
  5904 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  5905 ;; Parameters:    Size  Location     Type
  5906 ;;  divisor         8    0[BANK0 ] long long 
  5907 ;;  dividend        8    8[BANK0 ] long long 
  5908 ;; Auto vars:     Size  Location     Type
  5909 ;;  sign            1    2[COMMON] unsigned char 
  5910 ;;  counter         1    1[COMMON] unsigned char 
  5911 ;; Return value:  Size  Location     Type
  5912 ;;                  8    0[BANK0 ] long long 
  5913 ;; Registers used:
  5914 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5915 ;; Tracked objects:
  5916 ;;		On entry : 0/0
  5917 ;;		On exit  : 0/0
  5918 ;;		Unchanged: 0/0
  5919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5920 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5921 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5922 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5923 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5924 ;;Total ram usage:       19 bytes
  5925 ;; Hardware stack levels used: 1
  5926 ;; This function calls:
  5927 ;;		Nothing
  5928 ;; This function is called by:
  5929 ;;		_dtoa
  5930 ;; This function uses a non-reentrant model
  5931 ;;
  5932                           
  5933                           
  5934                           ;psect for function ___aomod
  5935  0492                     ___aomod:
  5936  0492                     l1718:	
  5937                           ;incstack = 0
  5938                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  5939                           
  5940  0492  01F2               	clrf	___aomod@sign
  5941  0493                     l1720:
  5942  0493  3028               	movlw	low ___aomod@dividend
  5943  0494  0086               	movwf	6
  5944  0495  3000               	movlw	high ___aomod@dividend
  5945  0496  0087               	movwf	7
  5946  0497  3F47               	moviw [7]fsr1
  5947  0498  00F0               	movwf	??___aomod
  5948  0499  1FF0               	btfss	??___aomod,7
  5949  049A  2C9C               	goto	u1011
  5950  049B  2C9D               	goto	u1010
  5951  049C                     u1011:
  5952  049C  2CBE               	goto	l1724
  5953  049D                     u1010:
  5954  049D                     l1722:
  5955  049D  0020               	movlb	0	; select bank0
  5956  049E  09A8               	comf	___aomod@dividend,f
  5957  049F  09A9               	comf	___aomod@dividend+1,f
  5958  04A0  09AA               	comf	___aomod@dividend+2,f
  5959  04A1  09AB               	comf	___aomod@dividend+3,f
  5960  04A2  09AC               	comf	___aomod@dividend+4,f
  5961  04A3  09AD               	comf	___aomod@dividend+5,f
  5962  04A4  09AE               	comf	___aomod@dividend+6,f
  5963  04A5  09AF               	comf	___aomod@dividend+7,f
  5964  04A6  0AA8               	incf	___aomod@dividend,f
  5965  04A7  1D03               	skipz
  5966  04A8  2CBC               	goto	u102lld
  5967  04A9  0AA9               	incf	___aomod@dividend+1,f
  5968  04AA  1D03               	skipz
  5969  04AB  2CBC               	goto	u102lld
  5970  04AC  0AAA               	incf	___aomod@dividend+2,f
  5971  04AD  1D03               	skipz
  5972  04AE  2CBC               	goto	u102lld
  5973  04AF  0AAB               	incf	___aomod@dividend+3,f
  5974  04B0  1D03               	skipz
  5975  04B1  2CBC               	goto	u102lld
  5976  04B2  0AAC               	incf	___aomod@dividend+4,f
  5977  04B3  1D03               	skipz
  5978  04B4  2CBC               	goto	u102lld
  5979  04B5  0AAD               	incf	___aomod@dividend+5,f
  5980  04B6  1D03               	skipz
  5981  04B7  2CBC               	goto	u102lld
  5982  04B8  0AAE               	incf	___aomod@dividend+6,f
  5983  04B9  1D03               	skipz
  5984  04BA  2CBC               	goto	u102lld
  5985  04BB  0AAF               	incf	___aomod@dividend+7,f
  5986  04BC                     u102lld:
  5987  04BC  01F2               	clrf	___aomod@sign
  5988  04BD  0AF2               	incf	___aomod@sign,f
  5989  04BE                     l1724:
  5990  04BE  3020               	movlw	low ___aomod@divisor
  5991  04BF  0086               	movwf	6
  5992  04C0  3000               	movlw	high ___aomod@divisor
  5993  04C1  0087               	movwf	7
  5994  04C2  3F47               	moviw [7]fsr1
  5995  04C3  00F0               	movwf	??___aomod
  5996  04C4  1FF0               	btfss	??___aomod,7
  5997  04C5  2CC7               	goto	u1031
  5998  04C6  2CC8               	goto	u1030
  5999  04C7                     u1031:
  6000  04C7  2CE7               	goto	l1728
  6001  04C8                     u1030:
  6002  04C8                     l1726:
  6003  04C8  0020               	movlb	0	; select bank0
  6004  04C9  09A0               	comf	___aomod@divisor,f
  6005  04CA  09A1               	comf	___aomod@divisor+1,f
  6006  04CB  09A2               	comf	___aomod@divisor+2,f
  6007  04CC  09A3               	comf	___aomod@divisor+3,f
  6008  04CD  09A4               	comf	___aomod@divisor+4,f
  6009  04CE  09A5               	comf	___aomod@divisor+5,f
  6010  04CF  09A6               	comf	___aomod@divisor+6,f
  6011  04D0  09A7               	comf	___aomod@divisor+7,f
  6012  04D1  0AA0               	incf	___aomod@divisor,f
  6013  04D2  1D03               	skipz
  6014  04D3  2CE7               	goto	u104lld
  6015  04D4  0AA1               	incf	___aomod@divisor+1,f
  6016  04D5  1D03               	skipz
  6017  04D6  2CE7               	goto	u104lld
  6018  04D7  0AA2               	incf	___aomod@divisor+2,f
  6019  04D8  1D03               	skipz
  6020  04D9  2CE7               	goto	u104lld
  6021  04DA  0AA3               	incf	___aomod@divisor+3,f
  6022  04DB  1D03               	skipz
  6023  04DC  2CE7               	goto	u104lld
  6024  04DD  0AA4               	incf	___aomod@divisor+4,f
  6025  04DE  1D03               	skipz
  6026  04DF  2CE7               	goto	u104lld
  6027  04E0  0AA5               	incf	___aomod@divisor+5,f
  6028  04E1  1D03               	skipz
  6029  04E2  2CE7               	goto	u104lld
  6030  04E3  0AA6               	incf	___aomod@divisor+6,f
  6031  04E4  1D03               	skipz
  6032  04E5  2CE7               	goto	u104lld
  6033  04E6  0AA7               	incf	___aomod@divisor+7,f
  6034  04E7                     u104lld:
  6035  04E7                     l1728:
  6036  04E7  0020               	movlb	0	; select bank0
  6037  04E8  0820               	movf	___aomod@divisor,w
  6038  04E9  0421               	iorwf	___aomod@divisor+1,w
  6039  04EA  0422               	iorwf	___aomod@divisor+2,w
  6040  04EB  0423               	iorwf	___aomod@divisor+3,w
  6041  04EC  0424               	iorwf	___aomod@divisor+4,w
  6042  04ED  0425               	iorwf	___aomod@divisor+5,w
  6043  04EE  0426               	iorwf	___aomod@divisor+6,w
  6044  04EF  0427               	iorwf	___aomod@divisor+7,w
  6045  04F0  1903               	skipnz
  6046  04F1  2CF3               	goto	u1051
  6047  04F2  2CF4               	goto	u1050
  6048  04F3                     u1051:
  6049  04F3  2D47               	goto	l1744
  6050  04F4                     u1050:
  6051  04F4                     l1730:
  6052  04F4  01F1               	clrf	___aomod@counter
  6053  04F5  0AF1               	incf	___aomod@counter,f
  6054  04F6  2D03               	goto	l1736
  6055  04F7                     l1732:
  6056  04F7  35A0               	lslf	___aomod@divisor,f
  6057  04F8  0DA1               	rlf	___aomod@divisor+1,f
  6058  04F9  0DA2               	rlf	___aomod@divisor+2,f
  6059  04FA  0DA3               	rlf	___aomod@divisor+3,f
  6060  04FB  0DA4               	rlf	___aomod@divisor+4,f
  6061  04FC  0DA5               	rlf	___aomod@divisor+5,f
  6062  04FD  0DA6               	rlf	___aomod@divisor+6,f
  6063  04FE  0DA7               	rlf	___aomod@divisor+7,f
  6064  04FF                     l1734:
  6065  04FF  3001               	movlw	1
  6066  0500  00F0               	movwf	??___aomod
  6067  0501  0870               	movf	??___aomod,w
  6068  0502  07F1               	addwf	___aomod@counter,f
  6069  0503                     l1736:
  6070  0503  1FA7               	btfss	___aomod@divisor+7,7
  6071  0504  2D06               	goto	u1061
  6072  0505  2D07               	goto	u1060
  6073  0506                     u1061:
  6074  0506  2CF7               	goto	l1732
  6075  0507                     u1060:
  6076  0507                     l1738:
  6077  0507  0827               	movf	___aomod@divisor+7,w
  6078  0508  022F               	subwf	___aomod@dividend+7,w
  6079  0509  1D03               	skipz
  6080  050A  2D25               	goto	u1075
  6081  050B  0826               	movf	___aomod@divisor+6,w
  6082  050C  022E               	subwf	___aomod@dividend+6,w
  6083  050D  1D03               	skipz
  6084  050E  2D25               	goto	u1075
  6085  050F  0825               	movf	___aomod@divisor+5,w
  6086  0510  022D               	subwf	___aomod@dividend+5,w
  6087  0511  1D03               	skipz
  6088  0512  2D25               	goto	u1075
  6089  0513  0824               	movf	___aomod@divisor+4,w
  6090  0514  022C               	subwf	___aomod@dividend+4,w
  6091  0515  1D03               	skipz
  6092  0516  2D25               	goto	u1075
  6093  0517  0823               	movf	___aomod@divisor+3,w
  6094  0518  022B               	subwf	___aomod@dividend+3,w
  6095  0519  1D03               	skipz
  6096  051A  2D25               	goto	u1075
  6097  051B  0822               	movf	___aomod@divisor+2,w
  6098  051C  022A               	subwf	___aomod@dividend+2,w
  6099  051D  1D03               	skipz
  6100  051E  2D25               	goto	u1075
  6101  051F  0821               	movf	___aomod@divisor+1,w
  6102  0520  0229               	subwf	___aomod@dividend+1,w
  6103  0521  1D03               	skipz
  6104  0522  2D25               	goto	u1075
  6105  0523  0820               	movf	___aomod@divisor,w
  6106  0524  0228               	subwf	___aomod@dividend,w
  6107  0525                     u1075:
  6108  0525  1C03               	skipc
  6109  0526  2D28               	goto	u1071
  6110  0527  2D29               	goto	u1070
  6111  0528                     u1071:
  6112  0528  2D39               	goto	l1742
  6113  0529                     u1070:
  6114  0529                     l1740:
  6115  0529  0820               	movf	___aomod@divisor,w
  6116  052A  02A8               	subwf	___aomod@dividend,f
  6117  052B  0821               	movf	___aomod@divisor+1,w
  6118  052C  3BA9               	subwfb	___aomod@dividend+1,f
  6119  052D  0822               	movf	___aomod@divisor+2,w
  6120  052E  3BAA               	subwfb	___aomod@dividend+2,f
  6121  052F  0823               	movf	___aomod@divisor+3,w
  6122  0530  3BAB               	subwfb	___aomod@dividend+3,f
  6123  0531  0824               	movf	___aomod@divisor+4,w
  6124  0532  3BAC               	subwfb	___aomod@dividend+4,f
  6125  0533  0825               	movf	___aomod@divisor+5,w
  6126  0534  3BAD               	subwfb	___aomod@dividend+5,f
  6127  0535  0826               	movf	___aomod@divisor+6,w
  6128  0536  3BAE               	subwfb	___aomod@dividend+6,f
  6129  0537  0827               	movf	___aomod@divisor+7,w
  6130  0538  3BAF               	subwfb	___aomod@dividend+7,f
  6131  0539                     l1742:
  6132  0539  36A7               	lsrf	___aomod@divisor+7,f
  6133  053A  0CA6               	rrf	___aomod@divisor+6,f
  6134  053B  0CA5               	rrf	___aomod@divisor+5,f
  6135  053C  0CA4               	rrf	___aomod@divisor+4,f
  6136  053D  0CA3               	rrf	___aomod@divisor+3,f
  6137  053E  0CA2               	rrf	___aomod@divisor+2,f
  6138  053F  0CA1               	rrf	___aomod@divisor+1,f
  6139  0540  0CA0               	rrf	___aomod@divisor,f
  6140  0541  3001               	movlw	1
  6141  0542  02F1               	subwf	___aomod@counter,f
  6142  0543  1D03               	btfss	3,2
  6143  0544  2D46               	goto	u1081
  6144  0545  2D47               	goto	u1080
  6145  0546                     u1081:
  6146  0546  2D07               	goto	l1738
  6147  0547                     u1080:
  6148  0547                     l1744:
  6149  0547  0872               	movf	___aomod@sign,w
  6150  0548  1903               	btfsc	3,2
  6151  0549  2D4B               	goto	u1091
  6152  054A  2D4C               	goto	u1090
  6153  054B                     u1091:
  6154  054B  2D6A               	goto	l532
  6155  054C                     u1090:
  6156  054C                     l1746:
  6157  054C  09A8               	comf	___aomod@dividend,f
  6158  054D  09A9               	comf	___aomod@dividend+1,f
  6159  054E  09AA               	comf	___aomod@dividend+2,f
  6160  054F  09AB               	comf	___aomod@dividend+3,f
  6161  0550  09AC               	comf	___aomod@dividend+4,f
  6162  0551  09AD               	comf	___aomod@dividend+5,f
  6163  0552  09AE               	comf	___aomod@dividend+6,f
  6164  0553  09AF               	comf	___aomod@dividend+7,f
  6165  0554  0AA8               	incf	___aomod@dividend,f
  6166  0555  1D03               	skipz
  6167  0556  2D6A               	goto	u110lld
  6168  0557  0AA9               	incf	___aomod@dividend+1,f
  6169  0558  1D03               	skipz
  6170  0559  2D6A               	goto	u110lld
  6171  055A  0AAA               	incf	___aomod@dividend+2,f
  6172  055B  1D03               	skipz
  6173  055C  2D6A               	goto	u110lld
  6174  055D  0AAB               	incf	___aomod@dividend+3,f
  6175  055E  1D03               	skipz
  6176  055F  2D6A               	goto	u110lld
  6177  0560  0AAC               	incf	___aomod@dividend+4,f
  6178  0561  1D03               	skipz
  6179  0562  2D6A               	goto	u110lld
  6180  0563  0AAD               	incf	___aomod@dividend+5,f
  6181  0564  1D03               	skipz
  6182  0565  2D6A               	goto	u110lld
  6183  0566  0AAE               	incf	___aomod@dividend+6,f
  6184  0567  1D03               	skipz
  6185  0568  2D6A               	goto	u110lld
  6186  0569  0AAF               	incf	___aomod@dividend+7,f
  6187  056A                     u110lld:
  6188  056A                     l532:
  6189  056A  0020               	movlb	0	; select bank0
  6190  056B  0828               	movf	___aomod@dividend,w
  6191  056C  00A0               	movwf	?___aomod
  6192  056D  0829               	movf	___aomod@dividend+1,w
  6193  056E  00A1               	movwf	?___aomod+1
  6194  056F  082A               	movf	___aomod@dividend+2,w
  6195  0570  00A2               	movwf	?___aomod+2
  6196  0571  082B               	movf	___aomod@dividend+3,w
  6197  0572  00A3               	movwf	?___aomod+3
  6198  0573  082C               	movf	___aomod@dividend+4,w
  6199  0574  00A4               	movwf	?___aomod+4
  6200  0575  082D               	movf	___aomod@dividend+5,w
  6201  0576  00A5               	movwf	?___aomod+5
  6202  0577  082E               	movf	___aomod@dividend+6,w
  6203  0578  00A6               	movwf	?___aomod+6
  6204  0579  082F               	movf	___aomod@dividend+7,w
  6205  057A  00A7               	movwf	?___aomod+7
  6206  057B                     l533:
  6207  057B  0008               	return
  6208  057C                     __end_of___aomod:
  6209                           
  6210                           	psect	text14
  6211  057C                     __ptext14:	
  6212 ;; *************** function ___aodiv *****************
  6213 ;; Defined at:
  6214 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  6215 ;; Parameters:    Size  Location     Type
  6216 ;;  divisor         8    0[BANK0 ] long long 
  6217 ;;  dividend        8    8[BANK0 ] long long 
  6218 ;; Auto vars:     Size  Location     Type
  6219 ;;  quotient        8    3[COMMON] long long 
  6220 ;;  sign            1    2[COMMON] unsigned char 
  6221 ;;  counter         1    1[COMMON] unsigned char 
  6222 ;; Return value:  Size  Location     Type
  6223 ;;                  8    0[BANK0 ] long long 
  6224 ;; Registers used:
  6225 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6226 ;; Tracked objects:
  6227 ;;		On entry : 0/0
  6228 ;;		On exit  : 0/0
  6229 ;;		Unchanged: 0/0
  6230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6231 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6232 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6233 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6234 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6235 ;;Total ram usage:       27 bytes
  6236 ;; Hardware stack levels used: 1
  6237 ;; This function calls:
  6238 ;;		Nothing
  6239 ;; This function is called by:
  6240 ;;		_dtoa
  6241 ;; This function uses a non-reentrant model
  6242 ;;
  6243                           
  6244                           
  6245                           ;psect for function ___aodiv
  6246  057C                     ___aodiv:
  6247  057C                     l1680:	
  6248                           ;incstack = 0
  6249                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  6250                           
  6251  057C  01F2               	clrf	___aodiv@sign
  6252  057D                     l1682:
  6253  057D  3020               	movlw	low ___aodiv@divisor
  6254  057E  0086               	movwf	6
  6255  057F  3000               	movlw	high ___aodiv@divisor
  6256  0580  0087               	movwf	7
  6257  0581  3F47               	moviw [7]fsr1
  6258  0582  00F0               	movwf	??___aodiv
  6259  0583  1FF0               	btfss	??___aodiv,7
  6260  0584  2D86               	goto	u901
  6261  0585  2D87               	goto	u900
  6262  0586                     u901:
  6263  0586  2DA8               	goto	l1686
  6264  0587                     u900:
  6265  0587                     l1684:
  6266  0587  0020               	movlb	0	; select bank0
  6267  0588  09A0               	comf	___aodiv@divisor,f
  6268  0589  09A1               	comf	___aodiv@divisor+1,f
  6269  058A  09A2               	comf	___aodiv@divisor+2,f
  6270  058B  09A3               	comf	___aodiv@divisor+3,f
  6271  058C  09A4               	comf	___aodiv@divisor+4,f
  6272  058D  09A5               	comf	___aodiv@divisor+5,f
  6273  058E  09A6               	comf	___aodiv@divisor+6,f
  6274  058F  09A7               	comf	___aodiv@divisor+7,f
  6275  0590  0AA0               	incf	___aodiv@divisor,f
  6276  0591  1D03               	skipz
  6277  0592  2DA6               	goto	u91lld
  6278  0593  0AA1               	incf	___aodiv@divisor+1,f
  6279  0594  1D03               	skipz
  6280  0595  2DA6               	goto	u91lld
  6281  0596  0AA2               	incf	___aodiv@divisor+2,f
  6282  0597  1D03               	skipz
  6283  0598  2DA6               	goto	u91lld
  6284  0599  0AA3               	incf	___aodiv@divisor+3,f
  6285  059A  1D03               	skipz
  6286  059B  2DA6               	goto	u91lld
  6287  059C  0AA4               	incf	___aodiv@divisor+4,f
  6288  059D  1D03               	skipz
  6289  059E  2DA6               	goto	u91lld
  6290  059F  0AA5               	incf	___aodiv@divisor+5,f
  6291  05A0  1D03               	skipz
  6292  05A1  2DA6               	goto	u91lld
  6293  05A2  0AA6               	incf	___aodiv@divisor+6,f
  6294  05A3  1D03               	skipz
  6295  05A4  2DA6               	goto	u91lld
  6296  05A5  0AA7               	incf	___aodiv@divisor+7,f
  6297  05A6                     u91lld:
  6298  05A6  01F2               	clrf	___aodiv@sign
  6299  05A7  0AF2               	incf	___aodiv@sign,f
  6300  05A8                     l1686:
  6301  05A8  3028               	movlw	low ___aodiv@dividend
  6302  05A9  0086               	movwf	6
  6303  05AA  3000               	movlw	high ___aodiv@dividend
  6304  05AB  0087               	movwf	7
  6305  05AC  3F47               	moviw [7]fsr1
  6306  05AD  00F0               	movwf	??___aodiv
  6307  05AE  1FF0               	btfss	??___aodiv,7
  6308  05AF  2DB1               	goto	u921
  6309  05B0  2DB2               	goto	u920
  6310  05B1                     u921:
  6311  05B1  2DD5               	goto	l1692
  6312  05B2                     u920:
  6313  05B2                     l1688:
  6314  05B2  0020               	movlb	0	; select bank0
  6315  05B3  09A8               	comf	___aodiv@dividend,f
  6316  05B4  09A9               	comf	___aodiv@dividend+1,f
  6317  05B5  09AA               	comf	___aodiv@dividend+2,f
  6318  05B6  09AB               	comf	___aodiv@dividend+3,f
  6319  05B7  09AC               	comf	___aodiv@dividend+4,f
  6320  05B8  09AD               	comf	___aodiv@dividend+5,f
  6321  05B9  09AE               	comf	___aodiv@dividend+6,f
  6322  05BA  09AF               	comf	___aodiv@dividend+7,f
  6323  05BB  0AA8               	incf	___aodiv@dividend,f
  6324  05BC  1D03               	skipz
  6325  05BD  2DD1               	goto	u93lld
  6326  05BE  0AA9               	incf	___aodiv@dividend+1,f
  6327  05BF  1D03               	skipz
  6328  05C0  2DD1               	goto	u93lld
  6329  05C1  0AAA               	incf	___aodiv@dividend+2,f
  6330  05C2  1D03               	skipz
  6331  05C3  2DD1               	goto	u93lld
  6332  05C4  0AAB               	incf	___aodiv@dividend+3,f
  6333  05C5  1D03               	skipz
  6334  05C6  2DD1               	goto	u93lld
  6335  05C7  0AAC               	incf	___aodiv@dividend+4,f
  6336  05C8  1D03               	skipz
  6337  05C9  2DD1               	goto	u93lld
  6338  05CA  0AAD               	incf	___aodiv@dividend+5,f
  6339  05CB  1D03               	skipz
  6340  05CC  2DD1               	goto	u93lld
  6341  05CD  0AAE               	incf	___aodiv@dividend+6,f
  6342  05CE  1D03               	skipz
  6343  05CF  2DD1               	goto	u93lld
  6344  05D0  0AAF               	incf	___aodiv@dividend+7,f
  6345  05D1                     u93lld:
  6346  05D1                     l1690:
  6347  05D1  3001               	movlw	1
  6348  05D2  00F0               	movwf	??___aodiv
  6349  05D3  0870               	movf	??___aodiv,w
  6350  05D4  06F2               	xorwf	___aodiv@sign,f
  6351  05D5                     l1692:
  6352  05D5  3073               	movlw	low ___aodiv@quotient
  6353  05D6  0086               	movwf	6
  6354  05D7  3000               	movlw	high ___aodiv@quotient
  6355  05D8  0087               	movwf	7
  6356  05D9  3008               	movlw	8
  6357  05DA  00F0               	movwf	??___aodiv
  6358  05DB  3000               	movlw	0
  6359  05DC                     u940:
  6360  05DC  001E               	movwi fsr1++
  6361  05DD  0BF0               	decfsz	??___aodiv,f
  6362  05DE  2DDC               	goto	u940
  6363  05DF                     l1694:
  6364  05DF  0020               	movlb	0	; select bank0
  6365  05E0  0820               	movf	___aodiv@divisor,w
  6366  05E1  0421               	iorwf	___aodiv@divisor+1,w
  6367  05E2  0422               	iorwf	___aodiv@divisor+2,w
  6368  05E3  0423               	iorwf	___aodiv@divisor+3,w
  6369  05E4  0424               	iorwf	___aodiv@divisor+4,w
  6370  05E5  0425               	iorwf	___aodiv@divisor+5,w
  6371  05E6  0426               	iorwf	___aodiv@divisor+6,w
  6372  05E7  0427               	iorwf	___aodiv@divisor+7,w
  6373  05E8  1903               	skipnz
  6374  05E9  2DEB               	goto	u951
  6375  05EA  2DEC               	goto	u950
  6376  05EB                     u951:
  6377  05EB  2E48               	goto	l1714
  6378  05EC                     u950:
  6379  05EC                     l1696:
  6380  05EC  01F1               	clrf	___aodiv@counter
  6381  05ED  0AF1               	incf	___aodiv@counter,f
  6382  05EE  2DFB               	goto	l1702
  6383  05EF                     l1698:
  6384  05EF  35A0               	lslf	___aodiv@divisor,f
  6385  05F0  0DA1               	rlf	___aodiv@divisor+1,f
  6386  05F1  0DA2               	rlf	___aodiv@divisor+2,f
  6387  05F2  0DA3               	rlf	___aodiv@divisor+3,f
  6388  05F3  0DA4               	rlf	___aodiv@divisor+4,f
  6389  05F4  0DA5               	rlf	___aodiv@divisor+5,f
  6390  05F5  0DA6               	rlf	___aodiv@divisor+6,f
  6391  05F6  0DA7               	rlf	___aodiv@divisor+7,f
  6392  05F7                     l1700:
  6393  05F7  3001               	movlw	1
  6394  05F8  00F0               	movwf	??___aodiv
  6395  05F9  0870               	movf	??___aodiv,w
  6396  05FA  07F1               	addwf	___aodiv@counter,f
  6397  05FB                     l1702:
  6398  05FB  1FA7               	btfss	___aodiv@divisor+7,7
  6399  05FC  2DFE               	goto	u961
  6400  05FD  2DFF               	goto	u960
  6401  05FE                     u961:
  6402  05FE  2DEF               	goto	l1698
  6403  05FF                     u960:
  6404  05FF                     l1704:
  6405  05FF  35F3               	lslf	___aodiv@quotient,f
  6406  0600  0DF4               	rlf	___aodiv@quotient+1,f
  6407  0601  0DF5               	rlf	___aodiv@quotient+2,f
  6408  0602  0DF6               	rlf	___aodiv@quotient+3,f
  6409  0603  0DF7               	rlf	___aodiv@quotient+4,f
  6410  0604  0DF8               	rlf	___aodiv@quotient+5,f
  6411  0605  0DF9               	rlf	___aodiv@quotient+6,f
  6412  0606  0DFA               	rlf	___aodiv@quotient+7,f
  6413  0607                     l1706:
  6414  0607  0827               	movf	___aodiv@divisor+7,w
  6415  0608  022F               	subwf	___aodiv@dividend+7,w
  6416  0609  1D03               	skipz
  6417  060A  2E25               	goto	u975
  6418  060B  0826               	movf	___aodiv@divisor+6,w
  6419  060C  022E               	subwf	___aodiv@dividend+6,w
  6420  060D  1D03               	skipz
  6421  060E  2E25               	goto	u975
  6422  060F  0825               	movf	___aodiv@divisor+5,w
  6423  0610  022D               	subwf	___aodiv@dividend+5,w
  6424  0611  1D03               	skipz
  6425  0612  2E25               	goto	u975
  6426  0613  0824               	movf	___aodiv@divisor+4,w
  6427  0614  022C               	subwf	___aodiv@dividend+4,w
  6428  0615  1D03               	skipz
  6429  0616  2E25               	goto	u975
  6430  0617  0823               	movf	___aodiv@divisor+3,w
  6431  0618  022B               	subwf	___aodiv@dividend+3,w
  6432  0619  1D03               	skipz
  6433  061A  2E25               	goto	u975
  6434  061B  0822               	movf	___aodiv@divisor+2,w
  6435  061C  022A               	subwf	___aodiv@dividend+2,w
  6436  061D  1D03               	skipz
  6437  061E  2E25               	goto	u975
  6438  061F  0821               	movf	___aodiv@divisor+1,w
  6439  0620  0229               	subwf	___aodiv@dividend+1,w
  6440  0621  1D03               	skipz
  6441  0622  2E25               	goto	u975
  6442  0623  0820               	movf	___aodiv@divisor,w
  6443  0624  0228               	subwf	___aodiv@dividend,w
  6444  0625                     u975:
  6445  0625  1C03               	skipc
  6446  0626  2E28               	goto	u971
  6447  0627  2E29               	goto	u970
  6448  0628                     u971:
  6449  0628  2E3A               	goto	l1712
  6450  0629                     u970:
  6451  0629                     l1708:
  6452  0629  0820               	movf	___aodiv@divisor,w
  6453  062A  02A8               	subwf	___aodiv@dividend,f
  6454  062B  0821               	movf	___aodiv@divisor+1,w
  6455  062C  3BA9               	subwfb	___aodiv@dividend+1,f
  6456  062D  0822               	movf	___aodiv@divisor+2,w
  6457  062E  3BAA               	subwfb	___aodiv@dividend+2,f
  6458  062F  0823               	movf	___aodiv@divisor+3,w
  6459  0630  3BAB               	subwfb	___aodiv@dividend+3,f
  6460  0631  0824               	movf	___aodiv@divisor+4,w
  6461  0632  3BAC               	subwfb	___aodiv@dividend+4,f
  6462  0633  0825               	movf	___aodiv@divisor+5,w
  6463  0634  3BAD               	subwfb	___aodiv@dividend+5,f
  6464  0635  0826               	movf	___aodiv@divisor+6,w
  6465  0636  3BAE               	subwfb	___aodiv@dividend+6,f
  6466  0637  0827               	movf	___aodiv@divisor+7,w
  6467  0638  3BAF               	subwfb	___aodiv@dividend+7,f
  6468  0639                     l1710:
  6469  0639  1473               	bsf	___aodiv@quotient,0
  6470  063A                     l1712:
  6471  063A  36A7               	lsrf	___aodiv@divisor+7,f
  6472  063B  0CA6               	rrf	___aodiv@divisor+6,f
  6473  063C  0CA5               	rrf	___aodiv@divisor+5,f
  6474  063D  0CA4               	rrf	___aodiv@divisor+4,f
  6475  063E  0CA3               	rrf	___aodiv@divisor+3,f
  6476  063F  0CA2               	rrf	___aodiv@divisor+2,f
  6477  0640  0CA1               	rrf	___aodiv@divisor+1,f
  6478  0641  0CA0               	rrf	___aodiv@divisor,f
  6479  0642  3001               	movlw	1
  6480  0643  02F1               	subwf	___aodiv@counter,f
  6481  0644  1D03               	btfss	3,2
  6482  0645  2E47               	goto	u981
  6483  0646  2E48               	goto	u980
  6484  0647                     u981:
  6485  0647  2DFF               	goto	l1704
  6486  0648                     u980:
  6487  0648                     l1714:
  6488  0648  0872               	movf	___aodiv@sign,w
  6489  0649  1903               	btfsc	3,2
  6490  064A  2E4C               	goto	u991
  6491  064B  2E4D               	goto	u990
  6492  064C                     u991:
  6493  064C  2E6B               	goto	l519
  6494  064D                     u990:
  6495  064D                     l1716:
  6496  064D  09F3               	comf	___aodiv@quotient,f
  6497  064E  09F4               	comf	___aodiv@quotient+1,f
  6498  064F  09F5               	comf	___aodiv@quotient+2,f
  6499  0650  09F6               	comf	___aodiv@quotient+3,f
  6500  0651  09F7               	comf	___aodiv@quotient+4,f
  6501  0652  09F8               	comf	___aodiv@quotient+5,f
  6502  0653  09F9               	comf	___aodiv@quotient+6,f
  6503  0654  09FA               	comf	___aodiv@quotient+7,f
  6504  0655  0AF3               	incf	___aodiv@quotient,f
  6505  0656  1D03               	skipz
  6506  0657  2E6B               	goto	u100lld
  6507  0658  0AF4               	incf	___aodiv@quotient+1,f
  6508  0659  1D03               	skipz
  6509  065A  2E6B               	goto	u100lld
  6510  065B  0AF5               	incf	___aodiv@quotient+2,f
  6511  065C  1D03               	skipz
  6512  065D  2E6B               	goto	u100lld
  6513  065E  0AF6               	incf	___aodiv@quotient+3,f
  6514  065F  1D03               	skipz
  6515  0660  2E6B               	goto	u100lld
  6516  0661  0AF7               	incf	___aodiv@quotient+4,f
  6517  0662  1D03               	skipz
  6518  0663  2E6B               	goto	u100lld
  6519  0664  0AF8               	incf	___aodiv@quotient+5,f
  6520  0665  1D03               	skipz
  6521  0666  2E6B               	goto	u100lld
  6522  0667  0AF9               	incf	___aodiv@quotient+6,f
  6523  0668  1D03               	skipz
  6524  0669  2E6B               	goto	u100lld
  6525  066A  0AFA               	incf	___aodiv@quotient+7,f
  6526  066B                     u100lld:
  6527  066B                     l519:
  6528  066B  0873               	movf	___aodiv@quotient,w
  6529  066C  0020               	movlb	0	; select bank0
  6530  066D  00A0               	movwf	?___aodiv
  6531  066E  0874               	movf	___aodiv@quotient+1,w
  6532  066F  00A1               	movwf	?___aodiv+1
  6533  0670  0875               	movf	___aodiv@quotient+2,w
  6534  0671  00A2               	movwf	?___aodiv+2
  6535  0672  0876               	movf	___aodiv@quotient+3,w
  6536  0673  00A3               	movwf	?___aodiv+3
  6537  0674  0877               	movf	___aodiv@quotient+4,w
  6538  0675  00A4               	movwf	?___aodiv+4
  6539  0676  0878               	movf	___aodiv@quotient+5,w
  6540  0677  00A5               	movwf	?___aodiv+5
  6541  0678  0879               	movf	___aodiv@quotient+6,w
  6542  0679  00A6               	movwf	?___aodiv+6
  6543  067A  087A               	movf	___aodiv@quotient+7,w
  6544  067B  00A7               	movwf	?___aodiv+7
  6545  067C                     l520:
  6546  067C  0008               	return
  6547  067D                     __end_of___aodiv:
  6548                           
  6549                           	psect	text15
  6550  01F6                     __ptext15:	
  6551 ;; *************** function _lcd_putchar *****************
  6552 ;; Defined at:
  6553 ;;		line 220 in file "LCD_i2c.c"
  6554 ;; Parameters:    Size  Location     Type
  6555 ;;  dato            2    2[BANK0 ] PTR unsigned char 
  6556 ;;		 -> main@txt(32), STR_2(22), 
  6557 ;; Auto vars:     Size  Location     Type
  6558 ;;		None
  6559 ;; Return value:  Size  Location     Type
  6560 ;;                  1    wreg      void 
  6561 ;; Registers used:
  6562 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6563 ;; Tracked objects:
  6564 ;;		On entry : 0/0
  6565 ;;		On exit  : 0/0
  6566 ;;		Unchanged: 0/0
  6567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6568 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6570 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6571 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6572 ;;Total ram usage:        4 bytes
  6573 ;; Hardware stack levels used: 1
  6574 ;; Hardware stack levels required when called: 5
  6575 ;; This function calls:
  6576 ;;		_lcd_gotoxy
  6577 ;;		_lcd_send_byte
  6578 ;; This function is called by:
  6579 ;;		_main
  6580 ;; This function uses a non-reentrant model
  6581 ;;
  6582                           
  6583                           
  6584                           ;psect for function _lcd_putchar
  6585  01F6                     _lcd_putchar:
  6586  01F6                     l2088:	
  6587                           ;incstack = 0
  6588                           ; Regs used in _lcd_putchar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6589                           
  6590                           
  6591                           ;LCD_i2c.c: 221:    while (*dato){
  6592  01F6  2A45               	goto	l2110
  6593  01F7                     l2090:
  6594                           
  6595                           ;LCD_i2c.c: 226:             lcd_send_byte(0,1);
  6596  01F7  01F6               	clrf	lcd_send_byte@n
  6597  01F8  0AF6               	incf	lcd_send_byte@n,f
  6598  01F9  3000               	movlw	0
  6599  01FA  318F  27E7  3181   	fcall	_lcd_send_byte
  6600  01FD                     l2092:
  6601                           
  6602                           ;LCD_i2c.c: 227:             _delay((unsigned long)((2)*(8000000UL/4000.0)));
  6603  01FD  3006               	movlw	6
  6604  01FE  0020               	movlb	0	; select bank0
  6605  01FF  00A4               	movwf	??_lcd_putchar
  6606  0200  3030               	movlw	48
  6607  0201                     u1597:
  6608  0201  0B89               	decfsz	9,f
  6609  0202  2A01               	goto	u1597
  6610  0203  0BA4               	decfsz	??_lcd_putchar,f
  6611  0204  2A01               	goto	u1597
  6612  0205  0000               	nop
  6613  0206                     l2094:
  6614                           
  6615                           ;LCD_i2c.c: 228:             g_LcdX = 0;
  6616  0206  0021               	movlb	1	; select bank1
  6617  0207  01D0               	clrf	_g_LcdX^(0+128)
  6618  0208                     l2096:
  6619                           
  6620                           ;LCD_i2c.c: 229:             g_LcdY = 0;
  6621  0208  01CF               	clrf	_g_LcdY^(0+128)
  6622  0209                     l2098:
  6623                           
  6624                           ;LCD_i2c.c: 230:             _delay((unsigned long)((2)*(8000000UL/4000.0)));
  6625  0209  3006               	movlw	6
  6626  020A  0020               	movlb	0	; select bank0
  6627  020B  00A4               	movwf	??_lcd_putchar
  6628  020C  3030               	movlw	48
  6629  020D                     u1607:
  6630  020D  0B89               	decfsz	9,f
  6631  020E  2A0D               	goto	u1607
  6632  020F  0BA4               	decfsz	??_lcd_putchar,f
  6633  0210  2A0D               	goto	u1607
  6634  0211  0000               	nop
  6635                           
  6636                           ;LCD_i2c.c: 231:             break;
  6637  0212  2A40               	goto	l2108
  6638  0213                     l2100:
  6639                           
  6640                           ;LCD_i2c.c: 233:             lcd_gotoxy(1, g_LcdY+2);
  6641  0213  0021               	movlb	1	; select bank1
  6642  0214  084F               	movf	_g_LcdY^(0+128),w
  6643  0215  3E02               	addlw	2
  6644  0216  0020               	movlb	0	; select bank0
  6645  0217  00A4               	movwf	??_lcd_putchar
  6646  0218  0824               	movf	??_lcd_putchar,w
  6647  0219  00FA               	movwf	lcd_gotoxy@y
  6648  021A  3001               	movlw	1
  6649  021B  3181  2109  3181   	fcall	_lcd_gotoxy
  6650                           
  6651                           ;LCD_i2c.c: 234:             break;
  6652  021E  2A40               	goto	l2108
  6653  021F                     l2102:
  6654                           
  6655                           ;LCD_i2c.c: 236:             lcd_send_byte(1,*dato);
  6656  021F  0822               	movf	lcd_putchar@dato,w
  6657  0220  0084               	movwf	4
  6658  0221  0823               	movf	lcd_putchar@dato+1,w
  6659  0222  0085               	movwf	5
  6660  0223  0800               	movf	0,w	;code access
  6661  0224  00A4               	movwf	??_lcd_putchar
  6662  0225  0824               	movf	??_lcd_putchar,w
  6663  0226  00F6               	movwf	lcd_send_byte@n
  6664  0227  3001               	movlw	1
  6665  0228  318F  27E7  3181   	fcall	_lcd_send_byte
  6666                           
  6667                           ;LCD_i2c.c: 237:             break;
  6668  022B  2A40               	goto	l2108
  6669  022C                     l2106:
  6670  022C  0822               	movf	lcd_putchar@dato,w
  6671  022D  0084               	movwf	4
  6672  022E  0823               	movf	lcd_putchar@dato+1,w
  6673  022F  0085               	movwf	5
  6674  0230  0800               	movf	0,w	;code access
  6675  0231  00A4               	movwf	??_lcd_putchar
  6676  0232  01A5               	clrf	??_lcd_putchar+1
  6677                           
  6678                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6679                           ; Switch size 1, requested type "simple"
  6680                           ; Number of cases is 1, Range of values is 0 to 0
  6681                           ; switch strategies available:
  6682                           ; Name         Instructions Cycles
  6683                           ; simple_byte            4     3 (average)
  6684                           ; direct_byte            8     6 (fixed)
  6685                           ; jumptable            260     6 (fixed)
  6686                           ;	Chosen strategy is simple_byte
  6687  0233  0825               	movf	??_lcd_putchar+1,w
  6688  0234  3A00               	xorlw	0	; case 0
  6689  0235  1903               	skipnz
  6690  0236  2A38               	goto	l2258
  6691  0237  2A1F               	goto	l2102
  6692  0238                     l2258:
  6693                           
  6694                           ; Switch size 1, requested type "simple"
  6695                           ; Number of cases is 2, Range of values is 10 to 12
  6696                           ; switch strategies available:
  6697                           ; Name         Instructions Cycles
  6698                           ; simple_byte            7     4 (average)
  6699                           ; direct_byte           15     9 (fixed)
  6700                           ; jumptable            263     9 (fixed)
  6701                           ;	Chosen strategy is simple_byte
  6702  0238  0824               	movf	??_lcd_putchar,w
  6703  0239  3A0A               	xorlw	10	; case 10
  6704  023A  1903               	skipnz
  6705  023B  2A13               	goto	l2100
  6706  023C  3A06               	xorlw	6	; case 12
  6707  023D  1903               	skipnz
  6708  023E  29F7               	goto	l2090
  6709  023F  2A1F               	goto	l2102
  6710  0240                     l2108:
  6711                           
  6712                           ;LCD_i2c.c: 241:       dato++;
  6713  0240  3001               	movlw	1
  6714  0241  0020               	movlb	0	; select bank0
  6715  0242  07A2               	addwf	lcd_putchar@dato,f
  6716  0243  3000               	movlw	0
  6717  0244  3DA3               	addwfc	lcd_putchar@dato+1,f
  6718  0245                     l2110:
  6719                           
  6720                           ;LCD_i2c.c: 221:    while (*dato){
  6721  0245  0020               	movlb	0	; select bank0
  6722  0246  0822               	movf	lcd_putchar@dato,w
  6723  0247  0084               	movwf	4
  6724  0248  0823               	movf	lcd_putchar@dato+1,w
  6725  0249  0085               	movwf	5
  6726  024A  0012               	moviw fsr0++
  6727  024B  1D03               	btfss	3,2
  6728  024C  2A4E               	goto	u1481
  6729  024D  2A4F               	goto	u1480
  6730  024E                     u1481:
  6731  024E  2A2C               	goto	l2106
  6732  024F                     u1480:
  6733  024F                     l261:
  6734  024F  0008               	return
  6735  0250                     __end_of_lcd_putchar:
  6736                           
  6737                           	psect	text16
  6738  0109                     __ptext16:	
  6739 ;; *************** function _lcd_gotoxy *****************
  6740 ;; Defined at:
  6741 ;;		line 172 in file "LCD_i2c.c"
  6742 ;; Parameters:    Size  Location     Type
  6743 ;;  x               1    wreg     unsigned char 
  6744 ;;  y               1   10[COMMON] unsigned char 
  6745 ;; Auto vars:     Size  Location     Type
  6746 ;;  x               1    0[BANK0 ] unsigned char 
  6747 ;;  address         1    1[BANK0 ] unsigned char 
  6748 ;; Return value:  Size  Location     Type
  6749 ;;                  1    wreg      void 
  6750 ;; Registers used:
  6751 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6752 ;; Tracked objects:
  6753 ;;		On entry : 0/0
  6754 ;;		On exit  : 0/0
  6755 ;;		Unchanged: 0/0
  6756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6757 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6758 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6759 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6760 ;;      Totals:         3       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6761 ;;Total ram usage:        5 bytes
  6762 ;; Hardware stack levels used: 1
  6763 ;; Hardware stack levels required when called: 4
  6764 ;; This function calls:
  6765 ;;		_lcd_send_byte
  6766 ;; This function is called by:
  6767 ;;		_lcd_putchar
  6768 ;;		_lcd_putc
  6769 ;; This function uses a non-reentrant model
  6770 ;;
  6771                           
  6772                           
  6773                           ;psect for function _lcd_gotoxy
  6774  0109                     _lcd_gotoxy:
  6775                           
  6776                           ;incstack = 0
  6777                           ; Regs used in _lcd_gotoxy: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6778                           ;lcd_gotoxy@x stored from wreg
  6779  0109  0020               	movlb	0	; select bank0
  6780  010A  00A0               	movwf	lcd_gotoxy@x
  6781  010B                     l1976:
  6782                           
  6783                           ;LCD_i2c.c: 172: void lcd_gotoxy(int8 x, int8 y);LCD_i2c.c: 173: {;LCD_i2c.c: 174:    in
      +                          t8 address;;LCD_i2c.c: 176:    switch(y)
  6784  010B  291D               	goto	l1990
  6785  010C                     l1978:
  6786                           
  6787                           ;LCD_i2c.c: 179:          address = 0x00;
  6788  010C  01A1               	clrf	lcd_gotoxy@address
  6789                           
  6790                           ;LCD_i2c.c: 180:          break;
  6791  010D  2933               	goto	l1992
  6792  010E                     l1980:
  6793                           
  6794                           ;LCD_i2c.c: 182:          address = 0x40;
  6795  010E  3040               	movlw	64
  6796  010F  00FB               	movwf	??_lcd_gotoxy
  6797  0110  087B               	movf	??_lcd_gotoxy,w
  6798  0111  00A1               	movwf	lcd_gotoxy@address
  6799                           
  6800                           ;LCD_i2c.c: 183:          break;
  6801  0112  2933               	goto	l1992
  6802  0113                     l1982:
  6803                           
  6804                           ;LCD_i2c.c: 185:          address = 0x14;
  6805  0113  3014               	movlw	20
  6806  0114  00FB               	movwf	??_lcd_gotoxy
  6807  0115  087B               	movf	??_lcd_gotoxy,w
  6808  0116  00A1               	movwf	lcd_gotoxy@address
  6809                           
  6810                           ;LCD_i2c.c: 186:          break;
  6811  0117  2933               	goto	l1992
  6812  0118                     l1984:
  6813                           
  6814                           ;LCD_i2c.c: 188:          address = 0x54;
  6815  0118  3054               	movlw	84
  6816  0119  00FB               	movwf	??_lcd_gotoxy
  6817  011A  087B               	movf	??_lcd_gotoxy,w
  6818  011B  00A1               	movwf	lcd_gotoxy@address
  6819                           
  6820                           ;LCD_i2c.c: 189:          break;
  6821  011C  2933               	goto	l1992
  6822  011D                     l1990:
  6823  011D  087A               	movf	lcd_gotoxy@y,w
  6824  011E  00FB               	movwf	??_lcd_gotoxy
  6825  011F  01FC               	clrf	??_lcd_gotoxy+1
  6826                           
  6827                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6828                           ; Switch size 1, requested type "simple"
  6829                           ; Number of cases is 1, Range of values is 0 to 0
  6830                           ; switch strategies available:
  6831                           ; Name         Instructions Cycles
  6832                           ; simple_byte            4     3 (average)
  6833                           ; direct_byte            8     6 (fixed)
  6834                           ; jumptable            260     6 (fixed)
  6835                           ;	Chosen strategy is simple_byte
  6836  0120  087C               	movf	??_lcd_gotoxy+1,w
  6837  0121  3A00               	xorlw	0	; case 0
  6838  0122  1903               	skipnz
  6839  0123  2925               	goto	l2260
  6840  0124  290C               	goto	l1978
  6841  0125                     l2260:
  6842                           
  6843                           ; Switch size 1, requested type "simple"
  6844                           ; Number of cases is 4, Range of values is 1 to 4
  6845                           ; switch strategies available:
  6846                           ; Name         Instructions Cycles
  6847                           ; simple_byte           13     7 (average)
  6848                           ; direct_byte           17     9 (fixed)
  6849                           ; jumptable            263     9 (fixed)
  6850                           ;	Chosen strategy is simple_byte
  6851  0125  087B               	movf	??_lcd_gotoxy,w
  6852  0126  3A01               	xorlw	1	; case 1
  6853  0127  1903               	skipnz
  6854  0128  290C               	goto	l1978
  6855  0129  3A03               	xorlw	3	; case 2
  6856  012A  1903               	skipnz
  6857  012B  290E               	goto	l1980
  6858  012C  3A01               	xorlw	1	; case 3
  6859  012D  1903               	skipnz
  6860  012E  2913               	goto	l1982
  6861  012F  3A07               	xorlw	7	; case 4
  6862  0130  1903               	skipnz
  6863  0131  2918               	goto	l1984
  6864  0132  290C               	goto	l1978
  6865  0133                     l1992:
  6866                           
  6867                           ;LCD_i2c.c: 194:    address += x-1;
  6868  0133  0820               	movf	lcd_gotoxy@x,w
  6869  0134  3EFF               	addlw	255
  6870  0135  00FB               	movwf	??_lcd_gotoxy
  6871  0136  087B               	movf	??_lcd_gotoxy,w
  6872  0137  07A1               	addwf	lcd_gotoxy@address,f
  6873  0138                     l1994:
  6874                           
  6875                           ;LCD_i2c.c: 195:    lcd_send_byte(0, 0x80 | address);
  6876  0138  0821               	movf	lcd_gotoxy@address,w
  6877  0139  3880               	iorlw	128
  6878  013A  00FB               	movwf	??_lcd_gotoxy
  6879  013B  087B               	movf	??_lcd_gotoxy,w
  6880  013C  00F6               	movwf	lcd_send_byte@n
  6881  013D  3000               	movlw	0
  6882  013E  318F  27E7  3181   	fcall	_lcd_send_byte
  6883  0141                     l1996:
  6884                           
  6885                           ;LCD_i2c.c: 197:    g_LcdX = x - 1;
  6886  0141  0020               	movlb	0	; select bank0
  6887  0142  0820               	movf	lcd_gotoxy@x,w
  6888  0143  3EFF               	addlw	255
  6889  0144  00FB               	movwf	??_lcd_gotoxy
  6890  0145  087B               	movf	??_lcd_gotoxy,w
  6891  0146  0021               	movlb	1	; select bank1
  6892  0147  00D0               	movwf	_g_LcdX^(0+128)
  6893  0148                     l1998:
  6894                           
  6895                           ;LCD_i2c.c: 198:    g_LcdY = y - 1;
  6896  0148  087A               	movf	lcd_gotoxy@y,w
  6897  0149  3EFF               	addlw	255
  6898  014A  00FB               	movwf	??_lcd_gotoxy
  6899  014B  087B               	movf	??_lcd_gotoxy,w
  6900  014C  00CF               	movwf	_g_LcdY^(0+128)
  6901  014D                     l242:
  6902  014D  0008               	return
  6903  014E                     __end_of_lcd_gotoxy:
  6904                           
  6905                           	psect	text17
  6906  0250                     __ptext17:	
  6907 ;; *************** function _lcd_init *****************
  6908 ;; Defined at:
  6909 ;;		line 136 in file "LCD_i2c.c"
  6910 ;; Parameters:    Size  Location     Type
  6911 ;;		None
  6912 ;; Auto vars:     Size  Location     Type
  6913 ;;  i               1   11[COMMON] unsigned char 
  6914 ;; Return value:  Size  Location     Type
  6915 ;;                  1    wreg      void 
  6916 ;; Registers used:
  6917 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6918 ;; Tracked objects:
  6919 ;;		On entry : 0/0
  6920 ;;		On exit  : 0/0
  6921 ;;		Unchanged: 0/0
  6922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6924 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6925 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6926 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6927 ;;Total ram usage:        2 bytes
  6928 ;; Hardware stack levels used: 1
  6929 ;; Hardware stack levels required when called: 4
  6930 ;; This function calls:
  6931 ;;		_I2C_start
  6932 ;;		_I2C_stop
  6933 ;;		_I2C_write
  6934 ;;		_Send_D7_D4
  6935 ;;		_lcd_send_byte
  6936 ;; This function is called by:
  6937 ;;		_main
  6938 ;; This function uses a non-reentrant model
  6939 ;;
  6940                           
  6941                           
  6942                           ;psect for function _lcd_init
  6943  0250                     _lcd_init:
  6944  0250                     l2042:	
  6945                           ;incstack = 0
  6946                           ; Regs used in _lcd_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6947                           
  6948                           
  6949                           ;LCD_i2c.c: 137:    int8 i;;LCD_i2c.c: 138:    I2C_start();
  6950  0250  318F  2742  3182   	fcall	_I2C_start
  6951  0253                     l2044:
  6952                           
  6953                           ;LCD_i2c.c: 139:    I2C_write(112|(7<<1));
  6954  0253  307E               	movlw	126
  6955  0254  318F  2771  3182   	fcall	_I2C_write
  6956  0257                     l2046:
  6957                           
  6958                           ;LCD_i2c.c: 140:    I2C_write(0x00);
  6959  0257  3000               	movlw	0
  6960  0258  318F  2771  3182   	fcall	_I2C_write
  6961                           
  6962                           ;LCD_i2c.c: 141:    I2C_stop();
  6963  025B  318F  2749  3182   	fcall	_I2C_stop
  6964  025E                     l2048:
  6965                           
  6966                           ;LCD_i2c.c: 144:    _delay((unsigned long)((35)*(8000000UL/4000.0)));
  6967  025E  305B               	movlw	91
  6968  025F  00FA               	movwf	??_lcd_init
  6969  0260  30E8               	movlw	232
  6970  0261                     u1617:
  6971  0261  0B89               	decfsz	9,f
  6972  0262  2A61               	goto	u1617
  6973  0263  0BFA               	decfsz	??_lcd_init,f
  6974  0264  2A61               	goto	u1617
  6975  0265                     l2050:
  6976                           
  6977                           ;LCD_i2c.c: 146:    for(i=0 ;i < 3; i++){
  6978  0265  01FB               	clrf	lcd_init@i
  6979  0266                     l2056:
  6980                           
  6981                           ;LCD_i2c.c: 147:       Send_D7_D4(0,0x03);
  6982  0266  3003               	movlw	3
  6983  0267  00FA               	movwf	??_lcd_init
  6984  0268  087A               	movf	??_lcd_init,w
  6985  0269  00F2               	movwf	Send_D7_D4@nibble
  6986  026A  3000               	movlw	0
  6987  026B  3182  22AC  3182   	fcall	_Send_D7_D4
  6988  026E                     l2058:
  6989                           
  6990                           ;LCD_i2c.c: 148:       _delay((unsigned long)((5)*(8000000UL/4000.0)));
  6991  026E  300D               	movlw	13
  6992  026F  00FA               	movwf	??_lcd_init
  6993  0270  30FC               	movlw	252
  6994  0271                     u1627:
  6995  0271  0B89               	decfsz	9,f
  6996  0272  2A71               	goto	u1627
  6997  0273  0BFA               	decfsz	??_lcd_init,f
  6998  0274  2A71               	goto	u1627
  6999  0275                     l2060:
  7000                           
  7001                           ;LCD_i2c.c: 149:    }
  7002  0275  3001               	movlw	1
  7003  0276  00FA               	movwf	??_lcd_init
  7004  0277  087A               	movf	??_lcd_init,w
  7005  0278  07FB               	addwf	lcd_init@i,f
  7006  0279                     l2062:
  7007  0279  3003               	movlw	3
  7008  027A  027B               	subwf	lcd_init@i,w
  7009  027B  1C03               	skipc
  7010  027C  2A7E               	goto	u1461
  7011  027D  2A7F               	goto	u1460
  7012  027E                     u1461:
  7013  027E  2A66               	goto	l2056
  7014  027F                     u1460:
  7015  027F                     l2064:
  7016                           
  7017                           ;LCD_i2c.c: 150:     Send_D7_D4(0,0x02);
  7018  027F  3002               	movlw	2
  7019  0280  00FA               	movwf	??_lcd_init
  7020  0281  087A               	movf	??_lcd_init,w
  7021  0282  00F2               	movwf	Send_D7_D4@nibble
  7022  0283  3000               	movlw	0
  7023  0284  3182  22AC  3182   	fcall	_Send_D7_D4
  7024  0287                     l2066:
  7025                           
  7026                           ;LCD_i2c.c: 163:    for(i=0; i < sizeof(LCD_INIT_STRING); i++)
  7027  0287  01FB               	clrf	lcd_init@i
  7028  0288                     l2072:
  7029                           
  7030                           ;LCD_i2c.c: 164:    {;LCD_i2c.c: 165:       lcd_send_byte(0, LCD_INIT_STRING[i]);
  7031  0288  087B               	movf	lcd_init@i,w
  7032  0289  3E00               	addlw	low (_LCD_INIT_STRING| (0+32768))
  7033  028A  0084               	movwf	4
  7034  028B  3088               	movlw	high (_LCD_INIT_STRING| (0+32768))
  7035  028C  1803               	skipnc
  7036  028D  3E01               	addlw	1
  7037  028E  0085               	movwf	5
  7038  028F  0800               	movf	0,w	;code access
  7039  0290  00FA               	movwf	??_lcd_init
  7040  0291  087A               	movf	??_lcd_init,w
  7041  0292  00F6               	movwf	lcd_send_byte@n
  7042  0293  3000               	movlw	0
  7043  0294  318F  27E7  3182   	fcall	_lcd_send_byte
  7044  0297                     l2074:
  7045                           
  7046                           ;LCD_i2c.c: 166:       _delay((unsigned long)((5)*(8000000UL/4000.0)));
  7047  0297  300D               	movlw	13
  7048  0298  00FA               	movwf	??_lcd_init
  7049  0299  30FC               	movlw	252
  7050  029A                     u1637:
  7051  029A  0B89               	decfsz	9,f
  7052  029B  2A9A               	goto	u1637
  7053  029C  0BFA               	decfsz	??_lcd_init,f
  7054  029D  2A9A               	goto	u1637
  7055  029E                     l2076:
  7056                           
  7057                           ;LCD_i2c.c: 167:    }
  7058  029E  3001               	movlw	1
  7059  029F  00FA               	movwf	??_lcd_init
  7060  02A0  087A               	movf	??_lcd_init,w
  7061  02A1  07FB               	addwf	lcd_init@i,f
  7062  02A2                     l2078:
  7063  02A2  3004               	movlw	4
  7064  02A3  027B               	subwf	lcd_init@i,w
  7065  02A4  1C03               	skipc
  7066  02A5  2AA7               	goto	u1471
  7067  02A6  2AA8               	goto	u1470
  7068  02A7                     u1471:
  7069  02A7  2A88               	goto	l2072
  7070  02A8                     u1470:
  7071  02A8                     l2080:
  7072                           
  7073                           ;LCD_i2c.c: 168:    g_LcdX = 0;
  7074  02A8  0021               	movlb	1	; select bank1
  7075  02A9  01D0               	clrf	_g_LcdX^(0+128)
  7076                           
  7077                           ;LCD_i2c.c: 169:    g_LcdY = 0;
  7078  02AA  01CF               	clrf	_g_LcdY^(0+128)
  7079  02AB                     l232:
  7080  02AB  0008               	return
  7081  02AC                     __end_of_lcd_init:
  7082                           
  7083                           	psect	text18
  7084  0FE7                     __ptext18:	
  7085 ;; *************** function _lcd_send_byte *****************
  7086 ;; Defined at:
  7087 ;;		line 130 in file "LCD_i2c.c"
  7088 ;; Parameters:    Size  Location     Type
  7089 ;;  address         1    wreg     unsigned char 
  7090 ;;  n               1    6[COMMON] unsigned char 
  7091 ;; Auto vars:     Size  Location     Type
  7092 ;;  address         1    9[COMMON] unsigned char 
  7093 ;; Return value:  Size  Location     Type
  7094 ;;                  1    wreg      void 
  7095 ;; Registers used:
  7096 ;;		wreg, status,2, status,0, pclath, cstack
  7097 ;; Tracked objects:
  7098 ;;		On entry : 0/0
  7099 ;;		On exit  : 0/0
  7100 ;;		Unchanged: 0/0
  7101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7102 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7103 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7104 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7105 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7106 ;;Total ram usage:        4 bytes
  7107 ;; Hardware stack levels used: 1
  7108 ;; Hardware stack levels required when called: 3
  7109 ;; This function calls:
  7110 ;;		_Send_D7_D4
  7111 ;; This function is called by:
  7112 ;;		_lcd_init
  7113 ;;		_lcd_gotoxy
  7114 ;;		_lcd_putchar
  7115 ;;		_lcd_putc
  7116 ;;		_Clear_LCD
  7117 ;;		_CGRAM_x
  7118 ;; This function uses a non-reentrant model
  7119 ;;
  7120                           
  7121                           
  7122                           ;psect for function _lcd_send_byte
  7123  0FE7                     _lcd_send_byte:
  7124                           
  7125                           ;incstack = 0
  7126                           ; Regs used in _lcd_send_byte: [wreg+status,2+status,0+pclath+cstack]
  7127                           ;lcd_send_byte@address stored from wreg
  7128  0FE7  00F9               	movwf	lcd_send_byte@address
  7129  0FE8                     l1872:
  7130                           
  7131                           ;LCD_i2c.c: 130: void lcd_send_byte(int8 address, int8 n);LCD_i2c.c: 131: {;LCD_i2c.c: 1
      +                          32:    Send_D7_D4(address,n >> 4);
  7132  0FE8  0876               	movf	lcd_send_byte@n,w
  7133  0FE9  00F7               	movwf	??_lcd_send_byte
  7134  0FEA  3004               	movlw	4
  7135  0FEB                     u1375:
  7136  0FEB  36F7               	lsrf	??_lcd_send_byte,f
  7137  0FEC  0B89               	decfsz	9,f
  7138  0FED  2FEB               	goto	u1375
  7139  0FEE  0877               	movf	??_lcd_send_byte,w
  7140  0FEF  00F8               	movwf	??_lcd_send_byte+1
  7141  0FF0  0878               	movf	??_lcd_send_byte+1,w
  7142  0FF1  00F2               	movwf	Send_D7_D4@nibble
  7143  0FF2  0879               	movf	lcd_send_byte@address,w
  7144  0FF3  3182  22AC  318F   	fcall	_Send_D7_D4
  7145                           
  7146                           ;LCD_i2c.c: 133:    Send_D7_D4(address,n & 0xf);
  7147  0FF6  0876               	movf	lcd_send_byte@n,w
  7148  0FF7  390F               	andlw	15
  7149  0FF8  00F7               	movwf	??_lcd_send_byte
  7150  0FF9  0877               	movf	??_lcd_send_byte,w
  7151  0FFA  00F2               	movwf	Send_D7_D4@nibble
  7152  0FFB  0879               	movf	lcd_send_byte@address,w
  7153  0FFC  3182  22AC  318F   	fcall	_Send_D7_D4
  7154  0FFF                     l225:
  7155  0FFF  0008               	return
  7156  1000                     __end_of_lcd_send_byte:
  7157                           
  7158                           	psect	text19
  7159  02AC                     __ptext19:	
  7160 ;; *************** function _Send_D7_D4 *****************
  7161 ;; Defined at:
  7162 ;;		line 110 in file "LCD_i2c.c"
  7163 ;; Parameters:    Size  Location     Type
  7164 ;;  address         1    wreg     unsigned char 
  7165 ;;  nibble          1    2[COMMON] unsigned char 
  7166 ;; Auto vars:     Size  Location     Type
  7167 ;;  address         1    4[COMMON] unsigned char 
  7168 ;;  datos           1    5[COMMON] unsigned char 
  7169 ;; Return value:  Size  Location     Type
  7170 ;;                  1    wreg      void 
  7171 ;; Registers used:
  7172 ;;		wreg, status,2, status,0, pclath, cstack
  7173 ;; Tracked objects:
  7174 ;;		On entry : 0/0
  7175 ;;		On exit  : 0/0
  7176 ;;		Unchanged: 0/0
  7177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7178 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7179 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7180 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7181 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7182 ;;Total ram usage:        4 bytes
  7183 ;; Hardware stack levels used: 1
  7184 ;; Hardware stack levels required when called: 2
  7185 ;; This function calls:
  7186 ;;		_Write_PCF
  7187 ;; This function is called by:
  7188 ;;		_lcd_send_byte
  7189 ;;		_lcd_init
  7190 ;; This function uses a non-reentrant model
  7191 ;;
  7192                           
  7193                           
  7194                           ;psect for function _Send_D7_D4
  7195  02AC                     _Send_D7_D4:
  7196                           
  7197                           ;incstack = 0
  7198                           ; Regs used in _Send_D7_D4: [wreg+status,2+status,0+pclath+cstack]
  7199                           ;Send_D7_D4@address stored from wreg
  7200  02AC  00F4               	movwf	Send_D7_D4@address
  7201  02AD                     l1774:
  7202                           
  7203                           ;LCD_i2c.c: 110: void Send_D7_D4(int8 address,int8 nibble);LCD_i2c.c: 111: {;LCD_i2c.c: 
      +                          112:    char datos=0;
  7204  02AD  01F5               	clrf	Send_D7_D4@datos
  7205  02AE                     l1776:
  7206                           
  7207                           ;LCD_i2c.c: 114:    if((nibble & 1)==1) datos= datos|16; else datos = datos&~16;
  7208  02AE  1C72               	btfss	Send_D7_D4@nibble,0
  7209  02AF  2AB1               	goto	u1161
  7210  02B0  2AB2               	goto	u1160
  7211  02B1                     u1161:
  7212  02B1  2AB8               	goto	l1780
  7213  02B2                     u1160:
  7214  02B2                     l1778:
  7215  02B2  0875               	movf	Send_D7_D4@datos,w
  7216  02B3  3810               	iorlw	16
  7217  02B4  00F3               	movwf	??_Send_D7_D4
  7218  02B5  0873               	movf	??_Send_D7_D4,w
  7219  02B6  00F5               	movwf	Send_D7_D4@datos
  7220  02B7  2ABD               	goto	l1782
  7221  02B8                     l1780:
  7222  02B8  0875               	movf	Send_D7_D4@datos,w
  7223  02B9  39EF               	andlw	239
  7224  02BA  00F3               	movwf	??_Send_D7_D4
  7225  02BB  0873               	movf	??_Send_D7_D4,w
  7226  02BC  00F5               	movwf	Send_D7_D4@datos
  7227  02BD                     l1782:
  7228                           
  7229                           ;LCD_i2c.c: 115:    if((nibble & 2)==2) datos= datos|32; else datos = datos&~32;
  7230  02BD  1CF2               	btfss	Send_D7_D4@nibble,1
  7231  02BE  2AC0               	goto	u1171
  7232  02BF  2AC1               	goto	u1170
  7233  02C0                     u1171:
  7234  02C0  2AC7               	goto	l1786
  7235  02C1                     u1170:
  7236  02C1                     l1784:
  7237  02C1  0875               	movf	Send_D7_D4@datos,w
  7238  02C2  3820               	iorlw	32
  7239  02C3  00F3               	movwf	??_Send_D7_D4
  7240  02C4  0873               	movf	??_Send_D7_D4,w
  7241  02C5  00F5               	movwf	Send_D7_D4@datos
  7242  02C6  2ACC               	goto	l1788
  7243  02C7                     l1786:
  7244  02C7  0875               	movf	Send_D7_D4@datos,w
  7245  02C8  39DF               	andlw	223
  7246  02C9  00F3               	movwf	??_Send_D7_D4
  7247  02CA  0873               	movf	??_Send_D7_D4,w
  7248  02CB  00F5               	movwf	Send_D7_D4@datos
  7249  02CC                     l1788:
  7250                           
  7251                           ;LCD_i2c.c: 116:    if((nibble & 4)==4) datos= datos|64; else datos = datos&~64;
  7252  02CC  1D72               	btfss	Send_D7_D4@nibble,2
  7253  02CD  2ACF               	goto	u1181
  7254  02CE  2AD0               	goto	u1180
  7255  02CF                     u1181:
  7256  02CF  2AD6               	goto	l1792
  7257  02D0                     u1180:
  7258  02D0                     l1790:
  7259  02D0  0875               	movf	Send_D7_D4@datos,w
  7260  02D1  3840               	iorlw	64
  7261  02D2  00F3               	movwf	??_Send_D7_D4
  7262  02D3  0873               	movf	??_Send_D7_D4,w
  7263  02D4  00F5               	movwf	Send_D7_D4@datos
  7264  02D5  2ADB               	goto	l1794
  7265  02D6                     l1792:
  7266  02D6  0875               	movf	Send_D7_D4@datos,w
  7267  02D7  39BF               	andlw	191
  7268  02D8  00F3               	movwf	??_Send_D7_D4
  7269  02D9  0873               	movf	??_Send_D7_D4,w
  7270  02DA  00F5               	movwf	Send_D7_D4@datos
  7271  02DB                     l1794:
  7272                           
  7273                           ;LCD_i2c.c: 117:    if((nibble & 8)==8) datos= datos|128; else datos = datos&~128;
  7274  02DB  1DF2               	btfss	Send_D7_D4@nibble,3
  7275  02DC  2ADE               	goto	u1191
  7276  02DD  2ADF               	goto	u1190
  7277  02DE                     u1191:
  7278  02DE  2AE5               	goto	l1798
  7279  02DF                     u1190:
  7280  02DF                     l1796:
  7281  02DF  0875               	movf	Send_D7_D4@datos,w
  7282  02E0  3880               	iorlw	128
  7283  02E1  00F3               	movwf	??_Send_D7_D4
  7284  02E2  0873               	movf	??_Send_D7_D4,w
  7285  02E3  00F5               	movwf	Send_D7_D4@datos
  7286  02E4  2AEA               	goto	l1800
  7287  02E5                     l1798:
  7288  02E5  0875               	movf	Send_D7_D4@datos,w
  7289  02E6  397F               	andlw	127
  7290  02E7  00F3               	movwf	??_Send_D7_D4
  7291  02E8  0873               	movf	??_Send_D7_D4,w
  7292  02E9  00F5               	movwf	Send_D7_D4@datos
  7293  02EA                     l1800:
  7294                           
  7295                           ;LCD_i2c.c: 118:       _delay((unsigned long)((60)*(8000000UL/4000000.0)));
  7296  02EA  3028               	movlw	40
  7297  02EB                     u1647:
  7298  02EB  0B89               	decfsz	9,f
  7299  02EC  2AEB               	goto	u1647
  7300  02ED                     l1802:
  7301                           
  7302                           ;LCD_i2c.c: 119:    if(address)
  7303  02ED  0874               	movf	Send_D7_D4@address,w
  7304  02EE  1903               	btfsc	3,2
  7305  02EF  2AF1               	goto	u1201
  7306  02F0  2AF2               	goto	u1200
  7307  02F1                     u1201:
  7308  02F1  2AF8               	goto	l1806
  7309  02F2                     u1200:
  7310  02F2                     l1804:
  7311                           
  7312                           ;LCD_i2c.c: 120:       datos= datos |1;
  7313  02F2  0875               	movf	Send_D7_D4@datos,w
  7314  02F3  3801               	iorlw	1
  7315  02F4  00F3               	movwf	??_Send_D7_D4
  7316  02F5  0873               	movf	??_Send_D7_D4,w
  7317  02F6  00F5               	movwf	Send_D7_D4@datos
  7318  02F7  2AFD               	goto	l1808
  7319  02F8                     l1806:
  7320                           
  7321                           ;LCD_i2c.c: 122:      datos = datos &~1;
  7322  02F8  0875               	movf	Send_D7_D4@datos,w
  7323  02F9  39FE               	andlw	254
  7324  02FA  00F3               	movwf	??_Send_D7_D4
  7325  02FB  0873               	movf	??_Send_D7_D4,w
  7326  02FC  00F5               	movwf	Send_D7_D4@datos
  7327  02FD                     l1808:
  7328                           
  7329                           ;LCD_i2c.c: 125:    Write_PCF( datos | 4);
  7330  02FD  0875               	movf	Send_D7_D4@datos,w
  7331  02FE  3804               	iorlw	4
  7332  02FF  318F  2789  3182   	fcall	_Write_PCF
  7333  0302                     l1810:
  7334                           
  7335                           ;LCD_i2c.c: 126:    _delay((unsigned long)((2)*(8000000UL/4000000.0)));
  7336  0302  3200               	nop2	;2 cycle nop
  7337  0303  3200               	nop2	;2 cycle nop
  7338  0304                     l1812:
  7339                           
  7340                           ;LCD_i2c.c: 127:    Write_PCF( datos & ~4);
  7341  0304  0875               	movf	Send_D7_D4@datos,w
  7342  0305  39FB               	andlw	251
  7343  0306  318F  2789  3182   	fcall	_Write_PCF
  7344  0309                     l222:
  7345  0309  0008               	return
  7346  030A                     __end_of_Send_D7_D4:
  7347                           
  7348                           	psect	text20
  7349  0F89                     __ptext20:	
  7350 ;; *************** function _Write_PCF *****************
  7351 ;; Defined at:
  7352 ;;		line 103 in file "LCD_i2c.c"
  7353 ;; Parameters:    Size  Location     Type
  7354 ;;  dato            1    wreg     unsigned char 
  7355 ;; Auto vars:     Size  Location     Type
  7356 ;;  dato            1    1[COMMON] unsigned char 
  7357 ;; Return value:  Size  Location     Type
  7358 ;;                  1    wreg      void 
  7359 ;; Registers used:
  7360 ;;		wreg, status,2, status,0, pclath, cstack
  7361 ;; Tracked objects:
  7362 ;;		On entry : 0/0
  7363 ;;		On exit  : 0/0
  7364 ;;		Unchanged: 0/0
  7365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7367 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7369 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7370 ;;Total ram usage:        1 bytes
  7371 ;; Hardware stack levels used: 1
  7372 ;; Hardware stack levels required when called: 1
  7373 ;; This function calls:
  7374 ;;		_I2C_start
  7375 ;;		_I2C_stop
  7376 ;;		_I2C_write
  7377 ;; This function is called by:
  7378 ;;		_Send_D7_D4
  7379 ;; This function uses a non-reentrant model
  7380 ;;
  7381                           
  7382                           
  7383                           ;psect for function _Write_PCF
  7384  0F89                     _Write_PCF:
  7385                           
  7386                           ;incstack = 0
  7387                           ; Regs used in _Write_PCF: [wreg+status,2+status,0+pclath+cstack]
  7388                           ;Write_PCF@dato stored from wreg
  7389  0F89  00F1               	movwf	Write_PCF@dato
  7390  0F8A                     l1674:
  7391                           
  7392                           ;LCD_i2c.c: 105:    I2C_start();
  7393  0F8A  318F  2742  318F   	fcall	_I2C_start
  7394  0F8D                     l1676:
  7395                           
  7396                           ;LCD_i2c.c: 106:    I2C_write(112|(7<<1));
  7397  0F8D  307E               	movlw	126
  7398  0F8E  318F  2771  318F   	fcall	_I2C_write
  7399  0F91                     l1678:
  7400                           
  7401                           ;LCD_i2c.c: 107:    I2C_write(dato|8 );
  7402  0F91  0871               	movf	Write_PCF@dato,w
  7403  0F92  3808               	iorlw	8
  7404  0F93  318F  2771  318F   	fcall	_I2C_write
  7405                           
  7406                           ;LCD_i2c.c: 108:    I2C_stop();
  7407  0F96  318F  2749  318F   	fcall	_I2C_stop
  7408  0F99                     l209:
  7409  0F99  0008               	return
  7410  0F9A                     __end_of_Write_PCF:
  7411                           
  7412                           	psect	text21
  7413  0046                     __ptext21:	
  7414 ;; *************** function ___wmul *****************
  7415 ;; Defined at:
  7416 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  7417 ;; Parameters:    Size  Location     Type
  7418 ;;  multiplier      2    0[COMMON] unsigned int 
  7419 ;;  multiplicand    2    2[COMMON] unsigned int 
  7420 ;; Auto vars:     Size  Location     Type
  7421 ;;  product         2    4[COMMON] unsigned int 
  7422 ;; Return value:  Size  Location     Type
  7423 ;;                  2    0[COMMON] unsigned int 
  7424 ;; Registers used:
  7425 ;;		wreg, status,2, status,0
  7426 ;; Tracked objects:
  7427 ;;		On entry : 0/0
  7428 ;;		On exit  : 0/0
  7429 ;;		Unchanged: 0/0
  7430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7431 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7432 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7434 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7435 ;;Total ram usage:        6 bytes
  7436 ;; Hardware stack levels used: 1
  7437 ;; This function calls:
  7438 ;;		Nothing
  7439 ;; This function is called by:
  7440 ;;		_main
  7441 ;; This function uses a non-reentrant model
  7442 ;;
  7443                           
  7444                           
  7445                           ;psect for function ___wmul
  7446  0046                     ___wmul:
  7447  0046                     l2128:	
  7448                           ;incstack = 0
  7449                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7450                           
  7451  0046  01F4               	clrf	___wmul@product
  7452  0047  01F5               	clrf	___wmul@product+1
  7453  0048                     l2130:
  7454  0048  1C70               	btfss	___wmul@multiplier,0
  7455  0049  284B               	goto	u1491
  7456  004A  284C               	goto	u1490
  7457  004B                     u1491:
  7458  004B  2850               	goto	l419
  7459  004C                     u1490:
  7460  004C                     l2132:
  7461  004C  0872               	movf	___wmul@multiplicand,w
  7462  004D  07F4               	addwf	___wmul@product,f
  7463  004E  0873               	movf	___wmul@multiplicand+1,w
  7464  004F  3DF5               	addwfc	___wmul@product+1,f
  7465  0050                     l419:
  7466  0050  3001               	movlw	1
  7467  0051                     u1505:
  7468  0051  35F2               	lslf	___wmul@multiplicand,f
  7469  0052  0DF3               	rlf	___wmul@multiplicand+1,f
  7470  0053  0B89               	decfsz	9,f
  7471  0054  2851               	goto	u1505
  7472  0055                     l2134:
  7473  0055  3001               	movlw	1
  7474  0056                     u1515:
  7475  0056  36F1               	lsrf	___wmul@multiplier+1,f
  7476  0057  0CF0               	rrf	___wmul@multiplier,f
  7477  0058  0B89               	decfsz	9,f
  7478  0059  2856               	goto	u1515
  7479  005A                     l2136:
  7480  005A  0870               	movf	___wmul@multiplier,w
  7481  005B  0471               	iorwf	___wmul@multiplier+1,w
  7482  005C  1D03               	btfss	3,2
  7483  005D  285F               	goto	u1521
  7484  005E  2860               	goto	u1520
  7485  005F                     u1521:
  7486  005F  2848               	goto	l2130
  7487  0060                     u1520:
  7488  0060                     l2138:
  7489  0060  0875               	movf	___wmul@product+1,w
  7490  0061  00F1               	movwf	?___wmul+1
  7491  0062  0874               	movf	___wmul@product,w
  7492  0063  00F0               	movwf	?___wmul
  7493  0064                     l421:
  7494  0064  0008               	return
  7495  0065                     __end_of___wmul:
  7496                           
  7497                           	psect	text22
  7498  0005                     __ptext22:	
  7499 ;; *************** function _SYSTEM_init *****************
  7500 ;; Defined at:
  7501 ;;		line 4 in file "DEVICE_CONFIG.c"
  7502 ;; Parameters:    Size  Location     Type
  7503 ;;		None
  7504 ;; Auto vars:     Size  Location     Type
  7505 ;;		None
  7506 ;; Return value:  Size  Location     Type
  7507 ;;                  1    wreg      void 
  7508 ;; Registers used:
  7509 ;;		wreg, status,2, status,0, pclath, cstack
  7510 ;; Tracked objects:
  7511 ;;		On entry : 0/0
  7512 ;;		On exit  : 0/0
  7513 ;;		Unchanged: 0/0
  7514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7519 ;;Total ram usage:        0 bytes
  7520 ;; Hardware stack levels used: 1
  7521 ;; Hardware stack levels required when called: 1
  7522 ;; This function calls:
  7523 ;;		_I2C_init
  7524 ;;		_OSC_init
  7525 ;;		_PIN_MANAGER_init
  7526 ;;		_UART_init
  7527 ;; This function is called by:
  7528 ;;		_main
  7529 ;; This function uses a non-reentrant model
  7530 ;;
  7531                           
  7532                           
  7533                           ;psect for function _SYSTEM_init
  7534  0005                     _SYSTEM_init:
  7535  0005                     l2040:	
  7536                           ;incstack = 0
  7537                           ; Regs used in _SYSTEM_init: [wreg+status,2+status,0+pclath+cstack]
  7538                           
  7539                           
  7540                           ;DEVICE_CONFIG.c: 6:     OSC_init();
  7541  0005  318F  277D  3180   	fcall	_OSC_init
  7542                           
  7543                           ;DEVICE_CONFIG.c: 7:     PIN_MANAGER_init();
  7544  0008  318F  279A  3180   	fcall	_PIN_MANAGER_init
  7545                           
  7546                           ;DEVICE_CONFIG.c: 8:     UART_init();
  7547  000B  318F  27D2  3180   	fcall	_UART_init
  7548                           
  7549                           ;DEVICE_CONFIG.c: 9:     I2C_init();
  7550  000E  318F  27BE  3180   	fcall	_I2C_init
  7551  0011                     l74:
  7552  0011  0008               	return
  7553  0012                     __end_of_SYSTEM_init:
  7554                           
  7555                           	psect	text23
  7556  0FD2                     __ptext23:	
  7557 ;; *************** function _UART_init *****************
  7558 ;; Defined at:
  7559 ;;		line 7 in file "UART.c"
  7560 ;; Parameters:    Size  Location     Type
  7561 ;;		None
  7562 ;; Auto vars:     Size  Location     Type
  7563 ;;		None
  7564 ;; Return value:  Size  Location     Type
  7565 ;;                  1    wreg      void 
  7566 ;; Registers used:
  7567 ;;		wreg, status,2
  7568 ;; Tracked objects:
  7569 ;;		On entry : 0/0
  7570 ;;		On exit  : 0/0
  7571 ;;		Unchanged: 0/0
  7572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7577 ;;Total ram usage:        0 bytes
  7578 ;; Hardware stack levels used: 1
  7579 ;; This function calls:
  7580 ;;		Nothing
  7581 ;; This function is called by:
  7582 ;;		_SYSTEM_init
  7583 ;; This function uses a non-reentrant model
  7584 ;;
  7585                           
  7586                           
  7587                           ;psect for function _UART_init
  7588  0FD2                     _UART_init:
  7589  0FD2                     l1944:	
  7590                           ;incstack = 0
  7591                           ; Regs used in _UART_init: [wreg+status,2]
  7592                           
  7593                           
  7594                           ;UART.c: 9:     RXPPS = 0X11;
  7595  0FD2  3011               	movlw	17
  7596  0FD3  003D               	movlb	29	; select bank29
  7597  0FD4  00CB               	movwf	75	;volatile
  7598                           
  7599                           ;UART.c: 10:     RC0PPS = 0x10;
  7600  0FD5  3010               	movlw	16
  7601  0FD6  003E               	movlb	30	; select bank30
  7602  0FD7  00A0               	movwf	32	;volatile
  7603  0FD8                     l1946:
  7604                           
  7605                           ;UART.c: 12:     BAUD1CONbits.BRG16 = 1;
  7606  0FD8  0022               	movlb	2	; select bank2
  7607  0FD9  159F               	bsf	31,3	;volatile
  7608  0FDA                     l1948:
  7609                           
  7610                           ;UART.c: 13:     BAUD1CONbits.ABDEN = 0;
  7611  0FDA  101F               	bcf	31,0	;volatile
  7612  0FDB                     l1950:
  7613                           
  7614                           ;UART.c: 15:     RC1STAbits.SPEN = 1;
  7615  0FDB  179D               	bsf	29,7	;volatile
  7616  0FDC                     l1952:
  7617                           
  7618                           ;UART.c: 16:     RC1STAbits.RX9 = 0;
  7619  0FDC  131D               	bcf	29,6	;volatile
  7620  0FDD                     l1954:
  7621                           
  7622                           ;UART.c: 17:     RC1STAbits.CREN = 1;
  7623  0FDD  161D               	bsf	29,4	;volatile
  7624  0FDE                     l1956:
  7625                           
  7626                           ;UART.c: 19:     TX1STAbits.TX9 = 0;
  7627  0FDE  131E               	bcf	30,6	;volatile
  7628  0FDF                     l1958:
  7629                           
  7630                           ;UART.c: 20:     TX1STAbits.TXEN = 1;
  7631  0FDF  169E               	bsf	30,5	;volatile
  7632  0FE0                     l1960:
  7633                           
  7634                           ;UART.c: 21:     TX1STAbits.SYNC = 0;
  7635  0FE0  121E               	bcf	30,4	;volatile
  7636  0FE1                     l1962:
  7637                           
  7638                           ;UART.c: 22:     TX1STAbits.BRGH = 1;
  7639  0FE1  151E               	bsf	30,2	;volatile
  7640  0FE2                     l1964:
  7641                           
  7642                           ;UART.c: 23:     TX1STAbits.TX9D = 0;
  7643  0FE2  101E               	bcf	30,0	;volatile
  7644  0FE3                     l1966:
  7645                           
  7646                           ;UART.c: 25:     SPBRGH = 0x00;
  7647  0FE3  019C               	clrf	28	;volatile
  7648  0FE4                     l1968:
  7649                           
  7650                           ;UART.c: 26:     SPBRGL = 0x67;
  7651  0FE4  3067               	movlw	103
  7652  0FE5  009B               	movwf	27	;volatile
  7653  0FE6                     l170:
  7654  0FE6  0008               	return
  7655  0FE7                     __end_of_UART_init:
  7656                           
  7657                           	psect	text24
  7658  0F9A                     __ptext24:	
  7659 ;; *************** function _PIN_MANAGER_init *****************
  7660 ;; Defined at:
  7661 ;;		line 18 in file "DEVICE_CONFIG.c"
  7662 ;; Parameters:    Size  Location     Type
  7663 ;;		None
  7664 ;; Auto vars:     Size  Location     Type
  7665 ;;		None
  7666 ;; Return value:  Size  Location     Type
  7667 ;;                  1    wreg      void 
  7668 ;; Registers used:
  7669 ;;		wreg, status,2
  7670 ;; Tracked objects:
  7671 ;;		On entry : 0/0
  7672 ;;		On exit  : 0/0
  7673 ;;		Unchanged: 0/0
  7674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7679 ;;Total ram usage:        0 bytes
  7680 ;; Hardware stack levels used: 1
  7681 ;; This function calls:
  7682 ;;		Nothing
  7683 ;; This function is called by:
  7684 ;;		_SYSTEM_init
  7685 ;; This function uses a non-reentrant model
  7686 ;;
  7687                           
  7688                           
  7689                           ;psect for function _PIN_MANAGER_init
  7690  0F9A                     _PIN_MANAGER_init:
  7691  0F9A                     l1930:	
  7692                           ;incstack = 0
  7693                           ; Regs used in _PIN_MANAGER_init: [wreg+status,2]
  7694                           
  7695                           
  7696                           ;DEVICE_CONFIG.c: 20:     LATA = 0b00000000;
  7697  0F9A  0020               	movlb	0	; select bank0
  7698  0F9B  0196               	clrf	22	;volatile
  7699                           
  7700                           ;DEVICE_CONFIG.c: 21:     LATB = 0b00000000;
  7701  0F9C  0197               	clrf	23	;volatile
  7702                           
  7703                           ;DEVICE_CONFIG.c: 22:     LATC = 0b00000000;
  7704  0F9D  0198               	clrf	24	;volatile
  7705  0F9E                     l1932:
  7706                           
  7707                           ;DEVICE_CONFIG.c: 24:     TRISA = 0b11111110;
  7708  0F9E  30FE               	movlw	254
  7709  0F9F  0091               	movwf	17	;volatile
  7710  0FA0                     l1934:
  7711                           
  7712                           ;DEVICE_CONFIG.c: 25:     TRISB = 0b11111111;
  7713  0FA0  30FF               	movlw	255
  7714  0FA1  0092               	movwf	18	;volatile
  7715  0FA2                     l1936:
  7716                           
  7717                           ;DEVICE_CONFIG.c: 26:     TRISC = 0b11111111;
  7718  0FA2  30FF               	movlw	255
  7719  0FA3  0093               	movwf	19	;volatile
  7720  0FA4                     l1938:
  7721                           
  7722                           ;DEVICE_CONFIG.c: 28:     ANSELA = 0b11111110;
  7723  0FA4  30FE               	movlw	254
  7724  0FA5  003E               	movlb	30	; select bank30
  7725  0FA6  00B8               	movwf	56	;volatile
  7726  0FA7                     l1940:
  7727                           
  7728                           ;DEVICE_CONFIG.c: 29:     ANSELB = 0b11111111;
  7729  0FA7  30FF               	movlw	255
  7730  0FA8  00C3               	movwf	67	;volatile
  7731  0FA9                     l1942:
  7732                           
  7733                           ;DEVICE_CONFIG.c: 30:     ANSELC = 0b11100111;
  7734  0FA9  30E7               	movlw	231
  7735  0FAA  00CE               	movwf	78	;volatile
  7736  0FAB                     l80:
  7737  0FAB  0008               	return
  7738  0FAC                     __end_of_PIN_MANAGER_init:
  7739                           
  7740                           	psect	text25
  7741  0F7D                     __ptext25:	
  7742 ;; *************** function _OSC_init *****************
  7743 ;; Defined at:
  7744 ;;		line 11 in file "DEVICE_CONFIG.c"
  7745 ;; Parameters:    Size  Location     Type
  7746 ;;		None
  7747 ;; Auto vars:     Size  Location     Type
  7748 ;;		None
  7749 ;; Return value:  Size  Location     Type
  7750 ;;                  1    wreg      void 
  7751 ;; Registers used:
  7752 ;;		wreg, status,2, status,0
  7753 ;; Tracked objects:
  7754 ;;		On entry : 0/0
  7755 ;;		On exit  : 0/0
  7756 ;;		Unchanged: 0/0
  7757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7762 ;;Total ram usage:        0 bytes
  7763 ;; Hardware stack levels used: 1
  7764 ;; This function calls:
  7765 ;;		Nothing
  7766 ;; This function is called by:
  7767 ;;		_SYSTEM_init
  7768 ;; This function uses a non-reentrant model
  7769 ;;
  7770                           
  7771                           
  7772                           ;psect for function _OSC_init
  7773  0F7D                     _OSC_init:
  7774  0F7D                     l1928:	
  7775                           ;incstack = 0
  7776                           ; Regs used in _OSC_init: [wreg+status,2+status,0]
  7777                           
  7778                           
  7779                           ;DEVICE_CONFIG.c: 13:     OSCCON1bits.NOSC = 0b110;
  7780  0F7D  0031               	movlb	17	; select bank17
  7781  0F7E  080D               	movf	13,w	;volatile
  7782  0F7F  398F               	andlw	-113
  7783  0F80  3860               	iorlw	96
  7784  0F81  008D               	movwf	13	;volatile
  7785                           
  7786                           ;DEVICE_CONFIG.c: 14:     OSCCON1bits.NDIV = 0b0000;
  7787  0F82  30F0               	movlw	-16
  7788  0F83  058D               	andwf	13,f	;volatile
  7789                           
  7790                           ;DEVICE_CONFIG.c: 15:     OSCFRQbits.HFFRQ = 0b010;
  7791  0F84  0813               	movf	19,w	;volatile
  7792  0F85  39F8               	andlw	-8
  7793  0F86  3802               	iorlw	2
  7794  0F87  0093               	movwf	19	;volatile
  7795  0F88                     l77:
  7796  0F88  0008               	return
  7797  0F89                     __end_of_OSC_init:
  7798                           
  7799                           	psect	text26
  7800  0FBE                     __ptext26:	
  7801 ;; *************** function _I2C_init *****************
  7802 ;; Defined at:
  7803 ;;		line 4 in file "I2C.c"
  7804 ;; Parameters:    Size  Location     Type
  7805 ;;		None
  7806 ;; Auto vars:     Size  Location     Type
  7807 ;;		None
  7808 ;; Return value:  Size  Location     Type
  7809 ;;                  1    wreg      void 
  7810 ;; Registers used:
  7811 ;;		wreg, status,2
  7812 ;; Tracked objects:
  7813 ;;		On entry : 0/0
  7814 ;;		On exit  : 0/0
  7815 ;;		Unchanged: 0/0
  7816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7821 ;;Total ram usage:        0 bytes
  7822 ;; Hardware stack levels used: 1
  7823 ;; This function calls:
  7824 ;;		Nothing
  7825 ;; This function is called by:
  7826 ;;		_SYSTEM_init
  7827 ;; This function uses a non-reentrant model
  7828 ;;
  7829                           
  7830                           
  7831                           ;psect for function _I2C_init
  7832  0FBE                     _I2C_init:
  7833  0FBE                     l1970:	
  7834                           ;incstack = 0
  7835                           ; Regs used in _I2C_init: [wreg+status,2]
  7836                           
  7837                           
  7838                           ;I2C.c: 6:     SSP1CLKPPS = 0x14;
  7839  0FBE  3014               	movlw	20
  7840  0FBF  003D               	movlb	29	; select bank29
  7841  0FC0  00C5               	movwf	69	;volatile
  7842                           
  7843                           ;I2C.c: 7:     RC3PPS = 0x15;
  7844  0FC1  3015               	movlw	21
  7845  0FC2  003E               	movlb	30	; select bank30
  7846  0FC3  00A3               	movwf	35	;volatile
  7847                           
  7848                           ;I2C.c: 8:     RC4PPS = 0x14;
  7849  0FC4  3014               	movlw	20
  7850  0FC5  00A4               	movwf	36	;volatile
  7851                           
  7852                           ;I2C.c: 9:     SSP1DATPPS = 0x13;
  7853  0FC6  3013               	movlw	19
  7854  0FC7  003D               	movlb	29	; select bank29
  7855  0FC8  00C6               	movwf	70	;volatile
  7856                           
  7857                           ;I2C.c: 11:     SSP1STAT = 0b10000000;
  7858  0FC9  3080               	movlw	128
  7859  0FCA  0023               	movlb	3	; select bank3
  7860  0FCB  008F               	movwf	15	;volatile
  7861                           
  7862                           ;I2C.c: 12:  SSP1CON1 = 0b00101000;
  7863  0FCC  3028               	movlw	40
  7864  0FCD  0090               	movwf	16	;volatile
  7865  0FCE                     l1972:
  7866                           
  7867                           ;I2C.c: 13:  SSP1CON3 = 0x00;
  7868  0FCE  0192               	clrf	18	;volatile
  7869  0FCF                     l1974:
  7870                           
  7871                           ;I2C.c: 14:  SSP1ADD = ((8000000UL/(4UL*100000UL))-1);
  7872  0FCF  3013               	movlw	19
  7873  0FD0  008D               	movwf	13	;volatile
  7874  0FD1                     l105:
  7875  0FD1  0008               	return
  7876  0FD2                     __end_of_I2C_init:
  7877                           
  7878                           	psect	text27
  7879  0065                     __ptext27:	
  7880 ;; *************** function _Leer_EMC1001 *****************
  7881 ;; Defined at:
  7882 ;;		line 18 in file "Main_lcd_i2c.c"
  7883 ;; Parameters:    Size  Location     Type
  7884 ;;  add             1    wreg     unsigned char 
  7885 ;; Auto vars:     Size  Location     Type
  7886 ;;  add             1    2[COMMON] unsigned char 
  7887 ;;  x               1    3[COMMON] unsigned char 
  7888 ;; Return value:  Size  Location     Type
  7889 ;;                  1    wreg      unsigned char 
  7890 ;; Registers used:
  7891 ;;		wreg, status,2, status,0, pclath, cstack
  7892 ;; Tracked objects:
  7893 ;;		On entry : 0/0
  7894 ;;		On exit  : 0/0
  7895 ;;		Unchanged: 0/0
  7896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7898 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7899 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7900 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7901 ;;Total ram usage:        3 bytes
  7902 ;; Hardware stack levels used: 1
  7903 ;; Hardware stack levels required when called: 1
  7904 ;; This function calls:
  7905 ;;		_I2C_nack
  7906 ;;		_I2C_read
  7907 ;;		_I2C_restart
  7908 ;;		_I2C_start
  7909 ;;		_I2C_stop
  7910 ;;		_I2C_write
  7911 ;; This function is called by:
  7912 ;;		_main
  7913 ;; This function uses a non-reentrant model
  7914 ;;
  7915                           
  7916                           
  7917                           ;psect for function _Leer_EMC1001
  7918  0065                     _Leer_EMC1001:
  7919                           
  7920                           ;incstack = 0
  7921                           ; Regs used in _Leer_EMC1001: [wreg+status,2+status,0+pclath+cstack]
  7922                           ;Leer_EMC1001@add stored from wreg
  7923  0065  00F2               	movwf	Leer_EMC1001@add
  7924  0066                     l2018:
  7925  0066                     l2020:
  7926                           
  7927                           ;Main_lcd_i2c.c: 20:     I2C_start();
  7928  0066  318F  2742  3180   	fcall	_I2C_start
  7929  0069                     l2022:
  7930                           
  7931                           ;Main_lcd_i2c.c: 21:     I2C_write(0b01110000);
  7932  0069  3070               	movlw	112
  7933  006A  318F  2771  3180   	fcall	_I2C_write
  7934  006D                     l2024:
  7935                           
  7936                           ;Main_lcd_i2c.c: 22:     I2C_write(add);
  7937  006D  0872               	movf	Leer_EMC1001@add,w
  7938  006E  318F  2771  3180   	fcall	_I2C_write
  7939  0071                     l2026:
  7940                           
  7941                           ;Main_lcd_i2c.c: 23:     I2C_restart();
  7942  0071  318F  273B  3180   	fcall	_I2C_restart
  7943  0074                     l2028:
  7944                           
  7945                           ;Main_lcd_i2c.c: 24:     I2C_write(0b01110001);
  7946  0074  3071               	movlw	113
  7947  0075  318F  2771  3180   	fcall	_I2C_write
  7948  0078                     l2030:
  7949                           
  7950                           ;Main_lcd_i2c.c: 25:     x = I2C_read();
  7951  0078  318F  2765  3180   	fcall	_I2C_read
  7952  007B  00F1               	movwf	??_Leer_EMC1001
  7953  007C  0871               	movf	??_Leer_EMC1001,w
  7954  007D  00F3               	movwf	Leer_EMC1001@x
  7955  007E                     l2032:
  7956                           
  7957                           ;Main_lcd_i2c.c: 26:     I2C_nack();
  7958  007E  318F  275A  3180   	fcall	_I2C_nack
  7959  0081                     l2034:
  7960                           
  7961                           ;Main_lcd_i2c.c: 27:     I2C_stop();
  7962  0081  318F  2749  3180   	fcall	_I2C_stop
  7963  0084                     l2036:
  7964                           
  7965                           ;Main_lcd_i2c.c: 28:     return x;
  7966  0084  0873               	movf	Leer_EMC1001@x,w
  7967  0085                     l33:
  7968  0085  0008               	return
  7969  0086                     __end_of_Leer_EMC1001:
  7970                           
  7971                           	psect	text28
  7972  0F71                     __ptext28:	
  7973 ;; *************** function _I2C_write *****************
  7974 ;; Defined at:
  7975 ;;		line 59 in file "I2C.c"
  7976 ;; Parameters:    Size  Location     Type
  7977 ;;  I2C_data        1    wreg     unsigned char 
  7978 ;; Auto vars:     Size  Location     Type
  7979 ;;  I2C_data        1    0[COMMON] unsigned char 
  7980 ;; Return value:  Size  Location     Type
  7981 ;;                  1    wreg      void 
  7982 ;; Registers used:
  7983 ;;		wreg
  7984 ;; Tracked objects:
  7985 ;;		On entry : 0/0
  7986 ;;		On exit  : 0/0
  7987 ;;		Unchanged: 0/0
  7988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7990 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7992 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7993 ;;Total ram usage:        1 bytes
  7994 ;; Hardware stack levels used: 1
  7995 ;; This function calls:
  7996 ;;		Nothing
  7997 ;; This function is called by:
  7998 ;;		_Leer_EMC1001
  7999 ;;		_Write_PCF
  8000 ;;		_lcd_init
  8001 ;; This function uses a non-reentrant model
  8002 ;;
  8003                           
  8004                           
  8005                           ;psect for function _I2C_write
  8006  0F71                     _I2C_write:
  8007                           
  8008                           ;incstack = 0
  8009                           ; Regs used in _I2C_write: [wreg]
  8010                           ;I2C_write@I2C_data stored from wreg
  8011  0F71  00F0               	movwf	I2C_write@I2C_data
  8012  0F72                     l1650:
  8013                           
  8014                           ;I2C.c: 59: void I2C_write(char I2C_data);I2C.c: 60: {;I2C.c: 61:     PIR3bits.SSP1IF = 
      +                          0;
  8015  0F72  002E               	movlb	14	; select bank14
  8016  0F73  100F               	bcf	15,0	;volatile
  8017  0F74                     l1652:
  8018                           
  8019                           ;I2C.c: 62:     SSP1BUF = I2C_data;
  8020  0F74  0870               	movf	I2C_write@I2C_data,w
  8021  0F75  0023               	movlb	3	; select bank3
  8022  0F76  008C               	movwf	12	;volatile
  8023  0F77                     l144:	
  8024                           ;I2C.c: 63:     while(PIR3bits.SSP1IF == 0);
  8025                           
  8026  0F77  002E               	movlb	14	; select bank14
  8027  0F78  1C0F               	btfss	15,0	;volatile
  8028  0F79  2F7B               	goto	u861
  8029  0F7A  2F7C               	goto	u860
  8030  0F7B                     u861:
  8031  0F7B  2F77               	goto	l144
  8032  0F7C                     u860:
  8033  0F7C                     l147:
  8034  0F7C  0008               	return
  8035  0F7D                     __end_of_I2C_write:
  8036                           
  8037                           	psect	text29
  8038  0F49                     __ptext29:	
  8039 ;; *************** function _I2C_stop *****************
  8040 ;; Defined at:
  8041 ;;		line 29 in file "I2C.c"
  8042 ;; Parameters:    Size  Location     Type
  8043 ;;		None
  8044 ;; Auto vars:     Size  Location     Type
  8045 ;;		None
  8046 ;; Return value:  Size  Location     Type
  8047 ;;                  1    wreg      void 
  8048 ;; Registers used:
  8049 ;;		None
  8050 ;; Tracked objects:
  8051 ;;		On entry : 0/0
  8052 ;;		On exit  : 0/0
  8053 ;;		Unchanged: 0/0
  8054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8059 ;;Total ram usage:        0 bytes
  8060 ;; Hardware stack levels used: 1
  8061 ;; This function calls:
  8062 ;;		Nothing
  8063 ;; This function is called by:
  8064 ;;		_Leer_EMC1001
  8065 ;;		_Write_PCF
  8066 ;;		_lcd_init
  8067 ;; This function uses a non-reentrant model
  8068 ;;
  8069                           
  8070                           
  8071                           ;psect for function _I2C_stop
  8072  0F49                     _I2C_stop:
  8073  0F49                     l1654:	
  8074                           ;incstack = 0
  8075                           ; Regs used in _I2C_stop: []
  8076                           
  8077                           
  8078                           ;I2C.c: 31:     SSP1CON2bits.PEN = 1;
  8079  0F49  0023               	movlb	3	; select bank3
  8080  0F4A  1511               	bsf	17,2	;volatile
  8081  0F4B                     l120:	
  8082                           ;I2C.c: 32:     while(SSP1CON2bits.PEN == 1);
  8083                           
  8084  0F4B  1911               	btfsc	17,2	;volatile
  8085  0F4C  2F4E               	goto	u871
  8086  0F4D  2F4F               	goto	u870
  8087  0F4E                     u871:
  8088  0F4E  2F4B               	goto	l120
  8089  0F4F                     u870:
  8090  0F4F                     l123:
  8091  0F4F  0008               	return
  8092  0F50                     __end_of_I2C_stop:
  8093                           
  8094                           	psect	text30
  8095  0F42                     __ptext30:	
  8096 ;; *************** function _I2C_start *****************
  8097 ;; Defined at:
  8098 ;;		line 17 in file "I2C.c"
  8099 ;; Parameters:    Size  Location     Type
  8100 ;;		None
  8101 ;; Auto vars:     Size  Location     Type
  8102 ;;		None
  8103 ;; Return value:  Size  Location     Type
  8104 ;;                  1    wreg      void 
  8105 ;; Registers used:
  8106 ;;		None
  8107 ;; Tracked objects:
  8108 ;;		On entry : 0/0
  8109 ;;		On exit  : 0/0
  8110 ;;		Unchanged: 0/0
  8111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8116 ;;Total ram usage:        0 bytes
  8117 ;; Hardware stack levels used: 1
  8118 ;; This function calls:
  8119 ;;		Nothing
  8120 ;; This function is called by:
  8121 ;;		_Leer_EMC1001
  8122 ;;		_Write_PCF
  8123 ;;		_lcd_init
  8124 ;; This function uses a non-reentrant model
  8125 ;;
  8126                           
  8127                           
  8128                           ;psect for function _I2C_start
  8129  0F42                     _I2C_start:
  8130  0F42                     l1648:	
  8131                           ;incstack = 0
  8132                           ; Regs used in _I2C_start: []
  8133                           
  8134                           
  8135                           ;I2C.c: 19:     SSP1CON2bits.SEN = 1;
  8136  0F42  0023               	movlb	3	; select bank3
  8137  0F43  1411               	bsf	17,0	;volatile
  8138  0F44                     l108:	
  8139                           ;I2C.c: 20:     while(SSP1CON2bits.SEN == 1);
  8140                           
  8141  0F44  1811               	btfsc	17,0	;volatile
  8142  0F45  2F47               	goto	u851
  8143  0F46  2F48               	goto	u850
  8144  0F47                     u851:
  8145  0F47  2F44               	goto	l108
  8146  0F48                     u850:
  8147  0F48                     l111:
  8148  0F48  0008               	return
  8149  0F49                     __end_of_I2C_start:
  8150                           
  8151                           	psect	text31
  8152  0F3B                     __ptext31:	
  8153 ;; *************** function _I2C_restart *****************
  8154 ;; Defined at:
  8155 ;;		line 23 in file "I2C.c"
  8156 ;; Parameters:    Size  Location     Type
  8157 ;;		None
  8158 ;; Auto vars:     Size  Location     Type
  8159 ;;		None
  8160 ;; Return value:  Size  Location     Type
  8161 ;;                  1    wreg      void 
  8162 ;; Registers used:
  8163 ;;		None
  8164 ;; Tracked objects:
  8165 ;;		On entry : 0/0
  8166 ;;		On exit  : 0/0
  8167 ;;		Unchanged: 0/0
  8168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8173 ;;Total ram usage:        0 bytes
  8174 ;; Hardware stack levels used: 1
  8175 ;; This function calls:
  8176 ;;		Nothing
  8177 ;; This function is called by:
  8178 ;;		_Leer_EMC1001
  8179 ;; This function uses a non-reentrant model
  8180 ;;
  8181                           
  8182                           
  8183                           ;psect for function _I2C_restart
  8184  0F3B                     _I2C_restart:
  8185  0F3B                     l1918:	
  8186                           ;incstack = 0
  8187                           ; Regs used in _I2C_restart: []
  8188                           
  8189                           
  8190                           ;I2C.c: 25:     SSP1CON2bits.RSEN = 1;
  8191  0F3B  0023               	movlb	3	; select bank3
  8192  0F3C  1491               	bsf	17,1	;volatile
  8193  0F3D                     l114:	
  8194                           ;I2C.c: 26:     while(SSP1CON2bits.RSEN == 1);
  8195                           
  8196  0F3D  1891               	btfsc	17,1	;volatile
  8197  0F3E  2F40               	goto	u1421
  8198  0F3F  2F41               	goto	u1420
  8199  0F40                     u1421:
  8200  0F40  2F3D               	goto	l114
  8201  0F41                     u1420:
  8202  0F41                     l117:
  8203  0F41  0008               	return
  8204  0F42                     __end_of_I2C_restart:
  8205                           
  8206                           	psect	text32
  8207  0F65                     __ptext32:	
  8208 ;; *************** function _I2C_read *****************
  8209 ;; Defined at:
  8210 ;;		line 35 in file "I2C.c"
  8211 ;; Parameters:    Size  Location     Type
  8212 ;;		None
  8213 ;; Auto vars:     Size  Location     Type
  8214 ;;		None
  8215 ;; Return value:  Size  Location     Type
  8216 ;;                  1    wreg      unsigned char 
  8217 ;; Registers used:
  8218 ;;		wreg
  8219 ;; Tracked objects:
  8220 ;;		On entry : 0/0
  8221 ;;		On exit  : 0/0
  8222 ;;		Unchanged: 0/0
  8223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8228 ;;Total ram usage:        0 bytes
  8229 ;; Hardware stack levels used: 1
  8230 ;; This function calls:
  8231 ;;		Nothing
  8232 ;; This function is called by:
  8233 ;;		_Leer_EMC1001
  8234 ;; This function uses a non-reentrant model
  8235 ;;
  8236                           
  8237                           
  8238                           ;psect for function _I2C_read
  8239  0F65                     _I2C_read:
  8240  0F65                     l1920:	
  8241                           ;incstack = 0
  8242                           ; Regs used in _I2C_read: [wreg]
  8243                           
  8244                           
  8245                           ;I2C.c: 37:     PIR3bits.SSP1IF = 0;
  8246  0F65  002E               	movlb	14	; select bank14
  8247  0F66  100F               	bcf	15,0	;volatile
  8248                           
  8249                           ;I2C.c: 38:     SSP1CON2bits.RCEN = 1;
  8250  0F67  0023               	movlb	3	; select bank3
  8251  0F68  1591               	bsf	17,3	;volatile
  8252  0F69                     l126:	
  8253                           ;I2C.c: 39:     while(PIR3bits.SSP1IF == 0);
  8254                           
  8255  0F69  002E               	movlb	14	; select bank14
  8256  0F6A  1C0F               	btfss	15,0	;volatile
  8257  0F6B  2F6D               	goto	u1431
  8258  0F6C  2F6E               	goto	u1430
  8259  0F6D                     u1431:
  8260  0F6D  2F69               	goto	l126
  8261  0F6E                     u1430:
  8262  0F6E                     l1922:
  8263                           
  8264                           ;I2C.c: 40:     return SSP1BUF;
  8265  0F6E  0023               	movlb	3	; select bank3
  8266  0F6F  080C               	movf	12,w	;volatile
  8267  0F70                     l129:
  8268  0F70  0008               	return
  8269  0F71                     __end_of_I2C_read:
  8270                           
  8271                           	psect	text33
  8272  0F5A                     __ptext33:	
  8273 ;; *************** function _I2C_nack *****************
  8274 ;; Defined at:
  8275 ;;		line 51 in file "I2C.c"
  8276 ;; Parameters:    Size  Location     Type
  8277 ;;		None
  8278 ;; Auto vars:     Size  Location     Type
  8279 ;;		None
  8280 ;; Return value:  Size  Location     Type
  8281 ;;                  1    wreg      void 
  8282 ;; Registers used:
  8283 ;;		None
  8284 ;; Tracked objects:
  8285 ;;		On entry : 0/0
  8286 ;;		On exit  : 0/0
  8287 ;;		Unchanged: 0/0
  8288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8293 ;;Total ram usage:        0 bytes
  8294 ;; Hardware stack levels used: 1
  8295 ;; This function calls:
  8296 ;;		Nothing
  8297 ;; This function is called by:
  8298 ;;		_Leer_EMC1001
  8299 ;; This function uses a non-reentrant model
  8300 ;;
  8301                           
  8302                           
  8303                           ;psect for function _I2C_nack
  8304  0F5A                     _I2C_nack:
  8305  0F5A                     l1926:	
  8306                           ;incstack = 0
  8307                           ; Regs used in _I2C_nack: []
  8308                           
  8309                           
  8310                           ;I2C.c: 53:     PIR3bits.SSP1IF = 0;
  8311  0F5A  002E               	movlb	14	; select bank14
  8312  0F5B  100F               	bcf	15,0	;volatile
  8313                           
  8314                           ;I2C.c: 54:     SSP1CON2bits.ACKDT = 1;
  8315  0F5C  0023               	movlb	3	; select bank3
  8316  0F5D  1691               	bsf	17,5	;volatile
  8317                           
  8318                           ;I2C.c: 55:     SSP1CON2bits.ACKEN = 1;
  8319  0F5E  1611               	bsf	17,4	;volatile
  8320  0F5F                     l138:	
  8321                           ;I2C.c: 56:     while(PIR3bits.SSP1IF == 0);
  8322                           
  8323  0F5F  002E               	movlb	14	; select bank14
  8324  0F60  1C0F               	btfss	15,0	;volatile
  8325  0F61  2F63               	goto	u1441
  8326  0F62  2F64               	goto	u1440
  8327  0F63                     u1441:
  8328  0F63  2F5F               	goto	l138
  8329  0F64                     u1440:
  8330  0F64                     l141:
  8331  0F64  0008               	return
  8332  0F65                     __end_of_I2C_nack:
  8333  007E                     btemp	set	126	;btemp
  8334  007E                     wtemp0	set	126
  8335                           
  8336                           	psect	config
  8337                           
  8338                           ;Config register CONFIG1 @ 0x8007
  8339                           ;	External Oscillator mode selection bits
  8340                           ;	FEXTOSC = OFF, Oscillator not enabled
  8341                           ;	Power-up default value for COSC bits
  8342                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
  8343                           ;	Clock Out Enable bit
  8344                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
  8345                           ;	Clock Switch Enable bit
  8346                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  8347                           ;	Fail-Safe Clock Monitor Enable bit
  8348                           ;	FCMEN = ON, FSCM timer enabled
  8349  8007                     	org	32775
  8350  8007  3FEC               	dw	16364
  8351                           
  8352                           ;Config register CONFIG2 @ 0x8008
  8353                           ;	Master Clear Enable bit
  8354                           ;	MCLRE = ON, MCLR pin is Master Clear function
  8355                           ;	Power-up Timer Enable bit
  8356                           ;	PWRTE = ON, PWRT enabled
  8357                           ;	Low-Power BOR enable bit
  8358                           ;	LPBOREN = OFF, ULPBOR disabled
  8359                           ;	Brown-out reset enable bits
  8360                           ;	BOREN = OFF, Brown-out reset disabled
  8361                           ;	Brown-out Reset Voltage Selection
  8362                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
  8363                           ;	Zero-cross detect disable
  8364                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
  8365                           ;	Peripheral Pin Select one-way control
  8366                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
  8367                           ;	Stack Overflow/Underflow Reset Enable bit
  8368                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  8369                           ;	Background Debugger
  8370                           ;	DEBUG = 0x1, unprogrammed default
  8371  8008                     	org	32776
  8372  8008  3F3D               	dw	16189
  8373                           
  8374                           ;Config register CONFIG3 @ 0x8009
  8375                           ;	WDT Period Select bits
  8376                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  8377                           ;	WDT operating mode
  8378                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
  8379                           ;	WDT Window Select bits
  8380                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  8381                           ;	WDT input clock selector
  8382                           ;	WDTCCS = SC, Software Control
  8383  8009                     	org	32777
  8384  8009  3F9F               	dw	16287
  8385                           
  8386                           ;Config register CONFIG4 @ 0x800A
  8387                           ;	UserNVM self-write protection bits
  8388                           ;	WRT = OFF, Write protection off
  8389                           ;	Scanner Enable bit
  8390                           ;	SCANE = available, Scanner module is available for use
  8391                           ;	Low Voltage Programming Enable bit
  8392                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
  8393  800A                     	org	32778
  8394  800A  3FFF               	dw	16383
  8395                           
  8396                           ;Config register CONFIG5 @ 0x800B
  8397                           ;	UserNVM Program memory code protection bit
  8398                           ;	CP = OFF, Program Memory code protection disabled
  8399                           ;	DataNVM code protection bit
  8400                           ;	CPD = OFF, Data EEPROM code protection disabled
  8401  800B                     	org	32779
  8402  800B  3FFF               	dw	16383

Data Sizes:
    Strings     87
    Constant    4
    Data        0
    BSS         44
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     39      51
    BANK2            80      0      32
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_3(CODE[29]), STR_1(CODE[17]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 32
		 -> main@txt(BANK1[32]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_4(CODE[19]), STR_3(CODE[29]), STR_1(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 29
		 -> STR_4(CODE[19]), STR_3(CODE[29]), STR_1(CODE[17]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_4(CODE[19]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 32
		 -> main@txt(BANK1[32]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    S880_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 32
		 -> main@txt(BANK1[32]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 32
		 -> main@txt(BANK1[32]), 

    lcd_putchar@dato	PTR unsigned char  size(2) Largest target is 32
		 -> main@txt(BANK1[32]), STR_2(CODE[22]), 


Critical Paths under _main in COMMON

    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART_write
    _abs->___aomod
    _lcd_putchar->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_init->_lcd_send_byte
    _lcd_send_byte->_Send_D7_D4
    _Send_D7_D4->_Write_PCF
    _Write_PCF->_I2C_write
    _Leer_EMC1001->_I2C_write

Critical Paths under _main in BANK0

    _main->_printf
    _sprintf->_vfprintf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod
    _lcd_putchar->_lcd_gotoxy

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                34    34      0   18914
                                             78 BANK0      2     2      0
                                              7 BANK1     32    32      0
                       _Leer_EMC1001
                        _SYSTEM_init
                             ___wmul
                           _lcd_init
                        _lcd_putchar
                             _printf
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    6429
                                             70 BANK0      7     1      6
                                              0 BANK1      7     7      0
                             ___wmul (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6    6327
                                             70 BANK0      8     2      6
                             ___wmul (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    6121
                                             62 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    5625
                                             46 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4231
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2625
                                              4 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1193
                                             10 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     878
                                              2 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      44
                                              1 COMMON     1     1      0
                         _UART_write
 ---------------------------------------------------------------------------------
 (6) _UART_write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (1) _lcd_putchar                                          4     2      2    3345
                                              2 BANK0      4     2      2
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoxy                                           5     4      1    1697
                                             10 COMMON     3     2      1
                                              0 BANK0      2     2      0
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0    2298
                                             10 COMMON     2     2      0
                          _I2C_start
                           _I2C_stop
                          _I2C_write
                         _Send_D7_D4
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_send_byte                                        4     3      1    1429
                                              6 COMMON     4     3      1
                         _Send_D7_D4
 ---------------------------------------------------------------------------------
 (3) _Send_D7_D4                                           4     3      1     733
                                              2 COMMON     4     3      1
                          _Write_PCF
 ---------------------------------------------------------------------------------
 (4) _Write_PCF                                            1     1      0      44
                                              1 COMMON     1     1      0
                          _I2C_start
                           _I2C_stop
                          _I2C_write
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_init                                          0     0      0       0
                           _I2C_init
                           _OSC_init
                   _PIN_MANAGER_init
                          _UART_init
 ---------------------------------------------------------------------------------
 (2) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_init                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Leer_EMC1001                                         3     3      0      68
                                              1 COMMON     3     3      0
                           _I2C_nack
                           _I2C_read
                        _I2C_restart
                          _I2C_start
                           _I2C_stop
                          _I2C_write
 ---------------------------------------------------------------------------------
 (5) _I2C_write                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_restart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Leer_EMC1001
     _I2C_nack
     _I2C_read
     _I2C_restart
     _I2C_start
     _I2C_stop
     _I2C_write
   _SYSTEM_init
     _I2C_init
     _OSC_init
     _PIN_MANAGER_init
     _UART_init
   ___wmul
   _lcd_init
     _I2C_start
     _I2C_stop
     _I2C_write
     _Send_D7_D4
       _Write_PCF
         _I2C_start
         _I2C_stop
         _I2C_write
     _lcd_send_byte
       _Send_D7_D4
   _lcd_putchar
     _lcd_gotoxy
       _lcd_send_byte
     _lcd_send_byte
   _printf
     ___wmul (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _UART_write
             _fputs
               _fputc
             _strlen
         _fputc
   _sprintf
     ___wmul (ARG)
     _vfprintf (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     27      33       7       63.7%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      20       9       40.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      B1      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      B1      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Mar 16 20:16:54 2021

        Send_D7_D4@address 0074               ?_lcd_putchar 0022                         l33 0085  
         Send_D7_D4@nibble 0072                         l80 0FAB                         l74 0011  
                       l77 0F88             ?_lcd_send_byte 0076        ___wmul@multiplicand 0072  
       __size_of_I2C_start 0007         __size_of_I2C_write 000C                        l111 0F48  
                      l120 0F4B                        l105 0FD1                        l114 0F3D  
                      l123 0F4F                        l108 0F44                        l141 0F64  
                      l117 0F41                        l126 0F69                        l222 0309  
                      l144 0F77                        l232 02AB                        l129 0F70  
                      l209 0F99                        l225 0FFF                        l138 0F5F  
                      l170 0FE6                        l242 014D                        l147 0F7C  
                      l180 0F51                        l421 0064                        l261 024F  
                      l183 0F59                        l520 067C                        l192 0F34  
                      l419 0050                        l532 056A                        l533 057B  
                      l519 066B                        l912 01DB                        l914 01F5  
                      l922 06EC                        l923 0704                        l940 07EC  
                      l909 01B9                        l917 06C6                        l926 0775  
                      l918 06CF                        l961 002B                        l954 0108  
                      l882 00D7                        l947 0491                        l973 019C  
                      l981 00AE                        l958 002B                        l994 0045  
                      l988 0FBD                        u800 0F56                        u801 0F55  
                      u810 0153                        u811 0152                        u900 0587  
                      u820 0158                        u901 0586                        u821 0157  
                      u830 0167                        u831 0166                        u920 05B2  
                      u840 0184                        u921 05B1                        u841 0183  
                      u850 0F48                        u851 0F47                        u860 0F7C  
                      u940 05DC                        u861 0F7B                        u845 0180  
                      u870 0F4F                        u950 05EC                        u871 0F4E  
                      u951 05EB                        u960 05FF                        u880 00AE  
                      u961 05FE                        u881 00AD                        u970 0629  
                      u890 003F                        u971 0628                        u891 003E  
                      u980 0648                        u981 0647                        u990 064D  
                      u991 064C                        u975 0625                        _abs 0012  
                      _pad 019D                        wreg 0009                lcd_gotoxy@x 0020  
              lcd_gotoxy@y 007A               _BAUD1CONbits 011F                       l2010 00E2  
                     ?_abs 0073                       l2020 0066                       l2100 0213  
                     l2012 00F6                       l2030 0078                       l2022 0069  
                     l2102 021F                       l2110 0245                       l2014 0100  
                     l2006 00DA                       l2032 007E                       l2024 006D  
                     l2040 0005                       l2008 00DE                       l2120 00BF  
                     l2034 0081                       l2026 0071                       l2018 0066  
                     l2130 0048                       l2050 0265                       l2042 0250  
                     l2106 022C                       l2122 00C1                       l2036 0084  
                     l2028 0074                       l2132 004C                       l2060 0275  
                     l2044 0253                       l2108 0240                       l2124 00CE  
                     l2116 00B1                       l2134 0055                       l2062 0279  
                     l2046 0257                       l2118 00BD                       l2150 0320  
                     l2142 030A                       l2136 005A                       l2128 0046  
                     l2080 02A8                       l2072 0288                       l2064 027F  
                     l2056 0266                       l2048 025E                       l2160 0354  
                     l2152 032D                       l2144 030D                       l2138 0060  
                     l2074 0297                       l2066 0287                       l2058 026E  
                     l2090 01F7                       l2082 0FAC                       l2162 0378  
                     l2154 0336                       l2146 0310                       l2076 029E  
                     l2260 0125                       l2092 01FD                       l1700 05F7  
                     l2084 0FB1                       l2164 037B                       l2156 033F  
                     l2148 0318                       l2078 02A2                       l2094 0206  
                     l1710 0639                       l1702 05FB                       l1630 0F30  
                     l2166 039F                       l2158 0348                       l1800 02EA  
                     l2096 0208                       l2088 01F6                       l1712 063A  
                     l1704 05FF                       l1720 0493                       l1640 0167  
                     l1632 014E                       l2168 03A7                       l1650 0F72  
                     l1810 0302                       l1802 02ED                       l2258 0238  
                     l2098 0209                       l1706 0607                       l1714 0648  
                     l1730 04F4                       l1722 049D                       l1626 0F51  
                     l1642 0184                       l1634 0153                       l1652 0F74  
                     l1812 0304                       l1804 02F2                       l1716 064D  
                     l1708 0629                       l1740 0529                       l1732 04F7  
                     l1724 04BE                       l1628 0F56                       l1644 0194  
                     l1636 0158                       l1660 0099                       l1820 06A8  
                     l1900 045D                       l1654 0F49                       l1806 02F8  
                     l1742 0539                       l1734 04FF                       l1726 04C8  
                     l1718 0492                       l1638 015D                       l1662 009E  
                     l1670 003F                       l1750 01A4                       l1830 06FA  
                     l1822 06CB                       l1814 067F                       l1910 046E  
                     l1920 0F65                       l1648 0F42                       l1808 02FD  
                     l1680 057C                       l1736 0503                       l1744 0547  
                     l1728 04E7                       l1656 0088                       l1664 002D  
                     l1760 01C8                       l1752 01AD                       l1840 0740  
                     l1832 06FF                       l1824 06DE                       l1816 068F  
                     l1912 0487                       l1904 0463                       l1922 0F6E  
                     l1930 0F9A                       l1674 0F8A                       l1690 05D1  
                     l1682 057D                       l1746 054C                       l1738 0507  
                     l1770 0012                       l1658 008B                       l1666 0032  
                     l1762 01CD                       l1754 01B2                       l1850 079D  
                     l1842 0744                       l1834 0709                       l1826 06E4  
                     l1818 06A2                       l1906 046B                       l1940 0FA7  
                     l1932 0F9E                       l1676 0F8D                       l1780 02B8  
                     l1692 05D5                       l1684 0587                       l1772 001F  
                     l1668 0036                       l1764 01E0                       l1756 01B7  
                     l1748 019F                       l1860 07C1                       l1852 07AB  
                     l1844 0748                       l1836 070C                       l1828 06F4  
                     l1926 0F5A                       l1918 0F3B                       l1942 0FA9  
                     l1934 0FA0                       l1950 0FDB                       l1678 0F91  
                     l1790 02D0                       l1782 02BD                       l1774 02AD  
                     l1694 05DF                       l1686 05A8                       l1766 01E9  
                     l1758 01BC                       l1862 07C7                       l1846 0783  
                     l1854 07B0                       l1838 0711                       l1928 0F7D  
                     l1936 0FA2                       l1960 0FE0                       l1952 0FDC  
                     l1944 0FD2                       l1792 02D6                       l1784 02C1  
                     l1776 02AE                       l1872 0FE8                       l1696 05EC  
                     l1688 05B2                       l1864 07CC                       l1856 07B7  
                     l1848 0790                       l1880 03D7                       l1970 0FBE  
                     l1938 0FA4                       l1962 0FE1                       l1954 0FDD  
                     l1946 0FD8                       l1794 02DB                       l1786 02C7  
                     l1778 02B2                       l1698 05EF                       l1866 07D0  
                     l1858 07BC                       l1890 041F                       l1882 03DB  
                     l1874 03B9                       l1972 0FCE                       l1964 0FE2  
                     l1956 0FDE                       l1948 0FDA                       l1796 02DF  
                     l1788 02CC                       l1980 010E                       l1868 07D9  
                     l1884 03ED                       l1876 03CA                       l1974 0FCF  
                     l1966 0FE3                       l1958 0FDF                       l1798 02E5  
                     l1982 0113                       l1990 011D                       l1894 0439  
                     l1886 03FE                       l1878 03D2                       ?_pad 0024  
                     l1968 0FE4                       l1984 0118                       l1992 0133  
                     l1976 010B                       l1896 044A                       l1888 0406  
                     l1994 0138                       l1978 010C                       l1898 0452  
                     l1996 0141                       l1998 0148                       STR_1 1029  
                     STR_2 1000                       STR_3 0804                       STR_4 1016  
                     u1010 049D                       u1011 049C                       u1030 04C8  
                     u1110 01A4                       u1031 04C7                       u1111 01A3  
                     u1200 02F2                       u1120 01B2                       u1201 02F1  
                     u1121 01B1                       u1050 04F4                       u1130 01DB  
                     u1210 069A                       u1051 04F3                       u1131 01DA  
                     u1211 0698                       u1060 0507                       u1140 01E0  
                     u1300 0790                       u1220 069B                       u1061 0506  
                     u1141 01DF                       u1301 078F                       u1070 0529  
                     u1150 001F                       u1310 079D                       u1230 06A8  
                     u1071 0528                       u1151 001E                       u1135 01D7  
                     u1311 079C                       u1231 06A7                       u1160 02B2  
                     u1080 0547                       u1320 07AB                       u1400 03FE  
                     u1161 02B1                       u1081 0546                       u1321 07AA  
                     u1401 03FD                       u1170 02C1                       u1090 054C  
                     u1330 07B0                       u1250 06CB                       u1410 044A  
                     u1171 02C0                       u1091 054B                       u1075 0525  
                     u1155 001B                       u1331 07AF                       u1315 0799  
                     u1251 06CA                       u1411 0449                       u1420 0F41  
                     u1180 02D0                       u1340 07B7                       u1260 06DE  
                     u1421 0F40                       u1181 02CF                       u1341 07B6  
                     u1325 07A7                       u1261 06DD                       _LATA 0016  
                     u1430 0F6E                       u1190 02DF                       u1350 07BC  
                     u1270 06FA                       _LATB 0017                       u1431 0F6D  
                     u1191 02DE                       u1351 07BB                       u1271 06F9  
                     _LATC 0018                       u1440 0F64                       u1520 0060  
                     u1360 07C7                       u1280 06FF                       u1441 0F63  
                     u1521 005F                       u1505 0051                       u1361 07C6  
                     u1281 06FE                       u1265 06DA                       u1290 0783  
                     u1450 0100                       u1515 0056                       u1291 0782  
                     u1451 00FF                       u1460 027F                       u1380 03CA  
                     u1461 027E                       u1381 03C9                       u1470 02A8  
                     u1390 03ED                       u1375 0FEB                       u1471 02A7  
                     u1607 020D                       u1295 077F                       u1391 03EC  
                     u1535 034C                       u1480 024F                       u1617 0261  
                     u1481 024E                       u1490 004C                       u1491 004B  
                     u1627 0271                       u1637 029A                       u1647 02EB  
                     u1567 0326                       u1577 033A                       u1587 03AD  
                     u1597 0201           UART_write@txData 0070                       abs@a 0073  
                     _dbuf 0120                       _main 030A                       _dtoa 067D  
                     _prec 00CB                       _nout 00C7                       pad@i 0028  
                     pad@p 0025                       fsr0h 0005                       fsr1h 0007  
                     indf0 0000                       fsr0l 0004                       indf1 0001  
                     fsr1l 0006                       pad@w 002A                       btemp 007E  
         __end_of_I2C_nack 0F65           __end_of_I2C_init 0FD2           __end_of_I2C_read 0F71  
                     start 0002           __end_of_I2C_stop 0F50       __size_of_I2C_restart 0007  
              _SYSTEM_init 0005                      ??_abs 0075                      ??_pad 0027  
          __end_of___aodiv 067D                      ?_main 0070                      ?_dtoa 0030  
          __end_of___aomod 057C                      _LATA0 00B0               vfpfcnvrt@fmt 004E  
                    _TRISA 0011                      _TRISB 0012                      _TRISC 0013  
                    _RXPPS 0ECB                      u91lld 05A6                      u93lld 05D1  
       __size_of_UART_init 0015                      _flags 00CD           __end_of_OSC_init 0F89  
                    _fputc 014E                      _fputs 0086                ?_UART_write 0070  
                    pad@fp 002C                      _width 00C9                      _putch 0F2F  
                    dtoa@d 0030                      dtoa@i 004C                      dtoa@n 0044  
                    dtoa@p 003E                      dtoa@s 0042                      dtoa@w 0040  
                    status 0003          __end_of_I2C_start 0F49                      wtemp0 007E  
          __end_of_sprintf 00D8          __end_of_I2C_write 0F7D            __initialization 07ED  
        I2C_write@I2C_data 0070               __end_of_main 03B7               __end_of_dtoa 07ED  
          ??_lcd_send_byte 0077                     ??_main 006E                     ??_dtoa 0038  
               _Send_D7_D4 02AC       __end_of_Leer_EMC1001 0086                     ?_fputc 0072  
                   ?_fputs 007A                     _ANSELA 0F38                     ?_putch 0070  
                   _ANSELB 0F43                     _ANSELC 0F4E                     _RC1REG 0119  
                   _RC0PPS 0F20                     _RC3PPS 0F23                     _RC4PPS 0F24  
                   u100lld 066B                     u110lld 056A                     u102lld 04BC  
                   u104lld 04E7                     u124lld 06C6                     _SPBRGH 011C  
                   _SPBRGL 011B                     _TX1REG 011A               vfprintf@cfmt 0064  
         __end_of_lcd_init 02AC                     _g_LcdX 00D0                     _g_LcdY 00CF  
                ??___aodiv 0070                  ??___aomod 0070                     ___wmul 0046  
        __end_of_UART_init 0FE7        __size_of_UART_write 000A   __end_of_PIN_MANAGER_init 0FAC  
                   _printf 0FAC                     pad@buf 0024       __size_of_lcd_putchar 005A  
                   dtoa@fp 003D                     _strlen 002C                     fputc@c 0072  
                   fputs@c 0020                     fputs@i 0021                     fputs@s 0023  
                ?_I2C_nack 0070                  ?_I2C_init 0070                  ?_I2C_read 0070  
                ?_I2C_stop 0070           __end_of_vfprintf 0109                  ??_sprintf 006C  
  __end_of__initialization 07FD         __size_of_Write_PCF 0011             __pcstackCOMMON 0070  
            __end_of_fputc 019D              __end_of_fputs 00AF                  ?_OSC_init 0070  
            __end_of_putch 0F35                ?_Send_D7_D4 0072                 ??_I2C_nack 0070  
               ??_I2C_init 0070                 ??_I2C_read 0070                 ??_I2C_stop 0070  
        lcd_gotoxy@address 0021                    ??_fputc 0075                    ??_fputs 007B  
                  ??_putch 0071                 __pbssBANK1 00C7                 __pbssBANK2 0120  
               __pmaintext 030A             lcd_send_byte@n 0076               ?_SYSTEM_init 0070  
                  ?___wmul 0070                 ??_OSC_init 0070      __size_of_Leer_EMC1001 0021  
                  ?_printf 0066                    ?_strlen 0070          __end_of_Write_PCF 0F9A  
       __size_of_vfpfcnvrt 00DB                 _lcd_gotoxy 0109                    _SSP1ADD 018D  
                  _SSP1BUF 018C               ??_UART_write 0070                  ?_lcd_init 0070  
            ??_I2C_restart 0070               _Leer_EMC1001 0065                  _I2C_start 0F42  
                _I2C_write 0F71        __size_of_Send_D7_D4 005E                    ___aodiv 057C  
                  ___aomod 0492            __size_of___wmul 001F                  ?_vfprintf 005E  
       __end_of_UART_write 0F5A                    __ptext1 00AF                    __ptext2 0FAC  
                  __ptext3 00D8                    __ptext4 03B7                    __ptext5 067D  
                  __ptext6 019D                    __ptext7 002C                    __ptext8 0086  
                  __ptext9 014E            __size_of_printf 0012            __size_of_strlen 001A  
             __size_of_abs 001A               __size_of_pad 0059                    _sprintf 00AF  
                  clrloop0 0F36                 ??_lcd_init 007A                    main@txt 00A7  
     end_of_initialization 07FD       lcd_send_byte@address 0079                    fputc@fp 0074  
          Leer_EMC1001@add 0072                    fputs@fp 007A                 ?_I2C_start 0070  
               ?_I2C_write 0070          __end_of_vfpfcnvrt 0492        __end_of_I2C_restart 0F42  
               ??_vfprintf 0061      __end_of_lcd_send_byte 1000                    strlen@a 0073  
                  strlen@s 0074                  _UART_init 0FD2          ?_PIN_MANAGER_init 0070  
       ??_PIN_MANAGER_init 0070                ?_lcd_gotoxy 007A            Send_D7_D4@datos 0075  
        __size_of_I2C_nack 000B          __size_of_I2C_init 0014          __size_of_I2C_read 000C  
          _LCD_INIT_STRING 0800          __size_of_I2C_stop 0007              ??_lcd_putchar 0024  
              vfpfcnvrt@ap 004F       __size_of_SYSTEM_init 000D                vfpfcnvrt@fp 005D  
              vfpfcnvrt@ll 0055             __end_of___wmul 0065                 ?_UART_init 0070  
        __size_of_OSC_init 000C             __end_of_printf 0FBE             __end_of_strlen 0046  
             ??_Send_D7_D4 0073        start_initialization 07ED                __end_of_abs 002C  
              __end_of_pad 01F6                putch@txData 0071                _I2C_restart 0F3B  
            Write_PCF@dato 0071                ??_I2C_start 0070                ??_I2C_write 0070  
              vfprintf@fmt 005E         __end_of_Send_D7_D4 030A        __size_of_lcd_gotoxy 0045  
                 ??___wmul 0074                   ??_printf 006C                   ??_strlen 0072  
  __end_of_LCD_INIT_STRING 0804        __end_of_lcd_putchar 0250                  ___latbits 0002  
            __pcstackBANK0 0020              __pcstackBANK1 00A0           ___aodiv@dividend 0028  
                _Write_PCF 0F89          __size_of_lcd_init 005C                   ?___aodiv 0020  
                 ?___aomod 0020           ___aodiv@quotient 0073                  _high_byte 00D2  
              ??_UART_init 0070          __size_of_vfprintf 0031                   _I2C_nack 0F5A  
                 _I2C_init 0FBE                   _I2C_read 0F65                   _I2C_stop 0F49  
               ?_Write_PCF 0070                   ?_sprintf 0066             __size_of_fputc 004F  
           __size_of_fputs 0029             __size_of_putch 0006             ___wmul@product 0074  
                clear_ram0 0F35                   _PIR3bits 070F                   _SSP1CON1 0190  
                 _SSP1CON3 0192                   _SSP1STAT 018F                _lcd_putchar 01F6  
                 _OSC_init 0F7D                  _vfpfcnvrt 03B7          ___wmul@multiplier 0070  
                lcd_init@i 007B               ??_lcd_gotoxy 007B  __size_of_PIN_MANAGER_init 0012  
               vfprintf@ap 0060                 vfprintf@fp 0063         __end_of_lcd_gotoxy 014E  
         __size_of___aodiv 0101           __size_of___aomod 00EA                 ?_vfpfcnvrt 004E  
          ___aodiv@divisor 0020            ___aodiv@counter 0071                 sprintf@fmt 0066  
                 _dtoa$953 003B                ??_Write_PCF 0071                   __ptext10 0F2F  
                 __ptext11 0F50                   __ptext20 0F89                   __ptext12 0012  
                 __ptext21 0046                   __ptext13 0492                   __ptext30 0F42  
                 __ptext22 0005                   __ptext14 057C                   __ptext31 0F3B  
                 __ptext23 0FD2                   __ptext15 01F6                   __ptext32 0F65  
                 __ptext24 0F9A                   __ptext16 0109                   __ptext33 0F5A  
                 __ptext25 0F7D                   __ptext17 0250                   __ptext26 0FBE  
                 __ptext18 0FE7                   __ptext27 0065                   __ptext19 02AC  
                 __ptext28 0F71                   __ptext29 0F49               _SSP1CON2bits 0191  
                 _lcd_init 0250           __size_of_sprintf 0029                _OSCCON1bits 088D  
   __size_of_lcd_send_byte 0019              __size_of_main 00AD              __size_of_dtoa 0170  
             ?_I2C_restart 0070              Leer_EMC1001@x 0073                   _low_byte 00D1  
               _RC1STAbits 011D              ??_SYSTEM_init 0070                   _vfprintf 00D8  
                printf@fmt 0066           ___aomod@dividend 0028            lcd_putchar@dato 0022  
                sprintf@ap 00A0              ?_Leer_EMC1001 0070                 _OSCFRQbits 0893  
                 printf@ap 006D            ___aomod@divisor 0020                ??_vfpfcnvrt 0050  
          ___aomod@counter 0071              _lcd_send_byte 0FE7              __pstringtext1 0800  
            __pstringtext2 1000              __pstringtext3 1016              __pstringtext4 1029  
            __pstringtext5 0000        __end_of_SYSTEM_init 0012                   sprintf@f 00A2  
                 sprintf@s 00A1                 _SSP1DATPPS 0EC6                 _SSP1CLKPPS 0EC5  
               _TX1STAbits 011E                 _UART_write 0F50               ___aodiv@sign 0072  
         _PIN_MANAGER_init 0F9A             ??_Leer_EMC1001 0071               ___aomod@sign 0072  
