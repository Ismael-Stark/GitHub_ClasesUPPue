

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Mar 03 10:19:19 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16LF18855
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    20                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    30                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2,group=3
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2,group=3
    48                           	psect	text30,local,class=CODE,merge=1,delta=2,group=3
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    55                           	dabs	1,0x7E,2
    56  0000                     
    57                           ; Version 2.30
    58                           ; Generated 15/09/2020 GMT
    59                           ; 
    60                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution. Publication is not required when
    74                           ;        this file is used in an embedded application.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC16LF18855 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     	;# 
    93  0001                     	;# 
    94  0002                     	;# 
    95  0003                     	;# 
    96  0004                     	;# 
    97  0005                     	;# 
    98  0006                     	;# 
    99  0007                     	;# 
   100  0008                     	;# 
   101  0009                     	;# 
   102  000A                     	;# 
   103  000B                     	;# 
   104  000C                     	;# 
   105  000D                     	;# 
   106  000E                     	;# 
   107  0010                     	;# 
   108  0011                     	;# 
   109  0012                     	;# 
   110  0013                     	;# 
   111  0016                     	;# 
   112  0017                     	;# 
   113  0018                     	;# 
   114  001C                     	;# 
   115  001C                     	;# 
   116  001D                     	;# 
   117  001D                     	;# 
   118  001E                     	;# 
   119  001F                     	;# 
   120  008C                     	;# 
   121  008C                     	;# 
   122  008D                     	;# 
   123  008E                     	;# 
   124  008E                     	;# 
   125  008F                     	;# 
   126  0090                     	;# 
   127  0090                     	;# 
   128  0091                     	;# 
   129  0093                     	;# 
   130  0094                     	;# 
   131  0095                     	;# 
   132  0096                     	;# 
   133  0097                     	;# 
   134  0098                     	;# 
   135  0099                     	;# 
   136  009A                     	;# 
   137  009B                     	;# 
   138  009C                     	;# 
   139  009D                     	;# 
   140  009E                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010E                     	;# 
   144  010E                     	;# 
   145  010F                     	;# 
   146  0110                     	;# 
   147  0110                     	;# 
   148  0111                     	;# 
   149  0112                     	;# 
   150  0112                     	;# 
   151  0113                     	;# 
   152  0114                     	;# 
   153  0114                     	;# 
   154  0115                     	;# 
   155  0116                     	;# 
   156  0116                     	;# 
   157  0117                     	;# 
   158  0119                     	;# 
   159  0119                     	;# 
   160  0119                     	;# 
   161  011A                     	;# 
   162  011A                     	;# 
   163  011A                     	;# 
   164  011B                     	;# 
   165  011B                     	;# 
   166  011B                     	;# 
   167  011B                     	;# 
   168  011B                     	;# 
   169  011C                     	;# 
   170  011C                     	;# 
   171  011C                     	;# 
   172  011D                     	;# 
   173  011D                     	;# 
   174  011D                     	;# 
   175  011E                     	;# 
   176  011E                     	;# 
   177  011E                     	;# 
   178  011F                     	;# 
   179  011F                     	;# 
   180  011F                     	;# 
   181  011F                     	;# 
   182  011F                     	;# 
   183  018C                     	;# 
   184  018D                     	;# 
   185  018E                     	;# 
   186  018F                     	;# 
   187  0190                     	;# 
   188  0191                     	;# 
   189  0192                     	;# 
   190  0196                     	;# 
   191  0197                     	;# 
   192  0198                     	;# 
   193  0199                     	;# 
   194  019A                     	;# 
   195  019B                     	;# 
   196  019C                     	;# 
   197  020C                     	;# 
   198  020C                     	;# 
   199  020D                     	;# 
   200  020E                     	;# 
   201  020F                     	;# 
   202  020F                     	;# 
   203  0210                     	;# 
   204  0210                     	;# 
   205  0211                     	;# 
   206  0211                     	;# 
   207  0212                     	;# 
   208  0212                     	;# 
   209  0213                     	;# 
   210  0214                     	;# 
   211  0215                     	;# 
   212  0215                     	;# 
   213  0216                     	;# 
   214  0216                     	;# 
   215  0217                     	;# 
   216  0217                     	;# 
   217  0218                     	;# 
   218  0218                     	;# 
   219  0219                     	;# 
   220  021A                     	;# 
   221  021B                     	;# 
   222  021B                     	;# 
   223  021C                     	;# 
   224  021C                     	;# 
   225  021D                     	;# 
   226  021D                     	;# 
   227  021E                     	;# 
   228  021F                     	;# 
   229  028C                     	;# 
   230  028C                     	;# 
   231  028D                     	;# 
   232  028D                     	;# 
   233  028E                     	;# 
   234  028F                     	;# 
   235  0290                     	;# 
   236  0290                     	;# 
   237  0291                     	;# 
   238  0292                     	;# 
   239  0292                     	;# 
   240  0293                     	;# 
   241  0293                     	;# 
   242  0294                     	;# 
   243  0295                     	;# 
   244  0296                     	;# 
   245  0296                     	;# 
   246  0297                     	;# 
   247  0298                     	;# 
   248  0298                     	;# 
   249  0299                     	;# 
   250  0299                     	;# 
   251  029A                     	;# 
   252  029B                     	;# 
   253  029C                     	;# 
   254  029C                     	;# 
   255  029D                     	;# 
   256  030C                     	;# 
   257  030C                     	;# 
   258  030D                     	;# 
   259  030E                     	;# 
   260  030F                     	;# 
   261  0310                     	;# 
   262  0310                     	;# 
   263  0311                     	;# 
   264  0312                     	;# 
   265  0313                     	;# 
   266  0314                     	;# 
   267  0314                     	;# 
   268  0315                     	;# 
   269  0316                     	;# 
   270  0317                     	;# 
   271  0318                     	;# 
   272  0318                     	;# 
   273  0319                     	;# 
   274  031A                     	;# 
   275  031B                     	;# 
   276  031C                     	;# 
   277  031C                     	;# 
   278  031D                     	;# 
   279  031E                     	;# 
   280  031F                     	;# 
   281  038C                     	;# 
   282  038C                     	;# 
   283  038D                     	;# 
   284  038E                     	;# 
   285  0390                     	;# 
   286  0390                     	;# 
   287  0391                     	;# 
   288  0392                     	;# 
   289  040C                     	;# 
   290  040D                     	;# 
   291  040E                     	;# 
   292  040F                     	;# 
   293  0410                     	;# 
   294  0411                     	;# 
   295  0416                     	;# 
   296  0416                     	;# 
   297  0417                     	;# 
   298  0418                     	;# 
   299  0418                     	;# 
   300  0419                     	;# 
   301  041A                     	;# 
   302  041A                     	;# 
   303  041B                     	;# 
   304  041C                     	;# 
   305  041C                     	;# 
   306  041D                     	;# 
   307  041E                     	;# 
   308  041F                     	;# 
   309  048C                     	;# 
   310  048C                     	;# 
   311  048D                     	;# 
   312  048E                     	;# 
   313  048F                     	;# 
   314  048F                     	;# 
   315  0490                     	;# 
   316  0491                     	;# 
   317  0492                     	;# 
   318  0492                     	;# 
   319  0493                     	;# 
   320  0494                     	;# 
   321  0495                     	;# 
   322  0495                     	;# 
   323  0496                     	;# 
   324  0497                     	;# 
   325  0498                     	;# 
   326  0499                     	;# 
   327  049A                     	;# 
   328  049B                     	;# 
   329  049C                     	;# 
   330  049D                     	;# 
   331  050C                     	;# 
   332  050C                     	;# 
   333  050D                     	;# 
   334  050E                     	;# 
   335  050F                     	;# 
   336  050F                     	;# 
   337  0510                     	;# 
   338  0511                     	;# 
   339  0512                     	;# 
   340  0512                     	;# 
   341  0513                     	;# 
   342  0514                     	;# 
   343  0515                     	;# 
   344  0515                     	;# 
   345  0516                     	;# 
   346  0517                     	;# 
   347  0518                     	;# 
   348  0519                     	;# 
   349  051A                     	;# 
   350  051B                     	;# 
   351  051C                     	;# 
   352  051D                     	;# 
   353  058C                     	;# 
   354  058C                     	;# 
   355  058D                     	;# 
   356  058E                     	;# 
   357  058F                     	;# 
   358  058F                     	;# 
   359  0590                     	;# 
   360  0591                     	;# 
   361  0592                     	;# 
   362  0593                     	;# 
   363  060C                     	;# 
   364  060D                     	;# 
   365  060E                     	;# 
   366  060F                     	;# 
   367  0610                     	;# 
   368  0611                     	;# 
   369  0612                     	;# 
   370  0613                     	;# 
   371  0614                     	;# 
   372  0616                     	;# 
   373  0617                     	;# 
   374  0618                     	;# 
   375  0619                     	;# 
   376  061A                     	;# 
   377  061B                     	;# 
   378  061C                     	;# 
   379  061D                     	;# 
   380  061E                     	;# 
   381  068C                     	;# 
   382  068D                     	;# 
   383  068E                     	;# 
   384  068F                     	;# 
   385  0690                     	;# 
   386  0691                     	;# 
   387  0692                     	;# 
   388  0693                     	;# 
   389  0694                     	;# 
   390  070C                     	;# 
   391  070D                     	;# 
   392  070E                     	;# 
   393  070F                     	;# 
   394  0710                     	;# 
   395  0711                     	;# 
   396  0712                     	;# 
   397  0713                     	;# 
   398  0714                     	;# 
   399  0716                     	;# 
   400  0717                     	;# 
   401  0718                     	;# 
   402  0719                     	;# 
   403  071A                     	;# 
   404  071B                     	;# 
   405  071C                     	;# 
   406  071D                     	;# 
   407  071E                     	;# 
   408  0796                     	;# 
   409  0797                     	;# 
   410  0798                     	;# 
   411  0799                     	;# 
   412  079A                     	;# 
   413  079B                     	;# 
   414  080C                     	;# 
   415  080D                     	;# 
   416  080E                     	;# 
   417  080F                     	;# 
   418  0810                     	;# 
   419  0811                     	;# 
   420  0813                     	;# 
   421  0814                     	;# 
   422  081A                     	;# 
   423  081B                     	;# 
   424  081C                     	;# 
   425  081D                     	;# 
   426  081E                     	;# 
   427  081F                     	;# 
   428  088C                     	;# 
   429  088D                     	;# 
   430  088E                     	;# 
   431  088F                     	;# 
   432  0890                     	;# 
   433  0891                     	;# 
   434  0892                     	;# 
   435  0893                     	;# 
   436  0895                     	;# 
   437  0896                     	;# 
   438  0897                     	;# 
   439  0898                     	;# 
   440  0899                     	;# 
   441  089A                     	;# 
   442  089B                     	;# 
   443  090C                     	;# 
   444  090E                     	;# 
   445  090F                     	;# 
   446  091F                     	;# 
   447  091F                     	;# 
   448  098F                     	;# 
   449  098F                     	;# 
   450  0990                     	;# 
   451  0991                     	;# 
   452  0992                     	;# 
   453  0993                     	;# 
   454  0994                     	;# 
   455  0995                     	;# 
   456  0996                     	;# 
   457  0997                     	;# 
   458  0E0F                     	;# 
   459  0E10                     	;# 
   460  0E11                     	;# 
   461  0E12                     	;# 
   462  0E13                     	;# 
   463  0E14                     	;# 
   464  0E15                     	;# 
   465  0E16                     	;# 
   466  0E17                     	;# 
   467  0E18                     	;# 
   468  0E19                     	;# 
   469  0E1A                     	;# 
   470  0E1B                     	;# 
   471  0E1C                     	;# 
   472  0E1D                     	;# 
   473  0E1E                     	;# 
   474  0E1F                     	;# 
   475  0E20                     	;# 
   476  0E21                     	;# 
   477  0E22                     	;# 
   478  0E23                     	;# 
   479  0E24                     	;# 
   480  0E25                     	;# 
   481  0E26                     	;# 
   482  0E27                     	;# 
   483  0E28                     	;# 
   484  0E29                     	;# 
   485  0E2A                     	;# 
   486  0E2B                     	;# 
   487  0E2C                     	;# 
   488  0E2D                     	;# 
   489  0E2E                     	;# 
   490  0E2F                     	;# 
   491  0E30                     	;# 
   492  0E31                     	;# 
   493  0E32                     	;# 
   494  0E33                     	;# 
   495  0E34                     	;# 
   496  0E35                     	;# 
   497  0E36                     	;# 
   498  0E37                     	;# 
   499  0E8F                     	;# 
   500  0E90                     	;# 
   501  0E91                     	;# 
   502  0E92                     	;# 
   503  0E93                     	;# 
   504  0E94                     	;# 
   505  0E95                     	;# 
   506  0E96                     	;# 
   507  0E97                     	;# 
   508  0E9C                     	;# 
   509  0E9D                     	;# 
   510  0E9E                     	;# 
   511  0EA1                     	;# 
   512  0EA2                     	;# 
   513  0EA3                     	;# 
   514  0EA4                     	;# 
   515  0EA5                     	;# 
   516  0EA9                     	;# 
   517  0EAA                     	;# 
   518  0EAB                     	;# 
   519  0EAC                     	;# 
   520  0EB1                     	;# 
   521  0EB2                     	;# 
   522  0EB3                     	;# 
   523  0EB8                     	;# 
   524  0EB9                     	;# 
   525  0EBA                     	;# 
   526  0EBB                     	;# 
   527  0EBC                     	;# 
   528  0EBD                     	;# 
   529  0EBE                     	;# 
   530  0EC3                     	;# 
   531  0EC5                     	;# 
   532  0EC6                     	;# 
   533  0EC7                     	;# 
   534  0EC8                     	;# 
   535  0EC9                     	;# 
   536  0ECA                     	;# 
   537  0ECB                     	;# 
   538  0ECC                     	;# 
   539  0F10                     	;# 
   540  0F11                     	;# 
   541  0F12                     	;# 
   542  0F13                     	;# 
   543  0F14                     	;# 
   544  0F15                     	;# 
   545  0F16                     	;# 
   546  0F17                     	;# 
   547  0F18                     	;# 
   548  0F19                     	;# 
   549  0F1A                     	;# 
   550  0F1B                     	;# 
   551  0F1C                     	;# 
   552  0F1D                     	;# 
   553  0F1E                     	;# 
   554  0F1F                     	;# 
   555  0F20                     	;# 
   556  0F21                     	;# 
   557  0F22                     	;# 
   558  0F23                     	;# 
   559  0F24                     	;# 
   560  0F25                     	;# 
   561  0F26                     	;# 
   562  0F27                     	;# 
   563  0F38                     	;# 
   564  0F39                     	;# 
   565  0F3A                     	;# 
   566  0F3B                     	;# 
   567  0F3C                     	;# 
   568  0F3D                     	;# 
   569  0F3E                     	;# 
   570  0F3F                     	;# 
   571  0F40                     	;# 
   572  0F41                     	;# 
   573  0F43                     	;# 
   574  0F44                     	;# 
   575  0F45                     	;# 
   576  0F46                     	;# 
   577  0F47                     	;# 
   578  0F48                     	;# 
   579  0F49                     	;# 
   580  0F4A                     	;# 
   581  0F4B                     	;# 
   582  0F4C                     	;# 
   583  0F4E                     	;# 
   584  0F4F                     	;# 
   585  0F50                     	;# 
   586  0F51                     	;# 
   587  0F52                     	;# 
   588  0F53                     	;# 
   589  0F54                     	;# 
   590  0F55                     	;# 
   591  0F56                     	;# 
   592  0F57                     	;# 
   593  0F65                     	;# 
   594  0F68                     	;# 
   595  0F69                     	;# 
   596  0F6A                     	;# 
   597  0F6B                     	;# 
   598  0FE4                     	;# 
   599  0FE5                     	;# 
   600  0FE6                     	;# 
   601  0FE7                     	;# 
   602  0FE8                     	;# 
   603  0FE9                     	;# 
   604  0FEA                     	;# 
   605  0FEB                     	;# 
   606  0FED                     	;# 
   607  0FEE                     	;# 
   608  0FEF                     	;# 
   609  0000                     	;# 
   610  0001                     	;# 
   611  0002                     	;# 
   612  0003                     	;# 
   613  0004                     	;# 
   614  0005                     	;# 
   615  0006                     	;# 
   616  0007                     	;# 
   617  0008                     	;# 
   618  0009                     	;# 
   619  000A                     	;# 
   620  000B                     	;# 
   621  000C                     	;# 
   622  000D                     	;# 
   623  000E                     	;# 
   624  0010                     	;# 
   625  0011                     	;# 
   626  0012                     	;# 
   627  0013                     	;# 
   628  0016                     	;# 
   629  0017                     	;# 
   630  0018                     	;# 
   631  001C                     	;# 
   632  001C                     	;# 
   633  001D                     	;# 
   634  001D                     	;# 
   635  001E                     	;# 
   636  001F                     	;# 
   637  008C                     	;# 
   638  008C                     	;# 
   639  008D                     	;# 
   640  008E                     	;# 
   641  008E                     	;# 
   642  008F                     	;# 
   643  0090                     	;# 
   644  0090                     	;# 
   645  0091                     	;# 
   646  0093                     	;# 
   647  0094                     	;# 
   648  0095                     	;# 
   649  0096                     	;# 
   650  0097                     	;# 
   651  0098                     	;# 
   652  0099                     	;# 
   653  009A                     	;# 
   654  009B                     	;# 
   655  009C                     	;# 
   656  009D                     	;# 
   657  009E                     	;# 
   658  010C                     	;# 
   659  010D                     	;# 
   660  010E                     	;# 
   661  010E                     	;# 
   662  010F                     	;# 
   663  0110                     	;# 
   664  0110                     	;# 
   665  0111                     	;# 
   666  0112                     	;# 
   667  0112                     	;# 
   668  0113                     	;# 
   669  0114                     	;# 
   670  0114                     	;# 
   671  0115                     	;# 
   672  0116                     	;# 
   673  0116                     	;# 
   674  0117                     	;# 
   675  0119                     	;# 
   676  0119                     	;# 
   677  0119                     	;# 
   678  011A                     	;# 
   679  011A                     	;# 
   680  011A                     	;# 
   681  011B                     	;# 
   682  011B                     	;# 
   683  011B                     	;# 
   684  011B                     	;# 
   685  011B                     	;# 
   686  011C                     	;# 
   687  011C                     	;# 
   688  011C                     	;# 
   689  011D                     	;# 
   690  011D                     	;# 
   691  011D                     	;# 
   692  011E                     	;# 
   693  011E                     	;# 
   694  011E                     	;# 
   695  011F                     	;# 
   696  011F                     	;# 
   697  011F                     	;# 
   698  011F                     	;# 
   699  011F                     	;# 
   700  018C                     	;# 
   701  018D                     	;# 
   702  018E                     	;# 
   703  018F                     	;# 
   704  0190                     	;# 
   705  0191                     	;# 
   706  0192                     	;# 
   707  0196                     	;# 
   708  0197                     	;# 
   709  0198                     	;# 
   710  0199                     	;# 
   711  019A                     	;# 
   712  019B                     	;# 
   713  019C                     	;# 
   714  020C                     	;# 
   715  020C                     	;# 
   716  020D                     	;# 
   717  020E                     	;# 
   718  020F                     	;# 
   719  020F                     	;# 
   720  0210                     	;# 
   721  0210                     	;# 
   722  0211                     	;# 
   723  0211                     	;# 
   724  0212                     	;# 
   725  0212                     	;# 
   726  0213                     	;# 
   727  0214                     	;# 
   728  0215                     	;# 
   729  0215                     	;# 
   730  0216                     	;# 
   731  0216                     	;# 
   732  0217                     	;# 
   733  0217                     	;# 
   734  0218                     	;# 
   735  0218                     	;# 
   736  0219                     	;# 
   737  021A                     	;# 
   738  021B                     	;# 
   739  021B                     	;# 
   740  021C                     	;# 
   741  021C                     	;# 
   742  021D                     	;# 
   743  021D                     	;# 
   744  021E                     	;# 
   745  021F                     	;# 
   746  028C                     	;# 
   747  028C                     	;# 
   748  028D                     	;# 
   749  028D                     	;# 
   750  028E                     	;# 
   751  028F                     	;# 
   752  0290                     	;# 
   753  0290                     	;# 
   754  0291                     	;# 
   755  0292                     	;# 
   756  0292                     	;# 
   757  0293                     	;# 
   758  0293                     	;# 
   759  0294                     	;# 
   760  0295                     	;# 
   761  0296                     	;# 
   762  0296                     	;# 
   763  0297                     	;# 
   764  0298                     	;# 
   765  0298                     	;# 
   766  0299                     	;# 
   767  0299                     	;# 
   768  029A                     	;# 
   769  029B                     	;# 
   770  029C                     	;# 
   771  029C                     	;# 
   772  029D                     	;# 
   773  030C                     	;# 
   774  030C                     	;# 
   775  030D                     	;# 
   776  030E                     	;# 
   777  030F                     	;# 
   778  0310                     	;# 
   779  0310                     	;# 
   780  0311                     	;# 
   781  0312                     	;# 
   782  0313                     	;# 
   783  0314                     	;# 
   784  0314                     	;# 
   785  0315                     	;# 
   786  0316                     	;# 
   787  0317                     	;# 
   788  0318                     	;# 
   789  0318                     	;# 
   790  0319                     	;# 
   791  031A                     	;# 
   792  031B                     	;# 
   793  031C                     	;# 
   794  031C                     	;# 
   795  031D                     	;# 
   796  031E                     	;# 
   797  031F                     	;# 
   798  038C                     	;# 
   799  038C                     	;# 
   800  038D                     	;# 
   801  038E                     	;# 
   802  0390                     	;# 
   803  0390                     	;# 
   804  0391                     	;# 
   805  0392                     	;# 
   806  040C                     	;# 
   807  040D                     	;# 
   808  040E                     	;# 
   809  040F                     	;# 
   810  0410                     	;# 
   811  0411                     	;# 
   812  0416                     	;# 
   813  0416                     	;# 
   814  0417                     	;# 
   815  0418                     	;# 
   816  0418                     	;# 
   817  0419                     	;# 
   818  041A                     	;# 
   819  041A                     	;# 
   820  041B                     	;# 
   821  041C                     	;# 
   822  041C                     	;# 
   823  041D                     	;# 
   824  041E                     	;# 
   825  041F                     	;# 
   826  048C                     	;# 
   827  048C                     	;# 
   828  048D                     	;# 
   829  048E                     	;# 
   830  048F                     	;# 
   831  048F                     	;# 
   832  0490                     	;# 
   833  0491                     	;# 
   834  0492                     	;# 
   835  0492                     	;# 
   836  0493                     	;# 
   837  0494                     	;# 
   838  0495                     	;# 
   839  0495                     	;# 
   840  0496                     	;# 
   841  0497                     	;# 
   842  0498                     	;# 
   843  0499                     	;# 
   844  049A                     	;# 
   845  049B                     	;# 
   846  049C                     	;# 
   847  049D                     	;# 
   848  050C                     	;# 
   849  050C                     	;# 
   850  050D                     	;# 
   851  050E                     	;# 
   852  050F                     	;# 
   853  050F                     	;# 
   854  0510                     	;# 
   855  0511                     	;# 
   856  0512                     	;# 
   857  0512                     	;# 
   858  0513                     	;# 
   859  0514                     	;# 
   860  0515                     	;# 
   861  0515                     	;# 
   862  0516                     	;# 
   863  0517                     	;# 
   864  0518                     	;# 
   865  0519                     	;# 
   866  051A                     	;# 
   867  051B                     	;# 
   868  051C                     	;# 
   869  051D                     	;# 
   870  058C                     	;# 
   871  058C                     	;# 
   872  058D                     	;# 
   873  058E                     	;# 
   874  058F                     	;# 
   875  058F                     	;# 
   876  0590                     	;# 
   877  0591                     	;# 
   878  0592                     	;# 
   879  0593                     	;# 
   880  060C                     	;# 
   881  060D                     	;# 
   882  060E                     	;# 
   883  060F                     	;# 
   884  0610                     	;# 
   885  0611                     	;# 
   886  0612                     	;# 
   887  0613                     	;# 
   888  0614                     	;# 
   889  0616                     	;# 
   890  0617                     	;# 
   891  0618                     	;# 
   892  0619                     	;# 
   893  061A                     	;# 
   894  061B                     	;# 
   895  061C                     	;# 
   896  061D                     	;# 
   897  061E                     	;# 
   898  068C                     	;# 
   899  068D                     	;# 
   900  068E                     	;# 
   901  068F                     	;# 
   902  0690                     	;# 
   903  0691                     	;# 
   904  0692                     	;# 
   905  0693                     	;# 
   906  0694                     	;# 
   907  070C                     	;# 
   908  070D                     	;# 
   909  070E                     	;# 
   910  070F                     	;# 
   911  0710                     	;# 
   912  0711                     	;# 
   913  0712                     	;# 
   914  0713                     	;# 
   915  0714                     	;# 
   916  0716                     	;# 
   917  0717                     	;# 
   918  0718                     	;# 
   919  0719                     	;# 
   920  071A                     	;# 
   921  071B                     	;# 
   922  071C                     	;# 
   923  071D                     	;# 
   924  071E                     	;# 
   925  0796                     	;# 
   926  0797                     	;# 
   927  0798                     	;# 
   928  0799                     	;# 
   929  079A                     	;# 
   930  079B                     	;# 
   931  080C                     	;# 
   932  080D                     	;# 
   933  080E                     	;# 
   934  080F                     	;# 
   935  0810                     	;# 
   936  0811                     	;# 
   937  0813                     	;# 
   938  0814                     	;# 
   939  081A                     	;# 
   940  081B                     	;# 
   941  081C                     	;# 
   942  081D                     	;# 
   943  081E                     	;# 
   944  081F                     	;# 
   945  088C                     	;# 
   946  088D                     	;# 
   947  088E                     	;# 
   948  088F                     	;# 
   949  0890                     	;# 
   950  0891                     	;# 
   951  0892                     	;# 
   952  0893                     	;# 
   953  0895                     	;# 
   954  0896                     	;# 
   955  0897                     	;# 
   956  0898                     	;# 
   957  0899                     	;# 
   958  089A                     	;# 
   959  089B                     	;# 
   960  090C                     	;# 
   961  090E                     	;# 
   962  090F                     	;# 
   963  091F                     	;# 
   964  091F                     	;# 
   965  098F                     	;# 
   966  098F                     	;# 
   967  0990                     	;# 
   968  0991                     	;# 
   969  0992                     	;# 
   970  0993                     	;# 
   971  0994                     	;# 
   972  0995                     	;# 
   973  0996                     	;# 
   974  0997                     	;# 
   975  0E0F                     	;# 
   976  0E10                     	;# 
   977  0E11                     	;# 
   978  0E12                     	;# 
   979  0E13                     	;# 
   980  0E14                     	;# 
   981  0E15                     	;# 
   982  0E16                     	;# 
   983  0E17                     	;# 
   984  0E18                     	;# 
   985  0E19                     	;# 
   986  0E1A                     	;# 
   987  0E1B                     	;# 
   988  0E1C                     	;# 
   989  0E1D                     	;# 
   990  0E1E                     	;# 
   991  0E1F                     	;# 
   992  0E20                     	;# 
   993  0E21                     	;# 
   994  0E22                     	;# 
   995  0E23                     	;# 
   996  0E24                     	;# 
   997  0E25                     	;# 
   998  0E26                     	;# 
   999  0E27                     	;# 
  1000  0E28                     	;# 
  1001  0E29                     	;# 
  1002  0E2A                     	;# 
  1003  0E2B                     	;# 
  1004  0E2C                     	;# 
  1005  0E2D                     	;# 
  1006  0E2E                     	;# 
  1007  0E2F                     	;# 
  1008  0E30                     	;# 
  1009  0E31                     	;# 
  1010  0E32                     	;# 
  1011  0E33                     	;# 
  1012  0E34                     	;# 
  1013  0E35                     	;# 
  1014  0E36                     	;# 
  1015  0E37                     	;# 
  1016  0E8F                     	;# 
  1017  0E90                     	;# 
  1018  0E91                     	;# 
  1019  0E92                     	;# 
  1020  0E93                     	;# 
  1021  0E94                     	;# 
  1022  0E95                     	;# 
  1023  0E96                     	;# 
  1024  0E97                     	;# 
  1025  0E9C                     	;# 
  1026  0E9D                     	;# 
  1027  0E9E                     	;# 
  1028  0EA1                     	;# 
  1029  0EA2                     	;# 
  1030  0EA3                     	;# 
  1031  0EA4                     	;# 
  1032  0EA5                     	;# 
  1033  0EA9                     	;# 
  1034  0EAA                     	;# 
  1035  0EAB                     	;# 
  1036  0EAC                     	;# 
  1037  0EB1                     	;# 
  1038  0EB2                     	;# 
  1039  0EB3                     	;# 
  1040  0EB8                     	;# 
  1041  0EB9                     	;# 
  1042  0EBA                     	;# 
  1043  0EBB                     	;# 
  1044  0EBC                     	;# 
  1045  0EBD                     	;# 
  1046  0EBE                     	;# 
  1047  0EC3                     	;# 
  1048  0EC5                     	;# 
  1049  0EC6                     	;# 
  1050  0EC7                     	;# 
  1051  0EC8                     	;# 
  1052  0EC9                     	;# 
  1053  0ECA                     	;# 
  1054  0ECB                     	;# 
  1055  0ECC                     	;# 
  1056  0F10                     	;# 
  1057  0F11                     	;# 
  1058  0F12                     	;# 
  1059  0F13                     	;# 
  1060  0F14                     	;# 
  1061  0F15                     	;# 
  1062  0F16                     	;# 
  1063  0F17                     	;# 
  1064  0F18                     	;# 
  1065  0F19                     	;# 
  1066  0F1A                     	;# 
  1067  0F1B                     	;# 
  1068  0F1C                     	;# 
  1069  0F1D                     	;# 
  1070  0F1E                     	;# 
  1071  0F1F                     	;# 
  1072  0F20                     	;# 
  1073  0F21                     	;# 
  1074  0F22                     	;# 
  1075  0F23                     	;# 
  1076  0F24                     	;# 
  1077  0F25                     	;# 
  1078  0F26                     	;# 
  1079  0F27                     	;# 
  1080  0F38                     	;# 
  1081  0F39                     	;# 
  1082  0F3A                     	;# 
  1083  0F3B                     	;# 
  1084  0F3C                     	;# 
  1085  0F3D                     	;# 
  1086  0F3E                     	;# 
  1087  0F3F                     	;# 
  1088  0F40                     	;# 
  1089  0F41                     	;# 
  1090  0F43                     	;# 
  1091  0F44                     	;# 
  1092  0F45                     	;# 
  1093  0F46                     	;# 
  1094  0F47                     	;# 
  1095  0F48                     	;# 
  1096  0F49                     	;# 
  1097  0F4A                     	;# 
  1098  0F4B                     	;# 
  1099  0F4C                     	;# 
  1100  0F4E                     	;# 
  1101  0F4F                     	;# 
  1102  0F50                     	;# 
  1103  0F51                     	;# 
  1104  0F52                     	;# 
  1105  0F53                     	;# 
  1106  0F54                     	;# 
  1107  0F55                     	;# 
  1108  0F56                     	;# 
  1109  0F57                     	;# 
  1110  0F65                     	;# 
  1111  0F68                     	;# 
  1112  0F69                     	;# 
  1113  0F6A                     	;# 
  1114  0F6B                     	;# 
  1115  0FE4                     	;# 
  1116  0FE5                     	;# 
  1117  0FE6                     	;# 
  1118  0FE7                     	;# 
  1119  0FE8                     	;# 
  1120  0FE9                     	;# 
  1121  0FEA                     	;# 
  1122  0FEB                     	;# 
  1123  0FED                     	;# 
  1124  0FEE                     	;# 
  1125  0FEF                     	;# 
  1126  0000                     	;# 
  1127  0001                     	;# 
  1128  0002                     	;# 
  1129  0003                     	;# 
  1130  0004                     	;# 
  1131  0005                     	;# 
  1132  0006                     	;# 
  1133  0007                     	;# 
  1134  0008                     	;# 
  1135  0009                     	;# 
  1136  000A                     	;# 
  1137  000B                     	;# 
  1138  000C                     	;# 
  1139  000D                     	;# 
  1140  000E                     	;# 
  1141  0010                     	;# 
  1142  0011                     	;# 
  1143  0012                     	;# 
  1144  0013                     	;# 
  1145  0016                     	;# 
  1146  0017                     	;# 
  1147  0018                     	;# 
  1148  001C                     	;# 
  1149  001C                     	;# 
  1150  001D                     	;# 
  1151  001D                     	;# 
  1152  001E                     	;# 
  1153  001F                     	;# 
  1154  008C                     	;# 
  1155  008C                     	;# 
  1156  008D                     	;# 
  1157  008E                     	;# 
  1158  008E                     	;# 
  1159  008F                     	;# 
  1160  0090                     	;# 
  1161  0090                     	;# 
  1162  0091                     	;# 
  1163  0093                     	;# 
  1164  0094                     	;# 
  1165  0095                     	;# 
  1166  0096                     	;# 
  1167  0097                     	;# 
  1168  0098                     	;# 
  1169  0099                     	;# 
  1170  009A                     	;# 
  1171  009B                     	;# 
  1172  009C                     	;# 
  1173  009D                     	;# 
  1174  009E                     	;# 
  1175  010C                     	;# 
  1176  010D                     	;# 
  1177  010E                     	;# 
  1178  010E                     	;# 
  1179  010F                     	;# 
  1180  0110                     	;# 
  1181  0110                     	;# 
  1182  0111                     	;# 
  1183  0112                     	;# 
  1184  0112                     	;# 
  1185  0113                     	;# 
  1186  0114                     	;# 
  1187  0114                     	;# 
  1188  0115                     	;# 
  1189  0116                     	;# 
  1190  0116                     	;# 
  1191  0117                     	;# 
  1192  0119                     	;# 
  1193  0119                     	;# 
  1194  0119                     	;# 
  1195  011A                     	;# 
  1196  011A                     	;# 
  1197  011A                     	;# 
  1198  011B                     	;# 
  1199  011B                     	;# 
  1200  011B                     	;# 
  1201  011B                     	;# 
  1202  011B                     	;# 
  1203  011C                     	;# 
  1204  011C                     	;# 
  1205  011C                     	;# 
  1206  011D                     	;# 
  1207  011D                     	;# 
  1208  011D                     	;# 
  1209  011E                     	;# 
  1210  011E                     	;# 
  1211  011E                     	;# 
  1212  011F                     	;# 
  1213  011F                     	;# 
  1214  011F                     	;# 
  1215  011F                     	;# 
  1216  011F                     	;# 
  1217  018C                     	;# 
  1218  018D                     	;# 
  1219  018E                     	;# 
  1220  018F                     	;# 
  1221  0190                     	;# 
  1222  0191                     	;# 
  1223  0192                     	;# 
  1224  0196                     	;# 
  1225  0197                     	;# 
  1226  0198                     	;# 
  1227  0199                     	;# 
  1228  019A                     	;# 
  1229  019B                     	;# 
  1230  019C                     	;# 
  1231  020C                     	;# 
  1232  020C                     	;# 
  1233  020D                     	;# 
  1234  020E                     	;# 
  1235  020F                     	;# 
  1236  020F                     	;# 
  1237  0210                     	;# 
  1238  0210                     	;# 
  1239  0211                     	;# 
  1240  0211                     	;# 
  1241  0212                     	;# 
  1242  0212                     	;# 
  1243  0213                     	;# 
  1244  0214                     	;# 
  1245  0215                     	;# 
  1246  0215                     	;# 
  1247  0216                     	;# 
  1248  0216                     	;# 
  1249  0217                     	;# 
  1250  0217                     	;# 
  1251  0218                     	;# 
  1252  0218                     	;# 
  1253  0219                     	;# 
  1254  021A                     	;# 
  1255  021B                     	;# 
  1256  021B                     	;# 
  1257  021C                     	;# 
  1258  021C                     	;# 
  1259  021D                     	;# 
  1260  021D                     	;# 
  1261  021E                     	;# 
  1262  021F                     	;# 
  1263  028C                     	;# 
  1264  028C                     	;# 
  1265  028D                     	;# 
  1266  028D                     	;# 
  1267  028E                     	;# 
  1268  028F                     	;# 
  1269  0290                     	;# 
  1270  0290                     	;# 
  1271  0291                     	;# 
  1272  0292                     	;# 
  1273  0292                     	;# 
  1274  0293                     	;# 
  1275  0293                     	;# 
  1276  0294                     	;# 
  1277  0295                     	;# 
  1278  0296                     	;# 
  1279  0296                     	;# 
  1280  0297                     	;# 
  1281  0298                     	;# 
  1282  0298                     	;# 
  1283  0299                     	;# 
  1284  0299                     	;# 
  1285  029A                     	;# 
  1286  029B                     	;# 
  1287  029C                     	;# 
  1288  029C                     	;# 
  1289  029D                     	;# 
  1290  030C                     	;# 
  1291  030C                     	;# 
  1292  030D                     	;# 
  1293  030E                     	;# 
  1294  030F                     	;# 
  1295  0310                     	;# 
  1296  0310                     	;# 
  1297  0311                     	;# 
  1298  0312                     	;# 
  1299  0313                     	;# 
  1300  0314                     	;# 
  1301  0314                     	;# 
  1302  0315                     	;# 
  1303  0316                     	;# 
  1304  0317                     	;# 
  1305  0318                     	;# 
  1306  0318                     	;# 
  1307  0319                     	;# 
  1308  031A                     	;# 
  1309  031B                     	;# 
  1310  031C                     	;# 
  1311  031C                     	;# 
  1312  031D                     	;# 
  1313  031E                     	;# 
  1314  031F                     	;# 
  1315  038C                     	;# 
  1316  038C                     	;# 
  1317  038D                     	;# 
  1318  038E                     	;# 
  1319  0390                     	;# 
  1320  0390                     	;# 
  1321  0391                     	;# 
  1322  0392                     	;# 
  1323  040C                     	;# 
  1324  040D                     	;# 
  1325  040E                     	;# 
  1326  040F                     	;# 
  1327  0410                     	;# 
  1328  0411                     	;# 
  1329  0416                     	;# 
  1330  0416                     	;# 
  1331  0417                     	;# 
  1332  0418                     	;# 
  1333  0418                     	;# 
  1334  0419                     	;# 
  1335  041A                     	;# 
  1336  041A                     	;# 
  1337  041B                     	;# 
  1338  041C                     	;# 
  1339  041C                     	;# 
  1340  041D                     	;# 
  1341  041E                     	;# 
  1342  041F                     	;# 
  1343  048C                     	;# 
  1344  048C                     	;# 
  1345  048D                     	;# 
  1346  048E                     	;# 
  1347  048F                     	;# 
  1348  048F                     	;# 
  1349  0490                     	;# 
  1350  0491                     	;# 
  1351  0492                     	;# 
  1352  0492                     	;# 
  1353  0493                     	;# 
  1354  0494                     	;# 
  1355  0495                     	;# 
  1356  0495                     	;# 
  1357  0496                     	;# 
  1358  0497                     	;# 
  1359  0498                     	;# 
  1360  0499                     	;# 
  1361  049A                     	;# 
  1362  049B                     	;# 
  1363  049C                     	;# 
  1364  049D                     	;# 
  1365  050C                     	;# 
  1366  050C                     	;# 
  1367  050D                     	;# 
  1368  050E                     	;# 
  1369  050F                     	;# 
  1370  050F                     	;# 
  1371  0510                     	;# 
  1372  0511                     	;# 
  1373  0512                     	;# 
  1374  0512                     	;# 
  1375  0513                     	;# 
  1376  0514                     	;# 
  1377  0515                     	;# 
  1378  0515                     	;# 
  1379  0516                     	;# 
  1380  0517                     	;# 
  1381  0518                     	;# 
  1382  0519                     	;# 
  1383  051A                     	;# 
  1384  051B                     	;# 
  1385  051C                     	;# 
  1386  051D                     	;# 
  1387  058C                     	;# 
  1388  058C                     	;# 
  1389  058D                     	;# 
  1390  058E                     	;# 
  1391  058F                     	;# 
  1392  058F                     	;# 
  1393  0590                     	;# 
  1394  0591                     	;# 
  1395  0592                     	;# 
  1396  0593                     	;# 
  1397  060C                     	;# 
  1398  060D                     	;# 
  1399  060E                     	;# 
  1400  060F                     	;# 
  1401  0610                     	;# 
  1402  0611                     	;# 
  1403  0612                     	;# 
  1404  0613                     	;# 
  1405  0614                     	;# 
  1406  0616                     	;# 
  1407  0617                     	;# 
  1408  0618                     	;# 
  1409  0619                     	;# 
  1410  061A                     	;# 
  1411  061B                     	;# 
  1412  061C                     	;# 
  1413  061D                     	;# 
  1414  061E                     	;# 
  1415  068C                     	;# 
  1416  068D                     	;# 
  1417  068E                     	;# 
  1418  068F                     	;# 
  1419  0690                     	;# 
  1420  0691                     	;# 
  1421  0692                     	;# 
  1422  0693                     	;# 
  1423  0694                     	;# 
  1424  070C                     	;# 
  1425  070D                     	;# 
  1426  070E                     	;# 
  1427  070F                     	;# 
  1428  0710                     	;# 
  1429  0711                     	;# 
  1430  0712                     	;# 
  1431  0713                     	;# 
  1432  0714                     	;# 
  1433  0716                     	;# 
  1434  0717                     	;# 
  1435  0718                     	;# 
  1436  0719                     	;# 
  1437  071A                     	;# 
  1438  071B                     	;# 
  1439  071C                     	;# 
  1440  071D                     	;# 
  1441  071E                     	;# 
  1442  0796                     	;# 
  1443  0797                     	;# 
  1444  0798                     	;# 
  1445  0799                     	;# 
  1446  079A                     	;# 
  1447  079B                     	;# 
  1448  080C                     	;# 
  1449  080D                     	;# 
  1450  080E                     	;# 
  1451  080F                     	;# 
  1452  0810                     	;# 
  1453  0811                     	;# 
  1454  0813                     	;# 
  1455  0814                     	;# 
  1456  081A                     	;# 
  1457  081B                     	;# 
  1458  081C                     	;# 
  1459  081D                     	;# 
  1460  081E                     	;# 
  1461  081F                     	;# 
  1462  088C                     	;# 
  1463  088D                     	;# 
  1464  088E                     	;# 
  1465  088F                     	;# 
  1466  0890                     	;# 
  1467  0891                     	;# 
  1468  0892                     	;# 
  1469  0893                     	;# 
  1470  0895                     	;# 
  1471  0896                     	;# 
  1472  0897                     	;# 
  1473  0898                     	;# 
  1474  0899                     	;# 
  1475  089A                     	;# 
  1476  089B                     	;# 
  1477  090C                     	;# 
  1478  090E                     	;# 
  1479  090F                     	;# 
  1480  091F                     	;# 
  1481  091F                     	;# 
  1482  098F                     	;# 
  1483  098F                     	;# 
  1484  0990                     	;# 
  1485  0991                     	;# 
  1486  0992                     	;# 
  1487  0993                     	;# 
  1488  0994                     	;# 
  1489  0995                     	;# 
  1490  0996                     	;# 
  1491  0997                     	;# 
  1492  0E0F                     	;# 
  1493  0E10                     	;# 
  1494  0E11                     	;# 
  1495  0E12                     	;# 
  1496  0E13                     	;# 
  1497  0E14                     	;# 
  1498  0E15                     	;# 
  1499  0E16                     	;# 
  1500  0E17                     	;# 
  1501  0E18                     	;# 
  1502  0E19                     	;# 
  1503  0E1A                     	;# 
  1504  0E1B                     	;# 
  1505  0E1C                     	;# 
  1506  0E1D                     	;# 
  1507  0E1E                     	;# 
  1508  0E1F                     	;# 
  1509  0E20                     	;# 
  1510  0E21                     	;# 
  1511  0E22                     	;# 
  1512  0E23                     	;# 
  1513  0E24                     	;# 
  1514  0E25                     	;# 
  1515  0E26                     	;# 
  1516  0E27                     	;# 
  1517  0E28                     	;# 
  1518  0E29                     	;# 
  1519  0E2A                     	;# 
  1520  0E2B                     	;# 
  1521  0E2C                     	;# 
  1522  0E2D                     	;# 
  1523  0E2E                     	;# 
  1524  0E2F                     	;# 
  1525  0E30                     	;# 
  1526  0E31                     	;# 
  1527  0E32                     	;# 
  1528  0E33                     	;# 
  1529  0E34                     	;# 
  1530  0E35                     	;# 
  1531  0E36                     	;# 
  1532  0E37                     	;# 
  1533  0E8F                     	;# 
  1534  0E90                     	;# 
  1535  0E91                     	;# 
  1536  0E92                     	;# 
  1537  0E93                     	;# 
  1538  0E94                     	;# 
  1539  0E95                     	;# 
  1540  0E96                     	;# 
  1541  0E97                     	;# 
  1542  0E9C                     	;# 
  1543  0E9D                     	;# 
  1544  0E9E                     	;# 
  1545  0EA1                     	;# 
  1546  0EA2                     	;# 
  1547  0EA3                     	;# 
  1548  0EA4                     	;# 
  1549  0EA5                     	;# 
  1550  0EA9                     	;# 
  1551  0EAA                     	;# 
  1552  0EAB                     	;# 
  1553  0EAC                     	;# 
  1554  0EB1                     	;# 
  1555  0EB2                     	;# 
  1556  0EB3                     	;# 
  1557  0EB8                     	;# 
  1558  0EB9                     	;# 
  1559  0EBA                     	;# 
  1560  0EBB                     	;# 
  1561  0EBC                     	;# 
  1562  0EBD                     	;# 
  1563  0EBE                     	;# 
  1564  0EC3                     	;# 
  1565  0EC5                     	;# 
  1566  0EC6                     	;# 
  1567  0EC7                     	;# 
  1568  0EC8                     	;# 
  1569  0EC9                     	;# 
  1570  0ECA                     	;# 
  1571  0ECB                     	;# 
  1572  0ECC                     	;# 
  1573  0F10                     	;# 
  1574  0F11                     	;# 
  1575  0F12                     	;# 
  1576  0F13                     	;# 
  1577  0F14                     	;# 
  1578  0F15                     	;# 
  1579  0F16                     	;# 
  1580  0F17                     	;# 
  1581  0F18                     	;# 
  1582  0F19                     	;# 
  1583  0F1A                     	;# 
  1584  0F1B                     	;# 
  1585  0F1C                     	;# 
  1586  0F1D                     	;# 
  1587  0F1E                     	;# 
  1588  0F1F                     	;# 
  1589  0F20                     	;# 
  1590  0F21                     	;# 
  1591  0F22                     	;# 
  1592  0F23                     	;# 
  1593  0F24                     	;# 
  1594  0F25                     	;# 
  1595  0F26                     	;# 
  1596  0F27                     	;# 
  1597  0F38                     	;# 
  1598  0F39                     	;# 
  1599  0F3A                     	;# 
  1600  0F3B                     	;# 
  1601  0F3C                     	;# 
  1602  0F3D                     	;# 
  1603  0F3E                     	;# 
  1604  0F3F                     	;# 
  1605  0F40                     	;# 
  1606  0F41                     	;# 
  1607  0F43                     	;# 
  1608  0F44                     	;# 
  1609  0F45                     	;# 
  1610  0F46                     	;# 
  1611  0F47                     	;# 
  1612  0F48                     	;# 
  1613  0F49                     	;# 
  1614  0F4A                     	;# 
  1615  0F4B                     	;# 
  1616  0F4C                     	;# 
  1617  0F4E                     	;# 
  1618  0F4F                     	;# 
  1619  0F50                     	;# 
  1620  0F51                     	;# 
  1621  0F52                     	;# 
  1622  0F53                     	;# 
  1623  0F54                     	;# 
  1624  0F55                     	;# 
  1625  0F56                     	;# 
  1626  0F57                     	;# 
  1627  0F65                     	;# 
  1628  0F68                     	;# 
  1629  0F69                     	;# 
  1630  0F6A                     	;# 
  1631  0F6B                     	;# 
  1632  0FE4                     	;# 
  1633  0FE5                     	;# 
  1634  0FE6                     	;# 
  1635  0FE7                     	;# 
  1636  0FE8                     	;# 
  1637  0FE9                     	;# 
  1638  0FEA                     	;# 
  1639  0FEB                     	;# 
  1640  0FED                     	;# 
  1641  0FEE                     	;# 
  1642  0FEF                     	;# 
  1643  0000                     	;# 
  1644  0001                     	;# 
  1645  0002                     	;# 
  1646  0003                     	;# 
  1647  0004                     	;# 
  1648  0005                     	;# 
  1649  0006                     	;# 
  1650  0007                     	;# 
  1651  0008                     	;# 
  1652  0009                     	;# 
  1653  000A                     	;# 
  1654  000B                     	;# 
  1655  000C                     	;# 
  1656  000D                     	;# 
  1657  000E                     	;# 
  1658  0010                     	;# 
  1659  0011                     	;# 
  1660  0012                     	;# 
  1661  0013                     	;# 
  1662  0016                     	;# 
  1663  0017                     	;# 
  1664  0018                     	;# 
  1665  001C                     	;# 
  1666  001C                     	;# 
  1667  001D                     	;# 
  1668  001D                     	;# 
  1669  001E                     	;# 
  1670  001F                     	;# 
  1671  008C                     	;# 
  1672  008C                     	;# 
  1673  008D                     	;# 
  1674  008E                     	;# 
  1675  008E                     	;# 
  1676  008F                     	;# 
  1677  0090                     	;# 
  1678  0090                     	;# 
  1679  0091                     	;# 
  1680  0093                     	;# 
  1681  0094                     	;# 
  1682  0095                     	;# 
  1683  0096                     	;# 
  1684  0097                     	;# 
  1685  0098                     	;# 
  1686  0099                     	;# 
  1687  009A                     	;# 
  1688  009B                     	;# 
  1689  009C                     	;# 
  1690  009D                     	;# 
  1691  009E                     	;# 
  1692  010C                     	;# 
  1693  010D                     	;# 
  1694  010E                     	;# 
  1695  010E                     	;# 
  1696  010F                     	;# 
  1697  0110                     	;# 
  1698  0110                     	;# 
  1699  0111                     	;# 
  1700  0112                     	;# 
  1701  0112                     	;# 
  1702  0113                     	;# 
  1703  0114                     	;# 
  1704  0114                     	;# 
  1705  0115                     	;# 
  1706  0116                     	;# 
  1707  0116                     	;# 
  1708  0117                     	;# 
  1709  0119                     	;# 
  1710  0119                     	;# 
  1711  0119                     	;# 
  1712  011A                     	;# 
  1713  011A                     	;# 
  1714  011A                     	;# 
  1715  011B                     	;# 
  1716  011B                     	;# 
  1717  011B                     	;# 
  1718  011B                     	;# 
  1719  011B                     	;# 
  1720  011C                     	;# 
  1721  011C                     	;# 
  1722  011C                     	;# 
  1723  011D                     	;# 
  1724  011D                     	;# 
  1725  011D                     	;# 
  1726  011E                     	;# 
  1727  011E                     	;# 
  1728  011E                     	;# 
  1729  011F                     	;# 
  1730  011F                     	;# 
  1731  011F                     	;# 
  1732  011F                     	;# 
  1733  011F                     	;# 
  1734  018C                     	;# 
  1735  018D                     	;# 
  1736  018E                     	;# 
  1737  018F                     	;# 
  1738  0190                     	;# 
  1739  0191                     	;# 
  1740  0192                     	;# 
  1741  0196                     	;# 
  1742  0197                     	;# 
  1743  0198                     	;# 
  1744  0199                     	;# 
  1745  019A                     	;# 
  1746  019B                     	;# 
  1747  019C                     	;# 
  1748  020C                     	;# 
  1749  020C                     	;# 
  1750  020D                     	;# 
  1751  020E                     	;# 
  1752  020F                     	;# 
  1753  020F                     	;# 
  1754  0210                     	;# 
  1755  0210                     	;# 
  1756  0211                     	;# 
  1757  0211                     	;# 
  1758  0212                     	;# 
  1759  0212                     	;# 
  1760  0213                     	;# 
  1761  0214                     	;# 
  1762  0215                     	;# 
  1763  0215                     	;# 
  1764  0216                     	;# 
  1765  0216                     	;# 
  1766  0217                     	;# 
  1767  0217                     	;# 
  1768  0218                     	;# 
  1769  0218                     	;# 
  1770  0219                     	;# 
  1771  021A                     	;# 
  1772  021B                     	;# 
  1773  021B                     	;# 
  1774  021C                     	;# 
  1775  021C                     	;# 
  1776  021D                     	;# 
  1777  021D                     	;# 
  1778  021E                     	;# 
  1779  021F                     	;# 
  1780  028C                     	;# 
  1781  028C                     	;# 
  1782  028D                     	;# 
  1783  028D                     	;# 
  1784  028E                     	;# 
  1785  028F                     	;# 
  1786  0290                     	;# 
  1787  0290                     	;# 
  1788  0291                     	;# 
  1789  0292                     	;# 
  1790  0292                     	;# 
  1791  0293                     	;# 
  1792  0293                     	;# 
  1793  0294                     	;# 
  1794  0295                     	;# 
  1795  0296                     	;# 
  1796  0296                     	;# 
  1797  0297                     	;# 
  1798  0298                     	;# 
  1799  0298                     	;# 
  1800  0299                     	;# 
  1801  0299                     	;# 
  1802  029A                     	;# 
  1803  029B                     	;# 
  1804  029C                     	;# 
  1805  029C                     	;# 
  1806  029D                     	;# 
  1807  030C                     	;# 
  1808  030C                     	;# 
  1809  030D                     	;# 
  1810  030E                     	;# 
  1811  030F                     	;# 
  1812  0310                     	;# 
  1813  0310                     	;# 
  1814  0311                     	;# 
  1815  0312                     	;# 
  1816  0313                     	;# 
  1817  0314                     	;# 
  1818  0314                     	;# 
  1819  0315                     	;# 
  1820  0316                     	;# 
  1821  0317                     	;# 
  1822  0318                     	;# 
  1823  0318                     	;# 
  1824  0319                     	;# 
  1825  031A                     	;# 
  1826  031B                     	;# 
  1827  031C                     	;# 
  1828  031C                     	;# 
  1829  031D                     	;# 
  1830  031E                     	;# 
  1831  031F                     	;# 
  1832  038C                     	;# 
  1833  038C                     	;# 
  1834  038D                     	;# 
  1835  038E                     	;# 
  1836  0390                     	;# 
  1837  0390                     	;# 
  1838  0391                     	;# 
  1839  0392                     	;# 
  1840  040C                     	;# 
  1841  040D                     	;# 
  1842  040E                     	;# 
  1843  040F                     	;# 
  1844  0410                     	;# 
  1845  0411                     	;# 
  1846  0416                     	;# 
  1847  0416                     	;# 
  1848  0417                     	;# 
  1849  0418                     	;# 
  1850  0418                     	;# 
  1851  0419                     	;# 
  1852  041A                     	;# 
  1853  041A                     	;# 
  1854  041B                     	;# 
  1855  041C                     	;# 
  1856  041C                     	;# 
  1857  041D                     	;# 
  1858  041E                     	;# 
  1859  041F                     	;# 
  1860  048C                     	;# 
  1861  048C                     	;# 
  1862  048D                     	;# 
  1863  048E                     	;# 
  1864  048F                     	;# 
  1865  048F                     	;# 
  1866  0490                     	;# 
  1867  0491                     	;# 
  1868  0492                     	;# 
  1869  0492                     	;# 
  1870  0493                     	;# 
  1871  0494                     	;# 
  1872  0495                     	;# 
  1873  0495                     	;# 
  1874  0496                     	;# 
  1875  0497                     	;# 
  1876  0498                     	;# 
  1877  0499                     	;# 
  1878  049A                     	;# 
  1879  049B                     	;# 
  1880  049C                     	;# 
  1881  049D                     	;# 
  1882  050C                     	;# 
  1883  050C                     	;# 
  1884  050D                     	;# 
  1885  050E                     	;# 
  1886  050F                     	;# 
  1887  050F                     	;# 
  1888  0510                     	;# 
  1889  0511                     	;# 
  1890  0512                     	;# 
  1891  0512                     	;# 
  1892  0513                     	;# 
  1893  0514                     	;# 
  1894  0515                     	;# 
  1895  0515                     	;# 
  1896  0516                     	;# 
  1897  0517                     	;# 
  1898  0518                     	;# 
  1899  0519                     	;# 
  1900  051A                     	;# 
  1901  051B                     	;# 
  1902  051C                     	;# 
  1903  051D                     	;# 
  1904  058C                     	;# 
  1905  058C                     	;# 
  1906  058D                     	;# 
  1907  058E                     	;# 
  1908  058F                     	;# 
  1909  058F                     	;# 
  1910  0590                     	;# 
  1911  0591                     	;# 
  1912  0592                     	;# 
  1913  0593                     	;# 
  1914  060C                     	;# 
  1915  060D                     	;# 
  1916  060E                     	;# 
  1917  060F                     	;# 
  1918  0610                     	;# 
  1919  0611                     	;# 
  1920  0612                     	;# 
  1921  0613                     	;# 
  1922  0614                     	;# 
  1923  0616                     	;# 
  1924  0617                     	;# 
  1925  0618                     	;# 
  1926  0619                     	;# 
  1927  061A                     	;# 
  1928  061B                     	;# 
  1929  061C                     	;# 
  1930  061D                     	;# 
  1931  061E                     	;# 
  1932  068C                     	;# 
  1933  068D                     	;# 
  1934  068E                     	;# 
  1935  068F                     	;# 
  1936  0690                     	;# 
  1937  0691                     	;# 
  1938  0692                     	;# 
  1939  0693                     	;# 
  1940  0694                     	;# 
  1941  070C                     	;# 
  1942  070D                     	;# 
  1943  070E                     	;# 
  1944  070F                     	;# 
  1945  0710                     	;# 
  1946  0711                     	;# 
  1947  0712                     	;# 
  1948  0713                     	;# 
  1949  0714                     	;# 
  1950  0716                     	;# 
  1951  0717                     	;# 
  1952  0718                     	;# 
  1953  0719                     	;# 
  1954  071A                     	;# 
  1955  071B                     	;# 
  1956  071C                     	;# 
  1957  071D                     	;# 
  1958  071E                     	;# 
  1959  0796                     	;# 
  1960  0797                     	;# 
  1961  0798                     	;# 
  1962  0799                     	;# 
  1963  079A                     	;# 
  1964  079B                     	;# 
  1965  080C                     	;# 
  1966  080D                     	;# 
  1967  080E                     	;# 
  1968  080F                     	;# 
  1969  0810                     	;# 
  1970  0811                     	;# 
  1971  0813                     	;# 
  1972  0814                     	;# 
  1973  081A                     	;# 
  1974  081B                     	;# 
  1975  081C                     	;# 
  1976  081D                     	;# 
  1977  081E                     	;# 
  1978  081F                     	;# 
  1979  088C                     	;# 
  1980  088D                     	;# 
  1981  088E                     	;# 
  1982  088F                     	;# 
  1983  0890                     	;# 
  1984  0891                     	;# 
  1985  0892                     	;# 
  1986  0893                     	;# 
  1987  0895                     	;# 
  1988  0896                     	;# 
  1989  0897                     	;# 
  1990  0898                     	;# 
  1991  0899                     	;# 
  1992  089A                     	;# 
  1993  089B                     	;# 
  1994  090C                     	;# 
  1995  090E                     	;# 
  1996  090F                     	;# 
  1997  091F                     	;# 
  1998  091F                     	;# 
  1999  098F                     	;# 
  2000  098F                     	;# 
  2001  0990                     	;# 
  2002  0991                     	;# 
  2003  0992                     	;# 
  2004  0993                     	;# 
  2005  0994                     	;# 
  2006  0995                     	;# 
  2007  0996                     	;# 
  2008  0997                     	;# 
  2009  0E0F                     	;# 
  2010  0E10                     	;# 
  2011  0E11                     	;# 
  2012  0E12                     	;# 
  2013  0E13                     	;# 
  2014  0E14                     	;# 
  2015  0E15                     	;# 
  2016  0E16                     	;# 
  2017  0E17                     	;# 
  2018  0E18                     	;# 
  2019  0E19                     	;# 
  2020  0E1A                     	;# 
  2021  0E1B                     	;# 
  2022  0E1C                     	;# 
  2023  0E1D                     	;# 
  2024  0E1E                     	;# 
  2025  0E1F                     	;# 
  2026  0E20                     	;# 
  2027  0E21                     	;# 
  2028  0E22                     	;# 
  2029  0E23                     	;# 
  2030  0E24                     	;# 
  2031  0E25                     	;# 
  2032  0E26                     	;# 
  2033  0E27                     	;# 
  2034  0E28                     	;# 
  2035  0E29                     	;# 
  2036  0E2A                     	;# 
  2037  0E2B                     	;# 
  2038  0E2C                     	;# 
  2039  0E2D                     	;# 
  2040  0E2E                     	;# 
  2041  0E2F                     	;# 
  2042  0E30                     	;# 
  2043  0E31                     	;# 
  2044  0E32                     	;# 
  2045  0E33                     	;# 
  2046  0E34                     	;# 
  2047  0E35                     	;# 
  2048  0E36                     	;# 
  2049  0E37                     	;# 
  2050  0E8F                     	;# 
  2051  0E90                     	;# 
  2052  0E91                     	;# 
  2053  0E92                     	;# 
  2054  0E93                     	;# 
  2055  0E94                     	;# 
  2056  0E95                     	;# 
  2057  0E96                     	;# 
  2058  0E97                     	;# 
  2059  0E9C                     	;# 
  2060  0E9D                     	;# 
  2061  0E9E                     	;# 
  2062  0EA1                     	;# 
  2063  0EA2                     	;# 
  2064  0EA3                     	;# 
  2065  0EA4                     	;# 
  2066  0EA5                     	;# 
  2067  0EA9                     	;# 
  2068  0EAA                     	;# 
  2069  0EAB                     	;# 
  2070  0EAC                     	;# 
  2071  0EB1                     	;# 
  2072  0EB2                     	;# 
  2073  0EB3                     	;# 
  2074  0EB8                     	;# 
  2075  0EB9                     	;# 
  2076  0EBA                     	;# 
  2077  0EBB                     	;# 
  2078  0EBC                     	;# 
  2079  0EBD                     	;# 
  2080  0EBE                     	;# 
  2081  0EC3                     	;# 
  2082  0EC5                     	;# 
  2083  0EC6                     	;# 
  2084  0EC7                     	;# 
  2085  0EC8                     	;# 
  2086  0EC9                     	;# 
  2087  0ECA                     	;# 
  2088  0ECB                     	;# 
  2089  0ECC                     	;# 
  2090  0F10                     	;# 
  2091  0F11                     	;# 
  2092  0F12                     	;# 
  2093  0F13                     	;# 
  2094  0F14                     	;# 
  2095  0F15                     	;# 
  2096  0F16                     	;# 
  2097  0F17                     	;# 
  2098  0F18                     	;# 
  2099  0F19                     	;# 
  2100  0F1A                     	;# 
  2101  0F1B                     	;# 
  2102  0F1C                     	;# 
  2103  0F1D                     	;# 
  2104  0F1E                     	;# 
  2105  0F1F                     	;# 
  2106  0F20                     	;# 
  2107  0F21                     	;# 
  2108  0F22                     	;# 
  2109  0F23                     	;# 
  2110  0F24                     	;# 
  2111  0F25                     	;# 
  2112  0F26                     	;# 
  2113  0F27                     	;# 
  2114  0F38                     	;# 
  2115  0F39                     	;# 
  2116  0F3A                     	;# 
  2117  0F3B                     	;# 
  2118  0F3C                     	;# 
  2119  0F3D                     	;# 
  2120  0F3E                     	;# 
  2121  0F3F                     	;# 
  2122  0F40                     	;# 
  2123  0F41                     	;# 
  2124  0F43                     	;# 
  2125  0F44                     	;# 
  2126  0F45                     	;# 
  2127  0F46                     	;# 
  2128  0F47                     	;# 
  2129  0F48                     	;# 
  2130  0F49                     	;# 
  2131  0F4A                     	;# 
  2132  0F4B                     	;# 
  2133  0F4C                     	;# 
  2134  0F4E                     	;# 
  2135  0F4F                     	;# 
  2136  0F50                     	;# 
  2137  0F51                     	;# 
  2138  0F52                     	;# 
  2139  0F53                     	;# 
  2140  0F54                     	;# 
  2141  0F55                     	;# 
  2142  0F56                     	;# 
  2143  0F57                     	;# 
  2144  0F65                     	;# 
  2145  0F68                     	;# 
  2146  0F69                     	;# 
  2147  0F6A                     	;# 
  2148  0F6B                     	;# 
  2149  0FE4                     	;# 
  2150  0FE5                     	;# 
  2151  0FE6                     	;# 
  2152  0FE7                     	;# 
  2153  0FE8                     	;# 
  2154  0FE9                     	;# 
  2155  0FEA                     	;# 
  2156  0FEB                     	;# 
  2157  0FED                     	;# 
  2158  0FEE                     	;# 
  2159  0FEF                     	;# 
  2160  0000                     	;# 
  2161  0001                     	;# 
  2162  0002                     	;# 
  2163  0003                     	;# 
  2164  0004                     	;# 
  2165  0005                     	;# 
  2166  0006                     	;# 
  2167  0007                     	;# 
  2168  0008                     	;# 
  2169  0009                     	;# 
  2170  000A                     	;# 
  2171  000B                     	;# 
  2172  000C                     	;# 
  2173  000D                     	;# 
  2174  000E                     	;# 
  2175  0010                     	;# 
  2176  0011                     	;# 
  2177  0012                     	;# 
  2178  0013                     	;# 
  2179  0016                     	;# 
  2180  0017                     	;# 
  2181  0018                     	;# 
  2182  001C                     	;# 
  2183  001C                     	;# 
  2184  001D                     	;# 
  2185  001D                     	;# 
  2186  001E                     	;# 
  2187  001F                     	;# 
  2188  008C                     	;# 
  2189  008C                     	;# 
  2190  008D                     	;# 
  2191  008E                     	;# 
  2192  008E                     	;# 
  2193  008F                     	;# 
  2194  0090                     	;# 
  2195  0090                     	;# 
  2196  0091                     	;# 
  2197  0093                     	;# 
  2198  0094                     	;# 
  2199  0095                     	;# 
  2200  0096                     	;# 
  2201  0097                     	;# 
  2202  0098                     	;# 
  2203  0099                     	;# 
  2204  009A                     	;# 
  2205  009B                     	;# 
  2206  009C                     	;# 
  2207  009D                     	;# 
  2208  009E                     	;# 
  2209  010C                     	;# 
  2210  010D                     	;# 
  2211  010E                     	;# 
  2212  010E                     	;# 
  2213  010F                     	;# 
  2214  0110                     	;# 
  2215  0110                     	;# 
  2216  0111                     	;# 
  2217  0112                     	;# 
  2218  0112                     	;# 
  2219  0113                     	;# 
  2220  0114                     	;# 
  2221  0114                     	;# 
  2222  0115                     	;# 
  2223  0116                     	;# 
  2224  0116                     	;# 
  2225  0117                     	;# 
  2226  0119                     	;# 
  2227  0119                     	;# 
  2228  0119                     	;# 
  2229  011A                     	;# 
  2230  011A                     	;# 
  2231  011A                     	;# 
  2232  011B                     	;# 
  2233  011B                     	;# 
  2234  011B                     	;# 
  2235  011B                     	;# 
  2236  011B                     	;# 
  2237  011C                     	;# 
  2238  011C                     	;# 
  2239  011C                     	;# 
  2240  011D                     	;# 
  2241  011D                     	;# 
  2242  011D                     	;# 
  2243  011E                     	;# 
  2244  011E                     	;# 
  2245  011E                     	;# 
  2246  011F                     	;# 
  2247  011F                     	;# 
  2248  011F                     	;# 
  2249  011F                     	;# 
  2250  011F                     	;# 
  2251  018C                     	;# 
  2252  018D                     	;# 
  2253  018E                     	;# 
  2254  018F                     	;# 
  2255  0190                     	;# 
  2256  0191                     	;# 
  2257  0192                     	;# 
  2258  0196                     	;# 
  2259  0197                     	;# 
  2260  0198                     	;# 
  2261  0199                     	;# 
  2262  019A                     	;# 
  2263  019B                     	;# 
  2264  019C                     	;# 
  2265  020C                     	;# 
  2266  020C                     	;# 
  2267  020D                     	;# 
  2268  020E                     	;# 
  2269  020F                     	;# 
  2270  020F                     	;# 
  2271  0210                     	;# 
  2272  0210                     	;# 
  2273  0211                     	;# 
  2274  0211                     	;# 
  2275  0212                     	;# 
  2276  0212                     	;# 
  2277  0213                     	;# 
  2278  0214                     	;# 
  2279  0215                     	;# 
  2280  0215                     	;# 
  2281  0216                     	;# 
  2282  0216                     	;# 
  2283  0217                     	;# 
  2284  0217                     	;# 
  2285  0218                     	;# 
  2286  0218                     	;# 
  2287  0219                     	;# 
  2288  021A                     	;# 
  2289  021B                     	;# 
  2290  021B                     	;# 
  2291  021C                     	;# 
  2292  021C                     	;# 
  2293  021D                     	;# 
  2294  021D                     	;# 
  2295  021E                     	;# 
  2296  021F                     	;# 
  2297  028C                     	;# 
  2298  028C                     	;# 
  2299  028D                     	;# 
  2300  028D                     	;# 
  2301  028E                     	;# 
  2302  028F                     	;# 
  2303  0290                     	;# 
  2304  0290                     	;# 
  2305  0291                     	;# 
  2306  0292                     	;# 
  2307  0292                     	;# 
  2308  0293                     	;# 
  2309  0293                     	;# 
  2310  0294                     	;# 
  2311  0295                     	;# 
  2312  0296                     	;# 
  2313  0296                     	;# 
  2314  0297                     	;# 
  2315  0298                     	;# 
  2316  0298                     	;# 
  2317  0299                     	;# 
  2318  0299                     	;# 
  2319  029A                     	;# 
  2320  029B                     	;# 
  2321  029C                     	;# 
  2322  029C                     	;# 
  2323  029D                     	;# 
  2324  030C                     	;# 
  2325  030C                     	;# 
  2326  030D                     	;# 
  2327  030E                     	;# 
  2328  030F                     	;# 
  2329  0310                     	;# 
  2330  0310                     	;# 
  2331  0311                     	;# 
  2332  0312                     	;# 
  2333  0313                     	;# 
  2334  0314                     	;# 
  2335  0314                     	;# 
  2336  0315                     	;# 
  2337  0316                     	;# 
  2338  0317                     	;# 
  2339  0318                     	;# 
  2340  0318                     	;# 
  2341  0319                     	;# 
  2342  031A                     	;# 
  2343  031B                     	;# 
  2344  031C                     	;# 
  2345  031C                     	;# 
  2346  031D                     	;# 
  2347  031E                     	;# 
  2348  031F                     	;# 
  2349  038C                     	;# 
  2350  038C                     	;# 
  2351  038D                     	;# 
  2352  038E                     	;# 
  2353  0390                     	;# 
  2354  0390                     	;# 
  2355  0391                     	;# 
  2356  0392                     	;# 
  2357  040C                     	;# 
  2358  040D                     	;# 
  2359  040E                     	;# 
  2360  040F                     	;# 
  2361  0410                     	;# 
  2362  0411                     	;# 
  2363  0416                     	;# 
  2364  0416                     	;# 
  2365  0417                     	;# 
  2366  0418                     	;# 
  2367  0418                     	;# 
  2368  0419                     	;# 
  2369  041A                     	;# 
  2370  041A                     	;# 
  2371  041B                     	;# 
  2372  041C                     	;# 
  2373  041C                     	;# 
  2374  041D                     	;# 
  2375  041E                     	;# 
  2376  041F                     	;# 
  2377  048C                     	;# 
  2378  048C                     	;# 
  2379  048D                     	;# 
  2380  048E                     	;# 
  2381  048F                     	;# 
  2382  048F                     	;# 
  2383  0490                     	;# 
  2384  0491                     	;# 
  2385  0492                     	;# 
  2386  0492                     	;# 
  2387  0493                     	;# 
  2388  0494                     	;# 
  2389  0495                     	;# 
  2390  0495                     	;# 
  2391  0496                     	;# 
  2392  0497                     	;# 
  2393  0498                     	;# 
  2394  0499                     	;# 
  2395  049A                     	;# 
  2396  049B                     	;# 
  2397  049C                     	;# 
  2398  049D                     	;# 
  2399  050C                     	;# 
  2400  050C                     	;# 
  2401  050D                     	;# 
  2402  050E                     	;# 
  2403  050F                     	;# 
  2404  050F                     	;# 
  2405  0510                     	;# 
  2406  0511                     	;# 
  2407  0512                     	;# 
  2408  0512                     	;# 
  2409  0513                     	;# 
  2410  0514                     	;# 
  2411  0515                     	;# 
  2412  0515                     	;# 
  2413  0516                     	;# 
  2414  0517                     	;# 
  2415  0518                     	;# 
  2416  0519                     	;# 
  2417  051A                     	;# 
  2418  051B                     	;# 
  2419  051C                     	;# 
  2420  051D                     	;# 
  2421  058C                     	;# 
  2422  058C                     	;# 
  2423  058D                     	;# 
  2424  058E                     	;# 
  2425  058F                     	;# 
  2426  058F                     	;# 
  2427  0590                     	;# 
  2428  0591                     	;# 
  2429  0592                     	;# 
  2430  0593                     	;# 
  2431  060C                     	;# 
  2432  060D                     	;# 
  2433  060E                     	;# 
  2434  060F                     	;# 
  2435  0610                     	;# 
  2436  0611                     	;# 
  2437  0612                     	;# 
  2438  0613                     	;# 
  2439  0614                     	;# 
  2440  0616                     	;# 
  2441  0617                     	;# 
  2442  0618                     	;# 
  2443  0619                     	;# 
  2444  061A                     	;# 
  2445  061B                     	;# 
  2446  061C                     	;# 
  2447  061D                     	;# 
  2448  061E                     	;# 
  2449  068C                     	;# 
  2450  068D                     	;# 
  2451  068E                     	;# 
  2452  068F                     	;# 
  2453  0690                     	;# 
  2454  0691                     	;# 
  2455  0692                     	;# 
  2456  0693                     	;# 
  2457  0694                     	;# 
  2458  070C                     	;# 
  2459  070D                     	;# 
  2460  070E                     	;# 
  2461  070F                     	;# 
  2462  0710                     	;# 
  2463  0711                     	;# 
  2464  0712                     	;# 
  2465  0713                     	;# 
  2466  0714                     	;# 
  2467  0716                     	;# 
  2468  0717                     	;# 
  2469  0718                     	;# 
  2470  0719                     	;# 
  2471  071A                     	;# 
  2472  071B                     	;# 
  2473  071C                     	;# 
  2474  071D                     	;# 
  2475  071E                     	;# 
  2476  0796                     	;# 
  2477  0797                     	;# 
  2478  0798                     	;# 
  2479  0799                     	;# 
  2480  079A                     	;# 
  2481  079B                     	;# 
  2482  080C                     	;# 
  2483  080D                     	;# 
  2484  080E                     	;# 
  2485  080F                     	;# 
  2486  0810                     	;# 
  2487  0811                     	;# 
  2488  0813                     	;# 
  2489  0814                     	;# 
  2490  081A                     	;# 
  2491  081B                     	;# 
  2492  081C                     	;# 
  2493  081D                     	;# 
  2494  081E                     	;# 
  2495  081F                     	;# 
  2496  088C                     	;# 
  2497  088D                     	;# 
  2498  088E                     	;# 
  2499  088F                     	;# 
  2500  0890                     	;# 
  2501  0891                     	;# 
  2502  0892                     	;# 
  2503  0893                     	;# 
  2504  0895                     	;# 
  2505  0896                     	;# 
  2506  0897                     	;# 
  2507  0898                     	;# 
  2508  0899                     	;# 
  2509  089A                     	;# 
  2510  089B                     	;# 
  2511  090C                     	;# 
  2512  090E                     	;# 
  2513  090F                     	;# 
  2514  091F                     	;# 
  2515  091F                     	;# 
  2516  098F                     	;# 
  2517  098F                     	;# 
  2518  0990                     	;# 
  2519  0991                     	;# 
  2520  0992                     	;# 
  2521  0993                     	;# 
  2522  0994                     	;# 
  2523  0995                     	;# 
  2524  0996                     	;# 
  2525  0997                     	;# 
  2526  0E0F                     	;# 
  2527  0E10                     	;# 
  2528  0E11                     	;# 
  2529  0E12                     	;# 
  2530  0E13                     	;# 
  2531  0E14                     	;# 
  2532  0E15                     	;# 
  2533  0E16                     	;# 
  2534  0E17                     	;# 
  2535  0E18                     	;# 
  2536  0E19                     	;# 
  2537  0E1A                     	;# 
  2538  0E1B                     	;# 
  2539  0E1C                     	;# 
  2540  0E1D                     	;# 
  2541  0E1E                     	;# 
  2542  0E1F                     	;# 
  2543  0E20                     	;# 
  2544  0E21                     	;# 
  2545  0E22                     	;# 
  2546  0E23                     	;# 
  2547  0E24                     	;# 
  2548  0E25                     	;# 
  2549  0E26                     	;# 
  2550  0E27                     	;# 
  2551  0E28                     	;# 
  2552  0E29                     	;# 
  2553  0E2A                     	;# 
  2554  0E2B                     	;# 
  2555  0E2C                     	;# 
  2556  0E2D                     	;# 
  2557  0E2E                     	;# 
  2558  0E2F                     	;# 
  2559  0E30                     	;# 
  2560  0E31                     	;# 
  2561  0E32                     	;# 
  2562  0E33                     	;# 
  2563  0E34                     	;# 
  2564  0E35                     	;# 
  2565  0E36                     	;# 
  2566  0E37                     	;# 
  2567  0E8F                     	;# 
  2568  0E90                     	;# 
  2569  0E91                     	;# 
  2570  0E92                     	;# 
  2571  0E93                     	;# 
  2572  0E94                     	;# 
  2573  0E95                     	;# 
  2574  0E96                     	;# 
  2575  0E97                     	;# 
  2576  0E9C                     	;# 
  2577  0E9D                     	;# 
  2578  0E9E                     	;# 
  2579  0EA1                     	;# 
  2580  0EA2                     	;# 
  2581  0EA3                     	;# 
  2582  0EA4                     	;# 
  2583  0EA5                     	;# 
  2584  0EA9                     	;# 
  2585  0EAA                     	;# 
  2586  0EAB                     	;# 
  2587  0EAC                     	;# 
  2588  0EB1                     	;# 
  2589  0EB2                     	;# 
  2590  0EB3                     	;# 
  2591  0EB8                     	;# 
  2592  0EB9                     	;# 
  2593  0EBA                     	;# 
  2594  0EBB                     	;# 
  2595  0EBC                     	;# 
  2596  0EBD                     	;# 
  2597  0EBE                     	;# 
  2598  0EC3                     	;# 
  2599  0EC5                     	;# 
  2600  0EC6                     	;# 
  2601  0EC7                     	;# 
  2602  0EC8                     	;# 
  2603  0EC9                     	;# 
  2604  0ECA                     	;# 
  2605  0ECB                     	;# 
  2606  0ECC                     	;# 
  2607  0F10                     	;# 
  2608  0F11                     	;# 
  2609  0F12                     	;# 
  2610  0F13                     	;# 
  2611  0F14                     	;# 
  2612  0F15                     	;# 
  2613  0F16                     	;# 
  2614  0F17                     	;# 
  2615  0F18                     	;# 
  2616  0F19                     	;# 
  2617  0F1A                     	;# 
  2618  0F1B                     	;# 
  2619  0F1C                     	;# 
  2620  0F1D                     	;# 
  2621  0F1E                     	;# 
  2622  0F1F                     	;# 
  2623  0F20                     	;# 
  2624  0F21                     	;# 
  2625  0F22                     	;# 
  2626  0F23                     	;# 
  2627  0F24                     	;# 
  2628  0F25                     	;# 
  2629  0F26                     	;# 
  2630  0F27                     	;# 
  2631  0F38                     	;# 
  2632  0F39                     	;# 
  2633  0F3A                     	;# 
  2634  0F3B                     	;# 
  2635  0F3C                     	;# 
  2636  0F3D                     	;# 
  2637  0F3E                     	;# 
  2638  0F3F                     	;# 
  2639  0F40                     	;# 
  2640  0F41                     	;# 
  2641  0F43                     	;# 
  2642  0F44                     	;# 
  2643  0F45                     	;# 
  2644  0F46                     	;# 
  2645  0F47                     	;# 
  2646  0F48                     	;# 
  2647  0F49                     	;# 
  2648  0F4A                     	;# 
  2649  0F4B                     	;# 
  2650  0F4C                     	;# 
  2651  0F4E                     	;# 
  2652  0F4F                     	;# 
  2653  0F50                     	;# 
  2654  0F51                     	;# 
  2655  0F52                     	;# 
  2656  0F53                     	;# 
  2657  0F54                     	;# 
  2658  0F55                     	;# 
  2659  0F56                     	;# 
  2660  0F57                     	;# 
  2661  0F65                     	;# 
  2662  0F68                     	;# 
  2663  0F69                     	;# 
  2664  0F6A                     	;# 
  2665  0F6B                     	;# 
  2666  0FE4                     	;# 
  2667  0FE5                     	;# 
  2668  0FE6                     	;# 
  2669  0FE7                     	;# 
  2670  0FE8                     	;# 
  2671  0FE9                     	;# 
  2672  0FEA                     	;# 
  2673  0FEB                     	;# 
  2674  0FED                     	;# 
  2675  0FEE                     	;# 
  2676  0FEF                     	;# 
  2677  0000                     	;# 
  2678  0001                     	;# 
  2679  0002                     	;# 
  2680  0003                     	;# 
  2681  0004                     	;# 
  2682  0005                     	;# 
  2683  0006                     	;# 
  2684  0007                     	;# 
  2685  0008                     	;# 
  2686  0009                     	;# 
  2687  000A                     	;# 
  2688  000B                     	;# 
  2689  000C                     	;# 
  2690  000D                     	;# 
  2691  000E                     	;# 
  2692  0010                     	;# 
  2693  0011                     	;# 
  2694  0012                     	;# 
  2695  0013                     	;# 
  2696  0016                     	;# 
  2697  0017                     	;# 
  2698  0018                     	;# 
  2699  001C                     	;# 
  2700  001C                     	;# 
  2701  001D                     	;# 
  2702  001D                     	;# 
  2703  001E                     	;# 
  2704  001F                     	;# 
  2705  008C                     	;# 
  2706  008C                     	;# 
  2707  008D                     	;# 
  2708  008E                     	;# 
  2709  008E                     	;# 
  2710  008F                     	;# 
  2711  0090                     	;# 
  2712  0090                     	;# 
  2713  0091                     	;# 
  2714  0093                     	;# 
  2715  0094                     	;# 
  2716  0095                     	;# 
  2717  0096                     	;# 
  2718  0097                     	;# 
  2719  0098                     	;# 
  2720  0099                     	;# 
  2721  009A                     	;# 
  2722  009B                     	;# 
  2723  009C                     	;# 
  2724  009D                     	;# 
  2725  009E                     	;# 
  2726  010C                     	;# 
  2727  010D                     	;# 
  2728  010E                     	;# 
  2729  010E                     	;# 
  2730  010F                     	;# 
  2731  0110                     	;# 
  2732  0110                     	;# 
  2733  0111                     	;# 
  2734  0112                     	;# 
  2735  0112                     	;# 
  2736  0113                     	;# 
  2737  0114                     	;# 
  2738  0114                     	;# 
  2739  0115                     	;# 
  2740  0116                     	;# 
  2741  0116                     	;# 
  2742  0117                     	;# 
  2743  0119                     	;# 
  2744  0119                     	;# 
  2745  0119                     	;# 
  2746  011A                     	;# 
  2747  011A                     	;# 
  2748  011A                     	;# 
  2749  011B                     	;# 
  2750  011B                     	;# 
  2751  011B                     	;# 
  2752  011B                     	;# 
  2753  011B                     	;# 
  2754  011C                     	;# 
  2755  011C                     	;# 
  2756  011C                     	;# 
  2757  011D                     	;# 
  2758  011D                     	;# 
  2759  011D                     	;# 
  2760  011E                     	;# 
  2761  011E                     	;# 
  2762  011E                     	;# 
  2763  011F                     	;# 
  2764  011F                     	;# 
  2765  011F                     	;# 
  2766  011F                     	;# 
  2767  011F                     	;# 
  2768  018C                     	;# 
  2769  018D                     	;# 
  2770  018E                     	;# 
  2771  018F                     	;# 
  2772  0190                     	;# 
  2773  0191                     	;# 
  2774  0192                     	;# 
  2775  0196                     	;# 
  2776  0197                     	;# 
  2777  0198                     	;# 
  2778  0199                     	;# 
  2779  019A                     	;# 
  2780  019B                     	;# 
  2781  019C                     	;# 
  2782  020C                     	;# 
  2783  020C                     	;# 
  2784  020D                     	;# 
  2785  020E                     	;# 
  2786  020F                     	;# 
  2787  020F                     	;# 
  2788  0210                     	;# 
  2789  0210                     	;# 
  2790  0211                     	;# 
  2791  0211                     	;# 
  2792  0212                     	;# 
  2793  0212                     	;# 
  2794  0213                     	;# 
  2795  0214                     	;# 
  2796  0215                     	;# 
  2797  0215                     	;# 
  2798  0216                     	;# 
  2799  0216                     	;# 
  2800  0217                     	;# 
  2801  0217                     	;# 
  2802  0218                     	;# 
  2803  0218                     	;# 
  2804  0219                     	;# 
  2805  021A                     	;# 
  2806  021B                     	;# 
  2807  021B                     	;# 
  2808  021C                     	;# 
  2809  021C                     	;# 
  2810  021D                     	;# 
  2811  021D                     	;# 
  2812  021E                     	;# 
  2813  021F                     	;# 
  2814  028C                     	;# 
  2815  028C                     	;# 
  2816  028D                     	;# 
  2817  028D                     	;# 
  2818  028E                     	;# 
  2819  028F                     	;# 
  2820  0290                     	;# 
  2821  0290                     	;# 
  2822  0291                     	;# 
  2823  0292                     	;# 
  2824  0292                     	;# 
  2825  0293                     	;# 
  2826  0293                     	;# 
  2827  0294                     	;# 
  2828  0295                     	;# 
  2829  0296                     	;# 
  2830  0296                     	;# 
  2831  0297                     	;# 
  2832  0298                     	;# 
  2833  0298                     	;# 
  2834  0299                     	;# 
  2835  0299                     	;# 
  2836  029A                     	;# 
  2837  029B                     	;# 
  2838  029C                     	;# 
  2839  029C                     	;# 
  2840  029D                     	;# 
  2841  030C                     	;# 
  2842  030C                     	;# 
  2843  030D                     	;# 
  2844  030E                     	;# 
  2845  030F                     	;# 
  2846  0310                     	;# 
  2847  0310                     	;# 
  2848  0311                     	;# 
  2849  0312                     	;# 
  2850  0313                     	;# 
  2851  0314                     	;# 
  2852  0314                     	;# 
  2853  0315                     	;# 
  2854  0316                     	;# 
  2855  0317                     	;# 
  2856  0318                     	;# 
  2857  0318                     	;# 
  2858  0319                     	;# 
  2859  031A                     	;# 
  2860  031B                     	;# 
  2861  031C                     	;# 
  2862  031C                     	;# 
  2863  031D                     	;# 
  2864  031E                     	;# 
  2865  031F                     	;# 
  2866  038C                     	;# 
  2867  038C                     	;# 
  2868  038D                     	;# 
  2869  038E                     	;# 
  2870  0390                     	;# 
  2871  0390                     	;# 
  2872  0391                     	;# 
  2873  0392                     	;# 
  2874  040C                     	;# 
  2875  040D                     	;# 
  2876  040E                     	;# 
  2877  040F                     	;# 
  2878  0410                     	;# 
  2879  0411                     	;# 
  2880  0416                     	;# 
  2881  0416                     	;# 
  2882  0417                     	;# 
  2883  0418                     	;# 
  2884  0418                     	;# 
  2885  0419                     	;# 
  2886  041A                     	;# 
  2887  041A                     	;# 
  2888  041B                     	;# 
  2889  041C                     	;# 
  2890  041C                     	;# 
  2891  041D                     	;# 
  2892  041E                     	;# 
  2893  041F                     	;# 
  2894  048C                     	;# 
  2895  048C                     	;# 
  2896  048D                     	;# 
  2897  048E                     	;# 
  2898  048F                     	;# 
  2899  048F                     	;# 
  2900  0490                     	;# 
  2901  0491                     	;# 
  2902  0492                     	;# 
  2903  0492                     	;# 
  2904  0493                     	;# 
  2905  0494                     	;# 
  2906  0495                     	;# 
  2907  0495                     	;# 
  2908  0496                     	;# 
  2909  0497                     	;# 
  2910  0498                     	;# 
  2911  0499                     	;# 
  2912  049A                     	;# 
  2913  049B                     	;# 
  2914  049C                     	;# 
  2915  049D                     	;# 
  2916  050C                     	;# 
  2917  050C                     	;# 
  2918  050D                     	;# 
  2919  050E                     	;# 
  2920  050F                     	;# 
  2921  050F                     	;# 
  2922  0510                     	;# 
  2923  0511                     	;# 
  2924  0512                     	;# 
  2925  0512                     	;# 
  2926  0513                     	;# 
  2927  0514                     	;# 
  2928  0515                     	;# 
  2929  0515                     	;# 
  2930  0516                     	;# 
  2931  0517                     	;# 
  2932  0518                     	;# 
  2933  0519                     	;# 
  2934  051A                     	;# 
  2935  051B                     	;# 
  2936  051C                     	;# 
  2937  051D                     	;# 
  2938  058C                     	;# 
  2939  058C                     	;# 
  2940  058D                     	;# 
  2941  058E                     	;# 
  2942  058F                     	;# 
  2943  058F                     	;# 
  2944  0590                     	;# 
  2945  0591                     	;# 
  2946  0592                     	;# 
  2947  0593                     	;# 
  2948  060C                     	;# 
  2949  060D                     	;# 
  2950  060E                     	;# 
  2951  060F                     	;# 
  2952  0610                     	;# 
  2953  0611                     	;# 
  2954  0612                     	;# 
  2955  0613                     	;# 
  2956  0614                     	;# 
  2957  0616                     	;# 
  2958  0617                     	;# 
  2959  0618                     	;# 
  2960  0619                     	;# 
  2961  061A                     	;# 
  2962  061B                     	;# 
  2963  061C                     	;# 
  2964  061D                     	;# 
  2965  061E                     	;# 
  2966  068C                     	;# 
  2967  068D                     	;# 
  2968  068E                     	;# 
  2969  068F                     	;# 
  2970  0690                     	;# 
  2971  0691                     	;# 
  2972  0692                     	;# 
  2973  0693                     	;# 
  2974  0694                     	;# 
  2975  070C                     	;# 
  2976  070D                     	;# 
  2977  070E                     	;# 
  2978  070F                     	;# 
  2979  0710                     	;# 
  2980  0711                     	;# 
  2981  0712                     	;# 
  2982  0713                     	;# 
  2983  0714                     	;# 
  2984  0716                     	;# 
  2985  0717                     	;# 
  2986  0718                     	;# 
  2987  0719                     	;# 
  2988  071A                     	;# 
  2989  071B                     	;# 
  2990  071C                     	;# 
  2991  071D                     	;# 
  2992  071E                     	;# 
  2993  0796                     	;# 
  2994  0797                     	;# 
  2995  0798                     	;# 
  2996  0799                     	;# 
  2997  079A                     	;# 
  2998  079B                     	;# 
  2999  080C                     	;# 
  3000  080D                     	;# 
  3001  080E                     	;# 
  3002  080F                     	;# 
  3003  0810                     	;# 
  3004  0811                     	;# 
  3005  0813                     	;# 
  3006  0814                     	;# 
  3007  081A                     	;# 
  3008  081B                     	;# 
  3009  081C                     	;# 
  3010  081D                     	;# 
  3011  081E                     	;# 
  3012  081F                     	;# 
  3013  088C                     	;# 
  3014  088D                     	;# 
  3015  088E                     	;# 
  3016  088F                     	;# 
  3017  0890                     	;# 
  3018  0891                     	;# 
  3019  0892                     	;# 
  3020  0893                     	;# 
  3021  0895                     	;# 
  3022  0896                     	;# 
  3023  0897                     	;# 
  3024  0898                     	;# 
  3025  0899                     	;# 
  3026  089A                     	;# 
  3027  089B                     	;# 
  3028  090C                     	;# 
  3029  090E                     	;# 
  3030  090F                     	;# 
  3031  091F                     	;# 
  3032  091F                     	;# 
  3033  098F                     	;# 
  3034  098F                     	;# 
  3035  0990                     	;# 
  3036  0991                     	;# 
  3037  0992                     	;# 
  3038  0993                     	;# 
  3039  0994                     	;# 
  3040  0995                     	;# 
  3041  0996                     	;# 
  3042  0997                     	;# 
  3043  0E0F                     	;# 
  3044  0E10                     	;# 
  3045  0E11                     	;# 
  3046  0E12                     	;# 
  3047  0E13                     	;# 
  3048  0E14                     	;# 
  3049  0E15                     	;# 
  3050  0E16                     	;# 
  3051  0E17                     	;# 
  3052  0E18                     	;# 
  3053  0E19                     	;# 
  3054  0E1A                     	;# 
  3055  0E1B                     	;# 
  3056  0E1C                     	;# 
  3057  0E1D                     	;# 
  3058  0E1E                     	;# 
  3059  0E1F                     	;# 
  3060  0E20                     	;# 
  3061  0E21                     	;# 
  3062  0E22                     	;# 
  3063  0E23                     	;# 
  3064  0E24                     	;# 
  3065  0E25                     	;# 
  3066  0E26                     	;# 
  3067  0E27                     	;# 
  3068  0E28                     	;# 
  3069  0E29                     	;# 
  3070  0E2A                     	;# 
  3071  0E2B                     	;# 
  3072  0E2C                     	;# 
  3073  0E2D                     	;# 
  3074  0E2E                     	;# 
  3075  0E2F                     	;# 
  3076  0E30                     	;# 
  3077  0E31                     	;# 
  3078  0E32                     	;# 
  3079  0E33                     	;# 
  3080  0E34                     	;# 
  3081  0E35                     	;# 
  3082  0E36                     	;# 
  3083  0E37                     	;# 
  3084  0E8F                     	;# 
  3085  0E90                     	;# 
  3086  0E91                     	;# 
  3087  0E92                     	;# 
  3088  0E93                     	;# 
  3089  0E94                     	;# 
  3090  0E95                     	;# 
  3091  0E96                     	;# 
  3092  0E97                     	;# 
  3093  0E9C                     	;# 
  3094  0E9D                     	;# 
  3095  0E9E                     	;# 
  3096  0EA1                     	;# 
  3097  0EA2                     	;# 
  3098  0EA3                     	;# 
  3099  0EA4                     	;# 
  3100  0EA5                     	;# 
  3101  0EA9                     	;# 
  3102  0EAA                     	;# 
  3103  0EAB                     	;# 
  3104  0EAC                     	;# 
  3105  0EB1                     	;# 
  3106  0EB2                     	;# 
  3107  0EB3                     	;# 
  3108  0EB8                     	;# 
  3109  0EB9                     	;# 
  3110  0EBA                     	;# 
  3111  0EBB                     	;# 
  3112  0EBC                     	;# 
  3113  0EBD                     	;# 
  3114  0EBE                     	;# 
  3115  0EC3                     	;# 
  3116  0EC5                     	;# 
  3117  0EC6                     	;# 
  3118  0EC7                     	;# 
  3119  0EC8                     	;# 
  3120  0EC9                     	;# 
  3121  0ECA                     	;# 
  3122  0ECB                     	;# 
  3123  0ECC                     	;# 
  3124  0F10                     	;# 
  3125  0F11                     	;# 
  3126  0F12                     	;# 
  3127  0F13                     	;# 
  3128  0F14                     	;# 
  3129  0F15                     	;# 
  3130  0F16                     	;# 
  3131  0F17                     	;# 
  3132  0F18                     	;# 
  3133  0F19                     	;# 
  3134  0F1A                     	;# 
  3135  0F1B                     	;# 
  3136  0F1C                     	;# 
  3137  0F1D                     	;# 
  3138  0F1E                     	;# 
  3139  0F1F                     	;# 
  3140  0F20                     	;# 
  3141  0F21                     	;# 
  3142  0F22                     	;# 
  3143  0F23                     	;# 
  3144  0F24                     	;# 
  3145  0F25                     	;# 
  3146  0F26                     	;# 
  3147  0F27                     	;# 
  3148  0F38                     	;# 
  3149  0F39                     	;# 
  3150  0F3A                     	;# 
  3151  0F3B                     	;# 
  3152  0F3C                     	;# 
  3153  0F3D                     	;# 
  3154  0F3E                     	;# 
  3155  0F3F                     	;# 
  3156  0F40                     	;# 
  3157  0F41                     	;# 
  3158  0F43                     	;# 
  3159  0F44                     	;# 
  3160  0F45                     	;# 
  3161  0F46                     	;# 
  3162  0F47                     	;# 
  3163  0F48                     	;# 
  3164  0F49                     	;# 
  3165  0F4A                     	;# 
  3166  0F4B                     	;# 
  3167  0F4C                     	;# 
  3168  0F4E                     	;# 
  3169  0F4F                     	;# 
  3170  0F50                     	;# 
  3171  0F51                     	;# 
  3172  0F52                     	;# 
  3173  0F53                     	;# 
  3174  0F54                     	;# 
  3175  0F55                     	;# 
  3176  0F56                     	;# 
  3177  0F57                     	;# 
  3178  0F65                     	;# 
  3179  0F68                     	;# 
  3180  0F69                     	;# 
  3181  0F6A                     	;# 
  3182  0F6B                     	;# 
  3183  0FE4                     	;# 
  3184  0FE5                     	;# 
  3185  0FE6                     	;# 
  3186  0FE7                     	;# 
  3187  0FE8                     	;# 
  3188  0FE9                     	;# 
  3189  0FEA                     	;# 
  3190  0FEB                     	;# 
  3191  0FED                     	;# 
  3192  0FEE                     	;# 
  3193  0FEF                     	;# 
  3194                           
  3195                           	psect	nvBANK1
  3196  00DC                     __pnvBANK1:
  3197  00DC                     _EUSART_ErrorHandler:
  3198  00DC                     	ds	2
  3199  00DE                     _EUSART_OverrunErrorHandler:
  3200  00DE                     	ds	2
  3201  00E0                     _EUSART_FramingErrorHandler:
  3202  00E0                     	ds	2
  3203  00E2                     _EUSART_RxDefaultInterruptHandler:
  3204  00E2                     	ds	2
  3205  00E4                     _EUSART_TxDefaultInterruptHandler:
  3206  00E4                     	ds	2
  3207  00E6                     _eusartTxBufferRemaining:
  3208  00E6                     	ds	1
  3209  0016                     _LATAbits	set	22
  3210  0013                     _TRISC	set	19
  3211  0012                     _TRISB	set	18
  3212  0011                     _TRISA	set	17
  3213  0018                     _LATC	set	24
  3214  0017                     _LATB	set	23
  3215  0016                     _LATA	set	22
  3216  000B                     _INTCONbits	set	11
  3217  0119                     _RC1REG	set	281
  3218  011D                     _RC1STAbits	set	285
  3219  011A                     _TX1REG	set	282
  3220  011E                     _TX1STAbits	set	286
  3221  011C                     _SP1BRGH	set	284
  3222  011B                     _SP1BRGL	set	283
  3223  011E                     _TX1STA	set	286
  3224  011D                     _RC1STA	set	285
  3225  011F                     _BAUD1CON	set	287
  3226  070F                     _PIR3bits	set	1807
  3227  0719                     _PIE3bits	set	1817
  3228  079B                     _PMD5	set	1947
  3229  079A                     _PMD4	set	1946
  3230  0799                     _PMD3	set	1945
  3231  0798                     _PMD2	set	1944
  3232  0797                     _PMD1	set	1943
  3233  0796                     _PMD0	set	1942
  3234  0892                     _OSCTUNE	set	2194
  3235  0893                     _OSCFRQ	set	2195
  3236  0891                     _OSCEN	set	2193
  3237  088F                     _OSCCON3	set	2191
  3238  088D                     _OSCCON1	set	2189
  3239  0ECB                     _RXPPS	set	3787
  3240  0F20                     _RC0PPS	set	3872
  3241  0F68                     _INLVLE	set	3944
  3242  0F52                     _INLVLC	set	3922
  3243  0F47                     _INLVLB	set	3911
  3244  0F3C                     _INLVLA	set	3900
  3245  0F51                     _SLRCONC	set	3921
  3246  0F46                     _SLRCONB	set	3910
  3247  0F3B                     _SLRCONA	set	3899
  3248  0F50                     _ODCONC	set	3920
  3249  0F45                     _ODCONB	set	3909
  3250  0F3A                     _ODCONA	set	3898
  3251  0F4F                     _WPUC	set	3919
  3252  0F39                     _WPUA	set	3897
  3253  0F44                     _WPUB	set	3908
  3254  0F65                     _WPUE	set	3941
  3255  0F38                     _ANSELA	set	3896
  3256  0F43                     _ANSELB	set	3907
  3257  0F4E                     _ANSELC	set	3918
  3258                           
  3259                           	psect	stringtext1
  3260  1000                     __pstringtext1:
  3261  1000                     STR_1:
  3262  1000  3468               	retlw	104	;'h'
  3263  1001  346F               	retlw	111	;'o'
  3264  1002  346C               	retlw	108	;'l'
  3265  1003  3461               	retlw	97	;'a'
  3266  1004  3420               	retlw	32	;' '
  3267  1005  3445               	retlw	69	;'E'
  3268  1006  3455               	retlw	85	;'U'
  3269  1007  3453               	retlw	83	;'S'
  3270  1008  3441               	retlw	65	;'A'
  3271  1009  3452               	retlw	82	;'R'
  3272  100A  3454               	retlw	84	;'T'
  3273  100B  340A               	retlw	10
  3274  100C  340D               	retlw	13
  3275  100D  3400               	retlw	0
  3276                           
  3277                           	psect	stringtext2
  3278  100E                     __pstringtext2:
  3279  100E                     STR_3:
  3280  100E  3465               	retlw	101	;'e'
  3281  100F  346E               	retlw	110	;'n'
  3282  1010  3463               	retlw	99	;'c'
  3283  1011  3465               	retlw	101	;'e'
  3284  1012  346E               	retlw	110	;'n'
  3285  1013  3464               	retlw	100	;'d'
  3286  1014  3469               	retlw	105	;'i'
  3287  1015  3464               	retlw	100	;'d'
  3288  1016  346F               	retlw	111	;'o'
  3289  1017  3400               	retlw	0
  3290                           
  3291                           	psect	stringtext3
  3292  1018                     __pstringtext3:
  3293  1018                     STR_5:
  3294  1018  3461               	retlw	97	;'a'
  3295  1019  3470               	retlw	112	;'p'
  3296  101A  3461               	retlw	97	;'a'
  3297  101B  3467               	retlw	103	;'g'
  3298  101C  3461               	retlw	97	;'a'
  3299  101D  3464               	retlw	100	;'d'
  3300  101E  346F               	retlw	111	;'o'
  3301  101F  3400               	retlw	0
  3302                           
  3303                           	psect	stringtext4
  3304  1020                     __pstringtext4:
  3305  1020                     STR_2:
  3306  1020  3425               	retlw	37	;'%'
  3307  1021  3464               	retlw	100	;'d'
  3308  1022  340A               	retlw	10
  3309  1023  3400               	retlw	0
  3310                           
  3311                           	psect	stringtext5
  3312  0000                     __pstringtext5:
  3313  1018                     
  3314                           	psect	cinit
  3315  002D                     start_initialization:	
  3316                           ; #config settings
  3317                           
  3318  002D                     __initialization:
  3319                           
  3320                           ; Clear objects allocated to BANK0
  3321  002D  0020               	movlb	0	; select bank0
  3322  002E  01E8               	clrf	__pbssBANK0& (0+127)
  3323  002F  01E9               	clrf	(__pbssBANK0+1)& (0+127)
  3324  0030  01EA               	clrf	(__pbssBANK0+2)& (0+127)
  3325  0031  01EB               	clrf	(__pbssBANK0+3)& (0+127)
  3326                           
  3327                           ; Clear objects allocated to BANK1
  3328  0032  30A0               	movlw	low __pbssBANK1
  3329  0033  0084               	movwf	4
  3330  0034  3000               	movlw	high __pbssBANK1
  3331  0035  0085               	movwf	5
  3332  0036  3024               	movlw	36
  3333  0037  318E  26F7  3180   	fcall	clear_ram0
  3334                           
  3335                           ; Clear objects allocated to BANK2
  3336  003A  3020               	movlw	low __pbssBANK2
  3337  003B  0084               	movwf	4
  3338  003C  3001               	movlw	high __pbssBANK2
  3339  003D  0085               	movwf	5
  3340  003E  3034               	movlw	52
  3341  003F  318E  26F7  3180   	fcall	clear_ram0
  3342  0042                     end_of_initialization:	
  3343                           ;End of C runtime variable initialization code
  3344                           
  3345  0042                     __end_of__initialization:
  3346  0042  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3347  0043  0020               	movlb	0
  3348  0044  3186  2E37         	ljmp	_main	;jump to C main() function
  3349                           
  3350                           	psect	bssBANK0
  3351  0068                     __pbssBANK0:
  3352  0068                     _eusartRxTail:
  3353  0068                     	ds	1
  3354  0069                     _eusartRxHead:
  3355  0069                     	ds	1
  3356  006A                     _eusartTxTail:
  3357  006A                     	ds	1
  3358  006B                     _eusartTxHead:
  3359  006B                     	ds	1
  3360                           
  3361                           	psect	bssBANK1
  3362  00A0                     __pbssBANK1:
  3363  00A0                     _eusartRxStatusBuffer:
  3364  00A0                     	ds	8
  3365  00A8                     _eusartRxBuffer:
  3366  00A8                     	ds	8
  3367  00B0                     _eusartTxBuffer:
  3368  00B0                     	ds	8
  3369  00B8                     _nout:
  3370  00B8                     	ds	2
  3371  00BA                     _width:
  3372  00BA                     	ds	2
  3373  00BC                     _prec:
  3374  00BC                     	ds	2
  3375  00BE                     _flags:
  3376  00BE                     	ds	2
  3377  00C0                     _contador_rx:
  3378  00C0                     	ds	1
  3379  00C1                     _caracter_rx:
  3380  00C1                     	ds	1
  3381  00C2                     _eusartRxLastError:
  3382  00C2                     	ds	1
  3383  00C3                     _eusartRxCount:
  3384  00C3                     	ds	1
  3385                           
  3386                           	psect	bssBANK2
  3387  0120                     __pbssBANK2:
  3388  0120                     _dbuf:
  3389  0120                     	ds	32
  3390  0140                     _buffer_rx:
  3391  0140                     	ds	20
  3392                           
  3393                           	psect	clrtext
  3394  0EF7                     clear_ram0:	
  3395                           ;	Called with FSR0 containing the base address, and
  3396                           ;	WREG with the size to clear
  3397                           
  3398  0EF7  0064               	clrwdt	;clear the watchdog before getting into this loop
  3399  0EF8                     clrloop0:
  3400  0EF8  0180               	clrf	0	;clear RAM location pointed to by FSR
  3401  0EF9  3101               	addfsr 0,1
  3402  0EFA  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3403  0EFB  2EF8               	goto	clrloop0	;have we reached the end yet?
  3404  0EFC  3400               	retlw	0	;all done for this memory range, return
  3405                           
  3406                           	psect	cstackBANK1
  3407  00C4                     __pcstackBANK1:
  3408  00C4                     vfpfcnvrt@ll:
  3409                           
  3410                           ; 8 bytes @ 0x0
  3411  00C4                     	ds	8
  3412  00CC                     vfpfcnvrt@fp:
  3413                           
  3414                           ; 1 bytes @ 0x8
  3415  00CC                     	ds	1
  3416  00CD                     ??_vfprintf:
  3417                           
  3418                           ; 1 bytes @ 0x9
  3419  00CD                     	ds	2
  3420  00CF                     vfprintf@fp:
  3421                           
  3422                           ; 1 bytes @ 0xB
  3423  00CF                     	ds	1
  3424  00D0                     vfprintf@cfmt:
  3425                           
  3426                           ; 2 bytes @ 0xC
  3427  00D0                     	ds	2
  3428  00D2                     ?_printf:
  3429  00D2                     printf@fmt:	
  3430                           ; 2 bytes @ 0xE
  3431                           
  3432                           
  3433                           ; 2 bytes @ 0xE
  3434  00D2                     	ds	4
  3435  00D6                     ??_printf:
  3436                           
  3437                           ; 1 bytes @ 0x12
  3438  00D6                     	ds	1
  3439  00D7                     printf@ap:
  3440                           
  3441                           ; 1 bytes @ 0x13
  3442  00D7                     	ds	1
  3443  00D8                     ??_main:
  3444                           
  3445                           ; 1 bytes @ 0x14
  3446  00D8                     	ds	2
  3447  00DA                     main@i:
  3448                           
  3449                           ; 2 bytes @ 0x16
  3450  00DA                     	ds	2
  3451                           
  3452                           	psect	cstackCOMMON
  3453  0070                     __pcstackCOMMON:
  3454  0070                     ?_PMD_Initialize:
  3455  0070                     ?_OSCILLATOR_Initialize:	
  3456                           ; 1 bytes @ 0x0
  3457                           
  3458  0070                     ?_EUSART_Initialize:	
  3459                           ; 1 bytes @ 0x0
  3460                           
  3461  0070                     ?_EUSART_Receive_ISR:	
  3462                           ; 1 bytes @ 0x0
  3463                           
  3464  0070                     ?_EUSART_Transmit_ISR:	
  3465                           ; 1 bytes @ 0x0
  3466                           
  3467  0070                     ??_EUSART_Transmit_ISR:	
  3468                           ; 1 bytes @ 0x0
  3469                           
  3470  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  3471                           ; 1 bytes @ 0x0
  3472                           
  3473  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  3474                           ; 1 bytes @ 0x0
  3475                           
  3476  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  3477                           ; 1 bytes @ 0x0
  3478                           
  3479  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  3480                           ; 1 bytes @ 0x0
  3481                           
  3482  0070                     ?_EUSART_DefaultErrorHandler:	
  3483                           ; 1 bytes @ 0x0
  3484                           
  3485  0070                     ?_EUSART_RxDataHandler:	
  3486                           ; 1 bytes @ 0x0
  3487                           
  3488  0070                     ??_EUSART_RxDataHandler:	
  3489                           ; 1 bytes @ 0x0
  3490                           
  3491  0070                     ?_strchr:	
  3492                           ; 1 bytes @ 0x0
  3493                           
  3494  0070                     ?_INTERRUPT_InterruptManager:	
  3495                           ; 1 bytes @ 0x0
  3496                           
  3497  0070                     ?_PIN_MANAGER_Initialize:	
  3498                           ; 1 bytes @ 0x0
  3499                           
  3500  0070                     ?_SYSTEM_Initialize:	
  3501                           ; 1 bytes @ 0x0
  3502                           
  3503  0070                     ?_main:	
  3504                           ; 1 bytes @ 0x0
  3505                           
  3506  0070                     ?_EUSART_Read:	
  3507                           ; 1 bytes @ 0x0
  3508                           
  3509  0070                     ??_EUSART_Read:	
  3510                           ; 1 bytes @ 0x0
  3511                           
  3512  0070                     ?_EUSART_Write:	
  3513                           ; 1 bytes @ 0x0
  3514                           
  3515  0070                     ?_putch:	
  3516                           ; 1 bytes @ 0x0
  3517                           
  3518  0070                     ?_strncmp:	
  3519                           ; 1 bytes @ 0x0
  3520                           
  3521  0070                     ?i1_strlen:	
  3522                           ; 2 bytes @ 0x0
  3523                           
  3524  0070                     strchr@c:	
  3525                           ; 2 bytes @ 0x0
  3526                           
  3527  0070                     strncmp@_r:	
  3528                           ; 2 bytes @ 0x0
  3529                           
  3530  0070                     i1strlen@s:	
  3531                           ; 2 bytes @ 0x0
  3532                           
  3533                           
  3534                           ; 2 bytes @ 0x0
  3535  0070                     	ds	1
  3536  0071                     ??_EUSART_DefaultErrorHandler:
  3537  0071                     EUSART_Read@readValue:	
  3538                           ; 1 bytes @ 0x1
  3539                           
  3540                           
  3541                           ; 1 bytes @ 0x1
  3542  0071                     	ds	1
  3543  0072                     ??_strchr:
  3544  0072                     ??i1_strlen:	
  3545                           ; 1 bytes @ 0x2
  3546                           
  3547  0072                     strchr@s:	
  3548                           ; 1 bytes @ 0x2
  3549                           
  3550  0072                     strncmp@n:	
  3551                           ; 1 bytes @ 0x2
  3552                           
  3553                           
  3554                           ; 2 bytes @ 0x2
  3555  0072                     	ds	1
  3556  0073                     i1strlen@a:
  3557                           
  3558                           ; 2 bytes @ 0x3
  3559  0073                     	ds	1
  3560  0074                     ??_strncmp:
  3561                           
  3562                           ; 1 bytes @ 0x4
  3563  0074                     	ds	1
  3564  0075                     strncmp@_l:
  3565                           
  3566                           ; 1 bytes @ 0x5
  3567  0075                     	ds	1
  3568  0076                     strncmp@r:
  3569                           
  3570                           ; 2 bytes @ 0x6
  3571  0076                     	ds	2
  3572  0078                     strncmp@l:
  3573                           
  3574                           ; 1 bytes @ 0x8
  3575  0078                     	ds	1
  3576  0079                     ?_strstr:
  3577  0079                     strstr@n:	
  3578                           ; 1 bytes @ 0x9
  3579                           
  3580                           
  3581                           ; 2 bytes @ 0x9
  3582  0079                     	ds	2
  3583  007B                     ??_strstr:
  3584                           
  3585                           ; 1 bytes @ 0xB
  3586  007B                     	ds	3
  3587  007E                     ??_INTERRUPT_InterruptManager:
  3588                           
  3589                           	psect	cstackBANK0
  3590  0020                     __pcstackBANK0:	
  3591                           ; 1 bytes @ 0xE
  3592                           
  3593  0020                     strstr@nl:
  3594                           
  3595                           ; 2 bytes @ 0x0
  3596  0020                     	ds	2
  3597  0022                     strstr@h:
  3598                           
  3599                           ; 1 bytes @ 0x2
  3600  0022                     	ds	1
  3601  0023                     ??_EUSART_Receive_ISR:
  3602                           
  3603                           ; 1 bytes @ 0x3
  3604  0023                     	ds	1
  3605  0024                     ??_PMD_Initialize:
  3606  0024                     ??_OSCILLATOR_Initialize:	
  3607                           ; 1 bytes @ 0x4
  3608                           
  3609  0024                     ?_EUSART_SetRxInterruptHandler:	
  3610                           ; 1 bytes @ 0x4
  3611                           
  3612  0024                     ?_EUSART_SetTxInterruptHandler:	
  3613                           ; 1 bytes @ 0x4
  3614                           
  3615  0024                     ?_EUSART_SetFramingErrorHandler:	
  3616                           ; 1 bytes @ 0x4
  3617                           
  3618  0024                     ?_EUSART_SetOverrunErrorHandler:	
  3619                           ; 1 bytes @ 0x4
  3620                           
  3621  0024                     ?_EUSART_SetErrorHandler:	
  3622                           ; 1 bytes @ 0x4
  3623                           
  3624  0024                     ??_PIN_MANAGER_Initialize:	
  3625                           ; 1 bytes @ 0x4
  3626                           
  3627  0024                     ??_EUSART_Write:	
  3628                           ; 1 bytes @ 0x4
  3629                           
  3630  0024                     ?_strlen:	
  3631                           ; 1 bytes @ 0x4
  3632                           
  3633  0024                     ?___aodiv:	
  3634                           ; 2 bytes @ 0x4
  3635                           
  3636  0024                     ?___aomod:	
  3637                           ; 8 bytes @ 0x4
  3638                           
  3639  0024                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3640                           ; 8 bytes @ 0x4
  3641                           
  3642  0024                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3643                           ; 2 bytes @ 0x4
  3644                           
  3645  0024                     EUSART_SetErrorHandler@interruptHandler:	
  3646                           ; 2 bytes @ 0x4
  3647                           
  3648  0024                     EUSART_SetTxInterruptHandler@interruptHandler:	
  3649                           ; 2 bytes @ 0x4
  3650                           
  3651  0024                     EUSART_SetRxInterruptHandler@interruptHandler:	
  3652                           ; 2 bytes @ 0x4
  3653                           
  3654  0024                     strlen@s:	
  3655                           ; 2 bytes @ 0x4
  3656                           
  3657  0024                     ___aodiv@divisor:	
  3658                           ; 2 bytes @ 0x4
  3659                           
  3660  0024                     ___aomod@divisor:	
  3661                           ; 8 bytes @ 0x4
  3662                           
  3663                           
  3664                           ; 8 bytes @ 0x4
  3665  0024                     	ds	1
  3666  0025                     EUSART_Write@txData:
  3667                           
  3668                           ; 1 bytes @ 0x5
  3669  0025                     	ds	1
  3670  0026                     ??_EUSART_Initialize:
  3671  0026                     ??_EUSART_SetRxInterruptHandler:	
  3672                           ; 1 bytes @ 0x6
  3673                           
  3674  0026                     ??_EUSART_SetTxInterruptHandler:	
  3675                           ; 1 bytes @ 0x6
  3676                           
  3677  0026                     ??_EUSART_SetFramingErrorHandler:	
  3678                           ; 1 bytes @ 0x6
  3679                           
  3680  0026                     ??_EUSART_SetOverrunErrorHandler:	
  3681                           ; 1 bytes @ 0x6
  3682                           
  3683  0026                     ??_EUSART_SetErrorHandler:	
  3684                           ; 1 bytes @ 0x6
  3685                           
  3686  0026                     ??_strlen:	
  3687                           ; 1 bytes @ 0x6
  3688                           
  3689  0026                     ??_putch:	
  3690                           ; 1 bytes @ 0x6
  3691                           
  3692  0026                     putch@txData:	
  3693                           ; 1 bytes @ 0x6
  3694                           
  3695                           
  3696                           ; 1 bytes @ 0x6
  3697  0026                     	ds	1
  3698  0027                     ??_SYSTEM_Initialize:
  3699  0027                     ?_fputc:	
  3700                           ; 1 bytes @ 0x7
  3701                           
  3702  0027                     fputc@c:	
  3703                           ; 2 bytes @ 0x7
  3704                           
  3705  0027                     strlen@a:	
  3706                           ; 2 bytes @ 0x7
  3707                           
  3708                           
  3709                           ; 2 bytes @ 0x7
  3710  0027                     	ds	2
  3711  0029                     fputc@fp:
  3712                           
  3713                           ; 1 bytes @ 0x9
  3714  0029                     	ds	1
  3715  002A                     ??_fputc:
  3716                           
  3717                           ; 1 bytes @ 0xA
  3718  002A                     	ds	2
  3719  002C                     ___aodiv@dividend:
  3720  002C                     ___aomod@dividend:	
  3721                           ; 8 bytes @ 0xC
  3722                           
  3723                           
  3724                           ; 8 bytes @ 0xC
  3725  002C                     	ds	3
  3726  002F                     ?_fputs:
  3727  002F                     fputs@fp:	
  3728                           ; 2 bytes @ 0xF
  3729                           
  3730                           
  3731                           ; 1 bytes @ 0xF
  3732  002F                     	ds	1
  3733  0030                     ??_fputs:
  3734                           
  3735                           ; 1 bytes @ 0x10
  3736  0030                     	ds	3
  3737  0033                     fputs@c:
  3738                           
  3739                           ; 1 bytes @ 0x13
  3740  0033                     	ds	1
  3741  0034                     ??___aodiv:
  3742  0034                     ??___aomod:	
  3743                           ; 1 bytes @ 0x14
  3744                           
  3745  0034                     fputs@i:	
  3746                           ; 1 bytes @ 0x14
  3747                           
  3748                           
  3749                           ; 2 bytes @ 0x14
  3750  0034                     	ds	1
  3751  0035                     ___aodiv@counter:
  3752  0035                     ___aomod@counter:	
  3753                           ; 1 bytes @ 0x15
  3754                           
  3755                           
  3756                           ; 1 bytes @ 0x15
  3757  0035                     	ds	1
  3758  0036                     ___aodiv@sign:
  3759  0036                     ___aomod@sign:	
  3760                           ; 1 bytes @ 0x16
  3761                           
  3762  0036                     fputs@s:	
  3763                           ; 1 bytes @ 0x16
  3764                           
  3765                           
  3766                           ; 1 bytes @ 0x16
  3767  0036                     	ds	1
  3768  0037                     ?_abs:
  3769  0037                     ?_pad:	
  3770                           ; 2 bytes @ 0x17
  3771                           
  3772  0037                     pad@buf:	
  3773                           ; 2 bytes @ 0x17
  3774                           
  3775  0037                     abs@a:	
  3776                           ; 1 bytes @ 0x17
  3777                           
  3778  0037                     ___aodiv@quotient:	
  3779                           ; 2 bytes @ 0x17
  3780                           
  3781                           
  3782                           ; 8 bytes @ 0x17
  3783  0037                     	ds	1
  3784  0038                     pad@p:
  3785                           
  3786                           ; 2 bytes @ 0x18
  3787  0038                     	ds	1
  3788  0039                     ??_abs:
  3789                           
  3790                           ; 1 bytes @ 0x19
  3791  0039                     	ds	1
  3792  003A                     ??_pad:
  3793                           
  3794                           ; 1 bytes @ 0x1A
  3795  003A                     	ds	1
  3796  003B                     pad@i:
  3797                           
  3798                           ; 2 bytes @ 0x1B
  3799  003B                     	ds	2
  3800  003D                     pad@w:
  3801                           
  3802                           ; 2 bytes @ 0x1D
  3803  003D                     	ds	2
  3804  003F                     pad@fp:
  3805                           
  3806                           ; 1 bytes @ 0x1F
  3807  003F                     	ds	1
  3808  0040                     ?_dtoa:
  3809  0040                     dtoa@d:	
  3810                           ; 2 bytes @ 0x20
  3811                           
  3812                           
  3813                           ; 8 bytes @ 0x20
  3814  0040                     	ds	8
  3815  0048                     ??_dtoa:
  3816                           
  3817                           ; 1 bytes @ 0x28
  3818  0048                     	ds	3
  3819  004B                     _dtoa$944:
  3820                           
  3821                           ; 2 bytes @ 0x2B
  3822  004B                     	ds	2
  3823  004D                     dtoa@fp:
  3824                           
  3825                           ; 1 bytes @ 0x2D
  3826  004D                     	ds	1
  3827  004E                     dtoa@p:
  3828                           
  3829                           ; 2 bytes @ 0x2E
  3830  004E                     	ds	2
  3831  0050                     dtoa@w:
  3832                           
  3833                           ; 2 bytes @ 0x30
  3834  0050                     	ds	2
  3835  0052                     dtoa@s:
  3836                           
  3837                           ; 2 bytes @ 0x32
  3838  0052                     	ds	2
  3839  0054                     dtoa@n:
  3840                           
  3841                           ; 8 bytes @ 0x34
  3842  0054                     	ds	8
  3843  005C                     dtoa@i:
  3844                           
  3845                           ; 2 bytes @ 0x3C
  3846  005C                     	ds	2
  3847  005E                     ?_vfpfcnvrt:
  3848  005E                     vfpfcnvrt@fmt:	
  3849                           ; 2 bytes @ 0x3E
  3850                           
  3851                           
  3852                           ; 1 bytes @ 0x3E
  3853  005E                     	ds	1
  3854  005F                     vfpfcnvrt@ap:
  3855                           
  3856                           ; 1 bytes @ 0x3F
  3857  005F                     	ds	1
  3858  0060                     ??_vfpfcnvrt:
  3859                           
  3860                           ; 1 bytes @ 0x40
  3861  0060                     	ds	5
  3862  0065                     ?_vfprintf:
  3863  0065                     vfprintf@fmt:	
  3864                           ; 2 bytes @ 0x45
  3865                           
  3866                           
  3867                           ; 2 bytes @ 0x45
  3868  0065                     	ds	2
  3869  0067                     vfprintf@ap:
  3870                           
  3871                           ; 1 bytes @ 0x47
  3872  0067                     	ds	1
  3873                           
  3874                           	psect	maintext
  3875  0637                     __pmaintext:	
  3876 ;;
  3877 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3878 ;;
  3879 ;; *************** function _main *****************
  3880 ;; Defined at:
  3881 ;;		line 49 in file "main.c"
  3882 ;; Parameters:    Size  Location     Type
  3883 ;;		None
  3884 ;; Auto vars:     Size  Location     Type
  3885 ;;  i               2   22[BANK1 ] int 
  3886 ;; Return value:  Size  Location     Type
  3887 ;;                  1    wreg      void 
  3888 ;; Registers used:
  3889 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3890 ;; Tracked objects:
  3891 ;;		On entry : B1F/0
  3892 ;;		On exit  : 0/0
  3893 ;;		Unchanged: 0/0
  3894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3896 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3897 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3898 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3899 ;;Total ram usage:        4 bytes
  3900 ;; Hardware stack levels required when called: 13
  3901 ;; This function calls:
  3902 ;;		_SYSTEM_Initialize
  3903 ;;		_printf
  3904 ;; This function is called by:
  3905 ;;		Startup code after reset
  3906 ;; This function uses a non-reentrant model
  3907 ;;
  3908                           
  3909                           
  3910                           ;psect for function _main
  3911  0637                     _main:
  3912  0637                     l2425:	
  3913                           ;incstack = 0
  3914                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3915                           
  3916                           
  3917                           ;main.c: 51:     int i = 0;
  3918  0637  0021               	movlb	1	; select bank1
  3919  0638  01DA               	clrf	main@i^(0+128)
  3920  0639  01DB               	clrf	(main@i+1)^(0+128)
  3921  063A                     l2427:
  3922                           
  3923                           ;main.c: 53:     SYSTEM_Initialize();
  3924  063A  3187  27EE  3186   	fcall	_SYSTEM_Initialize
  3925  063D                     l2429:
  3926                           
  3927                           ;main.c: 59:     (INTCONbits.GIE = 1);
  3928  063D  178B               	bsf	11,7	;volatile
  3929  063E                     l2431:
  3930                           
  3931                           ;main.c: 62:     (INTCONbits.PEIE = 1);
  3932  063E  170B               	bsf	11,6	;volatile
  3933  063F                     l2433:
  3934                           
  3935                           ;main.c: 72:     _delay((unsigned long)((100)*(8000000/4000.0)));
  3936  063F  3002               	movlw	2
  3937  0640  0021               	movlb	1	; select bank1
  3938  0641  00D9               	movwf	(??_main^(0+128)+1)
  3939  0642  3004               	movlw	4
  3940  0643  00D8               	movwf	??_main^(0+128)
  3941  0644  30BA               	movlw	186
  3942  0645                     u2397:
  3943  0645  0B89               	decfsz	9,f
  3944  0646  2E45               	goto	u2397
  3945  0647  0BD8               	decfsz	??_main^(0+128),f
  3946  0648  2E45               	goto	u2397
  3947  0649  0BD9               	decfsz	(??_main^(0+128)+1),f
  3948  064A  2E45               	goto	u2397
  3949  064B  0000               	nop
  3950  064C                     l2435:
  3951                           
  3952                           ;main.c: 73:     printf("hola EUSART\n\r");
  3953  064C  3000               	movlw	low (STR_1| (0+32768))
  3954  064D  0021               	movlb	1	; select bank1
  3955  064E  00D2               	movwf	printf@fmt^(0+128)
  3956  064F  3090               	movlw	high (STR_1| (0+32768))
  3957  0650  00D3               	movwf	(printf@fmt^(0+128)+1)
  3958  0651  318F  2742  3186   	fcall	_printf
  3959  0654                     l2437:
  3960                           
  3961                           ;main.c: 75:     {;main.c: 76:         printf("%d\n",i++);
  3962  0654  3020               	movlw	low (STR_2| (0+32768))
  3963  0655  0021               	movlb	1	; select bank1
  3964  0656  00D2               	movwf	printf@fmt^(0+128)
  3965  0657  3090               	movlw	high (STR_2| (0+32768))
  3966  0658  00D3               	movwf	(printf@fmt^(0+128)+1)
  3967  0659  085B               	movf	(main@i+1)^(0+128),w
  3968  065A  00D5               	movwf	((?_printf+1)^(0+128)+2)
  3969  065B  085A               	movf	main@i^(0+128),w
  3970  065C  00D4               	movwf	(?_printf^(0+128)+2)
  3971  065D  318F  2742  3186   	fcall	_printf
  3972  0660                     l2439:
  3973  0660  3001               	movlw	1
  3974  0661  0021               	movlb	1	; select bank1
  3975  0662  07DA               	addwf	main@i^(0+128),f
  3976  0663  3000               	movlw	0
  3977  0664  3DDB               	addwfc	(main@i+1)^(0+128),f
  3978  0665                     l2441:
  3979  0665  1003               	clrc
  3980  0666  0020               	movlb	0	; select bank0
  3981  0667  1C16               	btfss	22,0	;volatile
  3982  0668  1403               	setc
  3983  0669  1803               	btfsc	3,0
  3984  066A  2E6C               	goto	u2371
  3985  066B  2E6F               	goto	u2370
  3986  066C                     u2371:
  3987  066C  0020               	movlb	0	; select bank0
  3988  066D  1416               	bsf	22,0	;volatile
  3989  066E  2E71               	goto	u2384
  3990  066F                     u2370:
  3991  066F  0020               	movlb	0	; select bank0
  3992  0670  1016               	bcf	22,0	;volatile
  3993  0671                     u2384:
  3994  0671                     l2443:
  3995                           
  3996                           ;main.c: 80:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  3997  0671  300B               	movlw	11
  3998  0672  0021               	movlb	1	; select bank1
  3999  0673  00D9               	movwf	(??_main^(0+128)+1)
  4000  0674  3026               	movlw	38
  4001  0675  00D8               	movwf	??_main^(0+128)
  4002  0676  305D               	movlw	93
  4003  0677                     u2407:
  4004  0677  0B89               	decfsz	9,f
  4005  0678  2E77               	goto	u2407
  4006  0679  0BD8               	decfsz	??_main^(0+128),f
  4007  067A  2E77               	goto	u2407
  4008  067B  0BD9               	decfsz	(??_main^(0+128)+1),f
  4009  067C  2E77               	goto	u2407
  4010  067D  3200               	nop2
  4011  067E  2E54               	goto	l2437
  4012  067F  3180  282B         	ljmp	start
  4013  0681                     __end_of_main:
  4014                           
  4015                           	psect	text1
  4016  0F42                     __ptext1:	
  4017 ;; *************** function _printf *****************
  4018 ;; Defined at:
  4019 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  4020 ;; Parameters:    Size  Location     Type
  4021 ;;  fmt             2   14[BANK1 ] PTR const unsigned char 
  4022 ;;		 -> STR_2(4), STR_1(14), 
  4023 ;; Auto vars:     Size  Location     Type
  4024 ;;  ret             2    0        int 
  4025 ;;  ap              1   19[BANK1 ] PTR void [1]
  4026 ;;		 -> ?_printf(2), 
  4027 ;; Return value:  Size  Location     Type
  4028 ;;                  2   14[BANK1 ] int 
  4029 ;; Registers used:
  4030 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4031 ;; Tracked objects:
  4032 ;;		On entry : 0/0
  4033 ;;		On exit  : 0/0
  4034 ;;		Unchanged: 0/0
  4035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4036 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4037 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4038 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4039 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  4040 ;;Total ram usage:        6 bytes
  4041 ;; Hardware stack levels used: 1
  4042 ;; Hardware stack levels required when called: 12
  4043 ;; This function calls:
  4044 ;;		_vfprintf
  4045 ;; This function is called by:
  4046 ;;		_main
  4047 ;; This function uses a non-reentrant model
  4048 ;;
  4049                           
  4050                           
  4051                           ;psect for function _printf
  4052  0F42                     _printf:
  4053  0F42                     l2419:	
  4054                           ;incstack = 0
  4055                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4056                           
  4057  0F42  30D4               	movlw	(low ((?_printf| 0+2)))& (0+255)
  4058  0F43  0021               	movlb	1	; select bank1
  4059  0F44  00D6               	movwf	??_printf^(0+128)
  4060  0F45  0856               	movf	??_printf^(0+128),w
  4061  0F46  00D7               	movwf	printf@ap^(0+128)
  4062  0F47                     l2421:
  4063  0F47  0853               	movf	(printf@fmt+1)^(0+128),w
  4064  0F48  0020               	movlb	0	; select bank0
  4065  0F49  00E6               	movwf	vfprintf@fmt+1
  4066  0F4A  0021               	movlb	1	; select bank1
  4067  0F4B  0852               	movf	printf@fmt^(0+128),w
  4068  0F4C  0020               	movlb	0	; select bank0
  4069  0F4D  00E5               	movwf	vfprintf@fmt
  4070  0F4E  30D7               	movlw	(low (printf@ap| 0))& (0+255)
  4071  0F4F  0021               	movlb	1	; select bank1
  4072  0F50  00D6               	movwf	??_printf^(0+128)
  4073  0F51  0856               	movf	??_printf^(0+128),w
  4074  0F52  0020               	movlb	0	; select bank0
  4075  0F53  00E7               	movwf	vfprintf@ap
  4076  0F54  3000               	movlw	0
  4077  0F55  3187  270A  318F   	fcall	_vfprintf
  4078  0F58                     l919:
  4079  0F58  0008               	return
  4080  0F59                     __end_of_printf:
  4081                           
  4082                           	psect	text2
  4083  070A                     __ptext2:	
  4084 ;; *************** function _vfprintf *****************
  4085 ;; Defined at:
  4086 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4087 ;; Parameters:    Size  Location     Type
  4088 ;;  fp              1    wreg     PTR struct _IO_FILE
  4089 ;;		 -> NULL(0), 
  4090 ;;  fmt             2   69[BANK0 ] PTR const unsigned char 
  4091 ;;		 -> STR_2(4), STR_1(14), 
  4092 ;;  ap              1   71[BANK0 ] PTR PTR void 
  4093 ;;		 -> printf@ap(1), 
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;  fp              1   11[BANK1 ] PTR struct _IO_FILE
  4096 ;;		 -> NULL(0), 
  4097 ;;  cfmt            2   12[BANK1 ] PTR unsigned char 
  4098 ;;		 -> STR_2(4), STR_1(14), 
  4099 ;; Return value:  Size  Location     Type
  4100 ;;                  2   69[BANK0 ] int 
  4101 ;; Registers used:
  4102 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4103 ;; Tracked objects:
  4104 ;;		On entry : 0/0
  4105 ;;		On exit  : 0/0
  4106 ;;		Unchanged: 0/0
  4107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4108 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4109 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4110 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4111 ;;      Totals:         0       3       5       0       0       0       0       0       0       0       0       0       
      +0       0
  4112 ;;Total ram usage:        8 bytes
  4113 ;; Hardware stack levels used: 1
  4114 ;; Hardware stack levels required when called: 11
  4115 ;; This function calls:
  4116 ;;		_vfpfcnvrt
  4117 ;; This function is called by:
  4118 ;;		_printf
  4119 ;; This function uses a non-reentrant model
  4120 ;;
  4121                           
  4122                           
  4123                           ;psect for function _vfprintf
  4124  070A                     _vfprintf:
  4125                           
  4126                           ;incstack = 0
  4127                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4128                           ;vfprintf@fp stored from wreg
  4129  070A  0021               	movlb	1	; select bank1
  4130  070B  00CF               	movwf	vfprintf@fp^(0+128)
  4131  070C                     l2407:
  4132                           
  4133                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  4134  070C  0020               	movlb	0	; select bank0
  4135  070D  0866               	movf	vfprintf@fmt+1,w
  4136  070E  0021               	movlb	1	; select bank1
  4137  070F  00D1               	movwf	(vfprintf@cfmt+1)^(0+128)
  4138  0710  0020               	movlb	0	; select bank0
  4139  0711  0865               	movf	vfprintf@fmt,w
  4140  0712  0021               	movlb	1	; select bank1
  4141  0713  00D0               	movwf	vfprintf@cfmt^(0+128)
  4142  0714                     l2409:
  4143                           
  4144                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  4145  0714  01B8               	clrf	_nout^(0+128)
  4146  0715  01B9               	clrf	(_nout+1)^(0+128)
  4147                           
  4148                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4149  0716  2F2F               	goto	l2413
  4150  0717                     l2411:
  4151                           
  4152                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  4153  0717  30D0               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  4154  0718  00CD               	movwf	??_vfprintf^(0+128)
  4155  0719  084D               	movf	??_vfprintf^(0+128),w
  4156  071A  0020               	movlb	0	; select bank0
  4157  071B  00DE               	movwf	vfpfcnvrt@fmt
  4158  071C  0867               	movf	vfprintf@ap,w
  4159  071D  0021               	movlb	1	; select bank1
  4160  071E  00CE               	movwf	(??_vfprintf+1)^(0+128)
  4161  071F  084E               	movf	(??_vfprintf+1)^(0+128),w
  4162  0720  0020               	movlb	0	; select bank0
  4163  0721  00DF               	movwf	vfpfcnvrt@ap
  4164  0722  0021               	movlb	1	; select bank1
  4165  0723  084F               	movf	vfprintf@fp^(0+128),w
  4166  0724  3182  22BB  3187   	fcall	_vfpfcnvrt
  4167  0727  0020               	movlb	0	; select bank0
  4168  0728  085E               	movf	?_vfpfcnvrt,w
  4169  0729  0021               	movlb	1	; select bank1
  4170  072A  07B8               	addwf	_nout^(0+128),f
  4171  072B  0020               	movlb	0	; select bank0
  4172  072C  085F               	movf	?_vfpfcnvrt+1,w
  4173  072D  0021               	movlb	1	; select bank1
  4174  072E  3DB9               	addwfc	(_nout+1)^(0+128),f
  4175  072F                     l2413:
  4176                           
  4177                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4178  072F  0850               	movf	vfprintf@cfmt^(0+128),w
  4179  0730  0084               	movwf	4
  4180  0731  0851               	movf	(vfprintf@cfmt+1)^(0+128),w
  4181  0732  0085               	movwf	5
  4182  0733  0012               	moviw fsr0++
  4183  0734  1D03               	btfss	3,2
  4184  0735  2F37               	goto	u2361
  4185  0736  2F38               	goto	u2360
  4186  0737                     u2361:
  4187  0737  2F17               	goto	l2411
  4188  0738                     u2360:
  4189  0738                     l2415:
  4190                           
  4191                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  4192  0738  0839               	movf	(_nout+1)^(0+128),w
  4193  0739  0020               	movlb	0	; select bank0
  4194  073A  00E6               	movwf	?_vfprintf+1
  4195  073B  0021               	movlb	1	; select bank1
  4196  073C  0838               	movf	_nout^(0+128),w
  4197  073D  0020               	movlb	0	; select bank0
  4198  073E  00E5               	movwf	?_vfprintf
  4199  073F                     l991:
  4200  073F  0008               	return
  4201  0740                     __end_of_vfprintf:
  4202                           
  4203                           	psect	text3
  4204  02BB                     __ptext3:	
  4205 ;; *************** function _vfpfcnvrt *****************
  4206 ;; Defined at:
  4207 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4208 ;; Parameters:    Size  Location     Type
  4209 ;;  fp              1    wreg     PTR struct _IO_FILE
  4210 ;;		 -> NULL(0), 
  4211 ;;  fmt             1   62[BANK0 ] PTR PTR unsigned char 
  4212 ;;		 -> vfprintf@cfmt(2), 
  4213 ;;  ap              1   63[BANK0 ] PTR PTR void 
  4214 ;;		 -> printf@ap(1), 
  4215 ;; Auto vars:     Size  Location     Type
  4216 ;;  fp              1    8[BANK1 ] PTR struct _IO_FILE
  4217 ;;		 -> NULL(0), 
  4218 ;;  ll              8    0[BANK1 ] long long 
  4219 ;;  llu             8    0        unsigned long long 
  4220 ;;  f               4    0        unsigned long long 
  4221 ;;  ct              3    0        unsigned char [3]
  4222 ;;  vp              2    0        PTR void 
  4223 ;;  i               2    0        int 
  4224 ;;  done            2    0        int 
  4225 ;;  cp              2    0        PTR unsigned char 
  4226 ;;  c               1    0        unsigned char 
  4227 ;; Return value:  Size  Location     Type
  4228 ;;                  2   62[BANK0 ] int 
  4229 ;; Registers used:
  4230 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4231 ;; Tracked objects:
  4232 ;;		On entry : 0/0
  4233 ;;		On exit  : 0/0
  4234 ;;		Unchanged: 0/0
  4235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4236 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4237 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  4238 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4239 ;;      Totals:         0       7       9       0       0       0       0       0       0       0       0       0       
      +0       0
  4240 ;;Total ram usage:       16 bytes
  4241 ;; Hardware stack levels used: 1
  4242 ;; Hardware stack levels required when called: 10
  4243 ;; This function calls:
  4244 ;;		_dtoa
  4245 ;;		_fputc
  4246 ;; This function is called by:
  4247 ;;		_vfprintf
  4248 ;; This function uses a non-reentrant model
  4249 ;;
  4250                           
  4251                           
  4252                           ;psect for function _vfpfcnvrt
  4253  02BB                     _vfpfcnvrt:
  4254                           
  4255                           ;incstack = 0
  4256                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4257                           ;vfpfcnvrt@fp stored from wreg
  4258  02BB  0021               	movlb	1	; select bank1
  4259  02BC  00CC               	movwf	vfpfcnvrt@fp^(0+128)
  4260  02BD                     l2363:
  4261                           
  4262                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  4263  02BD  0020               	movlb	0	; select bank0
  4264  02BE  085E               	movf	vfpfcnvrt@fmt,w
  4265  02BF  0086               	movwf	6
  4266  02C0  0187               	clrf	7
  4267  02C1  3F40               	moviw [0]fsr1
  4268  02C2  00E0               	movwf	??_vfpfcnvrt
  4269  02C3  3F41               	moviw [1]fsr1
  4270  02C4  00E1               	movwf	??_vfpfcnvrt+1
  4271  02C5  0860               	movf	??_vfpfcnvrt,w
  4272  02C6  0084               	movwf	4
  4273  02C7  0861               	movf	??_vfpfcnvrt+1,w
  4274  02C8  0085               	movwf	5
  4275  02C9  0012               	moviw fsr0++
  4276  02CA  3A25               	xorlw	37
  4277  02CB  1D03               	btfss	3,2
  4278  02CC  2ACE               	goto	u2321
  4279  02CD  2ACF               	goto	u2320
  4280  02CE                     u2321:
  4281  02CE  2B88               	goto	l2399
  4282  02CF                     u2320:
  4283  02CF                     l2365:
  4284                           
  4285                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  4286  02CF  085E               	movf	vfpfcnvrt@fmt,w
  4287  02D0  0086               	movwf	6
  4288  02D1  0187               	clrf	7
  4289  02D2  3001               	movlw	1
  4290  02D3  0781               	addwf	1,f
  4291  02D4  3141               	addfsr 1,1
  4292  02D5  1803               	skipnc
  4293  02D6  0A81               	incf	1,f
  4294  02D7                     l2367:
  4295                           
  4296                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  4297  02D7  0021               	movlb	1	; select bank1
  4298  02D8  01BA               	clrf	_width^(0+128)
  4299  02D9  01BB               	clrf	(_width+1)^(0+128)
  4300  02DA  01BE               	clrf	_flags^(0+128)
  4301  02DB  01BF               	clrf	(_flags+1)^(0+128)
  4302  02DC                     l2369:
  4303                           
  4304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  4305  02DC  30FF               	movlw	255
  4306  02DD  00BC               	movwf	_prec^(0+128)
  4307  02DE  30FF               	movlw	255
  4308  02DF  00BD               	movwf	(_prec^(0+128)+1)
  4309  02E0                     l2371:
  4310                           
  4311                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4312  02E0  0020               	movlb	0	; select bank0
  4313  02E1  085E               	movf	vfpfcnvrt@fmt,w
  4314  02E2  0086               	movwf	6
  4315  02E3  0187               	clrf	7
  4316  02E4  3F40               	moviw [0]fsr1
  4317  02E5  00E0               	movwf	??_vfpfcnvrt
  4318  02E6  3F41               	moviw [1]fsr1
  4319  02E7  00E1               	movwf	??_vfpfcnvrt+1
  4320  02E8  0860               	movf	??_vfpfcnvrt,w
  4321  02E9  0084               	movwf	4
  4322  02EA  0861               	movf	??_vfpfcnvrt+1,w
  4323  02EB  0085               	movwf	5
  4324  02EC  0012               	moviw fsr0++
  4325  02ED  3A64               	xorlw	100
  4326  02EE  1903               	btfsc	3,2
  4327  02EF  2AF1               	goto	u2331
  4328  02F0  2AF2               	goto	u2330
  4329  02F1                     u2331:
  4330  02F1  2B03               	goto	l2375
  4331  02F2                     u2330:
  4332  02F2                     l2373:
  4333  02F2  085E               	movf	vfpfcnvrt@fmt,w
  4334  02F3  0086               	movwf	6
  4335  02F4  0187               	clrf	7
  4336  02F5  3F40               	moviw [0]fsr1
  4337  02F6  00E0               	movwf	??_vfpfcnvrt
  4338  02F7  3F41               	moviw [1]fsr1
  4339  02F8  00E1               	movwf	??_vfpfcnvrt+1
  4340  02F9  0860               	movf	??_vfpfcnvrt,w
  4341  02FA  0084               	movwf	4
  4342  02FB  0861               	movf	??_vfpfcnvrt+1,w
  4343  02FC  0085               	movwf	5
  4344  02FD  0012               	moviw fsr0++
  4345  02FE  3A69               	xorlw	105
  4346  02FF  1D03               	btfss	3,2
  4347  0300  2B02               	goto	u2341
  4348  0301  2B03               	goto	u2340
  4349  0302                     u2341:
  4350  0302  2B51               	goto	l2383
  4351  0303                     u2340:
  4352  0303                     l2375:
  4353                           
  4354                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  4355  0303  085E               	movf	vfpfcnvrt@fmt,w
  4356  0304  0086               	movwf	6
  4357  0305  0187               	clrf	7
  4358  0306  3001               	movlw	1
  4359  0307  0781               	addwf	1,f
  4360  0308  3141               	addfsr 1,1
  4361  0309  1803               	skipnc
  4362  030A  0A81               	incf	1,f
  4363  030B                     l2377:
  4364                           
  4365                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4366  030B  085F               	movf	vfpfcnvrt@ap,w
  4367  030C  0086               	movwf	6
  4368  030D  0187               	clrf	7
  4369  030E  0801               	movf	1,w
  4370  030F  0084               	movwf	4
  4371  0310  0185               	clrf	5
  4372  0311  3002               	movlw	2
  4373  0312  0781               	addwf	1,f
  4374  0313  3F00               	moviw [0]fsr0
  4375  0314  00E0               	movwf	??_vfpfcnvrt
  4376  0315  3F01               	moviw [1]fsr0
  4377  0316  00E1               	movwf	??_vfpfcnvrt+1
  4378  0317  0860               	movf	??_vfpfcnvrt,w
  4379  0318  0021               	movlb	1	; select bank1
  4380  0319  00C4               	movwf	vfpfcnvrt@ll^(0+128)
  4381  031A  0020               	movlb	0	; select bank0
  4382  031B  0861               	movf	??_vfpfcnvrt+1,w
  4383  031C  0021               	movlb	1	; select bank1
  4384  031D  00C5               	movwf	(vfpfcnvrt@ll+1)^(0+128)
  4385  031E  0D89               	rlf	9,f
  4386  031F  3B89               	subwfb	9,f
  4387  0320  0989               	comf	9,f
  4388  0321  00C6               	movwf	(vfpfcnvrt@ll+2)^(0+128)
  4389  0322  00C7               	movwf	(vfpfcnvrt@ll+3)^(0+128)
  4390  0323  00C8               	movwf	(vfpfcnvrt@ll+4)^(0+128)
  4391  0324  00C9               	movwf	(vfpfcnvrt@ll+5)^(0+128)
  4392  0325  00CA               	movwf	(vfpfcnvrt@ll+6)^(0+128)
  4393  0326  00CB               	movwf	(vfpfcnvrt@ll+7)^(0+128)
  4394  0327                     l2379:
  4395                           
  4396                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  4397  0327  0844               	movf	vfpfcnvrt@ll^(0+128),w
  4398  0328  0020               	movlb	0	; select bank0
  4399  0329  00C0               	movwf	dtoa@d
  4400  032A  0021               	movlb	1	; select bank1
  4401  032B  0845               	movf	(vfpfcnvrt@ll+1)^(0+128),w
  4402  032C  0020               	movlb	0	; select bank0
  4403  032D  00C1               	movwf	dtoa@d+1
  4404  032E  0021               	movlb	1	; select bank1
  4405  032F  0846               	movf	(vfpfcnvrt@ll+2)^(0+128),w
  4406  0330  0020               	movlb	0	; select bank0
  4407  0331  00C2               	movwf	dtoa@d+2
  4408  0332  0021               	movlb	1	; select bank1
  4409  0333  0847               	movf	(vfpfcnvrt@ll+3)^(0+128),w
  4410  0334  0020               	movlb	0	; select bank0
  4411  0335  00C3               	movwf	dtoa@d+3
  4412  0336  0021               	movlb	1	; select bank1
  4413  0337  0848               	movf	(vfpfcnvrt@ll+4)^(0+128),w
  4414  0338  0020               	movlb	0	; select bank0
  4415  0339  00C4               	movwf	dtoa@d+4
  4416  033A  0021               	movlb	1	; select bank1
  4417  033B  0849               	movf	(vfpfcnvrt@ll+5)^(0+128),w
  4418  033C  0020               	movlb	0	; select bank0
  4419  033D  00C5               	movwf	dtoa@d+5
  4420  033E  0021               	movlb	1	; select bank1
  4421  033F  084A               	movf	(vfpfcnvrt@ll+6)^(0+128),w
  4422  0340  0020               	movlb	0	; select bank0
  4423  0341  00C6               	movwf	dtoa@d+6
  4424  0342  0021               	movlb	1	; select bank1
  4425  0343  084B               	movf	(vfpfcnvrt@ll+7)^(0+128),w
  4426  0344  0020               	movlb	0	; select bank0
  4427  0345  00C7               	movwf	dtoa@d+7
  4428  0346  0021               	movlb	1	; select bank1
  4429  0347  084C               	movf	vfpfcnvrt@fp^(0+128),w
  4430  0348  3180  2046  3182   	fcall	_dtoa
  4431  034B  0020               	movlb	0	; select bank0
  4432  034C  0841               	movf	?_dtoa+1,w
  4433  034D  00DF               	movwf	?_vfpfcnvrt+1
  4434  034E  0840               	movf	?_dtoa,w
  4435  034F  00DE               	movwf	?_vfpfcnvrt
  4436  0350  2BAD               	goto	l984
  4437  0351                     l2383:
  4438                           
  4439                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  4440  0351  085E               	movf	vfpfcnvrt@fmt,w
  4441  0352  0086               	movwf	6
  4442  0353  0187               	clrf	7
  4443  0354  3F40               	moviw [0]fsr1
  4444  0355  00E0               	movwf	??_vfpfcnvrt
  4445  0356  3F41               	moviw [1]fsr1
  4446  0357  00E1               	movwf	??_vfpfcnvrt+1
  4447  0358  0860               	movf	??_vfpfcnvrt,w
  4448  0359  0084               	movwf	4
  4449  035A  0861               	movf	??_vfpfcnvrt+1,w
  4450  035B  0085               	movwf	5
  4451  035C  0012               	moviw fsr0++
  4452  035D  3A25               	xorlw	37
  4453  035E  1D03               	btfss	3,2
  4454  035F  2B61               	goto	u2351
  4455  0360  2B62               	goto	u2350
  4456  0361                     u2351:
  4457  0361  2B7D               	goto	l2393
  4458  0362                     u2350:
  4459  0362                     l2385:
  4460                           
  4461                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  4462  0362  085E               	movf	vfpfcnvrt@fmt,w
  4463  0363  0086               	movwf	6
  4464  0364  0187               	clrf	7
  4465  0365  3001               	movlw	1
  4466  0366  0781               	addwf	1,f
  4467  0367  3141               	addfsr 1,1
  4468  0368  1803               	skipnc
  4469  0369  0A81               	incf	1,f
  4470  036A                     l2387:
  4471                           
  4472                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  4473  036A  3025               	movlw	37
  4474  036B  00A7               	movwf	fputc@c
  4475  036C  3000               	movlw	0
  4476  036D  00A8               	movwf	fputc@c+1
  4477  036E  0021               	movlb	1	; select bank1
  4478  036F  084C               	movf	vfpfcnvrt@fp^(0+128),w
  4479  0370  0020               	movlb	0	; select bank0
  4480  0371  00E0               	movwf	??_vfpfcnvrt
  4481  0372  0860               	movf	??_vfpfcnvrt,w
  4482  0373  00A9               	movwf	fputc@fp
  4483  0374  3186  26C9  3182   	fcall	_fputc
  4484  0377                     l2389:
  4485                           
  4486                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  4487  0377  3001               	movlw	1
  4488  0378  0020               	movlb	0	; select bank0
  4489  0379  00DE               	movwf	?_vfpfcnvrt
  4490  037A  3000               	movlw	0
  4491  037B  00DF               	movwf	?_vfpfcnvrt+1
  4492  037C  2BAD               	goto	l984
  4493  037D                     l2393:
  4494                           
  4495                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  4496  037D  085E               	movf	vfpfcnvrt@fmt,w
  4497  037E  0086               	movwf	6
  4498  037F  0187               	clrf	7
  4499  0380  3001               	movlw	1
  4500  0381  0781               	addwf	1,f
  4501  0382  3141               	addfsr 1,1
  4502  0383  1803               	skipnc
  4503  0384  0A81               	incf	1,f
  4504  0385                     l2395:
  4505                           
  4506                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  4507  0385  01DE               	clrf	?_vfpfcnvrt
  4508  0386  01DF               	clrf	?_vfpfcnvrt+1
  4509  0387  2BAD               	goto	l984
  4510  0388                     l2399:
  4511                           
  4512                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  4513  0388  085E               	movf	vfpfcnvrt@fmt,w
  4514  0389  0086               	movwf	6
  4515  038A  0187               	clrf	7
  4516  038B  3F40               	moviw [0]fsr1
  4517  038C  00E0               	movwf	??_vfpfcnvrt
  4518  038D  3F41               	moviw [1]fsr1
  4519  038E  00E1               	movwf	??_vfpfcnvrt+1
  4520  038F  0860               	movf	??_vfpfcnvrt,w
  4521  0390  0084               	movwf	4
  4522  0391  0861               	movf	??_vfpfcnvrt+1,w
  4523  0392  0085               	movwf	5
  4524  0393  0800               	movf	0,w	;code access
  4525  0394  00E2               	movwf	??_vfpfcnvrt+2
  4526  0395  01E3               	clrf	??_vfpfcnvrt+3
  4527  0396  0862               	movf	??_vfpfcnvrt+2,w
  4528  0397  00A7               	movwf	fputc@c
  4529  0398  0863               	movf	??_vfpfcnvrt+3,w
  4530  0399  00A8               	movwf	fputc@c+1
  4531  039A  0021               	movlb	1	; select bank1
  4532  039B  084C               	movf	vfpfcnvrt@fp^(0+128),w
  4533  039C  0020               	movlb	0	; select bank0
  4534  039D  00E4               	movwf	??_vfpfcnvrt+4
  4535  039E  0864               	movf	??_vfpfcnvrt+4,w
  4536  039F  00A9               	movwf	fputc@fp
  4537  03A0  3186  26C9  3182   	fcall	_fputc
  4538  03A3                     l2401:
  4539                           
  4540                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  4541  03A3  0020               	movlb	0	; select bank0
  4542  03A4  085E               	movf	vfpfcnvrt@fmt,w
  4543  03A5  0086               	movwf	6
  4544  03A6  0187               	clrf	7
  4545  03A7  3001               	movlw	1
  4546  03A8  0781               	addwf	1,f
  4547  03A9  3141               	addfsr 1,1
  4548  03AA  1803               	skipnc
  4549  03AB  0A81               	incf	1,f
  4550  03AC  2B77               	goto	l2389
  4551  03AD                     l984:
  4552  03AD  0008               	return
  4553  03AE                     __end_of_vfpfcnvrt:
  4554                           
  4555                           	psect	text4
  4556  0046                     __ptext4:	
  4557 ;; *************** function _dtoa *****************
  4558 ;; Defined at:
  4559 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4560 ;; Parameters:    Size  Location     Type
  4561 ;;  fp              1    wreg     PTR struct _IO_FILE
  4562 ;;		 -> NULL(0), 
  4563 ;;  d               8   32[BANK0 ] long long 
  4564 ;; Auto vars:     Size  Location     Type
  4565 ;;  fp              1   45[BANK0 ] PTR struct _IO_FILE
  4566 ;;		 -> NULL(0), 
  4567 ;;  n               8   52[BANK0 ] long long 
  4568 ;;  i               2   60[BANK0 ] int 
  4569 ;;  s               2   50[BANK0 ] int 
  4570 ;;  w               2   48[BANK0 ] int 
  4571 ;;  p               2   46[BANK0 ] int 
  4572 ;; Return value:  Size  Location     Type
  4573 ;;                  2   32[BANK0 ] int 
  4574 ;; Registers used:
  4575 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4576 ;; Tracked objects:
  4577 ;;		On entry : 0/0
  4578 ;;		On exit  : 0/0
  4579 ;;		Unchanged: 0/0
  4580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4581 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4582 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4583 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4584 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4585 ;;Total ram usage:       30 bytes
  4586 ;; Hardware stack levels used: 1
  4587 ;; Hardware stack levels required when called: 9
  4588 ;; This function calls:
  4589 ;;		___aodiv
  4590 ;;		___aomod
  4591 ;;		_abs
  4592 ;;		_pad
  4593 ;; This function is called by:
  4594 ;;		_vfpfcnvrt
  4595 ;; This function uses a non-reentrant model
  4596 ;;
  4597                           
  4598                           
  4599                           ;psect for function _dtoa
  4600  0046                     _dtoa:
  4601                           
  4602                           ;incstack = 0
  4603                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4604                           ;dtoa@fp stored from wreg
  4605  0046  0020               	movlb	0	; select bank0
  4606  0047  00CD               	movwf	dtoa@fp
  4607  0048                     l2305:
  4608                           
  4609                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  4610  0048  0840               	movf	dtoa@d,w
  4611  0049  00D4               	movwf	dtoa@n
  4612  004A  0841               	movf	dtoa@d+1,w
  4613  004B  00D5               	movwf	dtoa@n+1
  4614  004C  0842               	movf	dtoa@d+2,w
  4615  004D  00D6               	movwf	dtoa@n+2
  4616  004E  0843               	movf	dtoa@d+3,w
  4617  004F  00D7               	movwf	dtoa@n+3
  4618  0050  0844               	movf	dtoa@d+4,w
  4619  0051  00D8               	movwf	dtoa@n+4
  4620  0052  0845               	movf	dtoa@d+5,w
  4621  0053  00D9               	movwf	dtoa@n+5
  4622  0054  0846               	movf	dtoa@d+6,w
  4623  0055  00DA               	movwf	dtoa@n+6
  4624  0056  0847               	movf	dtoa@d+7,w
  4625  0057  00DB               	movwf	dtoa@n+7
  4626  0058                     l2307:
  4627                           
  4628                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  4629  0058  3054               	movlw	low dtoa@n
  4630  0059  0086               	movwf	6
  4631  005A  3000               	movlw	high dtoa@n
  4632  005B  0087               	movwf	7
  4633  005C  3F47               	moviw [7]fsr1
  4634  005D  00C8               	movwf	??_dtoa
  4635  005E  1BC8               	btfsc	??_dtoa,7
  4636  005F  2861               	goto	u2161
  4637  0060  2863               	goto	u2160
  4638  0061                     u2161:
  4639  0061  3001               	movlw	1
  4640  0062  2864               	goto	u2170
  4641  0063                     u2160:
  4642  0063  3000               	movlw	0
  4643  0064                     u2170:
  4644  0064  0020               	movlb	0	; select bank0
  4645  0065  00C9               	movwf	??_dtoa+1
  4646  0066  01CA               	clrf	??_dtoa+2
  4647  0067  0849               	movf	??_dtoa+1,w
  4648  0068  00D2               	movwf	dtoa@s
  4649  0069  084A               	movf	??_dtoa+2,w
  4650  006A  00D3               	movwf	dtoa@s+1
  4651  006B                     l2309:
  4652                           
  4653                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  4654  006B  0852               	movf	dtoa@s,w
  4655  006C  0453               	iorwf	dtoa@s+1,w
  4656  006D  1903               	btfsc	3,2
  4657  006E  2870               	goto	u2181
  4658  006F  2871               	goto	u2180
  4659  0070                     u2181:
  4660  0070  288F               	goto	l954
  4661  0071                     u2180:
  4662  0071                     l2311:
  4663                           
  4664                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  4665  0071  09D4               	comf	dtoa@n,f
  4666  0072  09D5               	comf	dtoa@n+1,f
  4667  0073  09D6               	comf	dtoa@n+2,f
  4668  0074  09D7               	comf	dtoa@n+3,f
  4669  0075  09D8               	comf	dtoa@n+4,f
  4670  0076  09D9               	comf	dtoa@n+5,f
  4671  0077  09DA               	comf	dtoa@n+6,f
  4672  0078  09DB               	comf	dtoa@n+7,f
  4673  0079  0AD4               	incf	dtoa@n,f
  4674  007A  1D03               	skipz
  4675  007B  288F               	goto	u219lld
  4676  007C  0AD5               	incf	dtoa@n+1,f
  4677  007D  1D03               	skipz
  4678  007E  288F               	goto	u219lld
  4679  007F  0AD6               	incf	dtoa@n+2,f
  4680  0080  1D03               	skipz
  4681  0081  288F               	goto	u219lld
  4682  0082  0AD7               	incf	dtoa@n+3,f
  4683  0083  1D03               	skipz
  4684  0084  288F               	goto	u219lld
  4685  0085  0AD8               	incf	dtoa@n+4,f
  4686  0086  1D03               	skipz
  4687  0087  288F               	goto	u219lld
  4688  0088  0AD9               	incf	dtoa@n+5,f
  4689  0089  1D03               	skipz
  4690  008A  288F               	goto	u219lld
  4691  008B  0ADA               	incf	dtoa@n+6,f
  4692  008C  1D03               	skipz
  4693  008D  288F               	goto	u219lld
  4694  008E  0ADB               	incf	dtoa@n+7,f
  4695  008F                     u219lld:
  4696  008F                     l954:	
  4697                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 297:     }
  4698                           
  4699                           
  4700                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  4701  008F  0021               	movlb	1	; select bank1
  4702  0090  1BBD               	btfsc	(_prec+1)^(0+128),7
  4703  0091  2893               	goto	u2201
  4704  0092  2894               	goto	u2200
  4705  0093                     u2201:
  4706  0093  2898               	goto	l955
  4707  0094                     u2200:
  4708  0094                     l2313:
  4709                           
  4710                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  4711  0094  30FD               	movlw	253
  4712  0095  05BE               	andwf	_flags^(0+128),f
  4713  0096  30FF               	movlw	255
  4714  0097  05BF               	andwf	(_flags+1)^(0+128),f
  4715  0098                     l955:	
  4716                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 302:     }
  4717                           
  4718                           
  4719                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  4720  0098  083D               	movf	(_prec+1)^(0+128),w
  4721  0099  3A80               	xorlw	128
  4722  009A  0020               	movlb	0	; select bank0
  4723  009B  00C8               	movwf	??_dtoa
  4724  009C  3080               	movlw	128
  4725  009D  0248               	subwf	??_dtoa,w
  4726  009E  1D03               	skipz
  4727  009F  28A3               	goto	u2215
  4728  00A0  3001               	movlw	1
  4729  00A1  0021               	movlb	1	; select bank1
  4730  00A2  023C               	subwf	_prec^(0+128),w
  4731  00A3                     u2215:
  4732  00A3  1803               	skipnc
  4733  00A4  28A6               	goto	u2211
  4734  00A5  28A7               	goto	u2210
  4735  00A6                     u2211:
  4736  00A6  28AD               	goto	l2317
  4737  00A7                     u2210:
  4738  00A7                     l2315:
  4739  00A7  3001               	movlw	1
  4740  00A8  0020               	movlb	0	; select bank0
  4741  00A9  00CE               	movwf	dtoa@p
  4742  00AA  3000               	movlw	0
  4743  00AB  00CF               	movwf	dtoa@p+1
  4744  00AC  28B5               	goto	l959
  4745  00AD                     l2317:
  4746  00AD  0021               	movlb	1	; select bank1
  4747  00AE  083D               	movf	(_prec+1)^(0+128),w
  4748  00AF  0020               	movlb	0	; select bank0
  4749  00B0  00CF               	movwf	dtoa@p+1
  4750  00B1  0021               	movlb	1	; select bank1
  4751  00B2  083C               	movf	_prec^(0+128),w
  4752  00B3  0020               	movlb	0	; select bank0
  4753  00B4  00CE               	movwf	dtoa@p
  4754  00B5                     l959:
  4755                           
  4756                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  4757  00B5  0021               	movlb	1	; select bank1
  4758  00B6  083B               	movf	(_width+1)^(0+128),w
  4759  00B7  0020               	movlb	0	; select bank0
  4760  00B8  00D1               	movwf	dtoa@w+1
  4761  00B9  0021               	movlb	1	; select bank1
  4762  00BA  083A               	movf	_width^(0+128),w
  4763  00BB  0020               	movlb	0	; select bank0
  4764  00BC  00D0               	movwf	dtoa@w
  4765  00BD                     l2319:
  4766                           
  4767                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  4768  00BD  0852               	movf	dtoa@s,w
  4769  00BE  0453               	iorwf	dtoa@s+1,w
  4770  00BF  1D03               	btfss	3,2
  4771  00C0  28C2               	goto	u2221
  4772  00C1  28C3               	goto	u2220
  4773  00C2                     u2221:
  4774  00C2  28C8               	goto	l2323
  4775  00C3                     u2220:
  4776  00C3                     l2321:
  4777  00C3  0021               	movlb	1	; select bank1
  4778  00C4  1D3E               	btfss	_flags^(0+128),2
  4779  00C5  28C7               	goto	u2231
  4780  00C6  28C8               	goto	u2230
  4781  00C7                     u2231:
  4782  00C7  28CD               	goto	l960
  4783  00C8                     u2230:
  4784  00C8                     l2323:
  4785                           
  4786                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  4787  00C8  30FF               	movlw	255
  4788  00C9  0020               	movlb	0	; select bank0
  4789  00CA  07D0               	addwf	dtoa@w,f
  4790  00CB  30FF               	movlw	255
  4791  00CC  3DD1               	addwfc	dtoa@w+1,f
  4792  00CD                     l960:	
  4793                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 307:     }
  4794                           
  4795                           
  4796                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  4797  00CD  301F               	movlw	31
  4798  00CE  0020               	movlb	0	; select bank0
  4799  00CF  00DC               	movwf	dtoa@i
  4800  00D0  3000               	movlw	0
  4801  00D1  00DD               	movwf	dtoa@i+1
  4802  00D2                     l2325:
  4803                           
  4804                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  4805  00D2  0022               	movlb	2	; select bank2
  4806  00D3  01BF               	clrf	(_dbuf^(0+256)+31)
  4807                           
  4808                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4809  00D4  293E               	goto	l963
  4810  00D5                     l2327:
  4811                           
  4812                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  4813  00D5  30FF               	movlw	255
  4814  00D6  0020               	movlb	0	; select bank0
  4815  00D7  07DC               	addwf	dtoa@i,f
  4816  00D8  30FF               	movlw	255
  4817  00D9  3DDD               	addwfc	dtoa@i+1,f
  4818  00DA                     l2329:
  4819                           
  4820                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  4821  00DA  300A               	movlw	10
  4822  00DB  00A4               	movwf	___aomod@divisor
  4823  00DC  01A5               	clrf	___aomod@divisor+1
  4824  00DD  01A6               	clrf	___aomod@divisor+2
  4825  00DE  01A7               	clrf	___aomod@divisor+3
  4826  00DF  01A8               	clrf	___aomod@divisor+4
  4827  00E0  01A9               	clrf	___aomod@divisor+5
  4828  00E1  01AA               	clrf	___aomod@divisor+6
  4829  00E2  01AB               	clrf	___aomod@divisor+7
  4830  00E3  0854               	movf	dtoa@n,w
  4831  00E4  00AC               	movwf	___aomod@dividend
  4832  00E5  0855               	movf	dtoa@n+1,w
  4833  00E6  00AD               	movwf	___aomod@dividend+1
  4834  00E7  0856               	movf	dtoa@n+2,w
  4835  00E8  00AE               	movwf	___aomod@dividend+2
  4836  00E9  0857               	movf	dtoa@n+3,w
  4837  00EA  00AF               	movwf	___aomod@dividend+3
  4838  00EB  0858               	movf	dtoa@n+4,w
  4839  00EC  00B0               	movwf	___aomod@dividend+4
  4840  00ED  0859               	movf	dtoa@n+5,w
  4841  00EE  00B1               	movwf	___aomod@dividend+5
  4842  00EF  085A               	movf	dtoa@n+6,w
  4843  00F0  00B2               	movwf	___aomod@dividend+6
  4844  00F1  085B               	movf	dtoa@n+7,w
  4845  00F2  00B3               	movwf	___aomod@dividend+7
  4846  00F3  3183  23AE  3180   	fcall	___aomod
  4847  00F6  0020               	movlb	0	; select bank0
  4848  00F7  0825               	movf	?___aomod+1,w
  4849  00F8  00B8               	movwf	abs@a+1
  4850  00F9  0824               	movf	?___aomod,w
  4851  00FA  00B7               	movwf	abs@a
  4852  00FB  318F  27C0  3180   	fcall	_abs
  4853  00FE  0020               	movlb	0	; select bank0
  4854  00FF  0837               	movf	?_abs,w
  4855  0100  3E30               	addlw	48
  4856  0101  00C8               	movwf	??_dtoa
  4857  0102  085C               	movf	dtoa@i,w
  4858  0103  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4859  0104  0086               	movwf	6
  4860  0105  3001               	movlw	1	; select bank2/3
  4861  0106  0087               	movwf	7
  4862  0107  0848               	movf	??_dtoa,w
  4863  0108  0081               	movwf	1
  4864  0109                     l2331:
  4865                           
  4866                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  4867  0109  30FF               	movlw	255
  4868  010A  07CE               	addwf	dtoa@p,f
  4869  010B  30FF               	movlw	255
  4870  010C  3DCF               	addwfc	dtoa@p+1,f
  4871  010D                     l2333:
  4872                           
  4873                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  4874  010D  30FF               	movlw	255
  4875  010E  07D0               	addwf	dtoa@w,f
  4876  010F  30FF               	movlw	255
  4877  0110  3DD1               	addwfc	dtoa@w+1,f
  4878  0111                     l2335:
  4879                           
  4880                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  4881  0111  300A               	movlw	10
  4882  0112  00A4               	movwf	___aodiv@divisor
  4883  0113  01A5               	clrf	___aodiv@divisor+1
  4884  0114  01A6               	clrf	___aodiv@divisor+2
  4885  0115  01A7               	clrf	___aodiv@divisor+3
  4886  0116  01A8               	clrf	___aodiv@divisor+4
  4887  0117  01A9               	clrf	___aodiv@divisor+5
  4888  0118  01AA               	clrf	___aodiv@divisor+6
  4889  0119  01AB               	clrf	___aodiv@divisor+7
  4890  011A  0854               	movf	dtoa@n,w
  4891  011B  00AC               	movwf	___aodiv@dividend
  4892  011C  0855               	movf	dtoa@n+1,w
  4893  011D  00AD               	movwf	___aodiv@dividend+1
  4894  011E  0856               	movf	dtoa@n+2,w
  4895  011F  00AE               	movwf	___aodiv@dividend+2
  4896  0120  0857               	movf	dtoa@n+3,w
  4897  0121  00AF               	movwf	___aodiv@dividend+3
  4898  0122  0858               	movf	dtoa@n+4,w
  4899  0123  00B0               	movwf	___aodiv@dividend+4
  4900  0124  0859               	movf	dtoa@n+5,w
  4901  0125  00B1               	movwf	___aodiv@dividend+5
  4902  0126  085A               	movf	dtoa@n+6,w
  4903  0127  00B2               	movwf	___aodiv@dividend+6
  4904  0128  085B               	movf	dtoa@n+7,w
  4905  0129  00B3               	movwf	___aodiv@dividend+7
  4906  012A  3181  21B6  3180   	fcall	___aodiv
  4907  012D  0020               	movlb	0	; select bank0
  4908  012E  0824               	movf	?___aodiv,w
  4909  012F  00D4               	movwf	dtoa@n
  4910  0130  0825               	movf	?___aodiv+1,w
  4911  0131  00D5               	movwf	dtoa@n+1
  4912  0132  0826               	movf	?___aodiv+2,w
  4913  0133  00D6               	movwf	dtoa@n+2
  4914  0134  0827               	movf	?___aodiv+3,w
  4915  0135  00D7               	movwf	dtoa@n+3
  4916  0136  0828               	movf	?___aodiv+4,w
  4917  0137  00D8               	movwf	dtoa@n+4
  4918  0138  0829               	movf	?___aodiv+5,w
  4919  0139  00D9               	movwf	dtoa@n+5
  4920  013A  082A               	movf	?___aodiv+6,w
  4921  013B  00DA               	movwf	dtoa@n+6
  4922  013C  082B               	movf	?___aodiv+7,w
  4923  013D  00DB               	movwf	dtoa@n+7
  4924  013E                     l963:	
  4925                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 318:     }
  4926                           
  4927                           
  4928                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4929  013E  0020               	movlb	0	; select bank0
  4930  013F  085D               	movf	dtoa@i+1,w
  4931  0140  3A80               	xorlw	128
  4932  0141  00C8               	movwf	??_dtoa
  4933  0142  3080               	movlw	128
  4934  0143  0248               	subwf	??_dtoa,w
  4935  0144  1D03               	skipz
  4936  0145  2948               	goto	u2245
  4937  0146  3001               	movlw	1
  4938  0147  025C               	subwf	dtoa@i,w
  4939  0148                     u2245:
  4940  0148  1C03               	skipc
  4941  0149  294B               	goto	u2241
  4942  014A  294C               	goto	u2240
  4943  014B                     u2241:
  4944  014B  2979               	goto	l2345
  4945  014C                     u2240:
  4946  014C                     l2337:
  4947  014C  0020               	movlb	0	; select bank0
  4948  014D  0854               	movf	dtoa@n,w
  4949  014E  0455               	iorwf	dtoa@n+1,w
  4950  014F  0456               	iorwf	dtoa@n+2,w
  4951  0150  0457               	iorwf	dtoa@n+3,w
  4952  0151  0458               	iorwf	dtoa@n+4,w
  4953  0152  0459               	iorwf	dtoa@n+5,w
  4954  0153  045A               	iorwf	dtoa@n+6,w
  4955  0154  045B               	iorwf	dtoa@n+7,w
  4956  0155  1D03               	skipz
  4957  0156  2958               	goto	u2251
  4958  0157  2959               	goto	u2250
  4959  0158                     u2251:
  4960  0158  28D5               	goto	l2327
  4961  0159                     u2250:
  4962  0159                     l2339:
  4963  0159  084F               	movf	dtoa@p+1,w
  4964  015A  3A80               	xorlw	128
  4965  015B  00C8               	movwf	??_dtoa
  4966  015C  3080               	movlw	128
  4967  015D  0248               	subwf	??_dtoa,w
  4968  015E  1D03               	skipz
  4969  015F  2962               	goto	u2265
  4970  0160  3001               	movlw	1
  4971  0161  024E               	subwf	dtoa@p,w
  4972  0162                     u2265:
  4973  0162  1803               	skipnc
  4974  0163  2965               	goto	u2261
  4975  0164  2966               	goto	u2260
  4976  0165                     u2261:
  4977  0165  28D5               	goto	l2327
  4978  0166                     u2260:
  4979  0166                     l2341:
  4980  0166  0020               	movlb	0	; select bank0
  4981  0167  0851               	movf	dtoa@w+1,w
  4982  0168  3A80               	xorlw	128
  4983  0169  00C8               	movwf	??_dtoa
  4984  016A  3080               	movlw	128
  4985  016B  0248               	subwf	??_dtoa,w
  4986  016C  1D03               	skipz
  4987  016D  2970               	goto	u2275
  4988  016E  3001               	movlw	1
  4989  016F  0250               	subwf	dtoa@w,w
  4990  0170                     u2275:
  4991  0170  1C03               	skipc
  4992  0171  2973               	goto	u2271
  4993  0172  2974               	goto	u2270
  4994  0173                     u2271:
  4995  0173  2979               	goto	l2345
  4996  0174                     u2270:
  4997  0174                     l2343:
  4998  0174  0021               	movlb	1	; select bank1
  4999  0175  18BE               	btfsc	_flags^(0+128),1
  5000  0176  2978               	goto	u2281
  5001  0177  2979               	goto	u2280
  5002  0178                     u2281:
  5003  0178  28D5               	goto	l2327
  5004  0179                     u2280:
  5005  0179                     l2345:
  5006                           
  5007                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  5008  0179  0020               	movlb	0	; select bank0
  5009  017A  0852               	movf	dtoa@s,w
  5010  017B  0453               	iorwf	dtoa@s+1,w
  5011  017C  1D03               	btfss	3,2
  5012  017D  297F               	goto	u2291
  5013  017E  2980               	goto	u2290
  5014  017F                     u2291:
  5015  017F  2985               	goto	l2349
  5016  0180                     u2290:
  5017  0180                     l2347:
  5018  0180  0021               	movlb	1	; select bank1
  5019  0181  1D3E               	btfss	_flags^(0+128),2
  5020  0182  2984               	goto	u2301
  5021  0183  2985               	goto	u2300
  5022  0184                     u2301:
  5023  0184  29A2               	goto	l2359
  5024  0185                     u2300:
  5025  0185                     l2349:
  5026                           
  5027                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  5028  0185  30FF               	movlw	255
  5029  0186  0020               	movlb	0	; select bank0
  5030  0187  07DC               	addwf	dtoa@i,f
  5031  0188  30FF               	movlw	255
  5032  0189  3DDD               	addwfc	dtoa@i+1,f
  5033  018A                     l2351:
  5034                           
  5035                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  5036  018A  0852               	movf	dtoa@s,w
  5037  018B  0453               	iorwf	dtoa@s+1,w
  5038  018C  1D03               	btfss	3,2
  5039  018D  298F               	goto	u2311
  5040  018E  2990               	goto	u2310
  5041  018F                     u2311:
  5042  018F  2995               	goto	l2355
  5043  0190                     u2310:
  5044  0190                     l2353:
  5045  0190  302B               	movlw	43
  5046  0191  00CB               	movwf	_dtoa$944
  5047  0192  3000               	movlw	0
  5048  0193  00CC               	movwf	_dtoa$944+1
  5049  0194  2999               	goto	l2357
  5050  0195                     l2355:
  5051  0195  302D               	movlw	45
  5052  0196  00CB               	movwf	_dtoa$944
  5053  0197  3000               	movlw	0
  5054  0198  00CC               	movwf	_dtoa$944+1
  5055  0199                     l2357:
  5056  0199  084B               	movf	_dtoa$944,w
  5057  019A  00C8               	movwf	??_dtoa
  5058  019B  085C               	movf	dtoa@i,w
  5059  019C  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5060  019D  0086               	movwf	6
  5061  019E  3001               	movlw	1	; select bank2/3
  5062  019F  0087               	movwf	7
  5063  01A0  0848               	movf	??_dtoa,w
  5064  01A1  0081               	movwf	1
  5065  01A2                     l2359:
  5066                           
  5067                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  5068  01A2  0020               	movlb	0	; select bank0
  5069  01A3  085C               	movf	dtoa@i,w
  5070  01A4  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5071  01A5  00C8               	movwf	??_dtoa
  5072  01A6  0848               	movf	??_dtoa,w
  5073  01A7  00B7               	movwf	pad@buf
  5074  01A8  0851               	movf	dtoa@w+1,w
  5075  01A9  00B9               	movwf	pad@p+1
  5076  01AA  0850               	movf	dtoa@w,w
  5077  01AB  00B8               	movwf	pad@p
  5078  01AC  084D               	movf	dtoa@fp,w
  5079  01AD  3185  2531  3180   	fcall	_pad
  5080  01B0  0020               	movlb	0	; select bank0
  5081  01B1  0838               	movf	?_pad+1,w
  5082  01B2  00C1               	movwf	?_dtoa+1
  5083  01B3  0837               	movf	?_pad,w
  5084  01B4  00C0               	movwf	?_dtoa
  5085  01B5                     l977:
  5086  01B5  0008               	return
  5087  01B6                     __end_of_dtoa:
  5088                           
  5089                           	psect	text5
  5090  0531                     __ptext5:	
  5091 ;; *************** function _pad *****************
  5092 ;; Defined at:
  5093 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5094 ;; Parameters:    Size  Location     Type
  5095 ;;  fp              1    wreg     PTR struct _IO_FILE
  5096 ;;		 -> NULL(0), 
  5097 ;;  buf             1   23[BANK0 ] PTR unsigned char 
  5098 ;;		 -> dbuf(32), 
  5099 ;;  p               2   24[BANK0 ] int 
  5100 ;; Auto vars:     Size  Location     Type
  5101 ;;  fp              1   31[BANK0 ] PTR struct _IO_FILE
  5102 ;;		 -> NULL(0), 
  5103 ;;  w               2   29[BANK0 ] int 
  5104 ;;  i               2   27[BANK0 ] int 
  5105 ;; Return value:  Size  Location     Type
  5106 ;;                  2   23[BANK0 ] int 
  5107 ;; Registers used:
  5108 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5109 ;; Tracked objects:
  5110 ;;		On entry : 0/0
  5111 ;;		On exit  : 0/0
  5112 ;;		Unchanged: 0/0
  5113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5114 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5115 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5116 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5117 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5118 ;;Total ram usage:        9 bytes
  5119 ;; Hardware stack levels used: 1
  5120 ;; Hardware stack levels required when called: 8
  5121 ;; This function calls:
  5122 ;;		_fputc
  5123 ;;		_fputs
  5124 ;;		_strlen
  5125 ;; This function is called by:
  5126 ;;		_dtoa
  5127 ;; This function uses a non-reentrant model
  5128 ;;
  5129                           
  5130                           
  5131                           ;psect for function _pad
  5132  0531                     _pad:
  5133                           
  5134                           ;incstack = 0
  5135                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5136                           ;pad@fp stored from wreg
  5137  0531  0020               	movlb	0	; select bank0
  5138  0532  00BF               	movwf	pad@fp
  5139  0533                     l2279:
  5140                           
  5141                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  5142  0533  0021               	movlb	1	; select bank1
  5143  0534  1C3E               	btfss	_flags^(0+128),0
  5144  0535  2D37               	goto	u2111
  5145  0536  2D38               	goto	u2110
  5146  0537                     u2111:
  5147  0537  2D41               	goto	l2283
  5148  0538                     u2110:
  5149  0538                     l2281:
  5150                           
  5151                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  5152  0538  0020               	movlb	0	; select bank0
  5153  0539  083F               	movf	pad@fp,w
  5154  053A  00BA               	movwf	??_pad
  5155  053B  083A               	movf	??_pad,w
  5156  053C  00AF               	movwf	fputs@fp
  5157  053D  0837               	movf	pad@buf,w
  5158  053E  3187  27C5  3185   	fcall	_fputs
  5159  0541                     l2283:
  5160                           
  5161                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  5162  0541  0020               	movlb	0	; select bank0
  5163  0542  1BB9               	btfsc	pad@p+1,7
  5164  0543  2D45               	goto	u2121
  5165  0544  2D46               	goto	u2120
  5166  0545                     u2121:
  5167  0545  2D4B               	goto	l2287
  5168  0546                     u2120:
  5169  0546                     l2285:
  5170  0546  0839               	movf	pad@p+1,w
  5171  0547  00BE               	movwf	pad@w+1
  5172  0548  0838               	movf	pad@p,w
  5173  0549  00BD               	movwf	pad@w
  5174  054A  2D4D               	goto	l946
  5175  054B                     l2287:
  5176  054B  01BD               	clrf	pad@w
  5177  054C  01BE               	clrf	pad@w+1
  5178  054D                     l946:
  5179                           
  5180                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5181  054D  01BB               	clrf	pad@i
  5182  054E  01BC               	clrf	pad@i+1
  5183                           
  5184                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5185  054F  2D61               	goto	l2293
  5186  0550                     l2289:
  5187                           
  5188                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  5189  0550  3020               	movlw	32
  5190  0551  0020               	movlb	0	; select bank0
  5191  0552  00A7               	movwf	fputc@c
  5192  0553  3000               	movlw	0
  5193  0554  00A8               	movwf	fputc@c+1
  5194  0555  083F               	movf	pad@fp,w
  5195  0556  00BA               	movwf	??_pad
  5196  0557  083A               	movf	??_pad,w
  5197  0558  00A9               	movwf	fputc@fp
  5198  0559  3186  26C9  3185   	fcall	_fputc
  5199  055C                     l2291:
  5200                           
  5201                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5202  055C  3001               	movlw	1
  5203  055D  0020               	movlb	0	; select bank0
  5204  055E  07BB               	addwf	pad@i,f
  5205  055F  3000               	movlw	0
  5206  0560  3DBC               	addwfc	pad@i+1,f
  5207  0561                     l2293:
  5208                           
  5209                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5210  0561  083C               	movf	pad@i+1,w
  5211  0562  3A80               	xorlw	128
  5212  0563  00BA               	movwf	??_pad
  5213  0564  083E               	movf	pad@w+1,w
  5214  0565  3A80               	xorlw	128
  5215  0566  023A               	subwf	??_pad,w
  5216  0567  1D03               	skipz
  5217  0568  2D6B               	goto	u2135
  5218  0569  083D               	movf	pad@w,w
  5219  056A  023B               	subwf	pad@i,w
  5220  056B                     u2135:
  5221  056B  1C03               	skipc
  5222  056C  2D6E               	goto	u2131
  5223  056D  2D6F               	goto	u2130
  5224  056E                     u2131:
  5225  056E  2D50               	goto	l2289
  5226  056F                     u2130:
  5227  056F                     l949:
  5228                           
  5229                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  5230  056F  0021               	movlb	1	; select bank1
  5231  0570  183E               	btfsc	_flags^(0+128),0
  5232  0571  2D73               	goto	u2141
  5233  0572  2D74               	goto	u2140
  5234  0573                     u2141:
  5235  0573  2D7D               	goto	l2297
  5236  0574                     u2140:
  5237  0574                     l2295:
  5238                           
  5239                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  5240  0574  0020               	movlb	0	; select bank0
  5241  0575  083F               	movf	pad@fp,w
  5242  0576  00BA               	movwf	??_pad
  5243  0577  083A               	movf	??_pad,w
  5244  0578  00AF               	movwf	fputs@fp
  5245  0579  0837               	movf	pad@buf,w
  5246  057A  3187  27C5  3185   	fcall	_fputs
  5247  057D                     l2297:
  5248                           
  5249                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  5250  057D  0020               	movlb	0	; select bank0
  5251  057E  0837               	movf	pad@buf,w
  5252  057F  00A4               	movwf	strlen@s
  5253  0580  3001               	movlw	1
  5254  0581  00A5               	movwf	strlen@s+1
  5255  0582  318F  278B  3185   	fcall	_strlen
  5256  0585  0020               	movlb	0	; select bank0
  5257  0586  083D               	movf	pad@w,w
  5258  0587  0724               	addwf	?_strlen,w
  5259  0588  00B7               	movwf	?_pad
  5260  0589  083E               	movf	pad@w+1,w
  5261  058A  3D25               	addwfc	?_strlen+1,w
  5262  058B  00B8               	movwf	?_pad+1
  5263  058C                     l951:
  5264  058C  0008               	return
  5265  058D                     __end_of_pad:
  5266                           
  5267                           	psect	text6
  5268  0F8B                     __ptext6:	
  5269 ;; *************** function _strlen *****************
  5270 ;; Defined at:
  5271 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  5272 ;; Parameters:    Size  Location     Type
  5273 ;;  s               2    4[BANK0 ] PTR const unsigned char 
  5274 ;;		 -> dbuf(32), STR_6(8), STR_4(10), 
  5275 ;; Auto vars:     Size  Location     Type
  5276 ;;  a               2    7[BANK0 ] PTR const unsigned char 
  5277 ;;		 -> dbuf(32), STR_6(8), STR_4(10), 
  5278 ;; Return value:  Size  Location     Type
  5279 ;;                  2    4[BANK0 ] unsigned int 
  5280 ;; Registers used:
  5281 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5282 ;; Tracked objects:
  5283 ;;		On entry : 0/0
  5284 ;;		On exit  : 0/0
  5285 ;;		Unchanged: 0/0
  5286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5287 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5288 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5289 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5290 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5291 ;;Total ram usage:        5 bytes
  5292 ;; Hardware stack levels used: 1
  5293 ;; Hardware stack levels required when called: 4
  5294 ;; This function calls:
  5295 ;;		Nothing
  5296 ;; This function is called by:
  5297 ;;		_pad
  5298 ;; This function uses a non-reentrant model
  5299 ;;
  5300                           
  5301                           
  5302                           ;psect for function _strlen
  5303  0F8B                     _strlen:
  5304  0F8B                     l2201:	
  5305                           ;incstack = 0
  5306                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  5307                           
  5308  0F8B  0020               	movlb	0	; select bank0
  5309  0F8C  0825               	movf	strlen@s+1,w
  5310  0F8D  00A8               	movwf	strlen@a+1
  5311  0F8E  0824               	movf	strlen@s,w
  5312  0F8F  00A7               	movwf	strlen@a
  5313  0F90  2F95               	goto	l2205
  5314  0F91                     l2203:
  5315  0F91  3001               	movlw	1
  5316  0F92  07A4               	addwf	strlen@s,f
  5317  0F93  3000               	movlw	0
  5318  0F94  3DA5               	addwfc	strlen@s+1,f
  5319  0F95                     l2205:
  5320  0F95  0824               	movf	strlen@s,w
  5321  0F96  0084               	movwf	4
  5322  0F97  0825               	movf	strlen@s+1,w
  5323  0F98  0085               	movwf	5
  5324  0F99  0012               	moviw fsr0++
  5325  0F9A  1D03               	btfss	3,2
  5326  0F9B  2F9D               	goto	u1891
  5327  0F9C  2F9E               	goto	u1890
  5328  0F9D                     u1891:
  5329  0F9D  2F91               	goto	l2203
  5330  0F9E                     u1890:
  5331  0F9E                     l2207:
  5332  0F9E  0827               	movf	strlen@a,w
  5333  0F9F  0224               	subwf	strlen@s,w
  5334  0FA0  00A4               	movwf	?_strlen
  5335  0FA1  0828               	movf	strlen@a+1,w
  5336  0FA2  3B25               	subwfb	strlen@s+1,w
  5337  0FA3  00A5               	movwf	?_strlen+1
  5338  0FA4                     l1024:
  5339  0FA4  0008               	return
  5340  0FA5                     __end_of_strlen:
  5341                           
  5342                           	psect	text7
  5343  07C5                     __ptext7:	
  5344 ;; *************** function _fputs *****************
  5345 ;; Defined at:
  5346 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  5347 ;; Parameters:    Size  Location     Type
  5348 ;;  s               1    wreg     PTR const unsigned char 
  5349 ;;		 -> dbuf(32), 
  5350 ;;  fp              1   15[BANK0 ] PTR struct _IO_FILE
  5351 ;;		 -> NULL(0), 
  5352 ;; Auto vars:     Size  Location     Type
  5353 ;;  s               1   22[BANK0 ] PTR const unsigned char 
  5354 ;;		 -> dbuf(32), 
  5355 ;;  i               2   20[BANK0 ] int 
  5356 ;;  c               1   19[BANK0 ] unsigned char 
  5357 ;; Return value:  Size  Location     Type
  5358 ;;                  2   15[BANK0 ] int 
  5359 ;; Registers used:
  5360 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5361 ;; Tracked objects:
  5362 ;;		On entry : 0/0
  5363 ;;		On exit  : 0/0
  5364 ;;		Unchanged: 0/0
  5365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5366 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5367 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5368 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5369 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5370 ;;Total ram usage:        8 bytes
  5371 ;; Hardware stack levels used: 1
  5372 ;; Hardware stack levels required when called: 7
  5373 ;; This function calls:
  5374 ;;		_fputc
  5375 ;; This function is called by:
  5376 ;;		_pad
  5377 ;; This function uses a non-reentrant model
  5378 ;;
  5379                           
  5380                           
  5381                           ;psect for function _fputs
  5382  07C5                     _fputs:
  5383                           
  5384                           ;incstack = 0
  5385                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5386                           ;fputs@s stored from wreg
  5387  07C5  0020               	movlb	0	; select bank0
  5388  07C6  00B6               	movwf	fputs@s
  5389  07C7                     l2193:
  5390  07C7  01B4               	clrf	fputs@i
  5391  07C8  01B5               	clrf	fputs@i+1
  5392  07C9  2FDD               	goto	l2199
  5393  07CA                     l2195:
  5394  07CA  0833               	movf	fputs@c,w
  5395  07CB  00B0               	movwf	??_fputs
  5396  07CC  01B1               	clrf	??_fputs+1
  5397  07CD  0830               	movf	??_fputs,w
  5398  07CE  00A7               	movwf	fputc@c
  5399  07CF  0831               	movf	??_fputs+1,w
  5400  07D0  00A8               	movwf	fputc@c+1
  5401  07D1  082F               	movf	fputs@fp,w
  5402  07D2  00B2               	movwf	??_fputs+2
  5403  07D3  0832               	movf	??_fputs+2,w
  5404  07D4  00A9               	movwf	fputc@fp
  5405  07D5  3186  26C9  3187   	fcall	_fputc
  5406  07D8                     l2197:
  5407  07D8  3001               	movlw	1
  5408  07D9  0020               	movlb	0	; select bank0
  5409  07DA  07B4               	addwf	fputs@i,f
  5410  07DB  3000               	movlw	0
  5411  07DC  3DB5               	addwfc	fputs@i+1,f
  5412  07DD                     l2199:
  5413  07DD  0834               	movf	fputs@i,w
  5414  07DE  0736               	addwf	fputs@s,w
  5415  07DF  00B0               	movwf	??_fputs
  5416  07E0  0830               	movf	??_fputs,w
  5417  07E1  0086               	movwf	6
  5418  07E2  3001               	movlw	1	; select bank2/3
  5419  07E3  0087               	movwf	7
  5420  07E4  0801               	movf	1,w
  5421  07E5  00B1               	movwf	??_fputs+1
  5422  07E6  0831               	movf	??_fputs+1,w
  5423  07E7  00B3               	movwf	fputs@c
  5424  07E8  0833               	movf	fputs@c,w
  5425  07E9  1D03               	btfss	3,2
  5426  07EA  2FEC               	goto	u1881
  5427  07EB  2FED               	goto	u1880
  5428  07EC                     u1881:
  5429  07EC  2FCA               	goto	l2195
  5430  07ED                     u1880:
  5431  07ED                     l1018:
  5432  07ED  0008               	return
  5433  07EE                     __end_of_fputs:
  5434                           
  5435                           	psect	text8
  5436  06C9                     __ptext8:	
  5437 ;; *************** function _fputc *****************
  5438 ;; Defined at:
  5439 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  5440 ;; Parameters:    Size  Location     Type
  5441 ;;  c               2    7[BANK0 ] int 
  5442 ;;  fp              1    9[BANK0 ] PTR struct _IO_FILE
  5443 ;;		 -> NULL(0), 
  5444 ;; Auto vars:     Size  Location     Type
  5445 ;;		None
  5446 ;; Return value:  Size  Location     Type
  5447 ;;                  2    7[BANK0 ] int 
  5448 ;; Registers used:
  5449 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5450 ;; Tracked objects:
  5451 ;;		On entry : 0/0
  5452 ;;		On exit  : 0/0
  5453 ;;		Unchanged: 0/0
  5454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5455 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5457 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5458 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5459 ;;Total ram usage:        8 bytes
  5460 ;; Hardware stack levels used: 1
  5461 ;; Hardware stack levels required when called: 6
  5462 ;; This function calls:
  5463 ;;		_putch
  5464 ;; This function is called by:
  5465 ;;		_pad
  5466 ;;		_vfpfcnvrt
  5467 ;;		_fputs
  5468 ;; This function uses a non-reentrant model
  5469 ;;
  5470                           
  5471                           
  5472                           ;psect for function _fputc
  5473  06C9                     _fputc:
  5474  06C9                     l2179:	
  5475                           ;incstack = 0
  5476                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5477                           
  5478  06C9  0020               	movlb	0	; select bank0
  5479  06CA  0829               	movf	fputc@fp,w
  5480  06CB  1903               	btfsc	3,2
  5481  06CC  2ECE               	goto	u1841
  5482  06CD  2ECF               	goto	u1840
  5483  06CE                     u1841:
  5484  06CE  2ED4               	goto	l2183
  5485  06CF                     u1840:
  5486  06CF                     l2181:
  5487  06CF  0829               	movf	fputc@fp,w
  5488  06D0  1D03               	btfss	3,2
  5489  06D1  2ED3               	goto	u1851
  5490  06D2  2ED4               	goto	u1850
  5491  06D3                     u1851:
  5492  06D3  2ED9               	goto	l2185
  5493  06D4                     u1850:
  5494  06D4                     l2183:
  5495  06D4  0827               	movf	fputc@c,w
  5496  06D5  318E  26FD  3186   	fcall	_putch
  5497  06D8  2F09               	goto	l1010
  5498  06D9                     l2185:
  5499  06D9  0829               	movf	fputc@fp,w
  5500  06DA  3E03               	addlw	3
  5501  06DB  0086               	movwf	6
  5502  06DC  0187               	clrf	7
  5503  06DD  0016               	moviw fsr1++
  5504  06DE  0401               	iorwf	1,w
  5505  06DF  1903               	btfsc	3,2
  5506  06E0  2EE2               	goto	u1861
  5507  06E1  2EE3               	goto	u1860
  5508  06E2                     u1861:
  5509  06E2  2F00               	goto	l2189
  5510  06E3                     u1860:
  5511  06E3                     l2187:
  5512  06E3  0829               	movf	fputc@fp,w
  5513  06E4  3E03               	addlw	3
  5514  06E5  0086               	movwf	6
  5515  06E6  0187               	clrf	7
  5516  06E7  3F40               	moviw [0]fsr1
  5517  06E8  00AA               	movwf	??_fputc
  5518  06E9  3F41               	moviw [1]fsr1
  5519  06EA  00AB               	movwf	??_fputc+1
  5520  06EB  0A29               	incf	fputc@fp,w
  5521  06EC  0086               	movwf	6
  5522  06ED  0187               	clrf	7
  5523  06EE  3F40               	moviw [0]fsr1
  5524  06EF  00AC               	movwf	??_fputc+2
  5525  06F0  3F41               	moviw [1]fsr1
  5526  06F1  00AD               	movwf	??_fputc+3
  5527  06F2  082D               	movf	??_fputc+3,w
  5528  06F3  3A80               	xorlw	128
  5529  06F4  00AE               	movwf	??_fputc+4
  5530  06F5  082B               	movf	??_fputc+1,w
  5531  06F6  3A80               	xorlw	128
  5532  06F7  022E               	subwf	??_fputc+4,w
  5533  06F8  1D03               	skipz
  5534  06F9  2EFC               	goto	u1875
  5535  06FA  082A               	movf	??_fputc,w
  5536  06FB  022C               	subwf	??_fputc+2,w
  5537  06FC                     u1875:
  5538  06FC  1803               	skipnc
  5539  06FD  2EFF               	goto	u1871
  5540  06FE  2F00               	goto	u1870
  5541  06FF                     u1871:
  5542  06FF  2F09               	goto	l1010
  5543  0700                     u1870:
  5544  0700                     l2189:
  5545  0700  0020               	movlb	0	; select bank0
  5546  0701  0A29               	incf	fputc@fp,w
  5547  0702  0086               	movwf	6
  5548  0703  0187               	clrf	7
  5549  0704  3001               	movlw	1
  5550  0705  0781               	addwf	1,f
  5551  0706  3141               	addfsr 1,1
  5552  0707  1803               	skipnc
  5553  0708  0A81               	incf	1,f
  5554  0709                     l1010:
  5555  0709  0008               	return
  5556  070A                     __end_of_fputc:
  5557                           
  5558                           	psect	text9
  5559  0EFD                     __ptext9:	
  5560 ;; *************** function _putch *****************
  5561 ;; Defined at:
  5562 ;;		line 208 in file "mcc_generated_files/eusart.c"
  5563 ;; Parameters:    Size  Location     Type
  5564 ;;  txData          1    wreg     unsigned char 
  5565 ;; Auto vars:     Size  Location     Type
  5566 ;;  txData          1    6[BANK0 ] unsigned char 
  5567 ;; Return value:  Size  Location     Type
  5568 ;;                  1    wreg      void 
  5569 ;; Registers used:
  5570 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5571 ;; Tracked objects:
  5572 ;;		On entry : 0/0
  5573 ;;		On exit  : 0/0
  5574 ;;		Unchanged: 0/0
  5575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5577 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5579 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5580 ;;Total ram usage:        1 bytes
  5581 ;; Hardware stack levels used: 1
  5582 ;; Hardware stack levels required when called: 5
  5583 ;; This function calls:
  5584 ;;		_EUSART_Write
  5585 ;; This function is called by:
  5586 ;;		_fputc
  5587 ;; This function uses a non-reentrant model
  5588 ;;
  5589                           
  5590                           
  5591                           ;psect for function _putch
  5592  0EFD                     _putch:
  5593                           
  5594                           ;incstack = 0
  5595                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5596                           ;putch@txData stored from wreg
  5597  0EFD  0020               	movlb	0	; select bank0
  5598  0EFE  00A6               	movwf	putch@txData
  5599  0EFF                     l2177:
  5600                           
  5601                           ;mcc_generated_files/eusart.c: 208: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 209: {;mcc_generated_files/eusart.c: 210:     EUSART_Write(txData);
  5602  0EFF  0826               	movf	putch@txData,w
  5603  0F00  3187  2740  318E   	fcall	_EUSART_Write
  5604  0F03                     l255:
  5605  0F03  0008               	return
  5606  0F04                     __end_of_putch:
  5607                           
  5608                           	psect	text10
  5609  0740                     __ptext10:	
  5610 ;; *************** function _EUSART_Write *****************
  5611 ;; Defined at:
  5612 ;;		line 180 in file "mcc_generated_files/eusart.c"
  5613 ;; Parameters:    Size  Location     Type
  5614 ;;  txData          1    wreg     unsigned char 
  5615 ;; Auto vars:     Size  Location     Type
  5616 ;;  txData          1    5[BANK0 ] unsigned char 
  5617 ;; Return value:  Size  Location     Type
  5618 ;;                  1    wreg      void 
  5619 ;; Registers used:
  5620 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5621 ;; Tracked objects:
  5622 ;;		On entry : 0/0
  5623 ;;		On exit  : 0/0
  5624 ;;		Unchanged: 0/0
  5625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5627 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5628 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5629 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5630 ;;Total ram usage:        2 bytes
  5631 ;; Hardware stack levels used: 1
  5632 ;; Hardware stack levels required when called: 4
  5633 ;; This function calls:
  5634 ;;		Nothing
  5635 ;; This function is called by:
  5636 ;;		_putch
  5637 ;; This function uses a non-reentrant model
  5638 ;;
  5639                           
  5640                           
  5641                           ;psect for function _EUSART_Write
  5642  0740                     _EUSART_Write:
  5643                           
  5644                           ;incstack = 0
  5645                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  5646                           ;EUSART_Write@txData stored from wreg
  5647  0740  0020               	movlb	0	; select bank0
  5648  0741  00A5               	movwf	EUSART_Write@txData
  5649  0742                     l2159:
  5650  0742                     l2161:	
  5651                           ;mcc_generated_files/eusart.c: 180: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 181: {;mcc_generated_files/eusart.c: 182:     while(0 == eusartTxBufferRemai
      +                          ning)
  5652                           
  5653                           
  5654                           ;mcc_generated_files/eusart.c: 182:     while(0 == eusartTxBufferRemaining)
  5655  0742  0021               	movlb	1	; select bank1
  5656  0743  0866               	movf	_eusartTxBufferRemaining^(0+128),w	;volatile
  5657  0744  1903               	btfsc	3,2
  5658  0745  2F47               	goto	u1811
  5659  0746  2F48               	goto	u1810
  5660  0747                     u1811:
  5661  0747  2F42               	goto	l2161
  5662  0748                     u1810:
  5663  0748                     l245:
  5664                           
  5665                           ;mcc_generated_files/eusart.c: 186:     if(0 == PIE3bits.TXIE)
  5666  0748  002E               	movlb	14	; select bank14
  5667  0749  1A19               	btfsc	25,4	;volatile
  5668  074A  2F4C               	goto	u1821
  5669  074B  2F4D               	goto	u1820
  5670  074C                     u1821:
  5671  074C  2F52               	goto	l246
  5672  074D                     u1820:
  5673  074D                     l2163:
  5674                           
  5675                           ;mcc_generated_files/eusart.c: 187:     {;mcc_generated_files/eusart.c: 188:         TX1
      +                          REG = txData;
  5676  074D  0020               	movlb	0	; select bank0
  5677  074E  0825               	movf	EUSART_Write@txData,w
  5678  074F  0022               	movlb	2	; select bank2
  5679  0750  009A               	movwf	26	;volatile
  5680                           
  5681                           ;mcc_generated_files/eusart.c: 189:     }
  5682  0751  2F6A               	goto	l2175
  5683  0752                     l246:	
  5684                           ;mcc_generated_files/eusart.c: 190:     else
  5685                           
  5686                           
  5687                           ;mcc_generated_files/eusart.c: 191:     {;mcc_generated_files/eusart.c: 192:         PIE
      +                          3bits.TXIE = 0;
  5688  0752  1219               	bcf	25,4	;volatile
  5689  0753                     l2165:
  5690                           
  5691                           ;mcc_generated_files/eusart.c: 193:         eusartTxBuffer[eusartTxHead++] = txData;
  5692  0753  0020               	movlb	0	; select bank0
  5693  0754  0825               	movf	EUSART_Write@txData,w
  5694  0755  00A4               	movwf	??_EUSART_Write
  5695  0756  086B               	movf	_eusartTxHead,w
  5696  0757  3EB0               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  5697  0758  0086               	movwf	6
  5698  0759  0187               	clrf	7
  5699  075A  0824               	movf	??_EUSART_Write,w
  5700  075B  0081               	movwf	1
  5701  075C                     l2167:
  5702  075C  3001               	movlw	1
  5703  075D  00A4               	movwf	??_EUSART_Write
  5704  075E  0824               	movf	??_EUSART_Write,w
  5705  075F  07EB               	addwf	_eusartTxHead,f	;volatile
  5706  0760                     l2169:
  5707                           
  5708                           ;mcc_generated_files/eusart.c: 194:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  5709  0760  3008               	movlw	8
  5710  0761  026B               	subwf	_eusartTxHead,w	;volatile
  5711  0762  1C03               	skipc
  5712  0763  2F65               	goto	u1831
  5713  0764  2F66               	goto	u1830
  5714  0765                     u1831:
  5715  0765  2F67               	goto	l2173
  5716  0766                     u1830:
  5717  0766                     l2171:
  5718                           
  5719                           ;mcc_generated_files/eusart.c: 195:         {;mcc_generated_files/eusart.c: 196:        
      +                               eusartTxHead = 0;
  5720  0766  01EB               	clrf	_eusartTxHead	;volatile
  5721  0767                     l2173:
  5722                           
  5723                           ;mcc_generated_files/eusart.c: 198:         eusartTxBufferRemaining--;
  5724  0767  3001               	movlw	1
  5725  0768  0021               	movlb	1	; select bank1
  5726  0769  02E6               	subwf	_eusartTxBufferRemaining^(0+128),f	;volatile
  5727  076A                     l2175:
  5728                           
  5729                           ;mcc_generated_files/eusart.c: 200:     PIE3bits.TXIE = 1;
  5730  076A  002E               	movlb	14	; select bank14
  5731  076B  1619               	bsf	25,4	;volatile
  5732  076C                     l249:
  5733  076C  0008               	return
  5734  076D                     __end_of_EUSART_Write:
  5735                           
  5736                           	psect	text11
  5737  0FC0                     __ptext11:	
  5738 ;; *************** function _abs *****************
  5739 ;; Defined at:
  5740 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  5741 ;; Parameters:    Size  Location     Type
  5742 ;;  a               2   23[BANK0 ] int 
  5743 ;; Auto vars:     Size  Location     Type
  5744 ;;		None
  5745 ;; Return value:  Size  Location     Type
  5746 ;;                  2   23[BANK0 ] int 
  5747 ;; Registers used:
  5748 ;;		wreg, status,2, status,0
  5749 ;; Tracked objects:
  5750 ;;		On entry : 0/0
  5751 ;;		On exit  : 0/0
  5752 ;;		Unchanged: 0/0
  5753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5754 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5756 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5757 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5758 ;;Total ram usage:        4 bytes
  5759 ;; Hardware stack levels used: 1
  5760 ;; Hardware stack levels required when called: 4
  5761 ;; This function calls:
  5762 ;;		Nothing
  5763 ;; This function is called by:
  5764 ;;		_dtoa
  5765 ;; This function uses a non-reentrant model
  5766 ;;
  5767                           
  5768                           
  5769                           ;psect for function _abs
  5770  0FC0                     _abs:
  5771  0FC0                     l2301:	
  5772                           ;incstack = 0
  5773                           ; Regs used in _abs: [wreg+status,2+status,0]
  5774                           
  5775  0FC0  0020               	movlb	0	; select bank0
  5776  0FC1  0838               	movf	abs@a+1,w
  5777  0FC2  3A80               	xorlw	128
  5778  0FC3  00B9               	movwf	??_abs
  5779  0FC4  3080               	movlw	128
  5780  0FC5  0239               	subwf	??_abs,w
  5781  0FC6  1D03               	skipz
  5782  0FC7  2FCA               	goto	u2155
  5783  0FC8  3001               	movlw	1
  5784  0FC9  0237               	subwf	abs@a,w
  5785  0FCA                     u2155:
  5786  0FCA  1803               	skipnc
  5787  0FCB  2FCD               	goto	u2151
  5788  0FCC  2FCE               	goto	u2150
  5789  0FCD                     u2151:
  5790  0FCD  2FDB               	goto	l995
  5791  0FCE                     u2150:
  5792  0FCE                     l2303:
  5793  0FCE  0020               	movlb	0	; select bank0
  5794  0FCF  0937               	comf	abs@a,w
  5795  0FD0  00B9               	movwf	??_abs
  5796  0FD1  0938               	comf	abs@a+1,w
  5797  0FD2  00BA               	movwf	??_abs+1
  5798  0FD3  0AB9               	incf	??_abs,f
  5799  0FD4  1903               	skipnz
  5800  0FD5  0ABA               	incf	??_abs+1,f
  5801  0FD6  0839               	movf	??_abs,w
  5802  0FD7  00B7               	movwf	?_abs
  5803  0FD8  083A               	movf	??_abs+1,w
  5804  0FD9  00B8               	movwf	?_abs+1
  5805  0FDA  2FDB               	goto	l998
  5806  0FDB                     l995:
  5807  0FDB                     l998:
  5808  0FDB  0008               	return
  5809  0FDC                     __end_of_abs:
  5810                           
  5811                           	psect	text12
  5812  03AE                     __ptext12:	
  5813 ;; *************** function ___aomod *****************
  5814 ;; Defined at:
  5815 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  5816 ;; Parameters:    Size  Location     Type
  5817 ;;  divisor         8    4[BANK0 ] long long 
  5818 ;;  dividend        8   12[BANK0 ] long long 
  5819 ;; Auto vars:     Size  Location     Type
  5820 ;;  sign            1   22[BANK0 ] unsigned char 
  5821 ;;  counter         1   21[BANK0 ] unsigned char 
  5822 ;; Return value:  Size  Location     Type
  5823 ;;                  8    4[BANK0 ] long long 
  5824 ;; Registers used:
  5825 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5826 ;; Tracked objects:
  5827 ;;		On entry : 0/0
  5828 ;;		On exit  : 0/0
  5829 ;;		Unchanged: 0/0
  5830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5831 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5832 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5833 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5834 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5835 ;;Total ram usage:       19 bytes
  5836 ;; Hardware stack levels used: 1
  5837 ;; Hardware stack levels required when called: 4
  5838 ;; This function calls:
  5839 ;;		Nothing
  5840 ;; This function is called by:
  5841 ;;		_dtoa
  5842 ;; This function uses a non-reentrant model
  5843 ;;
  5844                           
  5845                           
  5846                           ;psect for function ___aomod
  5847  03AE                     ___aomod:
  5848  03AE                     l2249:	
  5849                           ;incstack = 0
  5850                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  5851                           
  5852  03AE  0020               	movlb	0	; select bank0
  5853  03AF  01B6               	clrf	___aomod@sign
  5854  03B0                     l2251:
  5855  03B0  302C               	movlw	low ___aomod@dividend
  5856  03B1  0086               	movwf	6
  5857  03B2  3000               	movlw	high ___aomod@dividend
  5858  03B3  0087               	movwf	7
  5859  03B4  3F47               	moviw [7]fsr1
  5860  03B5  00B4               	movwf	??___aomod
  5861  03B6  1FB4               	btfss	??___aomod,7
  5862  03B7  2BB9               	goto	u2011
  5863  03B8  2BBA               	goto	u2010
  5864  03B9                     u2011:
  5865  03B9  2BDC               	goto	l2255
  5866  03BA                     u2010:
  5867  03BA                     l2253:
  5868  03BA  0020               	movlb	0	; select bank0
  5869  03BB  09AC               	comf	___aomod@dividend,f
  5870  03BC  09AD               	comf	___aomod@dividend+1,f
  5871  03BD  09AE               	comf	___aomod@dividend+2,f
  5872  03BE  09AF               	comf	___aomod@dividend+3,f
  5873  03BF  09B0               	comf	___aomod@dividend+4,f
  5874  03C0  09B1               	comf	___aomod@dividend+5,f
  5875  03C1  09B2               	comf	___aomod@dividend+6,f
  5876  03C2  09B3               	comf	___aomod@dividend+7,f
  5877  03C3  0AAC               	incf	___aomod@dividend,f
  5878  03C4  1D03               	skipz
  5879  03C5  2BD9               	goto	u202lld
  5880  03C6  0AAD               	incf	___aomod@dividend+1,f
  5881  03C7  1D03               	skipz
  5882  03C8  2BD9               	goto	u202lld
  5883  03C9  0AAE               	incf	___aomod@dividend+2,f
  5884  03CA  1D03               	skipz
  5885  03CB  2BD9               	goto	u202lld
  5886  03CC  0AAF               	incf	___aomod@dividend+3,f
  5887  03CD  1D03               	skipz
  5888  03CE  2BD9               	goto	u202lld
  5889  03CF  0AB0               	incf	___aomod@dividend+4,f
  5890  03D0  1D03               	skipz
  5891  03D1  2BD9               	goto	u202lld
  5892  03D2  0AB1               	incf	___aomod@dividend+5,f
  5893  03D3  1D03               	skipz
  5894  03D4  2BD9               	goto	u202lld
  5895  03D5  0AB2               	incf	___aomod@dividend+6,f
  5896  03D6  1D03               	skipz
  5897  03D7  2BD9               	goto	u202lld
  5898  03D8  0AB3               	incf	___aomod@dividend+7,f
  5899  03D9                     u202lld:
  5900  03D9  0020               	movlb	0	; select bank0
  5901  03DA  01B6               	clrf	___aomod@sign
  5902  03DB  0AB6               	incf	___aomod@sign,f
  5903  03DC                     l2255:
  5904  03DC  3024               	movlw	low ___aomod@divisor
  5905  03DD  0086               	movwf	6
  5906  03DE  3000               	movlw	high ___aomod@divisor
  5907  03DF  0087               	movwf	7
  5908  03E0  3F47               	moviw [7]fsr1
  5909  03E1  0020               	movlb	0	; select bank0
  5910  03E2  00B4               	movwf	??___aomod
  5911  03E3  1FB4               	btfss	??___aomod,7
  5912  03E4  2BE6               	goto	u2031
  5913  03E5  2BE7               	goto	u2030
  5914  03E6                     u2031:
  5915  03E6  2C06               	goto	l2259
  5916  03E7                     u2030:
  5917  03E7                     l2257:
  5918  03E7  0020               	movlb	0	; select bank0
  5919  03E8  09A4               	comf	___aomod@divisor,f
  5920  03E9  09A5               	comf	___aomod@divisor+1,f
  5921  03EA  09A6               	comf	___aomod@divisor+2,f
  5922  03EB  09A7               	comf	___aomod@divisor+3,f
  5923  03EC  09A8               	comf	___aomod@divisor+4,f
  5924  03ED  09A9               	comf	___aomod@divisor+5,f
  5925  03EE  09AA               	comf	___aomod@divisor+6,f
  5926  03EF  09AB               	comf	___aomod@divisor+7,f
  5927  03F0  0AA4               	incf	___aomod@divisor,f
  5928  03F1  1D03               	skipz
  5929  03F2  2C06               	goto	u204lld
  5930  03F3  0AA5               	incf	___aomod@divisor+1,f
  5931  03F4  1D03               	skipz
  5932  03F5  2C06               	goto	u204lld
  5933  03F6  0AA6               	incf	___aomod@divisor+2,f
  5934  03F7  1D03               	skipz
  5935  03F8  2C06               	goto	u204lld
  5936  03F9  0AA7               	incf	___aomod@divisor+3,f
  5937  03FA  1D03               	skipz
  5938  03FB  2C06               	goto	u204lld
  5939  03FC  0AA8               	incf	___aomod@divisor+4,f
  5940  03FD  1D03               	skipz
  5941  03FE  2C06               	goto	u204lld
  5942  03FF  0AA9               	incf	___aomod@divisor+5,f
  5943  0400  1D03               	skipz
  5944  0401  2C06               	goto	u204lld
  5945  0402  0AAA               	incf	___aomod@divisor+6,f
  5946  0403  1D03               	skipz
  5947  0404  2C06               	goto	u204lld
  5948  0405  0AAB               	incf	___aomod@divisor+7,f
  5949  0406                     u204lld:
  5950  0406                     l2259:
  5951  0406  0020               	movlb	0	; select bank0
  5952  0407  0824               	movf	___aomod@divisor,w
  5953  0408  0425               	iorwf	___aomod@divisor+1,w
  5954  0409  0426               	iorwf	___aomod@divisor+2,w
  5955  040A  0427               	iorwf	___aomod@divisor+3,w
  5956  040B  0428               	iorwf	___aomod@divisor+4,w
  5957  040C  0429               	iorwf	___aomod@divisor+5,w
  5958  040D  042A               	iorwf	___aomod@divisor+6,w
  5959  040E  042B               	iorwf	___aomod@divisor+7,w
  5960  040F  1903               	skipnz
  5961  0410  2C12               	goto	u2051
  5962  0411  2C13               	goto	u2050
  5963  0412                     u2051:
  5964  0412  2C66               	goto	l2275
  5965  0413                     u2050:
  5966  0413                     l2261:
  5967  0413  01B5               	clrf	___aomod@counter
  5968  0414  0AB5               	incf	___aomod@counter,f
  5969  0415  2C22               	goto	l2267
  5970  0416                     l2263:
  5971  0416  35A4               	lslf	___aomod@divisor,f
  5972  0417  0DA5               	rlf	___aomod@divisor+1,f
  5973  0418  0DA6               	rlf	___aomod@divisor+2,f
  5974  0419  0DA7               	rlf	___aomod@divisor+3,f
  5975  041A  0DA8               	rlf	___aomod@divisor+4,f
  5976  041B  0DA9               	rlf	___aomod@divisor+5,f
  5977  041C  0DAA               	rlf	___aomod@divisor+6,f
  5978  041D  0DAB               	rlf	___aomod@divisor+7,f
  5979  041E                     l2265:
  5980  041E  3001               	movlw	1
  5981  041F  00B4               	movwf	??___aomod
  5982  0420  0834               	movf	??___aomod,w
  5983  0421  07B5               	addwf	___aomod@counter,f
  5984  0422                     l2267:
  5985  0422  1FAB               	btfss	___aomod@divisor+7,7
  5986  0423  2C25               	goto	u2061
  5987  0424  2C26               	goto	u2060
  5988  0425                     u2061:
  5989  0425  2C16               	goto	l2263
  5990  0426                     u2060:
  5991  0426                     l2269:
  5992  0426  082B               	movf	___aomod@divisor+7,w
  5993  0427  0233               	subwf	___aomod@dividend+7,w
  5994  0428  1D03               	skipz
  5995  0429  2C44               	goto	u2075
  5996  042A  082A               	movf	___aomod@divisor+6,w
  5997  042B  0232               	subwf	___aomod@dividend+6,w
  5998  042C  1D03               	skipz
  5999  042D  2C44               	goto	u2075
  6000  042E  0829               	movf	___aomod@divisor+5,w
  6001  042F  0231               	subwf	___aomod@dividend+5,w
  6002  0430  1D03               	skipz
  6003  0431  2C44               	goto	u2075
  6004  0432  0828               	movf	___aomod@divisor+4,w
  6005  0433  0230               	subwf	___aomod@dividend+4,w
  6006  0434  1D03               	skipz
  6007  0435  2C44               	goto	u2075
  6008  0436  0827               	movf	___aomod@divisor+3,w
  6009  0437  022F               	subwf	___aomod@dividend+3,w
  6010  0438  1D03               	skipz
  6011  0439  2C44               	goto	u2075
  6012  043A  0826               	movf	___aomod@divisor+2,w
  6013  043B  022E               	subwf	___aomod@dividend+2,w
  6014  043C  1D03               	skipz
  6015  043D  2C44               	goto	u2075
  6016  043E  0825               	movf	___aomod@divisor+1,w
  6017  043F  022D               	subwf	___aomod@dividend+1,w
  6018  0440  1D03               	skipz
  6019  0441  2C44               	goto	u2075
  6020  0442  0824               	movf	___aomod@divisor,w
  6021  0443  022C               	subwf	___aomod@dividend,w
  6022  0444                     u2075:
  6023  0444  1C03               	skipc
  6024  0445  2C47               	goto	u2071
  6025  0446  2C48               	goto	u2070
  6026  0447                     u2071:
  6027  0447  2C58               	goto	l2273
  6028  0448                     u2070:
  6029  0448                     l2271:
  6030  0448  0824               	movf	___aomod@divisor,w
  6031  0449  02AC               	subwf	___aomod@dividend,f
  6032  044A  0825               	movf	___aomod@divisor+1,w
  6033  044B  3BAD               	subwfb	___aomod@dividend+1,f
  6034  044C  0826               	movf	___aomod@divisor+2,w
  6035  044D  3BAE               	subwfb	___aomod@dividend+2,f
  6036  044E  0827               	movf	___aomod@divisor+3,w
  6037  044F  3BAF               	subwfb	___aomod@dividend+3,f
  6038  0450  0828               	movf	___aomod@divisor+4,w
  6039  0451  3BB0               	subwfb	___aomod@dividend+4,f
  6040  0452  0829               	movf	___aomod@divisor+5,w
  6041  0453  3BB1               	subwfb	___aomod@dividend+5,f
  6042  0454  082A               	movf	___aomod@divisor+6,w
  6043  0455  3BB2               	subwfb	___aomod@dividend+6,f
  6044  0456  082B               	movf	___aomod@divisor+7,w
  6045  0457  3BB3               	subwfb	___aomod@dividend+7,f
  6046  0458                     l2273:
  6047  0458  36AB               	lsrf	___aomod@divisor+7,f
  6048  0459  0CAA               	rrf	___aomod@divisor+6,f
  6049  045A  0CA9               	rrf	___aomod@divisor+5,f
  6050  045B  0CA8               	rrf	___aomod@divisor+4,f
  6051  045C  0CA7               	rrf	___aomod@divisor+3,f
  6052  045D  0CA6               	rrf	___aomod@divisor+2,f
  6053  045E  0CA5               	rrf	___aomod@divisor+1,f
  6054  045F  0CA4               	rrf	___aomod@divisor,f
  6055  0460  3001               	movlw	1
  6056  0461  02B5               	subwf	___aomod@counter,f
  6057  0462  1D03               	btfss	3,2
  6058  0463  2C65               	goto	u2081
  6059  0464  2C66               	goto	u2080
  6060  0465                     u2081:
  6061  0465  2C26               	goto	l2269
  6062  0466                     u2080:
  6063  0466                     l2275:
  6064  0466  0836               	movf	___aomod@sign,w
  6065  0467  1903               	btfsc	3,2
  6066  0468  2C6A               	goto	u2091
  6067  0469  2C6B               	goto	u2090
  6068  046A                     u2091:
  6069  046A  2C89               	goto	l569
  6070  046B                     u2090:
  6071  046B                     l2277:
  6072  046B  09AC               	comf	___aomod@dividend,f
  6073  046C  09AD               	comf	___aomod@dividend+1,f
  6074  046D  09AE               	comf	___aomod@dividend+2,f
  6075  046E  09AF               	comf	___aomod@dividend+3,f
  6076  046F  09B0               	comf	___aomod@dividend+4,f
  6077  0470  09B1               	comf	___aomod@dividend+5,f
  6078  0471  09B2               	comf	___aomod@dividend+6,f
  6079  0472  09B3               	comf	___aomod@dividend+7,f
  6080  0473  0AAC               	incf	___aomod@dividend,f
  6081  0474  1D03               	skipz
  6082  0475  2C89               	goto	u210lld
  6083  0476  0AAD               	incf	___aomod@dividend+1,f
  6084  0477  1D03               	skipz
  6085  0478  2C89               	goto	u210lld
  6086  0479  0AAE               	incf	___aomod@dividend+2,f
  6087  047A  1D03               	skipz
  6088  047B  2C89               	goto	u210lld
  6089  047C  0AAF               	incf	___aomod@dividend+3,f
  6090  047D  1D03               	skipz
  6091  047E  2C89               	goto	u210lld
  6092  047F  0AB0               	incf	___aomod@dividend+4,f
  6093  0480  1D03               	skipz
  6094  0481  2C89               	goto	u210lld
  6095  0482  0AB1               	incf	___aomod@dividend+5,f
  6096  0483  1D03               	skipz
  6097  0484  2C89               	goto	u210lld
  6098  0485  0AB2               	incf	___aomod@dividend+6,f
  6099  0486  1D03               	skipz
  6100  0487  2C89               	goto	u210lld
  6101  0488  0AB3               	incf	___aomod@dividend+7,f
  6102  0489                     u210lld:
  6103  0489                     l569:
  6104  0489  0020               	movlb	0	; select bank0
  6105  048A  082C               	movf	___aomod@dividend,w
  6106  048B  00A4               	movwf	?___aomod
  6107  048C  082D               	movf	___aomod@dividend+1,w
  6108  048D  00A5               	movwf	?___aomod+1
  6109  048E  082E               	movf	___aomod@dividend+2,w
  6110  048F  00A6               	movwf	?___aomod+2
  6111  0490  082F               	movf	___aomod@dividend+3,w
  6112  0491  00A7               	movwf	?___aomod+3
  6113  0492  0830               	movf	___aomod@dividend+4,w
  6114  0493  00A8               	movwf	?___aomod+4
  6115  0494  0831               	movf	___aomod@dividend+5,w
  6116  0495  00A9               	movwf	?___aomod+5
  6117  0496  0832               	movf	___aomod@dividend+6,w
  6118  0497  00AA               	movwf	?___aomod+6
  6119  0498  0833               	movf	___aomod@dividend+7,w
  6120  0499  00AB               	movwf	?___aomod+7
  6121  049A                     l570:
  6122  049A  0008               	return
  6123  049B                     __end_of___aomod:
  6124                           
  6125                           	psect	text13
  6126  01B6                     __ptext13:	
  6127 ;; *************** function ___aodiv *****************
  6128 ;; Defined at:
  6129 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  6130 ;; Parameters:    Size  Location     Type
  6131 ;;  divisor         8    4[BANK0 ] long long 
  6132 ;;  dividend        8   12[BANK0 ] long long 
  6133 ;; Auto vars:     Size  Location     Type
  6134 ;;  quotient        8   23[BANK0 ] long long 
  6135 ;;  sign            1   22[BANK0 ] unsigned char 
  6136 ;;  counter         1   21[BANK0 ] unsigned char 
  6137 ;; Return value:  Size  Location     Type
  6138 ;;                  8    4[BANK0 ] long long 
  6139 ;; Registers used:
  6140 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6141 ;; Tracked objects:
  6142 ;;		On entry : 0/0
  6143 ;;		On exit  : 0/0
  6144 ;;		Unchanged: 0/0
  6145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6146 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6147 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6148 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6149 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6150 ;;Total ram usage:       27 bytes
  6151 ;; Hardware stack levels used: 1
  6152 ;; Hardware stack levels required when called: 4
  6153 ;; This function calls:
  6154 ;;		Nothing
  6155 ;; This function is called by:
  6156 ;;		_dtoa
  6157 ;; This function uses a non-reentrant model
  6158 ;;
  6159                           
  6160                           
  6161                           ;psect for function ___aodiv
  6162  01B6                     ___aodiv:
  6163  01B6                     l2211:	
  6164                           ;incstack = 0
  6165                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  6166                           
  6167  01B6  0020               	movlb	0	; select bank0
  6168  01B7  01B6               	clrf	___aodiv@sign
  6169  01B8                     l2213:
  6170  01B8  3024               	movlw	low ___aodiv@divisor
  6171  01B9  0086               	movwf	6
  6172  01BA  3000               	movlw	high ___aodiv@divisor
  6173  01BB  0087               	movwf	7
  6174  01BC  3F47               	moviw [7]fsr1
  6175  01BD  00B4               	movwf	??___aodiv
  6176  01BE  1FB4               	btfss	??___aodiv,7
  6177  01BF  29C1               	goto	u1901
  6178  01C0  29C2               	goto	u1900
  6179  01C1                     u1901:
  6180  01C1  29E4               	goto	l2217
  6181  01C2                     u1900:
  6182  01C2                     l2215:
  6183  01C2  0020               	movlb	0	; select bank0
  6184  01C3  09A4               	comf	___aodiv@divisor,f
  6185  01C4  09A5               	comf	___aodiv@divisor+1,f
  6186  01C5  09A6               	comf	___aodiv@divisor+2,f
  6187  01C6  09A7               	comf	___aodiv@divisor+3,f
  6188  01C7  09A8               	comf	___aodiv@divisor+4,f
  6189  01C8  09A9               	comf	___aodiv@divisor+5,f
  6190  01C9  09AA               	comf	___aodiv@divisor+6,f
  6191  01CA  09AB               	comf	___aodiv@divisor+7,f
  6192  01CB  0AA4               	incf	___aodiv@divisor,f
  6193  01CC  1D03               	skipz
  6194  01CD  29E1               	goto	u191lld
  6195  01CE  0AA5               	incf	___aodiv@divisor+1,f
  6196  01CF  1D03               	skipz
  6197  01D0  29E1               	goto	u191lld
  6198  01D1  0AA6               	incf	___aodiv@divisor+2,f
  6199  01D2  1D03               	skipz
  6200  01D3  29E1               	goto	u191lld
  6201  01D4  0AA7               	incf	___aodiv@divisor+3,f
  6202  01D5  1D03               	skipz
  6203  01D6  29E1               	goto	u191lld
  6204  01D7  0AA8               	incf	___aodiv@divisor+4,f
  6205  01D8  1D03               	skipz
  6206  01D9  29E1               	goto	u191lld
  6207  01DA  0AA9               	incf	___aodiv@divisor+5,f
  6208  01DB  1D03               	skipz
  6209  01DC  29E1               	goto	u191lld
  6210  01DD  0AAA               	incf	___aodiv@divisor+6,f
  6211  01DE  1D03               	skipz
  6212  01DF  29E1               	goto	u191lld
  6213  01E0  0AAB               	incf	___aodiv@divisor+7,f
  6214  01E1                     u191lld:
  6215  01E1  0020               	movlb	0	; select bank0
  6216  01E2  01B6               	clrf	___aodiv@sign
  6217  01E3  0AB6               	incf	___aodiv@sign,f
  6218  01E4                     l2217:
  6219  01E4  302C               	movlw	low ___aodiv@dividend
  6220  01E5  0086               	movwf	6
  6221  01E6  3000               	movlw	high ___aodiv@dividend
  6222  01E7  0087               	movwf	7
  6223  01E8  3F47               	moviw [7]fsr1
  6224  01E9  0020               	movlb	0	; select bank0
  6225  01EA  00B4               	movwf	??___aodiv
  6226  01EB  1FB4               	btfss	??___aodiv,7
  6227  01EC  29EE               	goto	u1921
  6228  01ED  29EF               	goto	u1920
  6229  01EE                     u1921:
  6230  01EE  2A13               	goto	l2223
  6231  01EF                     u1920:
  6232  01EF                     l2219:
  6233  01EF  0020               	movlb	0	; select bank0
  6234  01F0  09AC               	comf	___aodiv@dividend,f
  6235  01F1  09AD               	comf	___aodiv@dividend+1,f
  6236  01F2  09AE               	comf	___aodiv@dividend+2,f
  6237  01F3  09AF               	comf	___aodiv@dividend+3,f
  6238  01F4  09B0               	comf	___aodiv@dividend+4,f
  6239  01F5  09B1               	comf	___aodiv@dividend+5,f
  6240  01F6  09B2               	comf	___aodiv@dividend+6,f
  6241  01F7  09B3               	comf	___aodiv@dividend+7,f
  6242  01F8  0AAC               	incf	___aodiv@dividend,f
  6243  01F9  1D03               	skipz
  6244  01FA  2A0E               	goto	u193lld
  6245  01FB  0AAD               	incf	___aodiv@dividend+1,f
  6246  01FC  1D03               	skipz
  6247  01FD  2A0E               	goto	u193lld
  6248  01FE  0AAE               	incf	___aodiv@dividend+2,f
  6249  01FF  1D03               	skipz
  6250  0200  2A0E               	goto	u193lld
  6251  0201  0AAF               	incf	___aodiv@dividend+3,f
  6252  0202  1D03               	skipz
  6253  0203  2A0E               	goto	u193lld
  6254  0204  0AB0               	incf	___aodiv@dividend+4,f
  6255  0205  1D03               	skipz
  6256  0206  2A0E               	goto	u193lld
  6257  0207  0AB1               	incf	___aodiv@dividend+5,f
  6258  0208  1D03               	skipz
  6259  0209  2A0E               	goto	u193lld
  6260  020A  0AB2               	incf	___aodiv@dividend+6,f
  6261  020B  1D03               	skipz
  6262  020C  2A0E               	goto	u193lld
  6263  020D  0AB3               	incf	___aodiv@dividend+7,f
  6264  020E                     u193lld:
  6265  020E                     l2221:
  6266  020E  3001               	movlw	1
  6267  020F  0020               	movlb	0	; select bank0
  6268  0210  00B4               	movwf	??___aodiv
  6269  0211  0834               	movf	??___aodiv,w
  6270  0212  06B6               	xorwf	___aodiv@sign,f
  6271  0213                     l2223:
  6272  0213  3037               	movlw	low ___aodiv@quotient
  6273  0214  0086               	movwf	6
  6274  0215  3000               	movlw	high ___aodiv@quotient
  6275  0216  0087               	movwf	7
  6276  0217  3008               	movlw	8
  6277  0218  0020               	movlb	0	; select bank0
  6278  0219  00B4               	movwf	??___aodiv
  6279  021A  3000               	movlw	0
  6280  021B                     u1940:
  6281  021B  001E               	movwi fsr1++
  6282  021C  0BB4               	decfsz	??___aodiv,f
  6283  021D  2A1B               	goto	u1940
  6284  021E                     l2225:
  6285  021E  0824               	movf	___aodiv@divisor,w
  6286  021F  0425               	iorwf	___aodiv@divisor+1,w
  6287  0220  0426               	iorwf	___aodiv@divisor+2,w
  6288  0221  0427               	iorwf	___aodiv@divisor+3,w
  6289  0222  0428               	iorwf	___aodiv@divisor+4,w
  6290  0223  0429               	iorwf	___aodiv@divisor+5,w
  6291  0224  042A               	iorwf	___aodiv@divisor+6,w
  6292  0225  042B               	iorwf	___aodiv@divisor+7,w
  6293  0226  1903               	skipnz
  6294  0227  2A29               	goto	u1951
  6295  0228  2A2A               	goto	u1950
  6296  0229                     u1951:
  6297  0229  2A86               	goto	l2245
  6298  022A                     u1950:
  6299  022A                     l2227:
  6300  022A  01B5               	clrf	___aodiv@counter
  6301  022B  0AB5               	incf	___aodiv@counter,f
  6302  022C  2A39               	goto	l2233
  6303  022D                     l2229:
  6304  022D  35A4               	lslf	___aodiv@divisor,f
  6305  022E  0DA5               	rlf	___aodiv@divisor+1,f
  6306  022F  0DA6               	rlf	___aodiv@divisor+2,f
  6307  0230  0DA7               	rlf	___aodiv@divisor+3,f
  6308  0231  0DA8               	rlf	___aodiv@divisor+4,f
  6309  0232  0DA9               	rlf	___aodiv@divisor+5,f
  6310  0233  0DAA               	rlf	___aodiv@divisor+6,f
  6311  0234  0DAB               	rlf	___aodiv@divisor+7,f
  6312  0235                     l2231:
  6313  0235  3001               	movlw	1
  6314  0236  00B4               	movwf	??___aodiv
  6315  0237  0834               	movf	??___aodiv,w
  6316  0238  07B5               	addwf	___aodiv@counter,f
  6317  0239                     l2233:
  6318  0239  1FAB               	btfss	___aodiv@divisor+7,7
  6319  023A  2A3C               	goto	u1961
  6320  023B  2A3D               	goto	u1960
  6321  023C                     u1961:
  6322  023C  2A2D               	goto	l2229
  6323  023D                     u1960:
  6324  023D                     l2235:
  6325  023D  35B7               	lslf	___aodiv@quotient,f
  6326  023E  0DB8               	rlf	___aodiv@quotient+1,f
  6327  023F  0DB9               	rlf	___aodiv@quotient+2,f
  6328  0240  0DBA               	rlf	___aodiv@quotient+3,f
  6329  0241  0DBB               	rlf	___aodiv@quotient+4,f
  6330  0242  0DBC               	rlf	___aodiv@quotient+5,f
  6331  0243  0DBD               	rlf	___aodiv@quotient+6,f
  6332  0244  0DBE               	rlf	___aodiv@quotient+7,f
  6333  0245                     l2237:
  6334  0245  082B               	movf	___aodiv@divisor+7,w
  6335  0246  0233               	subwf	___aodiv@dividend+7,w
  6336  0247  1D03               	skipz
  6337  0248  2A63               	goto	u1975
  6338  0249  082A               	movf	___aodiv@divisor+6,w
  6339  024A  0232               	subwf	___aodiv@dividend+6,w
  6340  024B  1D03               	skipz
  6341  024C  2A63               	goto	u1975
  6342  024D  0829               	movf	___aodiv@divisor+5,w
  6343  024E  0231               	subwf	___aodiv@dividend+5,w
  6344  024F  1D03               	skipz
  6345  0250  2A63               	goto	u1975
  6346  0251  0828               	movf	___aodiv@divisor+4,w
  6347  0252  0230               	subwf	___aodiv@dividend+4,w
  6348  0253  1D03               	skipz
  6349  0254  2A63               	goto	u1975
  6350  0255  0827               	movf	___aodiv@divisor+3,w
  6351  0256  022F               	subwf	___aodiv@dividend+3,w
  6352  0257  1D03               	skipz
  6353  0258  2A63               	goto	u1975
  6354  0259  0826               	movf	___aodiv@divisor+2,w
  6355  025A  022E               	subwf	___aodiv@dividend+2,w
  6356  025B  1D03               	skipz
  6357  025C  2A63               	goto	u1975
  6358  025D  0825               	movf	___aodiv@divisor+1,w
  6359  025E  022D               	subwf	___aodiv@dividend+1,w
  6360  025F  1D03               	skipz
  6361  0260  2A63               	goto	u1975
  6362  0261  0824               	movf	___aodiv@divisor,w
  6363  0262  022C               	subwf	___aodiv@dividend,w
  6364  0263                     u1975:
  6365  0263  1C03               	skipc
  6366  0264  2A66               	goto	u1971
  6367  0265  2A67               	goto	u1970
  6368  0266                     u1971:
  6369  0266  2A78               	goto	l2243
  6370  0267                     u1970:
  6371  0267                     l2239:
  6372  0267  0824               	movf	___aodiv@divisor,w
  6373  0268  02AC               	subwf	___aodiv@dividend,f
  6374  0269  0825               	movf	___aodiv@divisor+1,w
  6375  026A  3BAD               	subwfb	___aodiv@dividend+1,f
  6376  026B  0826               	movf	___aodiv@divisor+2,w
  6377  026C  3BAE               	subwfb	___aodiv@dividend+2,f
  6378  026D  0827               	movf	___aodiv@divisor+3,w
  6379  026E  3BAF               	subwfb	___aodiv@dividend+3,f
  6380  026F  0828               	movf	___aodiv@divisor+4,w
  6381  0270  3BB0               	subwfb	___aodiv@dividend+4,f
  6382  0271  0829               	movf	___aodiv@divisor+5,w
  6383  0272  3BB1               	subwfb	___aodiv@dividend+5,f
  6384  0273  082A               	movf	___aodiv@divisor+6,w
  6385  0274  3BB2               	subwfb	___aodiv@dividend+6,f
  6386  0275  082B               	movf	___aodiv@divisor+7,w
  6387  0276  3BB3               	subwfb	___aodiv@dividend+7,f
  6388  0277                     l2241:
  6389  0277  1437               	bsf	___aodiv@quotient,0
  6390  0278                     l2243:
  6391  0278  36AB               	lsrf	___aodiv@divisor+7,f
  6392  0279  0CAA               	rrf	___aodiv@divisor+6,f
  6393  027A  0CA9               	rrf	___aodiv@divisor+5,f
  6394  027B  0CA8               	rrf	___aodiv@divisor+4,f
  6395  027C  0CA7               	rrf	___aodiv@divisor+3,f
  6396  027D  0CA6               	rrf	___aodiv@divisor+2,f
  6397  027E  0CA5               	rrf	___aodiv@divisor+1,f
  6398  027F  0CA4               	rrf	___aodiv@divisor,f
  6399  0280  3001               	movlw	1
  6400  0281  02B5               	subwf	___aodiv@counter,f
  6401  0282  1D03               	btfss	3,2
  6402  0283  2A85               	goto	u1981
  6403  0284  2A86               	goto	u1980
  6404  0285                     u1981:
  6405  0285  2A3D               	goto	l2235
  6406  0286                     u1980:
  6407  0286                     l2245:
  6408  0286  0836               	movf	___aodiv@sign,w
  6409  0287  1903               	btfsc	3,2
  6410  0288  2A8A               	goto	u1991
  6411  0289  2A8B               	goto	u1990
  6412  028A                     u1991:
  6413  028A  2AA9               	goto	l556
  6414  028B                     u1990:
  6415  028B                     l2247:
  6416  028B  09B7               	comf	___aodiv@quotient,f
  6417  028C  09B8               	comf	___aodiv@quotient+1,f
  6418  028D  09B9               	comf	___aodiv@quotient+2,f
  6419  028E  09BA               	comf	___aodiv@quotient+3,f
  6420  028F  09BB               	comf	___aodiv@quotient+4,f
  6421  0290  09BC               	comf	___aodiv@quotient+5,f
  6422  0291  09BD               	comf	___aodiv@quotient+6,f
  6423  0292  09BE               	comf	___aodiv@quotient+7,f
  6424  0293  0AB7               	incf	___aodiv@quotient,f
  6425  0294  1D03               	skipz
  6426  0295  2AA9               	goto	u200lld
  6427  0296  0AB8               	incf	___aodiv@quotient+1,f
  6428  0297  1D03               	skipz
  6429  0298  2AA9               	goto	u200lld
  6430  0299  0AB9               	incf	___aodiv@quotient+2,f
  6431  029A  1D03               	skipz
  6432  029B  2AA9               	goto	u200lld
  6433  029C  0ABA               	incf	___aodiv@quotient+3,f
  6434  029D  1D03               	skipz
  6435  029E  2AA9               	goto	u200lld
  6436  029F  0ABB               	incf	___aodiv@quotient+4,f
  6437  02A0  1D03               	skipz
  6438  02A1  2AA9               	goto	u200lld
  6439  02A2  0ABC               	incf	___aodiv@quotient+5,f
  6440  02A3  1D03               	skipz
  6441  02A4  2AA9               	goto	u200lld
  6442  02A5  0ABD               	incf	___aodiv@quotient+6,f
  6443  02A6  1D03               	skipz
  6444  02A7  2AA9               	goto	u200lld
  6445  02A8  0ABE               	incf	___aodiv@quotient+7,f
  6446  02A9                     u200lld:
  6447  02A9                     l556:
  6448  02A9  0020               	movlb	0	; select bank0
  6449  02AA  0837               	movf	___aodiv@quotient,w
  6450  02AB  00A4               	movwf	?___aodiv
  6451  02AC  0838               	movf	___aodiv@quotient+1,w
  6452  02AD  00A5               	movwf	?___aodiv+1
  6453  02AE  0839               	movf	___aodiv@quotient+2,w
  6454  02AF  00A6               	movwf	?___aodiv+2
  6455  02B0  083A               	movf	___aodiv@quotient+3,w
  6456  02B1  00A7               	movwf	?___aodiv+3
  6457  02B2  083B               	movf	___aodiv@quotient+4,w
  6458  02B3  00A8               	movwf	?___aodiv+4
  6459  02B4  083C               	movf	___aodiv@quotient+5,w
  6460  02B5  00A9               	movwf	?___aodiv+5
  6461  02B6  083D               	movf	___aodiv@quotient+6,w
  6462  02B7  00AA               	movwf	?___aodiv+6
  6463  02B8  083E               	movf	___aodiv@quotient+7,w
  6464  02B9  00AB               	movwf	?___aodiv+7
  6465  02BA                     l557:
  6466  02BA  0008               	return
  6467  02BB                     __end_of___aodiv:
  6468                           
  6469                           	psect	text14
  6470  07EE                     __ptext14:	
  6471 ;; *************** function _SYSTEM_Initialize *****************
  6472 ;; Defined at:
  6473 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6474 ;; Parameters:    Size  Location     Type
  6475 ;;		None
  6476 ;; Auto vars:     Size  Location     Type
  6477 ;;		None
  6478 ;; Return value:  Size  Location     Type
  6479 ;;                  1    wreg      void 
  6480 ;; Registers used:
  6481 ;;		wreg, status,2, status,0, pclath, cstack
  6482 ;; Tracked objects:
  6483 ;;		On entry : 0/0
  6484 ;;		On exit  : 0/0
  6485 ;;		Unchanged: 0/0
  6486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6491 ;;Total ram usage:        0 bytes
  6492 ;; Hardware stack levels used: 1
  6493 ;; Hardware stack levels required when called: 6
  6494 ;; This function calls:
  6495 ;;		_EUSART_Initialize
  6496 ;;		_OSCILLATOR_Initialize
  6497 ;;		_PIN_MANAGER_Initialize
  6498 ;;		_PMD_Initialize
  6499 ;; This function is called by:
  6500 ;;		_main
  6501 ;; This function uses a non-reentrant model
  6502 ;;
  6503                           
  6504                           
  6505                           ;psect for function _SYSTEM_Initialize
  6506  07EE                     _SYSTEM_Initialize:
  6507  07EE                     l2059:	
  6508                           ;incstack = 0
  6509                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6510                           
  6511                           
  6512                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  6513  07EE  318F  2704  3187   	fcall	_PMD_Initialize
  6514  07F1                     l2061:
  6515                           
  6516                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  6517  07F1  3187  279A  3187   	fcall	_PIN_MANAGER_Initialize
  6518  07F4                     l2063:
  6519                           
  6520                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  6521  07F4  318F  2739  3187   	fcall	_OSCILLATOR_Initialize
  6522  07F7                     l2065:
  6523                           
  6524                           ;mcc_generated_files/mcc.c: 55:     EUSART_Initialize();
  6525  07F7  3186  2681  3187   	fcall	_EUSART_Initialize
  6526  07FA                     l110:
  6527  07FA  0008               	return
  6528  07FB                     __end_of_SYSTEM_Initialize:
  6529                           
  6530                           	psect	text15
  6531  0F04                     __ptext15:	
  6532 ;; *************** function _PMD_Initialize *****************
  6533 ;; Defined at:
  6534 ;;		line 72 in file "mcc_generated_files/mcc.c"
  6535 ;; Parameters:    Size  Location     Type
  6536 ;;		None
  6537 ;; Auto vars:     Size  Location     Type
  6538 ;;		None
  6539 ;; Return value:  Size  Location     Type
  6540 ;;                  1    wreg      void 
  6541 ;; Registers used:
  6542 ;;		status,2
  6543 ;; Tracked objects:
  6544 ;;		On entry : 0/0
  6545 ;;		On exit  : 0/0
  6546 ;;		Unchanged: 0/0
  6547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6552 ;;Total ram usage:        0 bytes
  6553 ;; Hardware stack levels used: 1
  6554 ;; Hardware stack levels required when called: 4
  6555 ;; This function calls:
  6556 ;;		Nothing
  6557 ;; This function is called by:
  6558 ;;		_SYSTEM_Initialize
  6559 ;; This function uses a non-reentrant model
  6560 ;;
  6561                           
  6562                           
  6563                           ;psect for function _PMD_Initialize
  6564  0F04                     _PMD_Initialize:
  6565  0F04                     l1959:	
  6566                           ;incstack = 0
  6567                           ; Regs used in _PMD_Initialize: [status,2]
  6568                           
  6569                           
  6570                           ;mcc_generated_files/mcc.c: 75:     PMD0 = 0x00;
  6571  0F04  002F               	movlb	15	; select bank15
  6572  0F05  0196               	clrf	22	;volatile
  6573                           
  6574                           ;mcc_generated_files/mcc.c: 77:     PMD1 = 0x00;
  6575  0F06  0197               	clrf	23	;volatile
  6576                           
  6577                           ;mcc_generated_files/mcc.c: 79:     PMD2 = 0x00;
  6578  0F07  0198               	clrf	24	;volatile
  6579                           
  6580                           ;mcc_generated_files/mcc.c: 81:     PMD3 = 0x00;
  6581  0F08  0199               	clrf	25	;volatile
  6582                           
  6583                           ;mcc_generated_files/mcc.c: 83:     PMD4 = 0x00;
  6584  0F09  019A               	clrf	26	;volatile
  6585                           
  6586                           ;mcc_generated_files/mcc.c: 85:     PMD5 = 0x00;
  6587  0F0A  019B               	clrf	27	;volatile
  6588  0F0B                     l116:
  6589  0F0B  0008               	return
  6590  0F0C                     __end_of_PMD_Initialize:
  6591                           
  6592                           	psect	text16
  6593  079A                     __ptext16:	
  6594 ;; *************** function _PIN_MANAGER_Initialize *****************
  6595 ;; Defined at:
  6596 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  6597 ;; Parameters:    Size  Location     Type
  6598 ;;		None
  6599 ;; Auto vars:     Size  Location     Type
  6600 ;;		None
  6601 ;; Return value:  Size  Location     Type
  6602 ;;                  1    wreg      void 
  6603 ;; Registers used:
  6604 ;;		wreg, status,2
  6605 ;; Tracked objects:
  6606 ;;		On entry : 0/0
  6607 ;;		On exit  : 0/0
  6608 ;;		Unchanged: 0/0
  6609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6614 ;;Total ram usage:        0 bytes
  6615 ;; Hardware stack levels used: 1
  6616 ;; Hardware stack levels required when called: 4
  6617 ;; This function calls:
  6618 ;;		Nothing
  6619 ;; This function is called by:
  6620 ;;		_SYSTEM_Initialize
  6621 ;; This function uses a non-reentrant model
  6622 ;;
  6623                           
  6624                           
  6625                           ;psect for function _PIN_MANAGER_Initialize
  6626  079A                     _PIN_MANAGER_Initialize:
  6627  079A                     l1929:	
  6628                           ;incstack = 0
  6629                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  6630                           
  6631                           
  6632                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  6633  079A  0020               	movlb	0	; select bank0
  6634  079B  0196               	clrf	22	;volatile
  6635                           
  6636                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  6637  079C  0197               	clrf	23	;volatile
  6638                           
  6639                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  6640  079D  0198               	clrf	24	;volatile
  6641  079E                     l1931:
  6642                           
  6643                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xD0;
  6644  079E  30D0               	movlw	208
  6645  079F  0091               	movwf	17	;volatile
  6646  07A0                     l1933:
  6647                           
  6648                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  6649  07A0  30FF               	movlw	255
  6650  07A1  0092               	movwf	18	;volatile
  6651  07A2                     l1935:
  6652                           
  6653                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFE;
  6654  07A2  30FE               	movlw	254
  6655  07A3  0093               	movwf	19	;volatile
  6656  07A4                     l1937:
  6657                           
  6658                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFC;
  6659  07A4  30FC               	movlw	252
  6660  07A5  003E               	movlb	30	; select bank30
  6661  07A6  00CE               	movwf	78	;volatile
  6662  07A7                     l1939:
  6663                           
  6664                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xFF;
  6665  07A7  30FF               	movlw	255
  6666  07A8  00C3               	movwf	67	;volatile
  6667  07A9                     l1941:
  6668                           
  6669                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0xC0;
  6670  07A9  30C0               	movlw	192
  6671  07AA  00B8               	movwf	56	;volatile
  6672                           
  6673                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
  6674  07AB  01E5               	clrf	101	;volatile
  6675                           
  6676                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
  6677  07AC  01C4               	clrf	68	;volatile
  6678                           
  6679                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
  6680  07AD  01B9               	clrf	57	;volatile
  6681                           
  6682                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x00;
  6683  07AE  01CF               	clrf	79	;volatile
  6684                           
  6685                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
  6686  07AF  01BA               	clrf	58	;volatile
  6687                           
  6688                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
  6689  07B0  01C5               	clrf	69	;volatile
  6690                           
  6691                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
  6692  07B1  01D0               	clrf	80	;volatile
  6693  07B2                     l1943:
  6694                           
  6695                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0xFF;
  6696  07B2  30FF               	movlw	255
  6697  07B3  00BB               	movwf	59	;volatile
  6698  07B4                     l1945:
  6699                           
  6700                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xFF;
  6701  07B4  30FF               	movlw	255
  6702  07B5  00C6               	movwf	70	;volatile
  6703  07B6                     l1947:
  6704                           
  6705                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
  6706  07B6  30FF               	movlw	255
  6707  07B7  00D1               	movwf	81	;volatile
  6708  07B8                     l1949:
  6709                           
  6710                           ;mcc_generated_files/pin_manager.c: 103:     INLVLA = 0xFF;
  6711  07B8  30FF               	movlw	255
  6712  07B9  00BC               	movwf	60	;volatile
  6713  07BA                     l1951:
  6714                           
  6715                           ;mcc_generated_files/pin_manager.c: 104:     INLVLB = 0xFF;
  6716  07BA  30FF               	movlw	255
  6717  07BB  00C7               	movwf	71	;volatile
  6718  07BC                     l1953:
  6719                           
  6720                           ;mcc_generated_files/pin_manager.c: 105:     INLVLC = 0xFF;
  6721  07BC  30FF               	movlw	255
  6722  07BD  00D2               	movwf	82	;volatile
  6723                           
  6724                           ;mcc_generated_files/pin_manager.c: 106:     INLVLE = 0x00;
  6725  07BE  01E8               	clrf	104	;volatile
  6726  07BF                     l1955:
  6727                           
  6728                           ;mcc_generated_files/pin_manager.c: 115:     RC0PPS = 0x10;
  6729  07BF  3010               	movlw	16
  6730  07C0  00A0               	movwf	32	;volatile
  6731  07C1                     l1957:
  6732                           
  6733                           ;mcc_generated_files/pin_manager.c: 116:     RXPPS = 0x11;
  6734  07C1  3011               	movlw	17
  6735  07C2  003D               	movlb	29	; select bank29
  6736  07C3  00CB               	movwf	75	;volatile
  6737  07C4                     l74:
  6738  07C4  0008               	return
  6739  07C5                     __end_of_PIN_MANAGER_Initialize:
  6740                           
  6741                           	psect	text17
  6742  0F39                     __ptext17:	
  6743 ;; *************** function _OSCILLATOR_Initialize *****************
  6744 ;; Defined at:
  6745 ;;		line 58 in file "mcc_generated_files/mcc.c"
  6746 ;; Parameters:    Size  Location     Type
  6747 ;;		None
  6748 ;; Auto vars:     Size  Location     Type
  6749 ;;		None
  6750 ;; Return value:  Size  Location     Type
  6751 ;;                  1    wreg      void 
  6752 ;; Registers used:
  6753 ;;		wreg, status,2
  6754 ;; Tracked objects:
  6755 ;;		On entry : 0/0
  6756 ;;		On exit  : 0/0
  6757 ;;		Unchanged: 0/0
  6758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6763 ;;Total ram usage:        0 bytes
  6764 ;; Hardware stack levels used: 1
  6765 ;; Hardware stack levels required when called: 4
  6766 ;; This function calls:
  6767 ;;		Nothing
  6768 ;; This function is called by:
  6769 ;;		_SYSTEM_Initialize
  6770 ;; This function uses a non-reentrant model
  6771 ;;
  6772                           
  6773                           
  6774                           ;psect for function _OSCILLATOR_Initialize
  6775  0F39                     _OSCILLATOR_Initialize:
  6776  0F39                     l1961:	
  6777                           ;incstack = 0
  6778                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6779                           
  6780                           
  6781                           ;mcc_generated_files/mcc.c: 61:     OSCCON1 = 0x60;
  6782  0F39  3060               	movlw	96
  6783  0F3A  0031               	movlb	17	; select bank17
  6784  0F3B  008D               	movwf	13	;volatile
  6785  0F3C                     l1963:
  6786                           
  6787                           ;mcc_generated_files/mcc.c: 63:     OSCCON3 = 0x00;
  6788  0F3C  018F               	clrf	15	;volatile
  6789  0F3D                     l1965:
  6790                           
  6791                           ;mcc_generated_files/mcc.c: 65:     OSCEN = 0x00;
  6792  0F3D  0191               	clrf	17	;volatile
  6793                           
  6794                           ;mcc_generated_files/mcc.c: 67:     OSCFRQ = 0x03;
  6795  0F3E  3003               	movlw	3
  6796  0F3F  0093               	movwf	19	;volatile
  6797  0F40                     l1967:
  6798                           
  6799                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x00;
  6800  0F40  0192               	clrf	18	;volatile
  6801  0F41                     l113:
  6802  0F41  0008               	return
  6803  0F42                     __end_of_OSCILLATOR_Initialize:
  6804                           
  6805                           	psect	text18
  6806  0681                     __ptext18:	
  6807 ;; *************** function _EUSART_Initialize *****************
  6808 ;; Defined at:
  6809 ;;		line 95 in file "mcc_generated_files/eusart.c"
  6810 ;; Parameters:    Size  Location     Type
  6811 ;;		None
  6812 ;; Auto vars:     Size  Location     Type
  6813 ;;		None
  6814 ;; Return value:  Size  Location     Type
  6815 ;;                  1    wreg      void 
  6816 ;; Registers used:
  6817 ;;		wreg, status,2, status,0, pclath, cstack
  6818 ;; Tracked objects:
  6819 ;;		On entry : 0/0
  6820 ;;		On exit  : 0/0
  6821 ;;		Unchanged: 0/0
  6822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6825 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6826 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6827 ;;Total ram usage:        1 bytes
  6828 ;; Hardware stack levels used: 1
  6829 ;; Hardware stack levels required when called: 5
  6830 ;; This function calls:
  6831 ;;		_EUSART_SetErrorHandler
  6832 ;;		_EUSART_SetFramingErrorHandler
  6833 ;;		_EUSART_SetOverrunErrorHandler
  6834 ;;		_EUSART_SetRxInterruptHandler
  6835 ;;		_EUSART_SetTxInterruptHandler
  6836 ;; This function is called by:
  6837 ;;		_SYSTEM_Initialize
  6838 ;; This function uses a non-reentrant model
  6839 ;;
  6840                           
  6841                           
  6842                           ;psect for function _EUSART_Initialize
  6843  0681                     _EUSART_Initialize:
  6844  0681                     l1969:	
  6845                           ;incstack = 0
  6846                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6847                           
  6848                           
  6849                           ;mcc_generated_files/eusart.c: 98:     PIE3bits.RCIE = 0;
  6850  0681  002E               	movlb	14	; select bank14
  6851  0682  1299               	bcf	25,5	;volatile
  6852  0683                     l1971:
  6853                           
  6854                           ;mcc_generated_files/eusart.c: 99:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  6855  0683  309B               	movlw	low _EUSART_Receive_ISR
  6856  0684  0020               	movlb	0	; select bank0
  6857  0685  00A4               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  6858  0686  3004               	movlw	high _EUSART_Receive_ISR
  6859  0687  00A5               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  6860  0688  318F  2727  3186   	fcall	_EUSART_SetRxInterruptHandler
  6861  068B                     l1973:
  6862                           
  6863                           ;mcc_generated_files/eusart.c: 100:     PIE3bits.TXIE = 0;
  6864  068B  002E               	movlb	14	; select bank14
  6865  068C  1219               	bcf	25,4	;volatile
  6866                           
  6867                           ;mcc_generated_files/eusart.c: 101:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR
      +                          );
  6868  068D  30DC               	movlw	low _EUSART_Transmit_ISR
  6869  068E  0020               	movlb	0	; select bank0
  6870  068F  00A4               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  6871  0690  300F               	movlw	high _EUSART_Transmit_ISR
  6872  0691  00A5               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  6873  0692  318F  2730  3186   	fcall	_EUSART_SetTxInterruptHandler
  6874  0695                     l1975:
  6875                           
  6876                           ;mcc_generated_files/eusart.c: 105:     BAUD1CON = 0x08;
  6877  0695  3008               	movlw	8
  6878  0696  0022               	movlb	2	; select bank2
  6879  0697  009F               	movwf	31	;volatile
  6880  0698                     l1977:
  6881                           
  6882                           ;mcc_generated_files/eusart.c: 108:     RC1STA = 0x90;
  6883  0698  3090               	movlw	144
  6884  0699  009D               	movwf	29	;volatile
  6885  069A                     l1979:
  6886                           
  6887                           ;mcc_generated_files/eusart.c: 111:     TX1STA = 0x24;
  6888  069A  3024               	movlw	36
  6889  069B  009E               	movwf	30	;volatile
  6890  069C                     l1981:
  6891                           
  6892                           ;mcc_generated_files/eusart.c: 114:     SP1BRGL = 0xCF;
  6893  069C  30CF               	movlw	207
  6894  069D  009B               	movwf	27	;volatile
  6895  069E                     l1983:
  6896                           
  6897                           ;mcc_generated_files/eusart.c: 117:     SP1BRGH = 0x00;
  6898  069E  019C               	clrf	28	;volatile
  6899  069F                     l1985:
  6900                           
  6901                           ;mcc_generated_files/eusart.c: 120:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  6902  069F  30FF               	movlw	low _EUSART_DefaultFramingErrorHandler
  6903  06A0  0020               	movlb	0	; select bank0
  6904  06A1  00A4               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  6905  06A2  3007               	movlw	high _EUSART_DefaultFramingErrorHandler
  6906  06A3  00A5               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  6907  06A4  318F  2715  3186   	fcall	_EUSART_SetFramingErrorHandler
  6908  06A7                     l1987:
  6909                           
  6910                           ;mcc_generated_files/eusart.c: 121:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  6911  06A7  30FB               	movlw	low _EUSART_DefaultOverrunErrorHandler
  6912  06A8  0020               	movlb	0	; select bank0
  6913  06A9  00A4               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  6914  06AA  3007               	movlw	high _EUSART_DefaultOverrunErrorHandler
  6915  06AB  00A5               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  6916  06AC  318F  271E  3186   	fcall	_EUSART_SetOverrunErrorHandler
  6917  06AF                     l1989:
  6918                           
  6919                           ;mcc_generated_files/eusart.c: 122:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  6920  06AF  30F3               	movlw	low _EUSART_DefaultErrorHandler
  6921  06B0  0020               	movlb	0	; select bank0
  6922  06B1  00A4               	movwf	EUSART_SetErrorHandler@interruptHandler
  6923  06B2  300E               	movlw	high _EUSART_DefaultErrorHandler
  6924  06B3  00A5               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  6925  06B4  318F  270C  3186   	fcall	_EUSART_SetErrorHandler
  6926                           
  6927                           ;mcc_generated_files/eusart.c: 124:     eusartRxLastError.status = 0;
  6928  06B7  0021               	movlb	1	; select bank1
  6929  06B8  01C2               	clrf	_eusartRxLastError^(0+128)	;volatile
  6930                           
  6931                           ;mcc_generated_files/eusart.c: 127:     eusartTxHead = 0;
  6932  06B9  0020               	movlb	0	; select bank0
  6933  06BA  01EB               	clrf	_eusartTxHead	;volatile
  6934                           
  6935                           ;mcc_generated_files/eusart.c: 128:     eusartTxTail = 0;
  6936  06BB  01EA               	clrf	_eusartTxTail	;volatile
  6937  06BC                     l1991:
  6938                           
  6939                           ;mcc_generated_files/eusart.c: 129:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  6940  06BC  3008               	movlw	8
  6941  06BD  00A6               	movwf	??_EUSART_Initialize
  6942  06BE  0826               	movf	??_EUSART_Initialize,w
  6943  06BF  0021               	movlb	1	; select bank1
  6944  06C0  00E6               	movwf	_eusartTxBufferRemaining^(0+128)	;volatile
  6945  06C1                     l1993:
  6946                           
  6947                           ;mcc_generated_files/eusart.c: 131:     eusartRxHead = 0;
  6948  06C1  0020               	movlb	0	; select bank0
  6949  06C2  01E9               	clrf	_eusartRxHead	;volatile
  6950  06C3                     l1995:
  6951                           
  6952                           ;mcc_generated_files/eusart.c: 132:     eusartRxTail = 0;
  6953  06C3  01E8               	clrf	_eusartRxTail	;volatile
  6954  06C4                     l1997:
  6955                           
  6956                           ;mcc_generated_files/eusart.c: 133:     eusartRxCount = 0;
  6957  06C4  0021               	movlb	1	; select bank1
  6958  06C5  01C3               	clrf	_eusartRxCount^(0+128)	;volatile
  6959  06C6                     l1999:
  6960                           
  6961                           ;mcc_generated_files/eusart.c: 136:     PIE3bits.RCIE = 1;
  6962  06C6  002E               	movlb	14	; select bank14
  6963  06C7  1699               	bsf	25,5	;volatile
  6964  06C8                     l221:
  6965  06C8  0008               	return
  6966  06C9                     __end_of_EUSART_Initialize:
  6967                           
  6968                           	psect	text19
  6969  0F30                     __ptext19:	
  6970 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  6971 ;; Defined at:
  6972 ;;		line 308 in file "mcc_generated_files/eusart.c"
  6973 ;; Parameters:    Size  Location     Type
  6974 ;;  interruptHan    2    4[BANK0 ] PTR FTN()void 
  6975 ;;		 -> EUSART_Transmit_ISR(1), 
  6976 ;; Auto vars:     Size  Location     Type
  6977 ;;		None
  6978 ;; Return value:  Size  Location     Type
  6979 ;;                  1    wreg      void 
  6980 ;; Registers used:
  6981 ;;		wreg
  6982 ;; Tracked objects:
  6983 ;;		On entry : 0/0
  6984 ;;		On exit  : 0/0
  6985 ;;		Unchanged: 0/0
  6986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6987 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6990 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6991 ;;Total ram usage:        2 bytes
  6992 ;; Hardware stack levels used: 1
  6993 ;; Hardware stack levels required when called: 4
  6994 ;; This function calls:
  6995 ;;		Nothing
  6996 ;; This function is called by:
  6997 ;;		_EUSART_Initialize
  6998 ;; This function uses a non-reentrant model
  6999 ;;
  7000                           
  7001                           
  7002                           ;psect for function _EUSART_SetTxInterruptHandler
  7003  0F30                     _EUSART_SetTxInterruptHandler:
  7004  0F30                     l1819:	
  7005                           ;incstack = 0
  7006                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  7007                           
  7008                           
  7009                           ;mcc_generated_files/eusart.c: 309:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  7010  0F30  0020               	movlb	0	; select bank0
  7011  0F31  0825               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  7012  0F32  0021               	movlb	1	; select bank1
  7013  0F33  00E5               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128)
  7014  0F34  0020               	movlb	0	; select bank0
  7015  0F35  0824               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  7016  0F36  0021               	movlb	1	; select bank1
  7017  0F37  00E4               	movwf	_EUSART_TxDefaultInterruptHandler^(0+128)
  7018  0F38                     l301:
  7019  0F38  0008               	return
  7020  0F39                     __end_of_EUSART_SetTxInterruptHandler:
  7021                           
  7022                           	psect	text20
  7023  0F27                     __ptext20:	
  7024 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  7025 ;; Defined at:
  7026 ;;		line 312 in file "mcc_generated_files/eusart.c"
  7027 ;; Parameters:    Size  Location     Type
  7028 ;;  interruptHan    2    4[BANK0 ] PTR FTN()void 
  7029 ;;		 -> EUSART_Receive_ISR(1), 
  7030 ;; Auto vars:     Size  Location     Type
  7031 ;;		None
  7032 ;; Return value:  Size  Location     Type
  7033 ;;                  1    wreg      void 
  7034 ;; Registers used:
  7035 ;;		wreg
  7036 ;; Tracked objects:
  7037 ;;		On entry : 0/0
  7038 ;;		On exit  : 0/0
  7039 ;;		Unchanged: 0/0
  7040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7041 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7044 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7045 ;;Total ram usage:        2 bytes
  7046 ;; Hardware stack levels used: 1
  7047 ;; Hardware stack levels required when called: 4
  7048 ;; This function calls:
  7049 ;;		Nothing
  7050 ;; This function is called by:
  7051 ;;		_EUSART_Initialize
  7052 ;; This function uses a non-reentrant model
  7053 ;;
  7054                           
  7055                           
  7056                           ;psect for function _EUSART_SetRxInterruptHandler
  7057  0F27                     _EUSART_SetRxInterruptHandler:
  7058  0F27                     l1817:	
  7059                           ;incstack = 0
  7060                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  7061                           
  7062                           
  7063                           ;mcc_generated_files/eusart.c: 313:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  7064  0F27  0020               	movlb	0	; select bank0
  7065  0F28  0825               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  7066  0F29  0021               	movlb	1	; select bank1
  7067  0F2A  00E3               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128)
  7068  0F2B  0020               	movlb	0	; select bank0
  7069  0F2C  0824               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  7070  0F2D  0021               	movlb	1	; select bank1
  7071  0F2E  00E2               	movwf	_EUSART_RxDefaultInterruptHandler^(0+128)
  7072  0F2F                     l304:
  7073  0F2F  0008               	return
  7074  0F30                     __end_of_EUSART_SetRxInterruptHandler:
  7075                           
  7076                           	psect	text21
  7077  0F1E                     __ptext21:	
  7078 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  7079 ;; Defined at:
  7080 ;;		line 300 in file "mcc_generated_files/eusart.c"
  7081 ;; Parameters:    Size  Location     Type
  7082 ;;  interruptHan    2    4[BANK0 ] PTR FTN()void 
  7083 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  7084 ;; Auto vars:     Size  Location     Type
  7085 ;;		None
  7086 ;; Return value:  Size  Location     Type
  7087 ;;                  1    wreg      void 
  7088 ;; Registers used:
  7089 ;;		wreg
  7090 ;; Tracked objects:
  7091 ;;		On entry : 0/0
  7092 ;;		On exit  : 0/0
  7093 ;;		Unchanged: 0/0
  7094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7095 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7098 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7099 ;;Total ram usage:        2 bytes
  7100 ;; Hardware stack levels used: 1
  7101 ;; Hardware stack levels required when called: 4
  7102 ;; This function calls:
  7103 ;;		Nothing
  7104 ;; This function is called by:
  7105 ;;		_EUSART_Initialize
  7106 ;; This function uses a non-reentrant model
  7107 ;;
  7108                           
  7109                           
  7110                           ;psect for function _EUSART_SetOverrunErrorHandler
  7111  0F1E                     _EUSART_SetOverrunErrorHandler:
  7112  0F1E                     l1823:	
  7113                           ;incstack = 0
  7114                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  7115                           
  7116                           
  7117                           ;mcc_generated_files/eusart.c: 301:     EUSART_OverrunErrorHandler = interruptHandler;
  7118  0F1E  0020               	movlb	0	; select bank0
  7119  0F1F  0825               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  7120  0F20  0021               	movlb	1	; select bank1
  7121  0F21  00DF               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  7122  0F22  0020               	movlb	0	; select bank0
  7123  0F23  0824               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  7124  0F24  0021               	movlb	1	; select bank1
  7125  0F25  00DE               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  7126  0F26                     l295:
  7127  0F26  0008               	return
  7128  0F27                     __end_of_EUSART_SetOverrunErrorHandler:
  7129                           
  7130                           	psect	text22
  7131  0F15                     __ptext22:	
  7132 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  7133 ;; Defined at:
  7134 ;;		line 296 in file "mcc_generated_files/eusart.c"
  7135 ;; Parameters:    Size  Location     Type
  7136 ;;  interruptHan    2    4[BANK0 ] PTR FTN()void 
  7137 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  7138 ;; Auto vars:     Size  Location     Type
  7139 ;;		None
  7140 ;; Return value:  Size  Location     Type
  7141 ;;                  1    wreg      void 
  7142 ;; Registers used:
  7143 ;;		wreg
  7144 ;; Tracked objects:
  7145 ;;		On entry : 0/0
  7146 ;;		On exit  : 0/0
  7147 ;;		Unchanged: 0/0
  7148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7149 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7152 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7153 ;;Total ram usage:        2 bytes
  7154 ;; Hardware stack levels used: 1
  7155 ;; Hardware stack levels required when called: 4
  7156 ;; This function calls:
  7157 ;;		Nothing
  7158 ;; This function is called by:
  7159 ;;		_EUSART_Initialize
  7160 ;; This function uses a non-reentrant model
  7161 ;;
  7162                           
  7163                           
  7164                           ;psect for function _EUSART_SetFramingErrorHandler
  7165  0F15                     _EUSART_SetFramingErrorHandler:
  7166  0F15                     l1821:	
  7167                           ;incstack = 0
  7168                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  7169                           
  7170                           
  7171                           ;mcc_generated_files/eusart.c: 297:     EUSART_FramingErrorHandler = interruptHandler;
  7172  0F15  0020               	movlb	0	; select bank0
  7173  0F16  0825               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  7174  0F17  0021               	movlb	1	; select bank1
  7175  0F18  00E1               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  7176  0F19  0020               	movlb	0	; select bank0
  7177  0F1A  0824               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  7178  0F1B  0021               	movlb	1	; select bank1
  7179  0F1C  00E0               	movwf	_EUSART_FramingErrorHandler^(0+128)
  7180  0F1D                     l292:
  7181  0F1D  0008               	return
  7182  0F1E                     __end_of_EUSART_SetFramingErrorHandler:
  7183                           
  7184                           	psect	text23
  7185  0F0C                     __ptext23:	
  7186 ;; *************** function _EUSART_SetErrorHandler *****************
  7187 ;; Defined at:
  7188 ;;		line 304 in file "mcc_generated_files/eusart.c"
  7189 ;; Parameters:    Size  Location     Type
  7190 ;;  interruptHan    2    4[BANK0 ] PTR FTN()void 
  7191 ;;		 -> EUSART_DefaultErrorHandler(1), 
  7192 ;; Auto vars:     Size  Location     Type
  7193 ;;		None
  7194 ;; Return value:  Size  Location     Type
  7195 ;;                  1    wreg      void 
  7196 ;; Registers used:
  7197 ;;		wreg
  7198 ;; Tracked objects:
  7199 ;;		On entry : 0/0
  7200 ;;		On exit  : 0/0
  7201 ;;		Unchanged: 0/0
  7202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7203 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7206 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7207 ;;Total ram usage:        2 bytes
  7208 ;; Hardware stack levels used: 1
  7209 ;; Hardware stack levels required when called: 4
  7210 ;; This function calls:
  7211 ;;		Nothing
  7212 ;; This function is called by:
  7213 ;;		_EUSART_Initialize
  7214 ;; This function uses a non-reentrant model
  7215 ;;
  7216                           
  7217                           
  7218                           ;psect for function _EUSART_SetErrorHandler
  7219  0F0C                     _EUSART_SetErrorHandler:
  7220  0F0C                     l1825:	
  7221                           ;incstack = 0
  7222                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  7223                           
  7224                           
  7225                           ;mcc_generated_files/eusart.c: 305:     EUSART_ErrorHandler = interruptHandler;
  7226  0F0C  0020               	movlb	0	; select bank0
  7227  0F0D  0825               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  7228  0F0E  0021               	movlb	1	; select bank1
  7229  0F0F  00DD               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  7230  0F10  0020               	movlb	0	; select bank0
  7231  0F11  0824               	movf	EUSART_SetErrorHandler@interruptHandler,w
  7232  0F12  0021               	movlb	1	; select bank1
  7233  0F13  00DC               	movwf	_EUSART_ErrorHandler^(0+128)
  7234  0F14                     l298:
  7235  0F14  0008               	return
  7236  0F15                     __end_of_EUSART_SetErrorHandler:
  7237                           
  7238                           	psect	intentry
  7239  0004                     __pintentry:	
  7240 ;; *************** function _INTERRUPT_InterruptManager *****************
  7241 ;; Defined at:
  7242 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7243 ;; Parameters:    Size  Location     Type
  7244 ;;		None
  7245 ;; Auto vars:     Size  Location     Type
  7246 ;;		None
  7247 ;; Return value:  Size  Location     Type
  7248 ;;                  1    wreg      void 
  7249 ;; Registers used:
  7250 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7251 ;; Tracked objects:
  7252 ;;		On entry : 0/0
  7253 ;;		On exit  : 0/0
  7254 ;;		Unchanged: 0/0
  7255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7260 ;;Total ram usage:        0 bytes
  7261 ;; Hardware stack levels used: 1
  7262 ;; Hardware stack levels required when called: 3
  7263 ;; This function calls:
  7264 ;;		Absolute function
  7265 ;;		_EUSART_Receive_ISR
  7266 ;;		_EUSART_Transmit_ISR
  7267 ;; This function is called by:
  7268 ;;		Interrupt level 1
  7269 ;; This function uses a non-reentrant model
  7270 ;;
  7271                           
  7272  0004                     _INTERRUPT_InterruptManager:
  7273                           
  7274                           ;incstack = 0
  7275  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  7276                           
  7277                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7278  0005  3180               	pagesel	$
  7279  0006                     i1l2123:
  7280                           
  7281                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  7282  0006  1F0B               	btfss	11,6	;volatile
  7283  0007  2809               	goto	u174_21
  7284  0008  280A               	goto	u174_20
  7285  0009                     u174_21:
  7286  0009  2829               	goto	i1l21
  7287  000A                     u174_20:
  7288  000A                     i1l2125:
  7289                           
  7290                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE3bits.TXIE == 1 && PIR3bits.TXIF == 1)
  7291  000A  002E               	movlb	14	; select bank14
  7292  000B  1E19               	btfss	25,4	;volatile
  7293  000C  280E               	goto	u175_21
  7294  000D  280F               	goto	u175_20
  7295  000E                     u175_21:
  7296  000E  281A               	goto	i1l16
  7297  000F                     u175_20:
  7298  000F                     i1l2127:
  7299  000F  1E0F               	btfss	15,4	;volatile
  7300  0010  2812               	goto	u176_21
  7301  0011  2813               	goto	u176_20
  7302  0012                     u176_21:
  7303  0012  281A               	goto	i1l16
  7304  0013                     u176_20:
  7305  0013                     i1l2129:
  7306                           
  7307                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             EUSART_TxDefaultInterruptHandler();
  7308  0013  0021               	movlb	1	; select bank1
  7309  0014  0865               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128),w
  7310  0015  008A               	movwf	10
  7311  0016  0864               	movf	_EUSART_TxDefaultInterruptHandler^(0+128),w
  7312  0017  000A               	callw
  7313  0018  3180               	pagesel	$
  7314                           
  7315                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  7316  0019  2829               	goto	i1l21
  7317  001A                     i1l16:	
  7318                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE3bits.RCIE == 1 && PIR3
      +                          bits.RCIF == 1)
  7319                           
  7320  001A  1E99               	btfss	25,5	;volatile
  7321  001B  281D               	goto	u177_21
  7322  001C  281E               	goto	u177_20
  7323  001D                     u177_21:
  7324  001D  2829               	goto	i1l17
  7325  001E                     u177_20:
  7326  001E                     i1l2131:
  7327  001E  1E8F               	btfss	15,5	;volatile
  7328  001F  2821               	goto	u178_21
  7329  0020  2822               	goto	u178_20
  7330  0021                     u178_21:
  7331  0021  2829               	goto	i1l17
  7332  0022                     u178_20:
  7333  0022                     i1l2133:
  7334                           
  7335                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_RxDefaultInterruptHandler();
  7336  0022  0021               	movlb	1	; select bank1
  7337  0023  0863               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128),w
  7338  0024  008A               	movwf	10
  7339  0025  0862               	movf	_EUSART_RxDefaultInterruptHandler^(0+128),w
  7340  0026  000A               	callw
  7341  0027  3180               	pagesel	$
  7342                           
  7343                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  7344  0028  2829               	goto	i1l21
  7345  0029                     i1l17:
  7346  0029                     i1l21:	
  7347                           ;mcc_generated_files/interrupt_manager.c: 69:     }
  7348                           
  7349  0029  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7350  002A  0009               	retfie
  7351  002B                     __end_of_INTERRUPT_InterruptManager:
  7352                           
  7353                           	psect	text25
  7354  0FDC                     __ptext25:	
  7355 ;; *************** function _EUSART_Transmit_ISR *****************
  7356 ;; Defined at:
  7357 ;;		line 213 in file "mcc_generated_files/eusart.c"
  7358 ;; Parameters:    Size  Location     Type
  7359 ;;		None
  7360 ;; Auto vars:     Size  Location     Type
  7361 ;;		None
  7362 ;; Return value:  Size  Location     Type
  7363 ;;                  1    wreg      void 
  7364 ;; Registers used:
  7365 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7366 ;; Tracked objects:
  7367 ;;		On entry : 0/0
  7368 ;;		On exit  : 0/0
  7369 ;;		Unchanged: 0/0
  7370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7373 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7374 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7375 ;;Total ram usage:        1 bytes
  7376 ;; Hardware stack levels used: 1
  7377 ;; This function calls:
  7378 ;;		Nothing
  7379 ;; This function is called by:
  7380 ;;		_EUSART_Initialize
  7381 ;;		_INTERRUPT_InterruptManager
  7382 ;; This function uses a non-reentrant model
  7383 ;;
  7384                           
  7385                           
  7386                           ;psect for function _EUSART_Transmit_ISR
  7387  0FDC                     _EUSART_Transmit_ISR:
  7388  0FDC                     i1l2073:	
  7389                           ;incstack = 0
  7390                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  7391                           
  7392                           
  7393                           ;mcc_generated_files/eusart.c: 217:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  7394  0FDC  3008               	movlw	8
  7395  0FDD  0021               	movlb	1	; select bank1
  7396  0FDE  0266               	subwf	_eusartTxBufferRemaining^(0+128),w	;volatile
  7397  0FDF  1803               	skipnc
  7398  0FE0  2FE2               	goto	u162_21
  7399  0FE1  2FE3               	goto	u162_20
  7400  0FE2                     u162_21:
  7401  0FE2  2FFD               	goto	i1l258
  7402  0FE3                     u162_20:
  7403  0FE3                     i1l2075:
  7404                           
  7405                           ;mcc_generated_files/eusart.c: 218:     {;mcc_generated_files/eusart.c: 219:         TX1
      +                          REG = eusartTxBuffer[eusartTxTail++];
  7406  0FE3  0020               	movlb	0	; select bank0
  7407  0FE4  086A               	movf	_eusartTxTail,w
  7408  0FE5  3EB0               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  7409  0FE6  0086               	movwf	6
  7410  0FE7  0187               	clrf	7
  7411  0FE8  0801               	movf	1,w
  7412  0FE9  0022               	movlb	2	; select bank2
  7413  0FEA  009A               	movwf	26	;volatile
  7414  0FEB                     i1l2077:
  7415  0FEB  3001               	movlw	1
  7416  0FEC  00F0               	movwf	??_EUSART_Transmit_ISR
  7417  0FED  0870               	movf	??_EUSART_Transmit_ISR,w
  7418  0FEE  0020               	movlb	0	; select bank0
  7419  0FEF  07EA               	addwf	_eusartTxTail,f	;volatile
  7420  0FF0                     i1l2079:
  7421                           
  7422                           ;mcc_generated_files/eusart.c: 220:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  7423  0FF0  3008               	movlw	8
  7424  0FF1  026A               	subwf	_eusartTxTail,w	;volatile
  7425  0FF2  1C03               	skipc
  7426  0FF3  2FF5               	goto	u163_21
  7427  0FF4  2FF6               	goto	u163_20
  7428  0FF5                     u163_21:
  7429  0FF5  2FF7               	goto	i1l2083
  7430  0FF6                     u163_20:
  7431  0FF6                     i1l2081:
  7432                           
  7433                           ;mcc_generated_files/eusart.c: 221:         {;mcc_generated_files/eusart.c: 222:        
      +                               eusartTxTail = 0;
  7434  0FF6  01EA               	clrf	_eusartTxTail	;volatile
  7435  0FF7                     i1l2083:
  7436                           
  7437                           ;mcc_generated_files/eusart.c: 224:         eusartTxBufferRemaining++;
  7438  0FF7  3001               	movlw	1
  7439  0FF8  00F0               	movwf	??_EUSART_Transmit_ISR
  7440  0FF9  0870               	movf	??_EUSART_Transmit_ISR,w
  7441  0FFA  0021               	movlb	1	; select bank1
  7442  0FFB  07E6               	addwf	_eusartTxBufferRemaining^(0+128),f	;volatile
  7443                           
  7444                           ;mcc_generated_files/eusart.c: 225:     }
  7445  0FFC  2FFF               	goto	i1l261
  7446  0FFD                     i1l258:	
  7447                           ;mcc_generated_files/eusart.c: 226:     else
  7448                           
  7449                           
  7450                           ;mcc_generated_files/eusart.c: 227:     {;mcc_generated_files/eusart.c: 228:         PIE
      +                          3bits.TXIE = 0;
  7451  0FFD  002E               	movlb	14	; select bank14
  7452  0FFE  1219               	bcf	25,4	;volatile
  7453  0FFF                     i1l261:
  7454  0FFF  0008               	return
  7455  1000                     __end_of_EUSART_Transmit_ISR:
  7456                           
  7457                           	psect	text26
  7458  049B                     __ptext26:	
  7459 ;; *************** function _EUSART_Receive_ISR *****************
  7460 ;; Defined at:
  7461 ;;		line 232 in file "mcc_generated_files/eusart.c"
  7462 ;; Parameters:    Size  Location     Type
  7463 ;;		None
  7464 ;; Auto vars:     Size  Location     Type
  7465 ;;		None
  7466 ;; Return value:  Size  Location     Type
  7467 ;;                  1    wreg      void 
  7468 ;; Registers used:
  7469 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7470 ;; Tracked objects:
  7471 ;;		On entry : 0/0
  7472 ;;		On exit  : 0/0
  7473 ;;		Unchanged: 0/0
  7474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7477 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7478 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7479 ;;Total ram usage:        1 bytes
  7480 ;; Hardware stack levels used: 1
  7481 ;; Hardware stack levels required when called: 2
  7482 ;; This function calls:
  7483 ;;		Absolute function
  7484 ;;		_EUSART_DefaultErrorHandler
  7485 ;;		_EUSART_DefaultFramingErrorHandler
  7486 ;;		_EUSART_DefaultOverrunErrorHandler
  7487 ;;		_EUSART_Read
  7488 ;;		_EUSART_RxDataHandler
  7489 ;;		_strstr
  7490 ;; This function is called by:
  7491 ;;		_EUSART_Initialize
  7492 ;;		_INTERRUPT_InterruptManager
  7493 ;; This function uses a non-reentrant model
  7494 ;;
  7495                           
  7496                           
  7497                           ;psect for function _EUSART_Receive_ISR
  7498  049B                     _EUSART_Receive_ISR:
  7499  049B                     i1l2085:	
  7500                           ;incstack = 0
  7501                           ; Regs used in _EUSART_Receive_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7502                           
  7503                           
  7504                           ;mcc_generated_files/eusart.c: 235:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  7505  049B  0020               	movlb	0	; select bank0
  7506  049C  0869               	movf	_eusartRxHead,w	;volatile
  7507  049D  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  7508  049E  0086               	movwf	6
  7509  049F  0187               	clrf	7
  7510  04A0  0181               	clrf	1
  7511  04A1                     i1l2087:
  7512                           
  7513                           ;mcc_generated_files/eusart.c: 237:     if(RC1STAbits.FERR){
  7514  04A1  0022               	movlb	2	; select bank2
  7515  04A2  1D1D               	btfss	29,2	;volatile
  7516  04A3  2CA5               	goto	u164_21
  7517  04A4  2CA6               	goto	u164_20
  7518  04A5                     u164_21:
  7519  04A5  2CB2               	goto	i1l2093
  7520  04A6                     u164_20:
  7521  04A6                     i1l2089:
  7522                           
  7523                           ;mcc_generated_files/eusart.c: 238:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  7524  04A6  0020               	movlb	0	; select bank0
  7525  04A7  0869               	movf	_eusartRxHead,w	;volatile
  7526  04A8  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  7527  04A9  0086               	movwf	6
  7528  04AA  0187               	clrf	7
  7529  04AB  1481               	bsf	1,1
  7530  04AC                     i1l2091:
  7531                           
  7532                           ;mcc_generated_files/eusart.c: 239:         EUSART_FramingErrorHandler();
  7533  04AC  0021               	movlb	1	; select bank1
  7534  04AD  0861               	movf	(_EUSART_FramingErrorHandler+1)^(0+128),w
  7535  04AE  008A               	movwf	10
  7536  04AF  0860               	movf	_EUSART_FramingErrorHandler^(0+128),w
  7537  04B0  000A               	callw
  7538  04B1  3184               	pagesel	$
  7539  04B2                     i1l2093:
  7540                           
  7541                           ;mcc_generated_files/eusart.c: 242:     if(RC1STAbits.OERR){
  7542  04B2  0022               	movlb	2	; select bank2
  7543  04B3  1C9D               	btfss	29,1	;volatile
  7544  04B4  2CB6               	goto	u165_21
  7545  04B5  2CB7               	goto	u165_20
  7546  04B6                     u165_21:
  7547  04B6  2CC3               	goto	i1l2099
  7548  04B7                     u165_20:
  7549  04B7                     i1l2095:
  7550                           
  7551                           ;mcc_generated_files/eusart.c: 243:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  7552  04B7  0020               	movlb	0	; select bank0
  7553  04B8  0869               	movf	_eusartRxHead,w	;volatile
  7554  04B9  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  7555  04BA  0086               	movwf	6
  7556  04BB  0187               	clrf	7
  7557  04BC  1501               	bsf	1,2
  7558  04BD                     i1l2097:
  7559                           
  7560                           ;mcc_generated_files/eusart.c: 244:         EUSART_OverrunErrorHandler();
  7561  04BD  0021               	movlb	1	; select bank1
  7562  04BE  085F               	movf	(_EUSART_OverrunErrorHandler+1)^(0+128),w
  7563  04BF  008A               	movwf	10
  7564  04C0  085E               	movf	_EUSART_OverrunErrorHandler^(0+128),w
  7565  04C1  000A               	callw
  7566  04C2  3184               	pagesel	$
  7567  04C3                     i1l2099:
  7568                           
  7569                           ;mcc_generated_files/eusart.c: 247:     if(eusartRxStatusBuffer[eusartRxHead].status){
  7570  04C3  0020               	movlb	0	; select bank0
  7571  04C4  0869               	movf	_eusartRxHead,w	;volatile
  7572  04C5  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  7573  04C6  0086               	movwf	6
  7574  04C7  0187               	clrf	7
  7575  04C8  0801               	movf	1,w
  7576  04C9  1903               	btfsc	3,2
  7577  04CA  2CCC               	goto	u166_21
  7578  04CB  2CCD               	goto	u166_20
  7579  04CC                     u166_21:
  7580  04CC  2CD4               	goto	i1l2103
  7581  04CD                     u166_20:
  7582  04CD                     i1l2101:
  7583                           
  7584                           ;mcc_generated_files/eusart.c: 248:         EUSART_ErrorHandler();
  7585  04CD  0021               	movlb	1	; select bank1
  7586  04CE  085D               	movf	(_EUSART_ErrorHandler+1)^(0+128),w
  7587  04CF  008A               	movwf	10
  7588  04D0  085C               	movf	_EUSART_ErrorHandler^(0+128),w
  7589  04D1  000A               	callw
  7590  04D2  3184               	pagesel	$
  7591                           
  7592                           ;mcc_generated_files/eusart.c: 249:     } else {
  7593  04D3  2CD7               	goto	i1l267
  7594  04D4                     i1l2103:
  7595                           
  7596                           ;mcc_generated_files/eusart.c: 250:         EUSART_RxDataHandler();
  7597  04D4  318F  27A5  3184   	fcall	_EUSART_RxDataHandler
  7598  04D7                     i1l267:	
  7599                           ;mcc_generated_files/eusart.c: 251:     }
  7600                           
  7601                           
  7602                           ;mcc_generated_files/eusart.c: 254:     caracter_rx = EUSART_Read();
  7603  04D7  3187  276D  3184   	fcall	_EUSART_Read
  7604  04DA  0020               	movlb	0	; select bank0
  7605  04DB  00A3               	movwf	??_EUSART_Receive_ISR
  7606  04DC  0823               	movf	??_EUSART_Receive_ISR,w
  7607  04DD  0021               	movlb	1	; select bank1
  7608  04DE  00C1               	movwf	_caracter_rx^(0+128)	;volatile
  7609  04DF                     i1l2105:
  7610                           
  7611                           ;mcc_generated_files/eusart.c: 255:     if(caracter_rx == '*'){
  7612  04DF  302A               	movlw	42
  7613  04E0  0641               	xorwf	_caracter_rx^(0+128),w	;volatile
  7614  04E1  1D03               	btfss	3,2
  7615  04E2  2CE4               	goto	u167_21
  7616  04E3  2CE5               	goto	u167_20
  7617  04E4                     u167_21:
  7618  04E4  2D1F               	goto	i1l2119
  7619  04E5                     u167_20:
  7620  04E5                     i1l2107:
  7621                           
  7622                           ;mcc_generated_files/eusart.c: 256:         buffer_rx[contador_rx] = '\0';
  7623  04E5  0840               	movf	_contador_rx^(0+128),w
  7624  04E6  3E40               	addlw	(low (_buffer_rx| (0+256)))& (0+255)
  7625  04E7  0086               	movwf	6
  7626  04E8  3001               	movlw	1	; select bank2/3
  7627  04E9  0087               	movwf	7
  7628  04EA  0181               	clrf	1
  7629  04EB                     i1l2109:
  7630                           
  7631                           ;mcc_generated_files/eusart.c: 257:         contador_rx = 0;
  7632  04EB  01C0               	clrf	_contador_rx^(0+128)	;volatile
  7633  04EC                     i1l2111:
  7634                           
  7635                           ;mcc_generated_files/eusart.c: 259:         if(strstr(buffer_rx,"encendido")){
  7636  04EC  300E               	movlw	low (STR_3| (0+32768))
  7637  04ED  00F9               	movwf	strstr@n
  7638  04EE  3090               	movlw	high (STR_3| (0+32768))
  7639  04EF  00FA               	movwf	strstr@n+1
  7640  04F0  3040               	movlw	(low (_buffer_rx| (0+256)))& (0+255)
  7641  04F1  3185  25E8  3184   	fcall	_strstr
  7642  04F4  3A00               	xorlw	0
  7643  04F5  1903               	skipnz
  7644  04F6  2CF8               	goto	u168_21
  7645  04F7  2CF9               	goto	u168_20
  7646  04F8                     u168_21:
  7647  04F8  2D05               	goto	i1l2115
  7648  04F9                     u168_20:
  7649  04F9                     i1l2113:
  7650  04F9  1003               	clrc
  7651  04FA  0020               	movlb	0	; select bank0
  7652  04FB  1D16               	btfss	22,2	;volatile
  7653  04FC  1403               	setc
  7654  04FD  1803               	btfsc	3,0
  7655  04FE  2D00               	goto	u169_21
  7656  04FF  2D03               	goto	u169_20
  7657  0500                     u169_21:
  7658  0500  0020               	movlb	0	; select bank0
  7659  0501  1516               	bsf	22,2	;volatile
  7660  0502  2D05               	goto	u170_24
  7661  0503                     u169_20:
  7662  0503  0020               	movlb	0	; select bank0
  7663  0504  1116               	bcf	22,2	;volatile
  7664  0505                     u170_24:
  7665  0505                     i1l2115:
  7666                           
  7667                           ;mcc_generated_files/eusart.c: 262:         if(strstr(buffer_rx,"apagado")){
  7668  0505  3018               	movlw	low (STR_5| (0+32768))
  7669  0506  00F9               	movwf	strstr@n
  7670  0507  3090               	movlw	high (STR_5| (0+32768))
  7671  0508  00FA               	movwf	strstr@n+1
  7672  0509  3040               	movlw	(low (_buffer_rx| (0+256)))& (0+255)
  7673  050A  3185  25E8  3184   	fcall	_strstr
  7674  050D  3A00               	xorlw	0
  7675  050E  1903               	skipnz
  7676  050F  2D11               	goto	u171_21
  7677  0510  2D12               	goto	u171_20
  7678  0511                     u171_21:
  7679  0511  2D30               	goto	i1l276
  7680  0512                     u171_20:
  7681  0512                     i1l2117:
  7682  0512  1003               	clrc
  7683  0513  0020               	movlb	0	; select bank0
  7684  0514  1D96               	btfss	22,3	;volatile
  7685  0515  1403               	setc
  7686  0516  1803               	btfsc	3,0
  7687  0517  2D19               	goto	u172_21
  7688  0518  2D1C               	goto	u172_20
  7689  0519                     u172_21:
  7690  0519  0020               	movlb	0	; select bank0
  7691  051A  1596               	bsf	22,3	;volatile
  7692  051B  2D1E               	goto	u173_24
  7693  051C                     u172_20:
  7694  051C  0020               	movlb	0	; select bank0
  7695  051D  1196               	bcf	22,3	;volatile
  7696  051E                     u173_24:
  7697  051E  2D30               	goto	i1l276
  7698  051F                     i1l2119:
  7699                           
  7700                           ;mcc_generated_files/eusart.c: 266:         buffer_rx[contador_rx++] = caracter_rx;
  7701  051F  0841               	movf	_caracter_rx^(0+128),w	;volatile
  7702  0520  0020               	movlb	0	; select bank0
  7703  0521  00A3               	movwf	??_EUSART_Receive_ISR
  7704  0522  0021               	movlb	1	; select bank1
  7705  0523  0840               	movf	_contador_rx^(0+128),w
  7706  0524  3E40               	addlw	(low (_buffer_rx| (0+256)))& (0+255)
  7707  0525  0086               	movwf	6
  7708  0526  3001               	movlw	1	; select bank2/3
  7709  0527  0087               	movwf	7
  7710  0528  0020               	movlb	0	; select bank0
  7711  0529  0823               	movf	??_EUSART_Receive_ISR,w
  7712  052A  0081               	movwf	1
  7713  052B                     i1l2121:
  7714  052B  3001               	movlw	1
  7715  052C  00A3               	movwf	??_EUSART_Receive_ISR
  7716  052D  0823               	movf	??_EUSART_Receive_ISR,w
  7717  052E  0021               	movlb	1	; select bank1
  7718  052F  07C0               	addwf	_contador_rx^(0+128),f	;volatile
  7719  0530                     i1l276:
  7720  0530  0008               	return
  7721  0531                     __end_of_EUSART_Receive_ISR:
  7722                           
  7723                           	psect	text27
  7724  05E8                     __ptext27:	
  7725 ;; *************** function _strstr *****************
  7726 ;; Defined at:
  7727 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strstr.c"
  7728 ;; Parameters:    Size  Location     Type
  7729 ;;  h               1    wreg     PTR const unsigned char 
  7730 ;;		 -> NULL(0), buffer_rx(20), 
  7731 ;;  n               2    9[COMMON] PTR const unsigned char 
  7732 ;;		 -> STR_6(8), STR_4(10), 
  7733 ;; Auto vars:     Size  Location     Type
  7734 ;;  h               1    2[BANK0 ] PTR const unsigned char 
  7735 ;;		 -> NULL(0), buffer_rx(20), 
  7736 ;;  nl              2    0[BANK0 ] unsigned int 
  7737 ;; Return value:  Size  Location     Type
  7738 ;;                  1    wreg      PTR unsigned char 
  7739 ;; Registers used:
  7740 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7741 ;; Tracked objects:
  7742 ;;		On entry : 0/0
  7743 ;;		On exit  : 0/0
  7744 ;;		Unchanged: 0/0
  7745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7746 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7747 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7748 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7749 ;;      Totals:         5       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7750 ;;Total ram usage:        8 bytes
  7751 ;; Hardware stack levels used: 1
  7752 ;; Hardware stack levels required when called: 1
  7753 ;; This function calls:
  7754 ;;		_strchr
  7755 ;;		_strncmp
  7756 ;;		i1_strlen
  7757 ;; This function is called by:
  7758 ;;		_EUSART_Receive_ISR
  7759 ;; This function uses a non-reentrant model
  7760 ;;
  7761                           
  7762                           
  7763                           ;psect for function _strstr
  7764  05E8                     _strstr:
  7765                           
  7766                           ;incstack = 0
  7767                           ; Regs used in _strstr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7768                           ;strstr@h stored from wreg
  7769  05E8  0020               	movlb	0	; select bank0
  7770  05E9  00A2               	movwf	strstr@h
  7771  05EA                     i1l2023:
  7772  05EA  0879               	movf	strstr@n,w
  7773  05EB  047A               	iorwf	strstr@n+1,w
  7774  05EC  1903               	btfsc	3,2
  7775  05ED  2DEF               	goto	u157_21
  7776  05EE  2DF0               	goto	u157_20
  7777  05EF                     u157_21:
  7778  05EF  2E35               	goto	i1l2039
  7779  05F0                     u157_20:
  7780  05F0                     i1l2025:
  7781  05F0  087A               	movf	strstr@n+1,w
  7782  05F1  00F1               	movwf	i1strlen@s+1
  7783  05F2  0879               	movf	strstr@n,w
  7784  05F3  00F0               	movwf	i1strlen@s
  7785  05F4  318F  2772  3185   	fcall	i1_strlen
  7786  05F7  0871               	movf	?i1_strlen+1,w
  7787  05F8  0020               	movlb	0	; select bank0
  7788  05F9  00A1               	movwf	strstr@nl+1
  7789  05FA  0870               	movf	?i1_strlen,w
  7790  05FB  00A0               	movwf	strstr@nl
  7791  05FC  2E27               	goto	i1l2035
  7792  05FD                     i1l2027:
  7793  05FD  087A               	movf	strstr@n+1,w
  7794  05FE  00F1               	movwf	strncmp@_r+1
  7795  05FF  0879               	movf	strstr@n,w
  7796  0600  00F0               	movwf	strncmp@_r
  7797  0601  0821               	movf	strstr@nl+1,w
  7798  0602  00F3               	movwf	strncmp@n+1
  7799  0603  0820               	movf	strstr@nl,w
  7800  0604  00F2               	movwf	strncmp@n
  7801  0605  0822               	movf	strstr@h,w
  7802  0606  3185  258D  3185   	fcall	_strncmp
  7803  0609  0870               	movf	?_strncmp,w
  7804  060A  0471               	iorwf	?_strncmp+1,w
  7805  060B  1D03               	btfss	3,2
  7806  060C  2E0E               	goto	u158_21
  7807  060D  2E0F               	goto	u158_20
  7808  060E                     u158_21:
  7809  060E  2E12               	goto	i1l2033
  7810  060F                     u158_20:
  7811  060F                     i1l2029:
  7812  060F  0020               	movlb	0	; select bank0
  7813  0610  0822               	movf	strstr@h,w
  7814  0611  2E36               	goto	i1l1037
  7815  0612                     i1l2033:
  7816  0612  0879               	movf	strstr@n,w
  7817  0613  0084               	movwf	4
  7818  0614  087A               	movf	strstr@n+1,w
  7819  0615  0085               	movwf	5
  7820  0616  0800               	movf	0,w	;code access
  7821  0617  00FB               	movwf	??_strstr
  7822  0618  01FC               	clrf	??_strstr+1
  7823  0619  087B               	movf	??_strstr,w
  7824  061A  00F0               	movwf	strchr@c
  7825  061B  087C               	movf	??_strstr+1,w
  7826  061C  00F1               	movwf	strchr@c+1
  7827  061D  0020               	movlb	0	; select bank0
  7828  061E  0822               	movf	strstr@h,w
  7829  061F  3E01               	addlw	1
  7830  0620  318F  2759  3185   	fcall	_strchr
  7831  0623  00FD               	movwf	??_strstr+2
  7832  0624  087D               	movf	??_strstr+2,w
  7833  0625  0020               	movlb	0	; select bank0
  7834  0626  00A2               	movwf	strstr@h
  7835  0627                     i1l2035:
  7836  0627  0822               	movf	strstr@h,w
  7837  0628  1903               	btfsc	3,2
  7838  0629  2E2B               	goto	u159_21
  7839  062A  2E2C               	goto	u159_20
  7840  062B                     u159_21:
  7841  062B  2E35               	goto	i1l2039
  7842  062C                     u159_20:
  7843  062C                     i1l2037:
  7844  062C  0822               	movf	strstr@h,w
  7845  062D  0086               	movwf	6
  7846  062E  3001               	movlw	1	; select bank2/3
  7847  062F  0087               	movwf	7
  7848  0630  0801               	movf	1,w
  7849  0631  1D03               	btfss	3,2
  7850  0632  2E34               	goto	u160_21
  7851  0633  2E35               	goto	u160_20
  7852  0634                     u160_21:
  7853  0634  2DFD               	goto	i1l2027
  7854  0635                     u160_20:
  7855  0635                     i1l2039:
  7856  0635  3000               	movlw	0
  7857  0636                     i1l1037:
  7858  0636  0008               	return
  7859  0637                     __end_of_strstr:
  7860                           
  7861                           	psect	text28
  7862  0F72                     __ptext28:	
  7863 ;; *************** function i1_strlen *****************
  7864 ;; Defined at:
  7865 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  7866 ;; Parameters:    Size  Location     Type
  7867 ;;  s               2    0[COMMON] PTR const unsigned char 
  7868 ;;		 -> dbuf(32), STR_6(8), STR_4(10), 
  7869 ;; Auto vars:     Size  Location     Type
  7870 ;;  a               2    3[COMMON] PTR const unsigned char 
  7871 ;;		 -> dbuf(32), STR_6(8), STR_4(10), 
  7872 ;; Return value:  Size  Location     Type
  7873 ;;                  2    0[COMMON] unsigned int 
  7874 ;; Registers used:
  7875 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7876 ;; Tracked objects:
  7877 ;;		On entry : 0/0
  7878 ;;		On exit  : 0/0
  7879 ;;		Unchanged: 0/0
  7880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7881 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7882 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7883 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7884 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7885 ;;Total ram usage:        5 bytes
  7886 ;; Hardware stack levels used: 1
  7887 ;; This function calls:
  7888 ;;		Nothing
  7889 ;; This function is called by:
  7890 ;;		_strstr
  7891 ;; This function uses a non-reentrant model
  7892 ;;
  7893                           
  7894                           
  7895                           ;psect for function i1_strlen
  7896  0F72                     i1_strlen:
  7897  0F72                     i1l1919:	
  7898                           ;incstack = 0
  7899                           ; Regs used in i1_strlen: [wreg-fsr0h+status,2+status,0]
  7900                           
  7901  0F72  0871               	movf	i1strlen@s+1,w
  7902  0F73  00F4               	movwf	i1strlen@a+1
  7903  0F74  0870               	movf	i1strlen@s,w
  7904  0F75  00F3               	movwf	i1strlen@a
  7905  0F76  2F7B               	goto	i1l1923
  7906  0F77                     i1l1921:
  7907  0F77  3001               	movlw	1
  7908  0F78  07F0               	addwf	i1strlen@s,f
  7909  0F79  3000               	movlw	0
  7910  0F7A  3DF1               	addwfc	i1strlen@s+1,f
  7911  0F7B                     i1l1923:
  7912  0F7B  0870               	movf	i1strlen@s,w
  7913  0F7C  0084               	movwf	4
  7914  0F7D  0871               	movf	i1strlen@s+1,w
  7915  0F7E  0085               	movwf	5
  7916  0F7F  0012               	moviw fsr0++
  7917  0F80  1D03               	btfss	3,2
  7918  0F81  2F83               	goto	u154_21
  7919  0F82  2F84               	goto	u154_20
  7920  0F83                     u154_21:
  7921  0F83  2F77               	goto	i1l1921
  7922  0F84                     u154_20:
  7923  0F84                     i1l1925:
  7924  0F84  0873               	movf	i1strlen@a,w
  7925  0F85  0270               	subwf	i1strlen@s,w
  7926  0F86  00F0               	movwf	?i1_strlen
  7927  0F87  0874               	movf	i1strlen@a+1,w
  7928  0F88  3B71               	subwfb	i1strlen@s+1,w
  7929  0F89  00F1               	movwf	?i1_strlen+1
  7930  0F8A                     i1l1024:
  7931  0F8A  0008               	return
  7932  0F8B                     __end_ofi1_strlen:
  7933                           
  7934                           	psect	text29
  7935  058D                     __ptext29:	
  7936 ;; *************** function _strncmp *****************
  7937 ;; Defined at:
  7938 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  7939 ;; Parameters:    Size  Location     Type
  7940 ;;  _l              1    wreg     PTR const unsigned char 
  7941 ;;		 -> NULL(0), buffer_rx(20), 
  7942 ;;  _r              2    0[COMMON] PTR const unsigned char 
  7943 ;;		 -> STR_6(8), STR_4(10), 
  7944 ;;  n               2    2[COMMON] unsigned int 
  7945 ;; Auto vars:     Size  Location     Type
  7946 ;;  _l              1    5[COMMON] PTR const unsigned char 
  7947 ;;		 -> NULL(0), buffer_rx(20), 
  7948 ;;  r               2    6[COMMON] PTR const unsigned char 
  7949 ;;		 -> STR_6(8), STR_4(10), 
  7950 ;;  l               1    8[COMMON] PTR const unsigned char 
  7951 ;;		 -> NULL(0), buffer_rx(20), 
  7952 ;; Return value:  Size  Location     Type
  7953 ;;                  2    0[COMMON] int 
  7954 ;; Registers used:
  7955 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  7956 ;; Tracked objects:
  7957 ;;		On entry : 0/0
  7958 ;;		On exit  : 0/0
  7959 ;;		Unchanged: 0/0
  7960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7961 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7962 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7963 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7964 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7965 ;;Total ram usage:        9 bytes
  7966 ;; Hardware stack levels used: 1
  7967 ;; This function calls:
  7968 ;;		Nothing
  7969 ;; This function is called by:
  7970 ;;		_strstr
  7971 ;; This function uses a non-reentrant model
  7972 ;;
  7973                           
  7974                           
  7975                           ;psect for function _strncmp
  7976  058D                     _strncmp:
  7977                           
  7978                           ;incstack = 0
  7979                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
  7980                           ;strncmp@_l stored from wreg
  7981  058D  00F5               	movwf	strncmp@_l
  7982  058E                     i1l1881:
  7983  058E  0875               	movf	strncmp@_l,w
  7984  058F  00F4               	movwf	??_strncmp
  7985  0590  0874               	movf	??_strncmp,w
  7986  0591  00F8               	movwf	strncmp@l
  7987  0592  0871               	movf	strncmp@_r+1,w
  7988  0593  00F7               	movwf	strncmp@r+1
  7989  0594  0870               	movf	strncmp@_r,w
  7990  0595  00F6               	movwf	strncmp@r
  7991  0596                     i1l1883:
  7992  0596  3001               	movlw	1
  7993  0597  02F2               	subwf	strncmp@n,f
  7994  0598  3000               	movlw	0
  7995  0599  3BF3               	subwfb	strncmp@n+1,f
  7996  059A  0A72               	incf	strncmp@n,w
  7997  059B  1D03               	skipz
  7998  059C  2DA1               	goto	u147_21
  7999  059D  0A73               	incf	strncmp@n+1,w
  8000  059E  1D03               	btfss	3,2
  8001  059F  2DA1               	goto	u147_21
  8002  05A0  2DA2               	goto	u147_20
  8003  05A1                     u147_21:
  8004  05A1  2DB1               	goto	i1l1895
  8005  05A2                     u147_20:
  8006  05A2                     i1l1885:
  8007  05A2  01F0               	clrf	?_strncmp
  8008  05A3  01F1               	clrf	?_strncmp+1
  8009  05A4  2DE7               	goto	i1l1050
  8010  05A5                     i1l1889:
  8011  05A5  3001               	movlw	1
  8012  05A6  00F4               	movwf	??_strncmp
  8013  05A7  0874               	movf	??_strncmp,w
  8014  05A8  07F8               	addwf	strncmp@l,f
  8015  05A9                     i1l1891:
  8016  05A9  3001               	movlw	1
  8017  05AA  07F6               	addwf	strncmp@r,f
  8018  05AB  3000               	movlw	0
  8019  05AC  3DF7               	addwfc	strncmp@r+1,f
  8020  05AD                     i1l1893:
  8021  05AD  3001               	movlw	1
  8022  05AE  02F2               	subwf	strncmp@n,f
  8023  05AF  3000               	movlw	0
  8024  05B0  3BF3               	subwfb	strncmp@n+1,f
  8025  05B1                     i1l1895:
  8026  05B1  0878               	movf	strncmp@l,w
  8027  05B2  0086               	movwf	6
  8028  05B3  3001               	movlw	1	; select bank2/3
  8029  05B4  0087               	movwf	7
  8030  05B5  0801               	movf	1,w
  8031  05B6  1903               	btfsc	3,2
  8032  05B7  2DB9               	goto	u148_21
  8033  05B8  2DBA               	goto	u148_20
  8034  05B9                     u148_21:
  8035  05B9  2DD9               	goto	i1l1903
  8036  05BA                     u148_20:
  8037  05BA                     i1l1897:
  8038  05BA  0876               	movf	strncmp@r,w
  8039  05BB  0084               	movwf	4
  8040  05BC  0877               	movf	strncmp@r+1,w
  8041  05BD  0085               	movwf	5
  8042  05BE  0012               	moviw fsr0++
  8043  05BF  1903               	btfsc	3,2
  8044  05C0  2DC2               	goto	u149_21
  8045  05C1  2DC3               	goto	u149_20
  8046  05C2                     u149_21:
  8047  05C2  2DD9               	goto	i1l1903
  8048  05C3                     u149_20:
  8049  05C3                     i1l1899:
  8050  05C3  0872               	movf	strncmp@n,w
  8051  05C4  0473               	iorwf	strncmp@n+1,w
  8052  05C5  1903               	btfsc	3,2
  8053  05C6  2DC8               	goto	u150_21
  8054  05C7  2DC9               	goto	u150_20
  8055  05C8                     u150_21:
  8056  05C8  2DD9               	goto	i1l1903
  8057  05C9                     u150_20:
  8058  05C9                     i1l1901:
  8059  05C9  0876               	movf	strncmp@r,w
  8060  05CA  0084               	movwf	4
  8061  05CB  0877               	movf	strncmp@r+1,w
  8062  05CC  0085               	movwf	5
  8063  05CD  0800               	movf	0,w	;code access
  8064  05CE  00F4               	movwf	??_strncmp
  8065  05CF  0878               	movf	strncmp@l,w
  8066  05D0  0086               	movwf	6
  8067  05D1  3001               	movlw	1	; select bank2/3
  8068  05D2  0087               	movwf	7
  8069  05D3  0801               	movf	1,w
  8070  05D4  0674               	xorwf	??_strncmp,w
  8071  05D5  1903               	skipnz
  8072  05D6  2DD8               	goto	u151_21
  8073  05D7  2DD9               	goto	u151_20
  8074  05D8                     u151_21:
  8075  05D8  2DA5               	goto	i1l1889
  8076  05D9                     u151_20:
  8077  05D9                     i1l1903:
  8078  05D9  0878               	movf	strncmp@l,w
  8079  05DA  0086               	movwf	6
  8080  05DB  3001               	movlw	1	; select bank2/3
  8081  05DC  0087               	movwf	7
  8082  05DD  0876               	movf	strncmp@r,w
  8083  05DE  0084               	movwf	4
  8084  05DF  0877               	movf	strncmp@r+1,w
  8085  05E0  0085               	movwf	5
  8086  05E1  0800               	movf	0,w	;code access
  8087  05E2  0201               	subwf	1,w
  8088  05E3  00F0               	movwf	?_strncmp
  8089  05E4  01F1               	clrf	?_strncmp+1
  8090  05E5  1C03               	skipc
  8091  05E6  03F1               	decf	?_strncmp+1,f
  8092  05E7                     i1l1050:
  8093  05E7  0008               	return
  8094  05E8                     __end_of_strncmp:
  8095                           
  8096                           	psect	text30
  8097  0F59                     __ptext30:	
  8098 ;; *************** function _strchr *****************
  8099 ;; Defined at:
  8100 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strchr.c"
  8101 ;; Parameters:    Size  Location     Type
  8102 ;;  s               1    wreg     PTR const unsigned char 
  8103 ;;		 -> NULL(0), buffer_rx(20), 
  8104 ;;  c               2    0[COMMON] int 
  8105 ;; Auto vars:     Size  Location     Type
  8106 ;;  s               1    2[COMMON] PTR const unsigned char 
  8107 ;;		 -> NULL(0), buffer_rx(20), 
  8108 ;; Return value:  Size  Location     Type
  8109 ;;                  1    wreg      PTR unsigned char 
  8110 ;; Registers used:
  8111 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8112 ;; Tracked objects:
  8113 ;;		On entry : 0/0
  8114 ;;		On exit  : 0/0
  8115 ;;		Unchanged: 0/0
  8116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8117 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8118 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8120 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8121 ;;Total ram usage:        3 bytes
  8122 ;; Hardware stack levels used: 1
  8123 ;; This function calls:
  8124 ;;		Nothing
  8125 ;; This function is called by:
  8126 ;;		_strstr
  8127 ;; This function uses a non-reentrant model
  8128 ;;
  8129                           
  8130                           
  8131                           ;psect for function _strchr
  8132  0F59                     _strchr:
  8133                           
  8134                           ;incstack = 0
  8135                           ; Regs used in _strchr: [wreg+fsr1l+fsr1h+status,2+status,0]
  8136                           ;strchr@s stored from wreg
  8137  0F59  00F2               	movwf	strchr@s
  8138  0F5A                     i1l1043:
  8139  0F5A                     i1l1907:
  8140  0F5A  0872               	movf	strchr@s,w
  8141  0F5B  0086               	movwf	6
  8142  0F5C  3001               	movlw	1	; select bank2/3
  8143  0F5D  0087               	movwf	7
  8144  0F5E  0801               	movf	1,w
  8145  0F5F  0670               	xorwf	strchr@c,w
  8146  0F60  1D03               	skipz
  8147  0F61  2F63               	goto	u152_21
  8148  0F62  2F64               	goto	u152_20
  8149  0F63                     u152_21:
  8150  0F63  2F66               	goto	i1l1913
  8151  0F64                     u152_20:
  8152  0F64                     i1l1909:
  8153  0F64  0872               	movf	strchr@s,w
  8154  0F65  2F71               	goto	i1l1045
  8155  0F66                     i1l1913:
  8156  0F66  0872               	movf	strchr@s,w
  8157  0F67  0086               	movwf	6
  8158  0F68  3001               	movlw	1	; select bank2/3
  8159  0F69  0087               	movwf	7
  8160  0F6A  0AF2               	incf	strchr@s,f
  8161  0F6B  0801               	movf	1,w
  8162  0F6C  1D03               	btfss	3,2
  8163  0F6D  2F6F               	goto	u153_21
  8164  0F6E  2F70               	goto	u153_20
  8165  0F6F                     u153_21:
  8166  0F6F  2F5A               	goto	i1l1043
  8167  0F70                     u153_20:
  8168  0F70                     i1l1915:
  8169  0F70  3000               	movlw	0
  8170  0F71                     i1l1045:
  8171  0F71  0008               	return
  8172  0F72                     __end_of_strchr:
  8173                           
  8174                           	psect	text31
  8175  076D                     __ptext31:	
  8176 ;; *************** function _EUSART_Read *****************
  8177 ;; Defined at:
  8178 ;;		line 158 in file "mcc_generated_files/eusart.c"
  8179 ;; Parameters:    Size  Location     Type
  8180 ;;		None
  8181 ;; Auto vars:     Size  Location     Type
  8182 ;;  readValue       1    1[COMMON] unsigned char 
  8183 ;; Return value:  Size  Location     Type
  8184 ;;                  1    wreg      unsigned char 
  8185 ;; Registers used:
  8186 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8187 ;; Tracked objects:
  8188 ;;		On entry : 0/0
  8189 ;;		On exit  : 0/0
  8190 ;;		Unchanged: 0/0
  8191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8193 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8194 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8195 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8196 ;;Total ram usage:        2 bytes
  8197 ;; Hardware stack levels used: 1
  8198 ;; This function calls:
  8199 ;;		Nothing
  8200 ;; This function is called by:
  8201 ;;		_EUSART_Receive_ISR
  8202 ;;		_getch
  8203 ;; This function uses a non-reentrant model
  8204 ;;
  8205                           
  8206                           
  8207                           ;psect for function _EUSART_Read
  8208  076D                     _EUSART_Read:
  8209  076D                     i1l2001:	
  8210                           ;incstack = 0
  8211                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  8212                           
  8213  076D                     i1l2003:	
  8214                           ;mcc_generated_files/eusart.c: 162:     while(0 == eusartRxCount)
  8215                           
  8216                           
  8217                           ;mcc_generated_files/eusart.c: 162:     while(0 == eusartRxCount)
  8218  076D  0021               	movlb	1	; select bank1
  8219  076E  0843               	movf	_eusartRxCount^(0+128),w	;volatile
  8220  076F  1903               	btfsc	3,2
  8221  0770  2F72               	goto	u155_21
  8222  0771  2F73               	goto	u155_20
  8223  0772                     u155_21:
  8224  0772  2F6D               	goto	i1l2003
  8225  0773                     u155_20:
  8226  0773                     i1l2005:
  8227                           
  8228                           ;mcc_generated_files/eusart.c: 166:     eusartRxLastError = eusartRxStatusBuffer[eusartR
      +                          xTail];
  8229  0773  0020               	movlb	0	; select bank0
  8230  0774  0868               	movf	_eusartRxTail,w	;volatile
  8231  0775  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  8232  0776  0086               	movwf	6
  8233  0777  0187               	clrf	7
  8234  0778  0801               	movf	1,w
  8235  0779  00F0               	movwf	??_EUSART_Read
  8236  077A  0870               	movf	??_EUSART_Read,w
  8237  077B  0021               	movlb	1	; select bank1
  8238  077C  00C2               	movwf	_eusartRxLastError^(0+128)	;volatile
  8239                           
  8240                           ;mcc_generated_files/eusart.c: 168:     readValue = eusartRxBuffer[eusartRxTail++];
  8241  077D  0020               	movlb	0	; select bank0
  8242  077E  0868               	movf	_eusartRxTail,w
  8243  077F  3EA8               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  8244  0780  0086               	movwf	6
  8245  0781  0187               	clrf	7
  8246  0782  0801               	movf	1,w
  8247  0783  00F0               	movwf	??_EUSART_Read
  8248  0784  0870               	movf	??_EUSART_Read,w
  8249  0785  00F1               	movwf	EUSART_Read@readValue
  8250  0786                     i1l2007:
  8251  0786  3001               	movlw	1
  8252  0787  00F0               	movwf	??_EUSART_Read
  8253  0788  0870               	movf	??_EUSART_Read,w
  8254  0789  07E8               	addwf	_eusartRxTail,f	;volatile
  8255  078A                     i1l2009:
  8256                           
  8257                           ;mcc_generated_files/eusart.c: 169:     if(sizeof(eusartRxBuffer) <= eusartRxTail)
  8258  078A  3008               	movlw	8
  8259  078B  0268               	subwf	_eusartRxTail,w	;volatile
  8260  078C  1C03               	skipc
  8261  078D  2F8F               	goto	u156_21
  8262  078E  2F90               	goto	u156_20
  8263  078F                     u156_21:
  8264  078F  2F91               	goto	i1l2013
  8265  0790                     u156_20:
  8266  0790                     i1l2011:
  8267                           
  8268                           ;mcc_generated_files/eusart.c: 170:     {;mcc_generated_files/eusart.c: 171:         eus
      +                          artRxTail = 0;
  8269  0790  01E8               	clrf	_eusartRxTail	;volatile
  8270  0791                     i1l2013:
  8271                           
  8272                           ;mcc_generated_files/eusart.c: 173:     PIE3bits.RCIE = 0;
  8273  0791  002E               	movlb	14	; select bank14
  8274  0792  1299               	bcf	25,5	;volatile
  8275  0793                     i1l2015:
  8276                           
  8277                           ;mcc_generated_files/eusart.c: 174:     eusartRxCount--;
  8278  0793  3001               	movlw	1
  8279  0794  0021               	movlb	1	; select bank1
  8280  0795  02C3               	subwf	_eusartRxCount^(0+128),f	;volatile
  8281  0796                     i1l2017:
  8282                           
  8283                           ;mcc_generated_files/eusart.c: 175:     PIE3bits.RCIE = 1;
  8284  0796  002E               	movlb	14	; select bank14
  8285  0797  1699               	bsf	25,5	;volatile
  8286  0798                     i1l2019:
  8287                           
  8288                           ;mcc_generated_files/eusart.c: 177:     return readValue;
  8289  0798  0871               	movf	EUSART_Read@readValue,w
  8290  0799                     i1l240:
  8291  0799  0008               	return
  8292  079A                     __end_of_EUSART_Read:
  8293                           
  8294                           	psect	text32
  8295  07FB                     __ptext32:	
  8296 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  8297 ;; Defined at:
  8298 ;;		line 284 in file "mcc_generated_files/eusart.c"
  8299 ;; Parameters:    Size  Location     Type
  8300 ;;		None
  8301 ;; Auto vars:     Size  Location     Type
  8302 ;;		None
  8303 ;; Return value:  Size  Location     Type
  8304 ;;                  1    wreg      void 
  8305 ;; Registers used:
  8306 ;;		None
  8307 ;; Tracked objects:
  8308 ;;		On entry : 0/0
  8309 ;;		On exit  : 0/0
  8310 ;;		Unchanged: 0/0
  8311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8316 ;;Total ram usage:        0 bytes
  8317 ;; Hardware stack levels used: 1
  8318 ;; This function calls:
  8319 ;;		Nothing
  8320 ;; This function is called by:
  8321 ;;		_EUSART_Initialize
  8322 ;;		_EUSART_Receive_ISR
  8323 ;; This function uses a non-reentrant model
  8324 ;;
  8325                           
  8326                           
  8327                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  8328  07FB                     _EUSART_DefaultOverrunErrorHandler:
  8329  07FB                     i1l2043:	
  8330                           ;incstack = 0
  8331                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  8332                           
  8333                           
  8334                           ;mcc_generated_files/eusart.c: 287:     RC1STAbits.CREN = 0;
  8335  07FB  0022               	movlb	2	; select bank2
  8336  07FC  121D               	bcf	29,4	;volatile
  8337                           
  8338                           ;mcc_generated_files/eusart.c: 288:     RC1STAbits.CREN = 1;
  8339  07FD  161D               	bsf	29,4	;volatile
  8340  07FE                     i1l286:
  8341  07FE  0008               	return
  8342  07FF                     __end_of_EUSART_DefaultOverrunErrorHandler:
  8343                           
  8344                           	psect	text33
  8345  07FF                     __ptext33:	
  8346 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  8347 ;; Defined at:
  8348 ;;		line 282 in file "mcc_generated_files/eusart.c"
  8349 ;; Parameters:    Size  Location     Type
  8350 ;;		None
  8351 ;; Auto vars:     Size  Location     Type
  8352 ;;		None
  8353 ;; Return value:  Size  Location     Type
  8354 ;;                  1    wreg      void 
  8355 ;; Registers used:
  8356 ;;		None
  8357 ;; Tracked objects:
  8358 ;;		On entry : 0/0
  8359 ;;		On exit  : 0/0
  8360 ;;		Unchanged: 0/0
  8361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8366 ;;Total ram usage:        0 bytes
  8367 ;; Hardware stack levels used: 1
  8368 ;; This function calls:
  8369 ;;		Nothing
  8370 ;; This function is called by:
  8371 ;;		_EUSART_Initialize
  8372 ;;		_EUSART_Receive_ISR
  8373 ;; This function uses a non-reentrant model
  8374 ;;
  8375                           
  8376                           
  8377                           ;psect for function _EUSART_DefaultFramingErrorHandler
  8378  07FF                     _EUSART_DefaultFramingErrorHandler:
  8379  07FF                     i1l283:	
  8380                           ;incstack = 0
  8381                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  8382                           
  8383  07FF  0008               	return
  8384  0800                     __end_of_EUSART_DefaultFramingErrorHandler:
  8385                           
  8386                           	psect	text34
  8387  0EF3                     __ptext34:	
  8388 ;; *************** function _EUSART_DefaultErrorHandler *****************
  8389 ;; Defined at:
  8390 ;;		line 292 in file "mcc_generated_files/eusart.c"
  8391 ;; Parameters:    Size  Location     Type
  8392 ;;		None
  8393 ;; Auto vars:     Size  Location     Type
  8394 ;;		None
  8395 ;; Return value:  Size  Location     Type
  8396 ;;                  1    wreg      void 
  8397 ;; Registers used:
  8398 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8399 ;; Tracked objects:
  8400 ;;		On entry : 0/0
  8401 ;;		On exit  : 0/0
  8402 ;;		Unchanged: 0/0
  8403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8408 ;;Total ram usage:        0 bytes
  8409 ;; Hardware stack levels used: 1
  8410 ;; Hardware stack levels required when called: 1
  8411 ;; This function calls:
  8412 ;;		_EUSART_RxDataHandler
  8413 ;; This function is called by:
  8414 ;;		_EUSART_Initialize
  8415 ;;		_EUSART_Receive_ISR
  8416 ;; This function uses a non-reentrant model
  8417 ;;
  8418                           
  8419                           
  8420                           ;psect for function _EUSART_DefaultErrorHandler
  8421  0EF3                     _EUSART_DefaultErrorHandler:
  8422  0EF3                     i1l2045:	
  8423                           ;incstack = 0
  8424                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  8425                           
  8426                           
  8427                           ;mcc_generated_files/eusart.c: 293:     EUSART_RxDataHandler();
  8428  0EF3  318F  27A5  318E   	fcall	_EUSART_RxDataHandler
  8429  0EF6                     i1l289:
  8430  0EF6  0008               	return
  8431  0EF7                     __end_of_EUSART_DefaultErrorHandler:
  8432                           
  8433                           	psect	text35
  8434  0FA5                     __ptext35:	
  8435 ;; *************** function _EUSART_RxDataHandler *****************
  8436 ;; Defined at:
  8437 ;;		line 272 in file "mcc_generated_files/eusart.c"
  8438 ;; Parameters:    Size  Location     Type
  8439 ;;		None
  8440 ;; Auto vars:     Size  Location     Type
  8441 ;;		None
  8442 ;; Return value:  Size  Location     Type
  8443 ;;                  1    wreg      void 
  8444 ;; Registers used:
  8445 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8446 ;; Tracked objects:
  8447 ;;		On entry : 0/0
  8448 ;;		On exit  : 0/0
  8449 ;;		Unchanged: 0/0
  8450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8453 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8454 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8455 ;;Total ram usage:        1 bytes
  8456 ;; Hardware stack levels used: 1
  8457 ;; This function calls:
  8458 ;;		Nothing
  8459 ;; This function is called by:
  8460 ;;		_EUSART_Receive_ISR
  8461 ;;		_EUSART_DefaultErrorHandler
  8462 ;; This function uses a non-reentrant model
  8463 ;;
  8464                           
  8465                           
  8466                           ;psect for function _EUSART_RxDataHandler
  8467  0FA5                     _EUSART_RxDataHandler:
  8468  0FA5                     i1l1827:	
  8469                           ;incstack = 0
  8470                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  8471                           
  8472                           
  8473                           ;mcc_generated_files/eusart.c: 274:     eusartRxBuffer[eusartRxHead++] = RC1REG;
  8474  0FA5  0022               	movlb	2	; select bank2
  8475  0FA6  0819               	movf	25,w	;volatile
  8476  0FA7  00F0               	movwf	??_EUSART_RxDataHandler
  8477  0FA8  0020               	movlb	0	; select bank0
  8478  0FA9  0869               	movf	_eusartRxHead,w
  8479  0FAA  3EA8               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  8480  0FAB  0086               	movwf	6
  8481  0FAC  0187               	clrf	7
  8482  0FAD  0870               	movf	??_EUSART_RxDataHandler,w
  8483  0FAE  0081               	movwf	1
  8484  0FAF                     i1l1829:
  8485  0FAF  3001               	movlw	1
  8486  0FB0  00F0               	movwf	??_EUSART_RxDataHandler
  8487  0FB1  0870               	movf	??_EUSART_RxDataHandler,w
  8488  0FB2  07E9               	addwf	_eusartRxHead,f	;volatile
  8489  0FB3                     i1l1831:
  8490                           
  8491                           ;mcc_generated_files/eusart.c: 275:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  8492  0FB3  3008               	movlw	8
  8493  0FB4  0269               	subwf	_eusartRxHead,w	;volatile
  8494  0FB5  1C03               	skipc
  8495  0FB6  2FB8               	goto	u142_21
  8496  0FB7  2FB9               	goto	u142_20
  8497  0FB8                     u142_21:
  8498  0FB8  2FBA               	goto	i1l1835
  8499  0FB9                     u142_20:
  8500  0FB9                     i1l1833:
  8501                           
  8502                           ;mcc_generated_files/eusart.c: 276:     {;mcc_generated_files/eusart.c: 277:         eus
      +                          artRxHead = 0;
  8503  0FB9  01E9               	clrf	_eusartRxHead	;volatile
  8504  0FBA                     i1l1835:
  8505                           
  8506                           ;mcc_generated_files/eusart.c: 279:     eusartRxCount++;
  8507  0FBA  3001               	movlw	1
  8508  0FBB  00F0               	movwf	??_EUSART_RxDataHandler
  8509  0FBC  0870               	movf	??_EUSART_RxDataHandler,w
  8510  0FBD  0021               	movlb	1	; select bank1
  8511  0FBE  07C3               	addwf	_eusartRxCount^(0+128),f	;volatile
  8512  0FBF                     i1l280:
  8513  0FBF  0008               	return
  8514  0FC0                     __end_of_EUSART_RxDataHandler:
  8515  007E                     btemp	set	126	;btemp
  8516  007E                     int$flags	set	126
  8517  007E                     wtemp0	set	126
  8518                           
  8519                           	psect	config
  8520                           
  8521                           ;Config register CONFIG1 @ 0x8007
  8522                           ;	External Oscillator mode selection bits
  8523                           ;	FEXTOSC = OFF, Oscillator not enabled
  8524                           ;	Power-up default value for COSC bits
  8525                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
  8526                           ;	Clock Out Enable bit
  8527                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
  8528                           ;	Clock Switch Enable bit
  8529                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  8530                           ;	Fail-Safe Clock Monitor Enable bit
  8531                           ;	FCMEN = ON, FSCM timer enabled
  8532  8007                     	org	32775
  8533  8007  3FEC               	dw	16364
  8534                           
  8535                           ;Config register CONFIG2 @ 0x8008
  8536                           ;	Master Clear Enable bit
  8537                           ;	MCLRE = ON, MCLR pin is Master Clear function
  8538                           ;	Power-up Timer Enable bit
  8539                           ;	PWRTE = OFF, PWRT disabled
  8540                           ;	Low-Power BOR enable bit
  8541                           ;	LPBOREN = OFF, ULPBOR disabled
  8542                           ;	Brown-out reset enable bits
  8543                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  8544                           ;	Brown-out Reset Voltage Selection
  8545                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
  8546                           ;	Zero-cross detect disable
  8547                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
  8548                           ;	Peripheral Pin Select one-way control
  8549                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
  8550                           ;	Stack Overflow/Underflow Reset Enable bit
  8551                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  8552                           ;	Background Debugger
  8553                           ;	DEBUG = OFF, Background Debugger disabled
  8554  8008                     	org	32776
  8555  8008  3FFF               	dw	16383
  8556                           
  8557                           ;Config register CONFIG3 @ 0x8009
  8558                           ;	WDT Period Select bits
  8559                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  8560                           ;	WDT operating mode
  8561                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
  8562                           ;	WDT Window Select bits
  8563                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  8564                           ;	WDT input clock selector
  8565                           ;	WDTCCS = SC, Software Control
  8566  8009                     	org	32777
  8567  8009  3F9F               	dw	16287
  8568                           
  8569                           ;Config register CONFIG4 @ 0x800A
  8570                           ;	UserNVM self-write protection bits
  8571                           ;	WRT = OFF, Write protection off
  8572                           ;	Scanner Enable bit
  8573                           ;	SCANE = available, Scanner module is available for use
  8574                           ;	Low Voltage Programming Enable bit
  8575                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
  8576  800A                     	org	32778
  8577  800A  3FFF               	dw	16383
  8578                           
  8579                           ;Config register CONFIG5 @ 0x800B
  8580                           ;	UserNVM Program memory code protection bit
  8581                           ;	CP = OFF, Program Memory code protection disabled
  8582                           ;	DataNVM code protection bit
  8583                           ;	CPD = OFF, Data EEPROM code protection disabled
  8584  800B                     	org	32779
  8585  800B  3FFF               	dw	16383

Data Sizes:
    Strings     36
    Constant    0
    Data        0
    BSS         92
    Persistent  43
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     72      76
    BANK1            80     24      71
    BANK2            80      0      52
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_6(CODE[8]), STR_4(CODE[10]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_6(CODE[8]), STR_4(CODE[10]), 

    strncmp@_l	PTR const unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), buffer_rx(BANK2[20]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), buffer_rx(BANK2[20]), 

    strchr@s	PTR const unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), buffer_rx(BANK2[20]), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), buffer_rx(BANK2[20]), 

    strstr@h	PTR const unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), buffer_rx(BANK2[20]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_6(CODE[8]), STR_4(CODE[10]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), STR_6(CODE[8]), STR_4(CODE[10]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), STR_6(CODE[8]), STR_4(CODE[10]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S881_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[4]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[4]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[4]), STR_1(CODE[14]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    sp__strstr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), buffer_rx(BANK2[20]), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Transmit_ISR(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _EUSART_Receive_ISR->_strstr
    _strstr->_strncmp
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___aomod
    _SYSTEM_Initialize->_EUSART_Initialize
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INTERRUPT_InterruptManager->_EUSART_Receive_ISR
    _EUSART_Receive_ISR->_strstr

Critical Paths under _main in BANK1

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    8526
                                             20 BANK1      4     4      0
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    7999
                                             14 BANK1      6     2      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    7738
                                             69 BANK0      3     0      3
                                              9 BANK1      5     5      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    7300
                                             62 BANK0      7     5      2
                                              0 BANK1      9     9      0
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    5560
                                             32 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3329
                                             23 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     275
                                              4 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1429
                                             15 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3    1037
                                              7 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      93
                                              6 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         2     2      0      62
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             23 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     613
                                              4 BANK0     19     3     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     625
                                              4 BANK0     27    11     16
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     490
                                              6 BANK0      1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          0     0      0    1187
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (11) _EUSART_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Receive_ISR                                  1     1      0    1187
                                              3 BANK0      1     1      0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
                        _EUSART_Read
               _EUSART_RxDataHandler
                             _strstr
 ---------------------------------------------------------------------------------
 (12) _strstr                                              8     6      2    1163
                                              9 COMMON     5     3      2
                                              0 BANK0      3     3      0
                             _strchr
                            _strncmp
                           i1_strlen
 ---------------------------------------------------------------------------------
 (13) i1_strlen                                            5     3      2     116
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (13) _strncmp                                             9     5      4     410
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (13) _strchr                                              3     1      2     197
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (12) _EUSART_Read                                         2     2      0      24
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
             _strlen
         _fputc

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_Read *
     _EUSART_RxDataHandler *
     _strstr *
       _strchr
       _strncmp
       i1_strlen
   _EUSART_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     48      4C       5       95.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     18      47       7       88.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      34       9       65.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      D5      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      D5      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Mar 03 10:19:19 2021

                ?_EUSART_SetRxInterruptHandler 0024                                             l74 07C4  
                                          l110 07FA                                            l113 0F41  
                                          l116 0F0B                                            l301 0F38  
                                          l221 06C8                                            l304 0F2F  
                                          l245 0748                                            l246 0752  
                                          l255 0F03                                            l249 076C  
                                          l292 0F1D                                            l295 0F26  
                                          l298 0F14                                            l570 049A  
                                          l556 02A9                                            l557 02BA  
                                          l569 0489                                            l951 058C  
                                          l919 0F58                                            l960 00CD  
                                          l946 054D                                            l954 008F  
                                          l963 013E                                            l955 0098  
                                          l949 056F                                            l959 00B5  
                                          l991 073F                                            l984 03AD  
                                          l977 01B5                                            l995 0FDB  
                                          l998 0FDB                                            _abs 0FC0  
                       ??_EUSART_RxDataHandler 0070                                            _pad 0531  
               ?_EUSART_SetFramingErrorHandler 0024                        __size_of_PMD_Initialize 0008  
                                          wreg 0009                                   ?_EUSART_Read 0070  
                                         l1010 0709                                           l1024 0FA4  
                                         l1018 07ED                                           ?_abs 0037  
                                         l2201 0F8B                                           l2211 01B6  
                                         l2203 0F91                                           l2061 07F1  
                                         l2221 020E                                           l2213 01B8  
                                         l2301 0FC0                                           l2205 0F95  
                                         l2063 07F4                                           l2231 0235  
                                         l2223 0213                                           l2215 01C2  
                                         l2303 0FCE                                           l2207 0F9E  
                                         l2311 0071                                           l2065 07F7  
                                         l2241 0277                                           l2233 0239  
                                         l2225 021E                                           l2217 01E4  
                                         l2161 0742                                           l2321 00C3  
                                         l2313 0094                                           l2305 0048  
                                         l2401 03A3                                           l2059 07EE  
                                         l2243 0278                                           l2235 023D  
                                         l2227 022A                                           l2219 01EF  
                                         l2251 03B0                                           l2171 0766  
                                         l2163 074D                                           l2331 0109  
                                         l2323 00C8                                           l2315 00A7  
                                         l2307 0058                                           l2411 0717  
                                         l2237 0245                                           l2229 022D  
                                         l2245 0286                                           l2261 0413  
                                         l2253 03BA                                           l2173 0767  
                                         l2165 0753                                           l2181 06CF  
                                         l2341 0166                                           l2333 010D  
                                         l2325 00D2                                           l2317 00AD  
                                         l2309 006B                                           l2413 072F  
                                         l2421 0F47                                           l2247 028B  
                                         l2239 0267                                           l2271 0448  
                                         l2263 0416                                           l2255 03DC  
                                         l2167 075C                                           l2175 076A  
                                         l2159 0742                                           l2183 06D4  
                                         l2351 018A                                           l2343 0174  
                                         l2335 0111                                           l2327 00D5  
                                         l2319 00BD                                           l2415 0738  
                                         l2407 070C                                           l2431 063E  
                                         l2273 0458                                           l2265 041E  
                                         l2257 03E7                                           l2249 03AE  
                                         l2169 0760                                           l2177 0EFF  
                                         l2185 06D9                                           l2193 07C7  
                                         l2281 0538                                           l2353 0190  
                                         l2337 014C                                           l2345 0179  
                                         l2329 00DA                                           l2409 0714  
                                         l2441 0665                                           l2433 063F  
                                         l2425 0637                                           l2267 0422  
                                         l2275 0466                                           l2259 0406  
                                         l2187 06E3                                           l2179 06C9  
                                         l2195 07CA                                           l2291 055C  
                                         l2283 0541                                           l2355 0195  
                                         l2347 0180                                           l2339 0159  
                                         l2371 02E0                                           l2363 02BD  
                                         l2419 0F42                                           l2443 0671  
                                         l2435 064C                                           l2427 063A  
                                         l1821 0F15                                           l2277 046B  
                                         l2269 0426                                           l2189 0700  
                                         l2197 07D8                                           l2293 0561  
                                         l2285 0546                                           l2357 0199  
                                         l2349 0185                                           l2373 02F2  
                                         l2365 02CF                                           l2437 0654  
                                         l2429 063D                                           l1823 0F1E  
                                         l2199 07DD                                           l2295 0574  
                                         l2287 054B                                           l2279 0533  
                                         l2359 01A2                                           l2383 0351  
                                         l2375 0303                                           l2367 02D7  
                                         l2439 0660                                           l1825 0F0C  
                                         l1817 0F27                                           l2297 057D  
                                         l2289 0550                                           l2385 0362  
                                         l2393 037D                                           l2377 030B  
                                         l2369 02DC                                           l1819 0F30  
                                         l1931 079E                                           l2395 0385  
                                         l2387 036A                                           l2379 0327  
                                         l1941 07A9                                           l1933 07A0  
                                         l2389 0377                                           l1951 07BA  
                                         l1943 07B2                                           l1935 07A2  
                                         l2399 0388                                           l1961 0F39  
                                         l1953 07BC                                           l1945 07B4  
                                         l1937 07A4                                           l1929 079A  
                                         l1971 0683                                           l1963 0F3C  
                                         l1955 07BF                                           l1947 07B6  
                                         l1939 07A7                                           l1981 069C  
                                         l1973 068B                                           l1965 0F3D  
                                         l1957 07C1                                           l1949 07B8  
                                         ?_pad 0037                                           l1991 06BC  
                                         l1983 069E                                           l1975 0695  
                                         l1967 0F40                                           l1959 0F04  
                                         l1993 06C1                                           l1985 069F  
                                         l1977 0698                                           l1969 0681  
                                         l1995 06C3                                           l1987 06A7  
                                         l1979 069A                                           l1997 06C4  
                                         l1989 06AF                                           l1999 06C6  
                                         STR_1 1000                                           STR_2 1020  
                                         STR_3 100E                                           STR_4 100E  
                                         STR_5 1018                                           STR_6 1018  
                                         u2010 03BA                                           u2011 03B9  
                                         u2030 03E7                                           u2110 0538  
                                         u2031 03E6                                           u2111 0537  
                                         u2120 0546                                           u2200 0094  
                                         u2121 0545                                           u2201 0093  
                                         u2050 0413                                           u2130 056F  
                                         u2210 00A7                                           u2051 0412  
                                         u2131 056E                                           u2211 00A6  
                                         u2060 0426                                           u2140 0574  
                                         u2300 0185                                           u2220 00C3  
                                         u2061 0425                                           u2141 0573  
                                         u2301 0184                                           u2221 00C2  
                                         _LATA 0016                                           u2070 0448  
                                         u2150 0FCE                                           u2310 0190  
                                         u2230 00C8                                           _LATB 0017  
                                         u2071 0447                                           u2151 0FCD  
                                         u2135 056B                                           u2311 018F  
                                         u2231 00C7                                           u2215 00A3  
                                         _LATC 0018                                           u2080 0466  
                                         u2240 014C                                           u2160 0063  
                                         u2320 02CF                                           u2081 0465  
                                         u2241 014B                                           u2161 0061  
                                         u2321 02CE                                           u2090 046B  
                                         u2250 0159                                           u2170 0064  
                                         u2330 02F2                                           u2091 046A  
                                         u2075 0444                                           u2155 0FCA  
                                         u2251 0158                                           u2331 02F1  
                                         u2260 0166                                           u2180 0071  
                                         u2340 0303                                           u2261 0165  
                                         u2245 0148                                           u2181 0070  
                                         u2341 0302                                           u2270 0174  
                                         u2350 0362                                           u2271 0173  
                                         u2351 0361                                           u2407 0677  
                                         u2280 0179                                           u2360 0738  
                                         u2281 0178                                           u2265 0162  
                                         u2361 0737                                           u1810 0748  
                                         u2290 0180                                           u2370 066F  
                                         u1811 0747                                           u2291 017F  
                                         u2275 0170                                           u2371 066C  
                                         u1900 01C2                                           u1820 074D  
                                         u1901 01C1                                           u1821 074C  
                                         u1830 0766                                           u1831 0765  
                                         u1920 01EF                                           u1840 06CF  
                                         u2384 0671                                           u1921 01EE  
                                         u1841 06CE                                           u1850 06D4  
                                         u1851 06D3                                           u1940 021B  
                                         u1860 06E3                                           u1861 06E2  
                                         u2397 0645                                           u1950 022A  
                                         u1870 0700                                           u1951 0229  
                                         u1871 06FF                                           u1960 023D  
                                         u1880 07ED                                           u1961 023C  
                                         u1881 07EC                                           u1970 0267  
                                         u1890 0F9E                                           u1971 0266  
                                         u1875 06FC                                           u1891 0F9D  
                                         u1980 0286                                           _PMD0 0796  
                                         i1l21 0029                                           u1981 0285  
                                         _PMD1 0797                                           u1990 028B  
                                         _PMD2 0798                                           u1991 028A  
                                         u1975 0263                                           _PMD3 0799  
                                         i1l16 001A                                           _PMD4 079A  
                                         i1l17 0029                                           _PMD5 079B  
                                         _WPUA 0F39                                           _WPUB 0F44  
                                         _WPUC 0F4F                                           _WPUE 0F65  
                                         abs@a 0037                                           _dbuf 0120  
                                         _main 0637                                           _dtoa 0046  
                                         _prec 00BC                                           _nout 00B8  
                                         pad@i 003B                                           pad@p 0038  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         pad@w 003D                                           btemp 007E  
                                         start 002B                                          ??_abs 0039  
                                        ??_pad 003A                                  ?_EUSART_Write 0070  
               __size_of_OSCILLATOR_Initialize 0009                  __end_of_OSCILLATOR_Initialize 0F42  
                              __end_of___aodiv 02BB                                          ?_main 0070  
                                        ?_dtoa 0040                                __end_of___aomod 049B  
                                        i1l240 0799                                          i1l261 0FFF  
                                        i1l280 0FBF                                          i1l258 0FFD  
                                        i1l283 07FF                                          i1l267 04D7  
                                        i1l276 0530                                          i1l286 07FE  
                                        i1l289 0EF6                                          _OSCEN 0891  
                                 vfpfcnvrt@fmt 005E                                          _TRISA 0011  
                                        _TRISB 0012                                          _TRISC 0013  
                                        _RXPPS 0ECB                                          _flags 00BE  
                                        _fputc 06C9                                          _fputs 07C5  
                                        pad@fp 003F                                          _width 00BA  
                                        _putch 0EFD                                          main@i 00DA  
                                        dtoa@d 0040                                          dtoa@i 005C  
                                        dtoa@n 0054                                          dtoa@p 004E  
                                        dtoa@s 0052                                          dtoa@w 0050  
                                        pclath 000A                                          status 0003  
                                        wtemp0 007E                                __end_of_strncmp 05E8  
                             __end_ofi1_strlen 0F8B                                __initialization 002D  
                                 __end_of_main 0681                                   __end_of_dtoa 01B6  
                               ??_EUSART_Write 0024                    ?_INTERRUPT_InterruptManager 0070  
               ??_EUSART_SetRxInterruptHandler 0026                                         ??_main 00D8  
                                       ??_dtoa 0048      __end_of_EUSART_DefaultFramingErrorHandler 0800  
   __size_of_EUSART_DefaultFramingErrorHandler 0001            ??_EUSART_DefaultFramingErrorHandler 0070  
           ?_EUSART_DefaultFramingErrorHandler 0070              _EUSART_DefaultFramingErrorHandler 07FF  
                   _EUSART_OverrunErrorHandler 00DE                                         ?_fputc 0027  
                                       ?_fputs 002F                                         _ANSELA 0F38  
                                       ?_putch 0070                                         _ANSELB 0F43  
                                       _ANSELC 0F4E                                         _RC1REG 0119  
                                       _RC0PPS 0F20                                         _RC1STA 011D  
                                       i1l1024 0F8A                                         i1l2001 076D  
                                       i1l1050 05E7                                         i1l2011 0790  
                                       i1l2003 076D                                         i1l1043 0F5A  
                                       i1l2013 0791                                         i1l2005 0773  
                                       i1l1045 0F71                                         i1l1037 0636  
                                       i1l2101 04CD                                         i1l2015 0793  
                                       i1l2007 0786                                         i1l2023 05EA  
                                       i1l2111 04EC                                         i1l2103 04D4  
                                       i1l2017 0796                                         i1l2009 078A  
                                       i1l2033 0612                                         i1l2025 05F0  
                                       i1l2121 052B                                         i1l2113 04F9  
                                       i1l2105 04DF                                         i1l2043 07FB  
                                       i1l2019 0798                                         i1l2027 05FD  
                                       i1l2035 0627                                         i1l2115 0505  
                                       i1l2107 04E5                                         i1l2131 001E  
                                       i1l2123 0006                                         i1l2045 0EF3  
                                       i1l2037 062C                                         i1l2029 060F  
                                       i1l2117 0512                                         i1l2109 04EB  
                                       i1l2133 0022                                         i1l2125 000A  
                                       i1l2039 0635                                         i1l2119 051F  
                                       i1l2127 000F                                         i1l2081 0FF6  
                                       i1l2073 0FDC                                         i1l2129 0013  
                                       _ODCONA 0F3A                                         _ODCONB 0F45  
                                       i1l2091 04AC                                         i1l2083 0FF7  
                                       i1l2075 0FE3                                         _ODCONC 0F50  
                                       i1l2093 04B2                                         i1l2085 049B  
                                       i1l2077 0FEB                                         i1l2095 04B7  
                                       i1l2087 04A1                                         i1l2079 0FF0  
                                       i1l2097 04BD                                         i1l2089 04A6  
                                       i1l2099 04C3                                         i1l1901 05C9  
                                       i1l1831 0FB3                                         i1l1903 05D9  
                                       i1l1833 0FB9                                         i1l1913 0F66  
                                       i1l1921 0F77                                         i1l1835 0FBA  
                                       i1l1827 0FA5                                         i1l1915 0F70  
                                       i1l1907 0F5A                                         i1l1923 0F7B  
                                       i1l1829 0FAF                                         i1l1909 0F64  
                                       i1l1925 0F84                                         i1l1919 0F72  
                                       i1l1881 058E                                         i1l1891 05A9  
                                       i1l1883 0596                                         i1l1893 05AD  
                                       i1l1885 05A2                                         i1l1895 05B1  
                                       i1l1897 05BA                                         i1l1889 05A5  
                                       i1l1899 05C3                                         u142_20 0FB9  
                                       u150_20 05C9                                         u142_21 0FB8  
                                       u150_21 05C8                                         u151_20 05D9  
                                       u151_21 05D8                                         u152_20 0F64  
                                       u160_20 0635                                         u152_21 0F63  
                                       u160_21 0634                                         _INLVLA 0F3C  
                                       _INLVLB 0F47                                         _INLVLC 0F52  
                                       _INLVLE 0F68                                         u153_20 0F70  
                                       u153_21 0F6F                                         u154_20 0F84  
                                       u162_20 0FE3                                         u154_21 0F83  
                                       u162_21 0FE2                                         u170_24 0505  
                                       u155_20 0773                                         u147_20 05A2  
                                       u171_20 0512                                         u163_20 0FF6  
                                       u155_21 0772                                         u147_21 05A1  
                                       u171_21 0511                                         u163_21 0FF5  
                                       u156_20 0790                                         u148_20 05BA  
                                       u172_20 051C                                         u164_20 04A6  
                                       u156_21 078F                                         u148_21 05B9  
                                       u172_21 0519                                         u164_21 04A5  
                                       u149_20 05C3                                         u157_20 05F0  
                                       u165_20 04B7                                         u149_21 05C2  
                                       u157_21 05EF                                         u165_21 04B6  
                                       u173_24 051E                                         u158_20 060F  
                                       u166_20 04CD                                         u174_20 000A  
                                       u158_21 060E                                         u166_21 04CC  
                                       u174_21 0009                                         u159_20 062C  
                                       u167_20 04E5                                         u175_20 000F  
                                       u159_21 062B                                         u167_21 04E4  
                                       u175_21 000E                                         u168_20 04F9  
                                       u176_20 0013                                         u168_21 04F8  
                                       u176_21 0012                                         u169_20 0503  
                                       u177_20 001E                                         u169_21 0500  
                                       u177_21 001D                                         u178_20 0022  
                                       u178_21 0021                                         u200lld 02A9  
                                       _OSCFRQ 0893                                         u210lld 0489  
                                       u202lld 03D9                                         u204lld 0406  
                                       u219lld 008F                                         _TX1REG 011A  
                                       u191lld 01E1                                         u193lld 020E  
                                       _TX1STA 011E                                   vfprintf@cfmt 00D0  
                                    ??___aodiv 0034                                      ??___aomod 0034  
                          _EUSART_Transmit_ISR 0FDC                                         _printf 0F42  
                                       pad@buf 0037                                         dtoa@fp 004D  
                                       _strchr 0F59                                         _strlen 0F8B  
                                       _strstr 05E8                                         fputc@c 0027  
                               _PMD_Initialize 0F04                                         fputs@c 0033  
                                       fputs@i 0034                                         fputs@s 0036  
                             __end_of_vfprintf 0740                                      ??_strncmp 0074  
                         ?_EUSART_Transmit_ISR 0070                           __size_of_EUSART_Read 002D  
                            _SYSTEM_Initialize 07EE                        __end_of__initialization 0042  
                           ?_SYSTEM_Initialize 0070           __end_of_EUSART_SetTxInterruptHandler 0F39  
        __size_of_EUSART_SetTxInterruptHandler 0009                   _EUSART_SetTxInterruptHandler 0F30  
                               __pcstackCOMMON 0070                            ??_SYSTEM_Initialize 0027  
                                __end_of_fputc 070A                                  __end_of_fputs 07EE  
                                __end_of_putch 0F04                         __end_of_PMD_Initialize 0F0C  
                         _eusartRxStatusBuffer 00A0                ??_EUSART_SetOverrunErrorHandler 0026  
                                    ?i1_strlen 0070                                        ??_fputc 002A  
                    __end_of_SYSTEM_Initialize 07FB                                        ??_fputs 0030  
                        ??_EUSART_Transmit_ISR 0070                                        ??_putch 0026  
                                   __pbssBANK0 0068                                     __pbssBANK1 00A0  
                                   __pbssBANK2 0120                           __end_of_EUSART_Write 076D  
                  __size_of_EUSART_Receive_ISR 0096                                     __pmaintext 0637  
                ?_EUSART_SetTxInterruptHandler 0024               _EUSART_TxDefaultInterruptHandler 00E4  
                                   __pintentry 0004                   ??_EUSART_DefaultErrorHandler 0071  
                                      ?_printf 00D2                                ?_PMD_Initialize 0070  
                                      ?_strchr 0070                                        ?_strlen 0024  
                                      ?_strstr 0079                                  _eusartRxCount 00C3  
                                      _SP1BRGH 011C                                        _SP1BRGL 011B  
                                      _OSCCON1 088D                                        _OSCCON3 088F  
                           __size_of_vfpfcnvrt 00F3                  __size_of_EUSART_RxDataHandler 001B  
                                      _OSCTUNE 0892                                     ??i1_strlen 0072  
                                      _SLRCONA 0F3B                                        _SLRCONB 0F46  
                                      _SLRCONC 0F51                       ??_EUSART_SetErrorHandler 0026  
          __size_of_EUSART_DefaultErrorHandler 0004                                        ___aodiv 01B6  
                                      ___aomod 03AE                                      ?_vfprintf 0065  
                                      __ptext1 0F42                                        __ptext2 070A  
                                      __ptext3 02BB                                        __ptext4 0046  
                                      __ptext5 0531                                        __ptext6 0F8B  
                                      __ptext7 07C5                                        __ptext8 06C9  
                                      __ptext9 0EFD                                __size_of_printf 0017  
                              __size_of_strchr 0019                                __size_of_strlen 001A  
                              __size_of_strstr 004F                          _OSCILLATOR_Initialize 0F39  
                                 __size_of_abs 001C                                   __size_of_pad 005C  
                     ??_PIN_MANAGER_Initialize 0024                     __size_of_SYSTEM_Initialize 000D  
                                      clrloop0 0EF8                                        _strncmp 058D  
                         end_of_initialization 0042          __end_of_EUSART_SetOverrunErrorHandler 0F27  
       __size_of_EUSART_SetOverrunErrorHandler 0009                  _EUSART_SetOverrunErrorHandler 0F1E  
                                      fputc@fp 0029                                        fputs@fp 002F  
                            _EUSART_Initialize 0681                             ?_EUSART_Initialize 0070  
                            __end_of_vfpfcnvrt 03AE                                     ??_vfprintf 00CD  
                                      strchr@c 0070                                        strchr@s 0072  
                                      strlen@a 0027                                        strlen@s 0024  
                          ??_EUSART_Initialize 0026                 ??_EUSART_SetTxInterruptHandler 0026  
                                      strstr@h 0022                                        strstr@n 0079  
                        __size_of_EUSART_Write 002D                __size_of_EUSART_SetErrorHandler 0009  
                    __end_of_EUSART_Initialize 06C9             __end_of_EUSART_DefaultErrorHandler 0EF7  
                   _EUSART_DefaultErrorHandler 0EF3                                    vfpfcnvrt@ap 005F  
                                  vfpfcnvrt@fp 00CC                                    vfpfcnvrt@ll 00C4  
                                 _EUSART_Write 0740                         ?_OSCILLATOR_Initialize 0070  
                               __end_of_printf 0F59                                 __end_of_strchr 0F72  
                               __end_of_strlen 0FA5                                 __end_of_strstr 0637  
                          start_initialization 002D                __size_of_PIN_MANAGER_Initialize 002B  
                                  __end_of_abs 0FDC                                    __end_of_pad 058D  
                                ??_EUSART_Read 0070   EUSART_SetRxInterruptHandler@interruptHandler 0024  
 EUSART_SetTxInterruptHandler@interruptHandler 0024                                    putch@txData 0026  
                                    i1strlen@a 0073                                      i1strlen@s 0070  
                            __size_ofi1_strlen 0019                 ?_EUSART_SetOverrunErrorHandler 0024  
                                  vfprintf@fmt 0065                     _EUSART_FramingErrorHandler 00E0  
                             ??_PMD_Initialize 0024                         _EUSART_SetErrorHandler 0F0C  
                                     ??_printf 00D6                                       ??_strchr 0072  
                                     ??_strlen 0026                                       ??_strstr 007B  
                                  _caracter_rx 00C1                    __end_of_EUSART_Transmit_ISR 1000  
                                    ___latbits 0002                                  __pcstackBANK0 0020  
                                __pcstackBANK1 00C4                               ___aodiv@dividend 002C  
                   __end_of_EUSART_Receive_ISR 0531                     __size_of_EUSART_Initialize 0048  
             _EUSART_RxDefaultInterruptHandler 00E2                            __end_of_EUSART_Read 079A  
                                    __pnvBANK1 00DC                   __end_of_EUSART_RxDataHandler 0FC0  
                       _PIN_MANAGER_Initialize 079A                           EUSART_Read@readValue 0071  
                                     ?___aodiv 0024                                       ?___aomod 0024  
                             ___aodiv@quotient 0037                                   _eusartRxHead 0069  
                                 _eusartTxHead 006B                                   _eusartRxTail 0068  
                                 _eusartTxTail 006A                                      _buffer_rx 0140  
                 ??_INTERRUPT_InterruptManager 007E                              __size_of_vfprintf 0036  
                      _eusartTxBufferRemaining 00E6                                       _BAUD1CON 011F  
                               __size_of_fputc 0041                                 __size_of_fputs 0029  
                                     ?_strncmp 0070                                 __size_of_putch 0007  
                               _eusartRxBuffer 00A8                                 _eusartTxBuffer 00B0  
                                     _LATAbits 0016         EUSART_SetErrorHandler@interruptHandler 0024  
                                    clear_ram0 0EF7                                       _PIE3bits 0719  
                            _eusartRxLastError 00C2            __size_of_INTERRUPT_InterruptManager 0027  
              ??_EUSART_SetFramingErrorHandler 0026                                       _PIR3bits 070F  
    __end_of_EUSART_DefaultOverrunErrorHandler 07FF     __size_of_EUSART_DefaultOverrunErrorHandler 0004  
          ??_EUSART_DefaultOverrunErrorHandler 0070             ?_EUSART_DefaultOverrunErrorHandler 0070  
            _EUSART_DefaultOverrunErrorHandler 07FB                                      _vfpfcnvrt 02BB  
                                  _contador_rx 00C0                                       i1_strlen 0F72  
                                  _EUSART_Read 076D                                     vfprintf@ap 0067  
                                   vfprintf@fp 00CF                        ??_OSCILLATOR_Initialize 0024  
                          _EUSART_ErrorHandler 00DC                               __size_of___aodiv 0105  
                             __size_of___aomod 00ED                    ?_EUSART_DefaultErrorHandler 0070  
                                   ?_vfpfcnvrt 005E                                ___aodiv@divisor 0024  
                              ___aodiv@counter 0035                                       _dtoa$944 004B  
                         _EUSART_RxDataHandler 0FA5                                       __ptext10 0740  
                                     __ptext11 0FC0                                       __ptext20 0F27  
                                     __ptext12 03AE                                       __ptext21 0F1E  
                                     __ptext13 01B6                                       __ptext30 0F59  
                                     __ptext22 0F15                                       __ptext14 07EE  
                                     __ptext31 076D                                       __ptext23 0F0C  
                                     __ptext15 0F04                                       __ptext32 07FB  
                                     __ptext16 079A                                       __ptext33 07FF  
                                     __ptext25 0FDC                                       __ptext17 0F39  
                                     __ptext34 0EF3                                       __ptext26 049B  
                                     __ptext18 0681                                       __ptext35 0FA5  
                                     __ptext27 05E8                                       __ptext19 0F30  
                                     __ptext28 0F72                                       __ptext29 058D  
                             __size_of_strncmp 005B                                  __size_of_main 004A  
                                __size_of_dtoa 0170                        ?_EUSART_SetErrorHandler 0024  
                                   _RC1STAbits 011D  EUSART_SetOverrunErrorHandler@interruptHandler 0024  
                                     int$flags 007E                                       _vfprintf 070A  
           __end_of_INTERRUPT_InterruptManager 002B                     _INTERRUPT_InterruptManager 0004  
                                    printf@fmt 00D2          __end_of_EUSART_SetFramingErrorHandler 0F1E  
       __size_of_EUSART_SetFramingErrorHandler 0009                  _EUSART_SetFramingErrorHandler 0F15  
                             ___aomod@dividend 002C                                     _INTCONbits 000B  
                        ?_EUSART_RxDataHandler 0070                                       intlevel1 0000  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 0F15  
                                    strncmp@_l 0075                                      strncmp@_r 0070  
         __end_of_EUSART_SetRxInterruptHandler 0F30          __size_of_EUSART_SetRxInterruptHandler 0009  
                 _EUSART_SetRxInterruptHandler 0F27                                       printf@ap 00D7  
                           _EUSART_Receive_ISR 049B  EUSART_SetFramingErrorHandler@interruptHandler 0024  
                              ___aomod@divisor 0024                                    ??_vfpfcnvrt 0060  
                              ___aomod@counter 0035                                  __pstringtext1 1000  
                                __pstringtext2 100E                                  __pstringtext3 1018  
                                __pstringtext4 1020                                  __pstringtext5 0000  
                          ?_EUSART_Receive_ISR 0070                                       strncmp@l 0078  
                                     strncmp@n 0072                                       strncmp@r 0076  
                                     strstr@nl 0020                                     _TX1STAbits 011E  
                           EUSART_Write@txData 0025                   __size_of_EUSART_Transmit_ISR 0024  
                                 ___aodiv@sign 0036                 __end_of_PIN_MANAGER_Initialize 07C5  
                         ??_EUSART_Receive_ISR 0023                                   ___aomod@sign 0036  
