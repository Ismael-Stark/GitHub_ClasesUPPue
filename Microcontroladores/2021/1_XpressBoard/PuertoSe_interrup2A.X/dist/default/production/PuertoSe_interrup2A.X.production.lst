

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Thu Feb 17 14:28:30 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16LF18855
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    20                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	intentry,global,class=CODE,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2,group=3
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2,group=3
    51                           	psect	text33,local,class=CODE,merge=1,delta=2,group=3
    52                           	psect	text34,local,class=CODE,merge=1,delta=2,group=3
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    59                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    60                           	dabs	1,0x7E,2
    61  0000                     
    62                           ; Version 2.35
    63                           ; Generated 06/12/2021 GMT
    64                           ; 
    65                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution. Publication is not required when
    79                           ;        this file is used in an embedded application.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC16LF18855 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97  0000                     	;# 
    98  0001                     	;# 
    99  0002                     	;# 
   100  0003                     	;# 
   101  0004                     	;# 
   102  0005                     	;# 
   103  0006                     	;# 
   104  0007                     	;# 
   105  0008                     	;# 
   106  0009                     	;# 
   107  000A                     	;# 
   108  000B                     	;# 
   109  000C                     	;# 
   110  000D                     	;# 
   111  000E                     	;# 
   112  0010                     	;# 
   113  0011                     	;# 
   114  0012                     	;# 
   115  0013                     	;# 
   116  0016                     	;# 
   117  0017                     	;# 
   118  0018                     	;# 
   119  001C                     	;# 
   120  001C                     	;# 
   121  001D                     	;# 
   122  001D                     	;# 
   123  001E                     	;# 
   124  001F                     	;# 
   125  008C                     	;# 
   126  008C                     	;# 
   127  008D                     	;# 
   128  008E                     	;# 
   129  008E                     	;# 
   130  008F                     	;# 
   131  0090                     	;# 
   132  0090                     	;# 
   133  0091                     	;# 
   134  0093                     	;# 
   135  0094                     	;# 
   136  0095                     	;# 
   137  0096                     	;# 
   138  0097                     	;# 
   139  0098                     	;# 
   140  0099                     	;# 
   141  009A                     	;# 
   142  009B                     	;# 
   143  009C                     	;# 
   144  009D                     	;# 
   145  009E                     	;# 
   146  010C                     	;# 
   147  010D                     	;# 
   148  010E                     	;# 
   149  010E                     	;# 
   150  010F                     	;# 
   151  0110                     	;# 
   152  0110                     	;# 
   153  0111                     	;# 
   154  0112                     	;# 
   155  0112                     	;# 
   156  0113                     	;# 
   157  0114                     	;# 
   158  0114                     	;# 
   159  0115                     	;# 
   160  0116                     	;# 
   161  0116                     	;# 
   162  0117                     	;# 
   163  0119                     	;# 
   164  0119                     	;# 
   165  0119                     	;# 
   166  011A                     	;# 
   167  011A                     	;# 
   168  011A                     	;# 
   169  011B                     	;# 
   170  011B                     	;# 
   171  011B                     	;# 
   172  011B                     	;# 
   173  011B                     	;# 
   174  011C                     	;# 
   175  011C                     	;# 
   176  011C                     	;# 
   177  011D                     	;# 
   178  011D                     	;# 
   179  011D                     	;# 
   180  011E                     	;# 
   181  011E                     	;# 
   182  011E                     	;# 
   183  011F                     	;# 
   184  011F                     	;# 
   185  011F                     	;# 
   186  011F                     	;# 
   187  011F                     	;# 
   188  018C                     	;# 
   189  018D                     	;# 
   190  018E                     	;# 
   191  018F                     	;# 
   192  0190                     	;# 
   193  0191                     	;# 
   194  0192                     	;# 
   195  0196                     	;# 
   196  0197                     	;# 
   197  0198                     	;# 
   198  0199                     	;# 
   199  019A                     	;# 
   200  019B                     	;# 
   201  019C                     	;# 
   202  020C                     	;# 
   203  020C                     	;# 
   204  020D                     	;# 
   205  020E                     	;# 
   206  020F                     	;# 
   207  020F                     	;# 
   208  0210                     	;# 
   209  0210                     	;# 
   210  0211                     	;# 
   211  0211                     	;# 
   212  0212                     	;# 
   213  0212                     	;# 
   214  0213                     	;# 
   215  0214                     	;# 
   216  0215                     	;# 
   217  0215                     	;# 
   218  0216                     	;# 
   219  0216                     	;# 
   220  0217                     	;# 
   221  0217                     	;# 
   222  0218                     	;# 
   223  0218                     	;# 
   224  0219                     	;# 
   225  021A                     	;# 
   226  021B                     	;# 
   227  021B                     	;# 
   228  021C                     	;# 
   229  021C                     	;# 
   230  021D                     	;# 
   231  021D                     	;# 
   232  021E                     	;# 
   233  021F                     	;# 
   234  028C                     	;# 
   235  028C                     	;# 
   236  028D                     	;# 
   237  028D                     	;# 
   238  028E                     	;# 
   239  028F                     	;# 
   240  0290                     	;# 
   241  0290                     	;# 
   242  0291                     	;# 
   243  0292                     	;# 
   244  0292                     	;# 
   245  0293                     	;# 
   246  0293                     	;# 
   247  0294                     	;# 
   248  0295                     	;# 
   249  0296                     	;# 
   250  0296                     	;# 
   251  0297                     	;# 
   252  0298                     	;# 
   253  0298                     	;# 
   254  0299                     	;# 
   255  0299                     	;# 
   256  029A                     	;# 
   257  029B                     	;# 
   258  029C                     	;# 
   259  029C                     	;# 
   260  029D                     	;# 
   261  030C                     	;# 
   262  030C                     	;# 
   263  030D                     	;# 
   264  030E                     	;# 
   265  030F                     	;# 
   266  0310                     	;# 
   267  0310                     	;# 
   268  0311                     	;# 
   269  0312                     	;# 
   270  0313                     	;# 
   271  0314                     	;# 
   272  0314                     	;# 
   273  0315                     	;# 
   274  0316                     	;# 
   275  0317                     	;# 
   276  0318                     	;# 
   277  0318                     	;# 
   278  0319                     	;# 
   279  031A                     	;# 
   280  031B                     	;# 
   281  031C                     	;# 
   282  031C                     	;# 
   283  031D                     	;# 
   284  031E                     	;# 
   285  031F                     	;# 
   286  038C                     	;# 
   287  038C                     	;# 
   288  038D                     	;# 
   289  038E                     	;# 
   290  0390                     	;# 
   291  0390                     	;# 
   292  0391                     	;# 
   293  0392                     	;# 
   294  040C                     	;# 
   295  040D                     	;# 
   296  040E                     	;# 
   297  040F                     	;# 
   298  0410                     	;# 
   299  0411                     	;# 
   300  0416                     	;# 
   301  0416                     	;# 
   302  0417                     	;# 
   303  0418                     	;# 
   304  0418                     	;# 
   305  0419                     	;# 
   306  041A                     	;# 
   307  041A                     	;# 
   308  041B                     	;# 
   309  041C                     	;# 
   310  041C                     	;# 
   311  041D                     	;# 
   312  041E                     	;# 
   313  041F                     	;# 
   314  048C                     	;# 
   315  048C                     	;# 
   316  048D                     	;# 
   317  048E                     	;# 
   318  048F                     	;# 
   319  048F                     	;# 
   320  0490                     	;# 
   321  0491                     	;# 
   322  0492                     	;# 
   323  0492                     	;# 
   324  0493                     	;# 
   325  0494                     	;# 
   326  0495                     	;# 
   327  0495                     	;# 
   328  0496                     	;# 
   329  0497                     	;# 
   330  0498                     	;# 
   331  0499                     	;# 
   332  049A                     	;# 
   333  049B                     	;# 
   334  049C                     	;# 
   335  049D                     	;# 
   336  050C                     	;# 
   337  050C                     	;# 
   338  050D                     	;# 
   339  050E                     	;# 
   340  050F                     	;# 
   341  050F                     	;# 
   342  0510                     	;# 
   343  0511                     	;# 
   344  0512                     	;# 
   345  0512                     	;# 
   346  0513                     	;# 
   347  0514                     	;# 
   348  0515                     	;# 
   349  0515                     	;# 
   350  0516                     	;# 
   351  0517                     	;# 
   352  0518                     	;# 
   353  0519                     	;# 
   354  051A                     	;# 
   355  051B                     	;# 
   356  051C                     	;# 
   357  051D                     	;# 
   358  058C                     	;# 
   359  058C                     	;# 
   360  058D                     	;# 
   361  058E                     	;# 
   362  058F                     	;# 
   363  058F                     	;# 
   364  0590                     	;# 
   365  0591                     	;# 
   366  0592                     	;# 
   367  0593                     	;# 
   368  060C                     	;# 
   369  060D                     	;# 
   370  060E                     	;# 
   371  060F                     	;# 
   372  0610                     	;# 
   373  0611                     	;# 
   374  0612                     	;# 
   375  0613                     	;# 
   376  0614                     	;# 
   377  0616                     	;# 
   378  0617                     	;# 
   379  0618                     	;# 
   380  0619                     	;# 
   381  061A                     	;# 
   382  061B                     	;# 
   383  061C                     	;# 
   384  061D                     	;# 
   385  061E                     	;# 
   386  068C                     	;# 
   387  068D                     	;# 
   388  068E                     	;# 
   389  068F                     	;# 
   390  0690                     	;# 
   391  0691                     	;# 
   392  0692                     	;# 
   393  0693                     	;# 
   394  0694                     	;# 
   395  070C                     	;# 
   396  070D                     	;# 
   397  070E                     	;# 
   398  070F                     	;# 
   399  0710                     	;# 
   400  0711                     	;# 
   401  0712                     	;# 
   402  0713                     	;# 
   403  0714                     	;# 
   404  0716                     	;# 
   405  0717                     	;# 
   406  0718                     	;# 
   407  0719                     	;# 
   408  071A                     	;# 
   409  071B                     	;# 
   410  071C                     	;# 
   411  071D                     	;# 
   412  071E                     	;# 
   413  0796                     	;# 
   414  0797                     	;# 
   415  0798                     	;# 
   416  0799                     	;# 
   417  079A                     	;# 
   418  079B                     	;# 
   419  080C                     	;# 
   420  080D                     	;# 
   421  080E                     	;# 
   422  080F                     	;# 
   423  0810                     	;# 
   424  0811                     	;# 
   425  0813                     	;# 
   426  0814                     	;# 
   427  081A                     	;# 
   428  081B                     	;# 
   429  081C                     	;# 
   430  081D                     	;# 
   431  081E                     	;# 
   432  081F                     	;# 
   433  088C                     	;# 
   434  088D                     	;# 
   435  088E                     	;# 
   436  088F                     	;# 
   437  0890                     	;# 
   438  0891                     	;# 
   439  0892                     	;# 
   440  0893                     	;# 
   441  0895                     	;# 
   442  0896                     	;# 
   443  0897                     	;# 
   444  0898                     	;# 
   445  0899                     	;# 
   446  089A                     	;# 
   447  089B                     	;# 
   448  090C                     	;# 
   449  090E                     	;# 
   450  090F                     	;# 
   451  091F                     	;# 
   452  091F                     	;# 
   453  098F                     	;# 
   454  098F                     	;# 
   455  0990                     	;# 
   456  0991                     	;# 
   457  0992                     	;# 
   458  0993                     	;# 
   459  0994                     	;# 
   460  0995                     	;# 
   461  0996                     	;# 
   462  0997                     	;# 
   463  0E0F                     	;# 
   464  0E10                     	;# 
   465  0E11                     	;# 
   466  0E12                     	;# 
   467  0E13                     	;# 
   468  0E14                     	;# 
   469  0E15                     	;# 
   470  0E16                     	;# 
   471  0E17                     	;# 
   472  0E18                     	;# 
   473  0E19                     	;# 
   474  0E1A                     	;# 
   475  0E1B                     	;# 
   476  0E1C                     	;# 
   477  0E1D                     	;# 
   478  0E1E                     	;# 
   479  0E1F                     	;# 
   480  0E20                     	;# 
   481  0E21                     	;# 
   482  0E22                     	;# 
   483  0E23                     	;# 
   484  0E24                     	;# 
   485  0E25                     	;# 
   486  0E26                     	;# 
   487  0E27                     	;# 
   488  0E28                     	;# 
   489  0E29                     	;# 
   490  0E2A                     	;# 
   491  0E2B                     	;# 
   492  0E2C                     	;# 
   493  0E2D                     	;# 
   494  0E2E                     	;# 
   495  0E2F                     	;# 
   496  0E30                     	;# 
   497  0E31                     	;# 
   498  0E32                     	;# 
   499  0E33                     	;# 
   500  0E34                     	;# 
   501  0E35                     	;# 
   502  0E36                     	;# 
   503  0E37                     	;# 
   504  0E8F                     	;# 
   505  0E90                     	;# 
   506  0E91                     	;# 
   507  0E92                     	;# 
   508  0E93                     	;# 
   509  0E94                     	;# 
   510  0E95                     	;# 
   511  0E96                     	;# 
   512  0E97                     	;# 
   513  0E9C                     	;# 
   514  0E9D                     	;# 
   515  0E9E                     	;# 
   516  0EA1                     	;# 
   517  0EA2                     	;# 
   518  0EA3                     	;# 
   519  0EA4                     	;# 
   520  0EA5                     	;# 
   521  0EA9                     	;# 
   522  0EAA                     	;# 
   523  0EAB                     	;# 
   524  0EAC                     	;# 
   525  0EB1                     	;# 
   526  0EB2                     	;# 
   527  0EB3                     	;# 
   528  0EB8                     	;# 
   529  0EB9                     	;# 
   530  0EBA                     	;# 
   531  0EBB                     	;# 
   532  0EBC                     	;# 
   533  0EBD                     	;# 
   534  0EBE                     	;# 
   535  0EC3                     	;# 
   536  0EC5                     	;# 
   537  0EC6                     	;# 
   538  0EC7                     	;# 
   539  0EC8                     	;# 
   540  0EC9                     	;# 
   541  0ECA                     	;# 
   542  0ECB                     	;# 
   543  0ECC                     	;# 
   544  0F10                     	;# 
   545  0F11                     	;# 
   546  0F12                     	;# 
   547  0F13                     	;# 
   548  0F14                     	;# 
   549  0F15                     	;# 
   550  0F16                     	;# 
   551  0F17                     	;# 
   552  0F18                     	;# 
   553  0F19                     	;# 
   554  0F1A                     	;# 
   555  0F1B                     	;# 
   556  0F1C                     	;# 
   557  0F1D                     	;# 
   558  0F1E                     	;# 
   559  0F1F                     	;# 
   560  0F20                     	;# 
   561  0F21                     	;# 
   562  0F22                     	;# 
   563  0F23                     	;# 
   564  0F24                     	;# 
   565  0F25                     	;# 
   566  0F26                     	;# 
   567  0F27                     	;# 
   568  0F38                     	;# 
   569  0F39                     	;# 
   570  0F3A                     	;# 
   571  0F3B                     	;# 
   572  0F3C                     	;# 
   573  0F3D                     	;# 
   574  0F3E                     	;# 
   575  0F3F                     	;# 
   576  0F40                     	;# 
   577  0F41                     	;# 
   578  0F43                     	;# 
   579  0F44                     	;# 
   580  0F45                     	;# 
   581  0F46                     	;# 
   582  0F47                     	;# 
   583  0F48                     	;# 
   584  0F49                     	;# 
   585  0F4A                     	;# 
   586  0F4B                     	;# 
   587  0F4C                     	;# 
   588  0F4E                     	;# 
   589  0F4F                     	;# 
   590  0F50                     	;# 
   591  0F51                     	;# 
   592  0F52                     	;# 
   593  0F53                     	;# 
   594  0F54                     	;# 
   595  0F55                     	;# 
   596  0F56                     	;# 
   597  0F57                     	;# 
   598  0F65                     	;# 
   599  0F68                     	;# 
   600  0F69                     	;# 
   601  0F6A                     	;# 
   602  0F6B                     	;# 
   603  0FE4                     	;# 
   604  0FE5                     	;# 
   605  0FE6                     	;# 
   606  0FE7                     	;# 
   607  0FE8                     	;# 
   608  0FE9                     	;# 
   609  0FEA                     	;# 
   610  0FEB                     	;# 
   611  0FED                     	;# 
   612  0FEE                     	;# 
   613  0FEF                     	;# 
   614  0000                     	;# 
   615  0001                     	;# 
   616  0002                     	;# 
   617  0003                     	;# 
   618  0004                     	;# 
   619  0005                     	;# 
   620  0006                     	;# 
   621  0007                     	;# 
   622  0008                     	;# 
   623  0009                     	;# 
   624  000A                     	;# 
   625  000B                     	;# 
   626  000C                     	;# 
   627  000D                     	;# 
   628  000E                     	;# 
   629  0010                     	;# 
   630  0011                     	;# 
   631  0012                     	;# 
   632  0013                     	;# 
   633  0016                     	;# 
   634  0017                     	;# 
   635  0018                     	;# 
   636  001C                     	;# 
   637  001C                     	;# 
   638  001D                     	;# 
   639  001D                     	;# 
   640  001E                     	;# 
   641  001F                     	;# 
   642  008C                     	;# 
   643  008C                     	;# 
   644  008D                     	;# 
   645  008E                     	;# 
   646  008E                     	;# 
   647  008F                     	;# 
   648  0090                     	;# 
   649  0090                     	;# 
   650  0091                     	;# 
   651  0093                     	;# 
   652  0094                     	;# 
   653  0095                     	;# 
   654  0096                     	;# 
   655  0097                     	;# 
   656  0098                     	;# 
   657  0099                     	;# 
   658  009A                     	;# 
   659  009B                     	;# 
   660  009C                     	;# 
   661  009D                     	;# 
   662  009E                     	;# 
   663  010C                     	;# 
   664  010D                     	;# 
   665  010E                     	;# 
   666  010E                     	;# 
   667  010F                     	;# 
   668  0110                     	;# 
   669  0110                     	;# 
   670  0111                     	;# 
   671  0112                     	;# 
   672  0112                     	;# 
   673  0113                     	;# 
   674  0114                     	;# 
   675  0114                     	;# 
   676  0115                     	;# 
   677  0116                     	;# 
   678  0116                     	;# 
   679  0117                     	;# 
   680  0119                     	;# 
   681  0119                     	;# 
   682  0119                     	;# 
   683  011A                     	;# 
   684  011A                     	;# 
   685  011A                     	;# 
   686  011B                     	;# 
   687  011B                     	;# 
   688  011B                     	;# 
   689  011B                     	;# 
   690  011B                     	;# 
   691  011C                     	;# 
   692  011C                     	;# 
   693  011C                     	;# 
   694  011D                     	;# 
   695  011D                     	;# 
   696  011D                     	;# 
   697  011E                     	;# 
   698  011E                     	;# 
   699  011E                     	;# 
   700  011F                     	;# 
   701  011F                     	;# 
   702  011F                     	;# 
   703  011F                     	;# 
   704  011F                     	;# 
   705  018C                     	;# 
   706  018D                     	;# 
   707  018E                     	;# 
   708  018F                     	;# 
   709  0190                     	;# 
   710  0191                     	;# 
   711  0192                     	;# 
   712  0196                     	;# 
   713  0197                     	;# 
   714  0198                     	;# 
   715  0199                     	;# 
   716  019A                     	;# 
   717  019B                     	;# 
   718  019C                     	;# 
   719  020C                     	;# 
   720  020C                     	;# 
   721  020D                     	;# 
   722  020E                     	;# 
   723  020F                     	;# 
   724  020F                     	;# 
   725  0210                     	;# 
   726  0210                     	;# 
   727  0211                     	;# 
   728  0211                     	;# 
   729  0212                     	;# 
   730  0212                     	;# 
   731  0213                     	;# 
   732  0214                     	;# 
   733  0215                     	;# 
   734  0215                     	;# 
   735  0216                     	;# 
   736  0216                     	;# 
   737  0217                     	;# 
   738  0217                     	;# 
   739  0218                     	;# 
   740  0218                     	;# 
   741  0219                     	;# 
   742  021A                     	;# 
   743  021B                     	;# 
   744  021B                     	;# 
   745  021C                     	;# 
   746  021C                     	;# 
   747  021D                     	;# 
   748  021D                     	;# 
   749  021E                     	;# 
   750  021F                     	;# 
   751  028C                     	;# 
   752  028C                     	;# 
   753  028D                     	;# 
   754  028D                     	;# 
   755  028E                     	;# 
   756  028F                     	;# 
   757  0290                     	;# 
   758  0290                     	;# 
   759  0291                     	;# 
   760  0292                     	;# 
   761  0292                     	;# 
   762  0293                     	;# 
   763  0293                     	;# 
   764  0294                     	;# 
   765  0295                     	;# 
   766  0296                     	;# 
   767  0296                     	;# 
   768  0297                     	;# 
   769  0298                     	;# 
   770  0298                     	;# 
   771  0299                     	;# 
   772  0299                     	;# 
   773  029A                     	;# 
   774  029B                     	;# 
   775  029C                     	;# 
   776  029C                     	;# 
   777  029D                     	;# 
   778  030C                     	;# 
   779  030C                     	;# 
   780  030D                     	;# 
   781  030E                     	;# 
   782  030F                     	;# 
   783  0310                     	;# 
   784  0310                     	;# 
   785  0311                     	;# 
   786  0312                     	;# 
   787  0313                     	;# 
   788  0314                     	;# 
   789  0314                     	;# 
   790  0315                     	;# 
   791  0316                     	;# 
   792  0317                     	;# 
   793  0318                     	;# 
   794  0318                     	;# 
   795  0319                     	;# 
   796  031A                     	;# 
   797  031B                     	;# 
   798  031C                     	;# 
   799  031C                     	;# 
   800  031D                     	;# 
   801  031E                     	;# 
   802  031F                     	;# 
   803  038C                     	;# 
   804  038C                     	;# 
   805  038D                     	;# 
   806  038E                     	;# 
   807  0390                     	;# 
   808  0390                     	;# 
   809  0391                     	;# 
   810  0392                     	;# 
   811  040C                     	;# 
   812  040D                     	;# 
   813  040E                     	;# 
   814  040F                     	;# 
   815  0410                     	;# 
   816  0411                     	;# 
   817  0416                     	;# 
   818  0416                     	;# 
   819  0417                     	;# 
   820  0418                     	;# 
   821  0418                     	;# 
   822  0419                     	;# 
   823  041A                     	;# 
   824  041A                     	;# 
   825  041B                     	;# 
   826  041C                     	;# 
   827  041C                     	;# 
   828  041D                     	;# 
   829  041E                     	;# 
   830  041F                     	;# 
   831  048C                     	;# 
   832  048C                     	;# 
   833  048D                     	;# 
   834  048E                     	;# 
   835  048F                     	;# 
   836  048F                     	;# 
   837  0490                     	;# 
   838  0491                     	;# 
   839  0492                     	;# 
   840  0492                     	;# 
   841  0493                     	;# 
   842  0494                     	;# 
   843  0495                     	;# 
   844  0495                     	;# 
   845  0496                     	;# 
   846  0497                     	;# 
   847  0498                     	;# 
   848  0499                     	;# 
   849  049A                     	;# 
   850  049B                     	;# 
   851  049C                     	;# 
   852  049D                     	;# 
   853  050C                     	;# 
   854  050C                     	;# 
   855  050D                     	;# 
   856  050E                     	;# 
   857  050F                     	;# 
   858  050F                     	;# 
   859  0510                     	;# 
   860  0511                     	;# 
   861  0512                     	;# 
   862  0512                     	;# 
   863  0513                     	;# 
   864  0514                     	;# 
   865  0515                     	;# 
   866  0515                     	;# 
   867  0516                     	;# 
   868  0517                     	;# 
   869  0518                     	;# 
   870  0519                     	;# 
   871  051A                     	;# 
   872  051B                     	;# 
   873  051C                     	;# 
   874  051D                     	;# 
   875  058C                     	;# 
   876  058C                     	;# 
   877  058D                     	;# 
   878  058E                     	;# 
   879  058F                     	;# 
   880  058F                     	;# 
   881  0590                     	;# 
   882  0591                     	;# 
   883  0592                     	;# 
   884  0593                     	;# 
   885  060C                     	;# 
   886  060D                     	;# 
   887  060E                     	;# 
   888  060F                     	;# 
   889  0610                     	;# 
   890  0611                     	;# 
   891  0612                     	;# 
   892  0613                     	;# 
   893  0614                     	;# 
   894  0616                     	;# 
   895  0617                     	;# 
   896  0618                     	;# 
   897  0619                     	;# 
   898  061A                     	;# 
   899  061B                     	;# 
   900  061C                     	;# 
   901  061D                     	;# 
   902  061E                     	;# 
   903  068C                     	;# 
   904  068D                     	;# 
   905  068E                     	;# 
   906  068F                     	;# 
   907  0690                     	;# 
   908  0691                     	;# 
   909  0692                     	;# 
   910  0693                     	;# 
   911  0694                     	;# 
   912  070C                     	;# 
   913  070D                     	;# 
   914  070E                     	;# 
   915  070F                     	;# 
   916  0710                     	;# 
   917  0711                     	;# 
   918  0712                     	;# 
   919  0713                     	;# 
   920  0714                     	;# 
   921  0716                     	;# 
   922  0717                     	;# 
   923  0718                     	;# 
   924  0719                     	;# 
   925  071A                     	;# 
   926  071B                     	;# 
   927  071C                     	;# 
   928  071D                     	;# 
   929  071E                     	;# 
   930  0796                     	;# 
   931  0797                     	;# 
   932  0798                     	;# 
   933  0799                     	;# 
   934  079A                     	;# 
   935  079B                     	;# 
   936  080C                     	;# 
   937  080D                     	;# 
   938  080E                     	;# 
   939  080F                     	;# 
   940  0810                     	;# 
   941  0811                     	;# 
   942  0813                     	;# 
   943  0814                     	;# 
   944  081A                     	;# 
   945  081B                     	;# 
   946  081C                     	;# 
   947  081D                     	;# 
   948  081E                     	;# 
   949  081F                     	;# 
   950  088C                     	;# 
   951  088D                     	;# 
   952  088E                     	;# 
   953  088F                     	;# 
   954  0890                     	;# 
   955  0891                     	;# 
   956  0892                     	;# 
   957  0893                     	;# 
   958  0895                     	;# 
   959  0896                     	;# 
   960  0897                     	;# 
   961  0898                     	;# 
   962  0899                     	;# 
   963  089A                     	;# 
   964  089B                     	;# 
   965  090C                     	;# 
   966  090E                     	;# 
   967  090F                     	;# 
   968  091F                     	;# 
   969  091F                     	;# 
   970  098F                     	;# 
   971  098F                     	;# 
   972  0990                     	;# 
   973  0991                     	;# 
   974  0992                     	;# 
   975  0993                     	;# 
   976  0994                     	;# 
   977  0995                     	;# 
   978  0996                     	;# 
   979  0997                     	;# 
   980  0E0F                     	;# 
   981  0E10                     	;# 
   982  0E11                     	;# 
   983  0E12                     	;# 
   984  0E13                     	;# 
   985  0E14                     	;# 
   986  0E15                     	;# 
   987  0E16                     	;# 
   988  0E17                     	;# 
   989  0E18                     	;# 
   990  0E19                     	;# 
   991  0E1A                     	;# 
   992  0E1B                     	;# 
   993  0E1C                     	;# 
   994  0E1D                     	;# 
   995  0E1E                     	;# 
   996  0E1F                     	;# 
   997  0E20                     	;# 
   998  0E21                     	;# 
   999  0E22                     	;# 
  1000  0E23                     	;# 
  1001  0E24                     	;# 
  1002  0E25                     	;# 
  1003  0E26                     	;# 
  1004  0E27                     	;# 
  1005  0E28                     	;# 
  1006  0E29                     	;# 
  1007  0E2A                     	;# 
  1008  0E2B                     	;# 
  1009  0E2C                     	;# 
  1010  0E2D                     	;# 
  1011  0E2E                     	;# 
  1012  0E2F                     	;# 
  1013  0E30                     	;# 
  1014  0E31                     	;# 
  1015  0E32                     	;# 
  1016  0E33                     	;# 
  1017  0E34                     	;# 
  1018  0E35                     	;# 
  1019  0E36                     	;# 
  1020  0E37                     	;# 
  1021  0E8F                     	;# 
  1022  0E90                     	;# 
  1023  0E91                     	;# 
  1024  0E92                     	;# 
  1025  0E93                     	;# 
  1026  0E94                     	;# 
  1027  0E95                     	;# 
  1028  0E96                     	;# 
  1029  0E97                     	;# 
  1030  0E9C                     	;# 
  1031  0E9D                     	;# 
  1032  0E9E                     	;# 
  1033  0EA1                     	;# 
  1034  0EA2                     	;# 
  1035  0EA3                     	;# 
  1036  0EA4                     	;# 
  1037  0EA5                     	;# 
  1038  0EA9                     	;# 
  1039  0EAA                     	;# 
  1040  0EAB                     	;# 
  1041  0EAC                     	;# 
  1042  0EB1                     	;# 
  1043  0EB2                     	;# 
  1044  0EB3                     	;# 
  1045  0EB8                     	;# 
  1046  0EB9                     	;# 
  1047  0EBA                     	;# 
  1048  0EBB                     	;# 
  1049  0EBC                     	;# 
  1050  0EBD                     	;# 
  1051  0EBE                     	;# 
  1052  0EC3                     	;# 
  1053  0EC5                     	;# 
  1054  0EC6                     	;# 
  1055  0EC7                     	;# 
  1056  0EC8                     	;# 
  1057  0EC9                     	;# 
  1058  0ECA                     	;# 
  1059  0ECB                     	;# 
  1060  0ECC                     	;# 
  1061  0F10                     	;# 
  1062  0F11                     	;# 
  1063  0F12                     	;# 
  1064  0F13                     	;# 
  1065  0F14                     	;# 
  1066  0F15                     	;# 
  1067  0F16                     	;# 
  1068  0F17                     	;# 
  1069  0F18                     	;# 
  1070  0F19                     	;# 
  1071  0F1A                     	;# 
  1072  0F1B                     	;# 
  1073  0F1C                     	;# 
  1074  0F1D                     	;# 
  1075  0F1E                     	;# 
  1076  0F1F                     	;# 
  1077  0F20                     	;# 
  1078  0F21                     	;# 
  1079  0F22                     	;# 
  1080  0F23                     	;# 
  1081  0F24                     	;# 
  1082  0F25                     	;# 
  1083  0F26                     	;# 
  1084  0F27                     	;# 
  1085  0F38                     	;# 
  1086  0F39                     	;# 
  1087  0F3A                     	;# 
  1088  0F3B                     	;# 
  1089  0F3C                     	;# 
  1090  0F3D                     	;# 
  1091  0F3E                     	;# 
  1092  0F3F                     	;# 
  1093  0F40                     	;# 
  1094  0F41                     	;# 
  1095  0F43                     	;# 
  1096  0F44                     	;# 
  1097  0F45                     	;# 
  1098  0F46                     	;# 
  1099  0F47                     	;# 
  1100  0F48                     	;# 
  1101  0F49                     	;# 
  1102  0F4A                     	;# 
  1103  0F4B                     	;# 
  1104  0F4C                     	;# 
  1105  0F4E                     	;# 
  1106  0F4F                     	;# 
  1107  0F50                     	;# 
  1108  0F51                     	;# 
  1109  0F52                     	;# 
  1110  0F53                     	;# 
  1111  0F54                     	;# 
  1112  0F55                     	;# 
  1113  0F56                     	;# 
  1114  0F57                     	;# 
  1115  0F65                     	;# 
  1116  0F68                     	;# 
  1117  0F69                     	;# 
  1118  0F6A                     	;# 
  1119  0F6B                     	;# 
  1120  0FE4                     	;# 
  1121  0FE5                     	;# 
  1122  0FE6                     	;# 
  1123  0FE7                     	;# 
  1124  0FE8                     	;# 
  1125  0FE9                     	;# 
  1126  0FEA                     	;# 
  1127  0FEB                     	;# 
  1128  0FED                     	;# 
  1129  0FEE                     	;# 
  1130  0FEF                     	;# 
  1131  0000                     	;# 
  1132  0001                     	;# 
  1133  0002                     	;# 
  1134  0003                     	;# 
  1135  0004                     	;# 
  1136  0005                     	;# 
  1137  0006                     	;# 
  1138  0007                     	;# 
  1139  0008                     	;# 
  1140  0009                     	;# 
  1141  000A                     	;# 
  1142  000B                     	;# 
  1143  000C                     	;# 
  1144  000D                     	;# 
  1145  000E                     	;# 
  1146  0010                     	;# 
  1147  0011                     	;# 
  1148  0012                     	;# 
  1149  0013                     	;# 
  1150  0016                     	;# 
  1151  0017                     	;# 
  1152  0018                     	;# 
  1153  001C                     	;# 
  1154  001C                     	;# 
  1155  001D                     	;# 
  1156  001D                     	;# 
  1157  001E                     	;# 
  1158  001F                     	;# 
  1159  008C                     	;# 
  1160  008C                     	;# 
  1161  008D                     	;# 
  1162  008E                     	;# 
  1163  008E                     	;# 
  1164  008F                     	;# 
  1165  0090                     	;# 
  1166  0090                     	;# 
  1167  0091                     	;# 
  1168  0093                     	;# 
  1169  0094                     	;# 
  1170  0095                     	;# 
  1171  0096                     	;# 
  1172  0097                     	;# 
  1173  0098                     	;# 
  1174  0099                     	;# 
  1175  009A                     	;# 
  1176  009B                     	;# 
  1177  009C                     	;# 
  1178  009D                     	;# 
  1179  009E                     	;# 
  1180  010C                     	;# 
  1181  010D                     	;# 
  1182  010E                     	;# 
  1183  010E                     	;# 
  1184  010F                     	;# 
  1185  0110                     	;# 
  1186  0110                     	;# 
  1187  0111                     	;# 
  1188  0112                     	;# 
  1189  0112                     	;# 
  1190  0113                     	;# 
  1191  0114                     	;# 
  1192  0114                     	;# 
  1193  0115                     	;# 
  1194  0116                     	;# 
  1195  0116                     	;# 
  1196  0117                     	;# 
  1197  0119                     	;# 
  1198  0119                     	;# 
  1199  0119                     	;# 
  1200  011A                     	;# 
  1201  011A                     	;# 
  1202  011A                     	;# 
  1203  011B                     	;# 
  1204  011B                     	;# 
  1205  011B                     	;# 
  1206  011B                     	;# 
  1207  011B                     	;# 
  1208  011C                     	;# 
  1209  011C                     	;# 
  1210  011C                     	;# 
  1211  011D                     	;# 
  1212  011D                     	;# 
  1213  011D                     	;# 
  1214  011E                     	;# 
  1215  011E                     	;# 
  1216  011E                     	;# 
  1217  011F                     	;# 
  1218  011F                     	;# 
  1219  011F                     	;# 
  1220  011F                     	;# 
  1221  011F                     	;# 
  1222  018C                     	;# 
  1223  018D                     	;# 
  1224  018E                     	;# 
  1225  018F                     	;# 
  1226  0190                     	;# 
  1227  0191                     	;# 
  1228  0192                     	;# 
  1229  0196                     	;# 
  1230  0197                     	;# 
  1231  0198                     	;# 
  1232  0199                     	;# 
  1233  019A                     	;# 
  1234  019B                     	;# 
  1235  019C                     	;# 
  1236  020C                     	;# 
  1237  020C                     	;# 
  1238  020D                     	;# 
  1239  020E                     	;# 
  1240  020F                     	;# 
  1241  020F                     	;# 
  1242  0210                     	;# 
  1243  0210                     	;# 
  1244  0211                     	;# 
  1245  0211                     	;# 
  1246  0212                     	;# 
  1247  0212                     	;# 
  1248  0213                     	;# 
  1249  0214                     	;# 
  1250  0215                     	;# 
  1251  0215                     	;# 
  1252  0216                     	;# 
  1253  0216                     	;# 
  1254  0217                     	;# 
  1255  0217                     	;# 
  1256  0218                     	;# 
  1257  0218                     	;# 
  1258  0219                     	;# 
  1259  021A                     	;# 
  1260  021B                     	;# 
  1261  021B                     	;# 
  1262  021C                     	;# 
  1263  021C                     	;# 
  1264  021D                     	;# 
  1265  021D                     	;# 
  1266  021E                     	;# 
  1267  021F                     	;# 
  1268  028C                     	;# 
  1269  028C                     	;# 
  1270  028D                     	;# 
  1271  028D                     	;# 
  1272  028E                     	;# 
  1273  028F                     	;# 
  1274  0290                     	;# 
  1275  0290                     	;# 
  1276  0291                     	;# 
  1277  0292                     	;# 
  1278  0292                     	;# 
  1279  0293                     	;# 
  1280  0293                     	;# 
  1281  0294                     	;# 
  1282  0295                     	;# 
  1283  0296                     	;# 
  1284  0296                     	;# 
  1285  0297                     	;# 
  1286  0298                     	;# 
  1287  0298                     	;# 
  1288  0299                     	;# 
  1289  0299                     	;# 
  1290  029A                     	;# 
  1291  029B                     	;# 
  1292  029C                     	;# 
  1293  029C                     	;# 
  1294  029D                     	;# 
  1295  030C                     	;# 
  1296  030C                     	;# 
  1297  030D                     	;# 
  1298  030E                     	;# 
  1299  030F                     	;# 
  1300  0310                     	;# 
  1301  0310                     	;# 
  1302  0311                     	;# 
  1303  0312                     	;# 
  1304  0313                     	;# 
  1305  0314                     	;# 
  1306  0314                     	;# 
  1307  0315                     	;# 
  1308  0316                     	;# 
  1309  0317                     	;# 
  1310  0318                     	;# 
  1311  0318                     	;# 
  1312  0319                     	;# 
  1313  031A                     	;# 
  1314  031B                     	;# 
  1315  031C                     	;# 
  1316  031C                     	;# 
  1317  031D                     	;# 
  1318  031E                     	;# 
  1319  031F                     	;# 
  1320  038C                     	;# 
  1321  038C                     	;# 
  1322  038D                     	;# 
  1323  038E                     	;# 
  1324  0390                     	;# 
  1325  0390                     	;# 
  1326  0391                     	;# 
  1327  0392                     	;# 
  1328  040C                     	;# 
  1329  040D                     	;# 
  1330  040E                     	;# 
  1331  040F                     	;# 
  1332  0410                     	;# 
  1333  0411                     	;# 
  1334  0416                     	;# 
  1335  0416                     	;# 
  1336  0417                     	;# 
  1337  0418                     	;# 
  1338  0418                     	;# 
  1339  0419                     	;# 
  1340  041A                     	;# 
  1341  041A                     	;# 
  1342  041B                     	;# 
  1343  041C                     	;# 
  1344  041C                     	;# 
  1345  041D                     	;# 
  1346  041E                     	;# 
  1347  041F                     	;# 
  1348  048C                     	;# 
  1349  048C                     	;# 
  1350  048D                     	;# 
  1351  048E                     	;# 
  1352  048F                     	;# 
  1353  048F                     	;# 
  1354  0490                     	;# 
  1355  0491                     	;# 
  1356  0492                     	;# 
  1357  0492                     	;# 
  1358  0493                     	;# 
  1359  0494                     	;# 
  1360  0495                     	;# 
  1361  0495                     	;# 
  1362  0496                     	;# 
  1363  0497                     	;# 
  1364  0498                     	;# 
  1365  0499                     	;# 
  1366  049A                     	;# 
  1367  049B                     	;# 
  1368  049C                     	;# 
  1369  049D                     	;# 
  1370  050C                     	;# 
  1371  050C                     	;# 
  1372  050D                     	;# 
  1373  050E                     	;# 
  1374  050F                     	;# 
  1375  050F                     	;# 
  1376  0510                     	;# 
  1377  0511                     	;# 
  1378  0512                     	;# 
  1379  0512                     	;# 
  1380  0513                     	;# 
  1381  0514                     	;# 
  1382  0515                     	;# 
  1383  0515                     	;# 
  1384  0516                     	;# 
  1385  0517                     	;# 
  1386  0518                     	;# 
  1387  0519                     	;# 
  1388  051A                     	;# 
  1389  051B                     	;# 
  1390  051C                     	;# 
  1391  051D                     	;# 
  1392  058C                     	;# 
  1393  058C                     	;# 
  1394  058D                     	;# 
  1395  058E                     	;# 
  1396  058F                     	;# 
  1397  058F                     	;# 
  1398  0590                     	;# 
  1399  0591                     	;# 
  1400  0592                     	;# 
  1401  0593                     	;# 
  1402  060C                     	;# 
  1403  060D                     	;# 
  1404  060E                     	;# 
  1405  060F                     	;# 
  1406  0610                     	;# 
  1407  0611                     	;# 
  1408  0612                     	;# 
  1409  0613                     	;# 
  1410  0614                     	;# 
  1411  0616                     	;# 
  1412  0617                     	;# 
  1413  0618                     	;# 
  1414  0619                     	;# 
  1415  061A                     	;# 
  1416  061B                     	;# 
  1417  061C                     	;# 
  1418  061D                     	;# 
  1419  061E                     	;# 
  1420  068C                     	;# 
  1421  068D                     	;# 
  1422  068E                     	;# 
  1423  068F                     	;# 
  1424  0690                     	;# 
  1425  0691                     	;# 
  1426  0692                     	;# 
  1427  0693                     	;# 
  1428  0694                     	;# 
  1429  070C                     	;# 
  1430  070D                     	;# 
  1431  070E                     	;# 
  1432  070F                     	;# 
  1433  0710                     	;# 
  1434  0711                     	;# 
  1435  0712                     	;# 
  1436  0713                     	;# 
  1437  0714                     	;# 
  1438  0716                     	;# 
  1439  0717                     	;# 
  1440  0718                     	;# 
  1441  0719                     	;# 
  1442  071A                     	;# 
  1443  071B                     	;# 
  1444  071C                     	;# 
  1445  071D                     	;# 
  1446  071E                     	;# 
  1447  0796                     	;# 
  1448  0797                     	;# 
  1449  0798                     	;# 
  1450  0799                     	;# 
  1451  079A                     	;# 
  1452  079B                     	;# 
  1453  080C                     	;# 
  1454  080D                     	;# 
  1455  080E                     	;# 
  1456  080F                     	;# 
  1457  0810                     	;# 
  1458  0811                     	;# 
  1459  0813                     	;# 
  1460  0814                     	;# 
  1461  081A                     	;# 
  1462  081B                     	;# 
  1463  081C                     	;# 
  1464  081D                     	;# 
  1465  081E                     	;# 
  1466  081F                     	;# 
  1467  088C                     	;# 
  1468  088D                     	;# 
  1469  088E                     	;# 
  1470  088F                     	;# 
  1471  0890                     	;# 
  1472  0891                     	;# 
  1473  0892                     	;# 
  1474  0893                     	;# 
  1475  0895                     	;# 
  1476  0896                     	;# 
  1477  0897                     	;# 
  1478  0898                     	;# 
  1479  0899                     	;# 
  1480  089A                     	;# 
  1481  089B                     	;# 
  1482  090C                     	;# 
  1483  090E                     	;# 
  1484  090F                     	;# 
  1485  091F                     	;# 
  1486  091F                     	;# 
  1487  098F                     	;# 
  1488  098F                     	;# 
  1489  0990                     	;# 
  1490  0991                     	;# 
  1491  0992                     	;# 
  1492  0993                     	;# 
  1493  0994                     	;# 
  1494  0995                     	;# 
  1495  0996                     	;# 
  1496  0997                     	;# 
  1497  0E0F                     	;# 
  1498  0E10                     	;# 
  1499  0E11                     	;# 
  1500  0E12                     	;# 
  1501  0E13                     	;# 
  1502  0E14                     	;# 
  1503  0E15                     	;# 
  1504  0E16                     	;# 
  1505  0E17                     	;# 
  1506  0E18                     	;# 
  1507  0E19                     	;# 
  1508  0E1A                     	;# 
  1509  0E1B                     	;# 
  1510  0E1C                     	;# 
  1511  0E1D                     	;# 
  1512  0E1E                     	;# 
  1513  0E1F                     	;# 
  1514  0E20                     	;# 
  1515  0E21                     	;# 
  1516  0E22                     	;# 
  1517  0E23                     	;# 
  1518  0E24                     	;# 
  1519  0E25                     	;# 
  1520  0E26                     	;# 
  1521  0E27                     	;# 
  1522  0E28                     	;# 
  1523  0E29                     	;# 
  1524  0E2A                     	;# 
  1525  0E2B                     	;# 
  1526  0E2C                     	;# 
  1527  0E2D                     	;# 
  1528  0E2E                     	;# 
  1529  0E2F                     	;# 
  1530  0E30                     	;# 
  1531  0E31                     	;# 
  1532  0E32                     	;# 
  1533  0E33                     	;# 
  1534  0E34                     	;# 
  1535  0E35                     	;# 
  1536  0E36                     	;# 
  1537  0E37                     	;# 
  1538  0E8F                     	;# 
  1539  0E90                     	;# 
  1540  0E91                     	;# 
  1541  0E92                     	;# 
  1542  0E93                     	;# 
  1543  0E94                     	;# 
  1544  0E95                     	;# 
  1545  0E96                     	;# 
  1546  0E97                     	;# 
  1547  0E9C                     	;# 
  1548  0E9D                     	;# 
  1549  0E9E                     	;# 
  1550  0EA1                     	;# 
  1551  0EA2                     	;# 
  1552  0EA3                     	;# 
  1553  0EA4                     	;# 
  1554  0EA5                     	;# 
  1555  0EA9                     	;# 
  1556  0EAA                     	;# 
  1557  0EAB                     	;# 
  1558  0EAC                     	;# 
  1559  0EB1                     	;# 
  1560  0EB2                     	;# 
  1561  0EB3                     	;# 
  1562  0EB8                     	;# 
  1563  0EB9                     	;# 
  1564  0EBA                     	;# 
  1565  0EBB                     	;# 
  1566  0EBC                     	;# 
  1567  0EBD                     	;# 
  1568  0EBE                     	;# 
  1569  0EC3                     	;# 
  1570  0EC5                     	;# 
  1571  0EC6                     	;# 
  1572  0EC7                     	;# 
  1573  0EC8                     	;# 
  1574  0EC9                     	;# 
  1575  0ECA                     	;# 
  1576  0ECB                     	;# 
  1577  0ECC                     	;# 
  1578  0F10                     	;# 
  1579  0F11                     	;# 
  1580  0F12                     	;# 
  1581  0F13                     	;# 
  1582  0F14                     	;# 
  1583  0F15                     	;# 
  1584  0F16                     	;# 
  1585  0F17                     	;# 
  1586  0F18                     	;# 
  1587  0F19                     	;# 
  1588  0F1A                     	;# 
  1589  0F1B                     	;# 
  1590  0F1C                     	;# 
  1591  0F1D                     	;# 
  1592  0F1E                     	;# 
  1593  0F1F                     	;# 
  1594  0F20                     	;# 
  1595  0F21                     	;# 
  1596  0F22                     	;# 
  1597  0F23                     	;# 
  1598  0F24                     	;# 
  1599  0F25                     	;# 
  1600  0F26                     	;# 
  1601  0F27                     	;# 
  1602  0F38                     	;# 
  1603  0F39                     	;# 
  1604  0F3A                     	;# 
  1605  0F3B                     	;# 
  1606  0F3C                     	;# 
  1607  0F3D                     	;# 
  1608  0F3E                     	;# 
  1609  0F3F                     	;# 
  1610  0F40                     	;# 
  1611  0F41                     	;# 
  1612  0F43                     	;# 
  1613  0F44                     	;# 
  1614  0F45                     	;# 
  1615  0F46                     	;# 
  1616  0F47                     	;# 
  1617  0F48                     	;# 
  1618  0F49                     	;# 
  1619  0F4A                     	;# 
  1620  0F4B                     	;# 
  1621  0F4C                     	;# 
  1622  0F4E                     	;# 
  1623  0F4F                     	;# 
  1624  0F50                     	;# 
  1625  0F51                     	;# 
  1626  0F52                     	;# 
  1627  0F53                     	;# 
  1628  0F54                     	;# 
  1629  0F55                     	;# 
  1630  0F56                     	;# 
  1631  0F57                     	;# 
  1632  0F65                     	;# 
  1633  0F68                     	;# 
  1634  0F69                     	;# 
  1635  0F6A                     	;# 
  1636  0F6B                     	;# 
  1637  0FE4                     	;# 
  1638  0FE5                     	;# 
  1639  0FE6                     	;# 
  1640  0FE7                     	;# 
  1641  0FE8                     	;# 
  1642  0FE9                     	;# 
  1643  0FEA                     	;# 
  1644  0FEB                     	;# 
  1645  0FED                     	;# 
  1646  0FEE                     	;# 
  1647  0FEF                     	;# 
  1648  0000                     	;# 
  1649  0001                     	;# 
  1650  0002                     	;# 
  1651  0003                     	;# 
  1652  0004                     	;# 
  1653  0005                     	;# 
  1654  0006                     	;# 
  1655  0007                     	;# 
  1656  0008                     	;# 
  1657  0009                     	;# 
  1658  000A                     	;# 
  1659  000B                     	;# 
  1660  000C                     	;# 
  1661  000D                     	;# 
  1662  000E                     	;# 
  1663  0010                     	;# 
  1664  0011                     	;# 
  1665  0012                     	;# 
  1666  0013                     	;# 
  1667  0016                     	;# 
  1668  0017                     	;# 
  1669  0018                     	;# 
  1670  001C                     	;# 
  1671  001C                     	;# 
  1672  001D                     	;# 
  1673  001D                     	;# 
  1674  001E                     	;# 
  1675  001F                     	;# 
  1676  008C                     	;# 
  1677  008C                     	;# 
  1678  008D                     	;# 
  1679  008E                     	;# 
  1680  008E                     	;# 
  1681  008F                     	;# 
  1682  0090                     	;# 
  1683  0090                     	;# 
  1684  0091                     	;# 
  1685  0093                     	;# 
  1686  0094                     	;# 
  1687  0095                     	;# 
  1688  0096                     	;# 
  1689  0097                     	;# 
  1690  0098                     	;# 
  1691  0099                     	;# 
  1692  009A                     	;# 
  1693  009B                     	;# 
  1694  009C                     	;# 
  1695  009D                     	;# 
  1696  009E                     	;# 
  1697  010C                     	;# 
  1698  010D                     	;# 
  1699  010E                     	;# 
  1700  010E                     	;# 
  1701  010F                     	;# 
  1702  0110                     	;# 
  1703  0110                     	;# 
  1704  0111                     	;# 
  1705  0112                     	;# 
  1706  0112                     	;# 
  1707  0113                     	;# 
  1708  0114                     	;# 
  1709  0114                     	;# 
  1710  0115                     	;# 
  1711  0116                     	;# 
  1712  0116                     	;# 
  1713  0117                     	;# 
  1714  0119                     	;# 
  1715  0119                     	;# 
  1716  0119                     	;# 
  1717  011A                     	;# 
  1718  011A                     	;# 
  1719  011A                     	;# 
  1720  011B                     	;# 
  1721  011B                     	;# 
  1722  011B                     	;# 
  1723  011B                     	;# 
  1724  011B                     	;# 
  1725  011C                     	;# 
  1726  011C                     	;# 
  1727  011C                     	;# 
  1728  011D                     	;# 
  1729  011D                     	;# 
  1730  011D                     	;# 
  1731  011E                     	;# 
  1732  011E                     	;# 
  1733  011E                     	;# 
  1734  011F                     	;# 
  1735  011F                     	;# 
  1736  011F                     	;# 
  1737  011F                     	;# 
  1738  011F                     	;# 
  1739  018C                     	;# 
  1740  018D                     	;# 
  1741  018E                     	;# 
  1742  018F                     	;# 
  1743  0190                     	;# 
  1744  0191                     	;# 
  1745  0192                     	;# 
  1746  0196                     	;# 
  1747  0197                     	;# 
  1748  0198                     	;# 
  1749  0199                     	;# 
  1750  019A                     	;# 
  1751  019B                     	;# 
  1752  019C                     	;# 
  1753  020C                     	;# 
  1754  020C                     	;# 
  1755  020D                     	;# 
  1756  020E                     	;# 
  1757  020F                     	;# 
  1758  020F                     	;# 
  1759  0210                     	;# 
  1760  0210                     	;# 
  1761  0211                     	;# 
  1762  0211                     	;# 
  1763  0212                     	;# 
  1764  0212                     	;# 
  1765  0213                     	;# 
  1766  0214                     	;# 
  1767  0215                     	;# 
  1768  0215                     	;# 
  1769  0216                     	;# 
  1770  0216                     	;# 
  1771  0217                     	;# 
  1772  0217                     	;# 
  1773  0218                     	;# 
  1774  0218                     	;# 
  1775  0219                     	;# 
  1776  021A                     	;# 
  1777  021B                     	;# 
  1778  021B                     	;# 
  1779  021C                     	;# 
  1780  021C                     	;# 
  1781  021D                     	;# 
  1782  021D                     	;# 
  1783  021E                     	;# 
  1784  021F                     	;# 
  1785  028C                     	;# 
  1786  028C                     	;# 
  1787  028D                     	;# 
  1788  028D                     	;# 
  1789  028E                     	;# 
  1790  028F                     	;# 
  1791  0290                     	;# 
  1792  0290                     	;# 
  1793  0291                     	;# 
  1794  0292                     	;# 
  1795  0292                     	;# 
  1796  0293                     	;# 
  1797  0293                     	;# 
  1798  0294                     	;# 
  1799  0295                     	;# 
  1800  0296                     	;# 
  1801  0296                     	;# 
  1802  0297                     	;# 
  1803  0298                     	;# 
  1804  0298                     	;# 
  1805  0299                     	;# 
  1806  0299                     	;# 
  1807  029A                     	;# 
  1808  029B                     	;# 
  1809  029C                     	;# 
  1810  029C                     	;# 
  1811  029D                     	;# 
  1812  030C                     	;# 
  1813  030C                     	;# 
  1814  030D                     	;# 
  1815  030E                     	;# 
  1816  030F                     	;# 
  1817  0310                     	;# 
  1818  0310                     	;# 
  1819  0311                     	;# 
  1820  0312                     	;# 
  1821  0313                     	;# 
  1822  0314                     	;# 
  1823  0314                     	;# 
  1824  0315                     	;# 
  1825  0316                     	;# 
  1826  0317                     	;# 
  1827  0318                     	;# 
  1828  0318                     	;# 
  1829  0319                     	;# 
  1830  031A                     	;# 
  1831  031B                     	;# 
  1832  031C                     	;# 
  1833  031C                     	;# 
  1834  031D                     	;# 
  1835  031E                     	;# 
  1836  031F                     	;# 
  1837  038C                     	;# 
  1838  038C                     	;# 
  1839  038D                     	;# 
  1840  038E                     	;# 
  1841  0390                     	;# 
  1842  0390                     	;# 
  1843  0391                     	;# 
  1844  0392                     	;# 
  1845  040C                     	;# 
  1846  040D                     	;# 
  1847  040E                     	;# 
  1848  040F                     	;# 
  1849  0410                     	;# 
  1850  0411                     	;# 
  1851  0416                     	;# 
  1852  0416                     	;# 
  1853  0417                     	;# 
  1854  0418                     	;# 
  1855  0418                     	;# 
  1856  0419                     	;# 
  1857  041A                     	;# 
  1858  041A                     	;# 
  1859  041B                     	;# 
  1860  041C                     	;# 
  1861  041C                     	;# 
  1862  041D                     	;# 
  1863  041E                     	;# 
  1864  041F                     	;# 
  1865  048C                     	;# 
  1866  048C                     	;# 
  1867  048D                     	;# 
  1868  048E                     	;# 
  1869  048F                     	;# 
  1870  048F                     	;# 
  1871  0490                     	;# 
  1872  0491                     	;# 
  1873  0492                     	;# 
  1874  0492                     	;# 
  1875  0493                     	;# 
  1876  0494                     	;# 
  1877  0495                     	;# 
  1878  0495                     	;# 
  1879  0496                     	;# 
  1880  0497                     	;# 
  1881  0498                     	;# 
  1882  0499                     	;# 
  1883  049A                     	;# 
  1884  049B                     	;# 
  1885  049C                     	;# 
  1886  049D                     	;# 
  1887  050C                     	;# 
  1888  050C                     	;# 
  1889  050D                     	;# 
  1890  050E                     	;# 
  1891  050F                     	;# 
  1892  050F                     	;# 
  1893  0510                     	;# 
  1894  0511                     	;# 
  1895  0512                     	;# 
  1896  0512                     	;# 
  1897  0513                     	;# 
  1898  0514                     	;# 
  1899  0515                     	;# 
  1900  0515                     	;# 
  1901  0516                     	;# 
  1902  0517                     	;# 
  1903  0518                     	;# 
  1904  0519                     	;# 
  1905  051A                     	;# 
  1906  051B                     	;# 
  1907  051C                     	;# 
  1908  051D                     	;# 
  1909  058C                     	;# 
  1910  058C                     	;# 
  1911  058D                     	;# 
  1912  058E                     	;# 
  1913  058F                     	;# 
  1914  058F                     	;# 
  1915  0590                     	;# 
  1916  0591                     	;# 
  1917  0592                     	;# 
  1918  0593                     	;# 
  1919  060C                     	;# 
  1920  060D                     	;# 
  1921  060E                     	;# 
  1922  060F                     	;# 
  1923  0610                     	;# 
  1924  0611                     	;# 
  1925  0612                     	;# 
  1926  0613                     	;# 
  1927  0614                     	;# 
  1928  0616                     	;# 
  1929  0617                     	;# 
  1930  0618                     	;# 
  1931  0619                     	;# 
  1932  061A                     	;# 
  1933  061B                     	;# 
  1934  061C                     	;# 
  1935  061D                     	;# 
  1936  061E                     	;# 
  1937  068C                     	;# 
  1938  068D                     	;# 
  1939  068E                     	;# 
  1940  068F                     	;# 
  1941  0690                     	;# 
  1942  0691                     	;# 
  1943  0692                     	;# 
  1944  0693                     	;# 
  1945  0694                     	;# 
  1946  070C                     	;# 
  1947  070D                     	;# 
  1948  070E                     	;# 
  1949  070F                     	;# 
  1950  0710                     	;# 
  1951  0711                     	;# 
  1952  0712                     	;# 
  1953  0713                     	;# 
  1954  0714                     	;# 
  1955  0716                     	;# 
  1956  0717                     	;# 
  1957  0718                     	;# 
  1958  0719                     	;# 
  1959  071A                     	;# 
  1960  071B                     	;# 
  1961  071C                     	;# 
  1962  071D                     	;# 
  1963  071E                     	;# 
  1964  0796                     	;# 
  1965  0797                     	;# 
  1966  0798                     	;# 
  1967  0799                     	;# 
  1968  079A                     	;# 
  1969  079B                     	;# 
  1970  080C                     	;# 
  1971  080D                     	;# 
  1972  080E                     	;# 
  1973  080F                     	;# 
  1974  0810                     	;# 
  1975  0811                     	;# 
  1976  0813                     	;# 
  1977  0814                     	;# 
  1978  081A                     	;# 
  1979  081B                     	;# 
  1980  081C                     	;# 
  1981  081D                     	;# 
  1982  081E                     	;# 
  1983  081F                     	;# 
  1984  088C                     	;# 
  1985  088D                     	;# 
  1986  088E                     	;# 
  1987  088F                     	;# 
  1988  0890                     	;# 
  1989  0891                     	;# 
  1990  0892                     	;# 
  1991  0893                     	;# 
  1992  0895                     	;# 
  1993  0896                     	;# 
  1994  0897                     	;# 
  1995  0898                     	;# 
  1996  0899                     	;# 
  1997  089A                     	;# 
  1998  089B                     	;# 
  1999  090C                     	;# 
  2000  090E                     	;# 
  2001  090F                     	;# 
  2002  091F                     	;# 
  2003  091F                     	;# 
  2004  098F                     	;# 
  2005  098F                     	;# 
  2006  0990                     	;# 
  2007  0991                     	;# 
  2008  0992                     	;# 
  2009  0993                     	;# 
  2010  0994                     	;# 
  2011  0995                     	;# 
  2012  0996                     	;# 
  2013  0997                     	;# 
  2014  0E0F                     	;# 
  2015  0E10                     	;# 
  2016  0E11                     	;# 
  2017  0E12                     	;# 
  2018  0E13                     	;# 
  2019  0E14                     	;# 
  2020  0E15                     	;# 
  2021  0E16                     	;# 
  2022  0E17                     	;# 
  2023  0E18                     	;# 
  2024  0E19                     	;# 
  2025  0E1A                     	;# 
  2026  0E1B                     	;# 
  2027  0E1C                     	;# 
  2028  0E1D                     	;# 
  2029  0E1E                     	;# 
  2030  0E1F                     	;# 
  2031  0E20                     	;# 
  2032  0E21                     	;# 
  2033  0E22                     	;# 
  2034  0E23                     	;# 
  2035  0E24                     	;# 
  2036  0E25                     	;# 
  2037  0E26                     	;# 
  2038  0E27                     	;# 
  2039  0E28                     	;# 
  2040  0E29                     	;# 
  2041  0E2A                     	;# 
  2042  0E2B                     	;# 
  2043  0E2C                     	;# 
  2044  0E2D                     	;# 
  2045  0E2E                     	;# 
  2046  0E2F                     	;# 
  2047  0E30                     	;# 
  2048  0E31                     	;# 
  2049  0E32                     	;# 
  2050  0E33                     	;# 
  2051  0E34                     	;# 
  2052  0E35                     	;# 
  2053  0E36                     	;# 
  2054  0E37                     	;# 
  2055  0E8F                     	;# 
  2056  0E90                     	;# 
  2057  0E91                     	;# 
  2058  0E92                     	;# 
  2059  0E93                     	;# 
  2060  0E94                     	;# 
  2061  0E95                     	;# 
  2062  0E96                     	;# 
  2063  0E97                     	;# 
  2064  0E9C                     	;# 
  2065  0E9D                     	;# 
  2066  0E9E                     	;# 
  2067  0EA1                     	;# 
  2068  0EA2                     	;# 
  2069  0EA3                     	;# 
  2070  0EA4                     	;# 
  2071  0EA5                     	;# 
  2072  0EA9                     	;# 
  2073  0EAA                     	;# 
  2074  0EAB                     	;# 
  2075  0EAC                     	;# 
  2076  0EB1                     	;# 
  2077  0EB2                     	;# 
  2078  0EB3                     	;# 
  2079  0EB8                     	;# 
  2080  0EB9                     	;# 
  2081  0EBA                     	;# 
  2082  0EBB                     	;# 
  2083  0EBC                     	;# 
  2084  0EBD                     	;# 
  2085  0EBE                     	;# 
  2086  0EC3                     	;# 
  2087  0EC5                     	;# 
  2088  0EC6                     	;# 
  2089  0EC7                     	;# 
  2090  0EC8                     	;# 
  2091  0EC9                     	;# 
  2092  0ECA                     	;# 
  2093  0ECB                     	;# 
  2094  0ECC                     	;# 
  2095  0F10                     	;# 
  2096  0F11                     	;# 
  2097  0F12                     	;# 
  2098  0F13                     	;# 
  2099  0F14                     	;# 
  2100  0F15                     	;# 
  2101  0F16                     	;# 
  2102  0F17                     	;# 
  2103  0F18                     	;# 
  2104  0F19                     	;# 
  2105  0F1A                     	;# 
  2106  0F1B                     	;# 
  2107  0F1C                     	;# 
  2108  0F1D                     	;# 
  2109  0F1E                     	;# 
  2110  0F1F                     	;# 
  2111  0F20                     	;# 
  2112  0F21                     	;# 
  2113  0F22                     	;# 
  2114  0F23                     	;# 
  2115  0F24                     	;# 
  2116  0F25                     	;# 
  2117  0F26                     	;# 
  2118  0F27                     	;# 
  2119  0F38                     	;# 
  2120  0F39                     	;# 
  2121  0F3A                     	;# 
  2122  0F3B                     	;# 
  2123  0F3C                     	;# 
  2124  0F3D                     	;# 
  2125  0F3E                     	;# 
  2126  0F3F                     	;# 
  2127  0F40                     	;# 
  2128  0F41                     	;# 
  2129  0F43                     	;# 
  2130  0F44                     	;# 
  2131  0F45                     	;# 
  2132  0F46                     	;# 
  2133  0F47                     	;# 
  2134  0F48                     	;# 
  2135  0F49                     	;# 
  2136  0F4A                     	;# 
  2137  0F4B                     	;# 
  2138  0F4C                     	;# 
  2139  0F4E                     	;# 
  2140  0F4F                     	;# 
  2141  0F50                     	;# 
  2142  0F51                     	;# 
  2143  0F52                     	;# 
  2144  0F53                     	;# 
  2145  0F54                     	;# 
  2146  0F55                     	;# 
  2147  0F56                     	;# 
  2148  0F57                     	;# 
  2149  0F65                     	;# 
  2150  0F68                     	;# 
  2151  0F69                     	;# 
  2152  0F6A                     	;# 
  2153  0F6B                     	;# 
  2154  0FE4                     	;# 
  2155  0FE5                     	;# 
  2156  0FE6                     	;# 
  2157  0FE7                     	;# 
  2158  0FE8                     	;# 
  2159  0FE9                     	;# 
  2160  0FEA                     	;# 
  2161  0FEB                     	;# 
  2162  0FED                     	;# 
  2163  0FEE                     	;# 
  2164  0FEF                     	;# 
  2165  0000                     	;# 
  2166  0001                     	;# 
  2167  0002                     	;# 
  2168  0003                     	;# 
  2169  0004                     	;# 
  2170  0005                     	;# 
  2171  0006                     	;# 
  2172  0007                     	;# 
  2173  0008                     	;# 
  2174  0009                     	;# 
  2175  000A                     	;# 
  2176  000B                     	;# 
  2177  000C                     	;# 
  2178  000D                     	;# 
  2179  000E                     	;# 
  2180  0010                     	;# 
  2181  0011                     	;# 
  2182  0012                     	;# 
  2183  0013                     	;# 
  2184  0016                     	;# 
  2185  0017                     	;# 
  2186  0018                     	;# 
  2187  001C                     	;# 
  2188  001C                     	;# 
  2189  001D                     	;# 
  2190  001D                     	;# 
  2191  001E                     	;# 
  2192  001F                     	;# 
  2193  008C                     	;# 
  2194  008C                     	;# 
  2195  008D                     	;# 
  2196  008E                     	;# 
  2197  008E                     	;# 
  2198  008F                     	;# 
  2199  0090                     	;# 
  2200  0090                     	;# 
  2201  0091                     	;# 
  2202  0093                     	;# 
  2203  0094                     	;# 
  2204  0095                     	;# 
  2205  0096                     	;# 
  2206  0097                     	;# 
  2207  0098                     	;# 
  2208  0099                     	;# 
  2209  009A                     	;# 
  2210  009B                     	;# 
  2211  009C                     	;# 
  2212  009D                     	;# 
  2213  009E                     	;# 
  2214  010C                     	;# 
  2215  010D                     	;# 
  2216  010E                     	;# 
  2217  010E                     	;# 
  2218  010F                     	;# 
  2219  0110                     	;# 
  2220  0110                     	;# 
  2221  0111                     	;# 
  2222  0112                     	;# 
  2223  0112                     	;# 
  2224  0113                     	;# 
  2225  0114                     	;# 
  2226  0114                     	;# 
  2227  0115                     	;# 
  2228  0116                     	;# 
  2229  0116                     	;# 
  2230  0117                     	;# 
  2231  0119                     	;# 
  2232  0119                     	;# 
  2233  0119                     	;# 
  2234  011A                     	;# 
  2235  011A                     	;# 
  2236  011A                     	;# 
  2237  011B                     	;# 
  2238  011B                     	;# 
  2239  011B                     	;# 
  2240  011B                     	;# 
  2241  011B                     	;# 
  2242  011C                     	;# 
  2243  011C                     	;# 
  2244  011C                     	;# 
  2245  011D                     	;# 
  2246  011D                     	;# 
  2247  011D                     	;# 
  2248  011E                     	;# 
  2249  011E                     	;# 
  2250  011E                     	;# 
  2251  011F                     	;# 
  2252  011F                     	;# 
  2253  011F                     	;# 
  2254  011F                     	;# 
  2255  011F                     	;# 
  2256  018C                     	;# 
  2257  018D                     	;# 
  2258  018E                     	;# 
  2259  018F                     	;# 
  2260  0190                     	;# 
  2261  0191                     	;# 
  2262  0192                     	;# 
  2263  0196                     	;# 
  2264  0197                     	;# 
  2265  0198                     	;# 
  2266  0199                     	;# 
  2267  019A                     	;# 
  2268  019B                     	;# 
  2269  019C                     	;# 
  2270  020C                     	;# 
  2271  020C                     	;# 
  2272  020D                     	;# 
  2273  020E                     	;# 
  2274  020F                     	;# 
  2275  020F                     	;# 
  2276  0210                     	;# 
  2277  0210                     	;# 
  2278  0211                     	;# 
  2279  0211                     	;# 
  2280  0212                     	;# 
  2281  0212                     	;# 
  2282  0213                     	;# 
  2283  0214                     	;# 
  2284  0215                     	;# 
  2285  0215                     	;# 
  2286  0216                     	;# 
  2287  0216                     	;# 
  2288  0217                     	;# 
  2289  0217                     	;# 
  2290  0218                     	;# 
  2291  0218                     	;# 
  2292  0219                     	;# 
  2293  021A                     	;# 
  2294  021B                     	;# 
  2295  021B                     	;# 
  2296  021C                     	;# 
  2297  021C                     	;# 
  2298  021D                     	;# 
  2299  021D                     	;# 
  2300  021E                     	;# 
  2301  021F                     	;# 
  2302  028C                     	;# 
  2303  028C                     	;# 
  2304  028D                     	;# 
  2305  028D                     	;# 
  2306  028E                     	;# 
  2307  028F                     	;# 
  2308  0290                     	;# 
  2309  0290                     	;# 
  2310  0291                     	;# 
  2311  0292                     	;# 
  2312  0292                     	;# 
  2313  0293                     	;# 
  2314  0293                     	;# 
  2315  0294                     	;# 
  2316  0295                     	;# 
  2317  0296                     	;# 
  2318  0296                     	;# 
  2319  0297                     	;# 
  2320  0298                     	;# 
  2321  0298                     	;# 
  2322  0299                     	;# 
  2323  0299                     	;# 
  2324  029A                     	;# 
  2325  029B                     	;# 
  2326  029C                     	;# 
  2327  029C                     	;# 
  2328  029D                     	;# 
  2329  030C                     	;# 
  2330  030C                     	;# 
  2331  030D                     	;# 
  2332  030E                     	;# 
  2333  030F                     	;# 
  2334  0310                     	;# 
  2335  0310                     	;# 
  2336  0311                     	;# 
  2337  0312                     	;# 
  2338  0313                     	;# 
  2339  0314                     	;# 
  2340  0314                     	;# 
  2341  0315                     	;# 
  2342  0316                     	;# 
  2343  0317                     	;# 
  2344  0318                     	;# 
  2345  0318                     	;# 
  2346  0319                     	;# 
  2347  031A                     	;# 
  2348  031B                     	;# 
  2349  031C                     	;# 
  2350  031C                     	;# 
  2351  031D                     	;# 
  2352  031E                     	;# 
  2353  031F                     	;# 
  2354  038C                     	;# 
  2355  038C                     	;# 
  2356  038D                     	;# 
  2357  038E                     	;# 
  2358  0390                     	;# 
  2359  0390                     	;# 
  2360  0391                     	;# 
  2361  0392                     	;# 
  2362  040C                     	;# 
  2363  040D                     	;# 
  2364  040E                     	;# 
  2365  040F                     	;# 
  2366  0410                     	;# 
  2367  0411                     	;# 
  2368  0416                     	;# 
  2369  0416                     	;# 
  2370  0417                     	;# 
  2371  0418                     	;# 
  2372  0418                     	;# 
  2373  0419                     	;# 
  2374  041A                     	;# 
  2375  041A                     	;# 
  2376  041B                     	;# 
  2377  041C                     	;# 
  2378  041C                     	;# 
  2379  041D                     	;# 
  2380  041E                     	;# 
  2381  041F                     	;# 
  2382  048C                     	;# 
  2383  048C                     	;# 
  2384  048D                     	;# 
  2385  048E                     	;# 
  2386  048F                     	;# 
  2387  048F                     	;# 
  2388  0490                     	;# 
  2389  0491                     	;# 
  2390  0492                     	;# 
  2391  0492                     	;# 
  2392  0493                     	;# 
  2393  0494                     	;# 
  2394  0495                     	;# 
  2395  0495                     	;# 
  2396  0496                     	;# 
  2397  0497                     	;# 
  2398  0498                     	;# 
  2399  0499                     	;# 
  2400  049A                     	;# 
  2401  049B                     	;# 
  2402  049C                     	;# 
  2403  049D                     	;# 
  2404  050C                     	;# 
  2405  050C                     	;# 
  2406  050D                     	;# 
  2407  050E                     	;# 
  2408  050F                     	;# 
  2409  050F                     	;# 
  2410  0510                     	;# 
  2411  0511                     	;# 
  2412  0512                     	;# 
  2413  0512                     	;# 
  2414  0513                     	;# 
  2415  0514                     	;# 
  2416  0515                     	;# 
  2417  0515                     	;# 
  2418  0516                     	;# 
  2419  0517                     	;# 
  2420  0518                     	;# 
  2421  0519                     	;# 
  2422  051A                     	;# 
  2423  051B                     	;# 
  2424  051C                     	;# 
  2425  051D                     	;# 
  2426  058C                     	;# 
  2427  058C                     	;# 
  2428  058D                     	;# 
  2429  058E                     	;# 
  2430  058F                     	;# 
  2431  058F                     	;# 
  2432  0590                     	;# 
  2433  0591                     	;# 
  2434  0592                     	;# 
  2435  0593                     	;# 
  2436  060C                     	;# 
  2437  060D                     	;# 
  2438  060E                     	;# 
  2439  060F                     	;# 
  2440  0610                     	;# 
  2441  0611                     	;# 
  2442  0612                     	;# 
  2443  0613                     	;# 
  2444  0614                     	;# 
  2445  0616                     	;# 
  2446  0617                     	;# 
  2447  0618                     	;# 
  2448  0619                     	;# 
  2449  061A                     	;# 
  2450  061B                     	;# 
  2451  061C                     	;# 
  2452  061D                     	;# 
  2453  061E                     	;# 
  2454  068C                     	;# 
  2455  068D                     	;# 
  2456  068E                     	;# 
  2457  068F                     	;# 
  2458  0690                     	;# 
  2459  0691                     	;# 
  2460  0692                     	;# 
  2461  0693                     	;# 
  2462  0694                     	;# 
  2463  070C                     	;# 
  2464  070D                     	;# 
  2465  070E                     	;# 
  2466  070F                     	;# 
  2467  0710                     	;# 
  2468  0711                     	;# 
  2469  0712                     	;# 
  2470  0713                     	;# 
  2471  0714                     	;# 
  2472  0716                     	;# 
  2473  0717                     	;# 
  2474  0718                     	;# 
  2475  0719                     	;# 
  2476  071A                     	;# 
  2477  071B                     	;# 
  2478  071C                     	;# 
  2479  071D                     	;# 
  2480  071E                     	;# 
  2481  0796                     	;# 
  2482  0797                     	;# 
  2483  0798                     	;# 
  2484  0799                     	;# 
  2485  079A                     	;# 
  2486  079B                     	;# 
  2487  080C                     	;# 
  2488  080D                     	;# 
  2489  080E                     	;# 
  2490  080F                     	;# 
  2491  0810                     	;# 
  2492  0811                     	;# 
  2493  0813                     	;# 
  2494  0814                     	;# 
  2495  081A                     	;# 
  2496  081B                     	;# 
  2497  081C                     	;# 
  2498  081D                     	;# 
  2499  081E                     	;# 
  2500  081F                     	;# 
  2501  088C                     	;# 
  2502  088D                     	;# 
  2503  088E                     	;# 
  2504  088F                     	;# 
  2505  0890                     	;# 
  2506  0891                     	;# 
  2507  0892                     	;# 
  2508  0893                     	;# 
  2509  0895                     	;# 
  2510  0896                     	;# 
  2511  0897                     	;# 
  2512  0898                     	;# 
  2513  0899                     	;# 
  2514  089A                     	;# 
  2515  089B                     	;# 
  2516  090C                     	;# 
  2517  090E                     	;# 
  2518  090F                     	;# 
  2519  091F                     	;# 
  2520  091F                     	;# 
  2521  098F                     	;# 
  2522  098F                     	;# 
  2523  0990                     	;# 
  2524  0991                     	;# 
  2525  0992                     	;# 
  2526  0993                     	;# 
  2527  0994                     	;# 
  2528  0995                     	;# 
  2529  0996                     	;# 
  2530  0997                     	;# 
  2531  0E0F                     	;# 
  2532  0E10                     	;# 
  2533  0E11                     	;# 
  2534  0E12                     	;# 
  2535  0E13                     	;# 
  2536  0E14                     	;# 
  2537  0E15                     	;# 
  2538  0E16                     	;# 
  2539  0E17                     	;# 
  2540  0E18                     	;# 
  2541  0E19                     	;# 
  2542  0E1A                     	;# 
  2543  0E1B                     	;# 
  2544  0E1C                     	;# 
  2545  0E1D                     	;# 
  2546  0E1E                     	;# 
  2547  0E1F                     	;# 
  2548  0E20                     	;# 
  2549  0E21                     	;# 
  2550  0E22                     	;# 
  2551  0E23                     	;# 
  2552  0E24                     	;# 
  2553  0E25                     	;# 
  2554  0E26                     	;# 
  2555  0E27                     	;# 
  2556  0E28                     	;# 
  2557  0E29                     	;# 
  2558  0E2A                     	;# 
  2559  0E2B                     	;# 
  2560  0E2C                     	;# 
  2561  0E2D                     	;# 
  2562  0E2E                     	;# 
  2563  0E2F                     	;# 
  2564  0E30                     	;# 
  2565  0E31                     	;# 
  2566  0E32                     	;# 
  2567  0E33                     	;# 
  2568  0E34                     	;# 
  2569  0E35                     	;# 
  2570  0E36                     	;# 
  2571  0E37                     	;# 
  2572  0E8F                     	;# 
  2573  0E90                     	;# 
  2574  0E91                     	;# 
  2575  0E92                     	;# 
  2576  0E93                     	;# 
  2577  0E94                     	;# 
  2578  0E95                     	;# 
  2579  0E96                     	;# 
  2580  0E97                     	;# 
  2581  0E9C                     	;# 
  2582  0E9D                     	;# 
  2583  0E9E                     	;# 
  2584  0EA1                     	;# 
  2585  0EA2                     	;# 
  2586  0EA3                     	;# 
  2587  0EA4                     	;# 
  2588  0EA5                     	;# 
  2589  0EA9                     	;# 
  2590  0EAA                     	;# 
  2591  0EAB                     	;# 
  2592  0EAC                     	;# 
  2593  0EB1                     	;# 
  2594  0EB2                     	;# 
  2595  0EB3                     	;# 
  2596  0EB8                     	;# 
  2597  0EB9                     	;# 
  2598  0EBA                     	;# 
  2599  0EBB                     	;# 
  2600  0EBC                     	;# 
  2601  0EBD                     	;# 
  2602  0EBE                     	;# 
  2603  0EC3                     	;# 
  2604  0EC5                     	;# 
  2605  0EC6                     	;# 
  2606  0EC7                     	;# 
  2607  0EC8                     	;# 
  2608  0EC9                     	;# 
  2609  0ECA                     	;# 
  2610  0ECB                     	;# 
  2611  0ECC                     	;# 
  2612  0F10                     	;# 
  2613  0F11                     	;# 
  2614  0F12                     	;# 
  2615  0F13                     	;# 
  2616  0F14                     	;# 
  2617  0F15                     	;# 
  2618  0F16                     	;# 
  2619  0F17                     	;# 
  2620  0F18                     	;# 
  2621  0F19                     	;# 
  2622  0F1A                     	;# 
  2623  0F1B                     	;# 
  2624  0F1C                     	;# 
  2625  0F1D                     	;# 
  2626  0F1E                     	;# 
  2627  0F1F                     	;# 
  2628  0F20                     	;# 
  2629  0F21                     	;# 
  2630  0F22                     	;# 
  2631  0F23                     	;# 
  2632  0F24                     	;# 
  2633  0F25                     	;# 
  2634  0F26                     	;# 
  2635  0F27                     	;# 
  2636  0F38                     	;# 
  2637  0F39                     	;# 
  2638  0F3A                     	;# 
  2639  0F3B                     	;# 
  2640  0F3C                     	;# 
  2641  0F3D                     	;# 
  2642  0F3E                     	;# 
  2643  0F3F                     	;# 
  2644  0F40                     	;# 
  2645  0F41                     	;# 
  2646  0F43                     	;# 
  2647  0F44                     	;# 
  2648  0F45                     	;# 
  2649  0F46                     	;# 
  2650  0F47                     	;# 
  2651  0F48                     	;# 
  2652  0F49                     	;# 
  2653  0F4A                     	;# 
  2654  0F4B                     	;# 
  2655  0F4C                     	;# 
  2656  0F4E                     	;# 
  2657  0F4F                     	;# 
  2658  0F50                     	;# 
  2659  0F51                     	;# 
  2660  0F52                     	;# 
  2661  0F53                     	;# 
  2662  0F54                     	;# 
  2663  0F55                     	;# 
  2664  0F56                     	;# 
  2665  0F57                     	;# 
  2666  0F65                     	;# 
  2667  0F68                     	;# 
  2668  0F69                     	;# 
  2669  0F6A                     	;# 
  2670  0F6B                     	;# 
  2671  0FE4                     	;# 
  2672  0FE5                     	;# 
  2673  0FE6                     	;# 
  2674  0FE7                     	;# 
  2675  0FE8                     	;# 
  2676  0FE9                     	;# 
  2677  0FEA                     	;# 
  2678  0FEB                     	;# 
  2679  0FED                     	;# 
  2680  0FEE                     	;# 
  2681  0FEF                     	;# 
  2682  0000                     	;# 
  2683  0001                     	;# 
  2684  0002                     	;# 
  2685  0003                     	;# 
  2686  0004                     	;# 
  2687  0005                     	;# 
  2688  0006                     	;# 
  2689  0007                     	;# 
  2690  0008                     	;# 
  2691  0009                     	;# 
  2692  000A                     	;# 
  2693  000B                     	;# 
  2694  000C                     	;# 
  2695  000D                     	;# 
  2696  000E                     	;# 
  2697  0010                     	;# 
  2698  0011                     	;# 
  2699  0012                     	;# 
  2700  0013                     	;# 
  2701  0016                     	;# 
  2702  0017                     	;# 
  2703  0018                     	;# 
  2704  001C                     	;# 
  2705  001C                     	;# 
  2706  001D                     	;# 
  2707  001D                     	;# 
  2708  001E                     	;# 
  2709  001F                     	;# 
  2710  008C                     	;# 
  2711  008C                     	;# 
  2712  008D                     	;# 
  2713  008E                     	;# 
  2714  008E                     	;# 
  2715  008F                     	;# 
  2716  0090                     	;# 
  2717  0090                     	;# 
  2718  0091                     	;# 
  2719  0093                     	;# 
  2720  0094                     	;# 
  2721  0095                     	;# 
  2722  0096                     	;# 
  2723  0097                     	;# 
  2724  0098                     	;# 
  2725  0099                     	;# 
  2726  009A                     	;# 
  2727  009B                     	;# 
  2728  009C                     	;# 
  2729  009D                     	;# 
  2730  009E                     	;# 
  2731  010C                     	;# 
  2732  010D                     	;# 
  2733  010E                     	;# 
  2734  010E                     	;# 
  2735  010F                     	;# 
  2736  0110                     	;# 
  2737  0110                     	;# 
  2738  0111                     	;# 
  2739  0112                     	;# 
  2740  0112                     	;# 
  2741  0113                     	;# 
  2742  0114                     	;# 
  2743  0114                     	;# 
  2744  0115                     	;# 
  2745  0116                     	;# 
  2746  0116                     	;# 
  2747  0117                     	;# 
  2748  0119                     	;# 
  2749  0119                     	;# 
  2750  0119                     	;# 
  2751  011A                     	;# 
  2752  011A                     	;# 
  2753  011A                     	;# 
  2754  011B                     	;# 
  2755  011B                     	;# 
  2756  011B                     	;# 
  2757  011B                     	;# 
  2758  011B                     	;# 
  2759  011C                     	;# 
  2760  011C                     	;# 
  2761  011C                     	;# 
  2762  011D                     	;# 
  2763  011D                     	;# 
  2764  011D                     	;# 
  2765  011E                     	;# 
  2766  011E                     	;# 
  2767  011E                     	;# 
  2768  011F                     	;# 
  2769  011F                     	;# 
  2770  011F                     	;# 
  2771  011F                     	;# 
  2772  011F                     	;# 
  2773  018C                     	;# 
  2774  018D                     	;# 
  2775  018E                     	;# 
  2776  018F                     	;# 
  2777  0190                     	;# 
  2778  0191                     	;# 
  2779  0192                     	;# 
  2780  0196                     	;# 
  2781  0197                     	;# 
  2782  0198                     	;# 
  2783  0199                     	;# 
  2784  019A                     	;# 
  2785  019B                     	;# 
  2786  019C                     	;# 
  2787  020C                     	;# 
  2788  020C                     	;# 
  2789  020D                     	;# 
  2790  020E                     	;# 
  2791  020F                     	;# 
  2792  020F                     	;# 
  2793  0210                     	;# 
  2794  0210                     	;# 
  2795  0211                     	;# 
  2796  0211                     	;# 
  2797  0212                     	;# 
  2798  0212                     	;# 
  2799  0213                     	;# 
  2800  0214                     	;# 
  2801  0215                     	;# 
  2802  0215                     	;# 
  2803  0216                     	;# 
  2804  0216                     	;# 
  2805  0217                     	;# 
  2806  0217                     	;# 
  2807  0218                     	;# 
  2808  0218                     	;# 
  2809  0219                     	;# 
  2810  021A                     	;# 
  2811  021B                     	;# 
  2812  021B                     	;# 
  2813  021C                     	;# 
  2814  021C                     	;# 
  2815  021D                     	;# 
  2816  021D                     	;# 
  2817  021E                     	;# 
  2818  021F                     	;# 
  2819  028C                     	;# 
  2820  028C                     	;# 
  2821  028D                     	;# 
  2822  028D                     	;# 
  2823  028E                     	;# 
  2824  028F                     	;# 
  2825  0290                     	;# 
  2826  0290                     	;# 
  2827  0291                     	;# 
  2828  0292                     	;# 
  2829  0292                     	;# 
  2830  0293                     	;# 
  2831  0293                     	;# 
  2832  0294                     	;# 
  2833  0295                     	;# 
  2834  0296                     	;# 
  2835  0296                     	;# 
  2836  0297                     	;# 
  2837  0298                     	;# 
  2838  0298                     	;# 
  2839  0299                     	;# 
  2840  0299                     	;# 
  2841  029A                     	;# 
  2842  029B                     	;# 
  2843  029C                     	;# 
  2844  029C                     	;# 
  2845  029D                     	;# 
  2846  030C                     	;# 
  2847  030C                     	;# 
  2848  030D                     	;# 
  2849  030E                     	;# 
  2850  030F                     	;# 
  2851  0310                     	;# 
  2852  0310                     	;# 
  2853  0311                     	;# 
  2854  0312                     	;# 
  2855  0313                     	;# 
  2856  0314                     	;# 
  2857  0314                     	;# 
  2858  0315                     	;# 
  2859  0316                     	;# 
  2860  0317                     	;# 
  2861  0318                     	;# 
  2862  0318                     	;# 
  2863  0319                     	;# 
  2864  031A                     	;# 
  2865  031B                     	;# 
  2866  031C                     	;# 
  2867  031C                     	;# 
  2868  031D                     	;# 
  2869  031E                     	;# 
  2870  031F                     	;# 
  2871  038C                     	;# 
  2872  038C                     	;# 
  2873  038D                     	;# 
  2874  038E                     	;# 
  2875  0390                     	;# 
  2876  0390                     	;# 
  2877  0391                     	;# 
  2878  0392                     	;# 
  2879  040C                     	;# 
  2880  040D                     	;# 
  2881  040E                     	;# 
  2882  040F                     	;# 
  2883  0410                     	;# 
  2884  0411                     	;# 
  2885  0416                     	;# 
  2886  0416                     	;# 
  2887  0417                     	;# 
  2888  0418                     	;# 
  2889  0418                     	;# 
  2890  0419                     	;# 
  2891  041A                     	;# 
  2892  041A                     	;# 
  2893  041B                     	;# 
  2894  041C                     	;# 
  2895  041C                     	;# 
  2896  041D                     	;# 
  2897  041E                     	;# 
  2898  041F                     	;# 
  2899  048C                     	;# 
  2900  048C                     	;# 
  2901  048D                     	;# 
  2902  048E                     	;# 
  2903  048F                     	;# 
  2904  048F                     	;# 
  2905  0490                     	;# 
  2906  0491                     	;# 
  2907  0492                     	;# 
  2908  0492                     	;# 
  2909  0493                     	;# 
  2910  0494                     	;# 
  2911  0495                     	;# 
  2912  0495                     	;# 
  2913  0496                     	;# 
  2914  0497                     	;# 
  2915  0498                     	;# 
  2916  0499                     	;# 
  2917  049A                     	;# 
  2918  049B                     	;# 
  2919  049C                     	;# 
  2920  049D                     	;# 
  2921  050C                     	;# 
  2922  050C                     	;# 
  2923  050D                     	;# 
  2924  050E                     	;# 
  2925  050F                     	;# 
  2926  050F                     	;# 
  2927  0510                     	;# 
  2928  0511                     	;# 
  2929  0512                     	;# 
  2930  0512                     	;# 
  2931  0513                     	;# 
  2932  0514                     	;# 
  2933  0515                     	;# 
  2934  0515                     	;# 
  2935  0516                     	;# 
  2936  0517                     	;# 
  2937  0518                     	;# 
  2938  0519                     	;# 
  2939  051A                     	;# 
  2940  051B                     	;# 
  2941  051C                     	;# 
  2942  051D                     	;# 
  2943  058C                     	;# 
  2944  058C                     	;# 
  2945  058D                     	;# 
  2946  058E                     	;# 
  2947  058F                     	;# 
  2948  058F                     	;# 
  2949  0590                     	;# 
  2950  0591                     	;# 
  2951  0592                     	;# 
  2952  0593                     	;# 
  2953  060C                     	;# 
  2954  060D                     	;# 
  2955  060E                     	;# 
  2956  060F                     	;# 
  2957  0610                     	;# 
  2958  0611                     	;# 
  2959  0612                     	;# 
  2960  0613                     	;# 
  2961  0614                     	;# 
  2962  0616                     	;# 
  2963  0617                     	;# 
  2964  0618                     	;# 
  2965  0619                     	;# 
  2966  061A                     	;# 
  2967  061B                     	;# 
  2968  061C                     	;# 
  2969  061D                     	;# 
  2970  061E                     	;# 
  2971  068C                     	;# 
  2972  068D                     	;# 
  2973  068E                     	;# 
  2974  068F                     	;# 
  2975  0690                     	;# 
  2976  0691                     	;# 
  2977  0692                     	;# 
  2978  0693                     	;# 
  2979  0694                     	;# 
  2980  070C                     	;# 
  2981  070D                     	;# 
  2982  070E                     	;# 
  2983  070F                     	;# 
  2984  0710                     	;# 
  2985  0711                     	;# 
  2986  0712                     	;# 
  2987  0713                     	;# 
  2988  0714                     	;# 
  2989  0716                     	;# 
  2990  0717                     	;# 
  2991  0718                     	;# 
  2992  0719                     	;# 
  2993  071A                     	;# 
  2994  071B                     	;# 
  2995  071C                     	;# 
  2996  071D                     	;# 
  2997  071E                     	;# 
  2998  0796                     	;# 
  2999  0797                     	;# 
  3000  0798                     	;# 
  3001  0799                     	;# 
  3002  079A                     	;# 
  3003  079B                     	;# 
  3004  080C                     	;# 
  3005  080D                     	;# 
  3006  080E                     	;# 
  3007  080F                     	;# 
  3008  0810                     	;# 
  3009  0811                     	;# 
  3010  0813                     	;# 
  3011  0814                     	;# 
  3012  081A                     	;# 
  3013  081B                     	;# 
  3014  081C                     	;# 
  3015  081D                     	;# 
  3016  081E                     	;# 
  3017  081F                     	;# 
  3018  088C                     	;# 
  3019  088D                     	;# 
  3020  088E                     	;# 
  3021  088F                     	;# 
  3022  0890                     	;# 
  3023  0891                     	;# 
  3024  0892                     	;# 
  3025  0893                     	;# 
  3026  0895                     	;# 
  3027  0896                     	;# 
  3028  0897                     	;# 
  3029  0898                     	;# 
  3030  0899                     	;# 
  3031  089A                     	;# 
  3032  089B                     	;# 
  3033  090C                     	;# 
  3034  090E                     	;# 
  3035  090F                     	;# 
  3036  091F                     	;# 
  3037  091F                     	;# 
  3038  098F                     	;# 
  3039  098F                     	;# 
  3040  0990                     	;# 
  3041  0991                     	;# 
  3042  0992                     	;# 
  3043  0993                     	;# 
  3044  0994                     	;# 
  3045  0995                     	;# 
  3046  0996                     	;# 
  3047  0997                     	;# 
  3048  0E0F                     	;# 
  3049  0E10                     	;# 
  3050  0E11                     	;# 
  3051  0E12                     	;# 
  3052  0E13                     	;# 
  3053  0E14                     	;# 
  3054  0E15                     	;# 
  3055  0E16                     	;# 
  3056  0E17                     	;# 
  3057  0E18                     	;# 
  3058  0E19                     	;# 
  3059  0E1A                     	;# 
  3060  0E1B                     	;# 
  3061  0E1C                     	;# 
  3062  0E1D                     	;# 
  3063  0E1E                     	;# 
  3064  0E1F                     	;# 
  3065  0E20                     	;# 
  3066  0E21                     	;# 
  3067  0E22                     	;# 
  3068  0E23                     	;# 
  3069  0E24                     	;# 
  3070  0E25                     	;# 
  3071  0E26                     	;# 
  3072  0E27                     	;# 
  3073  0E28                     	;# 
  3074  0E29                     	;# 
  3075  0E2A                     	;# 
  3076  0E2B                     	;# 
  3077  0E2C                     	;# 
  3078  0E2D                     	;# 
  3079  0E2E                     	;# 
  3080  0E2F                     	;# 
  3081  0E30                     	;# 
  3082  0E31                     	;# 
  3083  0E32                     	;# 
  3084  0E33                     	;# 
  3085  0E34                     	;# 
  3086  0E35                     	;# 
  3087  0E36                     	;# 
  3088  0E37                     	;# 
  3089  0E8F                     	;# 
  3090  0E90                     	;# 
  3091  0E91                     	;# 
  3092  0E92                     	;# 
  3093  0E93                     	;# 
  3094  0E94                     	;# 
  3095  0E95                     	;# 
  3096  0E96                     	;# 
  3097  0E97                     	;# 
  3098  0E9C                     	;# 
  3099  0E9D                     	;# 
  3100  0E9E                     	;# 
  3101  0EA1                     	;# 
  3102  0EA2                     	;# 
  3103  0EA3                     	;# 
  3104  0EA4                     	;# 
  3105  0EA5                     	;# 
  3106  0EA9                     	;# 
  3107  0EAA                     	;# 
  3108  0EAB                     	;# 
  3109  0EAC                     	;# 
  3110  0EB1                     	;# 
  3111  0EB2                     	;# 
  3112  0EB3                     	;# 
  3113  0EB8                     	;# 
  3114  0EB9                     	;# 
  3115  0EBA                     	;# 
  3116  0EBB                     	;# 
  3117  0EBC                     	;# 
  3118  0EBD                     	;# 
  3119  0EBE                     	;# 
  3120  0EC3                     	;# 
  3121  0EC5                     	;# 
  3122  0EC6                     	;# 
  3123  0EC7                     	;# 
  3124  0EC8                     	;# 
  3125  0EC9                     	;# 
  3126  0ECA                     	;# 
  3127  0ECB                     	;# 
  3128  0ECC                     	;# 
  3129  0F10                     	;# 
  3130  0F11                     	;# 
  3131  0F12                     	;# 
  3132  0F13                     	;# 
  3133  0F14                     	;# 
  3134  0F15                     	;# 
  3135  0F16                     	;# 
  3136  0F17                     	;# 
  3137  0F18                     	;# 
  3138  0F19                     	;# 
  3139  0F1A                     	;# 
  3140  0F1B                     	;# 
  3141  0F1C                     	;# 
  3142  0F1D                     	;# 
  3143  0F1E                     	;# 
  3144  0F1F                     	;# 
  3145  0F20                     	;# 
  3146  0F21                     	;# 
  3147  0F22                     	;# 
  3148  0F23                     	;# 
  3149  0F24                     	;# 
  3150  0F25                     	;# 
  3151  0F26                     	;# 
  3152  0F27                     	;# 
  3153  0F38                     	;# 
  3154  0F39                     	;# 
  3155  0F3A                     	;# 
  3156  0F3B                     	;# 
  3157  0F3C                     	;# 
  3158  0F3D                     	;# 
  3159  0F3E                     	;# 
  3160  0F3F                     	;# 
  3161  0F40                     	;# 
  3162  0F41                     	;# 
  3163  0F43                     	;# 
  3164  0F44                     	;# 
  3165  0F45                     	;# 
  3166  0F46                     	;# 
  3167  0F47                     	;# 
  3168  0F48                     	;# 
  3169  0F49                     	;# 
  3170  0F4A                     	;# 
  3171  0F4B                     	;# 
  3172  0F4C                     	;# 
  3173  0F4E                     	;# 
  3174  0F4F                     	;# 
  3175  0F50                     	;# 
  3176  0F51                     	;# 
  3177  0F52                     	;# 
  3178  0F53                     	;# 
  3179  0F54                     	;# 
  3180  0F55                     	;# 
  3181  0F56                     	;# 
  3182  0F57                     	;# 
  3183  0F65                     	;# 
  3184  0F68                     	;# 
  3185  0F69                     	;# 
  3186  0F6A                     	;# 
  3187  0F6B                     	;# 
  3188  0FE4                     	;# 
  3189  0FE5                     	;# 
  3190  0FE6                     	;# 
  3191  0FE7                     	;# 
  3192  0FE8                     	;# 
  3193  0FE9                     	;# 
  3194  0FEA                     	;# 
  3195  0FEB                     	;# 
  3196  0FED                     	;# 
  3197  0FEE                     	;# 
  3198  0FEF                     	;# 
  3199  0000                     	;# 
  3200  0001                     	;# 
  3201  0002                     	;# 
  3202  0003                     	;# 
  3203  0004                     	;# 
  3204  0005                     	;# 
  3205  0006                     	;# 
  3206  0007                     	;# 
  3207  0008                     	;# 
  3208  0009                     	;# 
  3209  000A                     	;# 
  3210  000B                     	;# 
  3211  000C                     	;# 
  3212  000D                     	;# 
  3213  000E                     	;# 
  3214  0010                     	;# 
  3215  0011                     	;# 
  3216  0012                     	;# 
  3217  0013                     	;# 
  3218  0016                     	;# 
  3219  0017                     	;# 
  3220  0018                     	;# 
  3221  001C                     	;# 
  3222  001C                     	;# 
  3223  001D                     	;# 
  3224  001D                     	;# 
  3225  001E                     	;# 
  3226  001F                     	;# 
  3227  008C                     	;# 
  3228  008C                     	;# 
  3229  008D                     	;# 
  3230  008E                     	;# 
  3231  008E                     	;# 
  3232  008F                     	;# 
  3233  0090                     	;# 
  3234  0090                     	;# 
  3235  0091                     	;# 
  3236  0093                     	;# 
  3237  0094                     	;# 
  3238  0095                     	;# 
  3239  0096                     	;# 
  3240  0097                     	;# 
  3241  0098                     	;# 
  3242  0099                     	;# 
  3243  009A                     	;# 
  3244  009B                     	;# 
  3245  009C                     	;# 
  3246  009D                     	;# 
  3247  009E                     	;# 
  3248  010C                     	;# 
  3249  010D                     	;# 
  3250  010E                     	;# 
  3251  010E                     	;# 
  3252  010F                     	;# 
  3253  0110                     	;# 
  3254  0110                     	;# 
  3255  0111                     	;# 
  3256  0112                     	;# 
  3257  0112                     	;# 
  3258  0113                     	;# 
  3259  0114                     	;# 
  3260  0114                     	;# 
  3261  0115                     	;# 
  3262  0116                     	;# 
  3263  0116                     	;# 
  3264  0117                     	;# 
  3265  0119                     	;# 
  3266  0119                     	;# 
  3267  0119                     	;# 
  3268  011A                     	;# 
  3269  011A                     	;# 
  3270  011A                     	;# 
  3271  011B                     	;# 
  3272  011B                     	;# 
  3273  011B                     	;# 
  3274  011B                     	;# 
  3275  011B                     	;# 
  3276  011C                     	;# 
  3277  011C                     	;# 
  3278  011C                     	;# 
  3279  011D                     	;# 
  3280  011D                     	;# 
  3281  011D                     	;# 
  3282  011E                     	;# 
  3283  011E                     	;# 
  3284  011E                     	;# 
  3285  011F                     	;# 
  3286  011F                     	;# 
  3287  011F                     	;# 
  3288  011F                     	;# 
  3289  011F                     	;# 
  3290  018C                     	;# 
  3291  018D                     	;# 
  3292  018E                     	;# 
  3293  018F                     	;# 
  3294  0190                     	;# 
  3295  0191                     	;# 
  3296  0192                     	;# 
  3297  0196                     	;# 
  3298  0197                     	;# 
  3299  0198                     	;# 
  3300  0199                     	;# 
  3301  019A                     	;# 
  3302  019B                     	;# 
  3303  019C                     	;# 
  3304  020C                     	;# 
  3305  020C                     	;# 
  3306  020D                     	;# 
  3307  020E                     	;# 
  3308  020F                     	;# 
  3309  020F                     	;# 
  3310  0210                     	;# 
  3311  0210                     	;# 
  3312  0211                     	;# 
  3313  0211                     	;# 
  3314  0212                     	;# 
  3315  0212                     	;# 
  3316  0213                     	;# 
  3317  0214                     	;# 
  3318  0215                     	;# 
  3319  0215                     	;# 
  3320  0216                     	;# 
  3321  0216                     	;# 
  3322  0217                     	;# 
  3323  0217                     	;# 
  3324  0218                     	;# 
  3325  0218                     	;# 
  3326  0219                     	;# 
  3327  021A                     	;# 
  3328  021B                     	;# 
  3329  021B                     	;# 
  3330  021C                     	;# 
  3331  021C                     	;# 
  3332  021D                     	;# 
  3333  021D                     	;# 
  3334  021E                     	;# 
  3335  021F                     	;# 
  3336  028C                     	;# 
  3337  028C                     	;# 
  3338  028D                     	;# 
  3339  028D                     	;# 
  3340  028E                     	;# 
  3341  028F                     	;# 
  3342  0290                     	;# 
  3343  0290                     	;# 
  3344  0291                     	;# 
  3345  0292                     	;# 
  3346  0292                     	;# 
  3347  0293                     	;# 
  3348  0293                     	;# 
  3349  0294                     	;# 
  3350  0295                     	;# 
  3351  0296                     	;# 
  3352  0296                     	;# 
  3353  0297                     	;# 
  3354  0298                     	;# 
  3355  0298                     	;# 
  3356  0299                     	;# 
  3357  0299                     	;# 
  3358  029A                     	;# 
  3359  029B                     	;# 
  3360  029C                     	;# 
  3361  029C                     	;# 
  3362  029D                     	;# 
  3363  030C                     	;# 
  3364  030C                     	;# 
  3365  030D                     	;# 
  3366  030E                     	;# 
  3367  030F                     	;# 
  3368  0310                     	;# 
  3369  0310                     	;# 
  3370  0311                     	;# 
  3371  0312                     	;# 
  3372  0313                     	;# 
  3373  0314                     	;# 
  3374  0314                     	;# 
  3375  0315                     	;# 
  3376  0316                     	;# 
  3377  0317                     	;# 
  3378  0318                     	;# 
  3379  0318                     	;# 
  3380  0319                     	;# 
  3381  031A                     	;# 
  3382  031B                     	;# 
  3383  031C                     	;# 
  3384  031C                     	;# 
  3385  031D                     	;# 
  3386  031E                     	;# 
  3387  031F                     	;# 
  3388  038C                     	;# 
  3389  038C                     	;# 
  3390  038D                     	;# 
  3391  038E                     	;# 
  3392  0390                     	;# 
  3393  0390                     	;# 
  3394  0391                     	;# 
  3395  0392                     	;# 
  3396  040C                     	;# 
  3397  040D                     	;# 
  3398  040E                     	;# 
  3399  040F                     	;# 
  3400  0410                     	;# 
  3401  0411                     	;# 
  3402  0416                     	;# 
  3403  0416                     	;# 
  3404  0417                     	;# 
  3405  0418                     	;# 
  3406  0418                     	;# 
  3407  0419                     	;# 
  3408  041A                     	;# 
  3409  041A                     	;# 
  3410  041B                     	;# 
  3411  041C                     	;# 
  3412  041C                     	;# 
  3413  041D                     	;# 
  3414  041E                     	;# 
  3415  041F                     	;# 
  3416  048C                     	;# 
  3417  048C                     	;# 
  3418  048D                     	;# 
  3419  048E                     	;# 
  3420  048F                     	;# 
  3421  048F                     	;# 
  3422  0490                     	;# 
  3423  0491                     	;# 
  3424  0492                     	;# 
  3425  0492                     	;# 
  3426  0493                     	;# 
  3427  0494                     	;# 
  3428  0495                     	;# 
  3429  0495                     	;# 
  3430  0496                     	;# 
  3431  0497                     	;# 
  3432  0498                     	;# 
  3433  0499                     	;# 
  3434  049A                     	;# 
  3435  049B                     	;# 
  3436  049C                     	;# 
  3437  049D                     	;# 
  3438  050C                     	;# 
  3439  050C                     	;# 
  3440  050D                     	;# 
  3441  050E                     	;# 
  3442  050F                     	;# 
  3443  050F                     	;# 
  3444  0510                     	;# 
  3445  0511                     	;# 
  3446  0512                     	;# 
  3447  0512                     	;# 
  3448  0513                     	;# 
  3449  0514                     	;# 
  3450  0515                     	;# 
  3451  0515                     	;# 
  3452  0516                     	;# 
  3453  0517                     	;# 
  3454  0518                     	;# 
  3455  0519                     	;# 
  3456  051A                     	;# 
  3457  051B                     	;# 
  3458  051C                     	;# 
  3459  051D                     	;# 
  3460  058C                     	;# 
  3461  058C                     	;# 
  3462  058D                     	;# 
  3463  058E                     	;# 
  3464  058F                     	;# 
  3465  058F                     	;# 
  3466  0590                     	;# 
  3467  0591                     	;# 
  3468  0592                     	;# 
  3469  0593                     	;# 
  3470  060C                     	;# 
  3471  060D                     	;# 
  3472  060E                     	;# 
  3473  060F                     	;# 
  3474  0610                     	;# 
  3475  0611                     	;# 
  3476  0612                     	;# 
  3477  0613                     	;# 
  3478  0614                     	;# 
  3479  0616                     	;# 
  3480  0617                     	;# 
  3481  0618                     	;# 
  3482  0619                     	;# 
  3483  061A                     	;# 
  3484  061B                     	;# 
  3485  061C                     	;# 
  3486  061D                     	;# 
  3487  061E                     	;# 
  3488  068C                     	;# 
  3489  068D                     	;# 
  3490  068E                     	;# 
  3491  068F                     	;# 
  3492  0690                     	;# 
  3493  0691                     	;# 
  3494  0692                     	;# 
  3495  0693                     	;# 
  3496  0694                     	;# 
  3497  070C                     	;# 
  3498  070D                     	;# 
  3499  070E                     	;# 
  3500  070F                     	;# 
  3501  0710                     	;# 
  3502  0711                     	;# 
  3503  0712                     	;# 
  3504  0713                     	;# 
  3505  0714                     	;# 
  3506  0716                     	;# 
  3507  0717                     	;# 
  3508  0718                     	;# 
  3509  0719                     	;# 
  3510  071A                     	;# 
  3511  071B                     	;# 
  3512  071C                     	;# 
  3513  071D                     	;# 
  3514  071E                     	;# 
  3515  0796                     	;# 
  3516  0797                     	;# 
  3517  0798                     	;# 
  3518  0799                     	;# 
  3519  079A                     	;# 
  3520  079B                     	;# 
  3521  080C                     	;# 
  3522  080D                     	;# 
  3523  080E                     	;# 
  3524  080F                     	;# 
  3525  0810                     	;# 
  3526  0811                     	;# 
  3527  0813                     	;# 
  3528  0814                     	;# 
  3529  081A                     	;# 
  3530  081B                     	;# 
  3531  081C                     	;# 
  3532  081D                     	;# 
  3533  081E                     	;# 
  3534  081F                     	;# 
  3535  088C                     	;# 
  3536  088D                     	;# 
  3537  088E                     	;# 
  3538  088F                     	;# 
  3539  0890                     	;# 
  3540  0891                     	;# 
  3541  0892                     	;# 
  3542  0893                     	;# 
  3543  0895                     	;# 
  3544  0896                     	;# 
  3545  0897                     	;# 
  3546  0898                     	;# 
  3547  0899                     	;# 
  3548  089A                     	;# 
  3549  089B                     	;# 
  3550  090C                     	;# 
  3551  090E                     	;# 
  3552  090F                     	;# 
  3553  091F                     	;# 
  3554  091F                     	;# 
  3555  098F                     	;# 
  3556  098F                     	;# 
  3557  0990                     	;# 
  3558  0991                     	;# 
  3559  0992                     	;# 
  3560  0993                     	;# 
  3561  0994                     	;# 
  3562  0995                     	;# 
  3563  0996                     	;# 
  3564  0997                     	;# 
  3565  0E0F                     	;# 
  3566  0E10                     	;# 
  3567  0E11                     	;# 
  3568  0E12                     	;# 
  3569  0E13                     	;# 
  3570  0E14                     	;# 
  3571  0E15                     	;# 
  3572  0E16                     	;# 
  3573  0E17                     	;# 
  3574  0E18                     	;# 
  3575  0E19                     	;# 
  3576  0E1A                     	;# 
  3577  0E1B                     	;# 
  3578  0E1C                     	;# 
  3579  0E1D                     	;# 
  3580  0E1E                     	;# 
  3581  0E1F                     	;# 
  3582  0E20                     	;# 
  3583  0E21                     	;# 
  3584  0E22                     	;# 
  3585  0E23                     	;# 
  3586  0E24                     	;# 
  3587  0E25                     	;# 
  3588  0E26                     	;# 
  3589  0E27                     	;# 
  3590  0E28                     	;# 
  3591  0E29                     	;# 
  3592  0E2A                     	;# 
  3593  0E2B                     	;# 
  3594  0E2C                     	;# 
  3595  0E2D                     	;# 
  3596  0E2E                     	;# 
  3597  0E2F                     	;# 
  3598  0E30                     	;# 
  3599  0E31                     	;# 
  3600  0E32                     	;# 
  3601  0E33                     	;# 
  3602  0E34                     	;# 
  3603  0E35                     	;# 
  3604  0E36                     	;# 
  3605  0E37                     	;# 
  3606  0E8F                     	;# 
  3607  0E90                     	;# 
  3608  0E91                     	;# 
  3609  0E92                     	;# 
  3610  0E93                     	;# 
  3611  0E94                     	;# 
  3612  0E95                     	;# 
  3613  0E96                     	;# 
  3614  0E97                     	;# 
  3615  0E9C                     	;# 
  3616  0E9D                     	;# 
  3617  0E9E                     	;# 
  3618  0EA1                     	;# 
  3619  0EA2                     	;# 
  3620  0EA3                     	;# 
  3621  0EA4                     	;# 
  3622  0EA5                     	;# 
  3623  0EA9                     	;# 
  3624  0EAA                     	;# 
  3625  0EAB                     	;# 
  3626  0EAC                     	;# 
  3627  0EB1                     	;# 
  3628  0EB2                     	;# 
  3629  0EB3                     	;# 
  3630  0EB8                     	;# 
  3631  0EB9                     	;# 
  3632  0EBA                     	;# 
  3633  0EBB                     	;# 
  3634  0EBC                     	;# 
  3635  0EBD                     	;# 
  3636  0EBE                     	;# 
  3637  0EC3                     	;# 
  3638  0EC5                     	;# 
  3639  0EC6                     	;# 
  3640  0EC7                     	;# 
  3641  0EC8                     	;# 
  3642  0EC9                     	;# 
  3643  0ECA                     	;# 
  3644  0ECB                     	;# 
  3645  0ECC                     	;# 
  3646  0F10                     	;# 
  3647  0F11                     	;# 
  3648  0F12                     	;# 
  3649  0F13                     	;# 
  3650  0F14                     	;# 
  3651  0F15                     	;# 
  3652  0F16                     	;# 
  3653  0F17                     	;# 
  3654  0F18                     	;# 
  3655  0F19                     	;# 
  3656  0F1A                     	;# 
  3657  0F1B                     	;# 
  3658  0F1C                     	;# 
  3659  0F1D                     	;# 
  3660  0F1E                     	;# 
  3661  0F1F                     	;# 
  3662  0F20                     	;# 
  3663  0F21                     	;# 
  3664  0F22                     	;# 
  3665  0F23                     	;# 
  3666  0F24                     	;# 
  3667  0F25                     	;# 
  3668  0F26                     	;# 
  3669  0F27                     	;# 
  3670  0F38                     	;# 
  3671  0F39                     	;# 
  3672  0F3A                     	;# 
  3673  0F3B                     	;# 
  3674  0F3C                     	;# 
  3675  0F3D                     	;# 
  3676  0F3E                     	;# 
  3677  0F3F                     	;# 
  3678  0F40                     	;# 
  3679  0F41                     	;# 
  3680  0F43                     	;# 
  3681  0F44                     	;# 
  3682  0F45                     	;# 
  3683  0F46                     	;# 
  3684  0F47                     	;# 
  3685  0F48                     	;# 
  3686  0F49                     	;# 
  3687  0F4A                     	;# 
  3688  0F4B                     	;# 
  3689  0F4C                     	;# 
  3690  0F4E                     	;# 
  3691  0F4F                     	;# 
  3692  0F50                     	;# 
  3693  0F51                     	;# 
  3694  0F52                     	;# 
  3695  0F53                     	;# 
  3696  0F54                     	;# 
  3697  0F55                     	;# 
  3698  0F56                     	;# 
  3699  0F57                     	;# 
  3700  0F65                     	;# 
  3701  0F68                     	;# 
  3702  0F69                     	;# 
  3703  0F6A                     	;# 
  3704  0F6B                     	;# 
  3705  0FE4                     	;# 
  3706  0FE5                     	;# 
  3707  0FE6                     	;# 
  3708  0FE7                     	;# 
  3709  0FE8                     	;# 
  3710  0FE9                     	;# 
  3711  0FEA                     	;# 
  3712  0FEB                     	;# 
  3713  0FED                     	;# 
  3714  0FEE                     	;# 
  3715  0FEF                     	;# 
  3716                           
  3717                           	psect	nvBANK1
  3718  00D6                     __pnvBANK1:
  3719  00D6                     _EUSART_ErrorHandler:
  3720  00D6                     	ds	2
  3721  00D8                     _EUSART_OverrunErrorHandler:
  3722  00D8                     	ds	2
  3723  00DA                     _EUSART_FramingErrorHandler:
  3724  00DA                     	ds	2
  3725  00DC                     _EUSART_RxDefaultInterruptHandler:
  3726  00DC                     	ds	2
  3727  00DE                     _EUSART_TxDefaultInterruptHandler:
  3728  00DE                     	ds	2
  3729  00E0                     _eusartTxBufferRemaining:
  3730  00E0                     	ds	1
  3731  0016                     _LATAbits	set	22
  3732  000B                     _INTCONbits	set	11
  3733  0013                     _TRISC	set	19
  3734  0012                     _TRISB	set	18
  3735  0011                     _TRISA	set	17
  3736  0018                     _LATC	set	24
  3737  0017                     _LATB	set	23
  3738  0016                     _LATA	set	22
  3739  0094                     _ADCON1bits	set	148
  3740  008E                     _ADPREVL	set	142
  3741  008F                     _ADPREVH	set	143
  3742  0097                     _ADSTATbits	set	151
  3743  0090                     _ADACCL	set	144
  3744  0091                     _ADACCH	set	145
  3745  0095                     _ADCON2bits	set	149
  3746  0096                     _ADCON3bits	set	150
  3747  008C                     _ADRESL	set	140
  3748  008D                     _ADRESH	set	141
  3749  0093                     _ADCON0bits	set	147
  3750  009D                     _ADACQ	set	157
  3751  0093                     _ADCON0	set	147
  3752  0098                     _ADCLK	set	152
  3753  0099                     _ADACT	set	153
  3754  009A                     _ADREF	set	154
  3755  0097                     _ADSTAT	set	151
  3756  0096                     _ADCON3	set	150
  3757  0095                     _ADCON2	set	149
  3758  0094                     _ADCON1	set	148
  3759  009C                     _ADPRE	set	156
  3760  009B                     _ADCAP	set	155
  3761  009E                     _ADPCH	set	158
  3762  0116                     _ADERRL	set	278
  3763  0117                     _ADERRH	set	279
  3764  0114                     _ADFLTRL	set	276
  3765  0115                     _ADFLTRH	set	277
  3766  010C                     _ADCNT	set	268
  3767  010D                     _ADRPT	set	269
  3768  0113                     _ADSTPTH	set	275
  3769  0112                     _ADSTPTL	set	274
  3770  0111                     _ADUTHH	set	273
  3771  0110                     _ADUTHL	set	272
  3772  010F                     _ADLTHH	set	271
  3773  010E                     _ADLTHL	set	270
  3774  0119                     _RC1REG	set	281
  3775  011D                     _RC1STAbits	set	285
  3776  011A                     _TX1REG	set	282
  3777  011E                     _TX1STAbits	set	286
  3778  011C                     _SP1BRGH	set	284
  3779  011B                     _SP1BRGL	set	283
  3780  011E                     _TX1STA	set	286
  3781  011D                     _RC1STA	set	285
  3782  011F                     _BAUD1CON	set	287
  3783  070F                     _PIR3bits	set	1807
  3784  0719                     _PIE3bits	set	1817
  3785  079B                     _PMD5	set	1947
  3786  079A                     _PMD4	set	1946
  3787  0799                     _PMD3	set	1945
  3788  0798                     _PMD2	set	1944
  3789  0797                     _PMD1	set	1943
  3790  0796                     _PMD0	set	1942
  3791  0892                     _OSCTUNE	set	2194
  3792  0893                     _OSCFRQ	set	2195
  3793  0891                     _OSCEN	set	2193
  3794  088F                     _OSCCON3	set	2191
  3795  088D                     _OSCCON1	set	2189
  3796  0ECB                     _RXPPS	set	3787
  3797  0F20                     _RC0PPS	set	3872
  3798  0F68                     _INLVLE	set	3944
  3799  0F52                     _INLVLC	set	3922
  3800  0F47                     _INLVLB	set	3911
  3801  0F3C                     _INLVLA	set	3900
  3802  0F51                     _SLRCONC	set	3921
  3803  0F46                     _SLRCONB	set	3910
  3804  0F3B                     _SLRCONA	set	3899
  3805  0F50                     _ODCONC	set	3920
  3806  0F45                     _ODCONB	set	3909
  3807  0F3A                     _ODCONA	set	3898
  3808  0F4F                     _WPUC	set	3919
  3809  0F39                     _WPUA	set	3897
  3810  0F44                     _WPUB	set	3908
  3811  0F65                     _WPUE	set	3941
  3812  0F38                     _ANSELA	set	3896
  3813  0F43                     _ANSELB	set	3907
  3814  0F4E                     _ANSELC	set	3918
  3815                           
  3816                           	psect	stringtext1
  3817  071C                     __pstringtext1:
  3818  071C                     STR_5:
  3819  071C  3441               	retlw	65	;'A'
  3820  071D  3444               	retlw	68	;'D'
  3821  071E  3443               	retlw	67	;'C'
  3822  071F  343A               	retlw	58	;':'
  3823  0720  3420               	retlw	32	;' '
  3824  0721  3425               	retlw	37	;'%'
  3825  0722  3475               	retlw	117	;'u'
  3826  0723  340A               	retlw	10
  3827  0724  3400               	retlw	0
  3828                           
  3829                           	psect	stringtext2
  3830  0764                     __pstringtext2:
  3831  0764                     STR_2:
  3832  0764  346C               	retlw	108	;'l'
  3833  0765  3465               	retlw	101	;'e'
  3834  0766  3464               	retlw	100	;'d'
  3835  0767  3431               	retlw	49	;'1'
  3836  0768  346F               	retlw	111	;'o'
  3837  0769  3466               	retlw	102	;'f'
  3838  076A  3466               	retlw	102	;'f'
  3839  076B  3400               	retlw	0
  3840                           
  3841                           	psect	stringtext3
  3842  077C                     __pstringtext3:
  3843  077C                     STR_1:
  3844  077C  346C               	retlw	108	;'l'
  3845  077D  3465               	retlw	101	;'e'
  3846  077E  3464               	retlw	100	;'d'
  3847  077F  3431               	retlw	49	;'1'
  3848  0780  346F               	retlw	111	;'o'
  3849  0781  346E               	retlw	110	;'n'
  3850  0782  3400               	retlw	0
  3851                           
  3852                           	psect	stringtext4
  3853  0783                     __pstringtext4:
  3854  0783                     STR_4:
  3855  0783  346C               	retlw	108	;'l'
  3856  0784  3465               	retlw	101	;'e'
  3857  0785  3464               	retlw	100	;'d'
  3858  0786  3433               	retlw	51	;'3'
  3859  0787  346F               	retlw	111	;'o'
  3860  0788  346E               	retlw	110	;'n'
  3861  0789  3400               	retlw	0
  3862                           
  3863                           	psect	stringtext5
  3864  0000                     __pstringtext5:
  3865  0764                     
  3866                           	psect	cinit
  3867  002D                     start_initialization:	
  3868                           ; #config settings
  3869                           
  3870  002D                     __initialization:
  3871                           
  3872                           ; Clear objects allocated to BANK0
  3873  002D  0020               	movlb	0	; select bank0
  3874  002E  01E8               	clrf	__pbssBANK0& (0+127)
  3875  002F  01E9               	clrf	(__pbssBANK0+1)& (0+127)
  3876  0030  01EA               	clrf	(__pbssBANK0+2)& (0+127)
  3877  0031  01EB               	clrf	(__pbssBANK0+3)& (0+127)
  3878                           
  3879                           ; Clear objects allocated to BANK1
  3880  0032  30A0               	movlw	low __pbssBANK1
  3881  0033  0084               	movwf	4
  3882  0034  3000               	movlw	high __pbssBANK1
  3883  0035  0085               	movwf	5
  3884  0036  3026               	movlw	38
  3885  0037  3187  2798  3180   	fcall	clear_ram0
  3886                           
  3887                           ; Clear objects allocated to BANK2
  3888  003A  3020               	movlw	low __pbssBANK2
  3889  003B  0084               	movwf	4
  3890  003C  3001               	movlw	high __pbssBANK2
  3891  003D  0085               	movwf	5
  3892  003E  3034               	movlw	52
  3893  003F  3187  2798  3180   	fcall	clear_ram0
  3894  0042                     end_of_initialization:	
  3895                           ;End of C runtime variable initialization code
  3896                           
  3897  0042                     __end_of__initialization:
  3898  0042  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3899  0043  0020               	movlb	0
  3900  0044  3185  2D11         	ljmp	_main	;jump to C main() function
  3901                           
  3902                           	psect	bssBANK0
  3903  0068                     __pbssBANK0:
  3904  0068                     _eusartRxTail:
  3905  0068                     	ds	1
  3906  0069                     _eusartRxHead:
  3907  0069                     	ds	1
  3908  006A                     _eusartTxTail:
  3909  006A                     	ds	1
  3910  006B                     _eusartTxHead:
  3911  006B                     	ds	1
  3912                           
  3913                           	psect	bssBANK1
  3914  00A0                     __pbssBANK1:
  3915  00A0                     _eusartRxStatusBuffer:
  3916  00A0                     	ds	8
  3917  00A8                     _eusartRxBuffer:
  3918  00A8                     	ds	8
  3919  00B0                     _eusartTxBuffer:
  3920  00B0                     	ds	8
  3921  00B8                     _nout:
  3922  00B8                     	ds	2
  3923  00BA                     _width:
  3924  00BA                     	ds	2
  3925  00BC                     _prec:
  3926  00BC                     	ds	2
  3927  00BE                     _flags:
  3928  00BE                     	ds	2
  3929  00C0                     _leer_adc:
  3930  00C0                     	ds	2
  3931  00C2                     _contador_rx:
  3932  00C2                     	ds	1
  3933  00C3                     _caracter_rx:
  3934  00C3                     	ds	1
  3935  00C4                     _eusartRxLastError:
  3936  00C4                     	ds	1
  3937  00C5                     _eusartRxCount:
  3938  00C5                     	ds	1
  3939                           
  3940                           	psect	bssBANK2
  3941  0120                     __pbssBANK2:
  3942  0120                     _dbuf:
  3943  0120                     	ds	32
  3944  0140                     _buffer_rx:
  3945  0140                     	ds	20
  3946                           
  3947                           	psect	clrtext
  3948  0798                     clear_ram0:	
  3949                           ;	Called with FSR0 containing the base address, and
  3950                           ;	WREG with the size to clear
  3951                           
  3952  0798  0064               	clrwdt	;clear the watchdog before getting into this loop
  3953  0799                     clrloop0:
  3954  0799  0180               	clrf	0	;clear RAM location pointed to by FSR
  3955  079A  3101               	addfsr 0,1
  3956  079B  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3957  079C  2F99               	goto	clrloop0	;have we reached the end yet?
  3958  079D  3400               	retlw	0	;all done for this memory range, return
  3959                           
  3960                           	psect	cstackBANK1
  3961  00C6                     __pcstackBANK1:
  3962  00C6                     ?_vfprintf:
  3963  00C6                     vfprintf@fmt:	
  3964                           ; 2 bytes @ 0x0
  3965                           
  3966                           
  3967                           ; 2 bytes @ 0x0
  3968  00C6                     	ds	2
  3969  00C8                     vfprintf@ap:
  3970                           
  3971                           ; 1 bytes @ 0x2
  3972  00C8                     	ds	1
  3973  00C9                     ??_vfprintf:
  3974                           
  3975                           ; 1 bytes @ 0x3
  3976  00C9                     	ds	2
  3977  00CB                     vfprintf@fp:
  3978                           
  3979                           ; 1 bytes @ 0x5
  3980  00CB                     	ds	1
  3981  00CC                     vfprintf@cfmt:
  3982                           
  3983                           ; 2 bytes @ 0x6
  3984  00CC                     	ds	2
  3985  00CE                     ?_printf:
  3986  00CE                     printf@fmt:	
  3987                           ; 2 bytes @ 0x8
  3988                           
  3989                           
  3990                           ; 2 bytes @ 0x8
  3991  00CE                     	ds	4
  3992  00D2                     ??_printf:
  3993                           
  3994                           ; 1 bytes @ 0xC
  3995  00D2                     	ds	1
  3996  00D3                     printf@ap:
  3997                           
  3998                           ; 1 bytes @ 0xD
  3999  00D3                     	ds	1
  4000  00D4                     ??_main:
  4001                           
  4002                           ; 1 bytes @ 0xE
  4003  00D4                     	ds	2
  4004                           
  4005                           	psect	cstackCOMMON
  4006  0070                     __pcstackCOMMON:
  4007  0070                     ?_PMD_Initialize:
  4008  0070                     ?_OSCILLATOR_Initialize:	
  4009                           ; 1 bytes @ 0x0
  4010                           
  4011  0070                     ?_ADCC_Initialize:	
  4012                           ; 1 bytes @ 0x0
  4013                           
  4014  0070                     ?_EUSART_Initialize:	
  4015                           ; 1 bytes @ 0x0
  4016                           
  4017  0070                     ?_EUSART_Receive_ISR:	
  4018                           ; 1 bytes @ 0x0
  4019                           
  4020  0070                     ?_EUSART_Transmit_ISR:	
  4021                           ; 1 bytes @ 0x0
  4022                           
  4023  0070                     ??_EUSART_Transmit_ISR:	
  4024                           ; 1 bytes @ 0x0
  4025                           
  4026  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  4027                           ; 1 bytes @ 0x0
  4028                           
  4029  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  4030                           ; 1 bytes @ 0x0
  4031                           
  4032  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  4033                           ; 1 bytes @ 0x0
  4034                           
  4035  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  4036                           ; 1 bytes @ 0x0
  4037                           
  4038  0070                     ?_EUSART_DefaultErrorHandler:	
  4039                           ; 1 bytes @ 0x0
  4040                           
  4041  0070                     ?_EUSART_RxDataHandler:	
  4042                           ; 1 bytes @ 0x0
  4043                           
  4044  0070                     ??_EUSART_RxDataHandler:	
  4045                           ; 1 bytes @ 0x0
  4046                           
  4047  0070                     ?_strchr:	
  4048                           ; 1 bytes @ 0x0
  4049                           
  4050  0070                     ?_PIN_MANAGER_Initialize:	
  4051                           ; 1 bytes @ 0x0
  4052                           
  4053  0070                     ?_INTERRUPT_InterruptManager:	
  4054                           ; 1 bytes @ 0x0
  4055                           
  4056  0070                     ?_SYSTEM_Initialize:	
  4057                           ; 1 bytes @ 0x0
  4058                           
  4059  0070                     ?_EUSART_Read:	
  4060                           ; 1 bytes @ 0x0
  4061                           
  4062  0070                     ??_EUSART_Read:	
  4063                           ; 1 bytes @ 0x0
  4064                           
  4065  0070                     ?_EUSART_Write:	
  4066                           ; 1 bytes @ 0x0
  4067                           
  4068  0070                     ?_putch:	
  4069                           ; 1 bytes @ 0x0
  4070                           
  4071  0070                     ?_ADCC_StartConversion:	
  4072                           ; 1 bytes @ 0x0
  4073                           
  4074  0070                     ?_ADCC_IsConversionDone:	
  4075                           ; 1 bytes @ 0x0
  4076                           
  4077  0070                     ?_main:	
  4078                           ; 1 bytes @ 0x0
  4079                           
  4080  0070                     ?_strcmp:	
  4081                           ; 1 bytes @ 0x0
  4082                           
  4083  0070                     ?_strncmp:	
  4084                           ; 2 bytes @ 0x0
  4085                           
  4086  0070                     ?i1_strlen:	
  4087                           ; 2 bytes @ 0x0
  4088                           
  4089  0070                     strcmp@r:	
  4090                           ; 2 bytes @ 0x0
  4091                           
  4092  0070                     strchr@c:	
  4093                           ; 2 bytes @ 0x0
  4094                           
  4095  0070                     strncmp@_r:	
  4096                           ; 2 bytes @ 0x0
  4097                           
  4098  0070                     i1strlen@s:	
  4099                           ; 2 bytes @ 0x0
  4100                           
  4101                           
  4102                           ; 2 bytes @ 0x0
  4103  0070                     	ds	1
  4104  0071                     ??_EUSART_DefaultErrorHandler:
  4105  0071                     EUSART_Read@readValue:	
  4106                           ; 1 bytes @ 0x1
  4107                           
  4108                           
  4109                           ; 1 bytes @ 0x1
  4110  0071                     	ds	1
  4111  0072                     ??_strcmp:
  4112  0072                     ??_strchr:	
  4113                           ; 1 bytes @ 0x2
  4114                           
  4115  0072                     ??i1_strlen:	
  4116                           ; 1 bytes @ 0x2
  4117                           
  4118  0072                     strchr@s:	
  4119                           ; 1 bytes @ 0x2
  4120                           
  4121  0072                     strncmp@n:	
  4122                           ; 1 bytes @ 0x2
  4123                           
  4124                           
  4125                           ; 2 bytes @ 0x2
  4126  0072                     	ds	1
  4127  0073                     strcmp@l:
  4128  0073                     i1strlen@a:	
  4129                           ; 1 bytes @ 0x3
  4130                           
  4131                           
  4132                           ; 2 bytes @ 0x3
  4133  0073                     	ds	1
  4134  0074                     ??_strncmp:
  4135                           
  4136                           ; 1 bytes @ 0x4
  4137  0074                     	ds	1
  4138  0075                     strncmp@_l:
  4139                           
  4140                           ; 1 bytes @ 0x5
  4141  0075                     	ds	1
  4142  0076                     strncmp@r:
  4143                           
  4144                           ; 2 bytes @ 0x6
  4145  0076                     	ds	2
  4146  0078                     strncmp@l:
  4147                           
  4148                           ; 1 bytes @ 0x8
  4149  0078                     	ds	1
  4150  0079                     ?_strstr:
  4151  0079                     strstr@n:	
  4152                           ; 1 bytes @ 0x9
  4153                           
  4154                           
  4155                           ; 2 bytes @ 0x9
  4156  0079                     	ds	2
  4157  007B                     ??_strstr:
  4158                           
  4159                           ; 1 bytes @ 0xB
  4160  007B                     	ds	3
  4161  007E                     ??_INTERRUPT_InterruptManager:
  4162                           
  4163                           	psect	cstackBANK0
  4164  0020                     __pcstackBANK0:	
  4165                           ; 1 bytes @ 0xE
  4166                           
  4167  0020                     strstr@nl:
  4168                           
  4169                           ; 2 bytes @ 0x0
  4170  0020                     	ds	2
  4171  0022                     strstr@h:
  4172                           
  4173                           ; 1 bytes @ 0x2
  4174  0022                     	ds	1
  4175  0023                     ??_EUSART_Receive_ISR:
  4176                           
  4177                           ; 1 bytes @ 0x3
  4178  0023                     	ds	1
  4179  0024                     ??_PMD_Initialize:
  4180  0024                     ??_OSCILLATOR_Initialize:	
  4181                           ; 1 bytes @ 0x4
  4182                           
  4183  0024                     ??_ADCC_Initialize:	
  4184                           ; 1 bytes @ 0x4
  4185                           
  4186  0024                     ?_EUSART_SetRxInterruptHandler:	
  4187                           ; 1 bytes @ 0x4
  4188                           
  4189  0024                     ?_EUSART_SetTxInterruptHandler:	
  4190                           ; 1 bytes @ 0x4
  4191                           
  4192  0024                     ?_EUSART_SetFramingErrorHandler:	
  4193                           ; 1 bytes @ 0x4
  4194                           
  4195  0024                     ?_EUSART_SetOverrunErrorHandler:	
  4196                           ; 1 bytes @ 0x4
  4197                           
  4198  0024                     ?_EUSART_SetErrorHandler:	
  4199                           ; 1 bytes @ 0x4
  4200                           
  4201  0024                     ??_PIN_MANAGER_Initialize:	
  4202                           ; 1 bytes @ 0x4
  4203                           
  4204  0024                     ??_EUSART_Write:	
  4205                           ; 1 bytes @ 0x4
  4206                           
  4207  0024                     ??_ADCC_StartConversion:	
  4208                           ; 1 bytes @ 0x4
  4209                           
  4210  0024                     ??_ADCC_IsConversionDone:	
  4211                           ; 1 bytes @ 0x4
  4212                           
  4213  0024                     ?_strlen:	
  4214                           ; 1 bytes @ 0x4
  4215                           
  4216  0024                     ?_ADCC_GetConversionResult:	
  4217                           ; 2 bytes @ 0x4
  4218                           
  4219  0024                     ?___lodiv:	
  4220                           ; 2 bytes @ 0x4
  4221                           
  4222  0024                     ?___lomod:	
  4223                           ; 8 bytes @ 0x4
  4224                           
  4225  0024                     ADCC_StartConversion@channel:	
  4226                           ; 8 bytes @ 0x4
  4227                           
  4228  0024                     EUSART_SetFramingErrorHandler@interruptHandler:	
  4229                           ; 1 bytes @ 0x4
  4230                           
  4231  0024                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  4232                           ; 2 bytes @ 0x4
  4233                           
  4234  0024                     EUSART_SetErrorHandler@interruptHandler:	
  4235                           ; 2 bytes @ 0x4
  4236                           
  4237  0024                     EUSART_SetTxInterruptHandler@interruptHandler:	
  4238                           ; 2 bytes @ 0x4
  4239                           
  4240  0024                     EUSART_SetRxInterruptHandler@interruptHandler:	
  4241                           ; 2 bytes @ 0x4
  4242                           
  4243  0024                     strlen@s:	
  4244                           ; 2 bytes @ 0x4
  4245                           
  4246  0024                     ___lodiv@divisor:	
  4247                           ; 2 bytes @ 0x4
  4248                           
  4249  0024                     ___lomod@divisor:	
  4250                           ; 8 bytes @ 0x4
  4251                           
  4252                           
  4253                           ; 8 bytes @ 0x4
  4254  0024                     	ds	1
  4255  0025                     EUSART_Write@txData:
  4256                           
  4257                           ; 1 bytes @ 0x5
  4258  0025                     	ds	1
  4259  0026                     ??_EUSART_Initialize:
  4260  0026                     ??_EUSART_SetRxInterruptHandler:	
  4261                           ; 1 bytes @ 0x6
  4262                           
  4263  0026                     ??_EUSART_SetTxInterruptHandler:	
  4264                           ; 1 bytes @ 0x6
  4265                           
  4266  0026                     ??_EUSART_SetFramingErrorHandler:	
  4267                           ; 1 bytes @ 0x6
  4268                           
  4269  0026                     ??_EUSART_SetOverrunErrorHandler:	
  4270                           ; 1 bytes @ 0x6
  4271                           
  4272  0026                     ??_EUSART_SetErrorHandler:	
  4273                           ; 1 bytes @ 0x6
  4274                           
  4275  0026                     ??_strlen:	
  4276                           ; 1 bytes @ 0x6
  4277                           
  4278  0026                     ??_putch:	
  4279                           ; 1 bytes @ 0x6
  4280                           
  4281  0026                     ??_ADCC_GetConversionResult:	
  4282                           ; 1 bytes @ 0x6
  4283                           
  4284  0026                     putch@txData:	
  4285                           ; 1 bytes @ 0x6
  4286                           
  4287                           
  4288                           ; 1 bytes @ 0x6
  4289  0026                     	ds	1
  4290  0027                     ??_SYSTEM_Initialize:
  4291  0027                     ?_fputc:	
  4292                           ; 1 bytes @ 0x7
  4293                           
  4294  0027                     fputc@c:	
  4295                           ; 2 bytes @ 0x7
  4296                           
  4297  0027                     strlen@a:	
  4298                           ; 2 bytes @ 0x7
  4299                           
  4300                           
  4301                           ; 2 bytes @ 0x7
  4302  0027                     	ds	2
  4303  0029                     fputc@fp:
  4304                           
  4305                           ; 1 bytes @ 0x9
  4306  0029                     	ds	1
  4307  002A                     ??_fputc:
  4308                           
  4309                           ; 1 bytes @ 0xA
  4310  002A                     	ds	2
  4311  002C                     ___lodiv@dividend:
  4312  002C                     ___lomod@dividend:	
  4313                           ; 8 bytes @ 0xC
  4314                           
  4315                           
  4316                           ; 8 bytes @ 0xC
  4317  002C                     	ds	3
  4318  002F                     ?_fputs:
  4319  002F                     fputs@fp:	
  4320                           ; 2 bytes @ 0xF
  4321                           
  4322                           
  4323                           ; 1 bytes @ 0xF
  4324  002F                     	ds	1
  4325  0030                     ??_fputs:
  4326                           
  4327                           ; 1 bytes @ 0x10
  4328  0030                     	ds	3
  4329  0033                     fputs@c:
  4330                           
  4331                           ; 1 bytes @ 0x13
  4332  0033                     	ds	1
  4333  0034                     ??___lodiv:
  4334  0034                     ??___lomod:	
  4335                           ; 1 bytes @ 0x14
  4336                           
  4337  0034                     fputs@i:	
  4338                           ; 1 bytes @ 0x14
  4339                           
  4340                           
  4341                           ; 2 bytes @ 0x14
  4342  0034                     	ds	1
  4343  0035                     ___lomod@counter:
  4344  0035                     ___lodiv@quotient:	
  4345                           ; 1 bytes @ 0x15
  4346                           
  4347                           
  4348                           ; 8 bytes @ 0x15
  4349  0035                     	ds	1
  4350  0036                     fputs@s:
  4351                           
  4352                           ; 1 bytes @ 0x16
  4353  0036                     	ds	1
  4354  0037                     ?_pad:
  4355  0037                     pad@buf:	
  4356                           ; 2 bytes @ 0x17
  4357                           
  4358                           
  4359                           ; 1 bytes @ 0x17
  4360  0037                     	ds	1
  4361  0038                     pad@p:
  4362                           
  4363                           ; 2 bytes @ 0x18
  4364  0038                     	ds	2
  4365  003A                     ??_pad:
  4366                           
  4367                           ; 1 bytes @ 0x1A
  4368  003A                     	ds	1
  4369  003B                     pad@i:
  4370                           
  4371                           ; 2 bytes @ 0x1B
  4372  003B                     	ds	2
  4373  003D                     ___lodiv@counter:
  4374  003D                     pad@w:	
  4375                           ; 1 bytes @ 0x1D
  4376                           
  4377                           
  4378                           ; 2 bytes @ 0x1D
  4379  003D                     	ds	2
  4380  003F                     pad@fp:
  4381                           
  4382                           ; 1 bytes @ 0x1F
  4383  003F                     	ds	1
  4384  0040                     ?_utoa:
  4385  0040                     utoa@d:	
  4386                           ; 2 bytes @ 0x20
  4387                           
  4388                           
  4389                           ; 8 bytes @ 0x20
  4390  0040                     	ds	8
  4391  0048                     ??_utoa:
  4392                           
  4393                           ; 1 bytes @ 0x28
  4394  0048                     	ds	1
  4395  0049                     utoa@p:
  4396                           
  4397                           ; 2 bytes @ 0x29
  4398  0049                     	ds	2
  4399  004B                     utoa@fp:
  4400                           
  4401                           ; 1 bytes @ 0x2B
  4402  004B                     	ds	1
  4403  004C                     utoa@w:
  4404                           
  4405                           ; 2 bytes @ 0x2C
  4406  004C                     	ds	2
  4407  004E                     utoa@n:
  4408                           
  4409                           ; 8 bytes @ 0x2E
  4410  004E                     	ds	8
  4411  0056                     utoa@i:
  4412                           
  4413                           ; 2 bytes @ 0x36
  4414  0056                     	ds	2
  4415  0058                     ?_vfpfcnvrt:
  4416  0058                     vfpfcnvrt@fmt:	
  4417                           ; 2 bytes @ 0x38
  4418                           
  4419                           
  4420                           ; 1 bytes @ 0x38
  4421  0058                     	ds	1
  4422  0059                     vfpfcnvrt@ap:
  4423                           
  4424                           ; 1 bytes @ 0x39
  4425  0059                     	ds	1
  4426  005A                     ??_vfpfcnvrt:
  4427                           
  4428                           ; 1 bytes @ 0x3A
  4429  005A                     	ds	5
  4430  005F                     vfpfcnvrt@llu:
  4431                           
  4432                           ; 8 bytes @ 0x3F
  4433  005F                     	ds	8
  4434  0067                     vfpfcnvrt@fp:
  4435                           
  4436                           ; 1 bytes @ 0x47
  4437  0067                     	ds	1
  4438                           
  4439                           	psect	maintext
  4440  0511                     __pmaintext:	
  4441 ;;
  4442 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4443 ;;
  4444 ;; *************** function _main *****************
  4445 ;; Defined at:
  4446 ;;		line 7 in file "main.c"
  4447 ;; Parameters:    Size  Location     Type
  4448 ;;		None
  4449 ;; Auto vars:     Size  Location     Type
  4450 ;;		None
  4451 ;; Return value:  Size  Location     Type
  4452 ;;                  1    wreg      void 
  4453 ;; Registers used:
  4454 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4455 ;; Tracked objects:
  4456 ;;		On entry : B1F/0
  4457 ;;		On exit  : 0/0
  4458 ;;		Unchanged: 0/0
  4459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4462 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4463 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4464 ;;Total ram usage:        2 bytes
  4465 ;; Hardware stack levels required when called: 13
  4466 ;; This function calls:
  4467 ;;		_ADCC_GetConversionResult
  4468 ;;		_ADCC_IsConversionDone
  4469 ;;		_ADCC_StartConversion
  4470 ;;		_SYSTEM_Initialize
  4471 ;;		_printf
  4472 ;; This function is called by:
  4473 ;;		Startup code after reset
  4474 ;; This function uses a non-reentrant model
  4475 ;;
  4476                           
  4477  0511                     _main:	
  4478                           ;psect for function _main
  4479                           
  4480  0511                     l2353:	
  4481                           ;incstack = 0
  4482                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4483                           
  4484                           
  4485                           ;main.c: 10:     SYSTEM_Initialize();
  4486  0511  3187  270C  3185   	fcall	_SYSTEM_Initialize
  4487  0514                     l2355:
  4488                           
  4489                           ;main.c: 16:     (INTCONbits.GIE = 1);
  4490  0514  178B               	bsf	11,7	;volatile
  4491  0515                     l2357:
  4492                           
  4493                           ;main.c: 19:     (INTCONbits.PEIE = 1);
  4494  0515  170B               	bsf	11,6	;volatile
  4495  0516                     l462:	
  4496                           ;main.c: 43:     while (1)
  4497                           
  4498                           
  4499                           ;main.c: 44:     {;main.c: 45:         ADCC_StartConversion(POT);
  4500  0516  3004               	movlw	4
  4501  0517  3187  2774  3185   	fcall	_ADCC_StartConversion
  4502  051A                     l2359:	
  4503                           ;main.c: 46:         while ( ADCC_IsConversionDone() == 0 );
  4504                           
  4505  051A  3187  2791  3185   	fcall	_ADCC_IsConversionDone
  4506  051D  3A00               	xorlw	0
  4507  051E  1903               	skipnz
  4508  051F  2D21               	goto	u1331
  4509  0520  2D22               	goto	u1330
  4510  0521                     u1331:
  4511  0521  2D1A               	goto	l2359
  4512  0522                     u1330:
  4513  0522                     l2361:
  4514                           
  4515                           ;main.c: 47:         leer_adc = ADCC_GetConversionResult();
  4516  0522  3187  275B  3185   	fcall	_ADCC_GetConversionResult
  4517  0525  0020               	movlb	0	; select bank0
  4518  0526  0825               	movf	?_ADCC_GetConversionResult+1,w
  4519  0527  0021               	movlb	1	; select bank1
  4520  0528  00C1               	movwf	(_leer_adc+1)^(0+128)
  4521  0529  0020               	movlb	0	; select bank0
  4522  052A  0824               	movf	?_ADCC_GetConversionResult,w
  4523  052B  0021               	movlb	1	; select bank1
  4524  052C  00C0               	movwf	_leer_adc^(0+128)
  4525  052D                     l2363:
  4526                           
  4527                           ;main.c: 51:         printf("ADC: %u\n",leer_adc);
  4528  052D  301C               	movlw	low (STR_5| (0+32768))
  4529  052E  00CE               	movwf	printf@fmt^(0+128)
  4530  052F  3087               	movlw	high (STR_5| (0+32768))
  4531  0530  00CF               	movwf	(printf@fmt^(0+128)+1)
  4532  0531  0841               	movf	(_leer_adc+1)^(0+128),w
  4533  0532  00D1               	movwf	((?_printf+1)^(0+128)+2)
  4534  0533  0840               	movf	_leer_adc^(0+128),w
  4535  0534  00D0               	movwf	(?_printf^(0+128)+2)
  4536  0535  3186  26FA  3185   	fcall	_printf
  4537  0538                     l2365:
  4538                           
  4539                           ;main.c: 52:         _delay((unsigned long)((500)*(8000000/4000.0)));
  4540  0538  3006               	movlw	6
  4541  0539  0021               	movlb	1	; select bank1
  4542  053A  00D5               	movwf	(??_main^(0+128)+1)
  4543  053B  3013               	movlw	19
  4544  053C  00D4               	movwf	??_main^(0+128)
  4545  053D  30AD               	movlw	173
  4546  053E                     u1347:
  4547  053E  0B89               	decfsz	9,f
  4548  053F  2D3E               	goto	u1347
  4549  0540  0BD4               	decfsz	??_main^(0+128),f
  4550  0541  2D3E               	goto	u1347
  4551  0542  0BD5               	decfsz	(??_main^(0+128)+1),f
  4552  0543  2D3E               	goto	u1347
  4553  0544  3200               	nop2
  4554  0545  2D16               	goto	l462
  4555  0546  3180  282B         	ljmp	start
  4556  0548                     __end_of_main:
  4557                           
  4558                           	psect	text1
  4559  06FA                     __ptext1:	
  4560 ;; *************** function _printf *****************
  4561 ;; Defined at:
  4562 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\printf.c"
  4563 ;; Parameters:    Size  Location     Type
  4564 ;;  fmt             2    8[BANK1 ] PTR const unsigned char 
  4565 ;;		 -> STR_5(9), 
  4566 ;; Auto vars:     Size  Location     Type
  4567 ;;  ret             2    0        int 
  4568 ;;  ap              1   13[BANK1 ] PTR void [1]
  4569 ;;		 -> ?_printf(2), 
  4570 ;; Return value:  Size  Location     Type
  4571 ;;                  2    8[BANK1 ] int 
  4572 ;; Registers used:
  4573 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4574 ;; Tracked objects:
  4575 ;;		On entry : 0/0
  4576 ;;		On exit  : 0/0
  4577 ;;		Unchanged: 0/0
  4578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4579 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4580 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4581 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4582 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  4583 ;;Total ram usage:        6 bytes
  4584 ;; Hardware stack levels used: 1
  4585 ;; Hardware stack levels required when called: 12
  4586 ;; This function calls:
  4587 ;;		_vfprintf
  4588 ;; This function is called by:
  4589 ;;		_main
  4590 ;; This function uses a non-reentrant model
  4591 ;;
  4592                           
  4593  06FA                     _printf:	
  4594                           ;psect for function _printf
  4595                           
  4596  06FA                     l2347:	
  4597                           ;incstack = 0
  4598                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4599                           
  4600  06FA  30D0               	movlw	(low ((?_printf| 0+2)))& (0+255)
  4601  06FB  0021               	movlb	1	; select bank1
  4602  06FC  00D2               	movwf	??_printf^(0+128)
  4603  06FD  0852               	movf	??_printf^(0+128),w
  4604  06FE  00D3               	movwf	printf@ap^(0+128)
  4605  06FF                     l2349:
  4606  06FF  084F               	movf	(printf@fmt+1)^(0+128),w
  4607  0700  00C7               	movwf	(vfprintf@fmt+1)^(0+128)
  4608  0701  084E               	movf	printf@fmt^(0+128),w
  4609  0702  00C6               	movwf	vfprintf@fmt^(0+128)
  4610  0703  30D3               	movlw	(low (printf@ap| 0))& (0+255)
  4611  0704  00D2               	movwf	??_printf^(0+128)
  4612  0705  0852               	movf	??_printf^(0+128),w
  4613  0706  00C8               	movwf	vfprintf@ap^(0+128)
  4614  0707  3000               	movlw	0
  4615  0708  3185  257A  3186   	fcall	_vfprintf
  4616  070B                     l1083:
  4617  070B  0008               	return
  4618  070C                     __end_of_printf:
  4619                           
  4620                           	psect	text2
  4621  057A                     __ptext2:	
  4622 ;; *************** function _vfprintf *****************
  4623 ;; Defined at:
  4624 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  4625 ;; Parameters:    Size  Location     Type
  4626 ;;  fp              1    wreg     PTR struct _IO_FILE
  4627 ;;		 -> NULL(0), 
  4628 ;;  fmt             2    0[BANK1 ] PTR const unsigned char 
  4629 ;;		 -> STR_5(9), 
  4630 ;;  ap              1    2[BANK1 ] PTR PTR void 
  4631 ;;		 -> printf@ap(1), 
  4632 ;; Auto vars:     Size  Location     Type
  4633 ;;  fp              1    5[BANK1 ] PTR struct _IO_FILE
  4634 ;;		 -> NULL(0), 
  4635 ;;  cfmt            2    6[BANK1 ] PTR unsigned char 
  4636 ;;		 -> STR_5(9), 
  4637 ;; Return value:  Size  Location     Type
  4638 ;;                  2    0[BANK1 ] int 
  4639 ;; Registers used:
  4640 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4641 ;; Tracked objects:
  4642 ;;		On entry : 0/0
  4643 ;;		On exit  : 0/0
  4644 ;;		Unchanged: 0/0
  4645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4646 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4647 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4648 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4649 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  4650 ;;Total ram usage:        8 bytes
  4651 ;; Hardware stack levels used: 1
  4652 ;; Hardware stack levels required when called: 11
  4653 ;; This function calls:
  4654 ;;		_vfpfcnvrt
  4655 ;; This function is called by:
  4656 ;;		_printf
  4657 ;; This function uses a non-reentrant model
  4658 ;;
  4659                           
  4660  057A                     _vfprintf:	
  4661                           ;psect for function _vfprintf
  4662                           
  4663                           
  4664                           ;incstack = 0
  4665                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4666                           ;vfprintf@fp stored from wreg
  4667  057A  0021               	movlb	1	; select bank1
  4668  057B  00CB               	movwf	vfprintf@fp^(0+128)
  4669  057C                     l2335:
  4670                           
  4671                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  4672  057C  0847               	movf	(vfprintf@fmt+1)^(0+128),w
  4673  057D  00CD               	movwf	(vfprintf@cfmt+1)^(0+128)
  4674  057E  0846               	movf	vfprintf@fmt^(0+128),w
  4675  057F  00CC               	movwf	vfprintf@cfmt^(0+128)
  4676  0580                     l2337:
  4677                           
  4678                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  4679  0580  01B8               	clrf	_nout^(0+128)
  4680  0581  01B9               	clrf	(_nout+1)^(0+128)
  4681                           
  4682                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4683  0582  2D9B               	goto	l2341
  4684  0583                     l2339:
  4685                           
  4686                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  4687  0583  30CC               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  4688  0584  00C9               	movwf	??_vfprintf^(0+128)
  4689  0585  0849               	movf	??_vfprintf^(0+128),w
  4690  0586  0020               	movlb	0	; select bank0
  4691  0587  00D8               	movwf	vfpfcnvrt@fmt
  4692  0588  0021               	movlb	1	; select bank1
  4693  0589  0848               	movf	vfprintf@ap^(0+128),w
  4694  058A  00CA               	movwf	(??_vfprintf+1)^(0+128)
  4695  058B  084A               	movf	(??_vfprintf+1)^(0+128),w
  4696  058C  0020               	movlb	0	; select bank0
  4697  058D  00D9               	movwf	vfpfcnvrt@ap
  4698  058E  0021               	movlb	1	; select bank1
  4699  058F  084B               	movf	vfprintf@fp^(0+128),w
  4700  0590  3181  2135  3185   	fcall	_vfpfcnvrt
  4701  0593  0020               	movlb	0	; select bank0
  4702  0594  0858               	movf	?_vfpfcnvrt,w
  4703  0595  0021               	movlb	1	; select bank1
  4704  0596  07B8               	addwf	_nout^(0+128),f
  4705  0597  0020               	movlb	0	; select bank0
  4706  0598  0859               	movf	?_vfpfcnvrt+1,w
  4707  0599  0021               	movlb	1	; select bank1
  4708  059A  3DB9               	addwfc	(_nout+1)^(0+128),f
  4709  059B                     l2341:
  4710                           
  4711                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4712  059B  084C               	movf	vfprintf@cfmt^(0+128),w
  4713  059C  0084               	movwf	4
  4714  059D  084D               	movf	(vfprintf@cfmt+1)^(0+128),w
  4715  059E  0085               	movwf	5
  4716  059F  0012               	moviw fsr0++
  4717  05A0  1D03               	btfss	3,2
  4718  05A1  2DA3               	goto	u1321
  4719  05A2  2DA4               	goto	u1320
  4720  05A3                     u1321:
  4721  05A3  2D83               	goto	l2339
  4722  05A4                     u1320:
  4723  05A4                     l2343:
  4724                           
  4725                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  4726  05A4  0839               	movf	(_nout+1)^(0+128),w
  4727  05A5  00C7               	movwf	(?_vfprintf+1)^(0+128)
  4728  05A6  0838               	movf	_nout^(0+128),w
  4729  05A7  00C6               	movwf	?_vfprintf^(0+128)
  4730  05A8                     l1140:
  4731  05A8  0008               	return
  4732  05A9                     __end_of_vfprintf:
  4733                           
  4734                           	psect	text3
  4735  0135                     __ptext3:	
  4736 ;; *************** function _vfpfcnvrt *****************
  4737 ;; Defined at:
  4738 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  4739 ;; Parameters:    Size  Location     Type
  4740 ;;  fp              1    wreg     PTR struct _IO_FILE
  4741 ;;		 -> NULL(0), 
  4742 ;;  fmt             1   56[BANK0 ] PTR PTR unsigned char 
  4743 ;;		 -> vfprintf@cfmt(2), 
  4744 ;;  ap              1   57[BANK0 ] PTR PTR void 
  4745 ;;		 -> printf@ap(1), 
  4746 ;; Auto vars:     Size  Location     Type
  4747 ;;  fp              1   71[BANK0 ] PTR struct _IO_FILE
  4748 ;;		 -> NULL(0), 
  4749 ;;  llu             8   63[BANK0 ] unsigned long long 
  4750 ;;  ll              8    0        long long 
  4751 ;;  f               4    0        long long 
  4752 ;;  ct              3    0        unsigned char [3]
  4753 ;;  vp              2    0        PTR void 
  4754 ;;  i               2    0        int 
  4755 ;;  done            2    0        int 
  4756 ;;  cp              2    0        PTR unsigned char 
  4757 ;;  c               1    0        unsigned char 
  4758 ;; Return value:  Size  Location     Type
  4759 ;;                  2   56[BANK0 ] int 
  4760 ;; Registers used:
  4761 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4762 ;; Tracked objects:
  4763 ;;		On entry : 0/0
  4764 ;;		On exit  : 0/0
  4765 ;;		Unchanged: 0/0
  4766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4767 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4768 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4769 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4770 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4771 ;;Total ram usage:       16 bytes
  4772 ;; Hardware stack levels used: 1
  4773 ;; Hardware stack levels required when called: 10
  4774 ;; This function calls:
  4775 ;;		_fputc
  4776 ;;		_utoa
  4777 ;; This function is called by:
  4778 ;;		_vfprintf
  4779 ;; This function uses a non-reentrant model
  4780 ;;
  4781                           
  4782  0135                     _vfpfcnvrt:	
  4783                           ;psect for function _vfpfcnvrt
  4784                           
  4785                           
  4786                           ;incstack = 0
  4787                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4788                           ;vfpfcnvrt@fp stored from wreg
  4789  0135  0020               	movlb	0	; select bank0
  4790  0136  00E7               	movwf	vfpfcnvrt@fp
  4791  0137                     l1983:
  4792                           
  4793                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  4794  0137  0858               	movf	vfpfcnvrt@fmt,w
  4795  0138  0086               	movwf	6
  4796  0139  0187               	clrf	7
  4797  013A  3F40               	moviw [0]fsr1
  4798  013B  00DA               	movwf	??_vfpfcnvrt
  4799  013C  3F41               	moviw [1]fsr1
  4800  013D  00DB               	movwf	??_vfpfcnvrt+1
  4801  013E  085A               	movf	??_vfpfcnvrt,w
  4802  013F  0084               	movwf	4
  4803  0140  085B               	movf	??_vfpfcnvrt+1,w
  4804  0141  0085               	movwf	5
  4805  0142  0012               	moviw fsr0++
  4806  0143  3A25               	xorlw	37
  4807  0144  1D03               	btfss	3,2
  4808  0145  2947               	goto	u971
  4809  0146  2948               	goto	u970
  4810  0147                     u971:
  4811  0147  29D4               	goto	l2017
  4812  0148                     u970:
  4813  0148                     l1985:
  4814                           
  4815                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  4816  0148  0858               	movf	vfpfcnvrt@fmt,w
  4817  0149  0086               	movwf	6
  4818  014A  0187               	clrf	7
  4819  014B  3001               	movlw	1
  4820  014C  0781               	addwf	1,f
  4821  014D  3141               	addfsr 1,1
  4822  014E  1803               	skipnc
  4823  014F  0A81               	incf	1,f
  4824  0150                     l1987:
  4825                           
  4826                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  4827  0150  0021               	movlb	1	; select bank1
  4828  0151  01BA               	clrf	_width^(0+128)
  4829  0152  01BB               	clrf	(_width+1)^(0+128)
  4830  0153  01BE               	clrf	_flags^(0+128)
  4831  0154  01BF               	clrf	(_flags+1)^(0+128)
  4832  0155                     l1989:
  4833                           
  4834                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  4835  0155  30FF               	movlw	255
  4836  0156  00BC               	movwf	_prec^(0+128)
  4837  0157  30FF               	movlw	255
  4838  0158  00BD               	movwf	(_prec^(0+128)+1)
  4839  0159                     l1991:
  4840                           
  4841                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  4842  0159  0020               	movlb	0	; select bank0
  4843  015A  0858               	movf	vfpfcnvrt@fmt,w
  4844  015B  0086               	movwf	6
  4845  015C  0187               	clrf	7
  4846  015D  3F40               	moviw [0]fsr1
  4847  015E  00DA               	movwf	??_vfpfcnvrt
  4848  015F  3F41               	moviw [1]fsr1
  4849  0160  00DB               	movwf	??_vfpfcnvrt+1
  4850  0161  085A               	movf	??_vfpfcnvrt,w
  4851  0162  0084               	movwf	4
  4852  0163  085B               	movf	??_vfpfcnvrt+1,w
  4853  0164  0085               	movwf	5
  4854  0165  0012               	moviw fsr0++
  4855  0166  3A75               	xorlw	117
  4856  0167  1D03               	btfss	3,2
  4857  0168  296A               	goto	u981
  4858  0169  296B               	goto	u980
  4859  016A                     u981:
  4860  016A  299F               	goto	l2001
  4861  016B                     u980:
  4862  016B                     l1993:
  4863                           
  4864                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  4865  016B  0858               	movf	vfpfcnvrt@fmt,w
  4866  016C  0086               	movwf	6
  4867  016D  0187               	clrf	7
  4868  016E  3001               	movlw	1
  4869  016F  0781               	addwf	1,f
  4870  0170  3141               	addfsr 1,1
  4871  0171  1803               	skipnc
  4872  0172  0A81               	incf	1,f
  4873  0173                     l1995:
  4874                           
  4875                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  4876  0173  0859               	movf	vfpfcnvrt@ap,w
  4877  0174  0086               	movwf	6
  4878  0175  0187               	clrf	7
  4879  0176  0801               	movf	1,w
  4880  0177  0084               	movwf	4
  4881  0178  0185               	clrf	5
  4882  0179  3002               	movlw	2
  4883  017A  0781               	addwf	1,f
  4884  017B  3F00               	moviw [0]fsr0
  4885  017C  00DF               	movwf	vfpfcnvrt@llu
  4886  017D  3F01               	moviw [1]fsr0
  4887  017E  00E0               	movwf	vfpfcnvrt@llu+1
  4888  017F  01E1               	clrf	vfpfcnvrt@llu+2
  4889  0180  01E2               	clrf	vfpfcnvrt@llu+3
  4890  0181  01E3               	clrf	vfpfcnvrt@llu+4
  4891  0182  01E4               	clrf	vfpfcnvrt@llu+5
  4892  0183  01E5               	clrf	vfpfcnvrt@llu+6
  4893  0184  01E6               	clrf	vfpfcnvrt@llu+7
  4894  0185                     l1997:
  4895                           
  4896                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  4897  0185  085F               	movf	vfpfcnvrt@llu,w
  4898  0186  00C0               	movwf	utoa@d
  4899  0187  0860               	movf	vfpfcnvrt@llu+1,w
  4900  0188  00C1               	movwf	utoa@d+1
  4901  0189  0861               	movf	vfpfcnvrt@llu+2,w
  4902  018A  00C2               	movwf	utoa@d+2
  4903  018B  0862               	movf	vfpfcnvrt@llu+3,w
  4904  018C  00C3               	movwf	utoa@d+3
  4905  018D  0863               	movf	vfpfcnvrt@llu+4,w
  4906  018E  00C4               	movwf	utoa@d+4
  4907  018F  0864               	movf	vfpfcnvrt@llu+5,w
  4908  0190  00C5               	movwf	utoa@d+5
  4909  0191  0865               	movf	vfpfcnvrt@llu+6,w
  4910  0192  00C6               	movwf	utoa@d+6
  4911  0193  0866               	movf	vfpfcnvrt@llu+7,w
  4912  0194  00C7               	movwf	utoa@d+7
  4913  0195  0867               	movf	vfpfcnvrt@fp,w
  4914  0196  3180  2046  3181   	fcall	_utoa
  4915  0199  0020               	movlb	0	; select bank0
  4916  019A  0841               	movf	?_utoa+1,w
  4917  019B  00D9               	movwf	?_vfpfcnvrt+1
  4918  019C  0840               	movf	?_utoa,w
  4919  019D  00D8               	movwf	?_vfpfcnvrt
  4920  019E  29F7               	goto	l1133
  4921  019F                     l2001:
  4922                           
  4923                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  4924  019F  0858               	movf	vfpfcnvrt@fmt,w
  4925  01A0  0086               	movwf	6
  4926  01A1  0187               	clrf	7
  4927  01A2  3F40               	moviw [0]fsr1
  4928  01A3  00DA               	movwf	??_vfpfcnvrt
  4929  01A4  3F41               	moviw [1]fsr1
  4930  01A5  00DB               	movwf	??_vfpfcnvrt+1
  4931  01A6  085A               	movf	??_vfpfcnvrt,w
  4932  01A7  0084               	movwf	4
  4933  01A8  085B               	movf	??_vfpfcnvrt+1,w
  4934  01A9  0085               	movwf	5
  4935  01AA  0012               	moviw fsr0++
  4936  01AB  3A25               	xorlw	37
  4937  01AC  1D03               	btfss	3,2
  4938  01AD  29AF               	goto	u991
  4939  01AE  29B0               	goto	u990
  4940  01AF                     u991:
  4941  01AF  29C9               	goto	l2011
  4942  01B0                     u990:
  4943  01B0                     l2003:
  4944                           
  4945                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  4946  01B0  0858               	movf	vfpfcnvrt@fmt,w
  4947  01B1  0086               	movwf	6
  4948  01B2  0187               	clrf	7
  4949  01B3  3001               	movlw	1
  4950  01B4  0781               	addwf	1,f
  4951  01B5  3141               	addfsr 1,1
  4952  01B6  1803               	skipnc
  4953  01B7  0A81               	incf	1,f
  4954  01B8                     l2005:
  4955                           
  4956                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  4957  01B8  3025               	movlw	37
  4958  01B9  00A7               	movwf	fputc@c
  4959  01BA  3000               	movlw	0
  4960  01BB  00A8               	movwf	fputc@c+1
  4961  01BC  0867               	movf	vfpfcnvrt@fp,w
  4962  01BD  00DA               	movwf	??_vfpfcnvrt
  4963  01BE  085A               	movf	??_vfpfcnvrt,w
  4964  01BF  00A9               	movwf	fputc@fp
  4965  01C0  3184  24CE  3181   	fcall	_fputc
  4966  01C3                     l2007:
  4967                           
  4968                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  4969  01C3  3001               	movlw	1
  4970  01C4  0020               	movlb	0	; select bank0
  4971  01C5  00D8               	movwf	?_vfpfcnvrt
  4972  01C6  3000               	movlw	0
  4973  01C7  00D9               	movwf	?_vfpfcnvrt+1
  4974  01C8  29F7               	goto	l1133
  4975  01C9                     l2011:
  4976                           
  4977                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  4978  01C9  0858               	movf	vfpfcnvrt@fmt,w
  4979  01CA  0086               	movwf	6
  4980  01CB  0187               	clrf	7
  4981  01CC  3001               	movlw	1
  4982  01CD  0781               	addwf	1,f
  4983  01CE  3141               	addfsr 1,1
  4984  01CF  1803               	skipnc
  4985  01D0  0A81               	incf	1,f
  4986  01D1                     l2013:
  4987                           
  4988                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  4989  01D1  01D8               	clrf	?_vfpfcnvrt
  4990  01D2  01D9               	clrf	?_vfpfcnvrt+1
  4991  01D3  29F7               	goto	l1133
  4992  01D4                     l2017:
  4993                           
  4994                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  4995  01D4  0858               	movf	vfpfcnvrt@fmt,w
  4996  01D5  0086               	movwf	6
  4997  01D6  0187               	clrf	7
  4998  01D7  3F40               	moviw [0]fsr1
  4999  01D8  00DA               	movwf	??_vfpfcnvrt
  5000  01D9  3F41               	moviw [1]fsr1
  5001  01DA  00DB               	movwf	??_vfpfcnvrt+1
  5002  01DB  085A               	movf	??_vfpfcnvrt,w
  5003  01DC  0084               	movwf	4
  5004  01DD  085B               	movf	??_vfpfcnvrt+1,w
  5005  01DE  0085               	movwf	5
  5006  01DF  0800               	movf	0,w	;code access
  5007  01E0  00DC               	movwf	??_vfpfcnvrt+2
  5008  01E1  01DD               	clrf	??_vfpfcnvrt+3
  5009  01E2  085C               	movf	??_vfpfcnvrt+2,w
  5010  01E3  00A7               	movwf	fputc@c
  5011  01E4  085D               	movf	??_vfpfcnvrt+3,w
  5012  01E5  00A8               	movwf	fputc@c+1
  5013  01E6  0867               	movf	vfpfcnvrt@fp,w
  5014  01E7  00DE               	movwf	??_vfpfcnvrt+4
  5015  01E8  085E               	movf	??_vfpfcnvrt+4,w
  5016  01E9  00A9               	movwf	fputc@fp
  5017  01EA  3184  24CE  3181   	fcall	_fputc
  5018  01ED                     l2019:
  5019                           
  5020                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  5021  01ED  0020               	movlb	0	; select bank0
  5022  01EE  0858               	movf	vfpfcnvrt@fmt,w
  5023  01EF  0086               	movwf	6
  5024  01F0  0187               	clrf	7
  5025  01F1  3001               	movlw	1
  5026  01F2  0781               	addwf	1,f
  5027  01F3  3141               	addfsr 1,1
  5028  01F4  1803               	skipnc
  5029  01F5  0A81               	incf	1,f
  5030  01F6  29C3               	goto	l2007
  5031  01F7                     l1133:
  5032  01F7  0008               	return
  5033  01F8                     __end_of_vfpfcnvrt:
  5034                           
  5035                           	psect	text4
  5036  0046                     __ptext4:	
  5037 ;; *************** function _utoa *****************
  5038 ;; Defined at:
  5039 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  5040 ;; Parameters:    Size  Location     Type
  5041 ;;  fp              1    wreg     PTR struct _IO_FILE
  5042 ;;		 -> NULL(0), 
  5043 ;;  d               8   32[BANK0 ] unsigned long long 
  5044 ;; Auto vars:     Size  Location     Type
  5045 ;;  fp              1   43[BANK0 ] PTR struct _IO_FILE
  5046 ;;		 -> NULL(0), 
  5047 ;;  n               8   46[BANK0 ] unsigned long long 
  5048 ;;  i               2   54[BANK0 ] int 
  5049 ;;  w               2   44[BANK0 ] int 
  5050 ;;  p               2   41[BANK0 ] int 
  5051 ;; Return value:  Size  Location     Type
  5052 ;;                  2   32[BANK0 ] int 
  5053 ;; Registers used:
  5054 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5055 ;; Tracked objects:
  5056 ;;		On entry : 0/0
  5057 ;;		On exit  : 0/0
  5058 ;;		Unchanged: 0/0
  5059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5060 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5061 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5062 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5063 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5064 ;;Total ram usage:       24 bytes
  5065 ;; Hardware stack levels used: 1
  5066 ;; Hardware stack levels required when called: 9
  5067 ;; This function calls:
  5068 ;;		___lodiv
  5069 ;;		___lomod
  5070 ;;		_pad
  5071 ;; This function is called by:
  5072 ;;		_vfpfcnvrt
  5073 ;; This function uses a non-reentrant model
  5074 ;;
  5075                           
  5076  0046                     _utoa:	
  5077                           ;psect for function _utoa
  5078                           
  5079                           
  5080                           ;incstack = 0
  5081                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5082                           ;utoa@fp stored from wreg
  5083  0046  0020               	movlb	0	; select bank0
  5084  0047  00CB               	movwf	utoa@fp
  5085  0048                     l1927:
  5086                           
  5087                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  5088  0048  0021               	movlb	1	; select bank1
  5089  0049  1BBD               	btfsc	(_prec+1)^(0+128),7
  5090  004A  284C               	goto	u891
  5091  004B  284D               	goto	u890
  5092  004C                     u891:
  5093  004C  2851               	goto	l1116
  5094  004D                     u890:
  5095  004D                     l1929:
  5096                           
  5097                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  5098  004D  30FD               	movlw	253
  5099  004E  05BE               	andwf	_flags^(0+128),f
  5100  004F  30FF               	movlw	255
  5101  0050  05BF               	andwf	(_flags+1)^(0+128),f
  5102  0051                     l1116:	
  5103                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 623:     }
  5104                           
  5105                           
  5106                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  5107  0051  083D               	movf	(_prec+1)^(0+128),w
  5108  0052  3A80               	xorlw	128
  5109  0053  0020               	movlb	0	; select bank0
  5110  0054  00C8               	movwf	??_utoa
  5111  0055  3080               	movlw	128
  5112  0056  0248               	subwf	??_utoa,w
  5113  0057  1D03               	skipz
  5114  0058  285C               	goto	u905
  5115  0059  3001               	movlw	1
  5116  005A  0021               	movlb	1	; select bank1
  5117  005B  023C               	subwf	_prec^(0+128),w
  5118  005C                     u905:
  5119  005C  1803               	skipnc
  5120  005D  285F               	goto	u901
  5121  005E  2860               	goto	u900
  5122  005F                     u901:
  5123  005F  2866               	goto	l1933
  5124  0060                     u900:
  5125  0060                     l1931:
  5126  0060  3001               	movlw	1
  5127  0061  0020               	movlb	0	; select bank0
  5128  0062  00C9               	movwf	utoa@p
  5129  0063  3000               	movlw	0
  5130  0064  00CA               	movwf	utoa@p+1
  5131  0065  286E               	goto	l1120
  5132  0066                     l1933:
  5133  0066  0021               	movlb	1	; select bank1
  5134  0067  083D               	movf	(_prec+1)^(0+128),w
  5135  0068  0020               	movlb	0	; select bank0
  5136  0069  00CA               	movwf	utoa@p+1
  5137  006A  0021               	movlb	1	; select bank1
  5138  006B  083C               	movf	_prec^(0+128),w
  5139  006C  0020               	movlb	0	; select bank0
  5140  006D  00C9               	movwf	utoa@p
  5141  006E                     l1120:
  5142                           
  5143                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  5144  006E  0021               	movlb	1	; select bank1
  5145  006F  083B               	movf	(_width+1)^(0+128),w
  5146  0070  0020               	movlb	0	; select bank0
  5147  0071  00CD               	movwf	utoa@w+1
  5148  0072  0021               	movlb	1	; select bank1
  5149  0073  083A               	movf	_width^(0+128),w
  5150  0074  0020               	movlb	0	; select bank0
  5151  0075  00CC               	movwf	utoa@w
  5152  0076                     l1935:
  5153                           
  5154                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 628:     n = d;
  5155  0076  0840               	movf	utoa@d,w
  5156  0077  00CE               	movwf	utoa@n
  5157  0078  0841               	movf	utoa@d+1,w
  5158  0079  00CF               	movwf	utoa@n+1
  5159  007A  0842               	movf	utoa@d+2,w
  5160  007B  00D0               	movwf	utoa@n+2
  5161  007C  0843               	movf	utoa@d+3,w
  5162  007D  00D1               	movwf	utoa@n+3
  5163  007E  0844               	movf	utoa@d+4,w
  5164  007F  00D2               	movwf	utoa@n+4
  5165  0080  0845               	movf	utoa@d+5,w
  5166  0081  00D3               	movwf	utoa@n+5
  5167  0082  0846               	movf	utoa@d+6,w
  5168  0083  00D4               	movwf	utoa@n+6
  5169  0084  0847               	movf	utoa@d+7,w
  5170  0085  00D5               	movwf	utoa@n+7
  5171                           
  5172                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  5173  0086  301F               	movlw	31
  5174  0087  00D6               	movwf	utoa@i
  5175  0088  3000               	movlw	0
  5176  0089  00D7               	movwf	utoa@i+1
  5177  008A                     l1937:
  5178                           
  5179                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  5180  008A  0022               	movlb	2	; select bank2
  5181  008B  01BF               	clrf	(_dbuf^(0+256)+31)
  5182                           
  5183                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5184  008C  28EE               	goto	l1949
  5185  008D                     l1939:
  5186                           
  5187                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 632:         --i;
  5188  008D  30FF               	movlw	255
  5189  008E  0020               	movlb	0	; select bank0
  5190  008F  07D6               	addwf	utoa@i,f
  5191  0090  30FF               	movlw	255
  5192  0091  3DD7               	addwfc	utoa@i+1,f
  5193  0092                     l1941:
  5194                           
  5195                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  5196  0092  300A               	movlw	10
  5197  0093  00A4               	movwf	___lomod@divisor
  5198  0094  01A5               	clrf	___lomod@divisor+1
  5199  0095  01A6               	clrf	___lomod@divisor+2
  5200  0096  01A7               	clrf	___lomod@divisor+3
  5201  0097  01A8               	clrf	___lomod@divisor+4
  5202  0098  01A9               	clrf	___lomod@divisor+5
  5203  0099  01AA               	clrf	___lomod@divisor+6
  5204  009A  01AB               	clrf	___lomod@divisor+7
  5205  009B  084E               	movf	utoa@n,w
  5206  009C  00AC               	movwf	___lomod@dividend
  5207  009D  084F               	movf	utoa@n+1,w
  5208  009E  00AD               	movwf	___lomod@dividend+1
  5209  009F  0850               	movf	utoa@n+2,w
  5210  00A0  00AE               	movwf	___lomod@dividend+2
  5211  00A1  0851               	movf	utoa@n+3,w
  5212  00A2  00AF               	movwf	___lomod@dividend+3
  5213  00A3  0852               	movf	utoa@n+4,w
  5214  00A4  00B0               	movwf	___lomod@dividend+4
  5215  00A5  0853               	movf	utoa@n+5,w
  5216  00A6  00B1               	movwf	___lomod@dividend+5
  5217  00A7  0854               	movf	utoa@n+6,w
  5218  00A8  00B2               	movwf	___lomod@dividend+6
  5219  00A9  0855               	movf	utoa@n+7,w
  5220  00AA  00B3               	movwf	___lomod@dividend+7
  5221  00AB  3183  230F  3180   	fcall	___lomod
  5222  00AE  0020               	movlb	0	; select bank0
  5223  00AF  0824               	movf	?___lomod,w
  5224  00B0  3E30               	addlw	48
  5225  00B1  00C8               	movwf	??_utoa
  5226  00B2  0856               	movf	utoa@i,w
  5227  00B3  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5228  00B4  0086               	movwf	6
  5229  00B5  3001               	movlw	1	; select bank2/3
  5230  00B6  0087               	movwf	7
  5231  00B7  0848               	movf	??_utoa,w
  5232  00B8  0081               	movwf	1
  5233  00B9                     l1943:
  5234                           
  5235                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 634:         --p;
  5236  00B9  30FF               	movlw	255
  5237  00BA  07C9               	addwf	utoa@p,f
  5238  00BB  30FF               	movlw	255
  5239  00BC  3DCA               	addwfc	utoa@p+1,f
  5240  00BD                     l1945:
  5241                           
  5242                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 635:         --w;
  5243  00BD  30FF               	movlw	255
  5244  00BE  07CC               	addwf	utoa@w,f
  5245  00BF  30FF               	movlw	255
  5246  00C0  3DCD               	addwfc	utoa@w+1,f
  5247  00C1                     l1947:
  5248                           
  5249                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  5250  00C1  300A               	movlw	10
  5251  00C2  00A4               	movwf	___lodiv@divisor
  5252  00C3  01A5               	clrf	___lodiv@divisor+1
  5253  00C4  01A6               	clrf	___lodiv@divisor+2
  5254  00C5  01A7               	clrf	___lodiv@divisor+3
  5255  00C6  01A8               	clrf	___lodiv@divisor+4
  5256  00C7  01A9               	clrf	___lodiv@divisor+5
  5257  00C8  01AA               	clrf	___lodiv@divisor+6
  5258  00C9  01AB               	clrf	___lodiv@divisor+7
  5259  00CA  084E               	movf	utoa@n,w
  5260  00CB  00AC               	movwf	___lodiv@dividend
  5261  00CC  084F               	movf	utoa@n+1,w
  5262  00CD  00AD               	movwf	___lodiv@dividend+1
  5263  00CE  0850               	movf	utoa@n+2,w
  5264  00CF  00AE               	movwf	___lodiv@dividend+2
  5265  00D0  0851               	movf	utoa@n+3,w
  5266  00D1  00AF               	movwf	___lodiv@dividend+3
  5267  00D2  0852               	movf	utoa@n+4,w
  5268  00D3  00B0               	movwf	___lodiv@dividend+4
  5269  00D4  0853               	movf	utoa@n+5,w
  5270  00D5  00B1               	movwf	___lodiv@dividend+5
  5271  00D6  0854               	movf	utoa@n+6,w
  5272  00D7  00B2               	movwf	___lodiv@dividend+6
  5273  00D8  0855               	movf	utoa@n+7,w
  5274  00D9  00B3               	movwf	___lodiv@dividend+7
  5275  00DA  3182  228B  3180   	fcall	___lodiv
  5276  00DD  0020               	movlb	0	; select bank0
  5277  00DE  0824               	movf	?___lodiv,w
  5278  00DF  00CE               	movwf	utoa@n
  5279  00E0  0825               	movf	?___lodiv+1,w
  5280  00E1  00CF               	movwf	utoa@n+1
  5281  00E2  0826               	movf	?___lodiv+2,w
  5282  00E3  00D0               	movwf	utoa@n+2
  5283  00E4  0827               	movf	?___lodiv+3,w
  5284  00E5  00D1               	movwf	utoa@n+3
  5285  00E6  0828               	movf	?___lodiv+4,w
  5286  00E7  00D2               	movwf	utoa@n+4
  5287  00E8  0829               	movf	?___lodiv+5,w
  5288  00E9  00D3               	movwf	utoa@n+5
  5289  00EA  082A               	movf	?___lodiv+6,w
  5290  00EB  00D4               	movwf	utoa@n+6
  5291  00EC  082B               	movf	?___lodiv+7,w
  5292  00ED  00D5               	movwf	utoa@n+7
  5293  00EE                     l1949:
  5294                           
  5295                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5296  00EE  0020               	movlb	0	; select bank0
  5297  00EF  0856               	movf	utoa@i,w
  5298  00F0  0457               	iorwf	utoa@i+1,w
  5299  00F1  1903               	btfsc	3,2
  5300  00F2  28F4               	goto	u911
  5301  00F3  28F5               	goto	u910
  5302  00F4                     u911:
  5303  00F4  2921               	goto	l1959
  5304  00F5                     u910:
  5305  00F5                     l1951:
  5306  00F5  084E               	movf	utoa@n,w
  5307  00F6  044F               	iorwf	utoa@n+1,w
  5308  00F7  0450               	iorwf	utoa@n+2,w
  5309  00F8  0451               	iorwf	utoa@n+3,w
  5310  00F9  0452               	iorwf	utoa@n+4,w
  5311  00FA  0453               	iorwf	utoa@n+5,w
  5312  00FB  0454               	iorwf	utoa@n+6,w
  5313  00FC  0455               	iorwf	utoa@n+7,w
  5314  00FD  1D03               	skipz
  5315  00FE  2900               	goto	u921
  5316  00FF  2901               	goto	u920
  5317  0100                     u921:
  5318  0100  288D               	goto	l1939
  5319  0101                     u920:
  5320  0101                     l1953:
  5321  0101  084A               	movf	utoa@p+1,w
  5322  0102  3A80               	xorlw	128
  5323  0103  00C8               	movwf	??_utoa
  5324  0104  3080               	movlw	128
  5325  0105  0248               	subwf	??_utoa,w
  5326  0106  1D03               	skipz
  5327  0107  290A               	goto	u935
  5328  0108  3001               	movlw	1
  5329  0109  0249               	subwf	utoa@p,w
  5330  010A                     u935:
  5331  010A  1803               	skipnc
  5332  010B  290D               	goto	u931
  5333  010C  290E               	goto	u930
  5334  010D                     u931:
  5335  010D  288D               	goto	l1939
  5336  010E                     u930:
  5337  010E                     l1955:
  5338  010E  0020               	movlb	0	; select bank0
  5339  010F  084D               	movf	utoa@w+1,w
  5340  0110  3A80               	xorlw	128
  5341  0111  00C8               	movwf	??_utoa
  5342  0112  3080               	movlw	128
  5343  0113  0248               	subwf	??_utoa,w
  5344  0114  1D03               	skipz
  5345  0115  2918               	goto	u945
  5346  0116  3001               	movlw	1
  5347  0117  024C               	subwf	utoa@w,w
  5348  0118                     u945:
  5349  0118  1C03               	skipc
  5350  0119  291B               	goto	u941
  5351  011A  291C               	goto	u940
  5352  011B                     u941:
  5353  011B  2921               	goto	l1959
  5354  011C                     u940:
  5355  011C                     l1957:
  5356  011C  0021               	movlb	1	; select bank1
  5357  011D  18BE               	btfsc	_flags^(0+128),1
  5358  011E  2920               	goto	u951
  5359  011F  2921               	goto	u950
  5360  0120                     u951:
  5361  0120  288D               	goto	l1939
  5362  0121                     u950:
  5363  0121                     l1959:
  5364                           
  5365                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  5366  0121  0020               	movlb	0	; select bank0
  5367  0122  0856               	movf	utoa@i,w
  5368  0123  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5369  0124  00C8               	movwf	??_utoa
  5370  0125  0848               	movf	??_utoa,w
  5371  0126  00B7               	movwf	pad@buf
  5372  0127  084D               	movf	utoa@w+1,w
  5373  0128  00B9               	movwf	pad@p+1
  5374  0129  084C               	movf	utoa@w,w
  5375  012A  00B8               	movwf	pad@p
  5376  012B  084B               	movf	utoa@fp,w
  5377  012C  3183  2380  3180   	fcall	_pad
  5378  012F  0020               	movlb	0	; select bank0
  5379  0130  0838               	movf	?_pad+1,w
  5380  0131  00C1               	movwf	?_utoa+1
  5381  0132  0837               	movf	?_pad,w
  5382  0133  00C0               	movwf	?_utoa
  5383  0134                     l1128:
  5384  0134  0008               	return
  5385  0135                     __end_of_utoa:
  5386                           
  5387                           	psect	text5
  5388  0380                     __ptext5:	
  5389 ;; *************** function _pad *****************
  5390 ;; Defined at:
  5391 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  5392 ;; Parameters:    Size  Location     Type
  5393 ;;  fp              1    wreg     PTR struct _IO_FILE
  5394 ;;		 -> NULL(0), 
  5395 ;;  buf             1   23[BANK0 ] PTR unsigned char 
  5396 ;;		 -> dbuf(32), 
  5397 ;;  p               2   24[BANK0 ] int 
  5398 ;; Auto vars:     Size  Location     Type
  5399 ;;  fp              1   31[BANK0 ] PTR struct _IO_FILE
  5400 ;;		 -> NULL(0), 
  5401 ;;  w               2   29[BANK0 ] int 
  5402 ;;  i               2   27[BANK0 ] int 
  5403 ;; Return value:  Size  Location     Type
  5404 ;;                  2   23[BANK0 ] int 
  5405 ;; Registers used:
  5406 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5407 ;; Tracked objects:
  5408 ;;		On entry : 0/0
  5409 ;;		On exit  : 0/0
  5410 ;;		Unchanged: 0/0
  5411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5412 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5413 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5414 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5415 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5416 ;;Total ram usage:        9 bytes
  5417 ;; Hardware stack levels used: 1
  5418 ;; Hardware stack levels required when called: 8
  5419 ;; This function calls:
  5420 ;;		_fputc
  5421 ;;		_fputs
  5422 ;;		_strlen
  5423 ;; This function is called by:
  5424 ;;		_utoa
  5425 ;; This function uses a non-reentrant model
  5426 ;;
  5427                           
  5428  0380                     _pad:	
  5429                           ;psect for function _pad
  5430                           
  5431                           
  5432                           ;incstack = 0
  5433                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5434                           ;pad@fp stored from wreg
  5435  0380  0020               	movlb	0	; select bank0
  5436  0381  00BF               	movwf	pad@fp
  5437  0382                     l1905:
  5438                           
  5439                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  5440  0382  0021               	movlb	1	; select bank1
  5441  0383  1C3E               	btfss	_flags^(0+128),0
  5442  0384  2B86               	goto	u851
  5443  0385  2B87               	goto	u850
  5444  0386                     u851:
  5445  0386  2B90               	goto	l1909
  5446  0387                     u850:
  5447  0387                     l1907:
  5448                           
  5449                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  5450  0387  0020               	movlb	0	; select bank0
  5451  0388  083F               	movf	pad@fp,w
  5452  0389  00BA               	movwf	??_pad
  5453  038A  083A               	movf	??_pad,w
  5454  038B  00AF               	movwf	fputs@fp
  5455  038C  0837               	movf	pad@buf,w
  5456  038D  3186  262E  3183   	fcall	_fputs
  5457  0390                     l1909:
  5458                           
  5459                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  5460  0390  0020               	movlb	0	; select bank0
  5461  0391  1BB9               	btfsc	pad@p+1,7
  5462  0392  2B94               	goto	u861
  5463  0393  2B95               	goto	u860
  5464  0394                     u861:
  5465  0394  2B9A               	goto	l1913
  5466  0395                     u860:
  5467  0395                     l1911:
  5468  0395  0839               	movf	pad@p+1,w
  5469  0396  00BE               	movwf	pad@w+1
  5470  0397  0838               	movf	pad@p,w
  5471  0398  00BD               	movwf	pad@w
  5472  0399  2B9C               	goto	l1108
  5473  039A                     l1913:
  5474  039A  01BD               	clrf	pad@w
  5475  039B  01BE               	clrf	pad@w+1
  5476  039C                     l1108:
  5477                           
  5478                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5479  039C  01BB               	clrf	pad@i
  5480  039D  01BC               	clrf	pad@i+1
  5481                           
  5482                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5483  039E  2BB0               	goto	l1919
  5484  039F                     l1915:
  5485                           
  5486                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  5487  039F  3020               	movlw	32
  5488  03A0  0020               	movlb	0	; select bank0
  5489  03A1  00A7               	movwf	fputc@c
  5490  03A2  3000               	movlw	0
  5491  03A3  00A8               	movwf	fputc@c+1
  5492  03A4  083F               	movf	pad@fp,w
  5493  03A5  00BA               	movwf	??_pad
  5494  03A6  083A               	movf	??_pad,w
  5495  03A7  00A9               	movwf	fputc@fp
  5496  03A8  3184  24CE  3183   	fcall	_fputc
  5497  03AB                     l1917:
  5498                           
  5499                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5500  03AB  3001               	movlw	1
  5501  03AC  0020               	movlb	0	; select bank0
  5502  03AD  07BB               	addwf	pad@i,f
  5503  03AE  3000               	movlw	0
  5504  03AF  3DBC               	addwfc	pad@i+1,f
  5505  03B0                     l1919:
  5506                           
  5507                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5508  03B0  083C               	movf	pad@i+1,w
  5509  03B1  3A80               	xorlw	128
  5510  03B2  00BA               	movwf	??_pad
  5511  03B3  083E               	movf	pad@w+1,w
  5512  03B4  3A80               	xorlw	128
  5513  03B5  023A               	subwf	??_pad,w
  5514  03B6  1D03               	skipz
  5515  03B7  2BBA               	goto	u875
  5516  03B8  083D               	movf	pad@w,w
  5517  03B9  023B               	subwf	pad@i,w
  5518  03BA                     u875:
  5519  03BA  1C03               	skipc
  5520  03BB  2BBD               	goto	u871
  5521  03BC  2BBE               	goto	u870
  5522  03BD                     u871:
  5523  03BD  2B9F               	goto	l1915
  5524  03BE                     u870:
  5525  03BE                     l1111:
  5526                           
  5527                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  5528  03BE  0021               	movlb	1	; select bank1
  5529  03BF  183E               	btfsc	_flags^(0+128),0
  5530  03C0  2BC2               	goto	u881
  5531  03C1  2BC3               	goto	u880
  5532  03C2                     u881:
  5533  03C2  2BCC               	goto	l1923
  5534  03C3                     u880:
  5535  03C3                     l1921:
  5536                           
  5537                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  5538  03C3  0020               	movlb	0	; select bank0
  5539  03C4  083F               	movf	pad@fp,w
  5540  03C5  00BA               	movwf	??_pad
  5541  03C6  083A               	movf	??_pad,w
  5542  03C7  00AF               	movwf	fputs@fp
  5543  03C8  0837               	movf	pad@buf,w
  5544  03C9  3186  262E  3183   	fcall	_fputs
  5545  03CC                     l1923:
  5546                           
  5547                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  5548  03CC  0020               	movlb	0	; select bank0
  5549  03CD  0837               	movf	pad@buf,w
  5550  03CE  00A4               	movwf	strlen@s
  5551  03CF  3001               	movlw	1
  5552  03D0  00A5               	movwf	strlen@s+1
  5553  03D1  3186  2696  3183   	fcall	_strlen
  5554  03D4  0020               	movlb	0	; select bank0
  5555  03D5  083D               	movf	pad@w,w
  5556  03D6  0724               	addwf	?_strlen,w
  5557  03D7  00B7               	movwf	?_pad
  5558  03D8  083E               	movf	pad@w+1,w
  5559  03D9  3D25               	addwfc	?_strlen+1,w
  5560  03DA  00B8               	movwf	?_pad+1
  5561  03DB                     l1113:
  5562  03DB  0008               	return
  5563  03DC                     __end_of_pad:
  5564                           
  5565                           	psect	text6
  5566  0696                     __ptext6:	
  5567 ;; *************** function _strlen *****************
  5568 ;; Defined at:
  5569 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
  5570 ;; Parameters:    Size  Location     Type
  5571 ;;  s               2    4[BANK0 ] PTR const unsigned char 
  5572 ;;		 -> dbuf(32), STR_3(8), 
  5573 ;; Auto vars:     Size  Location     Type
  5574 ;;  a               2    7[BANK0 ] PTR const unsigned char 
  5575 ;;		 -> dbuf(32), STR_3(8), 
  5576 ;; Return value:  Size  Location     Type
  5577 ;;                  2    4[BANK0 ] unsigned int 
  5578 ;; Registers used:
  5579 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5580 ;; Tracked objects:
  5581 ;;		On entry : 0/0
  5582 ;;		On exit  : 0/0
  5583 ;;		Unchanged: 0/0
  5584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5585 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5586 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5587 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5588 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5589 ;;Total ram usage:        5 bytes
  5590 ;; Hardware stack levels used: 1
  5591 ;; Hardware stack levels required when called: 4
  5592 ;; This function calls:
  5593 ;;		Nothing
  5594 ;; This function is called by:
  5595 ;;		_pad
  5596 ;; This function uses a non-reentrant model
  5597 ;;
  5598                           
  5599  0696                     _strlen:	
  5600                           ;psect for function _strlen
  5601                           
  5602  0696                     l1857:	
  5603                           ;incstack = 0
  5604                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  5605                           
  5606  0696  0020               	movlb	0	; select bank0
  5607  0697  0825               	movf	strlen@s+1,w
  5608  0698  00A8               	movwf	strlen@a+1
  5609  0699  0824               	movf	strlen@s,w
  5610  069A  00A7               	movwf	strlen@a
  5611  069B  2EA0               	goto	l1861
  5612  069C                     l1859:
  5613  069C  3001               	movlw	1
  5614  069D  07A4               	addwf	strlen@s,f
  5615  069E  3000               	movlw	0
  5616  069F  3DA5               	addwfc	strlen@s+1,f
  5617  06A0                     l1861:
  5618  06A0  0824               	movf	strlen@s,w
  5619  06A1  0084               	movwf	4
  5620  06A2  0825               	movf	strlen@s+1,w
  5621  06A3  0085               	movwf	5
  5622  06A4  0012               	moviw fsr0++
  5623  06A5  1D03               	btfss	3,2
  5624  06A6  2EA8               	goto	u751
  5625  06A7  2EA9               	goto	u750
  5626  06A8                     u751:
  5627  06A8  2E9C               	goto	l1859
  5628  06A9                     u750:
  5629  06A9                     l1863:
  5630  06A9  0827               	movf	strlen@a,w
  5631  06AA  0224               	subwf	strlen@s,w
  5632  06AB  00A4               	movwf	?_strlen
  5633  06AC  0828               	movf	strlen@a+1,w
  5634  06AD  3B25               	subwfb	strlen@s+1,w
  5635  06AE  00A5               	movwf	?_strlen+1
  5636  06AF                     l1174:
  5637  06AF  0008               	return
  5638  06B0                     __end_of_strlen:
  5639                           
  5640                           	psect	text7
  5641  062E                     __ptext7:	
  5642 ;; *************** function _fputs *****************
  5643 ;; Defined at:
  5644 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
  5645 ;; Parameters:    Size  Location     Type
  5646 ;;  s               1    wreg     PTR const unsigned char 
  5647 ;;		 -> dbuf(32), 
  5648 ;;  fp              1   15[BANK0 ] PTR struct _IO_FILE
  5649 ;;		 -> NULL(0), 
  5650 ;; Auto vars:     Size  Location     Type
  5651 ;;  s               1   22[BANK0 ] PTR const unsigned char 
  5652 ;;		 -> dbuf(32), 
  5653 ;;  i               2   20[BANK0 ] int 
  5654 ;;  c               1   19[BANK0 ] unsigned char 
  5655 ;; Return value:  Size  Location     Type
  5656 ;;                  2   15[BANK0 ] int 
  5657 ;; Registers used:
  5658 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5659 ;; Tracked objects:
  5660 ;;		On entry : 0/0
  5661 ;;		On exit  : 0/0
  5662 ;;		Unchanged: 0/0
  5663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5664 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5665 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5666 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5667 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5668 ;;Total ram usage:        8 bytes
  5669 ;; Hardware stack levels used: 1
  5670 ;; Hardware stack levels required when called: 7
  5671 ;; This function calls:
  5672 ;;		_fputc
  5673 ;; This function is called by:
  5674 ;;		_pad
  5675 ;; This function uses a non-reentrant model
  5676 ;;
  5677                           
  5678  062E                     _fputs:	
  5679                           ;psect for function _fputs
  5680                           
  5681                           
  5682                           ;incstack = 0
  5683                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5684                           ;fputs@s stored from wreg
  5685  062E  0020               	movlb	0	; select bank0
  5686  062F  00B6               	movwf	fputs@s
  5687  0630                     l1849:
  5688  0630  01B4               	clrf	fputs@i
  5689  0631  01B5               	clrf	fputs@i+1
  5690  0632  2E46               	goto	l1855
  5691  0633                     l1851:
  5692  0633  0833               	movf	fputs@c,w
  5693  0634  00B0               	movwf	??_fputs
  5694  0635  01B1               	clrf	??_fputs+1
  5695  0636  0830               	movf	??_fputs,w
  5696  0637  00A7               	movwf	fputc@c
  5697  0638  0831               	movf	??_fputs+1,w
  5698  0639  00A8               	movwf	fputc@c+1
  5699  063A  082F               	movf	fputs@fp,w
  5700  063B  00B2               	movwf	??_fputs+2
  5701  063C  0832               	movf	??_fputs+2,w
  5702  063D  00A9               	movwf	fputc@fp
  5703  063E  3184  24CE  3186   	fcall	_fputc
  5704  0641                     l1853:
  5705  0641  3001               	movlw	1
  5706  0642  0020               	movlb	0	; select bank0
  5707  0643  07B4               	addwf	fputs@i,f
  5708  0644  3000               	movlw	0
  5709  0645  3DB5               	addwfc	fputs@i+1,f
  5710  0646                     l1855:
  5711  0646  0834               	movf	fputs@i,w
  5712  0647  0736               	addwf	fputs@s,w
  5713  0648  00B0               	movwf	??_fputs
  5714  0649  0830               	movf	??_fputs,w
  5715  064A  0086               	movwf	6
  5716  064B  3001               	movlw	1	; select bank2/3
  5717  064C  0087               	movwf	7
  5718  064D  0801               	movf	1,w
  5719  064E  00B1               	movwf	??_fputs+1
  5720  064F  0831               	movf	??_fputs+1,w
  5721  0650  00B3               	movwf	fputs@c
  5722  0651  0833               	movf	fputs@c,w
  5723  0652  1D03               	btfss	3,2
  5724  0653  2E55               	goto	u741
  5725  0654  2E56               	goto	u740
  5726  0655                     u741:
  5727  0655  2E33               	goto	l1851
  5728  0656                     u740:
  5729  0656                     l1160:
  5730  0656  0008               	return
  5731  0657                     __end_of_fputs:
  5732                           
  5733                           	psect	text8
  5734  04CE                     __ptext8:	
  5735 ;; *************** function _fputc *****************
  5736 ;; Defined at:
  5737 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
  5738 ;; Parameters:    Size  Location     Type
  5739 ;;  c               2    7[BANK0 ] int 
  5740 ;;  fp              1    9[BANK0 ] PTR struct _IO_FILE
  5741 ;;		 -> NULL(0), 
  5742 ;; Auto vars:     Size  Location     Type
  5743 ;;		None
  5744 ;; Return value:  Size  Location     Type
  5745 ;;                  2    7[BANK0 ] int 
  5746 ;; Registers used:
  5747 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5748 ;; Tracked objects:
  5749 ;;		On entry : 0/0
  5750 ;;		On exit  : 0/0
  5751 ;;		Unchanged: 0/0
  5752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5753 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5755 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5756 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5757 ;;Total ram usage:        8 bytes
  5758 ;; Hardware stack levels used: 1
  5759 ;; Hardware stack levels required when called: 6
  5760 ;; This function calls:
  5761 ;;		_putch
  5762 ;; This function is called by:
  5763 ;;		_pad
  5764 ;;		_vfpfcnvrt
  5765 ;;		_fputs
  5766 ;; This function uses a non-reentrant model
  5767 ;;
  5768                           
  5769  04CE                     _fputc:	
  5770                           ;psect for function _fputc
  5771                           
  5772  04CE                     l1835:	
  5773                           ;incstack = 0
  5774                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5775                           
  5776  04CE  0020               	movlb	0	; select bank0
  5777  04CF  0829               	movf	fputc@fp,w
  5778  04D0  1903               	btfsc	3,2
  5779  04D1  2CD3               	goto	u701
  5780  04D2  2CD4               	goto	u700
  5781  04D3                     u701:
  5782  04D3  2CD9               	goto	l1839
  5783  04D4                     u700:
  5784  04D4                     l1837:
  5785  04D4  0829               	movf	fputc@fp,w
  5786  04D5  1D03               	btfss	3,2
  5787  04D6  2CD8               	goto	u711
  5788  04D7  2CD9               	goto	u710
  5789  04D8                     u711:
  5790  04D8  2CDE               	goto	l1841
  5791  04D9                     u710:
  5792  04D9                     l1839:
  5793  04D9  0827               	movf	fputc@c,w
  5794  04DA  3187  278A  3184   	fcall	_putch
  5795  04DD  2D10               	goto	l1152
  5796  04DE                     l1841:
  5797  04DE  0829               	movf	fputc@fp,w
  5798  04DF  3E08               	addlw	8
  5799  04E0  0086               	movwf	6
  5800  04E1  0187               	clrf	7
  5801  04E2  0016               	moviw fsr1++
  5802  04E3  0401               	iorwf	1,w
  5803  04E4  1903               	btfsc	3,2
  5804  04E5  2CE7               	goto	u721
  5805  04E6  2CE8               	goto	u720
  5806  04E7                     u721:
  5807  04E7  2D06               	goto	l1845
  5808  04E8                     u720:
  5809  04E8                     l1843:
  5810  04E8  0829               	movf	fputc@fp,w
  5811  04E9  3E08               	addlw	8
  5812  04EA  0086               	movwf	6
  5813  04EB  0187               	clrf	7
  5814  04EC  3F40               	moviw [0]fsr1
  5815  04ED  00AA               	movwf	??_fputc
  5816  04EE  3F41               	moviw [1]fsr1
  5817  04EF  00AB               	movwf	??_fputc+1
  5818  04F0  0829               	movf	fputc@fp,w
  5819  04F1  3E02               	addlw	2
  5820  04F2  0086               	movwf	6
  5821  04F3  0187               	clrf	7
  5822  04F4  3F40               	moviw [0]fsr1
  5823  04F5  00AC               	movwf	??_fputc+2
  5824  04F6  3F41               	moviw [1]fsr1
  5825  04F7  00AD               	movwf	??_fputc+3
  5826  04F8  082D               	movf	??_fputc+3,w
  5827  04F9  3A80               	xorlw	128
  5828  04FA  00AE               	movwf	??_fputc+4
  5829  04FB  082B               	movf	??_fputc+1,w
  5830  04FC  3A80               	xorlw	128
  5831  04FD  022E               	subwf	??_fputc+4,w
  5832  04FE  1D03               	skipz
  5833  04FF  2D02               	goto	u735
  5834  0500  082A               	movf	??_fputc,w
  5835  0501  022C               	subwf	??_fputc+2,w
  5836  0502                     u735:
  5837  0502  1803               	skipnc
  5838  0503  2D05               	goto	u731
  5839  0504  2D06               	goto	u730
  5840  0505                     u731:
  5841  0505  2D10               	goto	l1152
  5842  0506                     u730:
  5843  0506                     l1845:
  5844  0506  0020               	movlb	0	; select bank0
  5845  0507  0829               	movf	fputc@fp,w
  5846  0508  3E02               	addlw	2
  5847  0509  0086               	movwf	6
  5848  050A  0187               	clrf	7
  5849  050B  3001               	movlw	1
  5850  050C  0781               	addwf	1,f
  5851  050D  3141               	addfsr 1,1
  5852  050E  1803               	skipnc
  5853  050F  0A81               	incf	1,f
  5854  0510                     l1152:
  5855  0510  0008               	return
  5856  0511                     __end_of_fputc:
  5857                           
  5858                           	psect	text9
  5859  078A                     __ptext9:	
  5860 ;; *************** function _putch *****************
  5861 ;; Defined at:
  5862 ;;		line 210 in file "mcc_generated_files/eusart.c"
  5863 ;; Parameters:    Size  Location     Type
  5864 ;;  txData          1    wreg     unsigned char 
  5865 ;; Auto vars:     Size  Location     Type
  5866 ;;  txData          1    6[BANK0 ] unsigned char 
  5867 ;; Return value:  Size  Location     Type
  5868 ;;                  1    wreg      void 
  5869 ;; Registers used:
  5870 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5871 ;; Tracked objects:
  5872 ;;		On entry : 0/0
  5873 ;;		On exit  : 0/0
  5874 ;;		Unchanged: 0/0
  5875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5877 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5879 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5880 ;;Total ram usage:        1 bytes
  5881 ;; Hardware stack levels used: 1
  5882 ;; Hardware stack levels required when called: 5
  5883 ;; This function calls:
  5884 ;;		_EUSART_Write
  5885 ;; This function is called by:
  5886 ;;		_fputc
  5887 ;; This function uses a non-reentrant model
  5888 ;;
  5889                           
  5890  078A                     _putch:	
  5891                           ;psect for function _putch
  5892                           
  5893                           
  5894                           ;incstack = 0
  5895                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5896                           ;putch@txData stored from wreg
  5897  078A  0020               	movlb	0	; select bank0
  5898  078B  00A6               	movwf	putch@txData
  5899  078C                     l1833:
  5900                           
  5901                           ;mcc_generated_files/eusart.c: 210: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 211: {;mcc_generated_files/eusart.c: 212:     EUSART_Write(txData);
  5902  078C  0826               	movf	putch@txData,w
  5903  078D  3185  25A9  3187   	fcall	_EUSART_Write
  5904  0790                     l239:
  5905  0790  0008               	return
  5906  0791                     __end_of_putch:
  5907                           
  5908                           	psect	text10
  5909  05A9                     __ptext10:	
  5910 ;; *************** function _EUSART_Write *****************
  5911 ;; Defined at:
  5912 ;;		line 182 in file "mcc_generated_files/eusart.c"
  5913 ;; Parameters:    Size  Location     Type
  5914 ;;  txData          1    wreg     unsigned char 
  5915 ;; Auto vars:     Size  Location     Type
  5916 ;;  txData          1    5[BANK0 ] unsigned char 
  5917 ;; Return value:  Size  Location     Type
  5918 ;;                  1    wreg      void 
  5919 ;; Registers used:
  5920 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5921 ;; Tracked objects:
  5922 ;;		On entry : 0/0
  5923 ;;		On exit  : 0/0
  5924 ;;		Unchanged: 0/0
  5925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5927 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5928 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5929 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5930 ;;Total ram usage:        2 bytes
  5931 ;; Hardware stack levels used: 1
  5932 ;; Hardware stack levels required when called: 4
  5933 ;; This function calls:
  5934 ;;		Nothing
  5935 ;; This function is called by:
  5936 ;;		_putch
  5937 ;; This function uses a non-reentrant model
  5938 ;;
  5939                           
  5940  05A9                     _EUSART_Write:	
  5941                           ;psect for function _EUSART_Write
  5942                           
  5943                           
  5944                           ;incstack = 0
  5945                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  5946                           ;EUSART_Write@txData stored from wreg
  5947  05A9  0020               	movlb	0	; select bank0
  5948  05AA  00A5               	movwf	EUSART_Write@txData
  5949  05AB                     l1815:
  5950  05AB                     l1817:	
  5951                           ;mcc_generated_files/eusart.c: 182: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 183: {;mcc_generated_files/eusart.c: 184:     while(0 == eusartTxBufferRemai
      +                          ning)
  5952                           
  5953                           
  5954                           ;mcc_generated_files/eusart.c: 184:     while(0 == eusartTxBufferRemaining)
  5955  05AB  0021               	movlb	1	; select bank1
  5956  05AC  0860               	movf	_eusartTxBufferRemaining^(0+128),w	;volatile
  5957  05AD  1903               	btfsc	3,2
  5958  05AE  2DB0               	goto	u671
  5959  05AF  2DB1               	goto	u670
  5960  05B0                     u671:
  5961  05B0  2DAB               	goto	l1817
  5962  05B1                     u670:
  5963  05B1                     l229:
  5964                           
  5965                           ;mcc_generated_files/eusart.c: 188:     if(0 == PIE3bits.TXIE)
  5966  05B1  002E               	movlb	14	; select bank14
  5967  05B2  1A19               	btfsc	25,4	;volatile
  5968  05B3  2DB5               	goto	u681
  5969  05B4  2DB6               	goto	u680
  5970  05B5                     u681:
  5971  05B5  2DBB               	goto	l230
  5972  05B6                     u680:
  5973  05B6                     l1819:
  5974                           
  5975                           ;mcc_generated_files/eusart.c: 189:     {;mcc_generated_files/eusart.c: 190:         TX1
      +                          REG = txData;
  5976  05B6  0020               	movlb	0	; select bank0
  5977  05B7  0825               	movf	EUSART_Write@txData,w
  5978  05B8  0022               	movlb	2	; select bank2
  5979  05B9  009A               	movwf	26	;volatile
  5980                           
  5981                           ;mcc_generated_files/eusart.c: 191:     }
  5982  05BA  2DD3               	goto	l1831
  5983  05BB                     l230:	
  5984                           ;mcc_generated_files/eusart.c: 192:     else
  5985                           
  5986                           
  5987                           ;mcc_generated_files/eusart.c: 193:     {;mcc_generated_files/eusart.c: 194:         PIE
      +                          3bits.TXIE = 0;
  5988  05BB  1219               	bcf	25,4	;volatile
  5989  05BC                     l1821:
  5990                           
  5991                           ;mcc_generated_files/eusart.c: 195:         eusartTxBuffer[eusartTxHead++] = txData;
  5992  05BC  0020               	movlb	0	; select bank0
  5993  05BD  0825               	movf	EUSART_Write@txData,w
  5994  05BE  00A4               	movwf	??_EUSART_Write
  5995  05BF  086B               	movf	_eusartTxHead,w
  5996  05C0  3EB0               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  5997  05C1  0086               	movwf	6
  5998  05C2  0187               	clrf	7
  5999  05C3  0824               	movf	??_EUSART_Write,w
  6000  05C4  0081               	movwf	1
  6001  05C5                     l1823:
  6002  05C5  3001               	movlw	1
  6003  05C6  00A4               	movwf	??_EUSART_Write
  6004  05C7  0824               	movf	??_EUSART_Write,w
  6005  05C8  07EB               	addwf	_eusartTxHead,f	;volatile
  6006  05C9                     l1825:
  6007                           
  6008                           ;mcc_generated_files/eusart.c: 196:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  6009  05C9  3008               	movlw	8
  6010  05CA  026B               	subwf	_eusartTxHead,w	;volatile
  6011  05CB  1C03               	skipc
  6012  05CC  2DCE               	goto	u691
  6013  05CD  2DCF               	goto	u690
  6014  05CE                     u691:
  6015  05CE  2DD0               	goto	l1829
  6016  05CF                     u690:
  6017  05CF                     l1827:
  6018                           
  6019                           ;mcc_generated_files/eusart.c: 197:         {;mcc_generated_files/eusart.c: 198:        
      +                               eusartTxHead = 0;
  6020  05CF  01EB               	clrf	_eusartTxHead	;volatile
  6021  05D0                     l1829:
  6022                           
  6023                           ;mcc_generated_files/eusart.c: 200:         eusartTxBufferRemaining--;
  6024  05D0  3001               	movlw	1
  6025  05D1  0021               	movlb	1	; select bank1
  6026  05D2  02E0               	subwf	_eusartTxBufferRemaining^(0+128),f	;volatile
  6027  05D3                     l1831:
  6028                           
  6029                           ;mcc_generated_files/eusart.c: 202:     PIE3bits.TXIE = 1;
  6030  05D3  002E               	movlb	14	; select bank14
  6031  05D4  1619               	bsf	25,4	;volatile
  6032  05D5                     l233:
  6033  05D5  0008               	return
  6034  05D6                     __end_of_EUSART_Write:
  6035                           
  6036                           	psect	text11
  6037  030F                     __ptext11:	
  6038 ;; *************** function ___lomod *****************
  6039 ;; Defined at:
  6040 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lomod.c"
  6041 ;; Parameters:    Size  Location     Type
  6042 ;;  divisor         8    4[BANK0 ] unsigned long long 
  6043 ;;  dividend        8   12[BANK0 ] unsigned long long 
  6044 ;; Auto vars:     Size  Location     Type
  6045 ;;  counter         1   21[BANK0 ] unsigned char 
  6046 ;; Return value:  Size  Location     Type
  6047 ;;                  8    4[BANK0 ] unsigned long long 
  6048 ;; Registers used:
  6049 ;;		wreg, status,2, status,0
  6050 ;; Tracked objects:
  6051 ;;		On entry : 0/0
  6052 ;;		On exit  : 0/0
  6053 ;;		Unchanged: 0/0
  6054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6055 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6056 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6057 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6058 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6059 ;;Total ram usage:       18 bytes
  6060 ;; Hardware stack levels used: 1
  6061 ;; Hardware stack levels required when called: 4
  6062 ;; This function calls:
  6063 ;;		Nothing
  6064 ;; This function is called by:
  6065 ;;		_utoa
  6066 ;; This function uses a non-reentrant model
  6067 ;;
  6068                           
  6069  030F                     ___lomod:	
  6070                           ;psect for function ___lomod
  6071                           
  6072  030F                     l1889:	
  6073                           ;incstack = 0
  6074                           ; Regs used in ___lomod: [wreg+status,2+status,0]
  6075                           
  6076  030F  0020               	movlb	0	; select bank0
  6077  0310  0824               	movf	___lomod@divisor,w
  6078  0311  0425               	iorwf	___lomod@divisor+1,w
  6079  0312  0426               	iorwf	___lomod@divisor+2,w
  6080  0313  0427               	iorwf	___lomod@divisor+3,w
  6081  0314  0428               	iorwf	___lomod@divisor+4,w
  6082  0315  0429               	iorwf	___lomod@divisor+5,w
  6083  0316  042A               	iorwf	___lomod@divisor+6,w
  6084  0317  042B               	iorwf	___lomod@divisor+7,w
  6085  0318  1903               	skipnz
  6086  0319  2B1B               	goto	u811
  6087  031A  2B1C               	goto	u810
  6088  031B                     u811:
  6089  031B  2B6F               	goto	l863
  6090  031C                     u810:
  6091  031C                     l1891:
  6092  031C  01B5               	clrf	___lomod@counter
  6093  031D  0AB5               	incf	___lomod@counter,f
  6094  031E  2B2B               	goto	l1897
  6095  031F                     l1893:
  6096  031F  35A4               	lslf	___lomod@divisor,f
  6097  0320  0DA5               	rlf	___lomod@divisor+1,f
  6098  0321  0DA6               	rlf	___lomod@divisor+2,f
  6099  0322  0DA7               	rlf	___lomod@divisor+3,f
  6100  0323  0DA8               	rlf	___lomod@divisor+4,f
  6101  0324  0DA9               	rlf	___lomod@divisor+5,f
  6102  0325  0DAA               	rlf	___lomod@divisor+6,f
  6103  0326  0DAB               	rlf	___lomod@divisor+7,f
  6104  0327                     l1895:
  6105  0327  3001               	movlw	1
  6106  0328  00B4               	movwf	??___lomod
  6107  0329  0834               	movf	??___lomod,w
  6108  032A  07B5               	addwf	___lomod@counter,f
  6109  032B                     l1897:
  6110  032B  1FAB               	btfss	___lomod@divisor+7,7
  6111  032C  2B2E               	goto	u821
  6112  032D  2B2F               	goto	u820
  6113  032E                     u821:
  6114  032E  2B1F               	goto	l1893
  6115  032F                     u820:
  6116  032F                     l1899:
  6117  032F  082B               	movf	___lomod@divisor+7,w
  6118  0330  0233               	subwf	___lomod@dividend+7,w
  6119  0331  1D03               	skipz
  6120  0332  2B4D               	goto	u835
  6121  0333  082A               	movf	___lomod@divisor+6,w
  6122  0334  0232               	subwf	___lomod@dividend+6,w
  6123  0335  1D03               	skipz
  6124  0336  2B4D               	goto	u835
  6125  0337  0829               	movf	___lomod@divisor+5,w
  6126  0338  0231               	subwf	___lomod@dividend+5,w
  6127  0339  1D03               	skipz
  6128  033A  2B4D               	goto	u835
  6129  033B  0828               	movf	___lomod@divisor+4,w
  6130  033C  0230               	subwf	___lomod@dividend+4,w
  6131  033D  1D03               	skipz
  6132  033E  2B4D               	goto	u835
  6133  033F  0827               	movf	___lomod@divisor+3,w
  6134  0340  022F               	subwf	___lomod@dividend+3,w
  6135  0341  1D03               	skipz
  6136  0342  2B4D               	goto	u835
  6137  0343  0826               	movf	___lomod@divisor+2,w
  6138  0344  022E               	subwf	___lomod@dividend+2,w
  6139  0345  1D03               	skipz
  6140  0346  2B4D               	goto	u835
  6141  0347  0825               	movf	___lomod@divisor+1,w
  6142  0348  022D               	subwf	___lomod@dividend+1,w
  6143  0349  1D03               	skipz
  6144  034A  2B4D               	goto	u835
  6145  034B  0824               	movf	___lomod@divisor,w
  6146  034C  022C               	subwf	___lomod@dividend,w
  6147  034D                     u835:
  6148  034D  1C03               	skipc
  6149  034E  2B50               	goto	u831
  6150  034F  2B51               	goto	u830
  6151  0350                     u831:
  6152  0350  2B61               	goto	l1903
  6153  0351                     u830:
  6154  0351                     l1901:
  6155  0351  0824               	movf	___lomod@divisor,w
  6156  0352  02AC               	subwf	___lomod@dividend,f
  6157  0353  0825               	movf	___lomod@divisor+1,w
  6158  0354  3BAD               	subwfb	___lomod@dividend+1,f
  6159  0355  0826               	movf	___lomod@divisor+2,w
  6160  0356  3BAE               	subwfb	___lomod@dividend+2,f
  6161  0357  0827               	movf	___lomod@divisor+3,w
  6162  0358  3BAF               	subwfb	___lomod@dividend+3,f
  6163  0359  0828               	movf	___lomod@divisor+4,w
  6164  035A  3BB0               	subwfb	___lomod@dividend+4,f
  6165  035B  0829               	movf	___lomod@divisor+5,w
  6166  035C  3BB1               	subwfb	___lomod@dividend+5,f
  6167  035D  082A               	movf	___lomod@divisor+6,w
  6168  035E  3BB2               	subwfb	___lomod@dividend+6,f
  6169  035F  082B               	movf	___lomod@divisor+7,w
  6170  0360  3BB3               	subwfb	___lomod@dividend+7,f
  6171  0361                     l1903:
  6172  0361  36AB               	lsrf	___lomod@divisor+7,f
  6173  0362  0CAA               	rrf	___lomod@divisor+6,f
  6174  0363  0CA9               	rrf	___lomod@divisor+5,f
  6175  0364  0CA8               	rrf	___lomod@divisor+4,f
  6176  0365  0CA7               	rrf	___lomod@divisor+3,f
  6177  0366  0CA6               	rrf	___lomod@divisor+2,f
  6178  0367  0CA5               	rrf	___lomod@divisor+1,f
  6179  0368  0CA4               	rrf	___lomod@divisor,f
  6180  0369  3001               	movlw	1
  6181  036A  02B5               	subwf	___lomod@counter,f
  6182  036B  1D03               	btfss	3,2
  6183  036C  2B6E               	goto	u841
  6184  036D  2B6F               	goto	u840
  6185  036E                     u841:
  6186  036E  2B2F               	goto	l1899
  6187  036F                     u840:
  6188  036F                     l863:
  6189  036F  082C               	movf	___lomod@dividend,w
  6190  0370  00A4               	movwf	?___lomod
  6191  0371  082D               	movf	___lomod@dividend+1,w
  6192  0372  00A5               	movwf	?___lomod+1
  6193  0373  082E               	movf	___lomod@dividend+2,w
  6194  0374  00A6               	movwf	?___lomod+2
  6195  0375  082F               	movf	___lomod@dividend+3,w
  6196  0376  00A7               	movwf	?___lomod+3
  6197  0377  0830               	movf	___lomod@dividend+4,w
  6198  0378  00A8               	movwf	?___lomod+4
  6199  0379  0831               	movf	___lomod@dividend+5,w
  6200  037A  00A9               	movwf	?___lomod+5
  6201  037B  0832               	movf	___lomod@dividend+6,w
  6202  037C  00AA               	movwf	?___lomod+6
  6203  037D  0833               	movf	___lomod@dividend+7,w
  6204  037E  00AB               	movwf	?___lomod+7
  6205  037F                     l870:
  6206  037F  0008               	return
  6207  0380                     __end_of___lomod:
  6208                           
  6209                           	psect	text12
  6210  028B                     __ptext12:	
  6211 ;; *************** function ___lodiv *****************
  6212 ;; Defined at:
  6213 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lodiv.c"
  6214 ;; Parameters:    Size  Location     Type
  6215 ;;  divisor         8    4[BANK0 ] unsigned long long 
  6216 ;;  dividend        8   12[BANK0 ] unsigned long long 
  6217 ;; Auto vars:     Size  Location     Type
  6218 ;;  quotient        8   21[BANK0 ] unsigned long long 
  6219 ;;  counter         1   29[BANK0 ] unsigned char 
  6220 ;; Return value:  Size  Location     Type
  6221 ;;                  8    4[BANK0 ] unsigned long long 
  6222 ;; Registers used:
  6223 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6224 ;; Tracked objects:
  6225 ;;		On entry : 0/0
  6226 ;;		On exit  : 0/0
  6227 ;;		Unchanged: 0/0
  6228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6229 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6230 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6231 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6232 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6233 ;;Total ram usage:       26 bytes
  6234 ;; Hardware stack levels used: 1
  6235 ;; Hardware stack levels required when called: 4
  6236 ;; This function calls:
  6237 ;;		Nothing
  6238 ;; This function is called by:
  6239 ;;		_utoa
  6240 ;; This function uses a non-reentrant model
  6241 ;;
  6242                           
  6243  028B                     ___lodiv:	
  6244                           ;psect for function ___lodiv
  6245                           
  6246  028B                     l1867:	
  6247                           ;incstack = 0
  6248                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  6249                           
  6250  028B  3035               	movlw	low ___lodiv@quotient
  6251  028C  0086               	movwf	6
  6252  028D  3000               	movlw	high ___lodiv@quotient
  6253  028E  0087               	movwf	7
  6254  028F  3008               	movlw	8
  6255  0290  0020               	movlb	0	; select bank0
  6256  0291  00B4               	movwf	??___lodiv
  6257  0292  3000               	movlw	0
  6258  0293                     u760:
  6259  0293  001E               	movwi fsr1++
  6260  0294  0BB4               	decfsz	??___lodiv,f
  6261  0295  2A93               	goto	u760
  6262  0296                     l1869:
  6263  0296  0824               	movf	___lodiv@divisor,w
  6264  0297  0425               	iorwf	___lodiv@divisor+1,w
  6265  0298  0426               	iorwf	___lodiv@divisor+2,w
  6266  0299  0427               	iorwf	___lodiv@divisor+3,w
  6267  029A  0428               	iorwf	___lodiv@divisor+4,w
  6268  029B  0429               	iorwf	___lodiv@divisor+5,w
  6269  029C  042A               	iorwf	___lodiv@divisor+6,w
  6270  029D  042B               	iorwf	___lodiv@divisor+7,w
  6271  029E  1903               	skipnz
  6272  029F  2AA1               	goto	u771
  6273  02A0  2AA2               	goto	u770
  6274  02A1                     u771:
  6275  02A1  2AFE               	goto	l853
  6276  02A2                     u770:
  6277  02A2                     l1871:
  6278  02A2  01BD               	clrf	___lodiv@counter
  6279  02A3  0ABD               	incf	___lodiv@counter,f
  6280  02A4  2AB1               	goto	l1877
  6281  02A5                     l1873:
  6282  02A5  35A4               	lslf	___lodiv@divisor,f
  6283  02A6  0DA5               	rlf	___lodiv@divisor+1,f
  6284  02A7  0DA6               	rlf	___lodiv@divisor+2,f
  6285  02A8  0DA7               	rlf	___lodiv@divisor+3,f
  6286  02A9  0DA8               	rlf	___lodiv@divisor+4,f
  6287  02AA  0DA9               	rlf	___lodiv@divisor+5,f
  6288  02AB  0DAA               	rlf	___lodiv@divisor+6,f
  6289  02AC  0DAB               	rlf	___lodiv@divisor+7,f
  6290  02AD                     l1875:
  6291  02AD  3001               	movlw	1
  6292  02AE  00B4               	movwf	??___lodiv
  6293  02AF  0834               	movf	??___lodiv,w
  6294  02B0  07BD               	addwf	___lodiv@counter,f
  6295  02B1                     l1877:
  6296  02B1  1FAB               	btfss	___lodiv@divisor+7,7
  6297  02B2  2AB4               	goto	u781
  6298  02B3  2AB5               	goto	u780
  6299  02B4                     u781:
  6300  02B4  2AA5               	goto	l1873
  6301  02B5                     u780:
  6302  02B5                     l1879:
  6303  02B5  35B5               	lslf	___lodiv@quotient,f
  6304  02B6  0DB6               	rlf	___lodiv@quotient+1,f
  6305  02B7  0DB7               	rlf	___lodiv@quotient+2,f
  6306  02B8  0DB8               	rlf	___lodiv@quotient+3,f
  6307  02B9  0DB9               	rlf	___lodiv@quotient+4,f
  6308  02BA  0DBA               	rlf	___lodiv@quotient+5,f
  6309  02BB  0DBB               	rlf	___lodiv@quotient+6,f
  6310  02BC  0DBC               	rlf	___lodiv@quotient+7,f
  6311  02BD                     l1881:
  6312  02BD  082B               	movf	___lodiv@divisor+7,w
  6313  02BE  0233               	subwf	___lodiv@dividend+7,w
  6314  02BF  1D03               	skipz
  6315  02C0  2ADB               	goto	u795
  6316  02C1  082A               	movf	___lodiv@divisor+6,w
  6317  02C2  0232               	subwf	___lodiv@dividend+6,w
  6318  02C3  1D03               	skipz
  6319  02C4  2ADB               	goto	u795
  6320  02C5  0829               	movf	___lodiv@divisor+5,w
  6321  02C6  0231               	subwf	___lodiv@dividend+5,w
  6322  02C7  1D03               	skipz
  6323  02C8  2ADB               	goto	u795
  6324  02C9  0828               	movf	___lodiv@divisor+4,w
  6325  02CA  0230               	subwf	___lodiv@dividend+4,w
  6326  02CB  1D03               	skipz
  6327  02CC  2ADB               	goto	u795
  6328  02CD  0827               	movf	___lodiv@divisor+3,w
  6329  02CE  022F               	subwf	___lodiv@dividend+3,w
  6330  02CF  1D03               	skipz
  6331  02D0  2ADB               	goto	u795
  6332  02D1  0826               	movf	___lodiv@divisor+2,w
  6333  02D2  022E               	subwf	___lodiv@dividend+2,w
  6334  02D3  1D03               	skipz
  6335  02D4  2ADB               	goto	u795
  6336  02D5  0825               	movf	___lodiv@divisor+1,w
  6337  02D6  022D               	subwf	___lodiv@dividend+1,w
  6338  02D7  1D03               	skipz
  6339  02D8  2ADB               	goto	u795
  6340  02D9  0824               	movf	___lodiv@divisor,w
  6341  02DA  022C               	subwf	___lodiv@dividend,w
  6342  02DB                     u795:
  6343  02DB  1C03               	skipc
  6344  02DC  2ADE               	goto	u791
  6345  02DD  2ADF               	goto	u790
  6346  02DE                     u791:
  6347  02DE  2AF0               	goto	l1887
  6348  02DF                     u790:
  6349  02DF                     l1883:
  6350  02DF  0824               	movf	___lodiv@divisor,w
  6351  02E0  02AC               	subwf	___lodiv@dividend,f
  6352  02E1  0825               	movf	___lodiv@divisor+1,w
  6353  02E2  3BAD               	subwfb	___lodiv@dividend+1,f
  6354  02E3  0826               	movf	___lodiv@divisor+2,w
  6355  02E4  3BAE               	subwfb	___lodiv@dividend+2,f
  6356  02E5  0827               	movf	___lodiv@divisor+3,w
  6357  02E6  3BAF               	subwfb	___lodiv@dividend+3,f
  6358  02E7  0828               	movf	___lodiv@divisor+4,w
  6359  02E8  3BB0               	subwfb	___lodiv@dividend+4,f
  6360  02E9  0829               	movf	___lodiv@divisor+5,w
  6361  02EA  3BB1               	subwfb	___lodiv@dividend+5,f
  6362  02EB  082A               	movf	___lodiv@divisor+6,w
  6363  02EC  3BB2               	subwfb	___lodiv@dividend+6,f
  6364  02ED  082B               	movf	___lodiv@divisor+7,w
  6365  02EE  3BB3               	subwfb	___lodiv@dividend+7,f
  6366  02EF                     l1885:
  6367  02EF  1435               	bsf	___lodiv@quotient,0
  6368  02F0                     l1887:
  6369  02F0  36AB               	lsrf	___lodiv@divisor+7,f
  6370  02F1  0CAA               	rrf	___lodiv@divisor+6,f
  6371  02F2  0CA9               	rrf	___lodiv@divisor+5,f
  6372  02F3  0CA8               	rrf	___lodiv@divisor+4,f
  6373  02F4  0CA7               	rrf	___lodiv@divisor+3,f
  6374  02F5  0CA6               	rrf	___lodiv@divisor+2,f
  6375  02F6  0CA5               	rrf	___lodiv@divisor+1,f
  6376  02F7  0CA4               	rrf	___lodiv@divisor,f
  6377  02F8  3001               	movlw	1
  6378  02F9  02BD               	subwf	___lodiv@counter,f
  6379  02FA  1D03               	btfss	3,2
  6380  02FB  2AFD               	goto	u801
  6381  02FC  2AFE               	goto	u800
  6382  02FD                     u801:
  6383  02FD  2AB5               	goto	l1879
  6384  02FE                     u800:
  6385  02FE                     l853:
  6386  02FE  0835               	movf	___lodiv@quotient,w
  6387  02FF  00A4               	movwf	?___lodiv
  6388  0300  0836               	movf	___lodiv@quotient+1,w
  6389  0301  00A5               	movwf	?___lodiv+1
  6390  0302  0837               	movf	___lodiv@quotient+2,w
  6391  0303  00A6               	movwf	?___lodiv+2
  6392  0304  0838               	movf	___lodiv@quotient+3,w
  6393  0305  00A7               	movwf	?___lodiv+3
  6394  0306  0839               	movf	___lodiv@quotient+4,w
  6395  0307  00A8               	movwf	?___lodiv+4
  6396  0308  083A               	movf	___lodiv@quotient+5,w
  6397  0309  00A9               	movwf	?___lodiv+5
  6398  030A  083B               	movf	___lodiv@quotient+6,w
  6399  030B  00AA               	movwf	?___lodiv+6
  6400  030C  083C               	movf	___lodiv@quotient+7,w
  6401  030D  00AB               	movwf	?___lodiv+7
  6402  030E                     l860:
  6403  030E  0008               	return
  6404  030F                     __end_of___lodiv:
  6405                           
  6406                           	psect	text13
  6407  070C                     __ptext13:	
  6408 ;; *************** function _SYSTEM_Initialize *****************
  6409 ;; Defined at:
  6410 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6411 ;; Parameters:    Size  Location     Type
  6412 ;;		None
  6413 ;; Auto vars:     Size  Location     Type
  6414 ;;		None
  6415 ;; Return value:  Size  Location     Type
  6416 ;;                  1    wreg      void 
  6417 ;; Registers used:
  6418 ;;		wreg, status,2, status,0, pclath, cstack
  6419 ;; Tracked objects:
  6420 ;;		On entry : 0/0
  6421 ;;		On exit  : 0/0
  6422 ;;		Unchanged: 0/0
  6423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6428 ;;Total ram usage:        0 bytes
  6429 ;; Hardware stack levels used: 1
  6430 ;; Hardware stack levels required when called: 6
  6431 ;; This function calls:
  6432 ;;		_ADCC_Initialize
  6433 ;;		_EUSART_Initialize
  6434 ;;		_OSCILLATOR_Initialize
  6435 ;;		_PIN_MANAGER_Initialize
  6436 ;;		_PMD_Initialize
  6437 ;; This function is called by:
  6438 ;;		_main
  6439 ;; This function uses a non-reentrant model
  6440 ;;
  6441                           
  6442  070C                     _SYSTEM_Initialize:	
  6443                           ;psect for function _SYSTEM_Initialize
  6444                           
  6445  070C                     l2221:	
  6446                           ;incstack = 0
  6447                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6448                           
  6449                           
  6450                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  6451  070C  3187  276C  3187   	fcall	_PMD_Initialize
  6452  070F                     l2223:
  6453                           
  6454                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  6455  070F  3186  2603  3187   	fcall	_PIN_MANAGER_Initialize
  6456  0712                     l2225:
  6457                           
  6458                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  6459  0712  3187  2725  3187   	fcall	_OSCILLATOR_Initialize
  6460  0715                     l2227:
  6461                           
  6462                           ;mcc_generated_files/mcc.c: 55:     ADCC_Initialize();
  6463  0715  3186  26E2  3187   	fcall	_ADCC_Initialize
  6464  0718                     l2229:
  6465                           
  6466                           ;mcc_generated_files/mcc.c: 56:     EUSART_Initialize();
  6467  0718  3184  2486  3187   	fcall	_EUSART_Initialize
  6468  071B                     l112:
  6469  071B  0008               	return
  6470  071C                     __end_of_SYSTEM_Initialize:
  6471                           
  6472                           	psect	text14
  6473  076C                     __ptext14:	
  6474 ;; *************** function _PMD_Initialize *****************
  6475 ;; Defined at:
  6476 ;;		line 73 in file "mcc_generated_files/mcc.c"
  6477 ;; Parameters:    Size  Location     Type
  6478 ;;		None
  6479 ;; Auto vars:     Size  Location     Type
  6480 ;;		None
  6481 ;; Return value:  Size  Location     Type
  6482 ;;                  1    wreg      void 
  6483 ;; Registers used:
  6484 ;;		status,2
  6485 ;; Tracked objects:
  6486 ;;		On entry : 0/0
  6487 ;;		On exit  : 0/0
  6488 ;;		Unchanged: 0/0
  6489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6494 ;;Total ram usage:        0 bytes
  6495 ;; Hardware stack levels used: 1
  6496 ;; Hardware stack levels required when called: 4
  6497 ;; This function calls:
  6498 ;;		Nothing
  6499 ;; This function is called by:
  6500 ;;		_SYSTEM_Initialize
  6501 ;; This function uses a non-reentrant model
  6502 ;;
  6503                           
  6504  076C                     _PMD_Initialize:	
  6505                           ;psect for function _PMD_Initialize
  6506                           
  6507  076C                     l2103:	
  6508                           ;incstack = 0
  6509                           ; Regs used in _PMD_Initialize: [status,2]
  6510                           
  6511                           
  6512                           ;mcc_generated_files/mcc.c: 76:     PMD0 = 0x00;
  6513  076C  002F               	movlb	15	; select bank15
  6514  076D  0196               	clrf	22	;volatile
  6515                           
  6516                           ;mcc_generated_files/mcc.c: 78:     PMD1 = 0x00;
  6517  076E  0197               	clrf	23	;volatile
  6518                           
  6519                           ;mcc_generated_files/mcc.c: 80:     PMD2 = 0x00;
  6520  076F  0198               	clrf	24	;volatile
  6521                           
  6522                           ;mcc_generated_files/mcc.c: 82:     PMD3 = 0x00;
  6523  0770  0199               	clrf	25	;volatile
  6524                           
  6525                           ;mcc_generated_files/mcc.c: 84:     PMD4 = 0x00;
  6526  0771  019A               	clrf	26	;volatile
  6527                           
  6528                           ;mcc_generated_files/mcc.c: 86:     PMD5 = 0x00;
  6529  0772  019B               	clrf	27	;volatile
  6530  0773                     l118:
  6531  0773  0008               	return
  6532  0774                     __end_of_PMD_Initialize:
  6533                           
  6534                           	psect	text15
  6535  0603                     __ptext15:	
  6536 ;; *************** function _PIN_MANAGER_Initialize *****************
  6537 ;; Defined at:
  6538 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  6539 ;; Parameters:    Size  Location     Type
  6540 ;;		None
  6541 ;; Auto vars:     Size  Location     Type
  6542 ;;		None
  6543 ;; Return value:  Size  Location     Type
  6544 ;;                  1    wreg      void 
  6545 ;; Registers used:
  6546 ;;		wreg, status,2
  6547 ;; Tracked objects:
  6548 ;;		On entry : 0/0
  6549 ;;		On exit  : 0/0
  6550 ;;		Unchanged: 0/0
  6551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6556 ;;Total ram usage:        0 bytes
  6557 ;; Hardware stack levels used: 1
  6558 ;; Hardware stack levels required when called: 4
  6559 ;; This function calls:
  6560 ;;		Nothing
  6561 ;; This function is called by:
  6562 ;;		_SYSTEM_Initialize
  6563 ;; This function uses a non-reentrant model
  6564 ;;
  6565                           
  6566  0603                     _PIN_MANAGER_Initialize:	
  6567                           ;psect for function _PIN_MANAGER_Initialize
  6568                           
  6569  0603                     l2073:	
  6570                           ;incstack = 0
  6571                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  6572                           
  6573                           
  6574                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  6575  0603  0020               	movlb	0	; select bank0
  6576  0604  0196               	clrf	22	;volatile
  6577                           
  6578                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  6579  0605  0197               	clrf	23	;volatile
  6580                           
  6581                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  6582  0606  0198               	clrf	24	;volatile
  6583  0607                     l2075:
  6584                           
  6585                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xF0;
  6586  0607  30F0               	movlw	240
  6587  0608  0091               	movwf	17	;volatile
  6588  0609                     l2077:
  6589                           
  6590                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  6591  0609  30FF               	movlw	255
  6592  060A  0092               	movwf	18	;volatile
  6593  060B                     l2079:
  6594                           
  6595                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFE;
  6596  060B  30FE               	movlw	254
  6597  060C  0093               	movwf	19	;volatile
  6598  060D                     l2081:
  6599                           
  6600                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFC;
  6601  060D  30FC               	movlw	252
  6602  060E  003E               	movlb	30	; select bank30
  6603  060F  00CE               	movwf	78	;volatile
  6604  0610                     l2083:
  6605                           
  6606                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xFF;
  6607  0610  30FF               	movlw	255
  6608  0611  00C3               	movwf	67	;volatile
  6609  0612                     l2085:
  6610                           
  6611                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0xD0;
  6612  0612  30D0               	movlw	208
  6613  0613  00B8               	movwf	56	;volatile
  6614                           
  6615                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
  6616  0614  01E5               	clrf	101	;volatile
  6617                           
  6618                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
  6619  0615  01C4               	clrf	68	;volatile
  6620                           
  6621                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
  6622  0616  01B9               	clrf	57	;volatile
  6623                           
  6624                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x00;
  6625  0617  01CF               	clrf	79	;volatile
  6626                           
  6627                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
  6628  0618  01BA               	clrf	58	;volatile
  6629                           
  6630                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
  6631  0619  01C5               	clrf	69	;volatile
  6632                           
  6633                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
  6634  061A  01D0               	clrf	80	;volatile
  6635  061B                     l2087:
  6636                           
  6637                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0xFF;
  6638  061B  30FF               	movlw	255
  6639  061C  00BB               	movwf	59	;volatile
  6640  061D                     l2089:
  6641                           
  6642                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xFF;
  6643  061D  30FF               	movlw	255
  6644  061E  00C6               	movwf	70	;volatile
  6645  061F                     l2091:
  6646                           
  6647                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
  6648  061F  30FF               	movlw	255
  6649  0620  00D1               	movwf	81	;volatile
  6650  0621                     l2093:
  6651                           
  6652                           ;mcc_generated_files/pin_manager.c: 103:     INLVLA = 0xFF;
  6653  0621  30FF               	movlw	255
  6654  0622  00BC               	movwf	60	;volatile
  6655  0623                     l2095:
  6656                           
  6657                           ;mcc_generated_files/pin_manager.c: 104:     INLVLB = 0xFF;
  6658  0623  30FF               	movlw	255
  6659  0624  00C7               	movwf	71	;volatile
  6660  0625                     l2097:
  6661                           
  6662                           ;mcc_generated_files/pin_manager.c: 105:     INLVLC = 0xFF;
  6663  0625  30FF               	movlw	255
  6664  0626  00D2               	movwf	82	;volatile
  6665                           
  6666                           ;mcc_generated_files/pin_manager.c: 106:     INLVLE = 0x00;
  6667  0627  01E8               	clrf	104	;volatile
  6668  0628                     l2099:
  6669                           
  6670                           ;mcc_generated_files/pin_manager.c: 115:     RC0PPS = 0x10;
  6671  0628  3010               	movlw	16
  6672  0629  00A0               	movwf	32	;volatile
  6673  062A                     l2101:
  6674                           
  6675                           ;mcc_generated_files/pin_manager.c: 116:     RXPPS = 0x11;
  6676  062A  3011               	movlw	17
  6677  062B  003D               	movlb	29	; select bank29
  6678  062C  00CB               	movwf	75	;volatile
  6679  062D                     l53:
  6680  062D  0008               	return
  6681  062E                     __end_of_PIN_MANAGER_Initialize:
  6682                           
  6683                           	psect	text16
  6684  0725                     __ptext16:	
  6685 ;; *************** function _OSCILLATOR_Initialize *****************
  6686 ;; Defined at:
  6687 ;;		line 59 in file "mcc_generated_files/mcc.c"
  6688 ;; Parameters:    Size  Location     Type
  6689 ;;		None
  6690 ;; Auto vars:     Size  Location     Type
  6691 ;;		None
  6692 ;; Return value:  Size  Location     Type
  6693 ;;                  1    wreg      void 
  6694 ;; Registers used:
  6695 ;;		wreg, status,2
  6696 ;; Tracked objects:
  6697 ;;		On entry : 0/0
  6698 ;;		On exit  : 0/0
  6699 ;;		Unchanged: 0/0
  6700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6705 ;;Total ram usage:        0 bytes
  6706 ;; Hardware stack levels used: 1
  6707 ;; Hardware stack levels required when called: 4
  6708 ;; This function calls:
  6709 ;;		Nothing
  6710 ;; This function is called by:
  6711 ;;		_SYSTEM_Initialize
  6712 ;; This function uses a non-reentrant model
  6713 ;;
  6714                           
  6715  0725                     _OSCILLATOR_Initialize:	
  6716                           ;psect for function _OSCILLATOR_Initialize
  6717                           
  6718  0725                     l2105:	
  6719                           ;incstack = 0
  6720                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6721                           
  6722                           
  6723                           ;mcc_generated_files/mcc.c: 62:     OSCCON1 = 0x60;
  6724  0725  3060               	movlw	96
  6725  0726  0031               	movlb	17	; select bank17
  6726  0727  008D               	movwf	13	;volatile
  6727  0728                     l2107:
  6728                           
  6729                           ;mcc_generated_files/mcc.c: 64:     OSCCON3 = 0x00;
  6730  0728  018F               	clrf	15	;volatile
  6731  0729                     l2109:
  6732                           
  6733                           ;mcc_generated_files/mcc.c: 66:     OSCEN = 0x00;
  6734  0729  0191               	clrf	17	;volatile
  6735                           
  6736                           ;mcc_generated_files/mcc.c: 68:     OSCFRQ = 0x03;
  6737  072A  3003               	movlw	3
  6738  072B  0093               	movwf	19	;volatile
  6739  072C                     l2111:
  6740                           
  6741                           ;mcc_generated_files/mcc.c: 70:     OSCTUNE = 0x00;
  6742  072C  0192               	clrf	18	;volatile
  6743  072D                     l115:
  6744  072D  0008               	return
  6745  072E                     __end_of_OSCILLATOR_Initialize:
  6746                           
  6747                           	psect	text17
  6748  0486                     __ptext17:	
  6749 ;; *************** function _EUSART_Initialize *****************
  6750 ;; Defined at:
  6751 ;;		line 97 in file "mcc_generated_files/eusart.c"
  6752 ;; Parameters:    Size  Location     Type
  6753 ;;		None
  6754 ;; Auto vars:     Size  Location     Type
  6755 ;;		None
  6756 ;; Return value:  Size  Location     Type
  6757 ;;                  1    wreg      void 
  6758 ;; Registers used:
  6759 ;;		wreg, status,2, status,0, pclath, cstack
  6760 ;; Tracked objects:
  6761 ;;		On entry : 0/0
  6762 ;;		On exit  : 0/0
  6763 ;;		Unchanged: 0/0
  6764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6767 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6768 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6769 ;;Total ram usage:        1 bytes
  6770 ;; Hardware stack levels used: 1
  6771 ;; Hardware stack levels required when called: 5
  6772 ;; This function calls:
  6773 ;;		_EUSART_SetErrorHandler
  6774 ;;		_EUSART_SetFramingErrorHandler
  6775 ;;		_EUSART_SetOverrunErrorHandler
  6776 ;;		_EUSART_SetRxInterruptHandler
  6777 ;;		_EUSART_SetTxInterruptHandler
  6778 ;; This function is called by:
  6779 ;;		_SYSTEM_Initialize
  6780 ;; This function uses a non-reentrant model
  6781 ;;
  6782                           
  6783  0486                     _EUSART_Initialize:	
  6784                           ;psect for function _EUSART_Initialize
  6785                           
  6786  0486                     l2119:	
  6787                           ;incstack = 0
  6788                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6789                           
  6790                           
  6791                           ;mcc_generated_files/eusart.c: 100:     PIE3bits.RCIE = 0;
  6792  0486  002E               	movlb	14	; select bank14
  6793  0487  1299               	bcf	25,5	;volatile
  6794  0488                     l2121:
  6795                           
  6796                           ;mcc_generated_files/eusart.c: 101:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR)
      +                          ;
  6797  0488  30F8               	movlw	low _EUSART_Receive_ISR
  6798  0489  0020               	movlb	0	; select bank0
  6799  048A  00A4               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  6800  048B  3001               	movlw	high _EUSART_Receive_ISR
  6801  048C  00A5               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  6802  048D  3187  2737  3184   	fcall	_EUSART_SetRxInterruptHandler
  6803  0490                     l2123:
  6804                           
  6805                           ;mcc_generated_files/eusart.c: 102:     PIE3bits.TXIE = 0;
  6806  0490  002E               	movlb	14	; select bank14
  6807  0491  1219               	bcf	25,4	;volatile
  6808                           
  6809                           ;mcc_generated_files/eusart.c: 103:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR
      +                          );
  6810  0492  3057               	movlw	low _EUSART_Transmit_ISR
  6811  0493  0020               	movlb	0	; select bank0
  6812  0494  00A4               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  6813  0495  3006               	movlw	high _EUSART_Transmit_ISR
  6814  0496  00A5               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  6815  0497  3187  272E  3184   	fcall	_EUSART_SetTxInterruptHandler
  6816  049A                     l2125:
  6817                           
  6818                           ;mcc_generated_files/eusart.c: 107:     BAUD1CON = 0x08;
  6819  049A  3008               	movlw	8
  6820  049B  0022               	movlb	2	; select bank2
  6821  049C  009F               	movwf	31	;volatile
  6822  049D                     l2127:
  6823                           
  6824                           ;mcc_generated_files/eusart.c: 110:     RC1STA = 0x90;
  6825  049D  3090               	movlw	144
  6826  049E  009D               	movwf	29	;volatile
  6827  049F                     l2129:
  6828                           
  6829                           ;mcc_generated_files/eusart.c: 113:     TX1STA = 0x24;
  6830  049F  3024               	movlw	36
  6831  04A0  009E               	movwf	30	;volatile
  6832  04A1                     l2131:
  6833                           
  6834                           ;mcc_generated_files/eusart.c: 116:     SP1BRGL = 0xCF;
  6835  04A1  30CF               	movlw	207
  6836  04A2  009B               	movwf	27	;volatile
  6837  04A3                     l2133:
  6838                           
  6839                           ;mcc_generated_files/eusart.c: 119:     SP1BRGH = 0x00;
  6840  04A3  019C               	clrf	28	;volatile
  6841  04A4                     l2135:
  6842                           
  6843                           ;mcc_generated_files/eusart.c: 122:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  6844  04A4  30A6               	movlw	low _EUSART_DefaultFramingErrorHandler
  6845  04A5  0020               	movlb	0	; select bank0
  6846  04A6  00A4               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  6847  04A7  3007               	movlw	high _EUSART_DefaultFramingErrorHandler
  6848  04A8  00A5               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  6849  04A9  3187  2749  3184   	fcall	_EUSART_SetFramingErrorHandler
  6850  04AC                     l2137:
  6851                           
  6852                           ;mcc_generated_files/eusart.c: 123:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  6853  04AC  309E               	movlw	low _EUSART_DefaultOverrunErrorHandler
  6854  04AD  0020               	movlb	0	; select bank0
  6855  04AE  00A4               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  6856  04AF  3007               	movlw	high _EUSART_DefaultOverrunErrorHandler
  6857  04B0  00A5               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  6858  04B1  3187  2740  3184   	fcall	_EUSART_SetOverrunErrorHandler
  6859  04B4                     l2139:
  6860                           
  6861                           ;mcc_generated_files/eusart.c: 124:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  6862  04B4  30A2               	movlw	low _EUSART_DefaultErrorHandler
  6863  04B5  0020               	movlb	0	; select bank0
  6864  04B6  00A4               	movwf	EUSART_SetErrorHandler@interruptHandler
  6865  04B7  3007               	movlw	high _EUSART_DefaultErrorHandler
  6866  04B8  00A5               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  6867  04B9  3187  2752  3184   	fcall	_EUSART_SetErrorHandler
  6868                           
  6869                           ;mcc_generated_files/eusart.c: 126:     eusartRxLastError.status = 0;
  6870  04BC  0021               	movlb	1	; select bank1
  6871  04BD  01C4               	clrf	_eusartRxLastError^(0+128)	;volatile
  6872                           
  6873                           ;mcc_generated_files/eusart.c: 129:     eusartTxHead = 0;
  6874  04BE  0020               	movlb	0	; select bank0
  6875  04BF  01EB               	clrf	_eusartTxHead	;volatile
  6876                           
  6877                           ;mcc_generated_files/eusart.c: 130:     eusartTxTail = 0;
  6878  04C0  01EA               	clrf	_eusartTxTail	;volatile
  6879  04C1                     l2141:
  6880                           
  6881                           ;mcc_generated_files/eusart.c: 131:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  6882  04C1  3008               	movlw	8
  6883  04C2  00A6               	movwf	??_EUSART_Initialize
  6884  04C3  0826               	movf	??_EUSART_Initialize,w
  6885  04C4  0021               	movlb	1	; select bank1
  6886  04C5  00E0               	movwf	_eusartTxBufferRemaining^(0+128)	;volatile
  6887  04C6                     l2143:
  6888                           
  6889                           ;mcc_generated_files/eusart.c: 133:     eusartRxHead = 0;
  6890  04C6  0020               	movlb	0	; select bank0
  6891  04C7  01E9               	clrf	_eusartRxHead	;volatile
  6892  04C8                     l2145:
  6893                           
  6894                           ;mcc_generated_files/eusart.c: 134:     eusartRxTail = 0;
  6895  04C8  01E8               	clrf	_eusartRxTail	;volatile
  6896  04C9                     l2147:
  6897                           
  6898                           ;mcc_generated_files/eusart.c: 135:     eusartRxCount = 0;
  6899  04C9  0021               	movlb	1	; select bank1
  6900  04CA  01C5               	clrf	_eusartRxCount^(0+128)	;volatile
  6901  04CB                     l2149:
  6902                           
  6903                           ;mcc_generated_files/eusart.c: 138:     PIE3bits.RCIE = 1;
  6904  04CB  002E               	movlb	14	; select bank14
  6905  04CC  1699               	bsf	25,5	;volatile
  6906  04CD                     l205:
  6907  04CD  0008               	return
  6908  04CE                     __end_of_EUSART_Initialize:
  6909                           
  6910                           	psect	text18
  6911  072E                     __ptext18:	
  6912 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  6913 ;; Defined at:
  6914 ;;		line 323 in file "mcc_generated_files/eusart.c"
  6915 ;; Parameters:    Size  Location     Type
  6916 ;;  interruptHan    2    4[BANK0 ] PTR FTN()void 
  6917 ;;		 -> EUSART_Transmit_ISR(1), 
  6918 ;; Auto vars:     Size  Location     Type
  6919 ;;		None
  6920 ;; Return value:  Size  Location     Type
  6921 ;;                  1    wreg      void 
  6922 ;; Registers used:
  6923 ;;		wreg
  6924 ;; Tracked objects:
  6925 ;;		On entry : 0/0
  6926 ;;		On exit  : 0/0
  6927 ;;		Unchanged: 0/0
  6928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6929 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6932 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6933 ;;Total ram usage:        2 bytes
  6934 ;; Hardware stack levels used: 1
  6935 ;; Hardware stack levels required when called: 4
  6936 ;; This function calls:
  6937 ;;		Nothing
  6938 ;; This function is called by:
  6939 ;;		_EUSART_Initialize
  6940 ;; This function uses a non-reentrant model
  6941 ;;
  6942                           
  6943  072E                     _EUSART_SetTxInterruptHandler:	
  6944                           ;psect for function _EUSART_SetTxInterruptHandler
  6945                           
  6946  072E                     l1965:	
  6947                           ;incstack = 0
  6948                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  6949                           
  6950                           
  6951                           ;mcc_generated_files/eusart.c: 324:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  6952  072E  0020               	movlb	0	; select bank0
  6953  072F  0825               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  6954  0730  0021               	movlb	1	; select bank1
  6955  0731  00DF               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128)
  6956  0732  0020               	movlb	0	; select bank0
  6957  0733  0824               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  6958  0734  0021               	movlb	1	; select bank1
  6959  0735  00DE               	movwf	_EUSART_TxDefaultInterruptHandler^(0+128)
  6960  0736                     l282:
  6961  0736  0008               	return
  6962  0737                     __end_of_EUSART_SetTxInterruptHandler:
  6963                           
  6964                           	psect	text19
  6965  0737                     __ptext19:	
  6966 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  6967 ;; Defined at:
  6968 ;;		line 327 in file "mcc_generated_files/eusart.c"
  6969 ;; Parameters:    Size  Location     Type
  6970 ;;  interruptHan    2    4[BANK0 ] PTR FTN()void 
  6971 ;;		 -> EUSART_Receive_ISR(1), 
  6972 ;; Auto vars:     Size  Location     Type
  6973 ;;		None
  6974 ;; Return value:  Size  Location     Type
  6975 ;;                  1    wreg      void 
  6976 ;; Registers used:
  6977 ;;		wreg
  6978 ;; Tracked objects:
  6979 ;;		On entry : 0/0
  6980 ;;		On exit  : 0/0
  6981 ;;		Unchanged: 0/0
  6982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6983 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6986 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6987 ;;Total ram usage:        2 bytes
  6988 ;; Hardware stack levels used: 1
  6989 ;; Hardware stack levels required when called: 4
  6990 ;; This function calls:
  6991 ;;		Nothing
  6992 ;; This function is called by:
  6993 ;;		_EUSART_Initialize
  6994 ;; This function uses a non-reentrant model
  6995 ;;
  6996                           
  6997  0737                     _EUSART_SetRxInterruptHandler:	
  6998                           ;psect for function _EUSART_SetRxInterruptHandler
  6999                           
  7000  0737                     l1963:	
  7001                           ;incstack = 0
  7002                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  7003                           
  7004                           
  7005                           ;mcc_generated_files/eusart.c: 328:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  7006  0737  0020               	movlb	0	; select bank0
  7007  0738  0825               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  7008  0739  0021               	movlb	1	; select bank1
  7009  073A  00DD               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128)
  7010  073B  0020               	movlb	0	; select bank0
  7011  073C  0824               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  7012  073D  0021               	movlb	1	; select bank1
  7013  073E  00DC               	movwf	_EUSART_RxDefaultInterruptHandler^(0+128)
  7014  073F                     l285:
  7015  073F  0008               	return
  7016  0740                     __end_of_EUSART_SetRxInterruptHandler:
  7017                           
  7018                           	psect	text20
  7019  0740                     __ptext20:	
  7020 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  7021 ;; Defined at:
  7022 ;;		line 315 in file "mcc_generated_files/eusart.c"
  7023 ;; Parameters:    Size  Location     Type
  7024 ;;  interruptHan    2    4[BANK0 ] PTR FTN()void 
  7025 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  7026 ;; Auto vars:     Size  Location     Type
  7027 ;;		None
  7028 ;; Return value:  Size  Location     Type
  7029 ;;                  1    wreg      void 
  7030 ;; Registers used:
  7031 ;;		wreg
  7032 ;; Tracked objects:
  7033 ;;		On entry : 0/0
  7034 ;;		On exit  : 0/0
  7035 ;;		Unchanged: 0/0
  7036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7037 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7040 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7041 ;;Total ram usage:        2 bytes
  7042 ;; Hardware stack levels used: 1
  7043 ;; Hardware stack levels required when called: 4
  7044 ;; This function calls:
  7045 ;;		Nothing
  7046 ;; This function is called by:
  7047 ;;		_EUSART_Initialize
  7048 ;; This function uses a non-reentrant model
  7049 ;;
  7050                           
  7051  0740                     _EUSART_SetOverrunErrorHandler:	
  7052                           ;psect for function _EUSART_SetOverrunErrorHandler
  7053                           
  7054  0740                     l1969:	
  7055                           ;incstack = 0
  7056                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  7057                           
  7058                           
  7059                           ;mcc_generated_files/eusart.c: 316:     EUSART_OverrunErrorHandler = interruptHandler;
  7060  0740  0020               	movlb	0	; select bank0
  7061  0741  0825               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  7062  0742  0021               	movlb	1	; select bank1
  7063  0743  00D9               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  7064  0744  0020               	movlb	0	; select bank0
  7065  0745  0824               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  7066  0746  0021               	movlb	1	; select bank1
  7067  0747  00D8               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  7068  0748                     l276:
  7069  0748  0008               	return
  7070  0749                     __end_of_EUSART_SetOverrunErrorHandler:
  7071                           
  7072                           	psect	text21
  7073  0749                     __ptext21:	
  7074 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  7075 ;; Defined at:
  7076 ;;		line 311 in file "mcc_generated_files/eusart.c"
  7077 ;; Parameters:    Size  Location     Type
  7078 ;;  interruptHan    2    4[BANK0 ] PTR FTN()void 
  7079 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  7080 ;; Auto vars:     Size  Location     Type
  7081 ;;		None
  7082 ;; Return value:  Size  Location     Type
  7083 ;;                  1    wreg      void 
  7084 ;; Registers used:
  7085 ;;		wreg
  7086 ;; Tracked objects:
  7087 ;;		On entry : 0/0
  7088 ;;		On exit  : 0/0
  7089 ;;		Unchanged: 0/0
  7090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7091 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7094 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7095 ;;Total ram usage:        2 bytes
  7096 ;; Hardware stack levels used: 1
  7097 ;; Hardware stack levels required when called: 4
  7098 ;; This function calls:
  7099 ;;		Nothing
  7100 ;; This function is called by:
  7101 ;;		_EUSART_Initialize
  7102 ;; This function uses a non-reentrant model
  7103 ;;
  7104                           
  7105  0749                     _EUSART_SetFramingErrorHandler:	
  7106                           ;psect for function _EUSART_SetFramingErrorHandler
  7107                           
  7108  0749                     l1967:	
  7109                           ;incstack = 0
  7110                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  7111                           
  7112                           
  7113                           ;mcc_generated_files/eusart.c: 312:     EUSART_FramingErrorHandler = interruptHandler;
  7114  0749  0020               	movlb	0	; select bank0
  7115  074A  0825               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  7116  074B  0021               	movlb	1	; select bank1
  7117  074C  00DB               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  7118  074D  0020               	movlb	0	; select bank0
  7119  074E  0824               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  7120  074F  0021               	movlb	1	; select bank1
  7121  0750  00DA               	movwf	_EUSART_FramingErrorHandler^(0+128)
  7122  0751                     l273:
  7123  0751  0008               	return
  7124  0752                     __end_of_EUSART_SetFramingErrorHandler:
  7125                           
  7126                           	psect	text22
  7127  0752                     __ptext22:	
  7128 ;; *************** function _EUSART_SetErrorHandler *****************
  7129 ;; Defined at:
  7130 ;;		line 319 in file "mcc_generated_files/eusart.c"
  7131 ;; Parameters:    Size  Location     Type
  7132 ;;  interruptHan    2    4[BANK0 ] PTR FTN()void 
  7133 ;;		 -> EUSART_DefaultErrorHandler(1), 
  7134 ;; Auto vars:     Size  Location     Type
  7135 ;;		None
  7136 ;; Return value:  Size  Location     Type
  7137 ;;                  1    wreg      void 
  7138 ;; Registers used:
  7139 ;;		wreg
  7140 ;; Tracked objects:
  7141 ;;		On entry : 0/0
  7142 ;;		On exit  : 0/0
  7143 ;;		Unchanged: 0/0
  7144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7145 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7148 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7149 ;;Total ram usage:        2 bytes
  7150 ;; Hardware stack levels used: 1
  7151 ;; Hardware stack levels required when called: 4
  7152 ;; This function calls:
  7153 ;;		Nothing
  7154 ;; This function is called by:
  7155 ;;		_EUSART_Initialize
  7156 ;; This function uses a non-reentrant model
  7157 ;;
  7158                           
  7159  0752                     _EUSART_SetErrorHandler:	
  7160                           ;psect for function _EUSART_SetErrorHandler
  7161                           
  7162  0752                     l1971:	
  7163                           ;incstack = 0
  7164                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  7165                           
  7166                           
  7167                           ;mcc_generated_files/eusart.c: 320:     EUSART_ErrorHandler = interruptHandler;
  7168  0752  0020               	movlb	0	; select bank0
  7169  0753  0825               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  7170  0754  0021               	movlb	1	; select bank1
  7171  0755  00D7               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  7172  0756  0020               	movlb	0	; select bank0
  7173  0757  0824               	movf	EUSART_SetErrorHandler@interruptHandler,w
  7174  0758  0021               	movlb	1	; select bank1
  7175  0759  00D6               	movwf	_EUSART_ErrorHandler^(0+128)
  7176  075A                     l279:
  7177  075A  0008               	return
  7178  075B                     __end_of_EUSART_SetErrorHandler:
  7179                           
  7180                           	psect	text23
  7181  06E2                     __ptext23:	
  7182 ;; *************** function _ADCC_Initialize *****************
  7183 ;; Defined at:
  7184 ;;		line 63 in file "mcc_generated_files/adcc.c"
  7185 ;; Parameters:    Size  Location     Type
  7186 ;;		None
  7187 ;; Auto vars:     Size  Location     Type
  7188 ;;		None
  7189 ;; Return value:  Size  Location     Type
  7190 ;;                  1    wreg      void 
  7191 ;; Registers used:
  7192 ;;		wreg, status,2
  7193 ;; Tracked objects:
  7194 ;;		On entry : 0/0
  7195 ;;		On exit  : 0/0
  7196 ;;		Unchanged: 0/0
  7197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7202 ;;Total ram usage:        0 bytes
  7203 ;; Hardware stack levels used: 1
  7204 ;; Hardware stack levels required when called: 4
  7205 ;; This function calls:
  7206 ;;		Nothing
  7207 ;; This function is called by:
  7208 ;;		_SYSTEM_Initialize
  7209 ;; This function uses a non-reentrant model
  7210 ;;
  7211                           
  7212  06E2                     _ADCC_Initialize:	
  7213                           ;psect for function _ADCC_Initialize
  7214                           
  7215  06E2                     l2113:	
  7216                           ;incstack = 0
  7217                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
  7218                           
  7219                           
  7220                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
  7221  06E2  0022               	movlb	2	; select bank2
  7222  06E3  018E               	clrf	14	;volatile
  7223                           
  7224                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
  7225  06E4  018F               	clrf	15	;volatile
  7226                           
  7227                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
  7228  06E5  0190               	clrf	16	;volatile
  7229                           
  7230                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
  7231  06E6  0191               	clrf	17	;volatile
  7232                           
  7233                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
  7234  06E7  0192               	clrf	18	;volatile
  7235                           
  7236                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
  7237  06E8  0193               	clrf	19	;volatile
  7238                           
  7239                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
  7240  06E9  018D               	clrf	13	;volatile
  7241                           
  7242                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
  7243  06EA  0021               	movlb	1	; select bank1
  7244  06EB  019E               	clrf	30	;volatile
  7245                           
  7246                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
  7247  06EC  019B               	clrf	27	;volatile
  7248                           
  7249                           ;mcc_generated_files/adcc.c: 85:     ADPRE = 0x00;
  7250  06ED  019C               	clrf	28	;volatile
  7251                           
  7252                           ;mcc_generated_files/adcc.c: 87:     ADCON1 = 0x00;
  7253  06EE  0194               	clrf	20	;volatile
  7254                           
  7255                           ;mcc_generated_files/adcc.c: 89:     ADCON2 = 0x00;
  7256  06EF  0195               	clrf	21	;volatile
  7257                           
  7258                           ;mcc_generated_files/adcc.c: 91:     ADCON3 = 0x00;
  7259  06F0  0196               	clrf	22	;volatile
  7260                           
  7261                           ;mcc_generated_files/adcc.c: 93:     ADSTAT = 0x00;
  7262  06F1  0197               	clrf	23	;volatile
  7263                           
  7264                           ;mcc_generated_files/adcc.c: 95:     ADREF = 0x00;
  7265  06F2  019A               	clrf	26	;volatile
  7266                           
  7267                           ;mcc_generated_files/adcc.c: 97:     ADACT = 0x00;
  7268  06F3  0199               	clrf	25	;volatile
  7269  06F4                     l2115:
  7270                           
  7271                           ;mcc_generated_files/adcc.c: 99:     ADCLK = 0x03;
  7272  06F4  3003               	movlw	3
  7273  06F5  0098               	movwf	24	;volatile
  7274  06F6                     l2117:
  7275                           
  7276                           ;mcc_generated_files/adcc.c: 101:     ADCON0 = 0x84;
  7277  06F6  3084               	movlw	132
  7278  06F7  0093               	movwf	19	;volatile
  7279                           
  7280                           ;mcc_generated_files/adcc.c: 103:     ADACQ = 0x00;
  7281  06F8  019D               	clrf	29	;volatile
  7282  06F9                     l360:
  7283  06F9  0008               	return
  7284  06FA                     __end_of_ADCC_Initialize:
  7285                           
  7286                           	psect	text24
  7287  0774                     __ptext24:	
  7288 ;; *************** function _ADCC_StartConversion *****************
  7289 ;; Defined at:
  7290 ;;		line 108 in file "mcc_generated_files/adcc.c"
  7291 ;; Parameters:    Size  Location     Type
  7292 ;;  channel         1    wreg     enum E11681
  7293 ;; Auto vars:     Size  Location     Type
  7294 ;;  channel         1    4[BANK0 ] enum E11681
  7295 ;; Return value:  Size  Location     Type
  7296 ;;                  1    wreg      void 
  7297 ;; Registers used:
  7298 ;;		wreg
  7299 ;; Tracked objects:
  7300 ;;		On entry : 0/0
  7301 ;;		On exit  : 0/0
  7302 ;;		Unchanged: 0/0
  7303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7305 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7307 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7308 ;;Total ram usage:        1 bytes
  7309 ;; Hardware stack levels used: 1
  7310 ;; Hardware stack levels required when called: 4
  7311 ;; This function calls:
  7312 ;;		Nothing
  7313 ;; This function is called by:
  7314 ;;		_main
  7315 ;; This function uses a non-reentrant model
  7316 ;;
  7317                           
  7318  0774                     _ADCC_StartConversion:	
  7319                           ;psect for function _ADCC_StartConversion
  7320                           
  7321                           
  7322                           ;incstack = 0
  7323                           ; Regs used in _ADCC_StartConversion: [wreg]
  7324                           ;ADCC_StartConversion@channel stored from wreg
  7325  0774  0020               	movlb	0	; select bank0
  7326  0775  00A4               	movwf	ADCC_StartConversion@channel
  7327  0776                     l2285:
  7328                           
  7329                           ;mcc_generated_files/adcc.c: 108: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 109: {;mcc_generated_files/adcc.c: 111:     ADPCH = channel;
  7330  0776  0824               	movf	ADCC_StartConversion@channel,w
  7331  0777  0021               	movlb	1	; select bank1
  7332  0778  009E               	movwf	30	;volatile
  7333  0779                     l2287:
  7334                           
  7335                           ;mcc_generated_files/adcc.c: 114:     ADCON0bits.ADON = 1;
  7336  0779  1793               	bsf	19,7	;volatile
  7337  077A                     l2289:
  7338                           
  7339                           ;mcc_generated_files/adcc.c: 117:     ADCON0bits.ADGO = 1;
  7340  077A  1413               	bsf	19,0	;volatile
  7341  077B                     l363:
  7342  077B  0008               	return
  7343  077C                     __end_of_ADCC_StartConversion:
  7344                           
  7345                           	psect	text25
  7346  0791                     __ptext25:	
  7347 ;; *************** function _ADCC_IsConversionDone *****************
  7348 ;; Defined at:
  7349 ;;		line 120 in file "mcc_generated_files/adcc.c"
  7350 ;; Parameters:    Size  Location     Type
  7351 ;;		None
  7352 ;; Auto vars:     Size  Location     Type
  7353 ;;		None
  7354 ;; Return value:  Size  Location     Type
  7355 ;;                  1    wreg      _Bool 
  7356 ;; Registers used:
  7357 ;;		wreg, status,0
  7358 ;; Tracked objects:
  7359 ;;		On entry : 0/0
  7360 ;;		On exit  : 0/0
  7361 ;;		Unchanged: 0/0
  7362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7367 ;;Total ram usage:        0 bytes
  7368 ;; Hardware stack levels used: 1
  7369 ;; Hardware stack levels required when called: 4
  7370 ;; This function calls:
  7371 ;;		Nothing
  7372 ;; This function is called by:
  7373 ;;		_main
  7374 ;; This function uses a non-reentrant model
  7375 ;;
  7376                           
  7377  0791                     _ADCC_IsConversionDone:	
  7378                           ;psect for function _ADCC_IsConversionDone
  7379                           
  7380  0791                     l2291:	
  7381                           ;incstack = 0
  7382                           ; Regs used in _ADCC_IsConversionDone: [wreg+status,0]
  7383                           
  7384                           
  7385                           ;mcc_generated_files/adcc.c: 123:     return ((unsigned char)(!ADCON0bits.ADGO));
  7386  0791  1003               	clrc
  7387  0792  0021               	movlb	1	; select bank1
  7388  0793  1C13               	btfss	19,0	;volatile
  7389  0794  1403               	setc
  7390  0795  3000               	movlw	0
  7391  0796  3D09               	addwfc	9,w
  7392  0797                     l366:
  7393  0797  0008               	return
  7394  0798                     __end_of_ADCC_IsConversionDone:
  7395                           
  7396                           	psect	text26
  7397  075B                     __ptext26:	
  7398 ;; *************** function _ADCC_GetConversionResult *****************
  7399 ;; Defined at:
  7400 ;;		line 126 in file "mcc_generated_files/adcc.c"
  7401 ;; Parameters:    Size  Location     Type
  7402 ;;		None
  7403 ;; Auto vars:     Size  Location     Type
  7404 ;;		None
  7405 ;; Return value:  Size  Location     Type
  7406 ;;                  2    4[BANK0 ] unsigned short 
  7407 ;; Registers used:
  7408 ;;		wreg
  7409 ;; Tracked objects:
  7410 ;;		On entry : 0/0
  7411 ;;		On exit  : 0/0
  7412 ;;		Unchanged: 0/0
  7413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7414 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7417 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7418 ;;Total ram usage:        2 bytes
  7419 ;; Hardware stack levels used: 1
  7420 ;; Hardware stack levels required when called: 4
  7421 ;; This function calls:
  7422 ;;		Nothing
  7423 ;; This function is called by:
  7424 ;;		_main
  7425 ;; This function uses a non-reentrant model
  7426 ;;
  7427                           
  7428  075B                     _ADCC_GetConversionResult:	
  7429                           ;psect for function _ADCC_GetConversionResult
  7430                           
  7431  075B                     l2295:	
  7432                           ;incstack = 0
  7433                           ; Regs used in _ADCC_GetConversionResult: [wreg]
  7434                           
  7435                           
  7436                           ;mcc_generated_files/adcc.c: 129:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  7437  075B  0021               	movlb	1	; select bank1
  7438  075C  080D               	movf	13,w	;volatile
  7439  075D  0020               	movlb	0	; select bank0
  7440  075E  00A5               	movwf	?_ADCC_GetConversionResult+1
  7441  075F  0021               	movlb	1	; select bank1
  7442  0760  080C               	movf	12,w	;volatile
  7443  0761  0020               	movlb	0	; select bank0
  7444  0762  00A4               	movwf	?_ADCC_GetConversionResult
  7445  0763                     l369:
  7446  0763  0008               	return
  7447  0764                     __end_of_ADCC_GetConversionResult:
  7448                           
  7449                           	psect	intentry
  7450  0004                     __pintentry:	
  7451 ;; *************** function _INTERRUPT_InterruptManager *****************
  7452 ;; Defined at:
  7453 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7454 ;; Parameters:    Size  Location     Type
  7455 ;;		None
  7456 ;; Auto vars:     Size  Location     Type
  7457 ;;		None
  7458 ;; Return value:  Size  Location     Type
  7459 ;;                  1    wreg      void 
  7460 ;; Registers used:
  7461 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7462 ;; Tracked objects:
  7463 ;;		On entry : 0/0
  7464 ;;		On exit  : 0/0
  7465 ;;		Unchanged: 0/0
  7466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7471 ;;Total ram usage:        0 bytes
  7472 ;; Hardware stack levels used: 1
  7473 ;; Hardware stack levels required when called: 3
  7474 ;; This function calls:
  7475 ;;		Absolute function
  7476 ;;		_EUSART_Receive_ISR
  7477 ;;		_EUSART_Transmit_ISR
  7478 ;; This function is called by:
  7479 ;;		Interrupt level 1
  7480 ;; This function uses a non-reentrant model
  7481 ;;
  7482                           
  7483  0004                     _INTERRUPT_InterruptManager:
  7484                           
  7485                           ;incstack = 0
  7486  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  7487                           
  7488                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7489  0005  3180               	pagesel	$
  7490  0006                     i1l2305:
  7491                           
  7492                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  7493  0006  1F0B               	btfss	11,6	;volatile
  7494  0007  2809               	goto	u126_21
  7495  0008  280A               	goto	u126_20
  7496  0009                     u126_21:
  7497  0009  2829               	goto	i1l77
  7498  000A                     u126_20:
  7499  000A                     i1l2307:
  7500                           
  7501                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE3bits.TXIE == 1 && PIR3bits.TXIF == 1)
  7502  000A  002E               	movlb	14	; select bank14
  7503  000B  1E19               	btfss	25,4	;volatile
  7504  000C  280E               	goto	u127_21
  7505  000D  280F               	goto	u127_20
  7506  000E                     u127_21:
  7507  000E  281A               	goto	i1l72
  7508  000F                     u127_20:
  7509  000F                     i1l2309:
  7510  000F  1E0F               	btfss	15,4	;volatile
  7511  0010  2812               	goto	u128_21
  7512  0011  2813               	goto	u128_20
  7513  0012                     u128_21:
  7514  0012  281A               	goto	i1l72
  7515  0013                     u128_20:
  7516  0013                     i1l2311:
  7517                           
  7518                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             EUSART_TxDefaultInterruptHandler();
  7519  0013  0021               	movlb	1	; select bank1
  7520  0014  085F               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128),w
  7521  0015  008A               	movwf	10
  7522  0016  085E               	movf	_EUSART_TxDefaultInterruptHandler^(0+128),w
  7523  0017  000A               	callw
  7524  0018  3180               	pagesel	$
  7525                           
  7526                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  7527  0019  2829               	goto	i1l77
  7528  001A                     i1l72:	
  7529                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE3bits.RCIE == 1 && PIR3
      +                          bits.RCIF == 1)
  7530                           
  7531  001A  1E99               	btfss	25,5	;volatile
  7532  001B  281D               	goto	u129_21
  7533  001C  281E               	goto	u129_20
  7534  001D                     u129_21:
  7535  001D  2829               	goto	i1l73
  7536  001E                     u129_20:
  7537  001E                     i1l2313:
  7538  001E  1E8F               	btfss	15,5	;volatile
  7539  001F  2821               	goto	u130_21
  7540  0020  2822               	goto	u130_20
  7541  0021                     u130_21:
  7542  0021  2829               	goto	i1l73
  7543  0022                     u130_20:
  7544  0022                     i1l2315:
  7545                           
  7546                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_RxDefaultInterruptHandler();
  7547  0022  0021               	movlb	1	; select bank1
  7548  0023  085D               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128),w
  7549  0024  008A               	movwf	10
  7550  0025  085C               	movf	_EUSART_RxDefaultInterruptHandler^(0+128),w
  7551  0026  000A               	callw
  7552  0027  3180               	pagesel	$
  7553                           
  7554                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  7555  0028  2829               	goto	i1l77
  7556  0029                     i1l73:
  7557  0029                     i1l77:	
  7558                           ;mcc_generated_files/interrupt_manager.c: 69:     }
  7559                           
  7560  0029  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7561  002A  0009               	retfie
  7562  002B                     __end_of_INTERRUPT_InterruptManager:
  7563                           
  7564                           	psect	text28
  7565  0657                     __ptext28:	
  7566 ;; *************** function _EUSART_Transmit_ISR *****************
  7567 ;; Defined at:
  7568 ;;		line 215 in file "mcc_generated_files/eusart.c"
  7569 ;; Parameters:    Size  Location     Type
  7570 ;;		None
  7571 ;; Auto vars:     Size  Location     Type
  7572 ;;		None
  7573 ;; Return value:  Size  Location     Type
  7574 ;;                  1    wreg      void 
  7575 ;; Registers used:
  7576 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7577 ;; Tracked objects:
  7578 ;;		On entry : 0/0
  7579 ;;		On exit  : 0/0
  7580 ;;		Unchanged: 0/0
  7581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7584 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7585 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7586 ;;Total ram usage:        1 bytes
  7587 ;; Hardware stack levels used: 1
  7588 ;; This function calls:
  7589 ;;		Nothing
  7590 ;; This function is called by:
  7591 ;;		_EUSART_Initialize
  7592 ;;		_INTERRUPT_InterruptManager
  7593 ;; This function uses a non-reentrant model
  7594 ;;
  7595                           
  7596  0657                     _EUSART_Transmit_ISR:	
  7597                           ;psect for function _EUSART_Transmit_ISR
  7598                           
  7599  0657                     i1l2231:	
  7600                           ;incstack = 0
  7601                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  7602                           
  7603                           
  7604                           ;mcc_generated_files/eusart.c: 219:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  7605  0657  3008               	movlw	8
  7606  0658  0021               	movlb	1	; select bank1
  7607  0659  0260               	subwf	_eusartTxBufferRemaining^(0+128),w	;volatile
  7608  065A  1803               	skipnc
  7609  065B  2E5D               	goto	u117_21
  7610  065C  2E5E               	goto	u117_20
  7611  065D                     u117_21:
  7612  065D  2E78               	goto	i1l242
  7613  065E                     u117_20:
  7614  065E                     i1l2233:
  7615                           
  7616                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:         TX1
      +                          REG = eusartTxBuffer[eusartTxTail++];
  7617  065E  0020               	movlb	0	; select bank0
  7618  065F  086A               	movf	_eusartTxTail,w
  7619  0660  3EB0               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  7620  0661  0086               	movwf	6
  7621  0662  0187               	clrf	7
  7622  0663  0801               	movf	1,w
  7623  0664  0022               	movlb	2	; select bank2
  7624  0665  009A               	movwf	26	;volatile
  7625  0666                     i1l2235:
  7626  0666  3001               	movlw	1
  7627  0667  00F0               	movwf	??_EUSART_Transmit_ISR
  7628  0668  0870               	movf	??_EUSART_Transmit_ISR,w
  7629  0669  0020               	movlb	0	; select bank0
  7630  066A  07EA               	addwf	_eusartTxTail,f	;volatile
  7631  066B                     i1l2237:
  7632                           
  7633                           ;mcc_generated_files/eusart.c: 222:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  7634  066B  3008               	movlw	8
  7635  066C  026A               	subwf	_eusartTxTail,w	;volatile
  7636  066D  1C03               	skipc
  7637  066E  2E70               	goto	u118_21
  7638  066F  2E71               	goto	u118_20
  7639  0670                     u118_21:
  7640  0670  2E72               	goto	i1l2241
  7641  0671                     u118_20:
  7642  0671                     i1l2239:
  7643                           
  7644                           ;mcc_generated_files/eusart.c: 223:         {;mcc_generated_files/eusart.c: 224:        
      +                               eusartTxTail = 0;
  7645  0671  01EA               	clrf	_eusartTxTail	;volatile
  7646  0672                     i1l2241:
  7647                           
  7648                           ;mcc_generated_files/eusart.c: 226:         eusartTxBufferRemaining++;
  7649  0672  3001               	movlw	1
  7650  0673  00F0               	movwf	??_EUSART_Transmit_ISR
  7651  0674  0870               	movf	??_EUSART_Transmit_ISR,w
  7652  0675  0021               	movlb	1	; select bank1
  7653  0676  07E0               	addwf	_eusartTxBufferRemaining^(0+128),f	;volatile
  7654                           
  7655                           ;mcc_generated_files/eusart.c: 227:     }
  7656  0677  2E7A               	goto	i1l245
  7657  0678                     i1l242:	
  7658                           ;mcc_generated_files/eusart.c: 228:     else
  7659                           
  7660                           
  7661                           ;mcc_generated_files/eusart.c: 229:     {;mcc_generated_files/eusart.c: 230:         PIE
      +                          3bits.TXIE = 0;
  7662  0678  002E               	movlb	14	; select bank14
  7663  0679  1219               	bcf	25,4	;volatile
  7664  067A                     i1l245:
  7665  067A  0008               	return
  7666  067B                     __end_of_EUSART_Transmit_ISR:
  7667                           
  7668                           	psect	text29
  7669  01F8                     __ptext29:	
  7670 ;; *************** function _EUSART_Receive_ISR *****************
  7671 ;; Defined at:
  7672 ;;		line 234 in file "mcc_generated_files/eusart.c"
  7673 ;; Parameters:    Size  Location     Type
  7674 ;;		None
  7675 ;; Auto vars:     Size  Location     Type
  7676 ;;		None
  7677 ;; Return value:  Size  Location     Type
  7678 ;;                  1    wreg      void 
  7679 ;; Registers used:
  7680 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7681 ;; Tracked objects:
  7682 ;;		On entry : 0/0
  7683 ;;		On exit  : 0/0
  7684 ;;		Unchanged: 0/0
  7685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7688 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7689 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7690 ;;Total ram usage:        1 bytes
  7691 ;; Hardware stack levels used: 1
  7692 ;; Hardware stack levels required when called: 2
  7693 ;; This function calls:
  7694 ;;		Absolute function
  7695 ;;		_EUSART_DefaultErrorHandler
  7696 ;;		_EUSART_DefaultFramingErrorHandler
  7697 ;;		_EUSART_DefaultOverrunErrorHandler
  7698 ;;		_EUSART_Read
  7699 ;;		_EUSART_RxDataHandler
  7700 ;;		_strcmp
  7701 ;;		_strstr
  7702 ;; This function is called by:
  7703 ;;		_EUSART_Initialize
  7704 ;;		_INTERRUPT_InterruptManager
  7705 ;; This function uses a non-reentrant model
  7706 ;;
  7707                           
  7708  01F8                     _EUSART_Receive_ISR:	
  7709                           ;psect for function _EUSART_Receive_ISR
  7710                           
  7711  01F8                     i1l2243:	
  7712                           ;incstack = 0
  7713                           ; Regs used in _EUSART_Receive_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7714                           
  7715                           
  7716                           ;mcc_generated_files/eusart.c: 237:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  7717  01F8  0020               	movlb	0	; select bank0
  7718  01F9  0869               	movf	_eusartRxHead,w	;volatile
  7719  01FA  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  7720  01FB  0086               	movwf	6
  7721  01FC  0187               	clrf	7
  7722  01FD  0181               	clrf	1
  7723  01FE                     i1l2245:
  7724                           
  7725                           ;mcc_generated_files/eusart.c: 239:     if(RC1STAbits.FERR){
  7726  01FE  0022               	movlb	2	; select bank2
  7727  01FF  1D1D               	btfss	29,2	;volatile
  7728  0200  2A02               	goto	u119_21
  7729  0201  2A03               	goto	u119_20
  7730  0202                     u119_21:
  7731  0202  2A0F               	goto	i1l2251
  7732  0203                     u119_20:
  7733  0203                     i1l2247:
  7734                           
  7735                           ;mcc_generated_files/eusart.c: 240:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  7736  0203  0020               	movlb	0	; select bank0
  7737  0204  0869               	movf	_eusartRxHead,w	;volatile
  7738  0205  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  7739  0206  0086               	movwf	6
  7740  0207  0187               	clrf	7
  7741  0208  1481               	bsf	1,1
  7742  0209                     i1l2249:
  7743                           
  7744                           ;mcc_generated_files/eusart.c: 241:         EUSART_FramingErrorHandler();
  7745  0209  0021               	movlb	1	; select bank1
  7746  020A  085B               	movf	(_EUSART_FramingErrorHandler+1)^(0+128),w
  7747  020B  008A               	movwf	10
  7748  020C  085A               	movf	_EUSART_FramingErrorHandler^(0+128),w
  7749  020D  000A               	callw
  7750  020E  3181               	pagesel	$
  7751  020F                     i1l2251:
  7752                           
  7753                           ;mcc_generated_files/eusart.c: 244:     if(RC1STAbits.OERR){
  7754  020F  0022               	movlb	2	; select bank2
  7755  0210  1C9D               	btfss	29,1	;volatile
  7756  0211  2A13               	goto	u120_21
  7757  0212  2A14               	goto	u120_20
  7758  0213                     u120_21:
  7759  0213  2A20               	goto	i1l2257
  7760  0214                     u120_20:
  7761  0214                     i1l2253:
  7762                           
  7763                           ;mcc_generated_files/eusart.c: 245:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  7764  0214  0020               	movlb	0	; select bank0
  7765  0215  0869               	movf	_eusartRxHead,w	;volatile
  7766  0216  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  7767  0217  0086               	movwf	6
  7768  0218  0187               	clrf	7
  7769  0219  1501               	bsf	1,2
  7770  021A                     i1l2255:
  7771                           
  7772                           ;mcc_generated_files/eusart.c: 246:         EUSART_OverrunErrorHandler();
  7773  021A  0021               	movlb	1	; select bank1
  7774  021B  0859               	movf	(_EUSART_OverrunErrorHandler+1)^(0+128),w
  7775  021C  008A               	movwf	10
  7776  021D  0858               	movf	_EUSART_OverrunErrorHandler^(0+128),w
  7777  021E  000A               	callw
  7778  021F  3181               	pagesel	$
  7779  0220                     i1l2257:
  7780                           
  7781                           ;mcc_generated_files/eusart.c: 249:     if(eusartRxStatusBuffer[eusartRxHead].status){
  7782  0220  0020               	movlb	0	; select bank0
  7783  0221  0869               	movf	_eusartRxHead,w	;volatile
  7784  0222  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  7785  0223  0086               	movwf	6
  7786  0224  0187               	clrf	7
  7787  0225  0801               	movf	1,w
  7788  0226  1903               	btfsc	3,2
  7789  0227  2A29               	goto	u121_21
  7790  0228  2A2A               	goto	u121_20
  7791  0229                     u121_21:
  7792  0229  2A31               	goto	i1l2261
  7793  022A                     u121_20:
  7794  022A                     i1l2259:
  7795                           
  7796                           ;mcc_generated_files/eusart.c: 250:         EUSART_ErrorHandler();
  7797  022A  0021               	movlb	1	; select bank1
  7798  022B  0857               	movf	(_EUSART_ErrorHandler+1)^(0+128),w
  7799  022C  008A               	movwf	10
  7800  022D  0856               	movf	_EUSART_ErrorHandler^(0+128),w
  7801  022E  000A               	callw
  7802  022F  3181               	pagesel	$
  7803                           
  7804                           ;mcc_generated_files/eusart.c: 251:     } else {
  7805  0230  2A34               	goto	i1l251
  7806  0231                     i1l2261:
  7807                           
  7808                           ;mcc_generated_files/eusart.c: 252:         EUSART_RxDataHandler();
  7809  0231  3186  267B  3181   	fcall	_EUSART_RxDataHandler
  7810  0234                     i1l251:	
  7811                           ;mcc_generated_files/eusart.c: 253:     }
  7812                           
  7813                           
  7814                           ;mcc_generated_files/eusart.c: 256:     caracter_rx = EUSART_Read();
  7815  0234  3185  25D6  3181   	fcall	_EUSART_Read
  7816  0237  0020               	movlb	0	; select bank0
  7817  0238  00A3               	movwf	??_EUSART_Receive_ISR
  7818  0239  0823               	movf	??_EUSART_Receive_ISR,w
  7819  023A  0021               	movlb	1	; select bank1
  7820  023B  00C3               	movwf	_caracter_rx^(0+128)	;volatile
  7821  023C                     i1l2263:
  7822                           
  7823                           ;mcc_generated_files/eusart.c: 258:     if (caracter_rx == '*') {
  7824  023C  302A               	movlw	42
  7825  023D  0643               	xorwf	_caracter_rx^(0+128),w	;volatile
  7826  023E  1D03               	btfss	3,2
  7827  023F  2A41               	goto	u122_21
  7828  0240  2A42               	goto	u122_20
  7829  0241                     u122_21:
  7830  0241  2A79               	goto	i1l2281
  7831  0242                     u122_20:
  7832  0242                     i1l2265:
  7833                           
  7834                           ;mcc_generated_files/eusart.c: 259:         buffer_rx[contador_rx] = '\0';
  7835  0242  0842               	movf	_contador_rx^(0+128),w
  7836  0243  3E40               	addlw	(low (_buffer_rx| (0+256)))& (0+255)
  7837  0244  0086               	movwf	6
  7838  0245  3001               	movlw	1	; select bank2/3
  7839  0246  0087               	movwf	7
  7840  0247  0181               	clrf	1
  7841  0248                     i1l2267:
  7842                           
  7843                           ;mcc_generated_files/eusart.c: 260:         contador_rx = 0;
  7844  0248  01C2               	clrf	_contador_rx^(0+128)	;volatile
  7845  0249                     i1l2269:
  7846                           
  7847                           ;mcc_generated_files/eusart.c: 262:         if ( strcmp(buffer_rx,"led1on") ==0 ) {
  7848  0249  307C               	movlw	low (STR_1| (0+32768))
  7849  024A  00F0               	movwf	strcmp@r
  7850  024B  3087               	movlw	high (STR_1| (0+32768))
  7851  024C  00F1               	movwf	strcmp@r+1
  7852  024D  3040               	movlw	(low (_buffer_rx| (0+256)))& (0+255)
  7853  024E  3185  2548  3181   	fcall	_strcmp
  7854  0251  0870               	movf	?_strcmp,w
  7855  0252  0471               	iorwf	?_strcmp+1,w
  7856  0253  1D03               	btfss	3,2
  7857  0254  2A56               	goto	u123_21
  7858  0255  2A57               	goto	u123_20
  7859  0256                     u123_21:
  7860  0256  2A59               	goto	i1l2273
  7861  0257                     u123_20:
  7862  0257                     i1l2271:
  7863                           
  7864                           ;mcc_generated_files/eusart.c: 264:             LATAbits.LATA0 = 1;
  7865  0257  0020               	movlb	0	; select bank0
  7866  0258  1416               	bsf	22,0	;volatile
  7867  0259                     i1l2273:
  7868                           
  7869                           ;mcc_generated_files/eusart.c: 268:         if ( strstr(buffer_rx,"led1off") ){
  7870  0259  3064               	movlw	low (STR_2| (0+32768))
  7871  025A  00F9               	movwf	strstr@n
  7872  025B  3087               	movlw	high (STR_2| (0+32768))
  7873  025C  00FA               	movwf	strstr@n+1
  7874  025D  3040               	movlw	(low (_buffer_rx| (0+256)))& (0+255)
  7875  025E  3184  2437  3181   	fcall	_strstr
  7876  0261  3A00               	xorlw	0
  7877  0262  1903               	skipnz
  7878  0263  2A65               	goto	u124_21
  7879  0264  2A66               	goto	u124_20
  7880  0265                     u124_21:
  7881  0265  2A68               	goto	i1l2277
  7882  0266                     u124_20:
  7883  0266                     i1l2275:
  7884                           
  7885                           ;mcc_generated_files/eusart.c: 270:             LATAbits.LATA0 = 0;
  7886  0266  0020               	movlb	0	; select bank0
  7887  0267  1016               	bcf	22,0	;volatile
  7888  0268                     i1l2277:
  7889                           
  7890                           ;mcc_generated_files/eusart.c: 273:         if ( strcmp(buffer_rx,"led3on") ==0 ) {
  7891  0268  3083               	movlw	low (STR_4| (0+32768))
  7892  0269  00F0               	movwf	strcmp@r
  7893  026A  3087               	movlw	high (STR_4| (0+32768))
  7894  026B  00F1               	movwf	strcmp@r+1
  7895  026C  3040               	movlw	(low (_buffer_rx| (0+256)))& (0+255)
  7896  026D  3185  2548  3181   	fcall	_strcmp
  7897  0270  0870               	movf	?_strcmp,w
  7898  0271  0471               	iorwf	?_strcmp+1,w
  7899  0272  1D03               	btfss	3,2
  7900  0273  2A75               	goto	u125_21
  7901  0274  2A76               	goto	u125_20
  7902  0275                     u125_21:
  7903  0275  2A8A               	goto	i1l257
  7904  0276                     u125_20:
  7905  0276                     i1l2279:
  7906                           
  7907                           ;mcc_generated_files/eusart.c: 275:             LATAbits.LATA2 = 1;
  7908  0276  0020               	movlb	0	; select bank0
  7909  0277  1516               	bsf	22,2	;volatile
  7910  0278  2A8A               	goto	i1l257
  7911  0279                     i1l2281:
  7912                           
  7913                           ;mcc_generated_files/eusart.c: 278:         buffer_rx[contador_rx] = caracter_rx;
  7914  0279  0843               	movf	_caracter_rx^(0+128),w	;volatile
  7915  027A  0020               	movlb	0	; select bank0
  7916  027B  00A3               	movwf	??_EUSART_Receive_ISR
  7917  027C  0021               	movlb	1	; select bank1
  7918  027D  0842               	movf	_contador_rx^(0+128),w
  7919  027E  3E40               	addlw	(low (_buffer_rx| (0+256)))& (0+255)
  7920  027F  0086               	movwf	6
  7921  0280  3001               	movlw	1	; select bank2/3
  7922  0281  0087               	movwf	7
  7923  0282  0020               	movlb	0	; select bank0
  7924  0283  0823               	movf	??_EUSART_Receive_ISR,w
  7925  0284  0081               	movwf	1
  7926  0285                     i1l2283:
  7927                           
  7928                           ;mcc_generated_files/eusart.c: 279:         contador_rx++;
  7929  0285  3001               	movlw	1
  7930  0286  00A3               	movwf	??_EUSART_Receive_ISR
  7931  0287  0823               	movf	??_EUSART_Receive_ISR,w
  7932  0288  0021               	movlb	1	; select bank1
  7933  0289  07C2               	addwf	_contador_rx^(0+128),f	;volatile
  7934  028A                     i1l257:
  7935  028A  0008               	return
  7936  028B                     __end_of_EUSART_Receive_ISR:
  7937                           
  7938                           	psect	text30
  7939  0437                     __ptext30:	
  7940 ;; *************** function _strstr *****************
  7941 ;; Defined at:
  7942 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strstr.c"
  7943 ;; Parameters:    Size  Location     Type
  7944 ;;  h               1    wreg     PTR const unsigned char 
  7945 ;;		 -> NULL(0), buffer_rx(20), 
  7946 ;;  n               2    9[COMMON] PTR const unsigned char 
  7947 ;;		 -> STR_3(8), 
  7948 ;; Auto vars:     Size  Location     Type
  7949 ;;  h               1    2[BANK0 ] PTR const unsigned char 
  7950 ;;		 -> NULL(0), buffer_rx(20), 
  7951 ;;  nl              2    0[BANK0 ] unsigned int 
  7952 ;; Return value:  Size  Location     Type
  7953 ;;                  1    wreg      PTR unsigned char 
  7954 ;; Registers used:
  7955 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7956 ;; Tracked objects:
  7957 ;;		On entry : 0/0
  7958 ;;		On exit  : 0/0
  7959 ;;		Unchanged: 0/0
  7960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7961 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7962 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7963 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7964 ;;      Totals:         5       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7965 ;;Total ram usage:        8 bytes
  7966 ;; Hardware stack levels used: 1
  7967 ;; Hardware stack levels required when called: 1
  7968 ;; This function calls:
  7969 ;;		_strchr
  7970 ;;		_strncmp
  7971 ;;		i1_strlen
  7972 ;; This function is called by:
  7973 ;;		_EUSART_Receive_ISR
  7974 ;; This function uses a non-reentrant model
  7975 ;;
  7976                           
  7977  0437                     _strstr:	
  7978                           ;psect for function _strstr
  7979                           
  7980                           
  7981                           ;incstack = 0
  7982                           ; Regs used in _strstr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7983                           ;strstr@h stored from wreg
  7984  0437  0020               	movlb	0	; select bank0
  7985  0438  00A2               	movwf	strstr@h
  7986  0439                     i1l2185:
  7987  0439  0879               	movf	strstr@n,w
  7988  043A  047A               	iorwf	strstr@n+1,w
  7989  043B  1903               	btfsc	3,2
  7990  043C  2C3E               	goto	u112_21
  7991  043D  2C3F               	goto	u112_20
  7992  043E                     u112_21:
  7993  043E  2C84               	goto	i1l2201
  7994  043F                     u112_20:
  7995  043F                     i1l2187:
  7996  043F  087A               	movf	strstr@n+1,w
  7997  0440  00F1               	movwf	i1strlen@s+1
  7998  0441  0879               	movf	strstr@n,w
  7999  0442  00F0               	movwf	i1strlen@s
  8000  0443  3186  26B0  3184   	fcall	i1_strlen
  8001  0446  0871               	movf	?i1_strlen+1,w
  8002  0447  0020               	movlb	0	; select bank0
  8003  0448  00A1               	movwf	strstr@nl+1
  8004  0449  0870               	movf	?i1_strlen,w
  8005  044A  00A0               	movwf	strstr@nl
  8006  044B  2C76               	goto	i1l2197
  8007  044C                     i1l2189:
  8008  044C  087A               	movf	strstr@n+1,w
  8009  044D  00F1               	movwf	strncmp@_r+1
  8010  044E  0879               	movf	strstr@n,w
  8011  044F  00F0               	movwf	strncmp@_r
  8012  0450  0821               	movf	strstr@nl+1,w
  8013  0451  00F3               	movwf	strncmp@n+1
  8014  0452  0820               	movf	strstr@nl,w
  8015  0453  00F2               	movwf	strncmp@n
  8016  0454  0822               	movf	strstr@h,w
  8017  0455  3183  23DC  3184   	fcall	_strncmp
  8018  0458  0870               	movf	?_strncmp,w
  8019  0459  0471               	iorwf	?_strncmp+1,w
  8020  045A  1D03               	btfss	3,2
  8021  045B  2C5D               	goto	u113_21
  8022  045C  2C5E               	goto	u113_20
  8023  045D                     u113_21:
  8024  045D  2C61               	goto	i1l2195
  8025  045E                     u113_20:
  8026  045E                     i1l2191:
  8027  045E  0020               	movlb	0	; select bank0
  8028  045F  0822               	movf	strstr@h,w
  8029  0460  2C85               	goto	i1l1187
  8030  0461                     i1l2195:
  8031  0461  0879               	movf	strstr@n,w
  8032  0462  0084               	movwf	4
  8033  0463  087A               	movf	strstr@n+1,w
  8034  0464  0085               	movwf	5
  8035  0465  0800               	movf	0,w	;code access
  8036  0466  00FB               	movwf	??_strstr
  8037  0467  01FC               	clrf	??_strstr+1
  8038  0468  087B               	movf	??_strstr,w
  8039  0469  00F0               	movwf	strchr@c
  8040  046A  087C               	movf	??_strstr+1,w
  8041  046B  00F1               	movwf	strchr@c+1
  8042  046C  0020               	movlb	0	; select bank0
  8043  046D  0822               	movf	strstr@h,w
  8044  046E  3E01               	addlw	1
  8045  046F  3186  26C9  3184   	fcall	_strchr
  8046  0472  00FD               	movwf	??_strstr+2
  8047  0473  087D               	movf	??_strstr+2,w
  8048  0474  0020               	movlb	0	; select bank0
  8049  0475  00A2               	movwf	strstr@h
  8050  0476                     i1l2197:
  8051  0476  0822               	movf	strstr@h,w
  8052  0477  1903               	btfsc	3,2
  8053  0478  2C7A               	goto	u114_21
  8054  0479  2C7B               	goto	u114_20
  8055  047A                     u114_21:
  8056  047A  2C84               	goto	i1l2201
  8057  047B                     u114_20:
  8058  047B                     i1l2199:
  8059  047B  0822               	movf	strstr@h,w
  8060  047C  0086               	movwf	6
  8061  047D  3001               	movlw	1	; select bank2/3
  8062  047E  0087               	movwf	7
  8063  047F  0801               	movf	1,w
  8064  0480  1D03               	btfss	3,2
  8065  0481  2C83               	goto	u115_21
  8066  0482  2C84               	goto	u115_20
  8067  0483                     u115_21:
  8068  0483  2C4C               	goto	i1l2189
  8069  0484                     u115_20:
  8070  0484                     i1l2201:
  8071  0484  3000               	movlw	0
  8072  0485                     i1l1187:
  8073  0485  0008               	return
  8074  0486                     __end_of_strstr:
  8075                           
  8076                           	psect	text31
  8077  06B0                     __ptext31:	
  8078 ;; *************** function i1_strlen *****************
  8079 ;; Defined at:
  8080 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
  8081 ;; Parameters:    Size  Location     Type
  8082 ;;  s               2    0[COMMON] PTR const unsigned char 
  8083 ;;		 -> dbuf(32), STR_3(8), 
  8084 ;; Auto vars:     Size  Location     Type
  8085 ;;  a               2    3[COMMON] PTR const unsigned char 
  8086 ;;		 -> dbuf(32), STR_3(8), 
  8087 ;; Return value:  Size  Location     Type
  8088 ;;                  2    0[COMMON] unsigned int 
  8089 ;; Registers used:
  8090 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8091 ;; Tracked objects:
  8092 ;;		On entry : 0/0
  8093 ;;		On exit  : 0/0
  8094 ;;		Unchanged: 0/0
  8095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8096 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8097 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8098 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8099 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8100 ;;Total ram usage:        5 bytes
  8101 ;; Hardware stack levels used: 1
  8102 ;; This function calls:
  8103 ;;		Nothing
  8104 ;; This function is called by:
  8105 ;;		_strstr
  8106 ;; This function uses a non-reentrant model
  8107 ;;
  8108                           
  8109  06B0                     i1_strlen:	
  8110                           ;psect for function i1_strlen
  8111                           
  8112  06B0                     i1l2063:	
  8113                           ;incstack = 0
  8114                           ; Regs used in i1_strlen: [wreg-fsr0h+status,2+status,0]
  8115                           
  8116  06B0  0871               	movf	i1strlen@s+1,w
  8117  06B1  00F4               	movwf	i1strlen@a+1
  8118  06B2  0870               	movf	i1strlen@s,w
  8119  06B3  00F3               	movwf	i1strlen@a
  8120  06B4  2EB9               	goto	i1l2067
  8121  06B5                     i1l2065:
  8122  06B5  3001               	movlw	1
  8123  06B6  07F0               	addwf	i1strlen@s,f
  8124  06B7  3000               	movlw	0
  8125  06B8  3DF1               	addwfc	i1strlen@s+1,f
  8126  06B9                     i1l2067:
  8127  06B9  0870               	movf	i1strlen@s,w
  8128  06BA  0084               	movwf	4
  8129  06BB  0871               	movf	i1strlen@s+1,w
  8130  06BC  0085               	movwf	5
  8131  06BD  0012               	moviw fsr0++
  8132  06BE  1D03               	btfss	3,2
  8133  06BF  2EC1               	goto	u107_21
  8134  06C0  2EC2               	goto	u107_20
  8135  06C1                     u107_21:
  8136  06C1  2EB5               	goto	i1l2065
  8137  06C2                     u107_20:
  8138  06C2                     i1l2069:
  8139  06C2  0873               	movf	i1strlen@a,w
  8140  06C3  0270               	subwf	i1strlen@s,w
  8141  06C4  00F0               	movwf	?i1_strlen
  8142  06C5  0874               	movf	i1strlen@a+1,w
  8143  06C6  3B71               	subwfb	i1strlen@s+1,w
  8144  06C7  00F1               	movwf	?i1_strlen+1
  8145  06C8                     i1l1174:
  8146  06C8  0008               	return
  8147  06C9                     __end_ofi1_strlen:
  8148                           
  8149                           	psect	text32
  8150  03DC                     __ptext32:	
  8151 ;; *************** function _strncmp *****************
  8152 ;; Defined at:
  8153 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strncmp.c"
  8154 ;; Parameters:    Size  Location     Type
  8155 ;;  _l              1    wreg     PTR const unsigned char 
  8156 ;;		 -> NULL(0), buffer_rx(20), 
  8157 ;;  _r              2    0[COMMON] PTR const unsigned char 
  8158 ;;		 -> STR_3(8), 
  8159 ;;  n               2    2[COMMON] unsigned int 
  8160 ;; Auto vars:     Size  Location     Type
  8161 ;;  _l              1    5[COMMON] PTR const unsigned char 
  8162 ;;		 -> NULL(0), buffer_rx(20), 
  8163 ;;  r               2    6[COMMON] PTR const unsigned char 
  8164 ;;		 -> STR_3(8), 
  8165 ;;  l               1    8[COMMON] PTR const unsigned char 
  8166 ;;		 -> NULL(0), buffer_rx(20), 
  8167 ;; Return value:  Size  Location     Type
  8168 ;;                  2    0[COMMON] int 
  8169 ;; Registers used:
  8170 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  8171 ;; Tracked objects:
  8172 ;;		On entry : 0/0
  8173 ;;		On exit  : 0/0
  8174 ;;		Unchanged: 0/0
  8175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8176 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8177 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8178 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8179 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8180 ;;Total ram usage:        9 bytes
  8181 ;; Hardware stack levels used: 1
  8182 ;; This function calls:
  8183 ;;		Nothing
  8184 ;; This function is called by:
  8185 ;;		_strstr
  8186 ;; This function uses a non-reentrant model
  8187 ;;
  8188                           
  8189  03DC                     _strncmp:	
  8190                           ;psect for function _strncmp
  8191                           
  8192                           
  8193                           ;incstack = 0
  8194                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
  8195                           ;strncmp@_l stored from wreg
  8196  03DC  00F5               	movwf	strncmp@_l
  8197  03DD                     i1l2025:
  8198  03DD  0875               	movf	strncmp@_l,w
  8199  03DE  00F4               	movwf	??_strncmp
  8200  03DF  0874               	movf	??_strncmp,w
  8201  03E0  00F8               	movwf	strncmp@l
  8202  03E1  0871               	movf	strncmp@_r+1,w
  8203  03E2  00F7               	movwf	strncmp@r+1
  8204  03E3  0870               	movf	strncmp@_r,w
  8205  03E4  00F6               	movwf	strncmp@r
  8206  03E5                     i1l2027:
  8207  03E5  3001               	movlw	1
  8208  03E6  02F2               	subwf	strncmp@n,f
  8209  03E7  3000               	movlw	0
  8210  03E8  3BF3               	subwfb	strncmp@n+1,f
  8211  03E9  0A72               	incf	strncmp@n,w
  8212  03EA  1D03               	skipz
  8213  03EB  2BF0               	goto	u100_21
  8214  03EC  0A73               	incf	strncmp@n+1,w
  8215  03ED  1D03               	btfss	3,2
  8216  03EE  2BF0               	goto	u100_21
  8217  03EF  2BF1               	goto	u100_20
  8218  03F0                     u100_21:
  8219  03F0  2C00               	goto	i1l2039
  8220  03F1                     u100_20:
  8221  03F1                     i1l2029:
  8222  03F1  01F0               	clrf	?_strncmp
  8223  03F2  01F1               	clrf	?_strncmp+1
  8224  03F3  2C36               	goto	i1l1200
  8225  03F4                     i1l2033:
  8226  03F4  3001               	movlw	1
  8227  03F5  00F4               	movwf	??_strncmp
  8228  03F6  0874               	movf	??_strncmp,w
  8229  03F7  07F8               	addwf	strncmp@l,f
  8230  03F8                     i1l2035:
  8231  03F8  3001               	movlw	1
  8232  03F9  07F6               	addwf	strncmp@r,f
  8233  03FA  3000               	movlw	0
  8234  03FB  3DF7               	addwfc	strncmp@r+1,f
  8235  03FC                     i1l2037:
  8236  03FC  3001               	movlw	1
  8237  03FD  02F2               	subwf	strncmp@n,f
  8238  03FE  3000               	movlw	0
  8239  03FF  3BF3               	subwfb	strncmp@n+1,f
  8240  0400                     i1l2039:
  8241  0400  0878               	movf	strncmp@l,w
  8242  0401  0086               	movwf	6
  8243  0402  3001               	movlw	1	; select bank2/3
  8244  0403  0087               	movwf	7
  8245  0404  0801               	movf	1,w
  8246  0405  1903               	btfsc	3,2
  8247  0406  2C08               	goto	u101_21
  8248  0407  2C09               	goto	u101_20
  8249  0408                     u101_21:
  8250  0408  2C28               	goto	i1l2047
  8251  0409                     u101_20:
  8252  0409                     i1l2041:
  8253  0409  0876               	movf	strncmp@r,w
  8254  040A  0084               	movwf	4
  8255  040B  0877               	movf	strncmp@r+1,w
  8256  040C  0085               	movwf	5
  8257  040D  0012               	moviw fsr0++
  8258  040E  1903               	btfsc	3,2
  8259  040F  2C11               	goto	u102_21
  8260  0410  2C12               	goto	u102_20
  8261  0411                     u102_21:
  8262  0411  2C28               	goto	i1l2047
  8263  0412                     u102_20:
  8264  0412                     i1l2043:
  8265  0412  0872               	movf	strncmp@n,w
  8266  0413  0473               	iorwf	strncmp@n+1,w
  8267  0414  1903               	btfsc	3,2
  8268  0415  2C17               	goto	u103_21
  8269  0416  2C18               	goto	u103_20
  8270  0417                     u103_21:
  8271  0417  2C28               	goto	i1l2047
  8272  0418                     u103_20:
  8273  0418                     i1l2045:
  8274  0418  0876               	movf	strncmp@r,w
  8275  0419  0084               	movwf	4
  8276  041A  0877               	movf	strncmp@r+1,w
  8277  041B  0085               	movwf	5
  8278  041C  0800               	movf	0,w	;code access
  8279  041D  00F4               	movwf	??_strncmp
  8280  041E  0878               	movf	strncmp@l,w
  8281  041F  0086               	movwf	6
  8282  0420  3001               	movlw	1	; select bank2/3
  8283  0421  0087               	movwf	7
  8284  0422  0801               	movf	1,w
  8285  0423  0674               	xorwf	??_strncmp,w
  8286  0424  1903               	skipnz
  8287  0425  2C27               	goto	u104_21
  8288  0426  2C28               	goto	u104_20
  8289  0427                     u104_21:
  8290  0427  2BF4               	goto	i1l2033
  8291  0428                     u104_20:
  8292  0428                     i1l2047:
  8293  0428  0878               	movf	strncmp@l,w
  8294  0429  0086               	movwf	6
  8295  042A  3001               	movlw	1	; select bank2/3
  8296  042B  0087               	movwf	7
  8297  042C  0876               	movf	strncmp@r,w
  8298  042D  0084               	movwf	4
  8299  042E  0877               	movf	strncmp@r+1,w
  8300  042F  0085               	movwf	5
  8301  0430  0800               	movf	0,w	;code access
  8302  0431  0201               	subwf	1,w
  8303  0432  00F0               	movwf	?_strncmp
  8304  0433  01F1               	clrf	?_strncmp+1
  8305  0434  1C03               	skipc
  8306  0435  03F1               	decf	?_strncmp+1,f
  8307  0436                     i1l1200:
  8308  0436  0008               	return
  8309  0437                     __end_of_strncmp:
  8310                           
  8311                           	psect	text33
  8312  06C9                     __ptext33:	
  8313 ;; *************** function _strchr *****************
  8314 ;; Defined at:
  8315 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strchr.c"
  8316 ;; Parameters:    Size  Location     Type
  8317 ;;  s               1    wreg     PTR const unsigned char 
  8318 ;;		 -> NULL(0), buffer_rx(20), 
  8319 ;;  c               2    0[COMMON] int 
  8320 ;; Auto vars:     Size  Location     Type
  8321 ;;  s               1    2[COMMON] PTR const unsigned char 
  8322 ;;		 -> NULL(0), buffer_rx(20), 
  8323 ;; Return value:  Size  Location     Type
  8324 ;;                  1    wreg      PTR unsigned char 
  8325 ;; Registers used:
  8326 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8327 ;; Tracked objects:
  8328 ;;		On entry : 0/0
  8329 ;;		On exit  : 0/0
  8330 ;;		Unchanged: 0/0
  8331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8332 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8333 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8335 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8336 ;;Total ram usage:        3 bytes
  8337 ;; Hardware stack levels used: 1
  8338 ;; This function calls:
  8339 ;;		Nothing
  8340 ;; This function is called by:
  8341 ;;		_strstr
  8342 ;; This function uses a non-reentrant model
  8343 ;;
  8344                           
  8345  06C9                     _strchr:	
  8346                           ;psect for function _strchr
  8347                           
  8348                           
  8349                           ;incstack = 0
  8350                           ; Regs used in _strchr: [wreg+fsr1l+fsr1h+status,2+status,0]
  8351                           ;strchr@s stored from wreg
  8352  06C9  00F2               	movwf	strchr@s
  8353  06CA                     i1l1193:
  8354  06CA                     i1l2051:
  8355  06CA  0872               	movf	strchr@s,w
  8356  06CB  0086               	movwf	6
  8357  06CC  3001               	movlw	1	; select bank2/3
  8358  06CD  0087               	movwf	7
  8359  06CE  0801               	movf	1,w
  8360  06CF  0670               	xorwf	strchr@c,w
  8361  06D0  1D03               	skipz
  8362  06D1  2ED3               	goto	u105_21
  8363  06D2  2ED4               	goto	u105_20
  8364  06D3                     u105_21:
  8365  06D3  2ED6               	goto	i1l2057
  8366  06D4                     u105_20:
  8367  06D4                     i1l2053:
  8368  06D4  0872               	movf	strchr@s,w
  8369  06D5  2EE1               	goto	i1l1195
  8370  06D6                     i1l2057:
  8371  06D6  0872               	movf	strchr@s,w
  8372  06D7  0086               	movwf	6
  8373  06D8  3001               	movlw	1	; select bank2/3
  8374  06D9  0087               	movwf	7
  8375  06DA  0AF2               	incf	strchr@s,f
  8376  06DB  0801               	movf	1,w
  8377  06DC  1D03               	btfss	3,2
  8378  06DD  2EDF               	goto	u106_21
  8379  06DE  2EE0               	goto	u106_20
  8380  06DF                     u106_21:
  8381  06DF  2ECA               	goto	i1l1193
  8382  06E0                     u106_20:
  8383  06E0                     i1l2059:
  8384  06E0  3000               	movlw	0
  8385  06E1                     i1l1195:
  8386  06E1  0008               	return
  8387  06E2                     __end_of_strchr:
  8388                           
  8389                           	psect	text34
  8390  0548                     __ptext34:	
  8391 ;; *************** function _strcmp *****************
  8392 ;; Defined at:
  8393 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strcmp.c"
  8394 ;; Parameters:    Size  Location     Type
  8395 ;;  l               1    wreg     PTR const unsigned char 
  8396 ;;		 -> buffer_rx(20), 
  8397 ;;  r               2    0[COMMON] PTR const unsigned char 
  8398 ;;		 -> STR_4(7), STR_1(7), 
  8399 ;; Auto vars:     Size  Location     Type
  8400 ;;  l               1    3[COMMON] PTR const unsigned char 
  8401 ;;		 -> buffer_rx(20), 
  8402 ;; Return value:  Size  Location     Type
  8403 ;;                  2    0[COMMON] int 
  8404 ;; Registers used:
  8405 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  8406 ;; Tracked objects:
  8407 ;;		On entry : 0/0
  8408 ;;		On exit  : 0/0
  8409 ;;		Unchanged: 0/0
  8410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8411 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8412 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8413 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8414 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8415 ;;Total ram usage:        4 bytes
  8416 ;; Hardware stack levels used: 1
  8417 ;; This function calls:
  8418 ;;		Nothing
  8419 ;; This function is called by:
  8420 ;;		_EUSART_Receive_ISR
  8421 ;; This function uses a non-reentrant model
  8422 ;;
  8423                           
  8424  0548                     _strcmp:	
  8425                           ;psect for function _strcmp
  8426                           
  8427                           
  8428                           ;incstack = 0
  8429                           ; Regs used in _strcmp: [wreg-fsr1h+status,2+status,0+pclath]
  8430                           ;strcmp@l stored from wreg
  8431  0548  00F3               	movwf	strcmp@l
  8432  0549                     i1l2173:
  8433  0549  2D52               	goto	i1l2177
  8434  054A                     i1l2175:
  8435  054A  3001               	movlw	1
  8436  054B  00F2               	movwf	??_strcmp
  8437  054C  0872               	movf	??_strcmp,w
  8438  054D  07F3               	addwf	strcmp@l,f
  8439  054E  3001               	movlw	1
  8440  054F  07F0               	addwf	strcmp@r,f
  8441  0550  3000               	movlw	0
  8442  0551  3DF1               	addwfc	strcmp@r+1,f
  8443  0552                     i1l2177:
  8444  0552  0870               	movf	strcmp@r,w
  8445  0553  0084               	movwf	4
  8446  0554  0871               	movf	strcmp@r+1,w
  8447  0555  0085               	movwf	5
  8448  0556  0800               	movf	0,w	;code access
  8449  0557  00F2               	movwf	??_strcmp
  8450  0558  0873               	movf	strcmp@l,w
  8451  0559  0086               	movwf	6
  8452  055A  3001               	movlw	1	; select bank2/3
  8453  055B  0087               	movwf	7
  8454  055C  0801               	movf	1,w
  8455  055D  0672               	xorwf	??_strcmp,w
  8456  055E  1D03               	skipz
  8457  055F  2D61               	goto	u110_21
  8458  0560  2D62               	goto	u110_20
  8459  0561                     u110_21:
  8460  0561  2D6B               	goto	i1l2181
  8461  0562                     u110_20:
  8462  0562                     i1l2179:
  8463  0562  0873               	movf	strcmp@l,w
  8464  0563  0086               	movwf	6
  8465  0564  3001               	movlw	1	; select bank2/3
  8466  0565  0087               	movwf	7
  8467  0566  0801               	movf	1,w
  8468  0567  1D03               	btfss	3,2
  8469  0568  2D6A               	goto	u111_21
  8470  0569  2D6B               	goto	u111_20
  8471  056A                     u111_21:
  8472  056A  2D4A               	goto	i1l2175
  8473  056B                     u111_20:
  8474  056B                     i1l2181:
  8475  056B  0873               	movf	strcmp@l,w
  8476  056C  0086               	movwf	6
  8477  056D  3001               	movlw	1	; select bank2/3
  8478  056E  0087               	movwf	7
  8479  056F  0870               	movf	strcmp@r,w
  8480  0570  0084               	movwf	4
  8481  0571  0871               	movf	strcmp@r+1,w
  8482  0572  0085               	movwf	5
  8483  0573  0800               	movf	0,w	;code access
  8484  0574  0201               	subwf	1,w
  8485  0575  00F0               	movwf	?_strcmp
  8486  0576  01F1               	clrf	?_strcmp+1
  8487  0577  1C03               	skipc
  8488  0578  03F1               	decf	?_strcmp+1,f
  8489  0579                     i1l1168:
  8490  0579  0008               	return
  8491  057A                     __end_of_strcmp:
  8492                           
  8493                           	psect	text35
  8494  05D6                     __ptext35:	
  8495 ;; *************** function _EUSART_Read *****************
  8496 ;; Defined at:
  8497 ;;		line 160 in file "mcc_generated_files/eusart.c"
  8498 ;; Parameters:    Size  Location     Type
  8499 ;;		None
  8500 ;; Auto vars:     Size  Location     Type
  8501 ;;  readValue       1    1[COMMON] unsigned char 
  8502 ;; Return value:  Size  Location     Type
  8503 ;;                  1    wreg      unsigned char 
  8504 ;; Registers used:
  8505 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8506 ;; Tracked objects:
  8507 ;;		On entry : 0/0
  8508 ;;		On exit  : 0/0
  8509 ;;		Unchanged: 0/0
  8510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8512 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8513 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8514 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8515 ;;Total ram usage:        2 bytes
  8516 ;; Hardware stack levels used: 1
  8517 ;; This function calls:
  8518 ;;		Nothing
  8519 ;; This function is called by:
  8520 ;;		_EUSART_Receive_ISR
  8521 ;;		_getch
  8522 ;; This function uses a non-reentrant model
  8523 ;;
  8524                           
  8525  05D6                     _EUSART_Read:	
  8526                           ;psect for function _EUSART_Read
  8527                           
  8528  05D6                     i1l2151:	
  8529                           ;incstack = 0
  8530                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  8531                           
  8532  05D6                     i1l2153:	
  8533                           ;mcc_generated_files/eusart.c: 164:     while(0 == eusartRxCount)
  8534                           
  8535                           
  8536                           ;mcc_generated_files/eusart.c: 164:     while(0 == eusartRxCount)
  8537  05D6  0021               	movlb	1	; select bank1
  8538  05D7  0845               	movf	_eusartRxCount^(0+128),w	;volatile
  8539  05D8  1903               	btfsc	3,2
  8540  05D9  2DDB               	goto	u108_21
  8541  05DA  2DDC               	goto	u108_20
  8542  05DB                     u108_21:
  8543  05DB  2DD6               	goto	i1l2153
  8544  05DC                     u108_20:
  8545  05DC                     i1l2155:
  8546                           
  8547                           ;mcc_generated_files/eusart.c: 168:     eusartRxLastError = eusartRxStatusBuffer[eusartR
      +                          xTail];
  8548  05DC  0020               	movlb	0	; select bank0
  8549  05DD  0868               	movf	_eusartRxTail,w	;volatile
  8550  05DE  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  8551  05DF  0086               	movwf	6
  8552  05E0  0187               	clrf	7
  8553  05E1  0801               	movf	1,w
  8554  05E2  00F0               	movwf	??_EUSART_Read
  8555  05E3  0870               	movf	??_EUSART_Read,w
  8556  05E4  0021               	movlb	1	; select bank1
  8557  05E5  00C4               	movwf	_eusartRxLastError^(0+128)	;volatile
  8558                           
  8559                           ;mcc_generated_files/eusart.c: 170:     readValue = eusartRxBuffer[eusartRxTail++];
  8560  05E6  0020               	movlb	0	; select bank0
  8561  05E7  0868               	movf	_eusartRxTail,w
  8562  05E8  3EA8               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  8563  05E9  0086               	movwf	6
  8564  05EA  0187               	clrf	7
  8565  05EB  0801               	movf	1,w
  8566  05EC  00F0               	movwf	??_EUSART_Read
  8567  05ED  0870               	movf	??_EUSART_Read,w
  8568  05EE  00F1               	movwf	EUSART_Read@readValue
  8569  05EF                     i1l2157:
  8570  05EF  3001               	movlw	1
  8571  05F0  00F0               	movwf	??_EUSART_Read
  8572  05F1  0870               	movf	??_EUSART_Read,w
  8573  05F2  07E8               	addwf	_eusartRxTail,f	;volatile
  8574  05F3                     i1l2159:
  8575                           
  8576                           ;mcc_generated_files/eusart.c: 171:     if(sizeof(eusartRxBuffer) <= eusartRxTail)
  8577  05F3  3008               	movlw	8
  8578  05F4  0268               	subwf	_eusartRxTail,w	;volatile
  8579  05F5  1C03               	skipc
  8580  05F6  2DF8               	goto	u109_21
  8581  05F7  2DF9               	goto	u109_20
  8582  05F8                     u109_21:
  8583  05F8  2DFA               	goto	i1l2163
  8584  05F9                     u109_20:
  8585  05F9                     i1l2161:
  8586                           
  8587                           ;mcc_generated_files/eusart.c: 172:     {;mcc_generated_files/eusart.c: 173:         eus
      +                          artRxTail = 0;
  8588  05F9  01E8               	clrf	_eusartRxTail	;volatile
  8589  05FA                     i1l2163:
  8590                           
  8591                           ;mcc_generated_files/eusart.c: 175:     PIE3bits.RCIE = 0;
  8592  05FA  002E               	movlb	14	; select bank14
  8593  05FB  1299               	bcf	25,5	;volatile
  8594  05FC                     i1l2165:
  8595                           
  8596                           ;mcc_generated_files/eusart.c: 176:     eusartRxCount--;
  8597  05FC  3001               	movlw	1
  8598  05FD  0021               	movlb	1	; select bank1
  8599  05FE  02C5               	subwf	_eusartRxCount^(0+128),f	;volatile
  8600  05FF                     i1l2167:
  8601                           
  8602                           ;mcc_generated_files/eusart.c: 177:     PIE3bits.RCIE = 1;
  8603  05FF  002E               	movlb	14	; select bank14
  8604  0600  1699               	bsf	25,5	;volatile
  8605  0601                     i1l2169:
  8606                           
  8607                           ;mcc_generated_files/eusart.c: 179:     return readValue;
  8608  0601  0871               	movf	EUSART_Read@readValue,w
  8609  0602                     i1l224:
  8610  0602  0008               	return
  8611  0603                     __end_of_EUSART_Read:
  8612                           
  8613                           	psect	text36
  8614  079E                     __ptext36:	
  8615 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  8616 ;; Defined at:
  8617 ;;		line 299 in file "mcc_generated_files/eusart.c"
  8618 ;; Parameters:    Size  Location     Type
  8619 ;;		None
  8620 ;; Auto vars:     Size  Location     Type
  8621 ;;		None
  8622 ;; Return value:  Size  Location     Type
  8623 ;;                  1    wreg      void 
  8624 ;; Registers used:
  8625 ;;		None
  8626 ;; Tracked objects:
  8627 ;;		On entry : 0/0
  8628 ;;		On exit  : 0/0
  8629 ;;		Unchanged: 0/0
  8630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8635 ;;Total ram usage:        0 bytes
  8636 ;; Hardware stack levels used: 1
  8637 ;; This function calls:
  8638 ;;		Nothing
  8639 ;; This function is called by:
  8640 ;;		_EUSART_Initialize
  8641 ;;		_EUSART_Receive_ISR
  8642 ;; This function uses a non-reentrant model
  8643 ;;
  8644                           
  8645  079E                     _EUSART_DefaultOverrunErrorHandler:	
  8646                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  8647                           
  8648  079E                     i1l2205:	
  8649                           ;incstack = 0
  8650                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  8651                           
  8652                           
  8653                           ;mcc_generated_files/eusart.c: 302:     RC1STAbits.CREN = 0;
  8654  079E  0022               	movlb	2	; select bank2
  8655  079F  121D               	bcf	29,4	;volatile
  8656                           
  8657                           ;mcc_generated_files/eusart.c: 303:     RC1STAbits.CREN = 1;
  8658  07A0  161D               	bsf	29,4	;volatile
  8659  07A1                     i1l267:
  8660  07A1  0008               	return
  8661  07A2                     __end_of_EUSART_DefaultOverrunErrorHandler:
  8662                           
  8663                           	psect	text37
  8664  07A6                     __ptext37:	
  8665 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  8666 ;; Defined at:
  8667 ;;		line 297 in file "mcc_generated_files/eusart.c"
  8668 ;; Parameters:    Size  Location     Type
  8669 ;;		None
  8670 ;; Auto vars:     Size  Location     Type
  8671 ;;		None
  8672 ;; Return value:  Size  Location     Type
  8673 ;;                  1    wreg      void 
  8674 ;; Registers used:
  8675 ;;		None
  8676 ;; Tracked objects:
  8677 ;;		On entry : 0/0
  8678 ;;		On exit  : 0/0
  8679 ;;		Unchanged: 0/0
  8680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8685 ;;Total ram usage:        0 bytes
  8686 ;; Hardware stack levels used: 1
  8687 ;; This function calls:
  8688 ;;		Nothing
  8689 ;; This function is called by:
  8690 ;;		_EUSART_Initialize
  8691 ;;		_EUSART_Receive_ISR
  8692 ;; This function uses a non-reentrant model
  8693 ;;
  8694                           
  8695  07A6                     _EUSART_DefaultFramingErrorHandler:	
  8696                           ;psect for function _EUSART_DefaultFramingErrorHandler
  8697                           
  8698  07A6                     i1l264:	
  8699                           ;incstack = 0
  8700                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  8701                           
  8702  07A6  0008               	return
  8703  07A7                     __end_of_EUSART_DefaultFramingErrorHandler:
  8704                           
  8705                           	psect	text38
  8706  07A2                     __ptext38:	
  8707 ;; *************** function _EUSART_DefaultErrorHandler *****************
  8708 ;; Defined at:
  8709 ;;		line 307 in file "mcc_generated_files/eusart.c"
  8710 ;; Parameters:    Size  Location     Type
  8711 ;;		None
  8712 ;; Auto vars:     Size  Location     Type
  8713 ;;		None
  8714 ;; Return value:  Size  Location     Type
  8715 ;;                  1    wreg      void 
  8716 ;; Registers used:
  8717 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8718 ;; Tracked objects:
  8719 ;;		On entry : 0/0
  8720 ;;		On exit  : 0/0
  8721 ;;		Unchanged: 0/0
  8722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8727 ;;Total ram usage:        0 bytes
  8728 ;; Hardware stack levels used: 1
  8729 ;; Hardware stack levels required when called: 1
  8730 ;; This function calls:
  8731 ;;		_EUSART_RxDataHandler
  8732 ;; This function is called by:
  8733 ;;		_EUSART_Initialize
  8734 ;;		_EUSART_Receive_ISR
  8735 ;; This function uses a non-reentrant model
  8736 ;;
  8737                           
  8738  07A2                     _EUSART_DefaultErrorHandler:	
  8739                           ;psect for function _EUSART_DefaultErrorHandler
  8740                           
  8741  07A2                     i1l2207:	
  8742                           ;incstack = 0
  8743                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  8744                           
  8745                           
  8746                           ;mcc_generated_files/eusart.c: 308:     EUSART_RxDataHandler();
  8747  07A2  3186  267B  3187   	fcall	_EUSART_RxDataHandler
  8748  07A5                     i1l270:
  8749  07A5  0008               	return
  8750  07A6                     __end_of_EUSART_DefaultErrorHandler:
  8751                           
  8752                           	psect	text39
  8753  067B                     __ptext39:	
  8754 ;; *************** function _EUSART_RxDataHandler *****************
  8755 ;; Defined at:
  8756 ;;		line 287 in file "mcc_generated_files/eusart.c"
  8757 ;; Parameters:    Size  Location     Type
  8758 ;;		None
  8759 ;; Auto vars:     Size  Location     Type
  8760 ;;		None
  8761 ;; Return value:  Size  Location     Type
  8762 ;;                  1    wreg      void 
  8763 ;; Registers used:
  8764 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8765 ;; Tracked objects:
  8766 ;;		On entry : 0/0
  8767 ;;		On exit  : 0/0
  8768 ;;		Unchanged: 0/0
  8769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8772 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8773 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8774 ;;Total ram usage:        1 bytes
  8775 ;; Hardware stack levels used: 1
  8776 ;; This function calls:
  8777 ;;		Nothing
  8778 ;; This function is called by:
  8779 ;;		_EUSART_Receive_ISR
  8780 ;;		_EUSART_DefaultErrorHandler
  8781 ;; This function uses a non-reentrant model
  8782 ;;
  8783                           
  8784  067B                     _EUSART_RxDataHandler:	
  8785                           ;psect for function _EUSART_RxDataHandler
  8786                           
  8787  067B                     i1l1973:	
  8788                           ;incstack = 0
  8789                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  8790                           
  8791                           
  8792                           ;mcc_generated_files/eusart.c: 289:     eusartRxBuffer[eusartRxHead++] = RC1REG;
  8793  067B  0022               	movlb	2	; select bank2
  8794  067C  0819               	movf	25,w	;volatile
  8795  067D  00F0               	movwf	??_EUSART_RxDataHandler
  8796  067E  0020               	movlb	0	; select bank0
  8797  067F  0869               	movf	_eusartRxHead,w
  8798  0680  3EA8               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  8799  0681  0086               	movwf	6
  8800  0682  0187               	clrf	7
  8801  0683  0870               	movf	??_EUSART_RxDataHandler,w
  8802  0684  0081               	movwf	1
  8803  0685                     i1l1975:
  8804  0685  3001               	movlw	1
  8805  0686  00F0               	movwf	??_EUSART_RxDataHandler
  8806  0687  0870               	movf	??_EUSART_RxDataHandler,w
  8807  0688  07E9               	addwf	_eusartRxHead,f	;volatile
  8808  0689                     i1l1977:
  8809                           
  8810                           ;mcc_generated_files/eusart.c: 290:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  8811  0689  3008               	movlw	8
  8812  068A  0269               	subwf	_eusartRxHead,w	;volatile
  8813  068B  1C03               	skipc
  8814  068C  2E8E               	goto	u96_21
  8815  068D  2E8F               	goto	u96_20
  8816  068E                     u96_21:
  8817  068E  2E90               	goto	i1l1981
  8818  068F                     u96_20:
  8819  068F                     i1l1979:
  8820                           
  8821                           ;mcc_generated_files/eusart.c: 291:     {;mcc_generated_files/eusart.c: 292:         eus
      +                          artRxHead = 0;
  8822  068F  01E9               	clrf	_eusartRxHead	;volatile
  8823  0690                     i1l1981:
  8824                           
  8825                           ;mcc_generated_files/eusart.c: 294:     eusartRxCount++;
  8826  0690  3001               	movlw	1
  8827  0691  00F0               	movwf	??_EUSART_RxDataHandler
  8828  0692  0870               	movf	??_EUSART_RxDataHandler,w
  8829  0693  0021               	movlb	1	; select bank1
  8830  0694  07C5               	addwf	_eusartRxCount^(0+128),f	;volatile
  8831  0695                     i1l261:
  8832  0695  0008               	return
  8833  0696                     __end_of_EUSART_RxDataHandler:
  8834  007E                     btemp	set	126	;btemp
  8835  007E                     int$flags	set	126
  8836  007E                     wtemp0	set	126
  8837                           
  8838                           	psect	idloc
  8839                           
  8840                           ;Config register IDLOC0 @ 0x8000
  8841                           ;	unspecified, using default values
  8842  8000                     	org	32768
  8843  8000  3FFF               	dw	16383
  8844                           
  8845                           ;Config register IDLOC1 @ 0x8001
  8846                           ;	unspecified, using default values
  8847  8001                     	org	32769
  8848  8001  3FFF               	dw	16383
  8849                           
  8850                           ;Config register IDLOC2 @ 0x8002
  8851                           ;	unspecified, using default values
  8852  8002                     	org	32770
  8853  8002  3FFF               	dw	16383
  8854                           
  8855                           ;Config register IDLOC3 @ 0x8003
  8856                           ;	unspecified, using default values
  8857  8003                     	org	32771
  8858  8003  3FFF               	dw	16383
  8859                           
  8860                           	psect	config
  8861                           
  8862                           ;Config register CONFIG1 @ 0x8007
  8863                           ;	External Oscillator mode selection bits
  8864                           ;	FEXTOSC = OFF, Oscillator not enabled
  8865                           ;	Power-up default value for COSC bits
  8866                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
  8867                           ;	Clock Out Enable bit
  8868                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
  8869                           ;	Clock Switch Enable bit
  8870                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  8871                           ;	Fail-Safe Clock Monitor Enable bit
  8872                           ;	FCMEN = ON, FSCM timer enabled
  8873  8007                     	org	32775
  8874  8007  3FEC               	dw	16364
  8875                           
  8876                           ;Config register CONFIG2 @ 0x8008
  8877                           ;	Master Clear Enable bit
  8878                           ;	MCLRE = ON, MCLR pin is Master Clear function
  8879                           ;	Power-up Timer Enable bit
  8880                           ;	PWRTE = OFF, PWRT disabled
  8881                           ;	Low-Power BOR enable bit
  8882                           ;	LPBOREN = OFF, ULPBOR disabled
  8883                           ;	Brown-out reset enable bits
  8884                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  8885                           ;	Brown-out Reset Voltage Selection
  8886                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
  8887                           ;	Zero-cross detect disable
  8888                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
  8889                           ;	Peripheral Pin Select one-way control
  8890                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
  8891                           ;	Stack Overflow/Underflow Reset Enable bit
  8892                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  8893                           ;	Background Debugger
  8894                           ;	DEBUG = OFF, Background Debugger disabled
  8895  8008                     	org	32776
  8896  8008  3FFF               	dw	16383
  8897                           
  8898                           ;Config register CONFIG3 @ 0x8009
  8899                           ;	WDT Period Select bits
  8900                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  8901                           ;	WDT operating mode
  8902                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
  8903                           ;	WDT Window Select bits
  8904                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  8905                           ;	WDT input clock selector
  8906                           ;	WDTCCS = SC, Software Control
  8907  8009                     	org	32777
  8908  8009  3F9F               	dw	16287
  8909                           
  8910                           ;Config register CONFIG4 @ 0x800A
  8911                           ;	UserNVM self-write protection bits
  8912                           ;	WRT = OFF, Write protection off
  8913                           ;	Scanner Enable bit
  8914                           ;	SCANE = available, Scanner module is available for use
  8915                           ;	Low Voltage Programming Enable bit
  8916                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
  8917  800A                     	org	32778
  8918  800A  3FFF               	dw	16383
  8919                           
  8920                           ;Config register CONFIG5 @ 0x800B
  8921                           ;	UserNVM Program memory code protection bit
  8922                           ;	CP = OFF, Program Memory code protection disabled
  8923                           ;	DataNVM code protection bit
  8924                           ;	CPD = OFF, Data EEPROM code protection disabled
  8925  800B                     	org	32779
  8926  800B  3FFF               	dw	16383

Data Sizes:
    Strings     31
    Constant    0
    Data        0
    BSS         94
    Persistent  43
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     72      76
    BANK1            80     16      65
    BANK2            80      0      52
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_3(CODE[8]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_3(CODE[8]), 

    strncmp@_l	PTR const unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), buffer_rx(BANK2[20]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), buffer_rx(BANK2[20]), 

    strchr@s	PTR const unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), buffer_rx(BANK2[20]), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), buffer_rx(BANK2[20]), 

    strstr@h	PTR const unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), buffer_rx(BANK2[20]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_3(CODE[8]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), STR_3(CODE[8]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), STR_3(CODE[8]), 

    strcmp@r	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_4(CODE[7]), STR_1(CODE[7]), 

    strcmp@l	PTR const unsigned char  size(1) Largest target is 20
		 -> buffer_rx(BANK2[20]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S1144$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(1) Largest target is 0

    S1144$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_5(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 9
		 -> STR_5(CODE[9]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_5(CODE[9]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    sp__strstr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), buffer_rx(BANK2[20]), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Transmit_ISR(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _EUSART_Receive_ISR->_strstr
    _strstr->_strncmp
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _SYSTEM_Initialize->_EUSART_Initialize
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INTERRUPT_InterruptManager->_EUSART_Receive_ISR
    _EUSART_Receive_ISR->_strstr

Critical Paths under _main in BANK1

    _main->_printf
    _printf->_vfprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6134
                                             14 BANK1      2     2      0
           _ADCC_GetConversionResult
              _ADCC_IsConversionDone
               _ADCC_StartConversion
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    5622
                                              8 BANK1      6     2      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    5451
                                              0 BANK1      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    5016
                                             56 BANK0     16    14      2
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                24    16      8    3671
                                             32 BANK0     24    16      8
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2647
                                             23 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     216
                                              4 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1149
                                             15 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3     834
                                              7 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      66
                                              6 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART_Write                                         2     2      0      44
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             18     2     16     311
                                              4 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             26    10     16     314
                                              4 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                    _ADCC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     490
                                              6 BANK0      1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADCC_StartConversion                                 1     1      0      22
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADCC_IsConversionDone                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetConversionResult                             2     0      2       0
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          0     0      0    1408
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (11) _EUSART_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Receive_ISR                                  1     1      0    1408
                                              3 BANK0      1     1      0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
                        _EUSART_Read
               _EUSART_RxDataHandler
                             _strcmp
                             _strstr
 ---------------------------------------------------------------------------------
 (12) _strstr                                              8     6      2    1054
                                              9 COMMON     5     3      2
                                              0 BANK0      3     3      0
                             _strchr
                            _strncmp
                           i1_strlen
 ---------------------------------------------------------------------------------
 (13) i1_strlen                                            5     3      2     116
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (13) _strncmp                                             9     5      4     410
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (13) _strchr                                              3     1      2     197
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (12) _strcmp                                              4     2      2     330
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (12) _EUSART_Read                                         2     2      0      24
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetConversionResult
   _ADCC_IsConversionDone
   _ADCC_StartConversion
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _printf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
             _EUSART_Write
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
             _fputs
               _fputc
             _strlen

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_Read *
     _EUSART_RxDataHandler *
     _strcmp *
     _strstr *
       _strchr
       _strncmp
       i1_strlen
   _EUSART_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     48      4C       5       95.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     10      41       7       81.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      34       9       65.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      CF      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      CF      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Thu Feb 17 14:28:30 2022

                ?_EUSART_SetRxInterruptHandler 0024                                             l53 062D  
                                          l112 071B                                            l115 072D  
                                          l205 04CD                                            l118 0773  
                                          l230 05BB                                            l233 05D5  
                                          l229 05B1                                            l239 0790  
                                          l360 06F9                                            l273 0751  
                                          l282 0736                                            l363 077B  
                                          l276 0748                                            l285 073F  
                                          l366 0797                                            l462 0516  
                                          l279 075A                                            l369 0763  
                                          l860 030E                                            l853 02FE  
                                          l870 037F                                            l863 036F  
                                          u700 04D4                                            u701 04D3  
                                          u710 04D9                                            u711 04D8  
                                          u800 02FE                                            u720 04E8  
                                          u801 02FD                                            u721 04E7  
                                          u810 031C                                            u730 0506  
                                          u811 031B                                            u731 0505  
                                          u820 032F                                            u740 0656  
                                          u900 0060                                            u821 032E  
                                          u741 0655                                            u901 005F  
                                          u830 0351                                            u670 05B1  
                                          u750 06A9                                            u910 00F5  
                                          u831 0350                                            u671 05B0  
                                          u735 0502                                            u751 06A8  
                                          u911 00F4                                            u760 0293  
                                          u840 036F                                            u680 05B6  
                                          u920 0101                                            u841 036E  
                                          u681 05B5                                            u921 0100  
                                          u905 005C                                            u770 02A2  
                                          u690 05CF                                            u850 0387  
                                          u930 010E                                            u771 02A1  
                                          u835 034D                                            u691 05CE  
                                          u851 0386                                            u931 010D  
                                          u780 02B5                                            u860 0395  
                                          u940 011C                                            u781 02B4  
                                          u861 0394                                            u941 011B  
                                          u790 02DF                                            u870 03BE  
                                          u950 0121                                            u791 02DE  
                                          u871 03BD                                            u951 0120  
                                          u935 010A                                            u880 03C3  
                                          u881 03C2                                            u945 0118  
                                          u890 004D                                            u970 0148  
                                          u795 02DB                                            u875 03BA  
                                          u891 004C                                            u971 0147  
                                          u980 016B                                            u981 016A  
                                          u990 01B0                                            u991 01AF  
                       ??_EUSART_RxDataHandler 0070                                            _pad 0380  
               ?_EUSART_SetFramingErrorHandler 0024                                            wreg 0009  
                                 ?_EUSART_Read 0070                                           l1111 03BE  
                                         l1120 006E                                           l1113 03DB  
                                         l2001 019F                                           l2003 01B0  
                                         l2011 01C9                                           l1108 039C  
                                         l1116 0051                                           l1140 05A8  
                                         l2101 062A                                           l2013 01D1  
                                         l2005 01B8                                           l1133 01F7  
                                         l2111 072C                                           l2103 076C  
                                         l2007 01C3                                           l1152 0510  
                                         l1160 0656                                           l1128 0134  
                                         l2113 06E2                                           l2121 0488  
                                         l2105 0725                                           l2017 01D4  
                                         l2115 06F4                                           l2131 04A1  
                                         l2123 0490                                           l2107 0728  
                                         l2019 01ED                                           l1083 070B  
                                         l2117 06F6                                           l2141 04C1  
                                         l2133 04A3                                           l2125 049A  
                                         l2109 0729                                           l2221 070C  
                                         l1174 06AF                                           l2143 04C6  
                                         l2135 04A4                                           l2127 049D  
                                         l2119 0486                                           l2223 070F  
                                         l2145 04C8                                           l2137 04AC  
                                         l2129 049F                                           l2081 060D  
                                         l2073 0603                                           l2225 0712  
                                         l2147 04C9                                           l2139 04B4  
                                         l2091 061F                                           l2083 0610  
                                         l2075 0607                                           l2227 0715  
                                         l2149 04CB                                           l2093 0621  
                                         l2085 0612                                           l2077 0609  
                                         l2229 0718                                           l2341 059B  
                                         l2095 0623                                           l2087 061B  
                                         l2079 060B                                           l2343 05A4  
                                         l2335 057C                                           l2097 0625  
                                         l2089 061D                                           l2337 0580  
                                         l2361 0522                                           l2353 0511  
                                         l2291 0791                                           l2099 0628  
                                         l2339 0583                                           l2347 06FA  
                                         l2363 052D                                           l2355 0514  
                                         l2285 0776                                           l1901 0351  
                                         l1821 05BC                                           l2349 06FF  
                                         l2365 0538                                           l2357 0515  
                                         l2295 075B                                           l2287 0779  
                                         l1903 0361                                           l1823 05C5  
                                         l1831 05D3                                           l1815 05AB  
                                         l1911 0395                                           l2359 051A  
                                         l2289 077A                                           l1825 05C9  
                                         l1817 05AB                                           l1833 078C  
                                         l1841 04DE                                           l1921 03C3  
                                         l1913 039A                                           l1905 0382  
                                         l1827 05CF                                           l1819 05B6  
                                         l1843 04E8                                           l1835 04CE  
                                         l1851 0633                                           l1923 03CC  
                                         l1915 039F                                           l1907 0387  
                                         l1931 0060                                           l1829 05D0  
                                         l1845 0506                                           l1837 04D4  
                                         l1853 0641                                           l1861 06A0  
                                         l1917 03AB                                           l1909 0390  
                                         l1941 0092                                           l1933 0066  
                         _ADCC_StartConversion 0774                                           l1871 02A2  
                                         l1839 04D9                                           l1855 0646  
                                         l1863 06A9                                           l1919 03B0  
                                         l1951 00F5                                           l1943 00B9  
                                         l1935 0076                                           l1927 0048  
                                         l1881 02BD                                           l1873 02A5  
                                         l1849 0630                                           l1857 0696  
                                         l1953 0101                                           l1945 00BD  
                                         l1937 008A                                           l1929 004D  
                                         l1971 0752                                           l1963 0737  
                                         l1883 02DF                                           l1875 02AD  
                                         l1867 028B                                           l1891 031C  
                                         l1859 069C                                           l1955 010E  
                                         l1947 00C1                                           l1939 008D  
                                         l1965 072E                                           l1885 02EF  
                                         l1877 02B1                                           l1869 0296  
                                         l1893 031F                                           l1957 011C  
                                         l1949 00EE                                           ?_pad 0037  
                                         l1967 0749                                           l1887 02F0  
                                         l1879 02B5                                           l1895 0327  
                                         l1959 0121                                           l1991 0159  
                                         l1983 0137                                           l1969 0740  
                                         l1897 032B                                           l1889 030F  
                                         l1993 016B                                           l1985 0148  
                                         l1899 032F                                           l1995 0173  
                                         l1987 0150                                           l1997 0185  
                                         l1989 0155                                           STR_1 077C  
                                         STR_2 0764                                           STR_3 0764  
                                         STR_4 0783                                           STR_5 071C  
                                         u1320 05A4                                           u1321 05A3  
                                         u1330 0522                                           u1331 0521  
                                         _LATA 0016                                           _LATB 0017  
                                         _LATC 0018                                           u1347 053E  
                                         _PMD0 0796                                           _PMD1 0797  
                                         _PMD2 0798                                           _PMD3 0799  
                                         _PMD4 079A                                           _PMD5 079B  
                                         i1l72 001A                                           i1l73 0029  
                                         i1l77 0029                                           _WPUA 0F39  
                                         _WPUB 0F44                                           _WPUC 0F4F  
                                         _WPUE 0F65                                           _dbuf 0120  
                                         _main 0511                                           _prec 00BC  
                                         _nout 00B8                                           pad@i 003B  
                                         pad@p 0038                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           pad@w 003D  
                                         btemp 007E                                           _utoa 0046  
                                         start 002B                                          ??_pad 003A  
                                ?_EUSART_Write 0070                  __end_of_OSCILLATOR_Initialize 072E  
                                        _ADACQ 009D                                          _ADCAP 009B  
                                        _ADACT 0099                                          ?_main 0070  
                                        _ADCLK 0098                                          _ADCNT 010C  
                                        _ADPCH 009E                                          _ADREF 009A  
                                        _ADPRE 009C                                          _ADRPT 010D  
                                        ?_utoa 0040                                __end_of___lodiv 030F  
                              __end_of___lomod 0380                                          i1l224 0602  
                                        i1l242 0678                                          i1l251 0234  
                                        i1l261 0695                                          i1l245 067A  
                                        i1l270 07A5                                          i1l264 07A6  
                                        i1l257 028A                                          i1l267 07A1  
                                        _OSCEN 0891                                   vfpfcnvrt@fmt 0058  
                                 vfpfcnvrt@llu 005F                                          _TRISA 0011  
                                        _TRISB 0012                                          _TRISC 0013  
                                        u96_20 068F                                          u96_21 068E  
                                        _RXPPS 0ECB                        ??_ADCC_IsConversionDone 0024  
                                        _flags 00BE                          ?_ADCC_StartConversion 0070  
                                        _fputc 04CE                                          _fputs 062E  
                                        pad@fp 003F                                          _width 00BA  
                                        _putch 078A                                          pclath 000A  
                                        utoa@d 0040                                          utoa@i 0056  
                                        utoa@n 004E                                          utoa@p 0049  
                                        utoa@w 004C                                          status 0003  
                                        wtemp0 007E                                __end_of_strncmp 0437  
                             ___lodiv@dividend 002C                               __end_ofi1_strlen 06C9  
                              __initialization 002D                                   __end_of_main 0548  
                                 __end_of_utoa 0135                                 ??_EUSART_Write 0024  
                  ?_INTERRUPT_InterruptManager 0070                 ??_EUSART_SetRxInterruptHandler 0026  
                                       ??_main 00D4                                         ??_utoa 0048  
                             ___lodiv@quotient 0035                                         _ADACCH 0091  
                                       _ADACCL 0090      __end_of_EUSART_DefaultFramingErrorHandler 07A7  
          ??_EUSART_DefaultFramingErrorHandler 0070             ?_EUSART_DefaultFramingErrorHandler 0070  
            _EUSART_DefaultFramingErrorHandler 07A6                                         _ADCON0 0093  
                                       _ADCON1 0094                                         _ADCON2 0095  
                                       _ADCON3 0096                     _EUSART_OverrunErrorHandler 00D8  
                                       _ADERRH 0117                                         _ADERRL 0116  
                                       ?_fputc 0027                                         _ADLTHH 010F  
                                       _ADLTHL 010E                                         ?_fputs 002F  
                                       _ADRESH 008D                                         _ADRESL 008C  
                                       _ADSTAT 0097                                         _ADUTHH 0111  
                                       _ADUTHL 0110                                         _ANSELA 0F38  
                                       ?_putch 0070                                         _ANSELB 0F43  
                                       _ANSELC 0F4E                                         _RC1REG 0119  
                                       _RC0PPS 0F20                                         _RC1STA 011D  
                                       u100_20 03F1                                         u100_21 03F0  
                                       u101_20 0409                                         u101_21 0408  
                                       u110_20 0562                                         u102_20 0412  
                                       i1l1200 0436                                         u110_21 0561  
                                       u102_21 0411                                         u111_20 056B  
                                       u103_20 0418                                         u111_21 056A  
                                       u103_21 0417                                         i1l2041 0409  
                                       i1l2033 03F4                                         i1l2025 03DD  
                                       i1l2201 0484                                         i1l2051 06CA  
                                       i1l2043 0412                                         i1l2035 03F8  
                                       i1l2027 03E5                                         i1l2205 079E  
                                       i1l2053 06D4                                         i1l2045 0418  
                                       i1l2037 03FC                                         i1l2029 03F1  
                                       i1l1174 06C8                                         i1l2207 07A2  
                                       i1l2151 05D6                                         i1l2047 0428  
                                       i1l2039 0400                                         i1l2063 06B0  
                                       i1l2231 0657                                         i1l2311 0013  
                                       i1l1168 0579                                         u104_20 0428  
                                       u112_20 043F                                         u120_20 0214  
                                       i1l2161 05F9                                         i1l2153 05D6  
                                       i1l2057 06D6                                         i1l1193 06CA  
                                       u104_21 0427                                         i1l2065 06B5  
                                       u112_21 043E                                         u120_21 0213  
                                       i1l2241 0672                                         i1l2233 065E  
                                       i1l2313 001E                                         i1l2305 0006  
                                       _ODCONA 0F3A                                         _ODCONB 0F45  
                                       i1l2163 05FA                                         i1l2155 05DC  
                                       i1l2059 06E0                                         i1l1195 06E1  
                                       i1l2067 06B9                                         i1l1187 0485  
                                       i1l2251 020F                                         i1l2243 01F8  
                                       i1l2235 0666                                         i1l2315 0022  
                                       i1l2307 000A                                         _ODCONC 0F50  
                                       i1l2165 05FC                                         i1l2157 05EF  
                                       i1l2181 056B                                         i1l2173 0549  
                                       i1l2069 06C2                                         i1l2261 0231  
                                       i1l2253 0214                                         i1l2245 01FE  
                                       i1l2237 066B                                         i1l2309 000F  
                                       i1l2167 05FF                                         i1l2159 05F3  
                                       i1l2175 054A                                         i1l2191 045E  
                                       i1l2271 0257                                         i1l2263 023C  
                                       i1l2255 021A                                         i1l2247 0203  
                                       i1l2239 0671                                         u105_20 06D4  
                                       u113_20 045E                                         u121_20 022A  
                                       i1l2169 0601                                         i1l2177 0552  
                                       u105_21 06D3                                         u113_21 045D  
                                       i1l2185 0439                                         i1l2273 0259  
                                       i1l2265 0242                                         i1l2281 0279  
                                       u121_21 0229                                         i1l2257 0220  
                                       i1l2249 0209                                         i1l2179 0562  
                                       i1l2195 0461                                         i1l2187 043F  
                                       i1l2283 0285                                         i1l2275 0266  
                                       i1l2267 0248                                         i1l2259 022A  
                                       i1l2189 044C                                         i1l2197 0476  
                                       i1l2277 0268                                         i1l2269 0249  
                                       i1l2199 047B                                         i1l2279 0276  
                                       u106_20 06E0                                         u114_20 047B  
                                       u122_20 0242                                         u130_20 0022  
                                       u106_21 06DF                                         u114_21 047A  
                                       u122_21 0241                                         u130_21 0021  
                                       u107_20 06C2                                         u115_20 0484  
                                       u123_20 0257                                         u107_21 06C1  
                                       u115_21 0483                                         u123_21 0256  
                                       i1l1981 0690                                         i1l1973 067B  
                                       i1l1975 0685                                         u108_20 05DC  
                                       u124_20 0266                                         i1l1977 0689  
                                       u108_21 05DB                                         u124_21 0265  
                                       i1l1979 068F                                         u109_20 05F9  
                                       u125_20 0276                                         u117_20 065E  
                                       u109_21 05F8                                         u125_21 0275  
                                       u117_21 065D                                         u118_20 0671  
                                       u126_20 000A                                         u118_21 0670  
                                       u126_21 0009                                         u119_20 0203  
                                       u127_20 000F                                         u119_21 0202  
                                       u127_21 000E                                         u128_20 0013  
                                       u128_21 0012                                         _INLVLA 0F3C  
                                       _INLVLB 0F47                                         _INLVLC 0F52  
                                       _INLVLE 0F68                                         u129_20 001E  
                                       u129_21 001D                                         _OSCFRQ 0893  
                                       _TX1REG 011A                                         _TX1STA 011E  
                   ??_ADCC_GetConversionResult 0026                                   vfprintf@cfmt 00CC  
                                    ??___lodiv 0034                                      ??___lomod 0034  
                          _EUSART_Transmit_ISR 0657                                         _printf 06FA  
                                       pad@buf 0037                                         _strchr 06C9  
                                       _strcmp 0548                                         _strlen 0696  
                                       _strstr 0437                                _ADCC_Initialize 06E2  
                                       fputc@c 0027                                 _PMD_Initialize 076C  
                                       fputs@c 0033                                         fputs@i 0034  
                                       fputs@s 0036                         ??_ADCC_StartConversion 0024  
                             __end_of_vfprintf 05A9                                         utoa@fp 004B  
                                    ??_strncmp 0074                           ?_EUSART_Transmit_ISR 0070  
                            _SYSTEM_Initialize 070C                        __end_of__initialization 0042  
                           ?_SYSTEM_Initialize 0070           __end_of_EUSART_SetTxInterruptHandler 0737  
                 _EUSART_SetTxInterruptHandler 072E                                 __pcstackCOMMON 0070  
                          ??_SYSTEM_Initialize 0027                                  __end_of_fputc 0511  
                                __end_of_fputs 0657                                  __end_of_putch 0791  
                       __end_of_PMD_Initialize 0774                           _eusartRxStatusBuffer 00A0  
              ??_EUSART_SetOverrunErrorHandler 0026                                      ?i1_strlen 0070  
                  ADCC_StartConversion@channel 0024                                        ??_fputc 002A  
                    __end_of_SYSTEM_Initialize 071C                                        ??_fputs 0030  
                        ??_EUSART_Transmit_ISR 0070                                        ??_putch 0026  
                                   __pbssBANK0 0068                                     __pbssBANK1 00A0  
                                   __pbssBANK2 0120                           __end_of_EUSART_Write 05D6  
                                   __pmaintext 0511                  ?_EUSART_SetTxInterruptHandler 0024  
             _EUSART_TxDefaultInterruptHandler 00DE                        __end_of_ADCC_Initialize 06FA  
                                   __pintentry 0004                                        _ADFLTRH 0115  
                                      _ADFLTRL 0114                                        _ADPREVH 008F  
                                      _ADPREVL 008E                                        _ADSTPTH 0113  
                                      _ADSTPTL 0112                   ??_EUSART_DefaultErrorHandler 0071  
                                      ?_printf 00CE                                ?_PMD_Initialize 0070  
                                      ?_strchr 0070                                        ?_strcmp 0070  
                                      ?_strlen 0024                                        ?_strstr 0079  
                                _eusartRxCount 00C5                                        _SP1BRGH 011C  
                                      _SP1BRGL 011B                                        _OSCCON1 088D  
                                      _OSCCON3 088F                                        _OSCTUNE 0892  
                                   ??i1_strlen 0072                                        _SLRCONA 0F3B  
                                      _SLRCONB 0F46                                        _SLRCONC 0F51  
                     ??_EUSART_SetErrorHandler 0026                  __end_of_ADCC_IsConversionDone 0798  
                             ___lomod@dividend 002C                                        ___lodiv 028B  
                                      ___lomod 030F                                      ?_vfprintf 00C6  
                                      __ptext1 06FA                                        __ptext2 057A  
                                      __ptext3 0135                                        __ptext4 0046  
                                      __ptext5 0380                                        __ptext6 0696  
                                      __ptext7 062E                                        __ptext8 04CE  
                                      __ptext9 078A                          _OSCILLATOR_Initialize 0725  
                     ??_PIN_MANAGER_Initialize 0024                                        clrloop0 0799  
                                      _strncmp 03DC                           end_of_initialization 0042  
        __end_of_EUSART_SetOverrunErrorHandler 0749                  _EUSART_SetOverrunErrorHandler 0740  
                                      fputc@fp 0029                                        fputs@fp 002F  
                            _EUSART_Initialize 0486                             ?_EUSART_Initialize 0070  
                            __end_of_vfpfcnvrt 01F8                               ?_ADCC_Initialize 0070  
                                   ??_vfprintf 00C9                                        strchr@c 0070  
                                      strchr@s 0072                                        strcmp@l 0073  
                                      strcmp@r 0070                                        strlen@a 0027  
                                      strlen@s 0024                            ??_EUSART_Initialize 0026  
               ??_EUSART_SetTxInterruptHandler 0026                                        strstr@h 0022  
                                      strstr@n 0079                      __end_of_EUSART_Initialize 04CE  
           __end_of_EUSART_DefaultErrorHandler 07A6                     _EUSART_DefaultErrorHandler 07A2  
                                  vfpfcnvrt@ap 0059                                    vfpfcnvrt@fp 0067  
                                 _EUSART_Write 05A9                         ?_OSCILLATOR_Initialize 0070  
                    ?_ADCC_GetConversionResult 0024                                 __end_of_printf 070C  
                               __end_of_strchr 06E2                                 __end_of_strcmp 057A  
                               __end_of_strlen 06B0                                 __end_of_strstr 0486  
                          start_initialization 002D                                ___lodiv@divisor 0024  
                              ___lodiv@counter 003D                                    __end_of_pad 03DC  
                                ??_EUSART_Read 0070   EUSART_SetRxInterruptHandler@interruptHandler 0024  
 EUSART_SetTxInterruptHandler@interruptHandler 0024                                    putch@txData 0026  
                                    i1strlen@a 0073                                      i1strlen@s 0070  
               ?_EUSART_SetOverrunErrorHandler 0024                                    vfprintf@fmt 00C6  
                   _EUSART_FramingErrorHandler 00DA                               ??_PMD_Initialize 0024  
                       _EUSART_SetErrorHandler 0752                                       ??_printf 00D2  
                                     ??_strchr 0072                                       ??_strcmp 0072  
                                     ??_strlen 0026                                       ??_strstr 007B  
                                  _caracter_rx 00C3                    __end_of_EUSART_Transmit_ISR 067B  
                                    ___latbits 0002                                  __pcstackBANK0 0020  
                                __pcstackBANK1 00C6                     __end_of_EUSART_Receive_ISR 028B  
             _EUSART_RxDefaultInterruptHandler 00DC                            __end_of_EUSART_Read 0603  
                                    __pnvBANK1 00D6                   __end_of_EUSART_RxDataHandler 0696  
                       _PIN_MANAGER_Initialize 0603                           EUSART_Read@readValue 0071  
                                     ?___lodiv 0024                                       ?___lomod 0024  
                                 _eusartRxHead 0069                                   _eusartTxHead 006B  
                                 _eusartRxTail 0068                                   _eusartTxTail 006A  
                                    _buffer_rx 0140                   ??_INTERRUPT_InterruptManager 007E  
                      _eusartTxBufferRemaining 00E0                                ___lomod@divisor 0024  
                                     _BAUD1CON 011F                                ___lomod@counter 0035  
                                     ?_strncmp 0070                                 _eusartRxBuffer 00A8  
                        _ADCC_IsConversionDone 0791                                 _eusartTxBuffer 00B0  
                                     _LATAbits 0016         EUSART_SetErrorHandler@interruptHandler 0024  
                                    clear_ram0 0798                                       _PIE3bits 0719  
                            _eusartRxLastError 00C4                ??_EUSART_SetFramingErrorHandler 0026  
                                     _PIR3bits 070F      __end_of_EUSART_DefaultOverrunErrorHandler 07A2  
          ??_EUSART_DefaultOverrunErrorHandler 0070             ?_EUSART_DefaultOverrunErrorHandler 0070  
            _EUSART_DefaultOverrunErrorHandler 079E                                      _vfpfcnvrt 0135  
                                   _ADCON0bits 0093                                     _ADCON1bits 0094  
                                   _ADCON2bits 0095                                     _ADCON3bits 0096  
                                  _contador_rx 00C2                                       i1_strlen 06B0  
                                  _EUSART_Read 05D6                                     _ADSTATbits 0097  
             __end_of_ADCC_GetConversionResult 0764                                     vfprintf@ap 00C8  
                                   vfprintf@fp 00CB                        ??_OSCILLATOR_Initialize 0024  
                          _EUSART_ErrorHandler 00D6                    ?_EUSART_DefaultErrorHandler 0070  
                                   ?_vfpfcnvrt 0058                           _EUSART_RxDataHandler 067B  
                                     __ptext10 05A9                                       __ptext11 030F  
                                     __ptext20 0740                                       __ptext12 028B  
                                     __ptext21 0749                                       __ptext13 070C  
                                     __ptext30 0437                                       __ptext22 0752  
                                     __ptext14 076C                                       __ptext31 06B0  
                                     __ptext23 06E2                                       __ptext15 0603  
                                     __ptext32 03DC                                       __ptext24 0774  
                                     __ptext16 0725                                       __ptext33 06C9  
                                     __ptext25 0791                                       __ptext17 0486  
                                     __ptext34 0548                                       __ptext26 075B  
                                     __ptext18 072E                                       __ptext35 05D6  
                                     __ptext19 0737                                       __ptext36 079E  
                                     __ptext28 0657                                       __ptext37 07A6  
                                     __ptext29 01F8                                       __ptext38 07A2  
                                     __ptext39 067B                         ?_ADCC_IsConversionDone 0070  
                                     _leer_adc 00C0                        ?_EUSART_SetErrorHandler 0024  
                                   _RC1STAbits 011D  EUSART_SetOverrunErrorHandler@interruptHandler 0024  
                 __end_of_ADCC_StartConversion 077C                                       int$flags 007E  
                                     _vfprintf 057A             __end_of_INTERRUPT_InterruptManager 002B  
                   _INTERRUPT_InterruptManager 0004                                      printf@fmt 00CE  
        __end_of_EUSART_SetFramingErrorHandler 0752                  _EUSART_SetFramingErrorHandler 0749  
                                   _INTCONbits 000B                          ?_EUSART_RxDataHandler 0070  
                                     intlevel1 0000                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 075B                                      strncmp@_l 0075  
                                    strncmp@_r 0070           __end_of_EUSART_SetRxInterruptHandler 0740  
                 _EUSART_SetRxInterruptHandler 0737                                       printf@ap 00D3  
                           _EUSART_Receive_ISR 01F8  EUSART_SetFramingErrorHandler@interruptHandler 0024  
                     _ADCC_GetConversionResult 075B                                    ??_vfpfcnvrt 005A  
                                __pstringtext1 071C                                  __pstringtext2 0764  
                                __pstringtext3 077C                                  __pstringtext4 0783  
                                __pstringtext5 0000                            ?_EUSART_Receive_ISR 0070  
                                     strncmp@l 0078                                       strncmp@n 0072  
                                     strncmp@r 0076                                       strstr@nl 0020  
                                   _TX1STAbits 011E                             EUSART_Write@txData 0025  
               __end_of_PIN_MANAGER_Initialize 062E                              ??_ADCC_Initialize 0024  
                         ??_EUSART_Receive_ISR 0023  
