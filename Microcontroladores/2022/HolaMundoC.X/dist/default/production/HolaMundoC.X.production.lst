

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Jul 28 18:19:17 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F18855
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    32                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    33                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    34                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    38                           	psect	text15,local,class=CODE,merge=1,delta=2
    39                           	psect	text16,local,class=CODE,merge=1,delta=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2
    41                           	psect	text18,local,class=CODE,merge=1,delta=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2
    52                           	psect	text29,local,class=CODE,merge=1,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2
    54                           	psect	text31,local,class=CODE,merge=1,delta=2
    55                           	psect	text32,local,class=CODE,merge=1,delta=2
    56                           	psect	text33,local,class=CODE,merge=1,delta=2
    57                           	psect	text34,local,class=CODE,merge=1,delta=2
    58                           	psect	text35,local,class=CODE,merge=1,delta=2
    59                           	psect	text36,local,class=CODE,merge=1,delta=2
    60                           	psect	text37,local,class=CODE,merge=1,delta=2
    61                           	psect	text38,local,class=CODE,merge=1,delta=2
    62                           	psect	text39,local,class=CODE,merge=1,delta=2
    63                           	psect	text40,local,class=CODE,merge=1,delta=2
    64                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text42,local,class=CODE,merge=1,delta=2
    66                           	psect	text43,local,class=CODE,merge=1,delta=2
    67                           	psect	text44,local,class=CODE,merge=1,delta=2
    68                           	psect	text45,local,class=CODE,merge=1,delta=2
    69                           	psect	intentry,global,class=CODE,delta=2
    70                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    71                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    72                           	dabs	1,0x7E,2
    73  0000                     
    74                           ; Version 2.40
    75                           ; Generated 02/12/2021 GMT
    76                           ; 
    77                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution. Publication is not required when
    91                           ;        this file is used in an embedded application.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC16F18855 Definitions
   107                           ; 
   108                           ; SFR Addresses
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  0010                     	;# 
   125  0011                     	;# 
   126  0012                     	;# 
   127  0013                     	;# 
   128  0016                     	;# 
   129  0017                     	;# 
   130  0018                     	;# 
   131  001C                     	;# 
   132  001C                     	;# 
   133  001D                     	;# 
   134  001D                     	;# 
   135  001E                     	;# 
   136  001F                     	;# 
   137  008C                     	;# 
   138  008C                     	;# 
   139  008D                     	;# 
   140  008E                     	;# 
   141  008E                     	;# 
   142  008F                     	;# 
   143  0090                     	;# 
   144  0090                     	;# 
   145  0091                     	;# 
   146  0093                     	;# 
   147  0094                     	;# 
   148  0095                     	;# 
   149  0096                     	;# 
   150  0097                     	;# 
   151  0098                     	;# 
   152  0099                     	;# 
   153  009A                     	;# 
   154  009B                     	;# 
   155  009C                     	;# 
   156  009D                     	;# 
   157  009E                     	;# 
   158  010C                     	;# 
   159  010D                     	;# 
   160  010E                     	;# 
   161  010E                     	;# 
   162  010F                     	;# 
   163  0110                     	;# 
   164  0110                     	;# 
   165  0111                     	;# 
   166  0112                     	;# 
   167  0112                     	;# 
   168  0113                     	;# 
   169  0114                     	;# 
   170  0114                     	;# 
   171  0115                     	;# 
   172  0116                     	;# 
   173  0116                     	;# 
   174  0117                     	;# 
   175  0119                     	;# 
   176  0119                     	;# 
   177  0119                     	;# 
   178  011A                     	;# 
   179  011A                     	;# 
   180  011A                     	;# 
   181  011B                     	;# 
   182  011B                     	;# 
   183  011B                     	;# 
   184  011B                     	;# 
   185  011B                     	;# 
   186  011C                     	;# 
   187  011C                     	;# 
   188  011C                     	;# 
   189  011D                     	;# 
   190  011D                     	;# 
   191  011D                     	;# 
   192  011E                     	;# 
   193  011E                     	;# 
   194  011E                     	;# 
   195  011F                     	;# 
   196  011F                     	;# 
   197  011F                     	;# 
   198  011F                     	;# 
   199  011F                     	;# 
   200  018C                     	;# 
   201  018D                     	;# 
   202  018E                     	;# 
   203  018F                     	;# 
   204  0190                     	;# 
   205  0191                     	;# 
   206  0192                     	;# 
   207  0196                     	;# 
   208  0197                     	;# 
   209  0198                     	;# 
   210  0199                     	;# 
   211  019A                     	;# 
   212  019B                     	;# 
   213  019C                     	;# 
   214  020C                     	;# 
   215  020C                     	;# 
   216  020D                     	;# 
   217  020E                     	;# 
   218  020F                     	;# 
   219  020F                     	;# 
   220  0210                     	;# 
   221  0210                     	;# 
   222  0211                     	;# 
   223  0211                     	;# 
   224  0212                     	;# 
   225  0212                     	;# 
   226  0213                     	;# 
   227  0214                     	;# 
   228  0215                     	;# 
   229  0215                     	;# 
   230  0216                     	;# 
   231  0216                     	;# 
   232  0217                     	;# 
   233  0217                     	;# 
   234  0218                     	;# 
   235  0218                     	;# 
   236  0219                     	;# 
   237  021A                     	;# 
   238  021B                     	;# 
   239  021B                     	;# 
   240  021C                     	;# 
   241  021C                     	;# 
   242  021D                     	;# 
   243  021D                     	;# 
   244  021E                     	;# 
   245  021F                     	;# 
   246  028C                     	;# 
   247  028C                     	;# 
   248  028D                     	;# 
   249  028D                     	;# 
   250  028E                     	;# 
   251  028F                     	;# 
   252  0290                     	;# 
   253  0290                     	;# 
   254  0291                     	;# 
   255  0292                     	;# 
   256  0292                     	;# 
   257  0293                     	;# 
   258  0293                     	;# 
   259  0294                     	;# 
   260  0295                     	;# 
   261  0296                     	;# 
   262  0296                     	;# 
   263  0297                     	;# 
   264  0298                     	;# 
   265  0298                     	;# 
   266  0299                     	;# 
   267  0299                     	;# 
   268  029A                     	;# 
   269  029B                     	;# 
   270  029C                     	;# 
   271  029C                     	;# 
   272  029D                     	;# 
   273  030C                     	;# 
   274  030C                     	;# 
   275  030D                     	;# 
   276  030E                     	;# 
   277  030F                     	;# 
   278  0310                     	;# 
   279  0310                     	;# 
   280  0311                     	;# 
   281  0312                     	;# 
   282  0313                     	;# 
   283  0314                     	;# 
   284  0314                     	;# 
   285  0315                     	;# 
   286  0316                     	;# 
   287  0317                     	;# 
   288  0318                     	;# 
   289  0318                     	;# 
   290  0319                     	;# 
   291  031A                     	;# 
   292  031B                     	;# 
   293  031C                     	;# 
   294  031C                     	;# 
   295  031D                     	;# 
   296  031E                     	;# 
   297  031F                     	;# 
   298  038C                     	;# 
   299  038C                     	;# 
   300  038D                     	;# 
   301  038E                     	;# 
   302  0390                     	;# 
   303  0390                     	;# 
   304  0391                     	;# 
   305  0392                     	;# 
   306  040C                     	;# 
   307  040D                     	;# 
   308  040E                     	;# 
   309  040F                     	;# 
   310  0410                     	;# 
   311  0411                     	;# 
   312  0416                     	;# 
   313  0416                     	;# 
   314  0417                     	;# 
   315  0418                     	;# 
   316  0418                     	;# 
   317  0419                     	;# 
   318  041A                     	;# 
   319  041A                     	;# 
   320  041B                     	;# 
   321  041C                     	;# 
   322  041C                     	;# 
   323  041D                     	;# 
   324  041E                     	;# 
   325  041F                     	;# 
   326  048C                     	;# 
   327  048C                     	;# 
   328  048D                     	;# 
   329  048E                     	;# 
   330  048F                     	;# 
   331  048F                     	;# 
   332  0490                     	;# 
   333  0491                     	;# 
   334  0492                     	;# 
   335  0492                     	;# 
   336  0493                     	;# 
   337  0494                     	;# 
   338  0495                     	;# 
   339  0495                     	;# 
   340  0496                     	;# 
   341  0497                     	;# 
   342  0498                     	;# 
   343  0499                     	;# 
   344  049A                     	;# 
   345  049B                     	;# 
   346  049C                     	;# 
   347  049D                     	;# 
   348  050C                     	;# 
   349  050C                     	;# 
   350  050D                     	;# 
   351  050E                     	;# 
   352  050F                     	;# 
   353  050F                     	;# 
   354  0510                     	;# 
   355  0511                     	;# 
   356  0512                     	;# 
   357  0512                     	;# 
   358  0513                     	;# 
   359  0514                     	;# 
   360  0515                     	;# 
   361  0515                     	;# 
   362  0516                     	;# 
   363  0517                     	;# 
   364  0518                     	;# 
   365  0519                     	;# 
   366  051A                     	;# 
   367  051B                     	;# 
   368  051C                     	;# 
   369  051D                     	;# 
   370  058C                     	;# 
   371  058C                     	;# 
   372  058D                     	;# 
   373  058E                     	;# 
   374  058F                     	;# 
   375  058F                     	;# 
   376  0590                     	;# 
   377  0591                     	;# 
   378  0592                     	;# 
   379  0593                     	;# 
   380  060C                     	;# 
   381  060D                     	;# 
   382  060E                     	;# 
   383  060F                     	;# 
   384  0610                     	;# 
   385  0611                     	;# 
   386  0612                     	;# 
   387  0613                     	;# 
   388  0614                     	;# 
   389  0616                     	;# 
   390  0617                     	;# 
   391  0618                     	;# 
   392  0619                     	;# 
   393  061A                     	;# 
   394  061B                     	;# 
   395  061C                     	;# 
   396  061D                     	;# 
   397  061E                     	;# 
   398  068C                     	;# 
   399  068D                     	;# 
   400  068E                     	;# 
   401  068F                     	;# 
   402  0690                     	;# 
   403  0691                     	;# 
   404  0692                     	;# 
   405  0693                     	;# 
   406  0694                     	;# 
   407  070C                     	;# 
   408  070D                     	;# 
   409  070E                     	;# 
   410  070F                     	;# 
   411  0710                     	;# 
   412  0711                     	;# 
   413  0712                     	;# 
   414  0713                     	;# 
   415  0714                     	;# 
   416  0716                     	;# 
   417  0717                     	;# 
   418  0718                     	;# 
   419  0719                     	;# 
   420  071A                     	;# 
   421  071B                     	;# 
   422  071C                     	;# 
   423  071D                     	;# 
   424  071E                     	;# 
   425  0796                     	;# 
   426  0797                     	;# 
   427  0798                     	;# 
   428  0799                     	;# 
   429  079A                     	;# 
   430  079B                     	;# 
   431  080C                     	;# 
   432  080D                     	;# 
   433  080E                     	;# 
   434  080F                     	;# 
   435  0810                     	;# 
   436  0811                     	;# 
   437  0812                     	;# 
   438  0813                     	;# 
   439  0814                     	;# 
   440  081A                     	;# 
   441  081B                     	;# 
   442  081C                     	;# 
   443  081D                     	;# 
   444  081E                     	;# 
   445  081F                     	;# 
   446  088C                     	;# 
   447  088D                     	;# 
   448  088E                     	;# 
   449  088F                     	;# 
   450  0890                     	;# 
   451  0891                     	;# 
   452  0892                     	;# 
   453  0893                     	;# 
   454  0895                     	;# 
   455  0896                     	;# 
   456  0897                     	;# 
   457  0898                     	;# 
   458  0899                     	;# 
   459  089A                     	;# 
   460  089B                     	;# 
   461  090C                     	;# 
   462  090E                     	;# 
   463  090F                     	;# 
   464  091F                     	;# 
   465  091F                     	;# 
   466  098F                     	;# 
   467  098F                     	;# 
   468  0990                     	;# 
   469  0991                     	;# 
   470  0992                     	;# 
   471  0993                     	;# 
   472  0994                     	;# 
   473  0995                     	;# 
   474  0996                     	;# 
   475  0997                     	;# 
   476  0E0F                     	;# 
   477  0E10                     	;# 
   478  0E11                     	;# 
   479  0E12                     	;# 
   480  0E13                     	;# 
   481  0E14                     	;# 
   482  0E15                     	;# 
   483  0E16                     	;# 
   484  0E17                     	;# 
   485  0E18                     	;# 
   486  0E19                     	;# 
   487  0E1A                     	;# 
   488  0E1B                     	;# 
   489  0E1C                     	;# 
   490  0E1D                     	;# 
   491  0E1E                     	;# 
   492  0E1F                     	;# 
   493  0E20                     	;# 
   494  0E21                     	;# 
   495  0E22                     	;# 
   496  0E23                     	;# 
   497  0E24                     	;# 
   498  0E25                     	;# 
   499  0E26                     	;# 
   500  0E27                     	;# 
   501  0E28                     	;# 
   502  0E29                     	;# 
   503  0E2A                     	;# 
   504  0E2B                     	;# 
   505  0E2C                     	;# 
   506  0E2D                     	;# 
   507  0E2E                     	;# 
   508  0E2F                     	;# 
   509  0E30                     	;# 
   510  0E31                     	;# 
   511  0E32                     	;# 
   512  0E33                     	;# 
   513  0E34                     	;# 
   514  0E35                     	;# 
   515  0E36                     	;# 
   516  0E37                     	;# 
   517  0E8F                     	;# 
   518  0E90                     	;# 
   519  0E91                     	;# 
   520  0E92                     	;# 
   521  0E93                     	;# 
   522  0E94                     	;# 
   523  0E95                     	;# 
   524  0E96                     	;# 
   525  0E97                     	;# 
   526  0E9C                     	;# 
   527  0E9D                     	;# 
   528  0E9E                     	;# 
   529  0EA1                     	;# 
   530  0EA2                     	;# 
   531  0EA3                     	;# 
   532  0EA4                     	;# 
   533  0EA5                     	;# 
   534  0EA9                     	;# 
   535  0EAA                     	;# 
   536  0EAB                     	;# 
   537  0EAC                     	;# 
   538  0EB1                     	;# 
   539  0EB2                     	;# 
   540  0EB3                     	;# 
   541  0EB8                     	;# 
   542  0EB9                     	;# 
   543  0EBA                     	;# 
   544  0EBB                     	;# 
   545  0EBC                     	;# 
   546  0EBD                     	;# 
   547  0EBE                     	;# 
   548  0EC3                     	;# 
   549  0EC5                     	;# 
   550  0EC6                     	;# 
   551  0EC7                     	;# 
   552  0EC8                     	;# 
   553  0EC9                     	;# 
   554  0ECA                     	;# 
   555  0ECB                     	;# 
   556  0ECC                     	;# 
   557  0F10                     	;# 
   558  0F11                     	;# 
   559  0F12                     	;# 
   560  0F13                     	;# 
   561  0F14                     	;# 
   562  0F15                     	;# 
   563  0F16                     	;# 
   564  0F17                     	;# 
   565  0F18                     	;# 
   566  0F19                     	;# 
   567  0F1A                     	;# 
   568  0F1B                     	;# 
   569  0F1C                     	;# 
   570  0F1D                     	;# 
   571  0F1E                     	;# 
   572  0F1F                     	;# 
   573  0F20                     	;# 
   574  0F21                     	;# 
   575  0F22                     	;# 
   576  0F23                     	;# 
   577  0F24                     	;# 
   578  0F25                     	;# 
   579  0F26                     	;# 
   580  0F27                     	;# 
   581  0F38                     	;# 
   582  0F39                     	;# 
   583  0F3A                     	;# 
   584  0F3B                     	;# 
   585  0F3C                     	;# 
   586  0F3D                     	;# 
   587  0F3E                     	;# 
   588  0F3F                     	;# 
   589  0F40                     	;# 
   590  0F41                     	;# 
   591  0F43                     	;# 
   592  0F44                     	;# 
   593  0F45                     	;# 
   594  0F46                     	;# 
   595  0F47                     	;# 
   596  0F48                     	;# 
   597  0F49                     	;# 
   598  0F4A                     	;# 
   599  0F4B                     	;# 
   600  0F4C                     	;# 
   601  0F4E                     	;# 
   602  0F4F                     	;# 
   603  0F50                     	;# 
   604  0F51                     	;# 
   605  0F52                     	;# 
   606  0F53                     	;# 
   607  0F54                     	;# 
   608  0F55                     	;# 
   609  0F56                     	;# 
   610  0F57                     	;# 
   611  0F65                     	;# 
   612  0F68                     	;# 
   613  0F69                     	;# 
   614  0F6A                     	;# 
   615  0F6B                     	;# 
   616  0FE4                     	;# 
   617  0FE5                     	;# 
   618  0FE6                     	;# 
   619  0FE7                     	;# 
   620  0FE8                     	;# 
   621  0FE9                     	;# 
   622  0FEA                     	;# 
   623  0FEB                     	;# 
   624  0FED                     	;# 
   625  0FEE                     	;# 
   626  0FEF                     	;# 
   627  0000                     	;# 
   628  0001                     	;# 
   629  0002                     	;# 
   630  0003                     	;# 
   631  0004                     	;# 
   632  0005                     	;# 
   633  0006                     	;# 
   634  0007                     	;# 
   635  0008                     	;# 
   636  0009                     	;# 
   637  000A                     	;# 
   638  000B                     	;# 
   639  000C                     	;# 
   640  000D                     	;# 
   641  000E                     	;# 
   642  0010                     	;# 
   643  0011                     	;# 
   644  0012                     	;# 
   645  0013                     	;# 
   646  0016                     	;# 
   647  0017                     	;# 
   648  0018                     	;# 
   649  001C                     	;# 
   650  001C                     	;# 
   651  001D                     	;# 
   652  001D                     	;# 
   653  001E                     	;# 
   654  001F                     	;# 
   655  008C                     	;# 
   656  008C                     	;# 
   657  008D                     	;# 
   658  008E                     	;# 
   659  008E                     	;# 
   660  008F                     	;# 
   661  0090                     	;# 
   662  0090                     	;# 
   663  0091                     	;# 
   664  0093                     	;# 
   665  0094                     	;# 
   666  0095                     	;# 
   667  0096                     	;# 
   668  0097                     	;# 
   669  0098                     	;# 
   670  0099                     	;# 
   671  009A                     	;# 
   672  009B                     	;# 
   673  009C                     	;# 
   674  009D                     	;# 
   675  009E                     	;# 
   676  010C                     	;# 
   677  010D                     	;# 
   678  010E                     	;# 
   679  010E                     	;# 
   680  010F                     	;# 
   681  0110                     	;# 
   682  0110                     	;# 
   683  0111                     	;# 
   684  0112                     	;# 
   685  0112                     	;# 
   686  0113                     	;# 
   687  0114                     	;# 
   688  0114                     	;# 
   689  0115                     	;# 
   690  0116                     	;# 
   691  0116                     	;# 
   692  0117                     	;# 
   693  0119                     	;# 
   694  0119                     	;# 
   695  0119                     	;# 
   696  011A                     	;# 
   697  011A                     	;# 
   698  011A                     	;# 
   699  011B                     	;# 
   700  011B                     	;# 
   701  011B                     	;# 
   702  011B                     	;# 
   703  011B                     	;# 
   704  011C                     	;# 
   705  011C                     	;# 
   706  011C                     	;# 
   707  011D                     	;# 
   708  011D                     	;# 
   709  011D                     	;# 
   710  011E                     	;# 
   711  011E                     	;# 
   712  011E                     	;# 
   713  011F                     	;# 
   714  011F                     	;# 
   715  011F                     	;# 
   716  011F                     	;# 
   717  011F                     	;# 
   718  018C                     	;# 
   719  018D                     	;# 
   720  018E                     	;# 
   721  018F                     	;# 
   722  0190                     	;# 
   723  0191                     	;# 
   724  0192                     	;# 
   725  0196                     	;# 
   726  0197                     	;# 
   727  0198                     	;# 
   728  0199                     	;# 
   729  019A                     	;# 
   730  019B                     	;# 
   731  019C                     	;# 
   732  020C                     	;# 
   733  020C                     	;# 
   734  020D                     	;# 
   735  020E                     	;# 
   736  020F                     	;# 
   737  020F                     	;# 
   738  0210                     	;# 
   739  0210                     	;# 
   740  0211                     	;# 
   741  0211                     	;# 
   742  0212                     	;# 
   743  0212                     	;# 
   744  0213                     	;# 
   745  0214                     	;# 
   746  0215                     	;# 
   747  0215                     	;# 
   748  0216                     	;# 
   749  0216                     	;# 
   750  0217                     	;# 
   751  0217                     	;# 
   752  0218                     	;# 
   753  0218                     	;# 
   754  0219                     	;# 
   755  021A                     	;# 
   756  021B                     	;# 
   757  021B                     	;# 
   758  021C                     	;# 
   759  021C                     	;# 
   760  021D                     	;# 
   761  021D                     	;# 
   762  021E                     	;# 
   763  021F                     	;# 
   764  028C                     	;# 
   765  028C                     	;# 
   766  028D                     	;# 
   767  028D                     	;# 
   768  028E                     	;# 
   769  028F                     	;# 
   770  0290                     	;# 
   771  0290                     	;# 
   772  0291                     	;# 
   773  0292                     	;# 
   774  0292                     	;# 
   775  0293                     	;# 
   776  0293                     	;# 
   777  0294                     	;# 
   778  0295                     	;# 
   779  0296                     	;# 
   780  0296                     	;# 
   781  0297                     	;# 
   782  0298                     	;# 
   783  0298                     	;# 
   784  0299                     	;# 
   785  0299                     	;# 
   786  029A                     	;# 
   787  029B                     	;# 
   788  029C                     	;# 
   789  029C                     	;# 
   790  029D                     	;# 
   791  030C                     	;# 
   792  030C                     	;# 
   793  030D                     	;# 
   794  030E                     	;# 
   795  030F                     	;# 
   796  0310                     	;# 
   797  0310                     	;# 
   798  0311                     	;# 
   799  0312                     	;# 
   800  0313                     	;# 
   801  0314                     	;# 
   802  0314                     	;# 
   803  0315                     	;# 
   804  0316                     	;# 
   805  0317                     	;# 
   806  0318                     	;# 
   807  0318                     	;# 
   808  0319                     	;# 
   809  031A                     	;# 
   810  031B                     	;# 
   811  031C                     	;# 
   812  031C                     	;# 
   813  031D                     	;# 
   814  031E                     	;# 
   815  031F                     	;# 
   816  038C                     	;# 
   817  038C                     	;# 
   818  038D                     	;# 
   819  038E                     	;# 
   820  0390                     	;# 
   821  0390                     	;# 
   822  0391                     	;# 
   823  0392                     	;# 
   824  040C                     	;# 
   825  040D                     	;# 
   826  040E                     	;# 
   827  040F                     	;# 
   828  0410                     	;# 
   829  0411                     	;# 
   830  0416                     	;# 
   831  0416                     	;# 
   832  0417                     	;# 
   833  0418                     	;# 
   834  0418                     	;# 
   835  0419                     	;# 
   836  041A                     	;# 
   837  041A                     	;# 
   838  041B                     	;# 
   839  041C                     	;# 
   840  041C                     	;# 
   841  041D                     	;# 
   842  041E                     	;# 
   843  041F                     	;# 
   844  048C                     	;# 
   845  048C                     	;# 
   846  048D                     	;# 
   847  048E                     	;# 
   848  048F                     	;# 
   849  048F                     	;# 
   850  0490                     	;# 
   851  0491                     	;# 
   852  0492                     	;# 
   853  0492                     	;# 
   854  0493                     	;# 
   855  0494                     	;# 
   856  0495                     	;# 
   857  0495                     	;# 
   858  0496                     	;# 
   859  0497                     	;# 
   860  0498                     	;# 
   861  0499                     	;# 
   862  049A                     	;# 
   863  049B                     	;# 
   864  049C                     	;# 
   865  049D                     	;# 
   866  050C                     	;# 
   867  050C                     	;# 
   868  050D                     	;# 
   869  050E                     	;# 
   870  050F                     	;# 
   871  050F                     	;# 
   872  0510                     	;# 
   873  0511                     	;# 
   874  0512                     	;# 
   875  0512                     	;# 
   876  0513                     	;# 
   877  0514                     	;# 
   878  0515                     	;# 
   879  0515                     	;# 
   880  0516                     	;# 
   881  0517                     	;# 
   882  0518                     	;# 
   883  0519                     	;# 
   884  051A                     	;# 
   885  051B                     	;# 
   886  051C                     	;# 
   887  051D                     	;# 
   888  058C                     	;# 
   889  058C                     	;# 
   890  058D                     	;# 
   891  058E                     	;# 
   892  058F                     	;# 
   893  058F                     	;# 
   894  0590                     	;# 
   895  0591                     	;# 
   896  0592                     	;# 
   897  0593                     	;# 
   898  060C                     	;# 
   899  060D                     	;# 
   900  060E                     	;# 
   901  060F                     	;# 
   902  0610                     	;# 
   903  0611                     	;# 
   904  0612                     	;# 
   905  0613                     	;# 
   906  0614                     	;# 
   907  0616                     	;# 
   908  0617                     	;# 
   909  0618                     	;# 
   910  0619                     	;# 
   911  061A                     	;# 
   912  061B                     	;# 
   913  061C                     	;# 
   914  061D                     	;# 
   915  061E                     	;# 
   916  068C                     	;# 
   917  068D                     	;# 
   918  068E                     	;# 
   919  068F                     	;# 
   920  0690                     	;# 
   921  0691                     	;# 
   922  0692                     	;# 
   923  0693                     	;# 
   924  0694                     	;# 
   925  070C                     	;# 
   926  070D                     	;# 
   927  070E                     	;# 
   928  070F                     	;# 
   929  0710                     	;# 
   930  0711                     	;# 
   931  0712                     	;# 
   932  0713                     	;# 
   933  0714                     	;# 
   934  0716                     	;# 
   935  0717                     	;# 
   936  0718                     	;# 
   937  0719                     	;# 
   938  071A                     	;# 
   939  071B                     	;# 
   940  071C                     	;# 
   941  071D                     	;# 
   942  071E                     	;# 
   943  0796                     	;# 
   944  0797                     	;# 
   945  0798                     	;# 
   946  0799                     	;# 
   947  079A                     	;# 
   948  079B                     	;# 
   949  080C                     	;# 
   950  080D                     	;# 
   951  080E                     	;# 
   952  080F                     	;# 
   953  0810                     	;# 
   954  0811                     	;# 
   955  0812                     	;# 
   956  0813                     	;# 
   957  0814                     	;# 
   958  081A                     	;# 
   959  081B                     	;# 
   960  081C                     	;# 
   961  081D                     	;# 
   962  081E                     	;# 
   963  081F                     	;# 
   964  088C                     	;# 
   965  088D                     	;# 
   966  088E                     	;# 
   967  088F                     	;# 
   968  0890                     	;# 
   969  0891                     	;# 
   970  0892                     	;# 
   971  0893                     	;# 
   972  0895                     	;# 
   973  0896                     	;# 
   974  0897                     	;# 
   975  0898                     	;# 
   976  0899                     	;# 
   977  089A                     	;# 
   978  089B                     	;# 
   979  090C                     	;# 
   980  090E                     	;# 
   981  090F                     	;# 
   982  091F                     	;# 
   983  091F                     	;# 
   984  098F                     	;# 
   985  098F                     	;# 
   986  0990                     	;# 
   987  0991                     	;# 
   988  0992                     	;# 
   989  0993                     	;# 
   990  0994                     	;# 
   991  0995                     	;# 
   992  0996                     	;# 
   993  0997                     	;# 
   994  0E0F                     	;# 
   995  0E10                     	;# 
   996  0E11                     	;# 
   997  0E12                     	;# 
   998  0E13                     	;# 
   999  0E14                     	;# 
  1000  0E15                     	;# 
  1001  0E16                     	;# 
  1002  0E17                     	;# 
  1003  0E18                     	;# 
  1004  0E19                     	;# 
  1005  0E1A                     	;# 
  1006  0E1B                     	;# 
  1007  0E1C                     	;# 
  1008  0E1D                     	;# 
  1009  0E1E                     	;# 
  1010  0E1F                     	;# 
  1011  0E20                     	;# 
  1012  0E21                     	;# 
  1013  0E22                     	;# 
  1014  0E23                     	;# 
  1015  0E24                     	;# 
  1016  0E25                     	;# 
  1017  0E26                     	;# 
  1018  0E27                     	;# 
  1019  0E28                     	;# 
  1020  0E29                     	;# 
  1021  0E2A                     	;# 
  1022  0E2B                     	;# 
  1023  0E2C                     	;# 
  1024  0E2D                     	;# 
  1025  0E2E                     	;# 
  1026  0E2F                     	;# 
  1027  0E30                     	;# 
  1028  0E31                     	;# 
  1029  0E32                     	;# 
  1030  0E33                     	;# 
  1031  0E34                     	;# 
  1032  0E35                     	;# 
  1033  0E36                     	;# 
  1034  0E37                     	;# 
  1035  0E8F                     	;# 
  1036  0E90                     	;# 
  1037  0E91                     	;# 
  1038  0E92                     	;# 
  1039  0E93                     	;# 
  1040  0E94                     	;# 
  1041  0E95                     	;# 
  1042  0E96                     	;# 
  1043  0E97                     	;# 
  1044  0E9C                     	;# 
  1045  0E9D                     	;# 
  1046  0E9E                     	;# 
  1047  0EA1                     	;# 
  1048  0EA2                     	;# 
  1049  0EA3                     	;# 
  1050  0EA4                     	;# 
  1051  0EA5                     	;# 
  1052  0EA9                     	;# 
  1053  0EAA                     	;# 
  1054  0EAB                     	;# 
  1055  0EAC                     	;# 
  1056  0EB1                     	;# 
  1057  0EB2                     	;# 
  1058  0EB3                     	;# 
  1059  0EB8                     	;# 
  1060  0EB9                     	;# 
  1061  0EBA                     	;# 
  1062  0EBB                     	;# 
  1063  0EBC                     	;# 
  1064  0EBD                     	;# 
  1065  0EBE                     	;# 
  1066  0EC3                     	;# 
  1067  0EC5                     	;# 
  1068  0EC6                     	;# 
  1069  0EC7                     	;# 
  1070  0EC8                     	;# 
  1071  0EC9                     	;# 
  1072  0ECA                     	;# 
  1073  0ECB                     	;# 
  1074  0ECC                     	;# 
  1075  0F10                     	;# 
  1076  0F11                     	;# 
  1077  0F12                     	;# 
  1078  0F13                     	;# 
  1079  0F14                     	;# 
  1080  0F15                     	;# 
  1081  0F16                     	;# 
  1082  0F17                     	;# 
  1083  0F18                     	;# 
  1084  0F19                     	;# 
  1085  0F1A                     	;# 
  1086  0F1B                     	;# 
  1087  0F1C                     	;# 
  1088  0F1D                     	;# 
  1089  0F1E                     	;# 
  1090  0F1F                     	;# 
  1091  0F20                     	;# 
  1092  0F21                     	;# 
  1093  0F22                     	;# 
  1094  0F23                     	;# 
  1095  0F24                     	;# 
  1096  0F25                     	;# 
  1097  0F26                     	;# 
  1098  0F27                     	;# 
  1099  0F38                     	;# 
  1100  0F39                     	;# 
  1101  0F3A                     	;# 
  1102  0F3B                     	;# 
  1103  0F3C                     	;# 
  1104  0F3D                     	;# 
  1105  0F3E                     	;# 
  1106  0F3F                     	;# 
  1107  0F40                     	;# 
  1108  0F41                     	;# 
  1109  0F43                     	;# 
  1110  0F44                     	;# 
  1111  0F45                     	;# 
  1112  0F46                     	;# 
  1113  0F47                     	;# 
  1114  0F48                     	;# 
  1115  0F49                     	;# 
  1116  0F4A                     	;# 
  1117  0F4B                     	;# 
  1118  0F4C                     	;# 
  1119  0F4E                     	;# 
  1120  0F4F                     	;# 
  1121  0F50                     	;# 
  1122  0F51                     	;# 
  1123  0F52                     	;# 
  1124  0F53                     	;# 
  1125  0F54                     	;# 
  1126  0F55                     	;# 
  1127  0F56                     	;# 
  1128  0F57                     	;# 
  1129  0F65                     	;# 
  1130  0F68                     	;# 
  1131  0F69                     	;# 
  1132  0F6A                     	;# 
  1133  0F6B                     	;# 
  1134  0FE4                     	;# 
  1135  0FE5                     	;# 
  1136  0FE6                     	;# 
  1137  0FE7                     	;# 
  1138  0FE8                     	;# 
  1139  0FE9                     	;# 
  1140  0FEA                     	;# 
  1141  0FEB                     	;# 
  1142  0FED                     	;# 
  1143  0FEE                     	;# 
  1144  0FEF                     	;# 
  1145  0000                     	;# 
  1146  0001                     	;# 
  1147  0002                     	;# 
  1148  0003                     	;# 
  1149  0004                     	;# 
  1150  0005                     	;# 
  1151  0006                     	;# 
  1152  0007                     	;# 
  1153  0008                     	;# 
  1154  0009                     	;# 
  1155  000A                     	;# 
  1156  000B                     	;# 
  1157  000C                     	;# 
  1158  000D                     	;# 
  1159  000E                     	;# 
  1160  0010                     	;# 
  1161  0011                     	;# 
  1162  0012                     	;# 
  1163  0013                     	;# 
  1164  0016                     	;# 
  1165  0017                     	;# 
  1166  0018                     	;# 
  1167  001C                     	;# 
  1168  001C                     	;# 
  1169  001D                     	;# 
  1170  001D                     	;# 
  1171  001E                     	;# 
  1172  001F                     	;# 
  1173  008C                     	;# 
  1174  008C                     	;# 
  1175  008D                     	;# 
  1176  008E                     	;# 
  1177  008E                     	;# 
  1178  008F                     	;# 
  1179  0090                     	;# 
  1180  0090                     	;# 
  1181  0091                     	;# 
  1182  0093                     	;# 
  1183  0094                     	;# 
  1184  0095                     	;# 
  1185  0096                     	;# 
  1186  0097                     	;# 
  1187  0098                     	;# 
  1188  0099                     	;# 
  1189  009A                     	;# 
  1190  009B                     	;# 
  1191  009C                     	;# 
  1192  009D                     	;# 
  1193  009E                     	;# 
  1194  010C                     	;# 
  1195  010D                     	;# 
  1196  010E                     	;# 
  1197  010E                     	;# 
  1198  010F                     	;# 
  1199  0110                     	;# 
  1200  0110                     	;# 
  1201  0111                     	;# 
  1202  0112                     	;# 
  1203  0112                     	;# 
  1204  0113                     	;# 
  1205  0114                     	;# 
  1206  0114                     	;# 
  1207  0115                     	;# 
  1208  0116                     	;# 
  1209  0116                     	;# 
  1210  0117                     	;# 
  1211  0119                     	;# 
  1212  0119                     	;# 
  1213  0119                     	;# 
  1214  011A                     	;# 
  1215  011A                     	;# 
  1216  011A                     	;# 
  1217  011B                     	;# 
  1218  011B                     	;# 
  1219  011B                     	;# 
  1220  011B                     	;# 
  1221  011B                     	;# 
  1222  011C                     	;# 
  1223  011C                     	;# 
  1224  011C                     	;# 
  1225  011D                     	;# 
  1226  011D                     	;# 
  1227  011D                     	;# 
  1228  011E                     	;# 
  1229  011E                     	;# 
  1230  011E                     	;# 
  1231  011F                     	;# 
  1232  011F                     	;# 
  1233  011F                     	;# 
  1234  011F                     	;# 
  1235  011F                     	;# 
  1236  018C                     	;# 
  1237  018D                     	;# 
  1238  018E                     	;# 
  1239  018F                     	;# 
  1240  0190                     	;# 
  1241  0191                     	;# 
  1242  0192                     	;# 
  1243  0196                     	;# 
  1244  0197                     	;# 
  1245  0198                     	;# 
  1246  0199                     	;# 
  1247  019A                     	;# 
  1248  019B                     	;# 
  1249  019C                     	;# 
  1250  020C                     	;# 
  1251  020C                     	;# 
  1252  020D                     	;# 
  1253  020E                     	;# 
  1254  020F                     	;# 
  1255  020F                     	;# 
  1256  0210                     	;# 
  1257  0210                     	;# 
  1258  0211                     	;# 
  1259  0211                     	;# 
  1260  0212                     	;# 
  1261  0212                     	;# 
  1262  0213                     	;# 
  1263  0214                     	;# 
  1264  0215                     	;# 
  1265  0215                     	;# 
  1266  0216                     	;# 
  1267  0216                     	;# 
  1268  0217                     	;# 
  1269  0217                     	;# 
  1270  0218                     	;# 
  1271  0218                     	;# 
  1272  0219                     	;# 
  1273  021A                     	;# 
  1274  021B                     	;# 
  1275  021B                     	;# 
  1276  021C                     	;# 
  1277  021C                     	;# 
  1278  021D                     	;# 
  1279  021D                     	;# 
  1280  021E                     	;# 
  1281  021F                     	;# 
  1282  028C                     	;# 
  1283  028C                     	;# 
  1284  028D                     	;# 
  1285  028D                     	;# 
  1286  028E                     	;# 
  1287  028F                     	;# 
  1288  0290                     	;# 
  1289  0290                     	;# 
  1290  0291                     	;# 
  1291  0292                     	;# 
  1292  0292                     	;# 
  1293  0293                     	;# 
  1294  0293                     	;# 
  1295  0294                     	;# 
  1296  0295                     	;# 
  1297  0296                     	;# 
  1298  0296                     	;# 
  1299  0297                     	;# 
  1300  0298                     	;# 
  1301  0298                     	;# 
  1302  0299                     	;# 
  1303  0299                     	;# 
  1304  029A                     	;# 
  1305  029B                     	;# 
  1306  029C                     	;# 
  1307  029C                     	;# 
  1308  029D                     	;# 
  1309  030C                     	;# 
  1310  030C                     	;# 
  1311  030D                     	;# 
  1312  030E                     	;# 
  1313  030F                     	;# 
  1314  0310                     	;# 
  1315  0310                     	;# 
  1316  0311                     	;# 
  1317  0312                     	;# 
  1318  0313                     	;# 
  1319  0314                     	;# 
  1320  0314                     	;# 
  1321  0315                     	;# 
  1322  0316                     	;# 
  1323  0317                     	;# 
  1324  0318                     	;# 
  1325  0318                     	;# 
  1326  0319                     	;# 
  1327  031A                     	;# 
  1328  031B                     	;# 
  1329  031C                     	;# 
  1330  031C                     	;# 
  1331  031D                     	;# 
  1332  031E                     	;# 
  1333  031F                     	;# 
  1334  038C                     	;# 
  1335  038C                     	;# 
  1336  038D                     	;# 
  1337  038E                     	;# 
  1338  0390                     	;# 
  1339  0390                     	;# 
  1340  0391                     	;# 
  1341  0392                     	;# 
  1342  040C                     	;# 
  1343  040D                     	;# 
  1344  040E                     	;# 
  1345  040F                     	;# 
  1346  0410                     	;# 
  1347  0411                     	;# 
  1348  0416                     	;# 
  1349  0416                     	;# 
  1350  0417                     	;# 
  1351  0418                     	;# 
  1352  0418                     	;# 
  1353  0419                     	;# 
  1354  041A                     	;# 
  1355  041A                     	;# 
  1356  041B                     	;# 
  1357  041C                     	;# 
  1358  041C                     	;# 
  1359  041D                     	;# 
  1360  041E                     	;# 
  1361  041F                     	;# 
  1362  048C                     	;# 
  1363  048C                     	;# 
  1364  048D                     	;# 
  1365  048E                     	;# 
  1366  048F                     	;# 
  1367  048F                     	;# 
  1368  0490                     	;# 
  1369  0491                     	;# 
  1370  0492                     	;# 
  1371  0492                     	;# 
  1372  0493                     	;# 
  1373  0494                     	;# 
  1374  0495                     	;# 
  1375  0495                     	;# 
  1376  0496                     	;# 
  1377  0497                     	;# 
  1378  0498                     	;# 
  1379  0499                     	;# 
  1380  049A                     	;# 
  1381  049B                     	;# 
  1382  049C                     	;# 
  1383  049D                     	;# 
  1384  050C                     	;# 
  1385  050C                     	;# 
  1386  050D                     	;# 
  1387  050E                     	;# 
  1388  050F                     	;# 
  1389  050F                     	;# 
  1390  0510                     	;# 
  1391  0511                     	;# 
  1392  0512                     	;# 
  1393  0512                     	;# 
  1394  0513                     	;# 
  1395  0514                     	;# 
  1396  0515                     	;# 
  1397  0515                     	;# 
  1398  0516                     	;# 
  1399  0517                     	;# 
  1400  0518                     	;# 
  1401  0519                     	;# 
  1402  051A                     	;# 
  1403  051B                     	;# 
  1404  051C                     	;# 
  1405  051D                     	;# 
  1406  058C                     	;# 
  1407  058C                     	;# 
  1408  058D                     	;# 
  1409  058E                     	;# 
  1410  058F                     	;# 
  1411  058F                     	;# 
  1412  0590                     	;# 
  1413  0591                     	;# 
  1414  0592                     	;# 
  1415  0593                     	;# 
  1416  060C                     	;# 
  1417  060D                     	;# 
  1418  060E                     	;# 
  1419  060F                     	;# 
  1420  0610                     	;# 
  1421  0611                     	;# 
  1422  0612                     	;# 
  1423  0613                     	;# 
  1424  0614                     	;# 
  1425  0616                     	;# 
  1426  0617                     	;# 
  1427  0618                     	;# 
  1428  0619                     	;# 
  1429  061A                     	;# 
  1430  061B                     	;# 
  1431  061C                     	;# 
  1432  061D                     	;# 
  1433  061E                     	;# 
  1434  068C                     	;# 
  1435  068D                     	;# 
  1436  068E                     	;# 
  1437  068F                     	;# 
  1438  0690                     	;# 
  1439  0691                     	;# 
  1440  0692                     	;# 
  1441  0693                     	;# 
  1442  0694                     	;# 
  1443  070C                     	;# 
  1444  070D                     	;# 
  1445  070E                     	;# 
  1446  070F                     	;# 
  1447  0710                     	;# 
  1448  0711                     	;# 
  1449  0712                     	;# 
  1450  0713                     	;# 
  1451  0714                     	;# 
  1452  0716                     	;# 
  1453  0717                     	;# 
  1454  0718                     	;# 
  1455  0719                     	;# 
  1456  071A                     	;# 
  1457  071B                     	;# 
  1458  071C                     	;# 
  1459  071D                     	;# 
  1460  071E                     	;# 
  1461  0796                     	;# 
  1462  0797                     	;# 
  1463  0798                     	;# 
  1464  0799                     	;# 
  1465  079A                     	;# 
  1466  079B                     	;# 
  1467  080C                     	;# 
  1468  080D                     	;# 
  1469  080E                     	;# 
  1470  080F                     	;# 
  1471  0810                     	;# 
  1472  0811                     	;# 
  1473  0812                     	;# 
  1474  0813                     	;# 
  1475  0814                     	;# 
  1476  081A                     	;# 
  1477  081B                     	;# 
  1478  081C                     	;# 
  1479  081D                     	;# 
  1480  081E                     	;# 
  1481  081F                     	;# 
  1482  088C                     	;# 
  1483  088D                     	;# 
  1484  088E                     	;# 
  1485  088F                     	;# 
  1486  0890                     	;# 
  1487  0891                     	;# 
  1488  0892                     	;# 
  1489  0893                     	;# 
  1490  0895                     	;# 
  1491  0896                     	;# 
  1492  0897                     	;# 
  1493  0898                     	;# 
  1494  0899                     	;# 
  1495  089A                     	;# 
  1496  089B                     	;# 
  1497  090C                     	;# 
  1498  090E                     	;# 
  1499  090F                     	;# 
  1500  091F                     	;# 
  1501  091F                     	;# 
  1502  098F                     	;# 
  1503  098F                     	;# 
  1504  0990                     	;# 
  1505  0991                     	;# 
  1506  0992                     	;# 
  1507  0993                     	;# 
  1508  0994                     	;# 
  1509  0995                     	;# 
  1510  0996                     	;# 
  1511  0997                     	;# 
  1512  0E0F                     	;# 
  1513  0E10                     	;# 
  1514  0E11                     	;# 
  1515  0E12                     	;# 
  1516  0E13                     	;# 
  1517  0E14                     	;# 
  1518  0E15                     	;# 
  1519  0E16                     	;# 
  1520  0E17                     	;# 
  1521  0E18                     	;# 
  1522  0E19                     	;# 
  1523  0E1A                     	;# 
  1524  0E1B                     	;# 
  1525  0E1C                     	;# 
  1526  0E1D                     	;# 
  1527  0E1E                     	;# 
  1528  0E1F                     	;# 
  1529  0E20                     	;# 
  1530  0E21                     	;# 
  1531  0E22                     	;# 
  1532  0E23                     	;# 
  1533  0E24                     	;# 
  1534  0E25                     	;# 
  1535  0E26                     	;# 
  1536  0E27                     	;# 
  1537  0E28                     	;# 
  1538  0E29                     	;# 
  1539  0E2A                     	;# 
  1540  0E2B                     	;# 
  1541  0E2C                     	;# 
  1542  0E2D                     	;# 
  1543  0E2E                     	;# 
  1544  0E2F                     	;# 
  1545  0E30                     	;# 
  1546  0E31                     	;# 
  1547  0E32                     	;# 
  1548  0E33                     	;# 
  1549  0E34                     	;# 
  1550  0E35                     	;# 
  1551  0E36                     	;# 
  1552  0E37                     	;# 
  1553  0E8F                     	;# 
  1554  0E90                     	;# 
  1555  0E91                     	;# 
  1556  0E92                     	;# 
  1557  0E93                     	;# 
  1558  0E94                     	;# 
  1559  0E95                     	;# 
  1560  0E96                     	;# 
  1561  0E97                     	;# 
  1562  0E9C                     	;# 
  1563  0E9D                     	;# 
  1564  0E9E                     	;# 
  1565  0EA1                     	;# 
  1566  0EA2                     	;# 
  1567  0EA3                     	;# 
  1568  0EA4                     	;# 
  1569  0EA5                     	;# 
  1570  0EA9                     	;# 
  1571  0EAA                     	;# 
  1572  0EAB                     	;# 
  1573  0EAC                     	;# 
  1574  0EB1                     	;# 
  1575  0EB2                     	;# 
  1576  0EB3                     	;# 
  1577  0EB8                     	;# 
  1578  0EB9                     	;# 
  1579  0EBA                     	;# 
  1580  0EBB                     	;# 
  1581  0EBC                     	;# 
  1582  0EBD                     	;# 
  1583  0EBE                     	;# 
  1584  0EC3                     	;# 
  1585  0EC5                     	;# 
  1586  0EC6                     	;# 
  1587  0EC7                     	;# 
  1588  0EC8                     	;# 
  1589  0EC9                     	;# 
  1590  0ECA                     	;# 
  1591  0ECB                     	;# 
  1592  0ECC                     	;# 
  1593  0F10                     	;# 
  1594  0F11                     	;# 
  1595  0F12                     	;# 
  1596  0F13                     	;# 
  1597  0F14                     	;# 
  1598  0F15                     	;# 
  1599  0F16                     	;# 
  1600  0F17                     	;# 
  1601  0F18                     	;# 
  1602  0F19                     	;# 
  1603  0F1A                     	;# 
  1604  0F1B                     	;# 
  1605  0F1C                     	;# 
  1606  0F1D                     	;# 
  1607  0F1E                     	;# 
  1608  0F1F                     	;# 
  1609  0F20                     	;# 
  1610  0F21                     	;# 
  1611  0F22                     	;# 
  1612  0F23                     	;# 
  1613  0F24                     	;# 
  1614  0F25                     	;# 
  1615  0F26                     	;# 
  1616  0F27                     	;# 
  1617  0F38                     	;# 
  1618  0F39                     	;# 
  1619  0F3A                     	;# 
  1620  0F3B                     	;# 
  1621  0F3C                     	;# 
  1622  0F3D                     	;# 
  1623  0F3E                     	;# 
  1624  0F3F                     	;# 
  1625  0F40                     	;# 
  1626  0F41                     	;# 
  1627  0F43                     	;# 
  1628  0F44                     	;# 
  1629  0F45                     	;# 
  1630  0F46                     	;# 
  1631  0F47                     	;# 
  1632  0F48                     	;# 
  1633  0F49                     	;# 
  1634  0F4A                     	;# 
  1635  0F4B                     	;# 
  1636  0F4C                     	;# 
  1637  0F4E                     	;# 
  1638  0F4F                     	;# 
  1639  0F50                     	;# 
  1640  0F51                     	;# 
  1641  0F52                     	;# 
  1642  0F53                     	;# 
  1643  0F54                     	;# 
  1644  0F55                     	;# 
  1645  0F56                     	;# 
  1646  0F57                     	;# 
  1647  0F65                     	;# 
  1648  0F68                     	;# 
  1649  0F69                     	;# 
  1650  0F6A                     	;# 
  1651  0F6B                     	;# 
  1652  0FE4                     	;# 
  1653  0FE5                     	;# 
  1654  0FE6                     	;# 
  1655  0FE7                     	;# 
  1656  0FE8                     	;# 
  1657  0FE9                     	;# 
  1658  0FEA                     	;# 
  1659  0FEB                     	;# 
  1660  0FED                     	;# 
  1661  0FEE                     	;# 
  1662  0FEF                     	;# 
  1663  0000                     	;# 
  1664  0001                     	;# 
  1665  0002                     	;# 
  1666  0003                     	;# 
  1667  0004                     	;# 
  1668  0005                     	;# 
  1669  0006                     	;# 
  1670  0007                     	;# 
  1671  0008                     	;# 
  1672  0009                     	;# 
  1673  000A                     	;# 
  1674  000B                     	;# 
  1675  000C                     	;# 
  1676  000D                     	;# 
  1677  000E                     	;# 
  1678  0010                     	;# 
  1679  0011                     	;# 
  1680  0012                     	;# 
  1681  0013                     	;# 
  1682  0016                     	;# 
  1683  0017                     	;# 
  1684  0018                     	;# 
  1685  001C                     	;# 
  1686  001C                     	;# 
  1687  001D                     	;# 
  1688  001D                     	;# 
  1689  001E                     	;# 
  1690  001F                     	;# 
  1691  008C                     	;# 
  1692  008C                     	;# 
  1693  008D                     	;# 
  1694  008E                     	;# 
  1695  008E                     	;# 
  1696  008F                     	;# 
  1697  0090                     	;# 
  1698  0090                     	;# 
  1699  0091                     	;# 
  1700  0093                     	;# 
  1701  0094                     	;# 
  1702  0095                     	;# 
  1703  0096                     	;# 
  1704  0097                     	;# 
  1705  0098                     	;# 
  1706  0099                     	;# 
  1707  009A                     	;# 
  1708  009B                     	;# 
  1709  009C                     	;# 
  1710  009D                     	;# 
  1711  009E                     	;# 
  1712  010C                     	;# 
  1713  010D                     	;# 
  1714  010E                     	;# 
  1715  010E                     	;# 
  1716  010F                     	;# 
  1717  0110                     	;# 
  1718  0110                     	;# 
  1719  0111                     	;# 
  1720  0112                     	;# 
  1721  0112                     	;# 
  1722  0113                     	;# 
  1723  0114                     	;# 
  1724  0114                     	;# 
  1725  0115                     	;# 
  1726  0116                     	;# 
  1727  0116                     	;# 
  1728  0117                     	;# 
  1729  0119                     	;# 
  1730  0119                     	;# 
  1731  0119                     	;# 
  1732  011A                     	;# 
  1733  011A                     	;# 
  1734  011A                     	;# 
  1735  011B                     	;# 
  1736  011B                     	;# 
  1737  011B                     	;# 
  1738  011B                     	;# 
  1739  011B                     	;# 
  1740  011C                     	;# 
  1741  011C                     	;# 
  1742  011C                     	;# 
  1743  011D                     	;# 
  1744  011D                     	;# 
  1745  011D                     	;# 
  1746  011E                     	;# 
  1747  011E                     	;# 
  1748  011E                     	;# 
  1749  011F                     	;# 
  1750  011F                     	;# 
  1751  011F                     	;# 
  1752  011F                     	;# 
  1753  011F                     	;# 
  1754  018C                     	;# 
  1755  018D                     	;# 
  1756  018E                     	;# 
  1757  018F                     	;# 
  1758  0190                     	;# 
  1759  0191                     	;# 
  1760  0192                     	;# 
  1761  0196                     	;# 
  1762  0197                     	;# 
  1763  0198                     	;# 
  1764  0199                     	;# 
  1765  019A                     	;# 
  1766  019B                     	;# 
  1767  019C                     	;# 
  1768  020C                     	;# 
  1769  020C                     	;# 
  1770  020D                     	;# 
  1771  020E                     	;# 
  1772  020F                     	;# 
  1773  020F                     	;# 
  1774  0210                     	;# 
  1775  0210                     	;# 
  1776  0211                     	;# 
  1777  0211                     	;# 
  1778  0212                     	;# 
  1779  0212                     	;# 
  1780  0213                     	;# 
  1781  0214                     	;# 
  1782  0215                     	;# 
  1783  0215                     	;# 
  1784  0216                     	;# 
  1785  0216                     	;# 
  1786  0217                     	;# 
  1787  0217                     	;# 
  1788  0218                     	;# 
  1789  0218                     	;# 
  1790  0219                     	;# 
  1791  021A                     	;# 
  1792  021B                     	;# 
  1793  021B                     	;# 
  1794  021C                     	;# 
  1795  021C                     	;# 
  1796  021D                     	;# 
  1797  021D                     	;# 
  1798  021E                     	;# 
  1799  021F                     	;# 
  1800  028C                     	;# 
  1801  028C                     	;# 
  1802  028D                     	;# 
  1803  028D                     	;# 
  1804  028E                     	;# 
  1805  028F                     	;# 
  1806  0290                     	;# 
  1807  0290                     	;# 
  1808  0291                     	;# 
  1809  0292                     	;# 
  1810  0292                     	;# 
  1811  0293                     	;# 
  1812  0293                     	;# 
  1813  0294                     	;# 
  1814  0295                     	;# 
  1815  0296                     	;# 
  1816  0296                     	;# 
  1817  0297                     	;# 
  1818  0298                     	;# 
  1819  0298                     	;# 
  1820  0299                     	;# 
  1821  0299                     	;# 
  1822  029A                     	;# 
  1823  029B                     	;# 
  1824  029C                     	;# 
  1825  029C                     	;# 
  1826  029D                     	;# 
  1827  030C                     	;# 
  1828  030C                     	;# 
  1829  030D                     	;# 
  1830  030E                     	;# 
  1831  030F                     	;# 
  1832  0310                     	;# 
  1833  0310                     	;# 
  1834  0311                     	;# 
  1835  0312                     	;# 
  1836  0313                     	;# 
  1837  0314                     	;# 
  1838  0314                     	;# 
  1839  0315                     	;# 
  1840  0316                     	;# 
  1841  0317                     	;# 
  1842  0318                     	;# 
  1843  0318                     	;# 
  1844  0319                     	;# 
  1845  031A                     	;# 
  1846  031B                     	;# 
  1847  031C                     	;# 
  1848  031C                     	;# 
  1849  031D                     	;# 
  1850  031E                     	;# 
  1851  031F                     	;# 
  1852  038C                     	;# 
  1853  038C                     	;# 
  1854  038D                     	;# 
  1855  038E                     	;# 
  1856  0390                     	;# 
  1857  0390                     	;# 
  1858  0391                     	;# 
  1859  0392                     	;# 
  1860  040C                     	;# 
  1861  040D                     	;# 
  1862  040E                     	;# 
  1863  040F                     	;# 
  1864  0410                     	;# 
  1865  0411                     	;# 
  1866  0416                     	;# 
  1867  0416                     	;# 
  1868  0417                     	;# 
  1869  0418                     	;# 
  1870  0418                     	;# 
  1871  0419                     	;# 
  1872  041A                     	;# 
  1873  041A                     	;# 
  1874  041B                     	;# 
  1875  041C                     	;# 
  1876  041C                     	;# 
  1877  041D                     	;# 
  1878  041E                     	;# 
  1879  041F                     	;# 
  1880  048C                     	;# 
  1881  048C                     	;# 
  1882  048D                     	;# 
  1883  048E                     	;# 
  1884  048F                     	;# 
  1885  048F                     	;# 
  1886  0490                     	;# 
  1887  0491                     	;# 
  1888  0492                     	;# 
  1889  0492                     	;# 
  1890  0493                     	;# 
  1891  0494                     	;# 
  1892  0495                     	;# 
  1893  0495                     	;# 
  1894  0496                     	;# 
  1895  0497                     	;# 
  1896  0498                     	;# 
  1897  0499                     	;# 
  1898  049A                     	;# 
  1899  049B                     	;# 
  1900  049C                     	;# 
  1901  049D                     	;# 
  1902  050C                     	;# 
  1903  050C                     	;# 
  1904  050D                     	;# 
  1905  050E                     	;# 
  1906  050F                     	;# 
  1907  050F                     	;# 
  1908  0510                     	;# 
  1909  0511                     	;# 
  1910  0512                     	;# 
  1911  0512                     	;# 
  1912  0513                     	;# 
  1913  0514                     	;# 
  1914  0515                     	;# 
  1915  0515                     	;# 
  1916  0516                     	;# 
  1917  0517                     	;# 
  1918  0518                     	;# 
  1919  0519                     	;# 
  1920  051A                     	;# 
  1921  051B                     	;# 
  1922  051C                     	;# 
  1923  051D                     	;# 
  1924  058C                     	;# 
  1925  058C                     	;# 
  1926  058D                     	;# 
  1927  058E                     	;# 
  1928  058F                     	;# 
  1929  058F                     	;# 
  1930  0590                     	;# 
  1931  0591                     	;# 
  1932  0592                     	;# 
  1933  0593                     	;# 
  1934  060C                     	;# 
  1935  060D                     	;# 
  1936  060E                     	;# 
  1937  060F                     	;# 
  1938  0610                     	;# 
  1939  0611                     	;# 
  1940  0612                     	;# 
  1941  0613                     	;# 
  1942  0614                     	;# 
  1943  0616                     	;# 
  1944  0617                     	;# 
  1945  0618                     	;# 
  1946  0619                     	;# 
  1947  061A                     	;# 
  1948  061B                     	;# 
  1949  061C                     	;# 
  1950  061D                     	;# 
  1951  061E                     	;# 
  1952  068C                     	;# 
  1953  068D                     	;# 
  1954  068E                     	;# 
  1955  068F                     	;# 
  1956  0690                     	;# 
  1957  0691                     	;# 
  1958  0692                     	;# 
  1959  0693                     	;# 
  1960  0694                     	;# 
  1961  070C                     	;# 
  1962  070D                     	;# 
  1963  070E                     	;# 
  1964  070F                     	;# 
  1965  0710                     	;# 
  1966  0711                     	;# 
  1967  0712                     	;# 
  1968  0713                     	;# 
  1969  0714                     	;# 
  1970  0716                     	;# 
  1971  0717                     	;# 
  1972  0718                     	;# 
  1973  0719                     	;# 
  1974  071A                     	;# 
  1975  071B                     	;# 
  1976  071C                     	;# 
  1977  071D                     	;# 
  1978  071E                     	;# 
  1979  0796                     	;# 
  1980  0797                     	;# 
  1981  0798                     	;# 
  1982  0799                     	;# 
  1983  079A                     	;# 
  1984  079B                     	;# 
  1985  080C                     	;# 
  1986  080D                     	;# 
  1987  080E                     	;# 
  1988  080F                     	;# 
  1989  0810                     	;# 
  1990  0811                     	;# 
  1991  0812                     	;# 
  1992  0813                     	;# 
  1993  0814                     	;# 
  1994  081A                     	;# 
  1995  081B                     	;# 
  1996  081C                     	;# 
  1997  081D                     	;# 
  1998  081E                     	;# 
  1999  081F                     	;# 
  2000  088C                     	;# 
  2001  088D                     	;# 
  2002  088E                     	;# 
  2003  088F                     	;# 
  2004  0890                     	;# 
  2005  0891                     	;# 
  2006  0892                     	;# 
  2007  0893                     	;# 
  2008  0895                     	;# 
  2009  0896                     	;# 
  2010  0897                     	;# 
  2011  0898                     	;# 
  2012  0899                     	;# 
  2013  089A                     	;# 
  2014  089B                     	;# 
  2015  090C                     	;# 
  2016  090E                     	;# 
  2017  090F                     	;# 
  2018  091F                     	;# 
  2019  091F                     	;# 
  2020  098F                     	;# 
  2021  098F                     	;# 
  2022  0990                     	;# 
  2023  0991                     	;# 
  2024  0992                     	;# 
  2025  0993                     	;# 
  2026  0994                     	;# 
  2027  0995                     	;# 
  2028  0996                     	;# 
  2029  0997                     	;# 
  2030  0E0F                     	;# 
  2031  0E10                     	;# 
  2032  0E11                     	;# 
  2033  0E12                     	;# 
  2034  0E13                     	;# 
  2035  0E14                     	;# 
  2036  0E15                     	;# 
  2037  0E16                     	;# 
  2038  0E17                     	;# 
  2039  0E18                     	;# 
  2040  0E19                     	;# 
  2041  0E1A                     	;# 
  2042  0E1B                     	;# 
  2043  0E1C                     	;# 
  2044  0E1D                     	;# 
  2045  0E1E                     	;# 
  2046  0E1F                     	;# 
  2047  0E20                     	;# 
  2048  0E21                     	;# 
  2049  0E22                     	;# 
  2050  0E23                     	;# 
  2051  0E24                     	;# 
  2052  0E25                     	;# 
  2053  0E26                     	;# 
  2054  0E27                     	;# 
  2055  0E28                     	;# 
  2056  0E29                     	;# 
  2057  0E2A                     	;# 
  2058  0E2B                     	;# 
  2059  0E2C                     	;# 
  2060  0E2D                     	;# 
  2061  0E2E                     	;# 
  2062  0E2F                     	;# 
  2063  0E30                     	;# 
  2064  0E31                     	;# 
  2065  0E32                     	;# 
  2066  0E33                     	;# 
  2067  0E34                     	;# 
  2068  0E35                     	;# 
  2069  0E36                     	;# 
  2070  0E37                     	;# 
  2071  0E8F                     	;# 
  2072  0E90                     	;# 
  2073  0E91                     	;# 
  2074  0E92                     	;# 
  2075  0E93                     	;# 
  2076  0E94                     	;# 
  2077  0E95                     	;# 
  2078  0E96                     	;# 
  2079  0E97                     	;# 
  2080  0E9C                     	;# 
  2081  0E9D                     	;# 
  2082  0E9E                     	;# 
  2083  0EA1                     	;# 
  2084  0EA2                     	;# 
  2085  0EA3                     	;# 
  2086  0EA4                     	;# 
  2087  0EA5                     	;# 
  2088  0EA9                     	;# 
  2089  0EAA                     	;# 
  2090  0EAB                     	;# 
  2091  0EAC                     	;# 
  2092  0EB1                     	;# 
  2093  0EB2                     	;# 
  2094  0EB3                     	;# 
  2095  0EB8                     	;# 
  2096  0EB9                     	;# 
  2097  0EBA                     	;# 
  2098  0EBB                     	;# 
  2099  0EBC                     	;# 
  2100  0EBD                     	;# 
  2101  0EBE                     	;# 
  2102  0EC3                     	;# 
  2103  0EC5                     	;# 
  2104  0EC6                     	;# 
  2105  0EC7                     	;# 
  2106  0EC8                     	;# 
  2107  0EC9                     	;# 
  2108  0ECA                     	;# 
  2109  0ECB                     	;# 
  2110  0ECC                     	;# 
  2111  0F10                     	;# 
  2112  0F11                     	;# 
  2113  0F12                     	;# 
  2114  0F13                     	;# 
  2115  0F14                     	;# 
  2116  0F15                     	;# 
  2117  0F16                     	;# 
  2118  0F17                     	;# 
  2119  0F18                     	;# 
  2120  0F19                     	;# 
  2121  0F1A                     	;# 
  2122  0F1B                     	;# 
  2123  0F1C                     	;# 
  2124  0F1D                     	;# 
  2125  0F1E                     	;# 
  2126  0F1F                     	;# 
  2127  0F20                     	;# 
  2128  0F21                     	;# 
  2129  0F22                     	;# 
  2130  0F23                     	;# 
  2131  0F24                     	;# 
  2132  0F25                     	;# 
  2133  0F26                     	;# 
  2134  0F27                     	;# 
  2135  0F38                     	;# 
  2136  0F39                     	;# 
  2137  0F3A                     	;# 
  2138  0F3B                     	;# 
  2139  0F3C                     	;# 
  2140  0F3D                     	;# 
  2141  0F3E                     	;# 
  2142  0F3F                     	;# 
  2143  0F40                     	;# 
  2144  0F41                     	;# 
  2145  0F43                     	;# 
  2146  0F44                     	;# 
  2147  0F45                     	;# 
  2148  0F46                     	;# 
  2149  0F47                     	;# 
  2150  0F48                     	;# 
  2151  0F49                     	;# 
  2152  0F4A                     	;# 
  2153  0F4B                     	;# 
  2154  0F4C                     	;# 
  2155  0F4E                     	;# 
  2156  0F4F                     	;# 
  2157  0F50                     	;# 
  2158  0F51                     	;# 
  2159  0F52                     	;# 
  2160  0F53                     	;# 
  2161  0F54                     	;# 
  2162  0F55                     	;# 
  2163  0F56                     	;# 
  2164  0F57                     	;# 
  2165  0F65                     	;# 
  2166  0F68                     	;# 
  2167  0F69                     	;# 
  2168  0F6A                     	;# 
  2169  0F6B                     	;# 
  2170  0FE4                     	;# 
  2171  0FE5                     	;# 
  2172  0FE6                     	;# 
  2173  0FE7                     	;# 
  2174  0FE8                     	;# 
  2175  0FE9                     	;# 
  2176  0FEA                     	;# 
  2177  0FEB                     	;# 
  2178  0FED                     	;# 
  2179  0FEE                     	;# 
  2180  0FEF                     	;# 
  2181  0000                     	;# 
  2182  0001                     	;# 
  2183  0002                     	;# 
  2184  0003                     	;# 
  2185  0004                     	;# 
  2186  0005                     	;# 
  2187  0006                     	;# 
  2188  0007                     	;# 
  2189  0008                     	;# 
  2190  0009                     	;# 
  2191  000A                     	;# 
  2192  000B                     	;# 
  2193  000C                     	;# 
  2194  000D                     	;# 
  2195  000E                     	;# 
  2196  0010                     	;# 
  2197  0011                     	;# 
  2198  0012                     	;# 
  2199  0013                     	;# 
  2200  0016                     	;# 
  2201  0017                     	;# 
  2202  0018                     	;# 
  2203  001C                     	;# 
  2204  001C                     	;# 
  2205  001D                     	;# 
  2206  001D                     	;# 
  2207  001E                     	;# 
  2208  001F                     	;# 
  2209  008C                     	;# 
  2210  008C                     	;# 
  2211  008D                     	;# 
  2212  008E                     	;# 
  2213  008E                     	;# 
  2214  008F                     	;# 
  2215  0090                     	;# 
  2216  0090                     	;# 
  2217  0091                     	;# 
  2218  0093                     	;# 
  2219  0094                     	;# 
  2220  0095                     	;# 
  2221  0096                     	;# 
  2222  0097                     	;# 
  2223  0098                     	;# 
  2224  0099                     	;# 
  2225  009A                     	;# 
  2226  009B                     	;# 
  2227  009C                     	;# 
  2228  009D                     	;# 
  2229  009E                     	;# 
  2230  010C                     	;# 
  2231  010D                     	;# 
  2232  010E                     	;# 
  2233  010E                     	;# 
  2234  010F                     	;# 
  2235  0110                     	;# 
  2236  0110                     	;# 
  2237  0111                     	;# 
  2238  0112                     	;# 
  2239  0112                     	;# 
  2240  0113                     	;# 
  2241  0114                     	;# 
  2242  0114                     	;# 
  2243  0115                     	;# 
  2244  0116                     	;# 
  2245  0116                     	;# 
  2246  0117                     	;# 
  2247  0119                     	;# 
  2248  0119                     	;# 
  2249  0119                     	;# 
  2250  011A                     	;# 
  2251  011A                     	;# 
  2252  011A                     	;# 
  2253  011B                     	;# 
  2254  011B                     	;# 
  2255  011B                     	;# 
  2256  011B                     	;# 
  2257  011B                     	;# 
  2258  011C                     	;# 
  2259  011C                     	;# 
  2260  011C                     	;# 
  2261  011D                     	;# 
  2262  011D                     	;# 
  2263  011D                     	;# 
  2264  011E                     	;# 
  2265  011E                     	;# 
  2266  011E                     	;# 
  2267  011F                     	;# 
  2268  011F                     	;# 
  2269  011F                     	;# 
  2270  011F                     	;# 
  2271  011F                     	;# 
  2272  018C                     	;# 
  2273  018D                     	;# 
  2274  018E                     	;# 
  2275  018F                     	;# 
  2276  0190                     	;# 
  2277  0191                     	;# 
  2278  0192                     	;# 
  2279  0196                     	;# 
  2280  0197                     	;# 
  2281  0198                     	;# 
  2282  0199                     	;# 
  2283  019A                     	;# 
  2284  019B                     	;# 
  2285  019C                     	;# 
  2286  020C                     	;# 
  2287  020C                     	;# 
  2288  020D                     	;# 
  2289  020E                     	;# 
  2290  020F                     	;# 
  2291  020F                     	;# 
  2292  0210                     	;# 
  2293  0210                     	;# 
  2294  0211                     	;# 
  2295  0211                     	;# 
  2296  0212                     	;# 
  2297  0212                     	;# 
  2298  0213                     	;# 
  2299  0214                     	;# 
  2300  0215                     	;# 
  2301  0215                     	;# 
  2302  0216                     	;# 
  2303  0216                     	;# 
  2304  0217                     	;# 
  2305  0217                     	;# 
  2306  0218                     	;# 
  2307  0218                     	;# 
  2308  0219                     	;# 
  2309  021A                     	;# 
  2310  021B                     	;# 
  2311  021B                     	;# 
  2312  021C                     	;# 
  2313  021C                     	;# 
  2314  021D                     	;# 
  2315  021D                     	;# 
  2316  021E                     	;# 
  2317  021F                     	;# 
  2318  028C                     	;# 
  2319  028C                     	;# 
  2320  028D                     	;# 
  2321  028D                     	;# 
  2322  028E                     	;# 
  2323  028F                     	;# 
  2324  0290                     	;# 
  2325  0290                     	;# 
  2326  0291                     	;# 
  2327  0292                     	;# 
  2328  0292                     	;# 
  2329  0293                     	;# 
  2330  0293                     	;# 
  2331  0294                     	;# 
  2332  0295                     	;# 
  2333  0296                     	;# 
  2334  0296                     	;# 
  2335  0297                     	;# 
  2336  0298                     	;# 
  2337  0298                     	;# 
  2338  0299                     	;# 
  2339  0299                     	;# 
  2340  029A                     	;# 
  2341  029B                     	;# 
  2342  029C                     	;# 
  2343  029C                     	;# 
  2344  029D                     	;# 
  2345  030C                     	;# 
  2346  030C                     	;# 
  2347  030D                     	;# 
  2348  030E                     	;# 
  2349  030F                     	;# 
  2350  0310                     	;# 
  2351  0310                     	;# 
  2352  0311                     	;# 
  2353  0312                     	;# 
  2354  0313                     	;# 
  2355  0314                     	;# 
  2356  0314                     	;# 
  2357  0315                     	;# 
  2358  0316                     	;# 
  2359  0317                     	;# 
  2360  0318                     	;# 
  2361  0318                     	;# 
  2362  0319                     	;# 
  2363  031A                     	;# 
  2364  031B                     	;# 
  2365  031C                     	;# 
  2366  031C                     	;# 
  2367  031D                     	;# 
  2368  031E                     	;# 
  2369  031F                     	;# 
  2370  038C                     	;# 
  2371  038C                     	;# 
  2372  038D                     	;# 
  2373  038E                     	;# 
  2374  0390                     	;# 
  2375  0390                     	;# 
  2376  0391                     	;# 
  2377  0392                     	;# 
  2378  040C                     	;# 
  2379  040D                     	;# 
  2380  040E                     	;# 
  2381  040F                     	;# 
  2382  0410                     	;# 
  2383  0411                     	;# 
  2384  0416                     	;# 
  2385  0416                     	;# 
  2386  0417                     	;# 
  2387  0418                     	;# 
  2388  0418                     	;# 
  2389  0419                     	;# 
  2390  041A                     	;# 
  2391  041A                     	;# 
  2392  041B                     	;# 
  2393  041C                     	;# 
  2394  041C                     	;# 
  2395  041D                     	;# 
  2396  041E                     	;# 
  2397  041F                     	;# 
  2398  048C                     	;# 
  2399  048C                     	;# 
  2400  048D                     	;# 
  2401  048E                     	;# 
  2402  048F                     	;# 
  2403  048F                     	;# 
  2404  0490                     	;# 
  2405  0491                     	;# 
  2406  0492                     	;# 
  2407  0492                     	;# 
  2408  0493                     	;# 
  2409  0494                     	;# 
  2410  0495                     	;# 
  2411  0495                     	;# 
  2412  0496                     	;# 
  2413  0497                     	;# 
  2414  0498                     	;# 
  2415  0499                     	;# 
  2416  049A                     	;# 
  2417  049B                     	;# 
  2418  049C                     	;# 
  2419  049D                     	;# 
  2420  050C                     	;# 
  2421  050C                     	;# 
  2422  050D                     	;# 
  2423  050E                     	;# 
  2424  050F                     	;# 
  2425  050F                     	;# 
  2426  0510                     	;# 
  2427  0511                     	;# 
  2428  0512                     	;# 
  2429  0512                     	;# 
  2430  0513                     	;# 
  2431  0514                     	;# 
  2432  0515                     	;# 
  2433  0515                     	;# 
  2434  0516                     	;# 
  2435  0517                     	;# 
  2436  0518                     	;# 
  2437  0519                     	;# 
  2438  051A                     	;# 
  2439  051B                     	;# 
  2440  051C                     	;# 
  2441  051D                     	;# 
  2442  058C                     	;# 
  2443  058C                     	;# 
  2444  058D                     	;# 
  2445  058E                     	;# 
  2446  058F                     	;# 
  2447  058F                     	;# 
  2448  0590                     	;# 
  2449  0591                     	;# 
  2450  0592                     	;# 
  2451  0593                     	;# 
  2452  060C                     	;# 
  2453  060D                     	;# 
  2454  060E                     	;# 
  2455  060F                     	;# 
  2456  0610                     	;# 
  2457  0611                     	;# 
  2458  0612                     	;# 
  2459  0613                     	;# 
  2460  0614                     	;# 
  2461  0616                     	;# 
  2462  0617                     	;# 
  2463  0618                     	;# 
  2464  0619                     	;# 
  2465  061A                     	;# 
  2466  061B                     	;# 
  2467  061C                     	;# 
  2468  061D                     	;# 
  2469  061E                     	;# 
  2470  068C                     	;# 
  2471  068D                     	;# 
  2472  068E                     	;# 
  2473  068F                     	;# 
  2474  0690                     	;# 
  2475  0691                     	;# 
  2476  0692                     	;# 
  2477  0693                     	;# 
  2478  0694                     	;# 
  2479  070C                     	;# 
  2480  070D                     	;# 
  2481  070E                     	;# 
  2482  070F                     	;# 
  2483  0710                     	;# 
  2484  0711                     	;# 
  2485  0712                     	;# 
  2486  0713                     	;# 
  2487  0714                     	;# 
  2488  0716                     	;# 
  2489  0717                     	;# 
  2490  0718                     	;# 
  2491  0719                     	;# 
  2492  071A                     	;# 
  2493  071B                     	;# 
  2494  071C                     	;# 
  2495  071D                     	;# 
  2496  071E                     	;# 
  2497  0796                     	;# 
  2498  0797                     	;# 
  2499  0798                     	;# 
  2500  0799                     	;# 
  2501  079A                     	;# 
  2502  079B                     	;# 
  2503  080C                     	;# 
  2504  080D                     	;# 
  2505  080E                     	;# 
  2506  080F                     	;# 
  2507  0810                     	;# 
  2508  0811                     	;# 
  2509  0812                     	;# 
  2510  0813                     	;# 
  2511  0814                     	;# 
  2512  081A                     	;# 
  2513  081B                     	;# 
  2514  081C                     	;# 
  2515  081D                     	;# 
  2516  081E                     	;# 
  2517  081F                     	;# 
  2518  088C                     	;# 
  2519  088D                     	;# 
  2520  088E                     	;# 
  2521  088F                     	;# 
  2522  0890                     	;# 
  2523  0891                     	;# 
  2524  0892                     	;# 
  2525  0893                     	;# 
  2526  0895                     	;# 
  2527  0896                     	;# 
  2528  0897                     	;# 
  2529  0898                     	;# 
  2530  0899                     	;# 
  2531  089A                     	;# 
  2532  089B                     	;# 
  2533  090C                     	;# 
  2534  090E                     	;# 
  2535  090F                     	;# 
  2536  091F                     	;# 
  2537  091F                     	;# 
  2538  098F                     	;# 
  2539  098F                     	;# 
  2540  0990                     	;# 
  2541  0991                     	;# 
  2542  0992                     	;# 
  2543  0993                     	;# 
  2544  0994                     	;# 
  2545  0995                     	;# 
  2546  0996                     	;# 
  2547  0997                     	;# 
  2548  0E0F                     	;# 
  2549  0E10                     	;# 
  2550  0E11                     	;# 
  2551  0E12                     	;# 
  2552  0E13                     	;# 
  2553  0E14                     	;# 
  2554  0E15                     	;# 
  2555  0E16                     	;# 
  2556  0E17                     	;# 
  2557  0E18                     	;# 
  2558  0E19                     	;# 
  2559  0E1A                     	;# 
  2560  0E1B                     	;# 
  2561  0E1C                     	;# 
  2562  0E1D                     	;# 
  2563  0E1E                     	;# 
  2564  0E1F                     	;# 
  2565  0E20                     	;# 
  2566  0E21                     	;# 
  2567  0E22                     	;# 
  2568  0E23                     	;# 
  2569  0E24                     	;# 
  2570  0E25                     	;# 
  2571  0E26                     	;# 
  2572  0E27                     	;# 
  2573  0E28                     	;# 
  2574  0E29                     	;# 
  2575  0E2A                     	;# 
  2576  0E2B                     	;# 
  2577  0E2C                     	;# 
  2578  0E2D                     	;# 
  2579  0E2E                     	;# 
  2580  0E2F                     	;# 
  2581  0E30                     	;# 
  2582  0E31                     	;# 
  2583  0E32                     	;# 
  2584  0E33                     	;# 
  2585  0E34                     	;# 
  2586  0E35                     	;# 
  2587  0E36                     	;# 
  2588  0E37                     	;# 
  2589  0E8F                     	;# 
  2590  0E90                     	;# 
  2591  0E91                     	;# 
  2592  0E92                     	;# 
  2593  0E93                     	;# 
  2594  0E94                     	;# 
  2595  0E95                     	;# 
  2596  0E96                     	;# 
  2597  0E97                     	;# 
  2598  0E9C                     	;# 
  2599  0E9D                     	;# 
  2600  0E9E                     	;# 
  2601  0EA1                     	;# 
  2602  0EA2                     	;# 
  2603  0EA3                     	;# 
  2604  0EA4                     	;# 
  2605  0EA5                     	;# 
  2606  0EA9                     	;# 
  2607  0EAA                     	;# 
  2608  0EAB                     	;# 
  2609  0EAC                     	;# 
  2610  0EB1                     	;# 
  2611  0EB2                     	;# 
  2612  0EB3                     	;# 
  2613  0EB8                     	;# 
  2614  0EB9                     	;# 
  2615  0EBA                     	;# 
  2616  0EBB                     	;# 
  2617  0EBC                     	;# 
  2618  0EBD                     	;# 
  2619  0EBE                     	;# 
  2620  0EC3                     	;# 
  2621  0EC5                     	;# 
  2622  0EC6                     	;# 
  2623  0EC7                     	;# 
  2624  0EC8                     	;# 
  2625  0EC9                     	;# 
  2626  0ECA                     	;# 
  2627  0ECB                     	;# 
  2628  0ECC                     	;# 
  2629  0F10                     	;# 
  2630  0F11                     	;# 
  2631  0F12                     	;# 
  2632  0F13                     	;# 
  2633  0F14                     	;# 
  2634  0F15                     	;# 
  2635  0F16                     	;# 
  2636  0F17                     	;# 
  2637  0F18                     	;# 
  2638  0F19                     	;# 
  2639  0F1A                     	;# 
  2640  0F1B                     	;# 
  2641  0F1C                     	;# 
  2642  0F1D                     	;# 
  2643  0F1E                     	;# 
  2644  0F1F                     	;# 
  2645  0F20                     	;# 
  2646  0F21                     	;# 
  2647  0F22                     	;# 
  2648  0F23                     	;# 
  2649  0F24                     	;# 
  2650  0F25                     	;# 
  2651  0F26                     	;# 
  2652  0F27                     	;# 
  2653  0F38                     	;# 
  2654  0F39                     	;# 
  2655  0F3A                     	;# 
  2656  0F3B                     	;# 
  2657  0F3C                     	;# 
  2658  0F3D                     	;# 
  2659  0F3E                     	;# 
  2660  0F3F                     	;# 
  2661  0F40                     	;# 
  2662  0F41                     	;# 
  2663  0F43                     	;# 
  2664  0F44                     	;# 
  2665  0F45                     	;# 
  2666  0F46                     	;# 
  2667  0F47                     	;# 
  2668  0F48                     	;# 
  2669  0F49                     	;# 
  2670  0F4A                     	;# 
  2671  0F4B                     	;# 
  2672  0F4C                     	;# 
  2673  0F4E                     	;# 
  2674  0F4F                     	;# 
  2675  0F50                     	;# 
  2676  0F51                     	;# 
  2677  0F52                     	;# 
  2678  0F53                     	;# 
  2679  0F54                     	;# 
  2680  0F55                     	;# 
  2681  0F56                     	;# 
  2682  0F57                     	;# 
  2683  0F65                     	;# 
  2684  0F68                     	;# 
  2685  0F69                     	;# 
  2686  0F6A                     	;# 
  2687  0F6B                     	;# 
  2688  0FE4                     	;# 
  2689  0FE5                     	;# 
  2690  0FE6                     	;# 
  2691  0FE7                     	;# 
  2692  0FE8                     	;# 
  2693  0FE9                     	;# 
  2694  0FEA                     	;# 
  2695  0FEB                     	;# 
  2696  0FED                     	;# 
  2697  0FEE                     	;# 
  2698  0FEF                     	;# 
  2699  0000                     	;# 
  2700  0001                     	;# 
  2701  0002                     	;# 
  2702  0003                     	;# 
  2703  0004                     	;# 
  2704  0005                     	;# 
  2705  0006                     	;# 
  2706  0007                     	;# 
  2707  0008                     	;# 
  2708  0009                     	;# 
  2709  000A                     	;# 
  2710  000B                     	;# 
  2711  000C                     	;# 
  2712  000D                     	;# 
  2713  000E                     	;# 
  2714  0010                     	;# 
  2715  0011                     	;# 
  2716  0012                     	;# 
  2717  0013                     	;# 
  2718  0016                     	;# 
  2719  0017                     	;# 
  2720  0018                     	;# 
  2721  001C                     	;# 
  2722  001C                     	;# 
  2723  001D                     	;# 
  2724  001D                     	;# 
  2725  001E                     	;# 
  2726  001F                     	;# 
  2727  008C                     	;# 
  2728  008C                     	;# 
  2729  008D                     	;# 
  2730  008E                     	;# 
  2731  008E                     	;# 
  2732  008F                     	;# 
  2733  0090                     	;# 
  2734  0090                     	;# 
  2735  0091                     	;# 
  2736  0093                     	;# 
  2737  0094                     	;# 
  2738  0095                     	;# 
  2739  0096                     	;# 
  2740  0097                     	;# 
  2741  0098                     	;# 
  2742  0099                     	;# 
  2743  009A                     	;# 
  2744  009B                     	;# 
  2745  009C                     	;# 
  2746  009D                     	;# 
  2747  009E                     	;# 
  2748  010C                     	;# 
  2749  010D                     	;# 
  2750  010E                     	;# 
  2751  010E                     	;# 
  2752  010F                     	;# 
  2753  0110                     	;# 
  2754  0110                     	;# 
  2755  0111                     	;# 
  2756  0112                     	;# 
  2757  0112                     	;# 
  2758  0113                     	;# 
  2759  0114                     	;# 
  2760  0114                     	;# 
  2761  0115                     	;# 
  2762  0116                     	;# 
  2763  0116                     	;# 
  2764  0117                     	;# 
  2765  0119                     	;# 
  2766  0119                     	;# 
  2767  0119                     	;# 
  2768  011A                     	;# 
  2769  011A                     	;# 
  2770  011A                     	;# 
  2771  011B                     	;# 
  2772  011B                     	;# 
  2773  011B                     	;# 
  2774  011B                     	;# 
  2775  011B                     	;# 
  2776  011C                     	;# 
  2777  011C                     	;# 
  2778  011C                     	;# 
  2779  011D                     	;# 
  2780  011D                     	;# 
  2781  011D                     	;# 
  2782  011E                     	;# 
  2783  011E                     	;# 
  2784  011E                     	;# 
  2785  011F                     	;# 
  2786  011F                     	;# 
  2787  011F                     	;# 
  2788  011F                     	;# 
  2789  011F                     	;# 
  2790  018C                     	;# 
  2791  018D                     	;# 
  2792  018E                     	;# 
  2793  018F                     	;# 
  2794  0190                     	;# 
  2795  0191                     	;# 
  2796  0192                     	;# 
  2797  0196                     	;# 
  2798  0197                     	;# 
  2799  0198                     	;# 
  2800  0199                     	;# 
  2801  019A                     	;# 
  2802  019B                     	;# 
  2803  019C                     	;# 
  2804  020C                     	;# 
  2805  020C                     	;# 
  2806  020D                     	;# 
  2807  020E                     	;# 
  2808  020F                     	;# 
  2809  020F                     	;# 
  2810  0210                     	;# 
  2811  0210                     	;# 
  2812  0211                     	;# 
  2813  0211                     	;# 
  2814  0212                     	;# 
  2815  0212                     	;# 
  2816  0213                     	;# 
  2817  0214                     	;# 
  2818  0215                     	;# 
  2819  0215                     	;# 
  2820  0216                     	;# 
  2821  0216                     	;# 
  2822  0217                     	;# 
  2823  0217                     	;# 
  2824  0218                     	;# 
  2825  0218                     	;# 
  2826  0219                     	;# 
  2827  021A                     	;# 
  2828  021B                     	;# 
  2829  021B                     	;# 
  2830  021C                     	;# 
  2831  021C                     	;# 
  2832  021D                     	;# 
  2833  021D                     	;# 
  2834  021E                     	;# 
  2835  021F                     	;# 
  2836  028C                     	;# 
  2837  028C                     	;# 
  2838  028D                     	;# 
  2839  028D                     	;# 
  2840  028E                     	;# 
  2841  028F                     	;# 
  2842  0290                     	;# 
  2843  0290                     	;# 
  2844  0291                     	;# 
  2845  0292                     	;# 
  2846  0292                     	;# 
  2847  0293                     	;# 
  2848  0293                     	;# 
  2849  0294                     	;# 
  2850  0295                     	;# 
  2851  0296                     	;# 
  2852  0296                     	;# 
  2853  0297                     	;# 
  2854  0298                     	;# 
  2855  0298                     	;# 
  2856  0299                     	;# 
  2857  0299                     	;# 
  2858  029A                     	;# 
  2859  029B                     	;# 
  2860  029C                     	;# 
  2861  029C                     	;# 
  2862  029D                     	;# 
  2863  030C                     	;# 
  2864  030C                     	;# 
  2865  030D                     	;# 
  2866  030E                     	;# 
  2867  030F                     	;# 
  2868  0310                     	;# 
  2869  0310                     	;# 
  2870  0311                     	;# 
  2871  0312                     	;# 
  2872  0313                     	;# 
  2873  0314                     	;# 
  2874  0314                     	;# 
  2875  0315                     	;# 
  2876  0316                     	;# 
  2877  0317                     	;# 
  2878  0318                     	;# 
  2879  0318                     	;# 
  2880  0319                     	;# 
  2881  031A                     	;# 
  2882  031B                     	;# 
  2883  031C                     	;# 
  2884  031C                     	;# 
  2885  031D                     	;# 
  2886  031E                     	;# 
  2887  031F                     	;# 
  2888  038C                     	;# 
  2889  038C                     	;# 
  2890  038D                     	;# 
  2891  038E                     	;# 
  2892  0390                     	;# 
  2893  0390                     	;# 
  2894  0391                     	;# 
  2895  0392                     	;# 
  2896  040C                     	;# 
  2897  040D                     	;# 
  2898  040E                     	;# 
  2899  040F                     	;# 
  2900  0410                     	;# 
  2901  0411                     	;# 
  2902  0416                     	;# 
  2903  0416                     	;# 
  2904  0417                     	;# 
  2905  0418                     	;# 
  2906  0418                     	;# 
  2907  0419                     	;# 
  2908  041A                     	;# 
  2909  041A                     	;# 
  2910  041B                     	;# 
  2911  041C                     	;# 
  2912  041C                     	;# 
  2913  041D                     	;# 
  2914  041E                     	;# 
  2915  041F                     	;# 
  2916  048C                     	;# 
  2917  048C                     	;# 
  2918  048D                     	;# 
  2919  048E                     	;# 
  2920  048F                     	;# 
  2921  048F                     	;# 
  2922  0490                     	;# 
  2923  0491                     	;# 
  2924  0492                     	;# 
  2925  0492                     	;# 
  2926  0493                     	;# 
  2927  0494                     	;# 
  2928  0495                     	;# 
  2929  0495                     	;# 
  2930  0496                     	;# 
  2931  0497                     	;# 
  2932  0498                     	;# 
  2933  0499                     	;# 
  2934  049A                     	;# 
  2935  049B                     	;# 
  2936  049C                     	;# 
  2937  049D                     	;# 
  2938  050C                     	;# 
  2939  050C                     	;# 
  2940  050D                     	;# 
  2941  050E                     	;# 
  2942  050F                     	;# 
  2943  050F                     	;# 
  2944  0510                     	;# 
  2945  0511                     	;# 
  2946  0512                     	;# 
  2947  0512                     	;# 
  2948  0513                     	;# 
  2949  0514                     	;# 
  2950  0515                     	;# 
  2951  0515                     	;# 
  2952  0516                     	;# 
  2953  0517                     	;# 
  2954  0518                     	;# 
  2955  0519                     	;# 
  2956  051A                     	;# 
  2957  051B                     	;# 
  2958  051C                     	;# 
  2959  051D                     	;# 
  2960  058C                     	;# 
  2961  058C                     	;# 
  2962  058D                     	;# 
  2963  058E                     	;# 
  2964  058F                     	;# 
  2965  058F                     	;# 
  2966  0590                     	;# 
  2967  0591                     	;# 
  2968  0592                     	;# 
  2969  0593                     	;# 
  2970  060C                     	;# 
  2971  060D                     	;# 
  2972  060E                     	;# 
  2973  060F                     	;# 
  2974  0610                     	;# 
  2975  0611                     	;# 
  2976  0612                     	;# 
  2977  0613                     	;# 
  2978  0614                     	;# 
  2979  0616                     	;# 
  2980  0617                     	;# 
  2981  0618                     	;# 
  2982  0619                     	;# 
  2983  061A                     	;# 
  2984  061B                     	;# 
  2985  061C                     	;# 
  2986  061D                     	;# 
  2987  061E                     	;# 
  2988  068C                     	;# 
  2989  068D                     	;# 
  2990  068E                     	;# 
  2991  068F                     	;# 
  2992  0690                     	;# 
  2993  0691                     	;# 
  2994  0692                     	;# 
  2995  0693                     	;# 
  2996  0694                     	;# 
  2997  070C                     	;# 
  2998  070D                     	;# 
  2999  070E                     	;# 
  3000  070F                     	;# 
  3001  0710                     	;# 
  3002  0711                     	;# 
  3003  0712                     	;# 
  3004  0713                     	;# 
  3005  0714                     	;# 
  3006  0716                     	;# 
  3007  0717                     	;# 
  3008  0718                     	;# 
  3009  0719                     	;# 
  3010  071A                     	;# 
  3011  071B                     	;# 
  3012  071C                     	;# 
  3013  071D                     	;# 
  3014  071E                     	;# 
  3015  0796                     	;# 
  3016  0797                     	;# 
  3017  0798                     	;# 
  3018  0799                     	;# 
  3019  079A                     	;# 
  3020  079B                     	;# 
  3021  080C                     	;# 
  3022  080D                     	;# 
  3023  080E                     	;# 
  3024  080F                     	;# 
  3025  0810                     	;# 
  3026  0811                     	;# 
  3027  0812                     	;# 
  3028  0813                     	;# 
  3029  0814                     	;# 
  3030  081A                     	;# 
  3031  081B                     	;# 
  3032  081C                     	;# 
  3033  081D                     	;# 
  3034  081E                     	;# 
  3035  081F                     	;# 
  3036  088C                     	;# 
  3037  088D                     	;# 
  3038  088E                     	;# 
  3039  088F                     	;# 
  3040  0890                     	;# 
  3041  0891                     	;# 
  3042  0892                     	;# 
  3043  0893                     	;# 
  3044  0895                     	;# 
  3045  0896                     	;# 
  3046  0897                     	;# 
  3047  0898                     	;# 
  3048  0899                     	;# 
  3049  089A                     	;# 
  3050  089B                     	;# 
  3051  090C                     	;# 
  3052  090E                     	;# 
  3053  090F                     	;# 
  3054  091F                     	;# 
  3055  091F                     	;# 
  3056  098F                     	;# 
  3057  098F                     	;# 
  3058  0990                     	;# 
  3059  0991                     	;# 
  3060  0992                     	;# 
  3061  0993                     	;# 
  3062  0994                     	;# 
  3063  0995                     	;# 
  3064  0996                     	;# 
  3065  0997                     	;# 
  3066  0E0F                     	;# 
  3067  0E10                     	;# 
  3068  0E11                     	;# 
  3069  0E12                     	;# 
  3070  0E13                     	;# 
  3071  0E14                     	;# 
  3072  0E15                     	;# 
  3073  0E16                     	;# 
  3074  0E17                     	;# 
  3075  0E18                     	;# 
  3076  0E19                     	;# 
  3077  0E1A                     	;# 
  3078  0E1B                     	;# 
  3079  0E1C                     	;# 
  3080  0E1D                     	;# 
  3081  0E1E                     	;# 
  3082  0E1F                     	;# 
  3083  0E20                     	;# 
  3084  0E21                     	;# 
  3085  0E22                     	;# 
  3086  0E23                     	;# 
  3087  0E24                     	;# 
  3088  0E25                     	;# 
  3089  0E26                     	;# 
  3090  0E27                     	;# 
  3091  0E28                     	;# 
  3092  0E29                     	;# 
  3093  0E2A                     	;# 
  3094  0E2B                     	;# 
  3095  0E2C                     	;# 
  3096  0E2D                     	;# 
  3097  0E2E                     	;# 
  3098  0E2F                     	;# 
  3099  0E30                     	;# 
  3100  0E31                     	;# 
  3101  0E32                     	;# 
  3102  0E33                     	;# 
  3103  0E34                     	;# 
  3104  0E35                     	;# 
  3105  0E36                     	;# 
  3106  0E37                     	;# 
  3107  0E8F                     	;# 
  3108  0E90                     	;# 
  3109  0E91                     	;# 
  3110  0E92                     	;# 
  3111  0E93                     	;# 
  3112  0E94                     	;# 
  3113  0E95                     	;# 
  3114  0E96                     	;# 
  3115  0E97                     	;# 
  3116  0E9C                     	;# 
  3117  0E9D                     	;# 
  3118  0E9E                     	;# 
  3119  0EA1                     	;# 
  3120  0EA2                     	;# 
  3121  0EA3                     	;# 
  3122  0EA4                     	;# 
  3123  0EA5                     	;# 
  3124  0EA9                     	;# 
  3125  0EAA                     	;# 
  3126  0EAB                     	;# 
  3127  0EAC                     	;# 
  3128  0EB1                     	;# 
  3129  0EB2                     	;# 
  3130  0EB3                     	;# 
  3131  0EB8                     	;# 
  3132  0EB9                     	;# 
  3133  0EBA                     	;# 
  3134  0EBB                     	;# 
  3135  0EBC                     	;# 
  3136  0EBD                     	;# 
  3137  0EBE                     	;# 
  3138  0EC3                     	;# 
  3139  0EC5                     	;# 
  3140  0EC6                     	;# 
  3141  0EC7                     	;# 
  3142  0EC8                     	;# 
  3143  0EC9                     	;# 
  3144  0ECA                     	;# 
  3145  0ECB                     	;# 
  3146  0ECC                     	;# 
  3147  0F10                     	;# 
  3148  0F11                     	;# 
  3149  0F12                     	;# 
  3150  0F13                     	;# 
  3151  0F14                     	;# 
  3152  0F15                     	;# 
  3153  0F16                     	;# 
  3154  0F17                     	;# 
  3155  0F18                     	;# 
  3156  0F19                     	;# 
  3157  0F1A                     	;# 
  3158  0F1B                     	;# 
  3159  0F1C                     	;# 
  3160  0F1D                     	;# 
  3161  0F1E                     	;# 
  3162  0F1F                     	;# 
  3163  0F20                     	;# 
  3164  0F21                     	;# 
  3165  0F22                     	;# 
  3166  0F23                     	;# 
  3167  0F24                     	;# 
  3168  0F25                     	;# 
  3169  0F26                     	;# 
  3170  0F27                     	;# 
  3171  0F38                     	;# 
  3172  0F39                     	;# 
  3173  0F3A                     	;# 
  3174  0F3B                     	;# 
  3175  0F3C                     	;# 
  3176  0F3D                     	;# 
  3177  0F3E                     	;# 
  3178  0F3F                     	;# 
  3179  0F40                     	;# 
  3180  0F41                     	;# 
  3181  0F43                     	;# 
  3182  0F44                     	;# 
  3183  0F45                     	;# 
  3184  0F46                     	;# 
  3185  0F47                     	;# 
  3186  0F48                     	;# 
  3187  0F49                     	;# 
  3188  0F4A                     	;# 
  3189  0F4B                     	;# 
  3190  0F4C                     	;# 
  3191  0F4E                     	;# 
  3192  0F4F                     	;# 
  3193  0F50                     	;# 
  3194  0F51                     	;# 
  3195  0F52                     	;# 
  3196  0F53                     	;# 
  3197  0F54                     	;# 
  3198  0F55                     	;# 
  3199  0F56                     	;# 
  3200  0F57                     	;# 
  3201  0F65                     	;# 
  3202  0F68                     	;# 
  3203  0F69                     	;# 
  3204  0F6A                     	;# 
  3205  0F6B                     	;# 
  3206  0FE4                     	;# 
  3207  0FE5                     	;# 
  3208  0FE6                     	;# 
  3209  0FE7                     	;# 
  3210  0FE8                     	;# 
  3211  0FE9                     	;# 
  3212  0FEA                     	;# 
  3213  0FEB                     	;# 
  3214  0FED                     	;# 
  3215  0FEE                     	;# 
  3216  0FEF                     	;# 
  3217  0000                     	;# 
  3218  0001                     	;# 
  3219  0002                     	;# 
  3220  0003                     	;# 
  3221  0004                     	;# 
  3222  0005                     	;# 
  3223  0006                     	;# 
  3224  0007                     	;# 
  3225  0008                     	;# 
  3226  0009                     	;# 
  3227  000A                     	;# 
  3228  000B                     	;# 
  3229  000C                     	;# 
  3230  000D                     	;# 
  3231  000E                     	;# 
  3232  0010                     	;# 
  3233  0011                     	;# 
  3234  0012                     	;# 
  3235  0013                     	;# 
  3236  0016                     	;# 
  3237  0017                     	;# 
  3238  0018                     	;# 
  3239  001C                     	;# 
  3240  001C                     	;# 
  3241  001D                     	;# 
  3242  001D                     	;# 
  3243  001E                     	;# 
  3244  001F                     	;# 
  3245  008C                     	;# 
  3246  008C                     	;# 
  3247  008D                     	;# 
  3248  008E                     	;# 
  3249  008E                     	;# 
  3250  008F                     	;# 
  3251  0090                     	;# 
  3252  0090                     	;# 
  3253  0091                     	;# 
  3254  0093                     	;# 
  3255  0094                     	;# 
  3256  0095                     	;# 
  3257  0096                     	;# 
  3258  0097                     	;# 
  3259  0098                     	;# 
  3260  0099                     	;# 
  3261  009A                     	;# 
  3262  009B                     	;# 
  3263  009C                     	;# 
  3264  009D                     	;# 
  3265  009E                     	;# 
  3266  010C                     	;# 
  3267  010D                     	;# 
  3268  010E                     	;# 
  3269  010E                     	;# 
  3270  010F                     	;# 
  3271  0110                     	;# 
  3272  0110                     	;# 
  3273  0111                     	;# 
  3274  0112                     	;# 
  3275  0112                     	;# 
  3276  0113                     	;# 
  3277  0114                     	;# 
  3278  0114                     	;# 
  3279  0115                     	;# 
  3280  0116                     	;# 
  3281  0116                     	;# 
  3282  0117                     	;# 
  3283  0119                     	;# 
  3284  0119                     	;# 
  3285  0119                     	;# 
  3286  011A                     	;# 
  3287  011A                     	;# 
  3288  011A                     	;# 
  3289  011B                     	;# 
  3290  011B                     	;# 
  3291  011B                     	;# 
  3292  011B                     	;# 
  3293  011B                     	;# 
  3294  011C                     	;# 
  3295  011C                     	;# 
  3296  011C                     	;# 
  3297  011D                     	;# 
  3298  011D                     	;# 
  3299  011D                     	;# 
  3300  011E                     	;# 
  3301  011E                     	;# 
  3302  011E                     	;# 
  3303  011F                     	;# 
  3304  011F                     	;# 
  3305  011F                     	;# 
  3306  011F                     	;# 
  3307  011F                     	;# 
  3308  018C                     	;# 
  3309  018D                     	;# 
  3310  018E                     	;# 
  3311  018F                     	;# 
  3312  0190                     	;# 
  3313  0191                     	;# 
  3314  0192                     	;# 
  3315  0196                     	;# 
  3316  0197                     	;# 
  3317  0198                     	;# 
  3318  0199                     	;# 
  3319  019A                     	;# 
  3320  019B                     	;# 
  3321  019C                     	;# 
  3322  020C                     	;# 
  3323  020C                     	;# 
  3324  020D                     	;# 
  3325  020E                     	;# 
  3326  020F                     	;# 
  3327  020F                     	;# 
  3328  0210                     	;# 
  3329  0210                     	;# 
  3330  0211                     	;# 
  3331  0211                     	;# 
  3332  0212                     	;# 
  3333  0212                     	;# 
  3334  0213                     	;# 
  3335  0214                     	;# 
  3336  0215                     	;# 
  3337  0215                     	;# 
  3338  0216                     	;# 
  3339  0216                     	;# 
  3340  0217                     	;# 
  3341  0217                     	;# 
  3342  0218                     	;# 
  3343  0218                     	;# 
  3344  0219                     	;# 
  3345  021A                     	;# 
  3346  021B                     	;# 
  3347  021B                     	;# 
  3348  021C                     	;# 
  3349  021C                     	;# 
  3350  021D                     	;# 
  3351  021D                     	;# 
  3352  021E                     	;# 
  3353  021F                     	;# 
  3354  028C                     	;# 
  3355  028C                     	;# 
  3356  028D                     	;# 
  3357  028D                     	;# 
  3358  028E                     	;# 
  3359  028F                     	;# 
  3360  0290                     	;# 
  3361  0290                     	;# 
  3362  0291                     	;# 
  3363  0292                     	;# 
  3364  0292                     	;# 
  3365  0293                     	;# 
  3366  0293                     	;# 
  3367  0294                     	;# 
  3368  0295                     	;# 
  3369  0296                     	;# 
  3370  0296                     	;# 
  3371  0297                     	;# 
  3372  0298                     	;# 
  3373  0298                     	;# 
  3374  0299                     	;# 
  3375  0299                     	;# 
  3376  029A                     	;# 
  3377  029B                     	;# 
  3378  029C                     	;# 
  3379  029C                     	;# 
  3380  029D                     	;# 
  3381  030C                     	;# 
  3382  030C                     	;# 
  3383  030D                     	;# 
  3384  030E                     	;# 
  3385  030F                     	;# 
  3386  0310                     	;# 
  3387  0310                     	;# 
  3388  0311                     	;# 
  3389  0312                     	;# 
  3390  0313                     	;# 
  3391  0314                     	;# 
  3392  0314                     	;# 
  3393  0315                     	;# 
  3394  0316                     	;# 
  3395  0317                     	;# 
  3396  0318                     	;# 
  3397  0318                     	;# 
  3398  0319                     	;# 
  3399  031A                     	;# 
  3400  031B                     	;# 
  3401  031C                     	;# 
  3402  031C                     	;# 
  3403  031D                     	;# 
  3404  031E                     	;# 
  3405  031F                     	;# 
  3406  038C                     	;# 
  3407  038C                     	;# 
  3408  038D                     	;# 
  3409  038E                     	;# 
  3410  0390                     	;# 
  3411  0390                     	;# 
  3412  0391                     	;# 
  3413  0392                     	;# 
  3414  040C                     	;# 
  3415  040D                     	;# 
  3416  040E                     	;# 
  3417  040F                     	;# 
  3418  0410                     	;# 
  3419  0411                     	;# 
  3420  0416                     	;# 
  3421  0416                     	;# 
  3422  0417                     	;# 
  3423  0418                     	;# 
  3424  0418                     	;# 
  3425  0419                     	;# 
  3426  041A                     	;# 
  3427  041A                     	;# 
  3428  041B                     	;# 
  3429  041C                     	;# 
  3430  041C                     	;# 
  3431  041D                     	;# 
  3432  041E                     	;# 
  3433  041F                     	;# 
  3434  048C                     	;# 
  3435  048C                     	;# 
  3436  048D                     	;# 
  3437  048E                     	;# 
  3438  048F                     	;# 
  3439  048F                     	;# 
  3440  0490                     	;# 
  3441  0491                     	;# 
  3442  0492                     	;# 
  3443  0492                     	;# 
  3444  0493                     	;# 
  3445  0494                     	;# 
  3446  0495                     	;# 
  3447  0495                     	;# 
  3448  0496                     	;# 
  3449  0497                     	;# 
  3450  0498                     	;# 
  3451  0499                     	;# 
  3452  049A                     	;# 
  3453  049B                     	;# 
  3454  049C                     	;# 
  3455  049D                     	;# 
  3456  050C                     	;# 
  3457  050C                     	;# 
  3458  050D                     	;# 
  3459  050E                     	;# 
  3460  050F                     	;# 
  3461  050F                     	;# 
  3462  0510                     	;# 
  3463  0511                     	;# 
  3464  0512                     	;# 
  3465  0512                     	;# 
  3466  0513                     	;# 
  3467  0514                     	;# 
  3468  0515                     	;# 
  3469  0515                     	;# 
  3470  0516                     	;# 
  3471  0517                     	;# 
  3472  0518                     	;# 
  3473  0519                     	;# 
  3474  051A                     	;# 
  3475  051B                     	;# 
  3476  051C                     	;# 
  3477  051D                     	;# 
  3478  058C                     	;# 
  3479  058C                     	;# 
  3480  058D                     	;# 
  3481  058E                     	;# 
  3482  058F                     	;# 
  3483  058F                     	;# 
  3484  0590                     	;# 
  3485  0591                     	;# 
  3486  0592                     	;# 
  3487  0593                     	;# 
  3488  060C                     	;# 
  3489  060D                     	;# 
  3490  060E                     	;# 
  3491  060F                     	;# 
  3492  0610                     	;# 
  3493  0611                     	;# 
  3494  0612                     	;# 
  3495  0613                     	;# 
  3496  0614                     	;# 
  3497  0616                     	;# 
  3498  0617                     	;# 
  3499  0618                     	;# 
  3500  0619                     	;# 
  3501  061A                     	;# 
  3502  061B                     	;# 
  3503  061C                     	;# 
  3504  061D                     	;# 
  3505  061E                     	;# 
  3506  068C                     	;# 
  3507  068D                     	;# 
  3508  068E                     	;# 
  3509  068F                     	;# 
  3510  0690                     	;# 
  3511  0691                     	;# 
  3512  0692                     	;# 
  3513  0693                     	;# 
  3514  0694                     	;# 
  3515  070C                     	;# 
  3516  070D                     	;# 
  3517  070E                     	;# 
  3518  070F                     	;# 
  3519  0710                     	;# 
  3520  0711                     	;# 
  3521  0712                     	;# 
  3522  0713                     	;# 
  3523  0714                     	;# 
  3524  0716                     	;# 
  3525  0717                     	;# 
  3526  0718                     	;# 
  3527  0719                     	;# 
  3528  071A                     	;# 
  3529  071B                     	;# 
  3530  071C                     	;# 
  3531  071D                     	;# 
  3532  071E                     	;# 
  3533  0796                     	;# 
  3534  0797                     	;# 
  3535  0798                     	;# 
  3536  0799                     	;# 
  3537  079A                     	;# 
  3538  079B                     	;# 
  3539  080C                     	;# 
  3540  080D                     	;# 
  3541  080E                     	;# 
  3542  080F                     	;# 
  3543  0810                     	;# 
  3544  0811                     	;# 
  3545  0812                     	;# 
  3546  0813                     	;# 
  3547  0814                     	;# 
  3548  081A                     	;# 
  3549  081B                     	;# 
  3550  081C                     	;# 
  3551  081D                     	;# 
  3552  081E                     	;# 
  3553  081F                     	;# 
  3554  088C                     	;# 
  3555  088D                     	;# 
  3556  088E                     	;# 
  3557  088F                     	;# 
  3558  0890                     	;# 
  3559  0891                     	;# 
  3560  0892                     	;# 
  3561  0893                     	;# 
  3562  0895                     	;# 
  3563  0896                     	;# 
  3564  0897                     	;# 
  3565  0898                     	;# 
  3566  0899                     	;# 
  3567  089A                     	;# 
  3568  089B                     	;# 
  3569  090C                     	;# 
  3570  090E                     	;# 
  3571  090F                     	;# 
  3572  091F                     	;# 
  3573  091F                     	;# 
  3574  098F                     	;# 
  3575  098F                     	;# 
  3576  0990                     	;# 
  3577  0991                     	;# 
  3578  0992                     	;# 
  3579  0993                     	;# 
  3580  0994                     	;# 
  3581  0995                     	;# 
  3582  0996                     	;# 
  3583  0997                     	;# 
  3584  0E0F                     	;# 
  3585  0E10                     	;# 
  3586  0E11                     	;# 
  3587  0E12                     	;# 
  3588  0E13                     	;# 
  3589  0E14                     	;# 
  3590  0E15                     	;# 
  3591  0E16                     	;# 
  3592  0E17                     	;# 
  3593  0E18                     	;# 
  3594  0E19                     	;# 
  3595  0E1A                     	;# 
  3596  0E1B                     	;# 
  3597  0E1C                     	;# 
  3598  0E1D                     	;# 
  3599  0E1E                     	;# 
  3600  0E1F                     	;# 
  3601  0E20                     	;# 
  3602  0E21                     	;# 
  3603  0E22                     	;# 
  3604  0E23                     	;# 
  3605  0E24                     	;# 
  3606  0E25                     	;# 
  3607  0E26                     	;# 
  3608  0E27                     	;# 
  3609  0E28                     	;# 
  3610  0E29                     	;# 
  3611  0E2A                     	;# 
  3612  0E2B                     	;# 
  3613  0E2C                     	;# 
  3614  0E2D                     	;# 
  3615  0E2E                     	;# 
  3616  0E2F                     	;# 
  3617  0E30                     	;# 
  3618  0E31                     	;# 
  3619  0E32                     	;# 
  3620  0E33                     	;# 
  3621  0E34                     	;# 
  3622  0E35                     	;# 
  3623  0E36                     	;# 
  3624  0E37                     	;# 
  3625  0E8F                     	;# 
  3626  0E90                     	;# 
  3627  0E91                     	;# 
  3628  0E92                     	;# 
  3629  0E93                     	;# 
  3630  0E94                     	;# 
  3631  0E95                     	;# 
  3632  0E96                     	;# 
  3633  0E97                     	;# 
  3634  0E9C                     	;# 
  3635  0E9D                     	;# 
  3636  0E9E                     	;# 
  3637  0EA1                     	;# 
  3638  0EA2                     	;# 
  3639  0EA3                     	;# 
  3640  0EA4                     	;# 
  3641  0EA5                     	;# 
  3642  0EA9                     	;# 
  3643  0EAA                     	;# 
  3644  0EAB                     	;# 
  3645  0EAC                     	;# 
  3646  0EB1                     	;# 
  3647  0EB2                     	;# 
  3648  0EB3                     	;# 
  3649  0EB8                     	;# 
  3650  0EB9                     	;# 
  3651  0EBA                     	;# 
  3652  0EBB                     	;# 
  3653  0EBC                     	;# 
  3654  0EBD                     	;# 
  3655  0EBE                     	;# 
  3656  0EC3                     	;# 
  3657  0EC5                     	;# 
  3658  0EC6                     	;# 
  3659  0EC7                     	;# 
  3660  0EC8                     	;# 
  3661  0EC9                     	;# 
  3662  0ECA                     	;# 
  3663  0ECB                     	;# 
  3664  0ECC                     	;# 
  3665  0F10                     	;# 
  3666  0F11                     	;# 
  3667  0F12                     	;# 
  3668  0F13                     	;# 
  3669  0F14                     	;# 
  3670  0F15                     	;# 
  3671  0F16                     	;# 
  3672  0F17                     	;# 
  3673  0F18                     	;# 
  3674  0F19                     	;# 
  3675  0F1A                     	;# 
  3676  0F1B                     	;# 
  3677  0F1C                     	;# 
  3678  0F1D                     	;# 
  3679  0F1E                     	;# 
  3680  0F1F                     	;# 
  3681  0F20                     	;# 
  3682  0F21                     	;# 
  3683  0F22                     	;# 
  3684  0F23                     	;# 
  3685  0F24                     	;# 
  3686  0F25                     	;# 
  3687  0F26                     	;# 
  3688  0F27                     	;# 
  3689  0F38                     	;# 
  3690  0F39                     	;# 
  3691  0F3A                     	;# 
  3692  0F3B                     	;# 
  3693  0F3C                     	;# 
  3694  0F3D                     	;# 
  3695  0F3E                     	;# 
  3696  0F3F                     	;# 
  3697  0F40                     	;# 
  3698  0F41                     	;# 
  3699  0F43                     	;# 
  3700  0F44                     	;# 
  3701  0F45                     	;# 
  3702  0F46                     	;# 
  3703  0F47                     	;# 
  3704  0F48                     	;# 
  3705  0F49                     	;# 
  3706  0F4A                     	;# 
  3707  0F4B                     	;# 
  3708  0F4C                     	;# 
  3709  0F4E                     	;# 
  3710  0F4F                     	;# 
  3711  0F50                     	;# 
  3712  0F51                     	;# 
  3713  0F52                     	;# 
  3714  0F53                     	;# 
  3715  0F54                     	;# 
  3716  0F55                     	;# 
  3717  0F56                     	;# 
  3718  0F57                     	;# 
  3719  0F65                     	;# 
  3720  0F68                     	;# 
  3721  0F69                     	;# 
  3722  0F6A                     	;# 
  3723  0F6B                     	;# 
  3724  0FE4                     	;# 
  3725  0FE5                     	;# 
  3726  0FE6                     	;# 
  3727  0FE7                     	;# 
  3728  0FE8                     	;# 
  3729  0FE9                     	;# 
  3730  0FEA                     	;# 
  3731  0FEB                     	;# 
  3732  0FED                     	;# 
  3733  0FEE                     	;# 
  3734  0FEF                     	;# 
  3735  0000                     	;# 
  3736  0001                     	;# 
  3737  0002                     	;# 
  3738  0003                     	;# 
  3739  0004                     	;# 
  3740  0005                     	;# 
  3741  0006                     	;# 
  3742  0007                     	;# 
  3743  0008                     	;# 
  3744  0009                     	;# 
  3745  000A                     	;# 
  3746  000B                     	;# 
  3747  000C                     	;# 
  3748  000D                     	;# 
  3749  000E                     	;# 
  3750  0010                     	;# 
  3751  0011                     	;# 
  3752  0012                     	;# 
  3753  0013                     	;# 
  3754  0016                     	;# 
  3755  0017                     	;# 
  3756  0018                     	;# 
  3757  001C                     	;# 
  3758  001C                     	;# 
  3759  001D                     	;# 
  3760  001D                     	;# 
  3761  001E                     	;# 
  3762  001F                     	;# 
  3763  008C                     	;# 
  3764  008C                     	;# 
  3765  008D                     	;# 
  3766  008E                     	;# 
  3767  008E                     	;# 
  3768  008F                     	;# 
  3769  0090                     	;# 
  3770  0090                     	;# 
  3771  0091                     	;# 
  3772  0093                     	;# 
  3773  0094                     	;# 
  3774  0095                     	;# 
  3775  0096                     	;# 
  3776  0097                     	;# 
  3777  0098                     	;# 
  3778  0099                     	;# 
  3779  009A                     	;# 
  3780  009B                     	;# 
  3781  009C                     	;# 
  3782  009D                     	;# 
  3783  009E                     	;# 
  3784  010C                     	;# 
  3785  010D                     	;# 
  3786  010E                     	;# 
  3787  010E                     	;# 
  3788  010F                     	;# 
  3789  0110                     	;# 
  3790  0110                     	;# 
  3791  0111                     	;# 
  3792  0112                     	;# 
  3793  0112                     	;# 
  3794  0113                     	;# 
  3795  0114                     	;# 
  3796  0114                     	;# 
  3797  0115                     	;# 
  3798  0116                     	;# 
  3799  0116                     	;# 
  3800  0117                     	;# 
  3801  0119                     	;# 
  3802  0119                     	;# 
  3803  0119                     	;# 
  3804  011A                     	;# 
  3805  011A                     	;# 
  3806  011A                     	;# 
  3807  011B                     	;# 
  3808  011B                     	;# 
  3809  011B                     	;# 
  3810  011B                     	;# 
  3811  011B                     	;# 
  3812  011C                     	;# 
  3813  011C                     	;# 
  3814  011C                     	;# 
  3815  011D                     	;# 
  3816  011D                     	;# 
  3817  011D                     	;# 
  3818  011E                     	;# 
  3819  011E                     	;# 
  3820  011E                     	;# 
  3821  011F                     	;# 
  3822  011F                     	;# 
  3823  011F                     	;# 
  3824  011F                     	;# 
  3825  011F                     	;# 
  3826  018C                     	;# 
  3827  018D                     	;# 
  3828  018E                     	;# 
  3829  018F                     	;# 
  3830  0190                     	;# 
  3831  0191                     	;# 
  3832  0192                     	;# 
  3833  0196                     	;# 
  3834  0197                     	;# 
  3835  0198                     	;# 
  3836  0199                     	;# 
  3837  019A                     	;# 
  3838  019B                     	;# 
  3839  019C                     	;# 
  3840  020C                     	;# 
  3841  020C                     	;# 
  3842  020D                     	;# 
  3843  020E                     	;# 
  3844  020F                     	;# 
  3845  020F                     	;# 
  3846  0210                     	;# 
  3847  0210                     	;# 
  3848  0211                     	;# 
  3849  0211                     	;# 
  3850  0212                     	;# 
  3851  0212                     	;# 
  3852  0213                     	;# 
  3853  0214                     	;# 
  3854  0215                     	;# 
  3855  0215                     	;# 
  3856  0216                     	;# 
  3857  0216                     	;# 
  3858  0217                     	;# 
  3859  0217                     	;# 
  3860  0218                     	;# 
  3861  0218                     	;# 
  3862  0219                     	;# 
  3863  021A                     	;# 
  3864  021B                     	;# 
  3865  021B                     	;# 
  3866  021C                     	;# 
  3867  021C                     	;# 
  3868  021D                     	;# 
  3869  021D                     	;# 
  3870  021E                     	;# 
  3871  021F                     	;# 
  3872  028C                     	;# 
  3873  028C                     	;# 
  3874  028D                     	;# 
  3875  028D                     	;# 
  3876  028E                     	;# 
  3877  028F                     	;# 
  3878  0290                     	;# 
  3879  0290                     	;# 
  3880  0291                     	;# 
  3881  0292                     	;# 
  3882  0292                     	;# 
  3883  0293                     	;# 
  3884  0293                     	;# 
  3885  0294                     	;# 
  3886  0295                     	;# 
  3887  0296                     	;# 
  3888  0296                     	;# 
  3889  0297                     	;# 
  3890  0298                     	;# 
  3891  0298                     	;# 
  3892  0299                     	;# 
  3893  0299                     	;# 
  3894  029A                     	;# 
  3895  029B                     	;# 
  3896  029C                     	;# 
  3897  029C                     	;# 
  3898  029D                     	;# 
  3899  030C                     	;# 
  3900  030C                     	;# 
  3901  030D                     	;# 
  3902  030E                     	;# 
  3903  030F                     	;# 
  3904  0310                     	;# 
  3905  0310                     	;# 
  3906  0311                     	;# 
  3907  0312                     	;# 
  3908  0313                     	;# 
  3909  0314                     	;# 
  3910  0314                     	;# 
  3911  0315                     	;# 
  3912  0316                     	;# 
  3913  0317                     	;# 
  3914  0318                     	;# 
  3915  0318                     	;# 
  3916  0319                     	;# 
  3917  031A                     	;# 
  3918  031B                     	;# 
  3919  031C                     	;# 
  3920  031C                     	;# 
  3921  031D                     	;# 
  3922  031E                     	;# 
  3923  031F                     	;# 
  3924  038C                     	;# 
  3925  038C                     	;# 
  3926  038D                     	;# 
  3927  038E                     	;# 
  3928  0390                     	;# 
  3929  0390                     	;# 
  3930  0391                     	;# 
  3931  0392                     	;# 
  3932  040C                     	;# 
  3933  040D                     	;# 
  3934  040E                     	;# 
  3935  040F                     	;# 
  3936  0410                     	;# 
  3937  0411                     	;# 
  3938  0416                     	;# 
  3939  0416                     	;# 
  3940  0417                     	;# 
  3941  0418                     	;# 
  3942  0418                     	;# 
  3943  0419                     	;# 
  3944  041A                     	;# 
  3945  041A                     	;# 
  3946  041B                     	;# 
  3947  041C                     	;# 
  3948  041C                     	;# 
  3949  041D                     	;# 
  3950  041E                     	;# 
  3951  041F                     	;# 
  3952  048C                     	;# 
  3953  048C                     	;# 
  3954  048D                     	;# 
  3955  048E                     	;# 
  3956  048F                     	;# 
  3957  048F                     	;# 
  3958  0490                     	;# 
  3959  0491                     	;# 
  3960  0492                     	;# 
  3961  0492                     	;# 
  3962  0493                     	;# 
  3963  0494                     	;# 
  3964  0495                     	;# 
  3965  0495                     	;# 
  3966  0496                     	;# 
  3967  0497                     	;# 
  3968  0498                     	;# 
  3969  0499                     	;# 
  3970  049A                     	;# 
  3971  049B                     	;# 
  3972  049C                     	;# 
  3973  049D                     	;# 
  3974  050C                     	;# 
  3975  050C                     	;# 
  3976  050D                     	;# 
  3977  050E                     	;# 
  3978  050F                     	;# 
  3979  050F                     	;# 
  3980  0510                     	;# 
  3981  0511                     	;# 
  3982  0512                     	;# 
  3983  0512                     	;# 
  3984  0513                     	;# 
  3985  0514                     	;# 
  3986  0515                     	;# 
  3987  0515                     	;# 
  3988  0516                     	;# 
  3989  0517                     	;# 
  3990  0518                     	;# 
  3991  0519                     	;# 
  3992  051A                     	;# 
  3993  051B                     	;# 
  3994  051C                     	;# 
  3995  051D                     	;# 
  3996  058C                     	;# 
  3997  058C                     	;# 
  3998  058D                     	;# 
  3999  058E                     	;# 
  4000  058F                     	;# 
  4001  058F                     	;# 
  4002  0590                     	;# 
  4003  0591                     	;# 
  4004  0592                     	;# 
  4005  0593                     	;# 
  4006  060C                     	;# 
  4007  060D                     	;# 
  4008  060E                     	;# 
  4009  060F                     	;# 
  4010  0610                     	;# 
  4011  0611                     	;# 
  4012  0612                     	;# 
  4013  0613                     	;# 
  4014  0614                     	;# 
  4015  0616                     	;# 
  4016  0617                     	;# 
  4017  0618                     	;# 
  4018  0619                     	;# 
  4019  061A                     	;# 
  4020  061B                     	;# 
  4021  061C                     	;# 
  4022  061D                     	;# 
  4023  061E                     	;# 
  4024  068C                     	;# 
  4025  068D                     	;# 
  4026  068E                     	;# 
  4027  068F                     	;# 
  4028  0690                     	;# 
  4029  0691                     	;# 
  4030  0692                     	;# 
  4031  0693                     	;# 
  4032  0694                     	;# 
  4033  070C                     	;# 
  4034  070D                     	;# 
  4035  070E                     	;# 
  4036  070F                     	;# 
  4037  0710                     	;# 
  4038  0711                     	;# 
  4039  0712                     	;# 
  4040  0713                     	;# 
  4041  0714                     	;# 
  4042  0716                     	;# 
  4043  0717                     	;# 
  4044  0718                     	;# 
  4045  0719                     	;# 
  4046  071A                     	;# 
  4047  071B                     	;# 
  4048  071C                     	;# 
  4049  071D                     	;# 
  4050  071E                     	;# 
  4051  0796                     	;# 
  4052  0797                     	;# 
  4053  0798                     	;# 
  4054  0799                     	;# 
  4055  079A                     	;# 
  4056  079B                     	;# 
  4057  080C                     	;# 
  4058  080D                     	;# 
  4059  080E                     	;# 
  4060  080F                     	;# 
  4061  0810                     	;# 
  4062  0811                     	;# 
  4063  0812                     	;# 
  4064  0813                     	;# 
  4065  0814                     	;# 
  4066  081A                     	;# 
  4067  081B                     	;# 
  4068  081C                     	;# 
  4069  081D                     	;# 
  4070  081E                     	;# 
  4071  081F                     	;# 
  4072  088C                     	;# 
  4073  088D                     	;# 
  4074  088E                     	;# 
  4075  088F                     	;# 
  4076  0890                     	;# 
  4077  0891                     	;# 
  4078  0892                     	;# 
  4079  0893                     	;# 
  4080  0895                     	;# 
  4081  0896                     	;# 
  4082  0897                     	;# 
  4083  0898                     	;# 
  4084  0899                     	;# 
  4085  089A                     	;# 
  4086  089B                     	;# 
  4087  090C                     	;# 
  4088  090E                     	;# 
  4089  090F                     	;# 
  4090  091F                     	;# 
  4091  091F                     	;# 
  4092  098F                     	;# 
  4093  098F                     	;# 
  4094  0990                     	;# 
  4095  0991                     	;# 
  4096  0992                     	;# 
  4097  0993                     	;# 
  4098  0994                     	;# 
  4099  0995                     	;# 
  4100  0996                     	;# 
  4101  0997                     	;# 
  4102  0E0F                     	;# 
  4103  0E10                     	;# 
  4104  0E11                     	;# 
  4105  0E12                     	;# 
  4106  0E13                     	;# 
  4107  0E14                     	;# 
  4108  0E15                     	;# 
  4109  0E16                     	;# 
  4110  0E17                     	;# 
  4111  0E18                     	;# 
  4112  0E19                     	;# 
  4113  0E1A                     	;# 
  4114  0E1B                     	;# 
  4115  0E1C                     	;# 
  4116  0E1D                     	;# 
  4117  0E1E                     	;# 
  4118  0E1F                     	;# 
  4119  0E20                     	;# 
  4120  0E21                     	;# 
  4121  0E22                     	;# 
  4122  0E23                     	;# 
  4123  0E24                     	;# 
  4124  0E25                     	;# 
  4125  0E26                     	;# 
  4126  0E27                     	;# 
  4127  0E28                     	;# 
  4128  0E29                     	;# 
  4129  0E2A                     	;# 
  4130  0E2B                     	;# 
  4131  0E2C                     	;# 
  4132  0E2D                     	;# 
  4133  0E2E                     	;# 
  4134  0E2F                     	;# 
  4135  0E30                     	;# 
  4136  0E31                     	;# 
  4137  0E32                     	;# 
  4138  0E33                     	;# 
  4139  0E34                     	;# 
  4140  0E35                     	;# 
  4141  0E36                     	;# 
  4142  0E37                     	;# 
  4143  0E8F                     	;# 
  4144  0E90                     	;# 
  4145  0E91                     	;# 
  4146  0E92                     	;# 
  4147  0E93                     	;# 
  4148  0E94                     	;# 
  4149  0E95                     	;# 
  4150  0E96                     	;# 
  4151  0E97                     	;# 
  4152  0E9C                     	;# 
  4153  0E9D                     	;# 
  4154  0E9E                     	;# 
  4155  0EA1                     	;# 
  4156  0EA2                     	;# 
  4157  0EA3                     	;# 
  4158  0EA4                     	;# 
  4159  0EA5                     	;# 
  4160  0EA9                     	;# 
  4161  0EAA                     	;# 
  4162  0EAB                     	;# 
  4163  0EAC                     	;# 
  4164  0EB1                     	;# 
  4165  0EB2                     	;# 
  4166  0EB3                     	;# 
  4167  0EB8                     	;# 
  4168  0EB9                     	;# 
  4169  0EBA                     	;# 
  4170  0EBB                     	;# 
  4171  0EBC                     	;# 
  4172  0EBD                     	;# 
  4173  0EBE                     	;# 
  4174  0EC3                     	;# 
  4175  0EC5                     	;# 
  4176  0EC6                     	;# 
  4177  0EC7                     	;# 
  4178  0EC8                     	;# 
  4179  0EC9                     	;# 
  4180  0ECA                     	;# 
  4181  0ECB                     	;# 
  4182  0ECC                     	;# 
  4183  0F10                     	;# 
  4184  0F11                     	;# 
  4185  0F12                     	;# 
  4186  0F13                     	;# 
  4187  0F14                     	;# 
  4188  0F15                     	;# 
  4189  0F16                     	;# 
  4190  0F17                     	;# 
  4191  0F18                     	;# 
  4192  0F19                     	;# 
  4193  0F1A                     	;# 
  4194  0F1B                     	;# 
  4195  0F1C                     	;# 
  4196  0F1D                     	;# 
  4197  0F1E                     	;# 
  4198  0F1F                     	;# 
  4199  0F20                     	;# 
  4200  0F21                     	;# 
  4201  0F22                     	;# 
  4202  0F23                     	;# 
  4203  0F24                     	;# 
  4204  0F25                     	;# 
  4205  0F26                     	;# 
  4206  0F27                     	;# 
  4207  0F38                     	;# 
  4208  0F39                     	;# 
  4209  0F3A                     	;# 
  4210  0F3B                     	;# 
  4211  0F3C                     	;# 
  4212  0F3D                     	;# 
  4213  0F3E                     	;# 
  4214  0F3F                     	;# 
  4215  0F40                     	;# 
  4216  0F41                     	;# 
  4217  0F43                     	;# 
  4218  0F44                     	;# 
  4219  0F45                     	;# 
  4220  0F46                     	;# 
  4221  0F47                     	;# 
  4222  0F48                     	;# 
  4223  0F49                     	;# 
  4224  0F4A                     	;# 
  4225  0F4B                     	;# 
  4226  0F4C                     	;# 
  4227  0F4E                     	;# 
  4228  0F4F                     	;# 
  4229  0F50                     	;# 
  4230  0F51                     	;# 
  4231  0F52                     	;# 
  4232  0F53                     	;# 
  4233  0F54                     	;# 
  4234  0F55                     	;# 
  4235  0F56                     	;# 
  4236  0F57                     	;# 
  4237  0F65                     	;# 
  4238  0F68                     	;# 
  4239  0F69                     	;# 
  4240  0F6A                     	;# 
  4241  0F6B                     	;# 
  4242  0FE4                     	;# 
  4243  0FE5                     	;# 
  4244  0FE6                     	;# 
  4245  0FE7                     	;# 
  4246  0FE8                     	;# 
  4247  0FE9                     	;# 
  4248  0FEA                     	;# 
  4249  0FEB                     	;# 
  4250  0FED                     	;# 
  4251  0FEE                     	;# 
  4252  0FEF                     	;# 
  4253  0000                     	;# 
  4254  0001                     	;# 
  4255  0002                     	;# 
  4256  0003                     	;# 
  4257  0004                     	;# 
  4258  0005                     	;# 
  4259  0006                     	;# 
  4260  0007                     	;# 
  4261  0008                     	;# 
  4262  0009                     	;# 
  4263  000A                     	;# 
  4264  000B                     	;# 
  4265  000C                     	;# 
  4266  000D                     	;# 
  4267  000E                     	;# 
  4268  0010                     	;# 
  4269  0011                     	;# 
  4270  0012                     	;# 
  4271  0013                     	;# 
  4272  0016                     	;# 
  4273  0017                     	;# 
  4274  0018                     	;# 
  4275  001C                     	;# 
  4276  001C                     	;# 
  4277  001D                     	;# 
  4278  001D                     	;# 
  4279  001E                     	;# 
  4280  001F                     	;# 
  4281  008C                     	;# 
  4282  008C                     	;# 
  4283  008D                     	;# 
  4284  008E                     	;# 
  4285  008E                     	;# 
  4286  008F                     	;# 
  4287  0090                     	;# 
  4288  0090                     	;# 
  4289  0091                     	;# 
  4290  0093                     	;# 
  4291  0094                     	;# 
  4292  0095                     	;# 
  4293  0096                     	;# 
  4294  0097                     	;# 
  4295  0098                     	;# 
  4296  0099                     	;# 
  4297  009A                     	;# 
  4298  009B                     	;# 
  4299  009C                     	;# 
  4300  009D                     	;# 
  4301  009E                     	;# 
  4302  010C                     	;# 
  4303  010D                     	;# 
  4304  010E                     	;# 
  4305  010E                     	;# 
  4306  010F                     	;# 
  4307  0110                     	;# 
  4308  0110                     	;# 
  4309  0111                     	;# 
  4310  0112                     	;# 
  4311  0112                     	;# 
  4312  0113                     	;# 
  4313  0114                     	;# 
  4314  0114                     	;# 
  4315  0115                     	;# 
  4316  0116                     	;# 
  4317  0116                     	;# 
  4318  0117                     	;# 
  4319  0119                     	;# 
  4320  0119                     	;# 
  4321  0119                     	;# 
  4322  011A                     	;# 
  4323  011A                     	;# 
  4324  011A                     	;# 
  4325  011B                     	;# 
  4326  011B                     	;# 
  4327  011B                     	;# 
  4328  011B                     	;# 
  4329  011B                     	;# 
  4330  011C                     	;# 
  4331  011C                     	;# 
  4332  011C                     	;# 
  4333  011D                     	;# 
  4334  011D                     	;# 
  4335  011D                     	;# 
  4336  011E                     	;# 
  4337  011E                     	;# 
  4338  011E                     	;# 
  4339  011F                     	;# 
  4340  011F                     	;# 
  4341  011F                     	;# 
  4342  011F                     	;# 
  4343  011F                     	;# 
  4344  018C                     	;# 
  4345  018D                     	;# 
  4346  018E                     	;# 
  4347  018F                     	;# 
  4348  0190                     	;# 
  4349  0191                     	;# 
  4350  0192                     	;# 
  4351  0196                     	;# 
  4352  0197                     	;# 
  4353  0198                     	;# 
  4354  0199                     	;# 
  4355  019A                     	;# 
  4356  019B                     	;# 
  4357  019C                     	;# 
  4358  020C                     	;# 
  4359  020C                     	;# 
  4360  020D                     	;# 
  4361  020E                     	;# 
  4362  020F                     	;# 
  4363  020F                     	;# 
  4364  0210                     	;# 
  4365  0210                     	;# 
  4366  0211                     	;# 
  4367  0211                     	;# 
  4368  0212                     	;# 
  4369  0212                     	;# 
  4370  0213                     	;# 
  4371  0214                     	;# 
  4372  0215                     	;# 
  4373  0215                     	;# 
  4374  0216                     	;# 
  4375  0216                     	;# 
  4376  0217                     	;# 
  4377  0217                     	;# 
  4378  0218                     	;# 
  4379  0218                     	;# 
  4380  0219                     	;# 
  4381  021A                     	;# 
  4382  021B                     	;# 
  4383  021B                     	;# 
  4384  021C                     	;# 
  4385  021C                     	;# 
  4386  021D                     	;# 
  4387  021D                     	;# 
  4388  021E                     	;# 
  4389  021F                     	;# 
  4390  028C                     	;# 
  4391  028C                     	;# 
  4392  028D                     	;# 
  4393  028D                     	;# 
  4394  028E                     	;# 
  4395  028F                     	;# 
  4396  0290                     	;# 
  4397  0290                     	;# 
  4398  0291                     	;# 
  4399  0292                     	;# 
  4400  0292                     	;# 
  4401  0293                     	;# 
  4402  0293                     	;# 
  4403  0294                     	;# 
  4404  0295                     	;# 
  4405  0296                     	;# 
  4406  0296                     	;# 
  4407  0297                     	;# 
  4408  0298                     	;# 
  4409  0298                     	;# 
  4410  0299                     	;# 
  4411  0299                     	;# 
  4412  029A                     	;# 
  4413  029B                     	;# 
  4414  029C                     	;# 
  4415  029C                     	;# 
  4416  029D                     	;# 
  4417  030C                     	;# 
  4418  030C                     	;# 
  4419  030D                     	;# 
  4420  030E                     	;# 
  4421  030F                     	;# 
  4422  0310                     	;# 
  4423  0310                     	;# 
  4424  0311                     	;# 
  4425  0312                     	;# 
  4426  0313                     	;# 
  4427  0314                     	;# 
  4428  0314                     	;# 
  4429  0315                     	;# 
  4430  0316                     	;# 
  4431  0317                     	;# 
  4432  0318                     	;# 
  4433  0318                     	;# 
  4434  0319                     	;# 
  4435  031A                     	;# 
  4436  031B                     	;# 
  4437  031C                     	;# 
  4438  031C                     	;# 
  4439  031D                     	;# 
  4440  031E                     	;# 
  4441  031F                     	;# 
  4442  038C                     	;# 
  4443  038C                     	;# 
  4444  038D                     	;# 
  4445  038E                     	;# 
  4446  0390                     	;# 
  4447  0390                     	;# 
  4448  0391                     	;# 
  4449  0392                     	;# 
  4450  040C                     	;# 
  4451  040D                     	;# 
  4452  040E                     	;# 
  4453  040F                     	;# 
  4454  0410                     	;# 
  4455  0411                     	;# 
  4456  0416                     	;# 
  4457  0416                     	;# 
  4458  0417                     	;# 
  4459  0418                     	;# 
  4460  0418                     	;# 
  4461  0419                     	;# 
  4462  041A                     	;# 
  4463  041A                     	;# 
  4464  041B                     	;# 
  4465  041C                     	;# 
  4466  041C                     	;# 
  4467  041D                     	;# 
  4468  041E                     	;# 
  4469  041F                     	;# 
  4470  048C                     	;# 
  4471  048C                     	;# 
  4472  048D                     	;# 
  4473  048E                     	;# 
  4474  048F                     	;# 
  4475  048F                     	;# 
  4476  0490                     	;# 
  4477  0491                     	;# 
  4478  0492                     	;# 
  4479  0492                     	;# 
  4480  0493                     	;# 
  4481  0494                     	;# 
  4482  0495                     	;# 
  4483  0495                     	;# 
  4484  0496                     	;# 
  4485  0497                     	;# 
  4486  0498                     	;# 
  4487  0499                     	;# 
  4488  049A                     	;# 
  4489  049B                     	;# 
  4490  049C                     	;# 
  4491  049D                     	;# 
  4492  050C                     	;# 
  4493  050C                     	;# 
  4494  050D                     	;# 
  4495  050E                     	;# 
  4496  050F                     	;# 
  4497  050F                     	;# 
  4498  0510                     	;# 
  4499  0511                     	;# 
  4500  0512                     	;# 
  4501  0512                     	;# 
  4502  0513                     	;# 
  4503  0514                     	;# 
  4504  0515                     	;# 
  4505  0515                     	;# 
  4506  0516                     	;# 
  4507  0517                     	;# 
  4508  0518                     	;# 
  4509  0519                     	;# 
  4510  051A                     	;# 
  4511  051B                     	;# 
  4512  051C                     	;# 
  4513  051D                     	;# 
  4514  058C                     	;# 
  4515  058C                     	;# 
  4516  058D                     	;# 
  4517  058E                     	;# 
  4518  058F                     	;# 
  4519  058F                     	;# 
  4520  0590                     	;# 
  4521  0591                     	;# 
  4522  0592                     	;# 
  4523  0593                     	;# 
  4524  060C                     	;# 
  4525  060D                     	;# 
  4526  060E                     	;# 
  4527  060F                     	;# 
  4528  0610                     	;# 
  4529  0611                     	;# 
  4530  0612                     	;# 
  4531  0613                     	;# 
  4532  0614                     	;# 
  4533  0616                     	;# 
  4534  0617                     	;# 
  4535  0618                     	;# 
  4536  0619                     	;# 
  4537  061A                     	;# 
  4538  061B                     	;# 
  4539  061C                     	;# 
  4540  061D                     	;# 
  4541  061E                     	;# 
  4542  068C                     	;# 
  4543  068D                     	;# 
  4544  068E                     	;# 
  4545  068F                     	;# 
  4546  0690                     	;# 
  4547  0691                     	;# 
  4548  0692                     	;# 
  4549  0693                     	;# 
  4550  0694                     	;# 
  4551  070C                     	;# 
  4552  070D                     	;# 
  4553  070E                     	;# 
  4554  070F                     	;# 
  4555  0710                     	;# 
  4556  0711                     	;# 
  4557  0712                     	;# 
  4558  0713                     	;# 
  4559  0714                     	;# 
  4560  0716                     	;# 
  4561  0717                     	;# 
  4562  0718                     	;# 
  4563  0719                     	;# 
  4564  071A                     	;# 
  4565  071B                     	;# 
  4566  071C                     	;# 
  4567  071D                     	;# 
  4568  071E                     	;# 
  4569  0796                     	;# 
  4570  0797                     	;# 
  4571  0798                     	;# 
  4572  0799                     	;# 
  4573  079A                     	;# 
  4574  079B                     	;# 
  4575  080C                     	;# 
  4576  080D                     	;# 
  4577  080E                     	;# 
  4578  080F                     	;# 
  4579  0810                     	;# 
  4580  0811                     	;# 
  4581  0812                     	;# 
  4582  0813                     	;# 
  4583  0814                     	;# 
  4584  081A                     	;# 
  4585  081B                     	;# 
  4586  081C                     	;# 
  4587  081D                     	;# 
  4588  081E                     	;# 
  4589  081F                     	;# 
  4590  088C                     	;# 
  4591  088D                     	;# 
  4592  088E                     	;# 
  4593  088F                     	;# 
  4594  0890                     	;# 
  4595  0891                     	;# 
  4596  0892                     	;# 
  4597  0893                     	;# 
  4598  0895                     	;# 
  4599  0896                     	;# 
  4600  0897                     	;# 
  4601  0898                     	;# 
  4602  0899                     	;# 
  4603  089A                     	;# 
  4604  089B                     	;# 
  4605  090C                     	;# 
  4606  090E                     	;# 
  4607  090F                     	;# 
  4608  091F                     	;# 
  4609  091F                     	;# 
  4610  098F                     	;# 
  4611  098F                     	;# 
  4612  0990                     	;# 
  4613  0991                     	;# 
  4614  0992                     	;# 
  4615  0993                     	;# 
  4616  0994                     	;# 
  4617  0995                     	;# 
  4618  0996                     	;# 
  4619  0997                     	;# 
  4620  0E0F                     	;# 
  4621  0E10                     	;# 
  4622  0E11                     	;# 
  4623  0E12                     	;# 
  4624  0E13                     	;# 
  4625  0E14                     	;# 
  4626  0E15                     	;# 
  4627  0E16                     	;# 
  4628  0E17                     	;# 
  4629  0E18                     	;# 
  4630  0E19                     	;# 
  4631  0E1A                     	;# 
  4632  0E1B                     	;# 
  4633  0E1C                     	;# 
  4634  0E1D                     	;# 
  4635  0E1E                     	;# 
  4636  0E1F                     	;# 
  4637  0E20                     	;# 
  4638  0E21                     	;# 
  4639  0E22                     	;# 
  4640  0E23                     	;# 
  4641  0E24                     	;# 
  4642  0E25                     	;# 
  4643  0E26                     	;# 
  4644  0E27                     	;# 
  4645  0E28                     	;# 
  4646  0E29                     	;# 
  4647  0E2A                     	;# 
  4648  0E2B                     	;# 
  4649  0E2C                     	;# 
  4650  0E2D                     	;# 
  4651  0E2E                     	;# 
  4652  0E2F                     	;# 
  4653  0E30                     	;# 
  4654  0E31                     	;# 
  4655  0E32                     	;# 
  4656  0E33                     	;# 
  4657  0E34                     	;# 
  4658  0E35                     	;# 
  4659  0E36                     	;# 
  4660  0E37                     	;# 
  4661  0E8F                     	;# 
  4662  0E90                     	;# 
  4663  0E91                     	;# 
  4664  0E92                     	;# 
  4665  0E93                     	;# 
  4666  0E94                     	;# 
  4667  0E95                     	;# 
  4668  0E96                     	;# 
  4669  0E97                     	;# 
  4670  0E9C                     	;# 
  4671  0E9D                     	;# 
  4672  0E9E                     	;# 
  4673  0EA1                     	;# 
  4674  0EA2                     	;# 
  4675  0EA3                     	;# 
  4676  0EA4                     	;# 
  4677  0EA5                     	;# 
  4678  0EA9                     	;# 
  4679  0EAA                     	;# 
  4680  0EAB                     	;# 
  4681  0EAC                     	;# 
  4682  0EB1                     	;# 
  4683  0EB2                     	;# 
  4684  0EB3                     	;# 
  4685  0EB8                     	;# 
  4686  0EB9                     	;# 
  4687  0EBA                     	;# 
  4688  0EBB                     	;# 
  4689  0EBC                     	;# 
  4690  0EBD                     	;# 
  4691  0EBE                     	;# 
  4692  0EC3                     	;# 
  4693  0EC5                     	;# 
  4694  0EC6                     	;# 
  4695  0EC7                     	;# 
  4696  0EC8                     	;# 
  4697  0EC9                     	;# 
  4698  0ECA                     	;# 
  4699  0ECB                     	;# 
  4700  0ECC                     	;# 
  4701  0F10                     	;# 
  4702  0F11                     	;# 
  4703  0F12                     	;# 
  4704  0F13                     	;# 
  4705  0F14                     	;# 
  4706  0F15                     	;# 
  4707  0F16                     	;# 
  4708  0F17                     	;# 
  4709  0F18                     	;# 
  4710  0F19                     	;# 
  4711  0F1A                     	;# 
  4712  0F1B                     	;# 
  4713  0F1C                     	;# 
  4714  0F1D                     	;# 
  4715  0F1E                     	;# 
  4716  0F1F                     	;# 
  4717  0F20                     	;# 
  4718  0F21                     	;# 
  4719  0F22                     	;# 
  4720  0F23                     	;# 
  4721  0F24                     	;# 
  4722  0F25                     	;# 
  4723  0F26                     	;# 
  4724  0F27                     	;# 
  4725  0F38                     	;# 
  4726  0F39                     	;# 
  4727  0F3A                     	;# 
  4728  0F3B                     	;# 
  4729  0F3C                     	;# 
  4730  0F3D                     	;# 
  4731  0F3E                     	;# 
  4732  0F3F                     	;# 
  4733  0F40                     	;# 
  4734  0F41                     	;# 
  4735  0F43                     	;# 
  4736  0F44                     	;# 
  4737  0F45                     	;# 
  4738  0F46                     	;# 
  4739  0F47                     	;# 
  4740  0F48                     	;# 
  4741  0F49                     	;# 
  4742  0F4A                     	;# 
  4743  0F4B                     	;# 
  4744  0F4C                     	;# 
  4745  0F4E                     	;# 
  4746  0F4F                     	;# 
  4747  0F50                     	;# 
  4748  0F51                     	;# 
  4749  0F52                     	;# 
  4750  0F53                     	;# 
  4751  0F54                     	;# 
  4752  0F55                     	;# 
  4753  0F56                     	;# 
  4754  0F57                     	;# 
  4755  0F65                     	;# 
  4756  0F68                     	;# 
  4757  0F69                     	;# 
  4758  0F6A                     	;# 
  4759  0F6B                     	;# 
  4760  0FE4                     	;# 
  4761  0FE5                     	;# 
  4762  0FE6                     	;# 
  4763  0FE7                     	;# 
  4764  0FE8                     	;# 
  4765  0FE9                     	;# 
  4766  0FEA                     	;# 
  4767  0FEB                     	;# 
  4768  0FED                     	;# 
  4769  0FEE                     	;# 
  4770  0FEF                     	;# 
  4771  0000                     	;# 
  4772  0001                     	;# 
  4773  0002                     	;# 
  4774  0003                     	;# 
  4775  0004                     	;# 
  4776  0005                     	;# 
  4777  0006                     	;# 
  4778  0007                     	;# 
  4779  0008                     	;# 
  4780  0009                     	;# 
  4781  000A                     	;# 
  4782  000B                     	;# 
  4783  000C                     	;# 
  4784  000D                     	;# 
  4785  000E                     	;# 
  4786  0010                     	;# 
  4787  0011                     	;# 
  4788  0012                     	;# 
  4789  0013                     	;# 
  4790  0016                     	;# 
  4791  0017                     	;# 
  4792  0018                     	;# 
  4793  001C                     	;# 
  4794  001C                     	;# 
  4795  001D                     	;# 
  4796  001D                     	;# 
  4797  001E                     	;# 
  4798  001F                     	;# 
  4799  008C                     	;# 
  4800  008C                     	;# 
  4801  008D                     	;# 
  4802  008E                     	;# 
  4803  008E                     	;# 
  4804  008F                     	;# 
  4805  0090                     	;# 
  4806  0090                     	;# 
  4807  0091                     	;# 
  4808  0093                     	;# 
  4809  0094                     	;# 
  4810  0095                     	;# 
  4811  0096                     	;# 
  4812  0097                     	;# 
  4813  0098                     	;# 
  4814  0099                     	;# 
  4815  009A                     	;# 
  4816  009B                     	;# 
  4817  009C                     	;# 
  4818  009D                     	;# 
  4819  009E                     	;# 
  4820  010C                     	;# 
  4821  010D                     	;# 
  4822  010E                     	;# 
  4823  010E                     	;# 
  4824  010F                     	;# 
  4825  0110                     	;# 
  4826  0110                     	;# 
  4827  0111                     	;# 
  4828  0112                     	;# 
  4829  0112                     	;# 
  4830  0113                     	;# 
  4831  0114                     	;# 
  4832  0114                     	;# 
  4833  0115                     	;# 
  4834  0116                     	;# 
  4835  0116                     	;# 
  4836  0117                     	;# 
  4837  0119                     	;# 
  4838  0119                     	;# 
  4839  0119                     	;# 
  4840  011A                     	;# 
  4841  011A                     	;# 
  4842  011A                     	;# 
  4843  011B                     	;# 
  4844  011B                     	;# 
  4845  011B                     	;# 
  4846  011B                     	;# 
  4847  011B                     	;# 
  4848  011C                     	;# 
  4849  011C                     	;# 
  4850  011C                     	;# 
  4851  011D                     	;# 
  4852  011D                     	;# 
  4853  011D                     	;# 
  4854  011E                     	;# 
  4855  011E                     	;# 
  4856  011E                     	;# 
  4857  011F                     	;# 
  4858  011F                     	;# 
  4859  011F                     	;# 
  4860  011F                     	;# 
  4861  011F                     	;# 
  4862  018C                     	;# 
  4863  018D                     	;# 
  4864  018E                     	;# 
  4865  018F                     	;# 
  4866  0190                     	;# 
  4867  0191                     	;# 
  4868  0192                     	;# 
  4869  0196                     	;# 
  4870  0197                     	;# 
  4871  0198                     	;# 
  4872  0199                     	;# 
  4873  019A                     	;# 
  4874  019B                     	;# 
  4875  019C                     	;# 
  4876  020C                     	;# 
  4877  020C                     	;# 
  4878  020D                     	;# 
  4879  020E                     	;# 
  4880  020F                     	;# 
  4881  020F                     	;# 
  4882  0210                     	;# 
  4883  0210                     	;# 
  4884  0211                     	;# 
  4885  0211                     	;# 
  4886  0212                     	;# 
  4887  0212                     	;# 
  4888  0213                     	;# 
  4889  0214                     	;# 
  4890  0215                     	;# 
  4891  0215                     	;# 
  4892  0216                     	;# 
  4893  0216                     	;# 
  4894  0217                     	;# 
  4895  0217                     	;# 
  4896  0218                     	;# 
  4897  0218                     	;# 
  4898  0219                     	;# 
  4899  021A                     	;# 
  4900  021B                     	;# 
  4901  021B                     	;# 
  4902  021C                     	;# 
  4903  021C                     	;# 
  4904  021D                     	;# 
  4905  021D                     	;# 
  4906  021E                     	;# 
  4907  021F                     	;# 
  4908  028C                     	;# 
  4909  028C                     	;# 
  4910  028D                     	;# 
  4911  028D                     	;# 
  4912  028E                     	;# 
  4913  028F                     	;# 
  4914  0290                     	;# 
  4915  0290                     	;# 
  4916  0291                     	;# 
  4917  0292                     	;# 
  4918  0292                     	;# 
  4919  0293                     	;# 
  4920  0293                     	;# 
  4921  0294                     	;# 
  4922  0295                     	;# 
  4923  0296                     	;# 
  4924  0296                     	;# 
  4925  0297                     	;# 
  4926  0298                     	;# 
  4927  0298                     	;# 
  4928  0299                     	;# 
  4929  0299                     	;# 
  4930  029A                     	;# 
  4931  029B                     	;# 
  4932  029C                     	;# 
  4933  029C                     	;# 
  4934  029D                     	;# 
  4935  030C                     	;# 
  4936  030C                     	;# 
  4937  030D                     	;# 
  4938  030E                     	;# 
  4939  030F                     	;# 
  4940  0310                     	;# 
  4941  0310                     	;# 
  4942  0311                     	;# 
  4943  0312                     	;# 
  4944  0313                     	;# 
  4945  0314                     	;# 
  4946  0314                     	;# 
  4947  0315                     	;# 
  4948  0316                     	;# 
  4949  0317                     	;# 
  4950  0318                     	;# 
  4951  0318                     	;# 
  4952  0319                     	;# 
  4953  031A                     	;# 
  4954  031B                     	;# 
  4955  031C                     	;# 
  4956  031C                     	;# 
  4957  031D                     	;# 
  4958  031E                     	;# 
  4959  031F                     	;# 
  4960  038C                     	;# 
  4961  038C                     	;# 
  4962  038D                     	;# 
  4963  038E                     	;# 
  4964  0390                     	;# 
  4965  0390                     	;# 
  4966  0391                     	;# 
  4967  0392                     	;# 
  4968  040C                     	;# 
  4969  040D                     	;# 
  4970  040E                     	;# 
  4971  040F                     	;# 
  4972  0410                     	;# 
  4973  0411                     	;# 
  4974  0416                     	;# 
  4975  0416                     	;# 
  4976  0417                     	;# 
  4977  0418                     	;# 
  4978  0418                     	;# 
  4979  0419                     	;# 
  4980  041A                     	;# 
  4981  041A                     	;# 
  4982  041B                     	;# 
  4983  041C                     	;# 
  4984  041C                     	;# 
  4985  041D                     	;# 
  4986  041E                     	;# 
  4987  041F                     	;# 
  4988  048C                     	;# 
  4989  048C                     	;# 
  4990  048D                     	;# 
  4991  048E                     	;# 
  4992  048F                     	;# 
  4993  048F                     	;# 
  4994  0490                     	;# 
  4995  0491                     	;# 
  4996  0492                     	;# 
  4997  0492                     	;# 
  4998  0493                     	;# 
  4999  0494                     	;# 
  5000  0495                     	;# 
  5001  0495                     	;# 
  5002  0496                     	;# 
  5003  0497                     	;# 
  5004  0498                     	;# 
  5005  0499                     	;# 
  5006  049A                     	;# 
  5007  049B                     	;# 
  5008  049C                     	;# 
  5009  049D                     	;# 
  5010  050C                     	;# 
  5011  050C                     	;# 
  5012  050D                     	;# 
  5013  050E                     	;# 
  5014  050F                     	;# 
  5015  050F                     	;# 
  5016  0510                     	;# 
  5017  0511                     	;# 
  5018  0512                     	;# 
  5019  0512                     	;# 
  5020  0513                     	;# 
  5021  0514                     	;# 
  5022  0515                     	;# 
  5023  0515                     	;# 
  5024  0516                     	;# 
  5025  0517                     	;# 
  5026  0518                     	;# 
  5027  0519                     	;# 
  5028  051A                     	;# 
  5029  051B                     	;# 
  5030  051C                     	;# 
  5031  051D                     	;# 
  5032  058C                     	;# 
  5033  058C                     	;# 
  5034  058D                     	;# 
  5035  058E                     	;# 
  5036  058F                     	;# 
  5037  058F                     	;# 
  5038  0590                     	;# 
  5039  0591                     	;# 
  5040  0592                     	;# 
  5041  0593                     	;# 
  5042  060C                     	;# 
  5043  060D                     	;# 
  5044  060E                     	;# 
  5045  060F                     	;# 
  5046  0610                     	;# 
  5047  0611                     	;# 
  5048  0612                     	;# 
  5049  0613                     	;# 
  5050  0614                     	;# 
  5051  0616                     	;# 
  5052  0617                     	;# 
  5053  0618                     	;# 
  5054  0619                     	;# 
  5055  061A                     	;# 
  5056  061B                     	;# 
  5057  061C                     	;# 
  5058  061D                     	;# 
  5059  061E                     	;# 
  5060  068C                     	;# 
  5061  068D                     	;# 
  5062  068E                     	;# 
  5063  068F                     	;# 
  5064  0690                     	;# 
  5065  0691                     	;# 
  5066  0692                     	;# 
  5067  0693                     	;# 
  5068  0694                     	;# 
  5069  070C                     	;# 
  5070  070D                     	;# 
  5071  070E                     	;# 
  5072  070F                     	;# 
  5073  0710                     	;# 
  5074  0711                     	;# 
  5075  0712                     	;# 
  5076  0713                     	;# 
  5077  0714                     	;# 
  5078  0716                     	;# 
  5079  0717                     	;# 
  5080  0718                     	;# 
  5081  0719                     	;# 
  5082  071A                     	;# 
  5083  071B                     	;# 
  5084  071C                     	;# 
  5085  071D                     	;# 
  5086  071E                     	;# 
  5087  0796                     	;# 
  5088  0797                     	;# 
  5089  0798                     	;# 
  5090  0799                     	;# 
  5091  079A                     	;# 
  5092  079B                     	;# 
  5093  080C                     	;# 
  5094  080D                     	;# 
  5095  080E                     	;# 
  5096  080F                     	;# 
  5097  0810                     	;# 
  5098  0811                     	;# 
  5099  0812                     	;# 
  5100  0813                     	;# 
  5101  0814                     	;# 
  5102  081A                     	;# 
  5103  081B                     	;# 
  5104  081C                     	;# 
  5105  081D                     	;# 
  5106  081E                     	;# 
  5107  081F                     	;# 
  5108  088C                     	;# 
  5109  088D                     	;# 
  5110  088E                     	;# 
  5111  088F                     	;# 
  5112  0890                     	;# 
  5113  0891                     	;# 
  5114  0892                     	;# 
  5115  0893                     	;# 
  5116  0895                     	;# 
  5117  0896                     	;# 
  5118  0897                     	;# 
  5119  0898                     	;# 
  5120  0899                     	;# 
  5121  089A                     	;# 
  5122  089B                     	;# 
  5123  090C                     	;# 
  5124  090E                     	;# 
  5125  090F                     	;# 
  5126  091F                     	;# 
  5127  091F                     	;# 
  5128  098F                     	;# 
  5129  098F                     	;# 
  5130  0990                     	;# 
  5131  0991                     	;# 
  5132  0992                     	;# 
  5133  0993                     	;# 
  5134  0994                     	;# 
  5135  0995                     	;# 
  5136  0996                     	;# 
  5137  0997                     	;# 
  5138  0E0F                     	;# 
  5139  0E10                     	;# 
  5140  0E11                     	;# 
  5141  0E12                     	;# 
  5142  0E13                     	;# 
  5143  0E14                     	;# 
  5144  0E15                     	;# 
  5145  0E16                     	;# 
  5146  0E17                     	;# 
  5147  0E18                     	;# 
  5148  0E19                     	;# 
  5149  0E1A                     	;# 
  5150  0E1B                     	;# 
  5151  0E1C                     	;# 
  5152  0E1D                     	;# 
  5153  0E1E                     	;# 
  5154  0E1F                     	;# 
  5155  0E20                     	;# 
  5156  0E21                     	;# 
  5157  0E22                     	;# 
  5158  0E23                     	;# 
  5159  0E24                     	;# 
  5160  0E25                     	;# 
  5161  0E26                     	;# 
  5162  0E27                     	;# 
  5163  0E28                     	;# 
  5164  0E29                     	;# 
  5165  0E2A                     	;# 
  5166  0E2B                     	;# 
  5167  0E2C                     	;# 
  5168  0E2D                     	;# 
  5169  0E2E                     	;# 
  5170  0E2F                     	;# 
  5171  0E30                     	;# 
  5172  0E31                     	;# 
  5173  0E32                     	;# 
  5174  0E33                     	;# 
  5175  0E34                     	;# 
  5176  0E35                     	;# 
  5177  0E36                     	;# 
  5178  0E37                     	;# 
  5179  0E8F                     	;# 
  5180  0E90                     	;# 
  5181  0E91                     	;# 
  5182  0E92                     	;# 
  5183  0E93                     	;# 
  5184  0E94                     	;# 
  5185  0E95                     	;# 
  5186  0E96                     	;# 
  5187  0E97                     	;# 
  5188  0E9C                     	;# 
  5189  0E9D                     	;# 
  5190  0E9E                     	;# 
  5191  0EA1                     	;# 
  5192  0EA2                     	;# 
  5193  0EA3                     	;# 
  5194  0EA4                     	;# 
  5195  0EA5                     	;# 
  5196  0EA9                     	;# 
  5197  0EAA                     	;# 
  5198  0EAB                     	;# 
  5199  0EAC                     	;# 
  5200  0EB1                     	;# 
  5201  0EB2                     	;# 
  5202  0EB3                     	;# 
  5203  0EB8                     	;# 
  5204  0EB9                     	;# 
  5205  0EBA                     	;# 
  5206  0EBB                     	;# 
  5207  0EBC                     	;# 
  5208  0EBD                     	;# 
  5209  0EBE                     	;# 
  5210  0EC3                     	;# 
  5211  0EC5                     	;# 
  5212  0EC6                     	;# 
  5213  0EC7                     	;# 
  5214  0EC8                     	;# 
  5215  0EC9                     	;# 
  5216  0ECA                     	;# 
  5217  0ECB                     	;# 
  5218  0ECC                     	;# 
  5219  0F10                     	;# 
  5220  0F11                     	;# 
  5221  0F12                     	;# 
  5222  0F13                     	;# 
  5223  0F14                     	;# 
  5224  0F15                     	;# 
  5225  0F16                     	;# 
  5226  0F17                     	;# 
  5227  0F18                     	;# 
  5228  0F19                     	;# 
  5229  0F1A                     	;# 
  5230  0F1B                     	;# 
  5231  0F1C                     	;# 
  5232  0F1D                     	;# 
  5233  0F1E                     	;# 
  5234  0F1F                     	;# 
  5235  0F20                     	;# 
  5236  0F21                     	;# 
  5237  0F22                     	;# 
  5238  0F23                     	;# 
  5239  0F24                     	;# 
  5240  0F25                     	;# 
  5241  0F26                     	;# 
  5242  0F27                     	;# 
  5243  0F38                     	;# 
  5244  0F39                     	;# 
  5245  0F3A                     	;# 
  5246  0F3B                     	;# 
  5247  0F3C                     	;# 
  5248  0F3D                     	;# 
  5249  0F3E                     	;# 
  5250  0F3F                     	;# 
  5251  0F40                     	;# 
  5252  0F41                     	;# 
  5253  0F43                     	;# 
  5254  0F44                     	;# 
  5255  0F45                     	;# 
  5256  0F46                     	;# 
  5257  0F47                     	;# 
  5258  0F48                     	;# 
  5259  0F49                     	;# 
  5260  0F4A                     	;# 
  5261  0F4B                     	;# 
  5262  0F4C                     	;# 
  5263  0F4E                     	;# 
  5264  0F4F                     	;# 
  5265  0F50                     	;# 
  5266  0F51                     	;# 
  5267  0F52                     	;# 
  5268  0F53                     	;# 
  5269  0F54                     	;# 
  5270  0F55                     	;# 
  5271  0F56                     	;# 
  5272  0F57                     	;# 
  5273  0F65                     	;# 
  5274  0F68                     	;# 
  5275  0F69                     	;# 
  5276  0F6A                     	;# 
  5277  0F6B                     	;# 
  5278  0FE4                     	;# 
  5279  0FE5                     	;# 
  5280  0FE6                     	;# 
  5281  0FE7                     	;# 
  5282  0FE8                     	;# 
  5283  0FE9                     	;# 
  5284  0FEA                     	;# 
  5285  0FEB                     	;# 
  5286  0FED                     	;# 
  5287  0FEE                     	;# 
  5288  0FEF                     	;# 
  5289                           
  5290                           	psect	idataBANK1
  5291  0AD7                     __pidataBANK1:
  5292                           
  5293                           ;initializer for _Letra1
  5294  0AD7  341B               	retlw	27
  5295  0AD8  341B               	retlw	27
  5296  0AD9  3400               	retlw	0
  5297  0ADA  341F               	retlw	31
  5298  0ADB  3411               	retlw	17
  5299  0ADC  3411               	retlw	17
  5300  0ADD  340E               	retlw	14
  5301  0ADE  3400               	retlw	0
  5302                           
  5303                           	psect	stringtext1
  5304  1035                     __pstringtext1:
  5305  1035                     _KEYS:
  5306  1035  3431               	retlw	49
  5307  1036  3432               	retlw	50
  5308  1037  3433               	retlw	51
  5309  1038  3441               	retlw	65
  5310  1039  3434               	retlw	52
  5311  103A  3435               	retlw	53
  5312  103B  3436               	retlw	54
  5313  103C  3442               	retlw	66
  5314  103D  3437               	retlw	55
  5315  103E  3438               	retlw	56
  5316  103F  3439               	retlw	57
  5317  1040  3443               	retlw	67
  5318  1041  342A               	retlw	42
  5319  1042  3430               	retlw	48
  5320  1043  3423               	retlw	35
  5321  1044  3464               	retlw	100
  5322  1045                     __end_of_KEYS:
  5323                           
  5324                           	psect	stringtext2
  5325  1056                     __pstringtext2:
  5326  1056                     _mv:
  5327  1056  340D               	retlw	13
  5328  1057  3468               	retlw	104
  5329  1058  3453               	retlw	83
  5330  1059  343B               	retlw	59
  5331  105A                     __end_of_mv:
  5332                           
  5333                           	psect	stringtext3
  5334  1000                     __pstringtext3:
  5335  1000                     _Letra2:
  5336  1000  341B               	retlw	27
  5337  1001  341B               	retlw	27
  5338  1002  3400               	retlw	0
  5339  1003  341F               	retlw	31
  5340  1004  3415               	retlw	21
  5341  1005  3415               	retlw	21
  5342  1006  340E               	retlw	14
  5343  1007  3400               	retlw	0
  5344  1008                     __end_of_Letra2:
  5345  000B                     _INTCONbits	set	11
  5346  000B                     _INTCON	set	11
  5347  000D                     _PORTBbits	set	13
  5348  0016                     _LATAbits	set	22
  5349  0013                     _TRISCbits	set	19
  5350  0013                     _TRISC	set	19
  5351  0012                     _TRISB	set	18
  5352  000D                     _PORTB	set	13
  5353  0017                     _LATB	set	23
  5354  0011                     _TRISA	set	17
  5355  000C                     _PORTA	set	12
  5356  0016                     _LATA	set	22
  5357  008C                     _ADRESL	set	140
  5358  008D                     _ADRESH	set	141
  5359  009B                     _ADCAP	set	155
  5360  009E                     _ADPCH	set	158
  5361  009A                     _ADREF	set	154
  5362  0098                     _ADCLK	set	152
  5363  0095                     _ADCON2	set	149
  5364  0094                     _ADCON1	set	148
  5365  0093                     _ADCON0	set	147
  5366  0119                     _RCREG	set	281
  5367  011A                     _TXREG	set	282
  5368  011C                     _SP1BRGH	set	284
  5369  011B                     _SP1BRGL	set	283
  5370  011E                     _TX1STA	set	286
  5371  011D                     _RC1STA	set	285
  5372  011F                     _BAUD1CON	set	287
  5373  018C                     _SSP1BUF	set	396
  5374  0191                     _SSP1CON2bits	set	401
  5375  018D                     _SSP1ADD	set	397
  5376  0192                     _SSP1CON3	set	402
  5377  0190                     _SSP1CON1	set	400
  5378  018F                     _SSP1STAT	set	399
  5379  070C                     _PIR0bits	set	1804
  5380  0716                     _PIE0	set	1814
  5381  070F                     _PIR3bits	set	1807
  5382  070F                     _PIR3	set	1807
  5383  081F                     _NVMCON2	set	2079
  5384  081C                     _NVMDATL	set	2076
  5385  081D                     _NVMDATH	set	2077
  5386  081A                     _NVMADRL	set	2074
  5387  081B                     _NVMADRH	set	2075
  5388  081E                     _NVMCON1bits	set	2078
  5389  0E90                     _INTPPS	set	3728
  5390  0EC6                     _SSP1DATPPS	set	3782
  5391  0EC5                     _SSP1CLKPPS	set	3781
  5392  0ECB                     _RXPPS	set	3787
  5393  0F44                     _WPUB	set	3908
  5394  0F24                     _RC4PPS	set	3876
  5395  0F23                     _RC3PPS	set	3875
  5396  0F4E                     _ANSELCbits	set	3918
  5397  0F20                     _RC0PPS	set	3872
  5398  0F4E                     _ANSELC	set	3918
  5399  0F43                     _ANSELB	set	3907
  5400  0F38                     _ANSELA	set	3896
  5401  1008                     STR_2:
  5402  1008  340C               	retlw	12
  5403  1009  3468               	retlw	104	;'h'
  5404  100A  346F               	retlw	111	;'o'
  5405  100B  346C               	retlw	108	;'l'
  5406  100C  3461               	retlw	97	;'a'
  5407  100D  3420               	retlw	32	;' '
  5408  100E  346D               	retlw	109	;'m'
  5409  100F  3475               	retlw	117	;'u'
  5410  1010  346E               	retlw	110	;'n'
  5411  1011  3464               	retlw	100	;'d'
  5412  1012  346F               	retlw	111	;'o'
  5413  1013  340A               	retlw	10
  5414  1014  3425               	retlw	37	;'%'
  5415  1015  3469               	retlw	105	;'i'
  5416  1016  3420               	retlw	32	;' '
  5417  1017  3458               	retlw	88	;'X'
  5418  1018  3443               	retlw	67	;'C'
  5419  1019  3438               	retlw	56	;'8'
  5420  101A  340A               	retlw	10
  5421  101B  3433               	retlw	51	;'3'
  5422  101C  340A               	retlw	10
  5423  101D  3434               	retlw	52	;'4'
  5424  101E  3400               	retlw	0
  5425                           
  5426                           	psect	stringtext4
  5427  101F                     __pstringtext4:
  5428  101F                     STR_7:
  5429  101F  3474               	retlw	116	;'t'
  5430  1020  3465               	retlw	101	;'e'
  5431  1021  3463               	retlw	99	;'c'
  5432  1022  346C               	retlw	108	;'l'
  5433  1023  3461               	retlw	97	;'a'
  5434  1024  3420               	retlw	32	;' '
  5435  1025  3470               	retlw	112	;'p'
  5436  1026  3472               	retlw	114	;'r'
  5437  1027  3465               	retlw	101	;'e'
  5438  1028  3473               	retlw	115	;'s'
  5439  1029  3469               	retlw	105	;'i'
  5440  102A  346F               	retlw	111	;'o'
  5441  102B  346E               	retlw	110	;'n'
  5442  102C  3461               	retlw	97	;'a'
  5443  102D  3464               	retlw	100	;'d'
  5444  102E  3461               	retlw	97	;'a'
  5445  102F  3420               	retlw	32	;' '
  5446  1030  3425               	retlw	37	;'%'
  5447  1031  3463               	retlw	99	;'c'
  5448  1032  340A               	retlw	10
  5449  1033  340A               	retlw	10
  5450  1034  3400               	retlw	0
  5451                           
  5452                           	psect	stringtext5
  5453  1045                     __pstringtext5:
  5454  1045                     STR_1:
  5455  1045  3448               	retlw	72	;'H'
  5456  1046  346F               	retlw	111	;'o'
  5457  1047  346C               	retlw	108	;'l'
  5458  1048  3461               	retlw	97	;'a'
  5459  1049  3461               	retlw	97	;'a'
  5460  104A  3461               	retlw	97	;'a'
  5461  104B  340A               	retlw	10
  5462  104C  340A               	retlw	10
  5463  104D  3400               	retlw	0
  5464                           
  5465                           	psect	stringtext6
  5466  104E                     __pstringtext6:
  5467  104E                     STR_6:
  5468  104E  340C               	retlw	12
  5469  104F  3425               	retlw	37	;'%'
  5470  1050  3464               	retlw	100	;'d'
  5471  1051  342E               	retlw	46	;'.'
  5472  1052  3425               	retlw	37	;'%'
  5473  1053  3464               	retlw	100	;'d'
  5474  1054  340A               	retlw	10
  5475  1055  3400               	retlw	0
  5476                           
  5477                           	psect	stringtext7
  5478  0000                     __pstringtext7:
  5479  1045                     
  5480                           	psect	cinit
  5481  0014                     start_initialization:	
  5482                           ; #config settings
  5483                           
  5484  0014                     __initialization:
  5485                           
  5486                           ; Initialize objects allocated to BANK1
  5487  0014  30D7               	movlw	low __pidataBANK1
  5488  0015  0084               	movwf	4
  5489  0016  308A               	movlw	(high __pidataBANK1)| (0+128)
  5490  0017  0085               	movwf	5
  5491  0018  30E8               	movlw	low __pdataBANK1
  5492  0019  0086               	movwf	6
  5493  001A  3000               	movlw	high __pdataBANK1
  5494  001B  0087               	movwf	7
  5495  001C  3008               	movlw	8
  5496  001D  3187  27FA  3180   	fcall	init_ram
  5497                           
  5498                           ; Clear objects allocated to COMMON
  5499  0020  01FC               	clrf	__pbssCOMMON& (0+127)
  5500                           
  5501                           ; Clear objects allocated to BANK0
  5502  0021  01EF               	clrf	__pbssBANK0& (0+127)
  5503                           
  5504                           ; Clear objects allocated to BANK1
  5505  0022  30A0               	movlw	low __pbssBANK1
  5506  0023  0084               	movwf	4
  5507  0024  3000               	movlw	high __pbssBANK1
  5508  0025  0085               	movwf	5
  5509  0026  303C               	movlw	60
  5510  0027  318A  22BC  3180   	fcall	clear_ram0
  5511                           
  5512                           ; Clear objects allocated to BANK2
  5513  002A  3020               	movlw	low __pbssBANK2
  5514  002B  0084               	movwf	4
  5515  002C  3001               	movlw	high __pbssBANK2
  5516  002D  0085               	movwf	5
  5517  002E  3032               	movlw	50
  5518  002F  318A  22BC  3180   	fcall	clear_ram0
  5519  0032                     end_of_initialization:	
  5520                           ;End of C runtime variable initialization code
  5521                           
  5522  0032                     __end_of__initialization:
  5523  0032  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5524  0033  0020               	movlb	0
  5525  0034  3186  2E58         	ljmp	_main	;jump to C main() function
  5526                           
  5527                           	psect	bssCOMMON
  5528  007C                     __pbssCOMMON:
  5529  007C                     _counts:
  5530  007C                     	ds	1
  5531                           
  5532                           	psect	bssBANK0
  5533  006F                     __pbssBANK0:
  5534  006F                     _g_LcdY:
  5535  006F                     	ds	1
  5536                           
  5537                           	psect	bssBANK1
  5538  00A0                     __pbssBANK1:
  5539  00A0                     _temperatura:
  5540  00A0                     	ds	4
  5541  00A4                     _volt:
  5542  00A4                     	ds	4
  5543  00A8                     _nout:
  5544  00A8                     	ds	2
  5545  00AA                     _width:
  5546  00AA                     	ds	2
  5547  00AC                     _prec:
  5548  00AC                     	ds	2
  5549  00AE                     _flags:
  5550  00AE                     	ds	2
  5551  00B0                     _adc:
  5552  00B0                     	ds	2
  5553  00B2                     _miVar:
  5554  00B2                     	ds	2
  5555  00B4                     _g_LcdX:
  5556  00B4                     	ds	1
  5557  00B5                     _contador:
  5558  00B5                     	ds	1
  5559  00B6                     _encontrado:
  5560  00B6                     	ds	1
  5561  00B7                     _tecla:
  5562  00B7                     	ds	1
  5563  00B8                     _rx:
  5564  00B8                     	ds	1
  5565  00B9                     _countsAnterior:
  5566  00B9                     	ds	1
  5567  00BA                     _dbuf:
  5568  00BA                     	ds	32
  5569  00DA                     _low_byte:
  5570  00DA                     	ds	1
  5571  00DB                     _high_byte:
  5572  00DB                     	ds	1
  5573                           
  5574                           	psect	dataBANK1
  5575  00E8                     __pdataBANK1:
  5576  00E8                     _Letra1:
  5577  00E8                     	ds	8
  5578                           
  5579                           	psect	bssBANK2
  5580  0120                     __pbssBANK2:
  5581  0120                     _buffer:
  5582  0120                     	ds	50
  5583                           
  5584                           	psect	inittext
  5585  07FA                     init_ram:
  5586  07FA  00FE               	movwf	btemp
  5587  07FB                     initloop:
  5588  07FB  0012               	moviw fsr0++
  5589  07FC  001E               	movwi fsr1++
  5590  07FD  0BFE               	decfsz	btemp,f
  5591  07FE  2FFB               	goto	initloop
  5592  07FF  3400               	retlw	0
  5593                           
  5594                           	psect	clrtext
  5595  0ABC                     clear_ram0:	
  5596                           ;	Called with FSR0 containing the base address, and
  5597                           ;	WREG with the size to clear
  5598                           
  5599  0ABC  0064               	clrwdt	;clear the watchdog before getting into this loop
  5600  0ABD                     clrloop0:
  5601  0ABD  0180               	clrf	0	;clear RAM location pointed to by FSR
  5602  0ABE  3101               	addfsr 0,1
  5603  0ABF  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5604  0AC0  2ABD               	goto	clrloop0	;have we reached the end yet?
  5605  0AC1  3400               	retlw	0	;all done for this memory range, return
  5606                           
  5607                           	psect	cstackBANK1
  5608  00DC                     __pcstackBANK1:
  5609  00DC                     ??_sprintf:
  5610                           
  5611                           ; 1 bytes @ 0x0
  5612  00DC                     	ds	1
  5613  00DD                     sprintf@s:
  5614                           
  5615                           ; 1 bytes @ 0x1
  5616  00DD                     	ds	1
  5617  00DE                     sprintf@ap:
  5618                           
  5619                           ; 1 bytes @ 0x2
  5620  00DE                     	ds	1
  5621  00DF                     sprintf@f:
  5622                           
  5623                           ; 5 bytes @ 0x3
  5624  00DF                     	ds	5
  5625  00E4                     ??_main:
  5626                           
  5627                           ; 1 bytes @ 0x8
  5628  00E4                     	ds	2
  5629  00E6                     main@eprom:
  5630                           
  5631                           ; 2 bytes @ 0xA
  5632  00E6                     	ds	2
  5633                           
  5634                           	psect	cstackCOMMON
  5635  0070                     __pcstackCOMMON:
  5636  0070                     ?_port_init:
  5637  0070                     ?_enable_interrupt:	
  5638                           ; 1 bytes @ 0x0
  5639                           
  5640  0070                     ?_lcd_init:	
  5641                           ; 1 bytes @ 0x0
  5642                           
  5643  0070                     ?_lcd_puts:	
  5644                           ; 1 bytes @ 0x0
  5645                           
  5646  0070                     ?_teclado_get:	
  5647                           ; 1 bytes @ 0x0
  5648                           
  5649  0070                     ?_adc_init:	
  5650                           ; 1 bytes @ 0x0
  5651                           
  5652  0070                     ?_i2c_init:	
  5653                           ; 1 bytes @ 0x0
  5654                           
  5655  0070                     ?_teclado_init:	
  5656                           ; 1 bytes @ 0x0
  5657                           
  5658  0070                     ?_i2c_ack:	
  5659                           ; 1 bytes @ 0x0
  5660                           
  5661  0070                     ?_i2c_nack:	
  5662                           ; 1 bytes @ 0x0
  5663                           
  5664  0070                     ?_main:	
  5665                           ; 1 bytes @ 0x0
  5666                           
  5667  0070                     ?_uart_tx:	
  5668                           ; 1 bytes @ 0x0
  5669                           
  5670  0070                     ?_putch:	
  5671                           ; 1 bytes @ 0x0
  5672                           
  5673  0070                     ?_i2c_start:	
  5674                           ; 1 bytes @ 0x0
  5675                           
  5676  0070                     ?_i2c_restart:	
  5677                           ; 1 bytes @ 0x0
  5678                           
  5679  0070                     ?_i2c_stop:	
  5680                           ; 1 bytes @ 0x0
  5681                           
  5682  0070                     ?_i2c_read:	
  5683                           ; 1 bytes @ 0x0
  5684                           
  5685  0070                     ?_i2c_write:	
  5686                           ; 1 bytes @ 0x0
  5687                           
  5688  0070                     ?_Write_PCF:	
  5689                           ; 1 bytes @ 0x0
  5690                           
  5691  0070                     ?_INTERRUPT_InterruptManager:	
  5692                           ; 1 bytes @ 0x0
  5693                           
  5694  0070                     ??_INTERRUPT_InterruptManager:	
  5695                           ; 1 bytes @ 0x0
  5696                           
  5697  0070                     ?_EEPROM_ReadByte:	
  5698                           ; 1 bytes @ 0x0
  5699                           
  5700                           
  5701                           ; 1 bytes @ 0x0
  5702  0070                     	ds	1
  5703  0071                     ??_enable_interrupt:
  5704  0071                     ??_teclado_get:	
  5705                           ; 1 bytes @ 0x1
  5706                           
  5707  0071                     ??_adc_init:	
  5708                           ; 1 bytes @ 0x1
  5709                           
  5710  0071                     ??_i2c_init:	
  5711                           ; 1 bytes @ 0x1
  5712                           
  5713  0071                     ??_teclado_init:	
  5714                           ; 1 bytes @ 0x1
  5715                           
  5716  0071                     ??_i2c_ack:	
  5717                           ; 1 bytes @ 0x1
  5718                           
  5719  0071                     ??_i2c_nack:	
  5720                           ; 1 bytes @ 0x1
  5721                           
  5722  0071                     ??_uart_tx:	
  5723                           ; 1 bytes @ 0x1
  5724                           
  5725  0071                     ??_i2c_start:	
  5726                           ; 1 bytes @ 0x1
  5727                           
  5728  0071                     ??_i2c_restart:	
  5729                           ; 1 bytes @ 0x1
  5730                           
  5731  0071                     ??_i2c_stop:	
  5732                           ; 1 bytes @ 0x1
  5733                           
  5734  0071                     ??_i2c_read:	
  5735                           ; 1 bytes @ 0x1
  5736                           
  5737  0071                     ??_i2c_write:	
  5738                           ; 1 bytes @ 0x1
  5739                           
  5740  0071                     ?_EEPROM_WriteByte:	
  5741                           ; 1 bytes @ 0x1
  5742                           
  5743  0071                     ??_EEPROM_ReadByte:	
  5744                           ; 1 bytes @ 0x1
  5745                           
  5746  0071                     ?___bmul:	
  5747                           ; 1 bytes @ 0x1
  5748                           
  5749  0071                     ??___aodiv:	
  5750                           ; 1 bytes @ 0x1
  5751                           
  5752  0071                     ??___aomod:	
  5753                           ; 1 bytes @ 0x1
  5754                           
  5755  0071                     ?_strlen:	
  5756                           ; 1 bytes @ 0x1
  5757                           
  5758  0071                     ?___lldiv:	
  5759                           ; 2 bytes @ 0x1
  5760                           
  5761  0071                     i2c_read@ack:	
  5762                           ; 4 bytes @ 0x1
  5763                           
  5764  0071                     i2c_write@I2C_data:	
  5765                           ; 1 bytes @ 0x1
  5766                           
  5767  0071                     EEPROM_WriteByte@data:	
  5768                           ; 1 bytes @ 0x1
  5769                           
  5770  0071                     EEPROM_ReadByte@dir:	
  5771                           ; 1 bytes @ 0x1
  5772                           
  5773  0071                     ___bmul@multiplicand:	
  5774                           ; 1 bytes @ 0x1
  5775                           
  5776  0071                     ___lldiv@divisor:	
  5777                           ; 1 bytes @ 0x1
  5778                           
  5779                           
  5780                           ; 4 bytes @ 0x1
  5781  0071                     	ds	1
  5782  0072                     ?_I2C1_Write1ByteRegister:
  5783  0072                     ??_EEPROM_WriteByte:	
  5784                           ; 1 bytes @ 0x2
  5785                           
  5786  0072                     ??___bmul:	
  5787                           ; 1 bytes @ 0x2
  5788                           
  5789  0072                     ?_EEPROM_Read_int16:	
  5790                           ; 1 bytes @ 0x2
  5791                           
  5792  0072                     uart_tx@dato:	
  5793                           ; 2 bytes @ 0x2
  5794                           
  5795  0072                     I2C1_Write1ByteRegister@reg:	
  5796                           ; 1 bytes @ 0x2
  5797                           
  5798  0072                     EEPROM_WriteByte@dir:	
  5799                           ; 1 bytes @ 0x2
  5800                           
  5801  0072                     ___aodiv@counter:	
  5802                           ; 1 bytes @ 0x2
  5803                           
  5804  0072                     ___aomod@counter:	
  5805                           ; 1 bytes @ 0x2
  5806                           
  5807                           
  5808                           ; 1 bytes @ 0x2
  5809  0072                     	ds	1
  5810  0073                     ??_strlen:
  5811  0073                     ??_putch:	
  5812                           ; 1 bytes @ 0x3
  5813                           
  5814  0073                     putch@dato:	
  5815                           ; 1 bytes @ 0x3
  5816                           
  5817  0073                     I2C1_Write1ByteRegister@data:	
  5818                           ; 1 bytes @ 0x3
  5819                           
  5820  0073                     EEPROM_WriteByte@GIEBitValue:	
  5821                           ; 1 bytes @ 0x3
  5822                           
  5823  0073                     ___bmul@product:	
  5824                           ; 1 bytes @ 0x3
  5825                           
  5826  0073                     ___aodiv@sign:	
  5827                           ; 1 bytes @ 0x3
  5828                           
  5829  0073                     ___aomod@sign:	
  5830                           ; 1 bytes @ 0x3
  5831                           
  5832                           
  5833                           ; 1 bytes @ 0x3
  5834  0073                     	ds	1
  5835  0074                     ?_EEPROM_Write_int16:
  5836  0074                     ??_EEPROM_Read_int16:	
  5837                           ; 1 bytes @ 0x4
  5838                           
  5839  0074                     ??_I2C1_Write1ByteRegister:	
  5840                           ; 1 bytes @ 0x4
  5841                           
  5842  0074                     ?_fputc:	
  5843                           ; 1 bytes @ 0x4
  5844                           
  5845  0074                     ?_abs:	
  5846                           ; 2 bytes @ 0x4
  5847                           
  5848  0074                     I2C1_Write1ByteRegister@address:	
  5849                           ; 2 bytes @ 0x4
  5850                           
  5851  0074                     ___bmul@multiplier:	
  5852                           ; 1 bytes @ 0x4
  5853                           
  5854  0074                     strlen@a:	
  5855                           ; 1 bytes @ 0x4
  5856                           
  5857  0074                     EEPROM_Write_int16@data:	
  5858                           ; 1 bytes @ 0x4
  5859                           
  5860  0074                     abs@a:	
  5861                           ; 2 bytes @ 0x4
  5862                           
  5863  0074                     fputc@c:	
  5864                           ; 2 bytes @ 0x4
  5865                           
  5866  0074                     ___aodiv@quotient:	
  5867                           ; 2 bytes @ 0x4
  5868                           
  5869                           
  5870                           ; 8 bytes @ 0x4
  5871  0074                     	ds	1
  5872  0075                     ?_EMC1001_read:
  5873  0075                     ??_Write_PCF:	
  5874                           ; 1 bytes @ 0x5
  5875                           
  5876  0075                     EMC1001_read@TL:	
  5877                           ; 1 bytes @ 0x5
  5878                           
  5879  0075                     EEPROM_Read_int16@dir:	
  5880                           ; 1 bytes @ 0x5
  5881                           
  5882  0075                     strlen@s:	
  5883                           ; 1 bytes @ 0x5
  5884                           
  5885  0075                     ___lldiv@dividend:	
  5886                           ; 1 bytes @ 0x5
  5887                           
  5888                           
  5889                           ; 4 bytes @ 0x5
  5890  0075                     	ds	1
  5891  0076                     ??_EEPROM_Write_int16:
  5892  0076                     ??_EMC1001_read:	
  5893                           ; 1 bytes @ 0x6
  5894                           
  5895  0076                     ??_abs:	
  5896                           ; 1 bytes @ 0x6
  5897                           
  5898  0076                     Write_PCF@dato:	
  5899                           ; 1 bytes @ 0x6
  5900                           
  5901  0076                     fputc@fp:	
  5902                           ; 1 bytes @ 0x6
  5903                           
  5904  0076                     EEPROM_Read_int16@data:	
  5905                           ; 1 bytes @ 0x6
  5906                           
  5907                           
  5908                           ; 2 bytes @ 0x6
  5909  0076                     	ds	1
  5910  0077                     ??_fputc:
  5911  0077                     ?_Send_D7_D4:	
  5912                           ; 1 bytes @ 0x7
  5913                           
  5914  0077                     Send_D7_D4@nibble:	
  5915                           ; 1 bytes @ 0x7
  5916                           
  5917  0077                     EEPROM_Write_int16@dir:	
  5918                           ; 1 bytes @ 0x7
  5919                           
  5920                           
  5921                           ; 1 bytes @ 0x7
  5922  0077                     	ds	1
  5923  0078                     ??_Send_D7_D4:
  5924  0078                     EMC1001_read@TH:	
  5925                           ; 1 bytes @ 0x8
  5926                           
  5927  0078                     EEPROM_Write_int16@i:	
  5928                           ; 1 bytes @ 0x8
  5929                           
  5930  0078                     EEPROM_Read_int16@i:	
  5931                           ; 1 bytes @ 0x8
  5932                           
  5933                           
  5934                           ; 1 bytes @ 0x8
  5935  0078                     	ds	1
  5936  0079                     ??___lldiv:
  5937  0079                     Send_D7_D4@address:	
  5938                           ; 1 bytes @ 0x9
  5939                           
  5940                           
  5941                           ; 1 bytes @ 0x9
  5942  0079                     	ds	1
  5943  007A                     Send_D7_D4@datos:
  5944  007A                     serial_init@sx:	
  5945                           ; 1 bytes @ 0xA
  5946                           
  5947                           
  5948                           ; 2 bytes @ 0xA
  5949  007A                     	ds	1
  5950  007B                     ?_lcd_send_byte:
  5951  007B                     lcd_send_byte@n:	
  5952                           ; 1 bytes @ 0xB
  5953                           
  5954                           
  5955                           ; 1 bytes @ 0xB
  5956  007B                     	ds	1
  5957  007C                     ??_port_init:
  5958                           
  5959                           	psect	cstackBANK0
  5960  0020                     __pcstackBANK0:	
  5961                           ; 1 bytes @ 0xC
  5962                           
  5963  0020                     ??_lcd_send_byte:
  5964  0020                     ?_fputs:	
  5965                           ; 1 bytes @ 0x0
  5966                           
  5967  0020                     ?_ctoa:	
  5968                           ; 2 bytes @ 0x0
  5969                           
  5970  0020                     ?___aodiv:	
  5971                           ; 2 bytes @ 0x0
  5972                           
  5973  0020                     ?___aomod:	
  5974                           ; 8 bytes @ 0x0
  5975                           
  5976  0020                     ctoa@c:	
  5977                           ; 8 bytes @ 0x0
  5978                           
  5979  0020                     fputs@fp:	
  5980                           ; 1 bytes @ 0x0
  5981                           
  5982  0020                     ___lldiv@quotient:	
  5983                           ; 1 bytes @ 0x0
  5984                           
  5985  0020                     ___aodiv@divisor:	
  5986                           ; 4 bytes @ 0x0
  5987                           
  5988  0020                     ___aomod@divisor:	
  5989                           ; 8 bytes @ 0x0
  5990                           
  5991                           
  5992                           ; 8 bytes @ 0x0
  5993  0020                     	ds	1
  5994  0021                     ??_fputs:
  5995                           
  5996                           ; 1 bytes @ 0x1
  5997  0021                     	ds	1
  5998  0022                     ??_ctoa:
  5999  0022                     lcd_send_byte@address:	
  6000                           ; 1 bytes @ 0x2
  6001                           
  6002                           
  6003                           ; 1 bytes @ 0x2
  6004  0022                     	ds	1
  6005  0023                     ??_lcd_init:
  6006  0023                     ?_lcd_setCustomChar:	
  6007                           ; 1 bytes @ 0x3
  6008                           
  6009  0023                     ?_lcd_gotoxy:	
  6010                           ; 1 bytes @ 0x3
  6011                           
  6012  0023                     lcd_gotoxy@y:	
  6013                           ; 1 bytes @ 0x3
  6014                           
  6015  0023                     lcd_setCustomChar@dato:	
  6016                           ; 1 bytes @ 0x3
  6017                           
  6018                           
  6019                           ; 2 bytes @ 0x3
  6020  0023                     	ds	1
  6021  0024                     ??_lcd_gotoxy:
  6022  0024                     ___lldiv@counter:	
  6023                           ; 1 bytes @ 0x4
  6024                           
  6025  0024                     fputs@c:	
  6026                           ; 1 bytes @ 0x4
  6027                           
  6028                           
  6029                           ; 1 bytes @ 0x4
  6030  0024                     	ds	1
  6031  0025                     ?_serial_init:
  6032  0025                     lcd_init@i:	
  6033                           ; 1 bytes @ 0x5
  6034                           
  6035  0025                     lcd_setCustomChar@dir:	
  6036                           ; 1 bytes @ 0x5
  6037                           
  6038  0025                     ctoa@l:	
  6039                           ; 1 bytes @ 0x5
  6040                           
  6041  0025                     fputs@i:	
  6042                           ; 2 bytes @ 0x5
  6043                           
  6044  0025                     serial_init@baudios:	
  6045                           ; 2 bytes @ 0x5
  6046                           
  6047                           
  6048                           ; 4 bytes @ 0x5
  6049  0025                     	ds	1
  6050  0026                     ??_lcd_setCustomChar:
  6051  0026                     lcd_gotoxy@x:	
  6052                           ; 1 bytes @ 0x6
  6053                           
  6054                           
  6055                           ; 1 bytes @ 0x6
  6056  0026                     	ds	1
  6057  0027                     lcd_gotoxy@address:
  6058  0027                     fputs@s:	
  6059                           ; 1 bytes @ 0x7
  6060                           
  6061  0027                     ctoa@w:	
  6062                           ; 1 bytes @ 0x7
  6063                           
  6064                           
  6065                           ; 2 bytes @ 0x7
  6066  0027                     	ds	1
  6067  0028                     ??_lcd_puts:
  6068  0028                     ?_lcd_showCustomChar:	
  6069                           ; 1 bytes @ 0x8
  6070                           
  6071  0028                     ?_pad:	
  6072                           ; 1 bytes @ 0x8
  6073                           
  6074  0028                     lcd_setCustomChar@i:	
  6075                           ; 2 bytes @ 0x8
  6076                           
  6077  0028                     lcd_showCustomChar@y:	
  6078                           ; 1 bytes @ 0x8
  6079                           
  6080  0028                     pad@buf:	
  6081                           ; 1 bytes @ 0x8
  6082                           
  6083  0028                     ___aodiv@dividend:	
  6084                           ; 1 bytes @ 0x8
  6085                           
  6086  0028                     ___aomod@dividend:	
  6087                           ; 8 bytes @ 0x8
  6088                           
  6089                           
  6090                           ; 8 bytes @ 0x8
  6091  0028                     	ds	1
  6092  0029                     ??_serial_init:
  6093  0029                     lcd_showCustomChar@dir:	
  6094                           ; 1 bytes @ 0x9
  6095                           
  6096  0029                     ctoa@fp:	
  6097                           ; 1 bytes @ 0x9
  6098                           
  6099  0029                     pad@p:	
  6100                           ; 1 bytes @ 0x9
  6101                           
  6102                           
  6103                           ; 2 bytes @ 0x9
  6104  0029                     	ds	1
  6105  002A                     ??_lcd_showCustomChar:
  6106  002A                     lcd_puts@dato:	
  6107                           ; 1 bytes @ 0xA
  6108                           
  6109                           
  6110                           ; 1 bytes @ 0xA
  6111  002A                     	ds	1
  6112  002B                     ??_pad:
  6113  002B                     lcd_showCustomChar@x:	
  6114                           ; 1 bytes @ 0xB
  6115                           
  6116                           
  6117                           ; 1 bytes @ 0xB
  6118  002B                     	ds	1
  6119  002C                     pad@i:
  6120                           
  6121                           ; 2 bytes @ 0xC
  6122  002C                     	ds	2
  6123  002E                     pad@w:
  6124                           
  6125                           ; 2 bytes @ 0xE
  6126  002E                     	ds	2
  6127  0030                     pad@fp:
  6128                           
  6129                           ; 1 bytes @ 0x10
  6130  0030                     	ds	1
  6131  0031                     ?_dtoa:
  6132  0031                     dtoa@d:	
  6133                           ; 2 bytes @ 0x11
  6134                           
  6135                           
  6136                           ; 8 bytes @ 0x11
  6137  0031                     	ds	8
  6138  0039                     ??_dtoa:
  6139                           
  6140                           ; 1 bytes @ 0x19
  6141  0039                     	ds	3
  6142  003C                     dtoa@fp:
  6143                           
  6144                           ; 1 bytes @ 0x1C
  6145  003C                     	ds	1
  6146  003D                     _dtoa$1137:
  6147                           
  6148                           ; 2 bytes @ 0x1D
  6149  003D                     	ds	2
  6150  003F                     dtoa@p:
  6151                           
  6152                           ; 2 bytes @ 0x1F
  6153  003F                     	ds	2
  6154  0041                     dtoa@w:
  6155                           
  6156                           ; 2 bytes @ 0x21
  6157  0041                     	ds	2
  6158  0043                     dtoa@s:
  6159                           
  6160                           ; 2 bytes @ 0x23
  6161  0043                     	ds	2
  6162  0045                     dtoa@n:
  6163                           
  6164                           ; 8 bytes @ 0x25
  6165  0045                     	ds	8
  6166  004D                     dtoa@i:
  6167                           
  6168                           ; 2 bytes @ 0x2D
  6169  004D                     	ds	2
  6170  004F                     ?_vfpfcnvrt:
  6171  004F                     vfpfcnvrt@fmt:	
  6172                           ; 2 bytes @ 0x2F
  6173                           
  6174                           
  6175                           ; 1 bytes @ 0x2F
  6176  004F                     	ds	1
  6177  0050                     vfpfcnvrt@ap:
  6178                           
  6179                           ; 1 bytes @ 0x30
  6180  0050                     	ds	1
  6181  0051                     ??_vfpfcnvrt:
  6182                           
  6183                           ; 1 bytes @ 0x31
  6184  0051                     	ds	5
  6185  0056                     vfpfcnvrt@ll:
  6186                           
  6187                           ; 8 bytes @ 0x36
  6188  0056                     	ds	8
  6189  005E                     vfpfcnvrt@c:
  6190                           
  6191                           ; 1 bytes @ 0x3E
  6192  005E                     	ds	1
  6193  005F                     vfpfcnvrt@vp:
  6194                           
  6195                           ; 1 bytes @ 0x3F
  6196  005F                     	ds	1
  6197  0060                     vfpfcnvrt@fp:
  6198                           
  6199                           ; 1 bytes @ 0x40
  6200  0060                     	ds	1
  6201  0061                     ?_vfprintf:
  6202  0061                     vfprintf@fmt:	
  6203                           ; 2 bytes @ 0x41
  6204                           
  6205                           
  6206                           ; 2 bytes @ 0x41
  6207  0061                     	ds	2
  6208  0063                     vfprintf@ap:
  6209                           
  6210                           ; 1 bytes @ 0x43
  6211  0063                     	ds	1
  6212  0064                     ??_vfprintf:
  6213                           
  6214                           ; 1 bytes @ 0x44
  6215  0064                     	ds	2
  6216  0066                     vfprintf@fp:
  6217                           
  6218                           ; 1 bytes @ 0x46
  6219  0066                     	ds	1
  6220  0067                     vfprintf@cfmt:
  6221                           
  6222                           ; 2 bytes @ 0x47
  6223  0067                     	ds	2
  6224  0069                     ?_printf:
  6225  0069                     ?_sprintf:	
  6226                           ; 2 bytes @ 0x49
  6227                           
  6228  0069                     sprintf@fmt:	
  6229                           ; 2 bytes @ 0x49
  6230                           
  6231  0069                     printf@fmt:	
  6232                           ; 2 bytes @ 0x49
  6233                           
  6234                           
  6235                           ; 2 bytes @ 0x49
  6236  0069                     	ds	4
  6237  006D                     ??_printf:
  6238                           
  6239                           ; 1 bytes @ 0x4D
  6240  006D                     	ds	1
  6241  006E                     printf@ap:
  6242                           
  6243                           ; 1 bytes @ 0x4E
  6244  006E                     	ds	1
  6245                           
  6246                           	psect	maintext
  6247  0658                     __pmaintext:	
  6248 ;;
  6249 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  6250 ;;
  6251 ;; *************** function _main *****************
  6252 ;; Defined at:
  6253 ;;		line 51 in file "Main.c"
  6254 ;; Parameters:    Size  Location     Type
  6255 ;;		None
  6256 ;; Auto vars:     Size  Location     Type
  6257 ;;  eprom           2   10[BANK1 ] unsigned short 
  6258 ;; Return value:  Size  Location     Type
  6259 ;;                  1    wreg      void 
  6260 ;; Registers used:
  6261 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6262 ;; Tracked objects:
  6263 ;;		On entry : B1F/0
  6264 ;;		On exit  : 0/0
  6265 ;;		Unchanged: 0/0
  6266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6268 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6269 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6270 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6271 ;;Total ram usage:        4 bytes
  6272 ;; Hardware stack levels required when called: 10
  6273 ;; This function calls:
  6274 ;;		_EEPROM_Read_int16
  6275 ;;		_EEPROM_Write_int16
  6276 ;;		_EMC1001_read
  6277 ;;		_enable_interrupt
  6278 ;;		_lcd_init
  6279 ;;		_lcd_puts
  6280 ;;		_lcd_setCustomChar
  6281 ;;		_lcd_showCustomChar
  6282 ;;		_port_init
  6283 ;;		_printf
  6284 ;;		_sprintf
  6285 ;;		_teclado_get
  6286 ;; This function is called by:
  6287 ;;		Startup code after reset
  6288 ;; This function uses a non-reentrant model
  6289 ;;
  6290                           
  6291                           
  6292                           ;psect for function _main
  6293  0658                     _main:
  6294  0658                     l3830:	
  6295                           ;incstack = 0
  6296                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6297                           
  6298  0658                     l3832:
  6299                           
  6300                           ;Main.c: 54:     port_init();
  6301  0658  318D  252D  3186   	fcall	_port_init
  6302  065B                     l3834:
  6303                           
  6304                           ;Main.c: 56:     enable_interrupt();
  6305  065B  318A  22DF  3186   	fcall	_enable_interrupt
  6306  065E                     l3836:
  6307                           
  6308                           ;Main.c: 57:     printf("Holaaa\n\n");
  6309  065E  3045               	movlw	low (STR_1| (0+32768))
  6310  065F  0020               	movlb	0	; select bank0
  6311  0660  00E9               	movwf	printf@fmt
  6312  0661  3090               	movlw	high (STR_1| (0+32768))
  6313  0662  00EA               	movwf	printf@fmt+1
  6314  0663  318B  233D  3186   	fcall	_printf
  6315  0666                     l3838:
  6316                           
  6317                           ;Main.c: 60:     lcd_init();
  6318  0666  3186  26FA  3186   	fcall	_lcd_init
  6319  0669                     l3840:
  6320                           
  6321                           ;Main.c: 61:     sprintf(buffer,"\fhola mundo\n%i XC8\n3\n4",contador);
  6322  0669  3008               	movlw	low (STR_2| (0+32768))
  6323  066A  0020               	movlb	0	; select bank0
  6324  066B  00E9               	movwf	sprintf@fmt
  6325  066C  3090               	movlw	high (STR_2| (0+32768))
  6326  066D  00EA               	movwf	sprintf@fmt+1
  6327  066E  3000               	movlw	0
  6328  066F  00EB               	movwf	?_sprintf+2
  6329  0670  00EC               	movwf	?_sprintf+3
  6330  0671  3020               	movlw	(low (_buffer| (0+256)))& (0+255)
  6331  0672  318C  247E  3186   	fcall	_sprintf
  6332  0675                     l3842:
  6333                           
  6334                           ;Main.c: 62:     lcd_puts(buffer);
  6335  0675  3020               	movlw	(low (_buffer| (0+256)))& (0+255)
  6336  0676  318E  268E  3186   	fcall	_lcd_puts
  6337  0679                     l3844:
  6338                           
  6339                           ;Main.c: 64:     lcd_setCustomChar(Letra1,0);
  6340  0679  30E8               	movlw	low _Letra1
  6341  067A  0020               	movlb	0	; select bank0
  6342  067B  00A3               	movwf	lcd_setCustomChar@dato
  6343  067C  3000               	movlw	high _Letra1
  6344  067D  00A4               	movwf	lcd_setCustomChar@dato+1
  6345  067E  01A5               	clrf	lcd_setCustomChar@dir
  6346  067F  318C  24CD  3186   	fcall	_lcd_setCustomChar
  6347  0682                     l3846:
  6348                           
  6349                           ;Main.c: 65:  lcd_showCustomChar(12,1,0);
  6350  0682  0020               	movlb	0	; select bank0
  6351  0683  01A8               	clrf	lcd_showCustomChar@y
  6352  0684  0AA8               	incf	lcd_showCustomChar@y,f
  6353  0685  01A9               	clrf	lcd_showCustomChar@dir
  6354  0686  300C               	movlw	12
  6355  0687  318B  2363  3186   	fcall	_lcd_showCustomChar
  6356  068A                     l3848:
  6357                           
  6358                           ;Main.c: 66:  lcd_setCustomChar(Letra2,1);
  6359  068A  3000               	movlw	low (_Letra2| (0+32768))
  6360  068B  0020               	movlb	0	; select bank0
  6361  068C  00A3               	movwf	lcd_setCustomChar@dato
  6362  068D  3090               	movlw	high (_Letra2| (0+32768))
  6363  068E  00A4               	movwf	lcd_setCustomChar@dato+1
  6364  068F  01A5               	clrf	lcd_setCustomChar@dir
  6365  0690  0AA5               	incf	lcd_setCustomChar@dir,f
  6366  0691  318C  24CD  3186   	fcall	_lcd_setCustomChar
  6367  0694                     l3850:
  6368                           
  6369                           ;Main.c: 67:  lcd_showCustomChar(8,2,1);
  6370  0694  3002               	movlw	2
  6371  0695  0021               	movlb	1	; select bank1
  6372  0696  00E4               	movwf	??_main^(0+128)
  6373  0697  0864               	movf	??_main^(0+128),w
  6374  0698  0020               	movlb	0	; select bank0
  6375  0699  00A8               	movwf	lcd_showCustomChar@y
  6376  069A  01A9               	clrf	lcd_showCustomChar@dir
  6377  069B  0AA9               	incf	lcd_showCustomChar@dir,f
  6378  069C  3008               	movlw	8
  6379  069D  318B  2363  3186   	fcall	_lcd_showCustomChar
  6380  06A0                     l3852:
  6381                           
  6382                           ;Main.c: 69:     printf("Holaaa\n\n");
  6383  06A0  3045               	movlw	low (STR_1| (0+32768))
  6384  06A1  0020               	movlb	0	; select bank0
  6385  06A2  00E9               	movwf	printf@fmt
  6386  06A3  3090               	movlw	high (STR_1| (0+32768))
  6387  06A4  00EA               	movwf	printf@fmt+1
  6388  06A5  318B  233D  3186   	fcall	_printf
  6389  06A8                     l3854:
  6390                           
  6391                           ;Main.c: 70:     _delay((unsigned long)((1000)*(32000000UL/4000.0)));
  6392  06A8  3029               	movlw	41
  6393  06A9  0021               	movlb	1	; select bank1
  6394  06AA  00E5               	movwf	(??_main^(0+128)+1)
  6395  06AB  3096               	movlw	150
  6396  06AC  00E4               	movwf	??_main^(0+128)
  6397  06AD  307F               	movlw	127
  6398  06AE                     u3117:
  6399  06AE  0B89               	decfsz	9,f
  6400  06AF  2EAE               	goto	u3117
  6401  06B0  0BE4               	decfsz	??_main^(0+128),f
  6402  06B1  2EAE               	goto	u3117
  6403  06B2  0BE5               	decfsz	(??_main^(0+128)+1),f
  6404  06B3  2EAE               	goto	u3117
  6405  06B4                     l3856:
  6406                           
  6407                           ;Main.c: 71:     EEPROM_Write_int16(0,5485);
  6408  06B4  306D               	movlw	109
  6409  06B5  00F4               	movwf	EEPROM_Write_int16@data
  6410  06B6  3015               	movlw	21
  6411  06B7  00F5               	movwf	EEPROM_Write_int16@data+1
  6412  06B8  3000               	movlw	0
  6413  06B9  318B  23BE  3186   	fcall	_EEPROM_Write_int16
  6414  06BC                     l3858:
  6415                           
  6416                           ;Main.c: 76:     {;Main.c: 92:         LATA = LATA & ~(1<<3);
  6417  06BC  0020               	movlb	0	; select bank0
  6418  06BD  0816               	movf	22,w	;volatile
  6419  06BE  39F7               	andlw	247
  6420  06BF  0096               	movwf	22	;volatile
  6421  06C0                     l3860:
  6422                           
  6423                           ;Main.c: 93:         _delay((unsigned long)((500)*(32000000UL/4000.0)));
  6424  06C0  3015               	movlw	21
  6425  06C1  0021               	movlb	1	; select bank1
  6426  06C2  00E5               	movwf	(??_main^(0+128)+1)
  6427  06C3  304B               	movlw	75
  6428  06C4  00E4               	movwf	??_main^(0+128)
  6429  06C5  30BE               	movlw	190
  6430  06C6                     u3127:
  6431  06C6  0B89               	decfsz	9,f
  6432  06C7  2EC6               	goto	u3127
  6433  06C8  0BE4               	decfsz	??_main^(0+128),f
  6434  06C9  2EC6               	goto	u3127
  6435  06CA  0BE5               	decfsz	(??_main^(0+128)+1),f
  6436  06CB  2EC6               	goto	u3127
  6437  06CC  0000               	nop
  6438  06CD                     l3862:
  6439                           
  6440                           ;Main.c: 95:         LATA = LATA | (1<<3);
  6441  06CD  0020               	movlb	0	; select bank0
  6442  06CE  0816               	movf	22,w	;volatile
  6443  06CF  3808               	iorlw	8
  6444  06D0  0096               	movwf	22	;volatile
  6445  06D1                     l3864:
  6446                           
  6447                           ;Main.c: 96:         _delay((unsigned long)((500)*(32000000UL/4000.0)));
  6448  06D1  3015               	movlw	21
  6449  06D2  0021               	movlb	1	; select bank1
  6450  06D3  00E5               	movwf	(??_main^(0+128)+1)
  6451  06D4  304B               	movlw	75
  6452  06D5  00E4               	movwf	??_main^(0+128)
  6453  06D6  30BE               	movlw	190
  6454  06D7                     u3137:
  6455  06D7  0B89               	decfsz	9,f
  6456  06D8  2ED7               	goto	u3137
  6457  06D9  0BE4               	decfsz	??_main^(0+128),f
  6458  06DA  2ED7               	goto	u3137
  6459  06DB  0BE5               	decfsz	(??_main^(0+128)+1),f
  6460  06DC  2ED7               	goto	u3137
  6461  06DD  0000               	nop
  6462  06DE                     l3866:
  6463                           
  6464                           ;Main.c: 97:         eprom = EEPROM_Read_int16(0);
  6465  06DE  3000               	movlw	0
  6466  06DF  318C  2441  3186   	fcall	_EEPROM_Read_int16
  6467  06E2  0873               	movf	?_EEPROM_Read_int16+1,w
  6468  06E3  0021               	movlb	1	; select bank1
  6469  06E4  00E7               	movwf	(main@eprom+1)^(0+128)
  6470  06E5  0872               	movf	?_EEPROM_Read_int16,w
  6471  06E6  00E6               	movwf	main@eprom^(0+128)
  6472  06E7                     l3868:
  6473                           
  6474                           ;Main.c: 99:         printf("%d\n",eprom);
  6475  06E7  3052               	movlw	low ((STR_6+4)| (0+32768))
  6476  06E8  0020               	movlb	0	; select bank0
  6477  06E9  00E9               	movwf	printf@fmt
  6478  06EA  3090               	movlw	high ((STR_6+4)| (0+32768))
  6479  06EB  00EA               	movwf	printf@fmt+1
  6480  06EC  0021               	movlb	1	; select bank1
  6481  06ED  0867               	movf	(main@eprom+1)^(0+128),w
  6482  06EE  0020               	movlb	0	; select bank0
  6483  06EF  00EC               	movwf	?_printf+3
  6484  06F0  0021               	movlb	1	; select bank1
  6485  06F1  0866               	movf	main@eprom^(0+128),w
  6486  06F2  0020               	movlb	0	; select bank0
  6487  06F3  00EB               	movwf	?_printf+2
  6488  06F4  318B  233D  3186   	fcall	_printf
  6489  06F7  2EBC               	goto	l3858
  6490  06F8  3180  2812         	ljmp	start
  6491  06FA                     __end_of_main:
  6492                           
  6493                           	psect	text1
  6494  0036                     __ptext1:	
  6495 ;; *************** function _teclado_get *****************
  6496 ;; Defined at:
  6497 ;;		line 17 in file "teclado.c"
  6498 ;; Parameters:    Size  Location     Type
  6499 ;;		None
  6500 ;; Auto vars:     Size  Location     Type
  6501 ;;		None
  6502 ;; Return value:  Size  Location     Type
  6503 ;;                  1    wreg      unsigned char 
  6504 ;; Registers used:
  6505 ;;		wreg
  6506 ;; Tracked objects:
  6507 ;;		On entry : 0/0
  6508 ;;		On exit  : 0/0
  6509 ;;		Unchanged: 0/0
  6510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6513 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6514 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6515 ;;Total ram usage:        2 bytes
  6516 ;; Hardware stack levels used: 1
  6517 ;; Hardware stack levels required when called: 1
  6518 ;; This function calls:
  6519 ;;		Nothing
  6520 ;; This function is called by:
  6521 ;;		_main
  6522 ;; This function uses a non-reentrant model
  6523 ;;
  6524                           
  6525                           
  6526                           ;psect for function _teclado_get
  6527  0036                     _teclado_get:
  6528  0036                     l3066:	
  6529                           ;incstack = 0
  6530                           ; Regs used in _teclado_get: [wreg]
  6531                           
  6532                           
  6533                           ;teclado.c: 18:     LATAbits.LATA0 = 0; LATAbits.LATA1 = 1; LATAbits.LATA2 = 1; LATAbits
      +                          .LATA3 = 1;
  6534  0036  0020               	movlb	0	; select bank0
  6535  0037  1016               	bcf	22,0	;volatile
  6536  0038  1496               	bsf	22,1	;volatile
  6537  0039  1516               	bsf	22,2	;volatile
  6538  003A  1596               	bsf	22,3	;volatile
  6539  003B                     l3068:
  6540                           
  6541                           ;teclado.c: 19:             _delay((unsigned long)((10)*(32000000UL/4000000.0)));
  6542  003B  301A               	movlw	26
  6543  003C                     u3147:
  6544  003C  0B89               	decfsz	9,f
  6545  003D  283C               	goto	u3147
  6546  003E  3200               	nop2
  6547  003F                     l3070:
  6548                           
  6549                           ;teclado.c: 20:             if (PORTBbits.RB1 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB1==0){}; return '1'; }
  6550  003F  0020               	movlb	0	; select bank0
  6551  0040  188D               	btfsc	13,1	;volatile
  6552  0041  2843               	goto	u2311
  6553  0042  2844               	goto	u2310
  6554  0043                     u2311:
  6555  0043  2857               	goto	l397
  6556  0044                     u2310:
  6557  0044                     l3072:
  6558  0044  3005               	movlw	5
  6559  0045  00F2               	movwf	??_teclado_get+1
  6560  0046  300F               	movlw	15
  6561  0047  00F1               	movwf	??_teclado_get
  6562  0048  30F1               	movlw	241
  6563  0049                     u3157:
  6564  0049  0B89               	decfsz	9,f
  6565  004A  2849               	goto	u3157
  6566  004B  0BF1               	decfsz	??_teclado_get,f
  6567  004C  2849               	goto	u3157
  6568  004D  0BF2               	decfsz	??_teclado_get+1,f
  6569  004E  2849               	goto	u3157
  6570  004F  0000               	nop
  6571  0050                     l398:
  6572  0050  0020               	movlb	0	; select bank0
  6573  0051  1C8D               	btfss	13,1	;volatile
  6574  0052  2854               	goto	u2321
  6575  0053  2855               	goto	u2320
  6576  0054                     u2321:
  6577  0054  2850               	goto	l398
  6578  0055                     u2320:
  6579  0055                     l3074:
  6580  0055  3031               	movlw	49
  6581  0056  29C2               	goto	l401
  6582  0057                     l397:
  6583                           
  6584                           ;teclado.c: 21:             if (PORTBbits.RB2 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB2==0){}; return '2'; }
  6585  0057  190D               	btfsc	13,2	;volatile
  6586  0058  285A               	goto	u2331
  6587  0059  285B               	goto	u2330
  6588  005A                     u2331:
  6589  005A  286E               	goto	l402
  6590  005B                     u2330:
  6591  005B                     l3078:
  6592  005B  3005               	movlw	5
  6593  005C  00F2               	movwf	??_teclado_get+1
  6594  005D  300F               	movlw	15
  6595  005E  00F1               	movwf	??_teclado_get
  6596  005F  30F1               	movlw	241
  6597  0060                     u3167:
  6598  0060  0B89               	decfsz	9,f
  6599  0061  2860               	goto	u3167
  6600  0062  0BF1               	decfsz	??_teclado_get,f
  6601  0063  2860               	goto	u3167
  6602  0064  0BF2               	decfsz	??_teclado_get+1,f
  6603  0065  2860               	goto	u3167
  6604  0066  0000               	nop
  6605  0067                     l403:
  6606  0067  0020               	movlb	0	; select bank0
  6607  0068  1D0D               	btfss	13,2	;volatile
  6608  0069  286B               	goto	u2341
  6609  006A  286C               	goto	u2340
  6610  006B                     u2341:
  6611  006B  2867               	goto	l403
  6612  006C                     u2340:
  6613  006C                     l3080:
  6614  006C  3032               	movlw	50
  6615  006D  29C2               	goto	l401
  6616  006E                     l402:
  6617                           
  6618                           ;teclado.c: 22:             if (PORTBbits.RB3 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB3==0){}; return '3'; }
  6619  006E  198D               	btfsc	13,3	;volatile
  6620  006F  2871               	goto	u2351
  6621  0070  2872               	goto	u2350
  6622  0071                     u2351:
  6623  0071  2885               	goto	l406
  6624  0072                     u2350:
  6625  0072                     l3084:
  6626  0072  3005               	movlw	5
  6627  0073  00F2               	movwf	??_teclado_get+1
  6628  0074  300F               	movlw	15
  6629  0075  00F1               	movwf	??_teclado_get
  6630  0076  30F1               	movlw	241
  6631  0077                     u3177:
  6632  0077  0B89               	decfsz	9,f
  6633  0078  2877               	goto	u3177
  6634  0079  0BF1               	decfsz	??_teclado_get,f
  6635  007A  2877               	goto	u3177
  6636  007B  0BF2               	decfsz	??_teclado_get+1,f
  6637  007C  2877               	goto	u3177
  6638  007D  0000               	nop
  6639  007E                     l407:
  6640  007E  0020               	movlb	0	; select bank0
  6641  007F  1D8D               	btfss	13,3	;volatile
  6642  0080  2882               	goto	u2361
  6643  0081  2883               	goto	u2360
  6644  0082                     u2361:
  6645  0082  287E               	goto	l407
  6646  0083                     u2360:
  6647  0083                     l3086:
  6648  0083  3033               	movlw	51
  6649  0084  29C2               	goto	l401
  6650  0085                     l406:
  6651                           
  6652                           ;teclado.c: 23:             if (PORTBbits.RB4 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB4==0){}; return 'A'; }
  6653  0085  1A0D               	btfsc	13,4	;volatile
  6654  0086  2888               	goto	u2371
  6655  0087  2889               	goto	u2370
  6656  0088                     u2371:
  6657  0088  289C               	goto	l410
  6658  0089                     u2370:
  6659  0089                     l3090:
  6660  0089  3005               	movlw	5
  6661  008A  00F2               	movwf	??_teclado_get+1
  6662  008B  300F               	movlw	15
  6663  008C  00F1               	movwf	??_teclado_get
  6664  008D  30F1               	movlw	241
  6665  008E                     u3187:
  6666  008E  0B89               	decfsz	9,f
  6667  008F  288E               	goto	u3187
  6668  0090  0BF1               	decfsz	??_teclado_get,f
  6669  0091  288E               	goto	u3187
  6670  0092  0BF2               	decfsz	??_teclado_get+1,f
  6671  0093  288E               	goto	u3187
  6672  0094  0000               	nop
  6673  0095                     l411:
  6674  0095  0020               	movlb	0	; select bank0
  6675  0096  1E0D               	btfss	13,4	;volatile
  6676  0097  2899               	goto	u2381
  6677  0098  289A               	goto	u2380
  6678  0099                     u2381:
  6679  0099  2895               	goto	l411
  6680  009A                     u2380:
  6681  009A                     l3092:
  6682  009A  3041               	movlw	65
  6683  009B  29C2               	goto	l401
  6684  009C                     l410:
  6685                           
  6686                           ;teclado.c: 25:             LATAbits.LATA0 = 1; LATAbits.LATA1 = 0; LATAbits.LATA2 = 1; 
      +                          LATAbits.LATA3 = 1;
  6687  009C  1416               	bsf	22,0	;volatile
  6688  009D  1096               	bcf	22,1	;volatile
  6689  009E  1516               	bsf	22,2	;volatile
  6690  009F  1596               	bsf	22,3	;volatile
  6691                           
  6692                           ;teclado.c: 27:             if (PORTBbits.RB1 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB1==0){}; return '4'; }
  6693  00A0  188D               	btfsc	13,1	;volatile
  6694  00A1  28A3               	goto	u2391
  6695  00A2  28A4               	goto	u2390
  6696  00A3                     u2391:
  6697  00A3  28B7               	goto	l414
  6698  00A4                     u2390:
  6699  00A4                     l3096:
  6700  00A4  3005               	movlw	5
  6701  00A5  00F2               	movwf	??_teclado_get+1
  6702  00A6  300F               	movlw	15
  6703  00A7  00F1               	movwf	??_teclado_get
  6704  00A8  30F1               	movlw	241
  6705  00A9                     u3197:
  6706  00A9  0B89               	decfsz	9,f
  6707  00AA  28A9               	goto	u3197
  6708  00AB  0BF1               	decfsz	??_teclado_get,f
  6709  00AC  28A9               	goto	u3197
  6710  00AD  0BF2               	decfsz	??_teclado_get+1,f
  6711  00AE  28A9               	goto	u3197
  6712  00AF  0000               	nop
  6713  00B0                     l415:
  6714  00B0  0020               	movlb	0	; select bank0
  6715  00B1  1C8D               	btfss	13,1	;volatile
  6716  00B2  28B4               	goto	u2401
  6717  00B3  28B5               	goto	u2400
  6718  00B4                     u2401:
  6719  00B4  28B0               	goto	l415
  6720  00B5                     u2400:
  6721  00B5                     l3098:
  6722  00B5  3034               	movlw	52
  6723  00B6  29C2               	goto	l401
  6724  00B7                     l414:
  6725                           
  6726                           ;teclado.c: 28:             if (PORTBbits.RB2 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB2==0){}; return '5'; }
  6727  00B7  190D               	btfsc	13,2	;volatile
  6728  00B8  28BA               	goto	u2411
  6729  00B9  28BB               	goto	u2410
  6730  00BA                     u2411:
  6731  00BA  28CE               	goto	l418
  6732  00BB                     u2410:
  6733  00BB                     l3102:
  6734  00BB  3005               	movlw	5
  6735  00BC  00F2               	movwf	??_teclado_get+1
  6736  00BD  300F               	movlw	15
  6737  00BE  00F1               	movwf	??_teclado_get
  6738  00BF  30F1               	movlw	241
  6739  00C0                     u3207:
  6740  00C0  0B89               	decfsz	9,f
  6741  00C1  28C0               	goto	u3207
  6742  00C2  0BF1               	decfsz	??_teclado_get,f
  6743  00C3  28C0               	goto	u3207
  6744  00C4  0BF2               	decfsz	??_teclado_get+1,f
  6745  00C5  28C0               	goto	u3207
  6746  00C6  0000               	nop
  6747  00C7                     l419:
  6748  00C7  0020               	movlb	0	; select bank0
  6749  00C8  1D0D               	btfss	13,2	;volatile
  6750  00C9  28CB               	goto	u2421
  6751  00CA  28CC               	goto	u2420
  6752  00CB                     u2421:
  6753  00CB  28C7               	goto	l419
  6754  00CC                     u2420:
  6755  00CC                     l3104:
  6756  00CC  3035               	movlw	53
  6757  00CD  29C2               	goto	l401
  6758  00CE                     l418:
  6759                           
  6760                           ;teclado.c: 29:             if (PORTBbits.RB3 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB3==0){}; return '6'; }
  6761  00CE  198D               	btfsc	13,3	;volatile
  6762  00CF  28D1               	goto	u2431
  6763  00D0  28D2               	goto	u2430
  6764  00D1                     u2431:
  6765  00D1  28E5               	goto	l422
  6766  00D2                     u2430:
  6767  00D2                     l3108:
  6768  00D2  3005               	movlw	5
  6769  00D3  00F2               	movwf	??_teclado_get+1
  6770  00D4  300F               	movlw	15
  6771  00D5  00F1               	movwf	??_teclado_get
  6772  00D6  30F1               	movlw	241
  6773  00D7                     u3217:
  6774  00D7  0B89               	decfsz	9,f
  6775  00D8  28D7               	goto	u3217
  6776  00D9  0BF1               	decfsz	??_teclado_get,f
  6777  00DA  28D7               	goto	u3217
  6778  00DB  0BF2               	decfsz	??_teclado_get+1,f
  6779  00DC  28D7               	goto	u3217
  6780  00DD  0000               	nop
  6781  00DE                     l423:
  6782  00DE  0020               	movlb	0	; select bank0
  6783  00DF  1D8D               	btfss	13,3	;volatile
  6784  00E0  28E2               	goto	u2441
  6785  00E1  28E3               	goto	u2440
  6786  00E2                     u2441:
  6787  00E2  28DE               	goto	l423
  6788  00E3                     u2440:
  6789  00E3                     l3110:
  6790  00E3  3036               	movlw	54
  6791  00E4  29C2               	goto	l401
  6792  00E5                     l422:
  6793                           
  6794                           ;teclado.c: 30:             if (PORTBbits.RB4 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB4==0){}; return 'B'; }
  6795  00E5  1A0D               	btfsc	13,4	;volatile
  6796  00E6  28E8               	goto	u2451
  6797  00E7  28E9               	goto	u2450
  6798  00E8                     u2451:
  6799  00E8  28FC               	goto	l426
  6800  00E9                     u2450:
  6801  00E9                     l3114:
  6802  00E9  3005               	movlw	5
  6803  00EA  00F2               	movwf	??_teclado_get+1
  6804  00EB  300F               	movlw	15
  6805  00EC  00F1               	movwf	??_teclado_get
  6806  00ED  30F1               	movlw	241
  6807  00EE                     u3227:
  6808  00EE  0B89               	decfsz	9,f
  6809  00EF  28EE               	goto	u3227
  6810  00F0  0BF1               	decfsz	??_teclado_get,f
  6811  00F1  28EE               	goto	u3227
  6812  00F2  0BF2               	decfsz	??_teclado_get+1,f
  6813  00F3  28EE               	goto	u3227
  6814  00F4  0000               	nop
  6815  00F5                     l427:
  6816  00F5  0020               	movlb	0	; select bank0
  6817  00F6  1E0D               	btfss	13,4	;volatile
  6818  00F7  28F9               	goto	u2461
  6819  00F8  28FA               	goto	u2460
  6820  00F9                     u2461:
  6821  00F9  28F5               	goto	l427
  6822  00FA                     u2460:
  6823  00FA                     l3116:
  6824  00FA  3042               	movlw	66
  6825  00FB  29C2               	goto	l401
  6826  00FC                     l426:
  6827                           
  6828                           ;teclado.c: 32:             LATAbits.LATA0 = 1; LATAbits.LATA1 = 1; LATAbits.LATA2 = 0; 
      +                          LATAbits.LATA3 = 1;
  6829  00FC  1416               	bsf	22,0	;volatile
  6830  00FD  1496               	bsf	22,1	;volatile
  6831  00FE  1116               	bcf	22,2	;volatile
  6832  00FF  1596               	bsf	22,3	;volatile
  6833                           
  6834                           ;teclado.c: 34:             if (PORTBbits.RB1 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB1==0){}; return '7'; }
  6835  0100  188D               	btfsc	13,1	;volatile
  6836  0101  2903               	goto	u2471
  6837  0102  2904               	goto	u2470
  6838  0103                     u2471:
  6839  0103  2917               	goto	l430
  6840  0104                     u2470:
  6841  0104                     l3120:
  6842  0104  3005               	movlw	5
  6843  0105  00F2               	movwf	??_teclado_get+1
  6844  0106  300F               	movlw	15
  6845  0107  00F1               	movwf	??_teclado_get
  6846  0108  30F1               	movlw	241
  6847  0109                     u3237:
  6848  0109  0B89               	decfsz	9,f
  6849  010A  2909               	goto	u3237
  6850  010B  0BF1               	decfsz	??_teclado_get,f
  6851  010C  2909               	goto	u3237
  6852  010D  0BF2               	decfsz	??_teclado_get+1,f
  6853  010E  2909               	goto	u3237
  6854  010F  0000               	nop
  6855  0110                     l431:
  6856  0110  0020               	movlb	0	; select bank0
  6857  0111  1C8D               	btfss	13,1	;volatile
  6858  0112  2914               	goto	u2481
  6859  0113  2915               	goto	u2480
  6860  0114                     u2481:
  6861  0114  2910               	goto	l431
  6862  0115                     u2480:
  6863  0115                     l3122:
  6864  0115  3037               	movlw	55
  6865  0116  29C2               	goto	l401
  6866  0117                     l430:
  6867                           
  6868                           ;teclado.c: 35:             if (PORTBbits.RB2 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB2==0){}; return '8'; }
  6869  0117  190D               	btfsc	13,2	;volatile
  6870  0118  291A               	goto	u2491
  6871  0119  291B               	goto	u2490
  6872  011A                     u2491:
  6873  011A  292E               	goto	l434
  6874  011B                     u2490:
  6875  011B                     l3126:
  6876  011B  3005               	movlw	5
  6877  011C  00F2               	movwf	??_teclado_get+1
  6878  011D  300F               	movlw	15
  6879  011E  00F1               	movwf	??_teclado_get
  6880  011F  30F1               	movlw	241
  6881  0120                     u3247:
  6882  0120  0B89               	decfsz	9,f
  6883  0121  2920               	goto	u3247
  6884  0122  0BF1               	decfsz	??_teclado_get,f
  6885  0123  2920               	goto	u3247
  6886  0124  0BF2               	decfsz	??_teclado_get+1,f
  6887  0125  2920               	goto	u3247
  6888  0126  0000               	nop
  6889  0127                     l435:
  6890  0127  0020               	movlb	0	; select bank0
  6891  0128  1D0D               	btfss	13,2	;volatile
  6892  0129  292B               	goto	u2501
  6893  012A  292C               	goto	u2500
  6894  012B                     u2501:
  6895  012B  2927               	goto	l435
  6896  012C                     u2500:
  6897  012C                     l3128:
  6898  012C  3038               	movlw	56
  6899  012D  29C2               	goto	l401
  6900  012E                     l434:
  6901                           
  6902                           ;teclado.c: 36:             if (PORTBbits.RB3 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB3==0){}; return '9'; }
  6903  012E  198D               	btfsc	13,3	;volatile
  6904  012F  2931               	goto	u2511
  6905  0130  2932               	goto	u2510
  6906  0131                     u2511:
  6907  0131  2945               	goto	l438
  6908  0132                     u2510:
  6909  0132                     l3132:
  6910  0132  3005               	movlw	5
  6911  0133  00F2               	movwf	??_teclado_get+1
  6912  0134  300F               	movlw	15
  6913  0135  00F1               	movwf	??_teclado_get
  6914  0136  30F1               	movlw	241
  6915  0137                     u3257:
  6916  0137  0B89               	decfsz	9,f
  6917  0138  2937               	goto	u3257
  6918  0139  0BF1               	decfsz	??_teclado_get,f
  6919  013A  2937               	goto	u3257
  6920  013B  0BF2               	decfsz	??_teclado_get+1,f
  6921  013C  2937               	goto	u3257
  6922  013D  0000               	nop
  6923  013E                     l439:
  6924  013E  0020               	movlb	0	; select bank0
  6925  013F  1D8D               	btfss	13,3	;volatile
  6926  0140  2942               	goto	u2521
  6927  0141  2943               	goto	u2520
  6928  0142                     u2521:
  6929  0142  293E               	goto	l439
  6930  0143                     u2520:
  6931  0143                     l3134:
  6932  0143  3039               	movlw	57
  6933  0144  29C2               	goto	l401
  6934  0145                     l438:
  6935                           
  6936                           ;teclado.c: 37:             if (PORTBbits.RB4 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB4==0){}; return 'C'; }
  6937  0145  1A0D               	btfsc	13,4	;volatile
  6938  0146  2948               	goto	u2531
  6939  0147  2949               	goto	u2530
  6940  0148                     u2531:
  6941  0148  295C               	goto	l442
  6942  0149                     u2530:
  6943  0149                     l3138:
  6944  0149  3005               	movlw	5
  6945  014A  00F2               	movwf	??_teclado_get+1
  6946  014B  300F               	movlw	15
  6947  014C  00F1               	movwf	??_teclado_get
  6948  014D  30F1               	movlw	241
  6949  014E                     u3267:
  6950  014E  0B89               	decfsz	9,f
  6951  014F  294E               	goto	u3267
  6952  0150  0BF1               	decfsz	??_teclado_get,f
  6953  0151  294E               	goto	u3267
  6954  0152  0BF2               	decfsz	??_teclado_get+1,f
  6955  0153  294E               	goto	u3267
  6956  0154  0000               	nop
  6957  0155                     l443:
  6958  0155  0020               	movlb	0	; select bank0
  6959  0156  1E0D               	btfss	13,4	;volatile
  6960  0157  2959               	goto	u2541
  6961  0158  295A               	goto	u2540
  6962  0159                     u2541:
  6963  0159  2955               	goto	l443
  6964  015A                     u2540:
  6965  015A                     l3140:
  6966  015A  3043               	movlw	67
  6967  015B  29C2               	goto	l401
  6968  015C                     l442:
  6969                           
  6970                           ;teclado.c: 39:             LATAbits.LATA0 = 1; LATAbits.LATA1 = 1; LATAbits.LATA2 = 1; 
      +                          LATAbits.LATA3 = 0;
  6971  015C  1416               	bsf	22,0	;volatile
  6972  015D  1496               	bsf	22,1	;volatile
  6973  015E  1516               	bsf	22,2	;volatile
  6974  015F  1196               	bcf	22,3	;volatile
  6975  0160                     l3144:
  6976                           
  6977                           ;teclado.c: 40:             _delay((unsigned long)((10)*(32000000UL/4000000.0)));
  6978  0160  301A               	movlw	26
  6979  0161                     u3277:
  6980  0161  0B89               	decfsz	9,f
  6981  0162  2961               	goto	u3277
  6982  0163  3200               	nop2
  6983  0164                     l3146:
  6984                           
  6985                           ;teclado.c: 41:             if (PORTBbits.RB1 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB1==0){}; return '*'; }
  6986  0164  0020               	movlb	0	; select bank0
  6987  0165  188D               	btfsc	13,1	;volatile
  6988  0166  2968               	goto	u2551
  6989  0167  2969               	goto	u2550
  6990  0168                     u2551:
  6991  0168  297C               	goto	l446
  6992  0169                     u2550:
  6993  0169                     l3148:
  6994  0169  3005               	movlw	5
  6995  016A  00F2               	movwf	??_teclado_get+1
  6996  016B  300F               	movlw	15
  6997  016C  00F1               	movwf	??_teclado_get
  6998  016D  30F1               	movlw	241
  6999  016E                     u3287:
  7000  016E  0B89               	decfsz	9,f
  7001  016F  296E               	goto	u3287
  7002  0170  0BF1               	decfsz	??_teclado_get,f
  7003  0171  296E               	goto	u3287
  7004  0172  0BF2               	decfsz	??_teclado_get+1,f
  7005  0173  296E               	goto	u3287
  7006  0174  0000               	nop
  7007  0175                     l447:
  7008  0175  0020               	movlb	0	; select bank0
  7009  0176  1C8D               	btfss	13,1	;volatile
  7010  0177  2979               	goto	u2561
  7011  0178  297A               	goto	u2560
  7012  0179                     u2561:
  7013  0179  2975               	goto	l447
  7014  017A                     u2560:
  7015  017A                     l3150:
  7016  017A  302A               	movlw	42
  7017  017B  29C2               	goto	l401
  7018  017C                     l446:
  7019                           
  7020                           ;teclado.c: 42:             if (PORTBbits.RB2 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB2==0){}; return '0'; }
  7021  017C  190D               	btfsc	13,2	;volatile
  7022  017D  297F               	goto	u2571
  7023  017E  2980               	goto	u2570
  7024  017F                     u2571:
  7025  017F  2993               	goto	l450
  7026  0180                     u2570:
  7027  0180                     l3154:
  7028  0180  3005               	movlw	5
  7029  0181  00F2               	movwf	??_teclado_get+1
  7030  0182  300F               	movlw	15
  7031  0183  00F1               	movwf	??_teclado_get
  7032  0184  30F1               	movlw	241
  7033  0185                     u3297:
  7034  0185  0B89               	decfsz	9,f
  7035  0186  2985               	goto	u3297
  7036  0187  0BF1               	decfsz	??_teclado_get,f
  7037  0188  2985               	goto	u3297
  7038  0189  0BF2               	decfsz	??_teclado_get+1,f
  7039  018A  2985               	goto	u3297
  7040  018B  0000               	nop
  7041  018C                     l451:
  7042  018C  0020               	movlb	0	; select bank0
  7043  018D  1D0D               	btfss	13,2	;volatile
  7044  018E  2990               	goto	u2581
  7045  018F  2991               	goto	u2580
  7046  0190                     u2581:
  7047  0190  298C               	goto	l451
  7048  0191                     u2580:
  7049  0191                     l3156:
  7050  0191  3030               	movlw	48
  7051  0192  29C2               	goto	l401
  7052  0193                     l450:
  7053                           
  7054                           ;teclado.c: 43:             if (PORTBbits.RB3 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB3==0){}; return '#'; }
  7055  0193  198D               	btfsc	13,3	;volatile
  7056  0194  2996               	goto	u2591
  7057  0195  2997               	goto	u2590
  7058  0196                     u2591:
  7059  0196  29AA               	goto	l454
  7060  0197                     u2590:
  7061  0197                     l3160:
  7062  0197  3005               	movlw	5
  7063  0198  00F2               	movwf	??_teclado_get+1
  7064  0199  300F               	movlw	15
  7065  019A  00F1               	movwf	??_teclado_get
  7066  019B  30F1               	movlw	241
  7067  019C                     u3307:
  7068  019C  0B89               	decfsz	9,f
  7069  019D  299C               	goto	u3307
  7070  019E  0BF1               	decfsz	??_teclado_get,f
  7071  019F  299C               	goto	u3307
  7072  01A0  0BF2               	decfsz	??_teclado_get+1,f
  7073  01A1  299C               	goto	u3307
  7074  01A2  0000               	nop
  7075  01A3                     l455:
  7076  01A3  0020               	movlb	0	; select bank0
  7077  01A4  1D8D               	btfss	13,3	;volatile
  7078  01A5  29A7               	goto	u2601
  7079  01A6  29A8               	goto	u2600
  7080  01A7                     u2601:
  7081  01A7  29A3               	goto	l455
  7082  01A8                     u2600:
  7083  01A8                     l3162:
  7084  01A8  3023               	movlw	35
  7085  01A9  29C2               	goto	l401
  7086  01AA                     l454:
  7087                           
  7088                           ;teclado.c: 44:             if (PORTBbits.RB4 == 0) { _delay((unsigned long)((100)*(3200
      +                          0000UL/4000.0))); while (PORTBbits.RB4==0){}; return 'D'; }
  7089  01AA  1A0D               	btfsc	13,4	;volatile
  7090  01AB  29AD               	goto	u2611
  7091  01AC  29AE               	goto	u2610
  7092  01AD                     u2611:
  7093  01AD  29C1               	goto	l3172
  7094  01AE                     u2610:
  7095  01AE                     l3166:
  7096  01AE  3005               	movlw	5
  7097  01AF  00F2               	movwf	??_teclado_get+1
  7098  01B0  300F               	movlw	15
  7099  01B1  00F1               	movwf	??_teclado_get
  7100  01B2  30F1               	movlw	241
  7101  01B3                     u3317:
  7102  01B3  0B89               	decfsz	9,f
  7103  01B4  29B3               	goto	u3317
  7104  01B5  0BF1               	decfsz	??_teclado_get,f
  7105  01B6  29B3               	goto	u3317
  7106  01B7  0BF2               	decfsz	??_teclado_get+1,f
  7107  01B8  29B3               	goto	u3317
  7108  01B9  0000               	nop
  7109  01BA                     l459:
  7110  01BA  0020               	movlb	0	; select bank0
  7111  01BB  1E0D               	btfss	13,4	;volatile
  7112  01BC  29BE               	goto	u2621
  7113  01BD  29BF               	goto	u2620
  7114  01BE                     u2621:
  7115  01BE  29BA               	goto	l459
  7116  01BF                     u2620:
  7117  01BF                     l3168:
  7118  01BF  3044               	movlw	68
  7119  01C0  29C2               	goto	l401
  7120  01C1                     l3172:
  7121                           
  7122                           ;teclado.c: 46:     return 0;
  7123  01C1  3000               	movlw	0
  7124  01C2                     l401:
  7125  01C2  0008               	return
  7126  01C3                     __end_of_teclado_get:
  7127                           
  7128                           	psect	text2
  7129  0C7E                     __ptext2:	
  7130 ;; *************** function _sprintf *****************
  7131 ;; Defined at:
  7132 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  7133 ;; Parameters:    Size  Location     Type
  7134 ;;  s               1    wreg     PTR unsigned char 
  7135 ;;		 -> buffer(50), 
  7136 ;;  fmt             2   73[BANK0 ] PTR const unsigned char 
  7137 ;;		 -> STR_6(8), STR_5(7), STR_2(23), 
  7138 ;; Auto vars:     Size  Location     Type
  7139 ;;  s               1    1[BANK1 ] PTR unsigned char 
  7140 ;;		 -> buffer(50), 
  7141 ;;  f               5    3[BANK1 ] struct _IO_FILE
  7142 ;;  ret             2    0        int 
  7143 ;;  ap              1    2[BANK1 ] PTR void [1]
  7144 ;;		 -> ?_printf(2), ?_sprintf(2), 
  7145 ;; Return value:  Size  Location     Type
  7146 ;;                  2   73[BANK0 ] int 
  7147 ;; Registers used:
  7148 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7149 ;; Tracked objects:
  7150 ;;		On entry : 0/0
  7151 ;;		On exit  : 0/0
  7152 ;;		Unchanged: 0/0
  7153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7154 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7155 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  7156 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7157 ;;      Totals:         0       6       8       0       0       0       0       0       0       0       0       0       
      +0       0
  7158 ;;Total ram usage:       14 bytes
  7159 ;; Hardware stack levels used: 1
  7160 ;; Hardware stack levels required when called: 9
  7161 ;; This function calls:
  7162 ;;		_vfprintf
  7163 ;; This function is called by:
  7164 ;;		_main
  7165 ;; This function uses a non-reentrant model
  7166 ;;
  7167                           
  7168                           
  7169                           ;psect for function _sprintf
  7170  0C7E                     _sprintf:
  7171                           
  7172                           ;incstack = 0
  7173                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7174                           ;sprintf@s stored from wreg
  7175  0C7E  0021               	movlb	1	; select bank1
  7176  0C7F  00DD               	movwf	sprintf@s^(0+128)
  7177  0C80                     l3736:
  7178  0C80  306B               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  7179  0C81  00DC               	movwf	??_sprintf^(0+128)
  7180  0C82  085C               	movf	??_sprintf^(0+128),w
  7181  0C83  00DE               	movwf	sprintf@ap^(0+128)
  7182  0C84  085D               	movf	sprintf@s^(0+128),w
  7183  0C85  00DC               	movwf	??_sprintf^(0+128)
  7184  0C86  085C               	movf	??_sprintf^(0+128),w
  7185  0C87  00DF               	movwf	sprintf@f^(0+128)
  7186  0C88                     l3738:
  7187  0C88  01E0               	clrf	(sprintf@f^(0+128)+1)
  7188  0C89  01E1               	clrf	((sprintf@f+1)^(0+128)+1)
  7189  0C8A                     l3740:
  7190  0C8A  01E2               	clrf	(sprintf@f^(0+128)+3)
  7191  0C8B  01E3               	clrf	((sprintf@f+1)^(0+128)+3)
  7192  0C8C                     l3742:
  7193  0C8C  0020               	movlb	0	; select bank0
  7194  0C8D  086A               	movf	sprintf@fmt+1,w
  7195  0C8E  00E2               	movwf	vfprintf@fmt+1
  7196  0C8F  0869               	movf	sprintf@fmt,w
  7197  0C90  00E1               	movwf	vfprintf@fmt
  7198  0C91  30DE               	movlw	(low (sprintf@ap| 0))& (0+255)
  7199  0C92  0021               	movlb	1	; select bank1
  7200  0C93  00DC               	movwf	??_sprintf^(0+128)
  7201  0C94  085C               	movf	??_sprintf^(0+128),w
  7202  0C95  0020               	movlb	0	; select bank0
  7203  0C96  00E3               	movwf	vfprintf@ap
  7204  0C97  30DF               	movlw	(low (sprintf@f| 0))& (0+255)
  7205  0C98  318C  24FC  318C   	fcall	_vfprintf
  7206  0C9B                     l3744:
  7207  0C9B  0021               	movlb	1	; select bank1
  7208  0C9C  0860               	movf	(sprintf@f^(0+128)+1),w
  7209  0C9D  075D               	addwf	sprintf@s^(0+128),w
  7210  0C9E  00DC               	movwf	??_sprintf^(0+128)
  7211  0C9F  085C               	movf	??_sprintf^(0+128),w
  7212  0CA0  0086               	movwf	6
  7213  0CA1  3001               	movlw	1	; select bank2/3
  7214  0CA2  0087               	movwf	7
  7215  0CA3  0181               	clrf	1
  7216  0CA4                     l1154:
  7217  0CA4  0008               	return
  7218  0CA5                     __end_of_sprintf:
  7219                           
  7220                           	psect	text3
  7221  0B3D                     __ptext3:	
  7222 ;; *************** function _printf *****************
  7223 ;; Defined at:
  7224 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  7225 ;; Parameters:    Size  Location     Type
  7226 ;;  fmt             2   73[BANK0 ] PTR const unsigned char 
  7227 ;;		 -> STR_7(22), STR_4(4), STR_3(9), buffer(50), 
  7228 ;;		 -> STR_1(9), 
  7229 ;; Auto vars:     Size  Location     Type
  7230 ;;  ret             2    0        int 
  7231 ;;  ap              1   78[BANK0 ] PTR void [1]
  7232 ;;		 -> ?_printf(2), ?_sprintf(2), 
  7233 ;; Return value:  Size  Location     Type
  7234 ;;                  2   73[BANK0 ] int 
  7235 ;; Registers used:
  7236 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7237 ;; Tracked objects:
  7238 ;;		On entry : 0/0
  7239 ;;		On exit  : 0/0
  7240 ;;		Unchanged: 0/0
  7241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7242 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7243 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7244 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7245 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7246 ;;Total ram usage:        6 bytes
  7247 ;; Hardware stack levels used: 1
  7248 ;; Hardware stack levels required when called: 9
  7249 ;; This function calls:
  7250 ;;		_vfprintf
  7251 ;; This function is called by:
  7252 ;;		_main
  7253 ;; This function uses a non-reentrant model
  7254 ;;
  7255                           
  7256                           
  7257                           ;psect for function _printf
  7258  0B3D                     _printf:
  7259  0B3D                     l3694:	
  7260                           ;incstack = 0
  7261                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7262                           
  7263  0B3D  306B               	movlw	(low ((?_printf| 0+2)))& (0+255)
  7264  0B3E  0020               	movlb	0	; select bank0
  7265  0B3F  00ED               	movwf	??_printf
  7266  0B40  086D               	movf	??_printf,w
  7267  0B41  00EE               	movwf	printf@ap
  7268  0B42                     l3696:
  7269  0B42  086A               	movf	printf@fmt+1,w
  7270  0B43  00E2               	movwf	vfprintf@fmt+1
  7271  0B44  0869               	movf	printf@fmt,w
  7272  0B45  00E1               	movwf	vfprintf@fmt
  7273  0B46  306E               	movlw	(low (printf@ap| 0))& (0+255)
  7274  0B47  00ED               	movwf	??_printf
  7275  0B48  086D               	movf	??_printf,w
  7276  0B49  00E3               	movwf	vfprintf@ap
  7277  0B4A  3000               	movlw	0
  7278  0B4B  318C  24FC  318B   	fcall	_vfprintf
  7279  0B4E                     l1278:
  7280  0B4E  0008               	return
  7281  0B4F                     __end_of_printf:
  7282                           
  7283                           	psect	text4
  7284  0CFC                     __ptext4:	
  7285 ;; *************** function _vfprintf *****************
  7286 ;; Defined at:
  7287 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7288 ;; Parameters:    Size  Location     Type
  7289 ;;  fp              1    wreg     PTR struct _IO_FILE
  7290 ;;		 -> NULL(0), sprintf@f(5), 
  7291 ;;  fmt             2   65[BANK0 ] PTR const unsigned char 
  7292 ;;		 -> STR_7(22), STR_6(8), STR_5(7), STR_4(4), 
  7293 ;;		 -> STR_3(9), STR_2(23), buffer(50), STR_1(9), 
  7294 ;;  ap              1   67[BANK0 ] PTR PTR void 
  7295 ;;		 -> printf@ap(1), sprintf@ap(1), 
  7296 ;; Auto vars:     Size  Location     Type
  7297 ;;  fp              1   70[BANK0 ] PTR struct _IO_FILE
  7298 ;;		 -> NULL(0), sprintf@f(5), 
  7299 ;;  cfmt            2   71[BANK0 ] PTR unsigned char 
  7300 ;;		 -> STR_7(22), STR_6(8), STR_5(7), STR_4(4), 
  7301 ;;		 -> STR_3(9), STR_2(23), buffer(50), STR_1(9), 
  7302 ;; Return value:  Size  Location     Type
  7303 ;;                  2   65[BANK0 ] int 
  7304 ;; Registers used:
  7305 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7306 ;; Tracked objects:
  7307 ;;		On entry : 0/0
  7308 ;;		On exit  : 0/0
  7309 ;;		Unchanged: 0/0
  7310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7311 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7312 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7313 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7314 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7315 ;;Total ram usage:        8 bytes
  7316 ;; Hardware stack levels used: 1
  7317 ;; Hardware stack levels required when called: 8
  7318 ;; This function calls:
  7319 ;;		_vfpfcnvrt
  7320 ;; This function is called by:
  7321 ;;		_sprintf
  7322 ;;		_printf
  7323 ;; This function uses a non-reentrant model
  7324 ;;
  7325                           
  7326                           
  7327                           ;psect for function _vfprintf
  7328  0CFC                     _vfprintf:
  7329                           
  7330                           ;incstack = 0
  7331                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7332                           ;vfprintf@fp stored from wreg
  7333  0CFC  0020               	movlb	0	; select bank0
  7334  0CFD  00E6               	movwf	vfprintf@fp
  7335  0CFE                     l3682:
  7336                           
  7337                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  7338  0CFE  0862               	movf	vfprintf@fmt+1,w
  7339  0CFF  00E8               	movwf	vfprintf@cfmt+1
  7340  0D00  0861               	movf	vfprintf@fmt,w
  7341  0D01  00E7               	movwf	vfprintf@cfmt
  7342  0D02                     l3684:
  7343                           
  7344                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  7345  0D02  0021               	movlb	1	; select bank1
  7346  0D03  01A8               	clrf	_nout^(0+128)
  7347  0D04  01A9               	clrf	(_nout+1)^(0+128)
  7348                           
  7349                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  7350  0D05  2D1A               	goto	l3688
  7351  0D06                     l3686:
  7352                           
  7353                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  7354  0D06  3067               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  7355  0D07  00E4               	movwf	??_vfprintf
  7356  0D08  0864               	movf	??_vfprintf,w
  7357  0D09  00CF               	movwf	vfpfcnvrt@fmt
  7358  0D0A  0863               	movf	vfprintf@ap,w
  7359  0D0B  00E5               	movwf	??_vfprintf+1
  7360  0D0C  0865               	movf	??_vfprintf+1,w
  7361  0D0D  00D0               	movwf	vfpfcnvrt@ap
  7362  0D0E  0866               	movf	vfprintf@fp,w
  7363  0D0F  3183  2331  318C   	fcall	_vfpfcnvrt
  7364  0D12  0020               	movlb	0	; select bank0
  7365  0D13  084F               	movf	?_vfpfcnvrt,w
  7366  0D14  0021               	movlb	1	; select bank1
  7367  0D15  07A8               	addwf	_nout^(0+128),f
  7368  0D16  0020               	movlb	0	; select bank0
  7369  0D17  0850               	movf	?_vfpfcnvrt+1,w
  7370  0D18  0021               	movlb	1	; select bank1
  7371  0D19  3DA9               	addwfc	(_nout+1)^(0+128),f
  7372  0D1A                     l3688:
  7373                           
  7374                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  7375  0D1A  0020               	movlb	0	; select bank0
  7376  0D1B  0867               	movf	vfprintf@cfmt,w
  7377  0D1C  0084               	movwf	4
  7378  0D1D  0868               	movf	vfprintf@cfmt+1,w
  7379  0D1E  0085               	movwf	5
  7380  0D1F  0012               	moviw fsr0++
  7381  0D20  1D03               	btfss	3,2
  7382  0D21  2D23               	goto	u3051
  7383  0D22  2D24               	goto	u3050
  7384  0D23                     u3051:
  7385  0D23  2D06               	goto	l3686
  7386  0D24                     u3050:
  7387  0D24                     l3690:
  7388                           
  7389                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  7390  0D24  0021               	movlb	1	; select bank1
  7391  0D25  0829               	movf	(_nout+1)^(0+128),w
  7392  0D26  0020               	movlb	0	; select bank0
  7393  0D27  00E2               	movwf	?_vfprintf+1
  7394  0D28  0021               	movlb	1	; select bank1
  7395  0D29  0828               	movf	_nout^(0+128),w
  7396  0D2A  0020               	movlb	0	; select bank0
  7397  0D2B  00E1               	movwf	?_vfprintf
  7398  0D2C                     l1244:
  7399  0D2C  0008               	return
  7400  0D2D                     __end_of_vfprintf:
  7401                           
  7402                           	psect	text5
  7403  0331                     __ptext5:	
  7404 ;; *************** function _vfpfcnvrt *****************
  7405 ;; Defined at:
  7406 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7407 ;; Parameters:    Size  Location     Type
  7408 ;;  fp              1    wreg     PTR struct _IO_FILE
  7409 ;;		 -> NULL(0), sprintf@f(5), 
  7410 ;;  fmt             1   47[BANK0 ] PTR PTR unsigned char 
  7411 ;;		 -> vfprintf@cfmt(2), 
  7412 ;;  ap              1   48[BANK0 ] PTR PTR void 
  7413 ;;		 -> printf@ap(1), sprintf@ap(1), 
  7414 ;; Auto vars:     Size  Location     Type
  7415 ;;  fp              1   64[BANK0 ] PTR struct _IO_FILE
  7416 ;;		 -> NULL(0), sprintf@f(5), 
  7417 ;;  ll              8   54[BANK0 ] long long 
  7418 ;;  llu             8    0        unsigned long long 
  7419 ;;  f               4    0        unsigned long long 
  7420 ;;  ct              3    0        unsigned char [3]
  7421 ;;  i               2    0        int 
  7422 ;;  done            2    0        int 
  7423 ;;  cp              2    0        PTR unsigned char 
  7424 ;;  vp              1   63[BANK0 ] PTR void 
  7425 ;;		 -> ?_printf(2), ?_sprintf(2), 
  7426 ;;  c               1   62[BANK0 ] unsigned char 
  7427 ;; Return value:  Size  Location     Type
  7428 ;;                  2   47[BANK0 ] int 
  7429 ;; Registers used:
  7430 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7431 ;; Tracked objects:
  7432 ;;		On entry : 0/0
  7433 ;;		On exit  : 0/0
  7434 ;;		Unchanged: 0/0
  7435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7436 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7437 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7438 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7439 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7440 ;;Total ram usage:       18 bytes
  7441 ;; Hardware stack levels used: 1
  7442 ;; Hardware stack levels required when called: 7
  7443 ;; This function calls:
  7444 ;;		_ctoa
  7445 ;;		_dtoa
  7446 ;;		_fputc
  7447 ;; This function is called by:
  7448 ;;		_vfprintf
  7449 ;; This function uses a non-reentrant model
  7450 ;;
  7451                           
  7452                           
  7453                           ;psect for function _vfpfcnvrt
  7454  0331                     _vfpfcnvrt:
  7455                           
  7456                           ;incstack = 0
  7457                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7458                           ;vfpfcnvrt@fp stored from wreg
  7459  0331  0020               	movlb	0	; select bank0
  7460  0332  00E0               	movwf	vfpfcnvrt@fp
  7461  0333                     l3586:
  7462                           
  7463                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  7464  0333  084F               	movf	vfpfcnvrt@fmt,w
  7465  0334  0086               	movwf	6
  7466  0335  0187               	clrf	7
  7467  0336  3F40               	moviw [0]fsr1
  7468  0337  00D1               	movwf	??_vfpfcnvrt
  7469  0338  3F41               	moviw [1]fsr1
  7470  0339  00D2               	movwf	??_vfpfcnvrt+1
  7471  033A  0851               	movf	??_vfpfcnvrt,w
  7472  033B  0084               	movwf	4
  7473  033C  0852               	movf	??_vfpfcnvrt+1,w
  7474  033D  0085               	movwf	5
  7475  033E  0012               	moviw fsr0++
  7476  033F  3A25               	xorlw	37
  7477  0340  1D03               	btfss	3,2
  7478  0341  2B43               	goto	u2991
  7479  0342  2B44               	goto	u2990
  7480  0343                     u2991:
  7481  0343  2C49               	goto	l3644
  7482  0344                     u2990:
  7483  0344                     l3588:
  7484                           
  7485                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  7486  0344  084F               	movf	vfpfcnvrt@fmt,w
  7487  0345  0086               	movwf	6
  7488  0346  0187               	clrf	7
  7489  0347  3001               	movlw	1
  7490  0348  0781               	addwf	1,f
  7491  0349  3141               	addfsr 1,1
  7492  034A  1803               	skipnc
  7493  034B  0A81               	incf	1,f
  7494  034C                     l3590:
  7495                           
  7496                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  7497  034C  0021               	movlb	1	; select bank1
  7498  034D  01AA               	clrf	_width^(0+128)
  7499  034E  01AB               	clrf	(_width+1)^(0+128)
  7500  034F  01AE               	clrf	_flags^(0+128)
  7501  0350  01AF               	clrf	(_flags+1)^(0+128)
  7502  0351                     l3592:
  7503                           
  7504                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  7505  0351  30FF               	movlw	255
  7506  0352  00AC               	movwf	_prec^(0+128)
  7507  0353  30FF               	movlw	255
  7508  0354  00AD               	movwf	(_prec^(0+128)+1)
  7509  0355                     l3594:
  7510                           
  7511                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  7512  0355  0020               	movlb	0	; select bank0
  7513  0356  084F               	movf	vfpfcnvrt@fmt,w
  7514  0357  0086               	movwf	6
  7515  0358  0187               	clrf	7
  7516  0359  3F40               	moviw [0]fsr1
  7517  035A  00D1               	movwf	??_vfpfcnvrt
  7518  035B  3F41               	moviw [1]fsr1
  7519  035C  00D2               	movwf	??_vfpfcnvrt+1
  7520  035D  0851               	movf	??_vfpfcnvrt,w
  7521  035E  0084               	movwf	4
  7522  035F  0852               	movf	??_vfpfcnvrt+1,w
  7523  0360  0085               	movwf	5
  7524  0361  0012               	moviw fsr0++
  7525  0362  3A63               	xorlw	99
  7526  0363  1D03               	btfss	3,2
  7527  0364  2B66               	goto	u3001
  7528  0365  2B67               	goto	u3000
  7529  0366                     u3001:
  7530  0366  2B89               	goto	l3604
  7531  0367                     u3000:
  7532  0367                     l3596:
  7533                           
  7534                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  7535  0367  084F               	movf	vfpfcnvrt@fmt,w
  7536  0368  0086               	movwf	6
  7537  0369  0187               	clrf	7
  7538  036A  3001               	movlw	1
  7539  036B  0781               	addwf	1,f
  7540  036C  3141               	addfsr 1,1
  7541  036D  1803               	skipnc
  7542  036E  0A81               	incf	1,f
  7543  036F                     l3598:
  7544                           
  7545                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  7546  036F  0850               	movf	vfpfcnvrt@ap,w
  7547  0370  0086               	movwf	6
  7548  0371  0187               	clrf	7
  7549  0372  0801               	movf	1,w
  7550  0373  0084               	movwf	4
  7551  0374  0185               	clrf	5
  7552  0375  3002               	movlw	2
  7553  0376  0781               	addwf	1,f
  7554  0377  0800               	movf	0,w
  7555  0378  00D1               	movwf	??_vfpfcnvrt
  7556  0379  0851               	movf	??_vfpfcnvrt,w
  7557  037A  00DE               	movwf	vfpfcnvrt@c
  7558  037B                     l3600:
  7559                           
  7560                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  7561  037B  085E               	movf	vfpfcnvrt@c,w
  7562  037C  00D1               	movwf	??_vfpfcnvrt
  7563  037D  0851               	movf	??_vfpfcnvrt,w
  7564  037E  00A0               	movwf	ctoa@c
  7565  037F  0860               	movf	vfpfcnvrt@fp,w
  7566  0380  3187  2786  3183   	fcall	_ctoa
  7567  0383  0020               	movlb	0	; select bank0
  7568  0384  0821               	movf	?_ctoa+1,w
  7569  0385  00D0               	movwf	?_vfpfcnvrt+1
  7570  0386  0820               	movf	?_ctoa,w
  7571  0387  00CF               	movwf	?_vfpfcnvrt
  7572  0388  2C6C               	goto	l1233
  7573  0389                     l3604:
  7574                           
  7575                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  7576  0389  084F               	movf	vfpfcnvrt@fmt,w
  7577  038A  0086               	movwf	6
  7578  038B  0187               	clrf	7
  7579  038C  3F40               	moviw [0]fsr1
  7580  038D  00D1               	movwf	??_vfpfcnvrt
  7581  038E  3F41               	moviw [1]fsr1
  7582  038F  00D2               	movwf	??_vfpfcnvrt+1
  7583  0390  0851               	movf	??_vfpfcnvrt,w
  7584  0391  0084               	movwf	4
  7585  0392  0852               	movf	??_vfpfcnvrt+1,w
  7586  0393  0085               	movwf	5
  7587  0394  0012               	moviw fsr0++
  7588  0395  3A64               	xorlw	100
  7589  0396  1903               	btfsc	3,2
  7590  0397  2B99               	goto	u3011
  7591  0398  2B9A               	goto	u3010
  7592  0399                     u3011:
  7593  0399  2BAB               	goto	l3608
  7594  039A                     u3010:
  7595  039A                     l3606:
  7596  039A  084F               	movf	vfpfcnvrt@fmt,w
  7597  039B  0086               	movwf	6
  7598  039C  0187               	clrf	7
  7599  039D  3F40               	moviw [0]fsr1
  7600  039E  00D1               	movwf	??_vfpfcnvrt
  7601  039F  3F41               	moviw [1]fsr1
  7602  03A0  00D2               	movwf	??_vfpfcnvrt+1
  7603  03A1  0851               	movf	??_vfpfcnvrt,w
  7604  03A2  0084               	movwf	4
  7605  03A3  0852               	movf	??_vfpfcnvrt+1,w
  7606  03A4  0085               	movwf	5
  7607  03A5  0012               	moviw fsr0++
  7608  03A6  3A69               	xorlw	105
  7609  03A7  1D03               	btfss	3,2
  7610  03A8  2BAA               	goto	u3021
  7611  03A9  2BAB               	goto	u3020
  7612  03AA                     u3021:
  7613  03AA  2BE6               	goto	l3616
  7614  03AB                     u3020:
  7615  03AB                     l3608:
  7616                           
  7617                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  7618  03AB  084F               	movf	vfpfcnvrt@fmt,w
  7619  03AC  0086               	movwf	6
  7620  03AD  0187               	clrf	7
  7621  03AE  3001               	movlw	1
  7622  03AF  0781               	addwf	1,f
  7623  03B0  3141               	addfsr 1,1
  7624  03B1  1803               	skipnc
  7625  03B2  0A81               	incf	1,f
  7626  03B3                     l3610:
  7627                           
  7628                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  7629  03B3  0850               	movf	vfpfcnvrt@ap,w
  7630  03B4  0086               	movwf	6
  7631  03B5  0187               	clrf	7
  7632  03B6  0801               	movf	1,w
  7633  03B7  0084               	movwf	4
  7634  03B8  0185               	clrf	5
  7635  03B9  3002               	movlw	2
  7636  03BA  0781               	addwf	1,f
  7637  03BB  3F00               	moviw [0]fsr0
  7638  03BC  00D1               	movwf	??_vfpfcnvrt
  7639  03BD  3F01               	moviw [1]fsr0
  7640  03BE  00D2               	movwf	??_vfpfcnvrt+1
  7641  03BF  0851               	movf	??_vfpfcnvrt,w
  7642  03C0  00D6               	movwf	vfpfcnvrt@ll
  7643  03C1  0852               	movf	??_vfpfcnvrt+1,w
  7644  03C2  00D7               	movwf	vfpfcnvrt@ll+1
  7645  03C3  0D89               	rlf	9,f
  7646  03C4  3B89               	subwfb	9,f
  7647  03C5  0989               	comf	9,f
  7648  03C6  00D8               	movwf	vfpfcnvrt@ll+2
  7649  03C7  00D9               	movwf	vfpfcnvrt@ll+3
  7650  03C8  00DA               	movwf	vfpfcnvrt@ll+4
  7651  03C9  00DB               	movwf	vfpfcnvrt@ll+5
  7652  03CA  00DC               	movwf	vfpfcnvrt@ll+6
  7653  03CB  00DD               	movwf	vfpfcnvrt@ll+7
  7654  03CC                     l3612:
  7655                           
  7656                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  7657  03CC  0856               	movf	vfpfcnvrt@ll,w
  7658  03CD  00B1               	movwf	dtoa@d
  7659  03CE  0857               	movf	vfpfcnvrt@ll+1,w
  7660  03CF  00B2               	movwf	dtoa@d+1
  7661  03D0  0858               	movf	vfpfcnvrt@ll+2,w
  7662  03D1  00B3               	movwf	dtoa@d+2
  7663  03D2  0859               	movf	vfpfcnvrt@ll+3,w
  7664  03D3  00B4               	movwf	dtoa@d+3
  7665  03D4  085A               	movf	vfpfcnvrt@ll+4,w
  7666  03D5  00B5               	movwf	dtoa@d+4
  7667  03D6  085B               	movf	vfpfcnvrt@ll+5,w
  7668  03D7  00B6               	movwf	dtoa@d+5
  7669  03D8  085C               	movf	vfpfcnvrt@ll+6,w
  7670  03D9  00B7               	movwf	dtoa@d+6
  7671  03DA  085D               	movf	vfpfcnvrt@ll+7,w
  7672  03DB  00B8               	movwf	dtoa@d+7
  7673  03DC  0860               	movf	vfpfcnvrt@fp,w
  7674  03DD  3181  21C3  3183   	fcall	_dtoa
  7675  03E0  0020               	movlb	0	; select bank0
  7676  03E1  0832               	movf	?_dtoa+1,w
  7677  03E2  00D0               	movwf	?_vfpfcnvrt+1
  7678  03E3  0831               	movf	?_dtoa,w
  7679  03E4  00CF               	movwf	?_vfpfcnvrt
  7680  03E5  2C6C               	goto	l1233
  7681  03E6                     l3616:
  7682                           
  7683                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1099:         if 
      +                          (*fmt[0] == 'n') {
  7684  03E6  084F               	movf	vfpfcnvrt@fmt,w
  7685  03E7  0086               	movwf	6
  7686  03E8  0187               	clrf	7
  7687  03E9  3F40               	moviw [0]fsr1
  7688  03EA  00D1               	movwf	??_vfpfcnvrt
  7689  03EB  3F41               	moviw [1]fsr1
  7690  03EC  00D2               	movwf	??_vfpfcnvrt+1
  7691  03ED  0851               	movf	??_vfpfcnvrt,w
  7692  03EE  0084               	movwf	4
  7693  03EF  0852               	movf	??_vfpfcnvrt+1,w
  7694  03F0  0085               	movwf	5
  7695  03F1  0012               	moviw fsr0++
  7696  03F2  3A6E               	xorlw	110
  7697  03F3  1D03               	btfss	3,2
  7698  03F4  2BF6               	goto	u3031
  7699  03F5  2BF7               	goto	u3030
  7700  03F6                     u3031:
  7701  03F6  2C16               	goto	l3628
  7702  03F7                     u3030:
  7703  03F7                     l3618:
  7704                           
  7705                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1100:            
      +                           ++*fmt;
  7706  03F7  084F               	movf	vfpfcnvrt@fmt,w
  7707  03F8  0086               	movwf	6
  7708  03F9  0187               	clrf	7
  7709  03FA  3001               	movlw	1
  7710  03FB  0781               	addwf	1,f
  7711  03FC  3141               	addfsr 1,1
  7712  03FD  1803               	skipnc
  7713  03FE  0A81               	incf	1,f
  7714  03FF                     l3620:
  7715                           
  7716                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1101:            
      +                           vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  7717  03FF  0850               	movf	vfpfcnvrt@ap,w
  7718  0400  0086               	movwf	6
  7719  0401  0187               	clrf	7
  7720  0402  3F40               	moviw [0]fsr1
  7721  0403  0084               	movwf	4
  7722  0404  0185               	clrf	5
  7723  0405  0A81               	incf	1,f
  7724  0406  0800               	movf	0,w
  7725  0407  00D1               	movwf	??_vfpfcnvrt
  7726  0408  0851               	movf	??_vfpfcnvrt,w
  7727  0409  00DF               	movwf	vfpfcnvrt@vp
  7728  040A                     l3622:
  7729                           
  7730                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1102:            
      +                           *(int *)vp = nout;
  7731  040A  085F               	movf	vfpfcnvrt@vp,w
  7732  040B  0086               	movwf	6
  7733  040C  0187               	clrf	7
  7734  040D  0021               	movlb	1	; select bank1
  7735  040E  0828               	movf	_nout^(0+128),w
  7736  040F  3FC0               	movwi [0]fsr1
  7737  0410  0829               	movf	(_nout+1)^(0+128),w
  7738  0411  3FC1               	movwi [1]fsr1
  7739  0412                     l3624:
  7740                           
  7741                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1103:            
      +                           return 0;
  7742  0412  0020               	movlb	0	; select bank0
  7743  0413  01CF               	clrf	?_vfpfcnvrt
  7744  0414  01D0               	clrf	?_vfpfcnvrt+1
  7745  0415  2C6C               	goto	l1233
  7746  0416                     l3628:
  7747                           
  7748                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  7749  0416  084F               	movf	vfpfcnvrt@fmt,w
  7750  0417  0086               	movwf	6
  7751  0418  0187               	clrf	7
  7752  0419  3F40               	moviw [0]fsr1
  7753  041A  00D1               	movwf	??_vfpfcnvrt
  7754  041B  3F41               	moviw [1]fsr1
  7755  041C  00D2               	movwf	??_vfpfcnvrt+1
  7756  041D  0851               	movf	??_vfpfcnvrt,w
  7757  041E  0084               	movwf	4
  7758  041F  0852               	movf	??_vfpfcnvrt+1,w
  7759  0420  0085               	movwf	5
  7760  0421  0012               	moviw fsr0++
  7761  0422  3A25               	xorlw	37
  7762  0423  1D03               	btfss	3,2
  7763  0424  2C26               	goto	u3041
  7764  0425  2C27               	goto	u3040
  7765  0426                     u3041:
  7766  0426  2C40               	goto	l3638
  7767  0427                     u3040:
  7768  0427                     l3630:
  7769                           
  7770                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  7771  0427  084F               	movf	vfpfcnvrt@fmt,w
  7772  0428  0086               	movwf	6
  7773  0429  0187               	clrf	7
  7774  042A  3001               	movlw	1
  7775  042B  0781               	addwf	1,f
  7776  042C  3141               	addfsr 1,1
  7777  042D  1803               	skipnc
  7778  042E  0A81               	incf	1,f
  7779  042F                     l3632:
  7780                           
  7781                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  7782  042F  3025               	movlw	37
  7783  0430  00F4               	movwf	fputc@c
  7784  0431  3000               	movlw	0
  7785  0432  00F5               	movwf	fputc@c+1
  7786  0433  0860               	movf	vfpfcnvrt@fp,w
  7787  0434  00D1               	movwf	??_vfpfcnvrt
  7788  0435  0851               	movf	??_vfpfcnvrt,w
  7789  0436  00F6               	movwf	fputc@fp
  7790  0437  318D  25E5  3183   	fcall	_fputc
  7791  043A                     l3634:
  7792                           
  7793                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  7794  043A  3001               	movlw	1
  7795  043B  0020               	movlb	0	; select bank0
  7796  043C  00CF               	movwf	?_vfpfcnvrt
  7797  043D  3000               	movlw	0
  7798  043E  00D0               	movwf	?_vfpfcnvrt+1
  7799  043F  2C6C               	goto	l1233
  7800  0440                     l3638:
  7801                           
  7802                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  7803  0440  084F               	movf	vfpfcnvrt@fmt,w
  7804  0441  0086               	movwf	6
  7805  0442  0187               	clrf	7
  7806  0443  3001               	movlw	1
  7807  0444  0781               	addwf	1,f
  7808  0445  3141               	addfsr 1,1
  7809  0446  1803               	skipnc
  7810  0447  0A81               	incf	1,f
  7811  0448  2C12               	goto	l3624
  7812  0449                     l3644:
  7813                           
  7814                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  7815  0449  084F               	movf	vfpfcnvrt@fmt,w
  7816  044A  0086               	movwf	6
  7817  044B  0187               	clrf	7
  7818  044C  3F40               	moviw [0]fsr1
  7819  044D  00D1               	movwf	??_vfpfcnvrt
  7820  044E  3F41               	moviw [1]fsr1
  7821  044F  00D2               	movwf	??_vfpfcnvrt+1
  7822  0450  0851               	movf	??_vfpfcnvrt,w
  7823  0451  0084               	movwf	4
  7824  0452  0852               	movf	??_vfpfcnvrt+1,w
  7825  0453  0085               	movwf	5
  7826  0454  0800               	movf	0,w	;code access
  7827  0455  00D3               	movwf	??_vfpfcnvrt+2
  7828  0456  01D4               	clrf	??_vfpfcnvrt+3
  7829  0457  0853               	movf	??_vfpfcnvrt+2,w
  7830  0458  00F4               	movwf	fputc@c
  7831  0459  0854               	movf	??_vfpfcnvrt+3,w
  7832  045A  00F5               	movwf	fputc@c+1
  7833  045B  0860               	movf	vfpfcnvrt@fp,w
  7834  045C  00D5               	movwf	??_vfpfcnvrt+4
  7835  045D  0855               	movf	??_vfpfcnvrt+4,w
  7836  045E  00F6               	movwf	fputc@fp
  7837  045F  318D  25E5  3183   	fcall	_fputc
  7838  0462                     l3646:
  7839                           
  7840                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  7841  0462  0020               	movlb	0	; select bank0
  7842  0463  084F               	movf	vfpfcnvrt@fmt,w
  7843  0464  0086               	movwf	6
  7844  0465  0187               	clrf	7
  7845  0466  3001               	movlw	1
  7846  0467  0781               	addwf	1,f
  7847  0468  3141               	addfsr 1,1
  7848  0469  1803               	skipnc
  7849  046A  0A81               	incf	1,f
  7850  046B  2C3A               	goto	l3634
  7851  046C                     l1233:
  7852  046C  0008               	return
  7853  046D                     __end_of_vfpfcnvrt:
  7854                           
  7855                           	psect	text6
  7856  01C3                     __ptext6:	
  7857 ;; *************** function _dtoa *****************
  7858 ;; Defined at:
  7859 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7860 ;; Parameters:    Size  Location     Type
  7861 ;;  fp              1    wreg     PTR struct _IO_FILE
  7862 ;;		 -> NULL(0), sprintf@f(5), 
  7863 ;;  d               8   17[BANK0 ] long long 
  7864 ;; Auto vars:     Size  Location     Type
  7865 ;;  fp              1   28[BANK0 ] PTR struct _IO_FILE
  7866 ;;		 -> NULL(0), sprintf@f(5), 
  7867 ;;  n               8   37[BANK0 ] long long 
  7868 ;;  i               2   45[BANK0 ] int 
  7869 ;;  s               2   35[BANK0 ] int 
  7870 ;;  w               2   33[BANK0 ] int 
  7871 ;;  p               2   31[BANK0 ] int 
  7872 ;; Return value:  Size  Location     Type
  7873 ;;                  2   17[BANK0 ] int 
  7874 ;; Registers used:
  7875 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7876 ;; Tracked objects:
  7877 ;;		On entry : 0/0
  7878 ;;		On exit  : 0/0
  7879 ;;		Unchanged: 0/0
  7880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7881 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7882 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7883 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7884 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7885 ;;Total ram usage:       30 bytes
  7886 ;; Hardware stack levels used: 1
  7887 ;; Hardware stack levels required when called: 6
  7888 ;; This function calls:
  7889 ;;		___aodiv
  7890 ;;		___aomod
  7891 ;;		_abs
  7892 ;;		_pad
  7893 ;; This function is called by:
  7894 ;;		_vfpfcnvrt
  7895 ;; This function uses a non-reentrant model
  7896 ;;
  7897                           
  7898                           
  7899                           ;psect for function _dtoa
  7900  01C3                     _dtoa:
  7901                           
  7902                           ;incstack = 0
  7903                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7904                           ;dtoa@fp stored from wreg
  7905  01C3  0020               	movlb	0	; select bank0
  7906  01C4  00BC               	movwf	dtoa@fp
  7907  01C5                     l3526:
  7908                           
  7909                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7910  01C5  0831               	movf	dtoa@d,w
  7911  01C6  00C5               	movwf	dtoa@n
  7912  01C7  0832               	movf	dtoa@d+1,w
  7913  01C8  00C6               	movwf	dtoa@n+1
  7914  01C9  0833               	movf	dtoa@d+2,w
  7915  01CA  00C7               	movwf	dtoa@n+2
  7916  01CB  0834               	movf	dtoa@d+3,w
  7917  01CC  00C8               	movwf	dtoa@n+3
  7918  01CD  0835               	movf	dtoa@d+4,w
  7919  01CE  00C9               	movwf	dtoa@n+4
  7920  01CF  0836               	movf	dtoa@d+5,w
  7921  01D0  00CA               	movwf	dtoa@n+5
  7922  01D1  0837               	movf	dtoa@d+6,w
  7923  01D2  00CB               	movwf	dtoa@n+6
  7924  01D3  0838               	movf	dtoa@d+7,w
  7925  01D4  00CC               	movwf	dtoa@n+7
  7926  01D5                     l3528:
  7927                           
  7928                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7929  01D5  3045               	movlw	low dtoa@n
  7930  01D6  0086               	movwf	6
  7931  01D7  3000               	movlw	high dtoa@n
  7932  01D8  0087               	movwf	7
  7933  01D9  3F47               	moviw [7]fsr1
  7934  01DA  00B9               	movwf	??_dtoa
  7935  01DB  1BB9               	btfsc	??_dtoa,7
  7936  01DC  29DE               	goto	u2821
  7937  01DD  29E0               	goto	u2820
  7938  01DE                     u2821:
  7939  01DE  3001               	movlw	1
  7940  01DF  29E1               	goto	u2830
  7941  01E0                     u2820:
  7942  01E0  3000               	movlw	0
  7943  01E1                     u2830:
  7944  01E1  0020               	movlb	0	; select bank0
  7945  01E2  00BA               	movwf	??_dtoa+1
  7946  01E3  01BB               	clrf	??_dtoa+2
  7947  01E4  083A               	movf	??_dtoa+1,w
  7948  01E5  00C3               	movwf	dtoa@s
  7949  01E6  083B               	movf	??_dtoa+2,w
  7950  01E7  00C4               	movwf	dtoa@s+1
  7951  01E8                     l3530:
  7952                           
  7953                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7954  01E8  0843               	movf	dtoa@s,w
  7955  01E9  0444               	iorwf	dtoa@s+1,w
  7956  01EA  1903               	btfsc	3,2
  7957  01EB  29ED               	goto	u2841
  7958  01EC  29EE               	goto	u2840
  7959  01ED                     u2841:
  7960  01ED  2A0C               	goto	l1205
  7961  01EE                     u2840:
  7962  01EE                     l3532:
  7963                           
  7964                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7965  01EE  09C5               	comf	dtoa@n,f
  7966  01EF  09C6               	comf	dtoa@n+1,f
  7967  01F0  09C7               	comf	dtoa@n+2,f
  7968  01F1  09C8               	comf	dtoa@n+3,f
  7969  01F2  09C9               	comf	dtoa@n+4,f
  7970  01F3  09CA               	comf	dtoa@n+5,f
  7971  01F4  09CB               	comf	dtoa@n+6,f
  7972  01F5  09CC               	comf	dtoa@n+7,f
  7973  01F6  0AC5               	incf	dtoa@n,f
  7974  01F7  1D03               	skipz
  7975  01F8  2A0C               	goto	u285lld
  7976  01F9  0AC6               	incf	dtoa@n+1,f
  7977  01FA  1D03               	skipz
  7978  01FB  2A0C               	goto	u285lld
  7979  01FC  0AC7               	incf	dtoa@n+2,f
  7980  01FD  1D03               	skipz
  7981  01FE  2A0C               	goto	u285lld
  7982  01FF  0AC8               	incf	dtoa@n+3,f
  7983  0200  1D03               	skipz
  7984  0201  2A0C               	goto	u285lld
  7985  0202  0AC9               	incf	dtoa@n+4,f
  7986  0203  1D03               	skipz
  7987  0204  2A0C               	goto	u285lld
  7988  0205  0ACA               	incf	dtoa@n+5,f
  7989  0206  1D03               	skipz
  7990  0207  2A0C               	goto	u285lld
  7991  0208  0ACB               	incf	dtoa@n+6,f
  7992  0209  1D03               	skipz
  7993  020A  2A0C               	goto	u285lld
  7994  020B  0ACC               	incf	dtoa@n+7,f
  7995  020C                     u285lld:
  7996  020C                     l1205:	
  7997                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 297:     }
  7998                           
  7999                           
  8000                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  8001  020C  0021               	movlb	1	; select bank1
  8002  020D  1BAD               	btfsc	(_prec+1)^(0+128),7
  8003  020E  2A10               	goto	u2861
  8004  020F  2A11               	goto	u2860
  8005  0210                     u2861:
  8006  0210  2A15               	goto	l1206
  8007  0211                     u2860:
  8008  0211                     l3534:
  8009                           
  8010                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  8011  0211  30FD               	movlw	253
  8012  0212  05AE               	andwf	_flags^(0+128),f
  8013  0213  30FF               	movlw	255
  8014  0214  05AF               	andwf	(_flags+1)^(0+128),f
  8015  0215                     l1206:	
  8016                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 302:     }
  8017                           
  8018                           
  8019                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  8020  0215  082D               	movf	(_prec+1)^(0+128),w
  8021  0216  3A80               	xorlw	128
  8022  0217  0020               	movlb	0	; select bank0
  8023  0218  00B9               	movwf	??_dtoa
  8024  0219  3080               	movlw	128
  8025  021A  0239               	subwf	??_dtoa,w
  8026  021B  1D03               	skipz
  8027  021C  2A20               	goto	u2875
  8028  021D  3001               	movlw	1
  8029  021E  0021               	movlb	1	; select bank1
  8030  021F  022C               	subwf	_prec^(0+128),w
  8031  0220                     u2875:
  8032  0220  1803               	skipnc
  8033  0221  2A23               	goto	u2871
  8034  0222  2A24               	goto	u2870
  8035  0223                     u2871:
  8036  0223  2A2A               	goto	l3538
  8037  0224                     u2870:
  8038  0224                     l3536:
  8039  0224  3001               	movlw	1
  8040  0225  0020               	movlb	0	; select bank0
  8041  0226  00BF               	movwf	dtoa@p
  8042  0227  3000               	movlw	0
  8043  0228  00C0               	movwf	dtoa@p+1
  8044  0229  2A32               	goto	l1210
  8045  022A                     l3538:
  8046  022A  0021               	movlb	1	; select bank1
  8047  022B  082D               	movf	(_prec+1)^(0+128),w
  8048  022C  0020               	movlb	0	; select bank0
  8049  022D  00C0               	movwf	dtoa@p+1
  8050  022E  0021               	movlb	1	; select bank1
  8051  022F  082C               	movf	_prec^(0+128),w
  8052  0230  0020               	movlb	0	; select bank0
  8053  0231  00BF               	movwf	dtoa@p
  8054  0232                     l1210:
  8055                           
  8056                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  8057  0232  0021               	movlb	1	; select bank1
  8058  0233  082B               	movf	(_width+1)^(0+128),w
  8059  0234  0020               	movlb	0	; select bank0
  8060  0235  00C2               	movwf	dtoa@w+1
  8061  0236  0021               	movlb	1	; select bank1
  8062  0237  082A               	movf	_width^(0+128),w
  8063  0238  0020               	movlb	0	; select bank0
  8064  0239  00C1               	movwf	dtoa@w
  8065  023A                     l3540:
  8066                           
  8067                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  8068  023A  0843               	movf	dtoa@s,w
  8069  023B  0444               	iorwf	dtoa@s+1,w
  8070  023C  1D03               	btfss	3,2
  8071  023D  2A3F               	goto	u2881
  8072  023E  2A40               	goto	u2880
  8073  023F                     u2881:
  8074  023F  2A45               	goto	l3544
  8075  0240                     u2880:
  8076  0240                     l3542:
  8077  0240  0021               	movlb	1	; select bank1
  8078  0241  1D2E               	btfss	_flags^(0+128),2
  8079  0242  2A44               	goto	u2891
  8080  0243  2A45               	goto	u2890
  8081  0244                     u2891:
  8082  0244  2A4A               	goto	l1211
  8083  0245                     u2890:
  8084  0245                     l3544:
  8085                           
  8086                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  8087  0245  30FF               	movlw	255
  8088  0246  0020               	movlb	0	; select bank0
  8089  0247  07C1               	addwf	dtoa@w,f
  8090  0248  30FF               	movlw	255
  8091  0249  3DC2               	addwfc	dtoa@w+1,f
  8092  024A                     l1211:	
  8093                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 307:     }
  8094                           
  8095                           
  8096                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  8097  024A  301F               	movlw	31
  8098  024B  0020               	movlb	0	; select bank0
  8099  024C  00CD               	movwf	dtoa@i
  8100  024D  3000               	movlw	0
  8101  024E  00CE               	movwf	dtoa@i+1
  8102  024F                     l3546:
  8103                           
  8104                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  8105  024F  0021               	movlb	1	; select bank1
  8106  0250  01D9               	clrf	(_dbuf^(0+128)+31)
  8107                           
  8108                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8109  0251  2ABA               	goto	l1214
  8110  0252                     l3548:
  8111                           
  8112                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  8113  0252  30FF               	movlw	255
  8114  0253  0020               	movlb	0	; select bank0
  8115  0254  07CD               	addwf	dtoa@i,f
  8116  0255  30FF               	movlw	255
  8117  0256  3DCE               	addwfc	dtoa@i+1,f
  8118  0257                     l3550:
  8119                           
  8120                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  8121  0257  300A               	movlw	10
  8122  0258  00A0               	movwf	___aomod@divisor
  8123  0259  01A1               	clrf	___aomod@divisor+1
  8124  025A  01A2               	clrf	___aomod@divisor+2
  8125  025B  01A3               	clrf	___aomod@divisor+3
  8126  025C  01A4               	clrf	___aomod@divisor+4
  8127  025D  01A5               	clrf	___aomod@divisor+5
  8128  025E  01A6               	clrf	___aomod@divisor+6
  8129  025F  01A7               	clrf	___aomod@divisor+7
  8130  0260  0845               	movf	dtoa@n,w
  8131  0261  00A8               	movwf	___aomod@dividend
  8132  0262  0846               	movf	dtoa@n+1,w
  8133  0263  00A9               	movwf	___aomod@dividend+1
  8134  0264  0847               	movf	dtoa@n+2,w
  8135  0265  00AA               	movwf	___aomod@dividend+2
  8136  0266  0848               	movf	dtoa@n+3,w
  8137  0267  00AB               	movwf	___aomod@dividend+3
  8138  0268  0849               	movf	dtoa@n+4,w
  8139  0269  00AC               	movwf	___aomod@dividend+4
  8140  026A  084A               	movf	dtoa@n+5,w
  8141  026B  00AD               	movwf	___aomod@dividend+5
  8142  026C  084B               	movf	dtoa@n+6,w
  8143  026D  00AE               	movwf	___aomod@dividend+6
  8144  026E  084C               	movf	dtoa@n+7,w
  8145  026F  00AF               	movwf	___aomod@dividend+7
  8146  0270  3185  256E  3181   	fcall	___aomod
  8147  0273  0020               	movlb	0	; select bank0
  8148  0274  0821               	movf	?___aomod+1,w
  8149  0275  00F5               	movwf	abs@a+1
  8150  0276  0820               	movf	?___aomod,w
  8151  0277  00F4               	movwf	abs@a
  8152  0278  318C  240C  3181   	fcall	_abs
  8153  027B  0874               	movf	?_abs,w
  8154  027C  3E30               	addlw	48
  8155  027D  0020               	movlb	0	; select bank0
  8156  027E  00B9               	movwf	??_dtoa
  8157  027F  084D               	movf	dtoa@i,w
  8158  0280  3EBA               	addlw	(low (_dbuf| 0))& (0+255)
  8159  0281  0086               	movwf	6
  8160  0282  0187               	clrf	7
  8161  0283  0839               	movf	??_dtoa,w
  8162  0284  0081               	movwf	1
  8163  0285                     l3552:
  8164                           
  8165                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  8166  0285  30FF               	movlw	255
  8167  0286  07BF               	addwf	dtoa@p,f
  8168  0287  30FF               	movlw	255
  8169  0288  3DC0               	addwfc	dtoa@p+1,f
  8170  0289                     l3554:
  8171                           
  8172                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  8173  0289  30FF               	movlw	255
  8174  028A  07C1               	addwf	dtoa@w,f
  8175  028B  30FF               	movlw	255
  8176  028C  3DC2               	addwfc	dtoa@w+1,f
  8177  028D                     l3556:
  8178                           
  8179                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  8180  028D  300A               	movlw	10
  8181  028E  00A0               	movwf	___aodiv@divisor
  8182  028F  01A1               	clrf	___aodiv@divisor+1
  8183  0290  01A2               	clrf	___aodiv@divisor+2
  8184  0291  01A3               	clrf	___aodiv@divisor+3
  8185  0292  01A4               	clrf	___aodiv@divisor+4
  8186  0293  01A5               	clrf	___aodiv@divisor+5
  8187  0294  01A6               	clrf	___aodiv@divisor+6
  8188  0295  01A7               	clrf	___aodiv@divisor+7
  8189  0296  0845               	movf	dtoa@n,w
  8190  0297  00A8               	movwf	___aodiv@dividend
  8191  0298  0846               	movf	dtoa@n+1,w
  8192  0299  00A9               	movwf	___aodiv@dividend+1
  8193  029A  0847               	movf	dtoa@n+2,w
  8194  029B  00AA               	movwf	___aodiv@dividend+2
  8195  029C  0848               	movf	dtoa@n+3,w
  8196  029D  00AB               	movwf	___aodiv@dividend+3
  8197  029E  0849               	movf	dtoa@n+4,w
  8198  029F  00AC               	movwf	___aodiv@dividend+4
  8199  02A0  084A               	movf	dtoa@n+5,w
  8200  02A1  00AD               	movwf	___aodiv@dividend+5
  8201  02A2  084B               	movf	dtoa@n+6,w
  8202  02A3  00AE               	movwf	___aodiv@dividend+6
  8203  02A4  084C               	movf	dtoa@n+7,w
  8204  02A5  00AF               	movwf	___aodiv@dividend+7
  8205  02A6  3184  246D  3181   	fcall	___aodiv
  8206  02A9  0020               	movlb	0	; select bank0
  8207  02AA  0820               	movf	?___aodiv,w
  8208  02AB  00C5               	movwf	dtoa@n
  8209  02AC  0821               	movf	?___aodiv+1,w
  8210  02AD  00C6               	movwf	dtoa@n+1
  8211  02AE  0822               	movf	?___aodiv+2,w
  8212  02AF  00C7               	movwf	dtoa@n+2
  8213  02B0  0823               	movf	?___aodiv+3,w
  8214  02B1  00C8               	movwf	dtoa@n+3
  8215  02B2  0824               	movf	?___aodiv+4,w
  8216  02B3  00C9               	movwf	dtoa@n+4
  8217  02B4  0825               	movf	?___aodiv+5,w
  8218  02B5  00CA               	movwf	dtoa@n+5
  8219  02B6  0826               	movf	?___aodiv+6,w
  8220  02B7  00CB               	movwf	dtoa@n+6
  8221  02B8  0827               	movf	?___aodiv+7,w
  8222  02B9  00CC               	movwf	dtoa@n+7
  8223  02BA                     l1214:	
  8224                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 318:     }
  8225                           
  8226                           
  8227                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8228  02BA  0020               	movlb	0	; select bank0
  8229  02BB  084E               	movf	dtoa@i+1,w
  8230  02BC  3A80               	xorlw	128
  8231  02BD  00B9               	movwf	??_dtoa
  8232  02BE  3080               	movlw	128
  8233  02BF  0239               	subwf	??_dtoa,w
  8234  02C0  1D03               	skipz
  8235  02C1  2AC4               	goto	u2905
  8236  02C2  3001               	movlw	1
  8237  02C3  024D               	subwf	dtoa@i,w
  8238  02C4                     u2905:
  8239  02C4  1C03               	skipc
  8240  02C5  2AC7               	goto	u2901
  8241  02C6  2AC8               	goto	u2900
  8242  02C7                     u2901:
  8243  02C7  2AF5               	goto	l3566
  8244  02C8                     u2900:
  8245  02C8                     l3558:
  8246  02C8  0020               	movlb	0	; select bank0
  8247  02C9  0845               	movf	dtoa@n,w
  8248  02CA  0446               	iorwf	dtoa@n+1,w
  8249  02CB  0447               	iorwf	dtoa@n+2,w
  8250  02CC  0448               	iorwf	dtoa@n+3,w
  8251  02CD  0449               	iorwf	dtoa@n+4,w
  8252  02CE  044A               	iorwf	dtoa@n+5,w
  8253  02CF  044B               	iorwf	dtoa@n+6,w
  8254  02D0  044C               	iorwf	dtoa@n+7,w
  8255  02D1  1D03               	skipz
  8256  02D2  2AD4               	goto	u2911
  8257  02D3  2AD5               	goto	u2910
  8258  02D4                     u2911:
  8259  02D4  2A52               	goto	l3548
  8260  02D5                     u2910:
  8261  02D5                     l3560:
  8262  02D5  0840               	movf	dtoa@p+1,w
  8263  02D6  3A80               	xorlw	128
  8264  02D7  00B9               	movwf	??_dtoa
  8265  02D8  3080               	movlw	128
  8266  02D9  0239               	subwf	??_dtoa,w
  8267  02DA  1D03               	skipz
  8268  02DB  2ADE               	goto	u2925
  8269  02DC  3001               	movlw	1
  8270  02DD  023F               	subwf	dtoa@p,w
  8271  02DE                     u2925:
  8272  02DE  1803               	skipnc
  8273  02DF  2AE1               	goto	u2921
  8274  02E0  2AE2               	goto	u2920
  8275  02E1                     u2921:
  8276  02E1  2A52               	goto	l3548
  8277  02E2                     u2920:
  8278  02E2                     l3562:
  8279  02E2  0020               	movlb	0	; select bank0
  8280  02E3  0842               	movf	dtoa@w+1,w
  8281  02E4  3A80               	xorlw	128
  8282  02E5  00B9               	movwf	??_dtoa
  8283  02E6  3080               	movlw	128
  8284  02E7  0239               	subwf	??_dtoa,w
  8285  02E8  1D03               	skipz
  8286  02E9  2AEC               	goto	u2935
  8287  02EA  3001               	movlw	1
  8288  02EB  0241               	subwf	dtoa@w,w
  8289  02EC                     u2935:
  8290  02EC  1C03               	skipc
  8291  02ED  2AEF               	goto	u2931
  8292  02EE  2AF0               	goto	u2930
  8293  02EF                     u2931:
  8294  02EF  2AF5               	goto	l3566
  8295  02F0                     u2930:
  8296  02F0                     l3564:
  8297  02F0  0021               	movlb	1	; select bank1
  8298  02F1  18AE               	btfsc	_flags^(0+128),1
  8299  02F2  2AF4               	goto	u2941
  8300  02F3  2AF5               	goto	u2940
  8301  02F4                     u2941:
  8302  02F4  2A52               	goto	l3548
  8303  02F5                     u2940:
  8304  02F5                     l3566:
  8305                           
  8306                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  8307  02F5  0020               	movlb	0	; select bank0
  8308  02F6  0843               	movf	dtoa@s,w
  8309  02F7  0444               	iorwf	dtoa@s+1,w
  8310  02F8  1D03               	btfss	3,2
  8311  02F9  2AFB               	goto	u2951
  8312  02FA  2AFC               	goto	u2950
  8313  02FB                     u2951:
  8314  02FB  2B01               	goto	l3570
  8315  02FC                     u2950:
  8316  02FC                     l3568:
  8317  02FC  0021               	movlb	1	; select bank1
  8318  02FD  1D2E               	btfss	_flags^(0+128),2
  8319  02FE  2B00               	goto	u2961
  8320  02FF  2B01               	goto	u2960
  8321  0300                     u2961:
  8322  0300  2B1D               	goto	l3580
  8323  0301                     u2960:
  8324  0301                     l3570:
  8325                           
  8326                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  8327  0301  30FF               	movlw	255
  8328  0302  0020               	movlb	0	; select bank0
  8329  0303  07CD               	addwf	dtoa@i,f
  8330  0304  30FF               	movlw	255
  8331  0305  3DCE               	addwfc	dtoa@i+1,f
  8332  0306                     l3572:
  8333                           
  8334                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  8335  0306  0843               	movf	dtoa@s,w
  8336  0307  0444               	iorwf	dtoa@s+1,w
  8337  0308  1D03               	btfss	3,2
  8338  0309  2B0B               	goto	u2971
  8339  030A  2B0C               	goto	u2970
  8340  030B                     u2971:
  8341  030B  2B11               	goto	l3576
  8342  030C                     u2970:
  8343  030C                     l3574:
  8344  030C  302B               	movlw	43
  8345  030D  00BD               	movwf	_dtoa$1137
  8346  030E  3000               	movlw	0
  8347  030F  00BE               	movwf	_dtoa$1137+1
  8348  0310  2B15               	goto	l3578
  8349  0311                     l3576:
  8350  0311  302D               	movlw	45
  8351  0312  00BD               	movwf	_dtoa$1137
  8352  0313  3000               	movlw	0
  8353  0314  00BE               	movwf	_dtoa$1137+1
  8354  0315                     l3578:
  8355  0315  083D               	movf	_dtoa$1137,w
  8356  0316  00B9               	movwf	??_dtoa
  8357  0317  084D               	movf	dtoa@i,w
  8358  0318  3EBA               	addlw	(low (_dbuf| 0))& (0+255)
  8359  0319  0086               	movwf	6
  8360  031A  0187               	clrf	7
  8361  031B  0839               	movf	??_dtoa,w
  8362  031C  0081               	movwf	1
  8363  031D                     l3580:
  8364                           
  8365                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  8366  031D  0020               	movlb	0	; select bank0
  8367  031E  084D               	movf	dtoa@i,w
  8368  031F  3EBA               	addlw	(low (_dbuf| 0))& (0+255)
  8369  0320  00B9               	movwf	??_dtoa
  8370  0321  0839               	movf	??_dtoa,w
  8371  0322  00A8               	movwf	pad@buf
  8372  0323  0842               	movf	dtoa@w+1,w
  8373  0324  00AA               	movwf	pad@p+1
  8374  0325  0841               	movf	dtoa@w,w
  8375  0326  00A9               	movwf	pad@p
  8376  0327  083C               	movf	dtoa@fp,w
  8377  0328  318E  2635  3181   	fcall	_pad
  8378  032B  0020               	movlb	0	; select bank0
  8379  032C  0829               	movf	?_pad+1,w
  8380  032D  00B2               	movwf	?_dtoa+1
  8381  032E  0828               	movf	?_pad,w
  8382  032F  00B1               	movwf	?_dtoa
  8383  0330                     l1228:
  8384  0330  0008               	return
  8385  0331                     __end_of_dtoa:
  8386                           
  8387                           	psect	text7
  8388  0E35                     __ptext7:	
  8389 ;; *************** function _pad *****************
  8390 ;; Defined at:
  8391 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  8392 ;; Parameters:    Size  Location     Type
  8393 ;;  fp              1    wreg     PTR struct _IO_FILE
  8394 ;;		 -> NULL(0), sprintf@f(5), 
  8395 ;;  buf             1    8[BANK0 ] PTR unsigned char 
  8396 ;;		 -> dbuf(32), 
  8397 ;;  p               2    9[BANK0 ] int 
  8398 ;; Auto vars:     Size  Location     Type
  8399 ;;  fp              1   16[BANK0 ] PTR struct _IO_FILE
  8400 ;;		 -> NULL(0), sprintf@f(5), 
  8401 ;;  w               2   14[BANK0 ] int 
  8402 ;;  i               2   12[BANK0 ] int 
  8403 ;; Return value:  Size  Location     Type
  8404 ;;                  2    8[BANK0 ] int 
  8405 ;; Registers used:
  8406 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8407 ;; Tracked objects:
  8408 ;;		On entry : 0/0
  8409 ;;		On exit  : 0/0
  8410 ;;		Unchanged: 0/0
  8411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8412 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8413 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8414 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8415 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8416 ;;Total ram usage:        9 bytes
  8417 ;; Hardware stack levels used: 1
  8418 ;; Hardware stack levels required when called: 5
  8419 ;; This function calls:
  8420 ;;		_fputc
  8421 ;;		_fputs
  8422 ;;		_strlen
  8423 ;; This function is called by:
  8424 ;;		_dtoa
  8425 ;; This function uses a non-reentrant model
  8426 ;;
  8427                           
  8428                           
  8429                           ;psect for function _pad
  8430  0E35                     _pad:
  8431                           
  8432                           ;incstack = 0
  8433                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8434                           ;pad@fp stored from wreg
  8435  0E35  0020               	movlb	0	; select bank0
  8436  0E36  00B0               	movwf	pad@fp
  8437  0E37                     l3464:
  8438                           
  8439                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  8440  0E37  0021               	movlb	1	; select bank1
  8441  0E38  1C2E               	btfss	_flags^(0+128),0
  8442  0E39  2E3B               	goto	u2731
  8443  0E3A  2E3C               	goto	u2730
  8444  0E3B                     u2731:
  8445  0E3B  2E45               	goto	l3468
  8446  0E3C                     u2730:
  8447  0E3C                     l3466:
  8448                           
  8449                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  8450  0E3C  0020               	movlb	0	; select bank0
  8451  0E3D  0830               	movf	pad@fp,w
  8452  0E3E  00AB               	movwf	??_pad
  8453  0E3F  082B               	movf	??_pad,w
  8454  0E40  00A0               	movwf	fputs@fp
  8455  0E41  0828               	movf	pad@buf,w
  8456  0E42  318C  24A5  318E   	fcall	_fputs
  8457  0E45                     l3468:
  8458                           
  8459                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  8460  0E45  0020               	movlb	0	; select bank0
  8461  0E46  1BAA               	btfsc	pad@p+1,7
  8462  0E47  2E49               	goto	u2741
  8463  0E48  2E4A               	goto	u2740
  8464  0E49                     u2741:
  8465  0E49  2E4F               	goto	l3472
  8466  0E4A                     u2740:
  8467  0E4A                     l3470:
  8468  0E4A  082A               	movf	pad@p+1,w
  8469  0E4B  00AF               	movwf	pad@w+1
  8470  0E4C  0829               	movf	pad@p,w
  8471  0E4D  00AE               	movwf	pad@w
  8472  0E4E  2E51               	goto	l1181
  8473  0E4F                     l3472:
  8474  0E4F  01AE               	clrf	pad@w
  8475  0E50  01AF               	clrf	pad@w+1
  8476  0E51                     l1181:
  8477                           
  8478                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  8479  0E51  01AC               	clrf	pad@i
  8480  0E52  01AD               	clrf	pad@i+1
  8481                           
  8482                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8483  0E53  2E65               	goto	l3478
  8484  0E54                     l3474:
  8485                           
  8486                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  8487  0E54  3020               	movlw	32
  8488  0E55  00F4               	movwf	fputc@c
  8489  0E56  3000               	movlw	0
  8490  0E57  00F5               	movwf	fputc@c+1
  8491  0E58  0020               	movlb	0	; select bank0
  8492  0E59  0830               	movf	pad@fp,w
  8493  0E5A  00AB               	movwf	??_pad
  8494  0E5B  082B               	movf	??_pad,w
  8495  0E5C  00F6               	movwf	fputc@fp
  8496  0E5D  318D  25E5  318E   	fcall	_fputc
  8497  0E60                     l3476:
  8498                           
  8499                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  8500  0E60  3001               	movlw	1
  8501  0E61  0020               	movlb	0	; select bank0
  8502  0E62  07AC               	addwf	pad@i,f
  8503  0E63  3000               	movlw	0
  8504  0E64  3DAD               	addwfc	pad@i+1,f
  8505  0E65                     l3478:
  8506                           
  8507                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8508  0E65  082D               	movf	pad@i+1,w
  8509  0E66  3A80               	xorlw	128
  8510  0E67  00AB               	movwf	??_pad
  8511  0E68  082F               	movf	pad@w+1,w
  8512  0E69  3A80               	xorlw	128
  8513  0E6A  022B               	subwf	??_pad,w
  8514  0E6B  1D03               	skipz
  8515  0E6C  2E6F               	goto	u2755
  8516  0E6D  082E               	movf	pad@w,w
  8517  0E6E  022C               	subwf	pad@i,w
  8518  0E6F                     u2755:
  8519  0E6F  1C03               	skipc
  8520  0E70  2E72               	goto	u2751
  8521  0E71  2E73               	goto	u2750
  8522  0E72                     u2751:
  8523  0E72  2E54               	goto	l3474
  8524  0E73                     u2750:
  8525  0E73                     l1184:
  8526                           
  8527                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  8528  0E73  0021               	movlb	1	; select bank1
  8529  0E74  182E               	btfsc	_flags^(0+128),0
  8530  0E75  2E77               	goto	u2761
  8531  0E76  2E78               	goto	u2760
  8532  0E77                     u2761:
  8533  0E77  2E81               	goto	l3482
  8534  0E78                     u2760:
  8535  0E78                     l3480:
  8536                           
  8537                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  8538  0E78  0020               	movlb	0	; select bank0
  8539  0E79  0830               	movf	pad@fp,w
  8540  0E7A  00AB               	movwf	??_pad
  8541  0E7B  082B               	movf	??_pad,w
  8542  0E7C  00A0               	movwf	fputs@fp
  8543  0E7D  0828               	movf	pad@buf,w
  8544  0E7E  318C  24A5  318E   	fcall	_fputs
  8545  0E81                     l3482:
  8546                           
  8547                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  8548  0E81  0020               	movlb	0	; select bank0
  8549  0E82  0828               	movf	pad@buf,w
  8550  0E83  318B  23A5  318E   	fcall	_strlen
  8551  0E86  0020               	movlb	0	; select bank0
  8552  0E87  082E               	movf	pad@w,w
  8553  0E88  0771               	addwf	?_strlen,w
  8554  0E89  00A8               	movwf	?_pad
  8555  0E8A  082F               	movf	pad@w+1,w
  8556  0E8B  3D72               	addwfc	?_strlen+1,w
  8557  0E8C  00A9               	movwf	?_pad+1
  8558  0E8D                     l1186:
  8559  0E8D  0008               	return
  8560  0E8E                     __end_of_pad:
  8561                           
  8562                           	psect	text8
  8563  0BA5                     __ptext8:	
  8564 ;; *************** function _strlen *****************
  8565 ;; Defined at:
  8566 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  8567 ;; Parameters:    Size  Location     Type
  8568 ;;  s               1    wreg     PTR const unsigned char 
  8569 ;;		 -> dbuf(32), 
  8570 ;; Auto vars:     Size  Location     Type
  8571 ;;  s               1    5[COMMON] PTR const unsigned char 
  8572 ;;		 -> dbuf(32), 
  8573 ;;  a               1    4[COMMON] PTR const unsigned char 
  8574 ;;		 -> dbuf(32), 
  8575 ;; Return value:  Size  Location     Type
  8576 ;;                  2    1[COMMON] unsigned int 
  8577 ;; Registers used:
  8578 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8579 ;; Tracked objects:
  8580 ;;		On entry : 0/0
  8581 ;;		On exit  : 0/0
  8582 ;;		Unchanged: 0/0
  8583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8584 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8585 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8586 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8587 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8588 ;;Total ram usage:        5 bytes
  8589 ;; Hardware stack levels used: 1
  8590 ;; Hardware stack levels required when called: 1
  8591 ;; This function calls:
  8592 ;;		Nothing
  8593 ;; This function is called by:
  8594 ;;		_pad
  8595 ;; This function uses a non-reentrant model
  8596 ;;
  8597                           
  8598                           
  8599                           ;psect for function _strlen
  8600  0BA5                     _strlen:
  8601                           
  8602                           ;incstack = 0
  8603                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  8604                           ;strlen@s stored from wreg
  8605  0BA5  00F5               	movwf	strlen@s
  8606  0BA6                     l2420:
  8607  0BA6  0875               	movf	strlen@s,w
  8608  0BA7  00F3               	movwf	??_strlen
  8609  0BA8  0873               	movf	??_strlen,w
  8610  0BA9  00F4               	movwf	strlen@a
  8611  0BAA  2BAF               	goto	l2424
  8612  0BAB                     l2422:
  8613  0BAB  3001               	movlw	1
  8614  0BAC  00F3               	movwf	??_strlen
  8615  0BAD  0873               	movf	??_strlen,w
  8616  0BAE  07F5               	addwf	strlen@s,f
  8617  0BAF                     l2424:
  8618  0BAF  0875               	movf	strlen@s,w
  8619  0BB0  0086               	movwf	6
  8620  0BB1  0187               	clrf	7
  8621  0BB2  0801               	movf	1,w
  8622  0BB3  1D03               	btfss	3,2
  8623  0BB4  2BB6               	goto	u1481
  8624  0BB5  2BB7               	goto	u1480
  8625  0BB6                     u1481:
  8626  0BB6  2BAB               	goto	l2422
  8627  0BB7                     u1480:
  8628  0BB7                     l2426:
  8629  0BB7  0874               	movf	strlen@a,w
  8630  0BB8  0275               	subwf	strlen@s,w
  8631  0BB9  00F1               	movwf	?_strlen
  8632  0BBA  01F2               	clrf	?_strlen+1
  8633  0BBB  1BF1               	btfsc	?_strlen,7
  8634  0BBC  03F2               	decf	?_strlen+1,f
  8635  0BBD                     l1284:
  8636  0BBD  0008               	return
  8637  0BBE                     __end_of_strlen:
  8638                           
  8639                           	psect	text9
  8640  0CA5                     __ptext9:	
  8641 ;; *************** function _fputs *****************
  8642 ;; Defined at:
  8643 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  8644 ;; Parameters:    Size  Location     Type
  8645 ;;  s               1    wreg     PTR const unsigned char 
  8646 ;;		 -> dbuf(32), 
  8647 ;;  fp              1    0[BANK0 ] PTR struct _IO_FILE
  8648 ;;		 -> NULL(0), sprintf@f(5), 
  8649 ;; Auto vars:     Size  Location     Type
  8650 ;;  s               1    7[BANK0 ] PTR const unsigned char 
  8651 ;;		 -> dbuf(32), 
  8652 ;;  i               2    5[BANK0 ] int 
  8653 ;;  c               1    4[BANK0 ] unsigned char 
  8654 ;; Return value:  Size  Location     Type
  8655 ;;                  2    0[BANK0 ] int 
  8656 ;; Registers used:
  8657 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8658 ;; Tracked objects:
  8659 ;;		On entry : 0/0
  8660 ;;		On exit  : 0/0
  8661 ;;		Unchanged: 0/0
  8662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8663 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8664 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8665 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8666 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8667 ;;Total ram usage:        8 bytes
  8668 ;; Hardware stack levels used: 1
  8669 ;; Hardware stack levels required when called: 4
  8670 ;; This function calls:
  8671 ;;		_fputc
  8672 ;; This function is called by:
  8673 ;;		_pad
  8674 ;; This function uses a non-reentrant model
  8675 ;;
  8676                           
  8677                           
  8678                           ;psect for function _fputs
  8679  0CA5                     _fputs:
  8680                           
  8681                           ;incstack = 0
  8682                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8683                           ;fputs@s stored from wreg
  8684  0CA5  0020               	movlb	0	; select bank0
  8685  0CA6  00A7               	movwf	fputs@s
  8686  0CA7                     l3454:
  8687  0CA7  01A5               	clrf	fputs@i
  8688  0CA8  01A6               	clrf	fputs@i+1
  8689  0CA9  2CBD               	goto	l3460
  8690  0CAA                     l3456:
  8691  0CAA  0824               	movf	fputs@c,w
  8692  0CAB  00A1               	movwf	??_fputs
  8693  0CAC  01A2               	clrf	??_fputs+1
  8694  0CAD  0821               	movf	??_fputs,w
  8695  0CAE  00F4               	movwf	fputc@c
  8696  0CAF  0822               	movf	??_fputs+1,w
  8697  0CB0  00F5               	movwf	fputc@c+1
  8698  0CB1  0820               	movf	fputs@fp,w
  8699  0CB2  00A3               	movwf	??_fputs+2
  8700  0CB3  0823               	movf	??_fputs+2,w
  8701  0CB4  00F6               	movwf	fputc@fp
  8702  0CB5  318D  25E5  318C   	fcall	_fputc
  8703  0CB8                     l3458:
  8704  0CB8  3001               	movlw	1
  8705  0CB9  0020               	movlb	0	; select bank0
  8706  0CBA  07A5               	addwf	fputs@i,f
  8707  0CBB  3000               	movlw	0
  8708  0CBC  3DA6               	addwfc	fputs@i+1,f
  8709  0CBD                     l3460:
  8710  0CBD  0825               	movf	fputs@i,w
  8711  0CBE  0727               	addwf	fputs@s,w
  8712  0CBF  00A1               	movwf	??_fputs
  8713  0CC0  0821               	movf	??_fputs,w
  8714  0CC1  0086               	movwf	6
  8715  0CC2  0187               	clrf	7
  8716  0CC3  0801               	movf	1,w
  8717  0CC4  00A2               	movwf	??_fputs+1
  8718  0CC5  0822               	movf	??_fputs+1,w
  8719  0CC6  00A4               	movwf	fputs@c
  8720  0CC7  0824               	movf	fputs@c,w
  8721  0CC8  1D03               	btfss	3,2
  8722  0CC9  2CCB               	goto	u2721
  8723  0CCA  2CCC               	goto	u2720
  8724  0CCB                     u2721:
  8725  0CCB  2CAA               	goto	l3456
  8726  0CCC                     u2720:
  8727  0CCC                     l1271:
  8728  0CCC  0008               	return
  8729  0CCD                     __end_of_fputs:
  8730                           
  8731                           	psect	text10
  8732  0C0C                     __ptext10:	
  8733 ;; *************** function _abs *****************
  8734 ;; Defined at:
  8735 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  8736 ;; Parameters:    Size  Location     Type
  8737 ;;  a               2    4[COMMON] int 
  8738 ;; Auto vars:     Size  Location     Type
  8739 ;;		None
  8740 ;; Return value:  Size  Location     Type
  8741 ;;                  2    4[COMMON] int 
  8742 ;; Registers used:
  8743 ;;		wreg, status,2, status,0
  8744 ;; Tracked objects:
  8745 ;;		On entry : 0/0
  8746 ;;		On exit  : 0/0
  8747 ;;		Unchanged: 0/0
  8748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8749 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8751 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8752 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8753 ;;Total ram usage:        4 bytes
  8754 ;; Hardware stack levels used: 1
  8755 ;; Hardware stack levels required when called: 1
  8756 ;; This function calls:
  8757 ;;		Nothing
  8758 ;; This function is called by:
  8759 ;;		_dtoa
  8760 ;; This function uses a non-reentrant model
  8761 ;;
  8762                           
  8763                           
  8764                           ;psect for function _abs
  8765  0C0C                     _abs:
  8766  0C0C                     l2522:	
  8767                           ;incstack = 0
  8768                           ; Regs used in _abs: [wreg+status,2+status,0]
  8769                           
  8770  0C0C  0875               	movf	abs@a+1,w
  8771  0C0D  3A80               	xorlw	128
  8772  0C0E  00F6               	movwf	??_abs
  8773  0C0F  3080               	movlw	128
  8774  0C10  0276               	subwf	??_abs,w
  8775  0C11  1D03               	skipz
  8776  0C12  2C15               	goto	u1745
  8777  0C13  3001               	movlw	1
  8778  0C14  0274               	subwf	abs@a,w
  8779  0C15                     u1745:
  8780  0C15  1803               	skipnc
  8781  0C16  2C18               	goto	u1741
  8782  0C17  2C19               	goto	u1740
  8783  0C18                     u1741:
  8784  0C18  2C25               	goto	l1248
  8785  0C19                     u1740:
  8786  0C19                     l2524:
  8787  0C19  0974               	comf	abs@a,w
  8788  0C1A  00F6               	movwf	??_abs
  8789  0C1B  0975               	comf	abs@a+1,w
  8790  0C1C  00F7               	movwf	??_abs+1
  8791  0C1D  0AF6               	incf	??_abs,f
  8792  0C1E  1903               	skipnz
  8793  0C1F  0AF7               	incf	??_abs+1,f
  8794  0C20  0876               	movf	??_abs,w
  8795  0C21  00F4               	movwf	?_abs
  8796  0C22  0877               	movf	??_abs+1,w
  8797  0C23  00F5               	movwf	?_abs+1
  8798  0C24  2C25               	goto	l1251
  8799  0C25                     l1248:
  8800  0C25                     l1251:
  8801  0C25  0008               	return
  8802  0C26                     __end_of_abs:
  8803                           
  8804                           	psect	text11
  8805  056E                     __ptext11:	
  8806 ;; *************** function ___aomod *****************
  8807 ;; Defined at:
  8808 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  8809 ;; Parameters:    Size  Location     Type
  8810 ;;  divisor         8    0[BANK0 ] long long 
  8811 ;;  dividend        8    8[BANK0 ] long long 
  8812 ;; Auto vars:     Size  Location     Type
  8813 ;;  sign            1    3[COMMON] unsigned char 
  8814 ;;  counter         1    2[COMMON] unsigned char 
  8815 ;; Return value:  Size  Location     Type
  8816 ;;                  8    0[BANK0 ] long long 
  8817 ;; Registers used:
  8818 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8819 ;; Tracked objects:
  8820 ;;		On entry : 0/0
  8821 ;;		On exit  : 0/0
  8822 ;;		Unchanged: 0/0
  8823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8824 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8825 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8826 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8827 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8828 ;;Total ram usage:       19 bytes
  8829 ;; Hardware stack levels used: 1
  8830 ;; Hardware stack levels required when called: 1
  8831 ;; This function calls:
  8832 ;;		Nothing
  8833 ;; This function is called by:
  8834 ;;		_dtoa
  8835 ;; This function uses a non-reentrant model
  8836 ;;
  8837                           
  8838                           
  8839                           ;psect for function ___aomod
  8840  056E                     ___aomod:
  8841  056E                     l2470:	
  8842                           ;incstack = 0
  8843                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  8844                           
  8845  056E  01F3               	clrf	___aomod@sign
  8846  056F                     l2472:
  8847  056F  3028               	movlw	low ___aomod@dividend
  8848  0570  0086               	movwf	6
  8849  0571  3000               	movlw	high ___aomod@dividend
  8850  0572  0087               	movwf	7
  8851  0573  3F47               	moviw [7]fsr1
  8852  0574  00F1               	movwf	??___aomod
  8853  0575  1FF1               	btfss	??___aomod,7
  8854  0576  2D78               	goto	u1601
  8855  0577  2D79               	goto	u1600
  8856  0578                     u1601:
  8857  0578  2D9A               	goto	l2476
  8858  0579                     u1600:
  8859  0579                     l2474:
  8860  0579  0020               	movlb	0	; select bank0
  8861  057A  09A8               	comf	___aomod@dividend,f
  8862  057B  09A9               	comf	___aomod@dividend+1,f
  8863  057C  09AA               	comf	___aomod@dividend+2,f
  8864  057D  09AB               	comf	___aomod@dividend+3,f
  8865  057E  09AC               	comf	___aomod@dividend+4,f
  8866  057F  09AD               	comf	___aomod@dividend+5,f
  8867  0580  09AE               	comf	___aomod@dividend+6,f
  8868  0581  09AF               	comf	___aomod@dividend+7,f
  8869  0582  0AA8               	incf	___aomod@dividend,f
  8870  0583  1D03               	skipz
  8871  0584  2D98               	goto	u161lld
  8872  0585  0AA9               	incf	___aomod@dividend+1,f
  8873  0586  1D03               	skipz
  8874  0587  2D98               	goto	u161lld
  8875  0588  0AAA               	incf	___aomod@dividend+2,f
  8876  0589  1D03               	skipz
  8877  058A  2D98               	goto	u161lld
  8878  058B  0AAB               	incf	___aomod@dividend+3,f
  8879  058C  1D03               	skipz
  8880  058D  2D98               	goto	u161lld
  8881  058E  0AAC               	incf	___aomod@dividend+4,f
  8882  058F  1D03               	skipz
  8883  0590  2D98               	goto	u161lld
  8884  0591  0AAD               	incf	___aomod@dividend+5,f
  8885  0592  1D03               	skipz
  8886  0593  2D98               	goto	u161lld
  8887  0594  0AAE               	incf	___aomod@dividend+6,f
  8888  0595  1D03               	skipz
  8889  0596  2D98               	goto	u161lld
  8890  0597  0AAF               	incf	___aomod@dividend+7,f
  8891  0598                     u161lld:
  8892  0598  01F3               	clrf	___aomod@sign
  8893  0599  0AF3               	incf	___aomod@sign,f
  8894  059A                     l2476:
  8895  059A  3020               	movlw	low ___aomod@divisor
  8896  059B  0086               	movwf	6
  8897  059C  3000               	movlw	high ___aomod@divisor
  8898  059D  0087               	movwf	7
  8899  059E  3F47               	moviw [7]fsr1
  8900  059F  00F1               	movwf	??___aomod
  8901  05A0  1FF1               	btfss	??___aomod,7
  8902  05A1  2DA3               	goto	u1621
  8903  05A2  2DA4               	goto	u1620
  8904  05A3                     u1621:
  8905  05A3  2DC3               	goto	l2480
  8906  05A4                     u1620:
  8907  05A4                     l2478:
  8908  05A4  0020               	movlb	0	; select bank0
  8909  05A5  09A0               	comf	___aomod@divisor,f
  8910  05A6  09A1               	comf	___aomod@divisor+1,f
  8911  05A7  09A2               	comf	___aomod@divisor+2,f
  8912  05A8  09A3               	comf	___aomod@divisor+3,f
  8913  05A9  09A4               	comf	___aomod@divisor+4,f
  8914  05AA  09A5               	comf	___aomod@divisor+5,f
  8915  05AB  09A6               	comf	___aomod@divisor+6,f
  8916  05AC  09A7               	comf	___aomod@divisor+7,f
  8917  05AD  0AA0               	incf	___aomod@divisor,f
  8918  05AE  1D03               	skipz
  8919  05AF  2DC3               	goto	u163lld
  8920  05B0  0AA1               	incf	___aomod@divisor+1,f
  8921  05B1  1D03               	skipz
  8922  05B2  2DC3               	goto	u163lld
  8923  05B3  0AA2               	incf	___aomod@divisor+2,f
  8924  05B4  1D03               	skipz
  8925  05B5  2DC3               	goto	u163lld
  8926  05B6  0AA3               	incf	___aomod@divisor+3,f
  8927  05B7  1D03               	skipz
  8928  05B8  2DC3               	goto	u163lld
  8929  05B9  0AA4               	incf	___aomod@divisor+4,f
  8930  05BA  1D03               	skipz
  8931  05BB  2DC3               	goto	u163lld
  8932  05BC  0AA5               	incf	___aomod@divisor+5,f
  8933  05BD  1D03               	skipz
  8934  05BE  2DC3               	goto	u163lld
  8935  05BF  0AA6               	incf	___aomod@divisor+6,f
  8936  05C0  1D03               	skipz
  8937  05C1  2DC3               	goto	u163lld
  8938  05C2  0AA7               	incf	___aomod@divisor+7,f
  8939  05C3                     u163lld:
  8940  05C3                     l2480:
  8941  05C3  0020               	movlb	0	; select bank0
  8942  05C4  0820               	movf	___aomod@divisor,w
  8943  05C5  0421               	iorwf	___aomod@divisor+1,w
  8944  05C6  0422               	iorwf	___aomod@divisor+2,w
  8945  05C7  0423               	iorwf	___aomod@divisor+3,w
  8946  05C8  0424               	iorwf	___aomod@divisor+4,w
  8947  05C9  0425               	iorwf	___aomod@divisor+5,w
  8948  05CA  0426               	iorwf	___aomod@divisor+6,w
  8949  05CB  0427               	iorwf	___aomod@divisor+7,w
  8950  05CC  1903               	skipnz
  8951  05CD  2DCF               	goto	u1641
  8952  05CE  2DD0               	goto	u1640
  8953  05CF                     u1641:
  8954  05CF  2E23               	goto	l2496
  8955  05D0                     u1640:
  8956  05D0                     l2482:
  8957  05D0  01F2               	clrf	___aomod@counter
  8958  05D1  0AF2               	incf	___aomod@counter,f
  8959  05D2  2DDF               	goto	l2488
  8960  05D3                     l2484:
  8961  05D3  35A0               	lslf	___aomod@divisor,f
  8962  05D4  0DA1               	rlf	___aomod@divisor+1,f
  8963  05D5  0DA2               	rlf	___aomod@divisor+2,f
  8964  05D6  0DA3               	rlf	___aomod@divisor+3,f
  8965  05D7  0DA4               	rlf	___aomod@divisor+4,f
  8966  05D8  0DA5               	rlf	___aomod@divisor+5,f
  8967  05D9  0DA6               	rlf	___aomod@divisor+6,f
  8968  05DA  0DA7               	rlf	___aomod@divisor+7,f
  8969  05DB                     l2486:
  8970  05DB  3001               	movlw	1
  8971  05DC  00F1               	movwf	??___aomod
  8972  05DD  0871               	movf	??___aomod,w
  8973  05DE  07F2               	addwf	___aomod@counter,f
  8974  05DF                     l2488:
  8975  05DF  1FA7               	btfss	___aomod@divisor+7,7
  8976  05E0  2DE2               	goto	u1651
  8977  05E1  2DE3               	goto	u1650
  8978  05E2                     u1651:
  8979  05E2  2DD3               	goto	l2484
  8980  05E3                     u1650:
  8981  05E3                     l2490:
  8982  05E3  0827               	movf	___aomod@divisor+7,w
  8983  05E4  022F               	subwf	___aomod@dividend+7,w
  8984  05E5  1D03               	skipz
  8985  05E6  2E01               	goto	u1665
  8986  05E7  0826               	movf	___aomod@divisor+6,w
  8987  05E8  022E               	subwf	___aomod@dividend+6,w
  8988  05E9  1D03               	skipz
  8989  05EA  2E01               	goto	u1665
  8990  05EB  0825               	movf	___aomod@divisor+5,w
  8991  05EC  022D               	subwf	___aomod@dividend+5,w
  8992  05ED  1D03               	skipz
  8993  05EE  2E01               	goto	u1665
  8994  05EF  0824               	movf	___aomod@divisor+4,w
  8995  05F0  022C               	subwf	___aomod@dividend+4,w
  8996  05F1  1D03               	skipz
  8997  05F2  2E01               	goto	u1665
  8998  05F3  0823               	movf	___aomod@divisor+3,w
  8999  05F4  022B               	subwf	___aomod@dividend+3,w
  9000  05F5  1D03               	skipz
  9001  05F6  2E01               	goto	u1665
  9002  05F7  0822               	movf	___aomod@divisor+2,w
  9003  05F8  022A               	subwf	___aomod@dividend+2,w
  9004  05F9  1D03               	skipz
  9005  05FA  2E01               	goto	u1665
  9006  05FB  0821               	movf	___aomod@divisor+1,w
  9007  05FC  0229               	subwf	___aomod@dividend+1,w
  9008  05FD  1D03               	skipz
  9009  05FE  2E01               	goto	u1665
  9010  05FF  0820               	movf	___aomod@divisor,w
  9011  0600  0228               	subwf	___aomod@dividend,w
  9012  0601                     u1665:
  9013  0601  1C03               	skipc
  9014  0602  2E04               	goto	u1661
  9015  0603  2E05               	goto	u1660
  9016  0604                     u1661:
  9017  0604  2E15               	goto	l2494
  9018  0605                     u1660:
  9019  0605                     l2492:
  9020  0605  0820               	movf	___aomod@divisor,w
  9021  0606  02A8               	subwf	___aomod@dividend,f
  9022  0607  0821               	movf	___aomod@divisor+1,w
  9023  0608  3BA9               	subwfb	___aomod@dividend+1,f
  9024  0609  0822               	movf	___aomod@divisor+2,w
  9025  060A  3BAA               	subwfb	___aomod@dividend+2,f
  9026  060B  0823               	movf	___aomod@divisor+3,w
  9027  060C  3BAB               	subwfb	___aomod@dividend+3,f
  9028  060D  0824               	movf	___aomod@divisor+4,w
  9029  060E  3BAC               	subwfb	___aomod@dividend+4,f
  9030  060F  0825               	movf	___aomod@divisor+5,w
  9031  0610  3BAD               	subwfb	___aomod@dividend+5,f
  9032  0611  0826               	movf	___aomod@divisor+6,w
  9033  0612  3BAE               	subwfb	___aomod@dividend+6,f
  9034  0613  0827               	movf	___aomod@divisor+7,w
  9035  0614  3BAF               	subwfb	___aomod@dividend+7,f
  9036  0615                     l2494:
  9037  0615  36A7               	lsrf	___aomod@divisor+7,f
  9038  0616  0CA6               	rrf	___aomod@divisor+6,f
  9039  0617  0CA5               	rrf	___aomod@divisor+5,f
  9040  0618  0CA4               	rrf	___aomod@divisor+4,f
  9041  0619  0CA3               	rrf	___aomod@divisor+3,f
  9042  061A  0CA2               	rrf	___aomod@divisor+2,f
  9043  061B  0CA1               	rrf	___aomod@divisor+1,f
  9044  061C  0CA0               	rrf	___aomod@divisor,f
  9045  061D  3001               	movlw	1
  9046  061E  02F2               	subwf	___aomod@counter,f
  9047  061F  1D03               	btfss	3,2
  9048  0620  2E22               	goto	u1671
  9049  0621  2E23               	goto	u1670
  9050  0622                     u1671:
  9051  0622  2DE3               	goto	l2490
  9052  0623                     u1670:
  9053  0623                     l2496:
  9054  0623  0873               	movf	___aomod@sign,w
  9055  0624  1903               	btfsc	3,2
  9056  0625  2E27               	goto	u1681
  9057  0626  2E28               	goto	u1680
  9058  0627                     u1681:
  9059  0627  2E46               	goto	l804
  9060  0628                     u1680:
  9061  0628                     l2498:
  9062  0628  09A8               	comf	___aomod@dividend,f
  9063  0629  09A9               	comf	___aomod@dividend+1,f
  9064  062A  09AA               	comf	___aomod@dividend+2,f
  9065  062B  09AB               	comf	___aomod@dividend+3,f
  9066  062C  09AC               	comf	___aomod@dividend+4,f
  9067  062D  09AD               	comf	___aomod@dividend+5,f
  9068  062E  09AE               	comf	___aomod@dividend+6,f
  9069  062F  09AF               	comf	___aomod@dividend+7,f
  9070  0630  0AA8               	incf	___aomod@dividend,f
  9071  0631  1D03               	skipz
  9072  0632  2E46               	goto	u169lld
  9073  0633  0AA9               	incf	___aomod@dividend+1,f
  9074  0634  1D03               	skipz
  9075  0635  2E46               	goto	u169lld
  9076  0636  0AAA               	incf	___aomod@dividend+2,f
  9077  0637  1D03               	skipz
  9078  0638  2E46               	goto	u169lld
  9079  0639  0AAB               	incf	___aomod@dividend+3,f
  9080  063A  1D03               	skipz
  9081  063B  2E46               	goto	u169lld
  9082  063C  0AAC               	incf	___aomod@dividend+4,f
  9083  063D  1D03               	skipz
  9084  063E  2E46               	goto	u169lld
  9085  063F  0AAD               	incf	___aomod@dividend+5,f
  9086  0640  1D03               	skipz
  9087  0641  2E46               	goto	u169lld
  9088  0642  0AAE               	incf	___aomod@dividend+6,f
  9089  0643  1D03               	skipz
  9090  0644  2E46               	goto	u169lld
  9091  0645  0AAF               	incf	___aomod@dividend+7,f
  9092  0646                     u169lld:
  9093  0646                     l804:
  9094  0646  0020               	movlb	0	; select bank0
  9095  0647  0828               	movf	___aomod@dividend,w
  9096  0648  00A0               	movwf	?___aomod
  9097  0649  0829               	movf	___aomod@dividend+1,w
  9098  064A  00A1               	movwf	?___aomod+1
  9099  064B  082A               	movf	___aomod@dividend+2,w
  9100  064C  00A2               	movwf	?___aomod+2
  9101  064D  082B               	movf	___aomod@dividend+3,w
  9102  064E  00A3               	movwf	?___aomod+3
  9103  064F  082C               	movf	___aomod@dividend+4,w
  9104  0650  00A4               	movwf	?___aomod+4
  9105  0651  082D               	movf	___aomod@dividend+5,w
  9106  0652  00A5               	movwf	?___aomod+5
  9107  0653  082E               	movf	___aomod@dividend+6,w
  9108  0654  00A6               	movwf	?___aomod+6
  9109  0655  082F               	movf	___aomod@dividend+7,w
  9110  0656  00A7               	movwf	?___aomod+7
  9111  0657                     l805:
  9112  0657  0008               	return
  9113  0658                     __end_of___aomod:
  9114                           
  9115                           	psect	text12
  9116  046D                     __ptext12:	
  9117 ;; *************** function ___aodiv *****************
  9118 ;; Defined at:
  9119 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  9120 ;; Parameters:    Size  Location     Type
  9121 ;;  divisor         8    0[BANK0 ] long long 
  9122 ;;  dividend        8    8[BANK0 ] long long 
  9123 ;; Auto vars:     Size  Location     Type
  9124 ;;  quotient        8    4[COMMON] long long 
  9125 ;;  sign            1    3[COMMON] unsigned char 
  9126 ;;  counter         1    2[COMMON] unsigned char 
  9127 ;; Return value:  Size  Location     Type
  9128 ;;                  8    0[BANK0 ] long long 
  9129 ;; Registers used:
  9130 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9131 ;; Tracked objects:
  9132 ;;		On entry : 0/0
  9133 ;;		On exit  : 0/0
  9134 ;;		Unchanged: 0/0
  9135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9136 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9137 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9138 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9139 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9140 ;;Total ram usage:       27 bytes
  9141 ;; Hardware stack levels used: 1
  9142 ;; Hardware stack levels required when called: 1
  9143 ;; This function calls:
  9144 ;;		Nothing
  9145 ;; This function is called by:
  9146 ;;		_dtoa
  9147 ;; This function uses a non-reentrant model
  9148 ;;
  9149                           
  9150                           
  9151                           ;psect for function ___aodiv
  9152  046D                     ___aodiv:
  9153  046D                     l2432:	
  9154                           ;incstack = 0
  9155                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  9156                           
  9157  046D  01F3               	clrf	___aodiv@sign
  9158  046E                     l2434:
  9159  046E  3020               	movlw	low ___aodiv@divisor
  9160  046F  0086               	movwf	6
  9161  0470  3000               	movlw	high ___aodiv@divisor
  9162  0471  0087               	movwf	7
  9163  0472  3F47               	moviw [7]fsr1
  9164  0473  00F1               	movwf	??___aodiv
  9165  0474  1FF1               	btfss	??___aodiv,7
  9166  0475  2C77               	goto	u1491
  9167  0476  2C78               	goto	u1490
  9168  0477                     u1491:
  9169  0477  2C99               	goto	l2438
  9170  0478                     u1490:
  9171  0478                     l2436:
  9172  0478  0020               	movlb	0	; select bank0
  9173  0479  09A0               	comf	___aodiv@divisor,f
  9174  047A  09A1               	comf	___aodiv@divisor+1,f
  9175  047B  09A2               	comf	___aodiv@divisor+2,f
  9176  047C  09A3               	comf	___aodiv@divisor+3,f
  9177  047D  09A4               	comf	___aodiv@divisor+4,f
  9178  047E  09A5               	comf	___aodiv@divisor+5,f
  9179  047F  09A6               	comf	___aodiv@divisor+6,f
  9180  0480  09A7               	comf	___aodiv@divisor+7,f
  9181  0481  0AA0               	incf	___aodiv@divisor,f
  9182  0482  1D03               	skipz
  9183  0483  2C97               	goto	u150lld
  9184  0484  0AA1               	incf	___aodiv@divisor+1,f
  9185  0485  1D03               	skipz
  9186  0486  2C97               	goto	u150lld
  9187  0487  0AA2               	incf	___aodiv@divisor+2,f
  9188  0488  1D03               	skipz
  9189  0489  2C97               	goto	u150lld
  9190  048A  0AA3               	incf	___aodiv@divisor+3,f
  9191  048B  1D03               	skipz
  9192  048C  2C97               	goto	u150lld
  9193  048D  0AA4               	incf	___aodiv@divisor+4,f
  9194  048E  1D03               	skipz
  9195  048F  2C97               	goto	u150lld
  9196  0490  0AA5               	incf	___aodiv@divisor+5,f
  9197  0491  1D03               	skipz
  9198  0492  2C97               	goto	u150lld
  9199  0493  0AA6               	incf	___aodiv@divisor+6,f
  9200  0494  1D03               	skipz
  9201  0495  2C97               	goto	u150lld
  9202  0496  0AA7               	incf	___aodiv@divisor+7,f
  9203  0497                     u150lld:
  9204  0497  01F3               	clrf	___aodiv@sign
  9205  0498  0AF3               	incf	___aodiv@sign,f
  9206  0499                     l2438:
  9207  0499  3028               	movlw	low ___aodiv@dividend
  9208  049A  0086               	movwf	6
  9209  049B  3000               	movlw	high ___aodiv@dividend
  9210  049C  0087               	movwf	7
  9211  049D  3F47               	moviw [7]fsr1
  9212  049E  00F1               	movwf	??___aodiv
  9213  049F  1FF1               	btfss	??___aodiv,7
  9214  04A0  2CA2               	goto	u1511
  9215  04A1  2CA3               	goto	u1510
  9216  04A2                     u1511:
  9217  04A2  2CC6               	goto	l2444
  9218  04A3                     u1510:
  9219  04A3                     l2440:
  9220  04A3  0020               	movlb	0	; select bank0
  9221  04A4  09A8               	comf	___aodiv@dividend,f
  9222  04A5  09A9               	comf	___aodiv@dividend+1,f
  9223  04A6  09AA               	comf	___aodiv@dividend+2,f
  9224  04A7  09AB               	comf	___aodiv@dividend+3,f
  9225  04A8  09AC               	comf	___aodiv@dividend+4,f
  9226  04A9  09AD               	comf	___aodiv@dividend+5,f
  9227  04AA  09AE               	comf	___aodiv@dividend+6,f
  9228  04AB  09AF               	comf	___aodiv@dividend+7,f
  9229  04AC  0AA8               	incf	___aodiv@dividend,f
  9230  04AD  1D03               	skipz
  9231  04AE  2CC2               	goto	u152lld
  9232  04AF  0AA9               	incf	___aodiv@dividend+1,f
  9233  04B0  1D03               	skipz
  9234  04B1  2CC2               	goto	u152lld
  9235  04B2  0AAA               	incf	___aodiv@dividend+2,f
  9236  04B3  1D03               	skipz
  9237  04B4  2CC2               	goto	u152lld
  9238  04B5  0AAB               	incf	___aodiv@dividend+3,f
  9239  04B6  1D03               	skipz
  9240  04B7  2CC2               	goto	u152lld
  9241  04B8  0AAC               	incf	___aodiv@dividend+4,f
  9242  04B9  1D03               	skipz
  9243  04BA  2CC2               	goto	u152lld
  9244  04BB  0AAD               	incf	___aodiv@dividend+5,f
  9245  04BC  1D03               	skipz
  9246  04BD  2CC2               	goto	u152lld
  9247  04BE  0AAE               	incf	___aodiv@dividend+6,f
  9248  04BF  1D03               	skipz
  9249  04C0  2CC2               	goto	u152lld
  9250  04C1  0AAF               	incf	___aodiv@dividend+7,f
  9251  04C2                     u152lld:
  9252  04C2                     l2442:
  9253  04C2  3001               	movlw	1
  9254  04C3  00F1               	movwf	??___aodiv
  9255  04C4  0871               	movf	??___aodiv,w
  9256  04C5  06F3               	xorwf	___aodiv@sign,f
  9257  04C6                     l2444:
  9258  04C6  3074               	movlw	low ___aodiv@quotient
  9259  04C7  0086               	movwf	6
  9260  04C8  3000               	movlw	high ___aodiv@quotient
  9261  04C9  0087               	movwf	7
  9262  04CA  3008               	movlw	8
  9263  04CB  00F1               	movwf	??___aodiv
  9264  04CC  3000               	movlw	0
  9265  04CD                     u1530:
  9266  04CD  001E               	movwi fsr1++
  9267  04CE  0BF1               	decfsz	??___aodiv,f
  9268  04CF  2CCD               	goto	u1530
  9269  04D0                     l2446:
  9270  04D0  0020               	movlb	0	; select bank0
  9271  04D1  0820               	movf	___aodiv@divisor,w
  9272  04D2  0421               	iorwf	___aodiv@divisor+1,w
  9273  04D3  0422               	iorwf	___aodiv@divisor+2,w
  9274  04D4  0423               	iorwf	___aodiv@divisor+3,w
  9275  04D5  0424               	iorwf	___aodiv@divisor+4,w
  9276  04D6  0425               	iorwf	___aodiv@divisor+5,w
  9277  04D7  0426               	iorwf	___aodiv@divisor+6,w
  9278  04D8  0427               	iorwf	___aodiv@divisor+7,w
  9279  04D9  1903               	skipnz
  9280  04DA  2CDC               	goto	u1541
  9281  04DB  2CDD               	goto	u1540
  9282  04DC                     u1541:
  9283  04DC  2D39               	goto	l2466
  9284  04DD                     u1540:
  9285  04DD                     l2448:
  9286  04DD  01F2               	clrf	___aodiv@counter
  9287  04DE  0AF2               	incf	___aodiv@counter,f
  9288  04DF  2CEC               	goto	l2454
  9289  04E0                     l2450:
  9290  04E0  35A0               	lslf	___aodiv@divisor,f
  9291  04E1  0DA1               	rlf	___aodiv@divisor+1,f
  9292  04E2  0DA2               	rlf	___aodiv@divisor+2,f
  9293  04E3  0DA3               	rlf	___aodiv@divisor+3,f
  9294  04E4  0DA4               	rlf	___aodiv@divisor+4,f
  9295  04E5  0DA5               	rlf	___aodiv@divisor+5,f
  9296  04E6  0DA6               	rlf	___aodiv@divisor+6,f
  9297  04E7  0DA7               	rlf	___aodiv@divisor+7,f
  9298  04E8                     l2452:
  9299  04E8  3001               	movlw	1
  9300  04E9  00F1               	movwf	??___aodiv
  9301  04EA  0871               	movf	??___aodiv,w
  9302  04EB  07F2               	addwf	___aodiv@counter,f
  9303  04EC                     l2454:
  9304  04EC  1FA7               	btfss	___aodiv@divisor+7,7
  9305  04ED  2CEF               	goto	u1551
  9306  04EE  2CF0               	goto	u1550
  9307  04EF                     u1551:
  9308  04EF  2CE0               	goto	l2450
  9309  04F0                     u1550:
  9310  04F0                     l2456:
  9311  04F0  35F4               	lslf	___aodiv@quotient,f
  9312  04F1  0DF5               	rlf	___aodiv@quotient+1,f
  9313  04F2  0DF6               	rlf	___aodiv@quotient+2,f
  9314  04F3  0DF7               	rlf	___aodiv@quotient+3,f
  9315  04F4  0DF8               	rlf	___aodiv@quotient+4,f
  9316  04F5  0DF9               	rlf	___aodiv@quotient+5,f
  9317  04F6  0DFA               	rlf	___aodiv@quotient+6,f
  9318  04F7  0DFB               	rlf	___aodiv@quotient+7,f
  9319  04F8                     l2458:
  9320  04F8  0827               	movf	___aodiv@divisor+7,w
  9321  04F9  022F               	subwf	___aodiv@dividend+7,w
  9322  04FA  1D03               	skipz
  9323  04FB  2D16               	goto	u1565
  9324  04FC  0826               	movf	___aodiv@divisor+6,w
  9325  04FD  022E               	subwf	___aodiv@dividend+6,w
  9326  04FE  1D03               	skipz
  9327  04FF  2D16               	goto	u1565
  9328  0500  0825               	movf	___aodiv@divisor+5,w
  9329  0501  022D               	subwf	___aodiv@dividend+5,w
  9330  0502  1D03               	skipz
  9331  0503  2D16               	goto	u1565
  9332  0504  0824               	movf	___aodiv@divisor+4,w
  9333  0505  022C               	subwf	___aodiv@dividend+4,w
  9334  0506  1D03               	skipz
  9335  0507  2D16               	goto	u1565
  9336  0508  0823               	movf	___aodiv@divisor+3,w
  9337  0509  022B               	subwf	___aodiv@dividend+3,w
  9338  050A  1D03               	skipz
  9339  050B  2D16               	goto	u1565
  9340  050C  0822               	movf	___aodiv@divisor+2,w
  9341  050D  022A               	subwf	___aodiv@dividend+2,w
  9342  050E  1D03               	skipz
  9343  050F  2D16               	goto	u1565
  9344  0510  0821               	movf	___aodiv@divisor+1,w
  9345  0511  0229               	subwf	___aodiv@dividend+1,w
  9346  0512  1D03               	skipz
  9347  0513  2D16               	goto	u1565
  9348  0514  0820               	movf	___aodiv@divisor,w
  9349  0515  0228               	subwf	___aodiv@dividend,w
  9350  0516                     u1565:
  9351  0516  1C03               	skipc
  9352  0517  2D19               	goto	u1561
  9353  0518  2D1A               	goto	u1560
  9354  0519                     u1561:
  9355  0519  2D2B               	goto	l2464
  9356  051A                     u1560:
  9357  051A                     l2460:
  9358  051A  0820               	movf	___aodiv@divisor,w
  9359  051B  02A8               	subwf	___aodiv@dividend,f
  9360  051C  0821               	movf	___aodiv@divisor+1,w
  9361  051D  3BA9               	subwfb	___aodiv@dividend+1,f
  9362  051E  0822               	movf	___aodiv@divisor+2,w
  9363  051F  3BAA               	subwfb	___aodiv@dividend+2,f
  9364  0520  0823               	movf	___aodiv@divisor+3,w
  9365  0521  3BAB               	subwfb	___aodiv@dividend+3,f
  9366  0522  0824               	movf	___aodiv@divisor+4,w
  9367  0523  3BAC               	subwfb	___aodiv@dividend+4,f
  9368  0524  0825               	movf	___aodiv@divisor+5,w
  9369  0525  3BAD               	subwfb	___aodiv@dividend+5,f
  9370  0526  0826               	movf	___aodiv@divisor+6,w
  9371  0527  3BAE               	subwfb	___aodiv@dividend+6,f
  9372  0528  0827               	movf	___aodiv@divisor+7,w
  9373  0529  3BAF               	subwfb	___aodiv@dividend+7,f
  9374  052A                     l2462:
  9375  052A  1474               	bsf	___aodiv@quotient,0
  9376  052B                     l2464:
  9377  052B  36A7               	lsrf	___aodiv@divisor+7,f
  9378  052C  0CA6               	rrf	___aodiv@divisor+6,f
  9379  052D  0CA5               	rrf	___aodiv@divisor+5,f
  9380  052E  0CA4               	rrf	___aodiv@divisor+4,f
  9381  052F  0CA3               	rrf	___aodiv@divisor+3,f
  9382  0530  0CA2               	rrf	___aodiv@divisor+2,f
  9383  0531  0CA1               	rrf	___aodiv@divisor+1,f
  9384  0532  0CA0               	rrf	___aodiv@divisor,f
  9385  0533  3001               	movlw	1
  9386  0534  02F2               	subwf	___aodiv@counter,f
  9387  0535  1D03               	btfss	3,2
  9388  0536  2D38               	goto	u1571
  9389  0537  2D39               	goto	u1570
  9390  0538                     u1571:
  9391  0538  2CF0               	goto	l2456
  9392  0539                     u1570:
  9393  0539                     l2466:
  9394  0539  0873               	movf	___aodiv@sign,w
  9395  053A  1903               	btfsc	3,2
  9396  053B  2D3D               	goto	u1581
  9397  053C  2D3E               	goto	u1580
  9398  053D                     u1581:
  9399  053D  2D5C               	goto	l791
  9400  053E                     u1580:
  9401  053E                     l2468:
  9402  053E  09F4               	comf	___aodiv@quotient,f
  9403  053F  09F5               	comf	___aodiv@quotient+1,f
  9404  0540  09F6               	comf	___aodiv@quotient+2,f
  9405  0541  09F7               	comf	___aodiv@quotient+3,f
  9406  0542  09F8               	comf	___aodiv@quotient+4,f
  9407  0543  09F9               	comf	___aodiv@quotient+5,f
  9408  0544  09FA               	comf	___aodiv@quotient+6,f
  9409  0545  09FB               	comf	___aodiv@quotient+7,f
  9410  0546  0AF4               	incf	___aodiv@quotient,f
  9411  0547  1D03               	skipz
  9412  0548  2D5C               	goto	u159lld
  9413  0549  0AF5               	incf	___aodiv@quotient+1,f
  9414  054A  1D03               	skipz
  9415  054B  2D5C               	goto	u159lld
  9416  054C  0AF6               	incf	___aodiv@quotient+2,f
  9417  054D  1D03               	skipz
  9418  054E  2D5C               	goto	u159lld
  9419  054F  0AF7               	incf	___aodiv@quotient+3,f
  9420  0550  1D03               	skipz
  9421  0551  2D5C               	goto	u159lld
  9422  0552  0AF8               	incf	___aodiv@quotient+4,f
  9423  0553  1D03               	skipz
  9424  0554  2D5C               	goto	u159lld
  9425  0555  0AF9               	incf	___aodiv@quotient+5,f
  9426  0556  1D03               	skipz
  9427  0557  2D5C               	goto	u159lld
  9428  0558  0AFA               	incf	___aodiv@quotient+6,f
  9429  0559  1D03               	skipz
  9430  055A  2D5C               	goto	u159lld
  9431  055B  0AFB               	incf	___aodiv@quotient+7,f
  9432  055C                     u159lld:
  9433  055C                     l791:
  9434  055C  0874               	movf	___aodiv@quotient,w
  9435  055D  0020               	movlb	0	; select bank0
  9436  055E  00A0               	movwf	?___aodiv
  9437  055F  0875               	movf	___aodiv@quotient+1,w
  9438  0560  00A1               	movwf	?___aodiv+1
  9439  0561  0876               	movf	___aodiv@quotient+2,w
  9440  0562  00A2               	movwf	?___aodiv+2
  9441  0563  0877               	movf	___aodiv@quotient+3,w
  9442  0564  00A3               	movwf	?___aodiv+3
  9443  0565  0878               	movf	___aodiv@quotient+4,w
  9444  0566  00A4               	movwf	?___aodiv+4
  9445  0567  0879               	movf	___aodiv@quotient+5,w
  9446  0568  00A5               	movwf	?___aodiv+5
  9447  0569  087A               	movf	___aodiv@quotient+6,w
  9448  056A  00A6               	movwf	?___aodiv+6
  9449  056B  087B               	movf	___aodiv@quotient+7,w
  9450  056C  00A7               	movwf	?___aodiv+7
  9451  056D                     l792:
  9452  056D  0008               	return
  9453  056E                     __end_of___aodiv:
  9454                           
  9455                           	psect	text13
  9456  0786                     __ptext13:	
  9457 ;; *************** function _ctoa *****************
  9458 ;; Defined at:
  9459 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  9460 ;; Parameters:    Size  Location     Type
  9461 ;;  fp              1    wreg     PTR struct _IO_FILE
  9462 ;;		 -> NULL(0), sprintf@f(5), 
  9463 ;;  c               1    0[BANK0 ] unsigned char 
  9464 ;; Auto vars:     Size  Location     Type
  9465 ;;  fp              1    9[BANK0 ] PTR struct _IO_FILE
  9466 ;;		 -> NULL(0), sprintf@f(5), 
  9467 ;;  w               2    7[BANK0 ] int 
  9468 ;;  l               2    5[BANK0 ] int 
  9469 ;; Return value:  Size  Location     Type
  9470 ;;                  2    0[BANK0 ] int 
  9471 ;; Registers used:
  9472 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9473 ;; Tracked objects:
  9474 ;;		On entry : 0/0
  9475 ;;		On exit  : 0/0
  9476 ;;		Unchanged: 0/0
  9477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9478 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9479 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9480 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9481 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9482 ;;Total ram usage:       10 bytes
  9483 ;; Hardware stack levels used: 1
  9484 ;; Hardware stack levels required when called: 4
  9485 ;; This function calls:
  9486 ;;		_fputc
  9487 ;; This function is called by:
  9488 ;;		_vfpfcnvrt
  9489 ;; This function uses a non-reentrant model
  9490 ;;
  9491                           
  9492                           
  9493                           ;psect for function _ctoa
  9494  0786                     _ctoa:
  9495                           
  9496                           ;incstack = 0
  9497                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9498                           ;ctoa@fp stored from wreg
  9499  0786  0020               	movlb	0	; select bank0
  9500  0787  00A9               	movwf	ctoa@fp
  9501  0788                     l2566:
  9502                           
  9503                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  9504  0788  0021               	movlb	1	; select bank1
  9505  0789  082A               	movf	_width^(0+128),w
  9506  078A  042B               	iorwf	(_width+1)^(0+128),w
  9507  078B  1D03               	btfss	3,2
  9508  078C  2F8E               	goto	u1801
  9509  078D  2F8F               	goto	u1800
  9510  078E                     u1801:
  9511  078E  2F97               	goto	l2570
  9512  078F                     u1800:
  9513  078F                     l2568:
  9514  078F  082B               	movf	(_width+1)^(0+128),w
  9515  0790  0020               	movlb	0	; select bank0
  9516  0791  00A8               	movwf	ctoa@w+1
  9517  0792  0021               	movlb	1	; select bank1
  9518  0793  082A               	movf	_width^(0+128),w
  9519  0794  0020               	movlb	0	; select bank0
  9520  0795  00A7               	movwf	ctoa@w
  9521  0796  2FA0               	goto	l2572
  9522  0797                     l2570:
  9523  0797  082A               	movf	_width^(0+128),w
  9524  0798  3EFF               	addlw	255
  9525  0799  0020               	movlb	0	; select bank0
  9526  079A  00A7               	movwf	ctoa@w
  9527  079B  30FF               	movlw	255
  9528  079C  0021               	movlb	1	; select bank1
  9529  079D  3D2B               	addwfc	(_width+1)^(0+128),w
  9530  079E  0020               	movlb	0	; select bank0
  9531  079F  00A8               	movwf	ctoa@w+1
  9532  07A0                     l2572:
  9533                           
  9534                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  9535  07A0  0021               	movlb	1	; select bank1
  9536  07A1  1C2E               	btfss	_flags^(0+128),0
  9537  07A2  2FA4               	goto	u1811
  9538  07A3  2FA5               	goto	u1810
  9539  07A4                     u1811:
  9540  07A4  2FB4               	goto	l2576
  9541  07A5                     u1810:
  9542  07A5                     l2574:
  9543                           
  9544                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  9545  07A5  0020               	movlb	0	; select bank0
  9546  07A6  0820               	movf	ctoa@c,w
  9547  07A7  00A2               	movwf	??_ctoa
  9548  07A8  01A3               	clrf	??_ctoa+1
  9549  07A9  0822               	movf	??_ctoa,w
  9550  07AA  00F4               	movwf	fputc@c
  9551  07AB  0823               	movf	??_ctoa+1,w
  9552  07AC  00F5               	movwf	fputc@c+1
  9553  07AD  0829               	movf	ctoa@fp,w
  9554  07AE  00A4               	movwf	??_ctoa+2
  9555  07AF  0824               	movf	??_ctoa+2,w
  9556  07B0  00F6               	movwf	fputc@fp
  9557  07B1  318D  25E5  3187   	fcall	_fputc
  9558  07B4                     l2576:
  9559                           
  9560                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  9561  07B4  0020               	movlb	0	; select bank0
  9562  07B5  1BA8               	btfsc	ctoa@w+1,7
  9563  07B6  2FB8               	goto	u1821
  9564  07B7  2FB9               	goto	u1820
  9565  07B8                     u1821:
  9566  07B8  2FBA               	goto	l2580
  9567  07B9                     u1820:
  9568  07B9  2FBC               	goto	l1197
  9569  07BA                     l2580:
  9570  07BA  01A7               	clrf	ctoa@w
  9571  07BB  01A8               	clrf	ctoa@w+1
  9572  07BC                     l1197:
  9573                           
  9574                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  9575  07BC  01A5               	clrf	ctoa@l
  9576  07BD  01A6               	clrf	ctoa@l+1
  9577                           
  9578                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  9579  07BE  2FD0               	goto	l2586
  9580  07BF                     l2582:
  9581                           
  9582                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  9583  07BF  3020               	movlw	32
  9584  07C0  00F4               	movwf	fputc@c
  9585  07C1  3000               	movlw	0
  9586  07C2  00F5               	movwf	fputc@c+1
  9587  07C3  0020               	movlb	0	; select bank0
  9588  07C4  0829               	movf	ctoa@fp,w
  9589  07C5  00A2               	movwf	??_ctoa
  9590  07C6  0822               	movf	??_ctoa,w
  9591  07C7  00F6               	movwf	fputc@fp
  9592  07C8  318D  25E5  3187   	fcall	_fputc
  9593  07CB                     l2584:
  9594                           
  9595                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 275:         ++l;
  9596  07CB  3001               	movlw	1
  9597  07CC  0020               	movlb	0	; select bank0
  9598  07CD  07A5               	addwf	ctoa@l,f
  9599  07CE  3000               	movlw	0
  9600  07CF  3DA6               	addwfc	ctoa@l+1,f
  9601  07D0                     l2586:
  9602                           
  9603                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  9604  07D0  0826               	movf	ctoa@l+1,w
  9605  07D1  3A80               	xorlw	128
  9606  07D2  00A2               	movwf	??_ctoa
  9607  07D3  0828               	movf	ctoa@w+1,w
  9608  07D4  3A80               	xorlw	128
  9609  07D5  0222               	subwf	??_ctoa,w
  9610  07D6  1D03               	skipz
  9611  07D7  2FDA               	goto	u1835
  9612  07D8  0827               	movf	ctoa@w,w
  9613  07D9  0225               	subwf	ctoa@l,w
  9614  07DA                     u1835:
  9615  07DA  1C03               	skipc
  9616  07DB  2FDD               	goto	u1831
  9617  07DC  2FDE               	goto	u1830
  9618  07DD                     u1831:
  9619  07DD  2FBF               	goto	l2582
  9620  07DE                     u1830:
  9621  07DE                     l1200:
  9622                           
  9623                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  9624  07DE  0021               	movlb	1	; select bank1
  9625  07DF  182E               	btfsc	_flags^(0+128),0
  9626  07E0  2FE2               	goto	u1841
  9627  07E1  2FE3               	goto	u1840
  9628  07E2                     u1841:
  9629  07E2  2FF2               	goto	l2590
  9630  07E3                     u1840:
  9631  07E3                     l2588:
  9632                           
  9633                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  9634  07E3  0020               	movlb	0	; select bank0
  9635  07E4  0820               	movf	ctoa@c,w
  9636  07E5  00A2               	movwf	??_ctoa
  9637  07E6  01A3               	clrf	??_ctoa+1
  9638  07E7  0822               	movf	??_ctoa,w
  9639  07E8  00F4               	movwf	fputc@c
  9640  07E9  0823               	movf	??_ctoa+1,w
  9641  07EA  00F5               	movwf	fputc@c+1
  9642  07EB  0829               	movf	ctoa@fp,w
  9643  07EC  00A4               	movwf	??_ctoa+2
  9644  07ED  0824               	movf	??_ctoa+2,w
  9645  07EE  00F6               	movwf	fputc@fp
  9646  07EF  318D  25E5  3187   	fcall	_fputc
  9647  07F2                     l2590:
  9648                           
  9649                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  9650  07F2  0020               	movlb	0	; select bank0
  9651  07F3  0825               	movf	ctoa@l,w
  9652  07F4  3E01               	addlw	1
  9653  07F5  00A0               	movwf	?_ctoa
  9654  07F6  3000               	movlw	0
  9655  07F7  3D26               	addwfc	ctoa@l+1,w
  9656  07F8  00A1               	movwf	?_ctoa+1
  9657  07F9                     l1202:
  9658  07F9  0008               	return
  9659  07FA                     __end_of_ctoa:
  9660                           
  9661                           	psect	text14
  9662  0DE5                     __ptext14:	
  9663 ;; *************** function _fputc *****************
  9664 ;; Defined at:
  9665 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  9666 ;; Parameters:    Size  Location     Type
  9667 ;;  c               2    4[COMMON] int 
  9668 ;;  fp              1    6[COMMON] PTR struct _IO_FILE
  9669 ;;		 -> NULL(0), sprintf@f(5), 
  9670 ;; Auto vars:     Size  Location     Type
  9671 ;;		None
  9672 ;; Return value:  Size  Location     Type
  9673 ;;                  2    4[COMMON] int 
  9674 ;; Registers used:
  9675 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9676 ;; Tracked objects:
  9677 ;;		On entry : 0/0
  9678 ;;		On exit  : 0/0
  9679 ;;		Unchanged: 0/0
  9680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9681 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9683 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9684 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9685 ;;Total ram usage:        8 bytes
  9686 ;; Hardware stack levels used: 1
  9687 ;; Hardware stack levels required when called: 3
  9688 ;; This function calls:
  9689 ;;		_putch
  9690 ;; This function is called by:
  9691 ;;		_pad
  9692 ;;		_ctoa
  9693 ;;		_vfpfcnvrt
  9694 ;;		_fputs
  9695 ;; This function uses a non-reentrant model
  9696 ;;
  9697                           
  9698                           
  9699                           ;psect for function _fputc
  9700  0DE5                     _fputc:
  9701  0DE5                     l2386:	
  9702                           ;incstack = 0
  9703                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9704                           
  9705  0DE5  0876               	movf	fputc@fp,w
  9706  0DE6  1903               	btfsc	3,2
  9707  0DE7  2DE9               	goto	u1431
  9708  0DE8  2DEA               	goto	u1430
  9709  0DE9                     u1431:
  9710  0DE9  2DEF               	goto	l2390
  9711  0DEA                     u1430:
  9712  0DEA                     l2388:
  9713  0DEA  0876               	movf	fputc@fp,w
  9714  0DEB  1D03               	btfss	3,2
  9715  0DEC  2DEE               	goto	u1441
  9716  0DED  2DEF               	goto	u1440
  9717  0DEE                     u1441:
  9718  0DEE  2DF4               	goto	l2392
  9719  0DEF                     u1440:
  9720  0DEF                     l2390:
  9721  0DEF  0874               	movf	fputc@c,w
  9722  0DF0  318A  22B6  318D   	fcall	_putch
  9723  0DF3  2E34               	goto	l1263
  9724  0DF4                     l2392:
  9725  0DF4  0876               	movf	fputc@fp,w
  9726  0DF5  3E03               	addlw	3
  9727  0DF6  0086               	movwf	6
  9728  0DF7  0187               	clrf	7
  9729  0DF8  0016               	moviw fsr1++
  9730  0DF9  0401               	iorwf	1,w
  9731  0DFA  1903               	btfsc	3,2
  9732  0DFB  2DFD               	goto	u1451
  9733  0DFC  2DFE               	goto	u1450
  9734  0DFD                     u1451:
  9735  0DFD  2E1B               	goto	l2396
  9736  0DFE                     u1450:
  9737  0DFE                     l2394:
  9738  0DFE  0876               	movf	fputc@fp,w
  9739  0DFF  3E03               	addlw	3
  9740  0E00  0086               	movwf	6
  9741  0E01  0187               	clrf	7
  9742  0E02  3F40               	moviw [0]fsr1
  9743  0E03  00F7               	movwf	??_fputc
  9744  0E04  3F41               	moviw [1]fsr1
  9745  0E05  00F8               	movwf	??_fputc+1
  9746  0E06  0A76               	incf	fputc@fp,w
  9747  0E07  0086               	movwf	6
  9748  0E08  0187               	clrf	7
  9749  0E09  3F40               	moviw [0]fsr1
  9750  0E0A  00F9               	movwf	??_fputc+2
  9751  0E0B  3F41               	moviw [1]fsr1
  9752  0E0C  00FA               	movwf	??_fputc+3
  9753  0E0D  087A               	movf	??_fputc+3,w
  9754  0E0E  3A80               	xorlw	128
  9755  0E0F  00FB               	movwf	??_fputc+4
  9756  0E10  0878               	movf	??_fputc+1,w
  9757  0E11  3A80               	xorlw	128
  9758  0E12  027B               	subwf	??_fputc+4,w
  9759  0E13  1D03               	skipz
  9760  0E14  2E17               	goto	u1465
  9761  0E15  0877               	movf	??_fputc,w
  9762  0E16  0279               	subwf	??_fputc+2,w
  9763  0E17                     u1465:
  9764  0E17  1803               	skipnc
  9765  0E18  2E1A               	goto	u1461
  9766  0E19  2E1B               	goto	u1460
  9767  0E1A                     u1461:
  9768  0E1A  2E34               	goto	l1263
  9769  0E1B                     u1460:
  9770  0E1B                     l2396:
  9771  0E1B  0874               	movf	fputc@c,w
  9772  0E1C  00F7               	movwf	??_fputc
  9773  0E1D  0876               	movf	fputc@fp,w
  9774  0E1E  0086               	movwf	6
  9775  0E1F  0187               	clrf	7
  9776  0E20  0A76               	incf	fputc@fp,w
  9777  0E21  0084               	movwf	4
  9778  0E22  0185               	clrf	5
  9779  0E23  0800               	movf	0,w
  9780  0E24  0701               	addwf	1,w
  9781  0E25  00F8               	movwf	??_fputc+1
  9782  0E26  0878               	movf	??_fputc+1,w
  9783  0E27  0086               	movwf	6
  9784  0E28  3001               	movlw	1	; select bank2/3
  9785  0E29  0087               	movwf	7
  9786  0E2A  0877               	movf	??_fputc,w
  9787  0E2B  0081               	movwf	1
  9788  0E2C                     l2398:
  9789  0E2C  0A76               	incf	fputc@fp,w
  9790  0E2D  0086               	movwf	6
  9791  0E2E  0187               	clrf	7
  9792  0E2F  3001               	movlw	1
  9793  0E30  0781               	addwf	1,f
  9794  0E31  3141               	addfsr 1,1
  9795  0E32  1803               	skipnc
  9796  0E33  0A81               	incf	1,f
  9797  0E34                     l1263:
  9798  0E34  0008               	return
  9799  0E35                     __end_of_fputc:
  9800                           
  9801                           	psect	text15
  9802  0AB6                     __ptext15:	
  9803 ;; *************** function _putch *****************
  9804 ;; Defined at:
  9805 ;;		line 65 in file "uart.c"
  9806 ;; Parameters:    Size  Location     Type
  9807 ;;  dato            1    wreg     unsigned char 
  9808 ;; Auto vars:     Size  Location     Type
  9809 ;;  dato            1    3[COMMON] unsigned char 
  9810 ;; Return value:  Size  Location     Type
  9811 ;;                  1    wreg      void 
  9812 ;; Registers used:
  9813 ;;		wreg, status,2, status,0, pclath, cstack
  9814 ;; Tracked objects:
  9815 ;;		On entry : 0/0
  9816 ;;		On exit  : 0/0
  9817 ;;		Unchanged: 0/0
  9818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9820 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9822 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9823 ;;Total ram usage:        1 bytes
  9824 ;; Hardware stack levels used: 1
  9825 ;; Hardware stack levels required when called: 2
  9826 ;; This function calls:
  9827 ;;		_uart_tx
  9828 ;; This function is called by:
  9829 ;;		_fputc
  9830 ;; This function uses a non-reentrant model
  9831 ;;
  9832                           
  9833                           
  9834                           ;psect for function _putch
  9835  0AB6                     _putch:
  9836                           
  9837                           ;incstack = 0
  9838                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  9839                           ;putch@dato stored from wreg
  9840  0AB6  00F3               	movwf	putch@dato
  9841  0AB7                     l2372:
  9842                           
  9843                           ;uart.c: 67:     uart_tx( dato);
  9844  0AB7  0873               	movf	putch@dato,w
  9845  0AB8  318B  232D  318A   	fcall	_uart_tx
  9846  0ABB                     l151:
  9847  0ABB  0008               	return
  9848  0ABC                     __end_of_putch:
  9849                           
  9850                           	psect	text16
  9851  0B2D                     __ptext16:	
  9852 ;; *************** function _uart_tx *****************
  9853 ;; Defined at:
  9854 ;;		line 32 in file "uart.c"
  9855 ;; Parameters:    Size  Location     Type
  9856 ;;  dato            1    wreg     unsigned char 
  9857 ;; Auto vars:     Size  Location     Type
  9858 ;;  dato            1    2[COMMON] unsigned char 
  9859 ;; Return value:  Size  Location     Type
  9860 ;;                  1    wreg      void 
  9861 ;; Registers used:
  9862 ;;		wreg, status,2, status,0
  9863 ;; Tracked objects:
  9864 ;;		On entry : 0/0
  9865 ;;		On exit  : 0/0
  9866 ;;		Unchanged: 0/0
  9867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9869 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9870 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9871 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9872 ;;Total ram usage:        2 bytes
  9873 ;; Hardware stack levels used: 1
  9874 ;; Hardware stack levels required when called: 1
  9875 ;; This function calls:
  9876 ;;		Nothing
  9877 ;; This function is called by:
  9878 ;;		_putch
  9879 ;;		_uart_send_string
  9880 ;; This function uses a non-reentrant model
  9881 ;;
  9882                           
  9883                           
  9884                           ;psect for function _uart_tx
  9885  0B2D                     _uart_tx:
  9886                           
  9887                           ;incstack = 0
  9888                           ; Regs used in _uart_tx: [wreg+status,2+status,0]
  9889                           ;uart_tx@dato stored from wreg
  9890  0B2D  00F2               	movwf	uart_tx@dato
  9891  0B2E                     l2366:
  9892  0B2E                     l2368:	
  9893                           ;uart.c: 34:     while( ( (PIR3>>4) & 0x01) == 0){}
  9894                           
  9895  0B2E  002E               	movlb	14	; select bank14
  9896  0B2F  080F               	movf	15,w	;volatile
  9897  0B30  00F1               	movwf	??_uart_tx
  9898  0B31  3004               	movlw	4
  9899  0B32                     u1385:
  9900  0B32  36F1               	lsrf	??_uart_tx,f
  9901  0B33  0B89               	decfsz	9,f
  9902  0B34  2B32               	goto	u1385
  9903  0B35  1C71               	btfss	??_uart_tx,0
  9904  0B36  2B38               	goto	u1391
  9905  0B37  2B39               	goto	u1390
  9906  0B38                     u1391:
  9907  0B38  2B2E               	goto	l2368
  9908  0B39                     u1390:
  9909  0B39                     l2370:
  9910                           
  9911                           ;uart.c: 36:         TXREG = dato;
  9912  0B39  0872               	movf	uart_tx@dato,w
  9913  0B3A  0022               	movlb	2	; select bank2
  9914  0B3B  009A               	movwf	26	;volatile
  9915  0B3C                     l135:
  9916  0B3C  0008               	return
  9917  0B3D                     __end_of_uart_tx:
  9918                           
  9919                           	psect	text17
  9920  0D2D                     __ptext17:	
  9921 ;; *************** function _port_init *****************
  9922 ;; Defined at:
  9923 ;;		line 177 in file "Main.c"
  9924 ;; Parameters:    Size  Location     Type
  9925 ;;		None
  9926 ;; Auto vars:     Size  Location     Type
  9927 ;;		None
  9928 ;; Return value:  Size  Location     Type
  9929 ;;                  1    wreg      void 
  9930 ;; Registers used:
  9931 ;;		wreg, status,2, status,0, pclath, cstack
  9932 ;; Tracked objects:
  9933 ;;		On entry : 0/0
  9934 ;;		On exit  : 0/0
  9935 ;;		Unchanged: 0/0
  9936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9941 ;;Total ram usage:        0 bytes
  9942 ;; Hardware stack levels used: 1
  9943 ;; Hardware stack levels required when called: 3
  9944 ;; This function calls:
  9945 ;;		_adc_init
  9946 ;;		_i2c_init
  9947 ;;		_serial_init
  9948 ;;		_teclado_init
  9949 ;; This function is called by:
  9950 ;;		_main
  9951 ;; This function uses a non-reentrant model
  9952 ;;
  9953                           
  9954                           
  9955                           ;psect for function _port_init
  9956  0D2D                     _port_init:
  9957  0D2D                     l2876:	
  9958                           ;incstack = 0
  9959                           ; Regs used in _port_init: [wreg+status,2+status,0+pclath+cstack]
  9960                           
  9961                           
  9962                           ;Main.c: 179:     ANSELA = 0;
  9963  0D2D  003E               	movlb	30	; select bank30
  9964  0D2E  01B8               	clrf	56	;volatile
  9965                           
  9966                           ;Main.c: 180:     LATA=0;
  9967  0D2F  0020               	movlb	0	; select bank0
  9968  0D30  0196               	clrf	22	;volatile
  9969                           
  9970                           ;Main.c: 181:     PORTA =0;
  9971  0D31  018C               	clrf	12	;volatile
  9972  0D32                     l2878:
  9973                           
  9974                           ;Main.c: 182:     TRISA = 0b11110000;
  9975  0D32  30F0               	movlw	240
  9976  0D33  0091               	movwf	17	;volatile
  9977  0D34                     l2880:
  9978                           
  9979                           ;Main.c: 185:     ANSELA = 0;
  9980  0D34  003E               	movlb	30	; select bank30
  9981  0D35  01B8               	clrf	56	;volatile
  9982  0D36                     l2882:
  9983                           
  9984                           ;Main.c: 186:     ANSELA = ANSELA | (1<<4);
  9985  0D36  0838               	movf	56,w	;volatile
  9986  0D37  3810               	iorlw	16
  9987  0D38  00B8               	movwf	56	;volatile
  9988                           
  9989                           ;Main.c: 188:     LATB=0;
  9990  0D39  0020               	movlb	0	; select bank0
  9991  0D3A  0197               	clrf	23	;volatile
  9992                           
  9993                           ;Main.c: 189:     PORTB =0;
  9994  0D3B  018D               	clrf	13	;volatile
  9995  0D3C                     l2884:
  9996                           
  9997                           ;Main.c: 190:     TRISB = TRISA | (1<<0);
  9998  0D3C  0811               	movf	17,w	;volatile
  9999  0D3D  3801               	iorlw	1
 10000  0D3E  0092               	movwf	18	;volatile
 10001  0D3F                     l2886:
 10002                           
 10003                           ;Main.c: 191:     ANSELB = 0;
 10004  0D3F  003E               	movlb	30	; select bank30
 10005  0D40  01C3               	clrf	67	;volatile
 10006                           
 10007                           ;Main.c: 192:     ANSELB = ANSELB | (1<<0);
 10008  0D41  0843               	movf	67,w	;volatile
 10009  0D42  3801               	iorlw	1
 10010  0D43  00C3               	movwf	67	;volatile
 10011  0D44                     l2888:
 10012                           
 10013                           ;Main.c: 194:     TRISC = 0b10;
 10014  0D44  3002               	movlw	2
 10015  0D45  0020               	movlb	0	; select bank0
 10016  0D46  0093               	movwf	19	;volatile
 10017                           
 10018                           ;Main.c: 195:     ANSELC = 0;
 10019  0D47  003E               	movlb	30	; select bank30
 10020  0D48  01CE               	clrf	78	;volatile
 10021  0D49                     l2890:
 10022                           
 10023                           ;Main.c: 196:     TRISC = TRISC | (1<<4 |1<<3 );
 10024  0D49  0020               	movlb	0	; select bank0
 10025  0D4A  0813               	movf	19,w	;volatile
 10026  0D4B  3818               	iorlw	24
 10027  0D4C  0093               	movwf	19	;volatile
 10028  0D4D                     l2892:
 10029                           
 10030                           ;Main.c: 198:     serial_init(9600);
 10031  0D4D  3000               	movlw	0
 10032  0D4E  00A8               	movwf	serial_init@baudios+3
 10033  0D4F  3000               	movlw	0
 10034  0D50  00A7               	movwf	serial_init@baudios+2
 10035  0D51  3025               	movlw	37
 10036  0D52  00A6               	movwf	serial_init@baudios+1
 10037  0D53  3080               	movlw	128
 10038  0D54  00A5               	movwf	serial_init@baudios
 10039  0D55  318D  2562  318D   	fcall	_serial_init
 10040  0D58                     l2894:
 10041                           
 10042                           ;Main.c: 199:     adc_init();
 10043  0D58  318B  23D8  318D   	fcall	_adc_init
 10044  0D5B                     l2896:
 10045                           
 10046                           ;Main.c: 200:     i2c_init();
 10047  0D5B  318B  23F2  318D   	fcall	_i2c_init
 10048  0D5E                     l2898:
 10049                           
 10050                           ;Main.c: 201:     teclado_init();
 10051  0D5E  318B  2308  318D   	fcall	_teclado_init
 10052  0D61                     l106:
 10053  0D61  0008               	return
 10054  0D62                     __end_of_port_init:
 10055                           
 10056                           	psect	text18
 10057  0B08                     __ptext18:	
 10058 ;; *************** function _teclado_init *****************
 10059 ;; Defined at:
 10060 ;;		line 5 in file "teclado.c"
 10061 ;; Parameters:    Size  Location     Type
 10062 ;;		None
 10063 ;; Auto vars:     Size  Location     Type
 10064 ;;		None
 10065 ;; Return value:  Size  Location     Type
 10066 ;;                  1    wreg      void 
 10067 ;; Registers used:
 10068 ;;		wreg, status,2
 10069 ;; Tracked objects:
 10070 ;;		On entry : 0/0
 10071 ;;		On exit  : 0/0
 10072 ;;		Unchanged: 0/0
 10073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10078 ;;Total ram usage:        0 bytes
 10079 ;; Hardware stack levels used: 1
 10080 ;; Hardware stack levels required when called: 1
 10081 ;; This function calls:
 10082 ;;		Nothing
 10083 ;; This function is called by:
 10084 ;;		_port_init
 10085 ;; This function uses a non-reentrant model
 10086 ;;
 10087                           
 10088                           
 10089                           ;psect for function _teclado_init
 10090  0B08                     _teclado_init:
 10091  0B08                     l2772:	
 10092                           ;incstack = 0
 10093                           ; Regs used in _teclado_init: [wreg+status,2]
 10094                           
 10095                           
 10096                           ;teclado.c: 6:     PORTB = 0x00;
 10097  0B08  0020               	movlb	0	; select bank0
 10098  0B09  018D               	clrf	13	;volatile
 10099                           
 10100                           ;teclado.c: 7:     LATA = 0;
 10101  0B0A  0196               	clrf	22	;volatile
 10102  0B0B                     l2774:
 10103                           
 10104                           ;teclado.c: 8:     TRISB = 0b01111111;
 10105  0B0B  307F               	movlw	127
 10106  0B0C  0092               	movwf	18	;volatile
 10107  0B0D                     l2776:
 10108                           
 10109                           ;teclado.c: 10:     TRISA = 0b11110000;
 10110  0B0D  30F0               	movlw	240
 10111  0B0E  0091               	movwf	17	;volatile
 10112  0B0F                     l2778:
 10113                           
 10114                           ;teclado.c: 13:     WPUB = 0b00011110;
 10115  0B0F  301E               	movlw	30
 10116  0B10  003E               	movlb	30	; select bank30
 10117  0B11  00C4               	movwf	68	;volatile
 10118  0B12                     l394:
 10119  0B12  0008               	return
 10120  0B13                     __end_of_teclado_init:
 10121                           
 10122                           	psect	text19
 10123  0D62                     __ptext19:	
 10124 ;; *************** function _serial_init *****************
 10125 ;; Defined at:
 10126 ;;		line 3 in file "uart.c"
 10127 ;; Parameters:    Size  Location     Type
 10128 ;;  baudios         4    5[BANK0 ] unsigned long 
 10129 ;; Auto vars:     Size  Location     Type
 10130 ;;  sx              2   10[COMMON] unsigned short 
 10131 ;; Return value:  Size  Location     Type
 10132 ;;                  1    wreg      void 
 10133 ;; Registers used:
 10134 ;;		wreg, status,2, status,0, pclath, cstack
 10135 ;; Tracked objects:
 10136 ;;		On entry : 0/0
 10137 ;;		On exit  : 0/0
 10138 ;;		Unchanged: 0/0
 10139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10140 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10141 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10142 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10143 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10144 ;;Total ram usage:       10 bytes
 10145 ;; Hardware stack levels used: 1
 10146 ;; Hardware stack levels required when called: 2
 10147 ;; This function calls:
 10148 ;;		___lldiv
 10149 ;; This function is called by:
 10150 ;;		_port_init
 10151 ;; This function uses a non-reentrant model
 10152 ;;
 10153                           
 10154                           
 10155                           ;psect for function _serial_init
 10156  0D62                     _serial_init:
 10157  0D62                     l2748:	
 10158                           ;incstack = 0
 10159                           ; Regs used in _serial_init: [wreg+status,2+status,0+pclath+cstack]
 10160                           
 10161                           
 10162                           ;uart.c: 4:     uint16_t sx;;uart.c: 7:     BAUD1CON = 0x08;
 10163  0D62  3008               	movlw	8
 10164  0D63  0022               	movlb	2	; select bank2
 10165  0D64  009F               	movwf	31	;volatile
 10166                           
 10167                           ;uart.c: 9:     RC1STA = 0b10010000;
 10168  0D65  3090               	movlw	144
 10169  0D66  009D               	movwf	29	;volatile
 10170                           
 10171                           ;uart.c: 15:     TX1STA = 0b00100100;
 10172  0D67  3024               	movlw	36
 10173  0D68  009E               	movwf	30	;volatile
 10174  0D69                     l2750:
 10175                           
 10176                           ;uart.c: 20:     sx = ((32000000UL/baudios)/4 ) - 1;
 10177  0D69  0020               	movlb	0	; select bank0
 10178  0D6A  0828               	movf	serial_init@baudios+3,w
 10179  0D6B  00F4               	movwf	___lldiv@divisor+3
 10180  0D6C  0827               	movf	serial_init@baudios+2,w
 10181  0D6D  00F3               	movwf	___lldiv@divisor+2
 10182  0D6E  0826               	movf	serial_init@baudios+1,w
 10183  0D6F  00F2               	movwf	___lldiv@divisor+1
 10184  0D70  0825               	movf	serial_init@baudios,w
 10185  0D71  00F1               	movwf	___lldiv@divisor
 10186  0D72  3001               	movlw	1
 10187  0D73  00F8               	movwf	___lldiv@dividend+3
 10188  0D74  30E8               	movlw	232
 10189  0D75  00F7               	movwf	___lldiv@dividend+2
 10190  0D76  3048               	movlw	72
 10191  0D77  00F6               	movwf	___lldiv@dividend+1
 10192  0D78  3000               	movlw	0
 10193  0D79  00F5               	movwf	___lldiv@dividend
 10194  0D7A  318E  26E8  318D   	fcall	___lldiv
 10195  0D7D  0871               	movf	?___lldiv,w
 10196  0D7E  0020               	movlb	0	; select bank0
 10197  0D7F  00A9               	movwf	??_serial_init
 10198  0D80  0872               	movf	?___lldiv+1,w
 10199  0D81  00AA               	movwf	??_serial_init+1
 10200  0D82  0873               	movf	?___lldiv+2,w
 10201  0D83  00AB               	movwf	??_serial_init+2
 10202  0D84  0874               	movf	?___lldiv+3,w
 10203  0D85  00AC               	movwf	??_serial_init+3
 10204  0D86  3002               	movlw	2
 10205  0D87                     u2175:
 10206  0D87  36AC               	lsrf	??_serial_init+3,f
 10207  0D88  0CAB               	rrf	??_serial_init+2,f
 10208  0D89  0CAA               	rrf	??_serial_init+1,f
 10209  0D8A  0CA9               	rrf	??_serial_init,f
 10210  0D8B                     u2170:
 10211  0D8B  0B89               	decfsz	9,f
 10212  0D8C  2D87               	goto	u2175
 10213  0D8D  0829               	movf	??_serial_init,w
 10214  0D8E  3EFF               	addlw	255
 10215  0D8F  00FA               	movwf	serial_init@sx
 10216  0D90  30FF               	movlw	255
 10217  0D91  3D2A               	addwfc	??_serial_init+1,w
 10218  0D92  00FB               	movwf	serial_init@sx+1
 10219  0D93                     l2752:
 10220                           
 10221                           ;uart.c: 21:     SP1BRGL = (uint8_t)sx;
 10222  0D93  087A               	movf	serial_init@sx,w
 10223  0D94  0022               	movlb	2	; select bank2
 10224  0D95  009B               	movwf	27	;volatile
 10225  0D96                     l2754:
 10226                           
 10227                           ;uart.c: 22:     SP1BRGH = (uint8_t)(sx>>8);
 10228  0D96  087B               	movf	serial_init@sx+1,w
 10229  0D97  009C               	movwf	28	;volatile
 10230  0D98                     l2756:
 10231                           
 10232                           ;uart.c: 26:     RC0PPS = 0x10;
 10233  0D98  3010               	movlw	16
 10234  0D99  003E               	movlb	30	; select bank30
 10235  0D9A  00A0               	movwf	32	;volatile
 10236  0D9B                     l2758:
 10237                           
 10238                           ;uart.c: 28:     RXPPS = 0x11;
 10239  0D9B  3011               	movlw	17
 10240  0D9C  003D               	movlb	29	; select bank29
 10241  0D9D  00CB               	movwf	75	;volatile
 10242  0D9E                     l129:
 10243  0D9E  0008               	return
 10244  0D9F                     __end_of_serial_init:
 10245                           
 10246                           	psect	text20
 10247  0EE8                     __ptext20:	
 10248 ;; *************** function ___lldiv *****************
 10249 ;; Defined at:
 10250 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
 10251 ;; Parameters:    Size  Location     Type
 10252 ;;  divisor         4    1[COMMON] unsigned long 
 10253 ;;  dividend        4    5[COMMON] unsigned long 
 10254 ;; Auto vars:     Size  Location     Type
 10255 ;;  quotient        4    0[BANK0 ] unsigned long 
 10256 ;;  counter         1    4[BANK0 ] unsigned char 
 10257 ;; Return value:  Size  Location     Type
 10258 ;;                  4    1[COMMON] unsigned long 
 10259 ;; Registers used:
 10260 ;;		wreg, status,2, status,0
 10261 ;; Tracked objects:
 10262 ;;		On entry : 0/0
 10263 ;;		On exit  : 0/0
 10264 ;;		Unchanged: 0/0
 10265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10266 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10267 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10268 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10269 ;;      Totals:         9       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10270 ;;Total ram usage:       14 bytes
 10271 ;; Hardware stack levels used: 1
 10272 ;; Hardware stack levels required when called: 1
 10273 ;; This function calls:
 10274 ;;		Nothing
 10275 ;; This function is called by:
 10276 ;;		_serial_init
 10277 ;; This function uses a non-reentrant model
 10278 ;;
 10279                           
 10280                           
 10281                           ;psect for function ___lldiv
 10282  0EE8                     ___lldiv:
 10283  0EE8                     l2658:	
 10284                           ;incstack = 0
 10285                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 10286                           
 10287  0EE8  3000               	movlw	0
 10288  0EE9  0020               	movlb	0	; select bank0
 10289  0EEA  00A3               	movwf	___lldiv@quotient+3
 10290  0EEB  3000               	movlw	0
 10291  0EEC  00A2               	movwf	___lldiv@quotient+2
 10292  0EED  3000               	movlw	0
 10293  0EEE  00A1               	movwf	___lldiv@quotient+1
 10294  0EEF  3000               	movlw	0
 10295  0EF0  00A0               	movwf	___lldiv@quotient
 10296  0EF1  0874               	movf	___lldiv@divisor+3,w
 10297  0EF2  0473               	iorwf	___lldiv@divisor+2,w
 10298  0EF3  0472               	iorwf	___lldiv@divisor+1,w
 10299  0EF4  0471               	iorwf	___lldiv@divisor,w
 10300  0EF5  1903               	skipnz
 10301  0EF6  2EF8               	goto	u2041
 10302  0EF7  2EF9               	goto	u2040
 10303  0EF8                     u2041:
 10304  0EF8  2F3A               	goto	l2678
 10305  0EF9                     u2040:
 10306  0EF9                     l2660:
 10307  0EF9  01A4               	clrf	___lldiv@counter
 10308  0EFA  0AA4               	incf	___lldiv@counter,f
 10309  0EFB  2F07               	goto	l2664
 10310  0EFC                     l2662:
 10311  0EFC  3001               	movlw	1
 10312  0EFD                     u2055:
 10313  0EFD  35F1               	lslf	___lldiv@divisor,f
 10314  0EFE  0DF2               	rlf	___lldiv@divisor+1,f
 10315  0EFF  0DF3               	rlf	___lldiv@divisor+2,f
 10316  0F00  0DF4               	rlf	___lldiv@divisor+3,f
 10317  0F01  0B89               	decfsz	9,f
 10318  0F02  2EFD               	goto	u2055
 10319  0F03  3001               	movlw	1
 10320  0F04  00F9               	movwf	??___lldiv
 10321  0F05  0879               	movf	??___lldiv,w
 10322  0F06  07A4               	addwf	___lldiv@counter,f
 10323  0F07                     l2664:
 10324  0F07  1FF4               	btfss	___lldiv@divisor+3,7
 10325  0F08  2F0A               	goto	u2061
 10326  0F09  2F0B               	goto	u2060
 10327  0F0A                     u2061:
 10328  0F0A  2EFC               	goto	l2662
 10329  0F0B                     u2060:
 10330  0F0B                     l2666:
 10331  0F0B  3001               	movlw	1
 10332  0F0C                     u2075:
 10333  0F0C  35A0               	lslf	___lldiv@quotient,f
 10334  0F0D  0DA1               	rlf	___lldiv@quotient+1,f
 10335  0F0E  0DA2               	rlf	___lldiv@quotient+2,f
 10336  0F0F  0DA3               	rlf	___lldiv@quotient+3,f
 10337  0F10  0B89               	decfsz	9,f
 10338  0F11  2F0C               	goto	u2075
 10339  0F12                     l2668:
 10340  0F12  0874               	movf	___lldiv@divisor+3,w
 10341  0F13  0278               	subwf	___lldiv@dividend+3,w
 10342  0F14  1D03               	skipz
 10343  0F15  2F20               	goto	u2085
 10344  0F16  0873               	movf	___lldiv@divisor+2,w
 10345  0F17  0277               	subwf	___lldiv@dividend+2,w
 10346  0F18  1D03               	skipz
 10347  0F19  2F20               	goto	u2085
 10348  0F1A  0872               	movf	___lldiv@divisor+1,w
 10349  0F1B  0276               	subwf	___lldiv@dividend+1,w
 10350  0F1C  1D03               	skipz
 10351  0F1D  2F20               	goto	u2085
 10352  0F1E  0871               	movf	___lldiv@divisor,w
 10353  0F1F  0275               	subwf	___lldiv@dividend,w
 10354  0F20                     u2085:
 10355  0F20  1C03               	skipc
 10356  0F21  2F23               	goto	u2081
 10357  0F22  2F24               	goto	u2080
 10358  0F23                     u2081:
 10359  0F23  2F2D               	goto	l2674
 10360  0F24                     u2080:
 10361  0F24                     l2670:
 10362  0F24  0871               	movf	___lldiv@divisor,w
 10363  0F25  02F5               	subwf	___lldiv@dividend,f
 10364  0F26  0872               	movf	___lldiv@divisor+1,w
 10365  0F27  3BF6               	subwfb	___lldiv@dividend+1,f
 10366  0F28  0873               	movf	___lldiv@divisor+2,w
 10367  0F29  3BF7               	subwfb	___lldiv@dividend+2,f
 10368  0F2A  0874               	movf	___lldiv@divisor+3,w
 10369  0F2B  3BF8               	subwfb	___lldiv@dividend+3,f
 10370  0F2C                     l2672:
 10371  0F2C  1420               	bsf	___lldiv@quotient,0
 10372  0F2D                     l2674:
 10373  0F2D  3001               	movlw	1
 10374  0F2E                     u2095:
 10375  0F2E  36F4               	lsrf	___lldiv@divisor+3,f
 10376  0F2F  0CF3               	rrf	___lldiv@divisor+2,f
 10377  0F30  0CF2               	rrf	___lldiv@divisor+1,f
 10378  0F31  0CF1               	rrf	___lldiv@divisor,f
 10379  0F32  0B89               	decfsz	9,f
 10380  0F33  2F2E               	goto	u2095
 10381  0F34                     l2676:
 10382  0F34  3001               	movlw	1
 10383  0F35  02A4               	subwf	___lldiv@counter,f
 10384  0F36  1D03               	btfss	3,2
 10385  0F37  2F39               	goto	u2101
 10386  0F38  2F3A               	goto	u2100
 10387  0F39                     u2101:
 10388  0F39  2F0B               	goto	l2666
 10389  0F3A                     u2100:
 10390  0F3A                     l2678:
 10391  0F3A  0823               	movf	___lldiv@quotient+3,w
 10392  0F3B  00F4               	movwf	?___lldiv+3
 10393  0F3C  0822               	movf	___lldiv@quotient+2,w
 10394  0F3D  00F3               	movwf	?___lldiv+2
 10395  0F3E  0821               	movf	___lldiv@quotient+1,w
 10396  0F3F  00F2               	movwf	?___lldiv+1
 10397  0F40  0820               	movf	___lldiv@quotient,w
 10398  0F41  00F1               	movwf	?___lldiv
 10399  0F42                     l727:
 10400  0F42  0008               	return
 10401  0F43                     __end_of___lldiv:
 10402                           
 10403                           	psect	text21
 10404  0BF2                     __ptext21:	
 10405 ;; *************** function _i2c_init *****************
 10406 ;; Defined at:
 10407 ;;		line 6 in file "I2C.c"
 10408 ;; Parameters:    Size  Location     Type
 10409 ;;		None
 10410 ;; Auto vars:     Size  Location     Type
 10411 ;;		None
 10412 ;; Return value:  Size  Location     Type
 10413 ;;                  1    wreg      void 
 10414 ;; Registers used:
 10415 ;;		wreg, status,2
 10416 ;; Tracked objects:
 10417 ;;		On entry : 0/0
 10418 ;;		On exit  : 0/0
 10419 ;;		Unchanged: 0/0
 10420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10425 ;;Total ram usage:        0 bytes
 10426 ;; Hardware stack levels used: 1
 10427 ;; Hardware stack levels required when called: 1
 10428 ;; This function calls:
 10429 ;;		Nothing
 10430 ;; This function is called by:
 10431 ;;		_port_init
 10432 ;; This function uses a non-reentrant model
 10433 ;;
 10434                           
 10435                           
 10436                           ;psect for function _i2c_init
 10437  0BF2                     _i2c_init:
 10438  0BF2                     l2764:	
 10439                           ;incstack = 0
 10440                           ; Regs used in _i2c_init: [wreg+status,2]
 10441                           
 10442                           
 10443                           ;I2C.c: 8:     TRISCbits.TRISC3 = 1;
 10444  0BF2  0020               	movlb	0	; select bank0
 10445  0BF3  1593               	bsf	19,3	;volatile
 10446                           
 10447                           ;I2C.c: 9:     TRISCbits.TRISC4 = 1;
 10448  0BF4  1613               	bsf	19,4	;volatile
 10449                           
 10450                           ;I2C.c: 10:     ANSELCbits.ANSC3 = 0;
 10451  0BF5  003E               	movlb	30	; select bank30
 10452  0BF6  11CE               	bcf	78,3	;volatile
 10453                           
 10454                           ;I2C.c: 11:     ANSELCbits.ANSC4 = 0;
 10455  0BF7  124E               	bcf	78,4	;volatile
 10456  0BF8                     l2766:
 10457                           
 10458                           ;I2C.c: 12:     SSP1CLKPPS = 0x14;
 10459  0BF8  3014               	movlw	20
 10460  0BF9  003D               	movlb	29	; select bank29
 10461  0BFA  00C5               	movwf	69	;volatile
 10462                           
 10463                           ;I2C.c: 13:     RC3PPS = 0x15;
 10464  0BFB  3015               	movlw	21
 10465  0BFC  003E               	movlb	30	; select bank30
 10466  0BFD  00A3               	movwf	35	;volatile
 10467                           
 10468                           ;I2C.c: 14:     RC4PPS = 0x14;
 10469  0BFE  3014               	movlw	20
 10470  0BFF  00A4               	movwf	36	;volatile
 10471                           
 10472                           ;I2C.c: 15:     SSP1DATPPS = 0x13;
 10473  0C00  3013               	movlw	19
 10474  0C01  003D               	movlb	29	; select bank29
 10475  0C02  00C6               	movwf	70	;volatile
 10476                           
 10477                           ;I2C.c: 17:     SSP1STAT = 0b10000000;
 10478  0C03  3080               	movlw	128
 10479  0C04  0023               	movlb	3	; select bank3
 10480  0C05  008F               	movwf	15	;volatile
 10481                           
 10482                           ;I2C.c: 18:  SSP1CON1 = 0b00101000;
 10483  0C06  3028               	movlw	40
 10484  0C07  0090               	movwf	16	;volatile
 10485  0C08                     l2768:
 10486                           
 10487                           ;I2C.c: 19:  SSP1CON3 = 0x00;
 10488  0C08  0192               	clrf	18	;volatile
 10489  0C09                     l2770:
 10490                           
 10491                           ;I2C.c: 20:  SSP1ADD = ((32000000UL/(4UL*100000UL))-1);
 10492  0C09  304F               	movlw	79
 10493  0C0A  008D               	movwf	13	;volatile
 10494  0C0B                     l216:
 10495  0C0B  0008               	return
 10496  0C0C                     __end_of_i2c_init:
 10497                           
 10498                           	psect	text22
 10499  0BD8                     __ptext22:	
 10500 ;; *************** function _adc_init *****************
 10501 ;; Defined at:
 10502 ;;		line 3 in file "adc.c"
 10503 ;; Parameters:    Size  Location     Type
 10504 ;;		None
 10505 ;; Auto vars:     Size  Location     Type
 10506 ;;		None
 10507 ;; Return value:  Size  Location     Type
 10508 ;;                  1    wreg      void 
 10509 ;; Registers used:
 10510 ;;		wreg, status,2
 10511 ;; Tracked objects:
 10512 ;;		On entry : 0/0
 10513 ;;		On exit  : 0/0
 10514 ;;		Unchanged: 0/0
 10515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10520 ;;Total ram usage:        0 bytes
 10521 ;; Hardware stack levels used: 1
 10522 ;; Hardware stack levels required when called: 1
 10523 ;; This function calls:
 10524 ;;		Nothing
 10525 ;; This function is called by:
 10526 ;;		_port_init
 10527 ;; This function uses a non-reentrant model
 10528 ;;
 10529                           
 10530                           
 10531                           ;psect for function _adc_init
 10532  0BD8                     _adc_init:
 10533  0BD8                     l2760:	
 10534                           ;incstack = 0
 10535                           ; Regs used in _adc_init: [wreg+status,2]
 10536                           
 10537                           
 10538                           ;adc.c: 4:     ADCON0 = ADCON0 & ~(1<<7 | 1<<4 );
 10539  0BD8  0021               	movlb	1	; select bank1
 10540  0BD9  0813               	movf	19,w	;volatile
 10541  0BDA  396F               	andlw	111
 10542  0BDB  0093               	movwf	19	;volatile
 10543                           
 10544                           ;adc.c: 5:     ADCON0 = ADCON0 |(1<<2);
 10545  0BDC  0813               	movf	19,w	;volatile
 10546  0BDD  3804               	iorlw	4
 10547  0BDE  0093               	movwf	19	;volatile
 10548                           
 10549                           ;adc.c: 6:     ADCON1 = ADCON1 |(1<<7);
 10550  0BDF  0814               	movf	20,w	;volatile
 10551  0BE0  3880               	iorlw	128
 10552  0BE1  0094               	movwf	20	;volatile
 10553                           
 10554                           ;adc.c: 7:     ADCON2 = ADCON2 & ~(7<<0 );
 10555  0BE2  0815               	movf	21,w	;volatile
 10556  0BE3  39F8               	andlw	248
 10557  0BE4  0095               	movwf	21	;volatile
 10558                           
 10559                           ;adc.c: 17:     ADCLK = ADCLK |(16<<0);
 10560  0BE5  0818               	movf	24,w	;volatile
 10561  0BE6  3810               	iorlw	16
 10562  0BE7  0098               	movwf	24	;volatile
 10563                           
 10564                           ;adc.c: 19:     ADREF = ADREF & ~(1<<4 );
 10565  0BE8  081A               	movf	26,w	;volatile
 10566  0BE9  39EF               	andlw	239
 10567  0BEA  009A               	movwf	26	;volatile
 10568                           
 10569                           ;adc.c: 20:     ADREF = ADREF & ~(3<<0 );
 10570  0BEB  081A               	movf	26,w	;volatile
 10571  0BEC  39FC               	andlw	252
 10572  0BED  009A               	movwf	26	;volatile
 10573  0BEE                     l2762:
 10574                           
 10575                           ;adc.c: 23:     ADPCH = 4;
 10576  0BEE  3004               	movlw	4
 10577  0BEF  009E               	movwf	30	;volatile
 10578                           
 10579                           ;adc.c: 24:     ADCAP = 0;
 10580  0BF0  019B               	clrf	27	;volatile
 10581  0BF1                     l177:
 10582  0BF1  0008               	return
 10583  0BF2                     __end_of_adc_init:
 10584                           
 10585                           	psect	text23
 10586  0B63                     __ptext23:	
 10587 ;; *************** function _lcd_showCustomChar *****************
 10588 ;; Defined at:
 10589 ;;		line 211 in file "LCD_i2c.c"
 10590 ;; Parameters:    Size  Location     Type
 10591 ;;  x               1    wreg     unsigned char 
 10592 ;;  y               1    8[BANK0 ] unsigned char 
 10593 ;;  dir             1    9[BANK0 ] unsigned char 
 10594 ;; Auto vars:     Size  Location     Type
 10595 ;;  x               1   11[BANK0 ] unsigned char 
 10596 ;; Return value:  Size  Location     Type
 10597 ;;                  1    wreg      void 
 10598 ;; Registers used:
 10599 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10600 ;; Tracked objects:
 10601 ;;		On entry : 0/0
 10602 ;;		On exit  : 0/0
 10603 ;;		Unchanged: 0/0
 10604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10605 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10606 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10607 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10608 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10609 ;;Total ram usage:        4 bytes
 10610 ;; Hardware stack levels used: 1
 10611 ;; Hardware stack levels required when called: 7
 10612 ;; This function calls:
 10613 ;;		_lcd_gotoxy
 10614 ;;		_lcd_send_byte
 10615 ;; This function is called by:
 10616 ;;		_main
 10617 ;; This function uses a non-reentrant model
 10618 ;;
 10619                           
 10620                           
 10621                           ;psect for function _lcd_showCustomChar
 10622  0B63                     _lcd_showCustomChar:
 10623                           
 10624                           ;incstack = 0
 10625                           ; Regs used in _lcd_showCustomChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10626                           ;lcd_showCustomChar@x stored from wreg
 10627  0B63  0020               	movlb	0	; select bank0
 10628  0B64  00AB               	movwf	lcd_showCustomChar@x
 10629  0B65                     l3794:
 10630                           
 10631                           ;LCD_i2c.c: 212:  lcd_gotoxy( x, y);
 10632  0B65  0828               	movf	lcd_showCustomChar@y,w
 10633  0B66  00AA               	movwf	??_lcd_showCustomChar
 10634  0B67  082A               	movf	??_lcd_showCustomChar,w
 10635  0B68  00A3               	movwf	lcd_gotoxy@y
 10636  0B69  082B               	movf	lcd_showCustomChar@x,w
 10637  0B6A  318D  259F  318B   	fcall	_lcd_gotoxy
 10638  0B6D                     l3796:
 10639                           
 10640                           ;LCD_i2c.c: 214:  lcd_send_byte(1,dir);
 10641  0B6D  0020               	movlb	0	; select bank0
 10642  0B6E  0829               	movf	lcd_showCustomChar@dir,w
 10643  0B6F  00AA               	movwf	??_lcd_showCustomChar
 10644  0B70  082A               	movf	??_lcd_showCustomChar,w
 10645  0B71  00FB               	movwf	lcd_send_byte@n
 10646  0B72  3001               	movlw	1
 10647  0B73  318C  2426  318B   	fcall	_lcd_send_byte
 10648  0B76                     l358:
 10649  0B76  0008               	return
 10650  0B77                     __end_of_lcd_showCustomChar:
 10651                           
 10652                           	psect	text24
 10653  0CCD                     __ptext24:	
 10654 ;; *************** function _lcd_setCustomChar *****************
 10655 ;; Defined at:
 10656 ;;		line 203 in file "LCD_i2c.c"
 10657 ;; Parameters:    Size  Location     Type
 10658 ;;  dato            2    3[BANK0 ] PTR unsigned char 
 10659 ;;		 -> Letra2(8), Letra1(8), 
 10660 ;;  dir             1    5[BANK0 ] unsigned char 
 10661 ;; Auto vars:     Size  Location     Type
 10662 ;;  i               1    8[BANK0 ] unsigned char 
 10663 ;; Return value:  Size  Location     Type
 10664 ;;                  1    wreg      void 
 10665 ;; Registers used:
 10666 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10667 ;; Tracked objects:
 10668 ;;		On entry : 0/0
 10669 ;;		On exit  : 0/0
 10670 ;;		Unchanged: 0/0
 10671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10672 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10673 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10674 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10675 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10676 ;;Total ram usage:        6 bytes
 10677 ;; Hardware stack levels used: 1
 10678 ;; Hardware stack levels required when called: 6
 10679 ;; This function calls:
 10680 ;;		_lcd_send_byte
 10681 ;; This function is called by:
 10682 ;;		_main
 10683 ;; This function uses a non-reentrant model
 10684 ;;
 10685                           
 10686                           
 10687                           ;psect for function _lcd_setCustomChar
 10688  0CCD                     _lcd_setCustomChar:
 10689  0CCD                     l3778:	
 10690                           ;incstack = 0
 10691                           ; Regs used in _lcd_setCustomChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10692                           
 10693                           
 10694                           ;LCD_i2c.c: 205:  lcd_send_byte(0,0x40+dir*8);
 10695  0CCD  0020               	movlb	0	; select bank0
 10696  0CCE  0825               	movf	lcd_setCustomChar@dir,w
 10697  0CCF  00A6               	movwf	??_lcd_setCustomChar
 10698  0CD0  3002               	movlw	2
 10699  0CD1                     u3085:
 10700  0CD1  35A6               	lslf	??_lcd_setCustomChar,f
 10701  0CD2  3EFF               	addlw	-1
 10702  0CD3  1D03               	skipz
 10703  0CD4  2CD1               	goto	u3085
 10704  0CD5  3526               	lslf	??_lcd_setCustomChar,w
 10705  0CD6  3E40               	addlw	64
 10706  0CD7  00A7               	movwf	??_lcd_setCustomChar+1
 10707  0CD8  0827               	movf	??_lcd_setCustomChar+1,w
 10708  0CD9  00FB               	movwf	lcd_send_byte@n
 10709  0CDA  3000               	movlw	0
 10710  0CDB  318C  2426  318C   	fcall	_lcd_send_byte
 10711  0CDE                     l3780:
 10712                           
 10713                           ;LCD_i2c.c: 206:  for(uint8_t i=0;i<=7 ;i++) {
 10714  0CDE  0020               	movlb	0	; select bank0
 10715  0CDF  01A8               	clrf	lcd_setCustomChar@i
 10716  0CE0                     l3786:
 10717                           
 10718                           ;LCD_i2c.c: 207:   lcd_send_byte(1,*dato++);
 10719  0CE0  0823               	movf	lcd_setCustomChar@dato,w
 10720  0CE1  0084               	movwf	4
 10721  0CE2  0824               	movf	lcd_setCustomChar@dato+1,w
 10722  0CE3  0085               	movwf	5
 10723  0CE4  0800               	movf	0,w	;code access
 10724  0CE5  00A6               	movwf	??_lcd_setCustomChar
 10725  0CE6  0826               	movf	??_lcd_setCustomChar,w
 10726  0CE7  00FB               	movwf	lcd_send_byte@n
 10727  0CE8  3001               	movlw	1
 10728  0CE9  318C  2426  318C   	fcall	_lcd_send_byte
 10729  0CEC                     l3788:
 10730  0CEC  3001               	movlw	1
 10731  0CED  0020               	movlb	0	; select bank0
 10732  0CEE  07A3               	addwf	lcd_setCustomChar@dato,f
 10733  0CEF  3000               	movlw	0
 10734  0CF0  3DA4               	addwfc	lcd_setCustomChar@dato+1,f
 10735  0CF1                     l3790:
 10736                           
 10737                           ;LCD_i2c.c: 208:  }
 10738  0CF1  3001               	movlw	1
 10739  0CF2  00A6               	movwf	??_lcd_setCustomChar
 10740  0CF3  0826               	movf	??_lcd_setCustomChar,w
 10741  0CF4  07A8               	addwf	lcd_setCustomChar@i,f
 10742  0CF5                     l3792:
 10743  0CF5  3008               	movlw	8
 10744  0CF6  0228               	subwf	lcd_setCustomChar@i,w
 10745  0CF7  1C03               	skipc
 10746  0CF8  2CFA               	goto	u3091
 10747  0CF9  2CFB               	goto	u3090
 10748  0CFA                     u3091:
 10749  0CFA  2CE0               	goto	l3786
 10750  0CFB                     u3090:
 10751  0CFB                     l355:
 10752  0CFB  0008               	return
 10753  0CFC                     __end_of_lcd_setCustomChar:
 10754                           
 10755                           	psect	text25
 10756  0E8E                     __ptext25:	
 10757 ;; *************** function _lcd_puts *****************
 10758 ;; Defined at:
 10759 ;;		line 164 in file "LCD_i2c.c"
 10760 ;; Parameters:    Size  Location     Type
 10761 ;;  dato            1    wreg     PTR unsigned char 
 10762 ;;		 -> buffer(50), 
 10763 ;; Auto vars:     Size  Location     Type
 10764 ;;  dato            1   10[BANK0 ] PTR unsigned char 
 10765 ;;		 -> buffer(50), 
 10766 ;; Return value:  Size  Location     Type
 10767 ;;                  1    wreg      void 
 10768 ;; Registers used:
 10769 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10770 ;; Tracked objects:
 10771 ;;		On entry : 0/0
 10772 ;;		On exit  : 0/0
 10773 ;;		Unchanged: 0/0
 10774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10776 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10777 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10778 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10779 ;;Total ram usage:        3 bytes
 10780 ;; Hardware stack levels used: 1
 10781 ;; Hardware stack levels required when called: 7
 10782 ;; This function calls:
 10783 ;;		_lcd_gotoxy
 10784 ;;		_lcd_send_byte
 10785 ;; This function is called by:
 10786 ;;		_main
 10787 ;; This function uses a non-reentrant model
 10788 ;;
 10789                           
 10790                           
 10791                           ;psect for function _lcd_puts
 10792  0E8E                     _lcd_puts:
 10793                           
 10794                           ;incstack = 0
 10795                           ; Regs used in _lcd_puts: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10796                           ;lcd_puts@dato stored from wreg
 10797  0E8E  0020               	movlb	0	; select bank0
 10798  0E8F  00AA               	movwf	lcd_puts@dato
 10799  0E90                     l3748:
 10800                           
 10801                           ;LCD_i2c.c: 165:     while (*dato){
 10802  0E90  2EDE               	goto	l3770
 10803  0E91                     l3750:
 10804                           
 10805                           ;LCD_i2c.c: 168:                 lcd_send_byte(0,1);
 10806  0E91  01FB               	clrf	lcd_send_byte@n
 10807  0E92  0AFB               	incf	lcd_send_byte@n,f
 10808  0E93  3000               	movlw	0
 10809  0E94  318C  2426  318E   	fcall	_lcd_send_byte
 10810  0E97                     l3752:
 10811                           
 10812                           ;LCD_i2c.c: 169:                 _delay((unsigned long)((2)*(32000000UL/4000.0)));
 10813  0E97  3015               	movlw	21
 10814  0E98  0020               	movlb	0	; select bank0
 10815  0E99  00A8               	movwf	??_lcd_puts
 10816  0E9A  30C6               	movlw	198
 10817  0E9B                     u3327:
 10818  0E9B  0B89               	decfsz	9,f
 10819  0E9C  2E9B               	goto	u3327
 10820  0E9D  0BA8               	decfsz	??_lcd_puts,f
 10821  0E9E  2E9B               	goto	u3327
 10822  0E9F  0000               	nop
 10823  0EA0                     l3754:
 10824                           
 10825                           ;LCD_i2c.c: 170:                 g_LcdX = 0;
 10826  0EA0  0021               	movlb	1	; select bank1
 10827  0EA1  01B4               	clrf	_g_LcdX^(0+128)
 10828  0EA2                     l3756:
 10829                           
 10830                           ;LCD_i2c.c: 171:                 g_LcdY = 0;
 10831  0EA2  0020               	movlb	0	; select bank0
 10832  0EA3  01EF               	clrf	_g_LcdY
 10833  0EA4                     l3758:
 10834                           
 10835                           ;LCD_i2c.c: 172:                 _delay((unsigned long)((2)*(32000000UL/4000.0)));
 10836  0EA4  3015               	movlw	21
 10837  0EA5  0020               	movlb	0	; select bank0
 10838  0EA6  00A8               	movwf	??_lcd_puts
 10839  0EA7  30C6               	movlw	198
 10840  0EA8                     u3337:
 10841  0EA8  0B89               	decfsz	9,f
 10842  0EA9  2EA8               	goto	u3337
 10843  0EAA  0BA8               	decfsz	??_lcd_puts,f
 10844  0EAB  2EA8               	goto	u3337
 10845  0EAC  0000               	nop
 10846                           
 10847                           ;LCD_i2c.c: 173:                 break;
 10848  0EAD  2ED9               	goto	l3768
 10849  0EAE                     l3760:
 10850                           
 10851                           ;LCD_i2c.c: 175:                 lcd_gotoxy(1, g_LcdY+2);
 10852  0EAE  086F               	movf	_g_LcdY,w
 10853  0EAF  3E02               	addlw	2
 10854  0EB0  00A8               	movwf	??_lcd_puts
 10855  0EB1  0828               	movf	??_lcd_puts,w
 10856  0EB2  00A3               	movwf	lcd_gotoxy@y
 10857  0EB3  3001               	movlw	1
 10858  0EB4  318D  259F  318E   	fcall	_lcd_gotoxy
 10859                           
 10860                           ;LCD_i2c.c: 176:                 break;
 10861  0EB7  2ED9               	goto	l3768
 10862  0EB8                     l3762:
 10863                           
 10864                           ;LCD_i2c.c: 178:                 lcd_send_byte(1,*dato);
 10865  0EB8  082A               	movf	lcd_puts@dato,w
 10866  0EB9  0086               	movwf	6
 10867  0EBA  3001               	movlw	1	; select bank2/3
 10868  0EBB  0087               	movwf	7
 10869  0EBC  0801               	movf	1,w
 10870  0EBD  00A8               	movwf	??_lcd_puts
 10871  0EBE  0828               	movf	??_lcd_puts,w
 10872  0EBF  00FB               	movwf	lcd_send_byte@n
 10873  0EC0  3001               	movlw	1
 10874  0EC1  318C  2426  318E   	fcall	_lcd_send_byte
 10875                           
 10876                           ;LCD_i2c.c: 179:                 break;
 10877  0EC4  2ED9               	goto	l3768
 10878  0EC5                     l3766:
 10879  0EC5  082A               	movf	lcd_puts@dato,w
 10880  0EC6  0086               	movwf	6
 10881  0EC7  3001               	movlw	1	; select bank2/3
 10882  0EC8  0087               	movwf	7
 10883  0EC9  0801               	movf	1,w
 10884  0ECA  00A8               	movwf	??_lcd_puts
 10885  0ECB  01A9               	clrf	??_lcd_puts+1
 10886                           
 10887                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10888                           ; Switch size 1, requested type "simple"
 10889                           ; Number of cases is 1, Range of values is 0 to 0
 10890                           ; switch strategies available:
 10891                           ; Name         Instructions Cycles
 10892                           ; simple_byte            4     3 (average)
 10893                           ; direct_byte            8     6 (fixed)
 10894                           ; jumptable            260     6 (fixed)
 10895                           ;	Chosen strategy is simple_byte
 10896  0ECC  0829               	movf	??_lcd_puts+1,w
 10897  0ECD  3A00               	xorlw	0	; case 0
 10898  0ECE  1903               	skipnz
 10899  0ECF  2ED1               	goto	l4030
 10900  0ED0  2EB8               	goto	l3762
 10901  0ED1                     l4030:
 10902                           
 10903                           ; Switch size 1, requested type "simple"
 10904                           ; Number of cases is 2, Range of values is 10 to 12
 10905                           ; switch strategies available:
 10906                           ; Name         Instructions Cycles
 10907                           ; simple_byte            7     4 (average)
 10908                           ; direct_byte           15     9 (fixed)
 10909                           ; jumptable            263     9 (fixed)
 10910                           ;	Chosen strategy is simple_byte
 10911  0ED1  0828               	movf	??_lcd_puts,w
 10912  0ED2  3A0A               	xorlw	10	; case 10
 10913  0ED3  1903               	skipnz
 10914  0ED4  2EAE               	goto	l3760
 10915  0ED5  3A06               	xorlw	6	; case 12
 10916  0ED6  1903               	skipnz
 10917  0ED7  2E91               	goto	l3750
 10918  0ED8  2EB8               	goto	l3762
 10919  0ED9                     l3768:
 10920                           
 10921                           ;LCD_i2c.c: 183:         dato++;
 10922  0ED9  3001               	movlw	1
 10923  0EDA  0020               	movlb	0	; select bank0
 10924  0EDB  00A8               	movwf	??_lcd_puts
 10925  0EDC  0828               	movf	??_lcd_puts,w
 10926  0EDD  07AA               	addwf	lcd_puts@dato,f
 10927  0EDE                     l3770:
 10928                           
 10929                           ;LCD_i2c.c: 165:     while (*dato){
 10930  0EDE  082A               	movf	lcd_puts@dato,w
 10931  0EDF  0086               	movwf	6
 10932  0EE0  3001               	movlw	1	; select bank2/3
 10933  0EE1  0087               	movwf	7
 10934  0EE2  0801               	movf	1,w
 10935  0EE3  1D03               	btfss	3,2
 10936  0EE4  2EE6               	goto	u3071
 10937  0EE5  2EE7               	goto	u3070
 10938  0EE6                     u3071:
 10939  0EE6  2EC5               	goto	l3766
 10940  0EE7                     u3070:
 10941  0EE7                     l347:
 10942  0EE7  0008               	return
 10943  0EE8                     __end_of_lcd_puts:
 10944                           
 10945                           	psect	text26
 10946  0D9F                     __ptext26:	
 10947 ;; *************** function _lcd_gotoxy *****************
 10948 ;; Defined at:
 10949 ;;		line 119 in file "LCD_i2c.c"
 10950 ;; Parameters:    Size  Location     Type
 10951 ;;  x               1    wreg     unsigned char 
 10952 ;;  y               1    3[BANK0 ] unsigned char 
 10953 ;; Auto vars:     Size  Location     Type
 10954 ;;  x               1    6[BANK0 ] unsigned char 
 10955 ;;  address         1    7[BANK0 ] unsigned char 
 10956 ;; Return value:  Size  Location     Type
 10957 ;;                  1    wreg      void 
 10958 ;; Registers used:
 10959 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10960 ;; Tracked objects:
 10961 ;;		On entry : 0/0
 10962 ;;		On exit  : 0/0
 10963 ;;		Unchanged: 0/0
 10964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10965 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10966 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10967 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10968 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10969 ;;Total ram usage:        5 bytes
 10970 ;; Hardware stack levels used: 1
 10971 ;; Hardware stack levels required when called: 6
 10972 ;; This function calls:
 10973 ;;		_lcd_send_byte
 10974 ;; This function is called by:
 10975 ;;		_lcd_puts
 10976 ;;		_lcd_showCustomChar
 10977 ;;		_lcd_putc
 10978 ;; This function uses a non-reentrant model
 10979 ;;
 10980                           
 10981                           
 10982                           ;psect for function _lcd_gotoxy
 10983  0D9F                     _lcd_gotoxy:
 10984                           
 10985                           ;incstack = 0
 10986                           ; Regs used in _lcd_gotoxy: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10987                           ;lcd_gotoxy@x stored from wreg
 10988  0D9F  0020               	movlb	0	; select bank0
 10989  0DA0  00A6               	movwf	lcd_gotoxy@x
 10990  0DA1                     l3652:
 10991                           
 10992                           ;LCD_i2c.c: 120:    uint8_t address;;LCD_i2c.c: 121:    switch(y)
 10993  0DA1  2DB3               	goto	l3666
 10994  0DA2                     l3654:
 10995                           
 10996                           ;LCD_i2c.c: 124:          address = 0x00;
 10997  0DA2  01A7               	clrf	lcd_gotoxy@address
 10998                           
 10999                           ;LCD_i2c.c: 125:          break;
 11000  0DA3  2DC9               	goto	l3668
 11001  0DA4                     l3656:
 11002                           
 11003                           ;LCD_i2c.c: 127:          address = 0x40;
 11004  0DA4  3040               	movlw	64
 11005  0DA5  00A4               	movwf	??_lcd_gotoxy
 11006  0DA6  0824               	movf	??_lcd_gotoxy,w
 11007  0DA7  00A7               	movwf	lcd_gotoxy@address
 11008                           
 11009                           ;LCD_i2c.c: 128:          break;
 11010  0DA8  2DC9               	goto	l3668
 11011  0DA9                     l3658:
 11012                           
 11013                           ;LCD_i2c.c: 130:          address = 0x14;
 11014  0DA9  3014               	movlw	20
 11015  0DAA  00A4               	movwf	??_lcd_gotoxy
 11016  0DAB  0824               	movf	??_lcd_gotoxy,w
 11017  0DAC  00A7               	movwf	lcd_gotoxy@address
 11018                           
 11019                           ;LCD_i2c.c: 131:          break;
 11020  0DAD  2DC9               	goto	l3668
 11021  0DAE                     l3660:
 11022                           
 11023                           ;LCD_i2c.c: 133:          address = 0x54;
 11024  0DAE  3054               	movlw	84
 11025  0DAF  00A4               	movwf	??_lcd_gotoxy
 11026  0DB0  0824               	movf	??_lcd_gotoxy,w
 11027  0DB1  00A7               	movwf	lcd_gotoxy@address
 11028                           
 11029                           ;LCD_i2c.c: 134:          break;
 11030  0DB2  2DC9               	goto	l3668
 11031  0DB3                     l3666:
 11032  0DB3  0823               	movf	lcd_gotoxy@y,w
 11033  0DB4  00A4               	movwf	??_lcd_gotoxy
 11034  0DB5  01A5               	clrf	??_lcd_gotoxy+1
 11035                           
 11036                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11037                           ; Switch size 1, requested type "simple"
 11038                           ; Number of cases is 1, Range of values is 0 to 0
 11039                           ; switch strategies available:
 11040                           ; Name         Instructions Cycles
 11041                           ; simple_byte            4     3 (average)
 11042                           ; direct_byte            8     6 (fixed)
 11043                           ; jumptable            260     6 (fixed)
 11044                           ;	Chosen strategy is simple_byte
 11045  0DB6  0825               	movf	??_lcd_gotoxy+1,w
 11046  0DB7  3A00               	xorlw	0	; case 0
 11047  0DB8  1903               	skipnz
 11048  0DB9  2DBB               	goto	l4032
 11049  0DBA  2DA2               	goto	l3654
 11050  0DBB                     l4032:
 11051                           
 11052                           ; Switch size 1, requested type "simple"
 11053                           ; Number of cases is 4, Range of values is 1 to 4
 11054                           ; switch strategies available:
 11055                           ; Name         Instructions Cycles
 11056                           ; simple_byte           13     7 (average)
 11057                           ; direct_byte           17     9 (fixed)
 11058                           ; jumptable            263     9 (fixed)
 11059                           ;	Chosen strategy is simple_byte
 11060  0DBB  0824               	movf	??_lcd_gotoxy,w
 11061  0DBC  3A01               	xorlw	1	; case 1
 11062  0DBD  1903               	skipnz
 11063  0DBE  2DA2               	goto	l3654
 11064  0DBF  3A03               	xorlw	3	; case 2
 11065  0DC0  1903               	skipnz
 11066  0DC1  2DA4               	goto	l3656
 11067  0DC2  3A01               	xorlw	1	; case 3
 11068  0DC3  1903               	skipnz
 11069  0DC4  2DA9               	goto	l3658
 11070  0DC5  3A07               	xorlw	7	; case 4
 11071  0DC6  1903               	skipnz
 11072  0DC7  2DAE               	goto	l3660
 11073  0DC8  2DA2               	goto	l3654
 11074  0DC9                     l3668:
 11075                           
 11076                           ;LCD_i2c.c: 139:    address += x-1;
 11077  0DC9  0826               	movf	lcd_gotoxy@x,w
 11078  0DCA  3EFF               	addlw	255
 11079  0DCB  00A4               	movwf	??_lcd_gotoxy
 11080  0DCC  0824               	movf	??_lcd_gotoxy,w
 11081  0DCD  07A7               	addwf	lcd_gotoxy@address,f
 11082  0DCE                     l3670:
 11083                           
 11084                           ;LCD_i2c.c: 140:    lcd_send_byte(0, 0x80 | address);
 11085  0DCE  0827               	movf	lcd_gotoxy@address,w
 11086  0DCF  3880               	iorlw	128
 11087  0DD0  00A4               	movwf	??_lcd_gotoxy
 11088  0DD1  0824               	movf	??_lcd_gotoxy,w
 11089  0DD2  00FB               	movwf	lcd_send_byte@n
 11090  0DD3  3000               	movlw	0
 11091  0DD4  318C  2426  318D   	fcall	_lcd_send_byte
 11092  0DD7                     l3672:
 11093                           
 11094                           ;LCD_i2c.c: 142:    g_LcdX = x - 1;
 11095  0DD7  0020               	movlb	0	; select bank0
 11096  0DD8  0826               	movf	lcd_gotoxy@x,w
 11097  0DD9  3EFF               	addlw	255
 11098  0DDA  00A4               	movwf	??_lcd_gotoxy
 11099  0DDB  0824               	movf	??_lcd_gotoxy,w
 11100  0DDC  0021               	movlb	1	; select bank1
 11101  0DDD  00B4               	movwf	_g_LcdX^(0+128)
 11102  0DDE                     l3674:
 11103                           
 11104                           ;LCD_i2c.c: 143:    g_LcdY = y - 1;
 11105  0DDE  0020               	movlb	0	; select bank0
 11106  0DDF  0823               	movf	lcd_gotoxy@y,w
 11107  0DE0  3EFF               	addlw	255
 11108  0DE1  00A4               	movwf	??_lcd_gotoxy
 11109  0DE2  0824               	movf	??_lcd_gotoxy,w
 11110  0DE3  00EF               	movwf	_g_LcdY
 11111  0DE4                     l328:
 11112  0DE4  0008               	return
 11113  0DE5                     __end_of_lcd_gotoxy:
 11114                           
 11115                           	psect	text27
 11116  06FA                     __ptext27:	
 11117 ;; *************** function _lcd_init *****************
 11118 ;; Defined at:
 11119 ;;		line 66 in file "LCD_i2c.c"
 11120 ;; Parameters:    Size  Location     Type
 11121 ;;		None
 11122 ;; Auto vars:     Size  Location     Type
 11123 ;;  i               1    5[BANK0 ] unsigned char 
 11124 ;; Return value:  Size  Location     Type
 11125 ;;                  1    wreg      void 
 11126 ;; Registers used:
 11127 ;;		wreg, status,2, status,0, pclath, cstack
 11128 ;; Tracked objects:
 11129 ;;		On entry : 0/0
 11130 ;;		On exit  : 0/0
 11131 ;;		Unchanged: 0/0
 11132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11134 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11135 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11136 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11137 ;;Total ram usage:        3 bytes
 11138 ;; Hardware stack levels used: 1
 11139 ;; Hardware stack levels required when called: 6
 11140 ;; This function calls:
 11141 ;;		_I2C1_Write1ByteRegister
 11142 ;;		_Send_D7_D4
 11143 ;;		_lcd_send_byte
 11144 ;; This function is called by:
 11145 ;;		_main
 11146 ;; This function uses a non-reentrant model
 11147 ;;
 11148                           
 11149                           
 11150                           ;psect for function _lcd_init
 11151  06FA                     _lcd_init:
 11152  06FA                     l3700:	
 11153                           ;incstack = 0
 11154                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
 11155                           
 11156                           
 11157                           ;LCD_i2c.c: 67:    uint8_t i;;LCD_i2c.c: 70:         I2C1_Write1ByteRegister(32|(7),0,0)
      +                          ;
 11158  06FA  01F2               	clrf	I2C1_Write1ByteRegister@reg
 11159  06FB  01F3               	clrf	I2C1_Write1ByteRegister@data
 11160  06FC  3027               	movlw	39
 11161  06FD  318B  234F  3186   	fcall	_I2C1_Write1ByteRegister
 11162  0700                     l3702:
 11163                           
 11164                           ;LCD_i2c.c: 78:    _delay((unsigned long)((35)*(32000000UL/4000.0)));
 11165  0700  3002               	movlw	2
 11166  0701  0020               	movlb	0	; select bank0
 11167  0702  00A4               	movwf	??_lcd_init+1
 11168  0703  306C               	movlw	108
 11169  0704  00A3               	movwf	??_lcd_init
 11170  0705  309F               	movlw	159
 11171  0706                     u3347:
 11172  0706  0B89               	decfsz	9,f
 11173  0707  2F06               	goto	u3347
 11174  0708  0BA3               	decfsz	??_lcd_init,f
 11175  0709  2F06               	goto	u3347
 11176  070A  0BA4               	decfsz	??_lcd_init+1,f
 11177  070B  2F06               	goto	u3347
 11178  070C  3200               	nop2
 11179  070D                     l3704:
 11180                           
 11181                           ;LCD_i2c.c: 80:    for(i=0 ;i < 3; i++){
 11182  070D  0020               	movlb	0	; select bank0
 11183  070E  01A5               	clrf	lcd_init@i
 11184  070F                     l3710:
 11185                           
 11186                           ;LCD_i2c.c: 81:       Send_D7_D4(0,0x03);
 11187  070F  3003               	movlw	3
 11188  0710  00A3               	movwf	??_lcd_init
 11189  0711  0823               	movf	??_lcd_init,w
 11190  0712  00F7               	movwf	Send_D7_D4@nibble
 11191  0713  3000               	movlw	0
 11192  0714  318F  27A0  3186   	fcall	_Send_D7_D4
 11193  0717                     l3712:
 11194                           
 11195                           ;LCD_i2c.c: 82:       _delay((unsigned long)((5)*(32000000UL/4000.0)));
 11196  0717  3034               	movlw	52
 11197  0718  0020               	movlb	0	; select bank0
 11198  0719  00A3               	movwf	??_lcd_init
 11199  071A  30F1               	movlw	241
 11200  071B                     u3357:
 11201  071B  0B89               	decfsz	9,f
 11202  071C  2F1B               	goto	u3357
 11203  071D  0BA3               	decfsz	??_lcd_init,f
 11204  071E  2F1B               	goto	u3357
 11205  071F  3200               	nop2
 11206  0720                     l3714:
 11207                           
 11208                           ;LCD_i2c.c: 83:    }
 11209  0720  3001               	movlw	1
 11210  0721  0020               	movlb	0	; select bank0
 11211  0722  00A3               	movwf	??_lcd_init
 11212  0723  0823               	movf	??_lcd_init,w
 11213  0724  07A5               	addwf	lcd_init@i,f
 11214  0725                     l3716:
 11215  0725  3003               	movlw	3
 11216  0726  0225               	subwf	lcd_init@i,w
 11217  0727  1C03               	skipc
 11218  0728  2F2A               	goto	u3061
 11219  0729  2F2B               	goto	u3060
 11220  072A                     u3061:
 11221  072A  2F0F               	goto	l3710
 11222  072B                     u3060:
 11223  072B                     l3718:
 11224                           
 11225                           ;LCD_i2c.c: 84:     Send_D7_D4(0,0x02);
 11226  072B  3002               	movlw	2
 11227  072C  00A3               	movwf	??_lcd_init
 11228  072D  0823               	movf	??_lcd_init,w
 11229  072E  00F7               	movwf	Send_D7_D4@nibble
 11230  072F  3000               	movlw	0
 11231  0730  318F  27A0  3186   	fcall	_Send_D7_D4
 11232                           
 11233                           ;LCD_i2c.c: 87:     lcd_send_byte(0, 0x28);
 11234  0733  3028               	movlw	40
 11235  0734  0020               	movlb	0	; select bank0
 11236  0735  00A3               	movwf	??_lcd_init
 11237  0736  0823               	movf	??_lcd_init,w
 11238  0737  00FB               	movwf	lcd_send_byte@n
 11239  0738  3000               	movlw	0
 11240  0739  318C  2426  3186   	fcall	_lcd_send_byte
 11241  073C                     l3720:
 11242                           
 11243                           ;LCD_i2c.c: 88:     _delay((unsigned long)((5)*(32000000UL/4000.0)));
 11244  073C  3034               	movlw	52
 11245  073D  0020               	movlb	0	; select bank0
 11246  073E  00A3               	movwf	??_lcd_init
 11247  073F  30F1               	movlw	241
 11248  0740                     u3367:
 11249  0740  0B89               	decfsz	9,f
 11250  0741  2F40               	goto	u3367
 11251  0742  0BA3               	decfsz	??_lcd_init,f
 11252  0743  2F40               	goto	u3367
 11253  0744  3200               	nop2
 11254  0745                     l3722:
 11255                           
 11256                           ;LCD_i2c.c: 89:     lcd_send_byte(0, 0x08);
 11257  0745  3008               	movlw	8
 11258  0746  0020               	movlb	0	; select bank0
 11259  0747  00A3               	movwf	??_lcd_init
 11260  0748  0823               	movf	??_lcd_init,w
 11261  0749  00FB               	movwf	lcd_send_byte@n
 11262  074A  3000               	movlw	0
 11263  074B  318C  2426  3186   	fcall	_lcd_send_byte
 11264                           
 11265                           ;LCD_i2c.c: 90:     _delay((unsigned long)((5)*(32000000UL/4000.0)));
 11266  074E  3034               	movlw	52
 11267  074F  0020               	movlb	0	; select bank0
 11268  0750  00A3               	movwf	??_lcd_init
 11269  0751  30F1               	movlw	241
 11270  0752                     u3377:
 11271  0752  0B89               	decfsz	9,f
 11272  0753  2F52               	goto	u3377
 11273  0754  0BA3               	decfsz	??_lcd_init,f
 11274  0755  2F52               	goto	u3377
 11275  0756  3200               	nop2
 11276  0757                     l3724:
 11277                           
 11278                           ;LCD_i2c.c: 91:     lcd_send_byte(0, 0x01);
 11279  0757  01FB               	clrf	lcd_send_byte@n
 11280  0758  0AFB               	incf	lcd_send_byte@n,f
 11281  0759  3000               	movlw	0
 11282  075A  318C  2426  3186   	fcall	_lcd_send_byte
 11283  075D                     l3726:
 11284                           
 11285                           ;LCD_i2c.c: 92:     _delay((unsigned long)((5)*(32000000UL/4000.0)));
 11286  075D  3034               	movlw	52
 11287  075E  0020               	movlb	0	; select bank0
 11288  075F  00A3               	movwf	??_lcd_init
 11289  0760  30F1               	movlw	241
 11290  0761                     u3387:
 11291  0761  0B89               	decfsz	9,f
 11292  0762  2F61               	goto	u3387
 11293  0763  0BA3               	decfsz	??_lcd_init,f
 11294  0764  2F61               	goto	u3387
 11295  0765  3200               	nop2
 11296                           
 11297                           ;LCD_i2c.c: 93:     lcd_send_byte(0, 0x06);
 11298  0766  3006               	movlw	6
 11299  0767  0020               	movlb	0	; select bank0
 11300  0768  00A3               	movwf	??_lcd_init
 11301  0769  0823               	movf	??_lcd_init,w
 11302  076A  00FB               	movwf	lcd_send_byte@n
 11303  076B  3000               	movlw	0
 11304  076C  318C  2426  3186   	fcall	_lcd_send_byte
 11305  076F                     l3728:
 11306                           
 11307                           ;LCD_i2c.c: 94:     _delay((unsigned long)((5)*(32000000UL/4000.0)));
 11308  076F  3034               	movlw	52
 11309  0770  0020               	movlb	0	; select bank0
 11310  0771  00A3               	movwf	??_lcd_init
 11311  0772  30F1               	movlw	241
 11312  0773                     u3397:
 11313  0773  0B89               	decfsz	9,f
 11314  0774  2F73               	goto	u3397
 11315  0775  0BA3               	decfsz	??_lcd_init,f
 11316  0776  2F73               	goto	u3397
 11317  0777  3200               	nop2
 11318  0778                     l3730:
 11319                           
 11320                           ;LCD_i2c.c: 95:     lcd_send_byte(0, 0x0C);
 11321  0778  300C               	movlw	12
 11322  0779  0020               	movlb	0	; select bank0
 11323  077A  00A3               	movwf	??_lcd_init
 11324  077B  0823               	movf	??_lcd_init,w
 11325  077C  00FB               	movwf	lcd_send_byte@n
 11326  077D  3000               	movlw	0
 11327  077E  318C  2426  3186   	fcall	_lcd_send_byte
 11328  0781                     l3732:
 11329                           
 11330                           ;LCD_i2c.c: 115:    g_LcdX = 0;
 11331  0781  0021               	movlb	1	; select bank1
 11332  0782  01B4               	clrf	_g_LcdX^(0+128)
 11333  0783                     l3734:
 11334                           
 11335                           ;LCD_i2c.c: 116:    g_LcdY = 0;
 11336  0783  0020               	movlb	0	; select bank0
 11337  0784  01EF               	clrf	_g_LcdY
 11338  0785                     l318:
 11339  0785  0008               	return
 11340  0786                     __end_of_lcd_init:
 11341                           
 11342                           	psect	text28
 11343  0C26                     __ptext28:	
 11344 ;; *************** function _lcd_send_byte *****************
 11345 ;; Defined at:
 11346 ;;		line 61 in file "LCD_i2c.c"
 11347 ;; Parameters:    Size  Location     Type
 11348 ;;  address         1    wreg     unsigned char 
 11349 ;;  n               1   11[COMMON] unsigned char 
 11350 ;; Auto vars:     Size  Location     Type
 11351 ;;  address         1    2[BANK0 ] unsigned char 
 11352 ;; Return value:  Size  Location     Type
 11353 ;;                  1    wreg      void 
 11354 ;; Registers used:
 11355 ;;		wreg, status,2, status,0, pclath, cstack
 11356 ;; Tracked objects:
 11357 ;;		On entry : 0/0
 11358 ;;		On exit  : 0/0
 11359 ;;		Unchanged: 0/0
 11360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11361 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11362 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11363 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11364 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11365 ;;Total ram usage:        4 bytes
 11366 ;; Hardware stack levels used: 1
 11367 ;; Hardware stack levels required when called: 5
 11368 ;; This function calls:
 11369 ;;		_Send_D7_D4
 11370 ;; This function is called by:
 11371 ;;		_lcd_init
 11372 ;;		_lcd_gotoxy
 11373 ;;		_lcd_puts
 11374 ;;		_lcd_setCustomChar
 11375 ;;		_lcd_showCustomChar
 11376 ;;		_lcd_putc
 11377 ;;		_Clear_LCD
 11378 ;; This function uses a non-reentrant model
 11379 ;;
 11380                           
 11381                           
 11382                           ;psect for function _lcd_send_byte
 11383  0C26                     _lcd_send_byte:
 11384                           
 11385                           ;incstack = 0
 11386                           ; Regs used in _lcd_send_byte: [wreg+status,2+status,0+pclath+cstack]
 11387                           ;lcd_send_byte@address stored from wreg
 11388  0C26  0020               	movlb	0	; select bank0
 11389  0C27  00A2               	movwf	lcd_send_byte@address
 11390  0C28                     l3584:
 11391                           
 11392                           ;LCD_i2c.c: 62:    Send_D7_D4(address,n >> 4);
 11393  0C28  087B               	movf	lcd_send_byte@n,w
 11394  0C29  00A0               	movwf	??_lcd_send_byte
 11395  0C2A  3004               	movlw	4
 11396  0C2B                     u2985:
 11397  0C2B  36A0               	lsrf	??_lcd_send_byte,f
 11398  0C2C  0B89               	decfsz	9,f
 11399  0C2D  2C2B               	goto	u2985
 11400  0C2E  0820               	movf	??_lcd_send_byte,w
 11401  0C2F  00A1               	movwf	??_lcd_send_byte+1
 11402  0C30  0821               	movf	??_lcd_send_byte+1,w
 11403  0C31  00F7               	movwf	Send_D7_D4@nibble
 11404  0C32  0822               	movf	lcd_send_byte@address,w
 11405  0C33  318F  27A0  318C   	fcall	_Send_D7_D4
 11406                           
 11407                           ;LCD_i2c.c: 63:    Send_D7_D4(address,n & 0xf);
 11408  0C36  087B               	movf	lcd_send_byte@n,w
 11409  0C37  390F               	andlw	15
 11410  0C38  0020               	movlb	0	; select bank0
 11411  0C39  00A0               	movwf	??_lcd_send_byte
 11412  0C3A  0820               	movf	??_lcd_send_byte,w
 11413  0C3B  00F7               	movwf	Send_D7_D4@nibble
 11414  0C3C  0822               	movf	lcd_send_byte@address,w
 11415  0C3D  318F  27A0  318C   	fcall	_Send_D7_D4
 11416  0C40                     l313:
 11417  0C40  0008               	return
 11418  0C41                     __end_of_lcd_send_byte:
 11419                           
 11420                           	psect	text29
 11421  0FA0                     __ptext29:	
 11422 ;; *************** function _Send_D7_D4 *****************
 11423 ;; Defined at:
 11424 ;;		line 26 in file "LCD_i2c.c"
 11425 ;; Parameters:    Size  Location     Type
 11426 ;;  address         1    wreg     unsigned char 
 11427 ;;  nibble          1    7[COMMON] unsigned char 
 11428 ;; Auto vars:     Size  Location     Type
 11429 ;;  address         1    9[COMMON] unsigned char 
 11430 ;;  datos           1   10[COMMON] unsigned char 
 11431 ;; Return value:  Size  Location     Type
 11432 ;;                  1    wreg      void 
 11433 ;; Registers used:
 11434 ;;		wreg, status,2, status,0, pclath, cstack
 11435 ;; Tracked objects:
 11436 ;;		On entry : 0/0
 11437 ;;		On exit  : 0/0
 11438 ;;		Unchanged: 0/0
 11439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11440 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11441 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11442 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11443 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11444 ;;Total ram usage:        4 bytes
 11445 ;; Hardware stack levels used: 1
 11446 ;; Hardware stack levels required when called: 4
 11447 ;; This function calls:
 11448 ;;		_Write_PCF
 11449 ;; This function is called by:
 11450 ;;		_lcd_send_byte
 11451 ;;		_lcd_init
 11452 ;; This function uses a non-reentrant model
 11453 ;;
 11454                           
 11455                           
 11456                           ;psect for function _Send_D7_D4
 11457  0FA0                     _Send_D7_D4:
 11458                           
 11459                           ;incstack = 0
 11460                           ; Regs used in _Send_D7_D4: [wreg+status,2+status,0+pclath+cstack]
 11461                           ;Send_D7_D4@address stored from wreg
 11462  0FA0  00F9               	movwf	Send_D7_D4@address
 11463  0FA1                     l3486:
 11464                           
 11465                           ;LCD_i2c.c: 27:    char datos=0;
 11466  0FA1  01FA               	clrf	Send_D7_D4@datos
 11467  0FA2                     l3488:
 11468                           
 11469                           ;LCD_i2c.c: 29:    if((nibble & 1)==1) datos= datos|(1<<4); else datos = datos&~(1<<4);
 11470  0FA2  1C77               	btfss	Send_D7_D4@nibble,0
 11471  0FA3  2FA5               	goto	u2771
 11472  0FA4  2FA6               	goto	u2770
 11473  0FA5                     u2771:
 11474  0FA5  2FAC               	goto	l3492
 11475  0FA6                     u2770:
 11476  0FA6                     l3490:
 11477  0FA6  087A               	movf	Send_D7_D4@datos,w
 11478  0FA7  3810               	iorlw	16
 11479  0FA8  00F8               	movwf	??_Send_D7_D4
 11480  0FA9  0878               	movf	??_Send_D7_D4,w
 11481  0FAA  00FA               	movwf	Send_D7_D4@datos
 11482  0FAB  2FB1               	goto	l3494
 11483  0FAC                     l3492:
 11484  0FAC  087A               	movf	Send_D7_D4@datos,w
 11485  0FAD  39EF               	andlw	239
 11486  0FAE  00F8               	movwf	??_Send_D7_D4
 11487  0FAF  0878               	movf	??_Send_D7_D4,w
 11488  0FB0  00FA               	movwf	Send_D7_D4@datos
 11489  0FB1                     l3494:
 11490                           
 11491                           ;LCD_i2c.c: 30:    if((nibble & 2)==2) datos= datos|(1<<5); else datos = datos&~(1<<5);
 11492  0FB1  1CF7               	btfss	Send_D7_D4@nibble,1
 11493  0FB2  2FB4               	goto	u2781
 11494  0FB3  2FB5               	goto	u2780
 11495  0FB4                     u2781:
 11496  0FB4  2FBB               	goto	l3498
 11497  0FB5                     u2780:
 11498  0FB5                     l3496:
 11499  0FB5  087A               	movf	Send_D7_D4@datos,w
 11500  0FB6  3820               	iorlw	32
 11501  0FB7  00F8               	movwf	??_Send_D7_D4
 11502  0FB8  0878               	movf	??_Send_D7_D4,w
 11503  0FB9  00FA               	movwf	Send_D7_D4@datos
 11504  0FBA  2FC0               	goto	l3500
 11505  0FBB                     l3498:
 11506  0FBB  087A               	movf	Send_D7_D4@datos,w
 11507  0FBC  39DF               	andlw	223
 11508  0FBD  00F8               	movwf	??_Send_D7_D4
 11509  0FBE  0878               	movf	??_Send_D7_D4,w
 11510  0FBF  00FA               	movwf	Send_D7_D4@datos
 11511  0FC0                     l3500:
 11512                           
 11513                           ;LCD_i2c.c: 31:    if((nibble & 4)==4) datos= datos|(1<<6); else datos = datos&~(1<<6);
 11514  0FC0  1D77               	btfss	Send_D7_D4@nibble,2
 11515  0FC1  2FC3               	goto	u2791
 11516  0FC2  2FC4               	goto	u2790
 11517  0FC3                     u2791:
 11518  0FC3  2FCA               	goto	l3504
 11519  0FC4                     u2790:
 11520  0FC4                     l3502:
 11521  0FC4  087A               	movf	Send_D7_D4@datos,w
 11522  0FC5  3840               	iorlw	64
 11523  0FC6  00F8               	movwf	??_Send_D7_D4
 11524  0FC7  0878               	movf	??_Send_D7_D4,w
 11525  0FC8  00FA               	movwf	Send_D7_D4@datos
 11526  0FC9  2FCF               	goto	l3506
 11527  0FCA                     l3504:
 11528  0FCA  087A               	movf	Send_D7_D4@datos,w
 11529  0FCB  39BF               	andlw	191
 11530  0FCC  00F8               	movwf	??_Send_D7_D4
 11531  0FCD  0878               	movf	??_Send_D7_D4,w
 11532  0FCE  00FA               	movwf	Send_D7_D4@datos
 11533  0FCF                     l3506:
 11534                           
 11535                           ;LCD_i2c.c: 32:    if((nibble & 8)==8) datos= datos|(1<<7); else datos = datos&~(1<<7);
 11536  0FCF  1DF7               	btfss	Send_D7_D4@nibble,3
 11537  0FD0  2FD2               	goto	u2801
 11538  0FD1  2FD3               	goto	u2800
 11539  0FD2                     u2801:
 11540  0FD2  2FD9               	goto	l3510
 11541  0FD3                     u2800:
 11542  0FD3                     l3508:
 11543  0FD3  087A               	movf	Send_D7_D4@datos,w
 11544  0FD4  3880               	iorlw	128
 11545  0FD5  00F8               	movwf	??_Send_D7_D4
 11546  0FD6  0878               	movf	??_Send_D7_D4,w
 11547  0FD7  00FA               	movwf	Send_D7_D4@datos
 11548  0FD8  2FDE               	goto	l3512
 11549  0FD9                     l3510:
 11550  0FD9  087A               	movf	Send_D7_D4@datos,w
 11551  0FDA  397F               	andlw	127
 11552  0FDB  00F8               	movwf	??_Send_D7_D4
 11553  0FDC  0878               	movf	??_Send_D7_D4,w
 11554  0FDD  00FA               	movwf	Send_D7_D4@datos
 11555  0FDE                     l3512:
 11556                           
 11557                           ;LCD_i2c.c: 34:    _delay((unsigned long)((60)*(32000000UL/4000000.0)));
 11558  0FDE  30A0               	movlw	160
 11559  0FDF                     u3407:
 11560  0FDF  0B89               	decfsz	9,f
 11561  0FE0  2FDF               	goto	u3407
 11562  0FE1                     l3514:
 11563                           
 11564                           ;LCD_i2c.c: 43:    if(address)
 11565  0FE1  0879               	movf	Send_D7_D4@address,w
 11566  0FE2  1903               	btfsc	3,2
 11567  0FE3  2FE5               	goto	u2811
 11568  0FE4  2FE6               	goto	u2810
 11569  0FE5                     u2811:
 11570  0FE5  2FEC               	goto	l3518
 11571  0FE6                     u2810:
 11572  0FE6                     l3516:
 11573                           
 11574                           ;LCD_i2c.c: 44:       datos= datos |(1<<0);
 11575  0FE6  087A               	movf	Send_D7_D4@datos,w
 11576  0FE7  3801               	iorlw	1
 11577  0FE8  00F8               	movwf	??_Send_D7_D4
 11578  0FE9  0878               	movf	??_Send_D7_D4,w
 11579  0FEA  00FA               	movwf	Send_D7_D4@datos
 11580  0FEB  2FF1               	goto	l3520
 11581  0FEC                     l3518:
 11582                           
 11583                           ;LCD_i2c.c: 46:      datos = datos &~(1<<0);
 11584  0FEC  087A               	movf	Send_D7_D4@datos,w
 11585  0FED  39FE               	andlw	254
 11586  0FEE  00F8               	movwf	??_Send_D7_D4
 11587  0FEF  0878               	movf	??_Send_D7_D4,w
 11588  0FF0  00FA               	movwf	Send_D7_D4@datos
 11589  0FF1                     l3520:
 11590                           
 11591                           ;LCD_i2c.c: 49:    Write_PCF( datos | (1<<2));
 11592  0FF1  087A               	movf	Send_D7_D4@datos,w
 11593  0FF2  3804               	iorlw	4
 11594  0FF3  318B  2313  318F   	fcall	_Write_PCF
 11595  0FF6                     l3522:
 11596                           
 11597                           ;LCD_i2c.c: 51:    _delay((unsigned long)((2)*(32000000UL/4000000.0)));
 11598  0FF6  3005               	movlw	5
 11599  0FF7                     u3417:
 11600  0FF7  0B89               	decfsz	9,f
 11601  0FF8  2FF7               	goto	u3417
 11602  0FF9  0000               	nop
 11603  0FFA                     l3524:
 11604                           
 11605                           ;LCD_i2c.c: 58:    Write_PCF( datos & ~(1<<2));
 11606  0FFA  087A               	movf	Send_D7_D4@datos,w
 11607  0FFB  39FB               	andlw	251
 11608  0FFC  318B  2313  318F   	fcall	_Write_PCF
 11609  0FFF                     l310:
 11610  0FFF  0008               	return
 11611  1000                     __end_of_Send_D7_D4:
 11612                           
 11613                           	psect	text30
 11614  0B13                     __ptext30:	
 11615 ;; *************** function _Write_PCF *****************
 11616 ;; Defined at:
 11617 ;;		line 13 in file "LCD_i2c.c"
 11618 ;; Parameters:    Size  Location     Type
 11619 ;;  dato            1    wreg     unsigned char 
 11620 ;; Auto vars:     Size  Location     Type
 11621 ;;  dato            1    6[COMMON] unsigned char 
 11622 ;; Return value:  Size  Location     Type
 11623 ;;                  1    wreg      void 
 11624 ;; Registers used:
 11625 ;;		wreg, status,2, status,0, pclath, cstack
 11626 ;; Tracked objects:
 11627 ;;		On entry : 0/0
 11628 ;;		On exit  : 0/0
 11629 ;;		Unchanged: 0/0
 11630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11632 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11633 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11634 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11635 ;;Total ram usage:        2 bytes
 11636 ;; Hardware stack levels used: 1
 11637 ;; Hardware stack levels required when called: 3
 11638 ;; This function calls:
 11639 ;;		_I2C1_Write1ByteRegister
 11640 ;; This function is called by:
 11641 ;;		_Send_D7_D4
 11642 ;; This function uses a non-reentrant model
 11643 ;;
 11644                           
 11645                           
 11646                           ;psect for function _Write_PCF
 11647  0B13                     _Write_PCF:
 11648                           
 11649                           ;incstack = 0
 11650                           ; Regs used in _Write_PCF: [wreg+status,2+status,0+pclath+cstack]
 11651                           ;Write_PCF@dato stored from wreg
 11652  0B13  00F6               	movwf	Write_PCF@dato
 11653  0B14                     l3462:
 11654                           
 11655                           ;LCD_i2c.c: 15:         I2C1_Write1ByteRegister( 32|(7),0, (dato | (1<<3)) );
 11656  0B14  01F2               	clrf	I2C1_Write1ByteRegister@reg
 11657  0B15  0876               	movf	Write_PCF@dato,w
 11658  0B16  3808               	iorlw	8
 11659  0B17  00F5               	movwf	??_Write_PCF
 11660  0B18  0875               	movf	??_Write_PCF,w
 11661  0B19  00F3               	movwf	I2C1_Write1ByteRegister@data
 11662  0B1A  3027               	movlw	39
 11663  0B1B  318B  234F  318B   	fcall	_I2C1_Write1ByteRegister
 11664  0B1E                     l297:
 11665  0B1E  0008               	return
 11666  0B1F                     __end_of_Write_PCF:
 11667                           
 11668                           	psect	text31
 11669  0B4F                     __ptext31:	
 11670 ;; *************** function _I2C1_Write1ByteRegister *****************
 11671 ;; Defined at:
 11672 ;;		line 123 in file "I2C.c"
 11673 ;; Parameters:    Size  Location     Type
 11674 ;;  address         1    wreg     unsigned char 
 11675 ;;  reg             1    2[COMMON] unsigned char 
 11676 ;;  data            1    3[COMMON] unsigned char 
 11677 ;; Auto vars:     Size  Location     Type
 11678 ;;  address         1    4[COMMON] unsigned char 
 11679 ;; Return value:  Size  Location     Type
 11680 ;;                  1    wreg      void 
 11681 ;; Registers used:
 11682 ;;		wreg, status,2, status,0, pclath, cstack
 11683 ;; Tracked objects:
 11684 ;;		On entry : 0/0
 11685 ;;		On exit  : 0/0
 11686 ;;		Unchanged: 0/0
 11687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11688 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11689 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11691 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11692 ;;Total ram usage:        3 bytes
 11693 ;; Hardware stack levels used: 1
 11694 ;; Hardware stack levels required when called: 2
 11695 ;; This function calls:
 11696 ;;		_i2c_start
 11697 ;;		_i2c_stop
 11698 ;;		_i2c_write
 11699 ;; This function is called by:
 11700 ;;		_Write_PCF
 11701 ;;		_lcd_init
 11702 ;; This function uses a non-reentrant model
 11703 ;;
 11704                           
 11705                           
 11706                           ;psect for function _I2C1_Write1ByteRegister
 11707  0B4F                     _I2C1_Write1ByteRegister:
 11708                           
 11709                           ;incstack = 0
 11710                           ; Regs used in _I2C1_Write1ByteRegister: [wreg+status,2+status,0+pclath+cstack]
 11711                           ;I2C1_Write1ByteRegister@address stored from wreg
 11712  0B4F  00F4               	movwf	I2C1_Write1ByteRegister@address
 11713  0B50                     l3444:
 11714                           
 11715                           ;I2C.c: 124:     i2c_start();
 11716  0B50  318A  22C9  318B   	fcall	_i2c_start
 11717  0B53                     l3446:
 11718                           
 11719                           ;I2C.c: 125:     i2c_write(address<<1);
 11720  0B53  3574               	lslf	I2C1_Write1ByteRegister@address,w
 11721  0B54  318B  231F  318B   	fcall	_i2c_write
 11722  0B57                     l3448:
 11723                           
 11724                           ;I2C.c: 126:     i2c_write(reg);
 11725  0B57  0872               	movf	I2C1_Write1ByteRegister@reg,w
 11726  0B58  318B  231F  318B   	fcall	_i2c_write
 11727  0B5B                     l3450:
 11728                           
 11729                           ;I2C.c: 127:     i2c_write(data);
 11730  0B5B  0873               	movf	I2C1_Write1ByteRegister@data,w
 11731  0B5C  318B  231F  318B   	fcall	_i2c_write
 11732  0B5F                     l3452:
 11733                           
 11734                           ;I2C.c: 128:     i2c_stop();
 11735  0B5F  318A  22D0  318B   	fcall	_i2c_stop
 11736  0B62                     l271:
 11737  0B62  0008               	return
 11738  0B63                     __end_of_I2C1_Write1ByteRegister:
 11739                           
 11740                           	psect	text32
 11741  0ADF                     __ptext32:	
 11742 ;; *************** function _enable_interrupt *****************
 11743 ;; Defined at:
 11744 ;;		line 3 in file "interrupt.c"
 11745 ;; Parameters:    Size  Location     Type
 11746 ;;		None
 11747 ;; Auto vars:     Size  Location     Type
 11748 ;;		None
 11749 ;; Return value:  Size  Location     Type
 11750 ;;                  1    wreg      void 
 11751 ;; Registers used:
 11752 ;;		wreg
 11753 ;; Tracked objects:
 11754 ;;		On entry : 0/0
 11755 ;;		On exit  : 0/0
 11756 ;;		Unchanged: 0/0
 11757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11762 ;;Total ram usage:        0 bytes
 11763 ;; Hardware stack levels used: 1
 11764 ;; Hardware stack levels required when called: 1
 11765 ;; This function calls:
 11766 ;;		Nothing
 11767 ;; This function is called by:
 11768 ;;		_main
 11769 ;; This function uses a non-reentrant model
 11770 ;;
 11771                           
 11772                           
 11773                           ;psect for function _enable_interrupt
 11774  0ADF                     _enable_interrupt:
 11775  0ADF                     l2900:	
 11776                           ;incstack = 0
 11777                           ; Regs used in _enable_interrupt: [wreg]
 11778                           
 11779                           
 11780                           ;interrupt.c: 4:     INTCON = 0b10000000;
 11781  0ADF  3080               	movlw	128
 11782  0AE0  008B               	movwf	11	;volatile
 11783                           
 11784                           ;interrupt.c: 5:     PIE0 = 0b00000001;
 11785  0AE1  3001               	movlw	1
 11786  0AE2  002E               	movlb	14	; select bank14
 11787  0AE3  0096               	movwf	22	;volatile
 11788                           
 11789                           ;interrupt.c: 7:     INTPPS = 0x05;
 11790  0AE4  3005               	movlw	5
 11791  0AE5  003D               	movlb	29	; select bank29
 11792  0AE6  0090               	movwf	16	;volatile
 11793  0AE7                     l476:
 11794  0AE7  0008               	return
 11795  0AE8                     __end_of_enable_interrupt:
 11796                           
 11797                           	psect	text33
 11798  0F43                     __ptext33:	
 11799 ;; *************** function _EMC1001_read *****************
 11800 ;; Defined at:
 11801 ;;		line 12 in file "EMC1001.c"
 11802 ;; Parameters:    Size  Location     Type
 11803 ;;  TH              1    wreg     PTR char 
 11804 ;;		 -> high_byte(1), 
 11805 ;;  TL              1    5[COMMON] PTR unsigned char 
 11806 ;;		 -> low_byte(1), 
 11807 ;; Auto vars:     Size  Location     Type
 11808 ;;  TH              1    8[COMMON] PTR char 
 11809 ;;		 -> high_byte(1), 
 11810 ;; Return value:  Size  Location     Type
 11811 ;;                  1    wreg      void 
 11812 ;; Registers used:
 11813 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11814 ;; Tracked objects:
 11815 ;;		On entry : 0/0
 11816 ;;		On exit  : 0/0
 11817 ;;		Unchanged: 0/0
 11818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11819 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11820 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11821 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11822 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11823 ;;Total ram usage:        4 bytes
 11824 ;; Hardware stack levels used: 1
 11825 ;; Hardware stack levels required when called: 3
 11826 ;; This function calls:
 11827 ;;		___bmul
 11828 ;;		_i2c_read
 11829 ;;		_i2c_restart
 11830 ;;		_i2c_start
 11831 ;;		_i2c_stop
 11832 ;;		_i2c_write
 11833 ;; This function is called by:
 11834 ;;		_main
 11835 ;; This function uses a non-reentrant model
 11836 ;;
 11837                           
 11838                           
 11839                           ;psect for function _EMC1001_read
 11840  0F43                     _EMC1001_read:
 11841                           
 11842                           ;incstack = 0
 11843                           ; Regs used in _EMC1001_read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11844                           ;EMC1001_read@TH stored from wreg
 11845  0F43  00F8               	movwf	EMC1001_read@TH
 11846  0F44                     l3798:
 11847                           
 11848                           ;EMC1001.c: 13:     i2c_start();
 11849  0F44  318A  22C9  318F   	fcall	_i2c_start
 11850  0F47                     l3800:
 11851                           
 11852                           ;EMC1001.c: 14:     i2c_write(0b01110000);
 11853  0F47  3070               	movlw	112
 11854  0F48  318B  231F  318F   	fcall	_i2c_write
 11855  0F4B                     l3802:
 11856                           
 11857                           ;EMC1001.c: 15:     i2c_write(0);
 11858  0F4B  3000               	movlw	0
 11859  0F4C  318B  231F  318F   	fcall	_i2c_write
 11860                           
 11861                           ;EMC1001.c: 16:     i2c_restart();
 11862  0F4F  318A  22C2  318F   	fcall	_i2c_restart
 11863  0F52                     l3804:
 11864                           
 11865                           ;EMC1001.c: 17:     i2c_write(0b01110000|0x01);
 11866  0F52  3071               	movlw	113
 11867  0F53  318B  231F  318F   	fcall	_i2c_write
 11868  0F56                     l3806:
 11869                           
 11870                           ;EMC1001.c: 18:     *TH = i2c_read(1);
 11871  0F56  3001               	movlw	1
 11872  0F57  318B  238C  318F   	fcall	_i2c_read
 11873  0F5A  00F6               	movwf	??_EMC1001_read
 11874  0F5B  0878               	movf	EMC1001_read@TH,w
 11875  0F5C  0086               	movwf	6
 11876  0F5D  0187               	clrf	7
 11877  0F5E  0876               	movf	??_EMC1001_read,w
 11878  0F5F  0081               	movwf	1
 11879  0F60                     l3808:
 11880                           
 11881                           ;EMC1001.c: 20:     i2c_stop();
 11882  0F60  318A  22D0  318F   	fcall	_i2c_stop
 11883  0F63                     l3810:
 11884                           
 11885                           ;EMC1001.c: 22:     _delay((unsigned long)((10)*(32000000UL/4000000.0)));
 11886  0F63  301A               	movlw	26
 11887  0F64                     u3427:
 11888  0F64  0B89               	decfsz	9,f
 11889  0F65  2F64               	goto	u3427
 11890  0F66  3200               	nop2
 11891  0F67                     l3812:
 11892                           
 11893                           ;EMC1001.c: 24:     i2c_start();
 11894  0F67  318A  22C9  318F   	fcall	_i2c_start
 11895  0F6A                     l3814:
 11896                           
 11897                           ;EMC1001.c: 25:     i2c_write(0b01110000);
 11898  0F6A  3070               	movlw	112
 11899  0F6B  318B  231F  318F   	fcall	_i2c_write
 11900  0F6E                     l3816:
 11901                           
 11902                           ;EMC1001.c: 26:     i2c_write(2);
 11903  0F6E  3002               	movlw	2
 11904  0F6F  318B  231F  318F   	fcall	_i2c_write
 11905  0F72                     l3818:
 11906                           
 11907                           ;EMC1001.c: 27:     i2c_restart();
 11908  0F72  318A  22C2  318F   	fcall	_i2c_restart
 11909  0F75                     l3820:
 11910                           
 11911                           ;EMC1001.c: 28:     i2c_write(0b01110000|0x01);
 11912  0F75  3071               	movlw	113
 11913  0F76  318B  231F  318F   	fcall	_i2c_write
 11914  0F79                     l3822:
 11915                           
 11916                           ;EMC1001.c: 29:     *TL = i2c_read(1);
 11917  0F79  3001               	movlw	1
 11918  0F7A  318B  238C  318F   	fcall	_i2c_read
 11919  0F7D  00F6               	movwf	??_EMC1001_read
 11920  0F7E  0875               	movf	EMC1001_read@TL,w
 11921  0F7F  0086               	movwf	6
 11922  0F80  0187               	clrf	7
 11923  0F81  0876               	movf	??_EMC1001_read,w
 11924  0F82  0081               	movwf	1
 11925  0F83                     l3824:
 11926                           
 11927                           ;EMC1001.c: 31:     i2c_stop();
 11928  0F83  318A  22D0  318F   	fcall	_i2c_stop
 11929  0F86                     l3826:
 11930                           
 11931                           ;EMC1001.c: 32:     *TL>>=6;
 11932  0F86  0875               	movf	EMC1001_read@TL,w
 11933  0F87  0086               	movwf	6
 11934  0F88  0187               	clrf	7
 11935  0F89  0E81               	swapf	1,f
 11936  0F8A  0C81               	rrf	1,f
 11937  0F8B  0C81               	rrf	1,f
 11938  0F8C  3003               	movlw	3
 11939  0F8D  0581               	andwf	1,f
 11940  0F8E                     l3828:
 11941                           
 11942                           ;EMC1001.c: 33:     *TL*=25;
 11943  0F8E  0875               	movf	EMC1001_read@TL,w
 11944  0F8F  0086               	movwf	6
 11945  0F90  0187               	clrf	7
 11946  0F91  0801               	movf	1,w
 11947  0F92  00F6               	movwf	??_EMC1001_read
 11948  0F93  0876               	movf	??_EMC1001_read,w
 11949  0F94  00F1               	movwf	___bmul@multiplicand
 11950  0F95  3019               	movlw	25
 11951  0F96  318B  2377  318F   	fcall	___bmul
 11952  0F99  00F7               	movwf	??_EMC1001_read+1
 11953  0F9A  0875               	movf	EMC1001_read@TL,w
 11954  0F9B  0086               	movwf	6
 11955  0F9C  0187               	clrf	7
 11956  0F9D  0877               	movf	??_EMC1001_read+1,w
 11957  0F9E  0081               	movwf	1
 11958  0F9F                     l373:
 11959  0F9F  0008               	return
 11960  0FA0                     __end_of_EMC1001_read:
 11961                           
 11962                           	psect	text34
 11963  0B1F                     __ptext34:	
 11964 ;; *************** function _i2c_write *****************
 11965 ;; Defined at:
 11966 ;;		line 77 in file "I2C.c"
 11967 ;; Parameters:    Size  Location     Type
 11968 ;;  I2C_data        1    wreg     unsigned char 
 11969 ;; Auto vars:     Size  Location     Type
 11970 ;;  I2C_data        1    1[COMMON] unsigned char 
 11971 ;; Return value:  Size  Location     Type
 11972 ;;                  1    wreg      _Bool 
 11973 ;; Registers used:
 11974 ;;		wreg
 11975 ;; Tracked objects:
 11976 ;;		On entry : 0/0
 11977 ;;		On exit  : 0/0
 11978 ;;		Unchanged: 0/0
 11979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11981 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11983 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11984 ;;Total ram usage:        1 bytes
 11985 ;; Hardware stack levels used: 1
 11986 ;; Hardware stack levels required when called: 1
 11987 ;; This function calls:
 11988 ;;		Nothing
 11989 ;; This function is called by:
 11990 ;;		_I2C1_Write1ByteRegister
 11991 ;;		_EMC1001_read
 11992 ;;		_I2C1_Read1ByteRegister
 11993 ;;		_I2C1_Read2ByteRegister
 11994 ;;		_I2C1_ReadDataBlock
 11995 ;; This function uses a non-reentrant model
 11996 ;;
 11997                           
 11998                           
 11999                           ;psect for function _i2c_write
 12000  0B1F                     _i2c_write:
 12001                           
 12002                           ;incstack = 0
 12003                           ; Regs used in _i2c_write: [wreg]
 12004                           ;i2c_write@I2C_data stored from wreg
 12005  0B1F  00F1               	movwf	i2c_write@I2C_data
 12006  0B20                     l3436:
 12007                           
 12008                           ;I2C.c: 77: _Bool i2c_write(uint8_t I2C_data);I2C.c: 78: {;I2C.c: 79:     PIR3bits.SSP1I
      +                          F = 0;
 12009  0B20  002E               	movlb	14	; select bank14
 12010  0B21  100F               	bcf	15,0	;volatile
 12011  0B22                     l3438:
 12012                           
 12013                           ;I2C.c: 80:     SSP1BUF = I2C_data;
 12014  0B22  0871               	movf	i2c_write@I2C_data,w
 12015  0B23  0023               	movlb	3	; select bank3
 12016  0B24  008C               	movwf	12	;volatile
 12017  0B25                     l257:	
 12018                           ;I2C.c: 81:     while(PIR3bits.SSP1IF == 0);
 12019                           
 12020  0B25  002E               	movlb	14	; select bank14
 12021  0B26  1C0F               	btfss	15,0	;volatile
 12022  0B27  2B29               	goto	u2711
 12023  0B28  2B2A               	goto	u2710
 12024  0B29                     u2711:
 12025  0B29  2B25               	goto	l257
 12026  0B2A                     u2710:
 12027  0B2A                     l259:
 12028                           
 12029                           ;I2C.c: 82:     if(SSP1CON2bits.ACKSTAT==0)
 12030  0B2A  0023               	movlb	3	; select bank3
 12031  0B2B  0811               	movf	17,w	;volatile
 12032  0B2C                     l261:
 12033  0B2C  0008               	return
 12034  0B2D                     __end_of_i2c_write:
 12035                           
 12036                           	psect	text35
 12037  0AD0                     __ptext35:	
 12038 ;; *************** function _i2c_stop *****************
 12039 ;; Defined at:
 12040 ;;		line 35 in file "I2C.c"
 12041 ;; Parameters:    Size  Location     Type
 12042 ;;		None
 12043 ;; Auto vars:     Size  Location     Type
 12044 ;;		None
 12045 ;; Return value:  Size  Location     Type
 12046 ;;                  1    wreg      void 
 12047 ;; Registers used:
 12048 ;;		None
 12049 ;; Tracked objects:
 12050 ;;		On entry : 0/0
 12051 ;;		On exit  : 0/0
 12052 ;;		Unchanged: 0/0
 12053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12058 ;;Total ram usage:        0 bytes
 12059 ;; Hardware stack levels used: 1
 12060 ;; Hardware stack levels required when called: 1
 12061 ;; This function calls:
 12062 ;;		Nothing
 12063 ;; This function is called by:
 12064 ;;		_I2C1_Write1ByteRegister
 12065 ;;		_EMC1001_read
 12066 ;;		_I2C1_Read1ByteRegister
 12067 ;;		_I2C1_Read2ByteRegister
 12068 ;;		_I2C1_ReadDataBlock
 12069 ;; This function uses a non-reentrant model
 12070 ;;
 12071                           
 12072                           
 12073                           ;psect for function _i2c_stop
 12074  0AD0                     _i2c_stop:
 12075  0AD0                     l3434:	
 12076                           ;incstack = 0
 12077                           ; Regs used in _i2c_stop: []
 12078                           
 12079                           
 12080                           ;I2C.c: 37:     SSP1CON2bits.PEN = 1;
 12081  0AD0  0023               	movlb	3	; select bank3
 12082  0AD1  1511               	bsf	17,2	;volatile
 12083  0AD2                     l231:	
 12084                           ;I2C.c: 38:     while(SSP1CON2bits.PEN == 1);
 12085                           
 12086  0AD2  1911               	btfsc	17,2	;volatile
 12087  0AD3  2AD5               	goto	u2701
 12088  0AD4  2AD6               	goto	u2700
 12089  0AD5                     u2701:
 12090  0AD5  2AD2               	goto	l231
 12091  0AD6                     u2700:
 12092  0AD6                     l234:
 12093  0AD6  0008               	return
 12094  0AD7                     __end_of_i2c_stop:
 12095                           
 12096                           	psect	text36
 12097  0AC9                     __ptext36:	
 12098 ;; *************** function _i2c_start *****************
 12099 ;; Defined at:
 12100 ;;		line 23 in file "I2C.c"
 12101 ;; Parameters:    Size  Location     Type
 12102 ;;		None
 12103 ;; Auto vars:     Size  Location     Type
 12104 ;;		None
 12105 ;; Return value:  Size  Location     Type
 12106 ;;                  1    wreg      void 
 12107 ;; Registers used:
 12108 ;;		None
 12109 ;; Tracked objects:
 12110 ;;		On entry : 0/0
 12111 ;;		On exit  : 0/0
 12112 ;;		Unchanged: 0/0
 12113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12118 ;;Total ram usage:        0 bytes
 12119 ;; Hardware stack levels used: 1
 12120 ;; Hardware stack levels required when called: 1
 12121 ;; This function calls:
 12122 ;;		Nothing
 12123 ;; This function is called by:
 12124 ;;		_I2C1_Write1ByteRegister
 12125 ;;		_EMC1001_read
 12126 ;;		_I2C1_Read1ByteRegister
 12127 ;;		_I2C1_Read2ByteRegister
 12128 ;;		_I2C1_ReadDataBlock
 12129 ;; This function uses a non-reentrant model
 12130 ;;
 12131                           
 12132                           
 12133                           ;psect for function _i2c_start
 12134  0AC9                     _i2c_start:
 12135  0AC9                     l3432:	
 12136                           ;incstack = 0
 12137                           ; Regs used in _i2c_start: []
 12138                           
 12139                           
 12140                           ;I2C.c: 25:     SSP1CON2bits.SEN = 1;
 12141  0AC9  0023               	movlb	3	; select bank3
 12142  0ACA  1411               	bsf	17,0	;volatile
 12143  0ACB                     l219:	
 12144                           ;I2C.c: 26:     while(SSP1CON2bits.SEN == 1);
 12145                           
 12146  0ACB  1811               	btfsc	17,0	;volatile
 12147  0ACC  2ACE               	goto	u2691
 12148  0ACD  2ACF               	goto	u2690
 12149  0ACE                     u2691:
 12150  0ACE  2ACB               	goto	l219
 12151  0ACF                     u2690:
 12152  0ACF                     l222:
 12153  0ACF  0008               	return
 12154  0AD0                     __end_of_i2c_start:
 12155                           
 12156                           	psect	text37
 12157  0AC2                     __ptext37:	
 12158 ;; *************** function _i2c_restart *****************
 12159 ;; Defined at:
 12160 ;;		line 29 in file "I2C.c"
 12161 ;; Parameters:    Size  Location     Type
 12162 ;;		None
 12163 ;; Auto vars:     Size  Location     Type
 12164 ;;		None
 12165 ;; Return value:  Size  Location     Type
 12166 ;;                  1    wreg      void 
 12167 ;; Registers used:
 12168 ;;		None
 12169 ;; Tracked objects:
 12170 ;;		On entry : 0/0
 12171 ;;		On exit  : 0/0
 12172 ;;		Unchanged: 0/0
 12173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12178 ;;Total ram usage:        0 bytes
 12179 ;; Hardware stack levels used: 1
 12180 ;; Hardware stack levels required when called: 1
 12181 ;; This function calls:
 12182 ;;		Nothing
 12183 ;; This function is called by:
 12184 ;;		_EMC1001_read
 12185 ;;		_I2C1_Read1ByteRegister
 12186 ;;		_I2C1_Read2ByteRegister
 12187 ;;		_I2C1_ReadDataBlock
 12188 ;; This function uses a non-reentrant model
 12189 ;;
 12190                           
 12191                           
 12192                           ;psect for function _i2c_restart
 12193  0AC2                     _i2c_restart:
 12194  0AC2                     l2780:	
 12195                           ;incstack = 0
 12196                           ; Regs used in _i2c_restart: []
 12197                           
 12198                           
 12199                           ;I2C.c: 31:     SSP1CON2bits.RSEN = 1;
 12200  0AC2  0023               	movlb	3	; select bank3
 12201  0AC3  1491               	bsf	17,1	;volatile
 12202  0AC4                     l225:	
 12203                           ;I2C.c: 32:     while(SSP1CON2bits.RSEN == 1);
 12204                           
 12205  0AC4  1891               	btfsc	17,1	;volatile
 12206  0AC5  2AC7               	goto	u2181
 12207  0AC6  2AC8               	goto	u2180
 12208  0AC7                     u2181:
 12209  0AC7  2AC4               	goto	l225
 12210  0AC8                     u2180:
 12211  0AC8                     l228:
 12212  0AC8  0008               	return
 12213  0AC9                     __end_of_i2c_restart:
 12214                           
 12215                           	psect	text38
 12216  0B8C                     __ptext38:	
 12217 ;; *************** function _i2c_read *****************
 12218 ;; Defined at:
 12219 ;;		line 48 in file "I2C.c"
 12220 ;; Parameters:    Size  Location     Type
 12221 ;;  ack             1    wreg     _Bool 
 12222 ;; Auto vars:     Size  Location     Type
 12223 ;;  ack             1    1[COMMON] _Bool 
 12224 ;; Return value:  Size  Location     Type
 12225 ;;                  1    wreg      unsigned char 
 12226 ;; Registers used:
 12227 ;;		wreg, status,2, status,0, pclath, cstack
 12228 ;; Tracked objects:
 12229 ;;		On entry : 0/0
 12230 ;;		On exit  : 0/0
 12231 ;;		Unchanged: 0/0
 12232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12234 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12236 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12237 ;;Total ram usage:        1 bytes
 12238 ;; Hardware stack levels used: 1
 12239 ;; Hardware stack levels required when called: 2
 12240 ;; This function calls:
 12241 ;;		_i2c_ack
 12242 ;;		_i2c_nack
 12243 ;; This function is called by:
 12244 ;;		_EMC1001_read
 12245 ;;		_I2C1_Read1ByteRegister
 12246 ;;		_I2C1_Read2ByteRegister
 12247 ;;		_I2C1_ReadDataBlock
 12248 ;; This function uses a non-reentrant model
 12249 ;;
 12250                           
 12251                           
 12252                           ;psect for function _i2c_read
 12253  0B8C                     _i2c_read:
 12254                           
 12255                           ;incstack = 0
 12256                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
 12257                           ;i2c_read@ack stored from wreg
 12258  0B8C  00F1               	movwf	i2c_read@ack
 12259  0B8D                     l2782:
 12260                           
 12261                           ;I2C.c: 48: uint8_t i2c_read(_Bool ack);I2C.c: 49: {;I2C.c: 50:     PIR3bits.SSP1IF = 0;
 12262  0B8D  002E               	movlb	14	; select bank14
 12263  0B8E  100F               	bcf	15,0	;volatile
 12264                           
 12265                           ;I2C.c: 51:     SSP1CON2bits.RCEN = 1;
 12266  0B8F  0023               	movlb	3	; select bank3
 12267  0B90  1591               	bsf	17,3	;volatile
 12268  0B91                     l237:	
 12269                           ;I2C.c: 52:     while(PIR3bits.SSP1IF == 0);
 12270                           
 12271  0B91  002E               	movlb	14	; select bank14
 12272  0B92  1C0F               	btfss	15,0	;volatile
 12273  0B93  2B95               	goto	u2191
 12274  0B94  2B96               	goto	u2190
 12275  0B95                     u2191:
 12276  0B95  2B91               	goto	l237
 12277  0B96                     u2190:
 12278  0B96                     l2784:
 12279                           
 12280                           ;I2C.c: 53:     if(ack){
 12281  0B96  0871               	movf	i2c_read@ack,w
 12282  0B97  1903               	btfsc	3,2
 12283  0B98  2B9A               	goto	u2201
 12284  0B99  2B9B               	goto	u2200
 12285  0B9A                     u2201:
 12286  0B9A  2B9F               	goto	l2788
 12287  0B9B                     u2200:
 12288  0B9B                     l2786:
 12289                           
 12290                           ;I2C.c: 54:         i2c_ack();
 12291  0B9B  318A  22F2  318B   	fcall	_i2c_ack
 12292                           
 12293                           ;I2C.c: 55:     }else{
 12294  0B9E  2BA2               	goto	l2790
 12295  0B9F                     l2788:
 12296                           
 12297                           ;I2C.c: 56:         i2c_nack();
 12298  0B9F  318A  22FD  318B   	fcall	_i2c_nack
 12299  0BA2                     l2790:
 12300                           
 12301                           ;I2C.c: 58:     return SSP1BUF;
 12302  0BA2  0023               	movlb	3	; select bank3
 12303  0BA3  080C               	movf	12,w	;volatile
 12304  0BA4                     l242:
 12305  0BA4  0008               	return
 12306  0BA5                     __end_of_i2c_read:
 12307                           
 12308                           	psect	text39
 12309  0AFD                     __ptext39:	
 12310 ;; *************** function _i2c_nack *****************
 12311 ;; Defined at:
 12312 ;;		line 69 in file "I2C.c"
 12313 ;; Parameters:    Size  Location     Type
 12314 ;;		None
 12315 ;; Auto vars:     Size  Location     Type
 12316 ;;		None
 12317 ;; Return value:  Size  Location     Type
 12318 ;;                  1    wreg      void 
 12319 ;; Registers used:
 12320 ;;		None
 12321 ;; Tracked objects:
 12322 ;;		On entry : 0/0
 12323 ;;		On exit  : 0/0
 12324 ;;		Unchanged: 0/0
 12325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12330 ;;Total ram usage:        0 bytes
 12331 ;; Hardware stack levels used: 1
 12332 ;; Hardware stack levels required when called: 1
 12333 ;; This function calls:
 12334 ;;		Nothing
 12335 ;; This function is called by:
 12336 ;;		_i2c_read
 12337 ;; This function uses a non-reentrant model
 12338 ;;
 12339                           
 12340                           
 12341                           ;psect for function _i2c_nack
 12342  0AFD                     _i2c_nack:
 12343  0AFD                     l2654:	
 12344                           ;incstack = 0
 12345                           ; Regs used in _i2c_nack: []
 12346                           
 12347                           
 12348                           ;I2C.c: 71:     PIR3bits.SSP1IF = 0;
 12349  0AFD  002E               	movlb	14	; select bank14
 12350  0AFE  100F               	bcf	15,0	;volatile
 12351                           
 12352                           ;I2C.c: 72:     SSP1CON2bits.ACKDT = 1;
 12353  0AFF  0023               	movlb	3	; select bank3
 12354  0B00  1691               	bsf	17,5	;volatile
 12355                           
 12356                           ;I2C.c: 73:     SSP1CON2bits.ACKEN = 1;
 12357  0B01  1611               	bsf	17,4	;volatile
 12358  0B02                     l251:	
 12359                           ;I2C.c: 74:     while(PIR3bits.SSP1IF == 0);
 12360                           
 12361  0B02  002E               	movlb	14	; select bank14
 12362  0B03  1C0F               	btfss	15,0	;volatile
 12363  0B04  2B06               	goto	u2021
 12364  0B05  2B07               	goto	u2020
 12365  0B06                     u2021:
 12366  0B06  2B02               	goto	l251
 12367  0B07                     u2020:
 12368  0B07                     l254:
 12369  0B07  0008               	return
 12370  0B08                     __end_of_i2c_nack:
 12371                           
 12372                           	psect	text40
 12373  0AF2                     __ptext40:	
 12374 ;; *************** function _i2c_ack *****************
 12375 ;; Defined at:
 12376 ;;		line 61 in file "I2C.c"
 12377 ;; Parameters:    Size  Location     Type
 12378 ;;		None
 12379 ;; Auto vars:     Size  Location     Type
 12380 ;;		None
 12381 ;; Return value:  Size  Location     Type
 12382 ;;                  1    wreg      void 
 12383 ;; Registers used:
 12384 ;;		None
 12385 ;; Tracked objects:
 12386 ;;		On entry : 0/0
 12387 ;;		On exit  : 0/0
 12388 ;;		Unchanged: 0/0
 12389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12394 ;;Total ram usage:        0 bytes
 12395 ;; Hardware stack levels used: 1
 12396 ;; Hardware stack levels required when called: 1
 12397 ;; This function calls:
 12398 ;;		Nothing
 12399 ;; This function is called by:
 12400 ;;		_i2c_read
 12401 ;; This function uses a non-reentrant model
 12402 ;;
 12403                           
 12404                           
 12405                           ;psect for function _i2c_ack
 12406  0AF2                     _i2c_ack:
 12407  0AF2                     l2652:	
 12408                           ;incstack = 0
 12409                           ; Regs used in _i2c_ack: []
 12410                           
 12411                           
 12412                           ;I2C.c: 63:     PIR3bits.SSP1IF = 0;
 12413  0AF2  002E               	movlb	14	; select bank14
 12414  0AF3  100F               	bcf	15,0	;volatile
 12415                           
 12416                           ;I2C.c: 64:     SSP1CON2bits.ACKDT = 0;
 12417  0AF4  0023               	movlb	3	; select bank3
 12418  0AF5  1291               	bcf	17,5	;volatile
 12419                           
 12420                           ;I2C.c: 65:     SSP1CON2bits.ACKEN = 1;
 12421  0AF6  1611               	bsf	17,4	;volatile
 12422  0AF7                     l245:	
 12423                           ;I2C.c: 66:     while(PIR3bits.SSP1IF == 0);
 12424                           
 12425  0AF7  002E               	movlb	14	; select bank14
 12426  0AF8  1C0F               	btfss	15,0	;volatile
 12427  0AF9  2AFB               	goto	u2011
 12428  0AFA  2AFC               	goto	u2010
 12429  0AFB                     u2011:
 12430  0AFB  2AF7               	goto	l245
 12431  0AFC                     u2010:
 12432  0AFC                     l248:
 12433  0AFC  0008               	return
 12434  0AFD                     __end_of_i2c_ack:
 12435                           
 12436                           	psect	text41
 12437  0B77                     __ptext41:	
 12438 ;; *************** function ___bmul *****************
 12439 ;; Defined at:
 12440 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul8.c"
 12441 ;; Parameters:    Size  Location     Type
 12442 ;;  multiplier      1    wreg     unsigned char 
 12443 ;;  multiplicand    1    1[COMMON] unsigned char 
 12444 ;; Auto vars:     Size  Location     Type
 12445 ;;  multiplier      1    4[COMMON] unsigned char 
 12446 ;;  product         1    3[COMMON] unsigned char 
 12447 ;; Return value:  Size  Location     Type
 12448 ;;                  1    wreg      unsigned char 
 12449 ;; Registers used:
 12450 ;;		wreg, status,2, status,0
 12451 ;; Tracked objects:
 12452 ;;		On entry : 0/0
 12453 ;;		On exit  : 0/0
 12454 ;;		Unchanged: 0/0
 12455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12456 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12457 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12458 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12459 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12460 ;;Total ram usage:        4 bytes
 12461 ;; Hardware stack levels used: 1
 12462 ;; Hardware stack levels required when called: 1
 12463 ;; This function calls:
 12464 ;;		Nothing
 12465 ;; This function is called by:
 12466 ;;		_EMC1001_read
 12467 ;; This function uses a non-reentrant model
 12468 ;;
 12469                           
 12470                           
 12471                           ;psect for function ___bmul
 12472  0B77                     ___bmul:
 12473                           
 12474                           ;incstack = 0
 12475                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 12476                           ;___bmul@multiplier stored from wreg
 12477  0B77  00F4               	movwf	___bmul@multiplier
 12478  0B78                     l2850:
 12479  0B78  01F3               	clrf	___bmul@product
 12480  0B79                     l2852:
 12481  0B79  1C74               	btfss	___bmul@multiplier,0
 12482  0B7A  2B7C               	goto	u2221
 12483  0B7B  2B7D               	goto	u2220
 12484  0B7C                     u2221:
 12485  0B7C  2B81               	goto	l2856
 12486  0B7D                     u2220:
 12487  0B7D                     l2854:
 12488  0B7D  0871               	movf	___bmul@multiplicand,w
 12489  0B7E  00F2               	movwf	??___bmul
 12490  0B7F  0872               	movf	??___bmul,w
 12491  0B80  07F3               	addwf	___bmul@product,f
 12492  0B81                     l2856:
 12493  0B81  1003               	clrc
 12494  0B82  0DF1               	rlf	___bmul@multiplicand,f
 12495  0B83                     l2858:
 12496  0B83  1003               	clrc
 12497  0B84  0CF4               	rrf	___bmul@multiplier,f
 12498  0B85  0874               	movf	___bmul@multiplier,w
 12499  0B86  1D03               	btfss	3,2
 12500  0B87  2B89               	goto	u2231
 12501  0B88  2B8A               	goto	u2230
 12502  0B89                     u2231:
 12503  0B89  2B79               	goto	l2852
 12504  0B8A                     u2230:
 12505  0B8A                     l2860:
 12506  0B8A  0873               	movf	___bmul@product,w
 12507  0B8B                     l717:
 12508  0B8B  0008               	return
 12509  0B8C                     __end_of___bmul:
 12510                           
 12511                           	psect	text42
 12512  0BBE                     __ptext42:	
 12513 ;; *************** function _EEPROM_Write_int16 *****************
 12514 ;; Defined at:
 12515 ;;		line 47 in file "EEPROM_lib.c"
 12516 ;; Parameters:    Size  Location     Type
 12517 ;;  dir             1    wreg     unsigned char 
 12518 ;;  data            2    4[COMMON] short 
 12519 ;; Auto vars:     Size  Location     Type
 12520 ;;  dir             1    7[COMMON] unsigned char 
 12521 ;;  i               1    8[COMMON] unsigned char 
 12522 ;; Return value:  Size  Location     Type
 12523 ;;                  1    wreg      void 
 12524 ;; Registers used:
 12525 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12526 ;; Tracked objects:
 12527 ;;		On entry : 0/0
 12528 ;;		On exit  : 0/0
 12529 ;;		Unchanged: 0/0
 12530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12531 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12532 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12533 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12534 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12535 ;;Total ram usage:        5 bytes
 12536 ;; Hardware stack levels used: 1
 12537 ;; Hardware stack levels required when called: 2
 12538 ;; This function calls:
 12539 ;;		_EEPROM_WriteByte
 12540 ;; This function is called by:
 12541 ;;		_main
 12542 ;; This function uses a non-reentrant model
 12543 ;;
 12544                           
 12545                           
 12546                           ;psect for function _EEPROM_Write_int16
 12547  0BBE                     _EEPROM_Write_int16:
 12548                           
 12549                           ;incstack = 0
 12550                           ; Regs used in _EEPROM_Write_int16: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12551                           ;EEPROM_Write_int16@dir stored from wreg
 12552  0BBE  00F7               	movwf	EEPROM_Write_int16@dir
 12553  0BBF                     l3006:
 12554                           
 12555                           ;EEPROM_lib.c: 48:     for(uint8_t i=0;i<2;i++){
 12556  0BBF  01F8               	clrf	EEPROM_Write_int16@i
 12557  0BC0                     l3012:
 12558                           
 12559                           ;EEPROM_lib.c: 49:         EEPROM_WriteByte(dir+i,*((int8_t*)(&data)+i));
 12560  0BC0  0878               	movf	EEPROM_Write_int16@i,w
 12561  0BC1  3E74               	addlw	(low (EEPROM_Write_int16@data| 0))& (0+255)
 12562  0BC2  0086               	movwf	6
 12563  0BC3  0187               	clrf	7
 12564  0BC4  0801               	movf	1,w
 12565  0BC5  00F6               	movwf	??_EEPROM_Write_int16
 12566  0BC6  0876               	movf	??_EEPROM_Write_int16,w
 12567  0BC7  00F1               	movwf	EEPROM_WriteByte@data
 12568  0BC8  0877               	movf	EEPROM_Write_int16@dir,w
 12569  0BC9  0778               	addwf	EEPROM_Write_int16@i,w
 12570  0BCA  318C  245E  318B   	fcall	_EEPROM_WriteByte
 12571  0BCD                     l3014:
 12572                           
 12573                           ;EEPROM_lib.c: 50:     }
 12574  0BCD  3001               	movlw	1
 12575  0BCE  00F6               	movwf	??_EEPROM_Write_int16
 12576  0BCF  0876               	movf	??_EEPROM_Write_int16,w
 12577  0BD0  07F8               	addwf	EEPROM_Write_int16@i,f
 12578  0BD1                     l3016:
 12579  0BD1  3002               	movlw	2
 12580  0BD2  0278               	subwf	EEPROM_Write_int16@i,w
 12581  0BD3  1C03               	skipc
 12582  0BD4  2BD6               	goto	u2291
 12583  0BD5  2BD7               	goto	u2290
 12584  0BD6                     u2291:
 12585  0BD6  2BC0               	goto	l3012
 12586  0BD7                     u2290:
 12587  0BD7                     l514:
 12588  0BD7  0008               	return
 12589  0BD8                     __end_of_EEPROM_Write_int16:
 12590                           
 12591                           	psect	text43
 12592  0C5E                     __ptext43:	
 12593 ;; *************** function _EEPROM_WriteByte *****************
 12594 ;; Defined at:
 12595 ;;		line 12 in file "EEPROM_lib.c"
 12596 ;; Parameters:    Size  Location     Type
 12597 ;;  dir             1    wreg     unsigned char 
 12598 ;;  data            1    1[COMMON] char 
 12599 ;; Auto vars:     Size  Location     Type
 12600 ;;  dir             1    2[COMMON] unsigned char 
 12601 ;;  GIEBitValue     1    3[COMMON] unsigned char 
 12602 ;; Return value:  Size  Location     Type
 12603 ;;                  1    wreg      void 
 12604 ;; Registers used:
 12605 ;;		wreg, status,2, status,0
 12606 ;; Tracked objects:
 12607 ;;		On entry : 0/0
 12608 ;;		On exit  : 0/0
 12609 ;;		Unchanged: 0/0
 12610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12611 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12612 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12614 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12615 ;;Total ram usage:        3 bytes
 12616 ;; Hardware stack levels used: 1
 12617 ;; Hardware stack levels required when called: 1
 12618 ;; This function calls:
 12619 ;;		Nothing
 12620 ;; This function is called by:
 12621 ;;		_EEPROM_Write_int16
 12622 ;;		_EEPROM_Write_int32
 12623 ;;		_EEPROM_Write_float
 12624 ;; This function uses a non-reentrant model
 12625 ;;
 12626                           
 12627                           
 12628                           ;psect for function _EEPROM_WriteByte
 12629  0C5E                     _EEPROM_WriteByte:
 12630                           
 12631                           ;incstack = 0
 12632                           ; Regs used in _EEPROM_WriteByte: [wreg+status,2+status,0]
 12633                           ;EEPROM_WriteByte@dir stored from wreg
 12634  0C5E  00F2               	movwf	EEPROM_WriteByte@dir
 12635  0C5F                     l2824:
 12636                           
 12637                           ;EEPROM_lib.c: 13:     uint8_t GIEBitValue = INTCONbits.GIE;
 12638  0C5F  3000               	movlw	0
 12639  0C60  1B8B               	btfsc	11,7	;volatile
 12640  0C61  3001               	movlw	1
 12641  0C62  00F3               	movwf	EEPROM_WriteByte@GIEBitValue
 12642  0C63                     l2826:
 12643                           
 12644                           ;EEPROM_lib.c: 15:     INTCONbits.GIE = 0;
 12645  0C63  138B               	bcf	11,7	;volatile
 12646  0C64                     l2828:
 12647                           
 12648                           ;EEPROM_lib.c: 17:     NVMCON1bits.NVMREGS = 1;
 12649  0C64  0030               	movlb	16	; select bank16
 12650  0C65  171E               	bsf	30,6	;volsfr
 12651  0C66                     l2830:
 12652                           
 12653                           ;EEPROM_lib.c: 18:     NVMCON1bits.WREN = 1;
 12654  0C66  151E               	bsf	30,2	;volsfr
 12655  0C67                     l2832:
 12656                           
 12657                           ;EEPROM_lib.c: 21:     NVMADRH = 0x70;
 12658  0C67  3070               	movlw	112
 12659  0C68  009B               	movwf	27	;volatile
 12660  0C69                     l2834:
 12661                           
 12662                           ;EEPROM_lib.c: 22:     NVMADRL = (dir) & 0xffu;
 12663  0C69  0872               	movf	EEPROM_WriteByte@dir,w
 12664  0C6A  009A               	movwf	26	;volatile
 12665  0C6B                     l2836:
 12666                           
 12667                           ;EEPROM_lib.c: 24:     NVMDATH = 0;
 12668  0C6B  019D               	clrf	29	;volatile
 12669                           
 12670                           ;EEPROM_lib.c: 25:     NVMDATL = data;
 12671  0C6C  0871               	movf	EEPROM_WriteByte@data,w
 12672  0C6D  009C               	movwf	28	;volatile
 12673                           
 12674                           ;EEPROM_lib.c: 26:     NVMCON2 = 0X55;
 12675  0C6E  3055               	movlw	85
 12676  0C6F  009F               	movwf	31	;volsfr
 12677                           
 12678                           ;EEPROM_lib.c: 27:     NVMCON2 = 0XAA;
 12679  0C70  30AA               	movlw	170
 12680  0C71  009F               	movwf	31	;volsfr
 12681  0C72                     l2838:
 12682                           
 12683                           ;EEPROM_lib.c: 28:     NVMCON1bits.WR = 1;
 12684  0C72  149E               	bsf	30,1	;volsfr
 12685  0C73                     l503:	
 12686                           ;EEPROM_lib.c: 30:     while (NVMCON1bits.WR);
 12687                           
 12688  0C73  189E               	btfsc	30,1	;volsfr
 12689  0C74  2C76               	goto	u2211
 12690  0C75  2C77               	goto	u2210
 12691  0C76                     u2211:
 12692  0C76  2C73               	goto	l503
 12693  0C77                     u2210:
 12694  0C77                     l505:
 12695                           
 12696                           ;EEPROM_lib.c: 31:     NVMCON1bits.WREN = 0;
 12697  0C77  111E               	bcf	30,2	;volsfr
 12698  0C78                     l2840:
 12699                           
 12700                           ;EEPROM_lib.c: 32:     INTCONbits.GIE = GIEBitValue;
 12701  0C78  0C73               	rrf	EEPROM_WriteByte@GIEBitValue,w
 12702  0C79  1C03               	skipc
 12703  0C7A  138B               	bcf	11,7	;volatile
 12704  0C7B  1803               	skipnc
 12705  0C7C  178B               	bsf	11,7	;volatile
 12706  0C7D                     l506:
 12707  0C7D  0008               	return
 12708  0C7E                     __end_of_EEPROM_WriteByte:
 12709                           
 12710                           	psect	text44
 12711  0C41                     __ptext44:	
 12712 ;; *************** function _EEPROM_Read_int16 *****************
 12713 ;; Defined at:
 12714 ;;		line 53 in file "EEPROM_lib.c"
 12715 ;; Parameters:    Size  Location     Type
 12716 ;;  dir             1    wreg     unsigned char 
 12717 ;; Auto vars:     Size  Location     Type
 12718 ;;  dir             1    5[COMMON] unsigned char 
 12719 ;;  i               1    8[COMMON] unsigned char 
 12720 ;;  data            2    6[COMMON] short 
 12721 ;; Return value:  Size  Location     Type
 12722 ;;                  2    2[COMMON] short 
 12723 ;; Registers used:
 12724 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12725 ;; Tracked objects:
 12726 ;;		On entry : 0/0
 12727 ;;		On exit  : 0/0
 12728 ;;		Unchanged: 0/0
 12729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12730 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12731 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12732 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12733 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12734 ;;Total ram usage:        7 bytes
 12735 ;; Hardware stack levels used: 1
 12736 ;; Hardware stack levels required when called: 2
 12737 ;; This function calls:
 12738 ;;		_EEPROM_ReadByte
 12739 ;; This function is called by:
 12740 ;;		_main
 12741 ;; This function uses a non-reentrant model
 12742 ;;
 12743                           
 12744                           
 12745                           ;psect for function _EEPROM_Read_int16
 12746  0C41                     _EEPROM_Read_int16:
 12747                           
 12748                           ;incstack = 0
 12749                           ; Regs used in _EEPROM_Read_int16: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12750                           ;EEPROM_Read_int16@dir stored from wreg
 12751  0C41  00F5               	movwf	EEPROM_Read_int16@dir
 12752  0C42                     l3018:
 12753                           
 12754                           ;EEPROM_lib.c: 54:     int16_t data;;EEPROM_lib.c: 55:     for(uint8_t i=0;i<2;i++){
 12755  0C42  01F8               	clrf	EEPROM_Read_int16@i
 12756  0C43                     l3024:
 12757                           
 12758                           ;EEPROM_lib.c: 56:         *((int8_t*)(&data)+i) = EEPROM_ReadByte(dir+i);
 12759  0C43  0875               	movf	EEPROM_Read_int16@dir,w
 12760  0C44  0778               	addwf	EEPROM_Read_int16@i,w
 12761  0C45  318A  22E8  318C   	fcall	_EEPROM_ReadByte
 12762  0C48  00F4               	movwf	??_EEPROM_Read_int16
 12763  0C49  0878               	movf	EEPROM_Read_int16@i,w
 12764  0C4A  3E76               	addlw	(low (EEPROM_Read_int16@data| 0))& (0+255)
 12765  0C4B  0086               	movwf	6
 12766  0C4C  0187               	clrf	7
 12767  0C4D  0874               	movf	??_EEPROM_Read_int16,w
 12768  0C4E  0081               	movwf	1
 12769  0C4F                     l3026:
 12770                           
 12771                           ;EEPROM_lib.c: 57:     }
 12772  0C4F  3001               	movlw	1
 12773  0C50  00F4               	movwf	??_EEPROM_Read_int16
 12774  0C51  0874               	movf	??_EEPROM_Read_int16,w
 12775  0C52  07F8               	addwf	EEPROM_Read_int16@i,f
 12776  0C53                     l3028:
 12777  0C53  3002               	movlw	2
 12778  0C54  0278               	subwf	EEPROM_Read_int16@i,w
 12779  0C55  1C03               	skipc
 12780  0C56  2C58               	goto	u2301
 12781  0C57  2C59               	goto	u2300
 12782  0C58                     u2301:
 12783  0C58  2C43               	goto	l3024
 12784  0C59                     u2300:
 12785  0C59                     l3030:
 12786                           
 12787                           ;EEPROM_lib.c: 58:     return (data);
 12788  0C59  0877               	movf	EEPROM_Read_int16@data+1,w
 12789  0C5A  00F3               	movwf	?_EEPROM_Read_int16+1
 12790  0C5B  0876               	movf	EEPROM_Read_int16@data,w
 12791  0C5C  00F2               	movwf	?_EEPROM_Read_int16
 12792  0C5D                     l519:
 12793  0C5D  0008               	return
 12794  0C5E                     __end_of_EEPROM_Read_int16:
 12795                           
 12796                           	psect	text45
 12797  0AE8                     __ptext45:	
 12798 ;; *************** function _EEPROM_ReadByte *****************
 12799 ;; Defined at:
 12800 ;;		line 35 in file "EEPROM_lib.c"
 12801 ;; Parameters:    Size  Location     Type
 12802 ;;  dir             1    wreg     unsigned char 
 12803 ;; Auto vars:     Size  Location     Type
 12804 ;;  dir             1    1[COMMON] unsigned char 
 12805 ;; Return value:  Size  Location     Type
 12806 ;;                  1    wreg      char 
 12807 ;; Registers used:
 12808 ;;		wreg
 12809 ;; Tracked objects:
 12810 ;;		On entry : 0/0
 12811 ;;		On exit  : 0/0
 12812 ;;		Unchanged: 0/0
 12813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12815 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12817 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12818 ;;Total ram usage:        1 bytes
 12819 ;; Hardware stack levels used: 1
 12820 ;; Hardware stack levels required when called: 1
 12821 ;; This function calls:
 12822 ;;		Nothing
 12823 ;; This function is called by:
 12824 ;;		_EEPROM_Read_int16
 12825 ;;		_EEPROM_Read_int32
 12826 ;;		_EEPROM_Read_float
 12827 ;; This function uses a non-reentrant model
 12828 ;;
 12829                           
 12830                           
 12831                           ;psect for function _EEPROM_ReadByte
 12832  0AE8                     _EEPROM_ReadByte:
 12833                           
 12834                           ;incstack = 0
 12835                           ; Regs used in _EEPROM_ReadByte: [wreg]
 12836                           ;EEPROM_ReadByte@dir stored from wreg
 12837  0AE8  00F1               	movwf	EEPROM_ReadByte@dir
 12838  0AE9                     l2842:
 12839                           
 12840                           ;EEPROM_lib.c: 37:     NVMCON1bits.NVMREGS = 1;
 12841  0AE9  0030               	movlb	16	; select bank16
 12842  0AEA  171E               	bsf	30,6	;volsfr
 12843  0AEB                     l2844:
 12844                           
 12845                           ;EEPROM_lib.c: 39:     NVMADRH = 0x70;
 12846  0AEB  3070               	movlw	112
 12847  0AEC  009B               	movwf	27	;volatile
 12848                           
 12849                           ;EEPROM_lib.c: 40:     NVMADRL = (dir) & 0xffu;
 12850  0AED  0871               	movf	EEPROM_ReadByte@dir,w
 12851  0AEE  009A               	movwf	26	;volatile
 12852  0AEF                     l2846:
 12853                           
 12854                           ;EEPROM_lib.c: 43:     NVMCON1bits.RD = 1;
 12855  0AEF  141E               	bsf	30,0	;volsfr
 12856                           
 12857                           ;EEPROM_lib.c: 44:     return (NVMDATL);
 12858  0AF0  081C               	movf	28,w	;volatile
 12859  0AF1                     l509:
 12860  0AF1  0008               	return
 12861  0AF2                     __end_of_EEPROM_ReadByte:
 12862                           
 12863                           	psect	intentry
 12864  0004                     __pintentry:	
 12865 ;; *************** function _INTERRUPT_InterruptManager *****************
 12866 ;; Defined at:
 12867 ;;		line 16 in file "interrupt.c"
 12868 ;; Parameters:    Size  Location     Type
 12869 ;;		None
 12870 ;; Auto vars:     Size  Location     Type
 12871 ;;		None
 12872 ;; Return value:  Size  Location     Type
 12873 ;;                  1    wreg      void 
 12874 ;; Registers used:
 12875 ;;		wreg, status,2, status,0
 12876 ;; Tracked objects:
 12877 ;;		On entry : 0/0
 12878 ;;		On exit  : 0/0
 12879 ;;		Unchanged: 0/0
 12880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12883 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12884 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12885 ;;Total ram usage:        1 bytes
 12886 ;; Hardware stack levels used: 1
 12887 ;; This function calls:
 12888 ;;		Nothing
 12889 ;; This function is called by:
 12890 ;;		Interrupt level 1
 12891 ;; This function uses a non-reentrant model
 12892 ;;
 12893                           
 12894  0004                     _INTERRUPT_InterruptManager:
 12895                           
 12896                           ;incstack = 0
 12897  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 12898                           
 12899                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0]
 12900  0005  3180               	pagesel	$
 12901  0006                     i1l2272:
 12902                           
 12903                           ;interrupt.c: 18:     if (PIR0bits.INTF == 1){
 12904  0006  002E               	movlb	14	; select bank14
 12905  0007  1C0C               	btfss	12,0	;volatile
 12906  0008  280A               	goto	u133_21
 12907  0009  280B               	goto	u133_20
 12908  000A                     u133_21:
 12909  000A  2810               	goto	i1l486
 12910  000B                     u133_20:
 12911  000B                     i1l2274:
 12912                           
 12913                           ;interrupt.c: 19:         PIR0bits.INTF = 0;
 12914  000B  100C               	bcf	12,0	;volatile
 12915  000C                     i1l2276:
 12916                           
 12917                           ;interrupt.c: 20:         counts++;
 12918  000C  3001               	movlw	1
 12919  000D  00F0               	movwf	??_INTERRUPT_InterruptManager
 12920  000E  0870               	movf	??_INTERRUPT_InterruptManager,w
 12921  000F  07FC               	addwf	_counts,f
 12922  0010                     i1l486:	
 12923                           ;interrupt.c: 24:     }else{
 12924                           
 12925  0010  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 12926  0011  0009               	retfie
 12927  0012                     __end_of_INTERRUPT_InterruptManager:
 12928  007E                     btemp	set	126	;btemp
 12929  007E                     int$flags	set	126
 12930  007E                     wtemp0	set	126
 12931                           
 12932                           	psect	idloc
 12933                           
 12934                           ;Config register IDLOC0 @ 0x8000
 12935                           ;	unspecified, using default values
 12936  8000                     	org	32768
 12937  8000  3FFF               	dw	16383
 12938                           
 12939                           ;Config register IDLOC1 @ 0x8001
 12940                           ;	unspecified, using default values
 12941  8001                     	org	32769
 12942  8001  3FFF               	dw	16383
 12943                           
 12944                           ;Config register IDLOC2 @ 0x8002
 12945                           ;	unspecified, using default values
 12946  8002                     	org	32770
 12947  8002  3FFF               	dw	16383
 12948                           
 12949                           ;Config register IDLOC3 @ 0x8003
 12950                           ;	unspecified, using default values
 12951  8003                     	org	32771
 12952  8003  3FFF               	dw	16383
 12953                           
 12954                           	psect	config
 12955                           
 12956                           ;Config register CONFIG1 @ 0x8007
 12957                           ;	External Oscillator mode selection bits
 12958                           ;	FEXTOSC = OFF, Oscillator not enabled
 12959                           ;	Power-up default value for COSC bits
 12960                           ;	RSTOSC = HFINT32, HFINTOSC with OSCFRQ= 32 MHz and CDIV = 1:1
 12961                           ;	Clock Out Enable bit
 12962                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 12963                           ;	Clock Switch Enable bit
 12964                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 12965                           ;	Fail-Safe Clock Monitor Enable bit
 12966                           ;	FCMEN = ON, FSCM timer enabled
 12967  8007                     	org	32775
 12968  8007  3F8C               	dw	16268
 12969                           
 12970                           ;Config register CONFIG2 @ 0x8008
 12971                           ;	Master Clear Enable bit
 12972                           ;	MCLRE = ON, MCLR pin is Master Clear function
 12973                           ;	Power-up Timer Enable bit
 12974                           ;	PWRTE = OFF, PWRT disabled
 12975                           ;	Low-Power BOR enable bit
 12976                           ;	LPBOREN = OFF, ULPBOR disabled
 12977                           ;	Brown-out reset enable bits
 12978                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 12979                           ;	Brown-out Reset Voltage Selection
 12980                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 12981                           ;	Zero-cross detect disable
 12982                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 12983                           ;	Peripheral Pin Select one-way control
 12984                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 12985                           ;	Stack Overflow/Underflow Reset Enable bit
 12986                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 12987                           ;	Background Debugger
 12988                           ;	DEBUG = 0x1, unprogrammed default
 12989  8008                     	org	32776
 12990  8008  3FFF               	dw	16383
 12991                           
 12992                           ;Config register CONFIG3 @ 0x8009
 12993                           ;	WDT Period Select bits
 12994                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 12995                           ;	WDT operating mode
 12996                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 12997                           ;	WDT Window Select bits
 12998                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 12999                           ;	WDT input clock selector
 13000                           ;	WDTCCS = SC, Software Control
 13001  8009                     	org	32777
 13002  8009  3F9F               	dw	16287
 13003                           
 13004                           ;Config register CONFIG4 @ 0x800A
 13005                           ;	UserNVM self-write protection bits
 13006                           ;	WRT = OFF, Write protection off
 13007                           ;	Scanner Enable bit
 13008                           ;	SCANE = available, Scanner module is available for use
 13009                           ;	Low Voltage Programming Enable bit
 13010                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 13011  800A                     	org	32778
 13012  800A  3FFF               	dw	16383
 13013                           
 13014                           ;Config register CONFIG5 @ 0x800B
 13015                           ;	UserNVM Program memory code protection bit
 13016                           ;	CP = OFF, Program Memory code protection disabled
 13017                           ;	DataNVM code protection bit
 13018                           ;	CPD = OFF, Data EEPROM code protection disabled
 13019  800B                     	org	32779
 13020  800B  3FFF               	dw	16383

Data Sizes:
    Strings     62
    Constant    28
    Data        8
    BSS         112
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     79      80
    BANK1            80     12      80
    BANK2            80      0      50
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_7(CODE[22]), STR_4(CODE[4]), STR_3(CODE[9]), buffer(BANK2[50]), 
		 -> STR_1(CODE[9]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 50
		 -> buffer(BANK2[50]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_7(CODE[22]), STR_6(CODE[8]), STR_5(CODE[7]), STR_4(CODE[4]), 
		 -> STR_3(CODE[9]), STR_2(CODE[23]), buffer(BANK2[50]), STR_1(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 50
		 -> STR_7(CODE[22]), STR_6(CODE[8]), STR_5(CODE[7]), STR_4(CODE[4]), 
		 -> STR_3(CODE[9]), STR_2(CODE[23]), buffer(BANK2[50]), STR_1(CODE[9]), 

    vfpfcnvrt@vp	PTR void  size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    ctoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> NULL(NULL[0]), sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_6(CODE[8]), STR_5(CODE[7]), STR_2(CODE[23]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 50
		 -> buffer(BANK2[50]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    S1059_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 50
		 -> buffer(BANK2[50]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 50
		 -> buffer(BANK2[50]), 

    EMC1001_read@TL	PTR unsigned char  size(1) Largest target is 1
		 -> low_byte(BANK1[1]), 

    EMC1001_read@TH	PTR char  size(1) Largest target is 1
		 -> high_byte(BANK1[1]), 

    lcd_setCustomChar@dato	PTR unsigned char  size(2) Largest target is 8
		 -> Letra2(CODE[8]), Letra1(BANK1[8]), 

    lcd_puts@dato	PTR unsigned char  size(1) Largest target is 50
		 -> buffer(BANK2[50]), 


Critical Paths under _main in COMMON

    _vfpfcnvrt->_fputc
    _dtoa->___aodiv
    _pad->_fputc
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _putch->_uart_tx
    _port_init->_serial_init
    _serial_init->___lldiv
    _lcd_showCustomChar->_lcd_send_byte
    _lcd_setCustomChar->_lcd_send_byte
    _lcd_puts->_lcd_send_byte
    _lcd_gotoxy->_lcd_send_byte
    _lcd_init->_lcd_send_byte
    _lcd_send_byte->_Send_D7_D4
    _Send_D7_D4->_Write_PCF
    _Write_PCF->_I2C1_Write1ByteRegister
    _I2C1_Write1ByteRegister->_i2c_write
    _EMC1001_read->___bmul
    _EEPROM_Write_int16->_EEPROM_WriteByte
    _EEPROM_Read_int16->_EEPROM_ReadByte

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_printf
    _main->_sprintf
    _sprintf->_vfprintf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _abs->___aomod
    _port_init->_serial_init
    _serial_init->___lldiv
    _lcd_showCustomChar->_lcd_gotoxy
    _lcd_setCustomChar->_lcd_send_byte
    _lcd_puts->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_init->_lcd_send_byte

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   44196
                                              8 BANK1      4     4      0
                  _EEPROM_Read_int16
                 _EEPROM_Write_int16
                       _EMC1001_read
                   _enable_interrupt
                           _lcd_init
                           _lcd_puts
                  _lcd_setCustomChar
                 _lcd_showCustomChar
                          _port_init
                             _printf
                            _sprintf
                        _teclado_get
 ---------------------------------------------------------------------------------
 (1) _teclado_get                                          2     2      0       0
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6   10883
                                             73 BANK0      6     0      6
                                              0 BANK1      8     8      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4   10730
                                             73 BANK0      6     2      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3   10187
                                             65 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           39    37      2    9534
                                             47 BANK0     18    16      2
                               _ctoa
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    5585
                                             17 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3752
                                              8 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1726
                                              0 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              4 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              1 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              1 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                10     8      2    1646
                                              0 BANK0     10     8      2
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3    1334
                                              4 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      44
                                              3 COMMON     1     1      0
                            _uart_tx
 ---------------------------------------------------------------------------------
 (6) _uart_tx                                              2     2      0      22
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _port_init                                            0     0      0     457
                           _adc_init
                           _i2c_init
                        _serial_init
                       _teclado_init
 ---------------------------------------------------------------------------------
 (2) _teclado_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _serial_init                                         10     6      4     457
                                             10 COMMON     2     2      0
                                              5 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              1 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_showCustomChar                                   4     2      2    6534
                                              8 BANK0      4     2      2
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_setCustomChar                                    6     3      3    3312
                                              3 BANK0      6     3      3
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             3     3      0    6249
                                              8 BANK0      3     3      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoxy                                           5     4      1    3262
                                              3 BANK0      5     4      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0    4806
                                              3 BANK0      3     3      0
            _I2C1_Write1ByteRegister
                         _Send_D7_D4
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_send_byte                                        4     3      1    2819
                                             11 COMMON     1     0      1
                                              0 BANK0      3     3      0
                         _Send_D7_D4
 ---------------------------------------------------------------------------------
 (3) _Send_D7_D4                                           4     3      1    1435
                                              7 COMMON     4     3      1
                          _Write_PCF
 ---------------------------------------------------------------------------------
 (4) _Write_PCF                                            2     2      0     515
                                              5 COMMON     2     2      0
            _I2C1_Write1ByteRegister
 ---------------------------------------------------------------------------------
 (5) _I2C1_Write1ByteRegister                              3     1      2     484
                                              2 COMMON     3     1      2
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _enable_interrupt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EMC1001_read                                         4     3      1     502
                                              5 COMMON     4     3      1
                             ___bmul
                           _i2c_read
                        _i2c_restart
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (6) _i2c_write                                            1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _i2c_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_restart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                             1     1      0      22
                                              1 COMMON     1     1      0
                            _i2c_ack
                           _i2c_nack
 ---------------------------------------------------------------------------------
 (3) _i2c_nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              1 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write_int16                                   5     3      2     506
                                              4 COMMON     5     3      2
                   _EEPROM_WriteByte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_WriteByte                                     3     2      1     295
                                              1 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read_int16                                    7     5      2     180
                                              2 COMMON     7     5      2
                    _EEPROM_ReadByte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_ReadByte                                      1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_Read_int16
     _EEPROM_ReadByte
   _EEPROM_Write_int16
     _EEPROM_WriteByte
   _EMC1001_read
     ___bmul
     _i2c_read
       _i2c_ack
       _i2c_nack
     _i2c_restart
     _i2c_start
     _i2c_stop
     _i2c_write
   _enable_interrupt
   _lcd_init
     _I2C1_Write1ByteRegister
       _i2c_start
       _i2c_stop
       _i2c_write
     _Send_D7_D4
       _Write_PCF
         _I2C1_Write1ByteRegister
     _lcd_send_byte
       _Send_D7_D4
   _lcd_puts
     _lcd_gotoxy
       _lcd_send_byte
     _lcd_send_byte
   _lcd_setCustomChar
     _lcd_send_byte
   _lcd_showCustomChar
     _lcd_gotoxy
     _lcd_send_byte
   _port_init
     _adc_init
     _i2c_init
     _serial_init
       ___lldiv
     _teclado_init
   _printf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _fputc
             _putch
               _uart_tx
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
             _fputs
               _fputc
             _strlen
         _fputc
   _sprintf
     _vfprintf
   _teclado_get

 _INTERRUPT_InterruptManager (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      C      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      32       9       62.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      DF      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      DF      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Jul 28 18:19:17 2022

                 EEPROM_Read_int16@i 0078                       ___bmul@product 0073  
                  Send_D7_D4@address 0079                     Send_D7_D4@nibble 0077  
                     ?_lcd_send_byte 007B                 EEPROM_Read_int16@dir 0075  
                                 _mv 1056                                   _rx 00B8  
                                l106 0D61                                  l222 0ACF  
                                l310 0FFF                                  l231 0AD2  
                                l135 0B3C                                  l151 0ABB  
                                l216 0C0B                                  l225 0AC4  
                                l313 0C40                                  l129 0D9E  
                                l401 01C2                                  l242 0BA4  
                                l234 0AD6                                  l410 009C  
                                l402 006E                                  l251 0B02  
                                l219 0ACB                                  l411 0095  
                                l403 0067                                  l228 0AC8  
                                l245 0AF7                                  l237 0B91  
                                l261 0B2C                                  l254 0B07  
                                l318 0785                                  l430 0117  
                                l422 00E5                                  l414 00B7  
                                l406 0085                                  l503 0C73  
                                l271 0B62                                  l431 0110  
                                l423 00DE                                  l415 00B0  
                                l407 007E                                  l248 0AFC  
                                l328 0DE4                                  l505 0C77  
                                l257 0B25                                  l177 0BF1  
                                l506 0C7D                                  l514 0BD7  
                                l450 0193                                  l442 015C  
                                l434 012E                                  l426 00FC  
                                l418 00CE                                  l259 0B2A  
                                l347 0EE7                                  l355 0CFB  
                                l451 018C                                  l443 0155  
                                l435 0127                                  l427 00F5  
                                l419 00C7                                  l509 0AF1  
                                l373 0F9F                                  l358 0B76  
                                l454 01AA                                  l446 017C  
                                l438 0145                                  l519 0C5D  
                                l455 01A3                                  l447 0175  
                                l439 013E                                  l297 0B1E  
                                l394 0B12                                  l459 01BA  
                                l476 0AE7                                  l804 0646  
                                l717 0B8B                                  l805 0657  
                                l397 0057                                  l398 0050  
                                l727 0F42                                  l791 055C  
                                l792 056D                EEPROM_Read_int16@data 0076  
                                _adc 00B0                                  _abs 0C0C  
                                _pad 0E35                  EEPROM_WriteByte@dir 0072  
              __size_of_EMC1001_read 005D                                  wreg 0009  
         __size_of_EEPROM_Read_int16 001D                          lcd_gotoxy@x 0026  
                        lcd_gotoxy@y 0023                                 l1200 07DE  
                               l1202 07F9                                 l1210 0232  
                               l1211 024A                                 ?_abs 0074  
                               l1205 020C                                 l1214 02BA  
                               l1206 0215                                 l1233 046C  
                               l1154 0CA4                                 l1251 0C25  
                               l3012 0BC0                                 l1228 0330  
                               l1244 0D2C                                 l1181 0E51  
                 serial_init@baudios 0025                                 l3030 0C59  
                               l3014 0BCD                                 l3006 0BBF  
                               l3110 00E3                                 l3102 00BB  
                               l1263 0E34                                 l1271 0CCC  
                               l3024 0C43                                 l3016 0BD1  
                               l1248 0C25                                 l1184 0E73  
                               l3120 0104                                 l3104 00CC  
                               l3026 0C4F                                 l3018 0C42  
                               l1186 0E8D                                 l3122 0115  
                               l3114 00E9                                 l3028 0C53  
                               l1284 0BBD                                 l2420 0BA6  
                               l3140 015A                                 l3132 0132  
                               l3116 00FA                                 l3108 00D2  
                               l1197 07BC                                 l4030 0ED1  
                               l2422 0BAB                                 l1278 0B4E  
                               l3150 017A                                 l3134 0143  
                               l3126 011B                                 l3070 003F  
                               l4032 0DBB                                 l2440 04A3  
                               l2432 046D                                 l2424 0BAF  
                               l3160 0197                                 l3144 0160  
                               l3128 012C                                 l3080 006C  
                               l3072 0044                                 l2370 0B39  
                               l2450 04E0                                 l2442 04C2  
                               l2434 046E                                 l2522 0C0C  
                               l2426 0BB7                                 l3162 01A8  
                               l3154 0180                                 l3146 0164  
                               l3138 0149                                 l3090 0089  
                               l3074 0055                                 l3066 0036  
                               l3500 0FC0                                 l2372 0AB7  
                               l2460 051A                                 l2452 04E8  
                               l2444 04C6                                 l2436 0478  
                               l2524 0C19                                 l3172 01C1  
                               l3156 0191                                 l3148 0169  
                               l3092 009A                                 l3084 0072  
                               l3068 003B                                 l3510 0FD9  
                               l3502 0FC4                                 l2366 0B2E  
                               l2390 0DEF                                 l2462 052A  
                               l2454 04EC                                 l2446 04D0  
                               l2438 0499                                 l2470 056E  
                               l3166 01AE                                 l3086 0083  
                               l3078 005B                                 l3432 0AC9  
                               l3520 0FF1                                 l3512 0FDE  
                               l3504 0FCA                                 l2368 0B2E  
                               l2392 0DF4                                 l2464 052B  
                               l2456 04F0                                 l2448 04DD  
                               l2480 05C3                                 l2472 056F  
                               l3600 037B                                 l3168 01BF  
                               l3096 00A4                                 l3434 0AD0  
                               l3450 0B5B                                 l3522 0FF6  
                               l3514 0FE1                                 l3506 0FCF  
                               l2394 0DFE                                 l2386 0DE5  
                               l2570 0797                                 l2458 04F8  
                               l2466 0539                                 l2490 05E3  
                               l2482 05D0                                 l2474 0579  
                               l3530 01E8                                 l3610 03B3  
                               l3098 00B5                                 l2652 0AF2  
                               l3436 0B20                                 l2900 0ADF  
                               l3452 0B5F                                 l3444 0B50  
                               l3524 0FFA                                 l3516 0FE6  
                               l3508 0FD3                                 l3700 06FA  
                               l2660 0EF9                                 l2396 0E1B  
                               l2388 0DEA                                 l2580 07BA  
                               l2572 07A0                                 l2468 053E  
                               l2492 0605                                 l2484 05D3  
                               l2476 059A                                 l3460 0CBD  
                               l3540 023A                                 l3532 01EE  
                               l3620 03FF                                 l3612 03CC  
                               l3604 0389                                 l2830 0C66  
                               l2654 0AFD                                 l3438 0B22  
                               l3446 0B53                                 l3462 0B14  
                               l3518 0FEC                                 l3710 070F  
                               l3702 0700                                 l2670 0F24  
                               l2662 0EFC                                 l2750 0D69  
                               l2398 0E2C                                 l2590 07F2  
                               l2582 07BF                                 l2574 07A5  
                               l2566 0788                                 l2494 0615  
                               l2486 05DB                                 l2478 05A4  
                               l3454 0CA7                                 l3470 0E4A  
                               l3550 0257                                 l3542 0240  
                               l3534 0211                                 l3526 01C5  
                               l3630 0427                                 l3622 040A  
                               l3606 039A                                 l2840 0C78  
                               l2832 0C67                                 l2824 0C5F  
                               l3800 0F47                                 l3448 0B57  
                               l3720 073C                                 l3712 0717  
                               l3704 070D                                 l2760 0BD8  
                               l2672 0F2C                                 l2664 0F07  
                               l2752 0D93                                 l2584 07CB  
                               l2576 07B4                                 l2568 078F  
                               l2488 05DF                                 l2496 0623  
                               l3456 0CAA                                 l3480 0E78  
                               l3472 0E4F                                 l3464 0E37  
                               l3560 02D5                                 l3552 0285  
                               l3544 0245                                 l3536 0224  
                               l3528 01D5                                 l3632 042F  
                               l3624 0412                                 l3616 03E6  
                               l3608 03AB                                 l2842 0AE9  
                               l2834 0C69                                 l2826 0C63  
                               l2850 0B78                                 l3810 0F63  
                               l3802 0F4B                                 l3490 0FA6  
                               l3730 0778                                 l3722 0745  
                               l3714 0720                                 l2762 0BEE  
                               l2770 0C09                                 l2674 0F2D  
                               l2666 0F0B                                 l2658 0EE8  
                               l2754 0D96                                 l2586 07D0  
                               l2498 0628                                 l3458 0CB8  
                               l3482 0E81                                 l3474 0E54  
                               l3466 0E3C                                 l3570 0301  
                               l3562 02E2                                 l3554 0289  
                               l3546 024F                                 l3538 022A  
                               l3634 043A                                 l3618 03F7  
                               l2844 0AEB                                 l2836 0C6B  
                               l2828 0C64                                 l2860 0B8A  
                               l2852 0B79                                 l2780 0AC2  
                               l3820 0F75                                 l3812 0F67  
                               l3804 0F52                                 l3492 0FAC  
                               l3732 0781                                 l3724 0757  
                               l3716 0725                                 l3660 0DAE  
                               l3652 0DA1                                 l2764 0BF2  
                               l2676 0F34                                 l2668 0F12  
                               l2756 0D98                                 l2748 0D62  
                               l2772 0B08                                 l2588 07E3  
                               l3476 0E60                                 l3468 0E45  
                               l3572 0306                                 l3580 031D  
                               l3564 02F0                                 l3556 028D  
                               l3548 0252                                 l3628 0416  
                               l3644 0449                                 l3740 0C8A  
                               l2846 0AEF                                 l2838 0C72  
                               l2854 0B7D                                 l2790 0BA2  
                               l2782 0B8D                                 l3822 0F79  
                               l3814 0F6A                                 l3806 0F56  
                               l3494 0FB1                                 l3486 0FA1  
                               l3734 0783                                 l3726 075D  
                               l3718 072B                                 l3670 0DCE  
                               l3654 0DA2                                 l3750 0E91  
                               l2766 0BF8                                 l2678 0F3A  
                               l2758 0D9B                                 l2774 0B0B  
                               l3478 0E65                                 l3574 030C  
                               l3558 02C8                                 l3566 02F5  
                               l3646 0462                                 l3638 0440  
                               l3590 034C                                 l3742 0C8C  
                               l3830 0658                                 ?_pad 0028  
                               l2856 0B81                                 l2784 0B96  
                               l3824 0F83                                 l3816 0F6E  
                               l3808 0F60                                 l3496 0FB5  
                               l3488 0FA2                                 l3584 0C28  
                               l3728 076F                                 l3672 0DD7  
                               l3656 0DA4                                 l3760 0EAE  
                               l3752 0E97                                 l2768 0C08  
                               l2776 0B0D                                 l2880 0D34  
                               l3576 0311                                 l3568 02FC  
                               l3592 0351                                 l3744 0C9B  
                               l3736 0C80                                 l3840 0669  
                               l3832 0658                                 l2858 0B83  
                               l2786 0B9B                                 l3826 0F86  
                               l3818 0F72                                 l3498 0FBB  
                               l3674 0DDE                                 l3658 0DA9  
                               l3666 0DB3                                 l3762 0EB8  
                               l3754 0EA0                                 l3770 0EDE  
                               l2778 0B0F                                 l2890 0D49  
                               l2882 0D36                                 l3578 0315  
                               l3594 0355                                 l3586 0333  
                               l3690 0D24                                 l3682 0CFE  
                               l3738 0C88                                 l3850 0694  
                               l3842 0675                                 l3834 065B  
                               l2788 0B9F                                 l3828 0F8E  
                               l3668 0DC9                                 l3756 0EA2  
                               l3748 0E90                                 l3780 0CDE  
                               l2892 0D4D                                 l2884 0D3C  
                               l2876 0D2D                                 l3596 0367  
                               l3588 0344                                 l3684 0D02  
                               l3860 06C0                                 l3852 06A0  
                               l3844 0679                                 l3836 065E  
                               l3766 0EC5                                 l3758 0EA4  
                               l3790 0CF1                                 l2894 0D58  
                               l2886 0D3F                                 l2878 0D32  
                               l3598 036F                                 l3686 0D06  
                               l3694 0B3D                                 l3862 06CD  
                               l3854 06A8                                 l3846 0682  
                               l3838 0666                                 l3768 0ED9  
                               l3792 0CF5                                 l2896 0D5B  
                               l2888 0D44                                 l3688 0D1A  
                               l3696 0B42                                 l3864 06D1  
                               l3856 06B4                                 l3848 068A  
                               l3786 0CE0                                 l3778 0CCD  
                               l3794 0B65                                 l2898 0D5E  
                               l3866 06DE                                 l3858 06BC  
                               l3788 0CEC                                 l3796 0B6D  
                               l3868 06E7                                 l3798 0F44  
                               STR_1 1045                                 STR_2 1008  
                               STR_3 1045                                 STR_4 1052  
                               STR_6 104E                                 STR_7 101F  
                               u2010 0AFC                                 u2011 0AFB  
                               u2020 0B07                                 u2100 0F3A  
                               u2021 0B06                                 u2101 0F39  
                               u2200 0B9B                                 u2040 0EF9  
                               u3000 0367                                 u2201 0B9A  
                               u2041 0EF8                                 u3001 0366  
                               u2210 0C77                                 u3010 039A  
                               u2211 0C76                                 u3011 0399  
                               u2300 0C59                                 u2220 0B7D  
                               u2060 0F0B                                 u3020 03AB  
                               u2301 0C58                                 u2221 0B7C  
                               u2061 0F0A                                 u3021 03AA  
                               _LATA 0016                                 u2230 0B8A  
                               u1430 0DEA                                 u1510 04A3  
                               u3030 03F7                                 u2310 0044  
                               _LATB 0017                                 u2231 0B89  
                               u2055 0EFD                                 u1431 0DE9  
                               u1511 04A2                                 u3031 03F6  
                               u2311 0043                                 u2080 0F24  
                               u1440 0DEF                                 u1600 0579  
                               u3040 0427                                 u2400 00B5  
                               u2320 0055                                 u2081 0F23  
                               u1441 0DEE                                 u1601 0578  
                               u3041 0426                                 u2401 00B4  
                               u2321 0054                                 u2170 0D8B  
                               u1450 0DFE                                 u1530 04CD  
                               u3050 0D24                                 u2410 00BB  
                               u2330 005B                                 u2075 0F0C  
                               u1451 0DFD                                 u3051 0D23  
                               u2411 00BA                                 u2331 005A  
                               u2180 0AC8                                 u3060 072B  
                               u1460 0E1B                                 u1540 04DD  
                               u1620 05A4                                 u2500 012C  
                               u2420 00CC                                 u2340 006C  
                               u2181 0AC7                                 u3061 072A  
                               u2085 0F20                                 u1461 0E1A  
                               u1541 04DC                                 u1621 05A3  
                               u2501 012B                                 u2421 00CB  
                               u2341 006B                                 u3117 06AE  
                               u2190 0B96                                 u3070 0EE7  
                               u1390 0B39                                 u1550 04F0  
                               u2510 0132                                 u2430 00D2  
                               u2350 0072                                 u2191 0B95  
                               u3071 0EE6                                 u2095 0F2E  
                               u2175 0D87                                 u1391 0B38  
                               u1551 04EF                                 u2511 0131  
                               u2431 00D1                                 u3207 00C0  
                               u2351 0071                                 u3127 06C6  
                               u1800 078F                                 u1560 051A  
                               u1640 05D0                                 u1480 0BB7  
                               u2600 01A8                                 u2520 0143  
                               u2440 00E3                                 u2360 0083  
                               u1385 0B32                                 u1465 0E17  
                               u1801 078E                                 u1561 0519  
                               u1641 05CF                                 u1481 0BB6  
                               u2601 01A7                                 u2521 0142  
                               u2441 00E2                                 u3217 00D7  
                               u2361 0082                                 u3137 06D7  
                               u2290 0BD7                                 u3090 0CFB  
                               u1810 07A5                                 u1570 0539  
                               u1490 0478                                 u1650 05E3  
                               u2610 01AE                                 u2530 0149  
                               u2450 00E9                                 u2370 0089  
                               u2291 0BD6                                 u3091 0CFA  
                               u1811 07A4                                 u1571 0538  
                               u1491 0477                                 u1651 05E2  
                               u2611 01AD                                 u3307 019C  
                               u2531 0148                                 u3227 00EE  
                               u2451 00E8                                 u2371 0088  
                               u3147 003C                                 u2700 0AD6  
                               u1820 07B9                                 u1580 053E  
                               u1660 0605                                 u1740 0C19  
                               u2620 01BF                                 u2540 015A  
                               u2460 00FA                                 u2380 009A  
                               u2701 0AD5                                 u3085 0CD1  
                               u1821 07B8                                 u1581 053D  
                               u1565 0516                                 u1661 0604  
                               u1741 0C18                                 u2621 01BE  
                               u3317 01B3                                 u2541 0159  
                               u3237 0109                                 u2461 00F9  
                               u2381 0099                                 u3157 0049  
                               u2710 0B2A                                 u1830 07DE  
                               u1670 0623                                 u2550 0169  
                               u2470 0104                                 u2390 00A4  
                               _PIE0 0716                                 u2711 0B29  
                               u3407 0FDF                                 u3327 0E9B  
                               u1831 07DD                                 u1671 0622  
                               u2551 0168                                 u3247 0120  
                               u2471 0103                                 u2391 00A3  
                               u3167 0060                                 u2800 0FD3  
                               u1840 07E3                                 u1680 0628  
                               u2720 0CCC                                 u2560 017A  
                               u2480 0115                                 u3417 0FF7  
                               u2801 0FD2                                 u3337 0EA8  
                               u1841 07E2                                 u1681 0627  
                               u1665 0601                                 u1745 0C15  
                               u2721 0CCB                                 u2561 0179  
                               u3257 0137                                 u2481 0114  
                               u3177 0077                                 u2810 0FE6  
                               u2730 0E3C                                 u2570 0180  
                               u2490 011B                                 u3427 0F64  
                               u2811 0FE5                                 u3347 0706  
                               u1835 07DA                                 u2731 0E3B  
                               u2571 017F                                 u3267 014E  
                               u2491 011A                                 u3187 008E  
                               u2740 0E4A                                 u2900 02C8  
                               u2820 01E0                                 u2580 0191  
                               u3357 071B                                 u2741 0E49  
                               u2901 02C7                                 u2821 01DE  
                               u2581 0190                                 u3277 0161  
                               u3197 00A9                                 u2750 0E73  
                               u2910 02D5                                 u2830 01E1  
                               u2590 0197                                 u3367 0740  
                               u2751 0E72                                 u2911 02D4  
                               u2591 0196                                 u3287 016E  
                               u2760 0E78                                 u2920 02E2  
                               u2840 01EE                                 u3377 0752  
                               u2761 0E77                                 u2921 02E1  
                               u2905 02C4                                 u2841 01ED  
                               u3297 0185                                 u2690 0ACF  
                               u2770 0FA6                                 u2930 02F0  
                               u2691 0ACE                                 u2771 0FA5  
                               u3387 0761                                 u2755 0E6F  
                               u2931 02EF                                 u2780 0FB5  
                               u2940 02F5                                 u2860 0211  
                               u2781 0FB4                                 u3397 0773  
                               u2941 02F4                                 u2925 02DE  
                               u2861 0210                                 u2790 0FC4  
                               u2950 02FC                                 u2870 0224  
                               u2791 0FC3                                 u2951 02FB  
                               u2935 02EC                                 u2871 0223  
                               u2960 0301                                 u2880 0240  
                               u2961 0300                                 u2881 023F  
                               _KEYS 1035                                 u2970 030C  
                               u2890 0245                                 u2971 030B  
                               u2891 0244                                 u2875 0220  
                               u2990 0344                                 u2991 0343  
                               u2985 0C2B                                 _PIR3 070F  
                               _WPUB 0F44                                 abs@a 0074  
                               _dbuf 00BA                                 _ctoa 0786  
                               _main 0658                                 _dtoa 01C3  
                               _prec 00AC                                 _nout 00A8  
                               pad@i 002C                                 pad@p 0029  
                               fsr0h 0005                                 fsr1h 0007  
                               indf0 0000                                 fsr0l 0004  
                               indf1 0001                                 fsr1l 0006  
                               pad@w 002E                                 btemp 007E  
                               _volt 00A4                 EEPROM_WriteByte@data 0071  
                               start 0012             __size_of_EEPROM_ReadByte 000A  
                  ___bmul@multiplier 0074                  EEPROM_Write_int16@i 0078  
                      ??_i2c_restart 0071                      __end_of_i2c_ack 0AFD  
                              ??_abs 0076                                ??_pad 002B  
          __size_of_enable_interrupt 0009                         _EMC1001_read 0F43  
                    __end_of___aodiv 056E                                _ADCAP 009B  
                              ?_ctoa 0020                                ?_main 0070  
                              ?_dtoa 0031                                _ADCLK 0098  
                    __end_of___aomod 0658                                _ADPCH 009E  
                              _ADREF 009A                      __end_of___lldiv 0F43  
                        i2c_read@ack 0071                                i1l486 0010  
                              _RCREG 0119                         vfpfcnvrt@fmt 004F  
                              _PORTA 000C                                _PORTB 000D  
                              _TRISA 0011                                _TRISB 0012  
                              _TRISC 0013                                _RXPPS 0ECB  
                              _TXREG 011A                                _flags 00AE  
                              _miVar 00B2                                _fputc 0DE5  
                              _fputs 0CA5                                _tecla 00B7  
                              pad@fp 0030                                _width 00AA  
                              ctoa@c 0020                                _putch 0AB6  
                              ctoa@l 0025                                ctoa@w 0027  
                              dtoa@d 0031                                dtoa@i 004D  
                       lcd_puts@dato 002A                                dtoa@n 0045  
                              dtoa@p 003F                                dtoa@s 0043  
                              dtoa@w 0041                      __end_of_uart_tx 0B3D  
                              status 0003                                wtemp0 007E  
                    __end_of_sprintf 0CA5                    _lcd_setCustomChar 0CCD  
                       __end_of_KEYS 1045                      __initialization 0014  
                 ?_lcd_setCustomChar 0023                         __end_of_ctoa 07FA  
                       __end_of_main 06FA                         __end_of_dtoa 0331  
                    ??_lcd_send_byte 0020                     __end_of_i2c_nack 0B08  
                   __end_of_i2c_init 0C0C                     __end_of_i2c_read 0BA5  
                   __end_of_i2c_stop 0AD7          __size_of_lcd_showCustomChar 0014  
        ?_INTERRUPT_InterruptManager 0070                   lcd_setCustomChar@i 0028  
                ??_lcd_setCustomChar 0026                  __end_of_i2c_restart 0AC9  
                             ??_ctoa 0022                               ??_main 00E4  
                             ??_dtoa 0039                         ?_teclado_get 0070  
                     EMC1001_read@TH 0078                       EMC1001_read@TL 0075  
                         _Send_D7_D4 0FA0                               _ADCON0 0093  
                             _ADCON1 0094                               _ADCON2 0095  
                             ?_fputc 0074                               ?_fputs 0020  
                             _ADRESH 008D                               _ADRESL 008C  
              lcd_setCustomChar@dato 0023                               _ANSELA 0F38  
                             ?_putch 0070                               _ANSELB 0F43  
                             _ANSELC 0F4E                               _RC0PPS 0F20  
                   __end_of_adc_init 0BF2                               _RC1STA 011D  
                             _RC3PPS 0F23                               _RC4PPS 0F24  
                             i1l2272 0006                               i1l2274 000B  
                             i1l2276 000C                               u133_20 000B  
                             u133_21 000A                               _INTCON 000B  
                             _INTPPS 0E90                               u150lld 0497  
                             u152lld 04C2                               u161lld 0598  
                             u163lld 05C3            __end_of_lcd_setCustomChar 0CFC  
                             u159lld 055C                               u169lld 0646  
                             _TX1STA 011E                               u285lld 020C  
                 __size_of_i2c_start 0007                   __size_of_i2c_write 000E  
                          ??_i2c_ack 0071                               _Letra1 00E8  
                             _Letra2 1000                         ?_serial_init 0025  
                       vfprintf@cfmt 0067                     __end_of_lcd_init 0786  
           ?_I2C1_Write1ByteRegister 0072                               _g_LcdX 00B4  
                             _g_LcdY 006F                               ___bmul 0B77  
                   __end_of_lcd_puts 0EE8                            ??___aodiv 0071  
                          ??___aomod 0071                            ??___lldiv 0079  
                             _buffer 0120                               _counts 007C  
                  ??_EEPROM_ReadByte 0071                               _printf 0B3D  
           __end_of_EEPROM_WriteByte 0C7E                               pad@buf 0028  
                             ctoa@fp 0029                               dtoa@fp 003C  
                             _strlen 0BA5                               fputc@c 0074  
                             fputs@c 0024                               fputs@i 0025  
                             fputs@s 0027                            ??_uart_tx 0071  
                   __end_of_vfprintf 0D2D                            ??_sprintf 00DC  
            __end_of__initialization 0032                   __size_of_Write_PCF 000C  
                ___bmul@multiplicand 0071                EEPROM_Write_int16@dir 0077  
                     __pcstackCOMMON 0070                          _i2c_restart 0AC2  
                       __pidataBANK1 0AD7                        __end_of_fputc 0E35  
                   _enable_interrupt 0ADF                        __end_of_fputs 0CCD  
                      __end_of_putch 0ABC                           __end_of_mv 105A  
                  __end_of_i2c_start 0AD0                    __end_of_i2c_write 0B2D  
                        ?_Send_D7_D4 0077                    lcd_gotoxy@address 0027  
                            ??_fputc 0077                              ??_fputs 0021  
                            ??_putch 0073                           __pbssBANK0 006F  
                         __pbssBANK1 00A0                           __pbssBANK2 0120  
                     _countsAnterior 00B9                            ?_i2c_nack 0070  
                          ?_i2c_init 0070                            ?_i2c_read 0070  
                          ?_i2c_stop 0070           __size_of_lcd_setCustomChar 002F  
                      ?_teclado_init 0070      __end_of_I2C1_Write1ByteRegister 0B63  
        __size_of_EEPROM_Write_int16 001A                           __pmaintext 0658  
                lcd_showCustomChar@x 002B                  lcd_showCustomChar@y 0028  
                     lcd_send_byte@n 007B                              ?___bmul 0071  
              lcd_showCustomChar@dir 0029                           __pintentry 0004  
                            ?_printf 0069                            ?_adc_init 0070  
                            ?_strlen 0071                    __end_of_Write_PCF 0B1F  
                            _SP1BRGH 011C                              _SP1BRGL 011B  
                 __size_of_vfpfcnvrt 013C                   __size_of_port_init 0035  
                         _lcd_gotoxy 0D9F                              _NVMADRH 081B  
                            _NVMADRL 081A                              _NVMDATH 081D  
                            _NVMDATL 081C                              _NVMCON2 081F  
               __size_of_teclado_get 018D                              _SSP1ADD 018D  
                            _SSP1BUF 018C                           _encontrado 00B6  
                          ?_lcd_init 0070                            ?_lcd_puts 0070  
                         ??_i2c_nack 0071                       ??_teclado_init 0071  
                         ??_i2c_init 0071                           ??_i2c_read 0071  
                         ??_i2c_stop 0071                              _i2c_ack 0AF2  
                __size_of_Send_D7_D4 0060                      __size_of___bmul 0015  
                            ___aodiv 046D                              ___aomod 056E  
                            ___lldiv 0EE8                            ?_vfprintf 0061  
               __size_of_serial_init 003D                           ??_adc_init 0071  
                            __ptext1 0036                              __ptext2 0C7E  
                            __ptext3 0B3D                              __ptext4 0CFC  
                            __ptext5 0331                              __ptext6 01C3  
                            __ptext7 0E35                              __ptext8 0BA5  
                            __ptext9 0CA5                      __size_of_printf 0012  
                    __size_of_strlen 0019                         __size_of_abs 001A  
                       __size_of_pad 0059                              _uart_tx 0B2D  
                            _sprintf 0C7E                              clrloop0 0ABD  
                         ??_lcd_init 0023                           ??_lcd_puts 0028  
               end_of_initialization 0032                 lcd_send_byte@address 0022  
                            fputc@fp 0076                              init_ram 07FA  
                            fputs@fp 0020                              initloop 07FB  
                    _EEPROM_ReadByte 0AE8                      ___lldiv@divisor 0071  
                    ___lldiv@counter 0024                    __end_of_vfpfcnvrt 046D  
                  __end_of_port_init 0D62           __end_of_lcd_showCustomChar 0B77  
                         ??_vfprintf 0064                __end_of_lcd_send_byte 0C41  
                            strlen@a 0074                              strlen@s 0075  
                          _PORTBbits 000D                    ?_EEPROM_WriteByte 0071  
                        uart_tx@dato 0072                   ??_EEPROM_WriteByte 0072  
   __size_of_I2C1_Write1ByteRegister 0014                            _TRISCbits 0013  
                        ?_lcd_gotoxy 0023          I2C1_Write1ByteRegister@data 0073  
        EEPROM_WriteByte@GIEBitValue 0073                      Send_D7_D4@datos 007A  
           __end_of_enable_interrupt 0AE8               EEPROM_Write_int16@data 0074  
                     __end_of_Letra2 1008                         ?_i2c_restart 0070  
                     __end_of___bmul 0B8C                          vfpfcnvrt@ap 0050  
                        vfpfcnvrt@fp 0060                          vfpfcnvrt@ll 0056  
                        vfpfcnvrt@vp 005F                 __end_of_teclado_init 0B13  
                     __end_of_printf 0B4F                       __end_of_strlen 0BBE  
                       ??_Send_D7_D4 0078                  start_initialization 0014  
                        __end_of_abs 0C26                            _i2c_start 0AC9  
                        __end_of_pad 0E8E                            _i2c_write 0B1F  
            __end_of_EEPROM_ReadByte 0AF2                 lcd_setCustomChar@dir 0025  
                  __size_of_i2c_nack 000B                    __size_of_i2c_init 001A  
                  __size_of_i2c_read 0019                    __size_of_i2c_stop 0007  
     I2C1_Write1ByteRegister@address 0074                        Write_PCF@dato 0076  
                        vfprintf@fmt 0061                             ??___bmul 0072  
                 __end_of_Send_D7_D4 1000                  __size_of_lcd_gotoxy 0046  
                      ?_EMC1001_read 0075                          __pdataBANK1 00E8  
                           ??_printf 006D                             ??_strlen 0073  
                  __size_of_adc_init 001A                          __pbssCOMMON 007C  
                          ___latbits 0002                        __pcstackBANK0 0020  
                      __pcstackBANK1 00DC                     ___aodiv@dividend 0028  
                         ?_i2c_start 0070                            _Write_PCF 0B13  
                         ?_i2c_write 0070                    __size_of_lcd_init 008C  
                  __size_of_lcd_puts 005A           __end_of_EEPROM_Write_int16 0BD8  
                           ?_i2c_ack 0070                            _dtoa$1137 003D  
                           ?___aodiv 0020                       ??_EMC1001_read 0076  
                           ?___aomod 0020                     ___aodiv@quotient 0074  
                           ?___lldiv 0071                            _high_byte 00DB  
       ??_INTERRUPT_InterruptManager 0070                    __size_of_vfprintf 0031  
                           _BAUD1CON 011F                        ??_teclado_get 0071  
            _I2C1_Write1ByteRegister 0B4F                           ?_Write_PCF 0070  
                           ?_uart_tx 0070                             ?_sprintf 0069  
                     __size_of_fputc 0050                       __size_of_fputs 0028  
                   ?_EEPROM_ReadByte 0070                       __size_of_putch 0006  
                           _LATAbits 0016                            clear_ram0 0ABC  
__size_of_INTERRUPT_InterruptManager 000E                             _PIR0bits 070C  
                      ??_serial_init 0029                             _PIR3bits 070F  
              __size_of_teclado_init 000B                             _SSP1CON1 0190  
                           _SSP1CON3 0192                             _SSP1STAT 018F  
               __size_of_i2c_restart 0007                            _vfpfcnvrt 0331  
                          _port_init 0D2D           I2C1_Write1ByteRegister@reg 0072  
                      serial_init@sx 007A                            lcd_init@i 0025  
                          main@eprom 00E6                   _lcd_showCustomChar 0B63  
                       ??_lcd_gotoxy 0024                          ??_i2c_start 0071  
                        ??_i2c_write 0071                           vfpfcnvrt@c 005E  
                __end_of_teclado_get 01C3                  ?_lcd_showCustomChar 0028  
                  ?_enable_interrupt 0070                             _i2c_nack 0AFD  
                           _i2c_init 0BF2                             _i2c_read 0B8C  
                           _i2c_stop 0AD0            __size_of_EEPROM_WriteByte 0020  
                       _teclado_init 0B08                   ??_enable_interrupt 0071  
                   __size_of_i2c_ack 000B                           vfprintf@ap 0063  
                         vfprintf@fp 0066                    i2c_write@I2C_data 0071  
                 __end_of_lcd_gotoxy 0DE5                     __size_of___aodiv 0101  
               ??_lcd_showCustomChar 002A                     __size_of___aomod 00EA  
                   __size_of___lldiv 005B                           ?_vfpfcnvrt 004F  
                         ?_port_init 0070            ??_I2C1_Write1ByteRegister 0074  
                __end_of_serial_init 0D9F                      ___aodiv@divisor 0020  
                           _adc_init 0BD8                      ___aodiv@counter 0072  
                         _ANSELCbits 0F4E                           sprintf@fmt 0069  
                        ??_Write_PCF 0075                             __ptext10 0C0C  
                           __ptext11 056E                             __ptext20 0EE8  
                           __ptext12 046D                             __ptext21 0BF2  
                           __ptext13 0786                             __ptext30 0B13  
                           __ptext22 0BD8                             __ptext14 0DE5  
                           __ptext31 0B4F                             __ptext23 0B63  
                           __ptext15 0AB6                             __ptext40 0AF2  
                           __ptext32 0ADF                             __ptext24 0CCD  
                           __ptext16 0B2D                             __ptext41 0B77  
                           __ptext33 0F43                             __ptext25 0E8E  
                           __ptext17 0D2D                             __ptext42 0BBE  
                           __ptext34 0B1F                             __ptext26 0D9F  
                           __ptext18 0B08                             __ptext43 0C5E  
                           __ptext35 0AD0                             __ptext27 06FA  
                           __ptext19 0D62                             __ptext44 0C41  
                           __ptext36 0AC9                             __ptext28 0C26  
                           __ptext45 0AE8                             __ptext37 0AC2  
                           __ptext29 0FA0                             __ptext38 0B8C  
                           __ptext39 0AFD                         _SSP1CON2bits 0191  
                   __size_of_uart_tx 0010                    _EEPROM_Read_int16 0C41  
                           _lcd_init 06FA                 __end_of_EMC1001_read 0FA0  
                           _lcd_puts 0E8E                             _contador 00B5  
                   __size_of_sprintf 0027                   ?_EEPROM_Read_int16 0072  
             __size_of_lcd_send_byte 001B                        __size_of_ctoa 0074  
                      __size_of_main 00A2                        __size_of_dtoa 016E  
                           _low_byte 00DA                  ??_EEPROM_Read_int16 0074  
                           int$flags 007E                             _vfprintf 0CFC  
 __end_of_INTERRUPT_InterruptManager 0012           _INTERRUPT_InterruptManager 0004  
                          printf@fmt 0069                     ___aomod@dividend 0028  
                          putch@dato 0073                          _teclado_get 0036  
                         _INTCONbits 000B                          _NVMCON1bits 081E  
          __end_of_EEPROM_Read_int16 0C5E                             intlevel1 0000  
                          sprintf@ap 00DE                     ___lldiv@dividend 0075  
                        _serial_init 0D62                             printf@ap 006E  
                    ___aomod@divisor 0020                   _EEPROM_Write_int16 0BBE  
                        ??_vfpfcnvrt 0051                      ___aomod@counter 0072  
                        ??_port_init 007C                        _lcd_send_byte 0C26  
                      __pstringtext1 1035                        __pstringtext2 1056  
                      __pstringtext3 1000                        __pstringtext4 101F  
                      __pstringtext5 1045                        __pstringtext6 104E  
                      __pstringtext7 0000                          _temperatura 00A0  
                           sprintf@f 00DF                             sprintf@s 00DD  
                         _SSP1DATPPS 0EC6                           _SSP1CLKPPS 0EC5  
                   ___lldiv@quotient 0020                  ?_EEPROM_Write_int16 0074  
                 EEPROM_ReadByte@dir 0071                         ___aodiv@sign 0073  
                   _EEPROM_WriteByte 0C5E                 ??_EEPROM_Write_int16 0076  
                       ___aomod@sign 0073  
